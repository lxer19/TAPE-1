URL: http://infospheres.cs.caltech.edu/resources/java/Jar.ps
Refering-URL: http://infospheres.cs.caltech.edu/resources/java/
Root-URL: http://www.cs.caltech.edu
Email: dac@eng.sun.com  
Title: What's Java(tm)? JavaSoft News Products and Services Developer's Corner Last modified 09/30/96  
Author: David Connelly, 
Date: 1.0  
Note: JAR File Format Specification version  
Abstract: This specification defines a general purpose, compact archive format for packaging the components of a Java application. The JAR format supports Unicode names for entries, as well as a CRC for detecting data corruption. The format is also designed to be stream based, so that a JAR file can be created on any Java output stream, and likewise read from any Java input stream. Additionally, an optional directory can be included for random access to JAR file entries. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Deutsch, </author> <title> L.P., "ZLIB Compressed Data Format Specification", </title> <note> available in http://quest.jpl.nasa.gov/zlib/rfc-zlib.html </note>
Reference-contexts: Overview A JAR file begins with a main header, followed by zero or more JAR entries, and optional directory, and an end header. A JAR entry consists of an entry header immediately followed by the entry data stored in the ZLIB compressed data format (see references <ref> [1] </ref> and [2] for more information on the ZLIB format). Each header also contains a flag byte that specifies the type of header as well as any optional fields present in the header.
Reference: [2] <author> Deutsch, </author> <title> L.P., "DEFLATE Compressed Data Format Specification", available in http://quest.jpl.nasa.gov/zlib/rfc-deflate.html 4. Comments Send feedback and comments on JAR to David Connelly at JavaSoft, dac@eng.sun.com. Copyright 1996 Sun Microsystems, Inc., 2550 Garcia Ave., Mtn. View, CA 94043-1100 USA. All rights reserved. Contact the Java developer community via the newsgroup comp.lang.java or JavaSoft technical support via email to java@java.sun.com. Send questions or comments about this web site to webmaster@java.sun.com. </title>
Reference-contexts: Overview A JAR file begins with a main header, followed by zero or more JAR entries, and optional directory, and an end header. A JAR entry consists of an entry header immediately followed by the entry data stored in the ZLIB compressed data format (see references [1] and <ref> [2] </ref> for more information on the ZLIB format). Each header also contains a flag byte that specifies the type of header as well as any optional fields present in the header.
References-found: 2

