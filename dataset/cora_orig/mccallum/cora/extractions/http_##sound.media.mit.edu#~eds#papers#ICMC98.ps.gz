URL: http://sound.media.mit.edu/~eds/papers/ICMC98.ps.gz
Refering-URL: http://sound.media.mit.edu/papers.html
Root-URL: http://www.media.mit.edu
Email: eds@media.mit.edu  
Phone: Telephone: 617 253 0112 FAX: 617 258 6264  
Title: SAOL: THE MPEG-4 STRUCTURED AUDIO ORCHESTRA LANGUAGE  Machine Listening Group  
Author: Eric D. Scheirer 
Web: WWW page: http://sound.media.mit.edu/mpeg4  
Note: electronic mail:  
Address: Cambridge MA 02139-4307  
Affiliation: Laboratory,  
Pubnum: E15-401D MIT Media  
Abstract: The MPEG-4 standard, which will be published in October 1998, contains extensive provisions for sound synthesis as well as traditional methods of audio compression. At the heart of MPEG-4 Structured Audio, the soundsynthesis framework, is a new musicsynthesis language called SAOL. This language, based on the Music-N model, is specified and defined fully in the MPEG-4 International Standard; a real-time implementation must be embedded in any device conforming to the full MPEG-4 Audio standard. In this paper, the structure and capabilities of SAOL are discussed, especially in comparison with other music languages. A discussion of the role of international standardization in the future development of computer-music tools is also presented.
Abstract-found: 1
Intro-found: 1
Reference: <author> Boulanger, R., ed. </author> <year> 1998. </year> <title> The Csound Book. </title> <address> Cambridge, Massachusetts: </address> <publisher> MIT Press. </publisher>
Reference: <author> Casey, M.A., and P. Smaragdis. </author> <year> 1996. </year> <title> Netsound. </title> <booktitle> Proceedings of the International Computer Music Conference, Hong Kong: International Computer Music Association. </booktitle>
Reference-contexts: A project at the MIT Media Laboratory called NetSound constructed a working system based on this concept, using Csound as the synthesis engine <ref> (Casey and Smaragdis 1996) </ref>, and allowing low bitrate transmission on the Internet. If it were possible to create a broad base of mutually-compatible installed systems and musical compositions designed to be transmitted in this manner, such a system would have broad utility for music distribution.
Reference: <author> Dannenberg, R. B. </author> <year> 1997a. </year> <title> Machine Tongues XIX: Nyquist, a Language for Composition and Sound Synthesis. </title> <journal> Computer Music Journal 21(3) </journal> <pages> 50-60. </pages>
Reference-contexts: In this respect, it is more like Csound (Vercoe 1995; Boulanger 1998) than it is like SuperCollider (McCartney 1996a,b; Pope 1998) or Nyquist <ref> (Dannenberg 1997a) </ref>, both of which have heavy elements of functional programming in their design; SuperCollider additionally employs an objectoriented model. SAOL extends the syntax of Csound to make it more understandable and concise, and adds a number of new features to the Music-N model which will be discussed below.
Reference: <author> Grill, B., and B. Edler, I. Kaneko, Y. Lee, M. Nishiguchi, E. D. Scheirer, and M. Vaanaanen, eds. </author> <year> 1998. </year> <note> MPEG-4 Audio Final Committee Draft. ISO/IEC JTC1/SC29/WG11 (MPEG) document N2203. Tokyo: International Standardisation Organisation. Available at http://www.cselt.it/mpeg. </note>
Reference-contexts: A template mechanism is provided for the concise description of multiple instruments which differ only in a simple way. Interested readers are referred to <ref> (Grill et al, 1998) </ref>, which contains the definition of the language, for more details on these and other features. 3 Standardization in Computer Music This section discusses the role that the international standardization process has played in the development of SAOL, and the advantage this process can serve for the computer
Reference: <author> McCartney, J. </author> <year> 1996a. </year> <title> SuperCollider: A Real-Time Sound Synthesis Programming Language. Program reference manual. </title> <address> Austin, Texas. </address>
Reference-contexts: With sufficient effort and programming skill, advanced development environments and high performance signal-processing capabilities can be merged in a single tool. McCartneys language and software-system SuperCollider <ref> (McCartney 1996a, b) </ref> is an excellent example of this: it provides highly efficient execution, a sophisticated front-end, and a music language with more advanced capabilities than SAOL, but only in a proprietary framework on a single platform.
Reference: <author> McCartney, J. </author> <year> 1996b. </year> <title> SuperCollider: A New Real-Time Sound Synthesis Language. </title> <booktitle> Proceedings of the International Computer Music Conference. Hong Kong: International Computer Music Association. </booktitle>
Reference: <author> Pope, S.T. </author> <title> Forthcoming. Sound and Music Processing in SuperCollider. </title> <note> Available at http://www.peabody.jhu.edu/~ich/sc/pope. </note>
Reference: <author> Roads, C. </author> <year> 1996. </year> <title> The Computer Music Tutorial. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Scheirer, E.D. </author> <year> 1998. </year> <title> The MPEG-4 Structured Audio Standard. </title> <booktitle> Proceedings of IEEE International Conference on Acoustics, Speech, and Signal Processing. </booktitle> <address> Seattle: </address> <publisher> Institute for Electrical and Electronics Engineers. </publisher>
Reference-contexts: Languages such as Csound, Nyquist, CLM, and SuperCollider are in wide usage in academic and production studios today. As well as being an effective tool for marshalling a composers creative resources, these languages represent an unusual form of digital-audio compression <ref> (Vercoe, Gardner, and Scheirer 1998) </ref>. A composition in such a language is much more succinct than the sequence of digital audio samples which it creates, and therefore this method can allow for more dramatic compression than traditional audio coding.
Reference: <editor> Scheirer, E.D. In press. </editor> <title> Structured Audio and Effects Processing in the MPEG-4 Multimedia Standard. </title> <journal> ACM Multimedia Systems Journal, </journal> <note> in press. </note>
Reference: <author> Smith, J. O. </author> <year> 1991. </year> <title> Viewpoints on the History of Digital Synthesis. </title> <booktitle> Proceedings of the 1991 International Computer Music Conference. Montreal: International Computer Music Association. </booktitle>
Reference-contexts: The idea of transmitting sound by sending a description in a high-level music language and then performing real-time synthesis at the receiving end, which Vercoe et al (1998) term Structured Audio, was suggested as early as 1991 <ref> (Smith 1991) </ref>. A project at the MIT Media Laboratory called NetSound constructed a working system based on this concept, using Csound as the synthesis engine (Casey and Smaragdis 1996), and allowing low bitrate transmission on the Internet.
Reference: <author> Vercoe, B.L. </author> <year> 1995. </year> <title> Csound: A Manual for the Audio Processing System. </title> <address> Cambridge, Massachusetts: </address> <publisher> MIT Media Laboratory. </publisher>
Reference: <editor> Vercoe, B.L., W.G. Gardner, and E.D. Scheirer. </editor> <year> 1998. </year> <title> Structured Audio: The Creation, Transmission, and Rendering of Parametric Sound Descriptions. </title> <booktitle> Proceedings of the IEEE 86(5) </booktitle> <pages> 922-940. </pages>
Reference-contexts: Languages such as Csound, Nyquist, CLM, and SuperCollider are in wide usage in academic and production studios today. As well as being an effective tool for marshalling a composers creative resources, these languages represent an unusual form of digital-audio compression <ref> (Vercoe, Gardner, and Scheirer 1998) </ref>. A composition in such a language is much more succinct than the sequence of digital audio samples which it creates, and therefore this method can allow for more dramatic compression than traditional audio coding.
References-found: 13

