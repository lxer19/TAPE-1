URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/94-20.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: On Information From #P Functions  
Author: Lide Li Mitsunori Ogihara Kenneth W. Regan 
Keyword: Topics. Computational complexity, complexity classes.  
Note: AMS classifications. 68Q15, 68Q10.  
Date: May 1994  
Affiliation: University of Chicago  University of Rochester  State University of NY at Buffalo  
Abstract: This paper studies complexity classes defined by restrictions on access to information about the values of functions in Valiant's class # P. These classes are at the frontier of what is currently known about complexity classes even under relativizations. We show relations among classes defined by access to finitely many or O(log n) bits of a # P function value. This work continues recent research on bounded query classes and truth-table reductions. 
Abstract-found: 1
Intro-found: 1
Reference: [BRS91] <author> R. Beigel, N. Reingold, and D. Spielman. </author> <title> The perceptron strikes back. </title> <booktitle> In Proc. 6th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 286-291, </pages> <year> 1991. </year>
Reference-contexts: Some results, the first and last easy, which also illustrate the notation are: (a) P PP = P (b) P PP [O (log n)] = PP <ref> [BRS91] </ref>. tt = PP [FR91]. tt = P It is well known that the class P # P [1] is unchanged if one fixes the oracle f to be the # P-complete function f SAT described in section 1, or if one fixes y x = x (but then the oracle <p> In all previous cases in the literature where a complexity class C has been shown to be closed under intersection or other Boolean operations, even the very difficult theorem for PP from <ref> [BRS91] </ref> cited above, the theorem provides a construction that only expands the lengths of the representations linearly.
Reference: [Bus87] <author> S. Buss. </author> <title> The boolean formula value problem is in ALOGTIME. </title> <booktitle> In Proc. 19th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 123-131, </pages> <year> 1987. </year>
Reference-contexts: Proof. Let be the formula over queries to MP constructed by the machine that carries out the NC 1 reduction for the given language L 2 P MP [O (log n)] . By known techniques (see <ref> [HS65, Bus87, MP92] </ref>), can be "rebalanced" into an equivalent formula 0 of O (log n) depth. Since 0 has O (log n) depth, the increase in size of the representation is bounded by a polynomial times c O (log n) n, which is polynomially bounded.
Reference: [FR91] <author> L. Fortnow and N. Reingold. </author> <title> PP is closed under truth-table reductions. </title> <booktitle> In Proc. 6th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 13-15, </pages> <year> 1991. </year>
Reference-contexts: Some results, the first and last easy, which also illustrate the notation are: (a) P PP = P (b) P PP [O (log n)] = PP [BRS91]. tt = PP <ref> [FR91] </ref>. tt = P It is well known that the class P # P [1] is unchanged if one fixes the oracle f to be the # P-complete function f SAT described in section 1, or if one fixes y x = x (but then the oracle function f depends on
Reference: [Gil77] <author> J. Gill. </author> <title> Computational complexity of probabilistic Turing machines. </title> <journal> SIAM J. Comput., </journal> <volume> 6 </volume> <pages> 675-695, </pages> <year> 1977. </year>
Reference-contexts: By definition every function in CBF is polynomially bounded, but we show that the converse to Proposition 3.1 is highly unlikely to hold. Theorem 3.2 CBF # P if and only if PP = UP Proof. First suppose CBF # P, and let L 2 PP. Then by <ref> [Gil77] </ref> there exists a # P function with bounding polynomial p such that for all x, x 2 L () f (x) 2 p (jxj)1 . (This is the special case of the previous definition with g (x) = 2 p (jxj)1 , which is half the maximum possible value of
Reference: [GKR + 92] <author> F. Green, J. Kobler, K. Regan, T. Schwentick, and J. Toran. </author> <title> The power of the middle bit of a #P function. </title> <type> Technical Report UBCS-TR 92-27, </type> <institution> Computer Science Dept., University at Buffalo, </institution> <year> 1992. </year> <note> Accepted to J. Comp. Sys. Sci. </note>
Reference-contexts: Several researchers <ref> [RS92, GKR + 92] </ref> noted that Toda's second theorem only requires knowing one bit (indeed, the middle bit) of the queried value f (x), and studied the class MP of languages defined for one bit. <p> One other fact known is that if MP = PP [ P], then both classes equal P # P [1] as well <ref> [GKR + 92] </ref>. This further draws attention to the region between PP [ P] and P # P [1] , the subject of this paper. <p> With MP, the difficulty is that MP is not known to be closed under union or intersection at all; this problem is described in detail at the end of <ref> [GKR + 92] </ref>.
Reference: [Got93] <author> G. Gottlob. </author> <title> NP trees and Carnap's modal logic. </title> <booktitle> In Proc. 34th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 42-51, </pages> <year> 1993. </year>
Reference-contexts: One curiosity is that CBP is the first class we know with Boolean closure properties whose only known constructions increase the lengths of representations more than linearly. We show the significance of this for circuit reductions studied recently by Gottlob <ref> [Got93] </ref> and Ogihara [Ogi94] for classes between NP and P NP , and it is interesting that the answers for classes between MP and P MP currently seem to be quite different. 2 Preliminaries A binary relation R on strings is a P-predicate if R (x; y) is polynomial-time decidable and <p> A third problem is whether NC 1 (MP) = AC 0 (MP). This holds for NP in place of MP <ref> [Got93, Ogi94] </ref>, but seems to require a property even stronger than MP being closed under union. 5 Conclusion This paper has mapped out the structure of classes between MP and P # P [1] .
Reference: [HS65] <author> J. Hartmanis and R. Stearns. </author> <title> On the computational complexity of algorithms. </title> <journal> Transactions of the AMS, </journal> <volume> 117 </volume> <pages> 285-306, </pages> <year> 1965. </year>
Reference-contexts: Proof. Let be the formula over queries to MP constructed by the machine that carries out the NC 1 reduction for the given language L 2 P MP [O (log n)] . By known techniques (see <ref> [HS65, Bus87, MP92] </ref>), can be "rebalanced" into an equivalent formula 0 of O (log n) depth. Since 0 has O (log n) depth, the increase in size of the representation is bounded by a polynomial times c O (log n) n, which is polynomially bounded.
Reference: [MP92] <author> D. Muller and F. Preparata. </author> <title> Parallel restructuring and evaluation of expressions. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 44 </volume> <pages> 43-62, </pages> <year> 1992. </year>
Reference-contexts: Proof. Let be the formula over queries to MP constructed by the machine that carries out the NC 1 reduction for the given language L 2 P MP [O (log n)] . By known techniques (see <ref> [HS65, Bus87, MP92] </ref>), can be "rebalanced" into an equivalent formula 0 of O (log n) depth. Since 0 has O (log n) depth, the increase in size of the representation is bounded by a polynomial times c O (log n) n, which is polynomially bounded.
Reference: [Ogi94] <author> M. Ogihara. </author> <title> NC k (NP) = AC k1 (NP). </title> <booktitle> In Proc. 11th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 313-324, </pages> <year> 1994. </year>
Reference-contexts: One curiosity is that CBP is the first class we know with Boolean closure properties whose only known constructions increase the lengths of representations more than linearly. We show the significance of this for circuit reductions studied recently by Gottlob [Got93] and Ogihara <ref> [Ogi94] </ref> for classes between NP and P NP , and it is interesting that the answers for classes between MP and P MP currently seem to be quite different. 2 Preliminaries A binary relation R on strings is a P-predicate if R (x; y) is polynomial-time decidable and there exists a <p> An important special case with a language oracle A 2 C is when the table can be encoded as a Boolean formula x of size polynomial in jxj over the yes/no query answers ~a, such that x 2 L () x (~a ) is true. Then following <ref> [Wil87; Ogi94] </ref> we write L 2 NC 1 (C). (The standard uniformity condition on the reduction is that M (x) be able to write down x before making any queries.) When x is a conjunct (respectively, disjunct) of polynomially many `yes' answers, we have the notion of a `ctt' (resp. `dtt') <p> A third problem is whether NC 1 (MP) = AC 0 (MP). This holds for NP in place of MP <ref> [Got93, Ogi94] </ref>, but seems to require a property even stronger than MP being closed under union. 5 Conclusion This paper has mapped out the structure of classes between MP and P # P [1] .
Reference: [OH91] <author> M. Ogiwara and L. Hemachandra. </author> <title> A complexity theory for feasible closure properties. </title> <booktitle> In Proc. 6th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 16-29, </pages> <year> 1991. </year>
Reference-contexts: Then x 2 L iff N (x) has a unique accepting computation, and otherwise N (x) has no accepting computations, so L 2 UP. Conversely, suppose PP = UP. By Theorem 3.2 (4) of <ref> [OH91] </ref>, it follows that P # P = UP. Let f 2 # P, and define A = f (x; m) : wt (f (x)) = m g. Clearly A 2 P # P , thus A 2 UP.
Reference: [Ram92] <author> J. Ramachandran. </author> <title> Set-bit enumeration is hard. </title> <booktitle> In Proc. 7th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 58-70, </pages> <year> 1992. </year>
Reference-contexts: It is known that computing wt (f (x)) in polynomial time, or even narrowing it down to one of O (jf (x)j 1=2 )-many values, is as hard as # P itself when multiple calls are allowed <ref> [Ram92, RS93] </ref>. This paper is the first to study the class CBP of languages decidable with one such call. The main results giving relationships among (a), (b), and the foregoing classes are in Sections 3 and 4.
Reference: [RS92] <author> K. Regan and T. Schwentick. </author> <title> On the power of one bit of a #p function. </title> <booktitle> In Proc. 4th Annual Italian Conference on Theoretical Computer Science, </booktitle> <pages> pages 317-329. </pages> <publisher> World Scientific, </publisher> <address> Singapore, </address> <year> 1992. </year>
Reference-contexts: Several researchers <ref> [RS92, GKR + 92] </ref> noted that Toda's second theorem only requires knowing one bit (indeed, the middle bit) of the queried value f (x), and studied the class MP of languages defined for one bit.
Reference: [RS93] <author> J. Ramachandran and T. Schwentick. </author> <title> A note on set-bit enumeration, 1993. </title> <type> Technical Report, </type> <institution> University of Mainz, </institution> <month> 11/26/93. </month>
Reference-contexts: It is known that computing wt (f (x)) in polynomial time, or even narrowing it down to one of O (jf (x)j 1=2 )-many values, is as hard as # P itself when multiple calls are allowed <ref> [Ram92, RS93] </ref>. This paper is the first to study the class CBP of languages decidable with one such call. The main results giving relationships among (a), (b), and the foregoing classes are in Sections 3 and 4.
Reference: [Sim75] <author> J. Simon. </author> <title> On some central problems in computational complexity. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <year> 1975. </year>
Reference-contexts: Since f SAT is complete for # P under reductions that preserve values (see <ref> [Sim75, Val79] </ref>), one can fix f to be f SAT in this definition. Alternatively, one can let f depend on M and arrange that the query z equals the input x itself. First we show some relationships between CBF and # P itself.
Reference: [Tod91] <author> S. </author> <title> Toda. PP is as hard as the polynomial-time hierarchy. </title> <journal> SIAM J. Comput., </journal> <volume> 20 </volume> <pages> 865-877, </pages> <year> 1991. </year>
Reference-contexts: Valiant [Val79] proved that both f SAT and the permanent function are complete for # P. In particular, every language in NP can be solved in polynomial time with one query to f SAT ; hence in symbols, NP P # P [1] . Toda <ref> [Tod91] </ref> answered long-standing questions of which other languages belong to P # P [1] by proving first, that the polynomial hierarchy randomly reduces with bounded error to parity polynomial time (in symbols, PH BP [ P]), and second, that even the class PP [ P] defined with unbounded error is contained
Reference: [Val79] <author> L. Valiant. </author> <title> The complexity of computing the permanent. </title> <journal> Theor. Comp. Sci., </journal> <volume> 8 </volume> <pages> 189-201, </pages> <year> 1979. </year>
Reference-contexts: The class # P consists of the counting functions associated to languages in NP, typified by f SAT (x) = the number of satisfying assignments of the Boolean formula encoded by the string x. Valiant <ref> [Val79] </ref> proved that both f SAT and the permanent function are complete for # P. In particular, every language in NP can be solved in polynomial time with one query to f SAT ; hence in symbols, NP P # P [1] . <p> Here jxj denotes the length of a string x, while kAk stands for the cardinality of a set A. Then a function f : fl ! N belongs to # P <ref> [Val79] </ref> if there is a P-predicate R such that for all x 2 fl , f (x) equals kf x : R (x; y) gk. <p> Since f SAT is complete for # P under reductions that preserve values (see <ref> [Sim75, Val79] </ref>), one can fix f to be f SAT in this definition. Alternatively, one can let f depend on M and arrange that the query z equals the input x itself. First we show some relationships between CBF and # P itself.
Reference: [Wil87] <author> C. Wilson. </author> <title> Relativized NC. </title> <journal> Math. Sys. Thy., </journal> <volume> 20 </volume> <pages> 13-29, </pages> <year> 1987. </year> <month> 10 </month>
Reference-contexts: An important special case with a language oracle A 2 C is when the table can be encoded as a Boolean formula x of size polynomial in jxj over the yes/no query answers ~a, such that x 2 L () x (~a ) is true. Then following <ref> [Wil87; Ogi94] </ref> we write L 2 NC 1 (C). (The standard uniformity condition on the reduction is that M (x) be able to write down x before making any queries.) When x is a conjunct (respectively, disjunct) of polynomially many `yes' answers, we have the notion of a `ctt' (resp. `dtt')
References-found: 17

