URL: file://ftp.cs.princeton.edu/pub/people/arora/abss.ps
Refering-URL: http://www.cs.princeton.edu/~arora/publist.html
Root-URL: http://www.cs.princeton.edu
Title: The Hardness of Approximate Optima in Lattices, Codes, and Systems of Linear Equations  
Author: Sanjeev Arora Laszlo Babai Jacques Stern 
Address: Hungary  Berkeley  
Affiliation: Computer Science Princeton University  University of Chicago and Eotvos University,  Laboratoire d'Informatique Ecole Normale Superieure Z Sweedyk CS Division U. C.  
Abstract: We prove the following about the Nearest Lattice Vector Problem (in any ` p norm), the Nearest Codeword Problem for binary codes, the problem of learning a halfspace in the presence of errors, and some other problems. 
Abstract-found: 1
Intro-found: 1
Reference: [AF+] <author> N. Alon, U. Feige, A. Wigderson, D. Zuckerman. </author> <title> Derandomized Graph Products Manuscript, </title> <year> 1993. </year>
Reference-contexts: Fixing k to be a large enough constant, we get the result that any constant factor approximation is NP-hard. When we fix k to be nonconstant, the size of the new system becomes superpolynomial, and the reduction no longer runs in polynomial time. So use an idea due to <ref> [AF+] </ref>. <p> Since M = poly (N ), the reduction still runs is polynomial time. Further, as shown in <ref> [AF+] </ref>, for every set A f1; : : : ; N g, there is a constant ff &gt; 0 (which can be made arbitrarily small by taking a good enough expander) such that the fraction of walks lying entirely in A is between (jAj =n ff) k and (jAj =n +
Reference: [AK93] <author> E. Amaldi and V. Kann. </author> <title> The complexity and approximability of finding maximum feasible subsystems of linear relations. </title> <journal> Theoretical Comp. Sc. </journal> <volume> 147 </volume> <pages> 187-210, </pages> <year> 1995. </year> <note> An earlier version is in Proc. of STACS, </note> <year> 1994. </year>
Reference-contexts: Also, in our reductions the number of variables, dimensions, input size etc. are polynomially related, so n could be any of these. Previous or independent work. Bruck and Naor ([BN]) have shown the hardness of approximating the NEAREST-CODEWORD problem to within some 1 + * factor. Amaldi and Kann <ref> [AK93] </ref> have independently obtained the same result as ours for MAX-SATISFY.
Reference: [AK95] <author> E. Amaldi and V. Kann. </author> <title> On the approximability of some NP-hard minimization problems for linear systems. </title> <type> Technical Report 95-7, </type> <institution> Cornell Computational Optimization Project, Cornell University, </institution> <address> Ithaca, NY. </address>
Reference-contexts: Amaldi and Kann [AK93] have independently obtained the same result as ours for MAX-SATISFY. They have also extended our results on MIN-UNSATISFY and the learning problem to a class of related problems <ref> [AK95] </ref>. 2 Organization of the Paper Although the various problems mentioned in the introduction may appear to be very different, the reductions used to show their nonapproximability are very similar (MAX-SATISFY requires a different reduction, however). Section 3 shows the NP-hardness of approximating these problems within any constant factor. <p> Since k = O (log n) = O (log M ), we see that the the gap is M b for some small b &gt; 0. 8 Conclusions The Label Cover problem introduced by us has subsequently been used in other papers such as <ref> [AK95] </ref>. It also appears as a "canonical" inapproximable problem in the survey [AL96]. This paper leaves some interesting problems open. As mentioned earlier, hardness for NV p or SV 2 within a factor of p dimension would prove the hardness of SV 2 , which is a major open problem.
Reference: [A96] <author> S. Arora. </author> <title> Inapproximability result for Nearest Vector Problem in ` 1 norm. Unpublished note, </title> <year> 1996. </year>
Reference-contexts: The result for this norm uses some other ideas (related to the construction in Section 6). The result appears in <ref> [A96] </ref>. 6 Nearest-Codeword. View the vectors b 0 0 m obtained from the reduction to "NV 1 with 0=1 vectors" as vectors over GF (2), in other words, as the generators of a binary code. Let the received message be the vector b 0 0 described there.
Reference: [AL96] <author> S. Arora and C. Lund. </author> <title> Hardness of Approximations. Survey chapter in Approximation Algorithms for NP-hard Problems, </title> <editor> editor D. Hochbaum. </editor> <publisher> PWS Publishing, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference-contexts: It also appears as a "canonical" inapproximable problem in the survey <ref> [AL96] </ref>. This paper leaves some interesting problems open. As mentioned earlier, hardness for NV p or SV 2 within a factor of p dimension would prove the hardness of SV 2 , which is a major open problem.
Reference: [AL+] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, M. Szegedy. </author> <title> Proof verification and intractability of approximaion problems. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 13-22, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], [AS], <ref> [AL+] </ref>, [LY], [Z], [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], [FG+], [AS], <ref> [AL+] </ref>, [LY], [Z], [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs. <p> cover and independent set are another "complementary" pair of problems, and seem to differ greatly in how well they can be approximated in polynomial time. (Vertex cover can be approximated within a factor 2, and independent set is NP-hard up to a factor n c for some c &gt; 0 <ref> [FG+, AS, AL+] </ref>.) Theorem 2 Approximating MIN-UNSATISFY and NEAREST-CODEWORD within any constant factor is NP-hard and within any LARGE factor is almost-NP-hard. Theorem 3 Approximating MAX-SATISFY within a factor of n ffi is NP-hard for some ffi &gt; 0. <p> We note that the reduction depends crucially upon the exactness of the cover when ' is satisfiable. Such peculiarities seem inherent in recent non-approximability results. For instance, the hardness result for Chromatic Number in [LY] depends upon very specific properties of the graph obtained in the clique reductions of <ref> [FG+, AS, AL+] </ref>. 4 Larger factors: The First Reduction This section contains a proof of the following result. <p> These proof systems are called PP1, PP2 and PP3 respectively; out of these PP3 will be used to construct label cover instances. PP1: This is a 2-Prover 1-Round proof system, and its error probability is some fixed constant less than 1. In <ref> [AL+] </ref> it is shown that there is some constant 0 &lt; b &lt; 1, such that for any 3CNF formula, ', there is a "robust" 3CNF formula, ' 0 , constructible in polynomial time, such that: * ' is satisfiable if and only if ' 0 is satisfiable. * If ' <p> Proof: (of Theorem 3) We first show that approximating the problem within a factor (1 + *) is NP-hard, and then prove the stronger result. We use the following result, a joint consequence of a theorem of Arora et. al. <ref> [AL+] </ref> and a reduction due to [PY]. A vertex cover in a graph G = (V; E) is a set V 0 V such that for every edge fu; vg, either u 2 V 0 or v 2 V 0 . <p> A related open problem is to improve our results by proving the problems NP-hard rather than almost-NP-hard. More efficient 2-prover, 1-round interactive 26 proofs for NP (as conjectured in [BG+]), or a direct reduction from <ref> [AL+] </ref> might help. Acknowledgements Thanks to Madhu Sudan for suggesting that techniques from interactive proofs might be helpful in proving the hardness of lattice vector problems, and to Ravi Kannan for his prompt responses to questions on lattices.
Reference: [AS] <author> S. Arora, S. Safra. </author> <title> Probabilistic Checking of Proofs: A New Characterization of NP. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], <ref> [AS] </ref>, [AL+], [LY], [Z], [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], [FG+], <ref> [AS] </ref>, [AL+], [LY], [Z], [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs. <p> cover and independent set are another "complementary" pair of problems, and seem to differ greatly in how well they can be approximated in polynomial time. (Vertex cover can be approximated within a factor 2, and independent set is NP-hard up to a factor n c for some c &gt; 0 <ref> [FG+, AS, AL+] </ref>.) Theorem 2 Approximating MIN-UNSATISFY and NEAREST-CODEWORD within any constant factor is NP-hard and within any LARGE factor is almost-NP-hard. Theorem 3 Approximating MAX-SATISFY within a factor of n ffi is NP-hard for some ffi &gt; 0. <p> We note that the reduction depends crucially upon the exactness of the cover when ' is satisfiable. Such peculiarities seem inherent in recent non-approximability results. For instance, the hardness result for Chromatic Number in [LY] depends upon very specific properties of the graph obtained in the clique reductions of <ref> [FG+, AS, AL+] </ref>. 4 Larger factors: The First Reduction This section contains a proof of the following result.
Reference: [Bab] <author> L. Babai. </author> <title> On Lovasz's lattice reduction and the nearest lattice point problem. </title> <booktitle> In Combinatorica 6 </booktitle> <pages> 1-14, </pages> <year> 1986. </year>
Reference-contexts: Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p 1) within a factor 2 m . A modification of this algorithm <ref> [Bab] </ref> allows the same approximation for NV p .
Reference: [BF+] <author> L. Babai, L. Fortnow, L. Levin, M. Szegedy. </author> <title> Checking Computations in Polylog-arithmic Time. </title> <booktitle> Proc. 23rd ACM Symp. on Theory of Computing, </booktitle> <pages> pages 21-31, </pages> <year> 1991. </year>
Reference: [BFL] <author> L. Babai, L. Fortnow, C. Lund. </author> <title> Non-deterministic exponential time has two-prover interactive protocols. </title> <booktitle> Comput. Complexity 1 (1991), </booktitle> <pages> 16-25. </pages>
Reference: [Bel] <author> M. Bellare. </author> <title> Interactive Proofs and Approximation. </title> <institution> IBM Res. </institution> <type> Rep. </type> <note> RC 17969 (1992). </note>
Reference-contexts: These hardness results use a theorem of Feige and Lovasz [FL] about the existence of efficient 2-prover, 1-round interactive proofs for NP. In this respect, our reductions are similar to previous reductions in <ref> [Bel, BR, LY, BG+] </ref>, and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis [LY].
Reference: [BG+] <author> M. Bellare, S. Goldwasser, C. Lund, A. Russell. </author> <title> Efficient Multi-Prover Interactive Proofs with Applications to Approximation Problems. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 113-131, </pages> <year> 1993. </year> <month> 27 </month>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], [AS], [AL+], [LY], [Z], <ref> [BG+] </ref>). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], [FG+], [AS], [AL+], [LY], [Z], <ref> [BG+] </ref>), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs. <p> We use the reduction to set-cover given by Bellare et al. <ref> [BG+] </ref>, which improves the reduction due to Lund and Yannakakis [LY]. Recall that an instance of set-cover consists of a ground-set U and a collection of subsets S 1 ; S 2 ; : : : ; S m of U . <p> A cover is a subcollection of the S i 's whose union is U . The cover is said to be 5 exact if the sets in the cover are pairwise disjoint. The following result appears in <ref> [BG+] </ref>. Proposition 6 [BG+] For every c &gt; 1 there is a polynomial time reduction that, given an instance ' of SAT, produces an instance of set-cover and integer K with the following property: If ' is satisfiable, there is an exact cover of size K, and otherwise no set cover <p> A cover is a subcollection of the S i 's whose union is U . The cover is said to be 5 exact if the sets in the cover are pairwise disjoint. The following result appears in <ref> [BG+] </ref>. Proposition 6 [BG+] For every c &gt; 1 there is a polynomial time reduction that, given an instance ' of SAT, produces an instance of set-cover and integer K with the following property: If ' is satisfiable, there is an exact cover of size K, and otherwise no set cover has size less <p> These hardness results use a theorem of Feige and Lovasz [FL] about the existence of efficient 2-prover, 1-round interactive proofs for NP. In this respect, our reductions are similar to previous reductions in <ref> [Bel, BR, LY, BG+] </ref>, and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis [LY]. <p> A related open problem is to improve our results by proving the problems NP-hard rather than almost-NP-hard. More efficient 2-prover, 1-round interactive 26 proofs for NP (as conjectured in <ref> [BG+] </ref>), or a direct reduction from [AL+] might help. Acknowledgements Thanks to Madhu Sudan for suggesting that techniques from interactive proofs might be helpful in proving the hardness of lattice vector problems, and to Ravi Kannan for his prompt responses to questions on lattices.
Reference: [BR] <author> M. Bellare, P. Rogaway. </author> <title> The Complexity of Approximating Non-Linear Programs. In P.M. </title> <editor> Pardalos, editor, </editor> <title> Complexity of Numerical Optimization. </title> <publisher> World Scientific, </publisher> <year> 1993. </year> <note> Preliminary version: IBM Research Report RC 17831 (March 1992). </note>
Reference-contexts: These hardness results use a theorem of Feige and Lovasz [FL] about the existence of efficient 2-prover, 1-round interactive proofs for NP. In this respect, our reductions are similar to previous reductions in <ref> [Bel, BR, LY, BG+] </ref>, and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis [LY].
Reference: [BGKW88] <author> M. Ben-or, S. Goldwasser, J. Kilian, and A. Wigderson. </author> <title> Multi prover interactive proofs: How to remove intractability assumptions. </title> <booktitle> In Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 113-121, </pages> <year> 1988. </year>
Reference-contexts: It is easy to generalize the above definitions, by allowing the verifier to interact with more than two provers, while still restricting it to one round of queries. The systems thus obtained are called Multi-Prover 1-Round proof systems; this concept was first defined in <ref> [BGKW88] </ref>. 6.2 From Interactive Proofs to Label Cover We give a generic way to construct instances of label cover using 2-Prover 1-Round interactive proof system. The running time of the construction is polynomial in the running time of the verifier and jRj + jA 1 j + jA 2 j.
Reference: [BMV] <author> E. R. Berlekamp, R. J. Mc Eliece, H. C. A. Van Tilborg. </author> <title> On the inherent intractability of certain coding problems, </title> <journal> Trans. Inform. </journal> <note> Theory (1978) 384-386. </note>
Reference: [BK] <author> M. Blum, S. Kannan. </author> <title> Designing programs that check their work. </title> <booktitle> In Proc. 21st ACM Symp. on Theory of Computing, </booktitle> <pages> pages 86-97, </pages> <year> 1989. 1989. </year>
Reference: [BLR] <author> M. Blum, M. Luby, R. Rubinfeld. </author> <title> Self-testing/correcting with applications to numerical problems. </title> <booktitle> In Proc. 22nd ACM Symp. on Theory of Computing, </booktitle> <pages> pages 73-83, </pages> <year> 1990. </year>
Reference: [Bol] <author> B. Bollobas. </author> <title> Combinatorics. </title> <publisher> Cambridge Univ Press 1986. </publisher>
Reference-contexts: The reduction uses an `fi` Hadamard matrix i.e. a (1) matrix such that H t ` H ` = `I ` . (H ` exists e.g. when ` is a power of 2, cf. <ref> [Bol, p.74] </ref>). Claim: Let z 2 Z ` . If z has at least k nonzero entries then jjH ` zjj 1 p Proof: The columns of 1 p ` H ` form an orthonormal basis.
Reference: [BN] <author> J. Bruck and M. Naor. </author> <title> The hardness of decoding linear codes with preprocessing. </title> <journal> IEEE Transactions on Inform. </journal> <note> Theory 1990 381-385. </note>
Reference: [Con] <author> A. Condon. </author> <title> The complexity of the max-word problem and the power of one-way interactive proof systems. </title> <journal> Comput. </journal> <note> Complexity 3 (1993), 292-305. Preliminary version appeared in Proc. 8th Symp. on Theor. Aspects of Comp. Sci., Springer L.N.C.S. </note> <year> 1991, </year> <pages> pp. 456-465. </pages>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. <ref> [Con] </ref>, [FG+], [AS], [AL+], [LY], [Z], [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. <ref> [Con] </ref>, [FG+], [AS], [AL+], [LY], [Z], [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs.
Reference: [FG+] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], <ref> [FG+] </ref>, [AS], [AL+], [LY], [Z], [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], <ref> [FG+] </ref>, [AS], [AL+], [LY], [Z], [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs. <p> cover and independent set are another "complementary" pair of problems, and seem to differ greatly in how well they can be approximated in polynomial time. (Vertex cover can be approximated within a factor 2, and independent set is NP-hard up to a factor n c for some c &gt; 0 <ref> [FG+, AS, AL+] </ref>.) Theorem 2 Approximating MIN-UNSATISFY and NEAREST-CODEWORD within any constant factor is NP-hard and within any LARGE factor is almost-NP-hard. Theorem 3 Approximating MAX-SATISFY within a factor of n ffi is NP-hard for some ffi &gt; 0. <p> We note that the reduction depends crucially upon the exactness of the cover when ' is satisfiable. Such peculiarities seem inherent in recent non-approximability results. For instance, the hardness result for Chromatic Number in [LY] depends upon very specific properties of the graph obtained in the clique reductions of <ref> [FG+, AS, AL+] </ref>. 4 Larger factors: The First Reduction This section contains a proof of the following result.
Reference: [FL] <author> U. Feige, L. Lovasz. </author> <title> Two-Prover One-Round Proof Systems: Their Power and Their Problems. </title> <booktitle> In Proc. 24th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 733-741, </pages> <year> 1992. </year>
Reference-contexts: Our results, like several other recent "inapproximability" results, use ideas involving few-prover single-round interactive membership proofs for NP. Specifically, we use a theorem of Feige and Lovasz <ref> [FL] </ref>. We also derive hardness results for a number of other problems which in one way or another involve distances of vectors. Next, we define these problems. Nearest-Codeword: INPUT : An m fi k matrix A over GF (2) and a vector y 2 GF (2) k . <p> The hardness of approximating these covering problems is proved in Lemmas 9 (used in the reduction to NV 1 ) and 10 (used in the reduction to SV 1 ). These hardness results use a theorem of Feige and Lovasz <ref> [FL] </ref> about the existence of efficient 2-prover, 1-round interactive proofs for NP. In this respect, our reductions are similar to previous reductions in [Bel, BR, LY, BG+], and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis [LY]. <p> The large "gap" in acceptance probability present in the definition of interactive proofs then translates into a large gap in the minimum cost solution to label cover. For exhibiting the hardness of l 1 cost, we have to modify the protocol of <ref> [FL] </ref> a little, and use some new geometric arguments. 6.1 2-Prover (and Multi-Prover) 1-Round Interactive Proofs A 2-Prover 1-Round interactive proof system for a language L consists of a probabilistic polynomial-time verifier V . <p> Prover P i responds with a i = P i (q i [r]). Finally, the verifier decides whether to accept or reject according to the value (r; a 1 ; a 2 ). It is implicit in <ref> [FL] </ref> that for every polynomial-time computable function k (n) &lt; poly (n), there is a 2-prover 1-round proof-system for 3SAT with the following properties: * If ' 2 3SAT then there exist provers such that the verifier always accepts (i.e., for every choice of r). * If ' 62 3SAT then <p> The probability of accepting an unsatisfiable formula goes down to 2 2k (n) . This is a 2-Prover 1-Round protocol which is a parallelization of PP2 using the techniques of <ref> [FL] </ref>. Let F be a finite field, jF j 2 O (k (n)) . (Here we assume k (n) = poly (log (n))). <p> If all of these checks pass, the verifier accepts. If ' is satisfiable, then there is a way for the m provers of the PP2 protocol to answer queries such that the verifier accepts with probability 1. Clearly, the same remains true for PP3. In <ref> [FL] </ref> the converse is also shown: If for every strategy of the m provers of PP2, the verifier accepts with probability less than 2 2k (n) , then for every strategy of the 2 provers of PP3, the verifier accepts with probability less than 2 k (n) . 6.5 Hardness of
Reference: [FT] <author> A. Frank, E. Tardos. </author> <title> An application of simultaneous approximation in combinatorial optimization. </title> <booktitle> In Proc. 26th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 459-463, </pages> <year> 1985. </year>
Reference-contexts: even relatively poor polynomial-time approximation algorithms for it ([L 3 ]) have been used in a host of applications, including integer programming, solving low-density subset-sum problems and breaking knapsack-based codes [LO], simultaneous diophantine approximation and factoring polynomials over the rationals [L 3 ], and strongly polynomial-time algorithms in combinatorial optimization <ref> [FT] </ref>. For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz [Lov] or Kannan [K2]. Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p 1) within a factor 2 m .
Reference: [GJ] <author> M. R. Garey, D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard <ref> [GJ] </ref>. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], [AS], [AL+], [LY], [Z], [BG+]). <p> Otherwise it is said to misclassify the point. Finding a hypothesis that minimizes the number of misclassifications is the open hemispheres problem, which is NP-hard <ref> [GJ] </ref>. Define the error of the algorithm as the number of misclassifications by its hypothesis, and the noise of the sample as the error of the best possible algorithm. Let the failure ratio of the algorithm be the ratio of the error to noise.
Reference: [HS] <author> K-U. Hoeffgen, H-U. Simon. </author> <title> Robust Trainability of Single Neurons. </title> <booktitle> In Proceedings of the Conference of Learning Theory, </booktitle> <pages> pages 428-439, </pages> <year> 1992. </year>
Reference-contexts: Let the failure ratio of the algorithm be the ratio of the error to noise. Theorem 4 Achieving any constant failure ratio in the LEARNING HALFSPACES problem is NP-hard and achieving any LARGE failure ratio is almost-NP-hard. This confirms what has been conjectured in learning theory <ref> [HS] </ref>. A failure ratio m can be achieved by Kannan's idea, mentioned above. 4 Better factors. For NEAREST-CODEWORD and NV p for all p 1, in Section 4 we shall actually prove hardness up to a factor of 2 log 1* n instead of 2 log 0:5* n .
Reference: [JP] <author> D. S. Johnson, F. P. Preparata. </author> <title> The Densest Hemisphere Problem. </title> <journal> Theor. Comput. Sci. </journal> <volume> 6(1978), </volume> <pages> 93-107. </pages>
Reference-contexts: MINIMIZE the number of equations to be omitted. Observe that a solution to MAX-SATISFY is exactly the complement of a solution to MIN-UNSATISFY, and therefore the two problems have the same complexity. (Indeed, it is known that both are NP-hard; this is implicit for example in <ref> [JP] </ref>). However, the same need not be true for approximate solutions.
Reference: [K] <author> R. Kannan. </author> <title> Minkowski's convex body theorem and integer programming. </title> <journal> Mathematics of Operations Research, </journal> <volume> 12/3, </volume> <year> 1987. </year>
Reference-contexts: Finally, Schnorr has shown how to modify Lovasz's algorithm to approximate both these problems within a factor O (2 *m ) in polynomial time, for every * &gt; 0 [Sch]. 2 On the other hand, Van Emde Boas showed that NV p is NP-hard for all p 1 ([vEB]; see <ref> [K] </ref> for a simpler proof ). Lagarias showed that the shortest vector problem is NP-hard under the ` 1 (i.e. max) norm. But it is still an open problem whether SV p is NP-hard for any other p, and specifically for p = 2. <p> To see this for SV 1 , notice that the solutions in SV 1 and SV 2 are always within a factor p m of each other. For NV 2 the implication follows from Kannan's result <ref> [K] </ref> that approximating NV 2 within a factor ( p d) is reducible to SV 2 .
Reference: [K2] <author> R. Kannan. </author> <title> Algorithmic Geometry of Numbers. </title> <booktitle> In Annual Reviews of Computer Science, </booktitle> <editor> eds. Traub, Grosz, Lampson, and Nilsson, </editor> <volume> Vol. 2(1987), </volume> <pages> pages 231-267. </pages> <publisher> Publ. Annual Reviews Inc. </publisher>
Reference-contexts: For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz [Lov] or Kannan <ref> [K2] </ref>. Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p 1) within a factor 2 m . A modification of this algorithm [Bab] allows the same approximation for NV p .
Reference: [Kar] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> Miller and Thatcher, eds., </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> 85-103. </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year> <month> 28 </month>
Reference: [LLS] <author> J. Lagarias, H.W. Lenstra, </author> <title> C.P. Schnorr. Korkine-Zolotarev bases and successive minima of a lattice and its reciprocal lattice. </title> <booktitle> Combinatorica 10 (1990), </booktitle> <pages> 333-348. </pages>
Reference-contexts: For NV 2 the implication follows from Kannan's result [K] that approximating NV 2 within a factor ( p d) is reducible to SV 2 . We also note that approximating NV 2 within any factor greater than m 1:5 is unlikely to be NP-complete, since Lagarias et al. <ref> [LLS] </ref> have shown that this problem lies in NP " co-NP. Our results, like several other recent "inapproximability" results, use ideas involving few-prover single-round interactive membership proofs for NP. Specifically, we use a theorem of Feige and Lovasz [FL].
Reference: [LO] <editor> J.C. Lagarias and A.M. Odlyzko. </editor> <title> Solving low-density subset-sum problems. </title> <editor> J. </editor> <booktitle> ACM 32 (1985), </booktitle> <pages> 229-246. </pages>
Reference-contexts: The SV problem is particularly important because even relatively poor polynomial-time approximation algorithms for it ([L 3 ]) have been used in a host of applications, including integer programming, solving low-density subset-sum problems and breaking knapsack-based codes <ref> [LO] </ref>, simultaneous diophantine approximation and factoring polynomials over the rationals [L 3 ], and strongly polynomial-time algorithms in combinatorial optimization [FT]. For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz [Lov] or Kannan [K2].
Reference: [L 3 ] <author> A.K. Lenstra, H.W. Lenstra, L. Lovasz. </author> <title> Factoring Polynomials with rational coefficients. </title> <journal> Math. Ann. </journal> <volume> 261 (1982), </volume> <pages> 513-534. </pages>
Reference-contexts: The SV problem is particularly important because even relatively poor polynomial-time approximation algorithms for it (<ref> [L 3 ] </ref>) have been used in a host of applications, including integer programming, solving low-density subset-sum problems and breaking knapsack-based codes [LO], simultaneous diophantine approximation and factoring polynomials over the rationals [L 3 ], and strongly polynomial-time algorithms in combinatorial optimization [FT]. For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz [Lov] or Kannan [K2]. Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p <p> codes [LO], simultaneous diophantine approximation and factoring polynomials over the rationals <ref> [L 3 ] </ref>, and strongly polynomial-time algorithms in combinatorial optimization [FT]. For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz [Lov] or Kannan [K2]. Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p 1) within a factor 2 m . A modification of this algorithm [Bab] allows the same approximation for NV p .
Reference: [Lov] <author> L. Lovasz. </author> <title> An Algorithmic Theory of Numbers, Graphs and Convexity. </title> <booktitle> NSF-CBMS Reg. Conference Series. </booktitle> <publisher> SIAM, </publisher> <year> 1986. </year>
Reference-contexts: For details and more applications, especially to classical problems in the "geometry of numbers", see the surveys by Lovasz <ref> [Lov] </ref> or Kannan [K2]. Lovasz's celebrated lattice transformation algorithm [L 3 ] runs in polynomial time and approximates SV p (p 1) within a factor 2 m . A modification of this algorithm [Bab] allows the same approximation for NV p .
Reference: [LY] <author> C. Lund, M. Yannakakis. </author> <title> On the Hardness of Approximating Minimization Problems. </title> <journal> Journal of the ACM, </journal> <volume> 41(5) </volume> <pages> 960-981, </pages> <year> 1994. </year> <note> Prelim. version in 25th STOC, </note> <year> 1993, </year> <pages> 286-293. </pages>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], [AS], [AL+], <ref> [LY] </ref>, [Z], [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], [FG+], [AS], [AL+], <ref> [LY] </ref>, [Z], [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs. <p> We use the reduction to set-cover given by Bellare et al. [BG+], which improves the reduction due to Lund and Yannakakis <ref> [LY] </ref>. Recall that an instance of set-cover consists of a ground-set U and a collection of subsets S 1 ; S 2 ; : : : ; S m of U . A cover is a subcollection of the S i 's whose union is U . <p> We note that the reduction depends crucially upon the exactness of the cover when ' is satisfiable. Such peculiarities seem inherent in recent non-approximability results. For instance, the hardness result for Chromatic Number in <ref> [LY] </ref> depends upon very specific properties of the graph obtained in the clique reductions of [FG+, AS, AL+]. 4 Larger factors: The First Reduction This section contains a proof of the following result. <p> These hardness results use a theorem of Feige and Lovasz [FL] about the existence of efficient 2-prover, 1-round interactive proofs for NP. In this respect, our reductions are similar to previous reductions in <ref> [Bel, BR, LY, BG+] </ref>, and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis [LY]. <p> In this respect, our reductions are similar to previous reductions in [Bel, BR, LY, BG+], and are closest in spirit to the reduction to set-cover given by Lund and Yannakakis <ref> [LY] </ref>. <p> A total-cover of G is a labelling that covers every edge. It is a simple exercise to see that finding the minimum cost (under any ` p norm) of these covers is NP-hard. Furthermore, it is implicit in the calculations of <ref> [LY] </ref> that it is almost-NP-hard to obtain even weak approximations to these costs. Here we restate this result in a more exact form.
Reference: [MP] <author> M. Minsky, S. Papert. Perceptrons, </author> <year> 1968. </year>
Reference-contexts: Finally, we consider a well-known problem in learning theory: learning a halfs-pace in the presence of malicious errors. (The context in which the problem arises is that of training a perceptron, a learning model first studied by Minsky and Papert <ref> [MP] </ref>.) Rather than describing the learning problem in the usual PAC setting, we merely present the underlying combinatorial problem.
Reference: [PY] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, </title> <journal> approximation and complexity classes Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Prelim. version in 20th ACM STOC, 229-234, </note> <year> 1988. </year>
Reference-contexts: Proof: (of Theorem 3) We first show that approximating the problem within a factor (1 + *) is NP-hard, and then prove the stronger result. We use the following result, a joint consequence of a theorem of Arora et. al. [AL+] and a reduction due to <ref> [PY] </ref>. A vertex cover in a graph G = (V; E) is a set V 0 V such that for every edge fu; vg, either u 2 V 0 or v 2 V 0 . Let V C min be the size of the smallest vertex cover.
Reference: [Sch] <author> C.P. Schnorr. </author> <title> A hierarchy of polynomial-time basis reduction algorithms. </title> <booktitle> Proc. Conf. on Algorithms , Pecs (Hungary), </booktitle> <editor> Lovasz, Szemeredi, eds., </editor> <publisher> North-Holland 1985, </publisher> <pages> 375-386. </pages>
Reference-contexts: A modification of this algorithm [Bab] allows the same approximation for NV p . Finally, Schnorr has shown how to modify Lovasz's algorithm to approximate both these problems within a factor O (2 *m ) in polynomial time, for every * &gt; 0 <ref> [Sch] </ref>. 2 On the other hand, Van Emde Boas showed that NV p is NP-hard for all p 1 ([vEB]; see [K] for a simpler proof ). Lagarias showed that the shortest vector problem is NP-hard under the ` 1 (i.e. max) norm.
Reference: [S] <author> J. Stern. </author> <title> Approximating the number of error locations is NP-complete. </title> <note> Proc AAECC-10, LNCS (1993), to appear. </note>
Reference: [vEB] <author> P. van Emde Boas. </author> <title> Another NP-complete problem and the complexity of computing short vectors in a lattice. </title> <type> Tech. Report 81-04, </type> <institution> Math. Inst. Univ. </institution> <address> Amsterdam, </address> <year> 1981. </year>
Reference: [Z] <author> D. Zuckerman. </author> <title> NP-complete problems have a version that's hard to approximate. </title> <booktitle> 8th Structure in Complexity Theory Conf., </booktitle> <year> 1993, </year> <pages> 305-312. 29 </pages>
Reference-contexts: 1 Introduction Many important optimization problems are NP-hard [GJ]. Recent work has shown that computing even approximate solutions to many of these problems is NP-hard (cf. [Con], [FG+], [AS], [AL+], [LY], <ref> [Z] </ref>, [BG+]). <p> While we do not solve this open problem, we obtain hardness results for the approximate solutions of the known NP-hard cases. We follow the example of recently established links between the theory of interactive proofs and the hardness of approximation (cf. [Con], [FG+], [AS], [AL+], [LY], <ref> [Z] </ref>, [BG+]), and add some new links . Specifically, we introduce a new combinatorial problem, which we call label cover. This problem is proved hard to approximate (up to LARGE factors) using ideas from interactive proofs.
References-found: 40

