URL: ftp://ftp.cs.toronto.edu/pub/kbms/cbr-aise95.ps.Z
Refering-URL: http://www.cs.utoronto.ca/~juris/myp.html
Root-URL: 
Title: A Similarity-Based Retrieval Tool for Software Repositories  
Author: Igor Jurisica 
Keyword: similarity-based retrieval, context, relevance, software repositories  
Affiliation: Department of Computer Science University of  
Date: April 20-21, 1995  August 18, 1995  
Address: IJCAI-95, Montreal, Quebec,  Toronto, Toronto, Ontario M5S 1A4  
Note: The Third Workshop on AI and Software Engineering: Breaking the Toy Mold.  
Abstract: In this paper we present a prototype of a flexible similarity-based retrieval system. Its flexibility is supported by allowing for an imprecisely specified query. Moreover, our algorithm allows for assessing if the retrieved items are relevant in the initial context, specified in the query. The presented system can be used as a supporting tool for a software repository. We also discuss system evaluation with concerns on usefulness, scalability, applicability and comparability. Evaluation of the T A3 system on three domains gives us encouraging results and an integration of TA3 into a real software repository as a retrieval tool is ongoing. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Constantopoulos, P., Jarke, M., Mylopoulos, J., and Vassiliou, Y. </author> <year> (1994). </year> <title> The software information base: A server for reuse. </title> <type> Technical Report DKBS-TR-94-1, </type> <institution> University of Toronto, Department of Computer Science, Toronto, ONT. </institution>
Reference-contexts: retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification (Rittri, 1991), information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization (Schwanke, 1991), analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations <ref> (Constantopoulos et al., 1994) </ref>. fl This research was supported by the Information Technology Research Center of Ontario. Author is indebted to J. Glasgow, J. Mylopoulos and D.
Reference: <author> Cunningham, P., Bonzano, A., and Smyth, B. </author> <year> (1995). </year> <title> An incremental case retrieval mechanism for diagnosis. </title> <type> Technical Report TCD-CS-95-01, </type> <institution> Trinity College, </institution> <address> Dublin, Ireland. </address>
Reference-contexts: Authors present a heuristic clustering scheme used to organize software repository automatically. By conducting a limited evaluation (on a repository of 150 items with a simple structure and by using only two test-queries) the average performance was 53% recall and 98% precision. In <ref> (Cunningham, Bonzano and Smyth, 1995) </ref> an incremental retrieval system I-CBR is presented. In case-based reasoning a user specifies a case skeleton and wants to retrieve cases similar to it.
Reference: <author> Daudjee, K. S. and Toptsis, A. A. </author> <year> (1994). </year> <title> Automatic organization of reusable software components in a mul tidimensional space. </title> <editor> In De, P. and Woo, C., editors, </editor> <booktitle> 4 th Annual Workshop on Information Technologies and Systems, </booktitle> <pages> pages 11-20, </pages> <address> Vancouver, BC. </address>
Reference-contexts: The main restriction of the system is its inflexibility. Because the components must be described in terms of all features, adding new features would involve modifying all components which are already stored in the library. Another SBR system is presented in <ref> (Daudjee and Toptsis, 1994) </ref>. Authors present a heuristic clustering scheme used to organize software repository automatically. By conducting a limited evaluation (on a repository of 150 items with a simple structure and by using only two test-queries) the average performance was 53% recall and 98% precision. <p> The system should be evaluated on a domain which is comparable to the size and complexity of an actual domain. 5 T A3 performance TA3 was evaluated on a medical domain, data on a rise time of a servomechanism (Quinlan, 1993) and a small software repository <ref> (Daudjee and Toptsis, 1994) </ref>. The main objective of our evaluation was to test task performance. Time performance was evaluated only subjectively. In the first two domains, retrieval system was a front-end for a reasoning system, namely, retrieved items were used for predicting unknown values for attributes.
Reference: <author> Daz, R. P. and Freeman, P. </author> <year> (1987). </year> <title> Classifying software for reusability. </title> <journal> IEEE Software, </journal> <volume> 4(16) </volume> <pages> 6-16. </pages>
Reference-contexts: Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification (Rittri, 1991), information retrieval schemes <ref> (Daz and Freeman, 1987) </ref>, hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization (Schwanke, 1991), analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center of Ontario. Author is indebted to J. Glasgow, J.
Reference: <author> Garg, P. and Scacchi, W. </author> <year> (1989). </year> <title> ISHYS: Designing an intelligent software hypertext system. </title> <journal> IEEE Expert, </journal> <pages> pages 52-82. </pages>
Reference-contexts: Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification (Rittri, 1991), information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval <ref> (Garg and Scacchi, 1989) </ref>, similarity-based organization (Schwanke, 1991), analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center of Ontario. Author is indebted to J. Glasgow, J. Mylopoulos and D.
Reference: <author> Gravano, L., Garca-Molina, H., and Tomasic, A. </author> <year> (1994). </year> <title> Precision and recall of gloss estimators for database discovery. </title> <type> Technical Report CS-TN-94-10, </type> <institution> Stanford University, Department of Computer Science, </institution> <address> Stan-ford, CA. </address>
Reference-contexts: Even though double cross-validation is a better estimate of an actual performance of the system on the real problems, simple cross-validation is appealing since the relevance is defined retrieved items can be compared to the set of items that should be retrieved. 4.2 Goal of Retrieval As presented in <ref> (Gravano, Garca-Molina and Tomasic, 1994) </ref> in some situations a precision-oriented retrieval might be of interest, i.e., it would not be considered as a system's flaw if some relevant items are missed, if and only if only relevant items are retrieved.
Reference: <author> Greiner, R. </author> <year> (1994). </year> <booktitle> AAAI Fall Symposium Series on Relevance. </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA. </address> <note> 6 Jagadish, </note> <author> H. V., Mendelzon, A. O., and Milo, T. </author> <year> (1995). </year> <title> Similarity-based queries. </title> <booktitle> In Proc. of the 14 th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA. </address>
Reference-contexts: There are many possible definitions of relevance. * Goal of retrieval. Users might prefer precision-oriented retrieval or recall-oriented retrieval. * Domain dependency. System's performance is domain dependent. 4.1 Relevance In different domains and for different systems there are distinct definitions of relevance <ref> (Greiner, 1994) </ref>. Moreover, what is relevant in one situation (or for one user) may or may not be relevant in another situation (or for another user) (Jurisica, 1994b). To handle both issues, the retrieval system should be flexible enough to allow for changing relevance definition.
Reference: <author> Jurisica, I. </author> <year> (1994a). </year> <title> Context-based similarity applied to retrieval of relevant cases. </title> <type> Technical Report DKBS-TR-94-5, </type> <institution> University of Toronto, Department of Computer Science, Toronto, </institution> <address> Ontario. </address>
Reference-contexts: Classification of items may improve the efficiency of performing the task by limiting the search space of the repository. In <ref> (Jurisica, 1994a) </ref> we show that context-based similarity is monotonic, transitive and symmetric - features which have an obvious use for information retrieval. <p> Relaxation involves extending the constraint set for one or more of the attribute values or removing attributes from the context. Restriction involves removing values from constraint sets or adding new attributes to the context <ref> (Jurisica, 1994a) </ref>. The retrieval process can be affected by specifying matching criteria in the query. First, for a cardinality criteria, a parameter Some (n) states that in matching an item with a context at least n, rather than all, attributes of a context must be satisfied.
Reference: <author> Jurisica, I. </author> <year> (1994b). </year> <title> How to retrieve relevant information? In Greiner, </title> <editor> R., editor, </editor> <booktitle> Proc. of the AAAI Fall Symposium Series on Relevance, </booktitle> <pages> pages 101-104, </pages> <address> New Orleans, Louisiana. </address>
Reference-contexts: System's performance is domain dependent. 4.1 Relevance In different domains and for different systems there are distinct definitions of relevance (Greiner, 1994). Moreover, what is relevant in one situation (or for one user) may or may not be relevant in another situation (or for another user) <ref> (Jurisica, 1994b) </ref>. To handle both issues, the retrieval system should be flexible enough to allow for changing relevance definition. If we assume that relevant item is a useful item then context-based similarity retrieval allows for the needed flexibility, as mentioned in Section 3.
Reference: <author> Jurisica, I. </author> <year> (1995). </year> <title> Retrieval and evaluation similarity functions applied to in-vitro fertilization and servo domains. </title> <type> Technical report, </type> <institution> University of Toronto, Department of Computer Science, Toronto, Ontario. </institution> <note> In preparation. </note>
Reference-contexts: If we assume that relevant item is a useful item then context-based similarity retrieval allows for the needed flexibility, as mentioned in Section 3. Even with the flexibility allowed by explicitly stating the context, it may not be straightforward to assess the relevance <ref> (Jurisica and Glasgow, 1995) </ref> because one could measure relevance with respect to: * user's belief; * user submitted query; * automatically relaxed or constrained query (i.e., the query actually used for retrieval). <p> This should not be considered as a 4 problem due to a lowered precision, since there was a reason for relaxation, e.g., too few items (or none) were retrieved by using the original query. Thus, as suggested in <ref> (Jurisica, 1995) </ref>, one should not use only one precision and recall; definitions with respect to the user belief, user query and actual query used for retrieval should be used instead. It is apparent that the most subjective measure is based on user belief. <p> In the T A3 system, we allow for goal flexibility by supporting two relaxation strategies - cardinality and attribute-value (as discussed in Section 3 and explained in more detail in <ref> (Jurisica and Glasgow, 1995) </ref>). 4.3 Domain Dependency From our experience with complex medical domain, simpler technical domain (Jurisica, 1995) and simple software repository, system's performance depends on the domain. <p> In the T A3 system, we allow for goal flexibility by supporting two relaxation strategies - cardinality and attribute-value (as discussed in Section 3 and explained in more detail in (Jurisica and Glasgow, 1995)). 4.3 Domain Dependency From our experience with complex medical domain, simpler technical domain <ref> (Jurisica, 1995) </ref> and simple software repository, system's performance depends on the domain. If the schema for the domain has sufficient details, i.e., individual items are separable, then the system's performance would measure its actual capabilities; otherwise the problem with representation will negatively affect retrieval. <p> Thus, simple cross-validation was used and results were compared to actual items to avoid subjective assessing of relevance. For the lack of space we present 5 only a summary of evaluation (more details are presented in <ref> (Jurisica, 1995) </ref>). Prediction could be successful only if relevant items were used. Thus, accuracy of prediction was a measure of retrieval capability of T A3 .
Reference: <author> Jurisica, I. and Glasgow, J. </author> <year> (1995). </year> <title> Context-based similarity for case-based reasoning. </title> <note> Submitted. </note>
Reference-contexts: If we assume that relevant item is a useful item then context-based similarity retrieval allows for the needed flexibility, as mentioned in Section 3. Even with the flexibility allowed by explicitly stating the context, it may not be straightforward to assess the relevance <ref> (Jurisica and Glasgow, 1995) </ref> because one could measure relevance with respect to: * user's belief; * user submitted query; * automatically relaxed or constrained query (i.e., the query actually used for retrieval). <p> This should not be considered as a 4 problem due to a lowered precision, since there was a reason for relaxation, e.g., too few items (or none) were retrieved by using the original query. Thus, as suggested in <ref> (Jurisica, 1995) </ref>, one should not use only one precision and recall; definitions with respect to the user belief, user query and actual query used for retrieval should be used instead. It is apparent that the most subjective measure is based on user belief. <p> In the T A3 system, we allow for goal flexibility by supporting two relaxation strategies - cardinality and attribute-value (as discussed in Section 3 and explained in more detail in <ref> (Jurisica and Glasgow, 1995) </ref>). 4.3 Domain Dependency From our experience with complex medical domain, simpler technical domain (Jurisica, 1995) and simple software repository, system's performance depends on the domain. <p> In the T A3 system, we allow for goal flexibility by supporting two relaxation strategies - cardinality and attribute-value (as discussed in Section 3 and explained in more detail in (Jurisica and Glasgow, 1995)). 4.3 Domain Dependency From our experience with complex medical domain, simpler technical domain <ref> (Jurisica, 1995) </ref> and simple software repository, system's performance depends on the domain. If the schema for the domain has sufficient details, i.e., individual items are separable, then the system's performance would measure its actual capabilities; otherwise the problem with representation will negatively affect retrieval. <p> Thus, simple cross-validation was used and results were compared to actual items to avoid subjective assessing of relevance. For the lack of space we present 5 only a summary of evaluation (more details are presented in <ref> (Jurisica, 1995) </ref>). Prediction could be successful only if relevant items were used. Thus, accuracy of prediction was a measure of retrieval capability of T A3 .
Reference: <author> Lauzon, D. and Rose, T. </author> <year> (1994). </year> <title> Task-oriented and similarity-based retrieval. </title> <booktitle> In Conference on Knowledge-Based Software Engineering. </booktitle>
Reference: <author> Lee, H.-Y. and Harandi, M. T. </author> <year> (1993). </year> <title> An analogy-based retrieval mechanism for software design reuse. </title> <booktitle> In Proc. of the Eight Knowledge-Based Software Engineering Conference, </booktitle> <pages> pages 152-159, </pages> <address> Chicago, IL. </address>
Reference-contexts: Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification (Rittri, 1991), information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization (Schwanke, 1991), analogy-based retrieval <ref> (Lee and Harandi, 1993) </ref> and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center of Ontario. Author is indebted to J. Glasgow, J. Mylopoulos and D. <p> In general, it is impossible to predict what and when will be required to be retrieved and also, in which form. This problem can be decreased by allowing for flexible and iterative similarity-based retrieval. The CAReT system <ref> (Lee and Harandi, 1993) </ref> is similar to our work in the sense that it supports flexible retrieval of software components. CAReT is an analogy-based retrieval system applied to software design reuse. It also supports incomplete query specification as well as similar and exact matching of components.
Reference: <author> Mylopoulos, J., Borgida, A., Jarke, M., and Koubarakis, M. </author> <year> (1990). </year> <title> Telos: Representing knowledge about information systems. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 8(4) </volume> <pages> 325-362. </pages>
Reference-contexts: TA3 allows for imprecise query specification and for automatic query refinements in order to control amount and relevance of retrieved information. System's flexibility is accomplished by including context in the similarity definition and by using a special representation language (e.g., Telos <ref> (Mylopoulos et al., 1990) </ref> where attributes are treated the same way as objects). Thus, it is possible to diminish the difference between similarity in object attributes and relations. In Section 2 we present few existing similarity-based retrieval (SBR) systems. The following section describes our approach to SBR.
Reference: <author> Ostertag, E., Hendler, J., Daz, R. P., and Braun, C. </author> <year> (1992). </year> <title> Computing similarity in a reuse library system: An AI-based approach. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 3(1) </volume> <pages> 205-228. </pages>
Reference-contexts: The system uses two levels of matching: object-based and attribute-based. The first level compares object classes, object type and attribute properties and their relationships to other object types to support retrieval. The second level compares attribute data types and properties. AIRS (AI-base Reuse System) <ref> (Ostertag et al., 1992) </ref> is a AI-based library system for software reuse. AIRS is a hybrid system that integrates faceted indexing and a hierarchical frame system. Similarity between two components is based on a distance measure of their respective descriptions.
Reference: <author> Quinlan, J. R. </author> <year> (1993). </year> <title> Combining instance-based and model-based learning. </title> <booktitle> In Proc. of the 10 th International Conference on Machine Learning, </booktitle> <address> Amherst, MA. </address>
Reference-contexts: The system should be evaluated on a domain which is comparable to the size and complexity of an actual domain. 5 T A3 performance TA3 was evaluated on a medical domain, data on a rise time of a servomechanism <ref> (Quinlan, 1993) </ref> and a small software repository (Daudjee and Toptsis, 1994). The main objective of our evaluation was to test task performance. Time performance was evaluated only subjectively.
Reference: <author> Rissland, E. L., Daniels, J. J., Rubinstein, Z. B., and Skalak, D. B. </author> <year> (1993). </year> <title> Case-based diagnostic analysis in a blackboard architecture. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <address> Washington, DC. </address>
Reference: <author> Rittri, M. </author> <year> (1991). </year> <title> Using types as search keys in functional libraries. </title> <journal> Journal of Functional Programming, </journal> <volume> 1(1). </volume>
Reference-contexts: Concluding remarks are presented in Section 4. 2 Similarity-based retrieval A software repository is a special-purpose information system. Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification <ref> (Rittri, 1991) </ref>, information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization (Schwanke, 1991), analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center of Ontario.
Reference: <author> Schwanke, R. W. </author> <year> (1991). </year> <title> An intelligent tool for re-engineering software modularity. </title> <booktitle> In Proc. 14 th Conference on Software Engineering, </booktitle> <pages> pages 83-92, </pages> <address> Austin, TX. </address>
Reference-contexts: Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval (Tedjini et al., 1990), formal specification (Rittri, 1991), information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization <ref> (Schwanke, 1991) </ref>, analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center of Ontario. Author is indebted to J. Glasgow, J. Mylopoulos and D.
Reference: <author> Tedjini, M., Thomas, I., Benoliel, G., Gallo, F., and Minot, R. </author> <year> (1990). </year> <title> A query service for a software engineering database system. </title> <booktitle> In Proc. Fourth Symposium on Software Development Environments, </booktitle> <pages> pages 238-248, </pages> <address> Irvine. </address> <month> 7 </month>
Reference-contexts: Concluding remarks are presented in Section 4. 2 Similarity-based retrieval A software repository is a special-purpose information system. Various retrieval techniques are being used for retrieving software components from a repository, e.g., library cataloging, database classification and query-based retrieval <ref> (Tedjini et al., 1990) </ref>, formal specification (Rittri, 1991), information retrieval schemes (Daz and Freeman, 1987), hypertext-based classification and retrieval (Garg and Scacchi, 1989), similarity-based organization (Schwanke, 1991), analogy-based retrieval (Lee and Harandi, 1993) and hybrid organizations (Constantopoulos et al., 1994). fl This research was supported by the Information Technology Research Center
References-found: 20

