URL: http://robotics.eecs.berkeley.edu/~mayi/psfile/EECS290N.ps.gz
Refering-URL: http://robotics.eecs.berkeley.edu/~mayi/publication.html
Root-URL: http://www.cs.berkeley.edu
Email: veit@robotics.eecs.berkeley.edu  
Title: Simulation of Hybrid Systems in Java  
Note: mayi@robotics.eecs.berkeley.edu  
Abstract: Term Project Report for EECS290N, Fall'96 University of California at Berkeley Yi Ma fl Veit Hagenmeyer y December 10, 1996 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alur, C. Courcoubetis, T. A. Henzinger, P.-H. Ho, </author> <title> "Hybrid Automata: An Algorithmic Approach to the Specification and Verification of Hybrid Systems," </title> <publisher> LNCS 736, Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: We then summarize this project by presenting some open questions for further development and study. 2 Definition of Linear Hybrid Automata We define the linear hybrid automaton exactly as T. A. Henzinger <ref> [1] </ref>. 2.1 Syntax Definition 1: A linear hybrid automaton is a system A consisting of the following components: Variables. A finite set X = fx 1 ; ; x n g of variables. These variables represent the continuous component of the system. The number n is the dimension of A.
Reference: [2] <author> B. A. Davey and H. A. Priestley, </author> <title> Introduction to Lattices and Order, </title> <publisher> Cambridge University Press, </publisher> <year> 1990, </year> <month> chapters 1-4. </month>
Reference: [3] <author> H. M. Deitel and P. J. </author> <title> Deitel JAVA How to Program, </title> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference: [4] <author> T. A. Henzinger, </author> <title> "Hybrid System Class Notes Fall'96, </title> <institution> UC Berkeley". </institution>
Reference-contexts: Hybrid automata are characterized by having partly continuous time dynamics and partly discrete time dynamics. By the model of hybrid automata, systems with these two different kinds of dynamics can be structured and analyzed. Not always is a verification of characteristics like safety, aliveness or fairness possible <ref> [4] </ref>. To get a better understanding of the behavior of the system and to approximate the identification of, for example, unsafe initial conditions, a simulation environment is needed. In the following sections we firstly define the linear hybrid automaton. <p> Fortunately, the undecidability nature of those problems helps us here now. We didn't need to waste our time on trying to figure out a master program which can handle everything about deadlock. We only need to solve our own problem. We did it. Actually, according to Henzinger <ref> [4] </ref>, the class of Rectangular Hybrid Automata is Turing Complete. It is very hard to do general verifications in this class of model. Simulation then provides people an alternative to understand these systems. So, it is very important to have a good simulation software.
Reference: [5] <author> J. E. Hopcroft and J. D. Ullman, </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1979. </year>
Reference: [6] <author> G. Kahn, </author> <title> "The Semantics of a Simple Language for Parallel Programming," </title> <booktitle> Proc. of the IFIP Congress 74, </booktitle> <publisher> North-Holland PubG. </publisher> <editor> Kahn, </editor> <title> "The Semantics of a Simple Language for Parallel Programming," </title> <booktitle> Proc. of the IFIP Congress 74, </booktitle> <publisher> North-Holland Publishing Co., </publisher> <year> 1974. </year>
Reference: [7] <author> G. Kahn and D. B. MacQueen, </author> <title> "Coroutines and Networks of Parallel Processes," Information Processing 77, </title> <editor> B. Gilchrist, editor, </editor> <publisher> North-Holland Publishing Co., </publisher> <year> 1977. </year>
Reference: [8] <author> E. A. Lee and A. Sangiovanni-Vincentelli, </author> <title> "The Tagged Signal Model -A Preliminary Version of a Denotational Framework for Comparing Models of Computation," </title> <institution> ERL Memorandum UCB/ERL M96/33, University of California, Berkeley, </institution> <address> CA 94720, </address> <month> June 4, </month> <year> 1996. </year>
Reference: [9] <author> E. A. Lee and T. M. Parks, </author> <title> "Dataflow Process Networks,", </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 83, no. 5, </volume> <pages> pp. 773-801, </pages> <month> May, </month> <year> 1995. </year>
Reference: [10] <author> Z. Manna and A. Pnueli, </author> <title> "Verifying Hybrid Systems," </title> <note> LNCS 736, </note> <editor> R. L. Grossman, A. Nerode, A. P. Ravn, H. Rischel (Eds.), </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year> <month> 15 </month>
References-found: 10

