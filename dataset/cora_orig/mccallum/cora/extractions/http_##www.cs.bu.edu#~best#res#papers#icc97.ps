URL: http://www.cs.bu.edu/~best/res/papers/icc97.ps
Refering-URL: http://cs-www.bu.edu/faculty/best/res/Home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: best@cs.bu.edu  kgtjan@cs.bu.edu  
Title: Implementation and Performance Evaluation of TCP Boston A Fragmentation-tolerant TCP Protocol for ATM Networks  
Author: Azer Bestavros Gitae Kim 
Address: Boston, MA 02215  
Affiliation: Computer Science Department Boston University  
Date: June 1997.  
Note: In Proceedings of ICC'97: The IEEE International Conference onCommunications, Montreal, Canada,  
Abstract: In this paper, we overview the implementation of TCP Boston a novel fragmentation-tolerant transport protocol, especially suited for ATM's 53-byte cell-oriented switching architecture. TCP Boston integrates a standard TCP/IP protocol, such as Reno or Vegas, with a powerful redundancy control mechanism based on AIDAan adaptive version of Rabin's IDA dispersal and reconstruction algorithms. Our results show that TCP Boston improves TCP/IP's performance over ATMs for both network-centric metrics (e.g., effective throughput) and application-centric metrics (e.g., response time). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ANSI. </author> <title> AAL5 A New High Speed Data Transfer AAL. </title> <note> In ANSI T1S1.5 91-449. </note> <month> November </month> <year> 1991. </year>
Reference-contexts: The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5)the emerging, most common AAL for TCP/IP <ref> [1] </ref> over ATMs. AAL5 acts as an interface between the IP and ATM layers; it is responsible for the task of dividing TCP/IP's large data units (i.e., the TCP/IP packets) into sets of 48-byte data units called cells. <p> The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets <ref> [1, 11] </ref>. AAL divides IP packets into 48-byte units for trans 2 This enables the receiver to send duplicate ACKs to signal congestion to the sender. mission as ATM cells, and appends 0 to 47 bytes of padding to the end of data.
Reference: [2] <author> G. Armitage and K. Adams. </author> <title> Packet Reassembly During Cell Loss. </title> <journal> IEEE Network Mag., </journal> <volume> 7(5):2634, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: There have been a number of attempts to remedy this problem by introducing additional switch-level functionalities to preserve throughput when TCP/IP is employed over ATM. Examples include the Selective Cell Discard (SCD) <ref> [2] </ref> (called Par fl This work has been partially funded by NSF grant CCR-9308344. tial Packet Discard (PPD) in [17]) and the Early Packet Discard (EPD) [17].
Reference: [3] <author> R. Atkinson. </author> <title> Default IP MTU for use over ATM AAL5. </title> <booktitle> In RFC 1626. </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Four different packet sizes were selected to reflect maximum transfer unit (MTU) of popular standards: 512 bytes for IP packets, 1,518 bytes for Ethernet, 4,352 bytes for FDDI link standards [14], and 9,180 bytes which is the recommended packet size for IP over ATM <ref> [3] </ref>. The values for the TCP window size are 8 kB, 16 kB, 32 kB, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells. The LBNL Network Simulator (ns) [10] was used for both packet-switched and ATM network simulations.
Reference: [4] <author> A. Bestavros. SETH: </author> <title> A VLSI chip for the real-time information dispersal and retrieval for security and fault-tolerance. </title> <booktitle> In Proceedings of ICPP'90, The 1990 International Conference on Parallel Processing, </booktitle> <address> Chicago, Illinois, </address> <month> August </month> <year> 1990. </year>
Reference-contexts: Figure 1 illustrates the dispersal, transmission, and reconstruction of an object using IDA. The dispersal and reconstruction operations are simple linear transformations using irreducible polynomial arithmetic, which can be performed in real-time <ref> [4] </ref>. In IDA, there is no distinction between data and parity. It is this feature that makes it possible to scale the amount of redundancy used in IDA. Indeed, this is the basis for Adaptive IDA (AIDA) [5].
Reference: [5] <author> A. Bestavros. </author> <title> An adaptive information dispersal algorithm for time-critical reliable communication. </title> <editor> In I. Frisch, M. Malek, and S. Panwar, editors, </editor> <title> Network Management and Control, Volume II. </title> <publisher> Plenum Publishing Corporation, </publisher> <address> New York, New York, </address> <year> 1994. </year>
Reference-contexts: In IDA, there is no distinction between data and parity. It is this feature that makes it possible to scale the amount of redundancy used in IDA. Indeed, this is the basis for Adaptive IDA (AIDA) <ref> [5] </ref>. Using AIDA, a bandwidth allocation operation is inserted after the dispersal operation but prior to transmission. This bandwidth allocation step allows the system to scale the amount of redundancy used in the transmission. <p> The results of these experiments are presented in [6]. 4. Summary TCP Boston integrates a standard TCP/IP protocol, such as Reno [13] or Vegas [8], with a powerful redundancy control mechanism based on AIDA encoding <ref> [5] </ref> to turn the fragmentation of IP packets [17] into an advantagethus enhancing the performance of TCP/IP in general and its performance in ATM environments in particular. In this paper, we presented the implementation of TCP Boston and briefly summarized its performance characteristics.
Reference: [6] <author> A. Bestavros and G. Kim. </author> <title> TCP Boston: A Fragmentation-tolerant TCP Protocol for ATM Networks. </title> <booktitle> In Proceedings of Infocom'97: The IEEE International Conference on Computer Communication, </booktitle> <address> Kobe, Japan, </address> <month> April </month> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: Due to space limitations, we only present the baseline simual-tion results. For a more elaborate treatment, we refer the reader to <ref> [6] </ref>. The simulated network consists of a single ATM switch connecting 16 source nodes and 1 sink node. The link bandwidth in the network is set to 1.5 Mbps with propagation delay of 10 msec. <p> Thus, for large-size file transmissions, the impact on the response time may be non-negligible, even when the buffer size is moderately large. We have conducted a host of experiments to further characterize the performance of TCP Boston under various conditions. The results of these experiments are presented in <ref> [6] </ref>. 4.
Reference: [7] <author> A. Bianco. </author> <title> Performance of the TCP Protocol over ATM Networks. </title> <booktitle> In Proceedingds of the 3rd International Conference on Computer Communications and Networks, </booktitle> <pages> pages 170177, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: However, the introduction of the Asynchronous Transfer Mode (ATM) technology and attempts to integrate that technology with IP protocols have raised many questions regarding the effectiveness of using TCP/IP over ATM networks <ref> [7, 12, 17] </ref>. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5)the emerging, most common AAL for TCP/IP [1] over ATMs.
Reference: [8] <author> L. Brakmo, S. O'Maley, and L. Peterson. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <type> Technical Report TR 94 04, </type> <institution> The University of Arizona Computer Science Department, </institution> <address> Tucson, AZ 85721, </address> <month> Febrary </month> <year> 1994. </year>
Reference-contexts: Since these other protocols do not support forward error correction, this feature of TCP Boston had to be turned off. (3) To work properly, the dynamic redundancy control mechanism of TCP Boston requires a congestion avoidance algorithm that provides accurate forecasting of network congestion (e.g., TCP Vegas <ref> [8] </ref>). <p> We have conducted a host of experiments to further characterize the performance of TCP Boston under various conditions. The results of these experiments are presented in [6]. 4. Summary TCP Boston integrates a standard TCP/IP protocol, such as Reno [13] or Vegas <ref> [8] </ref>, with a powerful redundancy control mechanism based on AIDA encoding [5] to turn the fragmentation of IP packets [17] into an advantagethus enhancing the performance of TCP/IP in general and its performance in ATM environments in particular.
Reference: [9] <author> T. Chen and S. Liu. </author> <title> ATM Switching System. </title> <publisher> Artech House, Inc., </publisher> <address> 685 Canton St., Norwood, Ma 02062, </address> <year> 1995. </year>
Reference-contexts: The link bandwidth in the network is set to 1.5 Mbps with propagation delay of 10 msec. This configuration simulates a WAN environment with a radius of 3,000 km and a bottleneck link bandwidth of 1.5 Mbps. The ATM switch is a simple, 16-port output-buffered single-stage switch <ref> [9] </ref>. The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets [1, 11].
Reference: [10] <author> S. Floyd. </author> <title> Simulator Tests. </title> <note> Available from ftp://ftp. ee.lbl.gov/papers/simtests.ps.Z. ns(v1.0b4) is available at http://www-nrg.ee.lbl.gov/ nrg., </note> <month> July </month> <year> 1995. </year>
Reference-contexts: The values for the TCP window size are 8 kB, 16 kB, 32 kB, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells. The LBNL Network Simulator (ns) <ref> [10] </ref> was used for both packet-switched and ATM network simulations. To simulate TCP Boston, we modified ns extensively to implement the three main modules described in the previous section.
Reference: [11] <author> A. Forum. </author> <title> ATM User-Network Interface Specification. </title> <publisher> Pretice Hall, Inc, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1993. </year>
Reference-contexts: The output buffer is managed using FIFO scheduling, and cells in input ports are served in a round-robin fashion to ensure fairness. In our simulator, the ATM Adaptation Layer (AAL) implements the basic functions found in AAL5, namely fragmentation and reconstruction of IP packets <ref> [1, 11] </ref>. AAL divides IP packets into 48-byte units for trans 2 This enables the receiver to send duplicate ACKs to signal congestion to the sender. mission as ATM cells, and appends 0 to 47 bytes of padding to the end of data.
Reference: [12] <author> M. Hassan. </author> <title> Impact of Cell Loss on the Efficiency of TCP/IP over ATM. </title> <booktitle> In Proceedings of the 3rd International Conference on Computer Communications and Networks, </booktitle> <pages> pages 165169, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: However, the introduction of the Asynchronous Transfer Mode (ATM) technology and attempts to integrate that technology with IP protocols have raised many questions regarding the effectiveness of using TCP/IP over ATM networks <ref> [7, 12, 17] </ref>. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5)the emerging, most common AAL for TCP/IP [1] over ATMs.
Reference: [13] <author> V. Jacobson. </author> <title> Berkeley TCP Evolution from 4.3-Tahoe to 4.3-Reno. </title> <booktitle> In Proceedings of the British Columbia Internet Engineering Task Force, </booktitle> <month> July </month> <year> 1990. </year>
Reference-contexts: This required that our measurements be unaffected by the forward error correction capability provided by AIDA, which is enabled through spatial redundancy. (2) We wanted to compare the performance of TCP Boston with that of other TCP implementations (e.g., TCP Reno <ref> [13] </ref>) with and without switch-level enhancements (e.g., EPD [17]). <p> We have conducted a host of experiments to further characterize the performance of TCP Boston under various conditions. The results of these experiments are presented in [6]. 4. Summary TCP Boston integrates a standard TCP/IP protocol, such as Reno <ref> [13] </ref> or Vegas [8], with a powerful redundancy control mechanism based on AIDA encoding [5] to turn the fragmentation of IP packets [17] into an advantagethus enhancing the performance of TCP/IP in general and its performance in ATM environments in particular.
Reference: [14] <author> S. Mirchandani and R. Khanna, </author> <title> editors. FDDI Technology and Applications. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1993. </year>
Reference-contexts: Four different packet sizes were selected to reflect maximum transfer unit (MTU) of popular standards: 512 bytes for IP packets, 1,518 bytes for Ethernet, 4,352 bytes for FDDI link standards <ref> [14] </ref>, and 9,180 bytes which is the recommended packet size for IP over ATM [3]. The values for the TCP window size are 8 kB, 16 kB, 32 kB, and 64 kB. Buffer sizes used for the ATM switch are 64, 256, 512, 1,000, 2,000, and 4,000 cells.
Reference: [15] <author> J. Postel. </author> <title> Transmission Control Protocol. </title> <booktitle> In RFC 793. </booktitle> <month> Septem-ber </month> <year> 1981. </year>
Reference: [16] <author> M. O. Rabin. </author> <title> Efficient dispersal of information for security, load balancing and fault tolerance. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 36(2):335348, </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: AIDA is an elaboration on the Information Dispersal Algorithm (IDA) of Michael O. Rabin <ref> [16] </ref>. To understand how IDA works, consider a segment S of a data object to be transmitted. Let S consist of m fragments (hereinafter called cells).
Reference: [17] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of TCP Traffic over ATM Networks. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 13(4):633641, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: However, the introduction of the Asynchronous Transfer Mode (ATM) technology and attempts to integrate that technology with IP protocols have raised many questions regarding the effectiveness of using TCP/IP over ATM networks <ref> [7, 12, 17] </ref>. The poor performance of TCP over ATMs is mainly due to packet fragmentation, which occurs when an IP packet flows into an ATM virtual circuit through the AAL5 (ATM Adaptation Layer 5)the emerging, most common AAL for TCP/IP [1] over ATMs. <p> Examples include the Selective Cell Discard (SCD) [2] (called Par fl This work has been partially funded by NSF grant CCR-9308344. tial Packet Discard (PPD) in <ref> [17] </ref>) and the Early Packet Discard (EPD) [17]. In SCD, once a cell c is dropped at a switch, all subsequent cells from the packet to which c belongs are dropped by the switch. <p> Examples include the Selective Cell Discard (SCD) [2] (called Par fl This work has been partially funded by NSF grant CCR-9308344. tial Packet Discard (PPD) in <ref> [17] </ref>) and the Early Packet Discard (EPD) [17]. In SCD, once a cell c is dropped at a switch, all subsequent cells from the packet to which c belongs are dropped by the switch. <p> Notice that both SCD and EPD require modifications to switch-level software. Moreover, these modifications require the switch-level to be aware of IP packet boundariesa violation of the layering principle that was deemed unavoidable for performance purposes in <ref> [17] </ref>. The simulations described in [17] show that both SCD and EPD improve the effective throughput of TCP/IP over ATMs. In particular, it was shown that the effective throughput achievable using EPD approaches that of TCP/IP in the absence of fragmentation. <p> Notice that both SCD and EPD require modifications to switch-level software. Moreover, these modifications require the switch-level to be aware of IP packet boundariesa violation of the layering principle that was deemed unavoidable for performance purposes in <ref> [17] </ref>. The simulations described in [17] show that both SCD and EPD improve the effective throughput of TCP/IP over ATMs. In particular, it was shown that the effective throughput achievable using EPD approaches that of TCP/IP in the absence of fragmentation. However, these results were obtained for a network consisting of a single ATM switch. <p> This required that our measurements be unaffected by the forward error correction capability provided by AIDA, which is enabled through spatial redundancy. (2) We wanted to compare the performance of TCP Boston with that of other TCP implementations (e.g., TCP Reno [13]) with and without switch-level enhancements (e.g., EPD <ref> [17] </ref>). Since these other protocols do not support forward error correction, this feature of TCP Boston had to be turned off. (3) To work properly, the dynamic redundancy control mechanism of TCP Boston requires a congestion avoidance algorithm that provides accurate forecasting of network congestion (e.g., TCP Vegas [8]). <p> The results of these experiments are presented in [6]. 4. Summary TCP Boston integrates a standard TCP/IP protocol, such as Reno [13] or Vegas [8], with a powerful redundancy control mechanism based on AIDA encoding [5] to turn the fragmentation of IP packets <ref> [17] </ref> into an advantagethus enhancing the performance of TCP/IP in general and its performance in ATM environments in particular. In this paper, we presented the implementation of TCP Boston and briefly summarized its performance characteristics.
References-found: 17

