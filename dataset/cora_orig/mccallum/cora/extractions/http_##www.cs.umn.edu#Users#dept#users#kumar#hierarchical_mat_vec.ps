URL: http://www.cs.umn.edu/Users/dept/users/kumar/hierarchical_mat_vec.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kumar/
Root-URL: http://www.cs.umn.edu
Email: sameh-@cs.umn.edu  
Title: Parallel Matrix-Vector Product Using Approximate Hierarchical Methods  
Author: Ananth Grama, Vipin Kumar, Ahmed Sameh -ananth, kumar, 
Address: Minneapolis, MN 55455  
Affiliation: Department of Computer Science, University of Minnesota  
Abstract: Matrix-vector products (mat-vecs) form the core of iterative methods used for solving dense linear systems. Often, these systems arise in the solution of integral equations used in electromagnetics, heat transfer, and wave propagation. In this paper, we present a parallel approximate method for computing mat-vecs used in the solution of integral equations. We use this method to compute dense mat-vecs of hundreds of thousands of elements. The combined speedups obtained from the use of approximate methods and parallel processing represent an improvement of several orders of magnitude over exact mat-vecs on uniprocessors. We demonstrate that our parallel formulation incurs minimal parallel processing overhead and scales up to a large number of processors. We study the impact of varying the accuracy of the approximate mat-vec on overall time and on parallel efficiency. fl This work was supported by IST/BMDO through Army Research Office contract DA/DAAH04-93-G-0080, NSF grant NSG/1RI-9216941, and by Army High Performance Computing Research Center under the auspices of the Department of the Army, Army Research Laboratory cooperative agreement number DAAH04-95-2-0003/contract number DAAH04-95-C-0008, the content of which does not necessarily reflect the position or the policy of the government, and no official endorsement should be inferred. Access to computing facilities were provided by Minnesota Supercomputer Institute, Cray Research Inc. and by the Pitts-burgh Supercomputing Center. Related papers are available via WWW at URL: http://www.cs.umn.edu/users/kumar/papers.html. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. W. Appel. </author> <title> An efficient program for many-body simulation. </title> <journal> SIAM Journal of Computing, </journal> <volume> 6, </volume> <year> 1985. </year>
Reference-contexts: This forms the basis of hierarchical methods. These methods provide systematic ways of aggregating entities and computing interactions while controlling the overall error in modeling. Algorithms based on hierarchical techniques include Barnes-Hut [2], Fast Multipole [7], and Appel's <ref> [1] </ref> algorithms. Approximating long range interactions in this manner reduces the sequential complexity of typical simulations involving n particles from O (n 2 ) to O (n log n) or O (n).
Reference: [2] <author> J. Barnes and P. Hut. </author> <title> A hierarchical o(n log n) force calculation algorithm. </title> <journal> Nature, </journal> <volume> 324, </volume> <year> 1986. </year>
Reference-contexts: Using this approach, the total number of interactions in the system can be reduced significantly. This forms the basis of hierarchical methods. These methods provide systematic ways of aggregating entities and computing interactions while controlling the overall error in modeling. Algorithms based on hierarchical techniques include Barnes-Hut <ref> [2] </ref>, Fast Multipole [7], and Appel's [1] algorithms. Approximating long range interactions in this manner reduces the sequential complexity of typical simulations involving n particles from O (n 2 ) to O (n log n) or O (n). <p> The coupling matrix is never computed explicitly. Instead panels are aggregated and their impact on other panels is expressed in terms of multipole expansions. A number of hierarchical techniques have been proposed for particle dynamics. Of these, the methods of Barnes and Hut <ref> [2] </ref>, and the Fast Multipole Method [7] have gained widespread popularity. In this paper, we use an augmented version of the Barnes-Hut method for computing the mat-vecs. The Barnes-Hut method was originally presented for astrophysical simulations. Two astrophysical bodies can be adequately represented by their center-of-mass.
Reference: [3] <author> J. A. Board, J. W. Causey, J. F. Leathrum, A. Windemuth, and K. Schulten. </author> <title> Accelerated molecular dynamics with the fast mul-tipole algorithm. </title> <institution> Chem. Phys. Let., 198:89, </institution> <year> 1992. </year>
Reference-contexts: Parallel formulations of hierarchical methods involve partitioning the domain among various processors with the combined objectives of optimizing communication and balancing load. If particle densities are uniform across the domain, these objectives are easily met <ref> [3, 14, 9, 10, 6] </ref>. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives.
Reference: [4] <author> Ananth Grama, Vipin Kumar, and Ahmad Sameh. </author> <title> Scalable parallel formulations of the barnes-hut method for n-body simulations. </title> <booktitle> In Supercomputing '94 Proceedings, </booktitle> <year> 1994. </year>
Reference-contexts: For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives. In <ref> [4, 5] </ref> we present alternate schemes for irregular distributions that improve on the performance of the earlier schemes. In this paper, we present a highly scalable parallel formulation of a mat-vec based on approximate hierarchical techniques that incorporates key desirable features of all of these formulations. <p> The schemes of Singh et. al. (cost-zones) and Warren and Salmon (WS) are data shipping schemes. We had demonstrated the equivalence of these schemes in <ref> [4] </ref>. These schemes incur the following overheads: * Since a point may interact with any node in a tree, it must be possible to address a node inside a tree quickly. <p> Singh et. al. [11] show that by ordering the sons of a node in a specific manner while constructing the tree, it is possible to ensure that the partitions assigned to processors are contiguous in space. We have shown <ref> [4] </ref> that this ordering is identical to constructing a Peano-Hilbert ordering of the nodes. 3.3 Performance of the New Formulation The parallel formulation presented in this section offers several enhancements over the existing formulations.
Reference: [5] <author> Ananth Grama, Vipin Kumar, and Ahmed Sameh. </author> <title> On n-body simulations using message passing parallel computers. </title> <booktitle> In Proceedings of the SIAM Conference on Parallel Processing, </booktitle> <address> San Francisco, </address> <year> 1995. </year> <month> 18 </month>
Reference-contexts: For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives. In <ref> [4, 5] </ref> we present alternate schemes for irregular distributions that improve on the performance of the earlier schemes. In this paper, we present a highly scalable parallel formulation of a mat-vec based on approximate hierarchical techniques that incorporates key desirable features of all of these formulations.
Reference: [6] <author> L. Greengard and W. Gropp. </author> <title> A parallel version of the fast mul--tipole method. </title> <booktitle> Parallel Processing for Scientific Computing, </booktitle> <pages> pages 213-222, </pages> <year> 1987. </year>
Reference-contexts: Parallel formulations of hierarchical methods involve partitioning the domain among various processors with the combined objectives of optimizing communication and balancing load. If particle densities are uniform across the domain, these objectives are easily met <ref> [3, 14, 9, 10, 6] </ref>. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives.
Reference: [7] <author> L. Greengard and V. Rokhlin. </author> <title> A fast algorithm for particle simulations. </title> <journal> J. Comp. Physics, </journal> <volume> 73 </volume> <pages> 325-348, </pages> <year> 1987. </year>
Reference-contexts: This forms the basis of hierarchical methods. These methods provide systematic ways of aggregating entities and computing interactions while controlling the overall error in modeling. Algorithms based on hierarchical techniques include Barnes-Hut [2], Fast Multipole <ref> [7] </ref>, and Appel's [1] algorithms. Approximating long range interactions in this manner reduces the sequential complexity of typical simulations involving n particles from O (n 2 ) to O (n log n) or O (n). <p> The coupling matrix is never computed explicitly. Instead panels are aggregated and their impact on other panels is expressed in terms of multipole expansions. A number of hierarchical techniques have been proposed for particle dynamics. Of these, the methods of Barnes and Hut [2], and the Fast Multipole Method <ref> [7] </ref> have gained widespread popularity. In this paper, we use an augmented version of the Barnes-Hut method for computing the mat-vecs. The Barnes-Hut method was originally presented for astrophysical simulations. Two astrophysical bodies can be adequately represented by their center-of-mass. This corresponds to a monopole expansion.
Reference: [8] <author> Vipin Kumar, Ananth Grama, Anshul Gupta, and George Karypis. </author> <title> Introduction to Parallel Computing: Algorithm Design and Analysis. </title> <address> Benjamin/Cummings, Redwod City, </address> <year> 1994. </year>
Reference-contexts: It is easy to see that the subtree rooted at the branch node is an accurate representation of the Barnes-Hut tree. After constructing the local trees, the branch nodes are collected and broadcast to all the processors using a single all-to-all broadcast operation <ref> [8] </ref>. The non-local branch nodes thus received by each processor are inserted into their respective trees and the top levels of the tree are reconstructed by all processors independently. <p> All particles lying in the tree between load boundaries iW=p and (i + 1)W=p are collected in a bin for processor i. After each processor goes through its local tree, the points are communicated to the designated processors using a single all-to-all personalized communication <ref> [8] </ref>. In this load balancing technique, the tree is traversed in a left to right manner. If the sons of a node are ordered arbitrarily, the resulting partitions are not guaranteed to be physically contiguous. <p> The computation however increases. This implies that as the accuracy is increased, the efficiency of our formulation increases. 4 Experimental Results The objectives of this experimental study are as follows: * Accurate methods for computing mat-vecs parallelize very well <ref> [8] </ref>. Approximate methods for computing mat-vecs are considerably faster in the serial context. However, their parallelizability has not been explored.
Reference: [9] <author> J. F. Leathrum and J. A. </author> <title> Board. Mapping the adaptive fast mul-tipole algorithm into mimd systems. </title> <editor> In P. Mehrotra and J. Saltz, editors, </editor> <title> Unstructured Scientific Computation on Scalable Multiprocessors. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: Parallel formulations of hierarchical methods involve partitioning the domain among various processors with the combined objectives of optimizing communication and balancing load. If particle densities are uniform across the domain, these objectives are easily met <ref> [3, 14, 9, 10, 6] </ref>. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives.
Reference: [10] <author> K. E. Schmidt and M. A. Lee. </author> <title> Implementing the fast multipole method in three dimensions. </title> <journal> J. Stat. Phys., </journal> <volume> 63:1120, </volume> <year> 1991. </year>
Reference-contexts: Parallel formulations of hierarchical methods involve partitioning the domain among various processors with the combined objectives of optimizing communication and balancing load. If particle densities are uniform across the domain, these objectives are easily met <ref> [3, 14, 9, 10, 6] </ref>. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives.
Reference: [11] <author> J. Singh, C. Holt, T. Totsuka, A. Gupta, and J. Hennessy. </author> <title> Load balancing and data locality in hierarchical n-body methods. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 1994 (to appear). </note>
Reference-contexts: If particle densities are uniform across the domain, these objectives are easily met [3, 14, 9, 10, 6]. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. <ref> [11] </ref> and Warren and Salmon [13, 12] present schemes for irregular distributions that try to meet these objectives. In [4, 5] we present alternate schemes for irregular distributions that improve on the performance of the earlier schemes. <p> It is possible to view a particle as a computational entity. Since each particle requires traversing a different number of nodes in the tree, the computational load associated with each particle is not the same. However, as noted in <ref> [11, 13] </ref>, since the particles are not expected to move significantly between two time-steps, it is possible to use the number of interactions during the current time-step as an estimate of its load in the next time-step. Assume that there is an initial assignment of particles to processors. <p> In this load balancing technique, the tree is traversed in a left to right manner. If the sons of a node are ordered arbitrarily, the resulting partitions are not guaranteed to be physically contiguous. Singh et. al. <ref> [11] </ref> show that by ordering the sons of a node in a specific manner while constructing the tree, it is possible to ensure that the partitions assigned to processors are contiguous in space.
Reference: [12] <author> M. Warren and J. Salmon. </author> <title> Astrophysical n-body simulations using hierarchical tree data structures. </title> <booktitle> In Proceedings of Supercomputing Conference, </booktitle> <year> 1992. </year>
Reference-contexts: If particle densities are uniform across the domain, these objectives are easily met [3, 14, 9, 10, 6]. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon <ref> [13, 12] </ref> present schemes for irregular distributions that try to meet these objectives. In [4, 5] we present alternate schemes for irregular distributions that improve on the performance of the earlier schemes.
Reference: [13] <author> M. Warren and J. Salmon. </author> <title> A parallel hashed oct tree n-body algorithm. </title> <booktitle> In Proceedings of Supercomputing Conference, </booktitle> <year> 1993. </year>
Reference-contexts: If particle densities are uniform across the domain, these objectives are easily met [3, 14, 9, 10, 6]. For irregular distributions, these objectives are hard to achieve because of the highly unstructured nature of both computation and communication. Singh et al. [11] and Warren and Salmon <ref> [13, 12] </ref> present schemes for irregular distributions that try to meet these objectives. In [4, 5] we present alternate schemes for irregular distributions that improve on the performance of the earlier schemes. <p> It is possible to view a particle as a computational entity. Since each particle requires traversing a different number of nodes in the tree, the computational load associated with each particle is not the same. However, as noted in <ref> [11, 13] </ref>, since the particles are not expected to move significantly between two time-steps, it is possible to use the number of interactions during the current time-step as an estimate of its load in the next time-step. Assume that there is an initial assignment of particles to processors. <p> After this phase, each processor has the top few levels of the tree enveloped by the branch nodes, and the complete subtrees rooted at its branch nodes. This phase of the algorithm is identical to the tree construction phase of Warren and Salmon <ref> [13] </ref>. 3.2.2 Force Computation In this phase, each particle traverses the tree and computes required interactions. For each particle assigned to a processor, it starts at the root node of the tree (which is locally available). It traverses the tree until it reaches a node that is not locally available.

References-found: 13

