URL: http://www.cs.indiana.edu/database/Publications/er95.ps
Refering-URL: http://www.cs.indiana.edu/database/Publications/index.html
Root-URL: http://www.cs.indiana.edu
Email: fgandhim,edrbtsn,vguchtg@cs.indiana.edu  
Title: Leveled Entity Relationship Model  
Author: Munish Gandhi Edward L. Robertson Dirk Van Gucht 
Address: Bloomington, IN-47405.  
Affiliation: Computer Science Department, Indiana University,  
Abstract: Layering ER diagrams has been a key tool to abstract the complexity of large data schemas generated by enterprise modeling. However, the current approaches have a certain impedance between successive steps of refining (or abstracting) ER diagrams. First, most approaches do not have a well-defined correspondence between an entity at a higher level and the entity cluster at a lower level. Second, a relationship to a subentity from an entity in a higher plane is modeled using a relationship which breaks the encapsulation of the entity which contains the subentity. Clearly, it would be nice to have non-encroaching relationships to model such situations. Finally, a refinement (abstraction) step adds (deletes) encroaching relationships and thus cascades changes to the schema beyond the current entity being refined (entity cluster being abstracted). This paper presents the Leveled Entity Relationship Model which demonstrates how one may have an abstraction formalism which does satisfy the above properties. 
Abstract-found: 1
Intro-found: 1
Reference: [Che76] <author> P. P. Chen. </author> <title> The Entity-Relationship Model Toward a unified view of data. </title> <journal> ACM Transactions in Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: This is done using the defined as relationship, which relates the aspect Method with the DEFINITION. Fig. 1. A simple LER diagram 2 Definition 2.1 Concepts The Leveled Entity Relationship (LER) model extends the essential concepts in the ER model <ref> [Che76] </ref> by enriching them to fulfill the special requirements for modeling structured data. An LER entity may be atomic (like an ER entity) or it may have an internal structure. <p> We have not included structural (cardinality, membership, : : : ) constraints in our formalism because we are developing a more comprehensive notion of constraints. However, we do not foresee any special problem in specifying constraints using any of the commonly used techniques <ref> [Che76, RBB + 85, EN89] </ref>. The need for relationships of degree higher than three or for relationships to have associated properties is one of user communication. Such relationships are best handled in theory and implementation through the creation of an entity representing that relationship.
Reference: [CJA90] <author> C. R. Carlson, W. Ji, and A. K. Arora. </author> <title> The Nested Entity-Relationship Model. </title> <editor> In F.H. Lochovsky, editor, </editor> <booktitle> Entity-Relationship Approach to Database Design and Querying, </booktitle> <pages> pages 221-236, </pages> <publisher> North-Holland, </publisher> <address> 1990. </address> <publisher> El-sevier Science Publishers B. V. </publisher>
Reference-contexts: A formalism which permits layering would enable one to concentrate on entities and relationships at one layer of abstraction and tune out elements from other layers. These benefits of layering ER diagrams have been recognized and many models <ref> [FM86, Har88, TWBK89, LV89, CJA90] </ref> which layer ER diagrams have been proposed (section 5 gives their salient features). A common thread runs through these approaches. An ER diagram at a lower level is abstracted to an entity at a higher level. However, these formalisms have the following limitations. <p> In this approach, an ER diagram at a lower level appears as an entity on the next level. The Nested Entity-Relationship Model <ref> [CJA90] </ref> improves on the above by allowing both entities and relationships to have a deeper structure. 2 We do not intend this to be a comprehensive survey of the work in this area. We consider works which inspired this work and resonate most closely with it.
Reference: [Cod79] <author> E. F. Codd. </author> <title> Extending the Database Relational Model to Capture More Meaning. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 4(4), </volume> <month> December </month> <year> 1979. </year>
Reference-contexts: Aspects with a domain of OIDs are oid-based. Each entity has an oid-based aspect which reflects the core identity of the entity. This concept of a self-specifying aspect for every entity is similar to a surrogate for entity every relation in RM/T <ref> [Cod79] </ref>. We'll sometimes refer to this aspect as "self", even though it has the same name as its entity. An aspect may be single-valued or multi-valued depending on whether the corresponding feature needs a single element or a set of elements from its domain to describe itself completely.
Reference: [Dat83] <author> C. J. Date. </author> <title> An Introduction to Database Systems, </title> <booktitle> volume 2 of The Systems Programming Series. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <month> July </month> <year> 1983. </year>
Reference-contexts: In [LV89] an ER diagram at a lower level exports some of its entities so that they may be used as roles in relationships in a diagram at a higher level. 6 Conclusion A data model consists of three components object types, operators and integrity rules <ref> [Dat83] </ref>. In this paper, we have introduced aspects, entities, and relationships as the basic object types in LER. We also placed general integrity constraints on LER schema and instances.
Reference: [EN89] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of database systems. </title> <publisher> Ben-jamin/Cummings Publishing Company, Inc., </publisher> <address> RedWood City, California, </address> <year> 1989. </year>
Reference-contexts: We have not included structural (cardinality, membership, : : : ) constraints in our formalism because we are developing a more comprehensive notion of constraints. However, we do not foresee any special problem in specifying constraints using any of the commonly used techniques <ref> [Che76, RBB + 85, EN89] </ref>. The need for relationships of degree higher than three or for relationships to have associated properties is one of user communication. Such relationships are best handled in theory and implementation through the creation of an entity representing that relationship. <p> The poorly defined correspondence also leads to a mistaken notion of layering as nothing more than aggregation of [SS77] and EER of <ref> [EN89] </ref>. An LER entity at a higher level is necessarily present at a level below as self. This specifies the relationship between the higher level entity in its elemental form as the self and the cluster in the lower layers. Moreover, the database reflects this relationship.
Reference: [EWH85] <author> R. Elmasri, J. Weeldreyer, and A. Hevner. </author> <title> The Category Concept: An Extension to the Entity-Relationship Model. </title> <journal> International Journal on Data and Knowledge Engineering, </journal> <volume> 1(1), </volume> <month> May </month> <year> 1985. </year>
Reference-contexts: In this paper, we have introduced aspects, entities, and relationships as the basic object types in LER. We also placed general integrity constraints on LER schema and instances. We are working towards defining a transaction language for operating on LER databases and incorporating generalization into the LER model <ref> [SS77, EWH85] </ref>. We introduced three notions which we feel make a layering formalism useful for enterprise modeling: a well-defined correspondence between an entity at a higher level and the entity cluster at a lower level, non-encroaching relationships between entities, and consistency between the refinement and abstraction steps.
Reference: [FM86] <author> P. Feldman and D. Miller. </author> <title> Entity Model Clustering: Structuring a Data Model by Abstraction. </title> <journal> Computer Journal, </journal> <volume> 29(4) </volume> <pages> 348-360, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: A formalism which permits layering would enable one to concentrate on entities and relationships at one layer of abstraction and tune out elements from other layers. These benefits of layering ER diagrams have been recognized and many models <ref> [FM86, Har88, TWBK89, LV89, CJA90] </ref> which layer ER diagrams have been proposed (section 5 gives their salient features). A common thread runs through these approaches. An ER diagram at a lower level is abstracted to an entity at a higher level. However, these formalisms have the following limitations. <p> For example, the classes in a product have a structure that is detailed when we zoom in to the corresponding entity. 5 Related Work and Comparisons The Clustered Entity Model <ref> [FM86] </ref> is the one of the early attempts 2 at layering ER diagrams. In this approach, an ER diagram at a lower level appears as an entity on the next level.
Reference: [GS79] <author> C. Gane and T. Sarson. </author> <title> Structured System Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1979. </year>
Reference-contexts: In effect, we hope that the aspect mechanism will permit a cleaner notion of abstraction which helps understanding by localizing the information structure. 5.2 Consistent refinements Aspects also permit a stricter notion of refinement of the LER diagrams than are permitted by other models. In a data flow diagram <ref> [GS79] </ref>, for example, process decomposition maintains input and output data flows. That is, if two processes, A and B, have a data flow between them, the decomposition of A shows up no additional data flows between B and any subprocess of A. Thus, the decomposition is consistent with the abstraction.
Reference: [Har88] <author> D. Harel. </author> <title> On Visual Formalisms. </title> <journal> Communications of the ACM, </journal> <volume> 31(5) </volume> <pages> 514-530, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: A formalism which permits layering would enable one to concentrate on entities and relationships at one layer of abstraction and tune out elements from other layers. These benefits of layering ER diagrams have been recognized and many models <ref> [FM86, Har88, TWBK89, LV89, CJA90] </ref> which layer ER diagrams have been proposed (section 5 gives their salient features). A common thread runs through these approaches. An ER diagram at a lower level is abstracted to an entity at a higher level. However, these formalisms have the following limitations. <p> We consider works which inspired this work and resonate most closely with it. Harel <ref> [Har88] </ref> uses higraphs to layer ER diagrams. A higraph combines topo-logical properties of venn diagrams with edge specifications to specify relationships between sets. Its topological nature, however, interprets leveling as a subset relationship between an entity and its subentity.
Reference: [HZ90] <author> S. Huffman and R. V. Zoeller. </author> <title> A Rule-Based System Tool for Automated ER Model Clustering. </title> <editor> In F.H. Lochovsky, editor, </editor> <booktitle> Entity-Relationship Approach to Database Design and Querying, </booktitle> <pages> pages 221-236, </pages> <publisher> North-Holland, </publisher> <address> 1990. </address> <publisher> Elsevier Science Publishers B. V. </publisher>
Reference-contexts: Since the grade of cohesion is precisely definable, an automated tool can produce a bottom-up clustering of an ER diagram <ref> [HZ90] </ref>. In contrast, LER is a top-down approach in which clustering is completely specified by a designer.
Reference: [LV89] <author> M. Lacroix and M. Vanhoedenaghe. </author> <title> Tool Integration in an Open Environment. </title> <editor> In C. Ghezzi and J.A. McDermid, editors, </editor> <booktitle> 2nd European Software Engineering Conference, Proceedings, </booktitle> <pages> pages 311-324, </pages> <address> Berlin, Hiedelberg, </address> <month> September </month> <year> 1989. </year> <note> Springer-Verlag. </note>
Reference-contexts: A formalism which permits layering would enable one to concentrate on entities and relationships at one layer of abstraction and tune out elements from other layers. These benefits of layering ER diagrams have been recognized and many models <ref> [FM86, Har88, TWBK89, LV89, CJA90] </ref> which layer ER diagrams have been proposed (section 5 gives their salient features). A common thread runs through these approaches. An ER diagram at a lower level is abstracted to an entity at a higher level. However, these formalisms have the following limitations. <p> Moreover, the database reflects this relationship. Surprisingly, notions of well-defined correspondence, consistent refinement, and non-encroaching relationships, though intuitively desirable are not found in the above models. We believe this to be a fundamental contribution of this paper. <ref> [LV89] </ref>, however, does hint at a notion similar to aspects but there is no notion of self. In [LV89] an ER diagram at a lower level exports some of its entities so that they may be used as roles in relationships in a diagram at a higher level. 6 Conclusion A <p> Surprisingly, notions of well-defined correspondence, consistent refinement, and non-encroaching relationships, though intuitively desirable are not found in the above models. We believe this to be a fundamental contribution of this paper. <ref> [LV89] </ref>, however, does hint at a notion similar to aspects but there is no notion of self. In [LV89] an ER diagram at a lower level exports some of its entities so that they may be used as roles in relationships in a diagram at a higher level. 6 Conclusion A data model consists of three components object types, operators and integrity rules [Dat83].
Reference: [RBB + 85] <author> D. Reiner, M. Brodie, G. Brown, M. Friedell, D. Kramlich, J. Lehman, and A. Rosenthal. </author> <title> The Database Design and Evaluation Workbench (DDEW) Project at CCA. </title> <journal> Database Engineering, </journal> <volume> 7(4) </volume> <pages> 10-15, </pages> <year> 1985. </year>
Reference-contexts: We have not included structural (cardinality, membership, : : : ) constraints in our formalism because we are developing a more comprehensive notion of constraints. However, we do not foresee any special problem in specifying constraints using any of the commonly used techniques <ref> [Che76, RBB + 85, EN89] </ref>. The need for relationships of degree higher than three or for relationships to have associated properties is one of user communication. Such relationships are best handled in theory and implementation through the creation of an entity representing that relationship.
Reference: [SS77] <author> J. Smith and D. Smith. </author> <title> Database Abstractions: Aggregation and Generalization. </title> <journal> TODS, </journal> <volume> 2(2), </volume> <month> June </month> <year> 1977. </year>
Reference-contexts: Thus, such models are used only as communication tools the database corresponds to only the lowermost layer and can not take advantage of the layering information in the design. The poorly defined correspondence also leads to a mistaken notion of layering as nothing more than aggregation of <ref> [SS77] </ref> and EER of [EN89]. An LER entity at a higher level is necessarily present at a level below as self. This specifies the relationship between the higher level entity in its elemental form as the self and the cluster in the lower layers. Moreover, the database reflects this relationship. <p> In this paper, we have introduced aspects, entities, and relationships as the basic object types in LER. We also placed general integrity constraints on LER schema and instances. We are working towards defining a transaction language for operating on LER databases and incorporating generalization into the LER model <ref> [SS77, EWH85] </ref>. We introduced three notions which we feel make a layering formalism useful for enterprise modeling: a well-defined correspondence between an entity at a higher level and the entity cluster at a lower level, non-encroaching relationships between entities, and consistency between the refinement and abstraction steps.
Reference: [TWBK89] <author> T. J. Teorey, G. Wei, D. L. Bolton, and J. A. Koenig. </author> <title> ER Model Clustering as an Aid for User Communication and Documentation in Database Design. </title> <journal> Communications of the ACM, </journal> <volume> 32(8) </volume> <pages> 975-987, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: A formalism which permits layering would enable one to concentrate on entities and relationships at one layer of abstraction and tune out elements from other layers. These benefits of layering ER diagrams have been recognized and many models <ref> [FM86, Har88, TWBK89, LV89, CJA90] </ref> which layer ER diagrams have been proposed (section 5 gives their salient features). A common thread runs through these approaches. An ER diagram at a lower level is abstracted to an entity at a higher level. However, these formalisms have the following limitations. <p> These layouts are different ways of viewing a user manual, and hence it makes sense to subsume them within the user manual. The satellites and the center may not be dependent on each other in any other way other than that they belong to the same functional area <ref> [TWBK89] </ref>. [TWBK89] also provides examples for clustering using this criterion. One may internalize the sub-entities in this case to reduce entity clutter. Mapping to relationships The LER relationship models binary relationship between entities. Such a relationship may be used to relate internals of entities. <p> These layouts are different ways of viewing a user manual, and hence it makes sense to subsume them within the user manual. The satellites and the center may not be dependent on each other in any other way other than that they belong to the same functional area <ref> [TWBK89] </ref>. [TWBK89] also provides examples for clustering using this criterion. One may internalize the sub-entities in this case to reduce entity clutter. Mapping to relationships The LER relationship models binary relationship between entities. Such a relationship may be used to relate internals of entities. <p> Its topological nature, however, interprets leveling as a subset relationship between an entity and its subentity. Thus, higraph based layering is more suited for clustering the specializations of an entity, rather than a general collection of functionally related entities. <ref> [TWBK89] </ref> proposes an ER clustering technique guided by grades of cohesion. The most cohesive structure being that of strong entities surrounded by weak entities. <p> In contrast, LER is a top-down approach in which clustering is completely specified by a designer. Informally, though, our approach suggests the highest importance to grouping based on the enterprises functional area, followed by grouping based on criterion similar to <ref> [TWBK89] </ref>. 5.1 Non-encroaching relationships In each of the above, relating an entity E to a subentity S' in entity E' either requires relationships to go across the boundary of E', or E is replicated (and marked as such) inside E' and then related to S'.
References-found: 14

