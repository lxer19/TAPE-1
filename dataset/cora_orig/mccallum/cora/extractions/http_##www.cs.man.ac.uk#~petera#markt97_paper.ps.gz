URL: http://www.cs.man.ac.uk/~petera/markt97_paper.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~petera/
Root-URL: http://www.cs.man.ac.uk
Title: Notes on the simply typed lambda calculus 1.1.2 Adding extra axioms 1-2 1.1.3 Semantics for
Author: Peter Aczel 
Note: Contents 1 Deduction 1-1 1.1 Inference Systems 1-1 1.1.1 The Definition 1-1  0-1  
Date: June 16, 1998  
Affiliation: Manchester University  
Abstract: 2 Untyped Lambda Calculus 2-1 2.1 Preliminaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2-1 2.1.1 The notion of a function . . . . . . . . . . . . . . . . . . . . . 2-1 2.1.2 Examples of functions . . . . . . . . . . . . . . . . . . . . . . 2-2 2.1.3 Functions as sets . . . . . . . . . . . . . . . . . . . . . . . . . 2-2 2.1.4 Multi-argument functions . . . . . . . . . . . . . . . . . . . . 2-2 2.1.5 Currying . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2-3 2.1.6 The problem of variable clashes . . . . . . . . . . . . . . . . . 2-3 2.2 An Untyped Universe . . . . . . . . . . . . . . . . . . . . . . . . . . 2-3 2.2.1 Some combinators in U . . . . . . . . . . . . . . . . . . . . . 2-4 2.2.2 Some laws of LC . . . . . . . . . . . . . . . . . . . . . . . . . 2-4 2.2.3 Problems with "U = U U " . . . . . . . . . . . . . . . . . . . . 2-5 2.2.4 A more general universe . . . . . . . . . . . . . . . . . . . . . 2-5 2.3 Syntax of LC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2-5 2.3.1 Terms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2-5 2.3.2 Construction Trees . . . . . . . . . . . . . . . . . . . . . . . . 2-6 2.3.3 The de Bruijn terms . . . . . . . . . . . . . . . . . . . . . . . 2-7 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Barendregt, </author> <title> The Lambda Calculus, </title> <publisher> North Holland Publishing Co., </publisher> <address> Ams-terdam. 2nd edition, </address> <year> 1984. </year>
Reference: [2] <author> J. Gallier, </author> <title> "On Girard's "Candidats de Reductibilite", </title> <booktitle> in Logic and Computer Science, </booktitle> <editor> ed. P. Odifreddi, </editor> <volume> Vol. </volume> <booktitle> 31 in APIC studies in Data Processing, </booktitle> <pages> pp. 123-203, </pages> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: [3] <author> J.Gallier, </author> <title> "Constructive Logics, Part I: A tutorial on proof systems and typed -calculi", </title> <journal> Theoretical Computer Science, </journal> <volume> 110, </volume> <pages> 249-339, </pages> <year> 1991. </year>
Reference-contexts: The main purpose of the notes is to act as a tutorial introduction to the three topics it treats and their relationships with each other. The novice reader is advised to read the notes in conjunction with the use of a more thorough text such as [10] or <ref> [3] </ref>, which have more detailed discussions and reference lists than are available here. Almost all the material and its organisation is fairly standard, so that the expert will find little that is new here. But here are some distinctive features of my presentation. 1.
Reference: [4] <author> J. Girard, Y. Lafont and P. Taylor, </author> <title> Proofs and Types, </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 7, </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1989. </year>
Reference: [5] <author> J. Lambek and P.J. Scott, </author> <title> Introduction to higher order categorical logic, </title> <booktitle> Cambridge Studies in Advanced Mathematics 7, </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference: [6] <author> P. Martin-Lof, </author> <title> Intuitionistic Type Theory, </title> <type> Bibliopolis, </type> <institution> Napoli, </institution> <year> 1984. </year>
Reference-contexts: The lectures aimed to give a presentation of the ideas of Martin-Lof's type theory using his `meaning explanations' to justify the rules of inference. For this topic I suggest the references <ref> [6, 7, 8] </ref>, where further references may be found. After the Summer School I became dissatisfied with the approach that I had taken, but did not have enough time to work out an approach that I was satisfied with.
Reference: [7] <author> B. Nordstrom, K. Petersson and J. Smith, </author> <title> Programming in Martin-Lof 's Type Theory, An Inroduction, </title> <booktitle> Monographs on Computer Science 7, </booktitle> <publisher> Oxford University Press, </publisher> <year> 1990. </year>
Reference-contexts: The lectures aimed to give a presentation of the ideas of Martin-Lof's type theory using his `meaning explanations' to justify the rules of inference. For this topic I suggest the references <ref> [6, 7, 8] </ref>, where further references may be found. After the Summer School I became dissatisfied with the approach that I had taken, but did not have enough time to work out an approach that I was satisfied with.
Reference: [8] <author> B. Nordstrom and K. Petersson and J. Smith, </author> <title> "Martin-Lof's Type Theory." </title> <note> A chapter in Handbook of Logic in Computer Science, written in 1994, to appear. (Available by ftp from ftp://ftp.cs.chalmers.se/pub/cs-reports/papers/smith/hlcs.ps.gz) </note>
Reference-contexts: The lectures aimed to give a presentation of the ideas of Martin-Lof's type theory using his `meaning explanations' to justify the rules of inference. For this topic I suggest the references <ref> [6, 7, 8] </ref>, where further references may be found. After the Summer School I became dissatisfied with the approach that I had taken, but did not have enough time to work out an approach that I was satisfied with.
Reference: [9] <author> M. Takahashi, </author> <title> "Parallel Reductions in -Calculus", </title> <journal> Information and Computation, </journal> <volume> 118, </volume> <pages> 120-127, </pages> <year> 1995. </year>
Reference-contexts: But I believe that it is consistent with an intuitionistic set theory in which non-well-founded sets are allowed, so that reasoning with such a set is not so unreasonable, at least for motivational purposes. 3. I use the method of proof introduced in <ref> [9] </ref> to prove the Church-Rosser theo rem. 4. I set up a general framework for giving normalisation and strong normalisation proofs. This seems to me to be worthwhile, as there are now many proofs explicit or implicit in the literature.
Reference: [10] <author> A. S. Troelstra and H. Schwichtenberg, </author> <title> Basic Proof Theory, </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 43, </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1996. </year> <booktitle> Marktoberdorf 1997 Summer School Proceedings 3-10 </booktitle>
Reference-contexts: The main purpose of the notes is to act as a tutorial introduction to the three topics it treats and their relationships with each other. The novice reader is advised to read the notes in conjunction with the use of a more thorough text such as <ref> [10] </ref> or [3], which have more detailed discussions and reference lists than are available here. Almost all the material and its organisation is fairly standard, so that the expert will find little that is new here. But here are some distinctive features of my presentation. 1.
References-found: 10

