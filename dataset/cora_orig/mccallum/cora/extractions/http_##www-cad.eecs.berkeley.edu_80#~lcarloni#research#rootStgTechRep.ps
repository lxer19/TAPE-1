URL: http://www-cad.eecs.berkeley.edu:80/~lcarloni/research/rootStgTechRep.ps
Refering-URL: http://www-cad.eecs.berkeley.edu:80/~lcarloni/research/papersIndex.html
Root-URL: http://www.cs.berkeley.edu
Title: Generation of a Minimal STG from an Implicit Cover  
Author: Luca Carloni Tiziano Villa Timothy Kam Robert Brayton Alberto Sangiovanni-Vincentelli 
Date: June 21, 1996  
Address: Berkeley, CA 94720  
Affiliation: Department of EECS, University of California at Berkeley,  
Abstract: This report describes how to produce a state transition table (or state transition graph) of an FSM reduced by using implicit minimization algorithms. The cases of ISFSM's (minimized implicitly by the program ISM) and PNDFSM's (minimized implicitly by the program PND REDUCE) are considered. A technique to reduce the size of the FSM table description is presented.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Bryant. </author> <title> Graph based algorithm for Boolean function manipulation. </title> <journal> In IEEE Transactions on Computers, </journal> <pages> pages C-35(8):667-691, </pages> <year> 1986. </year>
Reference-contexts: Implicit techniques are based on the idea of operating on discrete sets by their characteristic functions represented by binary decision diagrams (BDD's) <ref> [1] </ref>. For example, the state transition relation of an FSM is represented by the BDD of the characteristic function of its transition relation.
Reference: [2] <author> T. Kam, T. Villa, R. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> A fully implicit algorithm for exact state minimization. </title> <booktitle> In The Proceedings of the Design Automation Conference, </booktitle> <pages> pages 684-690, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Programs to perform implicit state minimization of incompletely specified FSM's (ISFSM's) and pseudo-nondeterministic FSM's (PNDFSM's) have been reported, respectively, in <ref> [2] </ref> and in [3]. These programs read a tabular description of the table and build as an internal representation the reduced ordered binary decision diagrams (ROBDD's or simply BDD's) of the characteristic functions of the next state and output relations representing an FSM. <p> These programs read a tabular description of the table and build as an internal representation the reduced ordered binary decision diagrams (ROBDD's or simply BDD's) of the characteristic functions of the next state and output relations representing an FSM. The computations reported in <ref> [2, 3] </ref> go as far as computing a minimum closed cover of compatibles, but the transition relation of a reduced machine is not defined. Moreover, a conversion from the relational domain back into a compact tabular representation (or state transition graph, STG) of the reduced FSM is missing. <p> In this report we present a solution to these unaddressed problems and show experimental data of a benchmark set of reduced PNDFSM's. 2 Implicit Representation of FSM's We will use the unified implicit framework proposed in <ref> [2] </ref> 1 . Implicit techniques are based on the idea of operating on discrete sets by their characteristic functions represented by binary decision diagrams (BDD's) [1]. For example, the state transition relation of an FSM is represented by the BDD of the characteristic function of its transition relation. <p> n Y (y k , 9x [ A (x) x k ]) 3 Transition Relation of Reduced FSM In Section 3.1 we discuss how to determine the transition relation of a reduced FSM starting from the implicit representation of a closed cover of compatibles as found in the program ISM <ref> [2] </ref>, which minimizes the number of states of an ISFSM. In Section 3.2 we do the same for the program PND REDUCE 2 [3], which minimizes the number of states of a PNDFSM.
Reference: [3] <author> T. Kam, T. Villa, R. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Implicit state minimization of nondeterministic FSM's. </title> <booktitle> In The Proceedings of the International Conference on Computer Design, </booktitle> <pages> pages 250-257, </pages> <month> October </month> <year> 1995. </year> <month> 10 </month>
Reference-contexts: 1 Introduction Programs to perform implicit state minimization of incompletely specified FSM's (ISFSM's) and pseudo-nondeterministic FSM's (PNDFSM's) have been reported, respectively, in [2] and in <ref> [3] </ref>. These programs read a tabular description of the table and build as an internal representation the reduced ordered binary decision diagrams (ROBDD's or simply BDD's) of the characteristic functions of the next state and output relations representing an FSM. <p> These programs read a tabular description of the table and build as an internal representation the reduced ordered binary decision diagrams (ROBDD's or simply BDD's) of the characteristic functions of the next state and output relations representing an FSM. The computations reported in <ref> [2, 3] </ref> go as far as computing a minimum closed cover of compatibles, but the transition relation of a reduced machine is not defined. Moreover, a conversion from the relational domain back into a compact tabular representation (or state transition graph, STG) of the reduced FSM is missing. <p> In Section 3.2 we do the same for the program PND REDUCE 2 <ref> [3] </ref>, which minimizes the number of states of a PNDFSM. The logic variables c; c 0 ; c 00 ; c 0 ; d; p; n denote sets of state variables, while i is a set of input variables and o; o are sets of output variables. <p> 00 d)]g (2) T red (i; c; c 0 ; o) = T red (i; c; c 0 ) 8p [T uple 1 (p)(c p) ) O (i; p; o)] (3) r red r red (c) = r red a (c)(c 0 c) (5) 2 Referred to as ISM2 in <ref> [3] </ref>. 2 This second set of equations is equivalent to the previous one, except that it works with a unique transition relation T (i; p; n; o), instead of the next state and output relations T (i; p; n) and O (i; p; o). <p> symbolic cube i; c; c 0 ; o g g The following figures shows pairs of initial PNDFSM's and reduced machines obtained by the compu tations described in the last two sections. 5 6 7 8 5 Results We have augmented the programs ISM and PND REDUCE (aliter ISM2 in <ref> [3] </ref>) with procedures to produce the relation of the reduced FSM and generate a tabular representation, according to the computations described in this report. We report the experiments described in [3] for PNDFSM state minimization. <p> two sections. 5 6 7 8 5 Results We have augmented the programs ISM and PND REDUCE (aliter ISM2 in <ref> [3] </ref>) with procedures to produce the relation of the reduced FSM and generate a tabular representation, according to the computations described in this report. We report the experiments described in [3] for PNDFSM state minimization. Of each example we list the initial and final number of states, and the initial and final number of transitions (symbolic cubes). The last parameter was not known from [3] and it is the size of the tabular representation of the reduced FSM produced by our <p> We report the experiments described in <ref> [3] </ref> for PNDFSM state minimization. Of each example we list the initial and final number of states, and the initial and final number of transitions (symbolic cubes). The last parameter was not known from [3] and it is the size of the tabular representation of the reduced FSM produced by our procedure. For each example a file in kiss format is obtained. Note that all reduced FSM's happen to be of Mealy type. original PNDFSM reduced FSM example I/O states trans. states trans.
References-found: 3

