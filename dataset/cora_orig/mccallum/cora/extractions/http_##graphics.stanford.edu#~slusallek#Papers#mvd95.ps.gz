URL: http://graphics.stanford.edu/~slusallek/Papers/mvd95.ps.gz
Refering-URL: http://graphics.stanford.edu/~slusallek/cv.html
Root-URL: http://www.cs.stanford.edu
Email: stammingerjslusallekjseidel@informatik.uni-erlangen.de  
Title: Interactive Walkthroughs and Higher Order Global Illumination  
Author: Marc Stamminger, Philipp Slusallek, Hans-Peter Seidel 
Keyword: CR Descriptors: I.3.7 [Computer Graphics]: Three-dimensional Graphics and Realism radios-ity; virtual reality;  
Affiliation: Computer Graphics Group, University of Erlangen  
Abstract: The subtle lighting effects, which can be simulated by global illumination, are important to make virtual worlds look realistic. Higher order global illumination methods, like Wavelet Radiosity, have proven to be very efficient, but do not directly lead to solutions that can be used by the hardware used to display walkthroughs. In this paper, we discuss methods to efficiently map these higher order radiosity solutions to representations suitable for hardware acceleration. Additionally, we discuss similar methods to deal with directionally-depended solutions generated for example by Wavelet Radiance algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [BPP94] <author> BELL G., PARISI A., PESCE M.: </author> <title> The virtual reality modeling language. </title> <note> http://www.eit.com/vrml/vrmlspec.html, November 1994. </note>
Reference-contexts: In addition to the build-in support for OpenGL rendering, we use the VRML <ref> [BPP94] </ref> and OpenInventor file formats [Wer93] to export these scene descriptions. These formats are easy to use but can nevertheless support most features of our graphics hardware. Any OpenInventor or Iris Performer-based application [RH94], and most available VRML viewers can be used to display our results.
Reference: [CCWG88] <author> COHEN M., CHEN S. E., WALLACE J. R., GREENBERG D. P.: </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <booktitle> Computer Graphics (SIG-GRAPH '88 Proceedings) 22, </booktitle> <month> 4 (August </month> <year> 1988), </year> <pages> 75-84. </pages>
Reference-contexts: 1 Introduction So far, most walkthrough systems that have dealt with global illumination have used classical radiosity algorithms that deliver constant illumination on each surface element <ref> [GTG84, CCWG88] </ref>. Simple triangulation and linear interpolation of the resulting illumination values lead to a representation (e.g. triangles with color values for each vertex), that can easily be used for hardware accelerated display using the Gouraud interpolation capabilities of current graphics systems. <p> Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement <ref> [CCWG88] </ref>, Galerkin Radiosity [Zat93], Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Clustering Techniques [Sil94, SAG94].
Reference: [Che95] <author> CHEN S. E.: </author> <title> Quick time VR an image-bases approach to virtual environment navigation. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (August 1995), </booktitle> <pages> 29-38. </pages>
Reference-contexts: The main problem will be to decide, which method is the best for a certain scene and the target hardware. Finally, it is interesting to evaluate ideas from image based rendering techniques <ref> [Che95, MB95] </ref>, whose ability to create walkthroughs even without high-end graphics hardware has to be examined for our purpose. Any hardware support for these techniques is likely to be also usable for the display of glossy surfaces.
Reference: [Chr95] <author> CHRISTENSEN P. H.: </author> <title> Hierarchical Techniques for Glossy Global Illumination. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <year> 1995. </year>
Reference-contexts: Moreover, current graphics hardware offers no direct support to efficiently display the results of radiance methods <ref> [Sch94, Chr95] </ref> that calculate directional-dependent global illumination methods. In this paper, we develop methods to efficiently combine complex global illumination calculations with fast hardware-based rendering techniques to allow interactive walkthroughs of globally illuminated virtual environments. <p> Unfortunately, these methods converge slowly and the resulting images exhibit significant noise. Meanwhile, it has been shown that with clustering techniques it is possible to obtain radiance solutions for scenes of at least medium complexity <ref> [Chr95] </ref> with reasonable computational resources. 2.4 Wavelet Radiosity and Wavelet Radiance An often used approach to find approximate solutions for the radiance or radiosity functions is the finite element method.
Reference: [FvFH90] <author> FOLEY J. D., VAN DAM A., FEINER S. K., HUGES J. F.: </author> <title> Computer Graphics. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: For every image the objects are perspectively transformed and hidden surfaces are removed. Usually, these systems use the lighting capabilities of the hardware, where the color of the objects is determined by the Phong light model <ref> [FvFH90] </ref>. As an alternative, the colors of polygon vertices are explicitly defined by the system, e.g. from a global illumination solution. These colors are then interpolated across the surfaces by Gouraud shading in hardware.
Reference: [GSCH93] <author> GORTLER S. J., SCHR ODER P., COHEN M., HANRAHAN P. M.: </author> <title> Wavelet radios-ity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings) 27 (August 1993), </booktitle> <pages> 221-230. </pages>
Reference-contexts: On the other hand, higher order global illumination methods, like Wavelet Radiosity, have proven to be more efficient than these classical methods <ref> [GSCH93] </ref>, but deliver results that cannot be used directly for fast display. Moreover, current graphics hardware offers no direct support to efficiently display the results of radiance methods [Sch94, Chr95] that calculate directional-dependent global illumination methods. <p> Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity [Zat93], Hierarchical Radiosity [HSA91], Wavelet Radiosity <ref> [GSCH93] </ref> and Clustering Techniques [Sil94, SAG94]. With these algorithms it is possible to find radiosity solutions even for complex scenes in a reasonable amount of time. 2.3 Radiance The radiosity simplification allows for faster computations of solutions, but for realistic pictures also non-diffuse reflectors are required. <p> The graphics hardware then maps this texture onto the patch. A good overview of this technique can be found in [MK94]. In the following, we describe these ideas and explain solutions for the special case of radiosity solutions obtained by higher order wavelet methods <ref> [GSCH93] </ref>. 4.1 Gouraud Shading The problem with Gouraud shading is to find a subdivision which is fine enough to represent the radiosity appropriately, but on the other hand does not produce too many sub-patches that would increase the rendering times. <p> Its flexible architecture allows the implementation and integration of very different rendering techniques within one system. The growing set of supported rendering algorithms contains, among others, ray tracing, Monte-Carlo path tracing [Kaj86], Hierarchical Radiosity [HSA91], Wavelet Radiosity <ref> [GSCH93] </ref> and Wavelet Radiance [Sch94]. The RenderMan interface, which is used as the main scene description interface in Vision allows a very flexible description of scenes also for global illumination computations. Most importantly this interface is independent of the actual algorithms used by the system.
Reference: [GSG90] <author> GEORGE D. W., SILLION F. X., GREEN-BERG D. P.: </author> <title> Radiosity redistribution for dynamic environments. </title> <journal> IEEE Computer Graphics and Applications 10, </journal> <month> 4 (July </month> <year> 1990), </year> <pages> 26-34. </pages>
Reference-contexts: After a solution of the global illumination has been calculated, many different views of this solution can be rendered online by fast graphics hardware, so walkthroughs of the globally illuminated environment are possible <ref> [MK94, GSG90] </ref>. It must be clearly stated that interactions of the user, which would have influence on the global illumination solution, are restricted with this method. If the user moves objects or dims the light a new solution of the global illumination must be found. <p> If the user moves objects or dims the light a new solution of the global illumination must be found. There are some algorithms that allow incremental recalculation of the solution, but they do not yet perform in realtime <ref> [MS94, GSG90] </ref>. 4 Radiosity Walkthroughs With modern graphics hardware it is possible to generate images even for fairly complex virtual worlds at interactive rates. For every image the objects are perspectively transformed and hidden surfaces are removed.
Reference: [GTG84] <author> GORAL C. M., TORRANCE K. E., GREEN-BERG D. P.: </author> <title> Modelling the interaction of light between diffuse surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings) 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <pages> 212-222. </pages>
Reference-contexts: 1 Introduction So far, most walkthrough systems that have dealt with global illumination have used classical radiosity algorithms that deliver constant illumination on each surface element <ref> [GTG84, CCWG88] </ref>. Simple triangulation and linear interpolation of the resulting illumination values lead to a representation (e.g. triangles with color values for each vertex), that can easily be used for hardware accelerated display using the Gouraud interpolation capabilities of current graphics systems. <p> The corresponding physical quantity is the radiosity B (y), which describes the total power per unit area leaving a surface point y. Since 1984, when Goral et al. introduced the radiosity concept <ref> [GTG84] </ref> many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity [Zat93], Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Clustering Techniques [Sil94, SAG94].
Reference: [HSA91] <author> HANRAHAN P., SALZMANN D., AUP-PERLE L.: </author> <title> A rapid hierarchical radios-ity algorithm. </title> <booktitle> Computer Graphics (SIG-GRAPH '91 Proceedings) 25, 4 (1991), </booktitle> <pages> 197-206. </pages>
Reference-contexts: Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity [Zat93], Hierarchical Radiosity <ref> [HSA91] </ref>, Wavelet Radiosity [GSCH93] and Clustering Techniques [Sil94, SAG94]. With these algorithms it is possible to find radiosity solutions even for complex scenes in a reasonable amount of time. 2.3 Radiance The radiosity simplification allows for faster computations of solutions, but for realistic pictures also non-diffuse reflectors are required. <p> Its flexible architecture allows the implementation and integration of very different rendering techniques within one system. The growing set of supported rendering algorithms contains, among others, ray tracing, Monte-Carlo path tracing [Kaj86], Hierarchical Radiosity <ref> [HSA91] </ref>, Wavelet Radiosity [GSCH93] and Wavelet Radiance [Sch94]. The RenderMan interface, which is used as the main scene description interface in Vision allows a very flexible description of scenes also for global illumination computations. Most importantly this interface is independent of the actual algorithms used by the system.
Reference: [Kaj86] <author> KAJIYA J. T.: </author> <title> The rendering equation. </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings) 20, </booktitle> <month> 4 (August </month> <year> 1986), </year> <pages> 143-150. </pages>
Reference-contexts: Section 5 presents first results for representing scenes using more general directional-dependent radiance solutions. We give a brief description of our current implementation in Section 6, and give conclusions and an outline of future work in Section 7. 2 Global Illumination 2.1 Rendering Equation The rendering equation <ref> [Kaj86] </ref> is the basis of all global illumination algorithms. It describes the light exchange and scattering between surfaces in a virtual world. Light is send into this virtual environment by light sources. When hitting a surface it is partially reflected and resend into the environment. <p> Its flexible architecture allows the implementation and integration of very different rendering techniques within one system. The growing set of supported rendering algorithms contains, among others, ray tracing, Monte-Carlo path tracing <ref> [Kaj86] </ref>, Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Wavelet Radiance [Sch94]. The RenderMan interface, which is used as the main scene description interface in Vision allows a very flexible description of scenes also for global illumination computations.
Reference: [MB95] <author> MCMILLAN L., BISHOP G.: </author> <title> Plenop-tic modeling: An image-based rendering system. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (August 1995), </booktitle> <pages> 39-46. </pages>
Reference-contexts: The main problem will be to decide, which method is the best for a certain scene and the target hardware. Finally, it is interesting to evaluate ideas from image based rendering techniques <ref> [Che95, MB95] </ref>, whose ability to create walkthroughs even without high-end graphics hardware has to be examined for our purpose. Any hardware support for these techniques is likely to be also usable for the display of glossy surfaces.
Reference: [MK94] <author> MYSKOWSKI K., KUNII T. L.: </author> <title> Texture mapping as an alternative for meshing during walkthrough animation. </title> <booktitle> In Fifth EUROGRAPHICS Workshop on Rendering (Darmstadt, </booktitle> <month> June </month> <year> 1994), </year> <pages> pp. 375-388. </pages>
Reference-contexts: After a solution of the global illumination has been calculated, many different views of this solution can be rendered online by fast graphics hardware, so walkthroughs of the globally illuminated environment are possible <ref> [MK94, GSG90] </ref>. It must be clearly stated that interactions of the user, which would have influence on the global illumination solution, are restricted with this method. If the user moves objects or dims the light a new solution of the global illumination must be found. <p> Instead, a texture map is created that represents the radiosity distribution of one patch. The graphics hardware then maps this texture onto the patch. A good overview of this technique can be found in <ref> [MK94] </ref>. <p> Usually the texture computed with wavelet radiosity (left) and the resulting Gouraud shaded output (right) memory is a very limited resource and must be managed accordingly <ref> [MK94] </ref>. If the graphics hardware cannot hold all textures at once, costly swapping of textures occurs resulting in a decreased frame rate. The aim here is to properly distribute the available texture memory appropriately between the surfaces in the scene.
Reference: [MS94] <author> M ULLER S., SCH OFFEL F.: </author> <title> Fast radiosity repropagation for interactive virtual environments using a shadow-form-factor-list. </title> <booktitle> In Fifth Eurographics Workshop on Rendering (Darmstadt, </booktitle> <address> Germany, </address> <month> June </month> <year> 1994), </year> <pages> pp. 325-342. </pages>
Reference-contexts: If the user moves objects or dims the light a new solution of the global illumination must be found. There are some algorithms that allow incremental recalculation of the solution, but they do not yet perform in realtime <ref> [MS94, GSG90] </ref>. 4 Radiosity Walkthroughs With modern graphics hardware it is possible to generate images even for fairly complex virtual worlds at interactive rates. For every image the objects are perspectively transformed and hidden surfaces are removed.
Reference: [NDW93] <author> NEIDER J., DAVIS T., WOO M.: </author> <title> OpenGL Programming Guide. </title> <publisher> Addison Wesley, </publisher> <year> 1993. </year>
Reference-contexts: These colors are then interpolated across the surfaces by Gouraud shading in hardware. More sophisticated hardware is also able to map textures onto the objects without a decrease of rendering time <ref> [NDW93] </ref>. To display the result of a radiosity computation, the radiosity function B (x) has to be mapped onto the corresponding patch p during the rendering process. Fortunately, for diffuse reflection the color of a point does not depend on the direction to the viewer. <p> In the standard OpenGL programming environment <ref> [NDW93] </ref>, this can be described by a point light source at x. If quadratic attenuation of the light source is selected, the division by jx yj 2 is be performed by the graphics system.
Reference: [RH94] <author> ROHLF J., HELMAN J.: Iris performer: </author> <title> A high performance multiprocessing toolkit for real-time 3D graphics. </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH '94) (July 1994), </booktitle> <pages> 381-394. </pages>
Reference-contexts: In addition to the build-in support for OpenGL rendering, we use the VRML [BPP94] and OpenInventor file formats [Wer93] to export these scene descriptions. These formats are easy to use but can nevertheless support most features of our graphics hardware. Any OpenInventor or Iris Performer-based application <ref> [RH94] </ref>, and most available VRML viewers can be used to display our results. Iris Performer is par-ticularly powerful for interactive walkthroughs, due to exploiting multiple processors and its optimized scene display. The emerging VRML standard is a powerful tool to represent virtual environments and make them available across the Internet.
Reference: [SAG94] <author> SMITS B., ARVO J., GREENBERG D.: </author> <title> A clustering algorithm for radiosity in complex environments. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings) (July 1994), </booktitle> <pages> 435-442. </pages>
Reference-contexts: Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity [Zat93], Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Clustering Techniques <ref> [Sil94, SAG94] </ref>. With these algorithms it is possible to find radiosity solutions even for complex scenes in a reasonable amount of time. 2.3 Radiance The radiosity simplification allows for faster computations of solutions, but for realistic pictures also non-diffuse reflectors are required.
Reference: [Sch94] <author> SCHR ODER P.: </author> <title> Wavelet Algorithms for Illumination Computations. </title> <type> PhD thesis, </type> <institution> Princeton University, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: Moreover, current graphics hardware offers no direct support to efficiently display the results of radiance methods <ref> [Sch94, Chr95] </ref> that calculate directional-dependent global illumination methods. In this paper, we develop methods to efficiently combine complex global illumination calculations with fast hardware-based rendering techniques to allow interactive walkthroughs of globally illuminated virtual environments. <p> These algorithms approximate L by a weighted sum of a finite set of basis functions, so instead of an infinite dimensional function L only the finite set of corresponding weights has to be determined. In <ref> [Sch94] </ref> a method is described to calculate ra-diosity and radiance solutions using wavelet basis functions. <p> Its flexible architecture allows the implementation and integration of very different rendering techniques within one system. The growing set of supported rendering algorithms contains, among others, ray tracing, Monte-Carlo path tracing [Kaj86], Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Wavelet Radiance <ref> [Sch94] </ref>. The RenderMan interface, which is used as the main scene description interface in Vision allows a very flexible description of scenes also for global illumination computations. Most importantly this interface is independent of the actual algorithms used by the system. <p> The global illumination in the room has been calculated using a wavelet radiance algorithm with third order multi-wavelets <ref> [Sch94] </ref>. 7 Conclusion and Future Work In this paper, we have described our experience in implementing a walkthrough system for the physically based rendering package Vision.
Reference: [Sil94] <author> SILLION F.: </author> <title> Clustering and volume scattering for hierarchical radiosity calculations. </title> <booktitle> In Fifth EUROGRAPHICS Workshop on Rendering (Darmstadt, </booktitle> <month> June </month> <year> 1994), </year> <pages> pp. 57-68. </pages>
Reference-contexts: Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity [Zat93], Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Clustering Techniques <ref> [Sil94, SAG94] </ref>. With these algorithms it is possible to find radiosity solutions even for complex scenes in a reasonable amount of time. 2.3 Radiance The radiosity simplification allows for faster computations of solutions, but for realistic pictures also non-diffuse reflectors are required.
Reference: [Slu95] <author> SLUSALLEK P.: </author> <title> Vision An Architecture for Physically Based Rendering. </title> <type> PhD thesis, </type> <institution> University of Erlangen, IMMD IX, Computer Graphics Group, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: The implementation described in this paper is based on the Vision architecture. Vision is a physically-based rendering architecture that supports most state-of-the-art algorithms for global illumination in a flexible and integrated framework <ref> [SS95, Slu95] </ref>. After a brief overview of the techniques of global illumination in Section 2, we describe in Section 3 the concept of interactive walkthroughs of environments including global illumination. <p> Unfortunately, this has to be done for every sender-receiver pair, which is only possible with multi-pass rendering. 6 Implementation We have implemented the walkthrough interface as part of the Vision-system <ref> [SS95, Slu95] </ref> for walk-throughs of global illumination environments computed with the wavelet radiosity or the wavelet radiance algorithm [Sta94]. 6.1 Vision Vision is an object-oriented, physically-based rendering system. Its flexible architecture allows the implementation and integration of very different rendering techniques within one system.
Reference: [SPS94] <author> SLUSALLEK P., PFLAUM T., SEIDEL H.- P.: </author> <title> Implementing RenderMan practice, problems, and enhancements. </title> <booktitle> Computer Graphics Forum (EUROGRAPHICS '94 Proceedings) 13, </booktitle> <month> 3 (September </month> <year> 1994), </year> <pages> 443-454. </pages>
Reference-contexts: A compiler for the RenderMan Shading Language allows the definition of procedural descriptions of surface and light source properties. Some extensions to the interface and the Shading Language have been made to allow its use for global illumination calculations <ref> [SPS94, SPS95] </ref>. 6.2 Rendering-Interface Because illumination calculation and the rendering process are decoupled, a suitable interface between these two stages must be designed. In addition to the build-in support for OpenGL rendering, we use the VRML [BPP94] and OpenInventor file formats [Wer93] to export these scene descriptions.
Reference: [SPS95] <author> SLUSALLEK P., PFLAUM T., SEIDEL H.-P.: </author> <title> Using procedural RenderMan shaders for global illumination. </title> <note> In Computer Graphics Forum (Proceedings EURO-GRAPHICS '95) (1995). accepted for publication. </note>
Reference-contexts: A compiler for the RenderMan Shading Language allows the definition of procedural descriptions of surface and light source properties. Some extensions to the interface and the Shading Language have been made to allow its use for global illumination calculations <ref> [SPS94, SPS95] </ref>. 6.2 Rendering-Interface Because illumination calculation and the rendering process are decoupled, a suitable interface between these two stages must be designed. In addition to the build-in support for OpenGL rendering, we use the VRML [BPP94] and OpenInventor file formats [Wer93] to export these scene descriptions. <p> Figures 4 and 5 show snapshots of two radiosity walkthroughs. If a patch exhibits a very complex reflectivity contribution, as the picture on the wall in Figure 4, the Vision surface shader is queried for a texture approximating the patch's reflectance <ref> [SPS95] </ref>. This texture is then combined with the calculated radiosity distribution.
Reference: [SS95] <author> SLUSALLEK P., SEIDEL H.-P.: </author> <title> Vision: An architecture for global illumination calculations. </title> <journal> IEEE Transactions on Visualization and Computer Graphics 1, </journal> <month> 1 (March </month> <year> 1995), </year> <pages> 77-96. </pages>
Reference-contexts: The implementation described in this paper is based on the Vision architecture. Vision is a physically-based rendering architecture that supports most state-of-the-art algorithms for global illumination in a flexible and integrated framework <ref> [SS95, Slu95] </ref>. After a brief overview of the techniques of global illumination in Section 2, we describe in Section 3 the concept of interactive walkthroughs of environments including global illumination. <p> Unfortunately, this has to be done for every sender-receiver pair, which is only possible with multi-pass rendering. 6 Implementation We have implemented the walkthrough interface as part of the Vision-system <ref> [SS95, Slu95] </ref> for walk-throughs of global illumination environments computed with the wavelet radiosity or the wavelet radiance algorithm [Sta94]. 6.1 Vision Vision is an object-oriented, physically-based rendering system. Its flexible architecture allows the implementation and integration of very different rendering techniques within one system.
Reference: [SSSS94] <author> SLUSALLEK P., SCHR ODER M., STAM-MINGER M., SEIDEL H.-P.: </author> <title> Smart Links and Efficient Reconstruction for Wavelet Radiosity. </title> <type> Technical Report TR-94-14, </type> <institution> University of Erlangen, IMMD IX, Computer Graphics Group, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: The function that gives this visibility factor for arbitrary surface points x is called shadow mask and is computed in our implementation during the global illumination calculations <ref> [SSSS94] </ref>. Shadows can thus be obtained by representing the shadow mask as a texture and mapping this texture on the receiving patch.
Reference: [Sta94] <author> STAMMINGER M.: </author> <title> Wavelet Radiosity. </title> <type> Master thesis, </type> <institution> University of Erlangen, IMMD IX, Computer Graphics Group, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Unfortunately, this has to be done for every sender-receiver pair, which is only possible with multi-pass rendering. 6 Implementation We have implemented the walkthrough interface as part of the Vision-system [SS95, Slu95] for walk-throughs of global illumination environments computed with the wavelet radiosity or the wavelet radiance algorithm <ref> [Sta94] </ref>. 6.1 Vision Vision is an object-oriented, physically-based rendering system. Its flexible architecture allows the implementation and integration of very different rendering techniques within one system.
Reference: [Wer93] <author> WERNECKE J.: </author> <title> The inventor mentor. </title> <publisher> Ad-dison Wesley, </publisher> <year> 1993. </year>
Reference-contexts: In addition to the build-in support for OpenGL rendering, we use the VRML [BPP94] and OpenInventor file formats <ref> [Wer93] </ref> to export these scene descriptions. These formats are easy to use but can nevertheless support most features of our graphics hardware. Any OpenInventor or Iris Performer-based application [RH94], and most available VRML viewers can be used to display our results.
Reference: [Zat93] <author> ZATZ H. R.: </author> <title> Galerkin radiosity: A higer order solution method for global illumination. </title> <booktitle> Computer Graphics (SIG-GRAPH 93 Proceedings) (August 1993), </booktitle> <pages> 213-220. </pages>
Reference-contexts: Since 1984, when Goral et al. introduced the radiosity concept [GTG84] many new algorithms have been developed to find solutions to the radios-ity problem. The most important steps probably were Progressive Refinement [CCWG88], Galerkin Radiosity <ref> [Zat93] </ref>, Hierarchical Radiosity [HSA91], Wavelet Radiosity [GSCH93] and Clustering Techniques [Sil94, SAG94].
References-found: 26

