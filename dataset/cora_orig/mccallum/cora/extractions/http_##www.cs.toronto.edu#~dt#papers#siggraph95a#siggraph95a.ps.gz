URL: http://www.cs.toronto.edu/~dt/papers/siggraph95a/siggraph95a.ps.gz
Refering-URL: http://www.cs.toronto.edu/~dt/graphics.html
Root-URL: http://www.cs.toronto.edu
Title: Automated Learning of Muscle-Actuated Locomotion Through Control Abstraction  
Author: Radek Grzeszczuk and Demetri Terzopoulos 
Keyword: learning, locomotion, control, artificial life, physics-based modeling  
Address: Toronto 1  
Affiliation: Department of Computer Science, University of  
Abstract: We present a learning technique that automatically synthesizes realistic locomotion for the animation of physics-based models of animals. The method is especially suitable for animals with highly flexible, many-degree-of-freedom bodies and a considerable number of internal muscle actuators, such as snakes and fish. The multilevel learning process first performs repeated locomotion trials in search of actuator control functions that produce efficient locomotion, presuming virtually nothing about the form of these functions. Applying a short-time Fourier analysis, the learning process then abstracts control functions that produce effective locomotion into a compact representation which makes explicit the natural quasi-periodicities and coordination of the muscle actions. The artificial animals can finally put into practice the compact, efficient controllers that they have learned. Their locomotion learning abilities enable them to accomplish higher-level tasks specified by the animator while guided by sensory perception of their virtual world; e.g., locomotion to a visible target. We demonstrate physics-based animation of learned locomotion in dynamic models of land snakes, fishes, and even marine mammals that have trained themselves to perform SeaWorld stunts. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. S. Brotman and A. N. Netravali. </author> <title> Motion interpolation by optimal control. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <volume> 22(4) </volume> <pages> 309-407, </pages> <year> 1988. </year>
Reference-contexts: Optimal control methods formulate the control problem in terms of an objective functional which must be minimized over a time interval, subject to the differential equations of motion of the physical model <ref> [1] </ref>. <p> Muscles contract as their natural length l ij decreases under the autonomous control of the motor center of the artificial animal's brain [17]. To dynamically contract a muscle, the brain must supply an activation function a (t) to the muscle. This continuous time function has range <ref> [0; 1] </ref>, with 0 corresponding to a fully relaxed muscle of length l r ij and 1 to a fully contracted muscle of length l c ij . <p> Referring to Fig. 1 for example, the 40 muscles in the snake model are grouped pairwise in each segment to form 10 left actuators and 10 right actuators. Each actuator i is activated by a scalar actuation function u i (t), whose range is again normalized to <ref> [0; 1] </ref>. The actuation function transforms straightforwardly into activation functions for each muscle in the actuator.
Reference: [2] <author> J. I. Castro. </author> <title> The Sharks of North American Waters. </title> <publisher> Texas Unviersity Press, </publisher> <year> 1983. </year>
Reference-contexts: Plate 1 shows the display model. The muscle springs can contract to 30% of their relaxed length. The body mass is distributed evenly among all nodes. Fig. 10 shows the spring-mass system for the Leopard shark (Triakis semifasciata) <ref> [2] </ref>, which is similar to the fish model in [17]. Plates 3 and 4 show the display model. The 4 posterior muscles can contract to 10% of their relaxed length; the 8 other muscles to 20%. The figure specifies the nodal mass distribution.
Reference: [3] <author> M. F. Cohen. </author> <title> Interactive spacetime control for animation. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <volume> 26(2) </volume> <pages> 293-301, </pages> <year> 1992. </year>
Reference-contexts: Optimal control methods formulate the control problem in terms of an objective functional which must be minimized over a time interval, subject to the differential equations of motion of the physical model [1]. The spacetime constraints method [19] has attracted a certain following (e.g., <ref> [3] </ref>), but it is problematic because, in principle, it treats physics as a penalty constraint (that can be stretched like a spring) and, in practice, the need to symbolically differentiate the equations of motion renders it impractical for all but the simplest physical models.

Reference: [5] <author> C. J. Goh and K. L. Teo. </author> <title> Control parameterization: A unified approach to optimal control problems with general constraints. </title> <journal> Automatica, </journal> <volume> 24 </volume> <pages> 3-18, </pages> <year> 1988. </year>
Reference-contexts: We pursue a different approach toward locomotion control that is suitable for complex physical models. The approach is inspired by the direct dynamics technique which was described in the control literature by Goh and Teo <ref> [5] </ref> and earlier references cited therein. Direct dynamics prescribes a generate-and-test strategy that optimizes a control objective functional through repeated forward dynamic simulation and motion evaluation. <p> This cannot be done analytically. We convert this continuous optimal control problem to an algebraic parameter optimization problem <ref> [5] </ref> by parameterizing the controller through discretization using basis functions. Mathematically, we express u i (t) = j=1 j j where the u j i are scalar parameters and the B j (t), 1 j M are (vector-valued) temporal basis functions.
Reference: [6] <author> R. Grzeszczuk. </author> <title> Automated learning of muscle based locomotion through control abstraction. </title> <type> Master's thesis, </type> <institution> Dept. of Comp. Sci., Univ. of Toronto, Toronto, ON, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: Thus the learning process is bootstrapped essentially from scratch. Earlier versions of our work were presented in <ref> [6, 16] </ref>. 1.2 Overview We describe our multilevel learning technique in the following two sections. Section 2 presents the strategy for learning low level controllers. Low level control learning is time consuming because of the high dimensionality of the search space. It is therefore prudent to reuse controllers.
Reference: [7] <author> R. McNeill Alexander. </author> <title> Exploring Biomechanics: Animals in Motion. </title> <publisher> Scientific American Library, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: In Computer Graphics Proceedings, Annual Conference Series, 1995, ACM SIGGRAPH, pp. 63-70. that produce locomotion were carefully hand crafted using knowledge gleaned from the biomechanics literature <ref> [7] </ref> and long hours of experimentation. Our goal in this paper is to devise algorithms that can provide such animal models the ability to learn how to locomote automatically, in a way that is inspired by the remarkable ability of real animals to acquire locomotion skills through action and perception.
Reference: [8] <author> G.S.P. Miller. </author> <title> The motion dynamics of snakes and worms. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <volume> 22(4) </volume> <pages> 169-177, </pages> <year> 1988. </year>
Reference-contexts: muscle-actuated model of an animal to learn from first principles how to control its muscles in order to locomote in a natural fashion? Unlike prior work on motion synthesis, we target state-of-the-art animate models of at least the level of realism and complexity of the snakes and worms of Miller <ref> [8] </ref> or the fish of Tu and Terzopoulos [17]. In both of these cases, the muscle controllers 1 10 King's College Road, Toronto, Ontario, Canada, M5S 1A4 E-mail: fradekjdtg@cs.toronto.edu Published in the Proceedings of SIGGRAPH 95 (Los Angeles, CA, August 6-11, 1995). <p> Plates 1-5 show frames from animations of animal models that we have created, which have learned to locomote and perform interesting motor tasks automatically. We use spring-mass systems to construct our models, following the work of <ref> [8, 17] </ref>. This results in biomechanical models with numerous degrees of freedom and many parameters to control. The reader should peruse [8, 17] to become familiar with the details of the models. <p> We use spring-mass systems to construct our models, following the work of <ref> [8, 17] </ref>. This results in biomechanical models with numerous degrees of freedom and many parameters to control. The reader should peruse [8, 17] to become familiar with the details of the models. An example will serve to illustrate the challenges of controlling highly deformable body models: Fig. 1 illustrates a biomechanical model of a Sonoral coral snake [4] that we use in one of our animations (Plate 1). <p> All of our animal body models consist of an internal biomechanical model with contractile muscles coupled to an external, texture-mapped, NURBS surface display model. Fig. 1 shows the spring-mass system for the coral snake (Mi-cruroides euryxanthus), which is similar to the one in <ref> [8] </ref>. Plate 1 shows the display model. The muscle springs can contract to 30% of their relaxed length. The body mass is distributed evenly among all nodes. Fig. 10 shows the spring-mass system for the Leopard shark (Triakis semifasciata) [2], which is similar to the fish model in [17]. <p> Mass is distributed evenly among all the nodes. To model snake locomotion, we use directional friction against the ground which generates reaction forces that move the body forward, as described in <ref> [8] </ref>.
Reference: [9] <author> J. T. Ngo and J. Marks. </author> <title> Spacetime constraints revisited. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <volume> 27(2) </volume> <pages> 343-351, </pages> <year> 1993. </year>
Reference-contexts: The direct dynamics technique was developed further to control articulated musculoskeletal models in [10] and it has seen application in the mainstream graphics literature to the control of planar articulated figures <ref> [18, 9] </ref>. Pandy et al. [10] search the model actuator space for optimal controllers, but they do not perform global optimization. Van de Panne and Fiume [18] use simulated annealing for global optimization. <p> Van de Panne and Fiume [18] use simulated annealing for global optimization. Their models are equipped with simple sensors that probe the environment and use the sensory information to influence control decisions. Ngo and Marks' <ref> [9] </ref> stimulus-response control algorithm presents a similar approach. They apply the genetic algorithm to find optimal controllers. The genetic algorithm is also used in the recent work of Sims [15]. Risdale [14] reports an early effort at controller synthesis for articulated figures from training examples using neural networks. <p> Typically, they deal with the control problem at an abstract level, say, in terms of a small number of controller network weights [18, 15] or whole body motions <ref> [9] </ref>. We advocate a multilevel controller learning technique that can handle complex models even though it seeks, based on first principles, optimal muscle actuation functions in a very concrete representation that makes the weakest possible assumptions. Thus the learning process is bootstrapped essentially from scratch.
Reference: [10] <author> M. G. Pandy, F. C. Anderson, and D. G. Hull. </author> <title> A parameter optimization approach for the optimal control of large-scale musculoskeletal systems. </title> <journal> Transactions of the ASME, </journal> <volume> 114(450), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: Direct dynamics prescribes a generate-and-test strategy that optimizes a control objective functional through repeated forward dynamic simulation and motion evaluation. The direct dynamics technique was developed further to control articulated musculoskeletal models in <ref> [10] </ref> and it has seen application in the mainstream graphics literature to the control of planar articulated figures [18, 9]. Pandy et al. [10] search the model actuator space for optimal controllers, but they do not perform global optimization. <p> The direct dynamics technique was developed further to control articulated musculoskeletal models in <ref> [10] </ref> and it has seen application in the mainstream graphics literature to the control of planar articulated figures [18, 9]. Pandy et al. [10] search the model actuator space for optimal controllers, but they do not perform global optimization. Van de Panne and Fiume [18] use simulated annealing for global optimization. Their models are equipped with simple sensors that probe the environment and use the sensory information to influence control decisions.
Reference: [11] <author> Best P.B. and Abernethy R. B. Heaviside's dolphin. </author> <booktitle> In Handbook of Marine Mammals, </booktitle> <volume> volume 5, </volume> <pages> pages 289-310. </pages> <publisher> Academic Press, </publisher> <year> 1994. </year>
Reference-contexts: Plates 3 and 4 show the display model. The 4 posterior muscles can contract to 10% of their relaxed length; the 8 other muscles to 20%. The figure specifies the nodal mass distribution. We model a Heaviside's dolphin (Cephalorhynchus heavisidii) <ref> [11] </ref> (Plate 5 shows the display model) straightforwardly by turning the shark spring-mass system on its side, such that the muscles serve as caudal (tail) fin elevator and depressors.
Reference: [12] <author> W. H. Press, B. Flannery, et al. </author> <title> Numerical Recipes: The Art of Scientific Computing, Second Edition. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: We have used both simulated annealing and the simplex method to optimize the objective function. The reader should refer to a text such as <ref> [12] </ref> for details about these optimization methods. Simulated annealing has three features that make it particularly suitable for our application. First, it is applicable to problems with a large number of variables yielding search spaces large enough to make exhaustive search prohibitive. <p> This results in a small set of significant basis functions with associated amplitudes that constitute the abstracted controller. To abstract a time domain controller, we apply the fast Fourier transform (FFT) <ref> [12] </ref> to the parameters of the time domain controller and then suppress the below-threshold amplitudes. 3.1 Using Abstracted Controllers Typically, our artificial animals are put through a basic training regimen of primitive motor tasks that it must learn, such as locomot-ing at different speeds and executing turns of different radii. <p> These forces produce external nodal forces f i in the equations of motion (1). We use a stable, efficient semi-implicit Euler method <ref> [12] </ref> to numerically integrate these ODEs. It is implicit in the internal forces on the lhs of (1) and explicit in the external forces f i . Acknowledgments We thank Xiaoyuan Tu, who developed the original fish biomechanical model, for her software and cooperation, and Geoffrey Hinton for valuable discussions.
Reference: [13] <author> J. E. Rendal, Allen G. R., and Steene R. C. </author> <title> Fishes of the Great Barrier Reef and Coral Sea. </title> <publisher> Univ. of Hawaii Press, </publisher> <address> Honolulu, HI, </address> <year> 1990. </year>
Reference-contexts: We equip the dolphin with functional pectoral fins that allow it to roll, pitch, and yaw in the water (see [17] for details about fins). Fig. 11 shows the spring-mass system for the Kuhl's stingray (Dasyatis kuhlii) <ref> [13] </ref>. Plate 2 shows the display model. Four left and 4 right elevator muscles and an equal number of depressor muscles are capable of flexing the wings by contracting to 20% of their relaxed length. Mass is distributed evenly among all the nodes.
Reference: [14] <author> G. Risdale. </author> <title> Connectionist modeling of skill dynamics. </title> <journal> Journal of Visualization and Computer Animation, </journal> <volume> 1(2) </volume> <pages> 66-72, </pages> <year> 1990. </year>
Reference-contexts: Ngo and Marks' [9] stimulus-response control algorithm presents a similar approach. They apply the genetic algorithm to find optimal controllers. The genetic algorithm is also used in the recent work of Sims [15]. Risdale <ref> [14] </ref> reports an early effort at controller synthesis for articulated figures from training examples using neural networks.
Reference: [15] <author> K. Sims. </author> <title> Evolving virtual creatures. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <pages> pages 15-22, </pages> <year> 1994. </year>
Reference-contexts: Ngo and Marks' [9] stimulus-response control algorithm presents a similar approach. They apply the genetic algorithm to find optimal controllers. The genetic algorithm is also used in the recent work of Sims <ref> [15] </ref>. Risdale [14] reports an early effort at controller synthesis for articulated figures from training examples using neural networks. <p> Typically, they deal with the control problem at an abstract level, say, in terms of a small number of controller network weights <ref> [18, 15] </ref> or whole body motions [9]. We advocate a multilevel controller learning technique that can handle complex models even though it seeks, based on first principles, optimal muscle actuation functions in a very concrete representation that makes the weakest possible assumptions.
Reference: [16] <author> D. Terzopoulos, X. Tu, and R. Grzeszczuk. </author> <title> Artificial fishes: Autonomous locomotion, perception, behavior, and learning in a simulated physical world. </title> <journal> Artificial Life, </journal> <volume> 1(4) </volume> <pages> 327-351, </pages> <year> 1994. </year>
Reference-contexts: Thus the learning process is bootstrapped essentially from scratch. Earlier versions of our work were presented in <ref> [6, 16] </ref>. 1.2 Overview We describe our multilevel learning technique in the following two sections. Section 2 presents the strategy for learning low level controllers. Low level control learning is time consuming because of the high dimensionality of the search space. It is therefore prudent to reuse controllers.
Reference: [17] <author> X. Tu and D. Terzopoulos. </author> <title> Artificial fishes: Physics, locomotion, perception, behavior. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <pages> pages 43-50, </pages> <year> 1994. </year>
Reference-contexts: first principles how to control its muscles in order to locomote in a natural fashion? Unlike prior work on motion synthesis, we target state-of-the-art animate models of at least the level of realism and complexity of the snakes and worms of Miller [8] or the fish of Tu and Terzopoulos <ref> [17] </ref>. In both of these cases, the muscle controllers 1 10 King's College Road, Toronto, Ontario, Canada, M5S 1A4 E-mail: fradekjdtg@cs.toronto.edu Published in the Proceedings of SIGGRAPH 95 (Los Angeles, CA, August 6-11, 1995). <p> Plates 1-5 show frames from animations of animal models that we have created, which have learned to locomote and perform interesting motor tasks automatically. We use spring-mass systems to construct our models, following the work of <ref> [8, 17] </ref>. This results in biomechanical models with numerous degrees of freedom and many parameters to control. The reader should peruse [8, 17] to become familiar with the details of the models. <p> We use spring-mass systems to construct our models, following the work of <ref> [8, 17] </ref>. This results in biomechanical models with numerous degrees of freedom and many parameters to control. The reader should peruse [8, 17] to become familiar with the details of the models. An example will serve to illustrate the challenges of controlling highly deformable body models: Fig. 1 illustrates a biomechanical model of a Sonoral coral snake [4] that we use in one of our animations (Plate 1). <p> The natural length of the spring is l ij . Some of the springs in the biomechanical model play the role of contractile muscles. Muscles contract as their natural length l ij decreases under the autonomous control of the motor center of the artificial animal's brain <ref> [17] </ref>. To dynamically contract a muscle, the brain must supply an activation function a (t) to the muscle. <p> Plate 1 shows the display model. The muscle springs can contract to 30% of their relaxed length. The body mass is distributed evenly among all nodes. Fig. 10 shows the spring-mass system for the Leopard shark (Triakis semifasciata) [2], which is similar to the fish model in <ref> [17] </ref>. Plates 3 and 4 show the display model. The 4 posterior muscles can contract to 10% of their relaxed length; the 8 other muscles to 20%. The figure specifies the nodal mass distribution. <p> We equip the dolphin with functional pectoral fins that allow it to roll, pitch, and yaw in the water (see <ref> [17] </ref> for details about fins). Fig. 11 shows the spring-mass system for the Kuhl's stingray (Dasyatis kuhlii) [13]. Plate 2 shows the display model. <p> body, solid lines indicate actuator functions for right side); (center) primary modes of controller FFT (radius of circles indicates mode amplitudes, radial distances from center of surrounding circle indicate frequencies, angular positions within surrounding circle indicate phases); (bottom) abstracted controller obtained by retaining primary modes. model's faces, as described in <ref> [17] </ref>. These forces produce external nodal forces f i in the equations of motion (1). We use a stable, efficient semi-implicit Euler method [12] to numerically integrate these ODEs. It is implicit in the internal forces on the lhs of (1) and explicit in the external forces f i .
Reference: [18] <author> M. van de Panne and E. Fiume. </author> <title> Sensor-actuator networks. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <volume> 27(2) </volume> <pages> 335-343, </pages> <year> 1993. </year>
Reference-contexts: The direct dynamics technique was developed further to control articulated musculoskeletal models in [10] and it has seen application in the mainstream graphics literature to the control of planar articulated figures <ref> [18, 9] </ref>. Pandy et al. [10] search the model actuator space for optimal controllers, but they do not perform global optimization. Van de Panne and Fiume [18] use simulated annealing for global optimization. <p> Pandy et al. [10] search the model actuator space for optimal controllers, but they do not perform global optimization. Van de Panne and Fiume <ref> [18] </ref> use simulated annealing for global optimization. Their models are equipped with simple sensors that probe the environment and use the sensory information to influence control decisions. Ngo and Marks' [9] stimulus-response control algorithm presents a similar approach. They apply the genetic algorithm to find optimal controllers. <p> Typically, they deal with the control problem at an abstract level, say, in terms of a small number of controller network weights <ref> [18, 15] </ref> or whole body motions [9]. We advocate a multilevel controller learning technique that can handle complex models even though it seeks, based on first principles, optimal muscle actuation functions in a very concrete representation that makes the weakest possible assumptions.
Reference: [19] <author> A. Witkin and M. Kass. </author> <title> Spacetime constraints. </title> <journal> Proc. ACM SIG-GRAPH, </journal> <volume> 22(4) </volume> <pages> 159-167, </pages> <year> 1988. </year>
Reference-contexts: Optimal control methods formulate the control problem in terms of an objective functional which must be minimized over a time interval, subject to the differential equations of motion of the physical model [1]. The spacetime constraints method <ref> [19] </ref> has attracted a certain following (e.g., [3]), but it is problematic because, in principle, it treats physics as a penalty constraint (that can be stretched like a spring) and, in practice, the need to symbolically differentiate the equations of motion renders it impractical for all but the simplest physical models.
References-found: 18

