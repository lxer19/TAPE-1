URL: http://www.cs.berkeley.edu/~amc/research/ms-thesis.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~amc/research/window-washing/
Root-URL: 
Title: STUDENT'S NAME:  
Author: Adam M. Costello 
Degree: MASTER OF SCIENCE DEGREE THESIS ACCEPTANCE  
Keyword: APPROVAL: Chairman  
Date: 12 July 1996  
Note: (To be the first page of each copy of the thesis) DATE:  
Affiliation: SEVER INSTITUTE OF TECHNOLOGY  
Abstract: This student's thesis, entitled Self-Stabilization by Counter Flushing and Window Washing has been examined by the undersigned committee of three faculty members and has received full approval for acceptance in partial fulfillment of the requirements for the degree Master of Science. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Afek, S. Kutten, and M. Yung. </author> <title> Memory-efficient self-stabilization on general networks. </title> <booktitle> In Proc. 4th Workshop on Distributed Algorithms, </booktitle> <pages> pages 15-28, </pages> <address> Italy, </address> <month> September </month> <year> 1990. </year> <note> Springer-Verlag (LNCS 486). </note>
Reference: [2] <author> American National Standards Institute. </author> <title> Fiber Distributed Data Interface (FDDI) Token Ring Media Access Control (MAC), </title> <month> November </month> <year> 1987. </year> <note> ANSI X3.139-1987. </note>
Reference: [3] <author> B. Awerbuch, B. Patt-Shamir, and G. Varghese. </author> <title> Self-stabilization by local checking and correction. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <month> October </month> <year> 1991. </year>
Reference: [4] <author> E. W. Dijkstra. </author> <title> Self stabilization in spite of distributed control. </title> <journal> Communications of the ACM, </journal> <volume> 17 </volume> <pages> 643-644, </pages> <year> 1974. </year>
Reference-contexts: For example, h4; 3; 3; 0; 99; 43; 6i is non-increasing, and so is h4; 6i, but h4; 5; 6i is not, because 6 is in <ref> [5; 4] </ref> in modular arithmetic. A receiver is valid in a given state iff it meets the following conditions: 1. For every data packet in transit or queued on the receiver's data path, seq 2 [L 0 + 1; L 0 + w]. 2.
Reference: [5] <author> S. Floyd, V. Jacobson, S. McCanne, C. Liu, and L. Zhang. </author> <title> A reliable multicast framework for light-weight sessions and application level framing. </title> <booktitle> In Proc. ACM SIGCOMM'94 Conf. on Applications, Technologies, Architectures, and Protocols for Computer Communication, </booktitle> <pages> pages 342-356, </pages> <address> Cambridge, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: For example, h4; 3; 3; 0; 99; 43; 6i is non-increasing, and so is h4; 6i, but h4; 5; 6i is not, because 6 is in <ref> [5; 4] </ref> in modular arithmetic. A receiver is valid in a given state iff it meets the following conditions: 1. For every data packet in transit or queued on the receiver's data path, seq 2 [L 0 + 1; L 0 + w]. 2.
Reference: [6] <author> M. G. Gouda and N. J. Multari. </author> <title> Stabilizing communication protocols. </title> <type> Technical Report TR-90-20, </type> <institution> Dept. of Computer Science, Univ. of Texas at Austin, </institution> <month> June </month> <year> 1990. </year>
Reference: [7] <author> Raj Jain. </author> <title> FDDI Handbook: High-speed Networking Using Fiber and Other Media. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference: [8] <author> S. Katz and K. Perry. </author> <title> Self-stabilizing extensions for message-passing systems. </title> <booktitle> In Proc. 10th ACM Symp. on Principles of Distributed Computing, </booktitle> <address> Quebec City, </address> <month> August </month> <year> 1990. </year> <month> 68 </month>
Reference: [9] <author> H. T. Kung, T. Blackwell, and A. Chapman. </author> <title> Credit-based flow control for ATM networks: Credit update protocol, adaptive credit allocation, and statistical multiplexing. </title> <booktitle> In Proc. ACM SIGCOMM'94 Conf. on Communications Architectures, Protocols, and Applications, </booktitle> <pages> pages 101-114, </pages> <address> London, </address> <month> August </month> <year> 1994. </year>
Reference: [10] <author> L. Lamport, R. Shostak, and M. Pease. </author> <title> The Byzantine generals problem. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4(3) </volume> <pages> 382-401, </pages> <month> July </month> <year> 1982. </year>
Reference: [11] <author> Nancy A. Lynch and Mark R. Tuttle. </author> <title> An introduction to input/output automata. </title> <journal> CWI Quarterly, </journal> <volume> 2(3) </volume> <pages> 219-246, </pages> <year> 1989. </year>
Reference: [12] <author> A.N. Netravali, W.D. Roome, and K. Sabnani. </author> <title> Design and implementation of a high speed transport protocol. </title> <journal> In IEEE Transactions on Communications, </journal> <volume> volume 38, </volume> <pages> pages 2010-2024, </pages> <month> November </month> <year> 1990. </year>
Reference: [13] <author> R. Perlman. </author> <title> An algorithm for distributed computation of a spanning tree in an extended LAN. </title> <booktitle> In Proc. 9th Data Communication Symposium, </booktitle> <pages> pages 44-53, </pages> <month> September </month> <year> 1985. </year>
Reference: [14] <author> Radia Perlman. </author> <title> Fault tolerant broadcast of routing information. </title> <booktitle> Computer Networks, </booktitle> <month> December </month> <year> 1983. </year>
Reference: [15] <author> Radia Perlman. </author> <title> Network Layer Protocols With Byzantine Robustness. </title> <type> PhD thesis, </type> <institution> MIT, Laboratory for Computer Science, </institution> <month> August </month> <year> 1988. </year>
Reference: [16] <author> E. C. Rosen. </author> <title> Vulnerabilities of network control protocols: An example. </title> <journal> Computer Communications Review, </journal> <month> July </month> <year> 1981. </year>
Reference: [17] <author> M. Schneider. </author> <title> Self-stabilization. </title> <journal> ACM Computing Surveys, </journal> <volume> 25, </volume> <month> March </month> <year> 1993. </year>
Reference: [18] <author> J. M. Spinelli. </author> <title> Self-stabilizing ARQ on channels with bounded memory or bounded delay. </title> <booktitle> Proc. of IEEE INFOCOM'93, </booktitle> <year> 1993. </year>
Reference: [19] <author> J. M. Spinelli. </author> <title> Self-stabilizing sliding window ARQ protocols. </title> <note> Submitted for publication, </note> <year> 1994. </year>
Reference: [20] <author> A. S. Tanenbaum. </author> <title> Computer Networks. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N. J., </address> <year> 1981. </year>
Reference: [21] <author> G. Varghese. </author> <title> Self-stabilization by Local Checking and Correction. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> October </month> <year> 1993. </year> <month> 69 </month>
Reference: [22] <author> G. Varghese. </author> <title> Self-stabilization by counter flushing. </title> <booktitle> In Proc. 13th ACM Symp. on Principles of Distributed Computing, </booktitle> <address> Los Angeles, </address> <month> August </month> <year> 1994. </year> <month> 70 </month>
References-found: 22

