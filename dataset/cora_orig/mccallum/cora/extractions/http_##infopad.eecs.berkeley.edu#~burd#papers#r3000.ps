URL: http://infopad.eecs.berkeley.edu/~burd/papers/r3000.ps
Refering-URL: http://infopad.eecs.berkeley.edu/~burd/gpp/
Root-URL: http://www.cs.berkeley.edu
Title: A Power Analysis of a Microprocessor: A Study of an Implementation of the MIPS R3000 Architecture.  
Author: Tom Burd and Brad Peters 
Date: May 13, 1994  
Abstract: Portable electronics demand low power VLSI design. For notebook computers, a major target of power reduction is the microprocessor. In order to guide power minimization, the dominant sources of power dissipation must be known. The work presented here implements a RISC architecture, the MIPS R3000, and performs a power analysis on it. Using empirical data comprised of dynamic code traces and internal signal correlation statistics, the power breakdown is refined beyond simple white-noise power estimation. Microprocessors demonstrate varying degrees of correlation throughout the chip. The final power analysis is used to focus future power minimizations in architecture design and implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [kane92] <author> G. Kane, J. </author> <title> Heinrich; MIPS RISC Architecture; Prentice Hall, </title> <year> 1992 </year>
Reference-contexts: The complete ISA description can be found in Kanes book <ref> [kane92] </ref>, including bit-level instruction descriptions, a full description of the five stage pipeline, and an explanation of the processor control that has been implemented. The caches are also described, but some modifications discussed below have been made, without modifying the ISA.
Reference: [chan93] <author> A. Chandrakasan, T. Burd, A. Burstein, S Narayanaswamy, S. Sheng, R.W. </author> <title> Brodersen; System Design of a Multimedia I/O Terminal; VLSI Signal Processing IV; IEEE Special Publications, </title> <year> 1993. </year>
Reference-contexts: Lastly, for ultra low-power portable designs, there will be a fundamental limit to the amount of on-board memory. Systems utilizing wireless links for remote mass storage will have to be used to allow this, similar to the InfoPad concept <ref> [chan93] </ref>. 6.3 What Next? It is quite clear that the focus will first be these three items: reduce external capacitance, optimize the instruction cache, optimize the integer datapath. Techniques for reducing the external capacitance were discussed in the previous section.
Reference: [henn90] <author> J. Hennessy, D. </author> <title> Patterson; Computer Architecture: </title> <publisher> A Quantitative Analysis; Morgan Kaufman Publishers, </publisher> <year> 1990 </year>
Reference-contexts: However, since it is only in use one quarter of the time, that number gets scaled down dramatically to 38.3 pF. In the analysis of RISC vs. CISC, many previously published works given relative breakdowns of jumps/branches, loads/stores, etc., which hold across a variety of RISC implementations <ref> [henn90] </ref>. This data alone can be incorporated to radically change the power usage estimates. <p> For the scope of this work, the caches are analyzed within the realm of normal operation, which is a cache hit. Previous work has shown a 2kByte cache yields under 15% miss rates, which puts an upper bound on the error of this assumption <ref> [henn90] </ref>. The PC bus is fed to all the bitsliced elements in the cache, and the vitags module as well. The average change of state for all bits of the PC is 7%, according to the collected data. <p> The net capacitance will then be scaled by this units utilization percentage. The average amount of loads and stores, as determined from measured data, is 22%, which is relatively close to previous calculations <ref> [henn90] </ref>. In normal operation, the random logics contribute 10.5 pF. ABUS is the main data bus, and has an average bitwise state change 22% of the time, indicating some correlation. The net contribution of the bitsliced cells is 8.4 pF, which includes all the major busses, except the DBUS. <p> This is still a significant fraction of the total power. The other method is to increase the cache size to reduce the miss rate. If the cache sizes were increased to 16 kByte, the miss rate drops to 6.6% for the instruction cache, and 1.4% for the data cache <ref> [henn90] </ref>. Then, the per cycle capacitance is reduced to 114 pF for 25 pF external loads. If the external loads are reduced to 15 pF, then the average capacitance switched becomes 74 pF. Even so, the power contribution is still 18%.
Reference: [burd94] <author> T. </author> <title> Burd; Low Power CMOS Library Design Methodology; ERL M.S. </title> <type> Report, </type> <month> July, </month> <year> 1994. </year> <editor> -gepp93] L. </editor> <title> Geppert; Not Your Fathers CPU, </title> <journal> IEEE Spectrum, </journal> <note> December 1993; pp. 20-23 </note>
Reference-contexts: The design of the processor is aided by Viewlogics schematic capture package. After translating the design database, a layout can be created, with the aid of the LagerIV Silicon Compiler. A complete low-power cell library is available for mapping to <ref> [burd94] </ref>. This includes low-power parameterizable SRAMs, bitsliced datapath cells, and a variety of standard cells. Custom bitslices are generated for some of the datapath cells that do not exist in the library, including an ALU, a register file, and other specialized cells (i.e.: the sign-extend module).
Reference: [att92] <author> ATT92010 Reference Manual, </author> <title> Release 1.3, </title> <journal> AT&T, </journal> <month> July </month> <year> 1992 </year>
Reference: [ples93] <author> ARM610 Users Manual, V. 1.0, GEC Plessey, </author> <month> March </month> <year> 1993 </year> <month> 25 </month>
References-found: 6

