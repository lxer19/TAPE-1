URL: http://www.cs.utexas.edu/users/dmcl/papers/ps/FTCS95.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/allpapers.html
Root-URL: 
Email: E-mail: fvin,shenoy,sriramg@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Title: Efficient Failure Recovery in Multi-Disk Multimedia Servers  
Author: Harrick M. Vin, Prashant J. Shenoy and Sriram Rao 
Address: Taylor Hall 2.124, Austin, Texas 78712-1188, USA  
Affiliation: Department of Computer Sciences, University of Texas at Austin  
Abstract: In this paper, we present a novel disk failure recovery method that utilizes the inherent redundancy in video streams (rather than error-correcting codes) to ensure that the user-invoked on-the-fly failure recovery process does not impose any additional load on the disk array. We also present a disk array architecture that enhances the scalability of multimedia servers by: (1) integrating the recovery process with the decompression of video streams, and thereby distributing the reconstruction process across the clients; and (2) supporting graceful degradation in the quality of recovered images with increase in the number of disk failures. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bitton and J. Gray. </author> <title> Disk Shadowing. </title> <booktitle> In Proceedings of the 14th Conference on Very Large Databases, </booktitle> <pages> pages 331-338, </pages> <year> 1988. </year>
Reference-contexts: In most of these systems, fault-tolerance is achieved either by disk mirroring <ref> [1] </ref> or parity encoding [5, 13]. Disk mirroring achieves fault-tolerance by duplicating data on separate disks (and thereby incurs 100% storage space overhead). Parity encoding, on the other hand, reduces the overhead considerably by employing error correcting codes. <p> To precisely describe the fault-free operation, consider a multimedia server that is servicing n clients, each retrieving a video stream (say S 1 ; S 2 ; :::; S n , respectively). Let R i pl ; 8i 2 <ref> [1; n] </ref>, denote the playback rate (expressed in images/sec) of video stream S i . Due to the periodic nature of media playback, a multimedia server can service these clients by proceeding in rounds. During each round, the server retrieves a fixed number of images for each client. <p> Assuming that the AC coefficients are numbered from left-to-right in a row-major order and that AC k O i denotes the k th AC coefficient (k 2 <ref> [1; 63] </ref>) of block O i , then the scrambling operation assigns AC k O i to be the k th coeffi cient of block c O j where j = (i + k) mod N . <p> Specifically, one of the blocks contain the DC coefficient and 64 AC coefficients, and all the remaining (N 1) blocks contain 64 AC coefficients. Figure 3 illustrates the operation of scrambling AC coefficients of four 4x4 blocks. and D 0 denote DC coefficients, and 8i 2 <ref> [1; 15] </ref> : A i ; B i ; C i and D i represent AC coefficients. 3.1.3 Combining Image Partitioning and Scram bling Techniques Given that each image in a video stream is being partitioned into N (N 4) sub-images, the SRJ compression algorithm involves two steps: (1) select a
Reference: [2] <author> P. Cao, S. B. Lim, S. Venkatraman, and J. Wilkes. </author> <title> The TickerTAIP parallel RAID architecture. </title> <booktitle> In Proceedings of the 1993 International Symposium on Computer Architecture, </booktitle> <pages> pages 52-63, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Algorithms for efficient failure recovery in multi-disk multimedia servers is the subject matter of this paper. 1.1 Relation to Previous Work During the past few years, we have seen a dramatic increase in the number of academic and industrial research projects investigating the design of fault-tolerant storage systems <ref> [2, 10] </ref>. In most of these systems, fault-tolerance is achieved either by disk mirroring [1] or parity encoding [5, 13]. Disk mirroring achieves fault-tolerance by duplicating data on separate disks (and thereby incurs 100% storage space overhead).
Reference: [3] <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson. </author> <title> RAID: High-Performance, Reliable Secondary Storage. </title> <journal> ACM Computing Surveys, </journal> <year> 1994. </year>
Reference-contexts: In summary, several research groups have recently developed techniques for designing fault-tolerant disk arrays <ref> [3] </ref>. However, most of the analytical as well as simulation models developed for failure recovery analysis have presumed conventional workload.
Reference: [4] <author> J. Gemmell, H. M. Vin, D. D. Kandlur, and P. V. Rangan. </author> <title> Multimedia Storage Servers: A Tutorial and Survey. </title> <booktitle> IEEE Computer, </booktitle> <year> 1995. </year>
Reference-contexts: Whereas several research groups have recently investigated techniques for ensuring continuous recording and retrieval of digital audio and video streams from a disk array <ref> [4] </ref>, the problem of meeting the real-time requirements imposed by these operations in the presence of disk failure have not received much attention.
Reference: [5] <author> G. Gibson and D. Patterson. </author> <title> Designing Disk Arrays for High Data Reliability. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <month> January </month> <year> 1993. </year>
Reference-contexts: In most of these systems, fault-tolerance is achieved either by disk mirroring [1] or parity encoding <ref> [5, 13] </ref>. Disk mirroring achieves fault-tolerance by duplicating data on separate disks (and thereby incurs 100% storage space overhead). Parity encoding, on the other hand, reduces the overhead considerably by employing error correcting codes.
Reference: [6] <author> J. Gray, B. Horst, and M. Walker. </author> <title> Parity Striping of Disc Arrays: Low-Cost Reliable Storage with Acceptable Throughput. </title> <booktitle> In Proceedings of the 16th Very Large Data Bases Conference, </booktitle> <pages> pages 148-160, </pages> <year> 1990. </year>
Reference-contexts: For instance, in a RAID level 5 disk array consisting of D disks, parity computed over data stored across (D 1) disks is stored on another disk (e.g., the left-symmetric parity assignment shown in Figure 1 (a)) <ref> [6, 9, 13] </ref>. In such architectures, if one of the disks fail, the data on the failed disk is recovered by taking an exclusive-or operation on the data and parity blocks stored on the surviving disks.
Reference: [7] <author> M. Holland and G. Gibson. </author> <title> Parity Declustering for Continuous Operation in Redundant Disk Arrays. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 23-35, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Thus, if the system is load balanced prior to disk failure, the surviving disks would observe at least twice as many requests in the presence of a failure [8]. The declustered parity disk array organization <ref> [7, 11, 12] </ref> addresses this problem by trading some of the array's capacity for improved performance in the presence of disk failures. Specifically, it requires that each parity block protect some smaller number of data blocks (say (G 1)).
Reference: [8] <author> M. Holland, G. Gibson, and D. Siewiorek. </author> <title> Fast, Online Recovery in Redundant Disk Arrays. </title> <booktitle> In Proceedings of the 23rd International Symposium on Fault Tolerant Computing, </booktitle> <pages> pages 422-431, </pages> <year> 1993. </year>
Reference-contexts: Thus, if the system is load balanced prior to disk failure, the surviving disks would observe at least twice as many requests in the presence of a failure <ref> [8] </ref>. The declustered parity disk array organization [7, 11, 12] addresses this problem by trading some of the array's capacity for improved performance in the presence of disk failures. Specifically, it requires that each parity block protect some smaller number of data blocks (say (G 1)). <p> In such a scenario, on-line reconstruction onto a spare disk can proceed simply by issuing low-priority read requests to access media blocks from each of the surviving disks <ref> [8] </ref>.
Reference: [9] <author> E.K. Lee and R. Katz. </author> <title> Performance Consequences of Parity Placement in Disk Arrays. </title> <booktitle> In Proceedings of the International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pages 190-199, </pages> <year> 1991. </year>
Reference-contexts: For instance, in a RAID level 5 disk array consisting of D disks, parity computed over data stored across (D 1) disks is stored on another disk (e.g., the left-symmetric parity assignment shown in Figure 1 (a)) <ref> [6, 9, 13] </ref>. In such architectures, if one of the disks fail, the data on the failed disk is recovered by taking an exclusive-or operation on the data and parity blocks stored on the surviving disks.
Reference: [10] <author> J. Menon and J. Cortney. </author> <title> The Architecture of a Fault-Tolerant Cached RAID Controller. </title> <booktitle> In Proceedings of the 20th International Symposium on Computer Architecture, </booktitle> <pages> pages 76-86, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Algorithms for efficient failure recovery in multi-disk multimedia servers is the subject matter of this paper. 1.1 Relation to Previous Work During the past few years, we have seen a dramatic increase in the number of academic and industrial research projects investigating the design of fault-tolerant storage systems <ref> [2, 10] </ref>. In most of these systems, fault-tolerance is achieved either by disk mirroring [1] or parity encoding [5, 13]. Disk mirroring achieves fault-tolerance by duplicating data on separate disks (and thereby incurs 100% storage space overhead).
Reference: [11] <author> A. Merchant and P. S. Yu. </author> <title> Design and Modeling of Clustered RAID. </title> <booktitle> In Proceedings of the International Symposium on Fault Tolerant Computing, </booktitle> <pages> pages 140-149, </pages> <year> 1992. </year>
Reference-contexts: Thus, if the system is load balanced prior to disk failure, the surviving disks would observe at least twice as many requests in the presence of a failure [8]. The declustered parity disk array organization <ref> [7, 11, 12] </ref> addresses this problem by trading some of the array's capacity for improved performance in the presence of disk failures. Specifically, it requires that each parity block protect some smaller number of data blocks (say (G 1)).
Reference: [12] <author> R. R. Muntz and J. C.S. Lui. </author> <title> Performance Analysis of Disk Arrays Under Failure. </title> <booktitle> In Proceedings of the 16th Conference on Very Large Databases, </booktitle> <pages> pages 162-173, </pages> <year> 1990. </year>
Reference-contexts: Thus, if the system is load balanced prior to disk failure, the surviving disks would observe at least twice as many requests in the presence of a failure [8]. The declustered parity disk array organization <ref> [7, 11, 12] </ref> addresses this problem by trading some of the array's capacity for improved performance in the presence of disk failures. Specifically, it requires that each parity block protect some smaller number of data blocks (say (G 1)).
Reference: [13] <author> D. Patterson, G. Gibson, and R. Katz. </author> <title> A Case for Redundant Array of Inexpensive Disks (RAID). </title> <booktitle> ACM SIGMOD'88, </booktitle> <pages> pages 109-116, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: In most of these systems, fault-tolerance is achieved either by disk mirroring [1] or parity encoding <ref> [5, 13] </ref>. Disk mirroring achieves fault-tolerance by duplicating data on separate disks (and thereby incurs 100% storage space overhead). Parity encoding, on the other hand, reduces the overhead considerably by employing error correcting codes. <p> For instance, in a RAID level 5 disk array consisting of D disks, parity computed over data stored across (D 1) disks is stored on another disk (e.g., the left-symmetric parity assignment shown in Figure 1 (a)) <ref> [6, 9, 13] </ref>. In such architectures, if one of the disks fail, the data on the failed disk is recovered by taking an exclusive-or operation on the data and parity blocks stored on the surviving disks.
Reference: [14] <author> W. B. Pennebaker and J. L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: Within each block, the AC coefficients are quantized to remove high frequency components, scanned in a zig-zag manner to obtain an approximate ordering from lowest to highest frequency, and finally run length and entropy encoded. Figure 2 depicts the main steps involved in the JPEG compression algorithm <ref> [14] </ref>.
Reference: [15] <author> E. J. Posnak, S. P. Gallindo, A. P. Stephens, and H. M. Vin. </author> <title> Techniques for Resilient Transmission of JPEG Video Streams. </title> <booktitle> In Proceedings of Multimedia Computing and Networking, </booktitle> <address> San Jose, CA, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: Moreover, no additional information will have to be retrieved from any of the surviving disks for recovery. Although conceptually elegant, such pre-compression image partitioning techniques significantly reduce the correlation between the pixels assigned to the same sub-image, and hence adversely affect image compression efficiency <ref> [15, 16] </ref>. The resultant increase in the bit-rate requirement may impose higher load on each disk in the array even during the fault-free state, thereby reducing the number of video streams that can be simultaneously retrieved from the server. <p> Specifically, one of the blocks contain the DC coefficient and 64 AC coefficients, and all the remaining (N 1) blocks contain 64 AC coefficients. Figure 3 illustrates the operation of scrambling AC coefficients of four 4x4 blocks. and D 0 denote DC coefficients, and 8i 2 <ref> [1; 15] </ref> : A i ; B i ; C i and D i represent AC coefficients. 3.1.3 Combining Image Partitioning and Scram bling Techniques Given that each image in a video stream is being partitioned into N (N 4) sub-images, the SRJ compression algorithm involves two steps: (1) select a
Reference: [16] <author> C.J. Turner and L.L. Peterson. </author> <title> Image Transfer: An End to End Design. </title> <booktitle> In Proceedings of ACM SIG-COMM'92, Baltimore, </booktitle> <pages> pages 258-268, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Moreover, no additional information will have to be retrieved from any of the surviving disks for recovery. Although conceptually elegant, such pre-compression image partitioning techniques significantly reduce the correlation between the pixels assigned to the same sub-image, and hence adversely affect image compression efficiency <ref> [15, 16] </ref>. The resultant increase in the bit-rate requirement may impose higher load on each disk in the array even during the fault-free state, thereby reducing the number of video streams that can be simultaneously retrieved from the server.
Reference: [17] <author> H. M. Vin, P. J. Shenoy, and S. Rao. </author> <title> Efficient Failure Recovery in Multi-Disk Multimedia Servers. </title> <type> Technical Report TR-95-15, </type> <institution> Department of Computer Sciences, Univ. of Texas at Austin, </institution> <year> 1995. </year>
Reference-contexts: Proof: The necessity and the sufficiency of this condition can be derived by construction <ref> [17] </ref>. Notice that when an image is partitioned into 4 sub-images, each sub-image contains 25% of the image data in the frequency domain. Consequently, if the information contained in a sub-image is not available, the image will have to be reconstructed from the remaining 75% of the data.
References-found: 17

