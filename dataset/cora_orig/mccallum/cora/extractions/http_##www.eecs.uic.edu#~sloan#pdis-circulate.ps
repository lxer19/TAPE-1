URL: http://www.eecs.uic.edu/~sloan/pdis-circulate.ps
Refering-URL: http://www.eecs.uic.edu/~sloan/papers.html
Root-URL: 
Title: Divergence Caching in Client-Server Architectures  
Author: Yixiu Huang Robert H. Sloan Ouri Wolfson 
Note: In: Proceedings of the Third International Conference on Parallel and Distributed Information Systems (PDIS '94) Austin, Texas, September 1994, IEEE, pages 131-139.  
Address: Chicago, IL 60607  
Affiliation: Electrical Engineering and Computer Science Dept. University of Illinois at Chicago  
Abstract: In this paper we propose a new mechanism, divergence caching, for reducing access and communication charges in accessing on-line database servers. The objective is achieved by allowing tolerant read requests, namely requests that can be satisfied by out-of-date data. We propose two algorithms based on divergence caching, Static and Dynamic. The first is appropriate when the access pattern to an object in the database is fixed and known, and the latter is appropriate in other cases. We analyze these algorithms in the worst case and the expected case. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alonso, D. Barbara, and H. Garcia-Molina. </author> <title> Quasi copies: Efficient data sharing for information retrieval systems. </title> <booktitle> In Proc. of EDBT '88, </booktitle> <publisher> LNCS 303. Springer Verlag, </publisher> <year> 1988. </year>
Reference-contexts: In other words, in a weak consistency environment the access pattern of an object determines not only the allocation scheme, but also the frequency at which the object is refreshed. Now we will discuss related works on replica divergence. There are several studies of replica-divergence issues, such as <ref> [1, 2, 4, 12, 14] </ref>. These works assume, as we do, that each object has a computer that stores the most up to date version, and other computers store quasi-replicas that may diverge. The allowed divergence is specified by the user.
Reference: [2] <author> R. Alonso, D. Barbara, and H. Garcia-Molina. </author> <title> Data caching issues in an information retrieval system. </title> <journal> ACM Trans. Database Syst., </journal> <volume> 15(3) </volume> <pages> 359-384, </pages> <year> 1990. </year>
Reference-contexts: In other words, in a weak consistency environment the access pattern of an object determines not only the allocation scheme, but also the frequency at which the object is refreshed. Now we will discuss related works on replica divergence. There are several studies of replica-divergence issues, such as <ref> [1, 2, 4, 12, 14] </ref>. These works assume, as we do, that each object has a computer that stores the most up to date version, and other computers store quasi-replicas that may diverge. The allowed divergence is specified by the user. <p> The allowed divergence is specified by the user. In other words, a user manually specifies for each quasi-replica of an object a fixed divergence which results in a fixed refresh rate. For example, in <ref> [2] </ref>, if the quasi-replica of object x at a particular computer c has a refresh rate of three, then every third update generates a refresh of x at c. Therefore, the divergence is specified at the quasi-replica level.
Reference: [3] <author> B. R. Badrinath and T. Imielinski. </author> <title> Replication and mobility. </title> <booktitle> In Proceedings of the Second Workshop on the Management of Replicated Data, </booktitle> <pages> pages 9-12. </pages>
Reference-contexts: For example, passengers will access airline and other carriers' schedules, and weather information. Investors will access prices of financial instruments, salespeople will access inventory data, callers will access location-dependent data (e.g. where is the nearest taxicab, see <ref> [3, 9] </ref>) and route-planning computers in cars will access traffic information. Because of limited bandwidth, wireless communication is more expensive than wire communication.
Reference: [4] <author> D. Barbara and H. Garcia-Molina. </author> <title> The case for con trolled inconsistency in replicated data. </title> <booktitle> In Proc. of the IEEE Workshop on replicated data, </booktitle> <year> 1990. </year>
Reference-contexts: In other words, in a weak consistency environment the access pattern of an object determines not only the allocation scheme, but also the frequency at which the object is refreshed. Now we will discuss related works on replica divergence. There are several studies of replica-divergence issues, such as <ref> [1, 2, 4, 12, 14] </ref>. These works assume, as we do, that each object has a computer that stores the most up to date version, and other computers store quasi-replicas that may diverge. The allowed divergence is specified by the user.
Reference: [5] <author> M. J. Carey, M. J. Franklin, M. Livny, and E. J. Shekita. </author> <title> Data caching tradeoffs in client-server DBMS architectures. </title> <booktitle> In Proc. 1991 ACM SIGMOD Internat. Conf. on Management of Data, </booktitle> <pages> pages 357-366, </pages> <year> 1991. </year>
Reference-contexts: This is due to the increasing cost of control messages to reset the CC's refresh rate. 7 Relevant research This paper is related to two topics, caching and replica divergence. We will first discuss related works on caching. Such works (e.g. <ref> [5, 11, 10, 13] </ref>) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. [6, 7, 8]) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation.
Reference: [6] <author> Y. Huang, P. Sistla, and O. Wolfson. </author> <title> Data replication for mobile computers. </title> <booktitle> In Proc. 1994 ACM SIGMOD Internat. Conf. on Management of Data, </booktitle> <pages> pages 13-24. </pages>
Reference-contexts: On the other hand, assume that each type of request is Poisson distributed with a fixed parameter. Then, by the law of large numbers, the larger the value of k, the closer are the values in the request-numbers-window to the actual 's. However, in <ref> [6] </ref> we have shown that, even if the distribution parameters are fixed (but unknown), for a window of size 23, the expected cost of a sliding window algorithm comes within 4% of the optimum expected cost. <p> We also compared the optimal static algorithm to the better (on the particular run) of the static algorithms with refresh rates 1 and infinity. This corresponds to traditional methods that do not allow for divergence caching, but only for caching (refresh rate 1) or not caching (refresh rate infinity) <ref> [6] </ref>. The optimal static algorithm showed, on average, a factor of two improvement. This demonstrates the power of divergence caching. Note that the factor of two improvement is an average over 84 different settings of the s. <p> We will first discuss related works on caching. Such works (e.g. [5, 11, 10, 13]) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. <ref> [6, 7, 8] </ref>) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation. The objective of dynamic allocation is to minimize communication, i.e. the number of object transfers, rather than optimizing performance as in traditional caching.
Reference: [7] <author> Y. Huang and O. Wolfson. </author> <title> A competitive dynamic data replication algorithm. </title> <booktitle> In Proc. Ninth Internat. Conf. on Data Engineering, </booktitle> <pages> pages 310-317, </pages> <address> Vienna, Austria, 1993. </address> <publisher> IEEE. </publisher>
Reference-contexts: We will first discuss related works on caching. Such works (e.g. [5, 11, 10, 13]) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. <ref> [6, 7, 8] </ref>) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation. The objective of dynamic allocation is to minimize communication, i.e. the number of object transfers, rather than optimizing performance as in traditional caching.
Reference: [8] <author> Y. Huang and O. Wolfson. </author> <title> Dynamic allocation in distributed systems and mobile computers. </title> <booktitle> In Proc. Tenth Internat. Conf. on Data Engineering, </booktitle> <pages> pages 20-29, </pages> <address> Houston, Texas, 1994. </address> <publisher> IEEE. </publisher>
Reference-contexts: We will first discuss related works on caching. Such works (e.g. [5, 11, 10, 13]) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. <ref> [6, 7, 8] </ref>) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation. The objective of dynamic allocation is to minimize communication, i.e. the number of object transfers, rather than optimizing performance as in traditional caching.
Reference: [9] <author> T. Imielinski and B. R. Badrinath. </author> <title> Querying in highly mobile distributed environments. </title> <booktitle> In Proc. of the 18th International Conference on VLDB, </booktitle> <pages> pages 41-52, </pages> <year> 1992. </year>
Reference-contexts: For example, passengers will access airline and other carriers' schedules, and weather information. Investors will access prices of financial instruments, salespeople will access inventory data, callers will access location-dependent data (e.g. where is the nearest taxicab, see <ref> [3, 9] </ref>) and route-planning computers in cars will access traffic information. Because of limited bandwidth, wireless communication is more expensive than wire communication.
Reference: [10] <author> A. Karlin, M. Manasse, L. Rudolph, and D. Sleator. </author> <title> Competitive snoopy caching. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 79-119, </pages> <year> 1988. </year>
Reference-contexts: We prove that the DDC algorithm is superior to the SDC algorithm. The appropriate measure of the worst-case behavior of on-line algorithms is its competitiveness <ref> [10] </ref>. An on-line algorithm is an algorithm that receives its input schedule one request at a time, and acts on each request before obtaining the next one. <p> This is due to the increasing cost of control messages to reset the CC's refresh rate. 7 Relevant research This paper is related to two topics, caching and replica divergence. We will first discuss related works on caching. Such works (e.g. <ref> [5, 11, 10, 13] </ref>) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. [6, 7, 8]) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation.
Reference: [11] <author> K. Li and P. Hudak. </author> <title> Memory coherence in shared virtual memory systems. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 7(4) </volume> <pages> 321-359, </pages> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: This is due to the increasing cost of control messages to reset the CC's refresh rate. 7 Relevant research This paper is related to two topics, caching and replica divergence. We will first discuss related works on caching. Such works (e.g. <ref> [5, 11, 10, 13] </ref>) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. [6, 7, 8]) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation.
Reference: [12] <author> B. Lindsay, L. Haas, C. Mohan, H. Pirahesh, and P. Wilms. </author> <title> A snapshot differential refresh algorithm. </title> <booktitle> In Proc. ACM SIGMOD Internat. Conf. on Management of Data, </booktitle> <pages> pages 53-60, </pages> <year> 1986. </year>
Reference-contexts: In other words, in a weak consistency environment the access pattern of an object determines not only the allocation scheme, but also the frequency at which the object is refreshed. Now we will discuss related works on replica divergence. There are several studies of replica-divergence issues, such as <ref> [1, 2, 4, 12, 14] </ref>. These works assume, as we do, that each object has a computer that stores the most up to date version, and other computers store quasi-replicas that may diverge. The allowed divergence is specified by the user.
Reference: [13] <author> M. Satyanarayanan, J. J. Kistler, P. Kumar, M. E. Okasaki, E. H. Siegel, and D. C. Steere. Coda: </author> <title> A highly available file system for a distributed workstation environment. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> 39(4) </volume> <pages> 447-459, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: This is due to the increasing cost of control messages to reset the CC's refresh rate. 7 Relevant research This paper is related to two topics, caching and replica divergence. We will first discuss related works on caching. Such works (e.g. <ref> [5, 11, 10, 13] </ref>) have assumed a consistent environment, i.e. one in which cached objects are copies of the most recent version. In our previous works (e.g. [6, 7, 8]) we have also made this assumption, and we have concentrated on a variant of caching called dynamic allocation.
Reference: [14] <author> D. B. Terry. </author> <title> Caching hints in distributed systems. </title> <journal> IEEE Trans. Softw. Eng., </journal> <pages> pages 48-54, </pages> <month> Jan. </month> <year> 1987. </year>
Reference-contexts: In other words, in a weak consistency environment the access pattern of an object determines not only the allocation scheme, but also the frequency at which the object is refreshed. Now we will discuss related works on replica divergence. There are several studies of replica-divergence issues, such as <ref> [1, 2, 4, 12, 14] </ref>. These works assume, as we do, that each object has a computer that stores the most up to date version, and other computers store quasi-replicas that may diverge. The allowed divergence is specified by the user.
References-found: 14

