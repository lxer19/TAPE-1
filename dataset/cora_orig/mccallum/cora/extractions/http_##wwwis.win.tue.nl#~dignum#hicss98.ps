URL: http://wwwis.win.tue.nl/~dignum/hicss98.ps
Refering-URL: http://wwwis.win.tue.nl/~dignum/papers.html
Root-URL: http://www.win.tue.nl
Email: e-mail: fdignum,wsinruurg@win.tue.nl  
Title: Obligations and Dense Time for Specifying Deadlines  
Author: F. Dignum, R. Kuiper 
Address: P.O.box 513, 5600 MB Eindhoven, The Netherlands, tel.+31-40-472733,  
Affiliation: Fac. of Maths. Comp. Sc., Eindhoven University of Technology  
Abstract: In this paper we consider the notion of deadlines in the context of dense time. We show that obligations and actions are essential elements for the specification of deadlines. These notions can be relatively easy combined when a discrete temporal framework is used. However, we show that, once a dense time is introduced, several problems appear. In solving these problems we cannot use the same framework and definitions as used for the discrete time. In the new framework we use a branching dense temporal framework as a basis to specify both actions and obligations. Finally we show that all types of deadlines that were defined for the discrete temporal framework can also be defined for dense time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.F. Allen. </author> <title> An Interval-based Representation of Temporal Knowledge. </title> <booktitle> Proc. 7th Int. Joint Conf. on Artificial Intelligence, </booktitle> <address> Vancouver, Canada, </address> <year> 1981, </year> <pages> pp. 221-226. </pages>
Reference-contexts: It appears that this type of action description is not suitable when we want to express obligation on actions as well. An alternative approach to describe actions in a temporal framework is given by Allen <ref> [1] </ref>. He uses temporal intervals as primitives in the logic. Therefore the representation of writing an article becomes: OCCU R (write article; t) where t stands for an interval.
Reference: [2] <author> H.Barringer, R.Kuiper, A. Pnueli, </author> <title> Now you may compose temporal logic specifications, </title> <booktitle> Proc. 16th ACM Symposium on Theory of Computing, </booktitle> <address> pp51-63, </address> <year> 1984. </year>
Reference-contexts: I.e. there is no general definition that can be used for compound actions and that can be decomposed into obligations on the basic actions. That compositionality of operators on actions is a difficult problem in a dense time framework can also be seen in <ref> [2] </ref>. This problem is caused by the differing durations of the actions within the compound action. A solution might be to introduce an extra operator Af ter (ff)OE which would be the equivalent to the dynamic logic operator [ff]OE.
Reference: [3] <author> Barringer, H., Kuiper, R., Pnueli, A., </author> <title> A really abstract concurrent model and its temporal logic, </title> <booktitle> Proc. of the 13th ACM Symposium on Pinciples of Programming Languages pp. </booktitle> <address> 173-183,1986 </address>
Reference: [4] <author> N. Belnap and M. Perloff. </author> <title> Seeing to it that: a canonical form to agentives. </title> <type> Theoria 54, </type> <year> 1988, </year> <pages> pp. 175-199. </pages>
Reference-contexts: For instance, Thomason [18] uses a reduction of obligation to truth in all future courses of action/time that are morally acceptable, and Horty [13] considers a branching-time framework and defines obligations on the basis of the choices available to the agent and `stit' (seeing to it that) constructs (cf. <ref> [4] </ref>).
Reference: [5] <author> R.M. Chisholm. </author> <booktitle> Contrary-to-Duty Imperatives and Deontic Logic. Analysis 24, </booktitle> <year> 1963, </year> <pages> pp. 33-36. </pages>
Reference-contexts: Van Eck uses these modalities idea to solve contrary-to-duty paradoxes such as a certain (the `Suzy Mae' or `forward') version of the Chisholm paradox <ref> [5, 16] </ref>. The notions of temporal necessity and obligation as considered by Van Eck are very different from our temporal and deontic operators. Van Eck's obligation may be viewed as a temporal variant of a (deontic) conditional, whereas our obligation operator has no such flavour.
Reference: [6] <author> F. Dignum and R. Kuiper. </author> <title> Combining dynamic de-ontic logic and temporal logic for the specification of deadlines. </title> <editor> In Jr. R. Sprague, editor, </editor> <booktitle> Proceedings of thirtieth HICSS, </booktitle> <address> Wailea, Hawaii, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction In <ref> [6] </ref> we have already argued that it is important to be able to specify deadlines in a declarative way for e.g. agent applications. In this way it is possible for the agent to reason about the deadlines before the planning process determines the next (sequence of) action (s). <p> It is also clear that deadlines involve a temporal element and an action element. Every deadline specifies some temporal condition before which an action has to be performed. Therefore the modeling framework should contain some type of action descriptions as well as some temporal concepts. In <ref> [6] </ref> we have shown how temporal operators can be added to the dynamic logic framework to model deadlines. This can be done relatively easy in the case of a discrete temporal framework. <p> In section 3 we describe the dynamic obligations within a branching dense temporal framework. We also discuss the topic of persistence of violations in this framework. In section 4 we describe the deadlines that were already defined in <ref> [6] </ref> in this new framework. <p> As in <ref> [6] </ref> we can define the derived operators 3 (even- tually) and 2 (always from now) as follows: * 3OE := trueU OE; * 2OE := :3:OE; These operators will be used later in the definition of deadlines. <p> This last reading is indeed very close to the reading of the definition of obligation in the dynamic logic setting. In <ref> [6] </ref> the obligation to perform an action was expressed in terms of an obligation for a certain formula to hold: O (ff) = def [any]O (DON E (ff)) which means that whatever you do now afterwards the formula DON E (ff) is obliged to hold. <p> We avoided these complications through the introduction of the violation predicate V , which can be seen as an abreviation of the formula: O (OE) ^ :OE This keeps the logic simpler and more adequate for our present purpose. However, the definition as in <ref> [6] </ref> could also be expressed easily in our present framework when we extend it with obligations over formulas in the fol lowing way: O (ff) = def A (DOIN G (ff)U O (DON E (ff))) Obligations on compound actions We will in this section examine briefly how the general definition given <p> 2 ) = d ef A (time = k ! 2 [time = k + t 1 ! time &lt; k + t 1 + t 2 U (DON E (ff) _ V p (ff))]) This concludes the definition of all the types of deadlines that were also defined in <ref> [6] </ref>. In that paper we have already shown that these definitions are sufficient to model most common deadlines. 5 Conclusions Deadlines play an important role in flexible transactions. In situations where several systems have to cooperate deadlines are a means to specify expectations of the behaviour of the other parties.
Reference: [7] <author> F. Dignum, R. Kuiper and J.-J.Ch. </author> <title> Meyer Obligations in a temporal framework submitted to DEON98 </title>
Reference-contexts: In these cases it is worthwhile to explore the use of continuous (or dense) time. In <ref> [7] </ref> we explored the possibilities to combine obligations with a temporal framework based on continuous time. In this case the Kripke structures that function as semantics for dynamic logic cannot function as a basis for the combination anymore. This is due to their inherent discrete nature. <p> Therefore we have to use a model for continuous temporal logic as a basis for the combination. On top of such a temporal model we have to construct an action logic, because the representation of (combinations of) actions is essential for the description of deadlines. In <ref> [7] </ref> we already sketched some other approaches that combine temporal and deontic logics. We will recapitulate them here briefly. The approaches described in e.g. [18, 13, 10, 8, 9] tend to express the deontic concepts/operators in terms of temporal concepts/operators.
Reference: [8] <author> J.A. van Eck. </author> <title> A System of Temporally Relative Modal and Deontic Predicate Logic and Its Philosophical Applications (1), Logique et Analyse 99, </title> <booktitle> 1982, </booktitle> <pages> pp. 249-290. </pages>
Reference-contexts: In [7] we already sketched some other approaches that combine temporal and deontic logics. We will recapitulate them here briefly. The approaches described in e.g. <ref> [18, 13, 10, 8, 9] </ref> tend to express the deontic concepts/operators in terms of temporal concepts/operators. This is the most obvious in the approach of [10] where obligation is viewed as a kind of liveness condition: something will happen sometime in the future. <p> Finally, Van Eck <ref> [8, 9] </ref> employs a temporal necessity operator 2 t that is evaluated with respect to a set of (linear) time structures (`world courses' in the terminology of Van Eck): 2 t ' means that in every world course that is the same up to t (and not including t) the formula
Reference: [9] <author> J.A. van Eck. </author> <title> A System of Temporally Relative Modal and Deontic Predicate Logic and Its Philosophical Applications (2), Logique et Analyse 100, </title> <booktitle> 1982, </booktitle> <pages> pp. 339-381. </pages>
Reference-contexts: In [7] we already sketched some other approaches that combine temporal and deontic logics. We will recapitulate them here briefly. The approaches described in e.g. <ref> [18, 13, 10, 8, 9] </ref> tend to express the deontic concepts/operators in terms of temporal concepts/operators. This is the most obvious in the approach of [10] where obligation is viewed as a kind of liveness condition: something will happen sometime in the future. <p> Finally, Van Eck <ref> [8, 9] </ref> employs a temporal necessity operator 2 t that is evaluated with respect to a set of (linear) time structures (`world courses' in the terminology of Van Eck): 2 t ' means that in every world course that is the same up to t (and not including t) the formula <p> Philosophically this is defended as follows: since the past cannot be changed, there are no other possibilities than what actually happened, so this happened necessarily. Furthermore, Van Eck considers in <ref> [9] </ref> obligations of the form 'O t expressing that in all world courses that are possible from time t onwards and are as perfect as possible-given that ' is the case in them is the case.
Reference: [10] <author> J. Fiadeiro and T. Maibaum. </author> <title> Temporal Reasoning over Deontic Specification. </title> <journal> In Journal of Logic and Computation, </journal> <volume> 1 (3), </volume> <year> 1991. </year>
Reference-contexts: In [7] we already sketched some other approaches that combine temporal and deontic logics. We will recapitulate them here briefly. The approaches described in e.g. <ref> [18, 13, 10, 8, 9] </ref> tend to express the deontic concepts/operators in terms of temporal concepts/operators. This is the most obvious in the approach of [10] where obligation is viewed as a kind of liveness condition: something will happen sometime in the future. <p> We will recapitulate them here briefly. The approaches described in e.g. [18, 13, 10, 8, 9] tend to express the deontic concepts/operators in terms of temporal concepts/operators. This is the most obvious in the approach of <ref> [10] </ref> where obligation is viewed as a kind of liveness condition: something will happen sometime in the future. <p> Usually this definition of an obligation is to weak. It only states that the action should be performed sometimes, but this can be after an infinite time. It resembles the "liveness" property as described in <ref> [10] </ref>. We can strengthen this definition in several ways. The first is to demand that the action is performed before a certain condition becomes true.
Reference: [11] <author> E. Harel, O. Lichtenstein and A. Pnueli. </author> <title> Explicit clock temporal logic. </title> <booktitle> In Proceedings Symposium on Logic in Computer Science, </booktitle> <pages> pages 402-413, </pages> <year> 1990. </year>
Reference-contexts: Up till now we only described deadlines with an implicit time. Real time, i.e., a quantitative time treatment allowing us to specify numeric deadlines can be added to the above approach by keeping an explicit clock variable that stores the real time (cf. <ref> [11, 17] </ref>). We distinguish between relative and absolute time conditions. For the absolute time conditions we introduce a special variable time.
Reference: [12] <author> J. Hintikka. </author> <title> Some Main Problems of Deontic Logic. </title> <editor> In R. Hilpinen (ed.), </editor> <booktitle> Deontic Logic: Introductory and Systematic Readings, </booktitle> <pages> pages 59-103, </pages> <publisher> Reidel, </publisher> <year> 1971. </year>
Reference-contexts: The only counterintuitive aspect of this definition is that the starting condition of the obligation lays outside the scope of the O operator while the end condition of the obligation lays within the scope of the O operator. See <ref> [12] </ref> for a more thorough discussion on this topic. In most cases the deadline is enforced only once (or explicitly reenforced every time it is needed).
Reference: [13] <author> J.F. Horty. </author> <title> Combining Agency and Obligation. </title> <editor> In M. Brown and J. Carmo (eds.), </editor> <booktitle> Deontic Logic, Agency and Normative Systems, </booktitle> <pages> pages 98-122, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: In [7] we already sketched some other approaches that combine temporal and deontic logics. We will recapitulate them here briefly. The approaches described in e.g. <ref> [18, 13, 10, 8, 9] </ref> tend to express the deontic concepts/operators in terms of temporal concepts/operators. This is the most obvious in the approach of [10] where obligation is viewed as a kind of liveness condition: something will happen sometime in the future. <p> For instance, Thomason [18] uses a reduction of obligation to truth in all future courses of action/time that are morally acceptable, and Horty <ref> [13] </ref> considers a branching-time framework and defines obligations on the basis of the choices available to the agent and `stit' (seeing to it that) constructs (cf. [4]).
Reference: [14] <author> J.-J.Ch. Meyer. </author> <title> A different approach to deontic logic: Deontic logic viewed as a variant of dynamic logic. </title> <journal> In Notre Dame Journal of Formal Logic, </journal> <volume> vol.29, </volume> <pages> pages 109-136, </pages> <year> 1988. </year>
Reference-contexts: Van Eck's obligation may be viewed as a temporal variant of a (deontic) conditional, whereas our obligation operator has no such flavour. We will use a dynamic obligation based on the one defined in <ref> [14] </ref>. Also we try to add a temporal dimension to these dynamic obligations instead of expressing the obligations in terms of some temporal operators. This paper should be viewed as a first experiment to express deadlines in a (branching) dense time. <p> This will form the basis of the definition of the deadlines given in section 4. 3 Obligations in a dense temporal logic In this section we will investigate how the concepts of dynamic deontic logic as defined in e.g. <ref> [14] </ref> can be expressed in a temporal framework. Extending the notion of action to dense time means adding duration.
Reference: [15] <author> J.-J. Ch. Meyer and R.J. Wieringa. </author> <title> Deontic Logic: </title>
Reference-contexts: Now the obligation on an action is represented in an atomic way: O (OCCU R (write article; t)); where we assume O to be a standard `ought-to-be' obligation operator (as in standard deontic logic, cf. e.g. <ref> [15] </ref>). However, we now have the problem that the obligation also seems to include the specific interval during which the action is supposed to occur. When is the above obligation violated? Formally this happens when :OCCU R (write article; t) is true.
References-found: 15

