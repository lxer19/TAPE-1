URL: http://medg.lcs.mit.edu/people/emjordan/final.ps
Refering-URL: http://theory.lcs.mit.edu/~emjordan/
Root-URL: 
Title: Visualizing Measures of Genetic Distance  
Author: Eric M. Jordan 
Abstract: Recent research has analyzed the effects of specific types of evolutionary events on a genome, including translocations [KR95], transpositions [BP95b], and inversions [BP93] (signed [KS94, HP95] or unsigned [KS95]). Many of these papers describe either approximate or exact (usually branch and bound) algorithms for finding the minimum number of operations required to transform one sequence of genes into another. The algorithms depend on the fact that lower bounds on the values that they seek can be derived by examining the alternating cycles in certain "dart graphs" (our term) that can be constructed from a permutation. One goal of this paper is to provide a more intuitive understanding of these alternating cycles. We will show that a dart graph is a representation of a rotation system [GT87], which is itself a combinatorial representation of a closed surface. After describing a correspondence between dart graphs and a more direct representation of rotation systems (which we will call "embedded graphs"), we will show that the lower bound derived in [BP95b] on transpositions is the genus of the surface represented by the rotation system, and that the lower bound derived in [BP93] on signed reversals is the crosscap number. For the implementation challenge, we wrote a program that takes a permutation and displays the associated surface, to help illustrate what the lower bounds measure. This will provide a new understanding of what the alternating cycles in a dart graph represent. We hope that our program will reveal intuition that can be used to further the research on the genome rearrangement problem, and will allow researchers to visualize the relationship between any two specific sequences. 
Abstract-found: 1
Intro-found: 1
Reference: [BP93] <author> Vineet Bafna and Pavel Pevzner, </author> <title> Genome rearrangements and sorting by reversals, </title> <booktitle> Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1993, </year> <pages> pp. 148-157. </pages>
Reference-contexts: that attack the genome rearrangement problem, and because they have potential as measures of evolutionary distance. [BP95a] notes that in particular, the bound on inversion distance is tight "for all biological examples we studied." However, there seems to be no intuitive explanations for these "hidden parameters" (a term used in <ref> [BP93] </ref>) in the literature. By establishing a correspondence between embedded graphs and dart graphs, we will be able to relate the lower bounds on permutation distance to the number of crosscaps and handles on a surface. <p> But, (n + 1 c)=2 is the first lower bound on the transposition distance in [BP95b]. If a permutation is signed, then its dart graph is very similar to the breakpoint graph introduced in <ref> [BP93] </ref> and used for signed inversions in [HP95], and to the cycle graph used to prove the same lower bound in [KS94].
Reference: [BP95a] <author> Vineet Bafna and Pavel Pevzner, </author> <title> Sorting by reversals: Genome rearrangements in plant organelles and evolutionary history of x chromosome, Mol. </title> <journal> Biol. Evol. </journal> <volume> 12 (1995), no. 2, </volume> <pages> 239-246. </pages>
Reference-contexts: These lower bounds are important, because they are essential to the construction of several algorithms (both approximate and exact) that attack the genome rearrangement problem, and because they have potential as measures of evolutionary distance. <ref> [BP95a] </ref> notes that in particular, the bound on inversion distance is tight "for all biological examples we studied." However, there seems to be no intuitive explanations for these "hidden parameters" (a term used in [BP93]) in the literature.
Reference: [BP95b] <author> Vineet Bafna and Pavel Pevzner, </author> <title> Sorting permutations by transpositions, </title> <booktitle> Proceedings of the 6th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. 614-623. </pages>
Reference-contexts: Figure 4 illustrates the relationship between a permutation, its dart graph, and its embedded graph. If a permutation can be turned into the identity using only transpositions, then the resulting rotation system has only flat edges. The dart graph is then the same as the cycle graph described in <ref> [BP95b] </ref> with the addition of edges from 0 to n + 1 and back. <p> Applying Euler's formula, the genus fl of the embedded graph satisfies 2 (n + 2) + (c + 1) = 2 2fl ) fl = (n + 1 c)=2. But, (n + 1 c)=2 is the first lower bound on the transposition distance in <ref> [BP95b] </ref>. If a permutation is signed, then its dart graph is very similar to the breakpoint graph introduced in [BP93] and used for signed inversions in [HP95], and to the cycle graph used to prove the same lower bound in [KS94].
Reference: [FG82] <author> P. A. Firby and C. F. Gardiner, </author> <title> Surface topology, </title> <publisher> Ellis Horwood Limited, </publisher> <year> 1982. </year>
Reference-contexts: Our algorithm is based on a close examination of the proof of the classification theorem in <ref> [FG82] </ref>. Note that while we could construct surfaces that contained either only crosscaps or only handles, the algorithm we implemented will actually construct surfaces that contain both handles and crosscaps.
Reference: [GT87] <author> Johnathan Gross and Thomas Tucker, </author> <title> Topological graph theory, </title> <publisher> Wiley-Interscience Publication, </publisher> <year> 1987. </year>
Reference-contexts: First, there is a circular ordering of edges associated with each vertex, rather than just a set of edges. Second, in a rotation system, there is a "twist bit" associated with each edge, that specifies whether the edge is flat (type 0) or twisted (type 1) <ref> [Tut79, GT87] </ref>. In this paper, we consider two ways to represent a rotation system in a com puter. <p> Euler's Formula Given a rotation system, Euler's formula can be used to characterize the surface that it represents in terms of genus if the surface is orientable, and in terms of crosscap number if it is not <ref> [GT87, pages 122-124] </ref>. However, in order to use Euler's formula, we have to extract one piece of information about the rotation system that we have not discussed yet: the number of faces. The face tracing algorithm for a rotation system is described in detail in [GT87]. <p> However, in order to use Euler's formula, we have to extract one piece of information about the rotation system that we have not discussed yet: the number of faces. The face tracing algorithm for a rotation system is described in detail in <ref> [GT87] </ref>. In particular, if this algorithm is applied to a rotation system that has no twisted edges, then the faces are traced out by the permutation P (as Tutte showed). <p> The result is an embedding of G in a surface with m crosscaps. Now, "it can be shown as a generalization of the Schoenfliess theorem that for any imbedding G ! S, the graph G is contained in the 1-skeleton of a triangulation of the surface S" <ref> [GT87, page 100] </ref>. The 1-skeleton of a triangulation of S is itself an embedded graph T , whose crosscap number is m.
Reference: [HP95] <author> Sridhar Hannenhalli and Pavel Pevzner, </author> <title> Transforming cabbage into turnip, </title> <booktitle> Proceedings of the 27th Annual ACM Symposium on the Theory of Computation, </booktitle> <year> 1995. </year>
Reference-contexts: But, (n + 1 c)=2 is the first lower bound on the transposition distance in [BP95b]. If a permutation is signed, then its dart graph is very similar to the breakpoint graph introduced in [BP93] and used for signed inversions in <ref> [HP95] </ref>, and to the cycle graph used to prove the same lower bound in [KS94].
Reference: [KR95] <author> John Kececioglu and R. Ravi, </author> <title> Of mice and men: Algorithms for evolutionary distances between genomes with translocation, </title> <booktitle> Proceedings of the 6th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. 604-613. </pages>
Reference: [KS94] <author> John Kececioglu and David Sankoff, </author> <title> Efficient bounds for oriented chromosome inversion distance, </title> <booktitle> Proceedings of the Fifth Annual Symposium on Combinatorial Pattern Matching, Lecture Notes in Comput. Sci., </booktitle> <volume> vol. 807, </volume> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 307-325. </pages>
Reference-contexts: If a permutation is signed, then its dart graph is very similar to the breakpoint graph introduced in [BP93] and used for signed inversions in [HP95], and to the cycle graph used to prove the same lower bound in <ref> [KS94] </ref>.
Reference: [KS95] <author> John Kececioglu and David Sankoff, </author> <title> Exact and approximation algorithms for sorting by reversals, with applications to genome rearrangement, </title> <booktitle> Algorithmica 13 (1995), </booktitle> <pages> 180-210. </pages>
Reference: [Sti93] <author> John Stillwell, </author> <title> Classical topology and combinatorial group theory, second ed., Grad. </title> <journal> Texts in Math., </journal> <volume> vol. 72, </volume> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Recall, however, that even though two embedded graphs may be equivalent in the sense that they 12 ERIC M. JORDAN represent homeomorphic surfaces, it is not necessarily possible to continuously deform one into the other; being homeomorphic only requires that there be a mapping that preserves neighborhoods <ref> [Sti93] </ref>. Intuitively, this means that properties of a surface that are invariant under a homeomorphism are properties of the surface, and not properties of the embedding or of the space that the surface is being embedded in.
Reference: [Tut79] <author> W. T. Tutte, </author> <title> Combinatorial oriented maps, </title> <journal> Canad. J. Math. XXXI (1979), </journal> <volume> no. 5, </volume> <pages> 986-1004. </pages>
Reference-contexts: First, there is a circular ordering of edges associated with each vertex, rather than just a set of edges. Second, in a rotation system, there is a "twist bit" associated with each edge, that specifies whether the edge is flat (type 0) or twisted (type 1) <ref> [Tut79, GT87] </ref>. In this paper, we consider two ways to represent a rotation system in a com puter. <p> In this paper, we consider two ways to represent a rotation system in a com puter. One follows immediately from the definition, and will be referred to as an "embedded graph." The other, which we will call a "dart graph," follows from the description of a surface given in <ref> [Tut79] </ref>, and is similar to the graphs used to derive lower bounds on the signed inversion distance and on the transposition distance of 1991 Mathematics Subject Classification. Primary 92-08; Secondary 92-04, 05C10, 57M15. <p> R, G, B, and Y stand for red, green, blue, and yellow, respectively. will call an "embedded graph." Figure 1 shows how to construct a surface from an embedded graph. <ref> [Tut79] </ref> indirectly suggests an alternative way to represent a rotation system in a computer. In the original paper, Tutte only considers rotation systems in which all of the edges are flat.
Reference: [Wer94] <author> Josie Wernecke, </author> <title> The inventor mentor, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1994. </year>
Reference-contexts: Our submission to the DIMACS Implementation Challenge is a program written in Perl [WS91] that generates a three dimensional Open Inventor 1 <ref> [Wer94] </ref> image of the surface corresponding to a given instance of the genome rearrangement problem. This paper starts by defining dart graphs and embedded graphs, and showing how they correspond. It then gives an algorithm for realizing an embedding of these graphs in an appropriate surface.
Reference: [WS91] <author> Larry Wall and Randal L. Schwartz, </author> <title> Programming perl, </title> <publisher> O'Reilly and Associates, Inc., </publisher> <year> 1991. </year> <institution> Laboratory for Computer Science, Massachusetts Institute of Technology, 545 Technology Square, </institution> <address> Cambridge, MA 02139 E-mail address: emjordan@theory.lcs.mit.edu </address>
Reference-contexts: A researcher interested in the relationship between two given gene sequences can now visualize the lower bounds on the permutation distance by examining the surface generated by those sequences. Our submission to the DIMACS Implementation Challenge is a program written in Perl <ref> [WS91] </ref> that generates a three dimensional Open Inventor 1 [Wer94] image of the surface corresponding to a given instance of the genome rearrangement problem. This paper starts by defining dart graphs and embedded graphs, and showing how they correspond.
References-found: 13

