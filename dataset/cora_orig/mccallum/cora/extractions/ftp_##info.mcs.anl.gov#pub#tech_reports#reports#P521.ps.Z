URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P521.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts95.htm
Root-URL: http://www.mcs.anl.gov
Title: Using Automatic Differentiation with the Quasi-Procedural Method for Multidisciplinary Design Optimization  
Author: Paul Hovland Steve Altus Christian Bischof Ilan Kroo 
Note: Published in Proceedings of the 34th AIAA Aerospace Sciences Meeting Reno, NV, January 15-19, 1996, AIAA Paper 96-0090 Argonne Preprint MCS-P521-0595  
Abstract: As computers have become increasingly powerful, the field of design optimization has moved toward higher fidelity models in the early stages of design. One way in which this movement is manifested is in the increasing popularity of multidisciplinary design optimization (MDO). Because the models used in MDO are large and complicated, a modular design is desirable. There are many design parameters to optimize, and the robustness of the method requires that derivatives be computed accurately and efficiently. This paper describes how the quasi-procedural program architecture developed by Takai and Kroo and the technique of automatic differentiation can be combined to address these needs effectively. The two techniques are explained, the manner in which they were integrated into a single framework is described, and the result of using this framework for an optimization problem in airplane design is presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Bischof, A. Carle, G. Corliss, A. Griewank, and P. Hovland. ADIFOR: </author> <title> Generating derivative codes from Fortran programs. </title> <journal> Scientific Programming, </journal> <volume> 1(1) </volume> <pages> 11-29, </pages> <year> 1992. </year>
Reference-contexts: Divided differences and the forward mode of automatic differentiation require time linear in the number of design variables. This improvement in performance relative to divided differences has been seen in many applications of ADIFOR to engineering codes, and is not specific to the quasi procedural method (see <ref> [1, 2] </ref> for details). 2. The perturbing of design variables needed to compute approximate derivatives using divided differences destroys the validity of the values of variables depending on those design variables. Thus, much of the efficiency of the quasi-procedural method is lost.
Reference: [2] <author> C. Bischof, A. Carle, P. Khademi, and A. Mauer. </author> <title> The ADIFOR 2.0 system for the automatic differentiation of Fortran 77 programs, 1994. </title> <type> Preprint MCS-P481-1194, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, and CRPC-TR94491, Center for Research on Parallel Computation, Rice University. </institution>
Reference-contexts: Divided differences and the forward mode of automatic differentiation require time linear in the number of design variables. This improvement in performance relative to divided differences has been seen in many applications of ADIFOR to engineering codes, and is not specific to the quasi procedural method (see <ref> [1, 2] </ref> for details). 2. The perturbing of design variables needed to compute approximate derivatives using divided differences destroys the validity of the values of variables depending on those design variables. Thus, much of the efficiency of the quasi-procedural method is lost.
Reference: [3] <author> C. Bischof, A. Carle, P. Khademi, A. Mauer, and P. Hovland. </author> <note> ADIFOR 2.0 user's guide. Technical Memorandum ANL/MCS-TM-192, </note> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1994. </year> <note> CRPC Technical Report CRPC-95516-S. </note>
Reference: [4] <author> C. Bischof and P. Hovland. </author> <title> Using ADIFOR to compute dense and sparse Jacobians. </title> <type> Technical Report ANL/MCS-TM-158, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1991. </year>
Reference: [5] <author> B. W. Char, K. O. Geddes, G. H. Gonnet, B. L. Leong, M. B. Monagan, and S. M. Watt. </author> <title> Maple V Language Reference Manual. </title> <publisher> Springer Ver-lag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [6] <author> P. Gage and I. Kroo. </author> <title> Development of the quasi-procedural method for use in aircraft configuration optimization. Technical Report AIAA-92-4693, </title> <booktitle> Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimizations, </booktitle> <month> September </month> <year> 1992. </year>
Reference: [7] <author> P. E. Gill, W. Murray, M. A. Saunders, and M. H. Wright. </author> <title> User's guide for NPSOL (version 4.0): A Fortran package for nonlinear programming. </title> <type> Technical Report SOL 86-2, </type> <institution> Department of Operations Research, Stanford University, Stanford, </institution> <address> CA, </address> <year> 1986. </year>
Reference: [8] <author> A. Griewank. </author> <title> On automatic differentiation. </title> <booktitle> In Mathematical Programming: Recent Developments and Applications, </booktitle> <pages> pages 83-108, </pages> <address> Ams-terdam, 1989. </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference: [9] <author> I. Kroo. </author> <title> An interactive system for aircraft design and optimization. Technical Report AIAA-92-1190, </title> <booktitle> AIAA Aircraft Design Conference, </booktitle> <month> February </month> <year> 1992. </year>
Reference: [10] <author> I. Kroo, S. Altus, R. Braun, P. Gage, and I. Sobieski. </author> <title> Multidisciplinary optimization methods for aircraft preliminary design. Technical Report AIAA-94-2543, </title> <booktitle> Fifth AIAA/NASA/USAF/ISSMO Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <month> September </month> <year> 1994. </year> <month> 8 </month>
References-found: 10

