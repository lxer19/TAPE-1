URL: ftp://ftp.cs.utexas.edu/pub/psp/unity/notes/32-92.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/psp/notesunity.html
Root-URL: 
Email: misra@cs.utexas.edu  
Phone: (512) 471-9547  
Title: Proof of a Real-Time Mutual-Exclusion Algorithm Notes on UNITY: 32-92  
Author: John Allen Carruth Jayadev Misra 
Date: September 25, 1992  
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract: Michael Fischer[2] has proposed a mutual exclusion algorithm that ingeniously exploits real time. We prove this algorithm using the time-honored technique of establishing an appropriate invariant.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Martin Abadi and L. Lamport. </author> <title> An old fashioned recipe for real time. </title> <type> Technical report, </type> <institution> DEC Systems Research Center, </institution> <year> 1991. </year>
Reference-contexts: = e Observe that these predicates are mutually exclusive, i.e., a i ^ b i false; etc., and a i _ b i _ c i _ d i _ e i true 2 2 Formalization of Time In order to state the timing constraints, we introduce a variable now <ref> [1] </ref>. Informally, the value of now at any point during the computation is the current time. <p> For this paper, we require only that (1) now assumes non-negative real values and (2) now is monotone nondecreasing. For a formal basis for the introduction of time, including the requirement about the eventual increase of now, see <ref> [1] </ref> and [3]. It is convenient to introduce the following auxiliary variables for study of real time systems.
Reference: [2] <author> Michael J. Fischer, </author> <month> June </month> <year> 1985. </year> <title> (personal communication with Leslie Lamport). </title>
Reference-contexts: 1 Introduction Michael Fischer <ref> [2] </ref> has proposed a mutual exclusion algorithm in which real time is used to speed up certain actions and slow down certain other actions. We prove this algorithm using only the fact that time never runs backwards.
Reference: [3] <author> J. Misra. </author> <title> Safety properties. </title> <type> (manuscript), </type> <institution> The University of Texas at Austin, </institution> <year> 1992. </year> <month> 5 </month>
Reference-contexts: For this paper, we require only that (1) now assumes non-negative real values and (2) now is monotone nondecreasing. For a formal basis for the introduction of time, including the requirement about the eventual increase of now, see [1] and <ref> [3] </ref>. It is convenient to introduce the following auxiliary variables for study of real time systems. <p> This definition of p can be expressed directly as a property of the program (see Misra <ref> [3] </ref>), or p can be defined by augmenting a program text, as shown below.
References-found: 3

