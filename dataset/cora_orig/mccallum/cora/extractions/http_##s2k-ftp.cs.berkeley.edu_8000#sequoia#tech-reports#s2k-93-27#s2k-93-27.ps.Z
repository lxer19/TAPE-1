URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tech-reports/s2k-93-27/s2k-93-27.ps.Z
Refering-URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tech-reports/s2k-93-27/
Root-URL: http://www.cs.berkeley.edu
Title: A Simple Visualization Management System: Bridging the Gap Between Visualization and Data Management  
Author: Peter Kochevar Zahid Ahmed Jonathan Shade Colin Sharp 
Date: April 30, 1993  
Affiliation: Digital Equipment Corporation  San Diego Supercomputer Center  
Abstract: A prototype visualization management system is described which merges the capabilities of a database management system with any number of existing visualization packages such as AVS or IDL. The prototype uses the Postgres database management system to store and access Earth science data through a simple graphical browser. Data located in the database is visualized by automatically invoking a desired visualization package and downloading an appropriate script or program. The central idea underlying the system is that information on how to visualize a dataset is stored in the database with the dataset itself. As a result, scientists can concentrate more on their science rather than on the process of doing it since visualization programs do not have to be created or searched for each time a dataset is to be viewed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Advanced Visual Systems, Inc. AVS Developer's Guide, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: With the creation of the ImportData module, the AVS version of the FireUp program would then do the following: * Start AVS in server mode with the command, avs -server, and establish communications via sockets (see <ref> [1] </ref> for details). * Send to the AVS server commands to: Read the AVS network from the script file. 11 Send the name of the data description file to the ImportData module thereby starting execution of the network.
Reference: [2] <institution> Advanced Visual Systems, Inc. </institution> <note> AVS User's Guide, </note> <month> May </month> <year> 1992. </year>
Reference-contexts: 1 Introduction State-of-the-art visualization systems, as exemplified by AVS <ref> [2] </ref>, IDL [11], and Data Explorer [6], are quite sophisticated in their abilities to manipulate and render data. However, they are still lacking as complete visualization management 1 systems (VMS).
Reference: [3] <author> Clifford Beshers and Steven Feiner. </author> <title> Automated design of virtual worlds for visualizing multivariate relations. </title> <booktitle> In Proceedings Visualization '92 Conference, </booktitle> <pages> pages 283-290, </pages> <year> 1992. </year>
Reference-contexts: For example, the query for datasets pertaining to a certain region of Earth could result in the icons being placed on a 3-D globe. Other kinds of relational data can be displayed graphically as scatter plots, graphs, histograms, etc. using the techniques discussed by Beshers and Feiner <ref> [3] </ref>, Casner [4], and Mackinlay [7]. Database schema knowledge in the Visualization Executive. When constructing a browser, one should strive to make it as independent of the database schema as possible, that is, assumptions about the structure of the database inside the browser should be minimized.
Reference: [4] <author> Stephen M. Casner. </author> <title> A task-analytic approach to the automated design of graphic presentations. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(2) </volume> <pages> 111-151, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: For example, the query for datasets pertaining to a certain region of Earth could result in the icons being placed on a 3-D globe. Other kinds of relational data can be displayed graphically as scatter plots, graphs, histograms, etc. using the techniques discussed by Beshers and Feiner [3], Casner <ref> [4] </ref>, and Mackinlay [7]. Database schema knowledge in the Visualization Executive. When constructing a browser, one should strive to make it as independent of the database schema as possible, that is, assumptions about the structure of the database inside the browser should be minimized.
Reference: [5] <author> Jeff Dozier. </author> <title> How Sequoia 2000 addresses issues in data and information systems for global change. </title> <type> Technical Report 92/14, </type> <institution> University of California, </institution> <month> August </month> <year> 1992. </year> <month> 15 </month>
Reference-contexts: Sequoia is a unique blend of Earth and computer scientists who are working together to create a computing infrastructure that will foster a better understanding of global environmental change <ref> [5] </ref>. The entire field of global change is characterized by the massive amounts of information pertaining to Earth that are and will become available. The ready search for and subsequent access to this information is as important to a global change researcher as is its actual visualization.
Reference: [6] <author> Bruce Lucas et al. </author> <title> An architecture for a scientific visualization system. </title> <booktitle> In Proceedings Visualization '92 Conference, </booktitle> <pages> pages 107-114, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction State-of-the-art visualization systems, as exemplified by AVS [2], IDL [11], and Data Explorer <ref> [6] </ref>, are quite sophisticated in their abilities to manipulate and render data. However, they are still lacking as complete visualization management 1 systems (VMS).
Reference: [7] <author> J. D. Mackinlay. </author> <title> Automating the design of graphical presentations of relational information. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(2) </volume> <pages> 110-141, </pages> <year> 1986. </year>
Reference-contexts: Other kinds of relational data can be displayed graphically as scatter plots, graphs, histograms, etc. using the techniques discussed by Beshers and Feiner [3], Casner [4], and Mackinlay <ref> [7] </ref>. Database schema knowledge in the Visualization Executive. When constructing a browser, one should strive to make it as independent of the database schema as possible, that is, assumptions about the structure of the database inside the browser should be minimized.
Reference: [8] <author> Mike Olson et al. </author> <title> Visualization benchmark specification for the Sequoia 2000 project. </title> <type> unpublished report, </type> <month> November </month> <year> 1992. </year>
Reference-contexts: The desire for a more complete VMS is driven by the requirements of certain segments of the scientific community. In particular, Earth scientists in the Sequoia 2000 Project have expressed a need for sophisticated data management to go along with scientific visualization <ref> [8] </ref>. Sequoia is a unique blend of Earth and computer scientists who are working together to create a computing infrastructure that will foster a better understanding of global environmental change [5].
Reference: [9] <author> John Ousterhout. </author> <title> Tcl: An embeddable command language. </title> <booktitle> In Proceedings of the 1990 Winter USENIX Conference, </booktitle> <year> 1990. </year>
Reference-contexts: The icons are active in that they have behaviors associated with them that can be elicited by certain picking operations. The database browser in the current incarnation of the Visualization Executive comes with two interaction tools both of which were implemented using the X-Windows-based Tcl/Tk graphical user-interface toolkit <ref> [9, 10] </ref>. Query Formation The simplest yet most powerful database interaction tool is the text-tool which allows any legal Postquel command to be sent to the Postgres server for execution. The text-tool is essentially a visually oriented text editor with a built-in history mechanism.
Reference: [10] <author> John Ousterhout. </author> <title> An X11 toolkit based on the Tcl language. </title> <booktitle> In Proceedings of the 1991 Winter USENIX Conference, </booktitle> <year> 1991. </year>
Reference-contexts: The icons are active in that they have behaviors associated with them that can be elicited by certain picking operations. The database browser in the current incarnation of the Visualization Executive comes with two interaction tools both of which were implemented using the X-Windows-based Tcl/Tk graphical user-interface toolkit <ref> [9, 10] </ref>. Query Formation The simplest yet most powerful database interaction tool is the text-tool which allows any legal Postquel command to be sent to the Postgres server for execution. The text-tool is essentially a visually oriented text editor with a built-in history mechanism.
Reference: [11] <institution> Research Systems, Inc. </institution> <note> IDL User's Guide, </note> <month> January </month> <year> 1993. </year>
Reference-contexts: 1 Introduction State-of-the-art visualization systems, as exemplified by AVS [2], IDL <ref> [11] </ref>, and Data Explorer [6], are quite sophisticated in their abilities to manipulate and render data. However, they are still lacking as complete visualization management 1 systems (VMS).
Reference: [12] <author> Michael Stonebraker et al. </author> <title> The implementation of POSTGRES. </title> <journal> IEEE transactions on knowledge and data engineering, </journal> <month> March </month> <year> 1990. </year> <month> 16 </month>
Reference-contexts: The ready search for and subsequent access to this information is as important to a global change researcher as is its actual visualization. The following paper describes a very simple VMS constructed as an early prototype within the Sequoia project. The VMS was formed by linking the Postgres DBMS <ref> [12] </ref> with several off-the-shelf visualization systems. The heart of this system is the Visualization Executive which is primarily responsible for locating information using a graphical database browser tailored to the Earth sciences.
References-found: 12

