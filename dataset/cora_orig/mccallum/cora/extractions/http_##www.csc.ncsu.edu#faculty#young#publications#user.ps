URL: http://www.csc.ncsu.edu/faculty/young/publications/user.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/young/publications/papers.html
Root-URL: http://www.csc.ncsu.edu
Email: myoung+@pitt.edu  
Phone: (412) 363-6716 fax: (412) 624-9149  
Title: Exploiting A Model of User Plan Reasoning to Generate Concise Plan Descriptions Keywords: natural language
Author: R. Michael Young 
Note: office:  
Address: 3939 O'Hara Street  Pittsburgh Pittsburgh, PA 15260  
Affiliation: 505 Learning Research and Development Center  University of  
Abstract: The task of generating effective textual descriptions of the plans produced by automatic planning algorithms is made more difficult by the complexity of the plans themselves. In this paper we define an architecture for a user model that represents the plan reasoning capabilities of the user in order to construct concise plan descriptions; this user model is put to use to find a partial description of a plan from which the hearer can reconstruct the original or one closely related to it. Of particular relevance to this process are two aspects of our model: the hearer's plan preferences and the resource limitations placed on his planning capabilities. We describe the relationship between these components and the method for finding a partial description and show how descriptions produced by our model can effectively describe complex plans. 
Abstract-found: 1
Intro-found: 1
Reference: [Allen 1979] <author> James F. Allen. </author> <title> A Plan Based Approach to Speech Act Recognition. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, Toronto, Canada, </institution> <year> 1979. </year> <note> Published by University of Toronto as Technical Report No. 131. </note>
Reference-contexts: Plan inference typically involves the reconstruction of an underlying plan based on the observation of a series of primitive actions. In this sense, the plan inference process searches the space of possible plans to find the complete plans that account for the observed actions <ref> [Allen 1979] </ref>. When reconstructing a plan from a description, a hearer is essentially performing the same task, but with one advantage: the speaker has provided a description that contains intermediate components of the plan rather than just the primitive actions.
Reference: [Barrett et al. 1994] <author> Anthony Barrett, Keith Golden, J. Scott Penberthy, and Daniel Weld. </author> <title> UCPOP 2.0 user's manual. </title> <type> Technical Report 93-00-06, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <address> Seattle, WA, </address> <year> 1994. </year>
Reference-contexts: We use this mechanism to model the limit on the space within which the hearer searches to find plan solutions. We model the hearer's plan preferences by a function that ranks plans similar to the heuristic functions typically used by plan space search algorithms <ref> [Barrett et al. 1994] </ref> to guide their search. 3.3.2 Definitions In the approach described here, the speaker has a planning model representing her own plan reasoning capabilities and a separate model of the hearer's plan reasoning capabilities.
Reference: [Bauer and Paul 1993] <author> Mathias Bauer and Gabriele Paul. </author> <title> Logic-based plan recognition for intelligent help systems. </title> <type> Technical Report RR-93-43, </type> <institution> The German Research Center for Artificial Intelligence, </institution> <year> 1993. </year>
Reference: [Bauer 1994] <author> Mathias Bauer. </author> <title> Quantitative modeling of user preferences for plan recognition. </title> <booktitle> In Proceedings of the Fourth International Conference on User Modeling, </booktitle> <pages> pages 73 - 78, </pages> <address> Hyannis, MA, </address> <year> 1994. </year> <month> 12 </month>
Reference: [Carberry 1990] <author> Sandra Carberry. </author> <title> Plan Recognition in Natural Language Dialog. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference: [Dale and Reiter 1995] <author> Robert Dale and Ehud Reiter. </author> <title> Computational interpretations of the Gricean Maxims in the generation of referring expressions. </title> <journal> Applied Artificial Intelligence Journal, </journal> <volume> 9, </volume> <year> 1995. </year> <note> to appear. </note>
Reference-contexts: They leave unspecified an upper bound and make no suggestion about the structure of the partial plan the constraints form. A policy of selecting minimal descriptions that meet this lower bound corresponds to what Dale and Reiter <ref> [Dale and Reiter 1995] </ref> refer to as a full brevity interpretation of Grice's maxims. Future work will investigate the effectiveness of alternative policies similar in spirit and computational complexity to the alternatives they define. 5 For illustrative purposes, the decomposition operators in this example are causally complete.
Reference: [Dale 1992] <author> Robert Dale. </author> <title> Generating referring expressions: Constructing descriptions in a domain of objects and processes. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1992. </year>
Reference-contexts: Plans in this system are formed for fairly simple tasks (such as filling in an individual field on a form); consequently, their explanations do not contain a large amount of complexity. Dale's work <ref> [Dale 1992] </ref> focused on the generation of one-anaphoric referring expressions in text describing cooking plans.
Reference: [Delin et al. 1994] <author> Judy Delin, Anthony Hartley, Cecile Paris, Donia Scott, and Keith Vander Linden. </author> <title> Expressing procedural relationships in multilingual instructions. </title> <booktitle> In Proceedings of the Seventh International Workshop on Natural Language Generation, </booktitle> <pages> pages 61-70, </pages> <address> Kennebunkport, ME, </address> <year> 1994. </year>
Reference-contexts: Because plan structure was not the focus of his work, Vander Linden's plans were generated by hand for particular domains and their structure was limited in size and complexity. The GIST project at the University of Brighton <ref> [Delin et al. 1994] </ref> is developing a system to exploit a plan-based representation of activities to support multilingual instruction generation.
Reference: [Di Eugenio 1993] <author> Barbara Di Eugenio. </author> <title> Understanding Natural Language Instructions: A computational approach to purpose clauses. </title> <type> PhD thesis, </type> <institution> Department of Computer and Information Science, University of Pennsylvania, </institution> <address> Philadelphia, PA, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: First, we consider utterances that describe the presence of a component in the source plan. In instructional text, for instance, these types of utterances are often realized as imperatives like "Do action ff." Descriptions of other components take on other forms (e.g., enablement-like relations described by purpose clauses <ref> [Di Eugenio 1993] </ref>). We call these types of utterances positive constraints, since they indicate the positive occurrence of a component in the source plan. In contrast, the second type of utterance we will consider is used to describe components that do not occur in the source plan.
Reference: [Elzer et al. 1994] <author> Stephanie Elzer, Jennifer Chu-Carroll, and Sandra Carberry. </author> <title> Recognizing and utilizing user preferences in collaborative consultation dialogues. </title> <booktitle> In Proceedings of the Fourth International Conference on User Modeling, </booktitle> <pages> pages 19 - 24, </pages> <address> Hyannis, MA, </address> <year> 1994. </year>
Reference: [Gertner et al. 1994] <author> Abigail S. Gertner, Bonnie L. Webber, and John R. Clarke. </author> <title> Upholding the maxim of relevance during patient-centered activities. </title> <booktitle> In Proceedings of the Fourth Conference on Appled Natural Language Processing, </booktitle> <pages> pages 125-131, </pages> <year> 1994. </year>
Reference: [Goodman and Litman 1992] <author> Bradley A. Goodman and Diane J. Litman. </author> <title> On the interaction between plan recognition and intelligent interfaces. User Modeling and User-Adapted Interaction, </title> <address> 2(1-2):83-116, </address> <year> 1992. </year>
Reference: [Grice 1975] <author> H. Paul Grice. </author> <title> Logic and conversation. </title> <editor> In P. Cole and J. L. Morgan, editors, </editor> <title> Syntax and Semantics III: </title> <booktitle> Speech Acts, </booktitle> <pages> pages 41-58. </pages> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1975. </year>
Reference-contexts: The following sections describe one approach for communicating an entire set of plan constraints without them all appearing explicitly in the plan description. Grice <ref> [Grice 1975] </ref> uses the expression conversational implicature to describe a type of inference that can be drawn based not only on what is said but also on the greater context in which the conversation occurs.
Reference: [Grosz and Kraus 1993] <author> Barbara Grosz and Sarit Kraus. </author> <title> Collaborative plans for group activities. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 367-373, </pages> <month> August </month> <year> 1993. </year>
Reference: [Haller 1994] <author> Susan Haller. </author> <title> Interactive Generation of Plan Descriptions and Justifications. </title> <type> PhD thesis, </type> <institution> State University of New York at Buffalo, </institution> <year> 1994. </year>
Reference: [Horacek 1991] <author> Helmut Horacek. </author> <title> Exploiting conversational implicature for generating concise explanations. </title> <booktitle> In Proceedings of the European Association for Computational Linguistics, </booktitle> <year> 1991. </year>
Reference: [Horacek 1994] <author> Helmut Horacek. </author> <title> How to avoid explaining obvious things (without omitting central information). </title> <booktitle> In Proceedings of the European Conference on Artificial Intelligence, </booktitle> <year> 1994. </year>
Reference: [Joshi et al. 1984a] <author> Avarind Joshi, Bonnie Webber, and Ralph Weischedel. </author> <title> Living up to expectations: Computing expert responses. </title> <booktitle> In Proceedings of AAAI, </booktitle> <year> 1984. </year> <month> 13 </month>
Reference: [Joshi et al. 1984b] <editor> Avarind Joshi, Bonnie Webber, and Ralph Weischedel. Prevent--ing false implicatures. </editor> <booktitle> In Proceedings of COLING, </booktitle> <year> 1984. </year>
Reference: [Joshi 1982] <author> Aravind K. Joshi. </author> <title> Mutual beliefs in question-answering systems. </title> <editor> In N. Smith, editor, </editor> <title> Mutual Belief. </title> <publisher> Academic Press, </publisher> <year> 1982. </year>
Reference-contexts: As described earlier, negative constraint are expressions of prohibition against particular aspects of action or the occurrence of specific constraints in a plan. Speakers can include negative constraint in a description in order to block inferences by the hearer that would result in unacceptable plans being constructed. Joshi <ref> [Joshi 1982] </ref> has proposed the following version of Grice's maxim of quality: Definition 4 (Joshi's Revised Maxim of Quality) If you, the speaker, plan to say anything which may imply for the hearer something that you believe to be false, then provide further information to block it.
Reference: [Kambhampati 1993] <author> Subbarao Kambhampati. </author> <title> Planning as refinement search: A unified framework for comparative analysis of search space size and performance. </title> <type> Technical Report 93-004, </type> <institution> Arizona State University, Department of Computer Science and Engineering, </institution> <year> 1993. </year>
Reference-contexts: For a complete definition of DPOCL see [Young et al. 1994]. For a discussion of the relationship between plan descriptions found in naturally occurring discourse and DPOCL plan structures, see [Young 1995]. POCL-style planners are typically characterized as performing refinement search. Kambamphati <ref> [Kambhampati 1993] </ref> provides a general characterization of planning as search through a space of possible plans.
Reference: [Lambert and Carberry 1992] <author> Lynn Lambert and Sandra Carberry. </author> <title> Modeling negotiation subdialogs. </title> <booktitle> In Proceedings, Association for Computational Linguistics, </booktitle> <year> 1992. </year>
Reference: [Long and Golding 1993] <author> Debra L. Long and Jonathan M. Golding. </author> <title> Superordinate goal inferences: Are they automatically generated during comprehension? Discourse Processes, </title> <booktitle> 16 </booktitle> <pages> 55-73, </pages> <year> 1993. </year>
Reference-contexts: It would be handed in the same way as go-to (home,pgh). 11 Future work will also address the coarse representation of the user's plan reasoning resources we use here. Studies in reading comprehension of narratives <ref> [Long and Golding 1993] </ref> indicate that users infer certain types of plan structure more frequently than others. We are currently refining the model of resource bounds to distinguish between the various types of refinement that DPOCL performs.
Reference: [McAllister and Rosenblitt 1991] <author> David McAllister and David Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 634-639, </pages> <year> 1991. </year>
Reference: [Mellish and Evans 1989] <author> Chris Mellish and Roger Evans. </author> <title> Natural language genera tion from plans. </title> <journal> Computational Linguistics, </journal> <volume> 15(4), </volume> <year> 1989. </year>
Reference-contexts: approaches have either described plans produced by simplified planning models designed specifically for text generation [Haller 1994,Vander Linden 1993,Delin et al. 1994] or have used plans produced by automatic planning systems and consequently generated descriptions that were unnatural and ineffective due to the amount of detail contained in the plans <ref> [Mellish and Evans 1989] </ref>. In this paper we outline a technique for the generation of concise and effective plan descriptions that exploits a model of the user's planning capabilities in order to include only required detail in a description. <p> We also provide several examples that demonstrate how descriptions produced by our model can effectively describe complex plans. 2 Related Work The principal work on explaining plans produced by AI planning systems was described by Mellish and Evans <ref> [Mellish and Evans 1989] </ref>. Their system took a plan 1 produced by the NONLIN planner [Tate 1977] and produced a textual description of the plan. <p> solution. 3.4 Conversational Implicature in Plan Identification While the explicit communication of the complete structure of a plan is not a problem between computational agents whose communication channels are comparable in bandwidth even to the simplest of today's networks, describing a plan to human agents in this manner is unnatural <ref> [Mellish and Evans 1989] </ref>. The following sections describe one approach for communicating an entire set of plan constraints without them all appearing explicitly in the plan description. <p> The DPOCL plan structure for the source plan in figure 2 contains 31 components. Description 1 refers to only three plan components. 3.5.2 Eliminating Hierarchical Detail 4 The type of detail in this description is comparable to the detail contained in descriptions produced by <ref> [Mellish and Evans 1989] </ref>. Because DPOCL plans contain more kinds of plan components that NONLIN plans, the descriptions here refer to more elements than comparable NONLIN plans. 9 The next example involves the identification of the plan fragment shown in figure 3.
Reference: [Penberthy and Weld 1991] <author> J. Scott Penberthy and Daniel Weld. UCPOP: </author> <title> A sound, complete partial order planner for ADL. </title> <booktitle> In Proceedings of the Third International Conference on Knowledge Representation and Reasoning, </booktitle> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference: [Reiter 1990] <author> Ehud Reiter. </author> <title> Generating descriptions that exploit a user's domain knowledge. </title> <editor> In R. Dale, C. Mellish, and M. Zock, editors, </editor> <booktitle> Current Research in Natural Language Generation, </booktitle> <pages> pages 257-285. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1990. </year>
Reference: [Tate 1977] <author> Austin Tate. </author> <title> Generating project networks. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 888 - 893, </pages> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: Their system took a plan 1 produced by the NONLIN planner <ref> [Tate 1977] </ref> and produced a textual description of the plan. These plans often contained a deep hierarchical structure and, because the approach generated descriptions of each plan component, their descriptions often contained an inappropriate amount of detail.
Reference: [van Beek 1987] <author> Peter van Beek. </author> <title> A model for generating better explanations. </title> <booktitle> In Proceedings of the 25th Annual Meeting of the ACL, </booktitle> <pages> pages 215-220, </pages> <address> Stanford, Cal-ifornia, </address> <year> 1987. </year> <institution> Association of Computational Linguistics. </institution>
Reference: [Vander Linden 1993] <author> Keith Vander Linden. </author> <title> Speaking of Actions: Choosing Rhetorical Status and Grammatical Form in Instructional Text Generation. </title> <type> PhD thesis, </type> <institution> University of Colorado, Department of Computer Science, </institution> <year> 1993. </year>
Reference-contexts: These plans often contained a deep hierarchical structure and, because the approach generated descriptions of each plan component, their descriptions often contained an inappropriate amount of detail. Vander Linden <ref> [Vander Linden 1993] </ref> constructed a text generation system that produced texts describing plan components, focusing on the selection of rhetorical relations that best expressed the components' procedural relationships with other actions.
Reference: [Young et al. 1994] <author> R. Michael Young, Martha E. Pollack, and Johanna D. Moore. </author> <title> Decomposition and causality in partial order planning. </title> <booktitle> In Proceedings of the Second International Conference on AI and Planning Systems, </booktitle> <pages> pages 188-193, </pages> <year> 1994. </year>
Reference-contexts: Subsets that define plan spaces where unacceptable plans are likely to be selected can also be eliminated. 3.2 Background: Plan Space Planning and Refinement Search We will use DPOCL <ref> [Young et al. 1994] </ref> and the plans it produces to represent the planning models used by the hearer. The DPOCL planner is an extension to recent partial-order causal link planners [McAllister and Rosenblitt 1991,Penberthy and Weld 1991]. <p> Previous POCL planners have been non-hierarchical; DPOCL provides an extension that introduces action decomposition into the POCL framework. For a complete definition of DPOCL see <ref> [Young et al. 1994] </ref>. For a discussion of the relationship between plan descriptions found in naturally occurring discourse and DPOCL plan structures, see [Young 1995]. POCL-style planners are typically characterized as performing refinement search.
Reference: [Young 1994] <author> R. Michael Young. </author> <title> Plans and planning in task-related discourse. </title> <type> Technical Report 94-4, </type> <institution> University of Pittsburgh, </institution> <month> December </month> <year> 1994. </year>
Reference: [Young 1995] <author> R. Michael Young. </author> <title> The role of plans in task-related discourse. </title> <booktitle> In AAAI Spring Symposium on Extending Theories of Action, </booktitle> <month> March </month> <year> 1995. </year> <month> 14 </month>
Reference-contexts: Previous POCL planners have been non-hierarchical; DPOCL provides an extension that introduces action decomposition into the POCL framework. For a complete definition of DPOCL see [Young et al. 1994]. For a discussion of the relationship between plan descriptions found in naturally occurring discourse and DPOCL plan structures, see <ref> [Young 1995] </ref>. POCL-style planners are typically characterized as performing refinement search. Kambamphati [Kambhampati 1993] provides a general characterization of planning as search through a space of possible plans.
References-found: 33

