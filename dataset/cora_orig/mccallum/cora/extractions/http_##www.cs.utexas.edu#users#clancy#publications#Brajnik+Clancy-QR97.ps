URL: http://www.cs.utexas.edu/users/clancy/publications/Brajnik+Clancy-QR97.ps
Refering-URL: http://www.cs.utexas.edu/users/clancy/publications/publications.html
Root-URL: 
Email: giorgio@dimi.uniud.it  clancy@cs.utexas.edu  
Title: Control of Hybrid Systems using Qualitative Simulation framework for plan generation is presented that uses
Author: Giorgio Brajnik Daniel J. Clancy 
Address: Italy  Austin, Texas 78712  
Affiliation: Dip. di Matematica e Informatica Universita di Udine, Udine,  Dept. of Computer Sciences University of Texas at  
Date: June 1997.  
Note: In The Eleventh International Workshop on Qualitative Reasoning (QR-97) Cortona, Italy,  A  
Abstract: This paper presents a methodology for synthesizing, under uncertainty, a sequence of robust, discrete control actions to drive a continuous dynamical plant through admissible trajectories specified via temporal logic expressions. An action is defined as a modification to the value of a controllable exogenous variable. The TeQsim algorithm combines qualitative simulation with temporal logic model checking to validate or refine a proposed plan. Qualitative simulation is used to infer a branching-time description of the system behaviors that potentially follow from a sequence of control actions. This description is queried using temporal logic based goal constraints to perform plan validation. Plan refinement infers bounds on the sequence of actions within a plan to guarantee that the specified goal constraints are satisfied. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Back, A.; Guckenheimer, J.; and Meyers, M. </author> <year> 1993. </year> <title> A dynamical simulation facility for hybrid systems. </title> <editor> In Gross-man et al. </editor> <year> (1993). </year> <pages> 255-267. </pages>
Reference: <author> Bradley, E. and Zhao, F. </author> <year> 1993. </year> <title> Phase-space control system design. </title> <journal> IEEE Control Systems 2(13) </journal> <pages> 39-47. </pages>
Reference-contexts: A qualitative phase portrait description for each configuration is generated prior to the plan generation process (this can be done using the Qportrait program (Lee and Kuipers 1993) or through the tools described in <ref> (Bradley and Zhao 1993) </ref>). From these descriptions, a plan schema is generated describing the valid configuration transitions and goal violations that can potentially be resolved by each transition.
Reference: <author> Brajnik, G. and Clancy, D. J. </author> <year> 1996a. </year> <title> Guiding and refining simulation using temporal logic. </title> <booktitle> In Proc. of the Third International Workshop on Temporal Representation and Reasoning (TIME'96), </booktitle> <address> Key West, Florida. </address> <publisher> IEEE Computer Society Press. </publisher> <pages> 144-151. </pages>
Reference: <author> Brajnik, G. and Clancy, D. J. </author> <year> 1996b. </year> <title> Temporal constraints on trajectories in qualitative simulation. </title> <booktitle> In Working papers of the Tenth International Workshop for Qualitative Reasoning, </booktitle> <address> Fallen Leaf Lake, CA. 22-31. </address> <note> AAAI Technical Report WS-96-01. </note>
Reference-contexts: The desired trajectory for the temperature (b) can be easily specified with temporal logic and external events, using statements similar to those shown in <ref> (Brajnik and Clancy 1996b) </ref>. The general task is to synthesize discrete control actions driving a continuous plant while ensuring that certain trajectory constraints are met.
Reference: <author> Brajnik, G. and Clancy, D. J. </author> <year> 1996c. </year> <title> Temporal constraints on trajectories in qualitative simulation. </title> <editor> In Clancey, B. and Weld, D., editors 1996c, </editor> <booktitle> Proc. of the Tenth National Conference on Artificial Intelligence. </booktitle> <publisher> AAAI Press. </publisher> <pages> 979-984. </pages>
Reference-contexts: The next section describes an example demonstrating how TeQsim can be used to perform the tasks of plan validation and plan refinement. Section will then describe the plan generation process. Plan validation and refinement example (Material presented in this section is based on <ref> (Brajnik and Clancy 1996c) </ref>.) A model of a lake, consisting of a reservoir, an incoming river and an outgoing river is used; lake level and outflow are regulated through a dam that includes a single floodgate 1 .
Reference: <author> Branicky, M. S.; Borkar, V. S.; and Mitter, S. K. </author> <year> 1994. </year> <title> A unified framework for hybrid control. </title> <booktitle> In Proc. 33rd IEEE Conf. Decision Control, </booktitle> <address> Lake Buena Vista, FL. </address> <pages> 14228-4234. </pages>
Reference-contexts: Introduction "Hybrid systems" defines a broad class of dynamical systems comprised of both discrete and continuous components. The interaction of discrete and continuous phenomena give rise to different classes of hybrid systems <ref> (Branicky et al. 1994) </ref>. In this paper we focus on controlled switching hybrid systems where the continuous component (henceforth referred to as the plant) described using ordinary differential equations is controlled by discrete numeric valued inputs. <p> In particular, Tavernini (Tavernini 1987) assumes (as we do) that state variables are continuous, but their derivatives can be piecewise-continuous; others (Back et al. 1993; Nerode and Kohn 1993) encompass also discontinuous jumps of state variables and the one proposed by Bran-icky and colleagues <ref> (Branicky et al. 1994) </ref> subsumes all of them. These formalisms usually require appropriate maps to specify discontinuous jumps between states (Back et al. 1993; Branicky et al. 1994) or implementing digital-analogical interfaces (Nerode and Kohn 1993).
Reference: <author> Grossman, R.; Nerode, A.; Ravn, A.; and Reischel, H., </author> <title> editors 1993. Hybrid Systems, </title> <booktitle> Lecture Notes in Computer Science 736. </booktitle> <publisher> Springer Verlag. </publisher>
Reference: <author> Henzinger, T. A. and Ho, P. H. </author> <year> 1995. </year> <title> HyTech: The Cor-nell HYbrid TECHnology Tool. </title> <editor> In Antsaklis, P.J.; Kohn, W.; Nerode, A.; and Sastri, S., editors 1995, </editor> <booktitle> Hybrid Systems II, Lecture Notes in Computer Science 999. </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Often these frameworks don't address the problem of synthesizing control actions when there are complex trajectory requirements and/or uncertainty in models and parameters. Several automated analysis tools exist. In particular, <ref> (Henzinger and Ho 1995) </ref> presents HyTech, a program for proving properties of hybrid systems.
Reference: <author> Kuipers, B.J. </author> <year> 1986. </year> <title> Qualitative simulation. </title> <booktitle> Artificial Intelligence 29 </booktitle> <pages> 289-338. </pages>
Reference: <author> Kuipers, B.J. </author> <year> 1994. </year> <title> Qualitative Reasoning: modeling and simulation with incomplete knowledge. </title> <publisher> MIT Press, </publisher> <address> Cam-bridge, Massachusetts. </address>
Reference: <author> Lee, W. W. and Kuipers, B. </author> <year> 1993. </year> <title> A qualitative method to construct phase portraits. </title> <booktitle> In Proc. of the National Conference on Artificial Intelligence (AAAI-93). </booktitle> <publisher> AAAI/MIT Press. </publisher>
Reference-contexts: A qualitative phase portrait description for each configuration is generated prior to the plan generation process (this can be done using the Qportrait program <ref> (Lee and Kuipers 1993) </ref> or through the tools described in (Bradley and Zhao 1993)). From these descriptions, a plan schema is generated describing the valid configuration transitions and goal violations that can potentially be resolved by each transition.
Reference: <author> Mosterman, P. J. and Biswas, G. </author> <year> 1996. </year> <title> A formal hybrid modeling scheme for handling discontinuities in physical system models. </title> <booktitle> In Proc. AAAI-96, </booktitle> <address> Portland (OR). </address> <publisher> AAAI Press. </publisher> <pages> 985-990. </pages>
Reference-contexts: Furthermore HyTech does not deal with synthesis problems, nor with uncertainty. Another simulation tool is reported in <ref> (Mosterman and Biswas 1996) </ref>. The representation is based on bond-graphs and controlled junctions that can switch on or off parts of the model. These junctions are controlled by a finite state automaton whose transitions are labeled with inequality conditions.
Reference: <author> Nerode, A. and Kohn, W. </author> <year> 1993. </year> <title> Models for hybrid systems: automata, topologies, controllability, observability. </title>
Reference-contexts: These formalisms usually require appropriate maps to specify discontinuous jumps between states (Back et al. 1993; Branicky et al. 1994) or implementing digital-analogical interfaces <ref> (Nerode and Kohn 1993) </ref>. Often these frameworks don't address the problem of synthesizing control actions when there are complex trajectory requirements and/or uncertainty in models and parameters. Several automated analysis tools exist. In particular, (Henzinger and Ho 1995) presents HyTech, a program for proving properties of hybrid systems.
Reference: <editor> In Grossman et al. </editor> <year> (1993). </year> <pages> 317-356. </pages>
Reference: <author> Rawlings, J. B.; Meadows, E. S.; and Muske, K. R. </author> <year> 1994. </year> <title> Nonlinear model predictive control: a tutorial and survey. </title> <booktitle> In Proc. </booktitle> <address> ADCHEM '94, Kyoto, Japan. </address>
Reference: <author> Tavernini, L. </author> <year> 1987. </year> <title> Differential automata and their discrete simulators. Nonlinear analysis, Theory, </title> <booktitle> Methods and Applications 11(6) </booktitle> <pages> 665-683. </pages>
Reference-contexts: Plan generation has not been implemented yet. Related work The approach to planning and control we presented in his paper overlaps with several theoretical frame works proposed for hybrid systems. In particular, Tavernini <ref> (Tavernini 1987) </ref> assumes (as we do) that state variables are continuous, but their derivatives can be piecewise-continuous; others (Back et al. 1993; Nerode and Kohn 1993) encompass also discontinuous jumps of state variables and the one proposed by Bran-icky and colleagues (Branicky et al. 1994) subsumes all of them.
References-found: 16

