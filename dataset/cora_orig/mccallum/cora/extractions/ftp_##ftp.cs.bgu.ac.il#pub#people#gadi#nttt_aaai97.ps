URL: ftp://ftp.cs.bgu.ac.il/pub/people/gadi/nttt_aaai97.ps
Refering-URL: http://www.cs.unh.edu/ccc/ca/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: a problem, the central component is uniformly difficult Combining rules and constraints for employee timetabling.
Author: A.; Gudes, E.; and Solotorevsky, G. . Neiman, D. E., and Lesser, V. R. . Prosser, P.; Conway, C.; and Muller, M. . Solotorevsky, G., and Gudes, E. . Sycara, K.; Roth, F.; Sadeh, N.; and Fox, M. . Yokoo, M.; Durfee, E.; Ishida, T.; K.; and Kuwabara. . 
Keyword: References  
Note: then PFCA or CFPA should be preferred to CompCP. Conclusions  Meisels,  Proc. of the Third Inter. Conf. on Artificial Intelligence Planning Systems, 166-173.  In Proc. of the Third Inter. Conf. on Artificial Intelligence Planning Systems, 191-198.  In IEEE Intern. Conf. Distrb. Comp. Sys., 614 621. Yokoo, M. 1995.  In Proc. 1st Intrnat. Conf. on Const. Progr., 88 102.  
Abstract: One can think about a general partitioning algorithm which attempts to identify the difficult component of the problem. However, in the NTTT problem, as well as in many other real life resource allocation and scheduling problems, many of the constraints are naturally represented in a functional form, and not in an explicit form ( the reason for this is that an explicit representation may take exponential space). When the constraints are not given in an explicit form, finding the difficult regions of the central component automatically, without using some knowledge about the problem, doesn't seem feasible, ( since it is basically equivalent to finding the number of failures due to these constraints over the total number of constraint failures for all possible solutions! ), that is the reason why we need to use specific knowledge on the problem in order to find the partition of the central component. Note that the use of such knowledge was also mandatory for the sequential algorithm (FC-CBJ-L1), since the algorithm FC-CBJ which did not use knowledge specific variable ordering failed to solve the real problem in a reasonable amount of time. To generalize on this, we claim that a DCSP problem of this nature, where part of the central component is much more difficult than the rest, and where the constraints are stated functionally, will usually require domain knowledge to identify the difficult part, and then the application of CompCP is quite obvious. In this paper we investigated a real-life resource allocation problem the timetabling and transportation of nurses in a large hospital. The solution methodology is based on the algorithms developed earlier for solving distributed constraint satisfaction problems. In the previous section we saw that this methodology enabled an efficient solution of the problem. The reason was the differences existing between solving the central problem vs. solving the peripheral problem, these differences are of great importance in our algorithms. Other reasons for using our methodology are the possibility of preserving local control and reasoning, and the ability of incrementally constructing the overall system. The latter point is of particular importance in our case. In several departments, the timetabling is still done manually where only the results are encoded into input to the transportation part. In others, where the knowledge-based approach is used, the local expert wants complete control, even with the option of manually changing the schedule and violating some of the constraints. All these entails a methodology which gives as much local autonomy as possible to the individual agents, and does not force a particular algorithm on them. Note that even though preserving local control and using independent internal strategies are natural properties of the distributed AI approach, other approaches to distributed solving of CSP do not maintain them. This makes our methodology quite different from the uniform methodology for solving distributed CSP problems advocated for example by Yokoo (Yokoo 1995). As was shown, the solution of our problem required the combination of the CFPA and PFCA algorithms. This is needed, because there are quite large differences between the difficulty of solution of the various peripheral problems. We believe that such composition would be useful in many problems where there are great differences between various components of a distributed CSP problem, and there is domain specific knowledge identifying these differences. Luo, Q. Y.; Hendry, P. G.; and Buchanan, J. T. 1993. Heuristic search for distributed constraint satisfaction problems. Research Report KEG-6-93, University of Strathclyde. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Luo, Q. Y.; Hendry, P. G.; and Buchanan, J. T. </author> <year> 1993. </year> <title> Heuristic search for distributed constraint satisfaction problems. </title> <institution> Research Report KEG-6-93, University of Strathclyde. </institution>
Reference: <author> Meisels, A.; Gudes, E.; and Solotorevsky, G. </author> <year> 1997. </year> <title> Combining rules and constraints for employee timetabling. </title> <booktitle> Intern. Jou. Intell. Sys 12(6). </booktitle>
Reference: <author> Neiman, D. E., and Lesser, V. R. </author> <year> 1996. </year> <title> a cooperative repair method for distributed scheduling system. </title> <booktitle> In Proc. of the Third Inter. Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> 166-173. </pages>
Reference: <author> Prosser, P.; Conway, C.; and Muller, M. </author> <year> 1992. </year> <title> A constraint maintenance system for the distributed resource allocation problem. </title> <journal> Intelligent Systems Engineering 76-83. </journal>
Reference: <author> Solotorevsky, G., and Gudes, E. </author> <year> 1996. </year> <title> Algorithms for solving distributed constraint satisfaction problems (dcsps). </title> <booktitle> In Proc. of the Third Inter. Conf. on Artificial Intelligence Planning Systems, </booktitle> <pages> 191-198. </pages>
Reference: <author> Sycara, K.; Roth, F.; Sadeh, N.; and Fox, M. </author> <year> 1991. </year> <title> Resource allocation in distributed factory scheduling. </title> <journal> IEEE Expert 29-40. </journal>
Reference: <author> Yokoo, M.; Durfee, E.; Ishida, T.; K.; and Kuwabara. </author> <year> 1992. </year> <title> Distributed constraint satisfaction for formalizing distributed problem solving. </title> <booktitle> In IEEE Intern. Conf. Distrb. Comp. Sys., </booktitle> <volume> 614 - 621. </volume>


References-found: 7

