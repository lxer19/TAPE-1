URL: http://www.cs.wisc.edu/~cs640-1/papers/datagram.ps
Refering-URL: http://www.cs.wisc.edu/~cs640-1/740.syllabus.html
Root-URL: http://www.cs.wisc.edu
Email: suvo@cs.stanford.edu  woo@research.bell-labs.com  
Title: A Flow-Based Approach to Datagram Security  
Author: Suvo Mittra Thomas Y.C. Woo 
Affiliation: Stanford University  Bell Laboratories  
Abstract: Datagram services provide a simple, flexible, robust, and scalable communication abstraction; their usefulness has been well demonstrated by the success of IP, UDP, and RPC. Yet, the overwhelming majority of network security protocols that have been proposed are geared towards connection-oriented communications. The few that do cater to datagram communications tend to either rely on long term host-pair keying or impose a session-oriented (i.e., requiring connection setup) semantics. Separately, the concept of flows has received a great deal of attention recently, especially in the context of routing and QoS. A flow characterizes a sequence of datagrams sharing some pre-defined attributes. In this paper, we advocate the use of flows as a basis for structuring secure datagram communications. We support this by proposing a novel protocol for datagram security based on flows. Our protocol achieves zero-message keying, thus preserving the connectionless nature of datagram, and makes use of soft state, thus providing the per-packet processing efficiency of session-oriented schemes. We have implemented an instantiation for IP in the 4.4BSD kernel, and we provide a description of our implementation along with performance results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson. </author> <title> Security Architecture for the Internet Protocol. </title> <type> RFC 1825, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: This can be seen most apparently in the many proposals for IP security [4, 11, 18]. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) <ref> [1, 2, 3] </ref>. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. For example: * They tend to adopt a connection-based session model for adding security.
Reference: [2] <author> R. Atkinson. </author> <title> IP Authentication Header. </title> <type> RFC 1826, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: This can be seen most apparently in the many proposals for IP security [4, 11, 18]. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) <ref> [1, 2, 3] </ref>. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. For example: * They tend to adopt a connection-based session model for adding security.
Reference: [3] <author> R. Atkinson. </author> <title> IP Encapsulating Security Payload (ESP). </title> <type> RFC 1827, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: This can be seen most apparently in the many proposals for IP security [4, 11, 18]. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) <ref> [1, 2, 3] </ref>. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. For example: * They tend to adopt a connection-based session model for adding security.
Reference: [4] <author> A. Aziz, T. Markson, and H. Prafullchandra. </author> <title> Simple Key-Management For Internet Protocols (SKIP). </title> <type> Internet Draft, </type> <month> August 14 </month> <year> 1996. </year>
Reference-contexts: Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security <ref> [4, 11, 18] </ref>. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) [1, 2, 3]. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. <p> It deals with policy issues and is complementary to protocol and mechanisms. Specifically, the FAM defines the unit of protection that should be enforced by the underlying IP security mechanism. For (2), FBS makes use of zero-message keying and an explicit security flow label. SKIP <ref> [4] </ref> also provides zero-message keying based on Diffie-Hellman. The key advantage of FBS is that it provides security based on the unit of flows rather than hosts.
Reference: [5] <author> S. Bellovin. </author> <title> Problem areas for the IP security protocols. </title> <booktitle> In Proceedings of 6th USENIX Security Symposium, </booktitle> <address> San Jose, California, </address> <month> July 22-25 </month> <year> 1996. </year>
Reference-contexts: In other words, security is only provided at the host level; this may or may not be what is intended. Some of the problems with IP level host-pair keying are discussed in <ref> [5] </ref>. In particular, the compromise of a master key exposes all traffic (past and future) between the two hosts. Basic host-pair keying can suffer from a "cut-and-paste" attack. That is, the encrypted payload from one datagram can be cut and inserted into another datagram without being detected.
Reference: [6] <author> A. Birrell and B. Nelson. </author> <title> Implementing remote procedure calls. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(1) </volume> <pages> 39-59, </pages> <month> February </month> <year> 1984. </year>
Reference-contexts: Request permissions from Publications Dept., ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. Datagram services have been widely adopted. Their success has been mainly attributed to their simplicity, flexibility, robustness and scalability. For example, many of the most important networking protocols, such as IP [22], UDP [21], and RPC <ref> [6] </ref>, make use of an underlying datagram service model. Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security [4, 11, 18].
Reference: [7] <author> L. Blum, M. Blum, and M. Shub. </author> <title> A simple unpredictable pseudo-random number generator. </title> <journal> SIAM Journal on Computing, </journal> <volume> 5(2) </volume> <pages> 364-383, </pages> <year> 1986. </year>
Reference-contexts: A subtle problem with this is that the per-datagram keys should be cryptographically random, so that the compromise of one datagram key should not reveal past or future keys. Cry-tographically secure random number generators such as the quadratic residue generator <ref> [7] </ref> can be a performance bottleneck. 3 Requirements and Constraints The basic requirement of any security protocol is to provide a prescribed set of security properties. In this case, it is to enforce separation between datagrams belonging to different flows.
Reference: [8] <author> S. Deering and R. Hinden. </author> <title> Internet Protocol, Version 6 (IPv6) Specification. </title> <type> RFC 1883, </type> <month> December </month> <year> 1995. </year>
Reference-contexts: Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security [4, 11, 18]. In addition, both IPv4 and IPv6 <ref> [8] </ref>, now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) [1, 2, 3]. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security.
Reference: [9] <author> W. Diffie and M.E. Hellman. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 22(6) </volume> <pages> 644-654, </pages> <month> November </month> <year> 1976. </year>
Reference-contexts: No state synchronization is needed between the source and destination principals. The zero-message keying mechanism is based on the basic Diffie-Hellman key exchange scheme <ref> [9] </ref>. It makes use of the Diffie-Hellman scheme to obtain a pair-based master key, and further derives from it a flow key. The derivation of the flow key is easy knowing the pair-based master key and the sfl for the flow.
Reference: [10] <author> D.E. Eastlake and C.W. Kaufman. </author> <title> Domain Name System Security Extensions. </title> <type> Internet Draft, </type> <month> August 5 </month> <year> 1996. </year>
Reference-contexts: However, the mechanisms for ensuring these are outside of the scope of the protocol specification. Typically, the private value is kept by a principal; while the public values are made available and authenticated via a distributed certification hierarchy (e.g., X.509 certificates [28]) or a secure DNS service <ref> [10] </ref>. We denote by K S;D = g mod p the implicit pair-based master key between S and D. Note that K S;D can be computed by either S or D (but no others) using their own private value and the other principal's public value.
Reference: [11] <author> P. Karn and W.A. Simpson. </author> <title> The Photuris Session Key Management Protocol. </title> <type> Internet Draft, </type> <month> June </month> <year> 1996. </year>
Reference-contexts: Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security <ref> [4, 11, 18] </ref>. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) [1, 2, 3]. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. <p> This establishes a shared secret, which can be used to derive a session key. The session key is stored as part of the security association, and is used in securing ensuing communications. Protocols supporting this method include Oakley [18] and Photuris <ref> [11] </ref>. The key advantage of session-based keying is the possible efficiency gain with explicit state setup, especially in case of long-lived communications.
Reference: [12] <author> D. Knuth. </author> <booktitle> The Art of Computer Programming: Volume 2, Seminumerical Algorithms. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <address> 2nd edition, </address> <year> 1981. </year>
Reference-contexts: Generating the Confounder Although a confounder is required on a per-datagram basis, its generation is not computationally expensive. This is because a confounder needs only be statistically random, as opposed to cryptographically random. For example, the confounder can be generated using the highly efficient linear congruential generators <ref> [12] </ref>. Of course, the seed for the generator must be randomized in each initialization of FBS. Computing the MAC The size of MAC is dependent on the algorithm used. For example, MD5 produces 128-bit hashes while SHS produces 160-bit hashes.
Reference: [13] <author> J.B. Lacy, D.P. Mitchell, and W.M. </author> <title> Schell. </title> <booktitle> CryptoLib: Cryptography in software. In Proceedings of USENIX Unix Security Symposium IV, </booktitle> <pages> pages 1-17, </pages> <address> Santa Clara, California, </address> <month> October 4-6 </month> <year> 1993. </year>
Reference-contexts: This fix is, strictly speaking, outside the scope of FBS, as it requires changes in the networking code outside of FBS (e.g., the in pcballoc function in 4.4BSD TCP/IP implementation). 7.2 Our Implementation Crytographic Operations. The CryptoLib library <ref> [13] </ref> is used for all cryptographic operations. It includes most of the commonly used cryptographic primitives, e.g., Diffie-Hellman key exchange, DES, RSA, MD5, etc. The key reasons for its choice are its general availability and portability (Sparc and Intel, Solaris and NT).
Reference: [14] <editor> M.K. McKusick, K. Bostic, M.J. Karels, and J.S. Quar-terman. </editor> <booktitle> The Design and Implementation of the 4.4BSD Operating System. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1996. </year>
Reference-contexts: For concreteness, we have implemented our IP mapping as part of the IP code [27] in the 4.4BSD kernel <ref> [14] </ref>. 7.1 Security Flow Policy At the IP level, host/gateway to host/gateway security can be easily provided. This can be done by encrypting all datagrams going from one host/gateway to another. A more ambitious goal of IP security, however, is to provide some form of "conversation"-level 8 security.
Reference: [15] <institution> National Bureau of Standards, U.S. Department of Commerce, </institution> <month> Washingtion, </month> <title> D.C. Data Encryption Standard. </title> <publisher> FIPS Pub 46, </publisher> <month> January 15 </month> <year> 1977. </year>
Reference-contexts: S and D are included to explicitly tie the flow key K f to that of a flow between S and D; K S;D also implicitly provides a similar function. Candidates for H are MD5 [23], SHS [17] or even DES <ref> [15] </ref>. The derivation of K f could potentially be highly expensive, especially if K S;D is not already known. In such a case, communication (hence roundtrip delay) to obtain the values for computing K S;D is required. <p> Typically, encryption is performed using a block cipher such as DES <ref> [15] </ref>. The confounder is used as the IV in the CBC, CFB, or OFB modes [16]. In case of ECB mode, the confounder is XOR'ed with every block of plaintext prior to encryption.
Reference: [16] <institution> National Bureau of Standards, U.S. Department of Commerce, Washingtion, D.C. DES Modes of Operations. </institution> <note> FIPS Pub 81, </note> <month> December </month> <year> 1980. </year>
Reference-contexts: Typically, encryption is performed using a block cipher such as DES [15]. The confounder is used as the IV in the CBC, CFB, or OFB modes <ref> [16] </ref>. In case of ECB mode, the confounder is XOR'ed with every block of plaintext prior to encryption. A confounder helps to hide the presence of identical datagrams in the same flow, as the knowledge of such may be useful to an attacker.
Reference: [17] <institution> National Institute of Standards, U.S. Department of Commerce, </institution> <month> Washingtion, </month> <title> D.C. Secure Hash Standard. </title> <publisher> FIPS Pub 180, </publisher> <month> April </month> <year> 1993. </year>
Reference-contexts: S and D are included to explicitly tie the flow key K f to that of a flow between S and D; K S;D also implicitly provides a similar function. Candidates for H are MD5 [23], SHS <ref> [17] </ref> or even DES [15]. The derivation of K f could potentially be highly expensive, especially if K S;D is not already known. In such a case, communication (hence roundtrip delay) to obtain the values for computing K S;D is required.
Reference: [18] <author> H.K. Orman. </author> <title> The OAKLEY Key Determination Protocol. </title> <type> Internet Draft, </type> <month> May </month> <year> 1996. </year>
Reference-contexts: Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security <ref> [4, 11, 18] </ref>. In addition, both IPv4 and IPv6 [8], now have built-in provisions for security in the form of an Authentication Header (AH) and an Encapsulating Security Payload Header (ESPH) [1, 2, 3]. Unfortunately, existing proposals are neither satisfactory nor completely address the problem of datagram security. <p> This establishes a shared secret, which can be used to derive a session key. The session key is stored as part of the security association, and is used in securing ensuing communications. Protocols supporting this method include Oakley <ref> [18] </ref> and Photuris [11]. The key advantage of session-based keying is the possible efficiency gain with explicit state setup, especially in case of long-lived communications.
Reference: [19] <author> C. Partridge. </author> <title> Using the Flow Label Field in IPv6. </title> <type> RFC 1809, </type> <month> June 14 </month> <year> 1995. </year>
Reference-contexts: In this way, the system and implementation specific details are all encapsulated in the mappings only. 4 The Flow Concept The concept of flow is not new. It has received much attention lately, especially in relationship to routing (e.g., in IPv6 <ref> [19] </ref>) and quality of service (e.g., RSVP [29]). Broadly speaking, a flow is a sequence of datagrams satisfying some pre-defined attributes of interest [20]. This definition could be very general.
Reference: [20] <author> L.L. Peterson and B.S. Davie. </author> <title> Computer Networks | A Systems Approach. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1996. </year>
Reference-contexts: It has received much attention lately, especially in relationship to routing (e.g., in IPv6 [19]) and quality of service (e.g., RSVP [29]). Broadly speaking, a flow is a sequence of datagrams satisfying some pre-defined attributes of interest <ref> [20] </ref>. This definition could be very general. But, typically, flows are used to refer to groups of datagrams that are to receive similar treatment in their network transport. For example, datagrams in an QoS flow are expected to enjoy similar quality of service.
Reference: [21] <author> J. Postel. </author> <title> User Datagram Protocol. </title> <type> RFC 768, </type> <month> August 28 </month> <year> 1980. </year>
Reference-contexts: Request permissions from Publications Dept., ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. Datagram services have been widely adopted. Their success has been mainly attributed to their simplicity, flexibility, robustness and scalability. For example, many of the most important networking protocols, such as IP [22], UDP <ref> [21] </ref>, and RPC [6], make use of an underlying datagram service model. Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security [4, 11, 18].
Reference: [22] <author> J. Postel. </author> <title> Internet Protocol: DARPA Internet Program Protocol Specification. </title> <type> RFC 791, </type> <month> September </month> <year> 1981. </year>
Reference-contexts: Request permissions from Publications Dept., ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. Datagram services have been widely adopted. Their success has been mainly attributed to their simplicity, flexibility, robustness and scalability. For example, many of the most important networking protocols, such as IP <ref> [22] </ref>, UDP [21], and RPC [6], make use of an underlying datagram service model. Recently, much attention has been paid to securing network communications, especially those based on data-grams. This can be seen most apparently in the many proposals for IP security [4, 11, 18].
Reference: [23] <author> R. Rivest. </author> <title> The MD5 Message-Digest Algorithm. </title> <type> RFC 1321, </type> <month> April 16 </month> <year> 1992. </year>
Reference-contexts: S and D are included to explicitly tie the flow key K f to that of a flow between S and D; K S;D also implicitly provides a similar function. Candidates for H are MD5 <ref> [23] </ref>, SHS [17] or even DES [15]. The derivation of K f could potentially be highly expensive, especially if K S;D is not already known. In such a case, communication (hence roundtrip delay) to obtain the values for computing K S;D is required.
Reference: [24] <author> W. Rosenberry, D. Kenny, and G. Fisher. </author> <title> Understanding DCE. </title> <publisher> O'Reilley & Associates, Inc., </publisher> <year> 1992. </year>
Reference-contexts: The destination recovers the session key from the ticket, and uses it to decrypt the payload. Protocols that use this approach include Kerberos [25], Sun RPC [26] and DCE <ref> [24] </ref>. In session-based keying without a third party, a dynamic key exchange is performed between the source and destination principals. This establishes a shared secret, which can be used to derive a session key.
Reference: [25] <author> J.G. Steiner, C. Neuman, and J.I. Schiller. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> In Proceedings of USENIX Winter Conference, </booktitle> <pages> pages 191-202, </pages> <address> Dallas, TX, </address> <month> February </month> <year> 1988. </year>
Reference-contexts: To send a datagram, the source encrypts the payload with the session key and sends the encrypted payload together with the ticket. The destination recovers the session key from the ticket, and uses it to decrypt the payload. Protocols that use this approach include Kerberos <ref> [25] </ref>, Sun RPC [26] and DCE [24]. In session-based keying without a third party, a dynamic key exchange is performed between the source and destination principals. This establishes a shared secret, which can be used to derive a session key.
Reference: [26] <author> Sun Microsystems, Inc. </author> <title> Remote Procedure Call Protocol Specification Version 2. </title> <type> RFC 1057, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: To send a datagram, the source encrypts the payload with the session key and sends the encrypted payload together with the ticket. The destination recovers the session key from the ticket, and uses it to decrypt the payload. Protocols that use this approach include Kerberos [25], Sun RPC <ref> [26] </ref> and DCE [24]. In session-based keying without a third party, a dynamic key exchange is performed between the source and destination principals. This establishes a shared secret, which can be used to derive a session key.
Reference: [27] <author> G.R. Wright and W.R. Stevens. </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 2 | The Implementation. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1995. </year>
Reference-contexts: For concreteness, we have implemented our IP mapping as part of the IP code <ref> [27] </ref> in the 4.4BSD kernel [14]. 7.1 Security Flow Policy At the IP level, host/gateway to host/gateway security can be easily provided. This can be done by encrypting all datagrams going from one host/gateway to another.
Reference: [28] <institution> CCITT Recommendation X.509 The Directory|Authentication framework, </institution> <year> 1988. </year> <note> See also ISO/IEC 9594-8, </note> <year> 1989. </year>
Reference-contexts: However, the mechanisms for ensuring these are outside of the scope of the protocol specification. Typically, the private value is kept by a principal; while the public values are made available and authenticated via a distributed certification hierarchy (e.g., X.509 certificates <ref> [28] </ref>) or a secure DNS service [10]. We denote by K S;D = g mod p the implicit pair-based master key between S and D.
Reference: [29] <author> L Zhang, S.E. Deering, D. Estrin, S. Shenker, and D. Zap-pala. RSVP: </author> <title> A new resource ReSerVation Protocol. </title> <journal> IEEE Network Magazine, </journal> <volume> 9(5), </volume> <year> 1993. </year> <month> 14 </month>
Reference-contexts: In this way, the system and implementation specific details are all encapsulated in the mappings only. 4 The Flow Concept The concept of flow is not new. It has received much attention lately, especially in relationship to routing (e.g., in IPv6 [19]) and quality of service (e.g., RSVP <ref> [29] </ref>). Broadly speaking, a flow is a sequence of datagrams satisfying some pre-defined attributes of interest [20]. This definition could be very general. But, typically, flows are used to refer to groups of datagrams that are to receive similar treatment in their network transport.
References-found: 29

