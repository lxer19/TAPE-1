URL: http://www.math.rutgers.edu/~sontag/FTP_DIR/pls-expo.ps.gz
Refering-URL: http://www.math.rutgers.edu/~sontag/papers.html
Root-URL: 
Email: sontag@control.rutgers.edu  
Title: Interconnected Automata and Linear Systems: A Theoretical Framework in Discrete-Time In Hybrid Systems III: Verification
Author: Eduardo D. Sontag 
Date: 436-448.  
Note: and E.D.Sontag, eds.), Springer, NY, 1996, pp.  
Address: New Brunswick, NJ 08903, USA  
Affiliation: Department of Mathematics Rutgers University  
Abstract: This paper summarizes the definitions and several of the main results of an approach to hybrid systems, which combines finite automata and linear systems, developed by the author in the early 1980s. Some related more recent results are briefly mentioned as well. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> Albertini, F., and E.D. Sontag, </editor> <title> "Identifiability of discrete-time neural networks," </title> <booktitle> Proc. European Control Conference, </booktitle> <address> Groningen, </address> <month> June </month> <year> 1993, </year> <pages> pp. 460-465. </pages>
Reference-contexts: These models are sometimes called "recurrent neural networks," treated for instance in <ref> [1, 2, 5, 6] </ref>; later we mention some results that hold specifically for this class. Finally, an even further enrichment of the model is obtained if we allow, as part of the specification of the system, the addition of explicit constraints on controls and states.
Reference: 2. <editor> Albertini, F., and E.D. Sontag, </editor> <title> "State observability in recurrent neural networks," </title> <journal> Systems & Control Letters 22(1994): </journal> <pages> 235-244. </pages>
Reference-contexts: These models are sometimes called "recurrent neural networks," treated for instance in <ref> [1, 2, 5, 6] </ref>; later we mention some results that hold specifically for this class. Finally, an even further enrichment of the model is obtained if we allow, as part of the specification of the system, the addition of explicit constraints on controls and states.
Reference: 3. <author> Koplon, R.M., L.J. Hautus, and E.D. Sontag, </author> <title> "Observability of linear systems with saturated outputs," </title> <journal> Lin. Alg. Appl. </journal> <pages> 205-206(1994): 909-936. </pages>
Reference-contexts: linear transformations -for definiteness, the results in [13] are given for continuous-time systems, but analogous theorems hold in discrete-time.) Dually, it often the case that measurement devices may saturate, in which case it is proper to use y = sat (Cx) instead of linear observations y = Cx. (See e.g. <ref> [3, 4] </ref> for some recent results for such models.) Alternatively, there might be a specified a hyperplane H in R n , and six matrices A 0 ; A + ; A ; B 0 ; B + ; B , so that the state at time t + 1 is
Reference: 4. <author> Koplon, R.M. and E.D. Sontag, </author> <title> "Sign-linear systems as cascades of automata and continuous variable systems," </title> <booktitle> Proc. IEEE Conf. Decision and Control, </booktitle> <address> San Antonio, Dec. 1993, </address> <publisher> IEEE Publications, </publisher> <year> 1993, </year> <pages> pp. 2290-2291. </pages>
Reference-contexts: linear transformations -for definiteness, the results in [13] are given for continuous-time systems, but analogous theorems hold in discrete-time.) Dually, it often the case that measurement devices may saturate, in which case it is proper to use y = sat (Cx) instead of linear observations y = Cx. (See e.g. <ref> [3, 4] </ref> for some recent results for such models.) Alternatively, there might be a specified a hyperplane H in R n , and six matrices A 0 ; A + ; A ; B 0 ; B + ; B , so that the state at time t + 1 is
Reference: 5. <author> Siegelmann, H.T., and E.D. Sontag, </author> <title> "On the computational power of neural nets," </title> <journal> J. Comp. Syst. Sci. </journal> <volume> 50(1995): </volume> <pages> 132-150. </pages>
Reference-contexts: These models are sometimes called "recurrent neural networks," treated for instance in <ref> [1, 2, 5, 6] </ref>; later we mention some results that hold specifically for this class. Finally, an even further enrichment of the model is obtained if we allow, as part of the specification of the system, the addition of explicit constraints on controls and states. <p> was available for linear systems, nor any characterization in terms of checking higher-order algebraic conditions in terms of polynomials constructible from the entries of the matrices and vector in question.) The proof of this fact relies upon the work on simulation of Turing machines by devices such as (3); see <ref> [5] </ref>. From that work it follows that there exists a certain matrix A (with n approximately equal to 1000 in the construction given in [5], and most entries being 0, 1, or certain small rational numbers) for which there is no possible algorithm that can answer the following question: "Given ~, <p> the matrices and vector in question.) The proof of this fact relies upon the work on simulation of Turing machines by devices such as (3); see <ref> [5] </ref>. From that work it follows that there exists a certain matrix A (with n approximately equal to 1000 in the construction given in [5], and most entries being 0, 1, or certain small rational numbers) for which there is no possible algorithm that can answer the following question: "Given ~, is there any integer k so that the first coordinate of the solution of x (t + 1) = sat (Ax (t)) ; x
Reference: 6. <author> Siegelmann, H.T., and E.D. Sontag, </author> <title> "Analog computation, neural networks, and circuits," </title> <journal> Theor. Comp. Sci. </journal> <volume> 131(1994): </volume> <pages> 331-360. </pages>
Reference-contexts: These models are sometimes called "recurrent neural networks," treated for instance in <ref> [1, 2, 5, 6] </ref>; later we mention some results that hold specifically for this class. Finally, an even further enrichment of the model is obtained if we allow, as part of the specification of the system, the addition of explicit constraints on controls and states. <p> This makes such models of PL systems a universal model for "real number" computation. Moreover, their capabilities can be understood in the context of "Turing machines that consult sparse oracles," in the language of computational complexity; the reader is referred to <ref> [6] </ref> for this topic.
Reference: 7. <author> Sontag, E.D., </author> <title> "Nonlinear regulation: The piecewise linear approach," </title> <journal> IEEE Trans. Autom. Control AC-26(1981): </journal> <pages> 346-358. </pages>
Reference-contexts: In the early 1980s, the author wrote the paper <ref> [7] </ref>, whose purpose was to propose a theoretical foundation for such hybrid systems. This paper provided several basic theorems on representation and control, based on the use of a certain logic formalism together with elementary tools of "piecewise linear algebra" developed in the companion paper [8]. <p> Through the device of sampling (measure the plant at discrete intervals, apply a constant control during the next period), continuous-time physical processes are seen by the regulator as a discrete-time system. Thus we took in <ref> [7] </ref> the point of view of defining hybrid systems only in discrete-time. <p> Theory, Verification, Design As already mentioned, the paper <ref> [7] </ref>, as is the case with most papers in control theory, was by and large concerned with theory, as opposed to algorithm design. In general, research in control theory includes three complementary objectives: theoretical analysis, verification, and design. <p> Linear systems theory has been extremely successful in the formulation and solution of nontrivial design problems and their practical implementation, but few computationally-friendly classes of nonlinear systems have been identified. The class of behaviors that can be represented by the systems encompassed by the approach in <ref> [7] </ref> is extremely large, so it should come as no surprise that many of the basic verification and design objectives are NP-hard (or worse). <p> To make the theory stay "piecewise linear", we ask that these sets be definable in terms of a finite number of linear equalities and inequalities. These are called piecewise linear (from now on, "PL" for short) sets in <ref> [7, 8] </ref> (a more formal definition is given below). Note that, in particular, all finite subsets of an Euclidean space, and all its linear subspaces, are PL sets. <p> these definitions are equivalent to the informal definitions given earlier.) By a PL set one means a PL subset of some R n ; it is obvious how to define PL subsets of PL sets, isomorphisms of PL sets, etc; several "category theoretic" aspects of PL algebra are covered in <ref> [7] </ref>. It is useful at this point to introduce the first order theory of the real numbers with addition and order. <p> variables x = x 1 ; : : : ; x n , the set fx j (x)g is a PL set. (Of course, we can enlarge the language by adding symbols for sets and maps already known to be PL.) This fact is very simple to establish (see e.g. <ref> [7] </ref>) and it provides a very convenient tool for establishing the basic theoretical properties of PL systems. Moreover, the proofs of these facts are constructive, in that the actual quantifier algorithm could be in principle used to compute feedback laws and the like. <p> Moreover, the proofs of these facts are constructive, in that the actual quantifier algorithm could be in principle used to compute feedback laws and the like. Another constructively-proved fact is the following "global implicit function theorem" which can also be found in <ref> [7] </ref>): Assume that : X fi Y ! R n is a PL map, and assume that for each x the equation (x; y) = 0 can be solved for y. <p> for which A i x + B i u + c i 2 L j i ; the update equation for the finite states is then given by ffi (i; (j 1 ; : : : ; j k )) = j i : 3 A Summary of Results From <ref> [7] </ref> We now briefly summarize, in informal terms, some of the main results of the basic paper [7]. <p> the update equation for the finite states is then given by ffi (i; (j 1 ; : : : ; j k )) = j i : 3 A Summary of Results From <ref> [7] </ref> We now briefly summarize, in informal terms, some of the main results of the basic paper [7]. <p> This is a desirable property, which fails for other reasonable general classes of nonlinear systems (e.g. polynomial or analytic transitions). Many other problems can be posed and analyzed in an analogous fashion. Among the ones treated in <ref> [7] </ref> are the existence of observers (state estimators or "filters"), stabilization using dynamical controllers, and systems inverses. We omit details, due to lack of space. 3.2 Asymptotic Problems More interesting than finite-horizon problems are questions involving infinite-time, and in particular asymptotic, behavior. Most of the results in [7] are in connection <p> ones treated in <ref> [7] </ref> are the existence of observers (state estimators or "filters"), stabilization using dynamical controllers, and systems inverses. We omit details, due to lack of space. 3.2 Asymptotic Problems More interesting than finite-horizon problems are questions involving infinite-time, and in particular asymptotic, behavior. Most of the results in [7] are in connection with such issues. We discuss now a representative result of this type. <p> of the PL controller, every trajectory of the system (5) obtained by the procedure just sketched, starting from any z (0) 2 Z, is such that z (t) is well-defined for all t 0 and lim t!1 z (t) = 0. (A stronger Lyapunov stability-like property can be required -see <ref> [7] </ref>- namely that if z (0) is small then the obtained trajectory should remain small.) Observe that for there to exist any type of stabilizing controller, PL or not, it is necessary that the system (5) be null-asymptotically controllable (n.a.c.) when starting from the subset Z: for each z (0) 2 <p> system (5) be null-asymptotically controllable (n.a.c.) when starting from the subset Z: for each z (0) 2 Z, there is some control function v () so that the solution of (5) converges to zero. (Proof: look at the v (t) produced by a controller, if one exists.) Theorem 3.11 in <ref> [7] </ref> then states that conversely, under assumptions that are quite mild in the context of nonlinear control, a PL controller exists if the plant has the n.a.c. property. We describe these assumptions now (in a stronger form than needed, so as to make the discussion concise). <p> This means, in a practical sense, that a sudden and unobserved state change in the plant, due to noise or unmodeled inputs, will not affect convergence (since the controller, starting from the state at the given time, still regulates the plant). This stronger property is called "strong regulation" in <ref> [7] </ref>, and the main theorem there, valid under slightly stronger observability assumptions on the system, assures such regulation by PL systems (cf. Theorem 3.15). 4 Computational Complexity We conclude with some remarks about computational issues. As remarked earlier, finite-horizon problems are decidable for PL systems.
Reference: 8. <author> Sontag, E.D., </author> <title> "Remarks on piecewise-linear algebra," </title> <journal> Pacific J.Math., </journal> <volume> 98(1982): </volume> <pages> 183-201. </pages>
Reference-contexts: This paper provided several basic theorems on representation and control, based on the use of a certain logic formalism together with elementary tools of "piecewise linear algebra" developed in the companion paper <ref> [8] </ref>. <p> To make the theory stay "piecewise linear", we ask that these sets be definable in terms of a finite number of linear equalities and inequalities. These are called piecewise linear (from now on, "PL" for short) sets in <ref> [7, 8] </ref> (a more formal definition is given below). Note that, in particular, all finite subsets of an Euclidean space, and all its linear subspaces, are PL sets. <p> The main results in <ref> [8] </ref> regard the classification of PL sets (from which we may deduce, in turn, classification properties of PL systems); We describe them very briefly in this paragraph, which can be skipped without loss of continuity.
Reference: 9. <author> Sontag, E.D., </author> <title> "Real addition and the polynomial hierarchy," </title> <journal> Inform. Proc. Letters 20(1985): </journal> <pages> 115-120. </pages>
Reference-contexts: Theorem 3.15). 4 Computational Complexity We conclude with some remarks about computational issues. As remarked earlier, finite-horizon problems are decidable for PL systems. Thus it is of interest to study their computational complexity. Unfortunately, there is a rather negative result in that regard. To explain this result, given in <ref> [9] </ref> and not difficult to establish, we first recall some basic concepts from logic. <p> Thus, not only should P be different from NP, but problems whose definition requires 89 should be much harder to solve than those in NP, and so forth going "up" along the hierarchy. The main result in <ref> [9] </ref> was that problems in any given level, such as for instance 989, for PL systems are of exactly same complexity (in a precise sense of reduction of one problem to another) as problems in the corresponding level of the polynomial hierarchy.
Reference: 10. <author> Sontag, E.D., </author> <title> Mathematical Control Theory: Deterministic Finite Dimensional Systems, </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: It has long been recognized that the control of more complex systems than those handled by the linear theory will require switching mechanisms (discon-tinuities) of various types; an early discussion of when such discontinuities are unavoidable can be found in [12]; see also the textbook <ref> [10] </ref>, Section 4.8. Thus it is necessary to study hybrid designs in which the controller incorporates switching as well as linear elements. <p> Often, one adds a measurement or read-out map y (t) = Cx (t) to this basic setup. Models of this type constitute the "bread and butter" of modern control design; their theory is well-understood (see e.g. <ref> [10] </ref>) and computer aided design packages are widely available. Piecewise linear (or more precisely, piecewise-affine) systems arise if one has different affine transitions in different parts of the state space and/or the input-value set , and each of these pieces is described by linear equalities and inequalities. <p> v k is applied to the plant during the next inter-sampling interval (kffi; (k + 1)ffi), according to a fixed feedback rule v k = K (x (k); y (k)) which is a PL function of the current state x (k) of the controller and the current observation. (See e.g. <ref> [10] </ref> for a definitions, examples, and elementary properties of sampling.) Next we explain the meaning of closed-loop stabilization. <p> f (x; u) = Ax + Bu + o (x; u) and h (x) = Cx + o (x); then the linearized system _z = Az + Bv, y = Cz is stabilizable and detectable (these constitute generically satisfied rank conditions on the triple of matrices (A; B; C); see <ref> [10] </ref>). This hypothesis is essential for the proof (it is in fact also necessary for the existence of a controller if exponential convergence is required). Finally, we assume that the plant is observable. This means (cf. [10]) that given any two states z 1 and z 2 , there is some <p> constitute generically satisfied rank conditions on the triple of matrices (A; B; C); see <ref> [10] </ref>). This hypothesis is essential for the proof (it is in fact also necessary for the existence of a controller if exponential convergence is required). Finally, we assume that the plant is observable. This means (cf. [10]) that given any two states z 1 and z 2 , there is some control function (which depends on the particular pair (z 1 ; z 2 )) so that when applied to the system, different measurement signals y (t) result when starting at z 1 or at z 2 <p> Indeed, ~ is null-controllable for (1) if and only if the null-controllability property is verified with k = n (this is a standard elementary fact; see for instance Lemma 3.2.8 in <ref> [10] </ref>); thus a state ~ is null-controllable if and only if A n ~ is in the the reachability space of (1), that is, the span of the columns of B; AB; : : : ; A n1 B.
Reference: 11. <author> Sontag, E.D., </author> <title> "Systems combining linearity and saturations, and relations to "neural nets," </title> <booktitle> in Proc. Nonlinear Control Systems Design Symp., </booktitle> <address> Bordeaux, </address> <note> June 1992 (M. </note> <editor> Fliess, Ed.), </editor> <publisher> IFAC Publications, </publisher> <pages> pp. 242-247. </pages>
Reference-contexts: Models like this are of interest for several different reasons, including their computational universality (discussed below), approximation properties (cf. <ref> [11] </ref>), and use in experimental "neural network" work; they arise naturally when linear systems have variables subject to amplitude limitations.
Reference: 12. <author> Sontag, E.D., and H.J. Sussmann, </author> <title> "Remarks on continuous feedback," </title> <booktitle> Proc. IEEE Conf. Decision and Control, </booktitle> <address> Albuquerque, </address> <publisher> Dec.1980, </publisher> <pages> pp. 916-921. </pages>
Reference-contexts: It has long been recognized that the control of more complex systems than those handled by the linear theory will require switching mechanisms (discon-tinuities) of various types; an early discussion of when such discontinuities are unavoidable can be found in <ref> [12] </ref>; see also the textbook [10], Section 4.8. Thus it is necessary to study hybrid designs in which the controller incorporates switching as well as linear elements.
Reference: 13. <author> Sussmann, H.J., E. Sontag, and Y. Yang, </author> <title> "A general result on the stabilization of linear systems using bounded controls," </title> <journal> IEEE Trans. Autom. Control 39(1994): </journal> <month> 2411-2425. </month> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: x + = Ax + B sat (u) (2) where, setting the saturation levels at 1, we write sat (u 1 ; : : :; u m ) for the vector whose ith component is u i if ju i j 1 and sign (u i ) otherwise. (See e.g. <ref> [13] </ref> and references there, for such saturated-input systems, as well as feedback laws for them which combine saturations and linear transformations -for definiteness, the results in [13] are given for continuous-time systems, but analogous theorems hold in discrete-time.) Dually, it often the case that measurement devices may saturate, in which case <p> m ) for the vector whose ith component is u i if ju i j 1 and sign (u i ) otherwise. (See e.g. <ref> [13] </ref> and references there, for such saturated-input systems, as well as feedback laws for them which combine saturations and linear transformations -for definiteness, the results in [13] are given for continuous-time systems, but analogous theorems hold in discrete-time.) Dually, it often the case that measurement devices may saturate, in which case it is proper to use y = sat (Cx) instead of linear observations y = Cx. (See e.g. [3, 4] for some recent results for such
References-found: 13

