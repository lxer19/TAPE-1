URL: http://www.eecis.udel.edu/~fecko/PAPERS-PS/milcom98-tc.ps.gz
Refering-URL: http://www.eecis.udel.edu/~fecko/mf-research.html
Root-URL: http://www.eecis.udel.edu
Title: GENERATION OF REALIZABLE CONFORMANCE TESTS UNDER TIMING CONSTRAINTS  
Author: M. Umit Uyar Mariusz A. Fecko, Adarshpal S. Sethi, Paul D. Amer 
Date: Oct 1998)  
Note: (Proc. IEEE MILCOM'98, Bedford, MA,  
Affiliation: Computer and Information Science Department University of Delaware, Newark, DE  
Abstract: An optimization method is introduced for generating minimum-length test sequences taking into account timing constraints for FSM models of communication protocols. Due to active timers in many of today's protocols, the number of consecutive self-loops that can be traversed in a given state before a timeout occurs is limited. An example of a protocol where this constraint occurs is MIL-STD 188-220B. A test sequence that does not consider timing constraints will likely be unrealizable in a test laboratory, thereby potentially resulting in the incorrect failing of valid implementations. The solution uses a series of augmentations for a protocol's directed graph representation. The resulting test sequence is proven to be of minimum-length while not exceeding the tolerable limit of consecutive self-loops at each state. Although UIO sequences are used for state verification method, the results also are applicable to test generation that uses distinguishing or characterizing sequences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, A. T. Dahbura, D. Lee, and M. U. Uyar, </author> <title> "An optimization technique for protocol conformance test generation based on UIO sequences and rural Chinese postman tours," </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1604-1615, </pages> <month> Nov </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Due to interoperability requirements of heterogeneous devices in a complex communications network, each component must be tested for conformance against its specification. Automated generation of conformance tests based on the formal descriptions of general communication protocols has been an active research area <ref> [1] </ref> - [9]. Recently, these techniques have been considered for the test case generation of MIL-STD 188-220B [10]. These techniques, using a deterministic finite-state machine (FSM) model of a protocol specification, focus on the optimization of the test sequence length. <p> techniques such as unique input/output (UIO) sequences [13], distinguishing sequences [14, 15], or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T <ref> [1] </ref> T [21,29] T [24] MIL-STD 188-220B. Example 2: Timing constraints in MIL-STD 188 220B The University of Delaware's Protocol Engineering Laboratory is developing test scripts to be used by the U.S. Army CECOM in their MIL-STD 188-220B Conformance Tester. <p> Aho et al. introduced an optimization for the test sequence length (and cost) using UIO sequences <ref> [1] </ref> to perform the last step of the above single transition test. A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The same restriction also applies to t9; t10, and t11. The following test sequence is obtained by applying the rural Chinese postman method <ref> [1] </ref> to the graph without 4 (a) (b) v 3 v 2 e0 e1- 4 e5 e6 t6 t7 t8-11 e13 t13 . . . .
Reference: [2] <author> B. S. Bosik and M. U. Uyar, </author> <title> "FSM-based formal methods in protocol conformance testing: from theory to implementation," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 22, </volume> <month> Sep </month> <year> 1991. </year>
Reference: [3] <author> W. Y. Chan and S. T. Vuong, </author> <title> "An improved protocol test generation procedure based on UIOs," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <month> Sep </month> <year> 1989. </year>
Reference: [4] <author> D. Lee and M. Yannakakis, </author> <title> "Principles and methods of testing finite state machines a survey," </title> <journal> Proc. of the IEEE, </journal> <volume> vol. 84, </volume> <pages> pp. 1090-1123, </pages> <month> Aug </month> <year> 1996. </year>
Reference: [5] <author> R. J. Linn, </author> <title> "Conformance testing for OSI protocols," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 18, </volume> <pages> pp. 203-219, </pages> <year> 1990. </year>
Reference: [6] <author> R. E. Miller and S. Paul, </author> <title> "On the generation of minimal-length conformance tests for communication protocols," </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 116-129, </pages> <month> Feb </month> <year> 1993. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [7] <author> R. E. Miller and S. Paul, </author> <title> "Structural analysis of protocol specifications and generation of maximal fault coverage conformance test sequences," </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 457-470, </pages> <month> Oct </month> <year> 1994. </year>
Reference: [8] <author> B. Sarikaya, G. von Bochmann, and E. Cerny, </author> <title> "A test design methodology for protocol testing," </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 13, </volume> <pages> pp. 518-531, </pages> <month> May </month> <year> 1987. </year>
Reference: [9] <author> H. Ural and B. Yang, </author> <title> "A test sequence selection method for protocol testing," </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 39, no. 4, </volume> <year> 1991. </year>
Reference-contexts: 1 Introduction Due to interoperability requirements of heterogeneous devices in a complex communications network, each component must be tested for conformance against its specification. Automated generation of conformance tests based on the formal descriptions of general communication protocols has been an active research area [1] - <ref> [9] </ref>. Recently, these techniques have been considered for the test case generation of MIL-STD 188-220B [10]. These techniques, using a deterministic finite-state machine (FSM) model of a protocol specification, focus on the optimization of the test sequence length.
Reference: [10] <institution> Military Standard Interoperability Standard for Digital Message Device Subsystems (MIL-STD 188-220B), </institution> <month> Nov </month> <year> 1997. </year>
Reference-contexts: Automated generation of conformance tests based on the formal descriptions of general communication protocols has been an active research area [1] - [9]. Recently, these techniques have been considered for the test case generation of MIL-STD 188-220B <ref> [10] </ref>. These techniques, using a deterministic finite-state machine (FSM) model of a protocol specification, focus on the optimization of the test sequence length. <p> In addition to the UIO sequences method, the solution described in this paper is also applicable to test sequences that use other state identification methods such as distinguishing sequences, and characterizing sequences. Currently, this method is being implemented as a software tool and will be applied to MIL-STD 188-220B <ref> [10] </ref>.
Reference: [11] <author> P. D. Amer, M. A. Fecko, A. S. Sethi, M. U. Uyar, T. J. Dzik, R. Menell, and M. McMahon, </author> <title> "Using Estelle to evolve MIL-STD 188-220," </title> <booktitle> in Proc. Estelle'98: Int'l Workshop on FDT Estelle, </booktitle> <address> (Evry, France), </address> <month> Nov </month> <year> 1998. </year>
Reference-contexts: This can result in the incorrect failing of valid implementations. It was during ATIRP-sponsored test case generation research for MIL-STD 188-220B that the problem of timing constraints was discovered and then studied <ref> [11] </ref>. In this paper, a solution is given to optimize the test sequence length and cost under the constraint that an Implementation Under Test (IUT) can remain only a limited amount of time in some states during testing, before a timer's expiration forces a state change.
Reference: [12] <author> J. K. Lenstra and A. H. G. R. Kan, </author> <title> "On general routing problems," </title> <journal> Networks, </journal> <volume> vol. 6, </volume> <pages> pp. 273-280, </pages> <year> 1976. </year>
Reference-contexts: The solution augments original graph representation of the protocol FSM model. Then it formulates a Rural Chinese Postman Problem solution <ref> [12] </ref> to generate a minimum-length fl This work is supported by ARO SPP administered by Bat-telle (DAAL03-91-C-0034), by ARO (DAAL03-91-G-0086), and by ATIRP Consortium sponsored by the ARL under the FedLab Program (DAAL01-96-2-0002). y Dr. <p> The so-called Chinese Postman Problem is defined as finding a minimum-cost tour of G that traverses every edge at least once [21]. The Rural (Chinese) Postman Problem is finding a (minimum cost) tour for a subset of edges in G <ref> [12] </ref>. During conformance testing of a protocol implementation, the IUT is viewed as a black box, where only the inputs applied to the IUT and the outputs generated by the IUT can be controlled and observed, respectively.
Reference: [13] <author> K. K. Sabnani and A. T. Dahbura, </author> <title> "A protocol test generation procedure," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 15, </volume> <pages> pp. 285-297, </pages> <year> 1988. </year>
Reference-contexts: Uyar, a Research Professor with Department of Electrical Engineering, the City College of the City University of New York, is presently Visiting Associate Professor at University of Delaware. tour. In the final test sequence generated, the number of consecutive self-loops never exceeds any state's specified limit. UIO sequences <ref> [13] </ref> are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences [14, 15]. Earlier results of this study, limited to verification sequences that are self-loops, are presented in [16]. <p> In addition to the original self-loops of a specification model, additional self-loops are typically created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences <ref> [13] </ref>, distinguishing sequences [14, 15], or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [14] <author> A. Bhattacharyya, </author> <title> Checking Experiments in Sequential Machines. </title> <address> New York, N.Y.: </address> <publisher> John Wiley & Sons, </publisher> <year> 1989. </year>
Reference-contexts: In the final test sequence generated, the number of consecutive self-loops never exceeds any state's specified limit. UIO sequences [13] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences <ref> [14, 15] </ref>. Earlier results of this study, limited to verification sequences that are self-loops, are presented in [16]. This paper generalizes these earlier results to both self-loop and non-self-loop verification sequences. Section 2 presents the practical motivation behind the optimization problem formulated in the paper. Two real protocols, U.S. <p> In addition to the original self-loops of a specification model, additional self-loops are typically created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences <ref> [14, 15] </ref>, or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. <p> In addition to the original self-loops of a specification model, additional self-loops are typically created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences <ref> [14, 15] </ref>, or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [15] <author> Z. Kohavi, </author> <title> Switching and Finite Automata Theory. </title> <address> New York, N.Y.: McGraw Hill, </address> <year> 1978. </year>
Reference-contexts: In the final test sequence generated, the number of consecutive self-loops never exceeds any state's specified limit. UIO sequences [13] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences <ref> [14, 15] </ref>. Earlier results of this study, limited to verification sequences that are self-loops, are presented in [16]. This paper generalizes these earlier results to both self-loop and non-self-loop verification sequences. Section 2 presents the practical motivation behind the optimization problem formulated in the paper. Two real protocols, U.S. <p> In addition to the original self-loops of a specification model, additional self-loops are typically created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences <ref> [14, 15] </ref>, or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. <p> In addition to the original self-loops of a specification model, additional self-loops are typically created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences <ref> [14, 15] </ref>, or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. <p> Other examples of timers in Q.931 are: timer T304 running in state Overlap Sending, and timer T310 in state Outgoing Call Proceeding . 3 Preliminaries and practical restric tions on test sequences A protocol can be specified as a deterministic FSM <ref> [15, 20] </ref>, which can be represented by a directed graph G = (V; E). The set V = fv 1 ; : : : ; v n g of vertices correspond to the set of states S of the FSM. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [16] <author> M. U. Uyar, M. A. Fecko, A. S. Sethi, and P. D. Amer, </author> <title> "Minimum-cost solutions for testing protocols with timers," </title> <booktitle> in Proc. Int'l Performance, Computing, and Communications Conf., </booktitle> <address> (Phoenix, AZ), </address> <pages> pp. 346-354, </pages> <month> Feb </month> <year> 1998. </year>
Reference-contexts: UIO sequences [13] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences [14, 15]. Earlier results of this study, limited to verification sequences that are self-loops, are presented in <ref> [16] </ref>. This paper generalizes these earlier results to both self-loop and non-self-loop verification sequences. Section 2 presents the practical motivation behind the optimization problem formulated in the paper. Two real protocols, U.S. Army MIL-STD 188-220B and Q.931 [17], demonstrate real examples of protocols with self-loop timing constraints. <p> to ob tain the graph G 00 as the minimum-cost rural symmetric augmentation of the graph G 0 5 Minimum-cost solutions for const rained self-loop testing The detailed description of an algorithm for finding the minimum-cost augmentation of G 0 00 with the intro duced self-loop constraint is presented in <ref> [16, 26] </ref>. The method uses several graph transformations and applies network flow techniques to obtain a minimum-cost solution. The transformations applied to vertex v 0 i depend on the form of U IO (v i ) [26]. 0 i whose UIO sequence contains both self-loop and non-self-loop edges.
Reference: [17] <institution> AT&T 5E4 Generic Program, AT&T 5ESS T M Switch - ISDN Basic Rate Interface Specification, </institution> <month> Sep </month> <year> 1985. </year>
Reference-contexts: This paper generalizes these earlier results to both self-loop and non-self-loop verification sequences. Section 2 presents the practical motivation behind the optimization problem formulated in the paper. Two real protocols, U.S. Army MIL-STD 188-220B and Q.931 <ref> [17] </ref>, demonstrate real examples of protocols with self-loop timing constraints. Section 3 provides the background information for FSM models and test generation. It also discusses the practical restrictions imposed on test sequences due to the timers. Section 4 presents an outline of the optimization problem.
Reference: [18] <author> M. U. Uyar and M. H. Sherif, </author> <title> "Protocol modeling for conformance testing: Case study for the ISDN LAPD protocol," </title> <journal> AT&T Technical Journal, </journal> <volume> vol. 69, </volume> <month> Jan </month> <year> 1990. </year>
Reference-contexts: Clearly, this is not the goal of testing. Therefore, a properly generated test sequence must take timer constraints into account. Examples of protocols that contain many self-loop transitions in their FSM models include ISDN Q.931 for supplementary voice services, MIL-STD 188-220B for Combat Net Radio communication, and LAPD <ref> [18] </ref>, the data link protocol for the ISDN's D channel.
Reference: [19] <author> M. A. Fecko, P. D. Amer, A. S. Sethi, M. U. Uyar, T. Dzik, R. Menell, and M. McMahon, </author> <title> "Formal design and testing of MIL-STD 188-220A based on Estelle," </title> <booktitle> in Proc. </booktitle> <address> MILCOM'97, (Monterey, California), </address> <month> Nov </month> <year> 1997. </year>
Reference-contexts: Tests are being generated for both the Data Link and Intranet Layers. The tests are derived from an Estelle specification of the protocol. An extended FSM (i.e., FSM with memory) representing a portion of the Intranet Layer of 188-220B, called the Topology Update (TU), is shown in Figure 1 <ref> [19] </ref>. The equivalent FSM model of Topology Update has 10 states and 345 state transitions. In 8 of these states at least one timer is running in the implementation. A timer's status (i.e., on or off) determines the behavior of the implementation.
Reference: [20] <author> Y. N. Shen, F. Lombardi, and A. T. Dahbura, </author> <title> "Protocol conformance testing using multiple UIO sequences," </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 40, </volume> <pages> pp. 1282-1287, </pages> <month> Aug </month> <year> 1992. </year>
Reference-contexts: Other examples of timers in Q.931 are: timer T304 running in state Overlap Sending, and timer T310 in state Outgoing Call Proceeding . 3 Preliminaries and practical restric tions on test sequences A protocol can be specified as a deterministic FSM <ref> [15, 20] </ref>, which can be represented by a directed graph G = (V; E). The set V = fv 1 ; : : : ; v n g of vertices correspond to the set of states S of the FSM. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [21] <author> M. U. Uyar and A. T. Dahbura, </author> <title> "Optimal test sequence generation for protocols: the Chinese postman algorithm applied to Q.931," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 68-72, </pages> <month> Dec </month> <year> 1986. </year>
Reference-contexts: An Euler tour is a tour that contains every edge of G exactly once. The so-called Chinese Postman Problem is defined as finding a minimum-cost tour of G that traverses every edge at least once <ref> [21] </ref>. The Rural (Chinese) Postman Problem is finding a (minimum cost) tour for a subset of edges in G [12].
Reference: [22] <author> H. Ural and Y. Lu, </author> <title> "An improved method for test sequence generation," </title> <type> Tech. Rep. TR-90-12, </type> <institution> Dept. of CSI, University of Ottawa, </institution> <month> Mar </month> <year> 1990. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [23] <author> M. S. Chen, Y. Choi, and A. Kershenbaum, </author> <title> "Minimal length test sequences for protocol conformance," </title> <booktitle> in Proc. First Network Management and Control Workshop, </booktitle> <address> (New York, NY), </address> <year> 1989. </year>
Reference-contexts: created when generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences [14, 15], or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T <ref> [23] </ref> T [24] T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. Example 2: Timing constraints in MIL-STD 188 220B The University of Delaware's Protocol Engineering Laboratory is developing test scripts to be used by the U.S. Army CECOM in their MIL-STD 188-220B Conformance Tester. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [24] <author> M. S. Chen, Y. Choi, and A. Kershenbaum, </author> <title> "Approaches utilizing segment overlap to minimize test sequences," </title> <booktitle> in Proc. PSTV X, </booktitle> <pages> pp. 85-98, </pages> <year> 1990. </year>
Reference-contexts: generated test sequences use state verification techniques such as unique input/output (UIO) sequences [13], distinguishing sequences [14, 15], or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T <ref> [24] </ref> T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. Example 2: Timing constraints in MIL-STD 188 220B The University of Delaware's Protocol Engineering Laboratory is developing test scripts to be used by the U.S. Army CECOM in their MIL-STD 188-220B Conformance Tester. <p> input/output (UIO) sequences [13], distinguishing sequences [14, 15], or characterizing se quences [14, 15]. 1 BOTH- TIMERS-OFF BOTH TIMERS-ON TOP-UPDATE TIMER-ON TOP-UPDATE REQ-TIMER INACTIVE T [ 7,8,12,13,15,20, ON 30,32,34,35] 25,30,32,35] 15,17,19,20,28,29, T [ 2-6,7,8,25,26,32,35] T [ 9,11,16,18,22,27,29,33] T [23] T <ref> [24] </ref> T [29] T [31] T [1] T [21,29] T [24] MIL-STD 188-220B. Example 2: Timing constraints in MIL-STD 188 220B The University of Delaware's Protocol Engineering Laboratory is developing test scripts to be used by the U.S. Army CECOM in their MIL-STD 188-220B Conformance Tester. Tests are being generated for both the Data Link and Intranet Layers. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [25] <author> B. Yang and H. Ural, </author> <title> "Protocol conformance test generation using multiple UIO sequences with overlapping," </title> <booktitle> in Proc. ACM SIGCOMM'90, </booktitle> <pages> pp. 118-125, </pages> <year> 1990. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 13, 14, 15, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [26] <author> M. U. Uyar, M. A. Fecko, A. S. Sethi, and P. D. Amer, </author> <title> "Test generation for protocols with timing constraints," </title> <type> Tech. Rep. </type> <institution> TR-98-07, CIS Dept., University of Delaware, Newark, DE, </institution> <year> 1997. </year> <note> (Submitted for publication). 6 </note>
Reference-contexts: to ob tain the graph G 00 as the minimum-cost rural symmetric augmentation of the graph G 0 5 Minimum-cost solutions for const rained self-loop testing The detailed description of an algorithm for finding the minimum-cost augmentation of G 0 00 with the intro duced self-loop constraint is presented in <ref> [16, 26] </ref>. The method uses several graph transformations and applies network flow techniques to obtain a minimum-cost solution. The transformations applied to vertex v 0 i depend on the form of U IO (v i ) [26]. 0 i whose UIO sequence contains both self-loop and non-self-loop edges. <p> The method uses several graph transformations and applies network flow techniques to obtain a minimum-cost solution. The transformations applied to vertex v 0 i depend on the form of U IO (v i ) <ref> [26] </ref>. 0 i whose UIO sequence contains both self-loop and non-self-loop edges. All outgoing test edges of v 0 i that start with a self-loop edge of v 0 i have the same number of leading composite self-loop edges. <p> Further input/output exchanges are likely to fail even correct IUTs. To avoid disruption of the above test sequence due to timeouts, edge t1 must be prevented from following t8. To meet this requirement, the graph of Figure 4 (a) is converted by the method outlined in Section 5 (see <ref> [26] </ref> for the detailed algorithm) to the graph shown in Figure 4 (b). As can be seen in Figure 4 (b), test edges t8; t9; t10, and t11 may be followed only by edges t5; e5; t6, and e6.
References-found: 26

