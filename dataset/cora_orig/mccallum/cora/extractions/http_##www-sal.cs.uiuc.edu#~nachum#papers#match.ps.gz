URL: http://www-sal.cs.uiuc.edu/~nachum/papers/match.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Email: nachum@cs.uiuc.edu  
Phone: phone/fax [+972] (2) 627-3440  
Title: Semantic Matching in Rewrite Theories  
Author: Subrata Mitra Nachum Dershowitz 
Date: January 1997  
Address: P.O. Box 14582 Jerusalem 91145 Israel  
Affiliation: IBM Software Solutions Division and  Hebrew University  
Abstract: Semantic matching" is the process of generating a basis set of substitutions (of terms for variables) that makes one term equal to another in a specified theory. We restrict ourselves here to matching problems in equational theories that can be presented as programs in the form of convergent rewrite systems, that is, finite sets of equations that compute unique output values when applied (from left-to-right) to input values (a generalization of functional programs). Decidable matching can help in program verification and synthesis. We describe a new class of programs for which matching is decidable, which|with some negative results|provide a finer characterization of decidability than was available before. 
Abstract-found: 1
Intro-found: 1
Reference: [ Aguzzi and Modigliani, 1994 ] <author> G. Aguzzi and U. Modigliani. </author> <title> A Criterion to Decide the Semantic Matching Problem. </title> <booktitle> In Proceedings of the International Conference on Logic and Algebra (in memory of Prof. </booktitle> <address> Magari), Italy, </address> <year> 1995. </year>
Reference-contexts: This result complements one given in [Dershowitz et al., 1992] for restricted non-erasing systems. The main difference between the two is that in this paper we use the purely syntactic property of depth, while [Dershowitz et al., 1992] used a semantic property. Recently <ref> [Aguzzi and Modigliani, 1994] </ref> have extended the decidability criterion of [Dershowitz et al., 1992] by introducing the notion of positional-increase to replace increase.
Reference: [ Bockmayr, 1987 ] <author> A. Bockmayr. </author> <title> A Note on a Canonical Theory with Undecidable Unification and Matching Problem. </title> <journal> Journal of Automated Reasoning, </journal> <volume> Vol 3, </volume> <pages> pages 379-381, </pages> <year> 1987. </year>
Reference-contexts: It is well-known that any strategy for finding a complete set of matchings with respect to a given theory may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules; see, for example, <ref> [Heilbrunner and Holldobler, 1987; Bockmayr, 1987] </ref>. On the other hand, for some special classes of theories|associativity, for instance|semantic matching is decidable. In this paper, we are interested in matching in theories that have a convergent presentation.
Reference: [ Christian, 1992 ] <author> J. Christian. </author> <title> Some Termination Criteria for Narrowing and E-Narrowing. </title> <booktitle> In Proceeding of the Eleventh International Conference on Automated Deduction, </booktitle> <address> Saratoga Springs, New York, </address> <month> June </month> <year> 1992. </year> <booktitle> Volume 607, </booktitle> <pages> pages 582-588, </pages> <booktitle> of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It is known that matching is undecidable even in convergent theories presented as (left- and right-) linear rewrite systems [Heilbrunner and Holldobler, 1987]. On the other hand, matching is decidable if the system is left-flat <ref> [Christian, 1992] </ref>. However, rewrite systems with flat left-hand sides are truly restrictive, and do not allow any recursively defined functions. We show below that matching is undecidable in the right-flat linear case. <p> used in either direction, it is intuitive to use the restriction on both sides.) The resulting theories are simpler than the ones for convergent systems with flat right-hand sides (in fact, they bear similarity to the systems that are convergent and left-flat, for which a positive result was proved in <ref> [Christian, 1992] </ref>). Other characterizations of decidable unification appear in [Kapur and Narendran, 1987] (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and [Hullot, 1980] (every right-hand 6 side must be a variable or a ground term).
Reference: [ Comon, 1992 ] <author> H. Comon. </author> <title> On unification of terms with integer exponents. </title> <type> Technical Report 770, </type> <institution> Universite de Paris-Sud, Laboratoire de Recherche en Informatique, </institution> <year> 1992. </year>
Reference-contexts: Unfortunately, none of these systems are powerful enough to capture truly recursive functions. Decidability results for unification in convergent systems was extended in [Dershowitz and Mitra, 1993], where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of <ref> [Comon, 1992] </ref>. The important difference between the requirements of [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms with defined functions as right-hand sides for rules defining a given function.
Reference: [ Comon et al., 1991 ] <author> H. Comon, M. Haberstrau, and J.-P. Jouannaud. </author> <title> Decidable problems in shallow equational theories. </title> <type> Technical Report 718, </type> <institution> Universite de Paris-Sud, Laboratoire de Recherche en Informa-tique, </institution> <month> December </month> <year> 1991. </year>
Reference: [ Dershowitz and Jouannaud, 1990 ] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, chapter 6, </booktitle> <pages> pages 243-320, </pages> <publisher> North-Holland, </publisher> <address> Ams-terdam, </address> <year> 1990. </year>
Reference-contexts: We start in Section 2 by showing that in general matching is undecidable, even for linear flat systems. Missing definitions can be found in the survey <ref> [Dershowitz and Jouannaud, 1990] </ref>. 2 Undecidable Matching Linearity and flatness are simple, easy-to-check syntactic restrictions on rewrite rules. Such restrictions have been used extensively in the study of properties such as modular termination and confluence of rewrite systems.
Reference: [ Dershowitz et al., 1992 ] <author> N. Dershowitz, S. Mitra, and G. Sivakumar. </author> <title> Decidable matching for convergent systems. </title> <booktitle> In Proceedings of the Eleventh Conference on Automated Deduction, </booktitle> <pages> pages 589-602, </pages> <address> Saratoga Springs, NY, </address> <month> June </month> <year> 1992. </year> <title> Vol. </title> <booktitle> 607 of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference-contexts: Even when a system admits a convergent presentation, the usual case in verification, the corresponding unification or matching procedure may be undecidable. We have studied restricted convergent systems for which matching is decidable. This result complements one given in <ref> [Dershowitz et al., 1992] </ref> for restricted non-erasing systems. The main difference between the two is that in this paper we use the purely syntactic property of depth, while [Dershowitz et al., 1992] used a semantic property. Recently [Aguzzi and Modigliani, 1994] have extended the decidability criterion of [Dershowitz et al., 1992] <p> We have studied restricted convergent systems for which matching is decidable. This result complements one given in <ref> [Dershowitz et al., 1992] </ref> for restricted non-erasing systems. The main difference between the two is that in this paper we use the purely syntactic property of depth, while [Dershowitz et al., 1992] used a semantic property. Recently [Aguzzi and Modigliani, 1994] have extended the decidability criterion of [Dershowitz et al., 1992] by introducing the notion of positional-increase to replace increase. <p> one given in <ref> [Dershowitz et al., 1992] </ref> for restricted non-erasing systems. The main difference between the two is that in this paper we use the purely syntactic property of depth, while [Dershowitz et al., 1992] used a semantic property. Recently [Aguzzi and Modigliani, 1994] have extended the decidability criterion of [Dershowitz et al., 1992] by introducing the notion of positional-increase to replace increase.
Reference: [ Dershowitz and Mitra, 1993 ] <author> N. Dershowitz and S. Mitra. </author> <title> Higher-order and semantic unification. </title> <booktitle> In Proceedings of the Thirteenth International Conference on Foundations of Software Technology and Theoretical Computer Science, Bombay, India, 1993. </booktitle> <volume> Volume 761, </volume> <pages> pages 139-150, </pages> <booktitle> of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Although linearity and flat right-hand sides do not suffice, matching becomes decidable with the additional restriction that for each defined function there is at most one rule with a non-constructor right-hand side, and that side must be flat and have only one occurrence of defined functions <ref> [Dershowitz and Mitra, 1993] </ref>. Theorem 1. There is no decision procedure for the matching problem in a (left- and right-) linear convergent rewrite system, in which every right-hand side is flat. Proof. We reduce semantic matching in such theories to the undecidable Post Correspondence Problem (PCP). <p> Unfortunately, none of these systems are powerful enough to capture truly recursive functions. Decidability results for unification in convergent systems was extended in <ref> [Dershowitz and Mitra, 1993] </ref>, where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of [Comon, 1992]. The important difference between the requirements of [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms with defined functions <p> Decidability results for unification in convergent systems was extended in <ref> [Dershowitz and Mitra, 1993] </ref>, where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of [Comon, 1992]. The important difference between the requirements of [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms with defined functions as right-hand sides for rules defining a given function. <p> For instance, the definition of eq, in Example 1, used two rules, each of which has eq (a defined function) on its right-hand side, which would not be allowed by <ref> [Dershowitz and Mitra, 1993] </ref>.
Reference: [ Heilbrunner and Holldobler, 1987 ] <author> S. Heilbrunner and S. Holldobler. </author> <title> The undecidability of the unification and matching problem for canonical theories. </title> <journal> Acta Informatica, </journal> <volume> 24(2) </volume> <pages> 157-171, </pages> <month> April </month> <year> 1987. </year> <month> 9 </month>
Reference-contexts: It is well-known that any strategy for finding a complete set of matchings with respect to a given theory may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules; see, for example, <ref> [Heilbrunner and Holldobler, 1987; Bockmayr, 1987] </ref>. On the other hand, for some special classes of theories|associativity, for instance|semantic matching is decidable. In this paper, we are interested in matching in theories that have a convergent presentation. <p> Such restrictions have been used extensively in the study of properties such as modular termination and confluence of rewrite systems. It is known that matching is undecidable even in convergent theories presented as (left- and right-) linear rewrite systems <ref> [Heilbrunner and Holldobler, 1987] </ref>. On the other hand, matching is decidable if the system is left-flat [Christian, 1992]. However, rewrite systems with flat left-hand sides are truly restrictive, and do not allow any recursively defined functions. We show below that matching is undecidable in the right-flat linear case.
Reference: [ Hullot, 1980 ] <author> J.-M. Hullot. </author> <title> Canonical forms and unification. </title> <editor> In R. Kowalski, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Automated Deduction, </booktitle> <pages> pages 318-334, </pages> <address> Les Arcs, France, </address> <month> July </month> <year> 1980. </year> <title> Vol. </title> <booktitle> 87 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Other characterizations of decidable unification appear in [Kapur and Narendran, 1987] (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and <ref> [Hullot, 1980] </ref> (every right-hand 6 side must be a variable or a ground term). Unfortunately, none of these systems are powerful enough to capture truly recursive functions.
Reference: [ Jouannaud and Kirchner, 1991 ] <author> J.-P. Jouannaud and C. Kirchner. </author> <title> Solving equations in abstract algebras: A rule-based survey of unification. </title> <editor> In J.-L. Lassez and G. Plotkin, editors, </editor> <booktitle> Computational Logic: Essays in Honor of Alan Robinson. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: In other words, there exists a procedure that can find a unifier (match) whenever one exists. See <ref> [Jouannaud and Kirchner, 1991] </ref> for a survey of unification. If we restrict ourselves to convergent rewrite systems that are, additionally, either non-erasing or left-linear, then the non-deterministic transformation rules of Table 1 constitute a complete set for the matching problem: Theorem 2 (Completeness).
Reference: [ Kapur and Narendran, 1987 ] <author> D. Kapur and P. Narendran. </author> <title> Matching, unification and complexity (a preliminary note). </title> <journal> SIGSAM Bulletin, </journal> <volume> 21(4) </volume> <pages> 6-9, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: Other characterizations of decidable unification appear in <ref> [Kapur and Narendran, 1987] </ref> (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and [Hullot, 1980] (every right-hand 6 side must be a variable or a ground term). Unfortunately, none of these systems are powerful enough to capture truly recursive functions.
Reference: [ Mitra, 1994 ] <author> S. Mitra. </author> <title> Semantic Unification for Convergent Systems. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Illinois, Urbana, IL, </institution> <year> 1994. </year> <note> Appears as Dept. </note> <institution> of Computer Science Technical Report Number UIUCDCS-R-94-1855, </institution> <month> October, </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: Proof. In full version. For non-erasing systems, Bind can be further simplified, as shown in <ref> [Mitra, 1994] </ref>. 3 Eliminate fx ! ? tg ; where x is a free-variable that does not occur in t Bind fx ! ? s; x 7! tg ; if x does not occur in s Mutate ff (s 1 ; : : : ; s n ) ! ? tg <p> For instance, the definition of eq, in Example 1, used two rules, each of which has eq (a defined function) on its right-hand side, which would not be allowed by [Dershowitz and Mitra, 1993]. Appendix The proof of completeness of the rules for matching (in the full version; see <ref> [Mitra, 1994] </ref>) uses a particular selection strategy for picking which subgoals to solve: after mutation, we always solve the r ! ? t subgoal first, before solving the s i ! ? l i in any order; after decomposition we could solve the new subgoals in any order.
References-found: 13

