URL: http://www.cs.wustl.edu/cs/techreports/1997/wucs-97-37.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: Symmetrical Routes and Reverse Path Congestion Control  
Author: Rajib Ghosh George Varghese wucs-- 
Keyword: Internet, Autonomous System, Route Asymmetry, Congestion Control, TCP, Bellman-Ford Algorithm, Distance-Vector, Link-State, RIP.  
Note: This work was supported by National Science Foundation under grant NCR-9628145 and the ONR Young Inves tigator Award.  
Address: Campus Box 1045  One Brookings Drive St. Louis, MO 63130-4899  
Affiliation: Department of Computer Science  Washington University  
Date: September 11, 1997  
Abstract: We describe new mechanisms to deal with asymmetries that arise in routing protocols. We show how to avoid route asymmetries (due to non-unique shortest paths) by adding random integer link costs. We show in detail how RIP can be modified to avoid route asymmetry with high probability, without affecting either its efficiency or performance metrics such as convergence time. Symmetrical intra-domain routing also makes possible a new form of congestion control that we call Reverse Path Congestion Control (RPCC). We show, using simulations, that RPCC can augment existing TCP congestion control mechanisms to improve start up behavior and to avoid losses at the boundary between domains and the backbone. 
Abstract-found: 1
Intro-found: 1
Reference: [Bel86] <institution> E.T. Bell. Men of Mathematics. Simon and Schuster, </institution> <address> Touchstone Edition, </address> <year> 1986. </year>
Reference-contexts: Symmetry is a great simplifying device in mathematics and physics because it reduces the number of cases to be considered. In some cases, a lack of symmetry came as a surprise, as in the case of Hamilton's discovery of a non-commutative algebra <ref> [Bel86] </ref>, and Lee and Yang's discovery [Fer91] that parity is not always conserved. In a similar fashion, symmetry in routes and link costs is generally assumed to hold.
Reference: [Fer91] <author> Timothy Ferris. </author> <title> The World Treasury of Physics, Astronomy and Mathematics. </title> <publisher> Little Brown, </publisher> <year> 1991. </year>
Reference-contexts: Symmetry is a great simplifying device in mathematics and physics because it reduces the number of cases to be considered. In some cases, a lack of symmetry came as a surprise, as in the case of Hamilton's discovery of a non-commutative algebra [Bel86], and Lee and Yang's discovery <ref> [Fer91] </ref> that parity is not always conserved. In a similar fashion, symmetry in routes and link costs is generally assumed to hold. However, Paxson's classic study of Internet routing [Pax96a, Pax96b] reveals that approximately half of the measured routes include asymmetric paths that visit at least one different city. <p> A more precise quantification of the benefits of symmetry is left to future work. We end, somewhat tongue in cheek, with the following quote from the physicist Abdus Salaam <ref> [Fer91] </ref>: 15 A broken symmetry breaks your heart . . .
Reference: [FGM + 97] <author> R. Fielding, J. Gettys, J. Mogul, H. Frystyk, and T. Berners-Lee. </author> <title> Hypertext Transfer Protocol - HTTP/1.1. RFC 2068, </title> <month> January </month> <year> 1997. </year>
Reference-contexts: Adaptive averaging and RPCC keep the queue length quite small, and hence the queue at the router is able to accommodate bursty sources. The ftp source obtains high throughput as desirable. Thus, bursty sources like HTTP <ref> [FGM + 97] </ref> can also benefit from RPCC. Telnet sources observe low queuing delays too. 4.4. Summary From the above experiments and simulations, we see that RPCC improves the start up behavior of TCP. The sender's TCP congestion window oscillates less, and hence avoids congestion build up and packet loss.
Reference: [FJ96] <author> S. Floyd and V. Jacobson. </author> <title> Random Early Detection gateways for Congestion Avoidance. </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> volume 1, number 4, </volume> <pages> pages 397-413, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: S1, S2, D1 and D2 are end-nodes connected to the WAN through high bandwidth LANs (100 Mbps, 1 ms latency). Using ns we simulated an FTP (over TCP-Reno) from S1 to D1. The output queue length at R1 was set to 5. gateway scheme <ref> [FJ96] </ref>. The plot in Figure 8 (a) depicts the sequence numbers sent out by the sender TCP with time. Note the startup behavior of TCP-Reno at 0.2 sec. The exponential growth of the congestion window (Figure 8 (b)) results in packet losses and hence timeout (from 0.25 to 0.85 sec).
Reference: [Hed88] <author> C. Hedrick. </author> <title> Routing Information Protocol. </title> <type> STD 34, RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: Internet today consists of domains inter-connected by ISPs (Internet Service Providers). These ISPs are commercial organizations which charge for the service they provide. This structure of the Internet leads to two important classes of protocols: intra-domain, those that are used within a domain, e.g. RIP <ref> [Hed88] </ref>, and inter-domain, like BGP [RL95] which are used only within backbone routers. While the lack of a unique shortest path is probably an important source of route asymmetry within domains, the principal source of asymmetries in backbone routers is policy routing. <p> The actual and random costs are added and stored separately, and only the actual cost is compared to infinity when checking for convergence. We show in Section 3 later how to modify the Routing Information Protocol (RIP) <ref> [Hed88] </ref> to incorporate random costs. The simplest way is to split the original 32 bit cost metric into a 16 bit actual cost and a 16 bit random cost, and to redefine hopcount infinity from its current value of 16 to 16 fl 2 16 . <p> Thus, we believe that 10 bit random numbers should suffice for most topologies. The above link cost modification can be used to make any shortest path routing algorithm (like OSPF [Moy97]) symmetric. In the next section we describe in detail how we can modify a popular intra-domain protocol RIP <ref> [Hed88] </ref>. 3. Modifications to Routing Information Protocol Routing Information Protocol or RIP is a Bellman-Ford (or Distance-Vector) algorithm based protocol used for routing computation in the Internet. RIP is an interior gateway protocol that is, RIP is used within domains or Autonomous Systems. <p> Thus we can have a maximum of 2 6 ie. 64 links. This seems fair enough since the value of hopcount infinity allows only 16 hops. As far as protocol behavior is concerned there is no change from RFCs <ref> [Hed88] </ref> & [Mal94], except that hopcount infinity is redefined as 16 fl 2 16 . The 32-bit cost is added and compared just as before. Confining the random cost to the low 16 bits breaks ties in case the actual costs are the same. <p> Further, the protocol should ensure that the random cost does not overflow onto the actual cost metric. In practice such an event will not occur because before the random cost of a route reaches 16 bits, its actual cost will have reached infinity. According to RFC <ref> [Hed88] </ref>, such routes are not propagated. A simple way to ensure interoperability and backward compatibility is to break the original domain into two domains connected by (say) a BGP router.
Reference: [Hoe96] <author> Janey C. Hoe. </author> <title> Improving the Start-up Behavior of a Congestion Control Scheme for TCP. </title> <booktitle> In Proceedings of the ACM SIGCOMM '96 Symposium, </booktitle> <volume> volume 26, number 4, </volume> <pages> pages 270-280, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The remainder of the TCP congestion control mechanism was left unchanged. We observed a remarkable increase in the throughput obtained by the sender TCP, especially during the start-up phase (similar to the results in <ref> [Hoe96] </ref>). There were almost no packet drops. RPCC also provides fairness to new sources that start after an existing source has been transmitting at its full capacity. R1 to R2 represents a typical low bandwidth WAN with a throughput of 1 Mbps and a latency of 10 ms. <p> This is explained by the congestion window graph (Figure 8 (b)). The sender's window oscillates less and hence avoids the build up of congestion and packet loss. The startup behavior of TCP has been previously discussed in <ref> [Hoe96] </ref>. We also simulated the mechanisms in [Hoe96] somewhat crudely and found that they did nearly as well as RPCC for a single sender. However, for multiple concurrent senders our RPCC scheme did much better. <p> This is explained by the congestion window graph (Figure 8 (b)). The sender's window oscillates less and hence avoids the build up of congestion and packet loss. The startup behavior of TCP has been previously discussed in <ref> [Hoe96] </ref>. We also simulated the mechanisms in [Hoe96] somewhat crudely and found that they did nearly as well as RPCC for a single sender. However, for multiple concurrent senders our RPCC scheme did much better.
Reference: [Jac88] <author> Van Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of the ACM SIG-COMM '88 Symposium on Communications Architectures and Protocols, </booktitle> <volume> volume 18, number 4, </volume> <pages> pages 314-329, </pages> <month> August </month> <year> 1988. </year> <journal> part of ACM Sigcomm Computer Communication Review. </journal>
Reference-contexts: In the next section, we describe a new congestion control scheme, Reverse Path Congestion Control (Figure 6), which depends completely on symmetrical routes, (at least symmetrical intra-domain routing, see Section 3). RPCC is a congestion avoidance <ref> [Jac88] </ref> scheme in which a router R, when it senses congestion building up on an outgoing link, sends feedback to all senders who are transmitting on that outgoing link by setting a bit (congestion bit) on packets/acknowledgments arriving through that congested link.
Reference: [Kes91] <author> S. Keshav. </author> <title> A Control-Theoritic Approach to Flow Control. </title> <booktitle> In Proceedings of the SIG-COMM '91 Symposium, </booktitle> <pages> pages 3-15, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: In such a case the two hosts can keep consistent time internally but not between each other. A second example cited in [Pax96a] is protocols by which connection end-points infer network conditions from the pattern of packet arrivals they observe (e.g., by timing the arrival of acknowledgments <ref> [Kes91] </ref>). If routing is symmetric the bandwidth observed in the arrival of acks is the same as the bandwidth of the outgoing link. This could allow servers to determine the link bandwidth available for replying to client requests.
Reference: [Mal94] <author> G. Malkin. </author> <note> RIP Version 2 Carrying Additional Information. Xylogics Inc., RFC 1723, </note> <month> November </month> <year> 1994. </year>
Reference-contexts: Thus we can have a maximum of 2 6 ie. 64 links. This seems fair enough since the value of hopcount infinity allows only 16 hops. As far as protocol behavior is concerned there is no change from RFCs [Hed88] & <ref> [Mal94] </ref>, except that hopcount infinity is redefined as 16 fl 2 16 . The 32-bit cost is added and compared just as before. Confining the random cost to the low 16 bits breaks ties in case the actual costs are the same.
Reference: [Mil85] <author> D.L. Mills. </author> <title> Network Time Protocol (NTP). </title> <type> RFC 958, </type> <month> September </month> <year> 1985. </year>
Reference-contexts: While route asymmetry is not as pernicious as some of the other pathologies described in [Pax96a] (e.g., routing loops, route fluttering), it does affect several protocols. For example, the Network Time Protocol, NTP <ref> [Mil85] </ref>, approximates the one-way propagation time as half of the round-trip time between two hosts when synchronizing clocks between widely separated hosts. If the routes are asymmetric, this assumption breaks down. In such a case the two hosts can keep consistent time internally but not between each other. <p> Most congestion, thus, occurs at the boundary between the domain and the backbone. Intra-domain route symmetry and RPCC can thus enhance the throughput of most applications. Further, protocols like NTP <ref> [Mil85] </ref> will also benefit when used within a domain. One way to ensure route symmetry is to use a symmetrical tiebreaker (when choosing among multiple shortest path routes) that remains the same when the roles of source and destination are reversed.
Reference: [Moy97] <author> J. Moy. </author> <note> OSPF version 2. RFC 2178, </note> <month> July </month> <year> 1997. </year>
Reference-contexts: Thus, we believe that 10 bit random numbers should suffice for most topologies. The above link cost modification can be used to make any shortest path routing algorithm (like OSPF <ref> [Moy97] </ref>) symmetric. In the next section we describe in detail how we can modify a popular intra-domain protocol RIP [Hed88]. 3. Modifications to Routing Information Protocol Routing Information Protocol or RIP is a Bellman-Ford (or Distance-Vector) algorithm based protocol used for routing computation in the Internet.
Reference: [MR95] <author> R. Motwani and P. Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year> <institution> [nLNS96] ns LBNL Network Simulator. LBNL Network Research Group. </institution> <note> http://www-nrg.ee.lbl.gov/ns, 1996. </note>
Reference-contexts: Our key insight, which allows us to bound the required probability, is to use a powerful Isolating Lemma due to Mulmuley, Vazirani, and Vazirani <ref> [MR95] </ref>. Originally, the Isolating Lemma was invented to calculate the probability that a graph would contain a unique perfect matching given a random assignment of node weights. <p> The Isolating Lemma states that the probability that there is a unique minimum weight subset in F is at least 1=2. This lemma is surprising and powerful because it works regardless of the way we choose the subsets F of X! A proof can be found in <ref> [MR95] </ref>. To use the Isolating Lemma, we let X be the set of all links. Thus m is the number of links in the graph. We take F to be the the set of all shortest paths between a certain pair of nodes.
Reference: [Pax96a] <author> Vern Paxson. </author> <title> An Analysis of End-to-End Internet Dynamics. (Partial Draft) ftp://ftp.ee.lbl.gov/.vp-routing.long.ps.Z, </title> <year> 1996. </year>
Reference-contexts: In a similar fashion, symmetry in routes and link costs is generally assumed to hold. However, Paxson's classic study of Internet routing <ref> [Pax96a, Pax96b] </ref> reveals that approximately half of the measured routes include asymmetric paths that visit at least one different city. Thus, a study of routing asymmetries appears to be timely. The two most natural symmetry assumptions in routing are symmetrical link costs and symmetrical routes. <p> Even if link costs were symmetrical, most routing protocols make no effort to compute symmetrical routes: if there are multiple shortest path routes, arbitrary tiebreakers can lead to asymmetrical routes. In some cases, routing protocols deliberately compute asymmetrical routes because of policy constraints <ref> [Pax96a] </ref>. Most standard routing protocols (i.e., Distance-Vector, Link-State) deal well with asymmetrical link costs for computing routes between a single source and a single destination. However many Multicast routing algorithms tacitly assume link asymmetry. A lack of link symmetry can lead to the calculation of suboptimal multicast trees. <p> Finally, we propose a technique for creating unique shortest paths by modifying route computation algorithms. 1 This idea was invented by Steve Deering and Christian Huitema 2 2.1. Importance of Routing Symmetry Our discussion of the importance of route symmetry is entirely borrowed from Paxson's Ph.D. thesis <ref> [Pax96a] </ref>. While route asymmetry is not as pernicious as some of the other pathologies described in [Pax96a] (e.g., routing loops, route fluttering), it does affect several protocols. <p> Importance of Routing Symmetry Our discussion of the importance of route symmetry is entirely borrowed from Paxson's Ph.D. thesis <ref> [Pax96a] </ref>. While route asymmetry is not as pernicious as some of the other pathologies described in [Pax96a] (e.g., routing loops, route fluttering), it does affect several protocols. For example, the Network Time Protocol, NTP [Mil85], approximates the one-way propagation time as half of the round-trip time between two hosts when synchronizing clocks between widely separated hosts. If the routes are asymmetric, this assumption breaks down. <p> If the routes are asymmetric, this assumption breaks down. In such a case the two hosts can keep consistent time internally but not between each other. A second example cited in <ref> [Pax96a] </ref> is protocols by which connection end-points infer network conditions from the pattern of packet arrivals they observe (e.g., by timing the arrival of acknowledgments [Kes91]). If routing is symmetric the bandwidth observed in the arrival of acks is the same as the bandwidth of the outgoing link. <p> RIP [Hed88], and inter-domain, like BGP [RL95] which are used only within backbone routers. While the lack of a unique shortest path is probably an important source of route asymmetry within domains, the principal source of asymmetries in backbone routers is policy routing. One such example, well described in <ref> [Pax96a] </ref>, is Hot Potato and Cold Potato routing. This is of growing importance with the growth of several private Internet Service Providers (ISPs). <p> Our simulation results, presented below, show much better results. 2.5. Simulation Results We simulated Bellman-Ford route computation, as used by the RIP protocol, over a few sample Internet topologies. We used a subset of the topology of Internet sites used for routing measurement in <ref> [Pax96a, Pax96b] </ref>. This sample topology (Figure 2) consisted of 23 nodes, 13 from North America, 7 from Europe, 2 from Australia, and 1 from Asia. The random integer costs were chosen from a space of 1 through the number of nodes.
Reference: [Pax96b] <author> Vern Paxson. </author> <title> End-to-End Routing Behavior in the Internet. </title> <booktitle> In Proceedings of the ACM SIGCOMM '96 Symposium, </booktitle> <volume> volume 26, number 4, </volume> <pages> pages 25-38, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In a similar fashion, symmetry in routes and link costs is generally assumed to hold. However, Paxson's classic study of Internet routing <ref> [Pax96a, Pax96b] </ref> reveals that approximately half of the measured routes include asymmetric paths that visit at least one different city. Thus, a study of routing asymmetries appears to be timely. The two most natural symmetry assumptions in routing are symmetrical link costs and symmetrical routes. <p> Our simulation results, presented below, show much better results. 2.5. Simulation Results We simulated Bellman-Ford route computation, as used by the RIP protocol, over a few sample Internet topologies. We used a subset of the topology of Internet sites used for routing measurement in <ref> [Pax96a, Pax96b] </ref>. This sample topology (Figure 2) consisted of 23 nodes, 13 from North America, 7 from Europe, 2 from Australia, and 1 from Asia. The random integer costs were chosen from a space of 1 through the number of nodes.
Reference: [Per92] <author> R. Perlman. </author> <title> Interconnections: Bridges and Routers. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: Thus route symmetry is essential for RPCC. 2.2. Sources of Routing Asymmetry The two most important causes of routing asymmetry are the absence of non-unique shortest paths and Policy Routing. Routers use Bellman-Ford or Link State routing <ref> [Per92] </ref> algorithms to calculate their routing tables. When multiple routes have the same cost, each router picks a route using an arbitrary tiebreaker. This leads to asymmetry in routes between two nodes A and B if the router closest to A and the router closest to B pick different routes.
Reference: [RJ88] <author> K. K. Ramakrishnan and Raj Jain. </author> <title> A Binary Feedback Scheme for Congestion Avoidance in Computer Networks with a Connectionless Network Layer. </title> <booktitle> In Proceedings of the ACM SIGCOMM '88 Symposium, </booktitle> <pages> pages 303-313, </pages> <month> August </month> <year> 1988. </year> <note> Also available as DEC-TR-508, </note> <institution> Digital Equipment Corporation. </institution> <month> 16 </month>
Reference-contexts: In Section 4, we assume symmetrical intra-domain routing and consider possible improvements to congestion control mechanisms based on this assumption. We propose Reverse Path Congestion Control (RPCC), a new bit-based scheme for passing congestion information from the network to source transport protocols. Unlike the classic DECbit <ref> [RJ88] </ref> scheme, RPCC does not require an end-to-end path of routers that can pass a congestion bit. Instead, congestion bits are passed directly from the congested router on reverse traffic flowing to the source. <p> We call our new scheme Reverse Path Congestion Control (RPCC). Since we have already seen that symmetrical inter-domain routing is infeasible, we will only assume that intra-domain routing is symmetrical. RPCC is similar to the DECbit <ref> [RJ88] </ref> scheme except in the way the congestion bit is passed. In the DECbit scheme, a congestion bit is passed at the routing layer from the point of congestion to the destination, and then back to the source via the transport header. <p> Suppose a host A sends a packet to host B through a router R1 (Figure 6). If R1 senses congestion building up on its outgoing link to B, then according to the DECbit <ref> [RJ88] </ref> scheme R1 can send feedback to A by setting a congestion bit in the packet to B. However this feedback takes one round-trip delay. <p> Thus all senders get to know of the impending congestion, and can reduce their transmission rates. 10 4.2. RPCC vs DECbit Noticing the obvious similarities between RPCC and the DECbit scheme <ref> [RJ88] </ref>, a reader might infer that RPCC is a straightforward enhancement of the DECbit scheme that works only in case of symmetrical routes. However, there are a few distinct differences between the two. <p> Thus, RPCC can be used even within a domain. As stated before, most congestion occurs at the boundary between the domain and the backbone. 4.3. RPCC: Algorithm and Simulations bandwidth ones. We use the Adaptive Averaging technique used in the DECbit <ref> [RJ88] </ref> scheme to calculate the average queue length of a link. The feedback threshold value is selected as 1.0. We tested our RPCC scheme using the ns simulator [nLNS96], running a TCP-Reno [Ste94, WS94] implementation. We made one change to the sender TCP-Reno.
Reference: [RL95] <author> Y. Rekhter and T. Li. </author> <title> A Border Gateway Protocol 4 (BGP-4). </title> <type> RFC 1771, </type> <month> March </month> <year> 1995. </year>
Reference-contexts: These ISPs are commercial organizations which charge for the service they provide. This structure of the Internet leads to two important classes of protocols: intra-domain, those that are used within a domain, e.g. RIP [Hed88], and inter-domain, like BGP <ref> [RL95] </ref> which are used only within backbone routers. While the lack of a unique shortest path is probably an important source of route asymmetry within domains, the principal source of asymmetries in backbone routers is policy routing.
Reference: [Ste94] <author> W. Richard Stevens. </author> <title> TCP/IP Illustrated, Volume 1, The Protocols. </title> <publisher> Addison-Wesley Professional Computing Series, </publisher> <year> 1994. </year>
Reference-contexts: RPCC: Algorithm and Simulations bandwidth ones. We use the Adaptive Averaging technique used in the DECbit [RJ88] scheme to calculate the average queue length of a link. The feedback threshold value is selected as 1.0. We tested our RPCC scheme using the ns simulator [nLNS96], running a TCP-Reno <ref> [Ste94, WS94] </ref> implementation. We made one change to the sender TCP-Reno. On receipt of a packet or ack with the congestion bit set, the congestion window cwnd is reduced by 1/8th of its current value and the slow start threshold ssthresh is set to one-half of the current cwnd.
Reference: [WS94] <author> Gary R. Wright and W. Richard Stevens. </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 2, The Implementation. Addison-Wesley Professional Computing Series, </booktitle> <year> 1994. </year> <month> 17 </month>
Reference-contexts: RPCC: Algorithm and Simulations bandwidth ones. We use the Adaptive Averaging technique used in the DECbit [RJ88] scheme to calculate the average queue length of a link. The feedback threshold value is selected as 1.0. We tested our RPCC scheme using the ns simulator [nLNS96], running a TCP-Reno <ref> [Ste94, WS94] </ref> implementation. We made one change to the sender TCP-Reno. On receipt of a packet or ack with the congestion bit set, the congestion window cwnd is reduced by 1/8th of its current value and the slow start threshold ssthresh is set to one-half of the current cwnd.
References-found: 19

