URL: ftp://ftp.cs.ucsd.edu/pub/berman/nec.ps
Refering-URL: http://www.cs.ucsd.edu/groups/hpcl/apples/hetpubs.html
Root-URL: http://www.cs.ucsd.edu
Author: Francine Berman Richard Wolski 
Keyword: Metacomputing, network monitoring, application scheduling, heterogeneous computing.  
Address: San Diego  
Affiliation: Department of Computer Science and Engineering University of California,  
Abstract: The AppLeS Project: A Status Report fl Abstract Fast networks have made it possible to aggregate distributed CPU, memory, storage, and data to provide the potential for application performance superior to that attainable on any single system. However, achieving such performance on these meta-computing systems has proved to be difficult. Experience with the I-WAY [DFP + ss] and other metacomputing platforms demonstrates that effective application scheduling is critical to the achievement of performance for metacomputing applications. Currently, application developers develop customized application schedules to achieve performance on a metacomputer. Such application-centric schedules promote the performance of the application by evaluating system performance in terms of application resource requirements. To formalize and generalize the, as yet, ad hoc notion of application-centric scheduling emerging from the practices of metacomputing application developers [EMRP, SAR, GWP93], we are developing metacomputing scheduling agents called AppLeS. Each application has its own AppLeS whose function is to determine and implement an adaptive application-specific schedule in a dynamic multi-user metacomputing environment. In this report, we describe the current status of the AppLeS project as of Summer, 1997.
Abstract-found: 1
Intro-found: 1
Reference: [BBC + 93] <author> Larry Bergman, Hans-Werner Braun, Bill Chinoy, Adam Kolawa, Aron Kupper-mann, Peter Lyster, C. Roberto Mechoso, Paul Messina, John Morrison, Dan Stanfill, Wall St.John, and Steve Tenbrick. </author> <title> Casa gigabit testbed : 1993 annual report; a testbed for distributed computing. </title> <type> Technical Report CCSF-33, </type> <institution> Caltech Concurrent Supercomputing Facilities, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Experience shows that a metacomputing implementation of resource-intensive applications at the problem sizes of interest to their developers can expose new phenomena and can give rise to new scientific results <ref> [DFP + ss, WK93, MFS94, BBC + 93] </ref>. However, achieving performance on metacomputing systems can be difficult. To efficiently utilize distributed heterogeneous platforms, an application must be scheduled so that it optimizes its use of system resources.
Reference: [BM96] <author> S. Basu and A. Mukherjee. </author> <title> Time series models for internet traffic. </title> <type> Technical Report GIT-CC-95-27, </type> <institution> Georgia Institure of Technology, </institution> <year> 1996. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring [MRW92, HMC94, CL94] and load forecasting <ref> [Lea94, BM96, CB96] </ref> both pose open research questions, we have separated the sensory and forecasting functions of the NWS. The resulting modular design is intended to provide a general facility in which a variety of different monitoring and forecasting techniques can be employed. a collection of forecasting models.
Reference: [Bre95] <author> Eric A. Brewer. </author> <title> High-level oprimization via automated statistical modeling. </title> <booktitle> In Proceedings of Principles and Practice of Parallel Programming, PPoPP'95, </booktitle> <pages> pages 80-91, </pages> <year> 1995. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [BSK95] <author> A. Hurson B. Shirazi and K. Kavi. </author> <title> Scheduling and Load Balancing in Parallel and Distributed Systems. </title> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: However, achieving performance on metacomputing systems can be difficult. To efficiently utilize distributed heterogeneous platforms, an application must be scheduled so that it optimizes its use of system resources. Scheduling parallel applications on homogeneous multicomputers is itself a difficult problem <ref> [BSK95] </ref>, but scheduling parallel applications on distributed heterogeneous resources brings added complications.
Reference: [BW96] <author> F. Berman and R. Wolski. </author> <title> Scheduling from the perspective of the application. </title> <booktitle> In Proceedings of High-Performance Distributed Computing Conference, </booktitle> <year> 1996. </year>
Reference-contexts: Although the dynamics of each metacomputing application development effort are different, the scheduling strategies they employ are based on an application-level scheduling approach, either implicitly or explicitly <ref> [BW96] </ref>. The paradigm itself, therefore, serves as a basis for a generalizable structure for metacomputing application scheduling. If the application developer's scheduling process can be characterized and enhanced by additional and/or more precise information, it is possible to develop agents which can determine efficient meta-computing application schedules.
Reference: [BWF + 96] <author> F. Berman, R. Wolski, S. Figueira, J. Schopf, and G Shao. </author> <title> Application level scheduling on distributed heterogeneous networks. </title> <booktitle> In Proceedings of Supercomputing 1996, </booktitle> <year> 1996. </year> <month> 16 </month>
Reference-contexts: We describe the "state-of-the-art" of the AppLeS project and its major constituent sub-projects in the following subsections. 4.1 AppLeS Prototypes As a proof-of-concept, we are developing a number of AppLeS agents and tools representing common metacomputing application classes. In <ref> [BWF + 96] </ref>, we reported performance results on a two-dimensional Jacobi AppLeS prototype. This AppLeS was deployed in a production environment consisting of a heterogeneous set of workstations from the UCSD Parallel Computation Laboratory and the San Diego Supercomputer Center. <p> We are currently investigating the structural similarities of these AppLeS with the goal of applying our experience to the development of a load-balancing AppLeS tool. * Static Multigrid The development of a Static Multigrid AppLeS evolves our work with the Jacobi AppLeS <ref> [BWF + 96] </ref>. The multigrid code, based on an implementation by S.J. Fink, will enable us to investigate adaptive mesh codes and to evolve the strategy used in developing the Jacobi AppLeS. We have just begun work on the Static Multigrid AppLeS.
Reference: [CB96] <author> M. Crovella and A. Bestavros. </author> <title> Self-similarity in world wide web traffic: Evidence and possible causes. </title> <booktitle> In Proceedings of the 1996 ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems, </booktitle> <year> 1996. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring [MRW92, HMC94, CL94] and load forecasting <ref> [Lea94, BM96, CB96] </ref> both pose open research questions, we have separated the sensory and forecasting functions of the NWS. The resulting modular design is intended to provide a general facility in which a variety of different monitoring and forecasting techniques can be employed. a collection of forecasting models.
Reference: [CD95] <author> Henry Casanova and Jack Dongarra. Netsolve: </author> <title> A network server for solving computational science problems. </title> <type> Technical Report cs-95-313, </type> <institution> University of Ten-nessee, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters. <p> Ultimately, we would like to evolve this work to provide a framework for the development of an Adaptive Mesh AppLeS. In addition, we are collaborating with Dongarra and Casanova to build an AppLeS for NetSolve <ref> [CD95] </ref> applications.
Reference: [CL94] <author> M. Crovella and T. LeBlanc. </author> <title> Parallel performance prediction using lost-cycles analysis. </title> <booktitle> In Proceedings of Supercomputing 1994, </booktitle> <year> 1994. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring <ref> [MRW92, HMC94, CL94] </ref> and load forecasting [Lea94, BM96, CB96] both pose open research questions, we have separated the sensory and forecasting functions of the NWS.
Reference: [Col89] <author> M. Cole. </author> <title> Algorithmic Skeletons: Structured Management of Parallel Computation. </title> <publisher> Pitman/MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: For example, the Planner may use a structural model estimation of execution time to determine a "best" schedule with respect to a given set of resources. Structural models [Sch97] use a skeleton-based <ref> [Col89, DFH + 93] </ref> approach for representing application components which contribute to performance. Consider a simple structural model which predicts the execution time for a master/slave computation.
Reference: [DFH + 93] <author> J. Darlington, A. Field, P. Harrison, P. Kelly, D. Sharp, Q. Wu, and R. White. </author> <title> Parallel programming using skeleton functions. </title> <booktitle> Proceedings of the PARLE Conference, </booktitle> <year> 1993. </year>
Reference-contexts: For example, the Planner may use a structural model estimation of execution time to determine a "best" schedule with respect to a given set of resources. Structural models [Sch97] use a skeleton-based <ref> [Col89, DFH + 93] </ref> approach for representing application components which contribute to performance. Consider a simple structural model which predicts the execution time for a master/slave computation.
Reference: [DFP + ss] <author> T. DeFanti, I. Foster, M. Papka, R. Stevens, and T. Kuhfuss. </author> <title> Overview of the i-way: Wide area visual supercomputing. </title> <journal> International Journal of Supercomputer Applications, </journal> <note> In Press. </note>
Reference-contexts: Experience shows that a metacomputing implementation of resource-intensive applications at the problem sizes of interest to their developers can expose new phenomena and can give rise to new scientific results <ref> [DFP + ss, WK93, MFS94, BBC + 93] </ref>. However, achieving performance on metacomputing systems can be difficult. To efficiently utilize distributed heterogeneous platforms, an application must be scheduled so that it optimizes its use of system resources.
Reference: [DOC] <author> DOCT. </author> <title> Distributed object computation testbed. </title> <address> http://www.sdsc.edu/doct/. </address>
Reference-contexts: The schedule that best optimizes the user's objective is chosen for implementation by the Actuator. Currently, we are working with researchers from the Legion project [Leg], the Globus project [Glo], the Distributed Object Computation Testbed (DOCT) <ref> [DOC] </ref>, and the testbed to be developed for NPACI (the National Partnership for Advanced Computational Infrastructure) [NPA] to prototype AppLeS applications on these resource management systems. 3.3 Related Work The AppLeS approach is application-centric.
Reference: [EMRP] <author> L. Ten Eyk, J. Mandell, V. Roberts, and M. Pique. </author> <title> Surveying molecular interactions with dot. </title> <booktitle> Proceedings of the 1995 Supercomputing Conference. </booktitle>
Reference-contexts: This application-centric approach to scheduling promotes the performance of the individual application over the collective performance of the resources in the metacomputing environment. To formalize and generalize the, as yet, ad hoc notion of application-centric scheduling emerging from the practices of metacomputing application developers <ref> [EMRP, SAR, GWP93] </ref>, we are developing an agent-based methodology for application-level scheduling called AppLeS (Application Level Scheduler). AppLeS agents are based on the application-level scheduling paradigm everything about the system is evaluated in terms of its impact on the application. <p> We are currently developing a number of AppLeS prototypes representative of such classes as a first step. Current AppLeS prototypes under development include * DOT DOT is a molecular interaction program which computes the electrostatic potential energy between two proteins or other charged particles <ref> [EMRP] </ref>. DOT exhaustively tests all six degrees of freedom (rotational and transitional) to produce a grid of approximate interaction energies and orientations. The program is used as a rapid screen to find configurations for more detailed study using exact energy models by Dr. Vickie Roberts at Scripps Research Institute, Dr.
Reference: [Glo] <author> Globus. </author> <note> http://www.mcs.anl.gov/globus. </note>
Reference-contexts: Each application will have its own AppLeS whose function it is to select resources, determine a performance-efficient schedule, 4 and implement that schedule with respect to the resource management infrastructure of the metacomputing system. AppLeS agents are not resource management systems; they rely on systems such as Globus <ref> [Glo] </ref>, Legion [Leg], and others to perform that function. <p> The Coordinator then uses the Performance Estimator to evaluate each schedule in terms of the user's performance objective. The schedule that best optimizes the user's objective is chosen for implementation by the Actuator. Currently, we are working with researchers from the Legion project [Leg], the Globus project <ref> [Glo] </ref>, the Distributed Object Computation Testbed (DOCT) [DOC], and the testbed to be developed for NPACI (the National Partnership for Advanced Computational Infrastructure) [NPA] to prototype AppLeS applications on these resource management systems. 3.3 Related Work The AppLeS approach is application-centric.
Reference: [GR96] <author> Jorn Gehrinf and Alexander Reinfeld. </author> <title> Mars a framework for minimizing the job execution time in a metacomputing environment. </title> <booktitle> Proceedings of Future general Computer Systems, </booktitle> <year> 1996. </year>
Reference-contexts: The Prophet Dynamic Resource Monitor differs from the Network Weather Service in AppLeS in that only a single predictive model for network traffic is used regardless of traffic patterns. AppLeS is most similar in scope and intent to the MARS project <ref> [GR96] </ref>, whose goal is to produce general-purpose software for a broad application domain. MARS and AppLeS differ in several important ways however. MARS focuses on optimizing minimal execution time through workload-balancing. The application code is instrumented to build a program dependence graph for each execution and to record history statistics.
Reference: [GWP93] <author> A. S. Grimshaw, E. A. West, and W. R. Pearson. </author> <title> No pain and gain! experiences with mentat on a biological application. </title> <journal> Concurrency: Practice & Experience, </journal> <volume> 5(4) </volume> <pages> 309-328, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: This application-centric approach to scheduling promotes the performance of the individual application over the collective performance of the resources in the metacomputing environment. To formalize and generalize the, as yet, ad hoc notion of application-centric scheduling emerging from the practices of metacomputing application developers <ref> [EMRP, SAR, GWP93] </ref>, we are developing an agent-based methodology for application-level scheduling called AppLeS (Application Level Scheduler). AppLeS agents are based on the application-level scheduling paradigm everything about the system is evaluated in terms of its impact on the application. <p> The GA AppLeS represents master/slave computations with a predictable amount of work. We are also developing AppLeS for other codes in which the amount of work done by each slave is not predictable. * Complib Complib <ref> [GWP93] </ref> is a Mentat application that compares gene sequences stored in libraries. Sequences are compared using either the FASTA [PL88] or Smith-Waterman [SW81] algorithms. Partitions of the sequence libraries to be compared are passed to 9 comparison objects, which then forward the results of those comparisons to a separate collector.
Reference: [HCW] <editor> HCW'96. </editor> <booktitle> Proceedings of the 1996 ipps workshop on heterogeneous computing. </booktitle>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs <ref> [RF, HMK + 95, PL95, SAM + , HCW, SHK95] </ref>. Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [HMC94] <author> J. Hollingsworth, B. Miller, and J. Cargille. </author> <title> Dynamic program instrumentation for scalable performance tools. </title> <booktitle> In Proceedings of SHPCC 1994, </booktitle> <year> 1994. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring <ref> [MRW92, HMC94, CL94] </ref> and load forecasting [Lea94, BM96, CB96] both pose open research questions, we have separated the sensory and forecasting functions of the NWS.
Reference: [HMK + 95] <author> Debra A. Hensgen, Lanzt Moore, Taylor Kidd, Richard Freund, Elaine Keith, Matt Kussow, John Lima, and Mark Campbell. </author> <title> Adding rescheduling to and integrating condor with smartnet. </title> <booktitle> In Proceedings of the Heterogeneous Computing Workshop, </booktitle> <year> 1995. </year> <month> 17 </month>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs <ref> [RF, HMK + 95, PL95, SAM + , HCW, SHK95] </ref>. Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [LB95] <author> B. Lowencamp and A. Beguelin. </author> <title> Eco: Efficient collective operations for com-munication on heterogeneous networks. </title> <type> Technical Report CMU-CS-95-191, </type> <institution> Canegie-Mellon University, </institution> <year> 1995. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [Lea94] <author> W. Leland and et al. </author> <title> On the self-similar nature of ethernet traffic. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <month> February </month> <year> 1994. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring [MRW92, HMC94, CL94] and load forecasting <ref> [Lea94, BM96, CB96] </ref> both pose open research questions, we have separated the sensory and forecasting functions of the NWS. The resulting modular design is intended to provide a general facility in which a variety of different monitoring and forecasting techniques can be employed. a collection of forecasting models.
Reference: [Leg] <author> Legion. </author> <note> http://www.cs.virginia.edu/~mentat/legion/legion.html. </note>
Reference-contexts: AppLeS agents are not resource management systems; they rely on systems such as Globus [Glo], Legion <ref> [Leg] </ref>, and others to perform that function. <p> The Coordinator then uses the Performance Estimator to evaluate each schedule in terms of the user's performance objective. The schedule that best optimizes the user's objective is chosen for implementation by the Actuator. Currently, we are working with researchers from the Legion project <ref> [Leg] </ref>, the Globus project [Glo], the Distributed Object Computation Testbed (DOCT) [DOC], and the testbed to be developed for NPACI (the National Partnership for Advanced Computational Infrastructure) [NPA] to prototype AppLeS applications on these resource management systems. 3.3 Related Work The AppLeS approach is application-centric.
Reference: [LLKS85] <author> Lawler, Lenstra, Kan, and Shmoys. </author> <title> The Traveling Salesman Problem. </title> <publisher> John Wiley and Sons, </publisher> <year> 1985. </year>
Reference-contexts: The GA AppLeS uses the Genetic Algorithm as an optimization method to approximate a Traveling Salesman solution <ref> [LLKS85, WSF89] </ref>. The master task distributes a global population to a set of slaves which work in isolation to create a specified number of children (representing tours) and an evaluation of each. The data is sent back to the master, who performs a sort.
Reference: [MFS94] <author> Carlos R. Mechoso, John D. Farrara, and Joseph A. Spahr. </author> <title> Running a climate model in a heterogeneous, distributed computer environment. </title> <booktitle> In Proceedings of the Third IEEE International Symposium on High Performance and Distributed Computing, </booktitle> <pages> pages 79-84, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Experience shows that a metacomputing implementation of resource-intensive applications at the problem sizes of interest to their developers can expose new phenomena and can give rise to new scientific results <ref> [DFP + ss, WK93, MFS94, BBC + 93] </ref>. However, achieving performance on metacomputing systems can be difficult. To efficiently utilize distributed heterogeneous platforms, an application must be scheduled so that it optimizes its use of system resources.
Reference: [MRW92] <author> A. Malony, D. Reed, and H. Wijshoff. </author> <title> Performance Measurement Intrusion and Perturbation Analysis. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(4) </volume> <pages> 433-450, </pages> <month> July </month> <year> 1992. </year> <note> Available as Tech. Report CSRD-923, </note> <institution> University of Illinois, Center for Supercomputing Research and Development. </institution> <note> Reprinted in IEEE CS Press Tutorial, Monitoring and Debugging Distributed and/or Real-Time Systems, </note> <author> Jeffrey Tsai and S. </author> <booktitle> Yang (Eds.), </booktitle> <pages> pp. 77-94, </pages> <year> 1995. </year>
Reference-contexts: The need to limit the 10 intrusiveness of the NWS influences both the implementation and forecasting techniques we can use effectively. Since the problems of non-intrusive resource monitoring <ref> [MRW92, HMC94, CL94] </ref> and load forecasting [Lea94, BM96, CB96] both pose open research questions, we have separated the sensory and forecasting functions of the NWS.
Reference: [NIL] <author> NILE. </author> <title> Nile national challenge computing project. </title> <address> http://www.nile.utexas.edu/nc. </address>
Reference-contexts: The SARA AppLeS serves as a representative of the class of applications that implement large-scale data manipulation and delivery systems. Examples of such systems include NILE <ref> [NIL, ROR] </ref>, various systems developed under the NASA EOSDIS project (of which SARA is a part), and commercial multi-media on demand applications. * Genetic Algorithm We have developed a master/slave structured Genetic Algorithm AppLeS to study the impact of performance model quality on prediction accuracy [Sch97].
Reference: [NPA] <editor> NPACI. </editor> <booktitle> National partnership for advanced computational infrastructure, </booktitle> <address> http://www.npaci.edu. </address>
Reference-contexts: Currently, we are working with researchers from the Legion project [Leg], the Globus project [Glo], the Distributed Object Computation Testbed (DOCT) [DOC], and the testbed to be developed for NPACI (the National Partnership for Advanced Computational Infrastructure) <ref> [NPA] </ref> to prototype AppLeS applications on these resource management systems. 3.3 Related Work The AppLeS approach is application-centric.
Reference: [PL88] <author> W. R. Pearson and D. Lipman. </author> <title> Improved tools for biological sequence analysis. </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci. USA, </institution> (85):2444-2448, 1988. 
Reference-contexts: We are also developing AppLeS for other codes in which the amount of work done by each slave is not predictable. * Complib Complib [GWP93] is a Mentat application that compares gene sequences stored in libraries. Sequences are compared using either the FASTA <ref> [PL88] </ref> or Smith-Waterman [SW81] algorithms. Partitions of the sequence libraries to be compared are passed to 9 comparison objects, which then forward the results of those comparisons to a separate collector. The comparison of gene sequence libraries is embarrassingly parallel.
Reference: [PL95] <author> Jim Pruyne and Miron Livny. </author> <title> Parallel processing on dynamic resources with carmi. </title> <booktitle> In Proceedings of the Workshop on Job Scheduling Strategies for Parallel Processing, IPPS '95, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs <ref> [RF, HMK + 95, PL95, SAM + , HCW, SHK95] </ref>. Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [RF] <author> L. Rudolph and D. Feitelson, </author> <title> editors. </title> <booktitle> Proceedings of the 1996 IPPS Workshop on Job Scheduling Strategies for Parallel Processing. </booktitle>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs <ref> [RF, HMK + 95, PL95, SAM + , HCW, SHK95] </ref>. Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [ROR] <author> A. Ricciardi, M. Ogg, and E. Rothfus. </author> <title> The nile system architecture: Fault-tolerant, wide-area access to computing and data resources. </title> <publisher> CHEP95. </publisher>
Reference-contexts: The SARA AppLeS serves as a representative of the class of applications that implement large-scale data manipulation and delivery systems. Examples of such systems include NILE <ref> [NIL, ROR] </ref>, various systems developed under the NASA EOSDIS project (of which SARA is a part), and commercial multi-media on demand applications. * Genetic Algorithm We have developed a master/slave structured Genetic Algorithm AppLeS to study the impact of performance model quality on prediction accuracy [Sch97].
Reference: [RR97] <author> R. Ribler and D. Reed. </author> <title> The autopilot performance-directed adaptive control system. </title> <booktitle> International Conference on Suptercomputing, Workshop on Performance Data Mining: Automated Diagnosis, Adaption and Optimization, </booktitle> <year> 1997. </year> <month> 18 </month>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [SAM + ] <author> H.J. Siegel, John Antonio, Richard Metzger, Min Tan, and Yan Alexander Li. </author> <title> Heterogeneous computing. </title> <type> Technical report, </type> <institution> Purdue University EE Technical Report TR-EE 94-37. </institution>
Reference: [SAR] <author> SARA. </author> <title> Synthetic apperture radar atlas. </title> <address> http://sara.sdsc.edu/. </address>
Reference-contexts: This application-centric approach to scheduling promotes the performance of the individual application over the collective performance of the resources in the metacomputing environment. To formalize and generalize the, as yet, ad hoc notion of application-centric scheduling emerging from the practices of metacomputing application developers <ref> [EMRP, SAR, GWP93] </ref>, we are developing an agent-based methodology for application-level scheduling called AppLeS (Application Level Scheduler). AppLeS agents are based on the application-level scheduling paradigm everything about the system is evaluated in terms of its impact on the application. <p> DOT is representative of many computation-intensive load 8 balancing codes and its AppLeS is serving as an early prototype for a load-balancing AppLeS tool. * SARA The SARA (Synthetic Aperture Radar Atlas) <ref> [SAR] </ref> distributed application gathers, maintains, and disseminates global satellite imaging data. Using the World Wide Web as an interface and underlying communication substrate, users can interactively request and view regions of the globe at multiple resolutions.
Reference: [SB97] <author> J. Schopf and F. Berman. </author> <title> Performance prediction using intervals. </title> <type> Technical Report TR CS97-541, </type> <address> U. C. San Diego, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Managing the development of such models and the accuracy of the predicted information is part of our current focus <ref> [SB97] </ref>. 4.4 Rescheduling Fundamental to the application-level scheduling methodology is the notion that dynamic information must be used to develop performance-efficient schedules. However, load and availability of system resources will continue to vary during execution, after the application has been scheduled.
Reference: [Sch97] <author> J. Schopf. </author> <title> Structural prediction models for high-performance distributed applications. </title> <booktitle> Proceedings of the Cluster Computing Conference, </booktitle> <year> 1997. </year>
Reference-contexts: of such systems include NILE [NIL, ROR], various systems developed under the NASA EOSDIS project (of which SARA is a part), and commercial multi-media on demand applications. * Genetic Algorithm We have developed a master/slave structured Genetic Algorithm AppLeS to study the impact of performance model quality on prediction accuracy <ref> [Sch97] </ref>. The GA AppLeS uses the Genetic Algorithm as an optimization method to approximate a Traveling Salesman solution [LLKS85, WSF89]. The master task distributes a global population to a set of slaves which work in isolation to create a specified number of children (representing tours) and an evaluation of each. <p> The performance information provided by these structural models is used in different ways by the various subsystems of an AppLeS agent. For example, the Planner may use a structural model estimation of execution time to determine a "best" schedule with respect to a given set of resources. Structural models <ref> [Sch97] </ref> use a skeleton-based [Col89, DFH + 93] approach for representing application components which contribute to performance. Consider a simple structural model which predicts the execution time for a master/slave computation.
Reference: [SHK95] <author> B. Shirazi, A. Hurson, and K. Kavi. </author> <title> Scheduling and Load Balancing in Parallel and Distributed Systems. </title> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs <ref> [RF, HMK + 95, PL95, SAM + , HCW, SHK95] </ref>. Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [SW81] <author> T. F. Smith and M. S. Waterman. </author> <title> Identification of common molecular subsequences. K. Mol. </title> <journal> Biol., </journal> (147):195-197, 1981. 
Reference-contexts: We are also developing AppLeS for other codes in which the amount of work done by each slave is not predictable. * Complib Complib [GWP93] is a Mentat application that compares gene sequences stored in libraries. Sequences are compared using either the FASTA [PL88] or Smith-Waterman <ref> [SW81] </ref> algorithms. Partitions of the sequence libraries to be compared are passed to 9 comparison objects, which then forward the results of those comparisons to a separate collector. The comparison of gene sequence libraries is embarrassingly parallel.
Reference: [SWB97] <author> G. Shao, R. Wolski, and F. Berman. </author> <title> Modeling the cost of redistribution in scheduling. </title> <booktitle> Proceedings of the Eighth SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <year> 1997. </year>
Reference-contexts: old ; T new and T resched models impact the rescheduling process? * Can we use application benchmarks as well as NWS and system benchmarks to drive the decision to reschedule? We have done some preliminary work in developing an application-specific rescheduling model for a rescheduling Jacobi 2D AppLeS prototype <ref> [SWB97] </ref>, however much more needs to be done. We are currently exploring how best to make the re-scheduling decision for individual AppLeS and when. 14 4.5 The Bushel of AppLeS Problem The previous projects are focused on the improvement of the performance of individual AppLeS agents.
Reference: [TAtNT95] <author> D. Patterson T. Anderson, D. </author> <title> Culler and the NOW Team. A case for networks of workstations: Now. </title> <booktitle> Proceedings of IEEE Micro, </booktitle> <month> February </month> <year> 1995. </year>
Reference-contexts: In related projects, we are currently investigating using the AppLeS approach for a number of distributed environments, from clustered environments to NOW <ref> [TAtNT95] </ref> to the World Wide Web to metacomputing. In addition, we are exploring the use of AppLeS in conjunction with both interactive and local batch system schedulers, and for a spectrum of different applications.
Reference: [TB96] <author> P. Tucker and F. Berman. </author> <title> On market mechanisms as a software technique. </title> <type> Technical report, </type> <address> U. C., San Diego TR CS96-513, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: A promising line of attack is to use market economy mechanisms. The idea is to give each AppLeS "currency" which can be used to obtain system resources for their application. There are a number of auction and bidding structures which can be applied in this setting <ref> [TB96] </ref>, and we are currently designing experiments with prototype AppLeS to gain experience with real systems and determine the best approach. Other strategies may also be used to address the Bushel of AppLeS Problem.
Reference: [Wei96] <author> J. Weissman. </author> <title> The interference paradigm for network job scheduling. </title> <booktitle> Proceedings of the IPPS Workshop on Heterogeneous Computing, </booktitle> <year> 1996. </year>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
Reference: [WK93] <author> Yi-Shuen Mark Wu and Aron Kuppermann. </author> <title> Prediction of the effect of the geometric phase on product rotational state distributions and integral cross sections. </title> <journal> Chemical Physics Letters, </journal> <volume> 201 </volume> <pages> 178-86, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Experience shows that a metacomputing implementation of resource-intensive applications at the problem sizes of interest to their developers can expose new phenomena and can give rise to new scientific results <ref> [DFP + ss, WK93, MFS94, BBC + 93] </ref>. However, achieving performance on metacomputing systems can be difficult. To efficiently utilize distributed heterogeneous platforms, an application must be scheduled so that it optimizes its use of system resources.
Reference: [Wol97] <author> R. Wolski. </author> <title> Forecasting network performance to support dynamic scheduling using the network weather service. </title> <booktitle> Proceedings of the High Performance Distributed Computing Conference, </booktitle> <year> 1997. </year>
Reference-contexts: We embody the necessary performance monitoring and predictive functionality in a separate system (capable of simultaneously serving multiple AppLeS agents) known as the Network Weather Service (NWS) <ref> [Wol97] </ref>. To serve as a viable tool for scheduling, the Network Weather Service must * sense resource performance throughout the system, * forecast the future performance of each resource, and * report the forecast information to all interested AppLeS clients.
Reference: [WSF89] <author> D. Whitley, T. Starkweather, and D'Ann Fuquay. </author> <title> Scheduling problems and traveling salesman: The genetic edge recombination operator. </title> <booktitle> Proceedings of the International Conference on Genetic Algorithms, </booktitle> <year> 1989. </year>
Reference-contexts: The GA AppLeS uses the Genetic Algorithm as an optimization method to approximate a Traveling Salesman solution <ref> [LLKS85, WSF89] </ref>. The master task distributes a global population to a set of slaves which work in isolation to create a specified number of children (representing tours) and an evaluation of each. The data is sent back to the master, who performs a sort.
Reference: [WZ97] <author> J. Weissman and X. Zhao. </author> <title> Runtime support for scheduling parallel applications in heterogeneous nows. </title> <booktitle> Proceedings of the High-Performance Distributed Computing Conference, </booktitle> <year> 1997. </year>
Reference-contexts: Our approach is related to [CD95, Bre95, LB95, Wei96, ZY95, RR97]. In particular, AppLeS has similar goals to Prophet <ref> [WZ97] </ref>, which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters. Like AppLeS, the Prophet system uses dynamic information to gauge the available bandwidth and latency for networked resources at run-time and uses this information for resource selection and allocation.
Reference: [ZY95] <author> Xiaodong Zhang and Yong Yan. </author> <title> A framework of performance prediction of parallel computing nondedicated heterogeneous now. </title> <booktitle> In Proceedings of the 1995 International Conference on Parallel Processing, </booktitle> <pages> pages 163-7, </pages> <year> 1995. </year> <month> 19 </month>
Reference-contexts: The goal is to promote the performance of an individual application rather than to optimize the use of system resources or to maximize the throughput for a collection of jobs [RF, HMK + 95, PL95, SAM + , HCW, SHK95]. Our approach is related to <ref> [CD95, Bre95, LB95, Wei96, ZY95, RR97] </ref>. In particular, AppLeS has similar goals to Prophet [WZ97], which focuses on scheduling parallel pipelined and SPMD Mentat applications in heterogeneous workstation clusters.
References-found: 48

