URL: ftp://ftp.aic.nrl.navy.mil/pub/aswu/papers/ec.95.ps.gz
Refering-URL: http://www.aic.nrl.navy.mil/~aswu/papers.html
Root-URL: 
Title: Empirical studies of the genetic algorithm with non-coding segments  
Author: Annie S. Wu Robert K. Lindsay 
Keyword: genetic algorithms, non-coding segments, non-coding DNA, introns, Royal Road function.  
Note: To appear in Evolutionary Computation,  
Address: Ann Arbor, MI 48109-2110  Ann Arbor, MI 48109  
Affiliation: Artificial Intelligence Laboratory University of Michigan  Mental Health Research Institute University of Michigan  
Email: aswu@engin.umich.edu  lindsay@umich.edu  
Date: 3:2, 1995.  
Abstract: The genetic algorithm (GA) is a problem solving method that is modelled after the process of natural selection. We are interested in studying a specific aspect of the GA: the effect of non-coding segments on GA performance. Non-coding segments are segments of bits in an individual that provide no contribution, positive or negative, to the fitness of that individual. Previous research on non-coding segments suggests that including these structures in the GA may improve GA performance. Understanding when and why this improvement occurs will help us to use the GA to its full potential. In this article, we discuss our hypotheses on non-coding segments and describe the results of our experiments. The experiments may be separated into two categories: testing our program on problems from previous related studies, and testing new hypotheses on the effect of non-coding segments. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Back, T. </author> <year> (1991). </year> <title> Self-adaptation in genetic algorithms. In Toward a practice of autonomous systems: </title> <booktitle> Proceedings of the First European Conference on Artificial Life, </booktitle> <pages> (pp. 263-271). </pages>
Reference-contexts: De Jong (1975) and Grefenstette (1986) both conducted empirical studies on the effect of control parameters on GA performance. The results from these studies have been used as guidelines for initial parameter settings for many GA systems and have spurred further research on control parameter effects. Additional studies <ref> (Back, 1991) </ref> (Lee & Takagi, 1993) (Schaffer & Morishima, 1987) have attempted, with some success, dynamic 4 control of parameter values either by the GA itself or other automated regulator systems. <p> Though theory predicts that one-point and two-point crossover should perform the best (Syswerda, 1989), experimental results have shown that multi-point crossovers perform significantly better. Other studies have concentrated on the effects of mutation (Fogarty, 1989) <ref> (Back, 1991) </ref>; both static and dynamic mutation rates have been tested. Eshelman and Schaffer debated the usefulness of crossover versus mutation (Eshelman & Schaffer, 1993) (Schaffer & Eshelman, 1991). The results indicate that a combination of crossover and mutation is generally more effective than either crossover or mutation alone.
Reference: <author> Curtis, H. </author> <year> (1983). </year> <title> Biology. </title> <publisher> Worth Publishers. </publisher>
Reference-contexts: A genotype is the genetic constitution of an organism. A phenotype is the appearance or other characteristics of an organism, resulting from the interaction of its genotype with the environment. A gene that is expressed makes some contribution to the phenotype <ref> (Curtis, 1983) </ref> (Lewin, 1994). There are several types of non-coding DNA (Nei, 1987). Intergenic regions and intragenic regions (introns) make up a large part of the non-coding DNA. Intergenic regions are found between genes and are not transcribed into mRNA.
Reference: <author> De Jong, K. A. </author> <year> (1975). </year> <title> Analysis of the Behavior of a Class of Genetic Adaptive Systems. </title> <type> PhD thesis, </type> <institution> University of Michigan. </institution>
Reference: <author> Eshelman, L. J., Caruana, R. A., & Schaffer, J. D. </author> <year> (1989). </year> <title> Biases in the crossover landscape. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 10-19). </pages>
Reference-contexts: We believe that non-coding segments may also have a stabilizing effect on the preservation of building blocks by the GA. A key ingredient to using the GA effectively is balancing the exploratory and exploitative tendencies of the GA <ref> (Eshelman, Caruana & Schaffer, 1989) </ref>. The GA explores the solution space to find new building blocks and to combine existing building blocks into larger units. The GA exploits highly fit individuals to preserve their presumably highly fit building blocks in the population.
Reference: <editor> Eshelman, L. J. & Schaffer, J. D. </editor> <year> (1993). </year> <title> Crossover's niche. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 9-14). </pages>
Reference-contexts: Other studies have concentrated on the effects of mutation (Fogarty, 1989) (Back, 1991); both static and dynamic mutation rates have been tested. Eshelman and Schaffer debated the usefulness of crossover versus mutation <ref> (Eshelman & Schaffer, 1993) </ref> (Schaffer & Eshelman, 1991). The results indicate that a combination of crossover and mutation is generally more effective than either crossover or mutation alone.
Reference: <author> Fogarty, T. C. </author> <year> (1989). </year> <title> Varying the probability of mutation in the genetic algorithm. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 104-109). </pages>
Reference-contexts: Though theory predicts that one-point and two-point crossover should perform the best (Syswerda, 1989), experimental results have shown that multi-point crossovers perform significantly better. Other studies have concentrated on the effects of mutation <ref> (Fogarty, 1989) </ref> (Back, 1991); both static and dynamic mutation rates have been tested. Eshelman and Schaffer debated the usefulness of crossover versus mutation (Eshelman & Schaffer, 1993) (Schaffer & Eshelman, 1991).
Reference: <author> Forrest, S. & Mitchell, M. </author> <year> (1992). </year> <title> Relative building-block fitness and the building-block hypothesis. </title> <booktitle> In Proceedings of the Foundations of Genetic Algorithms Workshop. </booktitle>
Reference-contexts: In addition, the variable crossover probabilities are easily changed or removed by adding or deleting non-coding bits. * Non-coding segments may reduce the hitchhiking effect <ref> (Forrest & Mitchell, 1992) </ref>. The hitchhiking effect occurs when non-optimal bits in the don't care region of highly fit schemata benefit from the attached highly fit schemata. <p> The offspring together with the survivors of the current generation form the next generation of individuals. 7. Go to step 2. The program that we are using is algorithmically the same as the program used in <ref> (Forrest & Mitchell, 1992) </ref>. 4.3 Testbed With the exception of the replication experiments, we ran all of our experiments on the Royal Road functions. The Royal Road functions (Forrest & Mitchell, 1992) (Forrest & Mitchell, 1993) (Mitchell & Holland, 1993) are a class of fitness landscapes designed for studying building block <p> Go to step 2. The program that we are using is algorithmically the same as the program used in <ref> (Forrest & Mitchell, 1992) </ref>. 4.3 Testbed With the exception of the replication experiments, we ran all of our experiments on the Royal Road functions. The Royal Road functions (Forrest & Mitchell, 1992) (Forrest & Mitchell, 1993) (Mitchell & Holland, 1993) are a class of fitness landscapes designed for studying building block interactions. Royal Road functions are defined by their component schemata. <p> The building blocks of a Royal Road function are specified by schemata and assigned fitness values before a run begins. Higher level building blocks consist of two or more lower level building blocks. An example of a Royal Road function from <ref> (Forrest & Mitchell, 1992) </ref>, RR2 exponential , is shown in Figure 2.
Reference: <author> Forrest, S. & Mitchell, M. </author> <year> (1993). </year> <title> What makes a problem hard for a genetic algorithm? Some anomalous results and their explanation. </title> <journal> Machine Learning, </journal> <volume> 13, </volume> <pages> 285-319. </pages>
Reference-contexts: Building blocks are subsets of these bits that work together, i.e. specific patterns of these bits may result in a significant increase in fitness. Building blocks are defined by their encompassing schemata. A schema refers to the set of all strings that contain a particular building block <ref> (Forrest & Mitchell, 1993) </ref> (Goldberg, 1989). The GA operates on individuals that are strings of length l, defined over the set f0; 1g. The schemata are strings, also of length l, defined over the set f0; 1; flg, where fl is the don't care character. <p> The program that we are using is algorithmically the same as the program used in (Forrest & Mitchell, 1992). 4.3 Testbed With the exception of the replication experiments, we ran all of our experiments on the Royal Road functions. The Royal Road functions (Forrest & Mitchell, 1992) <ref> (Forrest & Mitchell, 1993) </ref> (Mitchell & Holland, 1993) are a class of fitness landscapes designed for studying building block interactions. Royal Road functions are defined by their component schemata. The building blocks of a Royal Road function are specified by schemata and assigned fitness values before a run begins.
Reference: <author> Goldberg, D. E. </author> <year> (1989). </year> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Building blocks are defined by their encompassing schemata. A schema refers to the set of all strings that contain a particular building block (Forrest & Mitchell, 1993) <ref> (Goldberg, 1989) </ref>. The GA operates on individuals that are strings of length l, defined over the set f0; 1g. The schemata are strings, also of length l, defined over the set f0; 1; flg, where fl is the don't care character.
Reference: <author> Goldberg, D. E., Korb, B., & Deb, K. </author> <year> (1989). </year> <title> Messy genetic algorithms: Motivation, analysis, and first results. </title> <journal> Complex Systems, </journal> <volume> 3, </volume> <pages> 493-530. </pages>
Reference-contexts: Building blocks are defined by their encompassing schemata. A schema refers to the set of all strings that contain a particular building block (Forrest & Mitchell, 1993) <ref> (Goldberg, 1989) </ref>. The GA operates on individuals that are strings of length l, defined over the set f0; 1g. The schemata are strings, also of length l, defined over the set f0; 1; flg, where fl is the don't care character.
Reference: <author> Goldberg, D. E., Korb, B., & Deb, K. </author> <year> (1990). </year> <title> Messy genetic algorithms revisited: Studies in mixed size and scale. </title> <journal> Complex Systems, </journal> <volume> 4, </volume> <pages> 415-444. </pages>
Reference: <author> Grefenstette, J. J. </author> <year> (1986). </year> <title> Optimization of control parameters for genetic algorithms. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> SMC-16 (1), </volume> <pages> 122-128. </pages>
Reference: <author> Holland, J. H. </author> <year> (1975). </year> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michigan Press. </publisher>
Reference-contexts: This ability is especially valuable when solving combinatorially explosive problems. The GA achieves this ability by balancing the exploratory and exploitative tendencies described above. According to the building block hypothesis <ref> (Holland, 1975) </ref>, the GA finds solutions by searching for building blocks that have high relative fitness and combining them to form even larger building blocks, eventually forming a complete solution.
Reference: <author> Lee, M. A. & Takagi, H. </author> <year> (1993). </year> <title> Dynamic control of genetic algorithms using fuzzy logic techniques. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 76-83). </pages> <note> 33 Levenick, </note> <author> J. R. </author> <year> (1991). </year> <title> Inserting introns improves genetic algorithm success rate: Taking a cue from biology. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 123-127). </pages>
Reference-contexts: The results from these studies have been used as guidelines for initial parameter settings for many GA systems and have spurred further research on control parameter effects. Additional studies (Back, 1991) <ref> (Lee & Takagi, 1993) </ref> (Schaffer & Morishima, 1987) have attempted, with some success, dynamic 4 control of parameter values either by the GA itself or other automated regulator systems.
Reference: <author> Lewin, B. </author> <year> (1994). </year> <title> Genes 5. </title> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: A genotype is the genetic constitution of an organism. A phenotype is the appearance or other characteristics of an organism, resulting from the interaction of its genotype with the environment. A gene that is expressed makes some contribution to the phenotype (Curtis, 1983) <ref> (Lewin, 1994) </ref>. There are several types of non-coding DNA (Nei, 1987). Intergenic regions and intragenic regions (introns) make up a large part of the non-coding DNA. Intergenic regions are found between genes and are not transcribed into mRNA. <p> Intergenic regions are found between genes and are not transcribed into mRNA. Some portions of the intergenic regions regulate the expression of adjacent genes; other portions have no known function. Intragenic regions, also called introns, are one or more segments of DNA found within genes <ref> (Lewin, 1994) </ref>. After a gene is transcribed into mRNA, the intron regions are removed from the mRNA chain, and the remaining segments of mRNA ,the exon regions, are joined together to become the protein template.
Reference: <author> Mitchell, M. & Holland, J. H. </author> <year> (1993). </year> <title> When will a genetic algorithm outperform hillclimbing? In Proceedings of the Fifth International Conference on Genetic Algorithms. </title>
Reference-contexts: Building blocks are subsets of these bits that work together, i.e. specific patterns of these bits may result in a significant increase in fitness. Building blocks are defined by their encompassing schemata. A schema refers to the set of all strings that contain a particular building block <ref> (Forrest & Mitchell, 1993) </ref> (Goldberg, 1989). The GA operates on individuals that are strings of length l, defined over the set f0; 1g. The schemata are strings, also of length l, defined over the set f0; 1; flg, where fl is the don't care character. <p> The program that we are using is algorithmically the same as the program used in (Forrest & Mitchell, 1992). 4.3 Testbed With the exception of the replication experiments, we ran all of our experiments on the Royal Road functions. The Royal Road functions (Forrest & Mitchell, 1992) <ref> (Forrest & Mitchell, 1993) </ref> (Mitchell & Holland, 1993) are a class of fitness landscapes designed for studying building block interactions. Royal Road functions are defined by their component schemata. The building blocks of a Royal Road function are specified by schemata and assigned fitness values before a run begins. <p> The Royal Road functions (Forrest & Mitchell, 1992) (Forrest & Mitchell, 1993) <ref> (Mitchell & Holland, 1993) </ref> are a class of fitness landscapes designed for studying building block interactions. Royal Road functions are defined by their component schemata. The building blocks of a Royal Road function are specified by schemata and assigned fitness values before a run begins.
Reference: <author> Nei, M. </author> <year> (1987). </year> <title> Molecular Evolutionary Genetics. </title> <publisher> Columbia University Press. </publisher>
Reference-contexts: A phenotype is the appearance or other characteristics of an organism, resulting from the interaction of its genotype with the environment. A gene that is expressed makes some contribution to the phenotype (Curtis, 1983) (Lewin, 1994). There are several types of non-coding DNA <ref> (Nei, 1987) </ref>. Intergenic regions and intragenic regions (introns) make up a large part of the non-coding DNA. Intergenic regions are found between genes and are not transcribed into mRNA. Some portions of the intergenic regions regulate the expression of adjacent genes; other portions have no known function. <p> A third type of non-coding DNA is the pseudogene. A pseudogene is a segment of DNA that is similar to a functional gene, but contains nucleotide changes that prevent its expression <ref> (Nei, 1987) </ref>. Pseudogenes are believed to arise from gene duplication or 3 reverse RNA transcription. Interestingly, pseudogenes produced from reverse transcription do not contain introns. Since pseudogenes are not expressed, they are not subject to selection pressure from the environment. As a result, pseudogenes accumulate mutations quickly.
Reference: <author> Oliver, I. M., Smith, D. J., & Holland, J. R. C. </author> <year> (1987). </year> <title> A study of permutation crossover operations on the traveling salesman problem. </title> <booktitle> In Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 224-230). </pages>
Reference-contexts: There are some problems which seem to be good candidate problems for the GA to solve that simply do not work well with the typical binary string representation. GA users often need to tailor problem representations to their specific problems. For example, scheduling problems <ref> (Oliver, Smith & Holland, 1987) </ref> often use numerical string representations to avoid generating illegal solutions.
Reference: <author> Patrusky, B. </author> <year> (1992). </year> <title> The intron story. </title> <journal> MOSAIC, </journal> <volume> 23 (3), </volume> <pages> 22-33. </pages>
Reference-contexts: After a gene is transcribed into mRNA, the intron regions are removed from the mRNA chain, and the remaining segments of mRNA ,the exon regions, are joined together to become the protein template. Though we are starting to understand the intron removing mechanism <ref> (Patrusky, 1992) </ref>, the function of introns is still uncertain. A third type of non-coding DNA is the pseudogene. A pseudogene is a segment of DNA that is similar to a functional gene, but contains nucleotide changes that prevent its expression (Nei, 1987).
Reference: <editor> Schaffer, J. D. & Eshelman, L. J. </editor> <year> (1991). </year> <title> On crossover as an evolutionarily viable strategy. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 61-68). </pages>
Reference-contexts: Other studies have concentrated on the effects of mutation (Fogarty, 1989) (Back, 1991); both static and dynamic mutation rates have been tested. Eshelman and Schaffer debated the usefulness of crossover versus mutation (Eshelman & Schaffer, 1993) <ref> (Schaffer & Eshelman, 1991) </ref>. The results indicate that a combination of crossover and mutation is generally more effective than either crossover or mutation alone. <p> Schaffer, 1993) <ref> (Schaffer & Eshelman, 1991) </ref>. The results indicate that a combination of crossover and mutation is generally more effective than either crossover or mutation alone. While crossover is a good exploratory operator, it is "less effective than mutation at maintaining gene pool variation in the face of selection pressure" (Schaffer & Eshelman, 1991) and thus makes the GA prone to early convergence when used alone. Mutation, which has often been considered a secondary operator, performed surprisingly well on its own because of its ability to introduce variation into the population.
Reference: <author> Schaffer, J. D. & Morishima, A. </author> <year> (1987). </year> <title> An adaptive crossover distribution mechanism for genetic algorithms. </title> <booktitle> In Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 36-40). </pages>
Reference-contexts: The results from these studies have been used as guidelines for initial parameter settings for many GA systems and have spurred further research on control parameter effects. Additional studies (Back, 1991) (Lee & Takagi, 1993) <ref> (Schaffer & Morishima, 1987) </ref> have attempted, with some success, dynamic 4 control of parameter values either by the GA itself or other automated regulator systems.
Reference: <author> Syswerda, G. </author> <year> (1989). </year> <title> Uniform crossover in genetic algorithms. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> (pp. 2-9). 34 </pages>
Reference-contexts: Crossover and mutation are the most commonly studied operators. Many different types of crossover have been used with the GA, ranging from the basic one-point crossover to uniform crossover. Though theory predicts that one-point and two-point crossover should perform the best <ref> (Syswerda, 1989) </ref>, experimental results have shown that multi-point crossovers perform significantly better. Other studies have concentrated on the effects of mutation (Fogarty, 1989) (Back, 1991); both static and dynamic mutation rates have been tested.
References-found: 22

