URL: ftp://ftp.cs.utexas.edu/pub/techreports/tr93-09.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/boyer/publications.html
Root-URL: http://www.cs.utexas.edu
Title: AUTOMATED PROOFS OF OBJECT CODE FOR A WIDELY USED MICROPROCESSOR  
Author: by YUAN YU, B.S. 
Degree: DISSERTATION Presented to the Faculty of the Graduate School of  in Partial Fulfillment of the Requirements for the Degree of DOCTOR OF PHILOSOPHY  
Date: December, 1992  
Address: Austin  AUSTIN  
Affiliation: The University of Texas at  THE UNIVERSITY OF TEXAS AT  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Gordon Bell and Allen Newell. </author> <title> The PMS and ISP descriptive systems for computer structures. </title> <booktitle> In Proceedings of the Spring Joint Computer Conference. </booktitle> <publisher> AFIPS Press, </publisher> <year> 1970. </year>
Reference-contexts: 2 31)) (x 12) (y 10))))) C.3 Binary Search ; Proof of the Correctness of a Binary Search Program ; The following C function BSEARCH determines if a given value x occurs in the sorted array a. /* from K&R */ /* bsearch: find x in a [0] &lt;= a <ref> [1] </ref> &lt;= ... &lt;= a [n-1] */ int bsearch (int x, int a [], int n) - int low, high, mid; 371 high = n; while (low &lt; high) - mid = (low + high) / 2; if (x &lt; a [mid]) high = mid; else if (x &gt; a [mid])
Reference: [2] <author> William Bevier. </author> <title> A Verified Operating System Kernel. </title> <type> PhD thesis, </type> <institution> University of Texas at Austin, </institution> <year> 1987. </year>
Reference: [3] <author> William Bevier, Warren Hunt, J Strother Moore, and William Young. </author> <title> Special issue on system verification. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5(4), </volume> <year> 1989. </year>
Reference-contexts: the definition of a collection of functions culminating ; in the function effec-addr, which computes ``the effective ; address'' for MC68020 instructions. (Actually, some instructions, ; e.g., the MOVE instruction, compute two effective addresses.) ; In his Ph.D. thesis, Warren Hunt specified the FM8502 microprocessor in ; the Nqthm logic <ref> [3] </ref>. In Hunt's FM8502 there is only one ; instruction format.
Reference: [4] <author> Jonathan Bowen. </author> <title> The formal specification of a microprocessor instruction set, </title> <type> technical monograph PRG-60. Technical report, </type> <institution> Oxford University, </institution> <month> January </month> <year> 1986. </year>
Reference: [5] <author> R. S. Boyer and J S. Moore. </author> <title> A verification condition generator for FORTRAN. </title> <editor> In R. S. Boyer and J S. Moore, editors, </editor> <booktitle> The Correctness Problem in Computer Science. </booktitle> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1981. </year>
Reference: [6] <author> Robert S. Boyer and J Strother Moore. </author> <title> Proving theorems about LISP functions. </title> <journal> Journal of the ACM, </journal> <volume> 22(1), </volume> <year> 1975. </year>
Reference: [7] <author> Robert S. Boyer and J Strother Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [8] <author> Robert S. Boyer and J Strother Moore. </author> <title> Program verification. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 1(1) </volume> <pages> 17-23, </pages> <year> 1985. </year>
Reference: [9] <author> Robert S. Boyer and J Strother Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference: [10] <author> Robert S. Boyer and J Strother Moore. </author> <title> MJRTY a fast majority vote algorithm. </title> <editor> In Robert S. Boyer, editor, </editor> <booktitle> Automated Reasoning: Essays in Honor of Woody Bledsoe, </booktitle> <pages> pages 105-117. </pages> <publisher> Kluwer Academic, </publisher> <year> 1991. </year> <pages> 696 697 </pages>
Reference: [11] <author> Robert S. Boyer and Yuan Yu. </author> <title> Automated correctness proofs of machine code programs for a commercial microprocessor. </title> <type> Technical Report TR-91-33, </type> <institution> Computer Sciences Department, University of Texas at Austin, </institution> <year> 1991. </year>
Reference-contexts: ; 3. the program counter is set to #X22B2, the return address to the caller. ; ; This theorem should not be confused with the much more general theorem ; stating the correctness of the same GCD program on all input, a theorem ; whose mechanical proof is described in <ref> [11] </ref>. (make-lib "mc20-1") B.3 A Lemma Library For Machine Code Program Proving This section contains the lemma library built for machine code program proving. ; -------------------------------------------------- ; Date: Jan, 1991 ; Modified: Sep 4, 1992. ; File: mc20-2.events ; -------------------------------------------------- ;------------------------------------------------ ; PROVING PHASE ; ; we establish basic theory for
Reference: [12] <author> Robert S. Boyer and Yuan Yu. </author> <title> A formal specification of some user mode instructions for the motorola 68020. </title> <type> Technical Report TR-92-04, </type> <institution> Computer Sciences Department, University of Texas at Austin, </institution> <year> 1992. </year>
Reference: [13] <author> D.L. Clutterbuck and B.A. Carre. </author> <title> The verification of low-level code. </title> <journal> IEE Software Engineering Journal, </journal> <month> May </month> <year> 1988. </year>
Reference: [14] <author> Avra Cohn. </author> <title> A proof of correctness of the Viper microprocessor: The first level. </title> <type> Technical Report 104, </type> <institution> University of Cambridge, </institution> <month> January </month> <year> 1987. </year>
Reference: [15] <author> J. V. Cook. </author> <title> Verification of the C/30 microcode using the State Delta Verification System (SDVS). </title> <booktitle> In 13th National Computer Security Conference, </booktitle> <volume> volume 1, </volume> <pages> pages 20-31, </pages> <year> 1990. </year>
Reference: [16] <author> D. Good, et al. </author> <title> Report on the language GYPSY version 2.0. </title> <type> Technical Report ICSCA-CMP-10, </type> <institution> Institute for Computing Science and Computer Applications, University of Texas at Austin, </institution> <year> 1978. </year>
Reference: [17] <author> A. Falkoff, K. Iverson, and E. Sussenguth. </author> <title> A formal description of system/360. </title> <journal> IBM Systems Journal, </journal> <volume> 3(3) </volume> <pages> 198-262, </pages> <year> 1964. </year>
Reference: [18] <author> James R. Farr. </author> <title> A formal specification of the Transputer instruction set. </title> <type> Master's thesis, </type> <institution> Oxford, </institution> <month> September </month> <year> 1987. </year>
Reference: [19] <author> Robert W. Floyd. </author> <title> Assigning meanings to programs. </title> <booktitle> In Mathematical Aspects of Computer Science, Proceedings of Symposia in Applied Mathematics, </booktitle> <publisher> American Mathematical Society, </publisher> <pages> pages 19-32, </pages> <address> Providence, Rhode Island, </address> <year> 1967. </year>
Reference: [20] <author> Herman H. Goldstine and John von Neumann. </author> <title> Planning and coding problems for an electronic computing instrument. </title> <editor> In John von Neumann, </editor> <booktitle> Collected Works, volume V, </booktitle> <pages> pages 34-235. </pages> <publisher> Pergamon Press, Oxford, </publisher> <year> 1961. </year>
Reference: [21] <author> M. Gordon, R. Milner, and C. </author> <title> Wadsworth. </title> <publisher> Edinburgh LCF. Springer-Verlag, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [22] <author> Mike Gordon. LCF-LSM, </author> <title> a system for specifying and verifying hardware. </title> <type> Technical Report TR 41, </type> <institution> Computer Laboratory, University of Cambridge, </institution> <month> September </month> <year> 1983. </year> <month> 698 </month>
Reference: [23] <author> C.A.R. Hoare. </author> <title> An axiomatic basis for computer programming. </title> <journal> The Communication of ACM, </journal> <volume> 12(10) </volume> <pages> 576-583, </pages> <year> 1969. </year>
Reference: [24] <author> Warren A. Hunt and B. Brock. </author> <title> A formal HDL and its use in the FM9001 verification. </title> <booktitle> In Proceedings of the Royal Society, </booktitle> <year> 1992. </year>
Reference: [25] <author> S. Igarashi, </author> <title> R.L. London, and D.C. Luckham. Automatic program verification I: A logical basis and its implementation. </title> <type> Technical Report ISI/RR-73-11, </type> <institution> Information Science Institute, USC, </institution> <year> 1973. </year>
Reference: [26] <author> I.M. O'Neill, et al. </author> <title> The formal verification of safety-critical assembly code. In Safety of Computer Control System 1988. </title> <publisher> Pergamon Press, </publisher> <month> November </month> <year> 1988. </year>
Reference: [27] <author> Kenneth E. Iverson. </author> <title> A Programming Language. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1962. </year>
Reference: [28] <author> ISO Committee JTC1/SC22/WG14. </author> <title> ISO/IEC Standard 9899:1990. International Standards Organization, </title> <address> Geneva, </address> <year> 1990. </year>
Reference: [29] <author> Matt Kaufmann. </author> <title> A user's manual for an interactive enhancement to the Boyer-Moore theorem prover. </title> <type> Technical Report CLI-19, </type> <institution> Computational Logic, Inc., </institution> <month> May </month> <year> 1988. </year>
Reference: [30] <author> Matt Kaufmann. DEFN-SK: </author> <title> An extension of the Boyer-Moore theorem prover to handle first-order quantifiers. </title> <type> Technical Report CLI-43, </type> <institution> Computational Logic, Inc., </institution> <year> 1989. </year>
Reference: [31] <author> Matt Kaufmann. </author> <title> An integer library for Nqthm. </title> <type> Technical Report CLI Internal 182, </type> <institution> Computational Logic, Inc., </institution> <month> March </month> <year> 1990. </year>
Reference: [32] <author> Brian W. Kernighan and Dennis M. Ritchie. </author> <title> The C Programming Language, Second Edition. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliff, New Jersey, </address> <year> 1988. </year>
Reference: [33] <author> J. C. King. </author> <title> A Program Verifier. </title> <type> PhD thesis, </type> <institution> Carnegie-Mellon University, </institution> <year> 1969. </year>
Reference: [34] <author> Donald E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> volume 1. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1981. </year>
Reference: [35] <author> Tim Leonard. </author> <title> Specification of computer architectures: A survey and annotated bibliography. </title> <type> Technical Report 188, </type> <institution> University of Cambridge, </institution> <month> January </month> <year> 1990. </year> <month> 699 </month>
Reference: [36] <author> W. D. Maurer. </author> <title> An IBM 370 assembly language verifier. </title> <booktitle> In Proceedings of the 16th Annual technical Symposium on Systems and Software: Operational Reliability and Performance Assurance. ACM, </booktitle> <month> June </month> <year> 1974. </year>
Reference: [37] <author> W. D. Maurer. </author> <title> Some correctness principles for machine language program and microprocessors. </title> <booktitle> In Proceedings of the Seventh Annual Workshop on Microprogramming, </booktitle> <address> Palo Alto, CA, </address> <year> 1974. </year>
Reference: [38] <author> John McCarthy. </author> <title> Computer programs for checking mathematical proofs. In Recursive Function Theory, </title> <booktitle> Proceedings of a Symposium in Pure Mathematics, volume V, </booktitle> <pages> pages 219-227, </pages> <address> Providence, Rhode Island, 1962. </address> <publisher> American Mathematical Society. </publisher>
Reference: [39] <author> John McCarthy. </author> <title> Towards a mathematical science of computation. </title> <booktitle> In Proceedings of IFIP Congress, </booktitle> <pages> pages 21-28, </pages> <year> 1962. </year>
Reference: [40] <author> John McCarthy and J. Painter. </author> <title> Correctness of a compiler for arithmetic expressions. </title> <booktitle> In Mathematical Aspects of Computer Science, Proc. Symp. Appl. Math., American Mathematical Society, volume XIX, </booktitle> <address> Providence, Rhode Island, </address> <year> 1967. </year>
Reference: [41] <author> Motorola, Inc. </author> <title> MC68020 32-bit Microprocessor User's Manual. </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1989. </year>
Reference-contexts: See Table 3-14 of <ref> [41] </ref> ; for this classification. (defn execute-ins (ins s) (let ((opcode (opcode-field ins))) (if (lessp opcode 8) (if (lessp opcode 4) (if (lessp opcode 2) (if (equal opcode 0) (bit-group ins s) ; 0000 (move-ins (b) ins s)) ; 0001 (if (equal opcode 2) (move-group (l) ins s) ; 0010 (move-group
Reference: [42] <author> Ministry of Defense (Britain). </author> <title> Interim defense standard 00-55, requirements for the procurement of safety critical software in defense equipment. </title> <type> Technical report, </type> <institution> Directorate of Standardization, Ministry of Defense, </institution> <address> Kentigern House 65, Brown Street, Glasgow G2 8EX, Great Britain, </address> <year> 1989. </year>
Reference: [43] <author> P. J. Plauger. </author> <title> Private communication. </title>
Reference: [44] <author> P. J. Plauger. </author> <title> The Standard C Library. </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1992. </year>
Reference: [45] <author> Wolfgang Polak. </author> <title> Compiler Specification and Verification. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1981. </year>
Reference: [46] <author> Phillip Rose. </author> <title> A partial specification of the M68000 microprocessor. </title> <type> Master's thesis, </type> <institution> Oxford, </institution> <month> September </month> <year> 1987. </year>
Reference: [47] <author> D.P. Siewiorek, Gordon Bell, and Allen Newell. </author> <title> Computer Structures: Principles and examples. </title> <publisher> McGraw-Hill, </publisher> <year> 1982. </year> <month> 700 </month>
Reference: [48] <author> Richard L. </author> <title> Sites. Alpha Architecture Reference Manual. </title> <publisher> Digital Press, </publisher> <address> Bedford, Mass., </address> <year> 1992. </year>
Reference: [49] <author> SPARC International, Inc. </author> <title> The SPARC Architecture Manual, Version 8. SPARC International, </title> <publisher> Inc., </publisher> <address> Menlo Park, California, </address> <year> 1991. </year>
Reference: [50] <author> Chris Torek. </author> <title> Private communication. </title>
Reference: [51] <author> Alan M. </author> <title> Turing. On checking a large routine. In Report of a Conference on High Speed Automatic Calculating Machines, </title> <type> pages 67-69. </type> <institution> Univ. Math. Laboratory, </institution> <address> Cambridge, </address> <year> 1949. </year>
Reference: [52] <author> Warren A. Hunt, Jr. FM8501: </author> <title> A Verified Microprocessor. </title> <type> PhD thesis, </type> <institution> University of Texas at Austin, </institution> <year> 1985. </year>

References-found: 52

