URL: http://ai.eecs.umich.edu/people/huffman/papers/sss95.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/huffman/hufpubs.html
Root-URL: http://www.eecs.umich.edu
Email: huffman@tc.pw.com  
Title: Heuristic joins to integrate structured heterogeneous data  
Author: Scott B. Huffman and David Steier Price Waterhouse 
Address: 68 Willow Road Menlo Park, CA 94025  
Affiliation: Technology Centre  
Abstract: Heterogeneous data sources often exhibit semantic heterogeneity at the data level; that is, the same entity in the world is referred to in different ways both within and across sources. This paper discusses a framework for combining information from such sources, called heuristic join, that is an extension of the familiar equi-join for homogeneous sources. Heuristic join uses heuristic match operators rather than simple equality to determine whether tuples refer to the same entity. The inexactness of heuristic matching introduces a number of parameters into heuristic join that are not present in equi-joins. Our work is motivated by a real-world data integration problem that required the use of heuristic joins. 
Abstract-found: 1
Intro-found: 1
Reference: [Arens et al., 1993] <author> Y. Arens, C. Y. Chee, C. Hsu, and C. A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> Int'l. Journal on Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-58, </pages> <year> 1993. </year>
Reference-contexts: However, this would require a large and constantly increasing amount of meta-information. One approach to using meta-information at the data level is discussed by Sciore et al. [1994]. Large-scale information agents and architectures, such as SIMS <ref> [Arens et al., 1993] </ref>, have not yet addressed the kind of fine-grained data heterogeneity discussed here. Rather, they appear to assume that if multiple sources contain data about the same entity, a type-key will be available in each source that uniquely identifies the entity.
Reference: [Batini et al., 1986] <author> C. Batini, M. Lenzerini, and S. B. Navathe. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4), </volume> <year> 1986. </year>
Reference-contexts: The data sources are created by different people, in different locations, for a variety of purposes, and following a variety of conventions. Thus the sources can exhibit both schematic and data heterogeneity [Kim and Seo, 1991]. Researchers in multidatabases have developed a variety of techniques for handling schematic heterogeneity <ref> [Batini et al., 1986] </ref>; typically, these involve direct mapping rules either between data sources (e.g., [Sheth and Larson, 1990]) or from each source to a global schema (e.g., [Collet et al., 1991]).
Reference: [Bhargava et al., 1991] <author> H. K. Bhargava, S. O. Kim-brough, and R. Krishnan. </author> <title> Unique names violations, a problem for model integration or You say tomato, I say tomahto. </title> <journal> ORSA Journal on Computing, </journal> <volume> 3(2) </volume> <pages> 107-120, </pages> <year> 1991. </year>
Reference-contexts: Related Work The problem of the same concept being represented in different ways can occur at the schema level as well as at the data level. Automated approaches to detecting such conflicts at the schema level involve collecting and comparing meta-information about the meaning of schema elements (e.g., <ref> [Bhargava et al., 1991] </ref>). Such meta-information about individual data items might be used within knowledge-driven heuristics to produce more accurate heuristic joins. However, this would require a large and constantly increasing amount of meta-information. One approach to using meta-information at the data level is discussed by Sciore et al. [1994].
Reference: [Collet et al., 1991] <author> C. Collet, M. N. Huhns, and W. Shen. </author> <title> Resource integration using a large knowledge base in Carnot. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Researchers in multidatabases have developed a variety of techniques for handling schematic heterogeneity [Batini et al., 1986]; typically, these involve direct mapping rules either between data sources (e.g., [Sheth and Larson, 1990]) or from each source to a global schema (e.g., <ref> [Collet et al., 1991] </ref>). This paper examines methods for combining data from multiple structured sources here, relational databases that exhibit semantic heterogeneity within the data, as opposed to at the schematic level.
Reference: [Kim and Seo, 1991] <author> W. Kim and J. Seo. </author> <title> Classifying schematic and data heterogeneity in multidatabase systems. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 12-18, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Unfortunately, in most cases data from different structured sources cannot be directly combined. The data sources are created by different people, in different locations, for a variety of purposes, and following a variety of conventions. Thus the sources can exhibit both schematic and data heterogeneity <ref> [Kim and Seo, 1991] </ref>. Researchers in multidatabases have developed a variety of techniques for handling schematic heterogeneity [Batini et al., 1986]; typically, these involve direct mapping rules either between data sources (e.g., [Sheth and Larson, 1990]) or from each source to a global schema (e.g., [Collet et al., 1991]).
Reference: [Sciore et al., 1994] <author> E. Sciore, M. Siegel, and A. Rosenthal. </author> <title> Using semantic values to facilitate interoperability among heterogeneous information systems. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(2) </volume> <pages> 254-290, </pages> <note> June 1994. </note> <author> [Sheth and Larson, 1990] A. Sheth and J. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3), </volume> <year> 1990. </year>
References-found: 6

