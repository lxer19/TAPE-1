URL: http://www.cs.columbia.edu/~shaw/papers/inlg98.ps.gz
Refering-URL: http://www.cs.columbia.edu/~shaw/papers/index.html
Root-URL: http://www.cs.columbia.edu
Email: shaw@cs.columbia.edu  
Title: Clause Aggregation Using Linguistic Knowledge  
Author: James Shaw 
Address: New York, NY 10027, USA  
Affiliation: Dept. of Computer Science Columbia University  
Note: Published in Proc. of IWNLG,1998.  
Abstract: By combining multiple clauses into one single sentence, a text generation system can express the same amount of information in fewer words and at the same time, produce a great variety of complex constructions. In this paper, we describe hypotactic and paratactic operators for generating complex sentences from clause-sized semantic representations. These two types of operators are portable and reusable because they are based on general resources such as the lexicon and the grammar.
Abstract-found: 1
Intro-found: 1
Reference: [Callaway and Lester, 1997] <author> Callaway, C. B. and Lester, J. C. </author> <title> Dynamically improving explanations: A revision-based approach to explanation generation. </title> <booktitle> In Proc. of the 15th IJCAI, </booktitle> <pages> pages 952-958, </pages> <address> Nagoya, Japan. </address>
Reference-contexts: Much generation literature on aggregation was disguised under the topic "revision" [Meteer, 1991, Robin, 1995] <ref> [Callaway and Lester, 1997] </ref>. We consider clause aggregation as an integral part of a text generation system, not as a revision. The term "revision" implies that something has been generated and then improved upon, which is not the case in these systems.
Reference: [Carpenter, 1998] <author> Carpenter, B. </author> <title> Distribution, collection and quantification: A type-logical account. </title> <note> To appear in Linguistics and Philosophy. </note>
Reference-contexts: Bob removed WordPerfect for John on Tuesday." Further discourse processing can replace the beneficiary"John" in the second sentence with a pronoun "him". 6 Related Work Both hypotactic and paratactic constructions described in this paper have received a lot of attention in linguistics <ref> [Quirk et al., 1985, Halliday, 1994, Carpenter, 1998] </ref>. Much generation literature on aggregation was disguised under the topic "revision" [Meteer, 1991, Robin, 1995] [Callaway and Lester, 1997]. We consider clause aggregation as an integral part of a text generation system, not as a revision.
Reference: [Dalal et al., 1996] <author> Dalal, M., Feiner, S., McKeown, K., Jordan, D., Allen, B., and alSafadi, Y. </author> <title> MAGIC: An experimental system for generating multimedia briefings about post-bypass patient status. </title> <booktitle> In Proc. 1996 AMIA Annual Fall Symp, </booktitle> <pages> pages 684-688, </pages> <address> Washington, DC. </address>
Reference-contexts: In contrast, parat-actic aggregation operators combine clauses together using constructions of equal status, such as coordination. Casper is used in two separate projects, MAGIC (Multimedia Abstract Generation for Intensive Care) and PLANDoc, to increase the fluency of the generated text. MAGIC <ref> [Dalal et al., 1996, McKeown et al., 1997] </ref> automatically generates multimedia briefings to describe the post-operative status of a patient after undergoing Coronary Artery Bypass Graft (CABG) surgery. It uses the existing computerized information infrastructure in the operating rooms at Columbia Presbyterian Medical Center.
Reference: [Dale, 1992] <author> Dale, R. </author> <title> Generating Referring Expressions: Constructing Descriptions in a Domain of Objects and Processes. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: We consider clause aggregation as an integral part of a text generation system, not as a revision. The term "revision" implies that something has been generated and then improved upon, which is not the case in these systems. We prefer the term optimization used by <ref> [Dale, 1992] </ref>, which describes the phenomenon of aggregation more appropriately it use fewer words to convey the same amount of information. In earlier systems, clause aggregations are implemented in strategic component [Mann and Moore, 1980, Dale, 1992, Horacek, 1992]. <p> We prefer the term optimization used by [Dale, 1992], which describes the phenomenon of aggregation more appropriately it use fewer words to convey the same amount of information. In earlier systems, clause aggregations are implemented in strategic component <ref> [Mann and Moore, 1980, Dale, 1992, Horacek, 1992] </ref>. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information.
Reference: [Dalianis and Hovy, 1993] <author> Dalianis, H. and Hovy, E. </author> <title> Aggregation in natural language generation. </title> <booktitle> In Proc. of the 4th European Workshop on Natural Language Generation, </booktitle> <address> Pisa, Italy. </address>
Reference: [Elhadad et al., 1997] <author> Elhadad, M., McKeown, K., and Robin, J. </author> <title> Floating constraints in lexical choice. </title> <journal> Computational Linguistics, </journal> <volume> 23(2) </volume> <pages> 195-239. </pages>
Reference-contexts: Even though the lexicon is accessed twice in our system, Casper prunes the search space drastically by delaying expensive detailed lexical decisions after it knows about how many concepts are involved in the desired sentence. Efficiency issues in generation were also addressed in <ref> [McDonald et al., 1987, Elhadad et al., 1997] </ref>. 5 Paratactic Operators We will use an imaginary human resource report system for a technical support team as an example to illustrate our paratactic algorithm. The example shown in Figure 4 has the following slots: PRED, ARG1, ARG2, MOD-BENEFICIARY, MOD-TIME.
Reference: [Halliday, 1994] <author> Halliday, M. A. K. </author> <title> An Introduction to Functional Grammar. </title> <publisher> Edward Arnold, </publisher> <address> London, 2nd edition. </address>
Reference-contexts: Bob removed WordPerfect for John on Tuesday." Further discourse processing can replace the beneficiary"John" in the second sentence with a pronoun "him". 6 Related Work Both hypotactic and paratactic constructions described in this paper have received a lot of attention in linguistics <ref> [Quirk et al., 1985, Halliday, 1994, Carpenter, 1998] </ref>. Much generation literature on aggregation was disguised under the topic "revision" [Meteer, 1991, Robin, 1995] [Callaway and Lester, 1997]. We consider clause aggregation as an integral part of a text generation system, not as a revision.
Reference: [Horacek, 1992] <author> Horacek, H. </author> <title> An integrated view of text planning. </title> <booktitle> In Aspects of Automated Natural Language Generation, Lecture Notes in Artificial Intelligence, </booktitle> <volume> 587, </volume> <pages> pages 29-44. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference-contexts: We prefer the term optimization used by [Dale, 1992], which describes the phenomenon of aggregation more appropriately it use fewer words to convey the same amount of information. In earlier systems, clause aggregations are implemented in strategic component <ref> [Mann and Moore, 1980, Dale, 1992, Horacek, 1992] </ref>. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information.
Reference: [Hovy, 1993] <author> Hovy, E. H. </author> <title> Automated discourse generation using discourse structure relations. </title> <journal> Artificial Intelligence, </journal> <note> 63. Special Issue on NLP. </note>
Reference-contexts: The analysis also indicates that people prefer using linguistic devices that are simpler (e.g., words over phrases over clauses) <ref> [Scott and de Souza, 1990, Hovy, 1993] </ref>. We encountered sentences from the corpus which could be formulated more concisely. The doctors did very little editing to the discharge summaries. In this respect, the summaries are somewhat similar to speech.
Reference: [Huang and Fiedler, 1997] <author> Huang, X. and Fiedler, A. </author> <title> Proof verbalization as an application of NLG. </title> <booktitle> In Proc. of the 15th IJCAI, </booktitle> <pages> pages 965-970, </pages> <address> Nagoya, Japan. </address>
Reference-contexts: In earlier systems, clause aggregations are implemented in strategic component [Mann and Moore, 1980, Dale, 1992, Horacek, 1992]. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information. Newer systems, such as <ref> [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997] </ref>, use a sentence planner to make decisions at clause level between the strategic and tactical component.
Reference: [Jackendoff, 1990] <author> Jackendoff, R. </author> <title> Semantic Structures. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: MAGIC, on the other hand, generates text off-line, with all the conveying information available. This would allow MAGIC to generate more concise text by taking advantage of linguistic opportunities. 3 Semantic Representation Casper uses a representation influenced by Lexical-Functional Grammar (LFG) [Kaplan and Bresnan, 1982] and Semantic Structures <ref> [Jackendoff, 1990] </ref>. An example of the semantic representation is provided in Figure 2. In our representation, the roles for each event or state are PRED, ARG1, ARG2, ARG3, and MOD. The slot PRED stores the verb concept.
Reference: [Kaplan and Bresnan, 1982] <author> Kaplan, R. M. and Bresnan, J. </author> <title> Lexical-functional grammar: A formal system for grammatical representation. </title> <editor> In Bresnan, J., editor, </editor> <title> The Mental Representation of Grammatical Relations, chapter 4. </title> <publisher> MIT Press. </publisher>
Reference-contexts: MAGIC, on the other hand, generates text off-line, with all the conveying information available. This would allow MAGIC to generate more concise text by taking advantage of linguistic opportunities. 3 Semantic Representation Casper uses a representation influenced by Lexical-Functional Grammar (LFG) <ref> [Kaplan and Bresnan, 1982] </ref> and Semantic Structures [Jackendoff, 1990]. An example of the semantic representation is provided in Figure 2. In our representation, the roles for each event or state are PRED, ARG1, ARG2, ARG3, and MOD. The slot PRED stores the verb concept.
Reference: [Kukich et al., 1994] <author> Kukich, K., McKeown, K., Shaw, J., Robin, J., Lim, J., Morgan, N., and Phillips, J. </author> <title> User-needs analysis and design methodology for an automated document generator. </title> <editor> In Zampolli, A., Calzolari, N., and Palmer, M., editors, Linguistica Computazionale, </editor> <volume> Vol. IX-X, </volume> <pages> pages 109-115. </pages> <publisher> Kluwer Academic Publishers, Norwell, </publisher> <address> MA. </address>
Reference-contexts: MAGIC [Dalal et al., 1996, McKeown et al., 1997] automatically generates multimedia briefings to describe the post-operative status of a patient after undergoing Coronary Artery Bypass Graft (CABG) surgery. It uses the existing computerized information infrastructure in the operating rooms at Columbia Presbyterian Medical Center. PLANDoc <ref> [Kukich et al., 1994, McKeown et al., 1994] </ref> generates English summaries based on somewhat cryptic traces of the interaction between planning engineers and LEIS-PLAN TM . It documents the timing, placement and cost of new facilities for routes in telephone networks.
Reference: [Mann and Moore, 1980] <author> Mann, W. C. and Moore, J. A. </author> <title> Computer as author results and prospects. </title> <type> Technical Report RR-79-82, </type> <institution> USC Information Science Institute, Marina del Rey, </institution> <address> CA. </address>
Reference-contexts: We prefer the term optimization used by [Dale, 1992], which describes the phenomenon of aggregation more appropriately it use fewer words to convey the same amount of information. In earlier systems, clause aggregations are implemented in strategic component <ref> [Mann and Moore, 1980, Dale, 1992, Horacek, 1992] </ref>. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information. <p> In earlier systems, clause aggregations are implemented in strategic component [Mann and Moore, 1980, Dale, 1992, Horacek, 1992]. Logical derivations were used to combine clauses and remove easily inferable clauses in <ref> [Mann and Moore, 1980] </ref>. In such systems, aggregation decisions are made without lexical information. Newer systems, such as [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997], use a sentence planner to make decisions at clause level between the strategic and tactical component.
Reference: [Mann and Thompson, 1986] <author> Mann, W. C. and Thompson, S. A. </author> <title> Rhetorical structure theory: Description and construction of text structures. </title> <type> Technical Report RS-86-174, </type> <institution> USC Information Sciences Institute, Marina Del Rey, </institution> <address> CA. </address>
Reference-contexts: Because it is unlikely that the inferential operators for our domains (medical briefings and telephone network plan descriptions) will be reusable for other applications, we have directed our effort into aggregation operations at other levels. At the rhetorical level, clauses are combined based on their rhetorical relationships <ref> [Mann and Thompson, 1986] </ref>, such as CONTRAST and CONDITION. We will take advantage of such information in future aggregation work. At the linguistic level, lexical and syntactic information are used to combine clauses.
Reference: [McCawley, 1981] <author> McCawley, J. D. </author> <title> Everything that linguists have always wanted to know about logic (but were ashamed to ask). </title> <publisher> University of Chicago Press. </publisher>
Reference-contexts: For example, the following sentence is the result of collapsing two propositions with distinct elements in their MOD-BENEFICIARY slot: "Alice installed Quicken for Mary and Peter on Tuesday." <ref> [McCawley, 1981] </ref> described this phenomenon as Conjunction Alice installed Excel for John on Monday. Bob removed WordPerfect for John on Tuesday. Alice installed Powerpoint for John on Monday. Cindy removed Access for John on Monday. Alice installed Excel for John on Monday. Alice installed Powerpoint for John on Monday.
Reference: [McDonald et al., 1987] <author> McDonald, D. D., Meteer, M. M., and Pustejovsky, J. D. </author> <title> Factors contributing to efficiency in natural language generation. </title> <editor> In Kempen, G., editor, </editor> <booktitle> Natural Language Generation: New Results in Artificial Intelligence, Psychology and Linguistics, NATO ASI Series - 135, </booktitle> <pages> pages 159-182. </pages> <publisher> Martinus Nijhoff Publishers, </publisher> <address> Boston. </address>
Reference-contexts: Even though the lexicon is accessed twice in our system, Casper prunes the search space drastically by delaying expensive detailed lexical decisions after it knows about how many concepts are involved in the desired sentence. Efficiency issues in generation were also addressed in <ref> [McDonald et al., 1987, Elhadad et al., 1997] </ref>. 5 Paratactic Operators We will use an imaginary human resource report system for a technical support team as an example to illustrate our paratactic algorithm. The example shown in Figure 4 has the following slots: PRED, ARG1, ARG2, MOD-BENEFICIARY, MOD-TIME.
Reference: [McKeown et al., 1994] <author> McKeown, K., Kukich, K., and Shaw, J. </author> <title> Practical issues in automatic documentation generation. </title> <booktitle> In Proc. of the 4th ACL Conference on Applied Natural Language Processing, </booktitle> <pages> pages 7-14, </pages> <address> Stuttgart. </address>
Reference-contexts: MAGIC [Dalal et al., 1996, McKeown et al., 1997] automatically generates multimedia briefings to describe the post-operative status of a patient after undergoing Coronary Artery Bypass Graft (CABG) surgery. It uses the existing computerized information infrastructure in the operating rooms at Columbia Presbyterian Medical Center. PLANDoc <ref> [Kukich et al., 1994, McKeown et al., 1994] </ref> generates English summaries based on somewhat cryptic traces of the interaction between planning engineers and LEIS-PLAN TM . It documents the timing, placement and cost of new facilities for routes in telephone networks.
Reference: [McKeown et al., 1997] <author> McKeown, K., Pan, S., Shaw, J., Jordan, D., and Allen, B. </author> <title> Language generation for multimedia healthcare briefings. </title> <booktitle> In Proc. of the Fifth ACL Conf. on ANLP, </booktitle> <pages> pages 277-282. </pages>
Reference-contexts: In contrast, parat-actic aggregation operators combine clauses together using constructions of equal status, such as coordination. Casper is used in two separate projects, MAGIC (Multimedia Abstract Generation for Intensive Care) and PLANDoc, to increase the fluency of the generated text. MAGIC <ref> [Dalal et al., 1996, McKeown et al., 1997] </ref> automatically generates multimedia briefings to describe the post-operative status of a patient after undergoing Coronary Artery Bypass Graft (CABG) surgery. It uses the existing computerized information infrastructure in the operating rooms at Columbia Presbyterian Medical Center.
Reference: [Meteer, 1991] <author> Meteer, M. </author> <title> The implications of revisions for natural language generation. In Paris, </title> <editor> C. L., Swartout, W. R., and Mann, W. C., editors, </editor> <booktitle> Natural Language Generation in Artificial Intelligence and Computational Linguistics, </booktitle> <pages> pages 155-178. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston. </address>
Reference-contexts: The goal of Casper is to produce a concise semantic representation for a set of propositions and to guarantee that there is at least one way to express the result in the later generation modules. To guarantee expressibility <ref> [Meteer, 1991] </ref>, Casper looks ahead into the lexicon, but it does not make detailed lexical decisions for efficiency reasons. The exact lexical and syntactic decisions, including the ordering between modifiers, are made later in the lexical chooser. Consider another proposition: "the patient has peptic ulcers". <p> Much generation literature on aggregation was disguised under the topic "revision" <ref> [Meteer, 1991, Robin, 1995] </ref> [Callaway and Lester, 1997]. We consider clause aggregation as an integral part of a text generation system, not as a revision. The term "revision" implies that something has been generated and then improved upon, which is not the case in these systems.
Reference: [Quirk et al., 1985] <author> Quirk, R., Greebaum, S., Leech, G., and Svartvik, J. </author> <title> A Comprehensive Grammar of the English Language. </title> <publisher> Longman Publishers, London. </publisher>
Reference-contexts: In 1f in Figure 3, "The patient's doctor has name Smith", is transformed into a PP ("of Smith"). The POSSESSOR modifier in ARG1, as shown in Figure 2, can be transformed into a PP using of-genitive <ref> [Quirk et al., 1985] </ref>. This phenomenon holds for relationships similar to patient/doctor, such as advisor/advisee, and boss/employee. All propositions can be transformed into a relative clause of another as long as they share a common entity. <p> Bob removed WordPerfect for John on Tuesday." Further discourse processing can replace the beneficiary"John" in the second sentence with a pronoun "him". 6 Related Work Both hypotactic and paratactic constructions described in this paper have received a lot of attention in linguistics <ref> [Quirk et al., 1985, Halliday, 1994, Carpenter, 1998] </ref>. Much generation literature on aggregation was disguised under the topic "revision" [Meteer, 1991, Robin, 1995] [Callaway and Lester, 1997]. We consider clause aggregation as an integral part of a text generation system, not as a revision.
Reference: [Robin, 1995] <author> Robin, J. </author> <title> Revision-Based Generation of Natural Language Summaries Providing Historical Background. </title> <type> PhD thesis, </type> <institution> Columbia University. </institution>
Reference-contexts: This prevents the lexical chooser from trying to combine incompatible clauses later. By determining sentence boundaries before carrying out detailed lexical decisions, Casper cuts down the search space of the lexical chooser drastically. In STREAK <ref> [Robin, 1995] </ref>, a generation system which also implements hypotactic aggregation, detailed lexical decisions are made whenever a proposition is aggregated. This is costly because the best lexical decisions for n propositions might not be useful or correct for n + 1 propositions. <p> Much generation literature on aggregation was disguised under the topic "revision" <ref> [Meteer, 1991, Robin, 1995] </ref> [Callaway and Lester, 1997]. We consider clause aggregation as an integral part of a text generation system, not as a revision. The term "revision" implies that something has been generated and then improved upon, which is not the case in these systems. <p> Newer systems, such as [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997], use a sentence planner to make decisions at clause level between the strategic and tactical component. With the exception of [Scott and de Souza, 1990] and <ref> [Robin, 1995] </ref>, most research in aggregation did not transform clauses into modifiers, such as adjectives, PP, or relative clauses, in a systematic manner. [Scott and de Souza, 1990] proposed heuristics for carrying out clause combining based on RST and specifically identified which rhetorical relations are appropriate for "embedding", which corresponds to
Reference: [Scott and de Souza, 1990] <author> Scott, D. R. and de Souza, C. S. </author> <title> Getting the message across in RST-based text generation. </title> <editor> In Dale, R., Mellish, C., and Zock, M., editors, </editor> <booktitle> Current Research in Natural Language Generation, </booktitle> <pages> pages 47-73. </pages> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference-contexts: The analysis also indicates that people prefer using linguistic devices that are simpler (e.g., words over phrases over clauses) <ref> [Scott and de Souza, 1990, Hovy, 1993] </ref>. We encountered sentences from the corpus which could be formulated more concisely. The doctors did very little editing to the discharge summaries. In this respect, the summaries are somewhat similar to speech. <p> Since the goal is to generate concise text, Casper prefers transforming a proposition into an adjective if possible, then a PP, a participle clause, and if all else fails, a relative clause. This preference of syntactically simple expressions over more complex ones was also proposed in <ref> [Scott and de Souza, 1990] </ref>. In the future, we plan to incorporate constraints from the corpus to determine which aggregation operators to apply and in what order. To transform a proposition into an adjective, a propositions must satisfy the following two preconditions. <p> In such systems, aggregation decisions are made without lexical information. Newer systems, such as [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997], use a sentence planner to make decisions at clause level between the strategic and tactical component. With the exception of <ref> [Scott and de Souza, 1990] </ref> and [Robin, 1995], most research in aggregation did not transform clauses into modifiers, such as adjectives, PP, or relative clauses, in a systematic manner. [Scott and de Souza, 1990] proposed heuristics for carrying out clause combining based on RST and specifically identified which rhetorical relations are <p> With the exception of <ref> [Scott and de Souza, 1990] </ref> and [Robin, 1995], most research in aggregation did not transform clauses into modifiers, such as adjectives, PP, or relative clauses, in a systematic manner. [Scott and de Souza, 1990] proposed heuristics for carrying out clause combining based on RST and specifically identified which rhetorical relations are appropriate for "embedding", which corresponds to our hypotactic operators. We will incorporate rhetorical aggregation in the future. Robin's work on revision operators is similar to ours.
Reference: [Shaw, 1995] <author> Shaw, J. </author> <title> Conciseness through aggregation in text generation. </title> <booktitle> In Proc. of the 33rd ACL (Student Session), </booktitle> <pages> pages 329-331. </pages>
Reference-contexts: In earlier systems, clause aggregations are implemented in strategic component [Mann and Moore, 1980, Dale, 1992, Horacek, 1992]. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information. Newer systems, such as <ref> [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997] </ref>, use a sentence planner to make decisions at clause level between the strategic and tactical component.
Reference: [Shaw, 1998] <author> Shaw, J. </author> <title> Segregatory coordination and ellipsis in text generation. </title> <booktitle> In To appear in Proc. of the 17th COLING and the 36th Annual Meeting of the ACL. </booktitle>
Reference-contexts: Due to limited space, we only describe the algorithm used in Casper to produce sentences with coordinations. For a more detailed discussion with relevant linguistic motivations, please see <ref> [Shaw, 1998] </ref>. We have divided the algorithm into four stages, where the first three stages take place in the sentence planner and the last stage takes place in the lexical chooser: Stage 1: group propositions and order them according to their similarities while satisfying pragmatic and contextual constraints.
Reference: [Tai, 1969] <author> Tai, J. H.-Y. </author> <title> Coordination Reduction. </title> <type> PhD thesis, </type> <institution> Indiana University. </institution>
Reference-contexts: On the other hand, if a slot is realized at the end position of a clause, the recurring elements in such slot delete backward, as the MOD-TIME in second example. Our extended directionality constraint, an extension of <ref> [Tai, 1969] </ref>'s Directionality Constraint, also applies to conjoined premodifiers and postmodifiers as well, as demonstrated by "in Aisle 3 and [in Aisle] 4", and "at 3 [PM] and [at] 9 PM".
Reference: [Wanner and Hovy, 1996] <author> Wanner, L. and Hovy, E. </author> <title> The HealthDoc sentence planner. </title> <booktitle> In Proc. of the 8th International Natural Language Generation Workshop, </booktitle> <pages> pages 1-10, </pages> <address> Sussex, UK. </address>
Reference-contexts: In earlier systems, clause aggregations are implemented in strategic component [Mann and Moore, 1980, Dale, 1992, Horacek, 1992]. Logical derivations were used to combine clauses and remove easily inferable clauses in [Mann and Moore, 1980]. In such systems, aggregation decisions are made without lexical information. Newer systems, such as <ref> [Shaw, 1995, Wanner and Hovy, 1996, Huang and Fiedler, 1997] </ref>, use a sentence planner to make decisions at clause level between the strategic and tactical component.
References-found: 27

