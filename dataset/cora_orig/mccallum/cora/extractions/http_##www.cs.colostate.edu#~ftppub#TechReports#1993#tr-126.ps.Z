URL: http://www.cs.colostate.edu/~ftppub/TechReports/1993/tr-126.ps.Z
Refering-URL: http://www.cs.colostate.edu/~ftppub/
Root-URL: 
Affiliation: Department of Computer Science Colorado State University  
Abstract: The Purdue Parallel Benchmarks in FP Randolph Bentson Technical Report CS-93-126 October 19, 1993 
Abstract-found: 1
Intro-found: 1
Reference: [AHO90] <author> K. Aziz, M. Haines, and R. R. Oldehoeft. </author> <title> Purdue Parallel Benchmarks in SISAL (Revised). </title> <type> Technical Report CS-90-101, </type> <institution> Department of Computer Science, Colorado State University, </institution> <year> 1990. </year>
Reference-contexts: Since the current implementation does not make the resultant sequence available until the entire distribution is done, the computation of the segments is delayed until distl has completed. The aa and "/ PFOs are similarly handicapped. In addition, the sequences are 1 Thanks to the authors of <ref> [AHO90] </ref> for permission to copy the text of the "Problem Description and Algorithm" sub-sections from their report. 8 operated on via a linear scan instead of a data-parallel or tree structured manner that would yield constant time or logarithmic time performance. <p> Again, the processing of sequences in PFOs and functions, especially trans, are suspect. 4.6 Problem 6 4.6.1 Problem Description and Algorithm The description of the algorithm was unavailable beyond its implementation in FORTRAN. 2 Again, thanks to the authors of <ref> [AHO90] </ref> for permission to copy much of this analysis from their report. 12 4.6.2 Inherent Parallelism While it is possible to solve a tridiagonal system, the "vector oriented algorithm of Jordan" contains trickery that involves violation of array bounds and some assumptions about storage that are wholely inappropriate in a language
Reference: [Amd67] <author> Gene Amdahl. </author> <title> The validity of the single processor approach to achieving large-scale computing capabilities. </title> <booktitle> In Proceedings of the 1967 AFIPS National Computer Conference, </booktitle> <pages> pages 483-485. </pages> <publisher> AFIPS, </publisher> <year> 1967. </year>
Reference-contexts: Additional dependent variables include the average and maximum number of active tasks, etc. Tests of of increasingly larger data sets shows that for any given data set size, adding processors and threads reduces execution time to a limit. As predicted by Amdahl's Law <ref> [Amd67] </ref>, there is always a threshold below which execution time cannot be reduced, regardless of the available parallel hardware. In "good" parallel programs, the degree of parallelism grows with the problem set size, and the effect of the sequential component is lessened.
Reference: [Ben92] <author> Randolph Bentson. </author> <title> The implementation of an FP system with parallel execution. </title> <type> Technical Report CS-92-108, </type> <institution> Department of Computer Science, Colorado State University, </institution> <year> 1992. </year>
Reference: [HHRO88] <author> T. Hanson, S. Harikrishnan, T. Richert, and R. Oldehoeft. </author> <title> The Purdue Parallel Benchmarks in SISAL. </title> <type> Technical Report CS-88-114, </type> <institution> Department of Computer Science, Colorado State University, </institution> <year> 1988. </year>
Reference: [Hou64] <author> A. S. </author> <title> Householder. The Theory of Matrices in Numerical Analysis. </title> <publisher> Blaisdell Publishing Company, </publisher> <address> New York, </address> <year> 1964. </year>
Reference-contexts: Then multiply this inverse times the B column-vectors." Houseman's method <ref> [Hou64] </ref> is similar in form to Newton's method of finding a root (but operates on matrices).
Reference: [MR87] <author> H. S. McFaddin and J. R. Rice. </author> <title> Parallel and Vector Problems on the FLEX/32. </title> <type> Technical Report CSD-TR-661, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1987. </year>
Reference: [Ric75] <author> J. R. Rice. </author> <title> A metalgorithm for adaptive quadrature. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 22, </volume> <year> 1975. </year>
Reference: [Ric76] <author> J. R. Rice. </author> <title> Parallel algorithms for adaptive quadrature III program correctness. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 2, </volume> <year> 1976. </year>
Reference: [Ric80] <author> John R. Rice. </author> <title> Problems to Test Parallel and Vector Languages. </title> <type> Technical Report CSD-TR 516, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1980. </year>
Reference: [RJ90] <author> John R. Rice and Jin Jing. </author> <title> Problems to Test Parallel and Vector Languages-II. </title> <type> Technical Report CSD-TR-1016, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1990. </year>
Reference-contexts: Parallelism grew as O (N ), so that parallel execution times grew approximately O (N ). A new implementation of trans and tree-structured sequences should offer significant improvement. 4.17 Problem 17 4.17.1 Problem Description and Algorithm The last Purdue technical report <ref> [RJ90] </ref> added a 17th problem adaptive quadrature. The report did not formally specify what was to be done, rather it referred to textbooks that discussed various implementations of AQ [Ric75],[Ric76]. 4.17.2 Inherent Parallelism Given truly independent parallelism not that of many SIMD systems AQ offers large, but irregular parallelism.
References-found: 10

