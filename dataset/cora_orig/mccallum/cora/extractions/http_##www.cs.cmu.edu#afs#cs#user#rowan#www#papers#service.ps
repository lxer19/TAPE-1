URL: http://www.cs.cmu.edu/afs/cs/user/rowan/www/papers/service.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/rowan/www/papers/abstracts.html
Root-URL: 
Date: May 27, 1997, 2:51 pm  
Note: Tuesday,  
Abstract: 1 Abstract. The WorldWide Web is rich in content and services, but access to these resources must be obtained mostly through manual browsers. We would like to be able to write programs that reproduce human browsing behavior, including reactions to slow transmission-rates and failures on many simultaneous links. We thus introduce a concurrent model that directly incorporates the notions of failure and rate of communication, and then de scribe programming constructs based on this model.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Borenstein, N., and N. Freed, </author> <title> MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies, </title> <type> RFC 1521, </type> <institution> Bellcore, Innosoft, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: There are plenty of available processors (Web servers) that can be seen as distributed objects that protect and dispense encapsulated data (e.g., local databases). Finally, there are some nice visual debuggers (Web browsers). 3. HyperText Markup Language [3, 7] 4. Multipurpose Internet Mail Extension <ref> [1, 7] </ref> 5. Common Gateway Interface [7] Every algorithmic behavior should be scriptable. 4 Tuesday, May 27, 1997, 2:51 pm What programming language features could correspond to this runtime system? What could a Web language look like? Let's try to imagine it.
Reference: [2] <author> Berners-Lee, T., R. Cailliau, A. Luotonen, H. F. Nielsen, and A. </author> <title> Secret: The WorldWide Web. </title> <journal> CACM 37(8): </journal> <pages> 76-82, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction The WorldWide Web <ref> [ 2] </ref> is a uniform, highly interconnected collection of computational resources, and as such it can be considered as forming a single global computer.
Reference: [3] <author> Berners-Lee, T., and D. Connolly, </author> <title> Hypertext Markup Language - 2.0 , RFC 1866, </title> <address> MIT/W3C, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: There are plenty of available processors (Web servers) that can be seen as distributed objects that protect and dispense encapsulated data (e.g., local databases). Finally, there are some nice visual debuggers (Web browsers). 3. HyperText Markup Language <ref> [3, 7] </ref> 4. Multipurpose Internet Mail Extension [1, 7] 5. Common Gateway Interface [7] Every algorithmic behavior should be scriptable. 4 Tuesday, May 27, 1997, 2:51 pm What programming language features could correspond to this runtime system? What could a Web language look like? Let's try to imagine it.
Reference: [4] <author> Berners-Lee, T., R. Fielding, and H. Frystyk, </author> <title> Hypertext Transfer Protocol - HTTP/ 1.0, RFC 1945, </title> <address> MIT/UC Irvine, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: The HyperText Transfer Protocol is the Webs communication protocol <ref> [4, 7, 8] </ref>. Tuesday, May 27, 1997, 2:51 pm 3 Hal carries out a preliminary search for some document, and discovers that the document (say, a big postscript file) is available at four servers: in Japan, Australia, North America, and Europe.
Reference: [5] <author> Gordon, M., R. Milner, and C. </author> <title> Wadsworth, </title> <booktitle> Edinburgh LCF . Lecture Notes in Computer Science 78. </booktitle> <publisher> Springer-Verlag. </publisher> <year> 1979. </year>
Reference-contexts: The error recovery policy and concurrency are thus modularly embedded inside each service. The idea of handling failures with combinators comes, in a sequential context, from LCF tactics <ref> [5] </ref>. 2.1 Services A Web server is an unreliable provider of data: any request for a service has a relatively high probability of failing or of being unacceptably slow. Different servers, though, may provide the same or similar services.
Reference: [6] <author> Gosling, J., B. Joy, and G. Steele, </author> <title> The Java Language Specification. </title> <address> Addison-Wes-ley. </address> <year> 1996. </year>
Reference-contexts: This implementation is written in Java <ref> [6] </ref>. The implementation also provides an easy interface for programming with service combinators directly from Java.
Reference: [7] <institution> Internet Engineering Task Force, Internet Standards. The Internet Society, &lt;http: </institution> <note> //www.isoc.org&gt;. 1997. </note>
Reference-contexts: Even when a pointer denotes the same value, it does not always pro 1. Uniform Resource Locator <ref> [7, 8] </ref> Service Combinators for Web Computing Luca Cardelli Digital Equipment Corporation Systems Research Center Rowan Davies Carnegie-Mellon University School of Computer Science 2 Tuesday, May 27, 1997, 2:51 pm vide the same quality of access as it did in a previous access. <p> The HyperText Transfer Protocol is the Webs communication protocol <ref> [4, 7, 8] </ref>. Tuesday, May 27, 1997, 2:51 pm 3 Hal carries out a preliminary search for some document, and discovers that the document (say, a big postscript file) is available at four servers: in Japan, Australia, North America, and Europe. <p> There are plenty of available processors (Web servers) that can be seen as distributed objects that protect and dispense encapsulated data (e.g., local databases). Finally, there are some nice visual debuggers (Web browsers). 3. HyperText Markup Language <ref> [3, 7] </ref> 4. Multipurpose Internet Mail Extension [1, 7] 5. Common Gateway Interface [7] Every algorithmic behavior should be scriptable. 4 Tuesday, May 27, 1997, 2:51 pm What programming language features could correspond to this runtime system? What could a Web language look like? Let's try to imagine it. <p> There are plenty of available processors (Web servers) that can be seen as distributed objects that protect and dispense encapsulated data (e.g., local databases). Finally, there are some nice visual debuggers (Web browsers). 3. HyperText Markup Language [3, 7] 4. Multipurpose Internet Mail Extension <ref> [1, 7] </ref> 5. Common Gateway Interface [7] Every algorithmic behavior should be scriptable. 4 Tuesday, May 27, 1997, 2:51 pm What programming language features could correspond to this runtime system? What could a Web language look like? Let's try to imagine it. <p> Finally, there are some nice visual debuggers (Web browsers). 3. HyperText Markup Language [3, 7] 4. Multipurpose Internet Mail Extension [1, 7] 5. Common Gateway Interface <ref> [7] </ref> Every algorithmic behavior should be scriptable. 4 Tuesday, May 27, 1997, 2:51 pm What programming language features could correspond to this runtime system? What could a Web language look like? Let's try to imagine it.
Reference: [8] <institution> World Wide Web Consortium, </institution> <note> HTTP - Hypertext Transfer Protocol , &lt;http:// www.w3.org/pub/WWW/Protocols/&gt;. 1997. </note>
Reference-contexts: Even when a pointer denotes the same value, it does not always pro 1. Uniform Resource Locator <ref> [7, 8] </ref> Service Combinators for Web Computing Luca Cardelli Digital Equipment Corporation Systems Research Center Rowan Davies Carnegie-Mellon University School of Computer Science 2 Tuesday, May 27, 1997, 2:51 pm vide the same quality of access as it did in a previous access. <p> The HyperText Transfer Protocol is the Webs communication protocol <ref> [4, 7, 8] </ref>. Tuesday, May 27, 1997, 2:51 pm 3 Hal carries out a preliminary search for some document, and discovers that the document (say, a big postscript file) is available at four servers: in Japan, Australia, North America, and Europe.
References-found: 8

