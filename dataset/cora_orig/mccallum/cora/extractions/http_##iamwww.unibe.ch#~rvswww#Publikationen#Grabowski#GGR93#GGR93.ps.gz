URL: http://iamwww.unibe.ch/~rvswww/Publikationen/Grabowski/GGR93/GGR93.ps.gz
Refering-URL: http://iamwww.unibe.ch/~rvswww/Publikationen/index.html
Root-URL: 
Title: The Standardization of Message Sequence Charts  
Author: Jens Grabowski Peter Graubmann, Ekkart Rudolph 
Address: ZFE BT SE Langgassstrasse 51 Otto-Hahn-Ring 6 CH-3012 Bern D-W8000 Munchen 83  
Affiliation: Universitat Bern Siemens AG Munchen,  
Abstract: In this paper the most relevant issues of the standardization of the Message Sequence Chart (MSC) language within the CCITT Study Group X are discussed. The history of the new MSC recommendation Z.120 is sketched. Different types of diagrams which are closely related to MSCs are compared, since they build the basis for the MSC language. We distinguish these diagrams from the standardized MSC language by using the term Sequence Charts (SCs). Subsequently, the MSC language is introduced and several approaches towards a forthcoming formal MSC semantics are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Belina, F.: </author> <title> SDL Methodology Guidelines, CCITT, </title> <address> Geneva, </address> <month> May </month> <year> 1992 </year>
Reference-contexts: CCITT, ISO/IEC) have defined their own variants of SCs, e.g. arrow diagrams, information flow diagrams, or time sequence diagrams. They are applied in standard definitions (e.g. parts of ISDN [15, 14]) or used to illustrate standards specified by formal description techniques like SDL, Estelle, or LO-TOS <ref> [1] </ref>. The various sorts of SCs mainly differ with respect to syntax and terminology. There are only minor semantic differences [18] and hence, a standardization is feasible. <p> In Helsinki it was not yet decided to prepare a separate recommendation for MSCs. The standardization activities for MSCs were intended to be part of the new "SDL Methodology Guidelines" <ref> [1] </ref>, which were aiming at a guideline for the effective use of SDL. Soon after, however, it was recognised that the standardization of MSCs would go beyond the SDL guidelines and it was also felt that MSCs should not be related only to SDL. <p> It also demonstrates that an MSC describing one possible scenario can be looked at as an SDL skeleton <ref> [1, 7] </ref>. 4.2 MSC/PR and MSC/GR Analogous to the SDL recommendation [19] the new MSC recommendation includes two syntactical forms, MSC/PR as a pure textual and MSC/GR as a graphical representation. An MSC in MSC/GR representation can be transformed easily into a corresponding MSC/PR representation. <p> To determine possible combinations the already introduced (global and nonglobal) conditions can be used employing certain composition and decomposition rules. The presented rules are not yet part of [21] but it is intended to include them in the future. Presently they are part of the SDL methodology guidelines <ref> [1] </ref>. 4.5.1 The meaning of composition and de composition of MSCs MSCs can be composed by name identification of final and initial (global or nonglobal) conditions.
Reference: [2] <author> Belina, F.; Hogrefe, D.; Sarma, A.: </author> <title> SDL with Applications from Protocol Specification, </title> <publisher> Prentice Hall International (UK) Ltd., </publisher> <year> 1991 </year>
Reference-contexts: We explain the meaning of an MSC by relating it to SDL process diagrams <ref> [2, 19] </ref>. Let us consider the MSC in fig. 9 which describes a selected trace piece of the connection set-up in the Inres service specification [10].
Reference: [3] <author> Richlinie P30305-X185-B6-2-35, EWSD Software-Entwicklungshandbuch, </author> <title> Kap. B, </title> <type> Register 6, </type> <institution> SDL-Diagramme, Siemens AG, </institution> <year> 1988 </year>
Reference-contexts: The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to <ref> [3] </ref>, Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. <p> Actions shown above a line representing a message emission must be completed prior to the emission. For an actions shown immediately below a line representing a message emission no constraint on the relative ordering of emission and action is intended. 3.6 Sequence Charts for EWSD Sequence Charts according to <ref> [3] </ref> (EWSD-SCs) are employed at the Siemens AG (Germany) for the specific needs of the EWSD (Elektronisches Wahlsystem Digital) system development. EWSD-SCs show the communication links between entities like blocks, processes, services, and environments. Entities are represented by columns. Horizontal arrows denote communication links.
Reference: [4] <author> Cockburn, A.A.R.; Citrin, W.; Hauser, R.F.; von Kanel, J.: </author> <title> An Environment for Interactive Design of Communication Architectures, </title> <institution> IBM research division, Zurich Research Laboratry, </institution> <year> 1990 </year>
Reference-contexts: The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams <ref> [4] </ref>, Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. It was the aim of the MSC standardization that MSC should cover the most common language concepts of various SC variants. <p> Also there exist a possibility to parameterize messages and conditions. Special symbols may be used to express time delay or time supervision. 3.7 Message Flow Diagrams Message Flow Diagrams (MFDs) are the user interface of the CARA system <ref> [4] </ref> for developing protocol specifications. A MFD shows the message flow between protocol entities (PEs) which are represented by vertical lines. Messages are represented by arrows. They are sent and received at ports which are owned by PEs. Messages are transmitted via so-called links.
Reference: [5] <author> Graubmann, P.; Rudolph, E.; Grabowski, J.: </author> <title> Towards a Petri Net Based Semantics Definition for Message Sequence Charts, </title> <booktitle> Proceedings of the 6th SDL Forum, </booktitle> <year> 1993 </year>
Reference-contexts: The approach discussed first (section 5.1) uses an interleaving model and is based on finite automata [6, 12]. The second approach (section 5.2) adopted a full partial order representation for system traces and is based on Petri net theory <ref> [5] </ref>. The third approach (section 5.3) again applies an interleaving model and is based on process algebra [13]. 5.1 An automaton semantics for MSCs Formally, a single MSC can be interpreted as a graph with two sorts of edges. The nodes represent communication events, e.g. message sending and message consumption. <p> According to the chosen set of end states it is possible to analyse MSCs under various points of view. 5.2 A Petri Net based MSC semantics A second approach towards a formal MSC semantics is based on Petri net theory <ref> [5] </ref>. As the idea of partial ordering of signalling and instance events was one of the leading principles during the definition of MSCs, occurrence nets which are the Petri net way of presenting partial orderings seem to be particularly well suited for a basis of MSC semantics. <p> During this construction process the labelling of the net elements takes over a considerable amount of information which ensures the correct identification of corresponding net elements. A list of the elementary net constructs that are used for the transformation of MSC language elements is given in <ref> [5] </ref>. A detailed description of the necessary labelling, its generation from the MSC syntax and the definition of the construction process is also to be found there. 5.3 A process algebra semantics for MSCs As mentioned in section 3.8 for Synchronous Inter-workings (IWs) a formal semantics is defined [13].
Reference: [6] <author> Grabowski, J.; Hogrefe, D.; Ladkin, P.; Leue, S.; Nahm, R.: </author> <title> Conformance Testing ATool for the Generation of Test Cases, Interim report of the F&E project contract no. </title> <type> 233, </type> <institution> funded by Swiss PTT, University of Berne, </institution> <month> May </month> <year> 1992 </year>
Reference-contexts: They can be considered the starting points from which the MSC semantics discussion within CCITT SG X will proceed. The approach discussed first (section 5.1) uses an interleaving model and is based on finite automata <ref> [6, 12] </ref>. The second approach (section 5.2) adopted a full partial order representation for system traces and is based on Petri net theory [5]. <p> Unfortunately there is no unique suitable end-state set that turns a GSTG into a Buchi automaton. Instead, various possible end-state sets correspond to liveness properties of MSCs. Examples of such sets are given in <ref> [6] </ref> and [12]. The main advantage of the sketched semantics approach and the hereupon based MSC semantics is its flexibility.
Reference: [7] <author> Grabowski, J.; Rudolph, E.: </author> <title> Putting Extended Sequence Charts to Practice, SDL'89 The Language at Work - O. </title> <editor> Faergemand and M. M. Marques (Editors), </editor> <publisher> North-Holland, </publisher> <year> 1989 </year>
Reference-contexts: SCs have been used successfully in industry and standardization bodies. In industry, SCs are used mainly as a requirement language to define crucial system traces and as a test case description language. Beyond that, SCs with additional concepts, in particular those enhanced by SDL language elements <ref> [7] </ref> or SC composition mechanisms [8], offer methods for developing SDL specifications, which serve as the basis for an implementation. Several working groups within standardization bodies (e.g. CCITT, ISO/IEC) have defined their own variants of SCs, e.g. arrow diagrams, information flow diagrams, or time sequence diagrams. <p> This was pointed out at the SDL Forum 1989 in Lisbon within the paper "Putting Extended Sequence Charts to Practice" <ref> [7] </ref>. The terminology Extended Sequence Charts (ESC) was used for SCs enhanced by SDL symbols and a few further constructs. ESCs were presented as a means for stepwise refinement and enrichment of SCs from which finally SDL specifications may be derived. <p> The investigated SCs are Extended Sequence Charts <ref> [7] </ref>, Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. <p> Asynchronous communication means that a message must be sent before it can be received and be received before it can be consumed. Synchronous communication describes a simultaneous sending and consumption of a message. 3.2 Extended Sequence Charts Extended Sequence Charts (ESCs) are described within <ref> [7] </ref>. The authors define three sorts of ESCs, namely the standard form, the state form and the state input form, which provide a four step method to develop (a) ESC standard form (b) ESC state form (c) ESC state input form SDL specifications. <p> It also demonstrates that an MSC describing one possible scenario can be looked at as an SDL skeleton <ref> [1, 7] </ref>. 4.2 MSC/PR and MSC/GR Analogous to the SDL recommendation [19] the new MSC recommendation includes two syntactical forms, MSC/PR as a pure textual and MSC/GR as a graphical representation. An MSC in MSC/GR representation can be transformed easily into a corresponding MSC/PR representation.
Reference: [8] <author> Grabowski, J.; Graubmann, P.; Rudolph, E.: </author> <title> Towards an SDL-Design-Methodology Using Sequence Chart Segments, SDL'91 Evolving Methods - O. </title> <editor> Faergemand and R. Reed (Editors), </editor> <publisher> North-Holland, </publisher> <year> 1991 </year>
Reference-contexts: In industry, SCs are used mainly as a requirement language to define crucial system traces and as a test case description language. Beyond that, SCs with additional concepts, in particular those enhanced by SDL language elements [7] or SC composition mechanisms <ref> [8] </ref>, offer methods for developing SDL specifications, which serve as the basis for an implementation. Several working groups within standardization bodies (e.g. CCITT, ISO/IEC) have defined their own variants of SCs, e.g. arrow diagrams, information flow diagrams, or time sequence diagrams.
Reference: [9] <author> Hogrefe, D.: </author> <title> Automatic Generation of Test Cases from SDL Specifications, </title> <type> CCITT SDL Newsletter 12, </type> <year> 1988 </year>
Reference-contexts: Generally, the relation between an MSC and an SDL specification can be characterised in the following way (for ACT cf. <ref> [9] </ref>): "Each sequentialization of an MSC describes a trace from one equivalence class of nodes to another equivalence class of nodes of an Asynchronous Communication Tree (ACT) presenting the behaviour of an SDL specification." In any case the correspondence between fig. 8 and fig. 9 may serve to give a good
Reference: [10] <author> Hogrefe, D.: </author> <title> OSI Formal Specification Case Study: the Inres Protocol and Service, </title> <type> Technical report IAM-91-012, </type> <institution> University of Berne, </institution> <month> May </month> <year> 1992 </year>
Reference-contexts: We explain the meaning of an MSC by relating it to SDL process diagrams [2, 19]. Let us consider the MSC in fig. 9 which describes a selected trace piece of the connection set-up in the Inres service specification <ref> [10] </ref>. It could equally be represented using SDL process diagrams with certain additions and modifications (fig. 8, dashed symbols stand for not followed branches, bold-lined arrows indicate the message flow). The diagram in fig. 8 contains at least the same information as the MSC in fig. 9.
Reference: [11] <author> ISO/IEC JTC 1/SC 21: </author> <title> Revised Text of CD 10731, Information Technology - OSI Service Conventions, </title> <address> ISO/IEC JTC 1/SC 21 N 6341, </address> <month> Januray </month> <year> 1991 </year>
Reference-contexts: The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to <ref> [11] </ref>, Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. <p> The input is used in addition to the message symbol to distinguish between reception (i.e. queue entry) and consumption of a message. This distinction allows the description of special SDL situations like crossing or overtaking of messages. 3.3 Time Sequence Diagrams Time Sequence Diagrams (TSDs) according to <ref> [11] </ref> are used for describing OSI services (fig. 2). They illustrate how sequences of interactions between service users and a service provider are related in time. Every service user has its own local view on the service provider. The local views are represented by vertical axes.
Reference: [12] <author> Ladkin, P. B.; Leue, S.: </author> <title> Interpreting Message Sequence Charts, </title> <journal> IBM Computer Science Research Report, </journal> <volume> RJ 8965 (80241) September 18, </volume> <year> 1992 </year>
Reference-contexts: They can be considered the starting points from which the MSC semantics discussion within CCITT SG X will proceed. The approach discussed first (section 5.1) uses an interleaving model and is based on finite automata <ref> [6, 12] </ref>. The second approach (section 5.2) adopted a full partial order representation for system traces and is based on Petri net theory [5]. <p> Unfortunately there is no unique suitable end-state set that turns a GSTG into a Buchi automaton. Instead, various possible end-state sets correspond to liveness properties of MSCs. Examples of such sets are given in [6] and <ref> [12] </ref>. The main advantage of the sketched semantics approach and the hereupon based MSC semantics is its flexibility.
Reference: [13] <author> Mauw, S.; van Wijk, M.; Winter, T.: </author> <title> Syntax and Semantics of Synchronous Interworkings, CCITT SG X Interims Meeting, </title> <address> Geneva, </address> <year> 1992 </year>
Reference-contexts: The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings <ref> [13] </ref> and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. It was the aim of the MSC standardization that MSC should cover the most common language concepts of various SC variants. <p> Based on CRS a formal semantics for MFDs is defined. It is given by the formalism used to map the graphical MFD language into a CRS and the interpreter of the CRS within the CARA system. 3.8 Synchronous Interworkings Synchronous Interworkings (IWs) <ref> [13] </ref> are used in the requirement phase of the development process at PKI Nurnberg (Germany) for describing the message inter actions between functional blocks. For IWs a graphical and a textual representation is defined (fig. 6). <p> The second approach (section 5.2) adopted a full partial order representation for system traces and is based on Petri net theory [5]. The third approach (section 5.3) again applies an interleaving model and is based on process algebra <ref> [13] </ref>. 5.1 An automaton semantics for MSCs Formally, a single MSC can be interpreted as a graph with two sorts of edges. The nodes represent communication events, e.g. message sending and message consumption. The edges denote the next-event and the signal relation. <p> A detailed description of the necessary labelling, its generation from the MSC syntax and the definition of the construction process is also to be found there. 5.3 A process algebra semantics for MSCs As mentioned in section 3.8 for Synchronous Inter-workings (IWs) a formal semantics is defined <ref> [13] </ref>. The semantics is used to process, analyse, and combine IWs. Within an IW a message interaction between two entities can be split into two different events: the output and the input of the message. But contrary to MSCs, within IWs communication is meant to be synchronous.
Reference: [14] <author> CCITT Recommendation Q.65: </author> <title> Stage 2 of the method for the characterization of services supported by an ISDN, </title> <address> Geneva, </address> <year> 1988 </year>
Reference-contexts: Several working groups within standardization bodies (e.g. CCITT, ISO/IEC) have defined their own variants of SCs, e.g. arrow diagrams, information flow diagrams, or time sequence diagrams. They are applied in standard definitions (e.g. parts of ISDN <ref> [15, 14] </ref>) or used to illustrate standards specified by formal description techniques like SDL, Estelle, or LO-TOS [1]. The various sorts of SCs mainly differ with respect to syntax and terminology. There are only minor semantic differences [18] and hence, a standardization is feasible. <p> These concepts were elaborated until the CCITT meeting in Recife, Dec. 1991. The language constructs were adjusted to cover the needs of other CCITT recommendations employing Message-, Signal-, or Information-Flow Diagrams. Particularly recommendation Q.65: "Stage 2 of the method for the charac-terisation of services supported by an ISDN" <ref> [14] </ref> was involved. Q.65 is fundamental for other recommendations in this area. At the CCITT meeting in Recife also the form of the draft MSC recommendation was modified to get in accordance with the SDL recommendation [19]. <p> The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams <ref> [14] </ref>, Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. <p> Fig. 3 shows an arrow diagram containing a complete IE and part of a second IE. An AD may include more than one complete IE. 3.5 Information Flow Diagrams Information Flow Diagrams (IFDs) <ref> [14] </ref> are used within stage 2 of the overall method for deriving switching and signalling recommendations for ISDN services. They are closely related to TSDs (cf. section 3.3). An IFD (fig. 4) shows the information exchange of functional entities (FEs) which are represented by columns.
Reference: [15] <author> CCITT Recommendation Q.699: </author> <title> Interworking between the Digital Subscriber System Layer 3 Protocol and the Signalling System No. 7 ISDN User Part, </title> <address> Geneva, </address> <year> 1988 </year>
Reference-contexts: Several working groups within standardization bodies (e.g. CCITT, ISO/IEC) have defined their own variants of SCs, e.g. arrow diagrams, information flow diagrams, or time sequence diagrams. They are applied in standard definitions (e.g. parts of ISDN <ref> [15, 14] </ref>) or used to illustrate standards specified by formal description techniques like SDL, Estelle, or LO-TOS [1]. The various sorts of SCs mainly differ with respect to syntax and terminology. There are only minor semantic differences [18] and hence, a standardization is feasible. <p> The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to <ref> [15] </ref>, Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs [16]. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. <p> Where useful, a TSD indicates a relationship existing among local views by means of lines joining the circles representing these local views. 3.4 Arrow Diagrams Arrow Diagrams (ADs) or Time Sequence Diagrams according to CCITT recommendation Q.699 <ref> [15] </ref> are used to describe the interworking between the digital subscriber signalling system layer 3 protocol and the signalling system no. 7 ISDN user part. <p> Furthermore, a collection of CC actions and functions performed on transmission or reception of a signalling message are formulated by means of special symbols (which can be found in <ref> [15] </ref>). IEs may communicate with other IEs by means of so-called signalling messages. Signalling messages are represented by solid arrows and can only be exchanged between the ISS and OSS entities of different IEs. Fig. 3 shows an arrow diagram containing a complete IE and part of a second IE.
Reference: [16] <author> Siemens AG (Germany): </author> <title> Comments on Recommendation Z.120 Message Sequence Chart (MSC), CCITT SG X Interims Meeting, </title> <address> Geneva, </address> <year> 1992 </year>
Reference-contexts: The investigated SCs are Extended Sequence Charts [7], Time Sequence Diagrams according to [11], Arrow Diagrams according to [15], Information Flow Diagrams [14], Sequence Charts according to [3], Message Flow Diagrams [4], Synchronous Interworkings [13] and Siemens-SCs <ref> [16] </ref>. At the end of this chapter similarities and differences of the investigated SC variants are summarized in tabular form. It was the aim of the MSC standardization that MSC should cover the most common language concepts of various SC variants. <p> For IWs a formal semantics definition exists which is explained in section 5.3. 3.9 Siemens-SC At an CCITT SG X meeting in Geneva, Nov. 92, the Siemens AG (Germany) presented another SC variant which we name Siemens-SC <ref> [16] </ref>. Within Siemens-SCs communicating entities are represented by vertical axes. They offer facilities for describing synchronous and asynchronous communication by means of dashed and solid arrows. Furthermore, there exist symbols to represent actions, timer sets, time-outs and conditions (symbols to denote system states).
Reference: [17] <author> Thomas, W.: </author> <title> Automata on Infinite Objects, </title> <booktitle> in Handbook of Theoretical Computer Science, Else-vier Science Publisher, </booktitle> <year> 1990 </year>
Reference-contexts: In this case, the whole set of MSCs is translated into a single ne/sig graph, which may contain event loops and nondeterministic choices. To find proper end states a termination criterion from !-automata theory, due to Buchi <ref> [17] </ref>, is used. Unfortunately there is no unique suitable end-state set that turns a GSTG into a Buchi automaton. Instead, various possible end-state sets correspond to liveness properties of MSCs. Examples of such sets are given in [6] and [12].
Reference: [18] <author> Toggweiler, D.: </author> <title> TTCN-Testfallgenerierung fur mit Sequence Charts spezifizierte verteilte Sys-teme, </title> <institution> University of Berne, Diploma thesis, </institution> <year> 1992 </year>
Reference-contexts: They are applied in standard definitions (e.g. parts of ISDN [15, 14]) or used to illustrate standards specified by formal description techniques like SDL, Estelle, or LO-TOS [1]. The various sorts of SCs mainly differ with respect to syntax and terminology. There are only minor semantic differences <ref> [18] </ref> and hence, a standardization is feasible.
Reference: [19] <author> CCITT Recommendation Z.100: </author> <title> Specification and Description Language (SDL), </title> <address> Geneva, </address> <year> 1992 </year>
Reference-contexts: One of the reasons for this restriction, especially to refrain from adding SDL symbols to MSCs, was to avoid too much overlap with SDL <ref> [19] </ref>. In Helsinki it was not yet decided to prepare a separate recommendation for MSCs. The standardization activities for MSCs were intended to be part of the new "SDL Methodology Guidelines" [1], which were aiming at a guideline for the effective use of SDL. <p> Q.65 is fundamental for other recommendations in this area. At the CCITT meeting in Recife also the form of the draft MSC recommendation was modified to get in accordance with the SDL recommendation <ref> [19] </ref>. At the closing session of the CCITT study period 1989 - 1992 in Geneva, May 1992, the new MSC recommendation Z.120 was approved [21]. The work on MSCs in the current CCITT study period 1993 - 1996 started at a CCITT SG X interims meeting in Geneva, Nov. 1992. <p> We explain the meaning of an MSC by relating it to SDL process diagrams <ref> [2, 19] </ref>. Let us consider the MSC in fig. 9 which describes a selected trace piece of the connection set-up in the Inres service specification [10]. <p> It also demonstrates that an MSC describing one possible scenario can be looked at as an SDL skeleton [1, 7]. 4.2 MSC/PR and MSC/GR Analogous to the SDL recommendation <ref> [19] </ref> the new MSC recommendation includes two syntactical forms, MSC/PR as a pure textual and MSC/GR as a graphical representation. An MSC in MSC/GR representation can be transformed easily into a corresponding MSC/PR representation.
Reference: [20] <author> CCITT Recommendation Z.100: </author> <title> Specification and Description Language (SDL) Annex D: SDL User Guidelines, </title> <address> Geneva, </address> <year> 1988 </year>
Reference-contexts: It is based on the family of non standardized SC types, but also includes some additional features like submsc and coregion. 2 The history of the MSC language Within the SDL user guidelines of 1988 <ref> [20] </ref> only a short section has been devoted to SCs as one of the auxiliary diagrams, though SCs may very well play an important role. This was pointed out at the SDL Forum 1989 in Lisbon within the paper "Putting Extended Sequence Charts to Practice" [7].
Reference: [21] <author> CCITT Recommendation Z.120: </author> <title> Message Sequence Chart (MSC), </title> <address> Geneva, </address> <year> 1992 </year>
Reference-contexts: Since there is a need to provide a more formal basis for SCs and to harmonize their use within industry and standardization bodies, the CCITT Study Group X (CCITT SG X) developed the Message Sequence Chart (MSC) recommendation Z.120 <ref> [21] </ref> from 1989 - 1992. <p> At the CCITT meeting in Recife also the form of the draft MSC recommendation was modified to get in accordance with the SDL recommendation [19]. At the closing session of the CCITT study period 1989 - 1992 in Geneva, May 1992, the new MSC recommendation Z.120 was approved <ref> [21] </ref>. The work on MSCs in the current CCITT study period 1993 - 1996 started at a CCITT SG X interims meeting in Geneva, Nov. 1992. <p> To determine possible combinations the already introduced (global and nonglobal) conditions can be used employing certain composition and decomposition rules. The presented rules are not yet part of <ref> [21] </ref> but it is intended to include them in the future. Presently they are part of the SDL methodology guidelines [1]. 4.5.1 The meaning of composition and de composition of MSCs MSCs can be composed by name identification of final and initial (global or nonglobal) conditions. <p> Consequently, MSC activities during the study period 1993 - 1996 will concentrate on a formal semantics definition, resulting in a revision of <ref> [21] </ref>. Enhancements, however, will not be included before 1996. One major step towards an formal description technique can be seen in the inclusion of formal data description. Further possible enhancements of MSCs refer to concepts for abstraction, structuring, composition and object oriented modelling.
References-found: 21

