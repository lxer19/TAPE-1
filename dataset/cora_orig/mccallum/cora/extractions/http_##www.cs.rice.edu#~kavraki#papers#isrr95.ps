URL: http://www.cs.rice.edu/~kavraki/papers/isrr95.ps
Refering-URL: http://www.cs.rice.edu/~kavraki/
Root-URL: 
Title: A Random Sampling Scheme for Path Planning  
Author: Jerome Barraquand Lydia Kavraki Jean-Claude Latombe Tsai-Yen Li Rajeev Motwani Prabhakar Raghavan 
Abstract: Several randomized path planners have been proposed during the last few years. Their attractiveness stems from their applicability to virtually any type of robots, and their empirically observed success. In this paper we attempt to present a unifying view of these planners and to theoretically explain their success. First, we introduce a general planning scheme that consists of randomly sampling the robot's configuration space. We then describe two previously developed planners as instances of planners based on this scheme, but applying very different sampling strategies. These planners are probabilistically complete: if a path exists, they will find one with high probability, if we let them run long enough. Next, for one of the planners, we analyze the relation between the probability of failure and the running time. Under assumptions characterizing the "goodness" of the robot's free space, we show that the running time only grows as the absolute value of the logarithm of the probability of failure that we are willing to tolerate. We also show that it increases at a reasonable rate as the space goodness degrades. In the last section we suggest directions for future research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> J.M. Ahuactzin Larios, Le Fil d'Ariane: Une Methode de Planification Generale. Application a la Planification Automatique de Trajectoires, These de l'Institut National Polytechnique de Grenoble, </institution> <month> Septembre </month> <year> 1994. </year>
Reference-contexts: In turn, these theoretical results suggest improvements of the planner. Other work investigating similar or related randomized planning approaches include <ref> [1, 5, 15, 16, 35, 36] </ref>. Formal attempts to predict the behavior of specific random planners are proposed in very few papers [9, 28]. This paper proposes a consistent framework to describe and study the randomized planners cited above, with the goal to eventually build more powerful planners. <p> A planning problem is specified by two free configurations, q init and q goal , called the initial and the goal configurations, respectively. Any path lying in C free that joins these two configurations is a solution of this problem. We assume for simplificity that C is the cube <ref> [0; 1] </ref> n , so that each configuration q is described by an n-tuple (q 1 ; : : : ; q n ). However, it is straightforward to extend our presentation to cases where C is multiply connected, i.e., one or more dimensions can "wrap around". <p> Processing each query then only requires connecting the input initial and goal configurations to the roadmap. If the queries are not known in advance, it seems reasonable to construct the roadmap by choosing configurations uniformly at random from <ref> [0; 1] </ref> n since the resulting free configurations are then uniformly distributed over C free . However, we will see in Section 3.2 that, while the roadmap is being generated, it is possible to derive heuristic information from it and bias the selection of the new configurations. <p> Return q. At Step 2 (a) let q = (q 1 ; : : : ; q n ) and = clearance (q). Configurations are picked at random from the volume defined by i=1;:::;n [q i =; q i + =] " <ref> [0; 1] </ref> n . According to Definition 1, all configurations in this volume are adjacent to q. To guarantee that Step 2 does not loop for ever, U must have no local minimum in the boundary of C free .
Reference: [2] <author> S. </author> <title> Arya and D.M. Mount, Approximate Range Searching, </title> <booktitle> Proc. of ACM Symp. on Computational Geometry, </booktitle> <pages> 172-181, </pages> <year> 1995. </year>
Reference-contexts: that make use of the above scheme with different sampling strategies. 3.1 Potential-Field Planner This planner was originally described in [3, 4, 29], along with experimental results. 5 Extensions and additional experimental results were presented 4 Checking the sample configurations for adjacency is an instance of the orthogonal range-searching problem <ref> [2, 38] </ref>. Using the range-tree technique, the pairs of adjacent configurations can be computed in O (f log n1 f ) time, or slightly faster.
Reference: [3] <author> J. Barraquand and J.C. Latombe, </author> <title> Robot Motion Planning: A Distributed Representation Approach, </title> <journal> The Int. J. of Robotics Research, </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: With this philosophy in mind, we have designed new path planners and experimented with them in large configuration spaces. One of them, described in <ref> [3, 4, 29] </ref>, is a potential-field-based planner that escapes local minima by performing random walks; in the following, we will refer to it as the potential-field planner. <p> This paper does not present experimental results obtained with our planners. Many such results were previously reported in <ref> [3, 8, 18, 20, 21, 24, 26, 27] </ref> and in papers by other authors [7, 11, 47]. <p> the analysis will not yield useful results; on the other hand, if they are too general, the results will be too weak. 3 Specific Planners We now present two planners that make use of the above scheme with different sampling strategies. 3.1 Potential-Field Planner This planner was originally described in <ref> [3, 4, 29] </ref>, along with experimental results. 5 Extensions and additional experimental results were presented 4 Checking the sample configurations for adjacency is an instance of the orthogonal range-searching problem [2, 38]. <p> Pick at random the length, `, of the motion. 7 2. q q l ; l 0. 3. While l &lt; ` do: (a) Pick at random a free configuration q 0 adjacent to q. 6 Techniques to automatically construct this function are proposed in <ref> [3, 29] </ref>. 7 In [3], we note that, on the average, a random walk of length ` ends p ` away from its starting point. This leads us to suggest choosing p ` according to a truncated Laplace distribution with mean value equal to the "radius" of the configuration space. <p> Pick at random the length, `, of the motion. 7 2. q q l ; l 0. 3. While l &lt; ` do: (a) Pick at random a free configuration q 0 adjacent to q. 6 Techniques to automatically construct this function are proposed in [3, 29]. 7 In <ref> [3] </ref>, we note that, on the average, a random walk of length ` ends p ` away from its starting point. This leads us to suggest choosing p ` according to a truncated Laplace distribution with mean value equal to the "radius" of the configuration space. <p> Although the global geometry of C free is unknown, U can be seen as a specialist that gives some heuristic indications about this geometry, i.e.: which directions are promising and which aren't. The techniques in <ref> [3, 29] </ref> compute U by combining local-minima functions computed over the robot's workspace. Although the resulting U often prevents the planner from getting trapped into big obstacle cavities, it still has local minima and therefore is an imperfect characterization of the free space's geometry. <p> On the other hand, computing local-minima-free potentials in large dimensional spaces is a difficult problem [25] that is at least as hard as path planning itself. Using well-known properties of random motions, the potential-field planner can be shown probabilistically complete <ref> [3, 28] </ref>. Moreover, a calculation of the finite expected number of invocations of Escape-Motion is given in [28]. The idea underlying this calculation is the following. <p> But, in practice, the p ij 's are unknown. In fact, a key issue in analyzing a planner based on random sampling is to translate some geometric property of the free space into probabilistic terms. The potential-field planner has successfully solved many difficult problems (e.g., see <ref> [3, 8, 11, 26] </ref>). However, it is easy to create problems that it fails to solve in a reasonable amount of time, though they admit rather obvious solutions.
Reference: [4] <author> J. Barraquand, B. Langlois, and J.C. Latombe, </author> <title> Numerical potential Field Techniques for Robot Path Planning, </title> <journal> IEEE Tr. on Syst., Man, and Cyb., </journal> <volume> 22(2) </volume> <pages> 224-241, </pages> <year> 1992. </year>
Reference-contexts: With this philosophy in mind, we have designed new path planners and experimented with them in large configuration spaces. One of them, described in <ref> [3, 4, 29] </ref>, is a potential-field-based planner that escapes local minima by performing random walks; in the following, we will refer to it as the potential-field planner. <p> the analysis will not yield useful results; on the other hand, if they are too general, the results will be too weak. 3 Specific Planners We now present two planners that make use of the above scheme with different sampling strategies. 3.1 Potential-Field Planner This planner was originally described in <ref> [3, 4, 29] </ref>, along with experimental results. 5 Extensions and additional experimental results were presented 4 Checking the sample configurations for adjacency is an instance of the orthogonal range-searching problem [2, 38].
Reference: [5] <author> P. Bessiere, E. Mazer, J.M. Ahuactzin, </author> <title> Planning in a Continuous Space with Forbidden Regions: The Ariadne's Clew Algorithm, Algorithmic Foundations of Robotics, </title> <editor> K. Goldberg et al. (eds.), AKPeters, </editor> <address> Wellesley, MA, 39-47, </address> <year> 1995. </year>
Reference-contexts: In turn, these theoretical results suggest improvements of the planner. Other work investigating similar or related randomized planning approaches include <ref> [1, 5, 15, 16, 35, 36] </ref>. Formal attempts to predict the behavior of specific random planners are proposed in very few papers [9, 28]. This paper proposes a consistent framework to describe and study the randomized planners cited above, with the goal to eventually build more powerful planners.
Reference: [6] <author> J.F. Canny, </author> <title> The Complexity of Robot Motion Planning, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: Email: pragh@almaden.ibm.com. the robot. This result is remarkably stable: it still holds for rather specific robots, e.g., planar linkages consisting of links serially connected by revolute joints [17] and sets of rectangles executing axis-parallel translations in a rectangular workspace [13, 14]. Though general and complete algorithms have been proposed <ref> [6, 42] </ref>, their high complexity precludes any useful application. This negative result has led some researchers to seek heuristic algorithms. While several such planners solve difficult problems, they also often fail or take prohibitive time on seemingly simpler ones. <p> But every extension of the basic problem adds in computational complexity. For instance, allowing moving obstacles makes the problem exponential in the number of moving obstacles <ref> [6, 41] </ref>; uncertainties in control and sensing make the problem exponential in the complexity of the robot environment [6]. Before we can effectively investigate such extensions in large configuration spaces, it seems that we must better understand how to practically solve basic path planning. <p> But every extension of the basic problem adds in computational complexity. For instance, allowing moving obstacles makes the problem exponential in the number of moving obstacles [6, 41]; uncertainties in control and sensing make the problem exponential in the complexity of the robot environment <ref> [6] </ref>. Before we can effectively investigate such extensions in large configuration spaces, it seems that we must better understand how to practically solve basic path planning.
Reference: [7] <author> D. Challou and M. Gini, </author> <title> Parallel Formulation of Informed Randomized Search for Robot Motion Planning Problems, </title> <booktitle> Proc. of IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> 709-714, </pages> <address> Nayoga, Japan, </address> <year> 1995. </year>
Reference-contexts: This paper does not present experimental results obtained with our planners. Many such results were previously reported in [3, 8, 18, 20, 21, 24, 26, 27] and in papers by other authors <ref> [7, 11, 47] </ref>. The reader is referred to [34] for a textbook on randomized algorithms and sampling techniques. 2 General Scheme We consider the problem of planning collision-free paths for an arbitrary n-degree-of-freedom holonomic 3 robot A.
Reference: [8] <author> H. Chang and T.Y. Li, </author> <title> Assembly Maintainability Study with Motion Planning, </title> <booktitle> Proc. of IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> 1012-1019, </pages> <address> Nagoya, </address> <year> 1995. </year>
Reference-contexts: Both the potential-field and the roadmap planners have been used to check that parts can be removed from an aircraft engine for inspection and maintenance <ref> [8] </ref>; here, paths are generated in configuration spaces having only six dimensions, but the parts have particularly complex geometry. These two planners achieve probabilistic completeness. <p> This paper does not present experimental results obtained with our planners. Many such results were previously reported in <ref> [3, 8, 18, 20, 21, 24, 26, 27] </ref> and in papers by other authors [7, 11, 47]. <p> Using the range-tree technique, the pairs of adjacent configurations can be computed in O (f log n1 f ) time, or slightly faster. This is better than O (f 2 ) when f is large enough. 5 The planner is available by anonymous ftp from flamingo.stanford.edu:/pub/li/rpp3d.tar.gz. in <ref> [8, 11, 26, 27] </ref>. Here, we focus on its relation to the general scheme presented above. <p> But, in practice, the p ij 's are unknown. In fact, a key issue in analyzing a planner based on random sampling is to translate some geometric property of the free space into probabilistic terms. The potential-field planner has successfully solved many difficult problems (e.g., see <ref> [3, 8, 11, 26] </ref>). However, it is easy to create problems that it fails to solve in a reasonable amount of time, though they admit rather obvious solutions.
Reference: [9] <author> P.C. Chen, </author> <title> Adaptive Path Planning: Algorithm and Analysis, </title> <booktitle> Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> 721-728, </pages> <address> Nagoya, </address> <year> 1995. </year>
Reference-contexts: In turn, these theoretical results suggest improvements of the planner. Other work investigating similar or related randomized planning approaches include [1, 5, 15, 16, 35, 36]. Formal attempts to predict the behavior of specific random planners are proposed in very few papers <ref> [9, 28] </ref>. This paper proposes a consistent framework to describe and study the randomized planners cited above, with the goal to eventually build more powerful planners. In the planners cited above, the robot's free space is not explicitly represented, but randomly sampled.
Reference: [10] <author> E.G. Gilbert, D.W. Johnson, and S.S. </author> <month> Keerthi, </month>
Reference-contexts: On the other hand, reasonably efficient algorithms are available to compute the Euclidean distance between two objects in three-dimensional space (e.g., <ref> [10, 32, 37, 39, 45] </ref>).
References-found: 10

