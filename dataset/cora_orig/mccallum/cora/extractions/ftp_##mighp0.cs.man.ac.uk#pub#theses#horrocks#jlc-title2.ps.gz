URL: ftp://mighp0.cs.man.ac.uk/pub/theses/horrocks/jlc-title2.ps.gz
Refering-URL: http://www.cs.man.ac.uk/mig/people/horrocks/publications.html
Root-URL: http://www.cs.man.ac.uk
Title: A Description Logic with Transitive and Inverse Roles and Role Hierarchies  
Author: Ian Horrocks and Ulrike Sattler 
Note: 1 Part of this work was carried out while being a guest at IRST, Trento. 2 This work was supported by the Esprit Project 22469 DWQ.  
Date: November, 1998  
Address: Manchester 1  RWTH Aachen 2  
Affiliation: Department of Computer Science, University of  LuFG Theoretical Computer Science,  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> F. Baader. </author> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <booktitle> In Proceedings of the 12th International Joint Conference on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pages 446451, </pages> <year> 1991. </year>
Reference-contexts: The expansion process could then be repeated indefinitely. This problem can be dealt with by blocking: halting the expansion process when a cycle is detected <ref> [1, 4] </ref>. For logics without inverse roles, the general procedure is to check the label of each new node y, and if it is a subset [2] of the label of an existing node x, then no further expansion of y is performed: x is said to block y. <p> Besides using label equality instead of subset, this strategy allows blocks to be established, broken, and re-established. 3 For logics with a transitive closure operator it is necessary to check the validity of the cyclical model created by blocking <ref> [1] </ref>, but for logics that only support transitive roles the cyclical model is always valid [26]. 3 R R x z L (z) = L (y) ) z blocked by y v L (v) = fCg L (y) = f9R:&gt;; 9P:&gt;; 8R:C; With inverse roles the blocking condition must be equality <p> The proof of Lemma 14 is identical to the one presented for Lemma 6. Again, summing up, we have the following theorem. Theorem 15 The modified tableaux algorithm is a decision procedure for the satisfiability and subsumption of ALCHI R + -concepts. 5.3 General Concept Inclusion Axioms In <ref> [1, 28, 3] </ref>, the internalisation of terminological axioms is introduced. This technique is used to reduce reasoning with respect to a (possibly cyclic) terminology to satisfiability of concepts. <p> The proof of Lemma 17 is similar to the ones that can be found in <ref> [28, 1] </ref>. One point to show is that, if an ALCHI R + -concept C is satisfiable with respect to a terminology T , then C T has a connected model, namely one whose individuals are all related to each other by some role path. <p> Moreover, blocking is more involved because, in ALC + , a block may represent a contradiction since it might only indicate a postponement of the satisfaction of an 9R + :C-concept in an inherently unsatisfiable context, a situation known as a bad cycle <ref> [1] </ref>. Thirdly, another difficulty must be dealt with if inverse roles are present.
Reference: [2] <author> F. Baader, M. Buchheit, and B. </author> <title> Hollunder. Cardinality restrictions on concepts. </title> <journal> Artificial Intelligence, </journal> <volume> 88(12):195213, </volume> <year> 1996. </year>
Reference-contexts: This problem can be dealt with by blocking: halting the expansion process when a cycle is detected [1, 4]. For logics without inverse roles, the general procedure is to check the label of each new node y, and if it is a subset <ref> [2] </ref> of the label of an existing node x, then no further expansion of y is performed: x is said to block y.
Reference: [3] <author> F. Baader, H.-J. Burckert, B. Nebel, W. Nutt, and G. Smolka. </author> <title> On the expressivity of feature logics with negation, functional uncertainty and sort equations. </title> <journal> Journal of Logic, Language and Information, </journal> <volume> 2:118, </volume> <year> 1993. </year>
Reference-contexts: The proof of Lemma 14 is identical to the one presented for Lemma 6. Again, summing up, we have the following theorem. Theorem 15 The modified tableaux algorithm is a decision procedure for the satisfiability and subsumption of ALCHI R + -concepts. 5.3 General Concept Inclusion Axioms In <ref> [1, 28, 3] </ref>, the internalisation of terminological axioms is introduced. This technique is used to reduce reasoning with respect to a (possibly cyclic) terminology to satisfiability of concepts.
Reference: [4] <author> M. Buchheit, F. M. Donini, and A. Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1:109 138, </volume> <year> 1993. </year>
Reference-contexts: The expansion process could then be repeated indefinitely. This problem can be dealt with by blocking: halting the expansion process when a cycle is detected <ref> [1, 4] </ref>. For logics without inverse roles, the general procedure is to check the label of each new node y, and if it is a subset [2] of the label of an existing node x, then no further expansion of y is performed: x is said to block y.
Reference: [5] <author> D. Calvanese. </author> <title> Unrestricted and Finite Model Reasoning in Class-Based Representation Formalisms. </title> <type> PhD thesis, </type> <institution> Dipartimento di Informatica e Sistemistica, UniversitOEa di Roma La Sapienza, </institution> <year> 1996. </year>
Reference-contexts: In the (common) case where the E=R-schema is of the kind where minimum cardinality restrictions are either 0 or 1 and maximum cardi-nality restrictions are either 1 or 1, the technique presented in <ref> [6, 5] </ref> translates the schema into an ALCFI terminology (which contains general concept inclusion axioms); the method for reasoning with such terminologies using ALCHF I R + has been described in Section 5.3.
Reference: [6] <author> D. Calvanese, M. Lenzerini, and D. Nardi. </author> <title> A unified framework for class based representation formalisms. </title> <editor> In J. Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Proceedings of the Fourth International Conference on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pages 109120, </pages> <address> Bonn, 1994. </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos. </address>
Reference-contexts: In the (common) case where the E=R-schema is of the kind where minimum cardinality restrictions are either 0 or 1 and maximum cardi-nality restrictions are either 1 or 1, the technique presented in <ref> [6, 5] </ref> translates the schema into an ALCFI terminology (which contains general concept inclusion axioms); the method for reasoning with such terminologies using ALCHF I R + has been described in Section 5.3.
Reference: [7] <author> P. P. Chen. </author> <title> The entity-relationship model: Toward a unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1):936, </volume> <year> 1976. </year>
Reference-contexts: Support for functional restrictions is important in several application domains. In particular, ALCHF I R + could be used to model E=R schemata (a formalism introduced by <ref> [7] </ref>, and widely used for the conceptual modeling of relational databases).
Reference: [8] <author> G. De Giacomo. </author> <title> Decidability of Class-Based Knowledge Representation Formalisms. </title> <type> PhD thesis, </type> <institution> Dip. di Inf. e Sist., Univ. di Roma La Sapienza, </institution> <year> 1995. </year>
Reference-contexts: This problem would be further exacerbated by embedding functional restrictions in such a logic (as described in <ref> [8] </ref>), because the embedding generates large numbers of general concept inclusion axiomsanother source of non-determinism.
Reference: [9] <author> G. De Giacomo and M. Lenzerini. </author> <title> Tbox and Abox reasoning in expressive description logics. </title> <booktitle> In Proceedings of the Fifth International Conference on the Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 316327. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1996. </year>
Reference-contexts: This technique allows subsumption and satisfiability with respect to (possibly cyclic) general concept inclusion axioms to be reduced to concept satisfia-bility and subsumption. It could be argued that, instead of defining yet another DL, one could make use of the results presented in <ref> [9] </ref> and use ALC extended with role expressions which include transitive closure and inverse operators.
Reference: [10] <author> G. De Giacomo and F. Massacci. </author> <title> Combining deduction and model checking into tableaux and algorithms for converse-pdl. </title> <journal> Information and Computation, </journal> <note> 1998. To appear. </note>
Reference-contexts: Furthermore, it is still an open question whether the transitive closure of roles together with inverse roles necessitates the use of the cut rule <ref> [10] </ref>, a rule that, due to its high degree of non-determinism, leads to an algorithm with very bad computational behaviour. <p> Thirdly, another difficulty must be dealt with if inverse roles are present. To our knowledge, the only technique for distinguishing the above mentioned bad cycles uses the so-called cut rule (an algorithm for converse-PDL employing a cut rule is presented in <ref> [10] </ref>); the application of this rule leads to considerable additional non-determinism. Intuitively, the cut rule guesses, for each subconcept C of the input concept and for each blocking node x, whether C or :C holds at x.
Reference: [11] <author> G. De Giacomo and F. Massacci. </author> <title> Combining deduction and model checking into tableaux and algorithms for converse-pdl. </title> <journal> Information and Computation, </journal> <note> to appear. </note>
Reference-contexts: Note the similarity between this condition and that imposed by the combination of the blocking condition and cut rule in converse-PDL <ref> [11] </ref>. discovers the unsatisfiability of the concept :C u (6 1 F ) u 9F :D u 8R :(9F :D); where F v R and D represents the concept C u (6 1 F ) u 9F::C: Using dynamic blocking, z would be blocked by y.
Reference: [12] <author> G. De Giacomo and M. Lenzerini. </author> <title> Boosting the correspondence between description logics and propositional dynamic logics (extended abstract). </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <year> 1994. </year>
Reference-contexts: Intuitively, the cut rule guesses, for each subconcept C of the input concept and for each blocking node x, whether C or :C holds at x. Moreover, the ALCHF I R + algorithm deals directly with functional restrictions, rather than using an embedding <ref> [12] </ref> which is yet another source of non-determinism. Finally, a large fragment of ALCHF I R + , namely ALCF I R + , is still in Pspace [22].
Reference: [13] <author> M. J. Fischer and R. E. Ladner. </author> <title> Propositional dynamic logic of regular programs. </title> <journal> Journal of Computer and System Science, </journal> <volume> 18:194211, </volume> <year> 1979. </year>
Reference-contexts: Firstly, transitive closure is inherently harder than transitive roles: the extension of ALC with transitive closure (ALC + ) is already ExpTime-hard (which is an easy consequence of results presented in <ref> [13, 25] </ref>), whereas the extension of ALC with transitive roles is still in PSpace-complete (which is a not so easy consequence [26] of results presented in [23, 15]). 7 Which is a notational variant of converse-PDL if the set of program constructors is restricted to transitive closure and inverse. 23 Secondly,
Reference: [14] <author> E. Franconi, G. De Giacomo, R. M. MacGregor, W. Nutt, C. A. Welty, and F. Sebastiani, </author> <title> editors. </title> <booktitle> Collected Papers from the International Description Logics Workshop (DL'98). </booktitle> <address> CEUR, </address> <month> May </month> <year> 1998. </year>
Reference: [15] <author> J. Y. Halpern and Y. Moses. </author> <title> A guide to completeness and complexity for modal logic of knowledge and belief. </title> <journal> Artificial Intelligence, </journal> <volume> 54:319379, </volume> <year> 1992. </year>
Reference-contexts: transitive roles: the extension of ALC with transitive closure (ALC + ) is already ExpTime-hard (which is an easy consequence of results presented in [13, 25]), whereas the extension of ALC with transitive roles is still in PSpace-complete (which is a not so easy consequence [26] of results presented in <ref> [23, 15] </ref>). 7 Which is a notational variant of converse-PDL if the set of program constructors is restricted to transitive closure and inverse. 23 Secondly, even with respect to ALCH R + , which is in the same complexity class as ALC + , transitive closure appears to be considerably harder
Reference: [16] <author> B. Hollunder and W. Nutt. </author> <title> Subsumption algorithms for concept languages. </title> <booktitle> In Proceedings of the 9th European Conference on Artificial Intelligence (ECAI'90), </booktitle> <pages> pages 348353. </pages> <publisher> John Wiley & Sons Ltd., </publisher> <year> 1990. </year>
Reference-contexts: Experiences with an implementation of ALCH R + in the FaCT system [18] suggest that these algorithms should behave well in practice. 2 2 Blocking The algorithms that we will present use the tableaux method <ref> [16] </ref>, in which the satisfiability of a concept D is tested by trying to construct a model of D. The model is represented by a tree in which nodes correspond to individuals and edges correspond to roles. <p> Any ALCI R + -concept can easily be transformed to an equivalent one in NNF by pushing negations inwards <ref> [16] </ref>. The soundness and completeness of the algorithm will be proved by showing that it creates a tableau for D. <p> As the logic supports general negation, it is also necessary to allow for negated functional restrictions :(6 1 R); in negation normal form these become restrictions of the form (&gt; 2 R) <ref> [16] </ref>. In ALCHF I R + , the roles that can appear in functional restrictions are limited to simple roles, where a role is simple if it is neither transitive nor has transitive sub-roles.
Reference: [17] <author> I. Horrocks. </author> <title> Optimising Tableaux Decision Procedures for Description Logics. </title> <type> PhD thesis, </type> <institution> University of Manchester, </institution> <year> 1997. </year>
Reference-contexts: In <ref> [17] </ref>, the Description Logic (DL) ALCH R + is presented, which extends ALC [29] with transitive roles and a role hierarchy. <p> Like ALCH R + , ALCHI R + and ALCHF I R + also allow for the internalisation of general concept inclusion axioms using a universal role: a transitive role that subsumes all other roles in the terminology <ref> [17] </ref>. This technique allows subsumption and satisfiability with respect to (possibly cyclic) general concept inclusion axioms to be reduced to concept satisfia-bility and subsumption. <p> The reason for not proceeding like this is the fact that transitive roles can be implemented more efficiently than the transitive closure of roles <ref> [17] </ref>, although they lead to the same complexity class (ExpTime-complete) when added, together with role hierarchies, to ALC. <p> C v D can be reduced to the unsatisfiability of C u :D. 5 ALCI R + Extended by Role Hierarchies We will now extend the tableaux algorithm presented in Section 4.1 to deal with role hierarchies in a similar way to the algorithm for ALCH R + presented in <ref> [17] </ref>. ALCHI R + extends ALCI R + by allowing, additionally, for inclusion axioms on roles. These axioms can involve transitive as well as non-transitive roles, and inverse roles as well as role names. <p> This technique is used to reduce reasoning with respect to a (possibly cyclic) terminology to satisfiability of concepts. In <ref> [17] </ref>, we saw how role hierarchies can be used to reduce satisfiability and sub-sumption with respect to a terminology to concept satisfiability and subsumption. <p> Finally, a large fragment of ALCHF I R + , namely ALCF I R + , is still in Pspace [22]. A corresponding relationship holds between ALCH R + and ALC R + , and implementations of ALCH R + in the FaCT and DLP systems <ref> [17, 24] </ref> have been shown to behave well in realistic applications [20]. A possible explanation for this phenomenon is that the constructor which makes these logics ExpTime-hard, namely the role hierarchy, is mainly used for the encoding of axioms.
Reference: [18] <author> I. Horrocks. </author> <title> Using an expressive description logic: FaCT or fiction? In A. </title> <editor> G. Cohn, L. Schubert, and S. C. Shapiro, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Sixth International Conference (KR'98), </booktitle> <pages> pages 636 647. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <month> June </month> <year> 1998. </year> <month> 25 </month>
Reference-contexts: Experiences with an implementation of ALCH R + in the FaCT system <ref> [18] </ref> suggest that these algorithms should behave well in practice. 2 2 Blocking The algorithms that we will present use the tableaux method [16], in which the satisfiability of a concept D is tested by trying to construct a model of D. <p> A possible explanation for this phenomenon is that the constructor which makes these logics ExpTime-hard, namely the role hierarchy, is mainly used for the encoding of axioms. According to our experiences, realistic knowledge bases contain few axioms that are not amenable to the absorption optimisation technique described in <ref> [18] </ref>. Moreover, the ALCH R + algorithm has been shown to be amenable to a range of other optimisation techniques [21]; we believe that both its good behaviour and the optimisation techniques will carry over into both ALCHI R + and ALCHF I R + .
Reference: [19] <author> I. Horrocks and G. Gough. </author> <title> Description logics with transitive roles. </title> <editor> In M.-C. Rousset, R. Brachmann, F. Donini, E. Franconi, I. Horrocks, and A. Levy, editors, </editor> <booktitle> Proceedings of the International Workshop on Description Logics, </booktitle> <pages> pages 2528, </pages> <address> Gif sur Yvette, France, </address> <year> 1997. </year> <institution> Universite Paris-Sud. </institution>
Reference-contexts: new approach is shown to be sufficiently powerful to allow sub-sumption and satisfiability with respect to a (possibly cyclic) knowledge base to be reduced to concept subsumption and satisfiability, and to support reasoning in a Description Logic that no longer has the finite model property. 1 Motivation As argued in <ref> [19, 26] </ref>, transitive roles play an important role in the adequate representation of aggregated objects: they allow these objects to be described by referring to their parts without specifying a level of decomposition.
Reference: [20] <author> I. Horrocks and P. F. Patel-Schneider. </author> <title> Comparing subsumption optimizations. </title> <editor> In Fran-coni et al. </editor> <volume> [14], </volume> <pages> pages 9094. </pages>
Reference-contexts: A corresponding relationship holds between ALCH R + and ALC R + , and implementations of ALCH R + in the FaCT and DLP systems [17, 24] have been shown to behave well in realistic applications <ref> [20] </ref>. A possible explanation for this phenomenon is that the constructor which makes these logics ExpTime-hard, namely the role hierarchy, is mainly used for the encoding of axioms. According to our experiences, realistic knowledge bases contain few axioms that are not amenable to the absorption optimisation technique described in [18].
Reference: [21] <author> I. Horrocks and P. F. Patel-Schneider. </author> <title> Optimising propositional modal satisfiability for description logic subsumption. </title> <editor> In J. Calmet and J. Plaza, editors, </editor> <booktitle> Artificial Intelligence and Symbolic Computation: International Conference AISC'98, number 1476 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 234246. </pages> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1998. </year>
Reference-contexts: According to our experiences, realistic knowledge bases contain few axioms that are not amenable to the absorption optimisation technique described in [18]. Moreover, the ALCH R + algorithm has been shown to be amenable to a range of other optimisation techniques <ref> [21] </ref>; we believe that both its good behaviour and the optimisation techniques will carry over into both ALCHI R + and ALCHF I R + . To verify this belief, these new algorithms are to be implemented in a descendant of the FaCT system.
Reference: [22] <author> I. Horrocks, U. Sattler, and S. Tobies. </author> <title> A PSpace-algorithm for deciding ALCN I R + - satisfiability. </title> <type> LTCS-Report 98-08, </type> <institution> LuFg Theoretical Computer Science, RWTH Aachen, Germany, </institution> <year> 1998. </year>
Reference-contexts: Since 10 a path on which nodes are blocked cannot become longer, paths are of length at most 2 m . In <ref> [22] </ref>, an optimised version of this tableaux algorithm is presented, namely one that generates completion trees whose depth is polymially bounded by the size of the input concept. Together with Lemma 3, the following lemma implies soundness of the tableaux algorithm. <p> Moreover, the ALCHF I R + algorithm deals directly with functional restrictions, rather than using an embedding [12] which is yet another source of non-determinism. Finally, a large fragment of ALCHF I R + , namely ALCF I R + , is still in Pspace <ref> [22] </ref>. A corresponding relationship holds between ALCH R + and ALC R + , and implementations of ALCH R + in the FaCT and DLP systems [17, 24] have been shown to behave well in realistic applications [20].
Reference: [23] <author> R. E. Ladner. </author> <title> The computational complexity of provability in systems of modal propositional logic. </title> <journal> SIAM Journal of Computing, </journal> <volume> 6(3):467480, </volume> <year> 1977. </year>
Reference-contexts: transitive roles: the extension of ALC with transitive closure (ALC + ) is already ExpTime-hard (which is an easy consequence of results presented in [13, 25]), whereas the extension of ALC with transitive roles is still in PSpace-complete (which is a not so easy consequence [26] of results presented in <ref> [23, 15] </ref>). 7 Which is a notational variant of converse-PDL if the set of program constructors is restricted to transitive closure and inverse. 23 Secondly, even with respect to ALCH R + , which is in the same complexity class as ALC + , transitive closure appears to be considerably harder
Reference: [24] <author> P. F. Patel-Schneider. </author> <title> DLP system description. </title> <editor> In Franconi et al. </editor> <volume> [14], </volume> <pages> pages 8789. </pages>
Reference-contexts: Finally, a large fragment of ALCHF I R + , namely ALCF I R + , is still in Pspace [22]. A corresponding relationship holds between ALCH R + and ALC R + , and implementations of ALCH R + in the FaCT and DLP systems <ref> [17, 24] </ref> have been shown to behave well in realistic applications [20]. A possible explanation for this phenomenon is that the constructor which makes these logics ExpTime-hard, namely the role hierarchy, is mainly used for the encoding of axioms.
Reference: [25] <author> V. R. Pratt. </author> <title> Models of program logics. </title> <booktitle> In Proceedings of the 20th Annual Symposium on Foundations of Computer Science, </booktitle> <address> San Juan, Puerto Rico, </address> <year> 1979. </year>
Reference-contexts: Firstly, transitive closure is inherently harder than transitive roles: the extension of ALC with transitive closure (ALC + ) is already ExpTime-hard (which is an easy consequence of results presented in <ref> [13, 25] </ref>), whereas the extension of ALC with transitive roles is still in PSpace-complete (which is a not so easy consequence [26] of results presented in [23, 15]). 7 Which is a notational variant of converse-PDL if the set of program constructors is restricted to transitive closure and inverse. 23 Secondly,
Reference: [26] <author> U. Sattler. </author> <title> A concept language extended with different kinds of transitive roles. </title> <editor> In G. G orz and S. H olldobler, editors, </editor> <booktitle> 20. Deutsche Jahrestagung f ur K unstliche Intelli-genz, number 1137 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 333345. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: new approach is shown to be sufficiently powerful to allow sub-sumption and satisfiability with respect to a (possibly cyclic) knowledge base to be reduced to concept subsumption and satisfiability, and to support reasoning in a Description Logic that no longer has the finite model property. 1 Motivation As argued in <ref> [19, 26] </ref>, transitive roles play an important role in the adequate representation of aggregated objects: they allow these objects to be described by referring to their parts without specifying a level of decomposition. <p> In particular, 8R:C concepts, where R is a transitive role, are dealt with by propagating the whole concept across R-labelled edges <ref> [26] </ref>. For example, given a leaf node x labelled fC; 9R:C; 8R:(9R:C)g, where R is a transitive role, the combination of the 9R:C and 8R:(9R:C) concepts would cause a new node y to be added to the tree with an identical label to x. <p> instead of subset, this strategy allows blocks to be established, broken, and re-established. 3 For logics with a transitive closure operator it is necessary to check the validity of the cyclical model created by blocking [1], but for logics that only support transitive roles the cyclical model is always valid <ref> [26] </ref>. 3 R R x z L (z) = L (y) ) z blocked by y v L (v) = fCg L (y) = f9R:&gt;; 9P:&gt;; 8R:C; With inverse roles the blocking condition must be equality of node labels because roles are now bi-directional, and additional concepts in x's label could <p> closure is inherently harder than transitive roles: the extension of ALC with transitive closure (ALC + ) is already ExpTime-hard (which is an easy consequence of results presented in [13, 25]), whereas the extension of ALC with transitive roles is still in PSpace-complete (which is a not so easy consequence <ref> [26] </ref> of results presented in [23, 15]). 7 Which is a notational variant of converse-PDL if the set of program constructors is restricted to transitive closure and inverse. 23 Secondly, even with respect to ALCH R + , which is in the same complexity class as ALC + , transitive closure
Reference: [27] <author> U. Sattler. </author> <title> Terminological knowledge representation systems in a process engineering application. </title> <type> PhD thesis, </type> <institution> RWTH Aachen, </institution> <year> 1998. </year>
Reference-contexts: In [17], the Description Logic (DL) ALCH R + is presented, which extends ALC [29] with transitive roles and a role hierarchy. It is argued in <ref> [27] </ref> that ALCH R + is well-suited to the representation of aggregated objects in applications that require various part-whole relations to be distinguished, some of which are transitive.
Reference: [28] <author> K. Schild. </author> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pages 466471, </pages> <address> Sydney, </address> <year> 1991. </year>
Reference-contexts: The proof of Lemma 14 is identical to the one presented for Lemma 6. Again, summing up, we have the following theorem. Theorem 15 The modified tableaux algorithm is a decision procedure for the satisfiability and subsumption of ALCHI R + -concepts. 5.3 General Concept Inclusion Axioms In <ref> [1, 28, 3] </ref>, the internalisation of terminological axioms is introduced. This technique is used to reduce reasoning with respect to a (possibly cyclic) terminology to satisfiability of concepts. <p> The proof of Lemma 17 is similar to the ones that can be found in <ref> [28, 1] </ref>. One point to show is that, if an ALCHI R + -concept C is satisfiable with respect to a terminology T , then C T has a connected model, namely one whose individuals are all related to each other by some role path.
Reference: [29] <author> M. Schmidt-Schau and G. Smolka. </author> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48:126, </volume> <year> 1991. </year> <month> 26 </month>
Reference-contexts: In [17], the Description Logic (DL) ALCH R + is presented, which extends ALC <ref> [29] </ref> with transitive roles and a role hierarchy. It is argued in [27] that ALCH R + is well-suited to the representation of aggregated objects in applications that require various part-whole relations to be distinguished, some of which are transitive. <p> y, and this results in a contradiction as both C and :C will be in L (y). 3 Syntax and Semantics of ALC I R + For ease of understanding, we start by introducing the Description Logic ALCI R + , which is the extension of the well-known DL ALC <ref> [29] </ref> with transitive roles and inverse (converse) roles. The set of transitive role names R + is a subset of the set of role names R. Interpretations map role names to binary relations on the interpretation domain, and transitive role names to transitive relations.
References-found: 29

