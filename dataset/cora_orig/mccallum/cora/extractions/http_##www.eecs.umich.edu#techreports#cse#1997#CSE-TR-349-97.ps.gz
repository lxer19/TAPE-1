URL: http://www.eecs.umich.edu/techreports/cse/1997/CSE-TR-349-97.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse97.html
Root-URL: http://www.cs.umich.edu
Abstract: DRAFT Techniques for Eliminating Packet Loss in Congested TCP/IP Networks Wu-chang Fengy Dilip D. Kandlurz Debanjan Sahaz Kang G. Shiny yDepartment of EECS zNetwork Systems Department University of Michigan IBM T.J. Watson Research Center Ann Arbor, MI 63130 Yorktown Heights, NY 10598 Phone: (313) 763-5363 Fax: (313) 763-4617 Phone: (914) 784-7194 Fax: (914) 784-6205 fwuchang,kgshing@eecs.umich.edu fkandlur,debanjang@watson.ibm.com Abstract The congestion control mechanisms used in tcp have been the focus of numerous studies and have undergone a number of enhancements. However, even with these enhancements, tcp connections still experience alarmingly high loss rates, especially during times of congestion. To alleviate this problem, the ietf is considering active queue management mechanisms, such as red, for deployment in the network. In this paper, we first show that even with red, loss rates can only be reduced marginally in times of congestion. We then show that the solution to this problem lies in understanding the traffic generated by an aggregation of a large number of sources. Given this, we then propose and experiment with more adaptive active queue management algorithms and more intelligent end-host mechanisms which can significantly reduce loss rates across congested links. When used together, these mechanisms can effectively eliminate packet loss while maintaining high link utilizations under the most difficult scenarios. Keywords: Congestion control, Internet, tcp, red, queue management 1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Braden, D. Clark, J. Crowcroft, B. Davie, S. Deering, D. Estrin, S. Floyd, V. Jacobson, G. Minshall, C. Partridge, L. Peterson, K. Ramakrishnan, S. Shenker, J. Wroclawski, and L. Zhang. </author> <title> Recommendations on Queue Management and Congestion Avoidance in the Internet. Internet Draft draft-irtf-e2e-queue-mgt-00.txt, </title> <month> March </month> <year> 1997. </year>
Reference-contexts: One of the reasons for high packet loss rate is the failure of the network to provide early congestion notification to sources. This has led to proposals for active queue management, such as Random Early Detection (red) <ref> [1, 11] </ref> and variations thereof [16]. While red certainly outperforms traditional drop-tail queues, our experiments show that it is difficult to parameterize red queues to perform well under different congestion scenarios. <p> One form of active queue management being proposed by the ietf for deployment in the network is red (Random Early Detection) <ref> [1, 8] </ref>. red maintains an exponentially weighted moving average of the queue length which it uses to detect congestion.
Reference: [2] <author> L. S. Brakmo, S. W. O'Malley, and L. L. Peterson. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 24-35, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: While bandwidth-based increases provide end-hosts with an upper bound on how aggressively they can ramp up their sending rates, it is often desirable for a source to change its sending rate more slowly or not at all when nearing the congestion point <ref> [2, 25, 26] </ref> in order to avoid oscillations inherent in tcp's windowing algorithm. We are currently investigating incorporating such techniques into the bandwidth-based increase algorithm. We are also exploring additional mechanisms to improve the 19 DRAFT fairness of the windowing algorithms.
Reference: [3] <author> D. Chiu and R. Jain. </author> <title> Analysis of the Increase/Decrease Algorithms for Congestion Avoidance in Computer Networks. </title> <journal> Journal of Computer Networks and ISDN, </journal> <volume> 17(1), </volume> <month> June </month> <year> 1989. </year>
Reference-contexts: We note that one of the key disadvantage of bandwidth-based increase algorithm is that it falls under a class of algorithms which have theoretically been shown to not provide responsive max-min fair sharing independent of the starting state of the network <ref> [3, 14] </ref>. While fairness is a concern, even with tcp's current congestion control algorithm, fairness between connections has already been shown to be poor in times of congestion [19] and across multiple round-trip times [10]. <p> While fairness is a concern, even with tcp's current congestion control algorithm, fairness between connections has already been shown to be poor in times of congestion [19] and across multiple round-trip times [10]. In addition, the idealized model used in <ref> [3] </ref> assumes that congestion notification is given to all sources when the bottleneck resource becomes saturated.
Reference: [4] <author> J. Crowcroft. </author> <title> TCP very slow start and freeway avoidance. end2end-interest mailing list, </title> <month> September </month> <year> 1995. </year>
Reference-contexts: Every timer interval counter = counter - 1; to tcp's windowing mechanism which alleviate this problem. 4.1 Adjusting the Minimum Transmission Rate One of the limitations of tcp's congestion control mechanism is that in normal operation, the minimum transmission rate of a tcp sender is one segment per round-trip time <ref> [4] </ref>.
Reference: [5] <author> W. Feng, D. Kandlur, D. Saha, and K. Shin. </author> <title> Adaptive Packet Marking for Providing Differentiated Services in the Internet. UM-CSE-TR-347-97 and IBM RC 21013, </title> <month> October </month> <year> 1997. </year>
Reference-contexts: For example, one could adaptively change inter-packet drop probabilities or the red threshold values depending on the input traffic. Finally, we are examining ways of applying the adaptive red algorithm to an enhanced ToS-enabled version of red (ered) <ref> [5, 6] </ref> in order to improve its performance, as well. We are also examining ways of improving end-host congestion control algorithms.
Reference: [6] <author> W. Feng, D. Kandlur, D. Saha, and K. Shin. </author> <title> Understanding TCP Dynamics in an Integrated Services Internet. </title> <booktitle> In Proc. of NOSSDAV '97, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: For example, one could adaptively change inter-packet drop probabilities or the red threshold values depending on the input traffic. Finally, we are examining ways of applying the adaptive red algorithm to an enhanced ToS-enabled version of red (ered) <ref> [5, 6] </ref> in order to improve its performance, as well. We are also examining ways of improving end-host congestion control algorithms.
Reference: [7] <author> S. Floyd. </author> <title> Connections with Multiple Congested Gateways in Packet-Switched Networks, Part 1: One-way Traffic. </title> <journal> Computer Communication Review, </journal> <volume> 21(5), </volume> <month> October </month> <year> 1991. </year>
Reference-contexts: As more connections become active, the rate of congestion notification, and thus, the loss rates must increase. Steady state analysis of the tcp congestion avoidance algorithm <ref> [7, 15, 17, 18, 20] </ref> gives some insight as to why this is the case.
Reference: [8] <author> S. Floyd. </author> <title> TCP and Explicit Congestion Notification. </title> <journal> Computer Communication Review, </journal> <volume> 24(5) </volume> <pages> 10-23, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: One form of active queue management being proposed by the ietf for deployment in the network is red (Random Early Detection) <ref> [1, 8] </ref>. red maintains an exponentially weighted moving average of the queue length which it uses to detect congestion. <p> When the average queue length exceeds a minimum threshold (min th ), packets are randomly dropped or marked with an explicit congestion notification (ecn) bit <ref> [8, 22, 23] </ref> with a given probability. A connection receiving congestion notification in the form of an ecn mark, cuts its congestion window in half as it would if it had detected a packet loss.
Reference: [9] <author> S. Floyd, M. Allman, and C. Partridge. </author> <title> Increasing TCP's Initial Window. Internet Draft draft-floyd-incr-init-win-00.txt, </title> <month> August </month> <year> 1997. </year>
Reference-contexts: In addition, the idealized model used in [3] assumes that congestion notification is given to all sources when the bottleneck resource becomes saturated. With queueing algorithms such as red and fred <ref> [9, 16] </ref> that deliver congestion notification preferentially to higher bandwidth flows, it may be possible for a larger class of increase/decrease algorithms to quickly converge to max-min fair sharing. Given these two modified increase algorithms, we reran the previous experiments in order to evaluate their performance. <p> One of the advantages of tcp congestion avoidance is that it inherently gives an advantage to low-bandwidth flows which allows the algorithm to converge quickly to max-min fairness. Using additional end-host mechanisms and router fairness mechanisms such as fred <ref> [9, 16] </ref>, we are currently examining ways of obtaining the benefits of bandwidth-based increases while maintaining fairness between connections. 7 Acknowledgments We thank Sally Floyd for helpful comments on an earlier version of this paper.
Reference: [10] <author> S. Floyd and V. Jacobson. </author> <title> On Traffic Phase Effects in Packet-Switched Gateways. </title> <journal> Internet-working: Research and Experience, </journal> <volume> 3(3) </volume> <pages> 115-156, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: While fairness is a concern, even with tcp's current congestion control algorithm, fairness between connections has already been shown to be poor in times of congestion [19] and across multiple round-trip times <ref> [10] </ref>. In addition, the idealized model used in [3] assumes that congestion notification is given to all sources when the bottleneck resource becomes saturated.
Reference: [11] <author> S. Floyd and V. Jacobson. </author> <title> Random Early Detection Gateways for Congestion Avoidance. </title> <journal> ACM/IEEE Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: One of the reasons for high packet loss rate is the failure of the network to provide early congestion notification to sources. This has led to proposals for active queue management, such as Random Early Detection (red) <ref> [1, 11] </ref> and variations thereof [16]. While red certainly outperforms traditional drop-tail queues, our experiments show that it is difficult to parameterize red queues to perform well under different congestion scenarios.
Reference: [12] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 314-329, </pages> <month> August </month> <year> 1988. </year> <note> 20 DRAFT </note>
Reference-contexts: 1 Introduction It is important to avoid high packet loss rates in the Internet. When a packet is dropped before it reaches its destination, all of the resources it has consumed in transit have been wasted. In extreme cases, this situation can lead to congestion collapse <ref> [12] </ref>. Over the last decade, tcp and its congestion control mechanisms have been instrumental in controlling packet loss and in preventing congestion collapse across the Internet. Optimizing the congestion control mechanisms used in tcp has been one of the most active areas of research in the past few years. <p> This stage is called slow-start and allows the source to double its congestion window, and thus its sending rate, every round-trip time. In order to prevent excessive losses due to an exponentially-increasing sending rate, tcp senders typically employ what is known as the congestion-avoidance algorithm <ref> [12] </ref>. In this algorithm, tcp keeps track of a threshold value (ssthresh) which is a conservative approximation of the window size which the network can support. When the window size exceeds this threshold, tcp enters the congestion avoidance phase.
Reference: [13] <author> V. Jacobson. </author> <title> Modified TCP Congestion Avoidance Algorithm. </title> <editor> end2end-interest mailing list (ftp://ftp.ee.lbl.gov/email/vanj.90apr30.txt), </editor> <month> April </month> <year> 1990. </year>
Reference-contexts: When the sending rates of the active connections exceed the network's capacity, queues build up and eventually packets are dropped. One way in which tcp detects a packet loss is through the receipt of a number of duplicate acknowledgments from the receiver <ref> [13] </ref>. Upon receiving a given number of duplicate acknowledgments, tcp infers that a packet loss has occurred and immediately reduces its sending rate in half by halving its congestion window. These mechanisms are called fast retransmit and fast recovery.
Reference: [14] <author> R. Jain, D. Chiu, and W. Hawe. </author> <title> A Quantitative Measure of Fairness and Discrimination for Resource Allocation in Shared Computer Systems. </title> <note> DEC Research Report TR-301, </note> <month> Sept. </month> <year> 1984. </year>
Reference-contexts: We note that one of the key disadvantage of bandwidth-based increase algorithm is that it falls under a class of algorithms which have theoretically been shown to not provide responsive max-min fair sharing independent of the starting state of the network <ref> [3, 14] </ref>. While fairness is a concern, even with tcp's current congestion control algorithm, fairness between connections has already been shown to be poor in times of congestion [19] and across multiple round-trip times [10].
Reference: [15] <author> T. V. Lakshman and U. Madhow. </author> <title> The Performance of TCP/IP for Networks with High Bandwidth-Delay Products and Random Loss. </title> <journal> IFIP Transactions C-26, High Performance Networking, </journal> <pages> pages 135-150, </pages> <year> 1994. </year>
Reference-contexts: As more connections become active, the rate of congestion notification, and thus, the loss rates must increase. Steady state analysis of the tcp congestion avoidance algorithm <ref> [7, 15, 17, 18, 20] </ref> gives some insight as to why this is the case.
Reference: [16] <author> D. Lin and R. Morris. </author> <title> Dynamics of Random Early Detection. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <month> September </month> <year> 1997. </year>
Reference-contexts: One of the reasons for high packet loss rate is the failure of the network to provide early congestion notification to sources. This has led to proposals for active queue management, such as Random Early Detection (red) [1, 11] and variations thereof <ref> [16] </ref>. While red certainly outperforms traditional drop-tail queues, our experiments show that it is difficult to parameterize red queues to perform well under different congestion scenarios. The key problem is that congestion notification does not directly depend on the number of connections multiplexed across the link. <p> In addition, the idealized model used in [3] assumes that congestion notification is given to all sources when the bottleneck resource becomes saturated. With queueing algorithms such as red and fred <ref> [9, 16] </ref> that deliver congestion notification preferentially to higher bandwidth flows, it may be possible for a larger class of increase/decrease algorithms to quickly converge to max-min fair sharing. Given these two modified increase algorithms, we reran the previous experiments in order to evaluate their performance. <p> One of the advantages of tcp congestion avoidance is that it inherently gives an advantage to low-bandwidth flows which allows the algorithm to converge quickly to max-min fairness. Using additional end-host mechanisms and router fairness mechanisms such as fred <ref> [9, 16] </ref>, we are currently examining ways of obtaining the benefits of bandwidth-based increases while maintaining fairness between connections. 7 Acknowledgments We thank Sally Floyd for helpful comments on an earlier version of this paper.
Reference: [17] <author> M. Mathis and J. Semke and J. Mahdavi and T. Ott. </author> <title> The Macroscopic Behavior of the TCP Congestion Avoidance Algorithm. </title> <journal> Computer Communication Review, </journal> <volume> 27(1), </volume> <month> July </month> <year> 1997. </year>
Reference-contexts: As more connections become active, the rate of congestion notification, and thus, the loss rates must increase. Steady state analysis of the tcp congestion avoidance algorithm <ref> [7, 15, 17, 18, 20] </ref> gives some insight as to why this is the case.
Reference: [18] <author> S. McCanne and S. Floyd. </author> <title> http://www-nrg.ee.lbl.gov/ns/. ns-LBNL Network Simulator, </title> <year> 1996. </year>
Reference-contexts: examines the impact that traffic load has on active queue management techniques such as red and proposes on-line mechanisms for optimizing performance. 3.1 Traffic Load and Early Detection To examine the impact that traffic load has on early detection mechanisms, we performed a set of experiments using the ns simulator <ref> [18] </ref> which varied both the aggressiveness of the early detection algorithm and the total number of connections multiplexed on the bottleneck link. Figure 1 shows the network topology used in the experiments. <p> As more connections become active, the rate of congestion notification, and thus, the loss rates must increase. Steady state analysis of the tcp congestion avoidance algorithm <ref> [7, 15, 17, 18, 20] </ref> gives some insight as to why this is the case.
Reference: [19] <author> R. Morris. </author> <title> TCP Behavior with Many Flows. </title> <booktitle> In Proc. IEEE International Conference on Network Protocols, </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: When a large number of connections are multiplexed over a low bandwidth link, the inability of tcp to transmit at lower rates causes a significant number of packet losses and retransmission timeouts <ref> [19] </ref>. tcp, by exponentially backing off its retransmission timeout interval, does in fact have a mechanism which allows it to transmit at a rate lower than one segment per round-trip time. <p> While fairness is a concern, even with tcp's current congestion control algorithm, fairness between connections has already been shown to be poor in times of congestion <ref> [19] </ref> and across multiple round-trip times [10]. In addition, the idealized model used in [3] assumes that congestion notification is given to all sources when the bottleneck resource becomes saturated.
Reference: [20] <author> T. Ott, J. Kemperman, and M. Mathis. </author> <title> The Stationary Behavior of Ideal TCP Congestion Avoidance. </title> <address> ftp://ftp.bellcore.com/pub/tjo/TCPwindow.ps, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: As more connections become active, the rate of congestion notification, and thus, the loss rates must increase. Steady state analysis of the tcp congestion avoidance algorithm <ref> [7, 15, 17, 18, 20] </ref> gives some insight as to why this is the case.
Reference: [21] <author> V. Paxson. </author> <title> End-to-End Internet Packet Dynamics. </title> <booktitle> In Proc. of ACM SIGCOMM, </booktitle> <month> September </month> <year> 1997. </year>
Reference-contexts: Loss rates are especially high during times of heavy congestion, when a large number of connections compete for scarce network bandwidth. Recent measurements have shown that the growing demand for network bandwidth has driven loss rates up across various links in the Internet <ref> [21] </ref>. One of the reasons for high packet loss rate is the failure of the network to provide early congestion notification to sources. This has led to proposals for active queue management, such as Random Early Detection (red) [1, 11] and variations thereof [16].
Reference: [22] <author> K. K. Ramakrishnan and S. Floyd. </author> <title> A Proposal to Add Explicit Congestion Notification (ECN) to IPv6 and to TCP. Internet Draft draft-kksjf-ecn-00.txt, </title> <month> November </month> <year> 1997. </year>
Reference-contexts: When the average queue length exceeds a minimum threshold (min th ), packets are randomly dropped or marked with an explicit congestion notification (ecn) bit <ref> [8, 22, 23] </ref> with a given probability. A connection receiving congestion notification in the form of an ecn mark, cuts its congestion window in half as it would if it had detected a packet loss.
Reference: [23] <author> K. K. Ramakrishnan and R. Jain. </author> <title> A Binary Feedback Scheme for Congestion Avoidance in Computer Networks. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 8(2) </volume> <pages> 158-181, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: When the average queue length exceeds a minimum threshold (min th ), packets are randomly dropped or marked with an explicit congestion notification (ecn) bit <ref> [8, 22, 23] </ref> with a given probability. A connection receiving congestion notification in the form of an ecn mark, cuts its congestion window in half as it would if it had detected a packet loss.
Reference: [24] <author> C. Villamizar and C. Song. </author> <title> High Performance TCP in ANSNET. </title> <journal> Computer Communication Review, </journal> <volume> 24(5) </volume> <pages> 45-60, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: In lieu of explicit congestion notification, Equation 2 provides some insight on how to reduce loss rates. In particular, decreasing the segment size used in congestion avoidance, increasing the bandwidth of the congested link, and increasing the round-trip times through the use of additional buffers <ref> [24] </ref> can slow the rate of congestion notification considerably and thus, decrease the amount of packet loss observed.
Reference: [25] <author> Z. Wang and J. Crowcroft. </author> <title> A New Congestion Control Scheme: Slow Start and Search (Tri-S). </title> <journal> Computer Communication Review, </journal> <volume> 21(1) </volume> <pages> 32-43, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: While bandwidth-based increases provide end-hosts with an upper bound on how aggressively they can ramp up their sending rates, it is often desirable for a source to change its sending rate more slowly or not at all when nearing the congestion point <ref> [2, 25, 26] </ref> in order to avoid oscillations inherent in tcp's windowing algorithm. We are currently investigating incorporating such techniques into the bandwidth-based increase algorithm. We are also exploring additional mechanisms to improve the 19 DRAFT fairness of the windowing algorithms.
Reference: [26] <author> Z. Wang and J. Crowcroft. </author> <title> Eliminating Periodic Packet Losses in 4.3-Tahoe BSD TCP Congestion Control Algorithm. </title> <journal> Computer Communication Review, </journal> <volume> 22(2) </volume> <pages> 9-16, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: While bandwidth-based increases provide end-hosts with an upper bound on how aggressively they can ramp up their sending rates, it is often desirable for a source to change its sending rate more slowly or not at all when nearing the congestion point <ref> [2, 25, 26] </ref> in order to avoid oscillations inherent in tcp's windowing algorithm. We are currently investigating incorporating such techniques into the bandwidth-based increase algorithm. We are also exploring additional mechanisms to improve the 19 DRAFT fairness of the windowing algorithms.
Reference: [27] <author> L. Zhang, S. Shenker, and D. Clark. </author> <title> Observations on the Dynamics of a Congestion Control Algorithm: The Effects of Two-Way Traffic. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 133-148, </pages> <month> August </month> <year> 1991. </year> <month> 21 </month>
Reference-contexts: The actual queue length can often be larger than the average queue length especially when the offered load is steadily increasing. Another reason is that tcp traffic exhibits short-term burstiness which makes its offered load appear to be much larger than it actually is <ref> [27] </ref>. Such burstiness can cause buffer overflow even when the overall offered load is below the bottleneck link capacity. Still, the key advantage of using bandwidth-based linear increases is that the behavior of its aggregate traffic is mostly independent of the number of connections present.
References-found: 27

