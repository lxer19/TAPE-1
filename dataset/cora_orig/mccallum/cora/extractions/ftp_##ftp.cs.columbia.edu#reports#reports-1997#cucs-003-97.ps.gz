URL: ftp://ftp.cs.columbia.edu/reports/reports-1997/cucs-003-97.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1997.html
Root-URL: http://www.cs.columbia.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> Action Workflow Metro World-Wide-Workflow, </editor> <month> November </month> <year> 1995. </year> <note> www.actiontech.com/metrotour/resources/Metwp.htm. </note>
Reference-contexts: We previously developed another system called OzWeb (effectively version 0), described in [21]. It provided a general-purpose Web-based GUI to the unmodified Oz , analogous to the Web interfaces to some commercial workflow systems, e.g., Action Workflow Metro <ref> [1] </ref> or Lotus Notes Domino [35] (we separately developed a special-purpose Web-based GUI for a proof-of-concept Oz environment instance supporting medical care plans [34]). The original architecture involved an HTTP proxy server and would work with any HTTP browser, but that is where the similarity ends.
Reference: [2] <author> Kenneth M. Anderson, Richard N. Taylor, and E. James Whitehead, Jr. </author> <title> Chimera: Hypertext for heterogeneous software environments. </title> <booktitle> In 1994 European Conference on Hypermedia Technology, </booktitle> <pages> pages 94-107, </pages> <address> Edinburgh, Scotland, </address> <month> September </month> <year> 1994. </year>
Reference: [3] <author> Keith Andrews, Frank Kappe, and Hermann Maurer. </author> <title> Serving information to the Web with Hyper-G. </title> <booktitle> In 3rd International World-Wide Web Conference, </booktitle> <address> Darmstadt, Germany, </address> <month> April </month> <year> 1995. </year> <note> Elsevier Science B.V. www.igd.fhg.de/www/www95/proceedings/papers/105/hgw3.html. </note>
Reference-contexts: Relationships among hypertext pages augment the usual links. However, data content must be modified to include the entity class, attributes, and relationships. Either client or server-side processing is supported. In contrast, Hyper-G <ref> [3] </ref> supports hierarchical structuring of aggregate collections of Web pages, where a collection may be a component of multiple parents and collections can be spread across websites. Links are represented externally to the hypermedia content. Scaling is supported by replication and caching (with weak consistency).
Reference: [4] <institution> Standard for electronic manuscript preparation and markup, </institution> <year> 1986. </year>
Reference-contexts: Links are represented externally to the hypermedia content. Scaling is supported by replication and caching (with weak consistency). Hyper-G uses its own SGML <ref> [4] </ref> format, but converts to HTML when serving a WWW client. It provides an interchange format and utilities for importing and exporting external collections. None of these systems supports process or transactions. Field [50] uses a message bus to incorporate tools into an integrated software development architecture.
Reference: [5] <author> Daniel J. Barrett, Lori A. Clarke, Peri L. Tarr, and Alexander E. Wise. </author> <title> A framework for event-based software integration. </title> <journal> ACM Transactions on Software Engineering and Methodology, </journal> <volume> 5(4) </volume> <pages> 378-421, </pages> <month> October </month> <year> 1996. </year> <month> 30 </month>
Reference-contexts: Polylith [49] extends this concept to allow executing distributed system components to be temporarily shut down and moved among hosts. These and other related models of tool integration are subsumed by the event-based framework presented in <ref> [5] </ref>. We do not intend to compete with such work, but will consider how to build on top as part of our future directions on groupspace tool servers.
Reference: [6] <author> Israel Ben-Shaul and Gail E. Kaiser. </author> <title> A Paradigm for Decentralized Process Modeling. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1995. </year>
Reference: [7] <author> Israel Z. Ben-Shaul and Gail E. Kaiser. </author> <title> An interoperability model for process-centered software engineering environments and its implementation in Oz. </title> <type> Technical Report CUCS-034-95, </type> <institution> Columbia University Department of Computer Science, </institution> <month> December </month> <year> 1995. </year> <month> ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-034-95.ps.Z. </month>
Reference-contexts: For fully distributed, "shared nothing" multi-server systems, for example to scale up to collaborative work among teams, as opposed to among individual members of one team, we plan to expand the "International Alliance" metaphor developed for Oz <ref> [7] </ref>. The gist is that groupspaces would register with one or more LDAP's to become available to their subweb proxy servers.
Reference: [8] <author> T. Berners-Lee and D. Connolly. </author> <title> Hypertext Markup Language - 2.0, </title> <month> November </month> <year> 1995. </year> <title> Network Working Group Request For Comments: </title> <publisher> 1866,. </publisher>
Reference: [9] <author> T. Berners-Lee, R. Fielding, and H. Frystyk. </author> <title> Hypertext Transfer Protocol - HTTP/1.0, May 1996. Network Working Group Request For Comments: </title> <year> 1945. </year>
Reference: [10] <author> Gregory Alan Bolcer and Richard N. Taylor. Endeavors: </author> <title> A process system integration infrastructure. </title> <editor> In Wilhelm Schafer, editor, </editor> <booktitle> 4th International Conference on the Software Process: Software Process - Improvement and Practice, </booktitle> <month> December </month> <year> 1996. </year> <note> In press. </note>
Reference-contexts: For example, a later version of OzWeb might employ an alternative process engine, or a synergized set of process engines, e.g., [33] explains how we integrated Oz's (and now OzWeb's) process engine with TeamWare <ref> [10] </ref>. Our subweb architecture seems reasonably general, simple and elegant for adapting existing client/server process-centered environments into a hypermedia collaboration environment framework. The server for a process-centered environment would already provide basic groupspace functionality and could be augmented by the subweb mechanism, as we described for Oz.
Reference: [11] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions) part one: Mechanisms for specifying and describing the format of Internet message bodies, </title> <month> September </month> <year> 1993. </year> <title> Network Working Group Request for Comments: </title> <type> 1521. </type>
Reference: [12] <author> Charles Brooks, Murray S. Mazer, Scott Meeks, and Jim Miller. </author> <title> Application-specific proxy servers as HTTP stream transducers. In World Wide Web Journal: </title> <booktitle> 4th International World Wide Web Conference, </booktitle> <pages> pages 539-548, </pages> <address> Boston MA, </address> <month> December </month> <year> 1995. </year> <institution> O'Reilly & Associates. </institution>
Reference: [13] <author> Marc H. Brown. WebCard: </author> <title> Integrated and uniform access to mail, news, and the Web. </title> <type> Technical Report 139a, </type> <institution> DEC Systems Research Center, </institution> <month> July </month> <year> 1996. </year> <title> ftp.digital.com/pub/DEC/SRC/research-reports/SRC-139a.html. [14] cgi@ncsa.uiuc.edu. The Common Gateway Interface. </title> <publisher> hoohoo.ncsa.uiuc.edu/cgi/overview.html. </publisher>
Reference-contexts: Repository data is transformed to/from a common structured hypermedia format by a repository-specific gateway. Only navigational access is supported. Update requests are turned down if the object has changed since last retrieved, but there are no transactions, and no process. WebCard <ref> [13] </ref> is one of several systems that supports representation of Web pages in the style of email/news folders. Lightweight Databases [19] extends HTML to map relational database schemas onto hypertext documents, to support database-style queries that rely on semantic knowledge of the structure and content of documents.
Reference: [15] <editor> Citrix, </editor> <publisher> Inc. </publisher> <address> Citrix WinFrame. http://www.citrix.com/. </address>
Reference: [16] <author> World-Wide-Web Consortium. </author> <title> W3C Reference Library. </title> <address> http://www.w3.org/pub/WWW/Library/. </address>
Reference: [17] <author> Bill Curtis, Marc I. Kellner, and Jim Over. </author> <title> Process modeling. </title> <journal> Communications of the ACM, </journal> <volume> 35(9) </volume> <pages> 75-90, </pages> <month> September </month> <year> 1992. </year>
Reference: [18] <author> Umesh Dayal, Hector Garcia-Molina, Mei Hsu, Ben Kao, and Ming-Chien Shan. </author> <title> Third generation TP monitors: A database challenge. </title> <booktitle> In 1993 SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 393-398, </pages> <month> May </month> <year> 1993. </year> <journal> Special issue of SIGMOD Record, </journal> <volume> 22(2), </volume> <month> June </month> <year> 1993. </year>
Reference: [19] <author> S.A. Dobson and V.A. Burrill. </author> <title> Lightweight databases. </title> <booktitle> In 3rd International World-Wide Web Conference, </booktitle> <address> Darmstadt, Germany, </address> <month> April </month> <year> 1995. </year> <note> Elsevier Science B.V. www.igd.fhg.de/www/www95/proceedings/papers/54/darm.html. </note>
Reference-contexts: Only navigational access is supported. Update requests are turned down if the object has changed since last retrieved, but there are no transactions, and no process. WebCard [13] is one of several systems that supports representation of Web pages in the style of email/news folders. Lightweight Databases <ref> [19] </ref> extends HTML to map relational database schemas onto hypertext documents, to support database-style queries that rely on semantic knowledge of the structure and content of documents. Relationships among hypertext pages augment the usual links. However, data content must be modified to include the entity class, attributes, and relationships.
Reference: [20] <author> John C. Doppke. </author> <title> Software processing modeling and execution within virtual environments. </title> <type> Technical Report CU-CS-805-96, </type> <institution> University of Colorado Department of Computer Science, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: Workflow-based MUDs have already been investigated in Promo <ref> [20] </ref>. However, in our case the same groupspace may participate in multiple alliances, each corresponding to a MUD, so exactly what a user can do and what objects he/she can access may depend on how that user arrived in the groupspace.
Reference: [21] <author> Stephen E. Dossick and Gail E. Kaiser. </author> <title> WWW access to legacy client/server applications. </title> <booktitle> In 5th International World Wide Web Conference, </booktitle> <pages> pages 931-940, </pages> <address> Paris, France, </address> <month> May </month> <year> 1996. </year> <title> Elsevier Science B.V. </title> <journal> Special issue of Computer Networks and ISDN Systems, The International Journal of Computer and Telecommunications Networking, </journal> <pages> 28(7-11), </pages> <month> May </month> <year> 1996. </year> <note> http://www.psl.cs.columbia.edu/papers/CUCS-003-96.html. </note>
Reference-contexts: We are working on an extension to OzWeb's transaction management facilities, as described in [30], to take advantage of any locking, "check out", versioning, etc. facilities in backend website servers to more fully enforce transactional properties. We previously developed another system called OzWeb (effectively version 0), described in <ref> [21] </ref>. It provided a general-purpose Web-based GUI to the unmodified Oz , analogous to the Web interfaces to some commercial workflow systems, e.g., Action Workflow Metro [1] or Lotus Notes Domino [35] (we separately developed a special-purpose Web-based GUI for a proof-of-concept Oz environment instance supporting medical care plans [34]).
Reference: [22] <editor> Ahmed K. Elmagarmid, editor. </editor> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo CA, </address> <year> 1992. </year>
Reference: [23] <author> Christer Fernstrom. </author> <title> PROCESS WEAVER: Adding process support to UNIX. </title> <booktitle> In 2nd International Conference on the Software Process: Continuous Software Process Improvement, </booktitle> <pages> pages 12-26, </pages> <address> Berlin, Germany, February 1993. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: A new tool service component, Rivendell, replaced Oz's native tool management mechanism. In future work we would like to further exploit our recent componentization direction, where these components have been tugged apart, are in principle replaceable within Oz, and have been experimentally introduced into foreign systems, such as ProcessWEAVER <ref> [23] </ref>, as described in [27, 46]. For example, a later version of OzWeb might employ an alternative process engine, or a synergized set of process engines, e.g., [33] explains how we integrated Oz's (and now OzWeb's) process engine with TeamWare [10].
Reference: [24] <author> Dimitrios Georgakopoulos, Mark Hornick, and Amit Sheth. </author> <title> An overview of workflow management: From process modelling to workflow automation infrastructure. </title> <booktitle> Distributed and Parallel Databases, </booktitle> <volume> 3(2) </volume> <pages> 119-152, </pages> <year> 1995. </year>
Reference: [25] <author> Mark A. Gisi and Gail E. Kaiser. </author> <title> Extending a tool integration language. </title> <editor> In Mark Dowson, editor, </editor> <booktitle> 1st International Conference on the Software Process: Manufacturing Complex Systems, </booktitle> <pages> pages 218-227, </pages> <address> Redondo Beach CA, October 1991. </address> <publisher> IEEE Computer Society Press. ftp://ftp.psl.cs.columbia.edu/pub/psl/icsp91.ps.Z. </publisher>
Reference: [26] <institution> The Harvest information discovery and access system, </institution> <month> December </month> <year> 1995. </year> <month> harvest.cs.colorado.edu/. </month>
Reference: [27] <author> George T. Heineman. </author> <title> A Transaction Manager Component for Cooperative Transaction Models. </title> <type> PhD thesis, </type> <institution> Columbia University Department of Computer Science, </institution> <month> June </month> <year> 1996. </year> <note> CUCS-010-96. ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-010-96.ps.gz. </note>
Reference-contexts: In future work we would like to further exploit our recent componentization direction, where these components have been tugged apart, are in principle replaceable within Oz, and have been experimentally introduced into foreign systems, such as ProcessWEAVER [23], as described in <ref> [27, 46] </ref>. For example, a later version of OzWeb might employ an alternative process engine, or a synergized set of process engines, e.g., [33] explains how we integrated Oz's (and now OzWeb's) process engine with TeamWare [10].
Reference: [28] <author> Kevin Hughes. Hypermail, </author> <year> 1996. </year> <note> www.eit.com/goodies/software/hypermail/. </note>
Reference-contexts: Source code is automatically converted to cross-referenced hypertext (i.e., uses of 23 24 identifiers are linked to their definitions) via process automation that invokes a home-grown utility called Hi-C. Email archives were converted to HTML using Hypermail <ref> [28] </ref>, and the subweb is populated with the code, design, testing and informal materials described previously, which are divided among three Columbia websites (two public, representing the course materials "as is" developed independently of this research, and one internal for the subweb).
Reference: [29] <institution> Insignia Solutions, Inc. </institution> <note> What is NTrigue? http://www.insignia.com/marcom/DataSheets/NTrigue DataSheet.html. 31 </note>
Reference: [30] <author> Gail E. Kaiser Jack Jingshuang Yang and Stephen E. Dossick. </author> <title> An external transaction service for www. Technical Report CUCS-047-96, </title> <institution> Columbia University Department of Computer Science, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: A process designer may explicitly include version control of web objects in the process, as was often done in Oz instances, but this affects the web object content for only the Copy access type. We are working on an extension to OzWeb's transaction management facilities, as described in <ref> [30] </ref>, to take advantage of any locking, "check out", versioning, etc. facilities in backend website servers to more fully enforce transactional properties. We previously developed another system called OzWeb (effectively version 0), described in [21].
Reference: [31] <author> Astrid M. Julienne and Brian Holtz. </author> <title> ToolTalk & Open Protocols: Inter-Application Communication. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1994. </year>
Reference-contexts: This requires either source code availability (to modify the tool to understand Field messages) or an existing API through which the capability can be added. There is little support for integrating other types of tools. Sun's ToolTalk <ref> [31] </ref> protocol allows applications from differing vendors to share information via a message bus type 27 architecture. ToolTalk could conceivably be employed as another communication option via which users could request tools from a tool server.
Reference: [32] <author> Gail E. Kaiser. </author> <title> Cooperative transactions for multi-user environments. </title> <editor> In Won Kim, editor, </editor> <title> Modern Database Systems: The Object Model, Interoperability, and Beyond, </title> <booktitle> chapter 20, </booktitle> <pages> pages 409-433. </pages> <publisher> ACM Press, </publisher> <address> New York NY, </address> <year> 1994. </year> <month> ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-006-93.ps.Z. </month>
Reference: [33] <author> Gail E. Kaiser, Israel Z. Ben-Shaul, Steven S. Popovich, and Stephen E. Dossick. </author> <title> A metalinguistic approach to process enactment extensibility. </title> <editor> In Wilhelm Schafer, editor, </editor> <booktitle> 4th International Conference on the Software Process: Improvement and Practice, </booktitle> <address> Brighton, UK, </address> <month> December </month> <year> 1996. </year> <month> ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-016-96.ps.gz. </month>
Reference-contexts: For example, a later version of OzWeb might employ an alternative process engine, or a synergized set of process engines, e.g., <ref> [33] </ref> explains how we integrated Oz's (and now OzWeb's) process engine with TeamWare [10]. Our subweb architecture seems reasonably general, simple and elegant for adapting existing client/server process-centered environments into a hypermedia collaboration environment framework.
Reference: [34] <author> Wenke Lee, Gail E. Kaiser, Paul D. Clayton, and Eric H. Sherman. OzCare: </author> <title> A workflow automation system for care plans. </title> <editor> In James J. Cimino, editor, </editor> <booktitle> 1996 American Medical Informatics Association Annual Fall Symposium, </booktitle> <pages> pages 577-581, </pages> <address> Washington DC, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: It provided a general-purpose Web-based GUI to the unmodified Oz , analogous to the Web interfaces to some commercial workflow systems, e.g., Action Workflow Metro [1] or Lotus Notes Domino [35] (we separately developed a special-purpose Web-based GUI for a proof-of-concept Oz environment instance supporting medical care plans <ref> [34] </ref>). The original architecture involved an HTTP proxy server and would work with any HTTP browser, but that is where the similarity ends. There was no hypermedia: none of the entities were in HTML format or included embedded links.
Reference: [35] <institution> Lotus .domino. </institution> <note> http://domino.lotus.com. </note>
Reference-contexts: We previously developed another system called OzWeb (effectively version 0), described in [21]. It provided a general-purpose Web-based GUI to the unmodified Oz , analogous to the Web interfaces to some commercial workflow systems, e.g., Action Workflow Metro [1] or Lotus Notes Domino <ref> [35] </ref> (we separately developed a special-purpose Web-based GUI for a proof-of-concept Oz environment instance supporting medical care plans [34]). The original architecture involved an HTTP proxy server and would work with any HTTP browser, but that is where the similarity ends.
Reference: [36] <author> Jean-Claude Mamou. OBDC and Mosaic, </author> <month> October </month> <year> 1995. </year> <note> www.w3.org/hypertext/WWW/Gateways/OQL.html. </note>
Reference-contexts: Meteor [52] is a transactional workflow engine that submits workflow tasks to the Web (and backend databases) using CGI, but does not support workflow over Web (i.e., URL) accesses. Databases often support access from the Web to a database, but not vice versa (e.g., the O2 Web Gateway <ref> [36] </ref>). A few databases have been constructed on top of hypermedia, akin to our subwebs, although none are close enough to warrant attempted reuse. Most have no support for either workflow or transactions, and are centralized (the equivalent of a single website).
Reference: [37] <author> Udi Manber, Sun Wu, and Burra Gopal. GLIMPSE: </author> <title> A tool to search entire file systems, </title> <year> 1996. </year> <month> glimpse.cs.arizona.edu/. </month>
Reference: [38] <author> Christian Mogensen Martin Roscheisen and Terry Winograd. </author> <title> Beyond browsing: Shared commands, soaps, trails, and on-line communities. </title> <booktitle> In 3rd International World-Wide Web Conference, </booktitle> <month> April </month> <year> 1995. </year> <note> www.igd.fhg.de/www/www95/proceedings/papers/88/TR/WWW95.html. </note>
Reference-contexts: Then Hugh decides to search the full WWW, not just the subweb, using a standard search engine. He finds a "public" page he deems relevant, and adds it to the subweb as depicted in Figure 13. 7 RELATED WORK ComMentor <ref> [38] </ref> annotation servers are similar to our subweb servers, adding external application-specific super-structures on top of pre-existing hypermedia, but without the active capabilities of groupspace services. Annotation servers are realized via modified WWW browsers or "plug-ins" to standard browsers.
Reference: [39] <author> Richard F. Rashid Michael B. Jones and Mary R. Thompson. Matchmaker: </author> <title> An interface specification language for distributed processing. </title> <booktitle> In 12th Annual ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 225-235, </pages> <address> New Orleans LA, </address> <month> January </month> <year> 1985. </year>
Reference-contexts: A tool server which connected to SoftBench would make it possible to more easily add non SoftBench-aware tools to the development system. Matchmaker <ref> [39] </ref> is a distributed computing interface specification language which allows a programmer to define RPC interfaces between remote processes. A multi-targeted compiler then generates C, Pascal, Lisp, or Ada code which implements the interfaces defined.
Reference: [40] <author> Michael Baentsch, Georg Molter and Peter Sturm. WebMake: </author> <title> Integrating distributed software development in a structure-enhanced Web. </title> <booktitle> In 3rd International World-Wide Web Conference, </booktitle> <address> Darmstadt, Germany, </address> <month> April </month> <year> 1995. </year> <note> Elsevier Science B.V. www.igd.fhg.de/www/www95/proceedings/papers/51/WebMake/WebMake.html. </note>
Reference-contexts: Annotation servers are realized via modified WWW browsers or "plug-ins" to standard browsers. WebMake <ref> [40] </ref> supports hierarchical structuring of Web files, checkout for editing, and invocation of file-based tools like make. A special Web client hides details from users; otherwise WebMake uses standard facilities: CGI and MIME types.
Reference: [41] <author> John Noll and Walt Scacchi. </author> <title> A hypertext system for integrating heterogeneous autonomous software repositories. </title> <booktitle> In 3rd Irvine Software Symposium, </booktitle> <pages> pages 49-60, </pages> <address> Irvine CA, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: An application must be implemented by a method of the relevant class in the hyperbase schema to use transactions, but methods written in Scheme can be added dynamically. DHT <ref> [41] </ref> overlays hypertext to add on transparent access and external organization to distributed, heterogeneous, autonomously-maintained repositories. Repository data is transformed to/from a common structured hypermedia format by a repository-specific gateway. Only navigational access is supported.
Reference: [42] <author> Object Management Group. </author> <title> The Common Object Request Broker: Architecture Specification Revision 2.0, </title> <month> July </month> <year> 1995. </year> <note> www.omg.org/corba2/cover.htm. </note>
Reference: [43] <author> John Ockerbloom. </author> <title> Introducing structured data types into Internet-scale information systems, </title> <month> May </month> <year> 1994. </year> <type> PhD Thesis Proposal. </type> <note> www.cs.cmu.edu/afs/cs.cmu.edu/user/spok/www/proposal.html. </note>
Reference-contexts: These and other related models of tool integration are subsumed by the event-based framework presented in [5]. We do not intend to compete with such work, but will consider how to build on top as part of our future directions on groupspace tool servers. Ockerbloom <ref> [43] </ref> proposes an alternative to MIME types, called Typed Object Model (TOM), that could conceivably be employed instead of a MIME extension to incorporate a Personal Tool Server into our architecture.
Reference: [44] <author> OSF Research Institute. </author> <title> Intelligent Browsing Assistant for the World Wide Web and GroupWare for the Web, </title> <month> October </month> <year> 1995. </year> <note> www.osf.org/www/waiba/index.html. </note>
Reference-contexts: Data may be temporarily transmitted to another locale for tool execution (e.g., to compile for a particular architecture) using XMosaic remote control, but the entirety of a structured document normally resides at the same website. There are no transactions operating across separate accesses, and no process. WAIBA <ref> [44] </ref> produced a suite of utilities useful to collaborative endeavors, such as shared annotations, search engines that find what's changed in categories of interest, what's changed in recently viewed pages, what's out there that's "similar" to what the user is currently viewing, displays link composition to a given depth, displays browsing
Reference: [45] <author> Burkhard Peuschel and Stefan Wolf. </author> <title> Architectural support for distributed process centered software development environments. </title> <editor> In Wilhelm Schafer, editor, </editor> <booktitle> 8th International Software Process Workshop: State of the Practice in Process Technology, </booktitle> <pages> pages 126-128, </pages> <address> Wadern, Germany, </address> <month> March </month> <year> 1993. </year> <note> Position paper. </note>
Reference-contexts: The server for a process-centered environment would already provide basic groupspace functionality and could be augmented by the subweb mechanism, as we described for Oz. Native clients would be replaced by Web browsers and proxy servers. Peer/peer process-centered environments where the peers already share a common repository <ref> [45] </ref> may be adaptable to multiple groupspace servers sharing a common subweb server, but that investigation is outside our scope.
Reference: [46] <author> Steven S. Popovich. </author> <title> An Architecture for Extensible Workflow Process Servers. </title> <type> PhD thesis, </type> <institution> Columbia University Department of Computer Science, </institution> <month> January </month> <year> 1997. </year> <note> CUCS-014-96. ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-014-96.ps.gz. </note>
Reference-contexts: In future work we would like to further exploit our recent componentization direction, where these components have been tugged apart, are in principle replaceable within Oz, and have been experimentally introduced into foreign systems, such as ProcessWEAVER [23], as described in <ref> [27, 46] </ref>. For example, a later version of OzWeb might employ an alternative process engine, or a synergized set of process engines, e.g., [33] explains how we integrated Oz's (and now OzWeb's) process engine with TeamWare [10].
Reference: [47] <institution> Programming Systems Laboratory. Application Specific Http Services (ASHeS). </institution> <note> www.psl.cs.columbia.edu/software/ashes.html. </note>
Reference: [48] <institution> Programming Systems Laboratory. Oz 1.2 Manual Set, </institution> <month> July </month> <year> 1996. </year> <institution> Columbia University Department of Computer Science. ftp.psl.cs.columbia.edu/pub/psl/oz.1.2.manuals. </institution>
Reference: [49] <author> James M. Purtilo and Christine R. Hofmeister. </author> <title> Dynamic reconfiguration of distributed programs. </title> <booktitle> In 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 560-571, </pages> <address> Arlington TX, May 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Matchmaker [39] is a distributed computing interface specification language which allows a programmer to define RPC interfaces between remote processes. A multi-targeted compiler then generates C, Pascal, Lisp, or Ada code which implements the interfaces defined. Polylith <ref> [49] </ref> extends this concept to allow executing distributed system components to be temporarily shut down and moved among hosts. These and other related models of tool integration are subsumed by the event-based framework presented in [5].
Reference: [50] <author> Steven P. Reiss. </author> <title> Connecting tools using message passing in the Field environment. </title> <journal> IEEE Software, </journal> <volume> 7(4) </volume> <pages> 57-66, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Scaling is supported by replication and caching (with weak consistency). Hyper-G uses its own SGML [4] format, but converts to HTML when serving a WWW client. It provides an interchange format and utilities for importing and exporting external collections. None of these systems supports process or transactions. Field <ref> [50] </ref> uses a message bus to incorporate tools into an integrated software development architecture. This requires either source code availability (to modify the tool to understand Field messages) or an existing API through which the capability can be added. There is little support for integrating other types of tools.
Reference: [51] <author> Hans Schuster, Stefan Jablonski, and Christoph Buvler. Client/server qualities: </author> <title> A basis for reliable distributed workflow management systems. </title> <booktitle> In 17th International Conference on Distributed Computing Systems, </booktitle> <address> Baltimore MD, </address> <month> May </month> <year> 1997. </year> <note> In press. </note>
Reference: [52] <author> Amit Sheth. </author> <title> Private communication, </title> <month> June </month> <year> 1996. </year> <note> See lsdis.cs.uga.edu/workflow/. 32 </note>
Reference-contexts: Meteor <ref> [52] </ref> is a transactional workflow engine that submits workflow tasks to the Web (and backend databases) using CGI, but does not support workflow over Web (i.e., URL) accesses. Databases often support access from the Web to a database, but not vice versa (e.g., the O2 Web Gateway [36]).
Reference: [53] <institution> Tektronix, Inc. WinDD Network Display. </institution> <address> http://www.tek.com/Network Displays/Support/PAPERS/Web-5.doc.html. </address>
Reference: [54] <author> Gary Thunquest. </author> <title> Supporting task management & process automation in the softbench development environment. </title> <editor> In Ian Thomas, editor, </editor> <booktitle> 7th International Software Process Workshop: Communication and Coordination in the Software Process, </booktitle> <pages> pages 133-135, </pages> <address> Yountville CA, October 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: ToolTalk could conceivably be employed as another communication option via which users could request tools from a tool server. Integration with Sun development tools would be made easier, since they support the integration of third-party software via the ToolTalk protocol. HP's SoftBench <ref> [54] </ref> framework, a tool-integration platform that provides an open, common set of communication and user interface services to all tools integrated with the SoftBench environment would also be a useful platform with which to integrate a tool services component.
Reference: [55] <author> Giuseppe Valetto and Gail E. Kaiser. </author> <title> Enveloping sophisticated tools into process-centered environments. </title> <journal> Journal of Automated Software Engineering, </journal> <volume> 3 </volume> <pages> 309-345, </pages> <year> 1996. </year> <month> ftp://ftp.psl.cs.columbia.edu/pub/psl/CUCS-022-95.ps.gz. </month>
Reference: [56] <author> Jim Whitehead. </author> <title> Working group on versioning and configuration management of World Wide Web content, </title> <month> June </month> <year> 1996. </year> <note> www.ics.uci.edu/~ejw/versioning/. </note>
Reference-contexts: The most significant limitation of OzWeb 0.35 is we ignore any version and configuration management facilities that may be present in the underlying websites from which subweb materials are obtained <ref> [56] </ref>. A process designer may explicitly include version control of web objects in the process, as was often done in Oz instances, but this affects the web object content for only the Copy access type.
Reference: [57] <author> Uffe K. Wiil. Hyperform: </author> <title> Rapid prototyping of hypermedia services. </title> <journal> Communications of the ACM, </journal> <volume> 38(8) </volume> <pages> 109-111, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: A few databases have been constructed on top of hypermedia, akin to our subwebs, although none are close enough to warrant attempted reuse. Most have no support for either workflow or transactions, and are centralized (the equivalent of a single website). Some exceptions: Hyperform <ref> [57] </ref> is a hypertext database with an extensible object-oriented schema. It allows choice between checkout of individual attributes or entire objects (dirty reads are allowed), and conventional transactions over multiple objects.
Reference: [58] <author> Lambda MOO. </author> <month> telnet://lambda.parc.xerox.com:8888. </month>
Reference-contexts: This model is illustrated in Figure 14. For navigation and movement of users, data and tasks among groupspaces, we plan to develop a "meta-web" analogous to multi-user domains (MUDs, e.g., Lambda MOO <ref> [58] </ref>), where users can move from room to adjacent room (sometimes through trap-doors) and pick up an object in one room and carry it to another (but the object may transform from a trunk filled with gold to a monkey). Workflow-based MUDs have already been investigated in Promo [20].
Reference: [59] <author> Jack Jingshuang Yang and Gail E. Kaiser. </author> <booktitle> An architecture for integrating OODBs with WWW. In 5th International World Wide Web Conference, </booktitle> <pages> pages 1243-1254, </pages> <address> Paris, France, </address> <month> May </month> <year> 1996. </year> <title> Elsevier Science B.V. </title> <journal> Special issue of Computer Networks and ISDN Systems, The International Journal of Computer and Telecommunications Networking, </journal> <pages> 28(7-11), </pages> <month> May </month> <year> 1996. </year> <note> http://www.psl.cs.columbia.edu/papers/CUCS-004-96.html. </note>
Reference-contexts: We also developed the experimental subweb server described in <ref> [59] </ref>. We used a rather convoluted implementation involving direct requests for invocation of CGI scripts, rather than a proxy. It was thus impossible to intercept all Web accesses as in our current system. No groupspace services were supported, this was purely an organizational facility.
Reference: [60] <author> W. Yeong, T. Howes, and S. Kille. </author> <title> Lightweight Directory Access Protocol, </title> <month> March </month> <year> 1995. </year> <title> Network Working Group Request For Comments: 1777, </title> <journal> andrew2.andrew.cmu.edu/rfc/rfc1777.html. </journal> <volume> 33 </volume>
Reference-contexts: It is not possible for an end-user to be operating in multiple groupspaces at the same time from the same browser. This limitation is easy to remove by connecting each subweb proxy to a directory service, e.g., using the Lightweight Directory Access Protocol (LDAP <ref> [60] </ref>) | an industry standard that allows for simple queries to be made to X.500 compliant directory servers, through which it can interact with any number of registered subwebs.
References-found: 59

