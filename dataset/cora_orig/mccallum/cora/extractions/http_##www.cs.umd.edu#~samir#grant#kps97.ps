URL: http://www.cs.umd.edu/~samir/grant/kps97.ps
Refering-URL: http://www.cs.umd.edu/~samir/grant/career.html
Root-URL: 
Email: Email addr: samir@cs.umd.edu  Email addr: pless@cs.umd.edu  Email addr: yoram@cs.umd.edu  
Phone: 9501355.  
Title: Fault Tolerant K-Center Problems  
Author: Samir Khuller Robert Pless Yoram J. Sussmann 
Note: Research supported by NSF Research Initiation Award CCR-9307462, and NSF CAREER Award CCR  Research supported by NSF Grant IRI-90-57934  Research supported by NSF CAREER Award CCR-9501355.  
Address: College Park, MD 20742  College Park, MD 20742  College Park, MD 20742  
Affiliation: Dept. of Computer Science and UMIACS University of Maryland  Dept. of Computer Science University of Maryland  Dept. of Computer Science University of Maryland  
Abstract: The basic K-center problem is a fundamental facility location problem, where we are asked to locate K facilities in a graph, and to assign vertices to facilities, so as to minimize the maximum distance from a vertex to the facility to which it is assigned. This problem is known to be NP-hard, and several optimal approximation algorithms that achieve a factor of 2 have been developed for it. We focus our attention on a generalization of this problem, where each vertex is required to have a set of ff (ff K) centers close to it. In particular, we study two different versions of this problem. In the first version, each vertex is required to have at least ff centers close to it. In the second version, each vertex that does not have a center placed on it is required to have at least ff centers close to it. For both these versions we are able to provide polynomial time approximation algorithms that achieve constant approximation factors for any ff. For the first version we give an algorithm that achieves an approximation factor of 3 for any ff, and achieves an approximation factor of 2 for ff &lt; 4. For the second version, we provide algorithms with approximation factors of 2 for any ff. The best possible approximation factor for even the basic K-center problem is 2. In addition, we give a polynomial time approximation algorithm for a generalization of the K-supplier problem where a subset of at most K supplier nodes must be selected as centers so that every demand node has at least ff centers close to it. We also provide polynomial time approximation algorithms for all the above problems for generalizations when cost and weight functions are defined on the set of vertices. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Chaudhuri, N. Garg, and R. Ravi, </author> <title> "Best Possible Approximation Algorithms for Generalized k-Center Problems", </title> <type> Technical Report MPI-I-96-1-021, </type> <institution> Max-Planck-Institut fur Informatik, Im Stadtwald, 66123 Saarbrucken, Germany, </institution> <year> (1996). </year>
Reference-contexts: We also show that for the ff-all-neighbor K-center problem, we can obtain an approximation factor of 3 for any ff, and a similar algorithm gives an approximation factor of 2 for ff &lt; 4 (perhaps the practically interesting case). Recently, Chauduri, Garg and Ravi <ref> [1] </ref> independently came up with different algorithms with matching approximation factors for the ff-neighbor K-center problem and the ff-neighbor K-suppliers problem. Their algorithm modifies Krumke's approach. The versions for which they provide algorithms are marked in the table below by [CGR].
Reference: [2] <author> M. Dyer and A. M. Frieze, </author> <title> "A simple heuristic for the p-center problem", </title> <journal> Operations Research Letters, </journal> <volume> Vol 3 </volume> <pages> 285-288, </pages> <year> (1985). </year>
Reference-contexts: Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal [4, 6, 7, 8]. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well <ref> [2, 7, 10] </ref>, including costs [7, 10] and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights <ref> [2, 10] </ref>. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9].
Reference: [3] <author> J. Edmonds and D. R. Fulkerson, </author> <title> "Bottleneck extrema", </title> <journal> Journal of Combinatorial Theory, </journal> <volume> Vol 8 </volume> <pages> 299-306, </pages> <year> (1970). </year>
Reference-contexts: K -Center Problems We may assume for simplicity that G is a complete graph, where the edge weights satisfy the triangle inequality. (We can always replace any edge by the shortest path between the corresponding pair of vertices.) The algorithm uses the threshold method introduced by Edmonds and Fulkerson in <ref> [3] </ref> and used for the K-center problem by Hochbaum and Shmoys in [7]. Sort all edge weights in nondecreasing order. Let the (sorted) list of edges be e 1 ; e 2 ; : : : e m (where m = n ).
Reference: [4] <author> T. Gonzalez, </author> <title> "Clustering to minimize the maximum inter-cluster distance", </title> <journal> Theoretical Computer Science, </journal> <volume> Vol 38 </volume> <pages> 293-306, </pages> <year> (1985). </year>
Reference-contexts: An approximation algorithm with a factor of , for a minimization problem, is a polynomial time algorithm that guarantees a solution with cost at most times the optimal solution. Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal <ref> [4, 6, 7, 8] </ref>. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights [2, 10].
Reference: [5] <author> M. R. Garey and D. S. Johnson, </author> <title> "Computers and Intractability: A guide to the theory of NP-completeness", </title> <publisher> Freeman, </publisher> <address> San Francisco (1978). </address>
Reference-contexts: For example, one may wish to install K fire stations and minimize the maximum distance (response time) from a location to its closest fire station. The problem is known to be NP-hard <ref> [5] </ref>. An approximation algorithm with a factor of , for a minimization problem, is a polynomial time algorithm that guarantees a solution with cost at most times the optimal solution.
Reference: [6] <author> D. Hochbaum and D. B. Shmoys, </author> <title> "A best possible heuristic for the k-center problem", </title> <journal> Mathematics of Operations Research, </journal> <volume> Vol 10 </volume> <pages> 180-184, </pages> <year> (1985). </year>
Reference-contexts: An approximation algorithm with a factor of , for a minimization problem, is a polynomial time algorithm that guarantees a solution with cost at most times the optimal solution. Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal <ref> [4, 6, 7, 8] </ref>. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights [2, 10]. <p> Let G 2 i denote the graph obtained by adding edges to G i between nodes that have a common neighbor. 2.1. Any ff We give an algorithm that obtains an approximation factor of 3 for any value of ff. The following technique was introduced by Hochbaum and Shmoys <ref> [6, 7] </ref> and has been used extensively to solve K-center problems. Find a maximal independent set in G 2 i .
Reference: [7] <author> D. Hochbaum and D. B. Shmoys, </author> <title> "A unified approach to approximation algorithms for bottleneck problems", </title> <journal> Journal of the ACM, </journal> <volume> Vol 33 </volume> <pages> 533-550, </pages> <year> (1986). </year>
Reference-contexts: An approximation algorithm with a factor of , for a minimization problem, is a polynomial time algorithm that guarantees a solution with cost at most times the optimal solution. Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal <ref> [4, 6, 7, 8] </ref>. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights [2, 10]. <p> Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal [4, 6, 7, 8]. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well <ref> [2, 7, 10] </ref>, including costs [7, 10] and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs <ref> [7, 10] </ref> and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> This matches the bound for the basic K-center problem, which is the best possible [8]. The algorithm is a very natural extension of the method given by Hochbaum and Shmoys <ref> [7] </ref> for the basic K-center problem. We also show that for the ff-all-neighbor K-center problem, we can obtain an approximation factor of 3 for any ff, and a similar algorithm gives an approximation factor of 2 for ff &lt; 4 (perhaps the practically interesting case). <p> We do not see any way of generalizing their technique to include weights. In addition, we provide constant approximation bounds for generalizations of the problem involving costs and weights, as well as for the ff-neighbor K-suppliers problem. For the K-suppliers problem, Hochbaum and Shmoys <ref> [7] </ref> give a proof (originally due to Howard Karloff ) showing that the factor of 3 is the best possible unless P = N P . Thus 3 is a lower bound for all the K-suppliers generalizations that we consider. <p> complete graph, where the edge weights satisfy the triangle inequality. (We can always replace any edge by the shortest path between the corresponding pair of vertices.) The algorithm uses the threshold method introduced by Edmonds and Fulkerson in [3] and used for the K-center problem by Hochbaum and Shmoys in <ref> [7] </ref>. Sort all edge weights in nondecreasing order. Let the (sorted) list of edges be e 1 ; e 2 ; : : : e m (where m = n ). <p> Run the algorithm below for each i from 1 to m, until a solution is obtained. (One can also use binary search to speed up the computation as suggested by Hochbaum and Shmoys <ref> [7] </ref>.) In each iteration, we work with the subgraph G i and view it as an unweighted graph. Since G i is an unweighted graph, when we refer to the distance between two nodes, we refer to the number of edges on a shortest path between them. <p> Let G 2 i denote the graph obtained by adding edges to G i between nodes that have a common neighbor. 2.1. Any ff We give an algorithm that obtains an approximation factor of 3 for any value of ff. The following technique was introduced by Hochbaum and Shmoys <ref> [6, 7] </ref> and has been used extensively to solve K-center problems. Find a maximal independent set in G 2 i .
Reference: [8] <author> W. L. Hsu and G. L. Nemhauser, </author> <title> "Easy and hard bottleneck location problems", </title> <journal> Discrete Applied Mathematics, </journal> <volume> Vol 1 </volume> <pages> 209-216, </pages> <year> (1979). </year>
Reference-contexts: An approximation algorithm with a factor of , for a minimization problem, is a polynomial time algorithm that guarantees a solution with cost at most times the optimal solution. Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal <ref> [4, 6, 7, 8] </ref>. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights [2, 10]. <p> The results are summarized in the table given below. 1.1. Our Results We improve Krumke's result, and show that we can obtain an approximation factor of 2 for the problem considered in his paper. This matches the bound for the basic K-center problem, which is the best possible <ref> [8] </ref>. The algorithm is a very natural extension of the method given by Hochbaum and Shmoys [7] for the basic K-center problem.
Reference: [9] <author> S. O. Krumke, </author> <title> "On a generalization of the p-center problem", </title> <journal> Information Processing Letters, </journal> <volume> Vol 56 </volume> <pages> 67-71, </pages> <year> (1995). </year>
Reference-contexts: Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke <ref> [9] </ref>. The problem is formally defined as follows: given an edge-weighted graph G = (V; E) find a subset S V of size at most K such that each vertex in V S is "close" to a set of ff vertices in S. <p> Formally, min max ffi (ff) (u; S) where ffi (ff) (u; S) = min max d (u; a) where d is the distance function. Krumke <ref> [9] </ref> gives an algorithm with an approximation factor of 4, by generalizing the notion of an independent set of vertices. The main motivation to study this problem is to provide some notion of fault-tolerance.
Reference: [10] <author> J. Plesnik, </author> <title> "A heuristic for the p-center problem in graphs", </title> <journal> Discrete Applied Mathematics, </journal> <volume> Vol 17 </volume> <pages> 263-268, </pages> <year> (1987) </year>
Reference-contexts: Approximation algorithms for the basic K-center problem have been very well studied and are known to be optimal [4, 6, 7, 8]. These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well <ref> [2, 7, 10] </ref>, including costs [7, 10] and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs <ref> [7, 10] </ref> and weights [2, 10]. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> These schemes present natural methods for obtaining an approximation factor of 2. Several approximation algorithms are known for interesting generalizations of the basic K-center problem as well [2, 7, 10], including costs [7, 10] and weights <ref> [2, 10] </ref>. The ff-neighbor K-center problem is discussed in a recent paper by Krumke [9]. <p> A simple extension of the proof given in <ref> [10] </ref> shows that the vertices so obtained cover all vertices in the graph with radius at most 3w i .
Reference: [11] <author> L. Smith, </author> <title> "Volunteers' rescue response rates worsen in Pr. </title> <publisher> William", </publisher> <address> The Washington Post, </address> <month> April </month> <year> (1996). </year> <month> 12 </month>
Reference-contexts: The main motivation to study this problem is to provide some notion of fault-tolerance. Namely, if we are concerned with the placement of emergency facilities, then providing "backup" centers when one center fails to respond is useful <ref> [11] </ref>.
References-found: 11

