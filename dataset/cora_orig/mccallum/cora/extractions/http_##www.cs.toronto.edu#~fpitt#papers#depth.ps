URL: http://www.cs.toronto.edu/~fpitt/papers/depth.ps
Refering-URL: http://www.cs.toronto.edu/~fpitt/research.html
Root-URL: 
Title: Proof Systems and Bounded Arithmetic  
Author: Franc~ois Pitt 
Note: 0 Warning!  
Date: May 3, 1995  
Abstract: This paper is centered around the basic problem of separating (or proving p-equivalent) the Frege (F) and extended Frege (eF ) proof systems. In this light, we survey some attempts at capturing the complexity classes P and ALOGTIME by using different formal systems, including the relationships between these formalisms. Also, we consider natural proof-systems for coNPc problems other than taut, along with their relationship to the F and eF systems. Finally, we consider the problem of finding hard This paper is not an introduction to the area: previous knowledge of the material presented herein is assumed of the reader, especially a basic knowledge of proof systems and complexity theory (i.e., machine models and complexity classes), and the major results in this area. For an excellent general introduction to complexity theory (including the basic terminology and results used throughout the paper), the reader is referred to the Handbook of Theoretical Computer Science [32], particularly the first three chapters. tautologies for the F or eF systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bill Allen. </author> <title> Arithmetizing uniform NC. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 53 </volume> <pages> 1-50, </pages> <year> 1991. </year>
Reference-contexts: the list of variables of g 0 and g 1 ): f (0; y) = g 0 (y); f (x; y) = h (x; y; f (Fh (x); y); f (Bh (x); y)); for x &gt; 1; (This is a small variant of Allen's polynomially bounded branching recursion defined in <ref> [1] </ref>.) Then, here are the definitions of three slightly different algebras of functions which all capture ALOGTIME (for the definition of the function tree, see Clote [12, 13]): Definition 7.4 (Clote [12]). <p> By using the "safe" versus "normal" idea of Bellantoni and Cook and a scheme of tree recursion which he calls "divide and conquer" (after Allen's paper <ref> [1] </ref>), Bloch [5] comes up with a recursion-theoretic characterization of ALOGTIME which involves no explicit bound on the size of functions. Unfortunately, his set of initial functions does not contain only constant-time functions and in that sense, his algebra lacks the elegance of Bellantoni and Cook's B.
Reference: [2] <author> David A. Barrington. </author> <title> Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 . Journal of Computer and System Science, </title> <booktitle> 38 </booktitle> <pages> 150-164, </pages> <year> 1989. </year>
Reference-contexts: This form of recursion was sufficient to eliminate the need for the function tree in the initial functions, but unfortunately, the fact that N 0 0 = ALOGTIME now relied on Barrington's famous result about bounded-width branching programs <ref> [2] </ref>, which is a deep and counter-intuitive result.
Reference: [3] <author> Stephen Bellantoni and Stephen Cook. </author> <title> A new recursion-theoretic characterization of the polytime functions. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 97-110, </pages> <year> 1992. </year>
Reference-contexts: This bound is unsatisfying, so Bellantoni and Cook <ref> [3] </ref>, inspired by Leivant's work [23], came up with an elegant and direct recursion-theoretic characterization of FP which involves no explicit bound on the size of functions and only a few constant-time initial functions, by distinguishing between "normal" and "safe" recursion parameters. (Intuitively, this distinction restricts the depth of recursion and
Reference: [4] <author> Stephen Bellantoni and Stephen Cook. </author> <title> The equivalence of certain first and second order feasible logics. </title> <type> Manuscript, </type> <year> 1993. </year> <title> Proof Systems and BA Franc~ois Pitt May 3, </title> <year> 1995 </year> <month> 15 </month>
Reference-contexts: In an unpublished paper <ref> [4] </ref>, Bellantoni and Cook formalize an equational theory PV BC which is based on their algebra B instead of on Cobham's L.
Reference: [5] <author> Stephen Bloch. </author> <title> Functional characterizations of uniform log-depth and polylog-depth circuit families. </title> <booktitle> In Proceedings of IEEE 7th Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 193-206, </pages> <address> Boston, Massachusetts, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: By using the "safe" versus "normal" idea of Bellantoni and Cook and a scheme of tree recursion which he calls "divide and conquer" (after Allen's paper [1]), Bloch <ref> [5] </ref> comes up with a recursion-theoretic characterization of ALOGTIME which involves no explicit bound on the size of functions. Unfortunately, his set of initial functions does not contain only constant-time functions and in that sense, his algebra lacks the elegance of Bellantoni and Cook's B.
Reference: [6] <author> Maria Luisa Bonet, Samuel R. Buss, and Toniann Pitassi. </author> <title> Are there hard examples for frege systems? Manuscript, </title> <month> March </month> <year> 1994. </year>
Reference-contexts: Nevertheless, because of previous results such as the lower bounds for resolution and bounded-depth Frege from the pigeonhole principle, it is interesting to try to find more "natural", combinatorial principles which might be hard. In a relatively recent paper, Bonet et al. <ref> [6] </ref> give a number of such examples, most of them based on linear algebra, that are conjectured to have superpolynomial size F proofs but are known to have poly-size eF proofs.
Reference: [7] <author> S. Buss, S. Cook, A. Gupta, and V. Ramachandran. </author> <title> An optimal parallel algorithm for formula evaluation. </title> <journal> SIAM Journal of Computing, </journal> <volume> 21(4) </volume> <pages> 755-780, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Buss [9] proved that Frege systems have poly-size partial self-consistency proofs, and that Frege systems have poly-size proofs of the partial consistency of extended Frege systems if and only if F p-simulates eF . The result is based on finding an ALOGTIME algorithm for the "Boolean Formula Value Problem" <ref> [7, 10] </ref>.
Reference: [8] <author> Samuel R. Buss. </author> <title> Bounded Arithmetic, volume 3 of Studies in Proof Theory. </title> <publisher> Bibliopolis, </publisher> <address> Naples, </address> <year> 1986. </year>
Reference-contexts: Proof Systems and BA Franc~ois Pitt May 3, 1995 5 5 First-Order Theories for P 5.1 Buss's S 1 2 The main idea behind Buss's system of Bounded Arithmetic (BA) <ref> [8] </ref> is to study the relationship between the computational complexity of a function and its expressibility in certain formal theories.
Reference: [9] <author> Samuel R. Buss. </author> <title> Propositional consistency proofs. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 52 </volume> <pages> 3-29, </pages> <year> 1991. </year>
Reference-contexts: Because we are dealing with propositional formulas, we cannot talk about the full consistency of a system, so we have to restrict ourselves to partial consistency statements, i.e., statements which express the fact that no proof of a certain length has a contradictory conclusion. Buss <ref> [9] </ref> proved that Frege systems have poly-size partial self-consistency proofs, and that Frege systems have poly-size proofs of the partial consistency of extended Frege systems if and only if F p-simulates eF . The result is based on finding an ALOGTIME algorithm for the "Boolean Formula Value Problem" [7, 10].
Reference: [10] <author> Samuel R. Buss. </author> <title> Algorithms for boolean formula evaluation and for tree contraction. </title> <editor> In P. Clote and J. Krajcek, editors, </editor> <booktitle> Arithmetic, Proof Theory and Computational Complexity, </booktitle> <pages> pages 96-115. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: Buss [9] proved that Frege systems have poly-size partial self-consistency proofs, and that Frege systems have poly-size proofs of the partial consistency of extended Frege systems if and only if F p-simulates eF . The result is based on finding an ALOGTIME algorithm for the "Boolean Formula Value Problem" <ref> [7, 10] </ref>.
Reference: [11] <author> V. Chvatal. </author> <title> Determining the stability number of a graph. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6(4) </volume> <pages> 643-662, </pages> <month> December </month> <year> 1977. </year>
Reference-contexts: Using these translations, she then proves that F systems p-simulate HC systems and that eF systems and HC systems are p-equivalent, which implies that eF systems are polynomially bounded if and only if HC systems are. 11.2 Chvatal's recursive proofs Chvatal <ref> [11] </ref> was interested in the problem of determining the stability number of a graph, i.e., the size of the largest independent set in the graph, denoted ff (G).
Reference: [12] <author> Peter Clote. </author> <title> Sequential, machine-independent characterizations of the parallel complexity classes ALOGTIME, AC k , NC k , and NC. </title> <editor> In S. R. Buss and P. Scott, editors, </editor> <booktitle> Feasible Mathematics, </booktitle> <pages> pages 49-69. </pages> <publisher> Birkhauser, </publisher> <year> 1989. </year>
Reference-contexts: (Fh (x); y); f (Bh (x); y)); for x &gt; 1; (This is a small variant of Allen's polynomially bounded branching recursion defined in [1].) Then, here are the definitions of three slightly different algebras of functions which all capture ALOGTIME (for the definition of the function tree, see Clote <ref> [12, 13] </ref>): Definition 7.4 (Clote [12]). N 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j, tree and closed under composition and CRN. Theorem 7.5 (Clote [12]). N 0 = ALOGTIME . <p> (x); y)); for x &gt; 1; (This is a small variant of Allen's polynomially bounded branching recursion defined in [1].) Then, here are the definitions of three slightly different algebras of functions which all capture ALOGTIME (for the definition of the function tree, see Clote [12, 13]): Definition 7.4 (Clote <ref> [12] </ref>). N 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j, tree and closed under composition and CRN. Theorem 7.5 (Clote [12]). N 0 = ALOGTIME . <p> (for the definition of the function tree, see Clote [12, 13]): Definition 7.4 (Clote <ref> [12] </ref>). N 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j, tree and closed under composition and CRN. Theorem 7.5 (Clote [12]). N 0 = ALOGTIME . This result uses the fact that the function tree is complete for ALOGTIME to obtain the simulation of ATMs by functions in N 0 . <p> the same technique that is used by Clote in [14] to show that ALOGTIME is closed under k-BRN can easily be extended to construct a binary evaluation tree of f . (ALOGTIME d N 0 ): We will make extensive use of some functions and techniques developed by Clote in <ref> [12] </ref> using only composition and CRN, namely the function "reverse" and the technique used to define functions by cases.
Reference: [13] <author> Peter Clote. ALOGTIME and a conjecture of S. A. </author> <title> Cook. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 6 </volume> <pages> 57-106, </pages> <year> 1992. </year> <title> Extended abstract in: </title> <booktitle> Proceedings of IEEE Symposium on Logic in Computer Science, </booktitle> <address> Philadelphia, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: (Fh (x); y); f (Bh (x); y)); for x &gt; 1; (This is a small variant of Allen's polynomially bounded branching recursion defined in [1].) Then, here are the definitions of three slightly different algebras of functions which all capture ALOGTIME (for the definition of the function tree, see Clote <ref> [12, 13] </ref>): Definition 7.4 (Clote [12]). N 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j, tree and closed under composition and CRN. Theorem 7.5 (Clote [12]). N 0 = ALOGTIME . <p> Clote also devised a system AV which gives rise to tautologies which have poly-size constant-depth F proofs. Unfortunately, it has not been shown that if ALV proves the consistency of a proof system, then F p-simulates it. (For details, see Clote's paper <ref> [13] </ref>.) In the same paper in which Clote developed N 0 0 , he also modified ALV to use the new scheme of k-BRN, ending up with a theory he called ALV 0 .
Reference: [14] <author> Peter Clote. </author> <title> On polynomial size Frege proofs of certain combinatorial principles. </title> <editor> In P. Clote and J. Krajcek, editors, </editor> <booktitle> Arithmetic, Proof Theory and Computational Complexity, </booktitle> <pages> pages 162-184. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: Unfortunately, the inclusion of the complex function tree with the initial functions seems like a "cheat"|ideally, we would like the initial functions to be as simple as possible. Definition 7.6 (Clote <ref> [14] </ref>). N 0 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j and closed under composition, CRN, and k-BRN for k 2 N. Theorem 7.7 (Clote [14]). N 0 0 = ALOGTIME . <p> Definition 7.6 (Clote <ref> [14] </ref>). N 0 0 is the smallest class of functions containing 0 , i n k , s 0 , s 1 , bit, #, j j and closed under composition, CRN, and k-BRN for k 2 N. Theorem 7.7 (Clote [14]). N 0 0 = ALOGTIME . To remedy the "cheat" used for N 0 , Clote came up with the scheme of k-BRN. <p> Theorem 7.9. d N 0 = ALOGTIME . Proof. ( d N 0 ALOGTIME): The initial functions all belong to ALOGTIME and it is easy to see that ALOGTIME is closed under composition and CRN. For f defined by k-BTRN, the same technique that is used by Clote in <ref> [14] </ref> to show that ALOGTIME is closed under k-BRN can easily be extended to construct a binary evaluation tree of f . (ALOGTIME d N 0 ): We will make extensive use of some functions and techniques developed by Clote in [12] using only composition and CRN, namely the function "reverse" <p> The same properties that hold for ALV hold also for ALV 0 , but the latter system is more elegant and allows more straightforward definitions of certain simple functions. (See Clote's paper <ref> [14] </ref> for details.) I intend to study the possibility of defining a system [ ALV which would use a recursion based on k-BTRN instead of k-BRN and a form of "tree induction on notation" instead of Cook's induction on notation.
Reference: [15] <author> Peter Clote and Gaisi Takeuti. </author> <title> First order bounded arithmetic and small Boolean circuit complexity classes. </title> <note> Manuscript (to appear in Feasible Mathematics II), </note> <month> December </month> <year> 1994. </year>
Reference-contexts: This would be similar to what Bellantoni and Cook have done by defining PV BC in relation to PV . 9 First-Order Theories for ALOGTIME 9.1 Takeuti and Clote's TNC 0 Just as Buss did, Takeuti and Clote <ref> [15, 31] </ref> study the relationship between the computational complexity of a function and its expressibility in certain weak first-order theories. <p> More precisely, in their first paper <ref> [15] </ref>, they define theories TNC k and prove that a function belongs to NC k+1 iff it is esb-definable in TNC k , where esb stands for "essentially sharply bounded" (see the paper for details).
Reference: [16] <author> Alan Cobham. </author> <title> The intrinsic computational difficulty of functions. </title> <editor> In Y. Bar-Hillel, editor, </editor> <booktitle> Proceedings of the 1964 International Congress for Logic Methodology and the Philosophy of Science, </booktitle> <pages> pages 24-30, </pages> <address> Amsterdam, 1964. </address> <publisher> North Holland. </publisher>
Reference-contexts: Theorem 2.3 (Ruzzo [30]). ALOGTIME = U E fl -uniform NC 1 . Proof Systems and BA Franc~ois Pitt May 3, 1995 4 3 Algebras for P 3.1 Cobham's L In 1964, Cobham <ref> [16] </ref> gave the first machine-independent characterization of the class FP (Rose [28, Chapter 5.4] gives a detailed description, including proofs, of Cobham's algebra).
Reference: [17] <author> Stephen A. Cook. </author> <title> Feasible constructive proofs and the propositional calculus. </title> <booktitle> In Proceedings of the Seventh Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 83-97, </pages> <month> May </month> <year> 1975. </year> <title> Proof Systems and BA Franc~ois Pitt May 3, </title> <year> 1995 </year> <month> 16 </month>
Reference-contexts: achieves the same effect as imposing an explicit bound on the growth of the functions.) 4 Equational Theories for P 4.1 Cook's PV In 1975, Steve Cook came up with a free-variable equational theory PV which "captures" poly-time reasoning in the sense that all proofs in PV are "feasibly constructive" <ref> [17] </ref> (see also [19]): Given a proof of an equation of the form f (x) = g (x), there exists a procedure based on which can be used to verify any instance f (x 0 ) = g (x 0 ) of the equation in time polynomial in jx 0 j
Reference: [18] <author> Stephen A. Cook and Robert A. Reckhow. </author> <title> The relative efficiency of propositional proof systems. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 44(1) </volume> <pages> 36-50, </pages> <month> March </month> <year> 1979. </year>
Reference-contexts: introduction to proof systems, including the basic definitions, see Cook and Reckhow <ref> [18] </ref>): Open Problem 1.1. Are the Frege and extended Frege proof systems p-equivalent? To provide some motivation for studying Open Problem 1.1 and give an indication of its importance, we note its connection to some major open questions in complexity theory through the following facts. Fact 1.2.
Reference: [19] <author> Stephen A. Cook and Alasdair Urquhart. </author> <title> Functional interpretations of feasibly constructive arithmetic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 63(2) </volume> <pages> 103-200, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: effect as imposing an explicit bound on the growth of the functions.) 4 Equational Theories for P 4.1 Cook's PV In 1975, Steve Cook came up with a free-variable equational theory PV which "captures" poly-time reasoning in the sense that all proofs in PV are "feasibly constructive" [17] (see also <ref> [19] </ref>): Given a proof of an equation of the form f (x) = g (x), there exists a procedure based on which can be used to verify any instance f (x 0 ) = g (x 0 ) of the equation in time polynomial in jx 0 j (i.e., the equation
Reference: [20] <author> Jan Krajcek. </author> <title> Bounded arithmetic, propositional logic, and complexity theory. Manuscript (preliminary version of a textbook), </title> <month> October </month> <year> 1994. </year>
Reference-contexts: For a second-order theory which is related to P, we refer the reader to Krajcek's presentation <ref> [20, Chapter 5.5] </ref>, where a second-order system V 1 1 is presented (which is simply V 1 2 without the function symbol #) and shown to be equivalent to S 1 2 through the RSUV-isomorphism. (The "R" and "U " in the name of the isomorphism refer to first-order and second-order
Reference: [21] <author> Jan Krajcek. </author> <note> On Frege and extended Frege proof systems. Manuscript (to appear in Feasible Mathematics II), </note> <month> May </month> <year> 1994. </year>
Reference-contexts: Some work of Krajcek <ref> [21] </ref> on U 1 1 and Frege systems seems to indicate that U 1 1 would be a good candidate, but this would have to be investigated in more detail. 11 Proof Systems Another approach to the F versus eF question is to study proof systems for coNPc problems other than <p> Finally, in another recent paper, Krajcek <ref> [21] </ref> gives a connection between the second-order theories U 1 1 and V 1 1 and the F and eF systems, respectively.
Reference: [22] <author> Jan Krajcek, Pavel Pudlak, and Gaisi Takeuti. </author> <title> Bounded arithmetic and the polynomial hierarchy. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 52 </volume> <pages> 143-153, </pages> <year> 1991. </year>
Reference-contexts: i+1 2 are distinct theories if and only if b i is not equal to b i+1 ? (In other words, what is the relationship between the collapse of Buss's hierarchy and the collapse of the poly-time hierarchy?) The question is still open at this moment, although Krajcek et al. <ref> [22] </ref> have proved a related result concerning theories T i 2 and S i 2 , namely that if T i 2 = S i+1 2 , then p p PH = i+2 .
Reference: [23] <author> Daniel Leivant. </author> <title> A foundational delineation of computational feasibility. </title> <booktitle> In Proceedings of IEEE 6th Annual Symposium on Logic in Computer Science, </booktitle> <year> 1991. </year>
Reference-contexts: This bound is unsatisfying, so Bellantoni and Cook [3], inspired by Leivant's work <ref> [23] </ref>, came up with an elegant and direct recursion-theoretic characterization of FP which involves no explicit bound on the size of functions and only a few constant-time initial functions, by distinguishing between "normal" and "safe" recursion parameters. (Intuitively, this distinction restricts the depth of recursion and thus achieves the same effect <p> In particular, he gives explicit examples of proofs formalized in V 1 1 to support his claim. 6.2 Leivant's L 2 (QF + Leivant <ref> [23] </ref> defines a system L 2 (QF + ) (second-order logic with set-existence, or compre hension, restricted to positive quantifier-free formulas) and proves that a function f over W is poly-time iff f is s-provable in L 2 (QF + ), i.e., there is a functional program for f which, together
Reference: [24] <author> Daniel Leivant. </author> <title> A foundational delineation of poly-time. </title> <type> Preprint series IULG-92-15, </type> <institution> Indiana University, Department of Computer Science, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: that a function f over W is poly-time iff it is v-provable in L 2 (), where "v-provability" stands for any one of two types of provability, "L 2 " stands for any one of three second-order logics, and "" stands for any one of four classes of formulas (see <ref> [24, Theorem 5.3] </ref> for details). 7 Algebras for ALOGTIME 7.1 Clote's N 0 and related algebras Let us start with the definitions of three types of recursion which will be used to define different algebras. Definition 7.1 (Concatenation Recursion on Notation).
Reference: [25] <author> Daniel Leivant. </author> <title> Peano theories and their computable functions. Manuscript (extended abstract), </title> <month> December </month> <year> 1992. </year>
Reference-contexts: 2 T i 2 , their result implies that if S i 2 = S i+1 2 , then p p This is close to an answer for one direction of Open Question 5.1, but unfortunately, it has not been extended to one yet. 5.2 Leivant's PT (W ) Leivant <ref> [25] </ref>, motivated by the notion of predicativity (i.e., avoiding circularity, or self-reference, in definitions and proofs), defines a system PT (W) (for "Peano Theory over the algebra of words") which has generative axioms for W and instances of W-induction as its only axioms, and shows that a function f over W
Reference: [26] <author> Toniann Pitassi. </author> <title> The power of weak formal systems. </title> <type> Technical Report 266/92, </type> <institution> University of Toronto, Department of Computer Science, </institution> <month> December </month> <year> 1993. </year> <type> (Ph.D. Thesis). </type>
Reference-contexts: Unfortunately, very little work has been done in this direction, and I will summarize most of it here. 11.1 The Hajos calculus The Hajos calculus is a simple, non-deterministic procedure for generating all non-k-colorable graphs, i.e., a proof-system for the coNPc problem of non-k-colorability. In her Ph.D. thesis, Pitassi <ref> [26] </ref> defines a slightly modified version of the original Hajos calculus, which she calls HC, together with a weaker system which she calls HC , both of which are sound and complete.
Reference: [27] <author> Alexander A. Razborov. </author> <title> Bounded arithmetic and lower bounds in boolean complexity. </title> <note> Manuscript (to appear in Feasible Mathematics II), </note> <month> October </month> <year> 1993. </year>
Reference-contexts: the RSUV-isomorphism. (The "R" and "U " in the name of the isomorphism refer to first-order and second-order theories, respectively, which are weaker than the corresponding "S" and "V " theories.) A motivation for defining and using the second-order theories is given by Razborov in one of his many papers <ref> [27] </ref>, where he argues that the second-order V 1 1 is more natural to formalize lower bounds in Boolean complexity than the first-order S 1 2 .
Reference: [28] <author> H. E. Rose. Subrecursion: </author> <title> Functions and Hierarchies, </title> <booktitle> volume 9 of Oxford Logic Guides. </booktitle> <publisher> Clarendon Press Oxford, </publisher> <address> New-York, </address> <year> 1984. </year>
Reference-contexts: Theorem 2.3 (Ruzzo [30]). ALOGTIME = U E fl -uniform NC 1 . Proof Systems and BA Franc~ois Pitt May 3, 1995 4 3 Algebras for P 3.1 Cobham's L In 1964, Cobham [16] gave the first machine-independent characterization of the class FP (Rose <ref> [28, Chapter 5.4] </ref> gives a detailed description, including proofs, of Cobham's algebra).
Reference: [29] <author> Arnold Rosenbloom. </author> <title> NP, coNP and the complexity of proof systems. </title> <type> Manuscript, </type> <month> January </month> <year> 1995. </year>
Reference: [30] <author> Walter L. Ruzzo. </author> <title> On uniform circuit complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 22(3) </volume> <pages> 365-383, </pages> <month> June </month> <year> 1981. </year>
Reference-contexts: In what follows, we will see many different characterizations of FP and P. But first, let us define a second complexity class which seems to represent the computational power of F systems (for details, see Ruzzo <ref> [30] </ref>). Definition 2.2. ALOGTIME is the class of languages recognized by a random access ATM in logarithmic time and NC 1 is the class of languages recognized by a family of circuits of polynomial size and depth O (log n). Theorem 2.3 (Ruzzo [30]). <p> of F systems (for details, see Ruzzo <ref> [30] </ref>). Definition 2.2. ALOGTIME is the class of languages recognized by a random access ATM in logarithmic time and NC 1 is the class of languages recognized by a family of circuits of polynomial size and depth O (log n). Theorem 2.3 (Ruzzo [30]). ALOGTIME = U E fl -uniform NC 1 .
Reference: [31] <author> Gaisi Takeuti. </author> <title> Frege proof system and TNC 0 . Manuscript, </title> <year> 1994. </year>
Reference-contexts: This would be similar to what Bellantoni and Cook have done by defining PV BC in relation to PV . 9 First-Order Theories for ALOGTIME 9.1 Takeuti and Clote's TNC 0 Just as Buss did, Takeuti and Clote <ref> [15, 31] </ref> study the relationship between the computational complexity of a function and its expressibility in certain weak first-order theories. <p> In his second paper <ref> [31] </ref>, Takeuti defines notions of uniform F and eF proofs and shows that a proof in T 0 NC 0 of a formula A gives rise to a uniform F proof of some encoding of A.
Reference: [32] <editor> J. van Leeuwen, editor. </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A: Algorithms and Complexity. </booktitle> <publisher> MIT Press (with Elsevier Science Publishers B.V., </publisher> <address> Amsterdam), Cambridge, </address> <year> 1990. </year>
References-found: 32

