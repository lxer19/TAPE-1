URL: http://www.cs.umn.edu/Users/dept/users/riedl/CS-8103/MPI/install.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/riedl/CS-8103/MPI/
Root-URL: http://www.cs.umn.edu
Title: ANL/MCS-TM-000 Installation Guide to mpich, a Portable Implementation of MPI  
Author: by William Gropp and Ewing Lusk 
Affiliation: MATHEMATICS AND COMPUTER SCIENCE DIVISION  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> Patrick Bridges, Nathan Doss, William Gropp, Edward Karrels, Ewing Lusk, and An-thony Skjellum. </author> <title> Users' Guide to MPICH, a Portable Implementation of MPI. </title> <institution> Argonne National Laboratory, </institution> <year> 1995. </year> <month> 31 </month>
Reference-contexts: This guide explains how to compile, test, and install mpich and its related tools. This is a document in progress: Hopefully helpful, but hardly whole. Please send suggestions for improvements (or impairments) to mpi-bugs@mcs.anl.gov. Details on using the MPICH implementation are presented in a separate "User's Guide for mpich" <ref> [1] </ref>. 1 Quick Start Here is a set of steps for setting up and minimally testing mpich. Details and instructions for a more thorough tour of mpich's features, including installing, validating, benchmarking, and using the performance evaluation tools, are given in the following sections. 1. <p> In the following sections we go through these steps in more detail, and describe other aspects of the mpich distribution you might want to explore. The companion Users Guide <ref> [1] </ref> gives more information on building and running MPI programs with mpich. 2 Obtaining and Unpacking the Distribution mpich can be obtained by anonymous ftp from the site info.mcs.anl.gov. Go to the directory pub/mpi and get the file mpich.tar.Z. <p> configure -device=ch_shmem -arch=sgi For networks of workstations (can interoperate with other types of workstations), SGI configure -device=ch_p4 -arch=sgi SGI multiprocessor (such as an Onyx, Challenge, or Power Challenge), using the shared memory for fast message-passing configure -device=ch_p4 -arch=sgi -comm=shared 9 Sun SunOS including the mpe libraries (See the Users Guide <ref> [1] </ref>: configure -device=ch_p4 -arch=sun4 -mpe Sun Solaris configure -device=ch_p4 -arch=solaris -mpe DEC Alpha configure -device=ch_p4 -arch=alpha FreeBSD For a network of PC's running the FreeBSD version of Unix: configure -device=ch_p4 -arch=freebsd HP HPUX For a network of HP's, including the mpe library but leaving out of it the MPE X graphics <p> Many interesting logfiles can be found in the profiling/upshot/logfiles subdirectory. The file cpilog.c demonstrates how to instrument your own code for producing such logs. The Users guide <ref> [1] </ref> describes how to link with a version of mpich that produces them automatically. For a short description of the programs in the examples/basic directory, see the README file there.
Reference: [2] <author> William Gropp and Ewing Lusk. </author> <title> An abstract device definition to support the imple-mentation of a high-level message-passing interface. </title> <type> Technical Report MCS-P342-1193, </type> <institution> Argonne National Laboratory, </institution> <year> 1993. </year>
Reference-contexts: The default is to enable the shared-memory communication device. 8 Others may be recognized. mpich is implemented using an abstract device specification (ADI), described in <ref> [2] </ref>. In some environments, this abstract device is configured to be the native communication subsystem of the machine. This is done with the device argument to configure.
Reference: [3] <author> William Gropp and Ewing Lusk. </author> <title> Scalable Unix tools on parallel processors. </title> <booktitle> In Proceedings of the Scalable High Performance Computing Conference, </booktitle> <pages> pages 56-62. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: This is discussed in the Users Guide. 6.1.3 Stopping the servers To stop the servers, their processes must be killed. This is easily done with the Scalable Unix Tools <ref> [3] </ref> with the command pfps -all -tn serv_p4 -and -o $LOGNAME -kill INT Alternately, you can log into each system and execute something like ps auxww | egrep '$LOGNAME.*serv_p4' and then use the kill command on the resulting process number (users of System V-style ps commands will have to figure out
Reference: [4] <author> Virginia Herrarte and Ewing Lusk. </author> <title> Studying parallel program behavior with upshot. </title> <type> Technical Report ANL-91/15, </type> <institution> Argonne National Laboratory, Argonne, </institution> <address> IL 60439, </address> <year> 1991. </year>
Reference-contexts: To create a Makefile, just execute mpireconfig Makefile (mpireconfig is in the same directory as mpirun). This generates a new Makefile from Makefile.in, with the correct parameters for the MPICH that was installed. 10.5 nupshot, a Way to View Logfiles Nupshot is a newer version of upshot <ref> [4] </ref> and can display log files created by using either the -mpilog option to mpicc or mpif77 or through use of the MPE logfile facilities. 11 Automatic Report Generation We are working on a prototype system for automatically producing a report describing the installation of MPI on the system you are
Reference: [5] <author> Edward Karrels and Ewing Lusk. </author> <title> Performance analysis of MPI programs. </title> <editor> In Jack Don-garra and Bernard Tourancheau, editors, </editor> <booktitle> Proceedings of the Workshop on Environments and Tools For Parallel Scientific Computing. </booktitle> <publisher> SIAM Publications, </publisher> <year> 1994. </year> <month> 32 </month>
Reference-contexts: You may use these commands instead of the `Makefile.in' versions, particularly for programs contained in a small number of files. In addition, they have a simple interface to the profiling and visualization libraries described in <ref> [5] </ref>. This is a program to compile or link MPI programs.
References-found: 5

