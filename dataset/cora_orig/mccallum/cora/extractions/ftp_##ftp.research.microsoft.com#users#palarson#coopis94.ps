URL: ftp://ftp.research.microsoft.com/users/palarson/coopis94.ps
Refering-URL: http://www.research.microsoft.com/~palarson/publications.htm
Root-URL: http://www.research.microsoft.com
Title: Managing Global Information in the CORDS Multidatabase System (Experience)  
Author: Michael Bauer Neil Coburn Per -Ake Larson Patrick Martin 
Address: Ontario  
Affiliation: Dept. of Computer Science University of Western  Software Development Centre Antares Alliance Group Canada Ltd.  Dept. of Computer Science University of Waterloo  Dept. of Computing and Information Science Queen's University at Kingston  
Abstract: Multidatabase systems provide integrated access to autonomous, distributed, and heterogeneous database systems. As such they provide a core technology for Cooperative Information Systems. One of the main issues in developing multidatabase systems is that of managing global information such as properties of component sites and databases, component and application schemas, mappings between the schema levels, multidatabase-level access privileges, and performance statistics for the optimization of global queries. We outline the CORDS multidatabase prototype system and discuss our approach to managing global information by using an information repository based on an X.500 directory system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Attaluri, G., Bradshaw, D., Coburn, N., Lar-son, P., Martin, P., Silbershatz, A., Slonim, J. and Zhu, Q. </author> <title> "CORDS Multidatabase Project", </title> <note> submitted to the IBM Systems Journal (January 1994). </note>
Reference-contexts: The focus of CORDS is on the development, operation, and management of distributed applications. It concentrates on issues within five core areas: application management services, data management services, visualization and user interfaces, development languages and tools, and midware and high speed networks [10]. MDBS Architecture The MDBS <ref> [1] </ref> is one of the data services offered by the CORDS Service Environment (CSE) [2]. However, independent of the CSE, the CORDS MDBS can be regarded as a virtual DBMS and, as such, it has been designed to offer the full functionality of a commercial DBMS.
Reference: [2] <author> Bauer, M., Coburn, N., Erickson, D., Finni-gan, P. Hong,, J., Larson, P.and Slonim, J. </author> <title> "An Integrated Architecture for Distributed Applications", </title> <booktitle> Proc. 1993 CAS Conference, Toronto (October 1993), </booktitle> <volume> 8 - 26. </volume>
Reference-contexts: It concentrates on issues within five core areas: application management services, data management services, visualization and user interfaces, development languages and tools, and midware and high speed networks [10]. MDBS Architecture The MDBS [1] is one of the data services offered by the CORDS Service Environment (CSE) <ref> [2] </ref>. However, independent of the CSE, the CORDS MDBS can be regarded as a virtual DBMS and, as such, it has been designed to offer the full functionality of a commercial DBMS. The architecture of the CORDS MDBS is shown in Figure 1.
Reference: [3] <author> Brodie, M. and Ceri, S. </author> <title> "On Intelligent and Cooperative Information Systems: A Workshop Summary", </title> <journal> International Journal of Intelligent and Cooperative Information Systems 1(2), </journal> <month> (June </month> <year> 1992), </year> <pages> 249 - 290. </pages>
Reference-contexts: Cooperative Information Systems (CISs), that is collections of independent ISs that cooperate to execute joint tasks, are a new paradigm capable of meeting the new requirements <ref> [3] </ref>. Each component IS within a CIS has its own interface and protocols for retrieving and updating its information. Interoperability, which is the property that two components can interact and understand each other, is therefore a key requirement for CISs. <p> Brodie and Ceri have pointed out that deciding upon the content and location of global information or functionality is one of the most challenging architectural issues in a CIS because of the potential integrity and consistency problems and performance degradation <ref> [3] </ref>. In this paper, we describe the CORDS MDBS prototype and focus on the problem of managing the global information required by the MDBS. We describe the global information requirements of the MDBS and list a set of criteria with which to evaluate methods of managing the global information.
Reference: [4] <author> CCITT, </author> <title> X.500 Directory Services 1992, </title> <type> CCITT, </type> <year> 1992. </year>
Reference-contexts: We already had experience with X.500 directory servers in developing a name service for the CORDS environment, and further study and experimentation suggested that they could also function as a repository for various kinds of information. Overview of X.500 The X.500 Directory Standard <ref> [4] </ref> specifies a Directory Service that provides and manages information about communication entities. These entities are represented by entries in a hierarchical name space, the X.500 Directory Information Tree (DIT). Entries are placed in the DIT according to the organizational relationships between the real-world entities that they represent.
Reference: [5] <editor> DCE User's Guide and Reference, </editor> <booktitle> Open Software Foundation, </booktitle> <year> 1992. </year>
Reference-contexts: The architecture of the CORDS MDBS is shown in Figure 1. One of the objectives of the project is to use existing standards and system components wherever possible. The underlying software platform is the Distributed Computing Environment (DCE) from the Open System Foundation (OSF) 1 <ref> [5] </ref>. DCE provides a variety of services which the MDBS can use; for example, a remote procedure call (RPC) 1 OSF and DCE are trademarks of the Open Software Foundation. package, a lightweight threads package, and an authentication service.
Reference: [6] <author> International Business Machines Corporation, </author> <title> Distributed Relational Database Architecture Reference, </title> <address> SC26-4651-0 edition, </address> <year> 1990. </year>
Reference-contexts: The application program interface is based on Microsoft's Open Database Connectivity interface (ODBC) 3 [9]. Clients communicate with the MDBS using the Distributed Relational Database Architecture (DRDA) Application Support protocol <ref> [6] </ref>, which is an IBM standard 4 . Requests from a client are first received by a module called the MDBS Request Coordinator.
Reference: [7] <author> Martin, P. and Powley, W. </author> <title> "Database Integration using Multidatabase Views", </title> <booktitle> Proc 1993 CAS Conference, Toronto (October 1993), </booktitle> <volume> 779 - 788. </volume>
Reference-contexts: The multidatabase system supports incremental integration; any number of MDBS schemas can be defined. Creation of a MDBS schema is done using a tool called the MDBS View Builder <ref> [7] </ref>. As shown in Figure 1, this tool is viewed as an application by the MDBS. The main purpose of this tool is to create global schemas and mappings, and to store this information in the MDBS Catalog. <p> A tool called the MDBS View Builder supports the user during schema integration by providing a number of facilities to define the MDBS schemas and the mappings between schemas at different levels <ref> [7] </ref>. The main interface to the MDBS Catalog is a graphical browser which allows the user to explore the contents of the catalog. The browser currently interfaces with the information repository through the Catalog API.
Reference: [8] <author> Neufeld, G. and Brachman, B. </author> <title> "A Transactional API for the EAN X.500 Directory Service", </title> <booktitle> Proc. 1992 CAS Conference, Toronto (November 1992), </booktitle> <volume> 81 - 92. </volume>
Reference-contexts: We also use the Encina 2 distributed transaction management system from Transarc [11], and the TDM directory server, a fast, X.500 directory service from the University of British Columbia <ref> [8] </ref>. The MDBS Catalog is a central repository for metadata needed by the multidatabase system. Three classes of metadata are required: schemas, mappings, and descriptions of component data sources (CDSs). <p> One way efficiency will be gained is by distributing and replicating data across multiple DSAs. Another CORDS project is also considering a number of modifications to the TDM directory system <ref> [8] </ref> to increase efficiency, including data caching at the DUA, simplified and less costly protocols, and less complex operations within DUAs. Further experimentation is required to adequately evaluate the efficiency of our approach. 4. <p> Support for distributed, replicated data and distributed transactions: The X.500 directory standard provides support for distributed and replicated data. The TDM directory system has been extended with a transaction API to support distributed transactions <ref> [8] </ref>. Conclusions The developers of cooperative information systems face a number of interesting challenges. One of these challenges is how to support convenient integrated access to distributed and heterogeneous legacy information systems. Multidatabase systems are the technology necessary to meet the challenge.
Reference: [9] <author> Microsoft Inc., </author> <title> Open Database Connectivity System Development Kit, </title> <type> version 1, </type> <year> 1993. </year>
Reference-contexts: Application programs interact with the MDBS through an MDBS Client; a library of functions that are linked in with the application program. The application program interface is based on Microsoft's Open Database Connectivity interface (ODBC) 3 <ref> [9] </ref>. Clients communicate with the MDBS using the Distributed Relational Database Architecture (DRDA) Application Support protocol [6], which is an IBM standard 4 . Requests from a client are first received by a module called the MDBS Request Coordinator.
Reference: [10] <author> Slonim, J., Bauer, M. and Larson, P. "CORDS: </author> <title> Status and Directions", </title> <booktitle> Proc. 1992 CAS Conference, Toronto (November 1992), </booktitle> <volume> 1 - 21. </volume>
Reference-contexts: The focus of CORDS is on the development, operation, and management of distributed applications. It concentrates on issues within five core areas: application management services, data management services, visualization and user interfaces, development languages and tools, and midware and high speed networks <ref> [10] </ref>. MDBS Architecture The MDBS [1] is one of the data services offered by the CORDS Service Environment (CSE) [2].
Reference: [11] <institution> Transarc Corp., Encina Product Overview, Document Number TP-00-M235, Transarc Corp., </institution> <year> 1991. </year>
Reference-contexts: We also use the Encina 2 distributed transaction management system from Transarc <ref> [11] </ref>, and the TDM directory server, a fast, X.500 directory service from the University of British Columbia [8]. The MDBS Catalog is a central repository for metadata needed by the multidatabase system. Three classes of metadata are required: schemas, mappings, and descriptions of component data sources (CDSs).
References-found: 11

