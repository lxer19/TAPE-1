URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-94-31.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Topological Considerations in Isosurface Generation UCSC-CRL-94-31 on Graphics. Some images have low resolution to facilitate
Author: Allen Van Gelder and Jane Wilhelms 
Keyword: Categories and Subject Descriptors: I.3.3 [Computer Graphics]: Picture/Image Generation display algorithms; I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling boundary representations; curve, surface, solid, and object representations; geometric algorithms General Terms: Algorithms, Experimentation Additional Key Words and Phrases: Surface topology, ambiguity, surface fitting, scientific visualization, isosurface extraction  
Note: This report will appear in ACM Transactions  
Date: June 11, 1994  
Address: Santa Cruz  
Affiliation: Baskin Center for Computer Engineering and Information Sciences University of California,  
Abstract: A popular technique for rendition of isosurfaces in sampled data is to consider cells with sample points as corners and approximate the isosurface in each cell by one or more polygons whose vertices are obtained by interpolation of the sample data. That is, each polygon vertex is a point on a cell edge, between two adjacent sample points, where the function is estimated to equal the desired threshold value. The two sample points have values on opposite sides of the threshold, and the interpolated point is called an intersection point . When one cell face has an intersection point in each of its four edges, then the correct connection among intersection points becomes ambiguous. An incorrect connection can lead to erroneous topology in the rendered surface, and possible discontinuities. We show that disambiguation methods, to be at all accurate, need to consider sample values in the neighborhood outside the cell. This paper studies the problems of disambiguation, reports on some solutions, and presents some statistics on the occurrence of such ambiguities. A natural way to incorporate neighborhood information is through the use of calculated gradients at cell corners. They provide insight into the behavior of a function in well-understood ways. We introduce two gradient-consistency heuristics that use calculated gradients at the corners of ambiguous faces, as well as the function values at those corners, to disambiguate at a reasonable computational cost. These methods give the correct topology on several examples that caused problems for other methods we examined. 
Abstract-found: 1
Intro-found: 1
Reference: [AFH80] <author> E. Artzy, G. Frieder, and G. Herman. </author> <title> The theory, design, implementation, and evaluation of a three-dimensional surface generation program. </title> <booktitle> Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> 14(3) </volume> <pages> 2-9, </pages> <month> July </month> <year> 1980. </year>
Reference: [AFH81] <author> E. Artzy, G. Frieder, and G. Herman. </author> <title> The theory, design, implementation, and evaluation of a three-dimensional surface detection algorithm. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 15(1) </volume> <pages> 1-24, </pages> <month> January </month> <year> 1981. </year>
Reference-contexts: The first, the cuberille method, considers the subdivisions of space created by the sample points and represents constant value regions as a set of polyhedra (generally cubes) that include the values of interest <ref> [HL79, AFH81, HU83, CHRU85, Udu89] </ref>. The second approach, explored in this paper, is to generate a two-dimensional isosurface in three dimensions by interpolating the function values between data points. We shall call this the beveled-surface method, following Kalvin's terminology. <p> They are briefly summarized here and described in more detail in subsequent sections. Computational experience is reported in Section 5.2. Simple Boolean This category includes the simplest policies, such as "always connect the positive diagonal," which is implicit in early boundary tracking methods <ref> [AFH81] </ref>. The marching cubes algorithm [LC87, CLL + 88, GN89], uses the signs of the eight cell vertices (relative to the threshold) to index a table of 15 cases containing a polygonization of the isosurface. <p> UA-R2 Always connect positive diagonals (often associated with cuberilles <ref> [AFH81, HU83, CHRU85] </ref>). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. Typically, CT volumes have a greater spacing between sample values in the z direction.
Reference: [Bak89] <author> H. H. Baker. </author> <title> Building surfaces of evolution: The weaving wall. </title> <journal> International Journal of Computer Vision, </journal> <volume> 3 </volume> <pages> 51-71, </pages> <year> 1989. </year>
Reference-contexts: In the original implementation, "marching cubes" did not recognize ambiguities. As pointed out by Durst [Dur88], that method could yield a discontinuity between cells. Later researchers <ref> [Bak89, Nat91, Kal91] </ref>, as well as the original authors, described modifications that ensured continuity. Some variants are discussed in Section 4.1. Gallagher and Nagtegaal [GN89] generalized the above approaches to irregular lattices that frequently occur in finite element analysis, and considered higher-degree surfaces instead of triangulation. <p> Positive values are considered to represent the "objects". (In the cited paper "R u = R 1 " corresponds to our label "UA-R1", etc.; the "UA" gives the authors' initials.) UA-R1 Always connect negative diagonals (often associated with corrected versions of marching cubes <ref> [LC87, Bak89, Kal91] </ref>). UA-R2 Always connect positive diagonals (often associated with cuberilles [AFH81, HU83, CHRU85]). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. <p> However, the paper does not discuss pros and cons of the various alternatives in terms of representing the underlying physiology. Rather, they motivate UA-R3 in terms of computational efficiency for boundary tracking. A proposal to correct the discontinuity problems of marching cubes was made independently by several researchers <ref> [Bak89, Kal91, Nat91, NH91] </ref>. It treats cells with 5 or more positive vertices independently of their inverses, by always connecting the negative corners of any ambiguous face.
Reference: [Blo88] <author> Jules Bloomenthal. </author> <title> Polygonization of implicit surfaces. </title> <booktitle> Computer-Aided Geometric Design, </booktitle> <volume> 5 </volume> <pages> 341-355, </pages> <year> 1988. </year>
Reference-contexts: If the underlying function is known, it may be possible to resample the data until the ambiguity is resolved <ref> [Blo88, KB89] </ref>. However, we are concerned with problems where resampling is impossible or impractical. This is frequently the case when the data originate from physical measurements, as in medical applications, or from complex computations, such as simulations and partial differential equations. <p> This approach guarantees continuity. Several variants have appeared. Some were designed to correct the problem of discontinuities in marching cubes. Since triangular faces cannot be ambiguous, another method to disambiguate implicitly is to decompose each cell into tetrahedra, and interpolate linearly on each tetrahedral edge <ref> [KDK86, Blo88, DK91] </ref>. The 9 a. Isosurface 0 of quadratic functions F 1 (left) and F 2 (right). b. Various incorrect topologies. Marching cubes on F 1 (left); Facial Average, Bilinear, and UA-R2 on F 1 (center); UA-R1 on F 2 (right). c. Correct topologies.
Reference: [CDL + 87] <author> H. E. Cline, C. L. Dumoulin, W. E. Lorensen, H. R. Hart, Jr., and S. Ludke. </author> <title> 3D reconstruction of the brain from magnetic resonance images. Magnetic Resonance Imaging, </title> <month> July </month> <year> 1987. </year>
Reference: [CHRU85] <author> Lih-Shyang Chen, Gabor T. Herman, Anthony Reynolds, and Jayaram K. Udupa. </author> <title> Surface shading in a cuberille environment. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 5(12) </volume> <pages> 33-43, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: The first, the cuberille method, considers the subdivisions of space created by the sample points and represents constant value regions as a set of polyhedra (generally cubes) that include the values of interest <ref> [HL79, AFH81, HU83, CHRU85, Udu89] </ref>. The second approach, explored in this paper, is to generate a two-dimensional isosurface in three dimensions by interpolating the function values between data points. We shall call this the beveled-surface method, following Kalvin's terminology. <p> One disadvantage is that the image produced is naturally blocky, because all surface patches are orthogonal to one of the coordinate axes. However, it can be made to appear smoother by the deft use of surface shading and filtering <ref> [CHRU85, Udu89] </ref>. A second problem is that the surface changes if positive and negative are inverted; the changes may be topological as well as spatial. These changes result from the difference between 1-connectivity and 3-connectivity [USH82] (see Definition 3.2). See Section 5.1 for further discussion. <p> UA-R2 Always connect positive diagonals (often associated with cuberilles <ref> [AFH81, HU83, CHRU85] </ref>). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. Typically, CT volumes have a greater spacing between sample values in the z direction.
Reference: [CIBL83] <author> L. T. Cook, S. J. Dwyer III, S. Batnitzky, and K. R. Lee. </author> <title> A three-dimensional display system for diagnostic imaging applications. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(5) </volume> <pages> 13-19, </pages> <month> August </month> <year> 1983. </year>
Reference-contexts: Efficiency problems are addressed elsewhere [Kal91, WVG92]. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces <ref> [FKU77, CS78, WH79, CIBL83] </ref>. More recent approaches create the isosurface by examining the three dimensions at once. Wyvill et al. [WMW86] developed a method that represents the isosurface as a polygon mesh. They compute samples in a three-dimensional rectangular lattice and analyze cells in this lattice individually.
Reference: [CLL + 88] <author> Harvey E. Cline, William E. Lorensen, Sigwalt Ludke, Carl R. Crawford, and Bruce C. Teeter. </author> <title> Two algorithms for the reconstruction of surfaces from tomograms. </title> <journal> Medical Physics, </journal> <month> June </month> <year> 1988. </year>
Reference-contexts: Koide et al. reported a more complex method based on decomposition of the cell into tetrahedra, and polygonizing the isosurface within each tetrahedron [KDK86]. Ambiguities are implicitly resolved by the decomposition. Lorensen et al. reported a simpler approach <ref> [LC87, CLL + 88] </ref>, where the data samples were essentially the only information available about the underlying function. Their method, called "marching cubes", achieves performance by polygonizing each cell based on a precomputed table of 15 topologically distinct plus-minus patterns of cell corners. <p> They are briefly summarized here and described in more detail in subsequent sections. Computational experience is reported in Section 5.2. Simple Boolean This category includes the simplest policies, such as "always connect the positive diagonal," which is implicit in early boundary tracking methods [AFH81]. The marching cubes algorithm <ref> [LC87, CLL + 88, GN89] </ref>, uses the signs of the eight cell vertices (relative to the threshold) to index a table of 15 cases containing a polygonization of the isosurface. <p> These variants determine topology based only on the signs of the eight corner values relative to the threshold, and pick one topology for each case. The table entry for each case specifies the edge intersections that should be connected to create triangles representing the isosurface within the cell <ref> [LC87, CLL + 88] </ref>. The marching-cubes table lookup method is devised for speed, at the occasional expense of correct topology. Part (b, left) of Figure 4 shows how the original table [LC87, CLL + 88] polygonizes function F 1 . <p> each case specifies the edge intersections that should be connected to create triangles representing the isosurface within the cell <ref> [LC87, CLL + 88] </ref>. The marching-cubes table lookup method is devised for speed, at the occasional expense of correct topology. Part (b, left) of Figure 4 shows how the original table [LC87, CLL + 88] polygonizes function F 1 . This table polygonizes cells with 5 or more positive vertices by using the inverse major case; e.g., "+++++-+-" is treated the same as "-----+-+". <p> With this implementation, the facial average method has performance speed close to that of the simple boolean methods. Bilinear Model Trilinear interpolation among the eight cell vertices is a method often used to estimate the behavior of the sampled data between sample points, when extracting isosurfaces <ref> [CLL + 88] </ref>, for direct volume rendering [Lev88, UK88], and for producing more sample points from those already provided [HB86]. It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan [Nat91]. <p> Part (c, right) shows its treatment of F 2 , which is correct. The trilinear model can also be used to subdivide the cells, possibly producing a smoother isosurface than that produced by simply approximating the surface with a table of polygons <ref> [CLL + 88] </ref>. However, this has no effect on the topology, and F 1 will still emerge with the saw-tooth image. Ambiguous Representation An approach that was briefly explored is to render ambiguities ambiguously.
Reference: [CR74] <author> E. Catmull and R. </author> <title> Rom. A class of local interpolating splines. </title> <editor> In R. Barnhill and R. Riesenfeld, editors, </editor> <booktitle> Computer Aided Geometric Design, </booktitle> <pages> pages 317-326. </pages> <publisher> Academic Press, </publisher> <address> San Francisco, </address> <year> 1974. </year>
Reference-contexts: Tricubic interpolation has the advantage of taking into account the behavior of the neighborhood beyond the cell of interest. The tricubic function used is determined by the 64 voxel values surrounding the cell of interest. The function is the 3-dimensional volumetric version of the Catmull-Rom spline <ref> [CR74, FDFH90] </ref>. Details are given in Appendix A. This method produces a tricubic function within the cell that is C 1 continuous with tricubic functions in neighboring cells at faces. <p> NCA2-430. Appendix A Tricubic Interpolation Equations A tricubic polynomial may be fit to the cell data, using the 4x4x4 region of voxels surrounding the cell to specify the function. The function is the 3-dimensional volumetric version of the Catmull-Rom spline <ref> [CR74, FDFH90] </ref>. In a Catmull-Rom spline curve, the curve interpolates the interior two of the four points defining the curve and uses the outer two points to calculate the gradient of the curve at the interior two.
Reference: [CS78] <author> H. N. Christiansen and T. W. </author> <title> Sederberg. Conversion of complex contour line definitions into polygonal element mosaics. </title> <booktitle> Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> 12(3) </volume> <pages> 187-192, </pages> <month> August </month> <year> 1978. </year> <month> 33 </month>
Reference-contexts: Efficiency problems are addressed elsewhere [Kal91, WVG92]. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces <ref> [FKU77, CS78, WH79, CIBL83] </ref>. More recent approaches create the isosurface by examining the three dimensions at once. Wyvill et al. [WMW86] developed a method that represents the isosurface as a polygon mesh. They compute samples in a three-dimensional rectangular lattice and analyze cells in this lattice individually.
Reference: [DK91] <author> A. Doi and A. Koide. </author> <title> An efficient method of triangulating equi-valued surfaces by using tetrahedral cells. </title> <journal> IEICE Transactions on Communications Electronics Information and Systems, </journal> <volume> E-74:214-224, </volume> <year> 1991. </year>
Reference-contexts: This approach guarantees continuity. Several variants have appeared. Some were designed to correct the problem of discontinuities in marching cubes. Since triangular faces cannot be ambiguous, another method to disambiguate implicitly is to decompose each cell into tetrahedra, and interpolate linearly on each tetrahedral edge <ref> [KDK86, Blo88, DK91] </ref>. The 9 a. Isosurface 0 of quadratic functions F 1 (left) and F 2 (right). b. Various incorrect topologies. Marching cubes on F 1 (left); Facial Average, Bilinear, and UA-R2 on F 1 (center); UA-R1 on F 2 (right). c. Correct topologies.
Reference: [Dur88] <author> Martin J. Durst. </author> <title> Letters: Additional reference to "marching cubes". </title> <journal> Computer Graphics (ACM Siggraph Quarterly), </journal> <volume> 22(2), </volume> <month> April </month> <year> 1988. </year>
Reference-contexts: Their method, called "marching cubes", achieves performance by polygonizing each cell based on a precomputed table of 15 topologically distinct plus-minus patterns of cell corners. In the original implementation, "marching cubes" did not recognize ambiguities. As pointed out by Durst <ref> [Dur88] </ref>, that method could yield a discontinuity between cells. Later researchers [Bak89, Nat91, Kal91], as well as the original authors, described modifications that ensured continuity. Some variants are discussed in Section 4.1. <p> This table polygonizes cells with 5 or more positive vertices by using the inverse major case; e.g., "+++++-+-" is treated the same as "-----+-+". Note that the method leaves a discontinuous hole in function F 1 , a problem pointed out by Durst <ref> [Dur88] </ref>. This occurs because, when two cell vertices diagonally opposite across a face are of one sign and the other six cell vertices are of the other, the table always chooses to treat the two as two disconnected components and separates them using two triangles.
Reference: [FDFH90] <author> James D. Foley, Andies Van Dam, Steven Feiner, and John Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Mass., 2 edition, </address> <year> 1990. </year>
Reference-contexts: Tricubic interpolation has the advantage of taking into account the behavior of the neighborhood beyond the cell of interest. The tricubic function used is determined by the 64 voxel values surrounding the cell of interest. The function is the 3-dimensional volumetric version of the Catmull-Rom spline <ref> [CR74, FDFH90] </ref>. Details are given in Appendix A. This method produces a tricubic function within the cell that is C 1 continuous with tricubic functions in neighboring cells at faces. <p> NCA2-430. Appendix A Tricubic Interpolation Equations A tricubic polynomial may be fit to the cell data, using the 4x4x4 region of voxels surrounding the cell to specify the function. The function is the 3-dimensional volumetric version of the Catmull-Rom spline <ref> [CR74, FDFH90] </ref>. In a Catmull-Rom spline curve, the curve interpolates the interior two of the four points defining the curve and uses the outer two points to calculate the gradient of the curve at the interior two.
Reference: [FKU77] <author> H. Fuchs, Z. M. Kedem, and S. P. Uselton. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> <volume> 10 </volume> <pages> 693-702, </pages> <month> October </month> <year> 1977. </year> <note> Also in Siggraph '77. </note>
Reference-contexts: Efficiency problems are addressed elsewhere [Kal91, WVG92]. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces <ref> [FKU77, CS78, WH79, CIBL83] </ref>. More recent approaches create the isosurface by examining the three dimensions at once. Wyvill et al. [WMW86] developed a method that represents the isosurface as a polygon mesh. They compute samples in a three-dimensional rectangular lattice and analyze cells in this lattice individually.
Reference: [GN89] <author> Richard S. Gallagher and Joop C. Nagtegaal. </author> <title> An efficient 3-D visualization technique for finite element models. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 185-194, </pages> <year> 1989. </year>
Reference-contexts: As pointed out by Durst [Dur88], that method could yield a discontinuity between cells. Later researchers [Bak89, Nat91, Kal91], as well as the original authors, described modifications that ensured continuity. Some variants are discussed in Section 4.1. Gallagher and Nagtegaal <ref> [GN89] </ref> generalized the above approaches to irregular lattices that frequently occur in finite element analysis, and considered higher-degree surfaces instead of triangulation. They also do not address ambiguities. Winget also briefly discusses isosurfaces resulting from finite element analysis 3 [Win88]. <p> They are briefly summarized here and described in more detail in subsequent sections. Computational experience is reported in Section 5.2. Simple Boolean This category includes the simplest policies, such as "always connect the positive diagonal," which is implicit in early boundary tracking methods [AFH81]. The marching cubes algorithm <ref> [LC87, CLL + 88, GN89] </ref>, uses the signs of the eight cell vertices (relative to the threshold) to index a table of 15 cases containing a polygonization of the isosurface.
Reference: [HB86] <author> K. H. Hohne and R. Bernstein. </author> <title> Shading 3D-images from ct using gray-level gradients. </title> <journal> IEEE Trans. Medical Imaging, </journal> <pages> pages 45-57, </pages> <year> 1986. </year>
Reference-contexts: Bilinear Model Trilinear interpolation among the eight cell vertices is a method often used to estimate the behavior of the sampled data between sample points, when extracting isosurfaces [CLL + 88], for direct volume rendering [Lev88, UK88], and for producing more sample points from those already provided <ref> [HB86] </ref>. It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan [Nat91]. Nielson and Hamann considered bilinear models in each face [NH91].
Reference: [HL79] <author> G. T. Herman and H. K. Liu. </author> <title> Three-dimensional display of human organs from computer tomography. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 9(1), </volume> <year> 1979. </year>
Reference-contexts: The first, the cuberille method, considers the subdivisions of space created by the sample points and represents constant value regions as a set of polyhedra (generally cubes) that include the values of interest <ref> [HL79, AFH81, HU83, CHRU85, Udu89] </ref>. The second approach, explored in this paper, is to generate a two-dimensional isosurface in three dimensions by interpolating the function values between data points. We shall call this the beveled-surface method, following Kalvin's terminology.
Reference: [HU83] <author> G. T. Herman and J. K. Udupa. </author> <title> Display of 3-D digital images: Computational foundations and medical applications. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(5) </volume> <pages> 39-46, </pages> <month> August </month> <year> 1983. </year>
Reference-contexts: The first, the cuberille method, considers the subdivisions of space created by the sample points and represents constant value regions as a set of polyhedra (generally cubes) that include the values of interest <ref> [HL79, AFH81, HU83, CHRU85, Udu89] </ref>. The second approach, explored in this paper, is to generate a two-dimensional isosurface in three dimensions by interpolating the function values between data points. We shall call this the beveled-surface method, following Kalvin's terminology. <p> UA-R2 Always connect positive diagonals (often associated with cuberilles <ref> [AFH81, HU83, CHRU85] </ref>). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. Typically, CT volumes have a greater spacing between sample values in the z direction.
Reference: [Kal91] <author> A. D. Kalvin. </author> <title> Segmentation and Surface-Based Modeling of Objects in Three-Dimensional Biomedical Images. </title> <type> PhD thesis, </type> <address> New York University, </address> <year> 1991. </year>
Reference-contexts: Many of the methods described in the literature have the same problem that inversion of positive and negative can cause both spatial and topological changes to the surface. Efficiency problems are addressed elsewhere <ref> [Kal91, WVG92] </ref>. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces [FKU77, CS78, WH79, CIBL83]. <p> In the original implementation, "marching cubes" did not recognize ambiguities. As pointed out by Durst [Dur88], that method could yield a discontinuity between cells. Later researchers <ref> [Bak89, Nat91, Kal91] </ref>, as well as the original authors, described modifications that ensured continuity. Some variants are discussed in Section 4.1. Gallagher and Nagtegaal [GN89] generalized the above approaches to irregular lattices that frequently occur in finite element analysis, and considered higher-degree surfaces instead of triangulation. <p> Positive values are considered to represent the "objects". (In the cited paper "R u = R 1 " corresponds to our label "UA-R1", etc.; the "UA" gives the authors' initials.) UA-R1 Always connect negative diagonals (often associated with corrected versions of marching cubes <ref> [LC87, Bak89, Kal91] </ref>). UA-R2 Always connect positive diagonals (often associated with cuberilles [AFH81, HU83, CHRU85]). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. <p> However, the paper does not discuss pros and cons of the various alternatives in terms of representing the underlying physiology. Rather, they motivate UA-R3 in terms of computational efficiency for boundary tracking. A proposal to correct the discontinuity problems of marching cubes was made independently by several researchers <ref> [Bak89, Kal91, Nat91, NH91] </ref>. It treats cells with 5 or more positive vertices independently of their inverses, by always connecting the negative corners of any ambiguous face. <p> The quadrilateral could also be divided into two triangles by another interior chord. Kalvin points out that it is important that the final surfaces not intersect themselves or each other, so that they describe physically realizable objects <ref> [Kal91] </ref>. We shall call this the non-intersection property . He proves that the "cuberille method" of disambiguation (always connect positive diagonals in ambiguous faces) has this property.
Reference: [KB89] <author> Devendra Kalra and Alan H. Barr. </author> <title> Guaranteed ray intersections with implicit surfaces. </title> <booktitle> Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> 23(3) </volume> <pages> 297-306, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: If the underlying function is known, it may be possible to resample the data until the ambiguity is resolved <ref> [Blo88, KB89] </ref>. However, we are concerned with problems where resampling is impossible or impractical. This is frequently the case when the data originate from physical measurements, as in medical applications, or from complex computations, such as simulations and partial differential equations.
Reference: [KDHB92] <author> A. D. Kalvin, D. Dean, J-J. Hublin, and M. Braum. </author> <title> Visualization in anthropology: Reconstruction of human fossils from multiple pieces. </title> <booktitle> In Visualization 92, </booktitle> <pages> pages 404-410. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference: [KDK86] <author> A. Koide, A. Doi, and K. Kajioka. </author> <title> Polyhedral approximation approach to molecular orbit graphics. </title> <journal> Journal of Molecular Graphics, </journal> <volume> 4 </volume> <pages> 149-156, </pages> <year> 1986. </year>
Reference-contexts: In the interest of efficiency, they estimate the center value by averaging the four corner values (the facial average method, discussed later). Koide et al. reported a more complex method based on decomposition of the cell into tetrahedra, and polygonizing the isosurface within each tetrahedron <ref> [KDK86] </ref>. Ambiguities are implicitly resolved by the decomposition. Lorensen et al. reported a simpler approach [LC87, CLL + 88], where the data samples were essentially the only information available about the underlying function. <p> This approach guarantees continuity. Several variants have appeared. Some were designed to correct the problem of discontinuities in marching cubes. Since triangular faces cannot be ambiguous, another method to disambiguate implicitly is to decompose each cell into tetrahedra, and interpolate linearly on each tetrahedral edge <ref> [KDK86, Blo88, DK91] </ref>. The 9 a. Isosurface 0 of quadratic functions F 1 (left) and F 2 (right). b. Various incorrect topologies. Marching cubes on F 1 (left); Facial Average, Bilinear, and UA-R2 on F 1 (center); UA-R1 on F 2 (right). c. Correct topologies.
Reference: [LC87] <author> William E. Lorensen and Harvey E. Cline. </author> <title> Marching cubes: A high resolution 3D surface construction algorithm. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 163-169, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Koide et al. reported a more complex method based on decomposition of the cell into tetrahedra, and polygonizing the isosurface within each tetrahedron [KDK86]. Ambiguities are implicitly resolved by the decomposition. Lorensen et al. reported a simpler approach <ref> [LC87, CLL + 88] </ref>, where the data samples were essentially the only information available about the underlying function. Their method, called "marching cubes", achieves performance by polygonizing each cell based on a precomputed table of 15 topologically distinct plus-minus patterns of cell corners. <p> Eight of these cases are inverses of another case, in which the positive and negative values are reversed. Treating inverses as the same case, there are 14 cases, as shown in Figure 1, which we refer to as the major cases. Lorensen and Cline <ref> [LC87] </ref> give 15 cases because they do not consider the reflection of case 11 to be the same case. Our case numbering follows theirs with the exception of this omitted case. <p> They are briefly summarized here and described in more detail in subsequent sections. Computational experience is reported in Section 5.2. Simple Boolean This category includes the simplest policies, such as "always connect the positive diagonal," which is implicit in early boundary tracking methods [AFH81]. The marching cubes algorithm <ref> [LC87, CLL + 88, GN89] </ref>, uses the signs of the eight cell vertices (relative to the threshold) to index a table of 15 cases containing a polygonization of the isosurface. <p> These variants determine topology based only on the signs of the eight corner values relative to the threshold, and pick one topology for each case. The table entry for each case specifies the edge intersections that should be connected to create triangles representing the isosurface within the cell <ref> [LC87, CLL + 88] </ref>. The marching-cubes table lookup method is devised for speed, at the occasional expense of correct topology. Part (b, left) of Figure 4 shows how the original table [LC87, CLL + 88] polygonizes function F 1 . <p> each case specifies the edge intersections that should be connected to create triangles representing the isosurface within the cell <ref> [LC87, CLL + 88] </ref>. The marching-cubes table lookup method is devised for speed, at the occasional expense of correct topology. Part (b, left) of Figure 4 shows how the original table [LC87, CLL + 88] polygonizes function F 1 . This table polygonizes cells with 5 or more positive vertices by using the inverse major case; e.g., "+++++-+-" is treated the same as "-----+-+". <p> Positive values are considered to represent the "objects". (In the cited paper "R u = R 1 " corresponds to our label "UA-R1", etc.; the "UA" gives the authors' initials.) UA-R1 Always connect negative diagonals (often associated with corrected versions of marching cubes <ref> [LC87, Bak89, Kal91] </ref>). UA-R2 Always connect positive diagonals (often associated with cuberilles [AFH81, HU83, CHRU85]). UA-R3 Connect negative diagonals if the face is parallel to the xy-plane; otherwise, connect positive diagonals. 1 Policy UA-R3 originates in the cited paper. <p> Noodleman and D. Case of Scripps Institute. Threshold 0:0 on the protein detects the "nodal surface". Table 1 provides some statistics on the nature of the volumes and the frequency of the 14 major cases, which are numbered as in Figure 1; we follow Lorensen and Cline <ref> [LC87] </ref>, except that their cases 11 and 14 have been combined into our case 11. Inverse cases are included in the count of the non-inverted case. The number in square brackets after the ambiguous cases indicates how many topological subcases there are for the major case shown. <p> In many graphics problems there is a trade-off of speed for accuracy. We attempted to get the best of both worlds by using a major case table for speed on the unambiguous cases, similarly to Lorensen and Cline <ref> [LC87] </ref>, but with a careful disambiguation for accuracy when ambiguities did arise.
Reference: [Lev88] <author> Marc Levoy. </author> <title> Display of surfaces from volume data. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(3) </volume> <pages> 29-37, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: Bilinear Model Trilinear interpolation among the eight cell vertices is a method often used to estimate the behavior of the sampled data between sample points, when extracting isosurfaces [CLL + 88], for direct volume rendering <ref> [Lev88, UK88] </ref>, and for producing more sample points from those already provided [HB86]. It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan [Nat91]. Nielson and Hamann considered bilinear models in each face [NH91].
Reference: [LV80] <author> S. Lobregt and P. W. Verbeck. </author> <title> Three-dimensional skeletonization. </title> <journal> IEEE Transactions on Pattern Matching and Machine Intelligence, </journal> <volume> PAMI-2(1):75-77, </volume> <month> January </month> <year> 1980. </year>
Reference-contexts: The isosurface produced should be neutral with respect to positive and negative sample data values (relative to the threshold): Multiplying the samples (and threshold) by 1 should not alter the surface. In this criterion we depart from earlier studies <ref> [LV80, Sri81, USH82] </ref> in which the "object" (usually represented by positive values) and its complement are assigned different degrees of connectivity. 5. The algorithm should not create artifacts not implied by the data, such as bumps and holes. 6. Preferably, the algorithm should be efficient enough for real-time interactive use. <p> Strictly speaking, a cell is a rectangular parallelepiped, but by rescaling x, y, and z to 1 we can simplify the nomenclature and presentation. There are several notions of neighborhood (adjacency) in a rectangular lattice. Unfortunately, the terminology is not uniform in the literature <ref> [LV80, Sri81, USH82] </ref>. The next definition gives the terminology we shall use, and the alternates seen. (See also Section 4.1.) Definition 3.2: Two cell vertices are said to be k-adjacent if they differ in at most k coordinates, and differ by at most 1 in any coordinate. <p> When one considers the eight vertices defining a cell as being positive or negative, as defined above, there are 256 possible combinations of "positive" and "negative" vertex values. Using symmetries of the cube, these can be grouped into 22 cases <ref> [LV80, Sri81] </ref>. Eight of these cases are inverses of another case, in which the positive and negative values are reversed. Treating inverses as the same case, there are 14 cases, as shown in Figure 1, which we refer to as the major cases.
Reference: [Nat91] <author> B. K. Natarajan. </author> <title> On generating topologically correct isosurfaces from uniform samples. </title> <type> Technical Report HPL-91-76, </type> <institution> Software and Systems Laboratory, Hewlett-Packard Company, Page Mill Road, </institution> <address> Palo Alto, Ca, </address> <year> 1991. </year> <note> (To appear in Visual Computer). </note>
Reference-contexts: In the original implementation, "marching cubes" did not recognize ambiguities. As pointed out by Durst [Dur88], that method could yield a discontinuity between cells. Later researchers <ref> [Bak89, Nat91, Kal91] </ref>, as well as the original authors, described modifications that ensured continuity. Some variants are discussed in Section 4.1. Gallagher and Nagtegaal [GN89] generalized the above approaches to irregular lattices that frequently occur in finite element analysis, and considered higher-degree surfaces instead of triangulation. <p> Winget also briefly discusses isosurfaces resulting from finite element analysis 3 [Win88]. Subsequent to the presentation of a preliminary version of this work at a workshop [WVG90], other researchers have developed additional methods to resolve ambiguities using an assumption of trilinearity in each cell <ref> [Nat91] </ref>, or bilinearity in each face [NH91]. 3.1 Nature of the Data Isosurfaces may be used to represent scalar data values that are distributed in a three-dimensional coordinate system, such as density values generated by a CT-scan or temperature values from computational fluid dynamics. <p> For simplicity, our implementation produces two triangles, thus separating the black vertices of case 4. Natarajan studies case 4 (as well as more complicated versions of the "long diagonal", which occur in cases 6, 10, and 12) under the assumption that the underlying function is trilinear within the cell <ref> [Nat91] </ref>. 6 i + i u u (a) i i + u u @ @ @ @ @ @ i + i u u (c) same connected component; choice (b) puts the positive corners in the same connected component; and choice (c) is ambiguous. k 5 k 1 k +3 k <p> This is the average value of the cell vertices at the corners of that face. A newer proposal is the Bilinear model . A trilinear function is often used for interpolating sampled data. The isosurface of the trilinear function that fits the cell corners may be used for disambiguation <ref> [Nat91] </ref>. In a cell face the model simplifies to bilinear [NH91]. Another possibility that has never been implemented is Ambiguous representation: Ambiguities can be rendered ambiguously as a compromise between topologies. <p> However, the paper does not discuss pros and cons of the various alternatives in terms of representing the underlying physiology. Rather, they motivate UA-R3 in terms of computational efficiency for boundary tracking. A proposal to correct the discontinuity problems of marching cubes was made independently by several researchers <ref> [Bak89, Kal91, Nat91, NH91] </ref>. It treats cells with 5 or more positive vertices independently of their inverses, by always connecting the negative corners of any ambiguous face. <p> It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan <ref> [Nat91] </ref>. Nielson and Hamann considered bilinear models in each face [NH91]. In each cell face, the trilinear function reduces to a bilinear function that depends only on the corners of that face. Thus, these methods obey the facial plane principle of Proposition 3.2.
Reference: [NH91] <author> Gregory M. Nielson and Bernd Hamann. </author> <title> The asymptotic decider: Resolving the ambiguity in marching cubes. </title> <booktitle> In Proceedings of Visualization '91, </booktitle> <pages> pages 83-91, </pages> <address> San Diego, Ca., </address> <month> October </month> <year> 1991. </year>
Reference-contexts: Subsequent to the presentation of a preliminary version of this work at a workshop [WVG90], other researchers have developed additional methods to resolve ambiguities using an assumption of trilinearity in each cell [Nat91], or bilinearity in each face <ref> [NH91] </ref>. 3.1 Nature of the Data Isosurfaces may be used to represent scalar data values that are distributed in a three-dimensional coordinate system, such as density values generated by a CT-scan or temperature values from computational fluid dynamics. <p> A newer proposal is the Bilinear model . A trilinear function is often used for interpolating sampled data. The isosurface of the trilinear function that fits the cell corners may be used for disambiguation [Nat91]. In a cell face the model simplifies to bilinear <ref> [NH91] </ref>. Another possibility that has never been implemented is Ambiguous representation: Ambiguities can be rendered ambiguously as a compromise between topologies. <p> However, the paper does not discuss pros and cons of the various alternatives in terms of representing the underlying physiology. Rather, they motivate UA-R3 in terms of computational efficiency for boundary tracking. A proposal to correct the discontinuity problems of marching cubes was made independently by several researchers <ref> [Bak89, Kal91, Nat91, NH91] </ref>. It treats cells with 5 or more positive vertices independently of their inverses, by always connecting the negative corners of any ambiguous face. <p> It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan [Nat91]. Nielson and Hamann considered bilinear models in each face <ref> [NH91] </ref>. In each cell face, the trilinear function reduces to a bilinear function that depends only on the corners of that face. Thus, these methods obey the facial plane principle of Proposition 3.2. <p> He proves that the "cuberille method" of disambiguation (always connect positive diagonals in ambiguous faces) has this property. There are certain topological polygons, involving multiple ambiguous faces, that cannot be triangulated without introducing an in-face chord. (Nielson and Hamann have spelled out these cases in detail <ref> [NH91] </ref>.) As mentioned earlier, in-face chords are undesirable because they create discontinuities. Our implementation uses a combination of triangles and quadrilaterals to ensure that all chords are interior to the cell. This ensures continuity, but does not ensure the non-intersection property. <p> But this is impossible, because then the corresponding topological edges would also intersect. Nielson and Hamann described a different way to define interior vertices, which is sufficient for their purposes, but which does not handle the case shown in Figure 9 <ref> [NH91] </ref>. Non-intersection is not mentioned, but an argument similar to that of case 3 above shows it to hold. 5 Results on Scientific Data 5.1 Connectivity Comparison on Medical Data An earlier section discussed behavior of disambiguation methods on artificial functions, because in those cases we know the correct behavior.
Reference: [RNMK91] <author> H. Rusinek, M. E. Noz, G. Q. Maguire, and A. D. Kalvin. </author> <title> Quantitative and qualitative comparison of volumetric and surface rendering techniques. </title> <journal> IEEE Transactions on Nuclear Science, </journal> <volume> 38(2) </volume> <pages> 659-662, </pages> <year> 1991. </year> <month> 34 </month>
Reference-contexts: We would expect UA-R1 to err on the side of disconnecting thin objects that should be connected. Rusinek et al. have reported difficulty in visualizing thin bones with Kalvin's "Alligator" method, which uses UA-R1 connectivity <ref> [RNMK91] </ref>. Their experiment used a CT-scan of a dry skull. On similar data, we have also noticed that small tunnels sometimes appear in thin bones using UA-R1 connectivity, but they disappear using others.
Reference: [Sri81] <author> S. N. Srihari. </author> <title> Representation of three-dimensional digital images. </title> <journal> Computing Surveys, </journal> <volume> 13(4) </volume> <pages> 399-424, </pages> <year> 1981. </year>
Reference-contexts: Toward this end we identified a number of desirable features of a general-purpose polygonal isosurface algorithm: 1. The algorithm should yield a continuous surface: Each polygonal edge should be shared by exactly two polygons, or lie in an external face of the entire volume <ref> [Sri81, USH82] </ref>. 2. The isosurface should be a continuous function of the input data: A small change in the threshold value or some data value should produce a small change in the isosurface. 3. The isosurface should be topologically correct when the underlying function is "smooth enough". 4. <p> The isosurface produced should be neutral with respect to positive and negative sample data values (relative to the threshold): Multiplying the samples (and threshold) by 1 should not alter the surface. In this criterion we depart from earlier studies <ref> [LV80, Sri81, USH82] </ref> in which the "object" (usually represented by positive values) and its complement are assigned different degrees of connectivity. 5. The algorithm should not create artifacts not implied by the data, such as bumps and holes. 6. Preferably, the algorithm should be efficient enough for real-time interactive use. <p> Strictly speaking, a cell is a rectangular parallelepiped, but by rescaling x, y, and z to 1 we can simplify the nomenclature and presentation. There are several notions of neighborhood (adjacency) in a rectangular lattice. Unfortunately, the terminology is not uniform in the literature <ref> [LV80, Sri81, USH82] </ref>. The next definition gives the terminology we shall use, and the alternates seen. (See also Section 4.1.) Definition 3.2: Two cell vertices are said to be k-adjacent if they differ in at most k coordinates, and differ by at most 1 in any coordinate. <p> When one considers the eight vertices defining a cell as being positive or negative, as defined above, there are 256 possible combinations of "positive" and "negative" vertex values. Using symmetries of the cube, these can be grouped into 22 cases <ref> [LV80, Sri81] </ref>. Eight of these cases are inverses of another case, in which the positive and negative values are reversed. Treating inverses as the same case, there are 14 cases, as shown in Figure 1, which we refer to as the major cases. <p> It is known that a polygon mesh defines a continuous surface if and only if each edge occurs exactly twice, unless it is on the boundary of the entire data grid <ref> [Sri81, USH82] </ref>. Whereas correct topology is not achievable without knowledge of the underlying function, we shall see that continuity can be guaranteed by a variety of methods.
Reference: [UA90] <author> J. K. Udupa and V. G. Ajjanagadde. </author> <title> Boundary and object labelling in three-dimensional images. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 51 </volume> <pages> 355-369, </pages> <year> 1990. </year>
Reference-contexts: The picture is similar to Part (c, right) of Figure 4. Udupa and Ajjanagadde have described three simple boolean connectivity policies (their terminology differs) <ref> [UA90] </ref>. Positive values are considered to represent the "objects". (In the cited paper "R u = R 1 " corresponds to our label "UA-R1", etc.; the "UA" gives the authors' initials.) UA-R1 Always connect negative diagonals (often associated with corrected versions of marching cubes [LC87, Bak89, Kal91]).
Reference: [Udu89] <author> Jayaram K. Udupa. </author> <title> Display of medical objects and their interactive manipulation. </title> <booktitle> In Proceedings of Graphics Interface '89, </booktitle> <pages> pages 40-43, </pages> <address> London, Ontario, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: The first, the cuberille method, considers the subdivisions of space created by the sample points and represents constant value regions as a set of polyhedra (generally cubes) that include the values of interest <ref> [HL79, AFH81, HU83, CHRU85, Udu89] </ref>. The second approach, explored in this paper, is to generate a two-dimensional isosurface in three dimensions by interpolating the function values between data points. We shall call this the beveled-surface method, following Kalvin's terminology. <p> One disadvantage is that the image produced is naturally blocky, because all surface patches are orthogonal to one of the coordinate axes. However, it can be made to appear smoother by the deft use of surface shading and filtering <ref> [CHRU85, Udu89] </ref>. A second problem is that the surface changes if positive and negative are inverted; the changes may be topological as well as spatial. These changes result from the difference between 1-connectivity and 3-connectivity [USH82] (see Definition 3.2). See Section 5.1 for further discussion.
Reference: [UK88] <author> Craig Upson and Michael Keeler. </author> <title> The v-buffer: Visible volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 59-64, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: Bilinear Model Trilinear interpolation among the eight cell vertices is a method often used to estimate the behavior of the sampled data between sample points, when extracting isosurfaces [CLL + 88], for direct volume rendering <ref> [Lev88, UK88] </ref>, and for producing more sample points from those already provided [HB86]. It is attractive because it is simple to calculate. 13 The trilinear model of the cell may be used for connectivity decisions, as described by Natarajan [Nat91]. Nielson and Hamann considered bilinear models in each face [NH91].
Reference: [USH82] <author> Jayaram K. Udupa, Sargur H. Srihari, and Gabor T. Herman. </author> <title> Boundary detection in multidimensions. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-4(1):41-50, </volume> <month> January </month> <year> 1982. </year>
Reference-contexts: Toward this end we identified a number of desirable features of a general-purpose polygonal isosurface algorithm: 1. The algorithm should yield a continuous surface: Each polygonal edge should be shared by exactly two polygons, or lie in an external face of the entire volume <ref> [Sri81, USH82] </ref>. 2. The isosurface should be a continuous function of the input data: A small change in the threshold value or some data value should produce a small change in the isosurface. 3. The isosurface should be topologically correct when the underlying function is "smooth enough". 4. <p> The isosurface produced should be neutral with respect to positive and negative sample data values (relative to the threshold): Multiplying the samples (and threshold) by 1 should not alter the surface. In this criterion we depart from earlier studies <ref> [LV80, Sri81, USH82] </ref> in which the "object" (usually represented by positive values) and its complement are assigned different degrees of connectivity. 5. The algorithm should not create artifacts not implied by the data, such as bumps and holes. 6. Preferably, the algorithm should be efficient enough for real-time interactive use. <p> A second problem is that the surface changes if positive and negative are inverted; the changes may be topological as well as spatial. These changes result from the difference between 1-connectivity and 3-connectivity <ref> [USH82] </ref> (see Definition 3.2). See Section 5.1 for further discussion. Beveled surfaces permit patches with any orientation, so have the potential of providing a closer approximation to the underlying surface. However, this greater generality may carry with it greater costs in both processing times and storage space. <p> Strictly speaking, a cell is a rectangular parallelepiped, but by rescaling x, y, and z to 1 we can simplify the nomenclature and presentation. There are several notions of neighborhood (adjacency) in a rectangular lattice. Unfortunately, the terminology is not uniform in the literature <ref> [LV80, Sri81, USH82] </ref>. The next definition gives the terminology we shall use, and the alternates seen. (See also Section 4.1.) Definition 3.2: Two cell vertices are said to be k-adjacent if they differ in at most k coordinates, and differ by at most 1 in any coordinate. <p> It is known that a polygon mesh defines a continuous surface if and only if each edge occurs exactly twice, unless it is on the boundary of the entire data grid <ref> [Sri81, USH82] </ref>. Whereas correct topology is not achievable without knowledge of the underlying function, we shall see that continuity can be guaranteed by a variety of methods.
Reference: [WH79] <author> Thomas Wright and John Humbrecht. </author> <title> Isosurf an algorithm for plotting iso-valued surfaces of a function of three variables. </title> <booktitle> Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> 13(2) </volume> <pages> 182-189, </pages> <month> August </month> <year> 1979. </year>
Reference-contexts: Efficiency problems are addressed elsewhere [Kal91, WVG92]. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces <ref> [FKU77, CS78, WH79, CIBL83] </ref>. More recent approaches create the isosurface by examining the three dimensions at once. Wyvill et al. [WMW86] developed a method that represents the isosurface as a polygon mesh. They compute samples in a three-dimensional rectangular lattice and analyze cells in this lattice individually.
Reference: [Win88] <author> James M. Winget. </author> <title> Advanced graphics hardware for finite element results display. In Advanced Topics in Finite Element Analysis, </title> <address> New York, </address> <year> 1988. </year> <journal> American Society of Mechanical Engineers. </journal> <note> Presented at Pressure, Vessels, and Piping Conf. </note>
Reference-contexts: Some variants are discussed in Section 4.1. Gallagher and Nagtegaal [GN89] generalized the above approaches to irregular lattices that frequently occur in finite element analysis, and considered higher-degree surfaces instead of triangulation. They also do not address ambiguities. Winget also briefly discusses isosurfaces resulting from finite element analysis 3 <ref> [Win88] </ref>. <p> The above two assumptions are made by linear interpolation. Of course, unsupported smoothness assumptions may be incorrect. As pointed out by Winget, isosurfaces in fluid dynamics problems can have discontinuities in the gradient, while the surface itself is continuous <ref> [Win88] </ref>. Furthermore, very small connected components may be entirely missed, for example, in the case where the surface lies entirely within one cell, and the voxel values of all cell vertices are positive.
Reference: [WMW86] <author> G. Wyvill, C. McPheeters, and B. Wyvill. </author> <title> Data structures for soft objects. </title> <journal> The Visual Computer, </journal> <volume> 2(4) </volume> <pages> 227-234, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces [FKU77, CS78, WH79, CIBL83]. More recent approaches create the isosurface by examining the three dimensions at once. Wyvill et al. <ref> [WMW86] </ref> developed a method that represents the isosurface as a polygon mesh. They compute samples in a three-dimensional rectangular lattice and analyze cells in this lattice individually. <p> Following Wyvill et al. <ref> [WMW86] </ref>, who call the underlying function the "field function", generation of an isosurface involves determining, for each cell, whether the underlying function takes on the threshold value within the cell, and if so, approximately where the isosurface lies. <p> The resulting topology depends on this choice. Extended Boolean We are not aware of any work in this category. Simple Metric Wyvill et al. introduced the first isosurface method that constructed beveled surfaces <ref> [WMW86] </ref>. They used the Facial average value to choose which corners to connect in an ambiguous face. This is the average value of the cell vertices at the corners of that face. A newer proposal is the Bilinear model . A trilinear function is often used for interpolating sampled data. <p> Facial Average Values The facial average value method is employed by Wyvill et al. <ref> [WMW86] </ref>. The facial average value is the average of the four corner values of an ambiguous face. It is also equal to the center value of a bilinear interpolation across the cell face. The facial average method does differentiate between ambiguous topologies, but not in a particularly satisfactory manner.
Reference: [WVG90] <author> Jane Wilhelms and Allen Van Gelder. </author> <title> Topological considerations in isosurface generation, extended abstract. </title> <journal> Computer Graphics, </journal> <volume> 24(5) </volume> <pages> 79-86, </pages> <year> 1990. </year> <note> Special Issue on San Diego Workshop on Volume Visualization; also UCSC technical report UCSC-CRL-90-14. </note>
Reference-contexts: They also do not address ambiguities. Winget also briefly discusses isosurfaces resulting from finite element analysis 3 [Win88]. Subsequent to the presentation of a preliminary version of this work at a workshop <ref> [WVG90] </ref>, other researchers have developed additional methods to resolve ambiguities using an assumption of trilinearity in each cell [Nat91], or bilinearity in each face [NH91]. 3.1 Nature of the Data Isosurfaces may be used to represent scalar data values that are distributed in a three-dimensional coordinate system, such as density values
Reference: [WVG92] <author> Jane Wilhelms and Allen Van Gelder. </author> <title> Octrees for faster isosurface generation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(3) </volume> <pages> 201-227, </pages> <month> July </month> <year> 1992. </year> <note> Extended abstract in ACM Computer Graphics 24(5) 57-62; also UCSC technical report UCSC-CRL-90-28. 35 </note>
Reference-contexts: Many of the methods described in the literature have the same problem that inversion of positive and negative can cause both spatial and topological changes to the surface. Efficiency problems are addressed elsewhere <ref> [Kal91, WVG92] </ref>. This paper addresses the topological problems in beveled surface construction. Early isosurface approaches first generated two-dimensional contour lines for parallel planes running through the data, and then connected the contour lines into three-dimensional isosurfaces [FKU77, CS78, WH79, CIBL83].
References-found: 38

