URL: http://www.cs.utexas.edu/users/pclark/papers/ssymp97.ps
Refering-URL: http://www.cs.utexas.edu/users/pclark/resume.html
Root-URL: 
Email: fbarley,clarkp,kew,woodsg@redwood.rt.cs.boeing.com  
Title: The Neutral Representation Project  
Author: Mike Barley, Peter Clark, Keith Williamson, Steve Woods 
Address: P.O. Box 3707, WA 98124  
Affiliation: Boeing Research and Technology  
Web: http://www.cs.utexas.edu/users/pclark/papers/ssymp97.ps  
Note: (To appear in Proceedings of AAAI Spring Symposium on Ontological Engineering, March 1997)  
Abstract: The evolving complexity of many modern artifacts, such as aircraft, has led to a serious fragmentation of knowledge among software systems required for their design and manufacture. In the case of aircraft design, views of the same generic design knowledge are redundantly encoded in multiple software systems, each system using its own idiosyncractic ontology, and each system containing that knowledge in an implicit, task-and vendor-specific form. This situation is expensive, due to high cost of developing from scratch, maintaining and keeping synchronized the many systems used in design. Boeing's "Neutral Representation" project aims to address these concerns by prototyping languages and methods for making these underlying ontologies and knowledge explicit, and hence more sharable and maintainable. We are approaching this goal through three tasks: Building explicit, neutral, machine-sensible representations of design knowledge; structuring that knowledge into reusable components, indexed by the ontologies which they use; and linking those representations with existing design systems. In this paper we present the work done this year, and discuss issues related to ontological engineering and knowledge sharing which have arisen. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Chen, S. </author> <year> 1996. </year> <title> Step: Links to projects and organizations. </title> <address> (http://gsun6.gintic.ntu.ac.sg:8000/~chchan/ link/step.html). </address>
Reference-contexts: There are several ongoing projects within Boeing to try to address these concerns with respect to product instance data, so that at least information about specific parts can be represented and exchanged in a neutral, machine-sensible form (for example work on STEP <ref> (Chen 1996) </ref>, which aims to standardize the form in which product data is exchanged). The Neutral Representation project similarly is addressing these concerns but with respect to design knowledge, where information is mainly in the form of general rules.
Reference: <author> Clark, P., and Porter, B. </author> <year> 1996. </year> <title> The dce help-desk project. </title> <address> (http://www.cs.utexas.edu/users/mfkb/ dce.html). </address>
Reference-contexts: This approach has been prototyped in several areas, including aerospace (Marchant, Cerbah, & Mellish 1996) and distributed computing <ref> (Clark & Porter 1996) </ref>. Smart Documentation: Currently, documentation of designs and design software is typically in free text format, making the relationships and dependencies between different aspects of a design opaque.
Reference: <author> Conklin, J., and Begeman, M. L. </author> <year> 1987. </year> <title> gIBIS: a hypertext tool for team design deliberation. </title> <editor> In Smith, J. B., and Halasz, F., eds., </editor> <booktitle> Hypertext '87 Proceedings, </booktitle> <pages> 247-251. </pages> <address> NY: </address> <publisher> Assoc. Computing Machinery. </publisher>
Reference: <author> Cutkosky, M. R.; Engelmore, R. S.; Fikes, R. E.; Genesereth, M. R.; Gruber, T. R.; Mark, W. S.; Tenenbaum, J. M.; and Weber, J. C. </author> <year> 1993. </year> <title> PACT: An experiment in integrating concurrent engineering systems. </title> <publisher> IEEE Computer 28-37. Cycorp, Inc. </publisher> <year> 1996. </year> <title> The cyc public ontology. </title> <address> (http://www.cyc.com/public.html). </address>
Reference-contexts: The distributed model requires an additional ability of applications to `publish' the knowledge they know, in request to queries from other applications. In practice, earlier experiments in knowledge sharing (eg. PACT <ref> (Cutkosky et al. 1993) </ref>, SHADE (McGuire et al. 1993)) employed a hybrid approach, where some knowledge was exchanged between existing applica-tions while other knowledge was explicitly formalized in a new, centralized ontology resource for those applications.
Reference: <author> Dahl, M. </author> <year> 1993. </year> <title> ESDS: Materials technology knowledge bases supporting design of boeing jetliners. </title> <booktitle> In Proc 5th Innovative Applications of AI (IAAI-93), </booktitle> <pages> 26-33. </pages> <address> CA: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Given such design rules, an inference engine can reason with and combine knowledge to answer a wide variety of questions, and tailor answers to an application system's specific context. This approach has been highly successful in many knowledge-based systems, including within Boeing (eg. ESDS <ref> (Dahl 1993) </ref>, which reasons with application data to advise on tasks such as material selection, electrical engineering aspects). A neutral representation could similarly act as an active source of design information for both users and application software.
Reference: <author> Genesereth, M. R., and Fikes, R. E. </author> <year> 1992. </year> <title> Knowledge interchange format: Version 3.0 reference manual. </title> <type> Tech Report Logic-92-1, </type> <institution> Computer Science, Stanford Univ, </institution> <address> CA. (http://logic.stanford.edu/kif/kif.html). </address>
Reference: <author> Gruber, T. R. </author> <year> 1993. </year> <title> A translation approach to portable ontology specifications. </title> <journal> Knowledge Acquisition 5(2) </journal> <pages> 199-220. </pages>
Reference-contexts: Use of Existing Knowledge Resources There are several extensive resources already developed elsewhere, which may be of benefit to this project if we were able to import and use them. These include the Ontolingua library (containing a collection KIF-based theories) <ref> (Gruber 1993) </ref>, the Cyc ontology (Cycorp, Inc. 1996), and the large amount of work done in STEP (Chen 1996; SCRA, Inc 1996). However, there are also significant barriers to being able to import and use knowledge from these resources "off the shelf".
Reference: <author> Jullig, R.; Srinivas, Y. V.; Blaine, L.; Gilham, L.-M.; Goldberg, A.; Green, C.; McDonald, J.; and Waldinger, R. </author> <year> 1995. </year> <title> Specware language manual. </title> <type> Technical report, </type> <institution> Kestrel Institute. </institution> <note> (http://kestrel.edu/www/specware.html). </note>
Reference-contexts: In our experiments we used Ontolingua, an extended version of KIF allowing theories to be specified in a pseudo object-oriented style. SLANG: A language which supports the construction of separate, modular theories, and their integration together <ref> (Jullig et al. 1995) </ref>. KIF/Ontolingua has particular advantages due to its ongoing emergence as a standard, while SLANG has particular advantages due to its capabilities for merging different theories together in sophisticated ways.
Reference: <author> Klein, M. </author> <year> 1993. </year> <title> Capturing design rationale in concurrent engineering teams. </title> <publisher> IEEE Computer 39-47. </publisher>
Reference: <author> Marchant, B. P.; Cerbah, F.; and Mellish, C. S. </author> <year> 1996. </year> <title> The GhostWriter project: a demonstration of the use of AI techniques in the production of technical publications. </title> <booktitle> In Expert Systems '96 (Proc 16th Annual Conf of the BCS Specialist Group on Espert Systems). </booktitle>
Reference-contexts: This approach has been prototyped in several areas, including aerospace <ref> (Marchant, Cerbah, & Mellish 1996) </ref> and distributed computing (Clark & Porter 1996). Smart Documentation: Currently, documentation of designs and design software is typically in free text format, making the relationships and dependencies between different aspects of a design opaque.
Reference: <author> McGuire, J. G.; Kuokka, D. R.; Weber, J. C.; Tenen-baum, J. M.; Gruber, T. R.; and Olsen, G. R. </author> <year> 1993. </year> <title> SHADE: Knowledge-based technology for the re-engineering problem. Concurrent Engineering: </title> <note> Applications and Research (CERA) 1(2). </note>
Reference-contexts: The distributed model requires an additional ability of applications to `publish' the knowledge they know, in request to queries from other applications. In practice, earlier experiments in knowledge sharing (eg. PACT (Cutkosky et al. 1993), SHADE <ref> (McGuire et al. 1993) </ref>) employed a hybrid approach, where some knowledge was exchanged between existing applica-tions while other knowledge was explicitly formalized in a new, centralized ontology resource for those applications.
Reference: <author> Proctor, P. </author> <year> 1995. </year> <title> Boeing adopts `expert' design system. Aviation Week & Space Technology 27. </title> <publisher> SCRA, Inc. </publisher> <year> 1996. </year> <title> Step/pde: Frequently asked questions. </title> <address> (http://www.scra.org/uspro/faq.html). </address>
Reference-contexts: This problem is growing, as Boeing is developing new design automation software at a significant rate. One class of software, called Knowledge Based Engineering (KBE), software is closely coupled to Computer Aided Design (CAD) and Computer Aided Manufacturing (CAM) systems <ref> (Proctor 1995) </ref>. KBE is being used to create large quantities of product data in a repeatable and standard way.
References-found: 12

