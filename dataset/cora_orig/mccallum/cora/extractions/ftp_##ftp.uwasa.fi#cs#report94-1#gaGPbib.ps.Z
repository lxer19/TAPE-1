URL: ftp://ftp.uwasa.fi/cs/report94-1/gaGPbib.ps.Z
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Indexed Bibliography of Genetic Programming compiled by  
Author: Jarmo T. Alander 
Address: P.O. Box 700, FIN-65101 Vaasa, Finland  
Affiliation: Department of Information Technology and Production Economics University of Vaasa  
Pubnum: Report Series No. 94-1-GP  
Email: e-mail: Jarmo.Alander@uwasa.fi  
Phone: phone: +358-6-324 8444 fax: +358-6-324 8467  
Web: www: http://www.uwasa.fi/~ jal  
Abstract: DRAFT March 16, 1998 available via anonymous ftp: site ftp.uwasa.fi directory cs/report94-1 file gaGPbib.ps.Z 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> John H. Holland. </author> <title> Genetic algorithms. </title> <journal> Scientific American, </journal> <volume> 267(1) </volume> <pages> 44-50, </pages> <year> 1992. </year> <month> ga:Holland92a. </month>
Reference: [2] <author> Jarmo T. Alander. </author> <title> An indexed bibliography of genetic algorithms: </title> <type> Years 1957-1993. </type> <institution> Art of CAD Ltd., Vaasa (Finland), </institution> <year> 1994. </year> <title> (over 3000 GA references). </title>
Reference: [3] <author> David E. Goldberg, Kelsey Milman, and Christina Tidd. </author> <title> Genetic algorithms: A bibliography. </title> <type> IlliGAL Report 92008, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1992. </year> <month> ga:Goldberg92f. </month>
Reference: [4] <author> N. Saravanan and David B. Fogel. </author> <title> A bibliography of evolutionary computation & applications. </title> <type> Technical Report FAU-ME-93-100, </type> <institution> Florida Atlantic University, Department of Mechanical Engineering, </institution> <year> 1993. </year> <note> (available via anonymous ftp site magenta.me.fau.edu directory /pub/ep-list/bib file EC-ref.ps.Z) ga:Fogel93c. </note>
Reference: [5] <author> Thomas Back. </author> <title> Genetic algorithms, evolutionary programming, and evolutionary strategies bibliographic database entries. </title> <type> (personal communication) ga:Back93bib, </type> <year> 1993. </year>
Reference: [6] <editor> Thomas Back, Frank Hoffmeister, and Hans-Paul Schwefel. </editor> <title> Applications of evolutionary algorithms. </title> <type> Technical Report SYS-2/92, </type> <institution> University of Dortmund, Department of Computer Science, </institution> <year> 1992. </year> <month> ga:Schwefel92d. </month>
Reference: [7] <author> Leslie Lamport. </author> <title> L A T E X: A Document Preparation System. User's Guide and Reference manual. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, 2 edition, </address> <year> 1994. </year>
Reference: [8] <author> Alfred V. Aho, Brian W. Kernighan, and Peter J. Weinberger. </author> <title> The AWK Programming Language. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, </address> <year> 1988. </year>
Reference: [9] <author> John R. Koza. </author> <title> Recognizing patterns in protein sequences using iteration-performing calculations in genetic programming. </title> <booktitle> In ICEC'94 [550], </booktitle> <pages> pages 244-249. </pages> <month> ga94aKoza. </month>
Reference-contexts: language, [297, 416] machine learning, [311] maps, [81] modelling, [113] monitoring strategies, [83] natural language processing, [126] neural networks, [85, 98, 401] noise, [208] object-oriented, [271] parallel, [204, 220, 23, 300, 324, 30] parallel programs, [441] parsimony, [247] performance, [166] popular, [342] populations, [121] Prolog, [219] protein sequences, [100] proteins, <ref> [9] </ref> random numbers, [78] Read's linear codes, [436] regular language induction, [93] representation, [419] review, [161] robotics, [163, 286] robust, [457] selection, [132] signal processing, [141, 282] simulated annealing, [535, 136] sorting, [513, 179] stack based, [120, 389] system identification, [94, 148, 165, 251, 353] time series, [154] transputers, [300] typing, <p> 532, 114, 183] protein sequences, [11] pattern recognition?, [115, 160] physiology, [282] planning, [503, 504, 168] movements, [198] popular genetic programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, <ref> [502, 9] </ref> genetic programming, [100] protein sequences, [9, 11] proteins, [290] amino acids, [171] classification, [20] interaction, [326] transmembrane domain, [11] pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, <p> recognition?, [115, 160] physiology, [282] planning, [503, 504, 168] movements, [198] popular genetic programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, [502, 9] genetic programming, [100] protein sequences, <ref> [9, 11] </ref> proteins, [290] amino acids, [171] classification, [20] interaction, [326] transmembrane domain, [11] pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, [93] remote sensing, [268] arctic ice, [235,
Reference: [10] <author> John R. Koza. </author> <title> Genetic programming as a means for programming computers by natural selection. </title> <journal> Statistics and Computing, </journal> <volume> 4(2) </volume> <pages> 87-112, </pages> <month> June </month> <year> 1994. </year> <note> y(CCA 55502) ga94dKoza. </note>
Reference: [11] <author> John R. Koza. </author> <title> Automated discovery of detectors and iteration-performing calculations to recognize patterns in protein sequences using genetic programming. </title> <booktitle> In Proceedings of the 1994 IEEE Computer Society Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 684-689, </pages> <address> Seattle, WA, 21.-23. June 1994. </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. ga94eKoza. </address>
Reference-contexts: optics lasers, [518] optimization, [507] global, [452] Paragen, [343] Paragen II, [472] parallel GA, [525, 220, 228] parallel GP, [277, 300, 300, 30, 369, 373, 402, 433] parallel processing communication, [335] patent, [42, 46, 48, 49, 58, 65, 66, 69, 70] pattern recognition, [489, 72, 532, 114, 183] protein sequences, <ref> [11] </ref> pattern recognition?, [115, 160] physiology, [282] planning, [503, 504, 168] movements, [198] popular genetic programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, [502, 9] genetic programming, [100] protein <p> recognition?, [115, 160] physiology, [282] planning, [503, 504, 168] movements, [198] popular genetic programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, [502, 9] genetic programming, [100] protein sequences, <ref> [9, 11] </ref> proteins, [290] amino acids, [171] classification, [20] interaction, [326] transmembrane domain, [11] pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, [93] remote sensing, [268] arctic ice, [235, <p> programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, [502, 9] genetic programming, [100] protein sequences, [9, 11] proteins, [290] amino acids, [171] classification, [20] interaction, [326] transmembrane domain, <ref> [11] </ref> pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, [93] remote sensing, [268] arctic ice, [235, 368] representation genetic programming, [123] review GP, [24] robot autonomous, [108] robot programming,
Reference: [12] <author> John R. Koza. </author> <title> Scalable learning in genetic programming using automatic function definition. </title> <note> In Sebald and Fogel [553], page ? y(conf.prog) ga94fKoza. </note>
Reference: [13] <author> John R. Koza. </author> <title> Genetic Programming II, Automatic Discovery of Reusable Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, 1994. y(Koza) ga94gKoza. </address>
Reference-contexts: tuning schedules, [136] simulation, [67, 68, 185] SISAL, [254] software cost estimation, [512] software reuse, [75] sorting, [513, 514] spectroscopy NMR, [409] sport, [122] STROGANOFF, [251] system estimation?, [315] system identification, [74, 109, 338, 386] genetic programming, [94, 148] industrial process, [371] systems identification, [367] systems modeling, [454] text book, <ref> [13] </ref> theorem proving, [372] theory, [134] provable programs, [441] time series, [442] chaotic, [318] genetic programming, [154] sunspots, [304] time series prediction, [137] time-series power, [393] tracking moving target, [404] trading, [324] traffic control, [206, 213] traffic lights, [317] Turing completeness genetic programming, [134] tutorial, [25, 31] variation, [143] vehicle dispatch,
Reference: [14] <editor> John R. Koza. </editor> <booktitle> Advances in genetic programming. </booktitle> <editor> In Kinnear, Jr. </editor> <booktitle> [79], chapter 2. Introduction to genetic programming, </booktitle> <pages> pages 21-42. </pages> <address> y(cessu) ga94hKoza. </address>
Reference-contexts: introduction, <ref> [14] </ref> L-systems, [101] learning, [15] locality, [91] logic programming, [110, 209] machine code, [116] machine language, [297, 416] machine learning, [311] maps, [81] modelling, [113] monitoring strategies, [83] natural language processing, [126] neural networks, [85, 98, 401] noise, [208] object-oriented, [271] parallel, [204, 220, 23, 300, 324, 30] parallel programs, [441]
Reference: [15] <editor> John R. Koza. </editor> <booktitle> Advances in genetic programming. </booktitle> <editor> In Kinnear, Jr. </editor> <booktitle> [79], chapter 5. Scalable learning in genetic programming using automatic function definition, </booktitle> <pages> pages 99-117. </pages> <address> y(cessu) ga94iKoza. </address>
Reference-contexts: introduction, [14] L-systems, [101] learning, <ref> [15] </ref> locality, [91] logic programming, [110, 209] machine code, [116] machine language, [297, 416] machine learning, [311] maps, [81] modelling, [113] monitoring strategies, [83] natural language processing, [126] neural networks, [85, 98, 401] noise, [208] object-oriented, [271] parallel, [204, 220, 23, 300, 324, 30] parallel programs, [441] parsimony, [247] performance, [166] <p> [376] crossover, [253, 255] GP, [346] L-System, [101] L-systems, [303] languages context free, [147] layout facility, [284] learning multiplexer, [55] linguistics decision trees, [156] Subject index 21 linquistics word classifier, [184] logic deduction, [462] machine learning, [490, 477, 71, 138, 205, 257, 259, 265, 272, 358, machine learning genetic programming, <ref> [15] </ref> hierarchical, [464] multi-agent, [417] training, [96] majority classification, [26] mapmaking, [81] mathematics algebra, [380] fitting, [180] MAX problem, [425] medical imaging tumors, [287] medicine cardiology, [135] metallurgy, [407] mobile robotics?, [389] mobile robots, [505, 163] modeling, [413] ecosystems, [200] MPI, [402] music composing, [439] mutation GP, [266] tree, [391] natural
Reference: [16] <editor> John R. Koza. </editor> <booktitle> Genetic programming ii video, </booktitle> <year> 1994. </year> <note> (a video tape) y(Koza) ga94jKoza. </note>
Reference-contexts: [372] theory, [134] provable programs, [441] time series, [442] chaotic, [318] genetic programming, [154] sunspots, [304] time series prediction, [137] time-series power, [393] tracking moving target, [404] trading, [324] traffic control, [206, 213] traffic lights, [317] Turing completeness genetic programming, [134] tutorial, [25, 31] variation, [143] vehicle dispatch, [388] video, <ref> [16] </ref> video tape, [56] virtual reality genetic programming, [90] VLSI design, [88] Winston's arch problem, [209] ZOO, [530] Annual index 23 4.8 Annual index The following table gives references to the contributions by the year of publishing. 1958, [491] 1981, [489] 1986, [490, 506] 1989, [37] 48, 49] 54, 55, 56,
Reference: [17] <author> John R. Koza. </author> <title> Architecture-altering operations for evolving the architecture of a multipart program in genetic programming. </title> <type> Technical Report STAN-CS-94-1528, </type> <institution> Stanford University, Department of Computer Science, </institution> <year> 1994. </year> <note> y(Langdon/bib) ga94kKoza. </note>
Reference: [18] <author> John R. Koza. </author> <title> Evolution of subsumption architecture that perform a wall following task for an autonomous mobile robot via genetic programming. </title> <editor> In Thomas Pesche, editor, </editor> <booktitle> Computational Learning Theory and Natural Learning Systems, </booktitle> <volume> volume 2, </volume> <pages> pages 321-346. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, 1994. y(Langdon/bib) ga94lKoza. </address>
Reference: [19] <author> John R. Koza. </author> <title> Spontaneous emergence of self-replicating and evolutionarily self-improving computer programs. </title> <editor> In Langton et al. </editor> <volume> [543], </volume> <pages> pages 225-262. </pages> <note> y(Langdon/bib) ga94mKoza. 25 26 Genetic programming </note>
Reference: [20] <author> John R. Koza. </author> <title> Evolution of a computer program for classifying protein segments as transmembrane domains using genetic programming. </title> <editor> In Russ Altman, Douglas Brutlag, Peter Karp, Richard Lathrop, and David Searls, editors, </editor> <booktitle> Proceedings of the Second International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> pages 244-252, </pages> ?, ? <address> 1994. </address> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA. y(toc) ga94nKoza. </address>
Reference-contexts: 168] movements, [198] popular genetic programming, [399] GP, [342] population 500; 1000, [344] genetic programming, [121] sub-, [459] prediction, [131] prisoner's dilemma, [488] problem solving, [42, 49, 70] program space, [487] programming, [343] protein folding, [502, 9] genetic programming, [100] protein sequences, [9, 11] proteins, [290] amino acids, [171] classification, <ref> [20] </ref> interaction, [326] transmembrane domain, [11] pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, [93] remote sensing, [268] arctic ice, [235, 368] representation genetic programming, [123] review GP, [24]
Reference: [21] <author> John R. Koza. </author> <title> Evolving the architecture of a multi-part program in genetic programming. </title> <editor> In McDonnell et al. </editor> <month> [556], </month> <note> page ? y(conf.prog) ga95aKoza. </note>
Reference: [22] <author> John R. Koza. </author> <title> Two ways of discovering the size and shape of a computer program to solve a problem. </title> <note> In Eshelman [557], page ? y(prog) ga95bKoza. </note>
Reference: [23] <author> John R. Koza and David Andre. </author> <title> Parallel genetic programming on a network of transputer. </title> <type> Report STAN-CS-TR-95-1542, </type> <institution> Stanford University, Computer Science Department, </institution> <year> 1995. </year> <note> y(News) ga95cKoza. </note>
Reference-contexts: introduction, [14] L-systems, [101] learning, [15] locality, [91] logic programming, [110, 209] machine code, [116] machine language, [297, 416] machine learning, [311] maps, [81] modelling, [113] monitoring strategies, [83] natural language processing, [126] neural networks, [85, 98, 401] noise, [208] object-oriented, [271] parallel, <ref> [204, 220, 23, 300, 324, 30] </ref> parallel programs, [441] parsimony, [247] performance, [166] popular, [342] populations, [121] Prolog, [219] protein sequences, [100] proteins, [9] random numbers, [78] Read's linear codes, [436] regular language induction, [93] representation, [419] review, [161] robotics, [163, 286] robust, [457] selection, [132] signal processing, [141, 282] simulated <p> [438] feature extraction, [446] feature-extraction, [268] features, [235] image analysis, [473] magnetic resonance, [135] medical, [364] object detection, [455] radar, [235] segmentation, [377] image prosessing segmentation, [364] images processing, [84] implementation C++, [103, 128, Connection Machine, [525] FORTRAN, [491, 492] hardware, [420] Occam, [300] PVM, [220, 472] supercomputer, [351] transputers, <ref> [23, 30] </ref> induction context-free languages, [139] introns, [376] crossover, [253, 255] GP, [346] L-System, [101] L-systems, [303] languages context free, [147] layout facility, [284] learning multiplexer, [55] linguistics decision trees, [156] Subject index 21 linquistics word classifier, [184] logic deduction, [462] machine learning, [490, 477, 71, 138, 205, 257, 259, 265,
Reference: [24] <editor> John R. Koza. </editor> <booktitle> Survey of genetic algorithms and genetic programming. In Proceedings of the Wescon 95 Conference Record: </booktitle> <editor> Microelectronics, </editor> <title> Communications Technology, Producing Quality Products, Mobile and Portable Power, </title> <booktitle> Emerging Technologies, </booktitle> <address> volume ?, page ?, San Francisco, CA, 7.-9. </address> <month> November </month> <year> 1995. </year> <booktitle> IEEE, </booktitle> <address> New York, NY. y(P69309) ga95dKoza. </address>
Reference-contexts: [20] interaction, [326] transmembrane domain, [11] pursuer/evader problem, [429] PVM, [220] random number generation, [102] random number generators, [52, 78] reasoning proofs, [432] redundancy GP, [86] regression symbolic, [210, 269, 384, 385] regular languages genetic programming, [93] remote sensing, [268] arctic ice, [235, 368] representation genetic programming, [123] review GP, <ref> [24] </ref> robot autonomous, [108] robot programming, [60] robotics, [503, 504, 95, 97, 149, 231, 328, 385, 387] autonomous, [124] inverse kinematics, [302] mobile, [505, 18, 257, 259, 260, 286, 323, 358, 395, 417, programming, [301] robotics?, [198] robots control, [320] juggling, [133] mobile, [501] routing, [443] rule based systems, [273] rules,
Reference: [25] <editor> Russ B. Altman and John R. Koza. </editor> <booktitle> A programming course in bioinformatics for computer and information science students. In ?, editor, Proceedings of the Pacific Symposium on Biocomputing (PSB'96), </booktitle> <institution> page ?, Hawaii, 3.-6. </institution> <month> January </month> <year> 1996. </year> ? <note> y(conf. prog.) ga96aAltman. </note>
Reference-contexts: systems modeling, [454] text book, [13] theorem proving, [372] theory, [134] provable programs, [441] time series, [442] chaotic, [318] genetic programming, [154] sunspots, [304] time series prediction, [137] time-series power, [393] tracking moving target, [404] trading, [324] traffic control, [206, 213] traffic lights, [317] Turing completeness genetic programming, [134] tutorial, <ref> [25, 31] </ref> variation, [143] vehicle dispatch, [388] video, [16] video tape, [56] virtual reality genetic programming, [90] VLSI design, [88] Winston's arch problem, [209] ZOO, [530] Annual index 23 4.8 Annual index The following table gives references to the contributions by the year of publishing. 1958, [491] 1981, [489] 1986, [490,
Reference: [26] <author> David Andre, Forrest H. Bennett III, and John R. Koza. </author> <title> Discovery by genetic programming of a cellular automata rule that is better than any known rule for the majority classification problem. </title> <editor> In Koza et al. </editor> <month> [566], </month> <note> page ? y(conf.prog) ga96aAndre. </note>
Reference-contexts: [303] languages context free, [147] layout facility, [284] learning multiplexer, [55] linguistics decision trees, [156] Subject index 21 linquistics word classifier, [184] logic deduction, [462] machine learning, [490, 477, 71, 138, 205, 257, 259, 265, 272, 358, machine learning genetic programming, [15] hierarchical, [464] multi-agent, [417] training, [96] majority classification, <ref> [26] </ref> mapmaking, [81] mathematics algebra, [380] fitting, [180] MAX problem, [425] medical imaging tumors, [287] medicine cardiology, [135] metallurgy, [407] mobile robotics?, [389] mobile robots, [505, 163] modeling, [413] ecosystems, [200] MPI, [402] music composing, [439] mutation GP, [266] tree, [391] natural language processing, [219, 456] neural networks, [493, 494, 517,
Reference: [27] <author> John R. Koza, Forrest H. Bennett III, David Andre, and Martin A. Keane. </author> <title> Automated WYSIWYG design of both the topology and component values of electrical circuits using genetic programming. </title> <editor> In Koza et al. </editor> <month> [566], </month> <note> page ? y(conf.prog) ga96aKoza. </note>
Reference: [28] <author> Forest H. Bennett III, John R. Koza, David Andre, and Martin A. Keane. </author> <title> Evolution of a 60 decibel op amp using genetic programming. </title> <booktitle> In Proceedings of the First International Conference Evolvable Systems: From Biology to Hardware, </booktitle> <pages> pages 455-469, </pages> <address> Tsukuba, Japan, 7.-8. October 1996. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin (Germany). y(EEA82520/97) ga96bBennett. </address>
Reference: [29] <author> John R. Koza, David Andre, Forrest H. Bennett III, and Martin A. Keane. </author> <title> Use of automatically defined functions and architecture-altering operations in automated circuit synthesis using genetic programming. </title> <editor> In Koza et al. </editor> <month> [566], </month> <note> page ? y(conf.prog) ga96bKoza. </note>
Reference: [30] <author> David Andre and John R. Koza. </author> <title> A parallel implementation of genetic programming using the transputer architecture that achieves super-linear performance. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA'96), </booktitle> <address> page ?, Sunnyvale, CA, 9.-11. </address> <month> August </month> <year> 1996. </year> ? <note> y(prog) ga96cAndre. </note>
Reference-contexts: introduction, [14] L-systems, [101] learning, [15] locality, [91] logic programming, [110, 209] machine code, [116] machine language, [297, 416] machine learning, [311] maps, [81] modelling, [113] monitoring strategies, [83] natural language processing, [126] neural networks, [85, 98, 401] noise, [208] object-oriented, [271] parallel, <ref> [204, 220, 23, 300, 324, 30] </ref> parallel programs, [441] parsimony, [247] performance, [166] popular, [342] populations, [121] Prolog, [219] protein sequences, [100] proteins, [9] random numbers, [78] Read's linear codes, [436] regular language induction, [93] representation, [419] review, [161] robotics, [163, 286] robust, [457] selection, [132] signal processing, [141, 282] simulated <p> [438] feature extraction, [446] feature-extraction, [268] features, [235] image analysis, [473] magnetic resonance, [135] medical, [364] object detection, [455] radar, [235] segmentation, [377] image prosessing segmentation, [364] images processing, [84] implementation C++, [103, 128, Connection Machine, [525] FORTRAN, [491, 492] hardware, [420] Occam, [300] PVM, [220, 472] supercomputer, [351] transputers, <ref> [23, 30] </ref> induction context-free languages, [139] introns, [376] crossover, [253, 255] GP, [346] L-System, [101] L-systems, [303] languages context free, [147] layout facility, [284] learning multiplexer, [55] linguistics decision trees, [156] Subject index 21 linquistics word classifier, [184] logic deduction, [462] machine learning, [490, 477, 71, 138, 205, 257, 259, 265, <p> [439] mutation GP, [266] tree, [391] natural language processing, [219, 456] neural networks, [493, 494, 517, 534, 149] coding, [288] design, [508] learning, [444] structure, [57] OCR, [141] operators crossover, [461] optics lasers, [518] optimization, [507] global, [452] Paragen, [343] Paragen II, [472] parallel GA, [525, 220, 228] parallel GP, <ref> [277, 300, 300, 30, 369, 373, 402, 433] </ref> parallel processing communication, [335] patent, [42, 46, 48, 49, 58, 65, 66, 69, 70] pattern recognition, [489, 72, 532, 114, 183] protein sequences, [11] pattern recognition?, [115, 160] physiology, [282] planning, [503, 504, 168] movements, [198] popular genetic programming, [399] GP, [342] population
Reference: [31] <author> John R. Koza and David Andre. </author> <title> A case study where biology inspired a solution to a computer science problem. </title> <editor> In ?, editor, </editor> <booktitle> Proceedings of the Pacific Symposium on Biocomputing (PSB'96), </booktitle> <institution> page ?, Hawaii, 3.-6. </institution> <month> January </month> <year> 1996. </year> ? <note> y(conf. prog.) ga96cKoza. </note>
Reference-contexts: systems modeling, [454] text book, [13] theorem proving, [372] theory, [134] provable programs, [441] time series, [442] chaotic, [318] genetic programming, [154] sunspots, [304] time series prediction, [137] time-series power, [393] tracking moving target, [404] trading, [324] traffic control, [206, 213] traffic lights, [317] Turing completeness genetic programming, [134] tutorial, <ref> [25, 31] </ref> variation, [143] vehicle dispatch, [388] video, [16] video tape, [56] virtual reality genetic programming, [90] VLSI design, [88] Winston's arch problem, [209] ZOO, [530] Annual index 23 4.8 Annual index The following table gives references to the contributions by the year of publishing. 1958, [491] 1981, [489] 1986, [490,
Reference: [32] <author> John R. Koza, Forrest H. Bennett III, David Andre, and Martin A. Keane. </author> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> In Proceedings of the 1996 IEEE International Conference on Evolutionary Computation, </booktitle> <address> page ?, Nagoya, Japan, 20.- 22. </address> <month> May </month> <year> 1996. </year> <booktitle> IEEE, </booktitle> <address> Piscataway, NJ. ga96dKoza. </address>
Reference: [33] <author> John R. Koza, Forest H. Bennett III, Martin A. Keane, and David Andre. </author> <title> Evolution of a time-optimal fly-to controller circuit using genetic programming. </title> <editor> In Koza et al. </editor> <month> [567], </month> <note> page ? y(conf.prog) ga97aKoza. </note>
Reference: [34] <author> John R. Koza, Forest H. Bennett III, Jason Lohn, Frank Dunlap, Martin A. Keane, and David Andre. </author> <title> Use of architecture-altering operations to dynamically adapt a three-way analog source identification circuit to accommodate a new source. </title> <editor> In Koza et al. </editor> <month> [567], </month> <note> page ? y(conf.prog) ga97bKoza. </note>
Reference: [35] <author> John R. Koza and Forest H. Bennett III. </author> <title> Automated synthesis of computational circuits using genetic programming. </title> <booktitle> In Proceedings of 1997 International Conference on Evolutionary Computation, </booktitle> <pages> pages 447-452, </pages> <address> Indianapolis, IN, 13.-16. April 1997. </address> <publisher> IEEE, </publisher> <address> New York, NY. y(CCA52033/97) ga97cKoza. </address>
Reference: [36] <author> John R. Koza, David Andre, Forest H. Bennett III, and Martin A. Keane. </author> <title> Design of a high-gain operational amplifier and other circuits by means of genetic programming. </title> <booktitle> In Proceedings of the 6th International Conference, </booktitle> <pages> pages 125-135, </pages> <address> Indianapolis, IN, 13.-16. April 1997. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin (Germany). y(CCA77484/97) ga97dKoza. Bibliography 27 </address>
Reference: [37] <author> John R. Koza. </author> <title> Hierarchical genetic algorithms operating on populations of computer programs. </title> <editor> In N. S. Sridharan, editor, </editor> <booktitle> Eleventh International Joint Conference on Artificial Intelligence (IJCAI-89), </booktitle> <pages> pages 768-774, </pages> <address> Detroit, MI, 20.-25. August 1989. </address> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA. ga:Koza89a. </address>
Reference-contexts: [143] vehicle dispatch, [388] video, [16] video tape, [56] virtual reality genetic programming, [90] VLSI design, [88] Winston's arch problem, [209] ZOO, [530] Annual index 23 4.8 Annual index The following table gives references to the contributions by the year of publishing. 1958, [491] 1981, [489] 1986, [490, 506] 1989, <ref> [37] </ref> 48, 49] 54, 55, 56, 57, 58, 525, 530, 536, 537] 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 519, 520, 522, 1993, [476, 477, 478, 479, 480, 481, 482, 484, 514, 71, 72, 73, 74, 75, 515, 516, 517, 518, 521, 523, 528, 1994, [79,
Reference: [38] <author> John R. Koza and Martin A. Keane. </author> <title> Cart centering and broom balancing by genetically breeding populations of control strategy programs. </title> <editor> In Maureen Caudill, editor, </editor> <booktitle> Proceedings of the International Conference on Neural Networks (IJCANN-90-WASH-DC), </booktitle> <volume> volume 1, </volume> <pages> pages 198-201, </pages> <address> Washington, DC, 15.-19. Jan. 1990. </address> <publisher> Lawrence Erlbaum Associates. ga:Koza90a. </publisher>
Reference: [39] <author> John R. Koza. </author> <title> Genetic programming: A paradigm for genetically breeding populations of computer programs to solve problems. </title> <type> Technical Report STAN-CS-90-1314, </type> <institution> Stanford University, Computer Science Department, </institution> <month> June </month> <year> 1990. </year> <month> ga:Koza90b. </month>
Reference: [40] <author> John R. Koza. </author> <title> Concept formation and decision tree induction using the genetic programming paradigm. </title> <editor> In Hans-Paul Schwefel and R. Manner, editors, </editor> <title> Parallel Problem Solving from Nature, </title> <booktitle> volume 496 of Lecture Notes in Computer Science, </booktitle> <pages> pages 124-128, </pages> <address> Dortmund (Germany), 1.-3. October 1991. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin. ga:Koza90c. </address>
Reference: [41] <author> John R. Koza. </author> <title> Evolution and coevolution of computer programs to control independently-acting agents. </title> <editor> In Jean-Arcady Meyer and Stewart W. Wilson, editors, </editor> <booktitle> Proceedings of the First International Conference on Simulation of Adaptive Behavior: From animals to animats, </booktitle> <pages> pages 366-375, </pages> <address> Paris, 24.-28. </address> <month> September </month> <year> 1990. </year>
References-found: 41

