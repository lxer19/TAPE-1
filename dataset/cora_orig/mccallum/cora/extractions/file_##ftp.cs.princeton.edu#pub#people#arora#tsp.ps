URL: file://ftp.cs.princeton.edu/pub/people/arora/tsp.ps
Refering-URL: http://theory.lcs.mit.edu/~rajiyer/Penn/reading_list.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Polynomial Time Approximation Schemes for Euclidean Traveling Salesman and other Geometric Problems  
Author: Sanjeev Arora 
Note: norms). They also have simple parallel (i.e., NC) implementations.  
Affiliation: Princeton University  
Abstract: We present a polynomial time approximation scheme for Euclidean TSP in fixed dimensions. For every fixed c &gt; 1 and given any n nodes in &lt; 2 , a randomized version of the scheme finds a (1 + 1=c)-approximation to the optimum traveling salesman tour in O(n(log n) O(c) ) time. When the nodes are in &lt; d , the running time increases to O(n(log n) (O( ). For every fixed c; d the running time is n poly(log n), i.e., nearly linear in n. The algorithm can be derandomized, but this increases the running time by a factor O(n d ). The previous best approximation algorithm for the problem (due to Christofides) achieves a 3=2-approximation in polynomial time. We also give similar approximation schemes for some other NP-hard Eu-clidean problems: Minimum Steiner Tree, k-TSP, and k-MST. (The running times of the algorithm for k-TSP and k-MST involve an additional multiplicative factor k.) The previous best approximation algorithms for all these problems achieved a constant-factor approximation. We also give efficient approximation schemes for Euclidean Min-Cost Matching, a problem that can be solved exactly in polynomial time. All our algorithms also work, with almost no modification, when distance is measured using any geometric norm (such as ` p for p 1 or other Minkowski p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Agarwal, H. Edelsbrunner, O. Schwarzkopf and E. Welzl. </author> <title> Euclidean MST and bichromatic closest pairs. </title> <journal> Discrete and Comp. Geo. </journal> <volume> 6 </volume> <pages> 407-422, </pages> <year> 1991. </year>
Reference-contexts: Exploiting geometric structure for these problems is known to lead to faster algorithms than the corresponding algorithms for general graphs. The best MST algorithm requires ~ O (2 d n 4=3 ) time in &lt; d for d &gt; 2 <ref> [1] </ref>. Note that treating the instance as a weighted graph with n edges would lead to (n 2 ) running time.
Reference: [2] <author> D. Applegate, R. Bixby, V. Chvatal, and W. Cook. </author> <title> Finding cuts in the TSP (A preliminary report). </title> <type> Report 95-05, </type> <institution> DIMACS, Rutgers University, NJ. </institution>
Reference: [3] <author> S. Arora. </author> <title> Polynomial-time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> Proceedings of 37th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp 2-12, </pages> <year> 1996. </year> <note> Preliminary manuscript (with "quasipolynomial" in the title), January 20, </note> <year> 1996. </year>
Reference-contexts: Note however that none of the known heuristics is believed to be a PTAS 1 . History. The current paper evolved out of preliminary results obtained in Jan-uary 1996, culminating in a submission to IEEE FOCS 1996 in April 1996 <ref> [3] </ref>. A few weeks later, Mitchell [48] independently discovered an n O (c) time approximation scheme for points in &lt; 2 . His algorithm useds ideas from his earlier constant-factor approximation algorithm for k-MST [47].
Reference: [4] <author> S. Arora, M. Grigni, D. Karger, P. Klein, and A. Woloszyn. </author> <title> A polynomial-time approximation scheme for weighted planar graph TSP. </title> <booktitle> Proc. 9th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp 33-41, </pages> <year> 1998. </year>
Reference-contexts: Two major open problems now remain in connection with TSP: (i) Design an approximation algorithm better than Christofides' for general metric spaces. Note that the results of [5] mentioned in the introduction seem to preclude a PTAS for general metrics. Recently Arora, Grigni, Karger, Klein and Woloszyn <ref> [4] </ref> extended our ideas and those of [29] to design a PTAS for any metric that is the shortest-path metric of a weighted planar graph (the paper [29] designed such PTASs for unweighted planar graphs). (ii) Design a more efficient version of our algorithm.
Reference: [5] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and intractability of approximation problems. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp 13-22, </pages> <year> 1992. </year>
Reference-contexts: PTAS's are known for very few problems; two important ones are Subset-Sum (Ibarra and Kim [31]) and Bin-Packing (Fernandez de la Vega and Lueker [17]; see also Karmarkar and Karp [36]). Recently Arora, Lund, Motwani, Sudan, and Szegedy <ref> [5] </ref> showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS. <p> Hence the overall running time is O (n (log n) O (c) ). The proof of the Structure Theorem for EMCPM mimics the one for the TSP. 4 Conclusions Our original goal was to extend the inapproximability results in <ref> [5] </ref> to Euclidean TSP. Doing this seemed to call for a reduction that produces instances in which every near-optimal tour encodes the complicated code-like objects of [5]. Then we realized (upon discovering an early version of Theorem 2) that such an encoding may be impossible. <p> of the Structure Theorem for EMCPM mimics the one for the TSP. 4 Conclusions Our original goal was to extend the inapproximability results in <ref> [5] </ref> to Euclidean TSP. Doing this seemed to call for a reduction that produces instances in which every near-optimal tour encodes the complicated code-like objects of [5]. Then we realized (upon discovering an early version of Theorem 2) that such an encoding may be impossible. This realization led to an approximation algorithm in a natural way. <p> Note furthermore that recent extensions of our techniques use only the charging argument and not the Patching Lemma. Two major open problems now remain in connection with TSP: (i) Design an approximation algorithm better than Christofides' for general metric spaces. Note that the results of <ref> [5] </ref> mentioned in the introduction seem to preclude a PTAS for general metrics.
Reference: [6] <author> S. Arora, P. Raghavan, and S. Rao. </author> <title> Approximation schemes for the Euclidean k-medians and related problems. </title> <booktitle> In In Proc. 30th ACM Symposium on Theory of Computing, </booktitle> <pages> pp 106-113, </pages> <year> 1998. </year>
Reference-contexts: Finally, it would be interesting to extend our techniques to other Euclidean problems. Asano, Katoh, Tamaki, and Tokuyama [8] have designed approximation schemes for Vehicle Routing problems with certain restrictions on the number of vehicles; they use our Structure Theorem. Arora, Raghavan, and Rao <ref> [6] </ref> have extended our techniques to design approximation schemes for Euclidean k-median and facility location. The Patching Lemma does not hold for these problems, and they use only (a modification of) the charging argument.
Reference: [7] <author> S. Arora and S. Safra. </author> <title> Probabilistic Checking of Proofs: A new characterization of NP. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp 2-12, </pages> <year> 1992. </year>
Reference-contexts: Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [52]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy [21], Arora and Safra <ref> [7] </ref>), and the connection between PCPs and hardness of approximation [21]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS.
Reference: [8] <author> T. Asano, N. Katoh, H. Tamaki and T. Tokuyama. </author> <title> Covering Points in the Plane by k-Tours: Towards a Polynomial Time Approximation Scheme for General k. </title> <booktitle> In Proc. 29th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp 275-283, </pages> <year> 1997. </year>
Reference-contexts: Finally, it would be interesting to extend our techniques to other Euclidean problems. Asano, Katoh, Tamaki, and Tokuyama <ref> [8] </ref> have designed approximation schemes for Vehicle Routing problems with certain restrictions on the number of vehicles; they use our Structure Theorem. Arora, Raghavan, and Rao [6] have extended our techniques to design approximation schemes for Euclidean k-median and facility location.
Reference: [9] <author> J. Beardwood, J. H. Halton, and J. M. </author> <title> Hammersley. The shortest path through many points. </title> <journal> Proc. Cambridge Philos. Soc. </journal> <volume> 55 </volume> <pages> 299-327, </pages> <year> 1959. </year>
Reference-contexts: This multiplies the running time by L 2 = O (n 2 ). 2.2 Proof of the Structure Theorem In this section we prove Theorem 2. Lemmas 3 and 4 will be important ingredients of the proof. 10 Lemma 3 is implicit in prior work on Euclidean TSP <ref> [9, 38] </ref>, and can safely be called a "folk theorem." However, we have never seen it stated precisely as it is stated here. When we later use this lemma, the "closed path" of the hypothesis will be a salesman path on some set of nodes.
Reference: [10] <author> J. Bentley. </author> <title> Fast algorithms for geometric traveling salesman problem. </title> <journal> ORSA J. on Computing, </journal> <volume> 4 </volume> <pages> 387-411, </pages> <year> 1992. </year>
Reference-contexts: We note that classical local-exchange heuristics such as K-OPT or Lin-Kernighan [44] are already known to compute very good tours on "real-life" TSP instances <ref> [33, 10] </ref>. However, the performance of known heuristics for problems such as Steiner Tree or k-TSP is not as good.
Reference: [11] <author> M. Bern and D. Eppstein. </author> <title> Approximation algorithms for geometric problems. </title> <booktitle> In [30]. </booktitle>
Reference-contexts: Now we define the geometric problems for which we will design approximation schemes. Except for Euclidean Matching, all are NP-hard. Prior to our work, the best approximation algorithms for the NP-hard problems achieved a constant factor approximation in polynomial time (see the survey by Bern and Eppstein <ref> [11] </ref>). These algorithms used problem-specific ideas and usually require at least (n 2 ) time (sometimes a lot more). In contrast, our approximation schemes for the different problems rely on essentially the same idea.
Reference: [12] <author> M. Bern, D. Eppstein, and S.-H.Teng. </author> <title> Parallel construction of quadtree and quality triangulations. </title> <booktitle> In Proc. 3rd WADS, </booktitle> <pages> pp 188-199. </pages> <publisher> Springer Verlag LNCS 709, </publisher> <year> 1993. </year> <month> 27 </month>
Reference-contexts: is O (log n), and the number of squares in it is T = O (number of leaves with a node fi depth) = O (n log n): The shifted quadtree can be constructed easily using a sorting-based algorithm in O (n log 2 n) time; faster algorithms also exist <ref> [12] </ref>. step 3: dynamic programming Next we use dynamic programming to find the optimal (m; r)-light salesman path with respect to the shifted quadtree computed in Step 2, where m = O (c log n) and r = O (c). <p> Now suppose A &lt; L=n 2 . We pick random shifts as before 20 and construct a shifted quadtree (this can be done in O (n log n) time <ref> [12] </ref>).
Reference: [13] <author> M. Bern and P. Plassmann. </author> <title> The Steiner problem with edge lengths 1 and 2. </title> <journal> Information Processing Letters, </journal> <volume> 32 </volume> <pages> 171-176, </pages> <year> 1989. </year>
Reference-contexts: A spate of research activity in recent years (starting with the work of Zelikovsky [63]) has provided better algorithms, with an approximation ratio around 1:143 [64]. The metric case is MAX-SNP-hard <ref> [13] </ref>. k-TSP: Given n nodes in &lt; d and an integer k &gt; 1, find the shortest tour that visits at least k nodes.
Reference: [14] <author> A. Blum, P. Chalasani, and S. Vempala. </author> <title> A constant-factor approximation for the k-MST problem in the plane. </title> <booktitle> In Proc. 27th ACM Symposium on Theorem of Computing, </booktitle> <pages> pp 294-302, </pages> <year> 1995. </year>
Reference-contexts: An approximation algorithm due to Mata and Mitchell [45] achieves a constant factor approximation in &lt; 2 . k-MST: Given n nodes in &lt; d and an integer k 2, find k nodes with the shortest Minimum Spanning Tree. The problem is NP-hard [22]. Blum, Chalasani, and Vempala <ref> [14] </ref> gave the first O (1)-factor approximation algorithm for points in &lt; 2 and Mitchell [47] improved this factor to 2 p Euclidean Min-Cost Perfect Matching: (EMCPM) Given 2n points in &lt; 2 (or &lt; d in general), find the minimum cost set of nonadjacent edges that cover all vertices.
Reference: [15] <author> B. Chandra, H. Karloff, and C. Tovey. </author> <title> New results for the old K-OPT algorithm for the TSP. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp 150-159, </pages> <year> 1994. </year>
Reference-contexts: With an adversarially-chosen starting tour, 2-OPT may produce a tour whose cost is (log n= log log n) times the cost of the optimum tour, even when the n nodes lie in &lt; 2 <ref> [15] </ref>. K-OPT can in the worst case produce tours whose cost is twice the optimum. In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [40]. This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [34].
Reference: [16] <author> N. Christofides. </author> <title> Worst-case analysis of a new heuristic for the traveling salesman problem. </title> <editor> In J.F. Traub, editor, </editor> <title> Symposium on new directions and recent results in algorithms and complexity, page 441. </title> <publisher> Academic Press, </publisher> <address> NY, </address> <year> 1976. </year>
Reference-contexts: Christofides <ref> [16] </ref> designed an approximation algorithm that runs in polynomial time and for every instance of metric TSP computes a tour of cost at most 3=2 times the optimum. Two decades of research failed to improve upon Christofides' algorithm for metric TSP.
Reference: [17] <author> W. Fernandez de la Vega and G. S. Lueker. </author> <title> Bin packing can be solved within 1+* in linear time. </title> <journal> Combinatorica, </journal> <volume> 1(4) </volume> <pages> 349-355, </pages> <year> 1981. </year>
Reference-contexts: The running time could depend upon c, but for each fixed c has to be polynomial in the input size. PTAS's are known for very few problems; two important ones are Subset-Sum (Ibarra and Kim [31]) and Bin-Packing (Fernandez de la Vega and Lueker <ref> [17] </ref>; see also Karmarkar and Karp [36]). Recently Arora, Lund, Motwani, Sudan, and Szegedy [5] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS.
Reference: [18] <author> D. Z. Du and F. K. Hwang. </author> <title> A proof of Gilbert-Pollak's conjecture on the Steiner ratio. </title> <journal> Algorithmica, </journal> <volume> 7: </volume> <pages> 121-135, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, the famous Gilbert-Pollak [25] conjecture said it can't be any further from the optimum; this conjecture was recently proved by Du and Hwang <ref> [18] </ref>. A spate of research activity in recent years (starting with the work of Zelikovsky [63]) has provided better algorithms, with an approximation ratio around 1:143 [64].
Reference: [19] <author> D. Eppstein. </author> <title> Faster geometric k-point MST approximation. </title> <note> To appear in CGTA. </note>
Reference: [20] <author> D. Eppstein and J. Erickson. </author> <title> Iterated nearest neighbors and finding minimal polytopes. </title> <journal> Discrete Comp. Geo., </journal> <volume> 11: </volume> <pages> 321-350, </pages> <year> 1994. </year>
Reference-contexts: Eppstein and Erickson <ref> [20] </ref> show how to approximate the size of this square within a factor 2 by computing for each of the n nodes its k nearest neighbors. This takes O (nk log n) time 5 .
Reference: [21] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp 2-12, </pages> <year> 1991. </year>
Reference-contexts: Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [52]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy <ref> [21] </ref>, Arora and Safra [7]), and the connection between PCPs and hardness of approximation [21]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS. <p> Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis [52]), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy <ref> [21] </ref>, Arora and Safra [7]), and the connection between PCPs and hardness of approximation [21]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS. For every fixed c &gt; 1, a randomized version of this algorithm computes a (1 + 1=c)-approximation to the optimal tour in O (n (log n) O (c) ) time.
Reference: [22] <author> M. Fischetti, H. W. Hamacher, K. Jornsten, and F. Maffioli. </author> <title> Weighted k-cardinality trees:complexity and polyhedral structure. </title> <booktitle> Networks 32 </booktitle> <pages> 11-21, </pages> <year> 1994. </year>
Reference-contexts: An approximation algorithm due to Mata and Mitchell [45] achieves a constant factor approximation in &lt; 2 . k-MST: Given n nodes in &lt; d and an integer k 2, find k nodes with the shortest Minimum Spanning Tree. The problem is NP-hard <ref> [22] </ref>.
Reference: [23] <author> M. R. Garey, R. L. Graham, and D. S. Johnson. </author> <title> Some NP-complete geometric problems. </title> <booktitle> In Proc. ACM Symposium on Theory of Computing, </booktitle> <pages> pp 10-22, </pages> <year> 1976. </year>
Reference-contexts: In Euclidean TSP the nodes lie in &lt; 2 (or more generally, in &lt; d for some d) and distance is defined using the ` 2 norm. Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadimitriou [49], Garey, Graham, and Johnson <ref> [23] </ref>). Therefore algorithm designers were left with no choice but to consider more modest notions of a "good" solution.
Reference: [24] <author> N. Garg. </author> <title> A 3-approximation for the minimum tree spanning k vertices. </title> <booktitle> In Proc. 37th IEEE Foundations of Computer Science, </booktitle> <pages> pp 302-310, </pages> <year> 1996. </year>
Reference-contexts: Those algorithms relied on the geometry of the plane and broke down even in &lt; 3 . But a recent algorithm of Garg <ref> [24] </ref>| discovered independently of our paper | works in any metric space. Geometric versions of polynomial time problems have been studied for many years, especially MST and Euclidean Matching. Exploiting geometric structure for these problems is known to lead to faster algorithms than the corresponding algorithms for general graphs.
Reference: [25] <author> E. N. Gilbert and R. O. Pollak. </author> <title> Steiner minimal trees. </title> <journal> SIAM J. Appl. Math. </journal> <volume> 16 </volume> <pages> 1-29, </pages> <year> 1968. </year>
Reference-contexts: In general, the minimum spanning tree is not an optimal solution. In &lt; 2 (with distances measured in ` 2 norm) the cost of the MST can be as far as a factor 2= p 3 from the optimum. Furthermore, the famous Gilbert-Pollak <ref> [25] </ref> conjecture said it can't be any further from the optimum; this conjecture was recently proved by Du and Hwang [18]. A spate of research activity in recent years (starting with the work of Zelikovsky [63]) has provided better algorithms, with an approximation ratio around 1:143 [64].
Reference: [26] <author> M. Goemans. </author> <title> Worst-case comparison of valid inequalities for the TSP. </title> <journal> Mathematical Programming, </journal> <volume> 69: </volume> <pages> 335-349, </pages> <year> 1995. </year>
Reference-contexts: Two decades of research failed to improve upon Christofides' algorithm for metric TSP. The Held-Karp heuristic is conjectured to have an approximation ratio 4=3 (some results of Goemans <ref> [26] </ref> support this conjecture) but the best upperbound known is 3=2 (Wolsey [62] and Shmoys and Williamson [57]). Some researchers continued to hope that even a PTAS might exist.
Reference: [27] <author> R. L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Tech. J., </journal> <volume> 45: </volume> <year> 1563-1581.1966. </year>
Reference: [28] <author> R. L. Graham. </author> <type> Personal communication, </type> <year> 1996. </year>
Reference-contexts: All running times on instances in &lt; d are larger by a factor (O (log n)) (O ( p . The 2 It appears that this problem was first posed by Gauss in a letter to Schumacher <ref> [28] </ref>. 4 above expressions for running times are unchanged when the problem is specified us-ing any Minkowski norm instead of the Euclidean norm. Furthermore, all the above PTAS's can be derandomized, by increasing the running time in &lt; d by O (n d ).
Reference: [29] <author> M. Grigni, E. Koutsoupias, and C. H. Papadimitriou. </author> <title> An approximation scheme for planar graph TSP. </title> <booktitle> In Proc. IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 640-645, </pages> <year> 1995. </year>
Reference-contexts: Recently Grigni, Koutsoupias, and Papadimitriou <ref> [29] </ref> designed an approximation scheme for planar graph TSP using similar ideas. <p> Note that the results of [5] mentioned in the introduction seem to preclude a PTAS for general metrics. Recently Arora, Grigni, Karger, Klein and Woloszyn [4] extended our ideas and those of <ref> [29] </ref> to design a PTAS for any metric that is the shortest-path metric of a weighted planar graph (the paper [29] designed such PTASs for unweighted planar graphs). (ii) Design a more efficient version of our algorithm. Now we discuss this in more detail. <p> Recently Arora, Grigni, Karger, Klein and Woloszyn [4] extended our ideas and those of <ref> [29] </ref> to design a PTAS for any metric that is the shortest-path metric of a weighted planar graph (the paper [29] designed such PTASs for unweighted planar graphs). (ii) Design a more efficient version of our algorithm. Now we discuss this in more detail. Our algorithm's running time depends exponentially on c even in &lt; 2 .
Reference: [30] <author> D. Hochbaum, ed. </author> <title> Approximation Algorithms for NP-hard problems. </title> <publisher> PWS Publishing, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference: [31] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> JACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference-contexts: The running time could depend upon c, but for each fixed c has to be polynomial in the input size. PTAS's are known for very few problems; two important ones are Subset-Sum (Ibarra and Kim <ref> [31] </ref>) and Bin-Packing (Fernandez de la Vega and Lueker [17]; see also Karmarkar and Karp [36]). Recently Arora, Lund, Motwani, Sudan, and Szegedy [5] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS.
Reference: [32] <author> D. S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> J. Computer and Systems Sci. </journal> <volume> 9 </volume> <month> 256-278 </month> <year> 1974. </year> <month> 28 </month>
Reference: [33] <author> D. S. Johnson and Lyle A. McGeoch. </author> <title> The Traveling Salesman Problem: A Case Study in Local Optimization. Chapter in Local Search in Combinatorial Optimization, </title> <editor> E.H.L. Aarts and J.K. Lenstra (eds.), </editor> <publisher> John Wiley and Sons, </publisher> <address> NY, </address> <year> 1997. </year>
Reference-contexts: We note that classical local-exchange heuristics such as K-OPT or Lin-Kernighan [44] are already known to compute very good tours on "real-life" TSP instances <ref> [33, 10] </ref>. However, the performance of known heuristics for problems such as Steiner Tree or k-TSP is not as good.
Reference: [34] <author> D. S. Johnson, C. Papadimitriou and M. Yannakakis. </author> <title> How easy is local search? J. </title> <journal> Computer and Systems Sci. </journal> <volume> 37 </volume> <pages> 79-100, </pages> <year> 1988. </year>
Reference-contexts: Exact optimization is NP-hard (Karp [37]). So is approximating the optimum within any constant factor (Sahni and Gonzalez [55]). There are also other reasons to believe in the TSP's nastiness (cf. D P completeness [51] and P LS-completeness <ref> [34] </ref>). fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship. Email: arora@cs.princeton.edu 1 But TSP instances arising in practice are usually quite special, so the hardness results may not necessarily apply to them. <p> K-OPT can in the worst case produce tours whose cost is twice the optimum. In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [40]. This strongly suggests that no polynomial-time algorithm can find such a local optimum; see <ref> [34] </ref>. Many variants of Lin-Kernighan are also PLS-complete [50]. 3 We will use the standard Real RAM model of computation, which assumes a unit cost for arithmetic on real numbers. Strictly speaking, we will need computations on real numbers only to "preprocess" the input in linear time.
Reference: [35] <author> W. B. Johnson and J. Lindenstrauss. </author> <title> Extensions of Lipschitz mappings into Hilbert space. </title> <booktitle> Contemporary Mathematics 26 </booktitle> <pages> 189-206, </pages> <year> 1984. </year>
Reference: [36] <author> N. Karmarkar and R.M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packing problem. </title> <booktitle> In Proc. 23 rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 312-320, </pages> <year> 1982. </year>
Reference-contexts: PTAS's are known for very few problems; two important ones are Subset-Sum (Ibarra and Kim [31]) and Bin-Packing (Fernandez de la Vega and Lueker [17]; see also Karmarkar and Karp <ref> [36] </ref>). Recently Arora, Lund, Motwani, Sudan, and Szegedy [5] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS.
Reference: [37] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In R. E. Miller and J. W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, Advances in Computing Research, </booktitle> <pages> pp 85-103. </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: For a fascinating history, see Lawler et al. [42]. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp <ref> [37] </ref>). So is approximating the optimum within any constant factor (Sahni and Gonzalez [55]). There are also other reasons to believe in the TSP's nastiness (cf. D P completeness [51] and P LS-completeness [34]). fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship.
Reference: [38] <author> R. M. Karp. </author> <title> Probabilistic analysis of partitioning algorithms for the TSP in the plane. </title> <journal> Math. Oper. Res. </journal> <volume> 2 </volume> <pages> 209-224, </pages> <year> 1977. </year>
Reference-contexts: Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadimitriou [49], Garey, Graham, and Johnson [23]). Therefore algorithm designers were left with no choice but to consider more modest notions of a "good" solution. Karp <ref> [38] </ref>, in a seminal work on probabilistic analysis of algorithms, showed that when the n nodes are picked uniformly and independently from the unit square, then the fixed dissection heuristic with high probability finds tours whose cost is within a factor 1 + 1=c of optimal (where c &gt; 1 is <p> We remark that the idea of partitioning a TSP instance into smaller instances 2 and dynamic programming has been used before, most famously in <ref> [38] </ref>. Smith [56] showed how to solve the TSP in &lt; 2 to optimality in 2 O ( p n) time; the main idea is that the plane can be recursively partitioned such that an optimal tour cross every partition only O ( p n) times. <p> This multiplies the running time by L 2 = O (n 2 ). 2.2 Proof of the Structure Theorem In this section we prove Theorem 2. Lemmas 3 and 4 will be important ingredients of the proof. 10 Lemma 3 is implicit in prior work on Euclidean TSP <ref> [9, 38] </ref>, and can safely be called a "folk theorem." However, we have never seen it stated precisely as it is stated here. When we later use this lemma, the "closed path" of the hypothesis will be a salesman path on some set of nodes.
Reference: [39] <author> P. Klein and D. Karger. </author> <type> Personal communication, </type> <month> March </month> <year> 1996. </year>
Reference: [40] <author> M. W. Krentel. </author> <title> Structure in locally optimal solutions. </title> <booktitle> Proc. 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp 216-221, </pages> <year> 1989. </year>
Reference-contexts: K-OPT can in the worst case produce tours whose cost is twice the optimum. In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete <ref> [40] </ref>. This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [34]. Many variants of Lin-Kernighan are also PLS-complete [50]. 3 We will use the standard Real RAM model of computation, which assumes a unit cost for arithmetic on real numbers.
Reference: [41] <author> S. Khuller, B. Raghavachari, and N. Young. </author> <title> Low degree spanning tree of small weight. </title> <journal> SIAM J. Computing, </journal> <volume> 25 </volume> <pages> 355-368, </pages> <year> 1996. </year> <note> Preliminary version in Proc. 26th ACM Symposium on Theory of Computing, </note> <year> 1994. </year>
Reference: [42] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, D. B. Shmoys. </author> <title> The traveling salesman problem. </title> <publisher> John Wiley, </publisher> <year> 1985 </year>
Reference-contexts: This classic problem has proved a rich testing ground for most important algorithmic ideas during the past few decades, and influenced the emergence of fields such as operations research, polyhedral theory and complexity theory. For a fascinating history, see Lawler et al. <ref> [42] </ref>. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp [37]). So is approximating the optimum within any constant factor (Sahni and Gonzalez [55]). There are also other reasons to believe in the TSP's nastiness (cf. <p> Our algorithm may return a salesman path that is self-crossing. It is well known how to remove self-crossings at the end without raising the cost <ref> [42] </ref>. 4. In the above description we simplified the expression for the running time by noticing that for c &lt; log n, O (c O (c) n (log n) O (c) ) is O (n (log n) O (c) ). We use similar simplifications elsewhere in the paper. Derandomization.
Reference: [43] <author> S. Lin. </author> <title> Computer solutions for the traveling salesman problem. </title> <journal> Bell System Tech. J., </journal> <volume> 44 </volume> <pages> 2245-2269, </pages> <year> 1965. </year>
Reference: [44] <author> S. Lin and B. W. Kernighan. </author> <title> An effective heuristic algorithm for the traveling salesman problem. </title> <journal> Operations Research 21 </journal> <pages> 498-516, </pages> <year> 1973. </year>
Reference-contexts: At the very least, the Theorem gives a way of decomposing TSP instances into a large number of "independent" and smaller instances, and this may prove helpful in parallelizing existing programs. We note that classical local-exchange heuristics such as K-OPT or Lin-Kernighan <ref> [44] </ref> are already known to compute very good tours on "real-life" TSP instances [33, 10]. However, the performance of known heuristics for problems such as Steiner Tree or k-TSP is not as good.
Reference: [45] <author> C.S. Mata and J. Mitchell. </author> <title> Approximation Algorithms for Geometric tour and network problems. </title> <booktitle> In Proc. 11th ACM Symp. Comp. Geom., </booktitle> <pages> pp 360-369, </pages> <year> 1995. </year>
Reference-contexts: The metric case is MAX-SNP-hard [13]. k-TSP: Given n nodes in &lt; d and an integer k &gt; 1, find the shortest tour that visits at least k nodes. An approximation algorithm due to Mata and Mitchell <ref> [45] </ref> achieves a constant factor approximation in &lt; 2 . k-MST: Given n nodes in &lt; d and an integer k 2, find k nodes with the shortest Minimum Spanning Tree. The problem is NP-hard [22].
Reference: [46] <author> Z. A. Melzak. </author> <title> On the problem of Steiner. </title> <journal> Canad. Math. </journal> <volume> Bull 4 </volume> <pages> 143-148, </pages> <year> 1961. </year>
Reference-contexts: However, since the square is entered and left only 4r times, we can treat it as an instance of the Steiner Tree problem of size at most 4r, which can be solved in constant time since r is constant <ref> [46] </ref>. Note that this also implies that the number of leaves in the shifted quadtree is O (n), since a leaf must contain either an input node or a Steiner node.
Reference: [47] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem. </title> <booktitle> In Proc. ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp. 402-208, </pages> <year> 1996. </year>
Reference-contexts: A few weeks later, Mitchell [48] independently discovered an n O (c) time approximation scheme for points in &lt; 2 . His algorithm useds ideas from his earlier constant-factor approximation algorithm for k-MST <ref> [47] </ref>. It relies on the geometry of the plane and does not seem to generalize to higher dimensions. In January 1997 the author discovered the nearly-linear-time algorithm described in this paper. The key ingredient of this algorithm is Theorem 2, which the author had originally conjectured to be false. <p> The problem is NP-hard [22]. Blum, Chalasani, and Vempala [14] gave the first O (1)-factor approximation algorithm for points in &lt; 2 and Mitchell <ref> [47] </ref> improved this factor to 2 p Euclidean Min-Cost Perfect Matching: (EMCPM) Given 2n points in &lt; 2 (or &lt; d in general), find the minimum cost set of nonadjacent edges that cover all vertices. This problem is in P (even for nongeometric instances).
Reference: [48] <author> J. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: Part II- A simple PTAS for geometric k-MST, TSP, and related problems. </title> <type> Preliminary manuscript, </type> <month> April 30, </month> <year> 1996. </year> <note> To appear in SIAM J. Computing. </note>
Reference-contexts: Note however that none of the known heuristics is believed to be a PTAS 1 . History. The current paper evolved out of preliminary results obtained in Jan-uary 1996, culminating in a submission to IEEE FOCS 1996 in April 1996 [3]. A few weeks later, Mitchell <ref> [48] </ref> independently discovered an n O (c) time approximation scheme for points in &lt; 2 . His algorithm useds ideas from his earlier constant-factor approximation algorithm for k-MST [47]. It relies on the geometry of the plane and does not seem to generalize to higher dimensions.
Reference: [49] <author> C. H. Papadimitriou. </author> <title> Euclidean TSP is NP-complete. </title> <journal> Theoretical Computer Science, </journal> <volume> 4 </volume> <pages> 237-244, </pages> <year> 1977. </year>
Reference-contexts: In Euclidean TSP the nodes lie in &lt; 2 (or more generally, in &lt; d for some d) and distance is defined using the ` 2 norm. Note that Euclidean TSP is a subcase of metric TSP. Unfortunately, even Euclidean TSP is NP-hard (Papadimitriou <ref> [49] </ref>, Garey, Graham, and Johnson [23]). Therefore algorithm designers were left with no choice but to consider more modest notions of a "good" solution. <p> Now we discuss this in more detail. Our algorithm's running time depends exponentially on c even in &lt; 2 . Since Euclidean TSP is strongly NP-hard (this follows from the reductions in <ref> [49] </ref>, for example), any algorithm that computes (1 + c)-approximations must have a running time with some exponential dependence on c (unless, of course, NP-complete problems can be solved in subexponential time).
Reference: [50] <author> C. H. Papadimitriou. </author> <title> The complexity of the Lin-Kernighan heuristic for the traveling salesman problem. </title> <journal> SIAM J. on Computing, </journal> <volume> 21(3) </volume> <pages> 450-465, </pages> <year> 1992. </year>
Reference-contexts: In case of metric TSP, finding a locally-optimum tour for K-OPT (for K 8) is PLS-complete [40]. This strongly suggests that no polynomial-time algorithm can find such a local optimum; see [34]. Many variants of Lin-Kernighan are also PLS-complete <ref> [50] </ref>. 3 We will use the standard Real RAM model of computation, which assumes a unit cost for arithmetic on real numbers. Strictly speaking, we will need computations on real numbers only to "preprocess" the input in linear time.
Reference: [51] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <editor> In J. </editor> <booktitle> of Computer and System Sciences 28 </booktitle> <pages> 244-259, </pages> <note> 1984 (prelim. version in Proc. 24th ACM STOC, 1982). 29 </note>
Reference-contexts: Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp [37]). So is approximating the optimum within any constant factor (Sahni and Gonzalez [55]). There are also other reasons to believe in the TSP's nastiness (cf. D P completeness <ref> [51] </ref> and P LS-completeness [34]). fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship. Email: arora@cs.princeton.edu 1 But TSP instances arising in practice are usually quite special, so the hardness results may not necessarily apply to them.
Reference: [52] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> J. of Computer and System Sciences 43 </journal> <pages> 425-440, </pages> <year> 1991. </year>
Reference-contexts: Recently Arora, Lund, Motwani, Sudan, and Szegedy [5] showed that if P 6= NP, then metric TSP and many other problems do not have a PTAS. Their work relied upon the theory of MAX-SNP-completeness (Papadimitriou and Yannakakis <ref> [52] </ref>), the notion of probabilistically checkable proofs or PCPs (Feige, Goldwasser, Lovasz, Safra and Szegedy [21], Arora and Safra [7]), and the connection between PCPs and hardness of approximation [21]. The status of Euclidean TSP remained open, however. In this paper, we show that Euclidean TSP has a PTAS.
Reference: [53] <author> S. Rao and W. Smith. </author> <title> Approximating geometric graphs via "spanners" and "banyans." </title> <booktitle> In Proc. 30th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 540-550, </pages> <year> 1998. </year>
Reference-contexts: Trevisan's work does not preclude the possibility of a running time such as O (n log 2 n + 2 O (c) ) in &lt; 2 . Recently Rao and Smith <ref> [53] </ref> improved upon our ideas to achieve a running time of (c p p dc) d1 ) n + O (d log n) in &lt; d ; thus their running time in &lt; 2 is O (c O (c) n + n log n).
Reference: [54] <author> G. Reinelt. </author> <title> TSPLIB-A travelling salesman problem library. </title> <journal> ORSA J. Computing, </journal> <volume> 3 </volume> <pages> 376-384, </pages> <year> 1991. </year>
Reference-contexts: We find it conceivable that our techniques, which show that Euclidean instances have near-optimal salesman tours with a very simple structure, may contribute to a theoretical understanding of local-exchange heuristics on Euclidean instances. (The "real-life" instances in TSPLIB <ref> [54] </ref> that constitute the test-bed for many of these heuristics are often either Euclidean or derived from Euclidean instances.) For example, even our current dynamic programming algorithm can be viewed |after some twists in the definition of "local search"| as a local search algorithm that performs up to O (c) edge
Reference: [55] <author> S. Sahni and T. Gonzales. </author> <title> P-complete approximation problems. </title> <journal> JACM, </journal> <volume> 23 </volume> <pages> 555-565, </pages> <year> 1976. </year>
Reference-contexts: For a fascinating history, see Lawler et al. [42]. Since the 1970s, mounting evidence from complexity theory suggests that the problem is computationally difficult. Exact optimization is NP-hard (Karp [37]). So is approximating the optimum within any constant factor (Sahni and Gonzalez <ref> [55] </ref>). There are also other reasons to believe in the TSP's nastiness (cf. D P completeness [51] and P LS-completeness [34]). fl Supported by NSF CAREER award NSF CCR-9502747, an Alfred Sloan Fellowship, and a Packard Fellowship.
Reference: [56] <author> W. D. </author> <title> Smith Finding the optimum N -city traveling salesman tour in the Euclidean plan in subexponential time and polynomial space. </title> <type> Manuscript, </type> <year> 1988. </year>
Reference-contexts: We remark that the idea of partitioning a TSP instance into smaller instances 2 and dynamic programming has been used before, most famously in [38]. Smith <ref> [56] </ref> showed how to solve the TSP in &lt; 2 to optimality in 2 O ( p n) time; the main idea is that the plane can be recursively partitioned such that an optimal tour cross every partition only O ( p n) times.
Reference: [57] <author> D. B. Shmoys and D. P. Williamson. </author> <title> Analyzing the Held-Karp TSP bound: A mono-tonicity property wtih application. </title> <journal> Information Processing Letters, </journal> <volume> 35 </volume> <pages> 281-285, </pages> <year> 1990. </year>
Reference-contexts: Two decades of research failed to improve upon Christofides' algorithm for metric TSP. The Held-Karp heuristic is conjectured to have an approximation ratio 4=3 (some results of Goemans [26] support this conjecture) but the best upperbound known is 3=2 (Wolsey [62] and Shmoys and Williamson <ref> [57] </ref>). Some researchers continued to hope that even a PTAS might exist. A PTAS or Polynomial-Time Approximation Scheme is a polynomial-time algorithm | or a family of such algorithms| that, for each fixed c &gt; 1, can approximate the problem within a factor 1 + 1=c.
Reference: [58] <author> L. Trevisan. </author> <title> When Hamming meets Euclid: the approximability of geometric TSP and MST. </title> <booktitle> In Proc. 29th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 21-39, </pages> <year> 1997. </year>
Reference-contexts: Since Euclidean TSP is strongly NP-hard (this follows from the reductions in [49], for example), any algorithm that computes (1 + c)-approximations must have a running time with some exponential dependence on c (unless, of course, NP-complete problems can be solved in subexponential time). Likewise, Trevisan <ref> [58] </ref> has presented evidence that every approximation scheme for &lt; d must have a running time with a doubly exponential dependence on d. He shows for some fixed c &gt; 1 that finding a (1 + 1=c)-approximate solution in &lt; O (log n) is NP-hard.
Reference: [59] <author> P. </author> <title> Vaidya Geometry helps in matching. </title> <journal> SIAM J. Comp., </journal> <volume> 18 </volume> <pages> 1201-1225, </pages> <year> 1988. </year>
Reference-contexts: This problem is in P (even for nongeometric instances). Vaidya shows how to solve it optimally in ~ O (n 2:5 ) time <ref> [59] </ref>, and to approximate it within a factor (1 + 1=c) in O (poly (c)n 1:5 log 3 n) time [60]. Theorem 1 For each fixed d, the &lt; d version of each of the above problems has a randomized PTAS.
Reference: [60] <author> P. </author> <title> Vaidya Approximate minimum weight matching on k-dimensional spaces. </title> <journal> Algorith-mica, </journal> <volume> 4 </volume> <pages> 569-583, </pages> <year> 1989. </year>
Reference-contexts: This problem is in P (even for nongeometric instances). Vaidya shows how to solve it optimally in ~ O (n 2:5 ) time [59], and to approximate it within a factor (1 + 1=c) in O (poly (c)n 1:5 log 3 n) time <ref> [60] </ref>. Theorem 1 For each fixed d, the &lt; d version of each of the above problems has a randomized PTAS. The algorithm computes a (1 + 1=c)-approximation with probability at least 1=2. <p> We already outlined a procedure that makes the instance well-rounded. Now we describe it in more detail. The procedure uses a crude approximation algorithm due to Vaidya <ref> [60] </ref> that runs in O (n log 3 n) time and computes an O (log n) approximation to the cost of the optimum matching 6 Let A O (OP T log n) be the cost of this solution.
Reference: [61] <author> K. Wang. </author> <title> Is the m parameter in Arora's TSP algorithm the best possible? Junior project, </title> <institution> Princeton University, </institution> <month> Fall </month> <year> 1996. </year>
Reference-contexts: In January 1997 the author discovered the nearly-linear-time algorithm described in this paper. The key ingredient of this algorithm is Theorem 2, which the author had originally conjectured to be false. He is grateful to Karen Wang, whose inability <ref> [61] </ref> to construct any counterexample to Theorem 2 motivated him to abandon his conjecture. 1.1 Definitions and Results The input to our algorithm is a set of n points in &lt; d , given by their coordinates.
Reference: [62] <author> L. A. Wolsey. </author> <title> Heuristic analysis, linear programming and branch and bound. </title> <journal> Mathematical Programming Study, </journal> <volume> 13 </volume> <pages> 121-134, </pages> <year> 1980. </year>
Reference-contexts: Two decades of research failed to improve upon Christofides' algorithm for metric TSP. The Held-Karp heuristic is conjectured to have an approximation ratio 4=3 (some results of Goemans [26] support this conjecture) but the best upperbound known is 3=2 (Wolsey <ref> [62] </ref> and Shmoys and Williamson [57]). Some researchers continued to hope that even a PTAS might exist.
Reference: [63] <author> A.Z. Zelikovsky. </author> <title> An 11=6-approximation algorithm for the network Steiner Problem. </title> <journal> Algorithmica, </journal> <volume> 9 </volume> <pages> 463-470, </pages> <year> 1993. </year>
Reference-contexts: Furthermore, the famous Gilbert-Pollak [25] conjecture said it can't be any further from the optimum; this conjecture was recently proved by Du and Hwang [18]. A spate of research activity in recent years (starting with the work of Zelikovsky <ref> [63] </ref>) has provided better algorithms, with an approximation ratio around 1:143 [64]. The metric case is MAX-SNP-hard [13]. k-TSP: Given n nodes in &lt; d and an integer k &gt; 1, find the shortest tour that visits at least k nodes.
Reference: [64] <author> A. Zelikovsky. </author> <title> Better approximation bounds for the network and Euclidean Steiner tree problems. </title> <type> Tech. Rep. </type> <institution> CS-96-06, University of Virginia, </institution> <year> 1996. </year>
Reference-contexts: A spate of research activity in recent years (starting with the work of Zelikovsky [63]) has provided better algorithms, with an approximation ratio around 1:143 <ref> [64] </ref>. The metric case is MAX-SNP-hard [13]. k-TSP: Given n nodes in &lt; d and an integer k &gt; 1, find the shortest tour that visits at least k nodes.
References-found: 64

