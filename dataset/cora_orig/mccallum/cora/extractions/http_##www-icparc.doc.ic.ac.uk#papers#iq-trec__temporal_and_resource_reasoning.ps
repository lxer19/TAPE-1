URL: http://www-icparc.doc.ic.ac.uk/papers/iq-trec:_temporal_and_resource_reasoning.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: IQ-TREC: Temporal and Resource Reasoning for parc PLAN  
Author: Amin ElKholy Barry Richards 
Address: 180, Queens Gate London SW7 2BZ  
Affiliation: IC-Parc Imperial College  
Abstract: This paper introduces the IQ-TREC system, which implements a new approach to maintaining and reasoning about temporal databases. We shall address two specific problems (1) enforcing consistency and (2) answering conjunctive queries. The key issues concern indefinite temporal data and its relation to resource reasoning. We present both problems as disjunctive constraint propagation problems. We then specify the IQ-TREC approach to these problems. This approach has been prototyped in the CLP environment ECL i PS e and is now being assessed and used to develop a version of the planning system parc PLAN.
Abstract-found: 1
Intro-found: 1
Reference: [Choueiry&Faltings 92] <author> B Choueiry, B Faltings. </author> <title> Interactive Resource Allocation using Temporal Abstraction and Value-Assignment Delay Heuristic: A CSP perspective. </title> <type> Tech. Rep. </type> <institution> TR-92/17, EPFL Switzerland, </institution> <year> 1992. </year>
Reference-contexts: One approach to handling the interaction of temporal and domain constraints is discussed in [Zweben et al. 90], where temporal constraints are satisfied first then resource conflicts are addressed using a simulated annealing repair algorithm. Another interesting approach is taken in <ref> [Choueiry&Faltings 92] </ref>, where the problem is that of resource allocation, and there is no uncertainty with respect to the time points. Intervals known to overlap must not share the same resource and the problem is purely a resource allocation problem. <p> Intervals known to overlap must not share the same resource and the problem is purely a resource allocation problem. Both of these approaches assume the existence of a preset time schedule. In the case of [Zweben et al. 90], the requirement is for rescheduling, and in the case of <ref> [Choueiry&Faltings 92] </ref>, the resources have not yet been allocated. In our approach, a partitioning of the database splits it into a number of coarse disjoint partitions.
Reference: [Dean & McDermott 87] <author> T Dean and D McDermott, </author> <booktitle> Temporal Database Management , Artificial Intelligence (32) 1-55, </booktitle> <year> 1987. </year>
Reference-contexts: Temporal uncertainty arises when the start and end points of intervals are specified by variables which are subject to constraints. The degree of uncertainty is reflected by the constraints. We follow TMM <ref> [Dean 85, Dean & McDermott 87] </ref> in using binary metric constraints on points. Such constraints have the form distance (S,E,lb,ub) , where S and E are time point variables, and lb and ub are metric lower and upper bounds on the distance between the points.
Reference: [Dean 85] <author> T Dean, </author> <title> Temporal Imagery: An Approach to Reasoning about Time for Planning and Problem Solving. </title> <type> PhD Thesis, </type> <institution> Yale University, </institution> <year> 1985. </year>
Reference-contexts: Temporal uncertainty arises when the start and end points of intervals are specified by variables which are subject to constraints. The degree of uncertainty is reflected by the constraints. We follow TMM <ref> [Dean 85, Dean & McDermott 87] </ref> in using binary metric constraints on points. Such constraints have the form distance (S,E,lb,ub) , where S and E are time point variables, and lb and ub are metric lower and upper bounds on the distance between the points.
Reference: [Dechter, Meiri & Pearl 91] <author> R Dechter, I Meiri and J Pearl. </author> <booktitle> Temporal Constraint Networks , Artificial Intelligence (49) 61-95, </booktitle> <year> 1991. </year>
Reference: [ECRC 93] <author> ECL i PS e team. </author> <title> ECL i PS e : ECRC Common Logic Programming System, User Manual, </title> <institution> European Computer Industry Research Centre, </institution> <year> 1993. </year>
Reference-contexts: The IQ-TREC approach The IQ-TREC approach to solving DSPs is based on backtracking search with forward pruning of d-constraints to remove unsatisfiable options, thus reducing backtracking. This section presents the implementation ideas in more detail. Section 5.1 briefly outlines the relevant features of ECL i PS e <ref> [ECRC 93] </ref>. Sections 5.2 and 5.3 start by giving a brief description of the methods used in handling options and d-constraints respectively, followed by an outline of each method in CLP.
Reference: [Richards et al. 89] <author> B Richards, I Bethke, J van Der Does, J Oberlander, </author> <title> Temporal Representation and Inference, </title> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: Both are illustrated in the next example, which states that a minimal time is required to setup a gate after a particular plane has been handled. 2 For a full discussion see <ref> [Richards et al. 89] </ref> 3 , G 1 , E 1 , G 2 , E 2 at (P 1 ,G 1 )@[S 1 ,E 1 ) & at (P 2 ,G 2 )@[S 2 ,E 2 ) fi (E 1 S 2 +T 1 & setup-time (P 1 ,T 1
Reference: [Schrag et al. 92] <author> R Schrag, J Carciofini, M Boddy, </author> <title> Managing Disjunction for Practical Temporal Reasoning, </title> <booktitle> Proceedings Knowledge Representation KR-92, </booktitle> <year> 1992. </year>
Reference-contexts: We say that a 1 ,...,a n are the resources for X . There are two other types of domain constraints X=Y and X Y . TMM also allows a restricted form of domain uncertainty, but -TMM <ref> [Schrag et al. 92] </ref> disallows all such uncertainty since it is seen to be too expensive to implement in their framework.
Reference: [Zweben et al. 90] <editor> M Zweben, M Deale, R Gargan, Anytime rescheduling, </editor> <booktitle> Proc DARPA Workshop on Innovative Approaches to Planning and Scheduling,1990. </booktitle>
Reference-contexts: Propagating the domain constraint is equivalent to allowing the temporal propositions to occur in parallel. This interaction between deadlines and limited resources is crucial. One approach to handling the interaction of temporal and domain constraints is discussed in <ref> [Zweben et al. 90] </ref>, where temporal constraints are satisfied first then resource conflicts are addressed using a simulated annealing repair algorithm. Another interesting approach is taken in [Choueiry&Faltings 92], where the problem is that of resource allocation, and there is no uncertainty with respect to the time points. <p> Intervals known to overlap must not share the same resource and the problem is purely a resource allocation problem. Both of these approaches assume the existence of a preset time schedule. In the case of <ref> [Zweben et al. 90] </ref>, the requirement is for rescheduling, and in the case of [Choueiry&Faltings 92], the resources have not yet been allocated. In our approach, a partitioning of the database splits it into a number of coarse disjoint partitions.
References-found: 8

