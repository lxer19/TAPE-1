URL: http://www.cs.jhu.edu/~cypher/pubs/eui.ps
Refering-URL: http://www.cs.jhu.edu/~cypher/pubs/pubs.html
Root-URL: http://www.cs.jhu.edu
Title: The IBM External User Interface for Scalable Parallel Systems  
Author: Vasanth Bala Jehoshua Bruck Raymond Bryant Robert Cypher Peter de Jong Pablo Elustondo D. Frye Alex Ho Ching-Tien Ho Gail Irwin Shlomo Kipnis Richard Lawrence Marc Snir 
Address: P.O. Box 218 Yorktown Heights, NY 10598  650 Harry Road San Jose, CA 95120  Neighborhood Road, Kingston, NY 12401  
Affiliation: IBM Research Division T.J. Watson Research Center  IBM Research Division Almaden Research Center  IBM Corporation Highly Parallel Supercomputing Systems Laboratory  
Abstract: The IBM External User Interface (EUI) for scalable parallel systems is a parallel programming library designed for the IBM line of scalable parallel computers. The first computer in this line, the IBM 9076 SP1, was announced in February 1993. This paper examines several aspects of the design and development of the EUI. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Bala, J. Bruck, R. Cypher, P. Elustondo, A. Ho, C.T. Ho, S. Kipnis and M. Snir, </author> <title> "CCL: A Portable and Tunable Collective Communication Library for Scalable Parallel Computers", </title> <institution> IBM Research Report, RJ-9284, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Furthermore, because the role of each task is dependent on the particular way in which the routine is implemented, the behavior of non-barrier mode routines is implementation dependent. (See <ref> [1] </ref> for details.) The barrier mode should be used when debugging code in order to verify correctness. Once the code has been shown to operate correctly in barrier mode, it is possible to change to non-barrier mode for performance reasons, provided that the barrier is not required for correctness.
Reference: [2] <author> V. Bala and S. Kipnis, </author> <title> "Process Groups: a mechanism for the coordination of and communication among processes in the Venus collective communication library", </title> <booktitle> Proceedings of the 7th International Parallel Processing Symposium, IEEE, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: Of particular interest are the Vulcan system [4, 17], the Viper Operating Environment [7, 10], and the Venus communication library <ref> [2] </ref>. Vulcan [4, 17] is a prototype of a scalable, distributed-memory parallel computer based on Intel i860 compute-nodes and a low-latency, high-bandwidth, multistage interconnection network. The Vulcan system was designed and built at IBM T.J. Watson Research Center and aimed at exploring 1 massively parallel computers. <p> Viper [7, 10] is a light-weight operating system for Vulcan. Viper features task management facilities, multithreading, and point-to-point communication protocols. Viper was designed as a kernel for distributed-memory parallel computers. Venus <ref> [2] </ref> is a prototype design of a collective communication library for massively parallel computers. Venus incorporates features such as Process Groups and Process Channels and supports coordination of and communication among processes in dynamic situations.
Reference: [3] <author> A. Beguelin, J. Dongarra, A. Geist, R. Manchek, and V. Sunderam, </author> <title> "A user's guide to PVM Parallel Virtual Machine", </title> <type> ORNL Technical Report, </type> <institution> ORNL/TM-11826, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: The EUI is a library of coordination and communication routines that can be invoked from within FORTRAN or C application programs. Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM <ref> [3] </ref>, LINDA [5], PICL [9], PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16].
Reference: [4] <author> J. Bruck, R. Cypher, L. Gravano, A. Ho, C.T. Ho, S. Kipnis, S. Konstantinidou, M. Snir, and E. Upfal, </author> <title> "Survey of routing issues for the Vulcan parallel computer", </title> <institution> IBM Research Report, RJ-8839, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: The design of the IBM External User Interface for scalable parallel systems was influenced by several prototype systems and environments developed at IBM Research and at the IBM Highly Parallel Supercomputing Systems Laboratory (HPSSL). Of particular interest are the Vulcan system <ref> [4, 17] </ref>, the Viper Operating Environment [7, 10], and the Venus communication library [2]. Vulcan [4, 17] is a prototype of a scalable, distributed-memory parallel computer based on Intel i860 compute-nodes and a low-latency, high-bandwidth, multistage interconnection network. The Vulcan system was designed and built at IBM T.J. <p> Of particular interest are the Vulcan system <ref> [4, 17] </ref>, the Viper Operating Environment [7, 10], and the Venus communication library [2]. Vulcan [4, 17] is a prototype of a scalable, distributed-memory parallel computer based on Intel i860 compute-nodes and a low-latency, high-bandwidth, multistage interconnection network. The Vulcan system was designed and built at IBM T.J. Watson Research Center and aimed at exploring 1 massively parallel computers.
Reference: [5] <author> Nicholas Carriero and David Gelernter, </author> <title> "Linda in Context", </title> <journal> Communication of the ACM, </journal> <volume> Vol. 32, No. 4, </volume> <month> April </month> <year> 1989, </year> <pages> pp. 444-458. </pages>
Reference-contexts: The EUI is a library of coordination and communication routines that can be invoked from within FORTRAN or C application programs. Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA <ref> [5] </ref>, PICL [9], PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [6] <author> J. Dongarra, R. Hempel, A. Hey, and D. Walker, </author> <title> "A Proposal for a user-level, message-passing interface in a distributed memory environment", </title> <type> ORNL Technical Report, </type> <institution> ORNL/TM-12231, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: These platforms included a prototype of the SP1 (demonstrated at Supercomputing-92) and clusters of RS/6000 workstations. The first release of the EUI on the SP1 occurred in early 1993. During its design and implementation, the EUI had a major influence on the Message Passing Interface (MPI) <ref> [6] </ref> standardization effort that started in late 1992 and continued in 1993. The rest of this paper is organized as follows. The next section presents definitions and provides an overview of the four basic components of the EUI.
Reference: [7] <author> B. G. Fitch and M. E. Giampapa, </author> <title> "The Vulcan Operation Environment: a brief overview and status report", </title> <booktitle> Proceedings of the 5th Workshop on Use of Parallel Processors in Meteorology, ECMWF, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: The design of the IBM External User Interface for scalable parallel systems was influenced by several prototype systems and environments developed at IBM Research and at the IBM Highly Parallel Supercomputing Systems Laboratory (HPSSL). Of particular interest are the Vulcan system [4, 17], the Viper Operating Environment <ref> [7, 10] </ref>, and the Venus communication library [2]. Vulcan [4, 17] is a prototype of a scalable, distributed-memory parallel computer based on Intel i860 compute-nodes and a low-latency, high-bandwidth, multistage interconnection network. The Vulcan system was designed and built at IBM T.J. <p> The Vulcan project started in 1988 and was successfully completed in early 1992. The Vulcan prototype consists of 16 nodes connected by a multistage network of fast switches that is very similar to the high-performance network used in the SP1. Viper <ref> [7, 10] </ref> is a light-weight operating system for Vulcan. Viper features task management facilities, multithreading, and point-to-point communication protocols. Viper was designed as a kernel for distributed-memory parallel computers. Venus [2] is a prototype design of a collective communication library for massively parallel computers.
Reference: [8] <author> D. Frye, R. Bryant, C.T. Ho, P. de Jong, R. Lawrence, and M. Snir, </author> <title> "An External User Interface for Scalable Parallel Systems: FORTRAN Interface", </title> <type> Technical Report, </type> <institution> IBM Highly Parallel Supercomputing Systems Laboratory, </institution> <month> November </month> <year> 1992. </year>
Reference: [9] <author> G. A. Geist, M. T. Heath, B. W. Peyton, and P. H. Worley, </author> <title> "A user's guide to PICL: a Portable Instrumented Communication Library", </title> <type> ORNL Technical Report, </type> <institution> ORNL/TM-11616, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: The EUI is a library of coordination and communication routines that can be invoked from within FORTRAN or C application programs. Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL <ref> [9] </ref>, PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [10] <author> M. E. Giampapa, B. G. Fitch, G. R. Irwin, and D. G. Shea, </author> <title> "Vulcan operating environment: programmer's reference", Internal Memorandum, </title> <institution> IBM T.J. Watson Research Center, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: The design of the IBM External User Interface for scalable parallel systems was influenced by several prototype systems and environments developed at IBM Research and at the IBM Highly Parallel Supercomputing Systems Laboratory (HPSSL). Of particular interest are the Vulcan system [4, 17], the Viper Operating Environment <ref> [7, 10] </ref>, and the Venus communication library [2]. Vulcan [4, 17] is a prototype of a scalable, distributed-memory parallel computer based on Intel i860 compute-nodes and a low-latency, high-bandwidth, multistage interconnection network. The Vulcan system was designed and built at IBM T.J. <p> The Vulcan project started in 1988 and was successfully completed in early 1992. The Vulcan prototype consists of 16 nodes connected by a multistage network of fast switches that is very similar to the high-performance network used in the SP1. Viper <ref> [7, 10] </ref> is a light-weight operating system for Vulcan. Viper features task management facilities, multithreading, and point-to-point communication protocols. Viper was designed as a kernel for distributed-memory parallel computers. Venus [2] is a prototype design of a collective communication library for massively parallel computers.
Reference: [11] <author> R. Hempel, </author> <title> "The ANL/GMD macros (PARMACS) in FORTRAN for portable parallel programming using the message passing programming model, user's guide and reference manual", </title> <type> Technical Memorandum, </type> <institution> Gesellschaft fur Mathematik und Datenverabeitung mbH, West Germany. </institution>
Reference-contexts: The EUI is a library of coordination and communication routines that can be invoked from within FORTRAN or C application programs. Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS <ref> [11] </ref>, Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [12] <author> J. F. </author> <title> Palmer "The NCUBE family of parallel supercomputers", </title> <booktitle> Proceedings of the International Conference on Computer Design, IEEE, </booktitle> <year> 1986. </year>
Reference-contexts: Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library <ref> [12] </ref>, the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [13] <author> A. Skjellum and A. P. Leung, </author> <title> "Zipcode: a portable multicomputer communication library atop the Reactive Kernel", </title> <booktitle> Proceedings of the 5th Distributed Memory Computing Conference, IEEE, </booktitle> <month> April </month> <year> 1990. </year>
Reference-contexts: Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS [11], Zipcode <ref> [13] </ref>, Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [14] <institution> Connection Machine CM-5 Technical Summary, Thinking Machines Corporation, </institution> <year> 1991. </year>
Reference-contexts: Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library <ref> [14] </ref>, and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [15] <institution> Express 3.0 Introductory Guide, Parasoft Corporation, </institution> <year> 1990. </year>
Reference-contexts: Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS [11], Zipcode [13], Express <ref> [15] </ref>, the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library [16]. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
Reference: [16] <author> Intel iPSC/860 Programmer's Reference Manual, </author> <title> Intel Corporation. [17] "Vulcan system summary", Internal Memorandum, </title> <institution> IBM T.J. Watson Research Center. </institution> <month> 16 </month>
Reference-contexts: Over the past several years, a large number of programming environments and communication libraries for parallel computers have been developed, including PVM [3], LINDA [5], PICL [9], PARMACS [11], Zipcode [13], Express [15], the NCUBE/2 library [12], the CM-5 library [14], and the iPSC/860 library <ref> [16] </ref>. The design of the EUI borrows some of the popular communication concepts that already exist in many of these libraries, and in addition, provides several novel operations.
References-found: 16

