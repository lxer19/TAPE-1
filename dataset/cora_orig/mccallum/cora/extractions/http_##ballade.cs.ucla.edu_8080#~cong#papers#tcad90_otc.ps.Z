URL: http://ballade.cs.ucla.edu:8080/~cong/papers/tcad90_otc.ps.Z
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Over-the-Cell Channel Routing  
Author: Jingsheng Cong and C. L. Liu 
Keyword: Category: Layout.  
Address: Urbana, IL 61801  
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: A common approach to the over-the-cell channel routing problem is to divide the problem into three steps: (1) routing over the cells, (2) choosing net segments, (3) routing within the channel. In this paper, we show that the first step can be reduced to the problem of finding a maximum independent set of a circle graph, and thus, can be solved optimally in quadratic time. Also, we show that to determine an optimal choice of net segments in the second step is NP-hard in general, and we present an efficient heuristic algorithm for this step. The third step can be carried out using a conventional channel router. Based on these theoretical results, we design an over-the-cell channel router that produces solutions which are better than the optimal two-layer channel routing solutions for all test examples. Our over-the-cell channel router also outperforms the over-the-cell channel router in [19]. In particular, for the famous Deutsch's Difficult Example, our solution yields a saving of 10.5% in channel routing area when compared with the optimal two-layer channel routing solution, and a saving of 15% in channel routing area when compared with the routing solution produced by the over-the-cell channel router in [19]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Asano, T. Asano and H. Imai. </author> <title> ``Partitioning a Polygonal Region into Trapezoids,'' </title> <journal> Journal of ACM, </journal> <volume> Vol. 33, </volume> <pages> pp. 290-312, </pages> <year> 1986. </year>
Reference-contexts: It is not difficult to see that the corresponding circle graph is the intersection graph of I . It is known that the problem of finding a maximum independent set of a circle graph can be solved in polynomial time <ref> [10, 1, 20] </ref>. In particular, using the dynamic programming approach presented in [20], we have Lemma 3-3 TSOP can be solved optimally in O (c 2 ) time, where c is the number of columns.
Reference: [2] <author> M. Burstein and R. Pelavin. </author> <title> ``Hierarchical Channel Router,'' Integration, </title> <journal> the VLSI journal, </journal> <volume> Vol. 1, </volume> <pages> pp. 21-38, </pages> <year> 1983. </year>
Reference-contexts: Extensive studies have been carried out on the conventional channel routing problem, and there are several channel routers which can produce solutions that use at most one or two tracks beyond the channel density for most of the practical test examples. (For example, see <ref> [6, 22, 18, 2, 16] </ref>.) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections [7, 13, 19, 12]. These routers are called over-the-cell channel routers.
Reference: [3] <author> J. Cong, D. F. Wong and C. L. Liu. </author> <title> ``A New Approach to the Three Layer Channel Routing,'' </title> <booktitle> Proc. ICCAD-87, </booktitle> <pages> pp. 378-381, </pages> <month> Nov., </month> <year> 1987. </year>
Reference-contexts: Significant channel area reductions were achieved using our over-the-cell router. Our approach can easily be generalized to three layer channel routing simply by using a three layer channel router (see, for example, <ref> [3] </ref>) in our third step. In the first step of our algorithm, we assume that there are unlimited number of tracks available over the cells. A more realistic model would assume a fixed number of tracks over the cells as suggested in [7].
Reference: [4] <author> J. Cong and C. L. Liu. </author> <title> ``Over-the-Cell Channel Routing,'' </title> <booktitle> Proc. Int'l Conf. Computer-Aided Design, </booktitle> <pages> pp. 80-83, </pages> <year> 1988. </year>
Reference-contexts: As two and a half layer routing technology (using one layer of hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh An extended abstract of this paper was presented in ICCAD-88 <ref> [4] </ref>. -2- lower row of cells upper row of cells routing channel Fig. 1 Channel routing between cell rows. polysilicon and two layers of metal) becomes more and more widely used in standard cell design, routing with one extra layer over the cells becomes both practical and important.
Reference: [5] <author> J. Cong, B. Preas and C. L. Liu. </author> <title> ``Over-the-Cell Routing for Standard Cells,'' </title> <type> Manuscript, </type> <year> 1989. </year>
Reference-contexts: We can show that the first step can still be solved optimally with such restriction, but in O (c 3 ) time instead of in O (c 2 ) time. This result and discussions of other physical design restrictions will be presented in another paper <ref> [5] </ref>. The minimum density spanning forest problem formulated in Section 4 also plays an important role in some other layout design problems.
Reference: [6] <author> D. N. Deutsch. </author> <title> ``A Dogleg Channel Router,'' </title> <booktitle> Proc. 13th Desisgn Automation Conf., </booktitle> <pages> pp. 425-433, </pages> <year> 1976. </year>
Reference-contexts: Extensive studies have been carried out on the conventional channel routing problem, and there are several channel routers which can produce solutions that use at most one or two tracks beyond the channel density for most of the practical test examples. (For example, see <ref> [6, 22, 18, 2, 16] </ref>.) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections [7, 13, 19, 12]. These routers are called over-the-cell channel routers.
Reference: [7] <author> D. N. Deutsch and P. Glick. </author> <title> ``An Over-the-Cell Router,'' </title> <booktitle> Proc. 17th IEEE/ACM Design Automation Conf., </booktitle> <pages> pp. 32-39, </pages> <year> 1980. </year>
Reference-contexts: two tracks beyond the channel density for most of the practical test examples. (For example, see [6, 22, 18, 2, 16].) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections <ref> [7, 13, 19, 12] </ref>. These routers are called over-the-cell channel routers. In most cases, over-the-cell channel routers can complete the interconnections using fewer tracks in the channel than the density of the channel. <p> Unfortunately, they did not specify the channel density after over-the-cell routing. We conjecture that the results in [19] can be improved by using a more powerful channel router.) We were unable to compare our router with the over-the-cell routers in <ref> [7] </ref> and [13] due to a lack of common test examples. No experimental results were reported in [12]. 7. Conclusions and Remarks In this paper, we presented results on the complexity of each step involved in over-the-cell routing. <p> In the first step of our algorithm, we assume that there are unlimited number of tracks available over the cells. A more realistic model would assume a fixed number of tracks over the cells as suggested in <ref> [7] </ref>. We can show that the first step can still be solved optimally with such restriction, but in O (c 3 ) time instead of in O (c 2 ) time. This result and discussions of other physical design restrictions will be presented in another paper [5].
Reference: [8] <author> S. Even and A. Itai. </author> <title> ``Queues, Stackd, and Graphs,'' In: Theory of Machines and Computations, </title> <editor> A. Kohavi, ed. </editor> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1971, </year> <pages> pp. 71-86. </pages>
Reference-contexts: In general, the problem of finding a maximum independent set of a graph is NP-hard [9]. However, we can show that the intersection graph thus defined for any instance of TSOP is always a circle graph. A circle graph is defined as follows <ref> [8] </ref>: Let C be a set of chords in a circle. The corresponding circle graph G (C ) is an undirected graph in which each vertex represents a chord, and two vertices are connected if and only if the corresponding chords intersect (Fig. 8).
Reference: [9] <author> M. R. Garey and D. S. Johnson. </author> <title> Computer and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: Therefore, the problem of finding a routing solution for I that has a minimum number of hyperterminals is equivalent to the problem of finding a maximum independent set of G (I ). In general, the problem of finding a maximum independent set of a graph is NP-hard <ref> [9] </ref>. However, we can show that the intersection graph thus defined for any instance of TSOP is always a circle graph. A circle graph is defined as follows [8]: Let C be a set of chords in a circle. <p> Moreover, it is not difficult to see that I can be constructed in linear time. ` We shall conclude that MDSFP is NP-complete by showing that the minimum density representative problem is NP-complete <ref> [9] </ref>. Lemma 4-2 shall show that the minimum density representative problem is NP-complete. In fact, from the construction in the proof of Lemma 4-2, we can see that the minimum density representative problem remains NP-complete if each interval set contains at most two intervals. <p> Therefore, we can check if a given representative set is a valid solution in polynomial time. Thus, the minimum density representative problem is in NP. Next, we show that the minimum density representative problem is NP-complete by constructing a reduction from the monotone 3-SAT problem <ref> [9] </ref>. An instance of the monotone 3-SAT problem is a Boolean formula B in conjunctive normal form in which each clause contains either 3 un-negated variables or 3 negated variables.
Reference: [10] <author> F. Gavril. </author> <title> ``Algorithms for a Maximum Clique and a Maximum Independent Set of a Circle Graph,'' </title> <journal> Networks, </journal> <volume> Vol. 3, </volume> <pages> pp. 261-273, </pages> <year> 1973. </year>
Reference-contexts: It is not difficult to see that the corresponding circle graph is the intersection graph of I . It is known that the problem of finding a maximum independent set of a circle graph can be solved in polynomial time <ref> [10, 1, 20] </ref>. In particular, using the dynamic programming approach presented in [20], we have Lemma 3-3 TSOP can be solved optimally in O (c 2 ) time, where c is the number of columns. <p> Moreover, since we want to minimize the channel density, we need to minimize the density of the set of intervals associated with the edges in the spanning forest. Therefore, the net segment selection problem can be formulated as the following problem: -9- h 2 h 3 [6,8] <ref> [10, 10] </ref> [6,10] Fig. 9 The connected component induced by net 3 in Fig. 2.
Reference: [11] <author> E. M. Gold. </author> <title> ``Complexity of Automaton Indentification from Given Data,'' </title> <type> unpublished manuscript, </type> <year> 1974. </year>
Reference-contexts: The question is to determine whether there is a truth assignment to the variables in B such that B is satisfied (i.e., B = 1). The monotone 3-SAT problem was shown to be NP-complete <ref> [11] </ref>. Given an instance B of the monotone 3-SAT problem, we reduce B to an instance I of the minimum density representative problem in the following way. Assume that B contains n variables and m clauses.
Reference: [12] <author> G. Gudmundsson and S. Ntafos. </author> <title> ``Channel Routing with Superterminals,'' </title> <booktitle> Proc. 25th Allerton Conference on Computing, Control and Communication., </booktitle> <pages> pp. 375-376, </pages> <year> 1987. </year>
Reference-contexts: two tracks beyond the channel density for most of the practical test examples. (For example, see [6, 22, 18, 2, 16].) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections <ref> [7, 13, 19, 12] </ref>. These routers are called over-the-cell channel routers. In most cases, over-the-cell channel routers can complete the interconnections using fewer tracks in the channel than the density of the channel. <p> Since the conventional channel routing problem is known to be NP-hard [21], and the over-the-cell channel routing problem is a generalization of the conventional channel routing problem, it is easy to see that the over-the-cell channel routing problem is also NP-hard <ref> [12] </ref>. A common approach to the over-the-cell channel routing problem is to divide the problem into three steps as follows: (1) Routing over the cells, (2) Choosing net segments in the channel, (3) Routing in the channel. Obviously, the third step can be accomplished using a conventional channel router. <p> Obviously, the third step can be accomplished using a conventional channel router. Little was known about the complexity of the first step and the second step. Several heuristic algorithms have been proposed previously <ref> [13, 19, 12] </ref>. It was an open question whether there are efficient algorithms for solving the problems in the first step and the second step optimally. <p> The terminals in each hyperterminal are connected together by over-the-cell connections. We now want to choose net segments to connect all the hyperterminals of each net such that the channel density is minimized. We call this problem the net segment selection problem. Several heuristic algorithms were proposed in <ref> [14, 12] </ref>. However, the complexity of the problem was not known before. In this section, we show that the general net segment selection problem is NP-hard. Then we present an efficient heuristic algorithm to solve the problem. <p> We conjecture that the results in [19] can be improved by using a more powerful channel router.) We were unable to compare our router with the over-the-cell routers in [7] and [13] due to a lack of common test examples. No experimental results were reported in <ref> [12] </ref>. 7. Conclusions and Remarks In this paper, we presented results on the complexity of each step involved in over-the-cell routing. Combining these results, we designed an over-the-cell channel router which runs in O (c 2 logc ) time, where c is the number of columns in the routing problem.
Reference: [13] <author> H. E. Krohn. </author> <title> ``An Over-the-Cell Gate Array Channel Router,'' </title> <booktitle> Proc. 20th IEEE/ACM Design Automation Conf., </booktitle> <pages> pp. 665-670, </pages> <year> 1983. </year>
Reference-contexts: two tracks beyond the channel density for most of the practical test examples. (For example, see [6, 22, 18, 2, 16].) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections <ref> [7, 13, 19, 12] </ref>. These routers are called over-the-cell channel routers. In most cases, over-the-cell channel routers can complete the interconnections using fewer tracks in the channel than the density of the channel. <p> Obviously, the third step can be accomplished using a conventional channel router. Little was known about the complexity of the first step and the second step. Several heuristic algorithms have been proposed previously <ref> [13, 19, 12] </ref>. It was an open question whether there are efficient algorithms for solving the problems in the first step and the second step optimally. <p> Unfortunately, they did not specify the channel density after over-the-cell routing. We conjecture that the results in [19] can be improved by using a more powerful channel router.) We were unable to compare our router with the over-the-cell routers in [7] and <ref> [13] </ref> due to a lack of common test examples. No experimental results were reported in [12]. 7. Conclusions and Remarks In this paper, we presented results on the complexity of each step involved in over-the-cell routing.
Reference: [14] <author> H. W. Leong and C. L. Liu. </author> <title> ``A New Channel Routing Problem,'' </title> <booktitle> Proc. 20th IEEE/ACM Design Automation Conf.., </booktitle> <pages> pp. 584-590, </pages> <year> 1983. </year>
Reference-contexts: The terminals in each hyperterminal are connected together by over-the-cell connections. We now want to choose net segments to connect all the hyperterminals of each net such that the channel density is minimized. We call this problem the net segment selection problem. Several heuristic algorithms were proposed in <ref> [14, 12] </ref>. However, the complexity of the problem was not known before. In this section, we show that the general net segment selection problem is NP-hard. Then we present an efficient heuristic algorithm to solve the problem.
Reference: [15] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: Therefore, updating all the d (e )'s could take W (c 2 ) time. However, since the basic operation is to compute the density of a subset of intervals, by maintaining a segment tree <ref> [15] </ref> throughout the execution of the algorithm, we can update d (e ) in O (logc ) time after the deletion of an edge. (See [15] for details in using segment trees in the solution of interval related problems.) Hence, updating of all the d (e )'s can be done in <p> However, since the basic operation is to compute the density of a subset of intervals, by maintaining a segment tree <ref> [15] </ref> throughout the execution of the algorithm, we can update d (e ) in O (logc ) time after the deletion of an edge. (See [15] for details in using segment trees in the solution of interval related problems.) Hence, updating of all the d (e )'s can be done in O (c logc ) time. <p> In each of those iterations, identifying all the non-critical edges takes O (c ) time. Selecting and deleting the edge with the maximum relative density takes O (c ) time. Moreover, by maintaining a segment tree <ref> [15] </ref>, each density update can be done in O (logc ) time. Thus, updating all the relative densities takes O (c logc ) time. Therefore, each iteration of edge deletion takes O (c logc ) time. Thus, Line 4 takes O (c 2 logc ) time.
Reference: [16] <author> J. Reed, A. Sangiovanni-Vincentelli and M. Santomauro. </author> <title> ``A New Symbolic Channel Router: </title> <journal> YACR2,'' IEEE Trans. on Computer Aided Design of CIAS, </journal> <volume> Vol. CAD-4, No. 3, </volume> <pages> pp. 208-219, </pages> <year> 1985. </year>
Reference-contexts: Extensive studies have been carried out on the conventional channel routing problem, and there are several channel routers which can produce solutions that use at most one or two tracks beyond the channel density for most of the practical test examples. (For example, see <ref> [6, 22, 18, 2, 16] </ref>.) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections [7, 13, 19, 12]. These routers are called over-the-cell channel routers.
Reference: [17] <author> E. Reingold, J. Nievergelt and N. Deo. </author> <title> Combinatorial Algorithms: Theory and Practice. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1977. </year>
Reference-contexts: A depth-first search algorithm can be used to generate all the biconnected components in linear -15- time. (See <ref> [17] </ref> for a detailed description of the algorithm.) Next, we choose from X (N ) an edge e which has the maximum relative density and delete e from N . (We break ties by comparing edge lengths and choosing the longer one.) Clearly, selection and deletion of edge e can be <p> End. Fig. 14 Summary of over-the-cell channel routing algorithm. -16- Proof According to Theorem 3-2, Line 1 and Line 2 take O (c 2 ) time. Line 3 can be completed in O (c logc ) time using an optimal sorting algorithm <ref> [17] </ref>. According to Theorem 4-2, Line 4 consists of O (c ) iterations of edge deletion. In each of those iterations, identifying all the non-critical edges takes O (c ) time. Selecting and deleting the edge with the maximum relative density takes O (c ) time.
Reference: [18] <author> R. L. Rivest and C. M. Fiduccia. </author> <title> ``A 'Greedy' Channel Router,'' </title> <booktitle> Proc. 19th Design Automation Conf., </booktitle> <pages> pp. 418-424, </pages> <year> 1982. </year>
Reference-contexts: Extensive studies have been carried out on the conventional channel routing problem, and there are several channel routers which can produce solutions that use at most one or two tracks beyond the channel density for most of the practical test examples. (For example, see <ref> [6, 22, 18, 2, 16] </ref>.) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections [7, 13, 19, 12]. These routers are called over-the-cell channel routers. <p> We demonstrate that the minimum density spanning forest problem is NP-hard. We also present an efficient heuristic algorithm which produces very satisfactory results. Based on these algorithms together with a greedy channel router <ref> [18] </ref> for the third step, we design an efficient over-the-cell channel router which performs very well for all test examples. <p> After we have chosen the net segments for all the nets, we shall connect the terminals which are specified by the net selected segments using the routing area in the channel. Our problem is now reduced to the conventional two-layer channel routing problem. We use a greedy channel router <ref> [18] </ref> for this step. Other well known two layer channel routers may be used as well. 3.
Reference: [19] <author> Y. Shiraishi and Y. Sakemi. </author> <title> ``A Permeation Router,'' </title> <journal> IEEE Trans. Computer-Aided -19- Design, </journal> <volume> Vol. CAD-6, No. 3, </volume> <pages> pp. 462-471, </pages> <month> May, </month> <year> 1987. </year>
Reference-contexts: two tracks beyond the channel density for most of the practical test examples. (For example, see [6, 22, 18, 2, 16].) To further reduce the channel routing area, several channel routers have been designed to take advantage of the possibility of utilizing the routing area over the cells for interconnections <ref> [7, 13, 19, 12] </ref>. These routers are called over-the-cell channel routers. In most cases, over-the-cell channel routers can complete the interconnections using fewer tracks in the channel than the density of the channel. <p> Obviously, the third step can be accomplished using a conventional channel router. Little was known about the complexity of the first step and the second step. Several heuristic algorithms have been proposed previously <ref> [13, 19, 12] </ref>. It was an open question whether there are efficient algorithms for solving the problems in the first step and the second step optimally. <p> On the average, our routing solution attains a saving of 19.6% of the channel routing area when compared with the optimal two-layer channel routing solutions, and attains a saving of 9.6% when compared with the routing solutions obtained by the over-the-cell router in <ref> [19] </ref>. The rest of this paper presents these results in detail. In Section 2 we give precise formulations of the three steps. In Section 3 we present a polynomial time optimal algorithm for the first step. <p> This problem shall be discussed in the next section. Table 5-2 shows a comparison of our routing solutions with the optimal two-layer routing solutions and with the routing solutions produced by the over-the-cell router in <ref> [19] </ref> without using diffusion underpass (which is equivalent to our routing model). It was observed that our routing solutions are consistently better than the optimal two-layer routing solutions. <p> Our router also outperformed the over-the-cell router in <ref> [19] </ref>. On the average, our solutions use 9.6% fewer tracks in channel than the solutions in [19]. <p> Our router also outperformed the over-the-cell router in <ref> [19] </ref>. On the average, our solutions use 9.6% fewer tracks in channel than the solutions in [19]. In particular, for the Deutsch's Difficult Example, our routing solution (see Fig. 15) uses 2 fewer tracks in the channel than the optimal two-layer solution, and uses 3 fewer tracks in the channel than the solution in [19]. (Apparently, the channel router used in [19] is not a very powerful <p> our solutions use 9.6% fewer tracks in channel than the solutions in <ref> [19] </ref>. In particular, for the Deutsch's Difficult Example, our routing solution (see Fig. 15) uses 2 fewer tracks in the channel than the optimal two-layer solution, and uses 3 fewer tracks in the channel than the solution in [19]. (Apparently, the channel router used in [19] is not a very powerful one. For Deutsch's Difficult Example, after over-the-cell routing, their routing solution still used 20 tracks in channel. Unfortunately, they did not specify the channel density after over-the-cell routing. We conjecture that the results in [19] can be improved <p> channel than the solutions in <ref> [19] </ref>. In particular, for the Deutsch's Difficult Example, our routing solution (see Fig. 15) uses 2 fewer tracks in the channel than the optimal two-layer solution, and uses 3 fewer tracks in the channel than the solution in [19]. (Apparently, the channel router used in [19] is not a very powerful one. For Deutsch's Difficult Example, after over-the-cell routing, their routing solution still used 20 tracks in channel. Unfortunately, they did not specify the channel density after over-the-cell routing. We conjecture that the results in [19] can be improved by using a more powerful channel router.) <p> the solution in <ref> [19] </ref>. (Apparently, the channel router used in [19] is not a very powerful one. For Deutsch's Difficult Example, after over-the-cell routing, their routing solution still used 20 tracks in channel. Unfortunately, they did not specify the channel density after over-the-cell routing. We conjecture that the results in [19] can be improved by using a more powerful channel router.) We were unable to compare our router with the over-the-cell routers in [7] and [13] due to a lack of common test examples. No experimental results were reported in [12]. 7. <p> The minimum density spanning forest problem formulated in Section 4 also plays an important role in some other layout design problems. A further study to find more efficient and effective heuristic algorithms and to find optimal solutions to its subproblems is in progress. iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii optimal 2L solutions solutions in <ref> [19] </ref> our solutions improvement on improvement on Ex. # tracks # tracks # tracks opt 2L solutions solutions in [19] iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 1 12 10 10 16.7% 0.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3a 15 15 12 20.0% 20.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3b 17 16 13 23.5% 25.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3c 18 16 15 16.7% 6.3% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 4b 20 <p> A further study to find more efficient and effective heuristic algorithms and to find optimal solutions to its subproblems is in progress. iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii optimal 2L solutions solutions in <ref> [19] </ref> our solutions improvement on improvement on Ex. # tracks # tracks # tracks opt 2L solutions solutions in [19] iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 1 12 10 10 16.7% 0.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3a 15 15 12 20.0% 20.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3b 17 16 13 23.5% 25.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 3c 18 16 15 16.7% 6.3% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 4b 20 16 16 20.0% 0.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 5 20 14 14 30.0% 0.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii De 19 20 17 10.5% 15.0% iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii <p> c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c Table 5-2 Comparisons with the optimal two-layer routing solutions and the routing solutions by the over-the-cell router in <ref> [19] </ref>. -18- Acknowledgements We thank Prof. D. F. Wong and Prof. H. W. Leong for their assistance. We thank Dr. Deutsch for his helpful discussions. We thank the reviewers for their valuable comments and suggestions.
Reference: [20] <author> K. J. Supowit. </author> <title> ``Finding a Maximum Plannar Subset of a Set of Nets in a Channel,'' </title> <journal> IEEE Trans. on CAD of ICAS, </journal> <volume> Vol. CAD-6, No. 1, </volume> <pages> pp. 93-94, </pages> <month> Jan., </month> <year> 1987. </year>
Reference-contexts: It is not difficult to see that the corresponding circle graph is the intersection graph of I . It is known that the problem of finding a maximum independent set of a circle graph can be solved in polynomial time <ref> [10, 1, 20] </ref>. In particular, using the dynamic programming approach presented in [20], we have Lemma 3-3 TSOP can be solved optimally in O (c 2 ) time, where c is the number of columns. <p> It is known that the problem of finding a maximum independent set of a circle graph can be solved in polynomial time [10, 1, 20]. In particular, using the dynamic programming approach presented in <ref> [20] </ref>, we have Lemma 3-3 TSOP can be solved optimally in O (c 2 ) time, where c is the number of columns.
Reference: [21] <author> T. G. Szymanski. </author> <title> ``Dogleg Channel Routing is NP-Complete,'' </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> Vol. CAD-4, </volume> <pages> pp. 31-41, </pages> <year> 1985. </year>
Reference-contexts: Since the conventional channel routing problem is known to be NP-hard <ref> [21] </ref>, and the over-the-cell channel routing problem is a generalization of the conventional channel routing problem, it is easy to see that the over-the-cell channel routing problem is also NP-hard [12].

References-found: 21

