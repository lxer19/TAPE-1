URL: http://www.cs.berkeley.edu/~daw/krb+rsa.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~daw/ns-flaws.html
Root-URL: 
Title: Kerberos Plus RSA for World Wide Web Security  
Author: Don Davis 
Date: August 3, 1995  
Abstract: We show how to use Kerberos to enable its clients to interact securely with non-Kerberized World Wide Web servers. That is, our protocol does not require that the Web server be a member of a Kerberos realm, and also does not rely on time-synchronization between the participants. In our protocol, the Ker-beros client uses the Web server's public-key certificate to gain cryptographic credentials that conform to public-key authentication standards, and to SHTTP. The client does not perform any public-key encryptions. Further, the client is well-protected from a man-in-the-middle attack that weakens SSL. Our protocol conforms to the current specifications for the Kerberos protocol and for the Secure Hypertext Transfer Protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Davis and D. Geer, </author> <title> "Kerberos Security With Clocks Adrift," </title> <booktitle> Proc. 5 th USENIX Security Symposium (summer 1995). </booktitle>
Reference-contexts: We don't assume that the Kerberos clients are capable of public-key encryption operations. Finally, we don't assume that the Kerberos clients' clocks are synchronized, because of a recent finding that Ker-beros' requirement for synchronized clocks can be relaxed <ref> [1] </ref>. We assume that each commercial Web server will gain an RSA public-key certificate [11], that the server will support S-HTTP, and that the server can perform a few styles of symmetric-key encryption, including DES, 3DES, and RC4. <p> When Alice logs in, KRB can use her password key to securely issue a session-key for her 1 For clarity, we avoid mentioning the Ticket-Granting Service [8] by name, and we omit the details of how to avoid synchronizing clocks <ref> [1] </ref>. to use later: A ! KRB : A; KRB (1) KRB ! A : fKRB; L; K a;krb g K a ; fA; L; K a;krb g K krb (2) Alice's request says that she wants a ticket for the Kerberos service, The Kerberos server replies with two similar encrypted
Reference: [2] <author> D. Davis and R. Swick, </author> <title> "Workstation Services and Kerberos Authentication at Project Athena," </title> <type> LCS Technical Memorandum TM-424, </type> <institution> MIT Lab. for Comp. Sci. </institution> <month> (February </month> <year> 1990). </year>
Reference-contexts: a new session key and ticket: A ! KRB : B; C b ; C ca ; T a;krb ; ftimeg K a;krb (5) KRB ! A : fB; L; K a;b g K a;krb ; krb ; C krb (6) Alice's request is essentially a standard user-to-user ticket request <ref> [2, 8] </ref>, except that instead of sending a TGT T b;krb for Bob, she sends his certificate-chain. The last part of her request is an encrypted times--tamp. To service Alice's request, the Kerberos server first validates Bob's public key P b with his Certification Authority's key P ca .
Reference: [3] <author> D. Davis and R. Swick, </author> <title> "Network Security via Private-Key Certificates," </title> <booktitle> USENIX 3 rd Security Symposium Proceedings, </booktitle> <address> (Baltimore; Sept. </address> <note> '92). Also in ACM Operating Systems Review, v.24, </note> <month> 4 (Oct. </month> <year> 1990). </year>
Reference-contexts: Neuman et al. have preliminarily proposed in an Internet Draft that Kerberos can help its clients manage their RSA keys [9]. Finally, the present paper's protocol is derived from a protocol that we presented in <ref> [3] </ref>. 2 Problem Statement We assume that each Web user will share a password with at least one Kerberos service, which typically will be administered by the user's commercial Internet-access provider. Some users might get their net access and credentials via an employer or a university network. <p> Since most home customers will probably use their online-access providers' browsers, this really means that the OA providers won't have to 2 This hybrid use of Kerberos with RSA and a symmetric-key algorithm was proposed in <ref> [3] </ref>. pass per-client fees for RSA certificates and licensing on to their customers. Our protocol concentrates all RSA encryption operations at the servers. The Web-ticket servers are easily replicated, so this concentration does not create a bandwidth bottleneck.
Reference: [4] <author> International Telegraph and Telephone Consultative Committee (CCITT). </author> <title> Recommendation X.509: The Directory Authentication Framework. In Data Communications Network Directory, </title> <booktitle> Recommendations X.500-X.521, </booktitle> <pages> pp. 48-81. </pages> <note> Vol. 8, Fascicle 8.8 of CCITT Blue Book. </note> <institution> Geneva: International Telecommunication Union, </institution> <year> 1989. </year>
Reference-contexts: Similarly, C ca is CA's certificate; in practice, Bob may send Alice a chain of CA certificates, and not just one <ref> [4] </ref>.
Reference: [5] <author> S.P. Miller, B.C. Neuman, J.I. Schiller, and J.H. Saltzer, </author> <title> Project Athena Technical Plan, Sec. E.2.1: "Kerberos Authentication and Authorization System," (Cambridge, Mass.) M.I.T. Project Athena internal document, </title> <journal> Dec. </journal> <volume> 21, </volume> <year> 1987. </year>
Reference-contexts: On the one hand, like the Internet, the Web as a whole is too big to bring into a centrally-administered key-distribution system like Kerberos. <ref> [5, 13, 8] </ref> Indeed, the whole point of the Web is to bring together clients and servers across great distances, so it seems that public-key security is the only natural model, and the only security model that can be made to work.
Reference: [6] <institution> M.I.T. </institution> <note> Information Systems, anonymous ftp distibution site for Kerberos software [athena-dist.mit.edu:pub/kerberos]. </note>
Reference-contexts: Similarly, the Kerberos server (or the Web-ticket server) can manage the public-key Certificate Revocation List for Alice. Our proposal does present a minor difficulty: MIT's current Kerberos version 5.5 fi source-distribution <ref> [6] </ref> is not conveniently able to express the encryption-type of Alice's "hybrid" ticket. The MIT code currently assumes that a ticket has one encryption-type, which represents both the algorithm for decrypting the ticket, and the algorithm for which the ticket's session-key is intended.
Reference: [7] <author> Netscape Communications, </author> <title> "Secure Socket Layer Reference Document," Unofficial Internet Draft. </title>
Reference-contexts: On the other hand, though, it's unrealistic to suppose that all Web clients will have public-key certificates any time soon. Public-key cryptography costs more money and more cycles than many home-computer users want to spend on an invisible benefit. Netscape's Secure Socket Layer protocol <ref> [7] </ref> attempts to finesse this problem by waiving the client's authentication to the server, so that only the server needs a public-key certificate. This approach pre fl Affiliations: Independent Consultant, 1318 Comm.
Reference: [8] <author> C. Neuman and J. Kohl, </author> <title> The Kerberos Network Authentication Service (V5), Internet RFC 1510, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: On the one hand, like the Internet, the Web as a whole is too big to bring into a centrally-administered key-distribution system like Kerberos. <ref> [5, 13, 8] </ref> Indeed, the whole point of the Web is to bring together clients and servers across great distances, so it seems that public-key security is the only natural model, and the only security model that can be made to work. <p> Now, suppose Alice is a client of a Kerberos server KRB, so that she shares a password key K a with the server. When Alice logs in, KRB can use her password key to securely issue a session-key for her 1 For clarity, we avoid mentioning the Ticket-Granting Service <ref> [8] </ref> by name, and we omit the details of how to avoid synchronizing clocks [1]. to use later: A ! KRB : A; KRB (1) KRB ! A : fKRB; L; K a;krb g K a ; fA; L; K a;krb g K krb (2) Alice's request says that she wants <p> a new session key and ticket: A ! KRB : B; C b ; C ca ; T a;krb ; ftimeg K a;krb (5) KRB ! A : fB; L; K a;b g K a;krb ; krb ; C krb (6) Alice's request is essentially a standard user-to-user ticket request <ref> [2, 8] </ref>, except that instead of sending a TGT T b;krb for Bob, she sends his certificate-chain. The last part of her request is an encrypted times--tamp. To service Alice's request, the Kerberos server first validates Bob's public key P b with his Certification Authority's key P ca .
Reference: [9] <author> C. Neuman, B. Tung, and J. Wray, </author> <title> "Public Key Cryptography for Initial Authentication in Ker-beros," Internet Draft RFC, updates RFC 1510 (expires Sept. </title> <year> 1995). </year>
Reference-contexts: Other mergers between Kerberos and RSA have been proposed. MIT's Schiller and Atkins have built a Kerberized service that certifies PGP public keys [15] for Project Athena's users [12]. Neuman et al. have preliminarily proposed in an Internet Draft that Kerberos can help its clients manage their RSA keys <ref> [9] </ref>. Finally, the present paper's protocol is derived from a protocol that we presented in [3]. 2 Problem Statement We assume that each Web user will share a password with at least one Kerberos service, which typically will be administered by the user's commercial Internet-access provider.
Reference: [10] <author> E. Rescorla and A. Schiffman, </author> <title> "Secure Hypertext Transfer Protocol," Internet Draft RFC (May '95). </title>
Reference-contexts: This approach pre fl Affiliations: Independent Consultant, 1318 Comm. Ave #16 Allston, MA 02134; don@mit.edu vents the Web server from detecting credit-card fraud, which puts all credit-card holders at risk. CommerceNet's proposed standard, S-HTTP <ref> [10] </ref>, provides for full mutual authentication, and supports several varieties of public-key and private-key cryptography.
Reference: [11] <author> R. Rivest, A. Shamir, L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public-Key Cryptosystems," </title> <journal> Comm. ACM, v. </journal> <volume> 21, 2, </volume> <month> Feb. </month> <pages> '78, pp. 120-126. </pages>
Reference-contexts: Finally, we don't assume that the Kerberos clients' clocks are synchronized, because of a recent finding that Ker-beros' requirement for synchronized clocks can be relaxed [1]. We assume that each commercial Web server will gain an RSA public-key certificate <ref> [11] </ref>, that the server will support S-HTTP, and that the server can perform a few styles of symmetric-key encryption, including DES, 3DES, and RC4.
Reference: [12] <author> J.I. Schiller, D. Atkins, </author> <title> "Scaling the Web of Trust: Combining Kerberos and PGP to Provide Large Scale Authentication," </title> <booktitle> USENIX Winter Conference Proceedings, </booktitle> <month> January </month> <year> 1995. </year>
Reference-contexts: Our protocol combines Kerberos' performance advantages with public-key's terrific geographic reach. Other mergers between Kerberos and RSA have been proposed. MIT's Schiller and Atkins have built a Kerberized service that certifies PGP public keys [15] for Project Athena's users <ref> [12] </ref>. Neuman et al. have preliminarily proposed in an Internet Draft that Kerberos can help its clients manage their RSA keys [9].
Reference: [13] <author> J.G. Steiner, C. Neuman, and J.I. Schiller, </author> <title> "Kerberos: An Authentication Service for Open Network Systems", </title> <booktitle> USENIX Winter Conference Proceedings, </booktitle> <month> February </month> <year> 1988. </year> <month> [athena-dist.mit.edu:pub/kerberos/doc/usenix.PS] </month>
Reference-contexts: On the one hand, like the Internet, the Web as a whole is too big to bring into a centrally-administered key-distribution system like Kerberos. <ref> [5, 13, 8] </ref> Indeed, the whole point of the Web is to bring together clients and servers across great distances, so it seems that public-key security is the only natural model, and the only security model that can be made to work.
Reference: [14] <institution> Ted Ts'o of MIT Information Systems, </institution> <type> personal communication. </type>
Reference-contexts: This is not a major problem, though, because this portion of the spec is too vague for other reasons, and needs to be reworked <ref> [14] </ref>. 6 Conclusion Our proposal judiciously uses the strengths of symmetric-key and public-key cryptography to solve the problems for which they are best suited.
Reference: [15] <author> P. Zimmermann, </author> <title> Official PGP User's Guide, </title> <publisher> Cambridge, Mass.:MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: Our protocol combines Kerberos' performance advantages with public-key's terrific geographic reach. Other mergers between Kerberos and RSA have been proposed. MIT's Schiller and Atkins have built a Kerberized service that certifies PGP public keys <ref> [15] </ref> for Project Athena's users [12]. Neuman et al. have preliminarily proposed in an Internet Draft that Kerberos can help its clients manage their RSA keys [9].
References-found: 15

