URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3198/3198.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Beyond Uniformity and Independence Analysis of R-trees Using the Concept of Fractal Dimension  
Author: Christos Faloutsos and Ibrahim Kamel 
Date: February 24, 1994  
Address: College Park  
Affiliation: Department of Computer Science and Institute for Systems Research (ISR) Univ. of Maryland at  
Abstract: We propose the concept of fractal dimension of a set of points, in order to quantify the deviation from the uniformity distribution. Using measurements on real data sets (road intersections of U.S. counties, star coordinates from NASA's Infrared-Ultraviolet Explorer etc.) we provide evidence that real data indeed are skewed, and, moreover, we show that they behave as mathematical fractals, with a measurable, non-integer fractal dimension. Armed with this tool, we then show its practical use in predicting the performance of spatial access methods, and specifically of the R-trees. We provide the first analysis of R-trees for skewed distributions of points: We develop a formula that estimates the number of disk accesses for range queries, given only the fractal dimension of the point set, and its count. Experiments on real data sets show that the formula is very accurate: the relative error is usually below 5%, and it rarely exceeds 10%. We believe that the fractal dimension will help replace the uniformity and independence assumptions, allowing more accurate analysis for any spatial access method, as well as better estimates for query optimization on multi-attribute queries. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Walid G. Aref and Hanan Samet. </author> <title> Optimization strategies for spatial query processing. </title> <booktitle> Proc. of VLDB (Very Large Data Bases), </booktitle> <pages> pages 81-90, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: A closely related problem is the estimation of selectivity (ie., number of qualifying points) for range queries: this is useful in the query optimization in an RDBMS with multidimensional queries [14] or in a GIS <ref> [1] </ref>. The traditional assumptions are the uniformity and independence assumption, which make the analysis tractable. However, these assumptions do not hold on real data; moreover, they lead to pessimistic estimates [5]. For a single attribute, the uniformity assumption has been relaxed, eg., [10], typically using the Zipf distribution [24].
Reference: [2] <author> Manish Arya, William Cody, Christos Faloutsos, Joel Richardson, and Arthur Toga. Qbism: </author> <title> a prototype 3-d medical image database system. </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 16(1) </volume> <pages> 38-42, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Inc. and Thinking Machines Inc. 1 viewed as points in attribute space; geographic information systems (GIS) [21] contain point data, such as cities on a 2-dimensional map; medical image databases with, eg., 3-dimensional MRI brain scans, require the storage and retrieval of point-sets, such as digitized surfaces of brain structures <ref> [2] </ref>, etc. For the balance of this work, the term point-set and dataset will be used interchangeably. An interesting problem is the estimation of the search effort for range queries, when the points are stored in a spatial access method (SAM), such as an R-tree.
Reference: [3] <author> Manish Arya, William Cody, Christos Faloutsos, Joel Richardson, and Arthur Toga. Qbism: </author> <title> Extending a dbms to support 3d medical images. </title> <booktitle> Tenth Int. Conf. on Data Engineering (ICDE), </booktitle> <month> February </month> <year> 1994. </year> <note> (to appear). </note>
Reference-contexts: We believe that the fractal dimension will become a powerful modeling tool for multi-variate distributions in relational and spatial databases. Future work could examine its potential applications, such as: 14 * Analysis of other spatial access methods, such as quadtrees/octrees, grid files etc. For ex-ample, in <ref> [3] </ref> we stored the 3-dimensional MRI-scans of human brains using an oct-tree decomposition; we observed that the number of octants required to cover the surface of human brains increased exponentially with the resolution, with an exponent of 2.6 (close to the fractal dimension 2.7 of mammal brains [13],p.113).
Reference: [4] <author> N. Beckmann, H.-P. Kriegel, R. Schneider, and B. Seeger. </author> <title> The r*-tree: an efficient and robust access method for points and rectangles. </title> <booktitle> ACM SIGMOD, </booktitle> <pages> pages 322-331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Even in simulation studies, researchers on spatial access methods and multi-attribute query optimization are forced to use ad-hoc, nonuniform distributions, such as the gaussian distribution [15], some sort of clustered distributions (with points clustering around uniformly distributed sites [17], or points clustering around curves, like the sinusoidal curve <ref> [4] </ref>), or even to obey the independence assumption anyway [14]. Although non-uniform, it is unclear whether these distributions resemble real distributions. Evidence that real distributions violate both assumptions is overwhelming. Figure 1 provides a counter-example for both assumptions, using two real datasets. <p> This way, the R-tree can guarantee at least 50% space utilization and at the same time remain balanced. Subsequent work on R-trees includes the packed- [19] and Hilbert-packed R-trees [12], the R + -tree [23], R-trees using Minimum Bounding Polygons [11] and the R fl -tree <ref> [4] </ref>. The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes. The last part in this section is a summary of previous attempts to analyze the R-trees. <p> all levels) retrieved by a query ~q j side of the ()square MBR of a node at level j u avg. node utilization Table 2: Summary of Symbols and Definitions 5 Experimental results We carried out several experiments, to compare our analytical results with the results of an R*- tree <ref> [4] </ref>. The R*-tree was written in C under UNIX and the experiments ran on DEC 5000 workstation. Except for the 'WORLD' dataset, which was too small, we used all the real and synthetic datasets that we used in section 3. Their characteristics are summarized in Table 1.
Reference: [5] <author> S. Christodoulakis. </author> <title> Implication of certain assumptions in data base performance evaluation. </title> <journal> ACM TODS, </journal> <month> June </month> <year> 1984. </year> <month> 15 </month>
Reference-contexts: The traditional assumptions are the uniformity and independence assumption, which make the analysis tractable. However, these assumptions do not hold on real data; moreover, they lead to pessimistic estimates <ref> [5] </ref>. For a single attribute, the uniformity assumption has been relaxed, eg., [10], typically using the Zipf distribution [24].
Reference: [6] <author> C. Faloutsos, T. Sellis, and N. Roussopoulos. </author> <title> Analysis of object oriented spatial access meth-ods. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 426-439 426-439, </pages> <month> May </month> <year> 1987. </year> <note> also available as SRC-TR-87-30, UMIACS-TR-86-27, CS-TR-1781. </note>
Reference-contexts: The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes. The last part in this section is a summary of previous attempts to analyze the R-trees. In <ref> [6] </ref> we assumed that the points are uniformly distributed in the address space. Recently, we provided formulas [12] that assume that the R-tree has been built and that we can measure the MBR of each node of the R-tree. The results are as follows. <p> This is the second contribution of this work: Despite the fact that R-trees are known for almost a decade, there has been only one attempt for their analysis <ref> [6] </ref>; even that one used the uniformity assumption, pressumably leading to pessimistic estimates. The current analysis superseeds the old one, since, according to (Observation 3), the uniform case is just a special case of a fractal distribution.
Reference: [7] <author> Christos Faloutsos and H.V. Jagadish. </author> <title> On b-tree indices for skewed distributions. </title> <booktitle> In 18th VLDB Conference, </booktitle> <pages> pages 363-374, </pages> <address> Vancouver, British Columbia, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Distributions of real attributes indeed follow the Zipf distribution or the generalized Zipf distribution: for example, word frequencies in the English language (as well as other languages); salaries [24]; first names and last names of people <ref> [7] </ref>, etc. However, no attempt has been made to model multi-dimensional distributions. Theoretical analyses in such cases assume that points are uniformly distributed in the address space [6],[1], which also implies that the attributes are uncorrelated.
Reference: [8] <author> I. </author> <title> Gargantini. An effective way to represent quadtrees. </title> <journal> Comm. of ACM (CACM), </journal> <volume> 25(12) </volume> <pages> 905-910, </pages> <month> December </month> <year> 1982. </year>
Reference-contexts: Section 5 gives the experimental results and Section 6 lists the conclusions. 3 2 Background In this section, we provide a brief description of R-trees [9], which will be the SAM that we use to illustrate our analysis. Additional SAMs include the quad-tree based methods <ref> [8, 17] </ref> and grid file and its variants [16]; see [20] for a survey. We focus on the R-tree because it seems to be one of the most successful methods. The original R-tree [9] was suggested by Guttman; it is the extension of the B-tree for multidimensional objects.
Reference: [9] <author> A. Guttman. R-trees: </author> <title> a dynamic index structure for spatial searching. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 47-57, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: Section 3 gives the definition of the fractal dimension, along with examples from real data. Section 4 presents the analysis. Section 5 gives the experimental results and Section 6 lists the conclusions. 3 2 Background In this section, we provide a brief description of R-trees <ref> [9] </ref>, which will be the SAM that we use to illustrate our analysis. Additional SAMs include the quad-tree based methods [8, 17] and grid file and its variants [16]; see [20] for a survey. We focus on the R-tree because it seems to be one of the most successful methods. <p> Additional SAMs include the quad-tree based methods [8, 17] and grid file and its variants [16]; see [20] for a survey. We focus on the R-tree because it seems to be one of the most successful methods. The original R-tree <ref> [9] </ref> was suggested by Guttman; it is the extension of the B-tree for multidimensional objects. A geometric object is represented by its minimum bounding rectangle (MBR).
Reference: [10] <author> Yannis E. Ioannidis and Stavros Christodoulakis. </author> <title> On the propagation of errors in the size of join results. </title> <booktitle> Proc. of ACM SIGMOD, </booktitle> <pages> pages 268-277, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The traditional assumptions are the uniformity and independence assumption, which make the analysis tractable. However, these assumptions do not hold on real data; moreover, they lead to pessimistic estimates [5]. For a single attribute, the uniformity assumption has been relaxed, eg., <ref> [10] </ref>, typically using the Zipf distribution [24]. Distributions of real attributes indeed follow the Zipf distribution or the generalized Zipf distribution: for example, word frequencies in the English language (as well as other languages); salaries [24]; first names and last names of people [7], etc.
Reference: [11] <author> H. V. Jagadish. </author> <title> Spatial search with polyhedra. </title> <booktitle> Proc. Sixth IEEE Int'l Conf. on Data Engineering, </booktitle> <month> February </month> <year> 1990. </year>
Reference-contexts: This way, the R-tree can guarantee at least 50% space utilization and at the same time remain balanced. Subsequent work on R-trees includes the packed- [19] and Hilbert-packed R-trees [12], the R + -tree [23], R-trees using Minimum Bounding Polygons <ref> [11] </ref> and the R fl -tree [4]. The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes.
Reference: [12] <author> Ibrahim Kamel and Christos Faloutsos. </author> <title> On packing r-trees. </title> <booktitle> Second Int. Conf. on Information and Knowledge Management (CIKM), </booktitle> <month> November </month> <year> 1993. </year> <note> to appear. </note>
Reference-contexts: The main innovation in the R-tree is that father nodes are allowed to overlap. This way, the R-tree can guarantee at least 50% space utilization and at the same time remain balanced. Subsequent work on R-trees includes the packed- [19] and Hilbert-packed R-trees <ref> [12] </ref>, the R + -tree [23], R-trees using Minimum Bounding Polygons [11] and the R fl -tree [4]. The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes. <p> The last part in this section is a summary of previous attempts to analyze the R-trees. In [6] we assumed that the points are uniformly distributed in the address space. Recently, we provided formulas <ref> [12] </ref> that assume that the R-tree has been built and that we can measure the MBR of each node of the R-tree. The results are as follows. Consider the n-th node of the tree, and let its MBR be x 1;n fi : : : fi x D;n . <p> Proof: See <ref> [12] </ref>. A similar analysis, mainly focusing on square queries, was published independently in [18]. Notice that Theorem 1 allows us to calculate the node accesses for any level of the tree: we only need to restrict the summation over the nodes of the level (s) of interest.
Reference: [13] <author> B. Mandelbrot. </author> <title> Fractal Geometry of Nature. W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: Based on the above, we have <ref> [13] </ref>: Observation 1 For Euclidean objects, their fractal dimension reduces to their Euclidean dimension. Thus, lines, line segments, circles, and all the standard curves have d=1; planes, disks and standard surfaces have d=2; euclidian volumes in D-dimensional space have d = D. 7 Example 2. <p> This is an example of a fractal with a non-integer d. Figure 3-(c) shows the boxcount--side plot for the SIERPINSKI set of points of Figure 3-(b) The line has slope (-)1.59, while the theoretical number is log 3= log 2 = 1.5849 <ref> [13] </ref>. The plot also contains two lines. <p> constitutes a simple way to describe the non-uniformity of the data set, using just a single number. * it is applicable to real point-sets, as our experiments showed. * it includes the uniform distribution as a special case (d = D). * it is based on a well developed theory <ref> [13, 22] </ref> In addition to the above theoretically pleasing properties, we showed that the fractal dimension has practical applications in the performance analysis of spatial access methods on real datasets.
Reference: [14] <author> M. Muralikrishna and David J. DeWitt. </author> <title> Equi-depth histograms for estimating selectivity factors for multi-dimensional queries. </title> <booktitle> In Proc. ACM SIGMOD, </booktitle> <pages> pages 28-36, </pages> <address> Chicago, IL, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: A closely related problem is the estimation of selectivity (ie., number of qualifying points) for range queries: this is useful in the query optimization in an RDBMS with multidimensional queries <ref> [14] </ref> or in a GIS [1]. The traditional assumptions are the uniformity and independence assumption, which make the analysis tractable. However, these assumptions do not hold on real data; moreover, they lead to pessimistic estimates [5]. <p> access methods and multi-attribute query optimization are forced to use ad-hoc, nonuniform distributions, such as the gaussian distribution [15], some sort of clustered distributions (with points clustering around uniformly distributed sites [17], or points clustering around curves, like the sinusoidal curve [4]), or even to obey the independence assumption anyway <ref> [14] </ref>. Although non-uniform, it is unclear whether these distributions resemble real distributions. Evidence that real distributions violate both assumptions is overwhelming. Figure 1 provides a counter-example for both assumptions, using two real datasets.
Reference: [15] <author> R. Nelson and H. Samet. </author> <title> A population analysis of quadtrees with variable node size. </title> <type> Tech. </type> <note> Report CAR-TR-241, also CS-TR-1740, </note> <institution> DCR-86-05557, Computer Science Department, Univ. of Maryland, College Park, </institution> <month> December </month> <year> 1986. </year>
Reference-contexts: Theoretical analyses in such cases assume that points are uniformly distributed in the address space [6],[1], which also implies that the attributes are uncorrelated. Even in simulation studies, researchers on spatial access methods and multi-attribute query optimization are forced to use ad-hoc, nonuniform distributions, such as the gaussian distribution <ref> [15] </ref>, some sort of clustered distributions (with points clustering around uniformly distributed sites [17], or points clustering around curves, like the sinusoidal curve [4]), or even to obey the independence assumption anyway [14]. Although non-uniform, it is unclear whether these distributions resemble real distributions.
Reference: [16] <author> J. Nievergelt, H. Hinterberger, and K.C. Sevcik. </author> <title> The grid file: an adaptable, symmetric multikey file structure. </title> <journal> ACM TODS, </journal> <volume> 9(1) </volume> <pages> 38-71, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: Additional SAMs include the quad-tree based methods [8, 17] and grid file and its variants <ref> [16] </ref>; see [20] for a survey. We focus on the R-tree because it seems to be one of the most successful methods. The original R-tree [9] was suggested by Guttman; it is the extension of the B-tree for multidimensional objects.
Reference: [17] <author> J. Orenstein. </author> <title> Spatial query processing in an object-oriented database system. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <pages> pages 326-336, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: Even in simulation studies, researchers on spatial access methods and multi-attribute query optimization are forced to use ad-hoc, nonuniform distributions, such as the gaussian distribution [15], some sort of clustered distributions (with points clustering around uniformly distributed sites <ref> [17] </ref>, or points clustering around curves, like the sinusoidal curve [4]), or even to obey the independence assumption anyway [14]. Although non-uniform, it is unclear whether these distributions resemble real distributions. Evidence that real distributions violate both assumptions is overwhelming. <p> Section 5 gives the experimental results and Section 6 lists the conclusions. 3 2 Background In this section, we provide a brief description of R-trees [9], which will be the SAM that we use to illustrate our analysis. Additional SAMs include the quad-tree based methods <ref> [8, 17] </ref> and grid file and its variants [16]; see [20] for a survey. We focus on the R-tree because it seems to be one of the most successful methods. The original R-tree [9] was suggested by Guttman; it is the extension of the B-tree for multidimensional objects.
Reference: [18] <author> B. Pagel, H. Six, H. Toben, and P. Widmayer. </author> <title> Towards an analysis of range query performance. </title> <booktitle> In Proc. PODS 93, </booktitle> <pages> pages 214-221, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1993. </year> <month> 16 </month>
Reference-contexts: Proof: See [12]. A similar analysis, mainly focusing on square queries, was published independently in <ref> [18] </ref>. Notice that Theorem 1 allows us to calculate the node accesses for any level of the tree: we only need to restrict the summation over the nodes of the level (s) of interest.
Reference: [19] <author> N. Roussopoulos and D. Leifker. </author> <title> Direct spatial search on pictorial databases using packed r-trees. </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <month> May </month> <year> 1985. </year>
Reference-contexts: The main innovation in the R-tree is that father nodes are allowed to overlap. This way, the R-tree can guarantee at least 50% space utilization and at the same time remain balanced. Subsequent work on R-trees includes the packed- <ref> [19] </ref> and Hilbert-packed R-trees [12], the R + -tree [23], R-trees using Minimum Bounding Polygons [11] and the R fl -tree [4]. The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes.
Reference: [20] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Additional SAMs include the quad-tree based methods [8, 17] and grid file and its variants [16]; see <ref> [20] </ref> for a survey. We focus on the R-tree because it seems to be one of the most successful methods. The original R-tree [9] was suggested by Guttman; it is the extension of the B-tree for multidimensional objects. A geometric object is represented by its minimum bounding rectangle (MBR).
Reference: [21] <author> H. Samet. </author> <title> Applications of Spatial Data Structures Computer Graphics, Image Processing and GIS. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: appear in several database applications: records in relational DBMSs can be fl This research was partially funded by the National Science Foundation under Grants IRI-9205273 and IRI-8958546 (PYI), with matching funds from EMPRESS Software Inc. and Thinking Machines Inc. 1 viewed as points in attribute space; geographic information systems (GIS) <ref> [21] </ref> contain point data, such as cities on a 2-dimensional map; medical image databases with, eg., 3-dimensional MRI brain scans, require the storage and retrieval of point-sets, such as digitized surfaces of brain structures [2], etc.
Reference: [22] <author> Manfred Schroeder. </author> <title> Fractals, Chaos, Power Laws: Minutes From an Infinite Paradise. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: The dimensionality D of the address space is 5 (b) (c) (c) The slope of the solid line gives the fractal dimension of Sierpinski triangle 1.59 defined as the embedding dimension. The fractal dimension d, (or, more accurately, the box-counting fractal dimension) is defined as follows <ref> [22] </ref>: Divide the D-dimensional space into (hyper-)cubic grid cells of side r. Let N (r) denote the number of cells that are penetrated by the fractal (i.e., contain 1 or more points of it). <p> Its usefulness lies in the fact that, if the point-set is self-similar, the plot is almost a straight line. Moreover, the slope of the line is the (negated) fractal dimension of the point-set. This is the standard way to measure the fractal dimension for real point-sets <ref> [22] </ref>: Definition 1 For a point-set that has the self-similarity property, its fractal dimension d is measured as d = @ log (r) = constant (5) 6 Corollary 1 For a point-set with the self-similarity property, we have N (r) = K=r d (6) where K is an integration constant. <p> constitutes a simple way to describe the non-uniformity of the data set, using just a single number. * it is applicable to real point-sets, as our experiments showed. * it includes the uniform distribution as a special case (d = D). * it is based on a well developed theory <ref> [13, 22] </ref> In addition to the above theoretically pleasing properties, we showed that the fractal dimension has practical applications in the performance analysis of spatial access methods on real datasets.
Reference: [23] <author> T. Sellis, N. Roussopoulos, and C. Faloutsos. </author> <title> The r+ tree: a dynamic index for multidimensional objects. </title> <booktitle> In Proc. 13th International Conference on VLDB, </booktitle> <pages> pages 507-518, </pages> <address> Eng-land,, </address> <month> September </month> <year> 1987. </year> <note> also available as SRC-TR-87-32, UMIACS-TR-87-3, CS-TR-1795. </note>
Reference-contexts: The main innovation in the R-tree is that father nodes are allowed to overlap. This way, the R-tree can guarantee at least 50% space utilization and at the same time remain balanced. Subsequent work on R-trees includes the packed- [19] and Hilbert-packed R-trees [12], the R + -tree <ref> [23] </ref>, R-trees using Minimum Bounding Polygons [11] and the R fl -tree [4]. The latter seems to give the best search times, mainly thanks to the idea of deferring the splits by 'force-reinserting' some of the entries of the overflowing nodes.
Reference: [24] <author> G.K. Zipf. </author> <title> Human Behavior and Principle of Least Effort: an Introduction to Human Ecology. </title> <publisher> Addison Wesley, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1949. </year> <month> 17 </month>
Reference-contexts: The traditional assumptions are the uniformity and independence assumption, which make the analysis tractable. However, these assumptions do not hold on real data; moreover, they lead to pessimistic estimates [5]. For a single attribute, the uniformity assumption has been relaxed, eg., [10], typically using the Zipf distribution <ref> [24] </ref>. Distributions of real attributes indeed follow the Zipf distribution or the generalized Zipf distribution: for example, word frequencies in the English language (as well as other languages); salaries [24]; first names and last names of people [7], etc. However, no attempt has been made to model multi-dimensional distributions. <p> For a single attribute, the uniformity assumption has been relaxed, eg., [10], typically using the Zipf distribution <ref> [24] </ref>. Distributions of real attributes indeed follow the Zipf distribution or the generalized Zipf distribution: for example, word frequencies in the English language (as well as other languages); salaries [24]; first names and last names of people [7], etc. However, no attempt has been made to model multi-dimensional distributions. Theoretical analyses in such cases assume that points are uniformly distributed in the address space [6],[1], which also implies that the attributes are uncorrelated.
References-found: 24

