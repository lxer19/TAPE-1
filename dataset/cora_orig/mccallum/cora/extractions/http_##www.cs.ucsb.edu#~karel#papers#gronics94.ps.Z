URL: http://www.cs.ucsb.edu/~karel/papers/gronics94.ps.Z
Refering-URL: http://www.cs.ucsb.edu/~karel/papers/gronics94.html
Root-URL: http://www.cs.ucsb.edu
Email: kjdriese@vnet3.vub.ac.be  
Title: Compressing Sparse Tables using a Genetic Algorithm  
Author: Karel Driesen 
Address: Pleinlaan 2 B-1050 Brussels  
Affiliation: Programming Technology Lab Faculty of Sciences Vrije Universiteit Brussel  
Abstract: 0. Abstract A genetic algorithm is applied on a sparse table compression technique. The latter takes the form of a variant of the knapsack problem. Since this problem is NP-complete, weak search strategies are promising in giving acceptable solutions in general. The genetic algorithm, with carefully constructed genotype and genetic operators, shows good performance on random samples. 
Abstract-found: 1
Intro-found: 1
Reference: [AND92] <author> P. Andr, J. C. Royer. </author> <title> Optimizing Method Search with Lookup Caches and Incremental Coloring OOPSLA'92 Proceedings p.110-126 </title>
Reference: [AOE82] <author> J. I. Aoe, K. Morimoto, T. Sato. </author> <title> An Efficient Implementation of Trie Structures Software-Practice and Experience, </title> <journal> Vol.22, </journal> <volume> nr 9, </volume> <month> September </month> <year> 1992, </year> <month> p.695-721 </month>
Reference-contexts: 1. Introduction Sparse tables have many uses. Sparse matrices, for instance, are abundant in linear algebra problems ([VDV88]). Finite state machine representations, such as parsing DFA's, are often represented as 2-dimensional tables which are mostly empty ([DEN84]). In <ref> [AOE82] </ref>, an efficient implementation of trie-trees is described that represents nodes as arrays of constant size. Thus a trie tree can be represented as a 2-dimensional table, associating a node number with an array. The resulting table is sparse. <p> In [TAR79] R is constructed by inserting the rows of T , one after the other, in the first fitting space in A. If m is much larger than n this is adequate. In <ref> [AOE82] </ref> a fill rate of 99% was obtained for a trie-tree representing an English dictionary of thirty-thousand words. In terms of the table, the number of columns was about 30, while the number of rows was little less than 50,000.
Reference: [BOO 89] <editor> L. B. Booker, D. E. Goldberg, J. H. </editor> <booktitle> Holland Classifier Systems and Genetic Algorithms in Artificial Intellingence, </booktitle> <volume> vol. 40, </volume> <month> p.235-282 </month>
Reference: [DEN 84] <author> P.Denker, K.Drre, </author> <title> J.Heuft Optimizationof Parser Tables for Portable Compilers ACM Transactions on Programming Languages and Systems, </title> <journal> Vol. </journal> <volume> 6, No. 4, </volume> <month> October </month> <year> 1994, </year> <pages> p. 546-572 </pages>
Reference: [DIX 89] <author> T. Dixon, M. Vaughan, P. Sweizer. </author> <title> A fast Method Dispatcher for Compiled Languages with Multiple Inheritance OOPSLA'89 Proceedings p.221-214 </title>
Reference: [DRI 93a] <author> K. Driesen. </author> <title> Selector Table Indexing & Sparse Arrays OOPSLA'93 Proceedings, </title> <publisher> p.259-270 </publisher>
Reference: [DRI 93b] <author> K. Driesen. </author> <title> Method Lookup Strategies in Dynamically Typed ObjectOriented Programming Languages Masters Thesis 1993, </title> <institution> Faculty of Sciences, Vrije Universiteit Brussel </institution>
Reference: [MAN91] <author> B. </author> <title> Manderick Selectionism as a Basis of Categorization and Adaptive Behavior PhD Dissertation 1991, </title> <institution> Faculty of Sciences, Vrije Universiteit Brussel </institution>
Reference-contexts: This is a function which takes one genotype as argument and returns a slightly altered one. In <ref> [MAN91] </ref>, three mutation operators are given: Swap operator: column 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 row gen renumbering 7 4 2 5 6 1 9 8 0 3 3 1 0 5 2 4 fitting order ^ ^ result renumbering 7 <p> These three possibilities give nine possible mutation operators for the genotype as a whole. In <ref> [MAN91] </ref>, the correlation between the fitness of a gen and its mutation gives a measure of the suitability of a mutator. The higher the correlation, the gentler the slope of the fitness landscape, as it is determined by the operator.
Reference: [MUH88] <author> H. Mhlenbein, M. Gorges-Schleuter, O. </author> <title> Krmer Evolution Algorithms in Combinatorial Optimisation in Parallel Computing, </title> <publisher> North-Holland, Amsterdam </publisher>
Reference: [TAR79] <author> R. E. Tarjan, A. C. </author> <title> Yao Storing a Sparse Table Communications of the ACM, </title> <booktitle> vol 22, </booktitle> <volume> no 11, </volume> <month> November </month> <year> 1979, </year> <pages> p. 606-611 </pages>
Reference-contexts: In general, this takes in the order of O (n/2 ) operations, with n the number of nonempty entries in a particular column or row. This is often too slow for practical purposes. Tarjan, in <ref> [TAR79] </ref>, presents a sparse table representation which performs retrieval of an element in constant time. This technique, which we will discuss in section 2, is preferable over a list representation when the table is static. Otherwise the cost of insertion of a nonempty element can be prohibitive. <p> If f approaches 1, the memory overhead approaches that of a linked list. The figure below gives a good mapping for the above example: 4 7 3 6 0 8 Masterarray Finding the offsets that maximize the fillrate is an NP-complete problem. In <ref> [TAR79] </ref> R is constructed by inserting the rows of T , one after the other, in the first fitting space in A. If m is much larger than n this is adequate.
Reference: [VDV88] <institution> Henk Van Der Vorst Parallel rekenen en supercomputers Academic Service </institution>
References-found: 11

