URL: ftp://ftp.lcs.mit.edu/student-workshop/1996/abstracts/Briceno.ps
Refering-URL: http://www.cag.lcs.mit.edu/student96/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: hbriceno@lcs.mit.edu  
Title: Design Techniques for Building Fast Servers  
Author: Hector M. Briceno 
Affiliation: MIT Laboratory for Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. R. Engler, M. F. Kaashoek, and J. O'Toole Jr. Exoker-nel: </author> <title> an operating system architecture for application-specif ic resource management. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles, </booktitle> <month> De-cember </month> <year> 1995. </year>
Reference-contexts: We plan to take advantage of a current shift in OS design towards giving applications greater control over resource management (e.g. the exokernel project <ref> [1] </ref>), to build faster servers which both take full advantage of the hardware resources and allow multiple servers to be run on a single machine. <p> It is possible that the procedure might have to issue another disk request, in which case it does so and returns to the event loop. Additionally, we can reduce the response latency of these events by using Application-specific Safe Handlers (ASHs) <ref> [1] </ref>. ASHs are procedures that are downloaded into the kernel and executed immediately upon the occurrence of an event regardless of which process is scheduled. For example, we can use them to quickly respond to disk requests that require little processing like NFS write procedures.
Reference: [2] <author> M. Frans Kaashoek et al. </author> <title> Server operating systems. </title> <booktitle> In 7th ACM SIGOPS European Workshop, </booktitle> <year> 1996. </year>
Reference-contexts: Currently we are investigating the value of these techniques by building a Network File System (NFS) server and a web server. <ref> [2] </ref> 2 Network File System (NFS) Server NFS clients use Remote Procedure Calls (RPCs) to perform file system primitives like read, write, create, and lookup on files stored by NFS servers.
References-found: 2

