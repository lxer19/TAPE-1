URL: http://www.cs.cornell.edu/kozen/papers/horn.ps
Refering-URL: http://www.cs.cornell.edu/kozen/papers/papers.html
Root-URL: 
Email: kozen@cs.cornell.edu  
Title: On the Complexity of Reasoning in Kleene Algebra for arbitrary equations E, the problem is
Author: Dexter Kozen 
Date: 1  
Note: if E contains only commutativity assumptions pq qp, the problem is 0 1 -complete; if E contains only monoid equations, the problem is 0 2 -complete;  question of Kozen (1994).  
Address: Upson Hall  Ithaca, NY 14853-7501, USA  
Affiliation: Department of Computer Science  Cornell University  
Pubnum: 1  
Abstract: We study the complexity of reasoning in Kleene algebra and *-continuous Kleene algebra in the presence of extra equational assumptions E; that is, the complexity of deciding the validity of universal Horn formulas E ! s = t, where E is a finite set of equations. We obtain various levels of complexity based on the form of the assumptions E. Our main results are: for *- continuous Kleene algebra, 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1975. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra [27, 32], automata theory [24, 25], and the design and analysis of algorithms <ref> [1, 15] </ref>. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31]. On the practical side, KA provides a natural and effective tool for equational specification and verification.
Reference: [2] <author> S. Anderaa. </author> <title> On the algebra of regular expressions. </title> <journal> Appl. Math., </journal> <pages> pages 1-18, </pages> <month> January </month> <year> 1965. </year>
Reference: [3] <author> K. V. Archangelsky. </author> <title> A new finite complete solvable quasiequational calculus for algebra of regular languages. </title> <type> Manuscript, </type> <institution> Kiev State University, </institution> <year> 1992. </year>
Reference: [4] <author> R. C. Backhouse. </author> <title> Closure Algorithms and the Star-Height Problem of Regular Languages. </title> <type> PhD thesis, </type> <institution> Imperial College, </institution> <year> 1975. </year> <month> 7 </month>
Reference: [5] <author> J. Berstel. </author> <title> Transductions and Context-free Languages. </title> <publisher> Teubner, </publisher> <year> 1979. </year>
Reference-contexts: Unfortunately, slightly more general commutativity assumptions pq = qp, even for p and q atomic, may lead to undecidability. Cohen gave a direct proof of this fact encoding Post's Correspondence Problem (see [22]). This result can also be shown to follow from a 1979 result of Berstel <ref> [5] </ref> with a little extra work; see x4 below. <p> Moreover, if all equations in E are length preserving, then the existential subformula 9y y x ^ y 2 fl (t) is decidable, so (8) is equivalent to a 0 1 formula. The lower bound for (i) uses the characterization of Lemma 2 and the result of Berstel <ref> [5] </ref> (see also [14, 22]) that (7) is undecidable. The reductions given in the cited references show that (7) is 0 1 -hard. This result holds even when E consists only of commutativity conditions of the form pq = qp for atomic p and q.
Reference: [6] <author> S. L. Bloom and Z. </author> <title> Esik. Equational axioms for regular sets. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 3 </volume> <pages> 1-24, </pages> <year> 1993. </year>
Reference: [7] <author> M. Boffa. </author> <title> Une remarque sur les systemes complets d'identites rationnelles. </title> <journal> Informatique Theoretique et Applications/Theoretical Informatics and Applications, </journal> <volume> 24(4) </volume> <pages> 419-423, </pages> <year> 1990. </year>
Reference: [8] <author> E. Cohen. </author> <title> Hypotheses in Kleene algebra. </title> <type> Unpublished, </type> <month> April </month> <year> 1994. </year>
Reference: [9] <author> E. Cohen. </author> <title> Lazy caching. </title> <type> Unpublished, </type> <year> 1994. </year>
Reference-contexts: On the practical side, KA provides a natural and effective tool for equational specification and verification. It has recently been used successfully in numerous applica tions involving basic safety analysis, low-level program transformations, and concurrency control <ref> [9, 10, 22] </ref>. 1.1 Reasoning with Assumptions The equational theory of KA alone is PSPACE - complete, and this is as efficient as one could expect. However, in practice, one often needs to reason in the presence of assumptions of various forms.
Reference: [10] <author> E. Cohen. </author> <title> Using Kleene algebra to reason about con-currency control. </title> <type> Unpublished, </type> <year> 1994. </year>
Reference-contexts: On the practical side, KA provides a natural and effective tool for equational specification and verification. It has recently been used successfully in numerous applica tions involving basic safety analysis, low-level program transformations, and concurrency control <ref> [9, 10, 22] </ref>. 1.1 Reasoning with Assumptions The equational theory of KA alone is PSPACE - complete, and this is as efficient as one could expect. However, in practice, one often needs to reason in the presence of assumptions of various forms.
Reference: [11] <author> E. Cohen, D. C. Kozen, and F. Smith. </author> <title> The complexity of Kleene algebra with tests. </title> <type> Technical Report TR96-1598, </type> <institution> Cornell University, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: This condition models the fact that the execution of the program p does not affect the value of the test b. Assumptions of the form pb = bp where b is a test do not increase the complexity of KA <ref> [11] </ref>. Unfortunately, slightly more general commutativity assumptions pq = qp, even for p and q atomic, may lead to undecidability. Cohen gave a direct proof of this fact encoding Post's Correspondence Problem (see [22]). <p> It is not valid for Kleene algebras in general. We develop this connection in more detail in x2.3. 1.4 Other Results The results D k and H k apply to Kleene algebras with tests and were proved in <ref> [11] </ref>. The decision problems in the column labeled KA are all r.e. because of the finitary axiomatization of KA given in x2.1.
Reference: [12] <author> J. H. Conway. </author> <title> Regular Algebra and Finite Machines. </title> <publisher> Chapman and Hall, </publisher> <year> 1971. </year>
Reference-contexts: This question was raised by the author in a LICS 1991 paper [19, 21], and has been open since that time. In fact, subject to reinterpretation, the question might even be attributed to Conway (1971) <ref> [12, p. 103] </ref>. Con-way's conjecture is phrased somewhat ambiguously in terms of the universal Horn theory of the regular sets; a literal interpretation is relatively easy to refute [18]. However, it is likely that Conway had the more substantive formulation E k in mind.
Reference: [13] <author> M. Davis. </author> <title> Computability and Unsolvability. </title> <publisher> McGraw-Hill, </publisher> <year> 1958. </year>
Reference-contexts: The r.e.-hardness of A k and B k follows from the fact that these problems encode the word problem for finitely presented monoids, shown r.e.-hard independently by Post and Markov in 1947 (see <ref> [13, Theorem 4.3, p. 98] </ref>). The EXPSPACE-hardness of C k follows from the EXPSPACE-hardness of the word prob lem for commutative monoids [26]. <p> This construction is standard. We sketch it here for completeness and because we need the equations in a particular form for the applications to follow. We follow the treatment of Davis <ref> [13] </ref>. <p> See <ref> [13, Theorem 4.3, p. 98] </ref>. The chief concern is that monoid equations are reversible, whereas computations are not; thus it is conceivable that (5) holds by some complicated sequence of substitutions modeling a zigzagging forwards-and-backwards computation even when (6) does not. <p> If there exists y 2 fi (f ` r a g) such that x y, then by the induction hypothesis, y satisfies one of (i)-(iii), therefore so does x; the argument here is similar to <ref> [13, Theorem 4.3, p. 98] </ref>. Otherwise, x = utv and usa n v 2 fi (f ` r a g) for all n. By the induction hypothesis, one of (i)-(iii) holds for each usa n v. But (iii) is impossible because of the form of (E3).
Reference: [14] <author> A. Gibbons and W. Rytter. </author> <title> On the decidability of some problems about rational subsets of free partially commutative monoids. </title> <journal> Theoretical Computer Science, </journal> <volume> 48 </volume> <pages> 329-337, </pages> <year> 1986. </year>
Reference-contexts: The lower bound for (i) uses the characterization of Lemma 2 and the result of Berstel [5] (see also <ref> [14, 22] </ref>) that (7) is undecidable. The reductions given in the cited references show that (7) is 0 1 -hard. This result holds even when E consists only of commutativity conditions of the form pq = qp for atomic p and q.
Reference: [15] <author> K. Iwano and K. Steiglitz. </author> <title> A semiring on convex polygons and zero-sum cycle problems. </title> <journal> SIAM J. Comput., </journal> <volume> 19(5) </volume> <pages> 883-901, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra [27, 32], automata theory [24, 25], and the design and analysis of algorithms <ref> [1, 15] </ref>. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31]. On the practical side, KA provides a natural and effective tool for equational specification and verification.
Reference: [16] <author> S. C. Kleene. </author> <title> Representation of events in nerve nets and finite automata. </title> <editor> In C. E. Shannon and J. Mc-Carthy, editors, </editor> <booktitle> Automata Studies, </booktitle> <pages> pages 3-41. </pages> <publisher> Prince-ton University Press, </publisher> <year> 1956. </year>
Reference: [17] <author> D. C. Kozen. </author> <title> On induction vs. </title> <editor> *-continuity. In Kozen, editor, </editor> <booktitle> Proc. Workshop on Logic of Programs, volume 131 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 167-176. </pages> <publisher> Springer-Verlag, </publisher> <year> 1981. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics <ref> [17, 28] </ref>, relational algebra [27, 32], automata theory [24, 25], and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
Reference: [18] <author> D. C. Kozen. </author> <title> On Kleene algebras and closed semirings. </title> <editor> In Rovan, editor, </editor> <booktitle> Proc. Math. Found. Comput. Sci., volume 452 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 26-47. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: In fact, subject to reinterpretation, the question might even be attributed to Conway (1971) [12, p. 103]. Con-way's conjecture is phrased somewhat ambiguously in terms of the universal Horn theory of the regular sets; a literal interpretation is relatively easy to refute <ref> [18] </ref>. However, it is likely that Conway had the more substantive formulation E k in mind. That the universal Horn theory of KA fl should be so highly complex may be quite surprising in light of the utter simplicity of the axiomatization.
Reference: [19] <author> D. C. Kozen. </author> <title> A completeness theorem for Kleene algebras and the algebra of regular events. </title> <booktitle> In Proc. 6th Symp. Logic in Comput. Sci., </booktitle> <pages> pages 214-225. </pages> <publisher> IEEE, </publisher> <month> July </month> <year> 1991. </year>
Reference-contexts: The unshaded results are new. Perhaps the most remarkable of these results is E k . This is the general question of the complexity of the universal Horn theory of the *-continuous Kleene algebras. This question was raised by the author in a LICS 1991 paper <ref> [19, 21] </ref>, and has been open since that time. In fact, subject to reinterpretation, the question might even be attributed to Conway (1971) [12, p. 103].
Reference: [20] <author> D. C. Kozen. </author> <title> The Design and Analysis of Algorithms. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This relationship exists only because of the fact that in *-continuous Kleene algebras, suprema of definable sets exist <ref> [20, Lemma 7.1, p. 35] </ref>. It is not valid for Kleene algebras in general. We develop this connection in more detail in x2.3. 1.4 Other Results The results D k and H k apply to Kleene algebras with tests and were proved in [11]. <p> algebra K extends uniquely through M to a Kleene algebra homomorphism b h : REG M ! K: M K h - 3 The homomorphism b h is defined as follows: b h (A) = sup fh (x) j x 2 Ag: This works for *-continuous Kleene algebras because of <ref> [20, Lemma 7.1, p. 35] </ref>, which says that suprema of all definable subsets of a *-continuous Kleene algebra exist.
Reference: [21] <author> D. C. Kozen. </author> <title> A completeness theorem for Kleene algebras and the algebra of regular events. </title> <journal> Infor. and Comput., </journal> <volume> 110(2) </volume> <pages> 366-390, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Not all Kleene algebras are *-continuous, but all known naturally occurring ones are. Moreover, although *-continuity often provides a convenient shortcut in equational proofs, there are no more equations provable with it than without it; that is, the equational theories of KA and KA fl coincide <ref> [21] </ref>. Because of these considerations, it has become common practice to adopt *-continuity as a matter of course. However, this is not without consequence: although the equational theories of KA and KA fl coincide, their Horn theories do not. <p> The unshaded results are new. Perhaps the most remarkable of these results is E k . This is the general question of the complexity of the universal Horn theory of the *-continuous Kleene algebras. This question was raised by the author in a LICS 1991 paper <ref> [19, 21] </ref>, and has been open since that time. In fact, subject to reinterpretation, the question might even be attributed to Conway (1971) [12, p. 103].
Reference: [22] <author> D. C. Kozen. </author> <title> Kleene algebra with tests and commu-tativity conditions. </title> <editor> In T. Margaria and B. Steffen, editors, </editor> <booktitle> Proc. Second Int. Workshop Tools and Algorithms for the Construction and Analysis of Systems (TACAS'96), volume 1055 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 14-33. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: On the practical side, KA provides a natural and effective tool for equational specification and verification. It has recently been used successfully in numerous applica tions involving basic safety analysis, low-level program transformations, and concurrency control <ref> [9, 10, 22] </ref>. 1.1 Reasoning with Assumptions The equational theory of KA alone is PSPACE - complete, and this is as efficient as one could expect. However, in practice, one often needs to reason in the presence of assumptions of various forms. <p> For example, a commutativity condition pq = qp models the fact that the programs p and q can be executed in either order with the same result. Such assumptions are needed to reason about basic program transformations such as constant propagation and moving static computations out of loops. In <ref> [22] </ref>, several useful program transformations are given under commutativity assumptions of the form pb = bp, where p is a program and b is a test. This condition models the fact that the execution of the program p does not affect the value of the test b. <p> Unfortunately, slightly more general commutativity assumptions pq = qp, even for p and q atomic, may lead to undecidability. Cohen gave a direct proof of this fact encoding Post's Correspondence Problem (see <ref> [22] </ref>). This result can also be shown to follow from a 1979 result of Berstel [5] with a little extra work; see x4 below. <p> The lower bound for (i) uses the characterization of Lemma 2 and the result of Berstel [5] (see also <ref> [14, 22] </ref>) that (7) is undecidable. The reductions given in the cited references show that (7) is 0 1 -hard. This result holds even when E consists only of commutativity conditions of the form pq = qp for atomic p and q.
Reference: [23] <author> D. Krob. </author> <title> A complete system of B-rational identities. </title> <journal> Theoretical Computer Science, </journal> <volume> 89(2) </volume> <pages> 207-343, </pages> <month> Octo-ber </month> <year> 1991. </year>
Reference: [24] <author> W. </author> <title> Kuich. The Kleene and Parikh theorem in complete semirings. </title> <editor> In T. Ottmann, editor, </editor> <booktitle> Proc. 14th Colloq. Automata, Languages, and Programming, volume 267 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 212-225, </pages> <address> New York, 1987. </address> <publisher> EATCS, Springer-Verlag. </publisher>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra [27, 32], automata theory <ref> [24, 25] </ref>, and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
Reference: [25] <editor> W. Kuich and A. Salomaa. Semirings, </editor> <booktitle> Automata, and Languages. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra [27, 32], automata theory <ref> [24, 25] </ref>, and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
Reference: [26] <author> E. W. Mayr and A. Meyer. </author> <title> The complexity of the word problems for commutative semigroups and polynomial ideals. </title> <journal> Adv. Math., </journal> <volume> 46(3) </volume> <pages> 305-329, </pages> <month> December </month> <year> 1982. </year>
Reference-contexts: The EXPSPACE-hardness of C k follows from the EXPSPACE-hardness of the word prob lem for commutative monoids <ref> [26] </ref>.
Reference: [27] <author> K. C. Ng. </author> <title> Relation Algebras with Transitive Closure. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1984. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra <ref> [27, 32] </ref>, automata theory [24, 25], and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
Reference: [28] <author> V. Pratt. </author> <title> Dynamic algebras as a well-behaved fragment of relation algebras. </title> <editor> In D. Pigozzi, editor, </editor> <booktitle> Proc. Conf. on Algebra and Computer Science, volume 425 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 77-110. </pages> <publisher> Springer-Verlag, </publisher> <month> June </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics <ref> [17, 28] </ref>, relational algebra [27, 32], automata theory [24, 25], and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
Reference: [29] <author> V. N. Redko. </author> <title> On defining relations for the algebra of regular events. Ukrain. </title> <journal> Mat. Z., </journal> <volume> 16 </volume> <pages> 120-126, </pages> <year> 1964. </year> <note> In Russian. </note>
Reference: [30] <author> J. Sakarovitch. </author> <title> Kleene's Theorem revisited: a formal path from Kleene to Chomsky. </title> <editor> In A. Kelemenova and J. Keleman, editors, </editor> <booktitle> Trends, Techniques, and Problems in Theoretical Computer Science, volume 281 of Lect. Notes in Comput. Sci., </booktitle> <pages> pages 39-50. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [31] <author> A. Salomaa. </author> <title> Two complete axiom systems for the algebra of regular events. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 13(1) </volume> <pages> 158-169, </pages> <month> January </month> <year> 1966. </year>
Reference: [32] <author> A. Tarski. </author> <title> On the calculus of relations. </title> <journal> J. Symb. Logic, </journal> <volume> 6(3) </volume> <pages> 65-106, </pages> <year> 1941. </year>
Reference-contexts: 1 Introduction Kleene algebra (KA) is fundamental and ubiquitous in computer science. Since its invention by Kleene in 1956, it has arisen in various forms in program logic and semantics [17, 28], relational algebra <ref> [27, 32] </ref>, automata theory [24, 25], and the design and analysis of algorithms [1, 15]. Many authors have contributed to the development of Kleene algebra over the years [2, 3, 4, 6, 7, 8, 12, 16, 17, 18, 21, 23, 25, 29, 30, 31].
References-found: 32

