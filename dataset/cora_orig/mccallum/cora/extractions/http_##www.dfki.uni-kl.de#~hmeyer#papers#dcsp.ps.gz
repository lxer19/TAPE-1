URL: http://www.dfki.uni-kl.de/~hmeyer/papers/dcsp.ps.gz
Refering-URL: http://www.dfki.uni-kl.de/~hmeyer/papers/
Root-URL: http://www.dfki.uni-kl.de/~hmeyer/papers/
Email: Harald.Meyer@dfki.de  
Title: Contribution DCSP Finding Regions for Local Repair in Partial CSP Solutions First Report  
Author: Harald Meyer auf'm Hofe 
Note: Presented at the CP'97 Workshop on "Theory and practice of dynamic constraint satisfaction"  
Address: Postfach 2080 D-67608 Kaiserslautern Germany  
Affiliation: German Research Center for Artificial Intelligence (DFKI)  
Date: October 14, 1997  
Abstract: In contrast to standard constraint satisfaction problems (CSPs) practical applications often require both, the management of changing validity of constraints and variables. Based on experiences made with the development of a commercial nurse scheduling system this paper suggests the application of local optimization algorithms for knowledge-based configuration systems, which strongly rely on dynamic constraint management. The main contribution is a small theory on how to enumerate the regions (a set of assignments) in a partial solution to a constraint problem, which have to be changed in order to obtain a global solution. Such a theory enables the application of local repair mechanisms to knowledge-based systems. 
Abstract-found: 1
Intro-found: 1
Reference: [Abecker et al., 1996] <editor> A. Abecker, H. Meyer auf'm Hofe, J. P. Muller, and J. Wurtz, editors. </editor> <title> Notes on the DFKI-Workshop: Constraint-Based Problem Solving, Document D-96-02. </title> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz, </institution> <year> 1996. </year> <note> http://www.dfki.uni-kl.de/ ~aabecker/WS-CO.html. </note> <editor> [Baader et al., 1996] F. Baader, H.-J. Burckert, A. Gunter, and W. Nutt, editors. WRKP-96: </editor> <booktitle> Proceedings of the Workshop on Knowledge Representation and Configuration, number D-96-04 in DFKI Document, </booktitle> <month> August </month> <year> 1996. </year>
Reference: [Baumann et al., 1997] <author> Stephan Baumann, Michael Malburg, Harald Meyer auf'm Hofe, and Claudia Wenzel. </author> <title> From paper to a corporate memory | a first step. </title> <booktitle> In KI-97 Workshop on Knowledge-Based Systems for Knowledge Management in Enterprises, Document D-97-03. </booktitle> <institution> Deutsches Forschungszen-trum fur Kunstliche Intelligenz, </institution> <month> September </month> <year> 1997. </year> <note> http://www.dfki.uni-kl.de/km/ws-ki-97.html. </note>
Reference-contexts: However, to my knowledge they have hardly been applied to the field of knowledge-based configuration. Although, they exhibit significant advantages especially in this problem class. At the DFKI the author currently develops a configuration system for a modular software system (refer to <ref> [Baumann et al., 1997] </ref> for a preliminary problem description). This system will be based on a constraint optimization library ConPlan we originally developed for a commercially available scheduling system SIEDAplan [Meyer auf'm Hofe, 1997].
Reference: [Bistarelli et al., 1996] <author> Stefano Bistarelli, Helene Fargier, Ugo Montanari, Francesca Rossi, Thomas Schiex, and Gerard Verfaillie. Semiring-based CSPs and valued CSPs: </author> <title> Basic properties and comparisons. </title> <booktitle> In [Jampel, </booktitle> <year> 1996], 1996. </year>
Reference-contexts: For instance, most real world applications of constraint processing techniques rely on the intensional representation of domains (e.g. by intervals) and constraints (e.g. by efficient propa gation methods). 2. In contrast to TMS several notions of soft constraints have been proposed in the context of CSPs <ref> [Bistarelli et al., 1996, Meyer auf'm Hofe, 1996b] </ref>. Soft constraints have been used successfully for representing preferences, fuzzy relations, and costs.
Reference: [de Kleer, 1989] <author> Johan de Kleer. </author> <title> A comparison of ATMS and CSP techniques. </title> <booktitle> In IJCAI-89: Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 290-296, </pages> <address> Detroit, MI, USA, </address> <year> 1989. </year>
Reference-contexts: TMS work on problems encoded in propositional clauses. Obviously, CSPs (in the academic form) can be translated easily into this form. But the structure of the original problem (constraint graph, abstract notion of constraints and variables) is lost doing this translation <ref> [de Kleer, 1989] </ref>. Typical constraint processing techniques and heuristics rely heavily on this structure that is not available to a TMS. For instance, most real world applications of constraint processing techniques rely on the intensional representation of domains (e.g. by intervals) and constraints (e.g. by efficient propa gation methods). 2.
Reference: [Dorn et al., 1996] <author> Jurgen Dorn, Mario Girsch, Gunther Skele, and Wolfgang Slany. </author> <title> Comparison of iterative improvement techniques for schedule optimization. </title> <journal> European Journal of Operations Research, </journal> <volume> 94, </volume> <year> 1996. </year>
Reference-contexts: Hence, they provide a notion of stability for free. * Adding and removing variables or constraints does not require complex management of extensive recordings. Amazingly, local repair algorithms have often been applied to scheduling problems <ref> [Dorn et al., 1996] </ref>, but they have hardly been used for configuration systems.
Reference: [Doyle, 1979] <author> Jon Doyle. </author> <title> A truth maintenance system. </title> <journal> Artificial Intelligence, </journal> <volume> 12(3) </volume> <pages> 231-272, </pages> <year> 1979. </year>
Reference-contexts: Contribution DCSP 2 2 A Quick Overview on Solving Configuration Problems Current state of the art knowledge-based configuration systems use truth maintenance systems (TMS) for the management of dynamically changing dependencies and requirements. For example in the REDUX model [Petrie, 1991] a JTMS <ref> [Doyle, 1979] </ref> is used for dependency directed backtracking within a conceptual hierarchy. An example for applying ATMS has been presented in [Mittal and Falkenhainer, 1990]. However, TMS exhibit some remarkable disadvantages compared to e.g. arc-consistency processing in CSPs: 1. TMS work on problems encoded in propositional clauses.
Reference: [Gunter and Cunis, 1992] <author> Andreas Gunter and Roman Cunis. </author> <title> Flexible control in expert systems for construction tasks. </title> <journal> Applied Intelligence, </journal> <volume> 2(4) </volume> <pages> 369-385, </pages> <year> 1992. </year>
Reference-contexts: Application specific control of search procedures is known to be one of the main reasons for unacceptable costs in maintaining the knowledge-base in configuration systems <ref> [Gunter and Cunis, 1992, Meyer auf'm Hofe, 1996c] </ref>. A naive method for avoiding the application of search heuristics is the enumeration of all possible regions by the search-bad-region procedure called in local-optimization (cf. Figure 1).
Reference: [Gunter, 1995] <author> A. Gunter. </author> <title> Wissensbasiertes Konfig-urieren | Ergebnisse aus dem Projekt PROKON. </title> <publisher> Infix Verlag, </publisher> <address> Sankt Augustin, </address> <year> 1995. </year>
Reference-contexts: The first are mainly used to implement dependency directed backtracking preserving as many of the previously conducted commitments as possible after detecting a conflict. The latter typically enforce arc-consistency between variables representing attributes of objects in a configuration <ref> [Gunter, 1995, Paulokat, 1995, Petrie et al., 1996] </ref> 1 . Typically, the TMS informs the constraint system about OUT labeled attribute values communicating unary constraints. Vice versa, the constraint system states prunings in the domains manipulating justifications resp. nogoods in the TMS [Meyer auf'm Hofe and Paulokat, 1994] 1 .
Reference: [Heinrich and Jungst, 1991] <author> M. Heinrich and E.-W. Jungst. </author> <title> A resource-based paradigm for the configuring of technical systems from modular components. </title> <booktitle> In CAIA-91: Proc. of the 7th IEEE Conference on AI Applications, </booktitle> <year> 1991. </year>
Reference-contexts: Amazingly, local repair algorithms have often been applied to scheduling problems [Dorn et al., 1996], but they have hardly been used for configuration systems. To the author's knowledge the only exception is the framework of resource-oriented configuration <ref> [Heinrich and Jungst, 1991] </ref>. 3 Experiences with SIEDAplan The local repair algorithm we use is a result of developing the introductory mentioned nurse scheduling system SIEDAplan [Meyer auf'm Hofe, 1997]. <p> These heuristics consider the available working time to be a more or less fixed resource. A request for more working time on a certain day has to be compensated at another day. By the way, this heuristic is very similar to the treatment of resources in resource-oriented configuration <ref> [Heinrich and Jungst, 1991] </ref>, the only local optimization strategy used in the field of knowledge-based configuration systems. The schedule in the bottom of Figure 2 is the finally returned solution of the scheduling process.
Reference: [Hower and Ruttkay, 1996] <editor> Walter Hower and Zsofia Ruttkay, editors. </editor> <booktitle> Non-Standard Constraint Processing, Working Notes of the ECAI'96 Workshop W27, </booktitle> <address> Budapest, Hungary, </address> <year> 1996. </year> <editor> [Jampel et al., 1995] Michael Jampel, Eugene Freuder, and Michael Ma-her, editors. </editor> <booktitle> Workshop Notes CP95 Workshop on Over-Constrained Systems, </booktitle> <address> Cassis, France, </address> <year> 1995. </year>
Reference: [Jampel, 1996] <editor> M. Jampel, editor. </editor> <booktitle> Over-Constrained Systems. Number 1106 in LNCS. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1996. </year> <editor> [Meyer auf'm Hofe and Paulokat, 1994] H. Meyer auf'm Hofe and J. Paulokat. Verarbeitung von Constraints in der Expertensystementwicklung-sumgebung IDAX. In R. Bergmann, J. Paulokat, A.-M. Schoeller, and H. Wache, editors, </editor> <booktitle> Beitrage zum 8. Workshop Planen und Konfigurieren, </booktitle> <year> 1994. </year>
Reference: [Meyer auf'm Hofe, 1996a] <author> Harald Meyer auf'm Hofe. </author> <title> Partial satisfaction of constraint hierarchies in reactive and interactive configuration. </title> <editor> In [Hower and Ruttkay, </editor> <year> 1996], </year> <pages> pages 61-72, </pages> <year> 1996. </year> <note> http://www.dfki.uni-kl.de/ ~hmeyer/papers/ecai-ws.ps.gz. </note>
Reference-contexts: Hence, constraints representing requirements in the configured object will permanently be introduced and removed. Local repair strategies are known to be appropriate to such tasks of dynamic constraint satisfaction <ref> [Verfaillie and Schiex, 1994, Meyer auf'm Hofe, 1996a] </ref>. However, to my knowledge they have hardly been applied to the field of knowledge-based configuration. Although, they exhibit significant advantages especially in this problem class. <p> H. Meyer auf'm Hofe: Finding Regions for Local Repair. . . Contribution DCSP 3 Local repair exhibits some remarkable advantages especially for solving configuration prob lems <ref> [Meyer auf'm Hofe, 1996a] </ref>. * Typically, the computation of only one or a small number of similar configurations is requested. <p> Within each hierarchy level constraints are rated by a random weight. These hierarchical constraint satisfaction problems (HCSPs) ease representation of real world problems and enable the use of some additional constraint processing technique concerning consistency processing and variable ordering <ref> [Meyer auf'm Hofe, 1996a] </ref>. As usual, density is the ratio between the number of generated constraints and the number of constraints in a completely connected constraint graph. <p> The b&b algorithm in Figure 5 uses e.g. the maximal width and maximal constraint number as criteria for a static variable ordering. Additionally, variables are ordered dynamically by a pessimistic minimum remaining value (MRVpess) heuristic <ref> [Meyer auf'm Hofe, 1996a] </ref> that exploits the hierarchical structure of the constraint problem. Forward checking and backmarking is done with hard and soft constraints. This is a relatively well performing variant of the b&b algorithm. The same procedure is used enumerating global revisions (egr) when searching the original problem. <p> This is a relatively well performing variant of the b&b algorithm. The same procedure is used enumerating global revisions (egr) when searching the original problem. Searching the abstract problem arc-consistent compatilities are maintained in order to find more promising revisions early <ref> [Meyer auf'm Hofe, 1996a] </ref>. However, there is no empirical evidence yet for the assumption that this kind of consistency really improves performance of the egr procedure. checks, and the number of assignments in order to assess performance of the algorithms.
Reference: [Meyer auf'm Hofe, 1996b] <author> Harald Meyer auf'm Hofe. </author> <title> Representation of requirements through preference order-ings of soft constraints. </title> <editor> In [Abecker et al., </editor> <year> 1996], </year> <month> January </month> <year> 1996. </year> <editor> H. Meyer auf'm Hofe: </editor> <title> Finding Regions for Local Repair. . . Contribution DCSP 13 </title>
Reference-contexts: For instance, most real world applications of constraint processing techniques rely on the intensional representation of domains (e.g. by intervals) and constraints (e.g. by efficient propa gation methods). 2. In contrast to TMS several notions of soft constraints have been proposed in the context of CSPs <ref> [Bistarelli et al., 1996, Meyer auf'm Hofe, 1996b] </ref>. Soft constraints have been used successfully for representing preferences, fuzzy relations, and costs.
Reference: [Meyer auf'm Hofe, 1996c] <author> Harald Meyer auf'm Hofe. </author> <title> What is still to do in order to solve configuration problems in practice? In [Baader et al., </title> <booktitle> 1996], </booktitle> <pages> pages 25-32, </pages> <year> 1996. </year> <note> http://www.dfki.uni-kl.de/ ~hmeyer/papers/ki-ws.ps.gz. </note>
Reference-contexts: Retracting previously conducted specializations removes variables and con straints. * Due to incomplete and conflicting requirement specifications a close dialog between experts and expert system is necessary in order to solve many configuration tasks <ref> [Meyer auf'm Hofe, 1996c] </ref>. Hence, constraints representing requirements in the configured object will permanently be introduced and removed. Local repair strategies are known to be appropriate to such tasks of dynamic constraint satisfaction [Verfaillie and Schiex, 1994, Meyer auf'm Hofe, 1996a]. <p> Application specific control of search procedures is known to be one of the main reasons for unacceptable costs in maintaining the knowledge-base in configuration systems <ref> [Gunter and Cunis, 1992, Meyer auf'm Hofe, 1996c] </ref>. A naive method for avoiding the application of search heuristics is the enumeration of all possible regions by the search-bad-region procedure called in local-optimization (cf. Figure 1).
Reference: [Meyer auf'm Hofe, 1997] <author> Harald Meyer auf'm Hofe. ConPlan/SIEDAplan: </author> <title> Personnel assignment as a problem of hierarchical constraint satisfaction. </title> <booktitle> In PACT-97: Proceedings of the Third International Conference on the Practical Application of Constraint Technology, </booktitle> <pages> pages 257-272, </pages> <address> London, UK, </address> <month> April </month> <year> 1997. </year> <title> Practical Application Company, </title> <publisher> Ltd. </publisher> <address> http://www.dfki.uni-kl.de/ ~hmeyer/papers/pact97.ps.gz. </address>
Reference-contexts: At the DFKI the author currently develops a configuration system for a modular software system (refer to [Baumann et al., 1997] for a preliminary problem description). This system will be based on a constraint optimization library ConPlan we originally developed for a commercially available scheduling system SIEDAplan <ref> [Meyer auf'm Hofe, 1997] </ref>. In order to combine advantages of local search and enhanced tree search algorithms the following approach is used to solve constraint optimization problems: 1. Compute an efficient labeling of all variables using forward checking or arc-consistency processing for looking ahead. 2. <p> To the author's knowledge the only exception is the framework of resource-oriented configuration [Heinrich and Jungst, 1991]. 3 Experiences with SIEDAplan The local repair algorithm we use is a result of developing the introductory mentioned nurse scheduling system SIEDAplan <ref> [Meyer auf'm Hofe, 1997] </ref>. Nurse scheduling is a complex scheduling problem concerning the assignment of shifts (representing working shifts, holiday, or idle shifts for compensating overtime-work) to each nurse for each day.
Reference: [Minton et al., 1992] <author> Steven Minton, Mark Johnston, Andrew Philips, and Philip Laird. </author> <title> Minimizing conflicts: a heuristic repair method for constraint satisfaction problem and scheduling problems. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 161-205, </pages> <year> 1992. </year>
Reference-contexts: The labels of a relatively small set of variables V 0 ae V . Generally, the optimization in row 4 can either be limited to a local improvement of the labeling <ref> [Minton et al., 1992] </ref> H. Meyer auf'm Hofe: Finding Regions for Local Repair. . . Contribution DCSP 4 or accept a worse labeling with a certain probability [Selman et al., 1992]. The first method is known to improve labelings rapidly but stick to local minima of the preference criterion.
Reference: [Mittal and Falkenhainer, 1990] <author> S. Mit-tal and B. Falkenhainer. </author> <title> Dynamic constraint satisfaction problems. </title> <booktitle> In AAAI-90: Proceedings of the 10th National Conference on Artificial Intelligence, </booktitle> <pages> pages 25-32, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: For example in the REDUX model [Petrie, 1991] a JTMS [Doyle, 1979] is used for dependency directed backtracking within a conceptual hierarchy. An example for applying ATMS has been presented in <ref> [Mittal and Falkenhainer, 1990] </ref>. However, TMS exhibit some remarkable disadvantages compared to e.g. arc-consistency processing in CSPs: 1. TMS work on problems encoded in propositional clauses. Obviously, CSPs (in the academic form) can be translated easily into this form.
Reference: [Paulokat, 1995] <editor> Jurgen Paulokat. Entscheidungs-orientierte Rechtfertigungsverwaltung zur Unter-stutzung des Konfigurationsprozesses in IDAX. In [Richter and Maurer, </editor> <year> 1995], </year> <pages> pages 19-36, </pages> <year> 1995. </year>
Reference-contexts: The first are mainly used to implement dependency directed backtracking preserving as many of the previously conducted commitments as possible after detecting a conflict. The latter typically enforce arc-consistency between variables representing attributes of objects in a configuration <ref> [Gunter, 1995, Paulokat, 1995, Petrie et al., 1996] </ref> 1 . Typically, the TMS informs the constraint system about OUT labeled attribute values communicating unary constraints. Vice versa, the constraint system states prunings in the domains manipulating justifications resp. nogoods in the TMS [Meyer auf'm Hofe and Paulokat, 1994] 1 .
Reference: [Petrie et al., 1996] <author> Charles Petrie, Heecheol Jeon, and Mark Cutkosky. </author> <title> Combining constraint propagation and backtracking for distributed engineering. </title> <editor> In [Hower and Ruttkay, </editor> <year> 1996], </year> <pages> pages 84-94, </pages> <year> 1996. </year>
Reference-contexts: The first are mainly used to implement dependency directed backtracking preserving as many of the previously conducted commitments as possible after detecting a conflict. The latter typically enforce arc-consistency between variables representing attributes of objects in a configuration <ref> [Gunter, 1995, Paulokat, 1995, Petrie et al., 1996] </ref> 1 . Typically, the TMS informs the constraint system about OUT labeled attribute values communicating unary constraints. Vice versa, the constraint system states prunings in the domains manipulating justifications resp. nogoods in the TMS [Meyer auf'm Hofe and Paulokat, 1994] 1 .
Reference: [Petrie, 1991] <author> C. Petrie. </author> <title> Planning and Replanning with Reason Maintenance. </title> <type> PhD thesis, </type> <institution> MCC AI Lab, Austin, TX, </institution> <year> 1991. </year>
Reference-contexts: Meyer auf'm Hofe: Finding Regions for Local Repair. . . Contribution DCSP 2 2 A Quick Overview on Solving Configuration Problems Current state of the art knowledge-based configuration systems use truth maintenance systems (TMS) for the management of dynamically changing dependencies and requirements. For example in the REDUX model <ref> [Petrie, 1991] </ref> a JTMS [Doyle, 1979] is used for dependency directed backtracking within a conceptual hierarchy. An example for applying ATMS has been presented in [Mittal and Falkenhainer, 1990]. However, TMS exhibit some remarkable disadvantages compared to e.g. arc-consistency processing in CSPs: 1.
Reference: [Richter and Maurer, 1995] <editor> Michael Richter and Frank Maurer, editors. </editor> <booktitle> Expertensysteme '95, volume 2 of Proceedings in Artificial Intelligence, </booktitle> <address> St. Augustin, Germany, 1995. </address> <publisher> infix Verlag. </publisher>
Reference: [Selman et al., 1992] <author> Bart Selman, Hector Levesque, and David Mitchell. </author> <title> A new method for solving hard satisfiability problems. </title> <booktitle> In AAAI-92: Proceedings of the 10th National Conference on AI, </booktitle> <pages> pages 440-446, </pages> <year> 1992. </year>
Reference-contexts: Generally, the optimization in row 4 can either be limited to a local improvement of the labeling [Minton et al., 1992] H. Meyer auf'm Hofe: Finding Regions for Local Repair. . . Contribution DCSP 4 or accept a worse labeling with a certain probability <ref> [Selman et al., 1992] </ref>. The first method is known to improve labelings rapidly but stick to local minima of the preference criterion. In contrast, the latter techniques converge on globally optimal solutions but are slower in improving a labeling [Wallace and Freuder, 1995].
Reference: [Verfaillie and Schiex, 1994] <author> G. Verfaillie and T. Schiex. </author> <title> Solution reuse in dynamic constraint satisfaction problems. </title> <booktitle> In AAAI-94: Proceedings of the 12th national conf. on AI, </booktitle> <pages> pages 307-312, </pages> <address> Seattle, WA, August 1994. </address> <publisher> AAAI Press/ The MIT Press. </publisher>
Reference-contexts: Hence, constraints representing requirements in the configured object will permanently be introduced and removed. Local repair strategies are known to be appropriate to such tasks of dynamic constraint satisfaction <ref> [Verfaillie and Schiex, 1994, Meyer auf'm Hofe, 1996a] </ref>. However, to my knowledge they have hardly been applied to the field of knowledge-based configuration. Although, they exhibit significant advantages especially in this problem class. <p> Start an enhanced branch&bound search for optimizing the selected labels reusing the currently violated constraints as initial bound. Proceed with 2. In contrast to other approaches for solution reuse <ref> [Verfaillie and Schiex, 1994] </ref> this algorithm separates detection of bad parts of the labeling from optimizing labels. Advantageously, standard search procedures can be used for changing the labeling. However, the problem is to find promising regions where the current schedule or configuration can be improved. <p> Uniform Constraint Processing Approaches These experiences suggest to tackle configuration problems by a uniform dynamic constraint processing approach. The known approaches to dynamic constraint processing have been grouped into the following three categories <ref> [Verfaillie and Schiex, 1994] </ref>: Heuristic methods reuse previously computed assignments as a heuristic for solving the current CSP. Constraint recording methods record constraints which can be deduced from the current CSP, in order to reuse them solving modified problems as long as the deduction is still valid.
Reference: [Wallace and Freuder, 1995] <author> Rick J. Wallace and Eu-gene C. Freuder. </author> <title> Heuristic methods for over-constrained constraint satisfaction problems. </title> <editor> In [Jampel et al., </editor> <year> 1995], </year> <pages> pages 97-101, </pages> <year> 1995. </year> <editor> H. Meyer auf'm Hofe: </editor> <title> Finding Regions for Local Repair. . . Contribution DCSP </title>
Reference-contexts: The first method is known to improve labelings rapidly but stick to local minima of the preference criterion. In contrast, the latter techniques converge on globally optimal solutions but are slower in improving a labeling <ref> [Wallace and Freuder, 1995] </ref>. In the nurse scheduling application rapid improvement is very important, whereas the schedule is not necessarily required to be optimal due to the given problem specification. Prospective constraint processing is employed to achieve an initial schedule of a reasonable quality (row 1 in Figure 1).
References-found: 24

