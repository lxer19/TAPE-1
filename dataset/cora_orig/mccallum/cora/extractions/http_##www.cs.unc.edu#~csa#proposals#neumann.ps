URL: http://www.cs.unc.edu/~csa/proposals/neumann.ps
Refering-URL: http://www.cs.unc.edu/~csa/proposals/
Root-URL: http://www.cs.unc.edu
Title: Direct Volume Rendering on Multicomputers  
Author: Ulrich Neumann 
Degree: Dissertation Proposal by  
Date: August 20, 1991  
Address: Chapel Hill  
Affiliation: Department of Computer Science University of North Carolina,  
Note: 7 1 3 9 5 1 Proposal V 1.0  
Abstract-found: 0
Intro-found: 1
Reference: [Blinn82] <editor> Jim Blinn Light Reflection Functions for Simulation for Clouds and Dusty Surfaces. </editor> <booktitle> Proceedings of SIGGRAPH '82, Computer Graphics 16, </booktitle> <volume> 3. </volume> <month> July </month> <year> 1982, </year> <pages> pp. 21 - 29. </pages>
Reference-contexts: This research focuses on the efficiency of the direct volume rendering process and its mapping onto parallel systems. In the interest of space, a representative example of the volume rendering process is presented here without derivation. Many derivations of similar processes have been published <ref> [Blinn82] </ref>, [Kajiya + 84]. Much of this example comes from Wilhelms and Gelder [Wilhelms + 91]. The input data is assumed band-limited. 1 - Reconstruct the continuous 3D scalar function F by convolving each sample point f with a reconstruction filter kernel K.
Reference: [Drebin + 88] <author> Robert A. Drebin, Loren Carpenter, and Pat Hanrahan. </author> <title> Volume Rendering. </title> <booktitle> Proceedings of SIGGRAPH '88, Computer Graphics 22, </booktitle> <volume> 4. </volume> <month> August </month> <year> 1988, </year> <pages> pp. 65 - 74. </pages>
Reference-contexts: Parallel Algorithms - Most previously published parallel approaches to volume rendering are not designed for general-purpose MIMD multicomputers. They often target special hardware and are demonstrative as opposed to comparative in nature. Drebin uses a four-channel SIMD processor to project a volume by serial transformation and compositing <ref> [Drebin + 88] </ref>. Each channel operates on a separate element of a voxel's data vector and has simultaneous access to a portion of a shared memory [Levinthal + 84]. Westover's multiple voxel shaders send their results to a central "splat-server" where they are composited into a final image [Westover89]. <p> A range of spline parameters were subjectively evaluated. The results of error analysis and use of the derivative to aid reconstruction are presented. Separable 3D cubic spline filters were used by Drebin, Carpenter, and Hanrahan <ref> [Drebin + 88] </ref> in their implementation. Hanrahan has presented a generalized serial transformation method that uses only three passes for a 3D affine transformation [Hanrahan90]. Westover uses a gaussian reconstruction kernel convolved with each data point to approximate reconstruction and integration [Westover89].
Reference: [Fuchs + 89] <author> Henry Fuchs, John Poulton, John Eyles, Trey Greer, Jack Goldfeather, David Ellsworth, Steve Molnar, Greg Turk, Brice Tebbs, Laura Israel. </author> <title> A Heterogeneous Multiprocessor Graphics System Using Processor Enhanced Memories. </title> <booktitle> Proceedings of SIGGRAPH '89, Computer Graphics 23, </booktitle> <volume> 4. </volume> <month> August </month> <year> 1989, </year> <pages> pp. 79 - 88. </pages>
Reference: [Goldwasser + 85] <editor> Samual M. Goldwasser, et al. </editor> <title> Physician's Workstation with Real-Time Performance. </title> <journal> IEEE Computer Graphics & Applications. </journal> <month> December </month> <year> 1985, </year> <pages> pp. </pages> <address> 45 -57. </address>
Reference-contexts: Several systems utilize multiple projection processors, each responsible for a subblock of data <ref> [Goldwasser + 85] </ref>, [Yazdy + 90]. However, these schemes rely on a single compositing processor which becomes a bottleneck as more projection processors are added. The method outlined by Levoy for Pixel-Planes 5 uses multiple SIMD shaders and MIMD projection processors, all interconnected by a ring network [Levoy89].
Reference: [Hanrahan90] <author> Pat Hanrahan. </author> <title> Three-Pass Affine Transforms for Volume Rendering. </title> <booktitle> Proceedings of the San Diego Workshop on Volume Visualization, Computer Graphics 24, </booktitle> <volume> 5. </volume> <month> November </month> <year> 1990, </year> <pages> pp. 71 - 78. </pages>
Reference-contexts: Separable 3D cubic spline filters were used by Drebin, Carpenter, and Hanrahan [Drebin + 88] in their implementation. Hanrahan has presented a generalized serial transformation method that uses only three passes for a 3D affine transformation <ref> [Hanrahan90] </ref>. Westover uses a gaussian reconstruction kernel convolved with each data point to approximate reconstruction and integration [Westover89]. Ray casting is often used with reconstruction by trilinear interpolation and integration by sampling along the view ray [Levoy88] [Sabella88] [Upson + 88]. <p> If linear interpolation is used to reconstruct the function for resampling, the cost is 3 multiplies and 6 additions per sample value for a complete transformation. Cubic interpolation increases this cost to 27 multiplies and 18 additions. Cubic interpolation has been used with good results in one implementation <ref> [Hanrahan90] </ref>. 4.1.3. Splatting - This approach computes the effect of each voxel on the pixels near the point to which it projects. Voxels are sorted by view order and convolved with a filter kernel. The reconstructed function is resampled and accumulated on a view-aligned grid.
Reference: [Hashimoto90] <author> Roy T. Hashimoto. </author> <title> A Comparison of Reconstruction Methods for Volume Rendering of Implicit Surfaces. </title> <type> Unpublished paper. </type> <month> May </month> <year> 1990. </year>
Reference-contexts: Cell projection with linear reconstruction and analytic integration was presented by Max, Hanrahan, and Crawfis [Max + 90]. Hashimoto did a comparison of 7 / 1 3 / 9 5 5 Proposal V 1.0 some 3D separable cubic reconstruction filters <ref> [Hashimoto90] </ref>. Some of his work will likely be repeated here. 4. Research Areas and Methods 4.1. Reconstruction Methods - Most published algorithms have used one of four rendering approaches; each uses reconstruction methods suited to it. These are the reconstruction methods I will compare. 4.1.1.
Reference: [Kajiya + 84] <author> Jim Kajiya and Brian Herzen. </author> <title> Ray Tracing Volume Densities. </title> <booktitle> Proceedings of SIGGRAPH '84, Computer Graphics 18, </booktitle> <volume> 3. </volume> <month> July </month> <year> 1984, </year> <pages> pp. 165 - 174. </pages>
Reference-contexts: This research focuses on the efficiency of the direct volume rendering process and its mapping onto parallel systems. In the interest of space, a representative example of the volume rendering process is presented here without derivation. Many derivations of similar processes have been published [Blinn82], <ref> [Kajiya + 84] </ref>. Much of this example comes from Wilhelms and Gelder [Wilhelms + 91]. The input data is assumed band-limited. 1 - Reconstruct the continuous 3D scalar function F by convolving each sample point f with a reconstruction filter kernel K.
Reference: [Laur + 91] <author> David Laur and Pat Hanrahan. </author> <title> Hierarchical Splatting: A Progressive Refinement Algorithm for Volume Rendering. </title> <booktitle> Proceedings of SIGGRAPH 91, Computer Graphics 25, </booktitle> <volume> 4. </volume> <month> July </month> <year> 1991, </year> <pages> pp. 285 - 288. </pages>
Reference: [Levinthal + 84] <author> Adam Levinthal and Thomas Porter. </author> <title> Chap - A SIMD Graphics Processor. </title> <booktitle> Proceedings of SIGGRAPH '84, Computer Graphics 18, </booktitle> <volume> 3. </volume> <month> July </month> <year> 1984, </year> <journal> pp. </journal> <volume> 77 - 82. 7 / 1 3 / 9 5 1 0 Proposal V 1.0 </volume>
Reference-contexts: Drebin uses a four-channel SIMD processor to project a volume by serial transformation and compositing [Drebin + 88]. Each channel operates on a separate element of a voxel's data vector and has simultaneous access to a portion of a shared memory <ref> [Levinthal + 84] </ref>. Westover's multiple voxel shaders send their results to a central "splat-server" where they are composited into a final image [Westover89].
Reference: [Levoy88] <author> Marc Levoy. </author> <title> Display of Surfaces From Volume Data . IEEE Computer Graphics and Applications 8, </title> <type> 3. </type> <month> March </month> <year> 1988, </year> <pages> pp. 29 - 37. </pages>
Reference-contexts: Westover uses a gaussian reconstruction kernel convolved with each data point to approximate reconstruction and integration [Westover89]. Ray casting is often used with reconstruction by trilinear interpolation and integration by sampling along the view ray <ref> [Levoy88] </ref> [Sabella88] [Upson + 88]. A method of projecting rectilinear cells and a comparative study of reconstruction and integration methods was recently published by Wilhelms and Gelder [Wilhelms + 91]. This work also showed the effects of varying precision in the compositing process.
Reference: [Levoy89] <author> Marc Levoy. </author> <title> Design for a Real-Time High Quality Volume Rendering Workstation. </title> <booktitle> Conference Proceedings, Chapel Hill Workshop on Volume Visualization. </booktitle> <month> May </month> <year> 1989, </year> <pages> pp. 85 - 92. </pages>
Reference-contexts: However, these schemes rely on a single compositing processor which becomes a bottleneck as more projection processors are added. The method outlined by Levoy for Pixel-Planes 5 uses multiple SIMD shaders and MIMD projection processors, all interconnected by a ring network <ref> [Levoy89] </ref>. I have used the Pixel-Planes 5 SIMD array to generate the splat kernel for the MIMD projection processors [Neumann91]. A data-parallel SIMD approach has been successfully implemented on the Connection Machine CM-2 using serial transformations [Shroder + 91].
Reference: [Max + 90] <author> Nelson Max, Pat Hanrahan, and Roger Crawfis. </author> <title> Area and Volume Coherence for Efficient Visualization of 3D Scalar Functions. </title> <booktitle> Conference Proceedings, San Diego Workshop on Volume Visualization. Computer Graphics 24, </booktitle> <volume> 5. </volume> <month> November </month> <year> 1990, </year> <pages> pp. 27 - 33. </pages>
Reference-contexts: This work also showed the effects of varying precision in the compositing process. Cell projection with linear reconstruction and analytic integration was presented by Max, Hanrahan, and Crawfis <ref> [Max + 90] </ref>. Hashimoto did a comparison of 7 / 1 3 / 9 5 5 Proposal V 1.0 some 3D separable cubic reconstruction filters [Hashimoto90]. Some of his work will likely be repeated here. 4. Research Areas and Methods 4.1. <p> The reconstructed function is resampled and accumulated on a view-aligned grid. Since the filter is position-invarient for affine transformations, software lookup table methods approximate the filter function quickly [Westover89]. 4.1.4. Cell Projection - Volumes are decomposed into polyhedra whose vertices are the volume data lattice [Shirley + 90] <ref> [Max + 90] </ref> [Wilhelms + 91]. The polyhedra are converted to polygons by projecting them under the view transformation. For affine projections all the polyhedra project to geometrically identical polygons. Reconstruction is done to obtain each polygon's vertex values for the opacity and emission functions.
Reference: [Mitchell + 88] <author> Don Mitchell and Arun Netravali. </author> <title> Reconstruction Filters in Computer Graphics. </title> <booktitle> Proceedings of SIGGRAPH '88, Computer Graphics 22, </booktitle> <volume> 4. </volume> <month> August </month> <year> 1988, </year> <pages> pp. 221 - 228. </pages>
Reference-contexts: This algorithm scales well on the CM-2 class of machines but it is limited to affine projections and rotation-only transformations. 3.2. Reconstruction and Integration - Mitchell and Netravali have published a comparative study of 2D separable cubic spline filters <ref> [Mitchell + 88] </ref>. A range of spline parameters were subjectively evaluated. The results of error analysis and use of the derivative to aid reconstruction are presented. Separable 3D cubic spline filters were used by Drebin, Carpenter, and Hanrahan [Drebin + 88] in their implementation.
Reference: [Neumann91] <author> Ulrich Neumann. </author> <title> Accelerating Volume Rendering with a Pixel-Processor Array. To be submitted for publication to The 1992 Symposium on Interactive Real Time Graphics. </title>
Reference-contexts: The method outlined by Levoy for Pixel-Planes 5 uses multiple SIMD shaders and MIMD projection processors, all interconnected by a ring network [Levoy89]. I have used the Pixel-Planes 5 SIMD array to generate the splat kernel for the MIMD projection processors <ref> [Neumann91] </ref>. A data-parallel SIMD approach has been successfully implemented on the Connection Machine CM-2 using serial transformations [Shroder + 91]. This algorithm scales well on the CM-2 class of machines but it is limited to affine projections and rotation-only transformations. 3.2.
Reference: [Neumann91b] <author> Ulrich Neumann. </author> <title> Taxonomy and Algorithms for Volume Rendering on Multicomputers. </title> <type> Tech Report TR91-015, </type> <institution> Dept. of Computer Science, UNC at Chapel Hill, </institution> <month> January </month> <year> 1991. </year> <title> [Sabella88] *Paolo Sabella. A Rendering Algorithm for Visualizing 3D Scalar Fields. </title> <booktitle> Proceedings of SIGGRAPH '88, Computer Graphics 22, </booktitle> <volume> 4. </volume> <month> August </month> <year> 1988, </year> <pages> pp. 51 - 58. </pages>
Reference: [Shirley + 90] <author> Peter Shirley and Allen Tuchman. </author> <title> A Polygonal Approximation to Direct Scalar Volume Rendering. </title> <booktitle> Conference Proceedings, San Diego Workshop on Volume Visualization. Computer Graphics 24, </booktitle> <volume> 5. </volume> <month> November </month> <year> 1990, </year> <pages> pp. 63 - 70. </pages>
Reference-contexts: The reconstructed function is resampled and accumulated on a view-aligned grid. Since the filter is position-invarient for affine transformations, software lookup table methods approximate the filter function quickly [Westover89]. 4.1.4. Cell Projection - Volumes are decomposed into polyhedra whose vertices are the volume data lattice <ref> [Shirley + 90] </ref> [Max + 90] [Wilhelms + 91]. The polyhedra are converted to polygons by projecting them under the view transformation. For affine projections all the polyhedra project to geometrically identical polygons. Reconstruction is done to obtain each polygon's vertex values for the opacity and emission functions.
Reference: [Shroder + 91] <author> Peter Shroder and James B. Salem. </author> <title> Fast Rotation of Volume Data on Data Parallel Architectures. </title> <note> Accepted for publication in Visualization91. </note>
Reference-contexts: I have used the Pixel-Planes 5 SIMD array to generate the splat kernel for the MIMD projection processors [Neumann91]. A data-parallel SIMD approach has been successfully implemented on the Connection Machine CM-2 using serial transformations <ref> [Shroder + 91] </ref>. This algorithm scales well on the CM-2 class of machines but it is limited to affine projections and rotation-only transformations. 3.2. Reconstruction and Integration - Mitchell and Netravali have published a comparative study of 2D separable cubic spline filters [Mitchell + 88].
Reference: [Upson + 88] <author> Craig Upson and Michael Keeler. V-Buffer: </author> <title> Visible Volume Rendering. </title> <booktitle> Proceedings of SIGGRAPH '88, Computer Graphics 22, </booktitle> <volume> 4. </volume> <month> August </month> <year> 1988, </year> <pages> pp. 59 - 64. </pages>
Reference-contexts: Westover uses a gaussian reconstruction kernel convolved with each data point to approximate reconstruction and integration [Westover89]. Ray casting is often used with reconstruction by trilinear interpolation and integration by sampling along the view ray [Levoy88] [Sabella88] <ref> [Upson + 88] </ref>. A method of projecting rectilinear cells and a comparative study of reconstruction and integration methods was recently published by Wilhelms and Gelder [Wilhelms + 91]. This work also showed the effects of varying precision in the compositing process.
Reference: [Westover89] <author> Lee Westover. </author> <title> Interactive Volume Rendering. </title> <booktitle> Conference Proceedings, Chapel Hill Workshop on Volume Visualization. </booktitle> <month> May </month> <year> 1989, </year> <pages> pp. 9 - 16. </pages>
Reference-contexts: Each channel operates on a separate element of a voxel's data vector and has simultaneous access to a portion of a shared memory [Levinthal + 84]. Westover's multiple voxel shaders send their results to a central "splat-server" where they are composited into a final image <ref> [Westover89] </ref>. The problem of the splat-server becoming a bottleneck as the number of shaders is increased is addressed in later work were he describes a distributed splatting approach where each node splats onto a set of scan lines [Westover91]. <p> Hanrahan has presented a generalized serial transformation method that uses only three passes for a 3D affine transformation [Hanrahan90]. Westover uses a gaussian reconstruction kernel convolved with each data point to approximate reconstruction and integration <ref> [Westover89] </ref>. Ray casting is often used with reconstruction by trilinear interpolation and integration by sampling along the view ray [Levoy88] [Sabella88] [Upson + 88]. A method of projecting rectilinear cells and a comparative study of reconstruction and integration methods was recently published by Wilhelms and Gelder [Wilhelms + 91]. <p> Voxels are sorted by view order and convolved with a filter kernel. The reconstructed function is resampled and accumulated on a view-aligned grid. Since the filter is position-invarient for affine transformations, software lookup table methods approximate the filter function quickly <ref> [Westover89] </ref>. 4.1.4. Cell Projection - Volumes are decomposed into polyhedra whose vertices are the volume data lattice [Shirley + 90] [Max + 90] [Wilhelms + 91]. The polyhedra are converted to polygons by projecting them under the view transformation. For affine projections all the polyhedra project to geometrically identical polygons.
Reference: [Westover91] <author> Lee Westover. </author> <title> Splatting a Feed Forward Approach to Volume Rendering. </title> <type> Ph.D. Dissertation. </type> <institution> Dept. of Computer Science, UNC at Chapel Hill. </institution> <month> TR91-?? July </month> <year> 1991. </year>
Reference-contexts: The problem of the splat-server becoming a bottleneck as the number of shaders is increased is addressed in later work were he describes a distributed splatting approach where each node splats onto a set of scan lines <ref> [Westover91] </ref>. Several systems utilize multiple projection processors, each responsible for a subblock of data [Goldwasser + 85], [Yazdy + 90]. However, these schemes rely on a single compositing processor which becomes a bottleneck as more projection processors are added.
Reference: [Wilhelms + 91] <author> Jane Wilhelms and Alan Van Gelder. </author> <title> A Coherent Projection Approach for Direct Volume Rendering. </title> <booktitle> Proceedings of SIGGRAPH '91, Computer Graphics 25, </booktitle> <volume> 4. </volume> <month> July </month> <year> 1991, </year> <pages> pp. 275 - 284. </pages>
Reference-contexts: In the interest of space, a representative example of the volume rendering process is presented here without derivation. Many derivations of similar processes have been published [Blinn82], [Kajiya + 84]. Much of this example comes from Wilhelms and Gelder <ref> [Wilhelms + 91] </ref>. The input data is assumed band-limited. 1 - Reconstruct the continuous 3D scalar function F by convolving each sample point f with a reconstruction filter kernel K. <p> Ray casting is often used with reconstruction by trilinear interpolation and integration by sampling along the view ray [Levoy88] [Sabella88] [Upson + 88]. A method of projecting rectilinear cells and a comparative study of reconstruction and integration methods was recently published by Wilhelms and Gelder <ref> [Wilhelms + 91] </ref>. This work also showed the effects of varying precision in the compositing process. Cell projection with linear reconstruction and analytic integration was presented by Max, Hanrahan, and Crawfis [Max + 90]. <p> Since the filter is position-invarient for affine transformations, software lookup table methods approximate the filter function quickly [Westover89]. 4.1.4. Cell Projection - Volumes are decomposed into polyhedra whose vertices are the volume data lattice [Shirley + 90] [Max + 90] <ref> [Wilhelms + 91] </ref>. The polyhedra are converted to polygons by projecting them under the view transformation. For affine projections all the polyhedra project to geometrically identical polygons. Reconstruction is done to obtain each polygon's vertex values for the opacity and emission functions. <p> Wilhelms and Gelder <ref> [Wilhelms + 91] </ref> describe several of theses approximations and show some results of their use. 4.2.1. Interval Step Size - As the step size is decreased the approximation becomes more accurate but at the expense of more computation. Typically one step per data sample is taken. 4.2.2.
Reference: [Yazdy + 90] <author> Farzad E. Yazdy, et al. CARVUPP: </author> <title> Computer Assisted Radiological Visualization Using Parallel Processing. </title> <booktitle> NATO ASI Series, Vol. F 60. 3-D Imaging in Medicine. </booktitle> <month> June </month> <year> 1990, </year> <pages> pp. 363 - 375. </pages>
Reference-contexts: Several systems utilize multiple projection processors, each responsible for a subblock of data [Goldwasser + 85], <ref> [Yazdy + 90] </ref>. However, these schemes rely on a single compositing processor which becomes a bottleneck as more projection processors are added. The method outlined by Levoy for Pixel-Planes 5 uses multiple SIMD shaders and MIMD projection processors, all interconnected by a ring network [Levoy89].
References-found: 22

