URL: http://archimedes.scs.uiuc.edu/codes/man.ps
Refering-URL: http://archimedes.scs.uiuc.edu/baron.html
Root-URL: http://www.cs.uiuc.edu
Email: E-mail: nikos@uiuc.edu  
Phone: Phone: 217-244-1304 Fax: 217-333-5052  
Title: BARON Branch And Reduce Optimization Navigator User's Manual Version 3.0  
Author: Nikolaos V. Sahinidis 
Date: September 18, 1998  
Web: http://archimedes.scs.uiuc.edu  
Address: 600 South Mathews Avenue Urbana, Illinois 61801, USA  
Affiliation: University of Illinois at Urbana-Champaign Department of Chemical Engineering  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Brooke, D. Kendrick, and A. Meeraus. </author> <title> GAMS-A User's Guide. </title> <publisher> The Scientific Press, </publisher> <address> Redwood City, CA, </address> <year> 1988. </year>
Reference-contexts: duality in its "reduce" arsenal with enhanced "branch and bound" concepts as it winds its way through the hills and valleys of complex optimization problems in search of global solutions. 1.1 Historical Notes The first version of BARON was merely 1800 lines of code written in the GAMS modeling language <ref> [1] </ref> in 1991-93 when duality-based range reduction techniques were developed [12]. The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems [4], circuit layout and compaction [2], and chemical process planning [6].
Reference: [2] <author> M. C. Dorneich and N. V. Sahinidis. </author> <title> Global Optimization Algorithms for Chip Layout and Compaction. </title> <journal> Engineering Optimization, </journal> <volume> 25 </volume> <pages> 131-154, </pages> <year> 1995. </year>
Reference-contexts: The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems [4], circuit layout and compaction <ref> [2] </ref>, and chemical process planning [6]. The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques [13] and was applied to polynomial and multiplicative programs [13], and robust controller design [15].
Reference: [3] <author> C. A. Floudas and P. M. Pardalos. </author> <title> A Collection of Test Problems for Constrained Global Optimization Algorithms. </title> <publisher> Springer-Verlag, </publisher> <address> Verlin, </address> <year> 1990. </year>
Reference-contexts: At the end of the branching step, two subproblems are created and a new node is selected for preprocessing. The branch and reduce algorithm is now illustrated through an example. CHAPTER 2. ALGORITHMIC OVERVIEW 18 2.7 Illustrative Example Consider the following concave quadratic programming problem <ref> [3] </ref>. min 42x 1 50x 2 2 + 45x 3 50x 2 +47x 4 50x 2 5 0 x i 1; i = 1; : : : ; 5 The global minimum for this problem occurs at x = (1; 1; 0; 1; 0), with an objective function value of 17.
Reference: [4] <author> R. A. Gutierrez and N. V. Sahinidis. </author> <title> A Branch-and-bound Approach for Machine Selection in Just-in-Time Manufacturing Systems. </title> <journal> International Journal of Production Research, </journal> <volume> 34 </volume> <pages> 797-818, </pages> <year> 1996. </year>
Reference-contexts: The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems <ref> [4] </ref>, circuit layout and compaction [2], and chemical process planning [6]. The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques [13] and was applied to polynomial and multiplicative programs [13], and robust controller design [15].
Reference: [5] <author> IBM. </author> <title> Optimization Subroutine Library Guide and Reference Release 2. </title> <institution> International Business Machines Corporation, Kingston, </institution> <address> NY, third edition, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: Most specialized modules require the use of a linear or nonlinear programming solver as shown in the following table. Feature LP solver NLP solver Core BARON NLP SCQP p p p p p POLY LMP GLMP p MIQP p MILP p Currently, we provide interfaces to OSL <ref> [5] </ref> and MINOS [11] for solving the required linear or nonlinear programming subproblems. The solver options are as follows: * The LP solver can be either OSL or MINOS in all modules except for FP which runs only under OSL. 27 CHAPTER 4.
Reference: [6] <author> M. L. Liu and N. V. Sahinidis. </author> <title> Process Planning in a Fuzzy Environment. </title> <journal> European Journal of Operational Research, </journal> <volume> 100 </volume> <pages> 142-169, </pages> <year> 1997. </year>
Reference-contexts: The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems [4], circuit layout and compaction [2], and chemical process planning <ref> [6] </ref>. The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques [13] and was applied to polynomial and multiplicative programs [13], and robust controller design [15]. This code also included 1 CHAPTER 1.
Reference: [7] <author> M. L. Liu, N. V. Sahinidis and J. P. Shectman. </author> <title> Planning of Chemical Process Networks via Global Concave Minimization. </title> <editor> In I. E. Gross-mann, editor, </editor> <booktitle> Global Optimization in Engineering Design, </booktitle> <pages> pages 195-230, </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1996. </year>
Reference-contexts: This code also included 1 CHAPTER 1. INTRODUCTION 2 specialized algorithms for separable concave minimization problems [14], and fixed-charge and other concave minimization problems arising in multi-period planning problems <ref> [7] </ref>. At that time, heuristic techniques were added for feasibility-based range reduction as well as branching schemes to ensure finiteness for certain problem classes [14]. These specialized codes and FORTRAN version of BARON were first made available through anonymous ftp on 2 March, 1995.
Reference: [8] <author> G. P. McCormick. </author> <title> Converting General Nonlinear Programming Problems to Separable Nonlinear Programming Problems. </title> <type> Technical Report Serial T-267, </type> <institution> The George Washington University, </institution> <address> Washington, D.C., </address> <year> 1972. </year> <note> BIBLIOGRAPHY 90 </note>
Reference-contexts: Finally, the algorithm incorporates a number of compound branching schemes that accelerate convergence of standard branching strategies as outlined in Section 2.6. 2.5 Lower Bounding Typically, the relaxed problem is constructed using factorable programming techniques (McCormick, <ref> [8] </ref>, [9], [10]), so that the relaxations are exact at the variable bounds. The tightness of the relaxation depends on the tightness of the variable bounds. Construction of underestimators for certain nonconvex terms is described below. 1.
Reference: [9] <author> G. P. McCormick. </author> <title> Computability of Global Solutions to Factorable Nonconvex Programs: Part I Convex Underestimating Problems. </title> <journal> Mathematical Programming, </journal> <volume> 10 </volume> <pages> 147-175, </pages> <year> 1976. </year>
Reference-contexts: Finally, the algorithm incorporates a number of compound branching schemes that accelerate convergence of standard branching strategies as outlined in Section 2.6. 2.5 Lower Bounding Typically, the relaxed problem is constructed using factorable programming techniques (McCormick, [8], <ref> [9] </ref>, [10]), so that the relaxations are exact at the variable bounds. The tightness of the relaxation depends on the tightness of the variable bounds. Construction of underestimators for certain nonconvex terms is described below. 1.
Reference: [10] <author> G. P. McCormick. </author> <title> Nonlinear Programming. Theory, Algorithms, and Applications. </title> <publisher> Wiley Interscience, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: Finally, the algorithm incorporates a number of compound branching schemes that accelerate convergence of standard branching strategies as outlined in Section 2.6. 2.5 Lower Bounding Typically, the relaxed problem is constructed using factorable programming techniques (McCormick, [8], [9], <ref> [10] </ref>), so that the relaxations are exact at the variable bounds. The tightness of the relaxation depends on the tightness of the variable bounds. Construction of underestimators for certain nonconvex terms is described below. 1. <p> Factorable functions are recursive compositions of sums and products of functions of single variables. Most functions of several variables used in nonlinear optimization are factorable and can be easily brought into separable form <ref> [10] </ref>. Currently, the types of functions allowed in this module include x ff ; fi x , for ff; fi 2 &lt;, exp (x) and ln (x). In this way, the capabilities of this module subsume those of all other specialized modules.
Reference: [11] <author> B. A. Murtagh and M. A. Saunders. </author> <title> MINOS 5.4 User's Guide. </title> <type> Technical Report SOL 83-20R, </type> <institution> Systems Optimization Laboratory, Department of Operations Research, Stanford University, </institution> <address> CA, </address> <year> 1995. </year>
Reference-contexts: Feature LP solver NLP solver Core BARON NLP SCQP p p p p p POLY LMP GLMP p MIQP p MILP p Currently, we provide interfaces to OSL [5] and MINOS <ref> [11] </ref> for solving the required linear or nonlinear programming subproblems. The solver options are as follows: * The LP solver can be either OSL or MINOS in all modules except for FP which runs only under OSL. 27 CHAPTER 4.
Reference: [12] <author> H. S. Ryoo and N. V. Sahinidis. </author> <title> Global Optimization of Nonconvex NLPs and MINLPs with Applications in Process Design. </title> <journal> Computers & Chemical Engineering, </journal> <volume> 19 </volume> <pages> 551-566, </pages> <year> 1995. </year>
Reference-contexts: concepts as it winds its way through the hills and valleys of complex optimization problems in search of global solutions. 1.1 Historical Notes The first version of BARON was merely 1800 lines of code written in the GAMS modeling language [1] in 1991-93 when duality-based range reduction techniques were developed <ref> [12] </ref>. The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems [4], circuit layout and compaction [2], and chemical process planning [6]. The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. <p> of complex optimization problems in search of global solutions. 1.1 Historical Notes The first version of BARON was merely 1800 lines of code written in the GAMS modeling language [1] in 1991-93 when duality-based range reduction techniques were developed <ref> [12] </ref>. The code was initially applied to standard engineering design problems [12], design of just-in-time manufacturing systems [4], circuit layout and compaction [2], and chemical process planning [6]. The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95.
Reference: [13] <author> H. S. Ryoo and N. V. Sahinidis. </author> <title> A Branch-and-Reduce Approach to Global Optimization. </title> <journal> Journal of Global Optimization, </journal> <volume> 8 </volume> <pages> 107-139, </pages> <year> 1996. </year>
Reference-contexts: The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques <ref> [13] </ref> and was applied to polynomial and multiplicative programs [13], and robust controller design [15]. This code also included 1 CHAPTER 1. INTRODUCTION 2 specialized algorithms for separable concave minimization problems [14], and fixed-charge and other concave minimization problems arising in multi-period planning problems [7]. <p> The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques <ref> [13] </ref> and was applied to polynomial and multiplicative programs [13], and robust controller design [15]. This code also included 1 CHAPTER 1. INTRODUCTION 2 specialized algorithms for separable concave minimization problems [14], and fixed-charge and other concave minimization problems arising in multi-period planning problems [7].
Reference: [14] <author> J. P. Shectman and N. V. Sahinidis. </author> <title> A Finite Algorithm for Global Minimization of Separable Concave Programs. </title> <journal> Journal of Global Optimization, </journal> <volume> 12 </volume> <pages> 1-36, </pages> <year> 1998. </year>
Reference-contexts: This code incorporated some additional range reduction techniques [13] and was applied to polynomial and multiplicative programs [13], and robust controller design [15]. This code also included 1 CHAPTER 1. INTRODUCTION 2 specialized algorithms for separable concave minimization problems <ref> [14] </ref>, and fixed-charge and other concave minimization problems arising in multi-period planning problems [7]. At that time, heuristic techniques were added for feasibility-based range reduction as well as branching schemes to ensure finiteness for certain problem classes [14]. <p> INTRODUCTION 2 specialized algorithms for separable concave minimization problems <ref> [14] </ref>, and fixed-charge and other concave minimization problems arising in multi-period planning problems [7]. At that time, heuristic techniques were added for feasibility-based range reduction as well as branching schemes to ensure finiteness for certain problem classes [14]. These specialized codes and FORTRAN version of BARON were first made available through anonymous ftp on 2 March, 1995. The current version of the code was developed in 1996-97. <p> Once every predetermined number of branch and bound iterations, the variable is branched at its midpoint (bisection). This ensures a significant reduction in the domains of the created subproblems and hence exhaustiveness, which is a key to finiteness, at least for certain problem classes <ref> [14] </ref>. 2. If the incumbent solution is present in the current subdomain, the value of the incumbent is used as the branching point provided that this process leads to two new subproblems that are distinct from their father node.
Reference: [15] <author> J. G. Van Antwerp, R. D. Braatz, and N. V. Sahinidis. </author> <title> Globally Optimal Robust Control for Systems with Nonlinear Time-Varying Perturbations. </title> <journal> Computers & Chemical Engineering, </journal> <volume> 21:S125-S130, </volume> <year> 1997. </year>
Reference-contexts: The second version was approximately 10,000 lines of code written in FORTRAN 77 in 1994-95. This code incorporated some additional range reduction techniques [13] and was applied to polynomial and multiplicative programs [13], and robust controller design <ref> [15] </ref>. This code also included 1 CHAPTER 1. INTRODUCTION 2 specialized algorithms for separable concave minimization problems [14], and fixed-charge and other concave minimization problems arising in multi-period planning problems [7].
References-found: 15

