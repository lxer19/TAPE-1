URL: http://www.cs.indiana.edu/l/www/classes/b689sv/docs/13ways.ps
Refering-URL: http://www.cs.indiana.edu/l/www/classes/b689sv/
Root-URL: http://www.cs.indiana.edu
Phone: (415) 604-4332  
Title: 13 Ways to Say Nothing with Scientific Visualization  NAS Applied Research Branch Mail Stop  
Author: Al E. Raible, 
Note: Copies of this report are available from:  
Address: 1  Moffett Field, CA 94035  
Affiliation: Globus, Computer Sciences Corporation  NASA Ames Research Center  NASA Ames Research Center  
Pubnum: T045-1  
Abstract: Report RNR-92-006 25 Feb. 92 Abstract Scientific visualization can be used to produce very beautiful images. Frequently users and others not properly initiated into the mysteries of visualization research fail to appreciate the artistic qualities of these images. Scientists will frequently use our work to needlessly understand the data from which it is derived. This paper describes a number of effective techniques to confound such pernicious activity. 
Abstract-found: 1
Intro-found: 1
Reference: [BAN90] <author> G. Bancroft, F. Merritt, T. Plessel, P. Kelaita, R. McCabe, A. Globus, </author> <title> FAST: A MultiProcessing Environment for Visualization of CFD, Proc.Visualization 90, </title> <publisher> IEEE Computer Society, </publisher> <address> San Francisco (1990). </address>
Reference-contexts: You may detect bugs in your code that will need to be fixed, a tedious chore. Much worse, other techniques may produce prettier pictures. 9. Avoid Visualization Systems Visualization systems, such as FAST <ref> [BAN90] </ref> and AVS [UPS89], provide mechanisms to add modules implementing new visualization techniques. There are two problem with these systems. First, users may violate rule 8 to your discomfort. Second, visualization systems are usually Not Invented Here. 10.
Reference: [DHB91] <author> D. Bailey, </author> <title> Twelve Ways to Fool the Masses When Giving Performance Results on Parallel Computers, Supercomputer Review, </title> <month> Aug. </month> <year> 1991, </year> <pages> pp. 54-55. </pages>
Reference-contexts: Introduction Upon reading D. Baileys seminal work, Twelve Ways to Fool the Masses When Giving Performance Results on Parallel Computers <ref> [DHB91] </ref>, the authors were struck by the brilliant simplicity of the concept. Bailey ends with the admonition ... conclude your technical presentation and roll the videotape. Audiences love razzle-dazzle color graphics, and this material often helps deect attention from the substantive technical issues. <p> Only the real pros will know you are lying, but they wont challenge you since we all make identical claims. Conclusion As Dr. Bailey pointed out in <ref> [DHB91] </ref>, ... it is often necessary for us to adopt some advanced techniques in order to deect attention from possibly unfavorable facts. This paper details a set of techniques to divert attention away from data and towards beauty.
Reference: [LC87] <author> W. E. Lorenson and H. E. Cline, </author> <title> Marching Cubes: a High Resolution 3d Surface Construction Algorithm, </title> <journal> Computer Graphics, </journal> <volume> Vol. 21, No 4, </volume> <month> July </month> <year> 1987, </year> <pages> pp 163-169. </pages>
Reference-contexts: Avoid Providing Performance Data When you are presenting a pretty picture, some stick-in-the-mud may ask how long it took to calculate. The fact that your ray-cast isosurface took hours of massively parallel supercomputer time to generate when nearly identical results could be achieved using marching cubes <ref> [LC87] </ref> in seconds on a workstation is irrelevant. In addition to being smoother (see rule 4), a ray cast image can include some wispy stuff scattered around to give the image an ethereal quality. 6.
Reference: [UPS89] <author> C. Upson, T. Faulhaber, D. Kamins, D. Laidlaw, D. Schlegel, J. Vroom, R. Gurwitz, A. van Dam, </author> <title> The Application Visualization System: A Computational Environment for Scientific Visualization, </title> <journal> IEEE Computer Graphics and Applications, </journal> <month> July </month> <year> 1989, </year> <pages> pp. 30-41. </pages>
Reference-contexts: You may detect bugs in your code that will need to be fixed, a tedious chore. Much worse, other techniques may produce prettier pictures. 9. Avoid Visualization Systems Visualization systems, such as FAST [BAN90] and AVS <ref> [UPS89] </ref>, provide mechanisms to add modules implementing new visualization techniques. There are two problem with these systems. First, users may violate rule 8 to your discomfort. Second, visualization systems are usually Not Invented Here. 10.
References-found: 4

