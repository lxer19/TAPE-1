URL: http://www.cs.ucsb.edu/~tyang/papers/hpdc7load.ps
Refering-URL: http://www.cs.ucsb.edu/Research/rapid_sweb/SWEB.html
Root-URL: http://www.cs.ucsb.edu
Email: smithtrg@cs.ucsb.edu  
Title: Adaptive Load Sharing for Clustered Digital Library Servers  
Author: Huican Zhu Tao Yang Qi Zheng David Watson Oscar H. Ibarra Terence Smith fhczhu, tyang, zheng, david, ibarra, 
Address: Santa Barbara, CA 93106  
Affiliation: Department of Computer Science University of California  
Abstract: This paper investigates load balancing strategies for clustered Alexandria digital library (ADL) servers. The ADL system, which provides on-line information searching and browsing of spatially-referenced materials through the World Wide Web, involves intensive database I/O and heterogeneous CPU activities. Clustering servers can improve the scalability of the ADL system in response to a large number of simultaneous access requests. One difficulty addressed is that clustered workstation nodes may be non-uniform in terms of CPU and I/O speeds. An optimization scheme is proposed in this paper to dynamically monitor the resource availability, use a low-cost communication strategy for updating load information among nodes, and schedule requests based on both I/O and computation load indices. Since the accurate cost estimation for processing database-searching requests is difficult, a sampling and prediction scheme is used to identify the relative efficiency of nodes for satisfying I/O and CPU demands of these requests. A set of experiments using the ADL traces have been conducted to verify the effectiveness of the proposed strategies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Andresen and et al. </author> <title> The WWW prototype of the alexan dria digital library. </title> <booktitle> Proceedings of ISDL'95: International Symposium on Digital Libraries, </booktitle> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: This trend will continue as digital storage costs dramatically decrease relative to the cost of traditional library shelf-space and as high performance electronic services and Internet connection become more popular and af fordable. The Alexandria project <ref> [1, 14] </ref>, supported by the national digital library initiatives, is focused on the design, implementation, and deployment of a distributed digital library for spatially-indexed information. The collections of the library currently involve geographically-referenced materials, such as maps, satellite images, digitized aerial photographs, and associated metadata.
Reference: [2] <author> D. Andresen, T. Yang, V. Holmedahl, and O. Ibarra. Sweb: </author> <title> Towards a scalable WWW server on multicomputers. </title> <booktitle> Proc. of Intl. Symp. on Parallel Processing, IEEE, </booktitle> <pages> pages 850856, </pages> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Issues related to building web server clusters have been addressed in the previous work. The first workstation Web server cluster [9] used a DNS round-robin rotation to assign requests to a server node. The SWEB project <ref> [2] </ref> further optimized such a system by redirecting requests based on dynamic system loads. Web request redirection based on the CPU loads has been also recently studied in [5, 12]. <p> The scheme attempts to predict the absolute processing time for each request based on its computation and I/O complexity as well as the CPU and I/O load on each node. For file retrieval and image-processing requests <ref> [2, 3] </ref> which have easy-to-identify CPU and I/O usage patterns, this scheme has been shown to be very effective. It is difficult, however, to predict the cost of database queries which dominate ADL request activities. <p> The cluster is presented as a single logical server to the Internet. User requests are first evenly routed to processors via DNS rotation <ref> [2, 9] </ref> and then redistributed within the cluster based on the resource usage on each node. Currently the ADL system uses Illustra as its database server and AOLserver2.2 as its Web server, primarily because of the internal support for Illustra database access by AOLserver. <p> For example, if a request involves a very small file retrieval, no redirection usually will occur. HTTP redirection technique has been used in SWEB <ref> [2] </ref> and a commercial product called distributed director from CISCO [4]. 3.1 Design of the load sharing strategy As the DNS assigns requests to server nodes in a round-robin fashion, a uniform distribution of requests among all the nodes is expected. However the following situations complicate the load distribution. 1. <p> For file retrieval and image processing requests, these values can be predicted with relative accuracy using the prediction model from earlier work <ref> [2, 3] </ref>. A detailed description of the formula is in [2, 3]. The scheduler uses function t s to predict the cost on different nodes, and select the node with the smallest value to process. <p> For file retrieval and image processing requests, these values can be predicted with relative accuracy using the prediction model from earlier work <ref> [2, 3] </ref>. A detailed description of the formula is in [2, 3]. The scheduler uses function t s to predict the cost on different nodes, and select the node with the smallest value to process.
Reference: [3] <author> D. Andresen, T. Yang, D. Watson, and A. Poulakida. </author> <title> Dy namic processor scheduling with client resources for fast multi-resolution WWW image browsing. </title> <booktitle> Proc. of Intl. Symp. on Parallel Processing, IEEE, </booktitle> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: The scheme attempts to predict the absolute processing time for each request based on its computation and I/O complexity as well as the CPU and I/O load on each node. For file retrieval and image-processing requests <ref> [2, 3] </ref> which have easy-to-identify CPU and I/O usage patterns, this scheme has been shown to be very effective. It is difficult, however, to predict the cost of database queries which dominate ADL request activities. <p> For file retrieval and image processing requests, these values can be predicted with relative accuracy using the prediction model from earlier work <ref> [2, 3] </ref>. A detailed description of the formula is in [2, 3]. The scheduler uses function t s to predict the cost on different nodes, and select the node with the smallest value to process. <p> For file retrieval and image processing requests, these values can be predicted with relative accuracy using the prediction model from earlier work <ref> [2, 3] </ref>. A detailed description of the formula is in [2, 3]. The scheduler uses function t s to predict the cost on different nodes, and select the node with the smallest value to process. <p> The average processing time of all the requests on all the nodes is 14 seconds for set S1 and 11.5 seconds for set S2. S1 and S2 contain solely database queries. Considering that the next version of the ADL testbed system will incorporate a progressive subregion image browsing scheme <ref> [3, 11] </ref>, we mixed S2 with 800 sample requests representing subregion image accessing/browsing with an average processing time of 1.5 seconds and 800 image file retrievals with an average processing time of 0.8 seconds. We call this new set S3.
Reference: [4] <author> CISCO. </author> <title> Distributed Director. </title> <note> http://www.cisco.com, 1997. </note>
Reference-contexts: For example, if a request involves a very small file retrieval, no redirection usually will occur. HTTP redirection technique has been used in SWEB [2] and a commercial product called distributed director from CISCO <ref> [4] </ref>. 3.1 Design of the load sharing strategy As the DNS assigns requests to server nodes in a round-robin fashion, a uniform distribution of requests among all the nodes is expected. However the following situations complicate the load distribution. 1.
Reference: [5] <author> M. Colajanni, P. Yu, and D. Dias. </author> <title> Scheduling algorithms for distributed web servers. </title> <booktitle> Proc. of Intl. Conf. on Distributed Computer Systems, IEEE, </booktitle> <pages> pages 169176, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: The SWEB project [2] further optimized such a system by redirecting requests based on dynamic system loads. Web request redirection based on the CPU loads has been also recently studied in <ref> [5, 12] </ref>. Previous load balancing research (e.g [13]) normally used one load index such as CPU usage or ready queue length and assumed uniform node capabilities.
Reference: [6] <author> S. Dandamudi. </author> <title> Performance impact of scheduling discipline on adaptive load sharing in homogeneous distributed sys tems. </title> <booktitle> Proc. of Intl. Conf. on Distributed Computer Systems, IEEE, </booktitle> <pages> pages 484492, </pages> <year> 1995. </year>
Reference-contexts: Which nodes are to be considered for redirection? How should the load information of a node be propagated to other nodes? Node selection and load collection policies have been studied in <ref> [6, 7, 15] </ref> and we list the two most popular strategies below. * Broadcast. Every t seconds, each node broadcasts its load (CPU idle ratio and disk bandwidth availability) to other nodes. <p> Given a request arrival rate, the generator controls the inter-arrival rate ( I) among requests following a Poisson process, a standard model for evaluating client server applications <ref> [6, 7] </ref>. We ran our experiments during night hours to minimize external load activities. We repeated each experiment four times with the same set of parameters (request arrival rate, ! value and load collection and node selection policy).
Reference: [7] <author> D. L. Eager, E. D. Lazowska, and J. Zahojan. </author> <title> Adaptive load sharing in homogeneous distributed systems. </title> <journal> IEEE Trans on Software Engineering, </journal> <volume> 12(5):662675, </volume> <year> 1986. </year>
Reference-contexts: Which nodes are to be considered for redirection? How should the load information of a node be propagated to other nodes? Node selection and load collection policies have been studied in <ref> [6, 7, 15] </ref> and we list the two most popular strategies below. * Broadcast. Every t seconds, each node broadcasts its load (CPU idle ratio and disk bandwidth availability) to other nodes. <p> Given a request arrival rate, the generator controls the inter-arrival rate ( I) among requests following a Poisson process, a standard model for evaluating client server applications <ref> [6, 7] </ref>. We ran our experiments during night hours to minimize external load activities. We repeated each experiment four times with the same set of parameters (request arrival rate, ! value and load collection and node selection policy).
Reference: [8] <author> E. Fox, R. Akscyn, R. Furuta, and Leggett. </author> <title> Special issue on digital libraries. </title> <journal> CACM, </journal> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Network information systems are becoming increasingly important with the advent of Internet technology. Digital library (DL) systems <ref> [8] </ref>, which provide on-line retrieval and processing of digitized documents through the Internet, have increasingly turned into a topic of national importance.
Reference: [9] <author> E. Katz, M. Butler, and R. McGrath. </author> <title> A scalable HTTP server: the ncsa prototype. Computer Networks and ISDN Systems, </title> <address> 27:155164, </address> <year> 1994. </year>
Reference-contexts: ADL server is currently implemented as a Web-based information system, therefore, multiple clustered ADL servers can be viewed as a web server group. Issues related to building web server clusters have been addressed in the previous work. The first workstation Web server cluster <ref> [9] </ref> used a DNS round-robin rotation to assign requests to a server node. The SWEB project [2] further optimized such a system by redirecting requests based on dynamic system loads. Web request redirection based on the CPU loads has been also recently studied in [5, 12]. <p> The cluster is presented as a single logical server to the Internet. User requests are first evenly routed to processors via DNS rotation <ref> [2, 9] </ref> and then redistributed within the cluster based on the resource usage on each node. Currently the ADL system uses Illustra as its database server and AOLserver2.2 as its Web server, primarily because of the internal support for Illustra database access by AOLserver.
Reference: [10] <author> R. Lipton and J. Naughton. </author> <title> Query size estimation by adap tive sampling. </title> <institution> J. Comput. Syst. Sci., 51:1825, </institution> <year> 1995. </year>
Reference-contexts: It is difficult, however, to predict the cost of database queries which dominate ADL request activities. Although some research work on predicting the result size of a query is available (e.g. <ref> [10] </ref>), no result exists on how to accurately predict the actual processing time of a general database query based on the current CPU and I/O resource availability. <p> A detailed description of the formula is in [2, 3]. The scheduler uses function t s to predict the cost on different nodes, and select the node with the smallest value to process. For a database searching query, it is difficult to predict the exact cost <ref> [10] </ref>, especially for queries which may involve spatial data searching, such as those in the ADL system. To address this issue, we obtained the ADL access log from Nov 15, 1997 to Jan 8, 1998.
Reference: [11] <author> A. Poulakidas and et al. </author> <title> A compact storage scheme for fast wavelet-based subregion retrieval. </title> <booktitle> Proc. of 1997 In ternational Computing and Combinatorics Conference (CO COON), </booktitle> <month> Aug. </month> <year> 1997. </year>
Reference-contexts: The average processing time of all the requests on all the nodes is 14 seconds for set S1 and 11.5 seconds for set S2. S1 and S2 contain solely database queries. Considering that the next version of the ADL testbed system will incorporate a progressive subregion image browsing scheme <ref> [3, 11] </ref>, we mixed S2 with 800 sample requests representing subregion image accessing/browsing with an average processing time of 1.5 seconds and 800 image file retrievals with an average processing time of 0.8 seconds. We call this new set S3.
Reference: [12] <author> Resonate. </author> <note> Dispatch. http://www.resonate.com, 1997. </note>
Reference-contexts: The SWEB project [2] further optimized such a system by redirecting requests based on dynamic system loads. Web request redirection based on the CPU loads has been also recently studied in <ref> [5, 12] </ref>. Previous load balancing research (e.g [13]) normally used one load index such as CPU usage or ready queue length and assumed uniform node capabilities.
Reference: [13] <author> B. A. Shirazi, A. R. Hurson, and K. M. Kavi, </author> <title> editors. Scheduling and Load Balancing in Parallel and Distributed Systems. </title> <publisher> IEEE CS Press, </publisher> <year> 1995. </year>
Reference-contexts: The SWEB project [2] further optimized such a system by redirecting requests based on dynamic system loads. Web request redirection based on the CPU loads has been also recently studied in [5, 12]. Previous load balancing research (e.g <ref> [13] </ref>) normally used one load index such as CPU usage or ready queue length and assumed uniform node capabilities.
Reference: [14] <author> T. Smith. </author> <title> A digital library for geographically referenced materials. </title> <journal> IEEE Computer, </journal> <volume> 29(5):5460, </volume> <year> 1996. </year>
Reference-contexts: This trend will continue as digital storage costs dramatically decrease relative to the cost of traditional library shelf-space and as high performance electronic services and Internet connection become more popular and af fordable. The Alexandria project <ref> [1, 14] </ref>, supported by the national digital library initiatives, is focused on the design, implementation, and deployment of a distributed digital library for spatially-indexed information. The collections of the library currently involve geographically-referenced materials, such as maps, satellite images, digitized aerial photographs, and associated metadata.
Reference: [15] <author> S. Zhou. </author> <title> A trace-driven simulation study of dynamic load balancing. </title> <journal> IEEE Trans. Softw. Eng., </journal> <volume> 14(9):13271341, </volume> <month> Sept. </month> <year> 1988. </year>
Reference-contexts: Which nodes are to be considered for redirection? How should the load information of a node be propagated to other nodes? Node selection and load collection policies have been studied in <ref> [6, 7, 15] </ref> and we list the two most popular strategies below. * Broadcast. Every t seconds, each node broadcasts its load (CPU idle ratio and disk bandwidth availability) to other nodes.
Reference: [16] <author> H. Zhu, T. Yang, Q. Zheng, D. Watson, O.H.Ibarra, and T. Smith. </author> <title> Adaptive load sharing for clustered digital library servers. </title> <type> Technical Report, CS, </type> <institution> UCSB, </institution> <year> 1998. </year>
Reference-contexts: Section 4 presents experimental results to examine the effectiveness of the proposed techniques. Section 5 concludes the paper. We have also conducted an analysis on performance bounds of our cluster. The results can be found in <ref> [16] </ref>. 2 The Alexandria Digital Library The primary research of the ADL is to provide users with spatially-referenced access to large classes of distributed library holdings through the Internet. <p> When reporting experiment results, besides listing the average inter-arrival time, we also list the expected waiting queue length Q p on each node in order to give readers some impression of system load. Q p is calculated by assuming that the request processing time is exponentially distributed <ref> [16] </ref>. 4.2 Multi-node performance This subsection examines the performance of the system when the number of nodes in the cluster is varied. The node selection and load collection policy used here is the hybrid method, combining random poll and multicast.
References-found: 16

