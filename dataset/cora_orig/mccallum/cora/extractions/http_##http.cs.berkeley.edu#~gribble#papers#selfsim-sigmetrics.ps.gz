URL: http://http.cs.berkeley.edu/~gribble/papers/selfsim-sigmetrics.ps.gz
Refering-URL: http://http.cs.berkeley.edu/~gribble/papers/papers.html
Root-URL: 
Email: fgribble,manku,drew,brewerg@cs.berkeley.edu  ftgibso2,elmg@cs.umbc.edu  
Title: Self-Similarity in File Systems  
Author: Steven D. Gribble, Gurmeet Singh Manku, Drew Roselli, and Eric A. Brewer Timothy J. Gibson and Ethan L. Miller 
Address: Berkeley  Baltimore County  
Affiliation: Computer Science Division, University of California at  Computer Science and Electrical Engineering Department, University of Maryland  
Abstract: We demonstrate that high-level file system events exhibit self-similar behaviour, but only for short-term time scales of approximately under a day. We do so through the analysis of four sets of traces that span time scales of milliseconds through months, and that differ in the trace collection method, the filesystems being traced, and the chronological times of the tracing. Two sets of detailed, short-term file system trace data are analyzed; both are shown to have self-similar like behaviour, with consistent Hurst parameters (a measure of self-similarity) for all file system traffic as well as individual classes of file system events. Long-term file system trace data is then analyzed, and we discover that the traces' high variability and self-similar behaviour does not persist across time scales of days, weeks, and months. Using the short-term trace data, we show that sources of file system traffic exhibit ON/OFF source behaviour, which is characterized by highly variably lengthed bursts of activity, followed by similarly variably lengthed periods of inactivity. This ON/OFF behaviour is used to motivate a simple technique for synthesizing a stream of events that exhibit the same self-similar short-term behaviour as was observed in the file system traces. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Baker, M. G., Hartman, J. H., Kupfer, M. D., Shirriff, K. W., and Ousterhout, J. K. </author> <title> Measurements of a Distributed File System. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Operating Systems Principles (1991). </booktitle>
Reference-contexts: In [19], the effects of file layout and fragmentation of a disk on file system performance are measured using synthesized workloads. Baker et al. analyzed the user-level file access patterns in the Sprite distributed file system using traces gathered via kernel instrumentation in a Sprite installation <ref> [7, 1] </ref>. The design and performance of a log-structured file system is presented in [18], including the analysis of various cleaning policies. The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section. <p> The first set of traces was collected in 1991 for a study of the file access patterns and caching behaviour of the Sprite distributed file system <ref> [1] </ref>. The traces were collected on a Sprite cluster of approximately 40 workstations sharing a single Ethernet, over eight separate 24 hour intervals. <p> It is also clear that the ON periods for NFS block read events are much sharper and more dense than for Sprite file open (W) events. This difference is easily explainable. First and foremost, files are known to be read far more frequently than they are written <ref> [1] </ref>; from table 1 we see that approximately 13.4% of NFS files are opened with write or RW privileges, while 86.6% of files are opened with read-only privilege. Similarly, [1] reported that 88% of files within the Sprite traces were opened with read-only privilege. <p> First and foremost, files are known to be read far more frequently than they are written <ref> [1] </ref>; from table 1 we see that approximately 13.4% of NFS files are opened with write or RW privileges, while 86.6% of files are opened with read-only privilege. Similarly, [1] reported that 88% of files within the Sprite traces were opened with read-only privilege. Secondly, many file read and write events occur in between a given file open and close pair.
Reference: [2] <author> Beran, J., Sherman, R., Taqqu, M. S., and Willinger, W. </author> <title> Long-range Dependence in Variable-Bit-Rate Video Traffic. </title> <journal> IEEE Transactions on Communications 43 (Mar. </journal> <year> 1995). </year>
Reference-contexts: 1 Introduction Recent studies of high quality traces of network traffic (see [9], <ref> [2] </ref>, and [15]) have revealed an unexpected property of network traffic, namely that the traffic appears to be self-similar in nature. Intuitively, a self-similar process looks similar and bursty across all time-scales. <p> If the combined traffic is self-similar, this is not necessarily the case. Further studies have shown that the total traffic (measured in bytes/s or packets/s) on Ethernet LANs [9] and on WANs [16] is self-similar. Similarly, investigations into variable-bit-rate (VBR) video traffic <ref> [2] </ref> have shown this traffic to exhibit long-range dependence, which is an indicator of self-similarity. <p> We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. Self-similar behaviour in various other types of systems (such as wide-area traffic [16], ATM networks [6], variable-bit-rate video <ref> [2] </ref>, and World Wide Web traffic [3]) has been detected using similar techniques. The analysis of file system performance, access characteristics, and traffic patterns has received considerable attention in the past few years. <p> Open events are quickly followed by close events; the open and close event processes should therefore be equally bursty and asymptotically self-similar. 5.2 R/S-Analysis and Pox plots A second estimate of the Hurst parameter can be obtained through R/S analysis (originally presented in [13], and fully explained in <ref> [2] </ref>). Given a set of observations (X k : k = 1; 2; : : : ; N ), that set is subdivided into K disjoint, contiguous subsets of length (N=K).
Reference: [3] <author> Crovella, M. E., and Bestavros, A. </author> <title> Explaining world wide web traffic self-similarity. </title> <type> Tech. Rep. </type> <institution> TR-95-015, Computer Science Department, Boston University, </institution> <month> Oct </month> <year> 1995. </year>
Reference-contexts: We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. Self-similar behaviour in various other types of systems (such as wide-area traffic [16], ATM networks [6], variable-bit-rate video [2], and World Wide Web traffic <ref> [3] </ref>) has been detected using similar techniques. The analysis of file system performance, access characteristics, and traffic patterns has received considerable attention in the past few years. In [19], the effects of file layout and fragmentation of a disk on file system performance are measured using synthesized workloads. <p> However, at time scales approaching a day, this linear relationship breaks down, as evidenced by the "knees" in each curve. This effect can also be observed in previously published work. In figure 4 (d) we have replicated a previously published variance-time plot from <ref> [3] </ref> that illustrates self-similarity in world wide web traffic. This effect of non-linearity can be observed here; the plot just begins to fall off of the straight line as the dataset's time scales are exhausted. <p> The first two figures (a) and (b) are of INS trace events, and the second is of the UMBC trace events. (d) is a reproduced figure from a published paper on self-similarity in World Wide Web traffic <ref> [3] </ref>. ory developed initially by Mandelbrot [11] and then Taqqu and Levy [20]. The theory states that the aggregation of many ON/OFF sources, each exhibiting a characteristic known as the Noah effect, results in self-similar total traffic.
Reference: [4] <author> Dahlin, M. D., Mather, C. J., Wang, R. Y., Anderson, T. E., and Patterson, D. A. </author> <title> A quantitative analysis of cache policies for scalable network file systems. </title> <booktitle> In Proceedings of the SIGMETRICS '94 Annual Conference on Measurement and Modeling of Computer Systems (Nashville, </booktitle> <address> Tennessee, </address> <month> May </month> <year> 1994). </year>
Reference-contexts: The second set of traces used in this paper was gathered from a relatively large NFS installation served by a single Auspex NFS server. These traces were collected in 1994 to study the impact of different cache policies on scalable network file system performance <ref> [4] </ref>. The Auspex NFS server straddled four separate Ethernets, and served a total of 237 clients. The traces were collected by monitoring network activity on each of the four Ethernets. This implies that any file system request satisfied by a client-side NFS cache was not present in the trace.
Reference: [5] <author> Ferrari, D., and Verma, D. C. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications 8, </journal> <month> 3 </month> <year> (1990). </year>
Reference-contexts: The theoretical and practical consequences of having a self-similar process cannot be dismissed. A common assumption in the design of networks and operating systems is that the aggregation of a large number of bursty sources tends to be smooth. For example, statistical admissions criteria in real-time channel establishment <ref> [5] </ref> assume that while an individual source may exceed its average resource requirements at any given time, the aggregate resource requirements across many such sources has a low variance. If the combined traffic is self-similar, this is not necessarily the case.
Reference: [6] <author> Georganas, N. D. </author> <title> Self-similar ("fractal") traffic in atm networks. </title> <booktitle> In Proceedings of the 2nd International Workshop on Advanced Teleservices and High-Speed Communications Architectures (IWACA '94) (Heidelberg, </booktitle> <address> Germany, </address> <month> Sept. </month> <year> 1994), </year> <pages> pp. 1-7. </pages>
Reference-contexts: We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. Self-similar behaviour in various other types of systems (such as wide-area traffic [16], ATM networks <ref> [6] </ref>, variable-bit-rate video [2], and World Wide Web traffic [3]) has been detected using similar techniques. The analysis of file system performance, access characteristics, and traffic patterns has received considerable attention in the past few years.
Reference: [7] <author> Hartman, J. H. </author> <title> Using the Sprite File System Traces. </title> <institution> Computer Science Division, EECS Department, University of California at Berkeley, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: In [19], the effects of file layout and fragmentation of a disk on file system performance are measured using synthesized workloads. Baker et al. analyzed the user-level file access patterns in the Sprite distributed file system using traces gathered via kernel instrumentation in a Sprite installation <ref> [7, 1] </ref>. The design and performance of a log-structured file system is presented in [18], including the analysis of various cleaning policies. The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section.
Reference: [8] <author> Kratz, M. F., and Resnick, S. I. </author> <title> The qq-estimator and heavy tails. </title> <type> Preprint, </type> <year> 1995. </year>
Reference: [9] <author> Leland, W. E., Taqqu, M. S., Willinger, W., and Wil-son, D. V. </author> <title> On the Self-Similar Nature of Ethernet Traffic (extended version). </title> <journal> IEEE/ACM Transactions on Networking 2 (Feb. </journal> <year> 1994). </year>
Reference-contexts: 1 Introduction Recent studies of high quality traces of network traffic (see <ref> [9] </ref>, [2], and [15]) have revealed an unexpected property of network traffic, namely that the traffic appears to be self-similar in nature. Intuitively, a self-similar process looks similar and bursty across all time-scales. <p> If the combined traffic is self-similar, this is not necessarily the case. Further studies have shown that the total traffic (measured in bytes/s or packets/s) on Ethernet LANs <ref> [9] </ref> and on WANs [16] is self-similar. Similarly, investigations into variable-bit-rate (VBR) video traffic [2] have shown this traffic to exhibit long-range dependence, which is an indicator of self-similarity. <p> A summary of this paper is presented and general conclusions drawn in section 8. 2 Related Work The study of self-similarity in computer networks was pioneered by the work of Leland et al., in which they demonstrated that Ethernet traffic was self-similar in nature <ref> [9] </ref>. 1 Further work showed that the self-similarity could be attributed to the ON/OFF behaviour of traffic sources within their system [23]. We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. <p> The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section. A more thorough treatment can be found in <ref> [9] </ref>, [23], or [16]; the goal of this section is to outline enough of the theory to motivate the methodology discussed in section 5. <p> As described in <ref> [9] </ref>, self-similar processes provide an ex planation for an empirical law known as the Hurst effect. <p> In [10], an analysis of a subset of heavy-tailed distributions 4 known as Power-tail distributions is presented. This work argues that the self-similarity identified in systems (including the Ethernet traffic from <ref> [9] </ref>) can be explained by an arrival process with such a power-tail distribution.
Reference: [10] <author> Lipsky, L. </author> <title> Modelling telecommunications systems that have power-tail (bursty, chaotic, heavy-tail, self-similar, etc.) traffic. </title> <booktitle> In Proceedings of the 22nd International Conference on Technology Management and Performance Evaluation of Enterprise-Wide Information Systems (CMG96) (San Diego, </booktitle> <address> CA, USA, </address> <month> December </month> <year> 1996). </year>
Reference-contexts: For such short time scales, however, the file system traffic is well-represented by a self-similar process, but for long time scales, self-similarity does not give a good representation of the traffic. In <ref> [10] </ref>, an analysis of a subset of heavy-tailed distributions 4 known as Power-tail distributions is presented. This work argues that the self-similarity identified in systems (including the Ethernet traffic from [9]) can be explained by an arrival process with such a power-tail distribution. <p> This work argues that the self-similarity identified in systems (including the Ethernet traffic from [9]) can be explained by an arrival process with such a power-tail distribution. Power-tail distributions do obey the central limit theorem, but only for extremely large aggregation values. <ref> [10] </ref> argues that Le-land et al. would have observed their traffic instability to smooth out if only they had increased the time scale of their analysis by another 2 orders of magnitude to a total of 7.
Reference: [11] <author> Mandelbrot, B. </author> <title> Self-similar Error Clusters in Communication Systems and the Concept of Conditional Stationarity. </title> <journal> IEEE Transactions on Communication Technology COM-13 (1965). </journal>
Reference-contexts: The first two figures (a) and (b) are of INS trace events, and the second is of the UMBC trace events. (d) is a reproduced figure from a published paper on self-similarity in World Wide Web traffic [3]. ory developed initially by Mandelbrot <ref> [11] </ref> and then Taqqu and Levy [20]. The theory states that the aggregation of many ON/OFF sources, each exhibiting a characteristic known as the Noah effect, results in self-similar total traffic.
Reference: [12] <author> Mandelbrot, B. </author> <title> The Fractal Nature of Geometry. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, NY, USA, </address> <year> 1983. </year>
Reference-contexts: If H &lt; 0:5, the values produced are self-similar with a negative correlation. Negative correlated data tends to reverse itself instead of continuing along the same path. Positive and negative correlated data is also called persistent and anti-persistent data, respectively. <ref> [12] </ref> Most observed self-similar data to date is persistent. requests (including those that are satisfied by a client-side cache) are present within the trace. The Sprite traces suffer from some minor limitations, such as a lack of fully complete information on file read and write events.
Reference: [13] <author> Mandelbrot, B. B., and Wallis, J. R. </author> <title> Computer experiments with fractional gaussian noises. </title> <booktitle> Water Resources Research 5 (1969). </booktitle>
Reference-contexts: Open events are quickly followed by close events; the open and close event processes should therefore be equally bursty and asymptotically self-similar. 5.2 R/S-Analysis and Pox plots A second estimate of the Hurst parameter can be obtained through R/S analysis (originally presented in <ref> [13] </ref>, and fully explained in [2]). Given a set of observations (X k : k = 1; 2; : : : ; N ), that set is subdivided into K disjoint, contiguous subsets of length (N=K).
Reference: [14] <author> Ousterhout, J. K., Costa, H. D., Harrison, D., Kunze, J., Kupfer, M., and Thompson, J. </author> <title> A Trace-driven Analysis of the UNIX 4.2 BSD File System. Operating System Review 19, </title> <booktitle> 4 (1985), </booktitle> <pages> 15-24. </pages>
Reference-contexts: Thus, the long-term traces collapse many events into one. Similarly, the trace collection process does not track how many times a file is used during a day. Finally, it misses all the temporary files the system creates and deletes during the day | Ousterhout <ref> [14] </ref> noted that 80% of all file creations have a lifetime of less than three minutes; all of these are missed. Tables 1 and 2 summarizes the number of events within the portions of the traces analyzed in the paper.
Reference: [15] <author> Paxson, V. </author> <title> Fast approximation of self-similar network traffic. </title> <type> Tech. rep., </type> <institution> Lawrence Berkeley Laboratory and EECS Division, University of California, Berkeley, </institution> <address> 1 Cyclotron Road, Berkeley, CA 94720, </address> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Recent studies of high quality traces of network traffic (see [9], [2], and <ref> [15] </ref>) have revealed an unexpected property of network traffic, namely that the traffic appears to be self-similar in nature. Intuitively, a self-similar process looks similar and bursty across all time-scales.
Reference: [16] <author> Paxson, V., and Floyd, S. </author> <title> Wide-area Traffic: the Failure of Poisson Modeling. </title> <booktitle> In ACM SIGCOMM '94 Conference on Communications Architectures, Protocols and Applications (London, </booktitle> <address> UK, </address> <month> Aug. </month> <year> 1994). </year>
Reference-contexts: If the combined traffic is self-similar, this is not necessarily the case. Further studies have shown that the total traffic (measured in bytes/s or packets/s) on Ethernet LANs [9] and on WANs <ref> [16] </ref> is self-similar. Similarly, investigations into variable-bit-rate (VBR) video traffic [2] have shown this traffic to exhibit long-range dependence, which is an indicator of self-similarity. <p> We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. Self-similar behaviour in various other types of systems (such as wide-area traffic <ref> [16] </ref>, ATM networks [6], variable-bit-rate video [2], and World Wide Web traffic [3]) has been detected using similar techniques. The analysis of file system performance, access characteristics, and traffic patterns has received considerable attention in the past few years. <p> The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section. A more thorough treatment can be found in [9], [23], or <ref> [16] </ref>; the goal of this section is to outline enough of the theory to motivate the methodology discussed in section 5.
Reference: [17] <author> Roselli, D. </author> <title> Characteristics of file system workloads. </title> <type> Tech. rep., </type> <institution> The University of California at Berkeley, </institution> <year> 1998. </year>
Reference-contexts: The third set of traces was collected on a cluster of twenty instructional UNIX workstations used by undergraduate classes at UC Berkeley <ref> [17] </ref>. These long term traces (referred to as the INS traces throughout the paper) were gathered by using the auditing system to log all system calls relevant to the file system on each workstation.
Reference: [18] <author> Rosenblum, M., and Ousterhout, J. K. </author> <title> The Design and Implementation of a Log-Structured File System. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Operating Systems Principles (1991). </booktitle>
Reference-contexts: Baker et al. analyzed the user-level file access patterns in the Sprite distributed file system using traces gathered via kernel instrumentation in a Sprite installation [7, 1]. The design and performance of a log-structured file system is presented in <ref> [18] </ref>, including the analysis of various cleaning policies. The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section.
Reference: [19] <author> Smith, K., and Seltzer, M. </author> <title> File layout and file system performance. </title> <type> Tech. Rep. </type> <institution> TR-35-94, Harvard University, </institution> <year> 1994. </year>
Reference-contexts: The analysis of file system performance, access characteristics, and traffic patterns has received considerable attention in the past few years. In <ref> [19] </ref>, the effects of file layout and fragmentation of a disk on file system performance are measured using synthesized workloads. Baker et al. analyzed the user-level file access patterns in the Sprite distributed file system using traces gathered via kernel instrumentation in a Sprite installation [7, 1].
Reference: [20] <author> Taqqu, M., and Levy, J. </author> <title> Using renewal processes to generate long-range dependence and high variability. In Dependence in Probability and Statistics (Boston, </title> <address> MA, </address> <year> 1986), </year> <editor> E. Eberlein and M. Taqqu, </editor> <booktitle> Eds., </booktitle> <pages> pp. 73-89. </pages>
Reference-contexts: The first two figures (a) and (b) are of INS trace events, and the second is of the UMBC trace events. (d) is a reproduced figure from a published paper on self-similarity in World Wide Web traffic [3]. ory developed initially by Mandelbrot [11] and then Taqqu and Levy <ref> [20] </ref>. The theory states that the aggregation of many ON/OFF sources, each exhibiting a characteristic known as the Noah effect, results in self-similar total traffic. <p> The Noah effect refers to the high variability of the ON and OFF periods. If the distribution of ON and OFF period lengths from individual sources is heavy-tailed, then the aggregate traffic exhibits the Noah effect, and can be shown to exhibit self-similarity. The theory presented in <ref> [20] </ref> makes the simplifying assumption that events within an ON period are evenly distributed.
Reference: [21] <author> Tukey, J., and Tukey, P. </author> <title> Strips displaying empirical distributions: I. textured dot strips. </title> <note> In Bellcore Technical Memorandum (1990). </note>
Reference-contexts: Figure 5 presents two textured dot strip plots obtained from the Sprite and NFS traces. A textured dot strip plot (proposed in <ref> [21] </ref>) is a two-dimensional representation of a one-dimensional time-series. Each vertical column in a plot corresponds to one time unit; the displacement of dots (representing events) within that column represents the fractional position of the event in that time unit.
Reference: [22] <author> Wilkes, J., Golding, R., Staelin, C., and Sullivan, T. </author> <title> The hp autoraid hierarchical storage system technology. </title> <booktitle> In Proceedings of the 15th Symposium on Operating System Principles (Monterey, </booktitle> <address> CA, USA, </address> <month> Nov </month> <year> 1995). </year>
Reference-contexts: The design and performance of a log-structured file system is presented in [18], including the analysis of various cleaning policies. The HP AutoRAID hierarchical storage system is discussed in <ref> [22] </ref>. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section. A more thorough treatment can be found in [9], [23], or [16]; the goal of this section is to outline enough of the theory to motivate the methodology discussed in section 5.
Reference: [23] <author> Willinger, W., Taqqu, M. S., Sherman, R., and Wilson, D. V. </author> <title> Self-similarity through high-variability: Statistical analysis of ethernet lan traffic at the source level. </title> <booktitle> In ACM SIGCOMM '95 Conference on Communications Architectures, Protocols and Applications (Cambridge, </booktitle> <address> MA, USA, </address> <year> 1995). </year>
Reference-contexts: Related Work The study of self-similarity in computer networks was pioneered by the work of Leland et al., in which they demonstrated that Ethernet traffic was self-similar in nature [9]. 1 Further work showed that the self-similarity could be attributed to the ON/OFF behaviour of traffic sources within their system <ref> [23] </ref>. We borrow heavily upon the theory and analysis techniques presented in these two papers to demonstrate the presence of self-similarity in file system traffic. <p> The HP AutoRAID hierarchical storage system is discussed in [22]. 3 Theory of Self-Similarity The theory behind self-similar processes is briefly presented in this section. A more thorough treatment can be found in [9], <ref> [23] </ref>, or [16]; the goal of this section is to outline enough of the theory to motivate the methodology discussed in section 5. <p> To do so, we use a method similar to that described in <ref> [23] </ref>. <p> satisfy P (U &gt; u) ~ cu with u ! 1; 1 &lt; ff &lt; 2; (14) for period length U, and if the activity within an ON-period is uniform, then the aggregation of many such sources results in a self-similar process with Hurst parameter H = 3ff 2 . <ref> [23] </ref> Once the ON and OFF periods from a given source have been identified, we can verify the presence of the Noah effect using complementary cumulative distribution plots, or "qq-plots."[8] The idea is simple: if we assume that the period length distribution under analysis obeys equation 14, then by taking the <p> We also used a second method for identifying the Noah effect known as a Hill plot. We omit details of this analysis, but merely state that its results confirm those of the qq-plot. Interested readers are referred to <ref> [23] </ref> for a treatment of Hill plots. Both the Hill and qq-plot analysis confirm that the observed ON and OFF periods lengths are Pareto distributed.
References-found: 23

