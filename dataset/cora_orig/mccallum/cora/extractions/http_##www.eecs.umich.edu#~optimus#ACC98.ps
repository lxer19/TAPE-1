URL: http://www.eecs.umich.edu/~optimus/ACC98.ps
Refering-URL: http://www.eecs.umich.edu/~optimus/
Root-URL: http://www.cs.umich.edu
Title: Randomized Algorithms for a Certain Real Computation Problem  
Author: Albert Yoon and Pramod Khargonekar 
Date: September 15, 1997  
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Dept. of Electrical Engineering and Computer Science The University of Michigan  
Abstract: In this paper, we apply several random search algorithms to a very special computation problem posed by Zhu, Huang, and Doyle [11]. The problem is NP hard and so different algorithms which compute solutions effectively are being investigated. The effectiveness of the randomized algorithms is assessed by running them on exactly the same examples used in [11] and comparing the results with those obtained by their branch and bound algorithm. In particular, we present one simple random search algorithm which provides good estimates to the solution with reasonable computation times.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Braatz, P. Young, J. Doyle, and M. Morari. </author> <title> Computational complexity of calculation. </title> <booktitle> In Proceedings of the American Control Conference, </booktitle> <pages> pages 1682-1683, </pages> <address> San Francisco, California, </address> <year> 1993. </year>
Reference-contexts: Since M and are real and the ffi are not repeated, it can be shown [6] that the maximum in 2.4 is on a vertex of B. The solution of this problem is known to be NP hard <ref> [1] </ref> and so one usually resorts to computing upper and lower bounds on with algorithms that have polynomial complexity.
Reference: [2] <author> Q. Duan, S. Sorooshian, and V. Gupta. </author> <title> Effective and efficient global optimization for conceptual rainfall-runoff models. </title> <journal> Water Resources Research, </journal> <volume> 28(4) </volume> <pages> 1015-1031, </pages> <year> 1992. </year>
Reference-contexts: However, there is potential savings in the number of function evaluations since only the vertices are evaluated. Both approaches find lower bounds on . 4 Random Search Algorithms The ARS II algorithm [10] and the Shu*ed Complex Evolution (SCE) algorithm <ref> [2] </ref> are used for the first approach. The algorithms are listed below. 4 Adaptive Random Search II (ARS II) Inputs: N ,m,p,iterations,fl Initialization: Let fl = fl, let i = 1 and evaluate the cost function, J at N points which are generated uniformly from B.
Reference: [3] <author> P. Khargonekar and A. Tikku. </author> <title> Randomized algorithms for robust control analysis and synthesis have polynomial complexity. </title> <booktitle> In Proceedings of the 35th IEEE International Conference on Decision and Control, </booktitle> <pages> pages 3470-3475, </pages> <address> Kobe, Japan, </address> <year> 1996. </year>
Reference-contexts: In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms [7], genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms <ref> [3, 8, 10] </ref>. This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there.
Reference: [4] <author> C. Marrison and R. Stengel. </author> <title> The use of random search and genetic algorithms to optimize stochastic robustness functions. </title> <booktitle> In Proceedings of American Control Conference, </booktitle> <pages> pages 1484-1489, </pages> <address> Baltimore, Maryland, </address> <year> 1994. </year>
Reference-contexts: In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms [7], genetic algorithms and simulated annealing <ref> [11, 4] </ref>, and a host of other randomized algorithms [3, 8, 10]. This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there.
Reference: [5] <author> J. A. Nelder and R. Mead. </author> <title> A simplex method for function minimization. </title> <journal> Computer Journal, </journal> <volume> 7 </volume> <pages> 308-313, </pages> <year> 1965. </year>
Reference-contexts: Otherwise, let i = 1 and go to step 7 Step 7: If j &lt; fi then let j = j + 1 and go to step 1. Otherwise, end and return the modified complex. In this algorithm, a modified Nelder-Mead <ref> [5] </ref> algorithm is run in parallel with p different complexes. In regular intervals, the complexes are shu*ed and the new complexes are then run again in parallel.
Reference: [6] <author> M. P. Newlin. </author> <title> Model Validation, Control, and Computation. </title> <type> PhD thesis, </type> <institution> California Institute of Technology, </institution> <year> 1996. </year>
Reference-contexts: Since M and are real and the ffi are not repeated, it can be shown <ref> [6] </ref> that the maximum in 2.4 is on a vertex of B. The solution of this problem is known to be NP hard [1] and so one usually resorts to computing upper and lower bounds on with algorithms that have polynomial complexity.
Reference: [7] <author> M. P. Newlin and P. M. Young. </author> <title> Mixed problems and branch and bound techniques. </title> <booktitle> In Proceedings of the 31st IEEE International Conference on Decision and Control, </booktitle> <pages> pages 3175-3180, </pages> <address> Tucson, Arizona, </address> <year> 1992. </year> <month> 12 </month>
Reference-contexts: See, for example, the literature on the computational complexity properties of robust stability analysis for real parametric uncertainty. In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms <ref> [7] </ref>, genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms [3, 8, 10]. This paper is focused on a very special computation problem considered in [11].
Reference: [8] <author> L. Ray and R. Stengel. </author> <title> Stochastic robustness of linear time-invariant control systems. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 36 </volume> <pages> 82-87, </pages> <year> 1991. </year>
Reference-contexts: In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms [7], genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms <ref> [3, 8, 10] </ref>. This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there.
Reference: [9] <author> C. R. Reeves. </author> <title> Modern heuristic techniques for combinatorial problems. </title> <publisher> Halsted Press, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: There 11 is a large body of literature available for solving combinatorial optimization problems that can be tapped for future research. For example, several heuristic, randomized approaches such as genetic algorithms and simulated annealing are presented in <ref> [9] </ref>. 7 Acknowledgement The authors wish to thank Professor J. C. Doyle and Ms. X. Zhu for providing the data for the problems considered in this paper.
Reference: [10] <author> A. Yoon and P. Khargonekar. </author> <title> Compuational experiments for robust analysis. </title> <booktitle> In Proceedings of the Conference on Decision and Control, </booktitle> <address> San Diego, California, </address> <year> 1997. </year> <note> To Appear. </note>
Reference-contexts: In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms [7], genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms <ref> [3, 8, 10] </ref>. This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there. <p> This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there. In a recent paper <ref> [10] </ref>, we have presented a number of randomized algorithms for robust stability analysis with real parametric uncertainty. The computational performance of some of these algorithms has been very encouraging even for large (as measured by the state dimension or the number of uncertain parameters) size problems. <p> The computational performance of some of these algorithms has been very encouraging even for large (as measured by the state dimension or the number of uncertain parameters) size problems. This motivated us to the consider the problem in [11] and see if the randomized algorithms investigated in <ref> [10] </ref> provided effective tools for the special computation problem posed therein. It turns out that the special computation problem can not be easily posed as a robust stability analysis problem. Therefore, we modified an algorithm in [10] for this particular problem. <p> the consider the problem in [11] and see if the randomized algorithms investigated in <ref> [10] </ref> provided effective tools for the special computation problem posed therein. It turns out that the special computation problem can not be easily posed as a robust stability analysis problem. Therefore, we modified an algorithm in [10] for this particular problem. The main aim of this paper is to present some numerical results to assess the effectiveness of these randomized algorithms. For our numerical studies, we have chosen exactly the same numerical examples as those considered in [11]. <p> In [11], a branch and bound method is used to tighten these upper and lower bounds. Unlike the problem in <ref> [10] </ref>, where M is a dynamic, LTI system (A; B; C), the system here is static and so no frequency sweep has to be done on the computation of . (In [10], the problem is formulated in a way that a frequency sweep is unnecessary.) As well, in the general robust <p> Unlike the problem in <ref> [10] </ref>, where M is a dynamic, LTI system (A; B; C), the system here is static and so no frequency sweep has to be done on the computation of . (In [10], the problem is formulated in a way that a frequency sweep is unnecessary.) As well, in the general robust stability 3 analysis problem, the entire space B must be considered, rather than the vertices alone. <p> Genetic algorithms and simulated annealing are both tested in [11] as possible randomized algorithms for tackling the simpler problem. According to their findings, both genetic algorithms and simulated annealing are not competitive with their own branch and bound algorithm. Based on our previous work <ref> [10] </ref>, two approaches with randomized algorithms are considered here. One considers the entire space B and seeks the solution to 2.4 with the techniques used in [10]. These can be considered as interior point techniques. The other considers solely the vertices of B and a new algorithm is developed. <p> Based on our previous work <ref> [10] </ref>, two approaches with randomized algorithms are considered here. One considers the entire space B and seeks the solution to 2.4 with the techniques used in [10]. These can be considered as interior point techniques. The other considers solely the vertices of B and a new algorithm is developed. <p> The second approach optimizes over a discrete space and thus has its own challenges. However, there is potential savings in the number of function evaluations since only the vertices are evaluated. Both approaches find lower bounds on . 4 Random Search Algorithms The ARS II algorithm <ref> [10] </ref> and the Shu*ed Complex Evolution (SCE) algorithm [2] are used for the first approach. <p> The interior point searches seek the optimum by obtaining samples inside 8 B. For a general robustness problem, this type of approach would be used. All of the algorithms in <ref> [10] </ref> are of this type. However, the structure of the problem in this paper is such that the solution lies on a vertex of the search space. As such, a vertex search can be done to increase the speed at which good solutions can be found. <p> As expected, the vertex random search is more efficient than the interior point random search. However, a more general robust stability analysis problem such as that presented in <ref> [10] </ref> does not have the nice features that this problem has and so the interior point search would have to be conducted. For the class of robust analysis problems presented in [10], these interior point search methods appear to be effective. <p> However, a more general robust stability analysis problem such as that presented in <ref> [10] </ref> does not have the nice features that this problem has and so the interior point search would have to be conducted. For the class of robust analysis problems presented in [10], these interior point search methods appear to be effective. A comparison between the vertex search and branch and bound is not straightforward since the computational effort required by the branch and bound algorithm, whether in flops or run time, was not available to us.
Reference: [11] <author> X. Zhu, Y. Huang, and J. Doyle. </author> <title> Genetic algorithms and simulated annealing for robustness analysis. </title> <booktitle> In Proceedings of the American Control Conference, </booktitle> <pages> pages 3756-3760, </pages> <address> Albuquerque, New Mexico, </address> <year> 1997. </year> <month> 13 </month>
Reference-contexts: In view of these results, many different types of algorithms are being investigated to find effective computational solutions to these problems. These include branch and bound algorithms [7], genetic algorithms and simulated annealing <ref> [11, 4] </ref>, and a host of other randomized algorithms [3, 8, 10]. This paper is focused on a very special computation problem considered in [11]. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there. <p> These include branch and bound algorithms [7], genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms [3, 8, 10]. This paper is focused on a very special computation problem considered in <ref> [11] </ref>. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there. In a recent paper [10], we have presented a number of randomized algorithms for robust stability analysis with real parametric uncertainty. <p> These include branch and bound algorithms [7], genetic algorithms and simulated annealing [11, 4], and a host of other randomized algorithms [3, 8, 10]. This paper is focused on a very special computation problem considered in <ref> [11] </ref>. The results in [11] indicate that genetic algorithms and simulated annealing were not very effective for the type and size of problems considered there. In a recent paper [10], we have presented a number of randomized algorithms for robust stability analysis with real parametric uncertainty. <p> The computational performance of some of these algorithms has been very encouraging even for large (as measured by the state dimension or the number of uncertain parameters) size problems. This motivated us to the consider the problem in <ref> [11] </ref> and see if the randomized algorithms investigated in [10] provided effective tools for the special computation problem posed therein. It turns out that the special computation problem can not be easily posed as a robust stability analysis problem. Therefore, we modified an algorithm in [10] for this particular problem. <p> Therefore, we modified an algorithm in [10] for this particular problem. The main aim of this paper is to present some numerical results to assess the effectiveness of these randomized algorithms. For our numerical studies, we have chosen exactly the same numerical examples as those considered in <ref> [11] </ref>. Along with each example, the solution found by their branch and bound algorithm is also provided. <p> For example, for 64 fi 64 size problems, our algorithms take, on average, 4.5 hours on a 200 MHz Pentium class personal computer. 2 Robust Stability Analysis Problem As stated above, the problem that is considered in this paper is the simple computation problem presented in <ref> [11] </ref>. Consider the feedback system (M; ) containing a matrix M 2 R nfin and the perturbation shown in Figure 1. 2 The perturbations are unknown, but are assumed to have a known structure. <p> The NP hardness of this problem along with the conservatism of the bounds motivates us to focus on efficient means of coming to approximate solutions and reducing the conservatism of the bounds. In <ref> [11] </ref>, a branch and bound method is used to tighten these upper and lower bounds. <p> Genetic algorithms and simulated annealing are both tested in <ref> [11] </ref> as possible randomized algorithms for tackling the simpler problem. According to their findings, both genetic algorithms and simulated annealing are not competitive with their own branch and bound algorithm. Based on our previous work [10], two approaches with randomized algorithms are considered here. <p> The results of the randomized algorithms are compared with each other in addition to the results found by the branch and bound algorithm of <ref> [11] </ref>. A discussion of the performance of each of the algorithms is also provided in this 7 section. 5.1 Problem Data and Method of Comparison The problem data comes from the authors of [11] and makes some comparison of results possible. <p> compared with each other in addition to the results found by the branch and bound algorithm of <ref> [11] </ref>. A discussion of the performance of each of the algorithms is also provided in this 7 section. 5.1 Problem Data and Method of Comparison The problem data comes from the authors of [11] and makes some comparison of results possible. There is a total of 250 problems with 50 matrices each of sizes 4 fi 4; 8 fi 8; 16 fi 16; 32 fi 32; and 64 fi 64. <p> At the same time, the randomized algorithms are compared with the results of the branch and bound algorithm. While the branch and bound algorithm in <ref> [11] </ref> was not readily available to us, the results of the algorithm for each problem were provided. <p> In the tables of results below, we let &lt;, =, and &gt; refer to the number of times out of 50 that the randomized algorithm finds an answer that is respectively less than, equal to, or greater than the lower bound found by the branch and bound algorithm of <ref> [11] </ref>. These numbers do not necessarily indicate superiority or inferiority of the randomized algorithms to the branch and bound algorithm since information of the computational effort in flops or computation time to arrive at the answers for the branch and bound algorithm is not available. <p> However, the results provided here are intended to demonstrate that randomized algorithms are a viable approach to the problem, in contrast to the conclusions of <ref> [11] </ref> concerning genetic algorithms and simluated annealing. All trials were run on a DELL 200 M Hz Pentium Pro machine. 5.2 Interior Versus Vertex Searches As mentioned previously, two types of randomized algorithm are studied: the interior point search and the vertex search. <p> However, the structure of the problem in this paper is such that the solution lies on a vertex of the search space. As such, a vertex search can be done to increase the speed at which good solutions can be found. In <ref> [11] </ref>, genetic algorithms and simulated annealing are used to perform a vertex search. <p> A comparison between interior and vertex random searches was done as well as a comparison between the vertex search and the results of the branch and bound algorithm of <ref> [11] </ref>. As expected, the vertex random search is more efficient than the interior point random search.
References-found: 11

