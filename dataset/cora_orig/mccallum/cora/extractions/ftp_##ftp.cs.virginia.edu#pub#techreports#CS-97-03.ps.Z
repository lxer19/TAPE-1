URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-97-03.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fas4r|jorgg@cs.Virginia.EDU  
Title: S GPS: Slow-Start Generalized Processor Sharing  
Author: Anastasios Stamoulis Jorg Liebeherr 
Address: Charlottesville, VA 22903  
Affiliation: Department of Computer Science University of Virginia  
Note: February 1997.  advantages of the S 2 GPS scheduling discipline. This work is supported in part by the National Science Foundation under Grant No. NCR-9309224 and NCR-9624106.  
Abstract: Technical Report No. CS-97-03, Computer Science Department, University of Virginia, Abstract Packet scheduling methods that approximate Generalized Processor Sharing (GPS) are currently the focus of much research in the area of Quality-of-Service (QoS) networks. The ability of GPS schedulers to provide rate guarantees as well as delay guarantees meets the demand of many network applications. This paper addresses a shortcoming of GPS which can have significant impact on the service provided by GPS, however, which has been given little attention. Since, with GPS, the service rate received by a session is proportional to the number of backlogged sessions in the system, the service rate of a session may change abruptly if some other session becomes active. This may result in abrupt increases of delay of consecutive packets. In this paper, we propose a new scheduler, called Slow-Start GPS (S 2 GPS), which alleviates the problem of abrupt decreases of service rates when new sessions start transmitting. S 2 GPS is a modification of GPS where a session does not receive its guaranteed service rate immediately after it becomes active. Instead, the service rate of a session is gradually increased. We show that this prevents an abrupt delay increase of the other sessions. We derive delay bounds for sessions constrained by leaky buckets and we express quantitatively the 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ATM Forum, </author> <title> ATM Forum Traffic Management Specification Version 4.0, </title> <month> April </month> <year> 1996. </year>
Reference-contexts: Adaptive Applications: It is generally accepted that adaptive applications, which dynamically adjust their performance parameters based on bandwidth availability or delay of incoming packets, will play an indispensable role in the integrated services network infrastructure of the future <ref> [1, 5, 4] </ref>. The difficulty of supporting adaptive applications relates to sudden changes in the bandwidth availability, which cause large fluctuations in the network delay. An adaptive application must handle this situation either by buffering or by adjusting properly its playback rate.
Reference: [2] <author> J. C. R. Bennett and H. Zhang. </author> <title> Hierarchical packet fair queueing algorithms. </title> <booktitle> In Proc. ACM Sigcomm'96, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: In [14], a probabilistic variant of fairness queuing called Stochastic Fairness Queuing is proposed; this is based on the idea that a hash function will be used to map every session into a fixed set of queues. In <ref> [2, 15] </ref>, hierarchical implementations of GPS are proposed. In [15], the implementation is based on a GPS scheduler, where the weights of the sessions are dynamically changed. <p> In [2, 15], hierarchical implementations of GPS are proposed. In [15], the implementation is based on a GPS scheduler, where the weights of the sessions are dynamically changed. In <ref> [2] </ref>, Hierarchical Worst-Case Weighted Fair Queuing is proposed (H-WF 2 Q+); this scheduling discipline is a hierarchical expansion of multiple one-level GPS servers. Finally, given this proliferation of GPS variants, in [10, 22], a general framework that attempts to encompass these variants is proposed.
Reference: [3] <author> J. C. R. Bennett and H. Zhang. WF2Q: </author> <title> Worst-case fair weighted fair queueing. </title> <booktitle> In Proc. IEEE Infocom '96, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: In [16, 17], worst-case delay bounds are provided for single node and multiple node networks. In [23, 24], GPS is studied from a probabilistic point of view and statistical bounds on backlog and delay are derived. In <ref> [3] </ref>, it is shown that PGPS is not the best packet approximation of GPS because a session in PGPS can be far ahead of GPS in terms of served packets. 4 A new approximation of GPS called Worst-case Weighted Fair Queuing (WF 2 Q) is proposed which mitigates this problem.
Reference: [4] <author> R. Braden, D. Clark, and S. Shenker. </author> <title> Integrated Services in the Internet Architecture: an Overview. </title> <type> IETF RFC 1633, </type> <month> July </month> <year> 1994. </year>
Reference-contexts: Adaptive Applications: It is generally accepted that adaptive applications, which dynamically adjust their performance parameters based on bandwidth availability or delay of incoming packets, will play an indispensable role in the integrated services network infrastructure of the future <ref> [1, 5, 4] </ref>. The difficulty of supporting adaptive applications relates to sudden changes in the bandwidth availability, which cause large fluctuations in the network delay. An adaptive application must handle this situation either by buffering or by adjusting properly its playback rate.
Reference: [5] <author> D. D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: architecture and mechanisms. </title> <booktitle> In Proc. ACM Sigcomm'92, </booktitle> <pages> pages 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Adaptive Applications: It is generally accepted that adaptive applications, which dynamically adjust their performance parameters based on bandwidth availability or delay of incoming packets, will play an indispensable role in the integrated services network infrastructure of the future <ref> [1, 5, 4] </ref>. The difficulty of supporting adaptive applications relates to sudden changes in the bandwidth availability, which cause large fluctuations in the network delay. An adaptive application must handle this situation either by buffering or by adjusting properly its playback rate.
Reference: [6] <author> R. L. Cruz. </author> <title> A calculus for network delay, part I: network elements in isolation. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37(1) </volume> <pages> 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: In [16], it was proved that for leaky bucket constrained sessions, GPS guarantees deterministic worst-case delays. Specifically, let A i (t; t) be the amount of traffic of Session i that arrives in the time interval (t; t]. A leaky bucket <ref> [6] </ref> is defined as a pair (; ) where is a burst factor and is a rate factor. We say that a Session i is ( i ; i )-constrained if: A i (t; t) i + i (t t ), for all t t .
Reference: [7] <author> J. Davin and A. Heybey. </author> <title> A simulation study of fair queueing and policy enforcement. </title> <journal> Computer Communication Review, </journal> <volume> 20(5) </volume> <pages> 23-29, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: However, this comes at the expense of fairness and the increase of worst-case delays because of the error that the approximation of GPS introduces. Similar in spirit is the Fair Queuing Fixed Quota (FQFQ) scheduling discipline <ref> [7] </ref>, where each session is allocated a fixed amount of buffer space that is available in the switch; if a session occupies all its buffer space, then all arriving packets of this session are discarded.
Reference: [8] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <booktitle> In Proc. ACM Sigcomm'89, </booktitle> <pages> pages 1-12, </pages> <year> 1989. </year>
Reference-contexts: The property of sharing is one of the fundamental advantages of packet-switched networks over circuit-switched networks, since it enables switches to achieve a high utilization of link capacities. The Generalized Processor Sharing (GPS) scheduling method is known to support isolation and sharing in a QoS network <ref> [8, 16, 17] </ref>. GPS can provide rate guarantees to the sessions it services. However, with GPS, a session that has been active for a long period of time can experience dramatic decreases in its service rate when some other previously idle session becomes active. <p> Since in real networks, packets have a finite size, and only one packet can be transmitted at a time, approximations of GPS are needed that emulate the idealized GPS discipline. Weighted Fair Queueing (WFQ) <ref> [8] </ref> and Packetized GPS (PGPS) [16] have approximated GPS using the concept of virtual time to measure the progress in the fluid model. Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. <p> The concept of virtual time as a means of implementing PGPS was proposed in <ref> [8, 16] </ref>; the virtual time V (t) in [8, 16] is used as a measure of progress in the system. When packets arrive, the scheduler assigns virtual time deadlines to them and serves packets in increasing order of these deadlines. <p> The concept of virtual time as a means of implementing PGPS was proposed in <ref> [8, 16] </ref>; the virtual time V (t) in [8, 16] is used as a measure of progress in the system. When packets arrive, the scheduler assigns virtual time deadlines to them and serves packets in increasing order of these deadlines.
Reference: [9] <author> S. J. Golestani. </author> <title> A self-clocked fair queueing scheme for broandband applications. </title> <booktitle> In Proc. IEEE Infocom '94, </booktitle> <pages> pages 636-646, </pages> <year> 1994. </year>
Reference-contexts: One of the problems associated with PGPS is that keeping track of virtual time can be compu-tationally expensive which makes it difficult to implement PGPS at high speeds. Self-Clocked Fair Queuing (SCFQ) <ref> [9] </ref> and Start-time Fair Queuing (SFQ) [11] address this issue by providing a different way of calculating the virtual time in GPS. Under these schemes, the scheduler does not keep track of the virtual time using a computationally expensive function.
Reference: [10] <author> P. Goyal and H. M. Vin. </author> <title> Generalized guaranteed rate scheduling algorithms: a framework. </title> <type> Technical Report TR95-30, </type> <institution> University of Texas at Austin. </institution>
Reference-contexts: In [2], Hierarchical Worst-Case Weighted Fair Queuing is proposed (H-WF 2 Q+); this scheduling discipline is a hierarchical expansion of multiple one-level GPS servers. Finally, given this proliferation of GPS variants, in <ref> [10, 22] </ref>, a general framework that attempts to encompass these variants is proposed. In [10], this framework takes the form of a generalized version of GPS, under which variable service rates can be allocated to the packets of a session. In [22], the concept of a Latency-Rate scheduler is introduced. <p> In [2], Hierarchical Worst-Case Weighted Fair Queuing is proposed (H-WF 2 Q+); this scheduling discipline is a hierarchical expansion of multiple one-level GPS servers. Finally, given this proliferation of GPS variants, in [10, 22], a general framework that attempts to encompass these variants is proposed. In <ref> [10] </ref>, this framework takes the form of a generalized version of GPS, under which variable service rates can be allocated to the packets of a session. In [22], the concept of a Latency-Rate scheduler is introduced.
Reference: [11] <author> P. Goyal, H. M. Vin, and H. Cheng. </author> <title> Start-time fair queueing: a scheduling algorithm for intergrated services packet switching networks. </title> <booktitle> In ACM Sigcomm'96, </booktitle> <pages> pages 157-168, </pages> <year> 1996. </year>
Reference-contexts: One of the problems associated with PGPS is that keeping track of virtual time can be compu-tationally expensive which makes it difficult to implement PGPS at high speeds. Self-Clocked Fair Queuing (SCFQ) [9] and Start-time Fair Queuing (SFQ) <ref> [11] </ref> address this issue by providing a different way of calculating the virtual time in GPS. Under these schemes, the scheduler does not keep track of the virtual time using a computationally expensive function.
Reference: [12] <author> V. Jacobson and M. J. Karels. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proc. ACM Sigcomm'88, </booktitle> <year> 1988. </year>
Reference-contexts: Note that the name of our scheduler borrows from the well-known concept of "slow-start" in TCP congestion control <ref> [12] </ref>. Our mechanism of slow-start is different from slow-start in TCP [12], but similar in spirit; in both cases the goal is to avoid congestion by preventing abrupt changes in the transmission rate of a session. <p> Note that the name of our scheduler borrows from the well-known concept of "slow-start" in TCP congestion control <ref> [12] </ref>. Our mechanism of slow-start is different from slow-start in TCP [12], but similar in spirit; in both cases the goal is to avoid congestion by preventing abrupt changes in the transmission rate of a session. Note, however, that our proposed slow-start technique is used at the scheduler level and not at the transport layer as in TCP.
Reference: [13] <author> J. Liebeherr, D. E. Wrege, and Domenico Ferrari. </author> <title> Exact Admission Control in Networks with Bounded Delay Services. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(6):885 - 901, </volume> <month> December </month> <year> 1996. </year>
Reference: [14] <author> P. McKenney. </author> <title> Stochastic fair queueing. </title> <booktitle> In Proc. IEEE Infocom'90, </booktitle> <month> June </month> <year> 1990. </year>
Reference-contexts: Similar in spirit is the Fair Queuing Fixed Quota (FQFQ) scheduling discipline [7], where each session is allocated a fixed amount of buffer space that is available in the switch; if a session occupies all its buffer space, then all arriving packets of this session are discarded. In <ref> [14] </ref>, a probabilistic variant of fairness queuing called Stochastic Fairness Queuing is proposed; this is based on the idea that a hash function will be used to map every session into a fixed set of queues. In [2, 15], hierarchical implementations of GPS are proposed.
Reference: [15] <author> O. Ndiaye. </author> <title> An efficient implementation of a hierarchical weighted fair queue packet scheduler. </title> <type> PhD thesis, </type> <institution> Massachussets Institute of Technology, </institution> <month> May </month> <year> 1994. </year> <month> 29 </month>
Reference-contexts: In [14], a probabilistic variant of fairness queuing called Stochastic Fairness Queuing is proposed; this is based on the idea that a hash function will be used to map every session into a fixed set of queues. In <ref> [2, 15] </ref>, hierarchical implementations of GPS are proposed. In [15], the implementation is based on a GPS scheduler, where the weights of the sessions are dynamically changed. <p> In [14], a probabilistic variant of fairness queuing called Stochastic Fairness Queuing is proposed; this is based on the idea that a hash function will be used to map every session into a fixed set of queues. In [2, 15], hierarchical implementations of GPS are proposed. In <ref> [15] </ref>, the implementation is based on a GPS scheduler, where the weights of the sessions are dynamically changed. In [2], Hierarchical Worst-Case Weighted Fair Queuing is proposed (H-WF 2 Q+); this scheduling discipline is a hierarchical expansion of multiple one-level GPS servers.
Reference: [16] <author> A. K. Parekh and R. G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: the single-node case. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The property of sharing is one of the fundamental advantages of packet-switched networks over circuit-switched networks, since it enables switches to achieve a high utilization of link capacities. The Generalized Processor Sharing (GPS) scheduling method is known to support isolation and sharing in a QoS network <ref> [8, 16, 17] </ref>. GPS can provide rate guarantees to the sessions it services. However, with GPS, a session that has been active for a long period of time can experience dramatic decreases in its service rate when some other previously idle session becomes active. <p> Since in real networks, packets have a finite size, and only one packet can be transmitted at a time, approximations of GPS are needed that emulate the idealized GPS discipline. Weighted Fair Queueing (WFQ) [8] and Packetized GPS (PGPS) <ref> [16] </ref> have approximated GPS using the concept of virtual time to measure the progress in the fluid model. Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. <p> Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. In <ref> [16, 17] </ref>, worst-case delay bounds are provided for single node and multiple node networks. In [23, 24], GPS is studied from a probabilistic point of view and statistical bounds on backlog and delay are derived. <p> However, in reality, only one session can receive service at a time, and a packet has to be fully transmitted before another packet starts being served. Perhaps the most popular method to approximate GPS in a packet system is Packet-By-Packet Generalized Processor Sharing (PGPS) <ref> [16] </ref> which is defined as follows. Let d (p) i;gps be the departure time of a packet p from Session i under GPS. Then, PGPS is the service discipline that transmits packets in increasing order of d (p) In [16], it is proved that: d i;P GP S d i;GP S <p> GPS in a packet system is Packet-By-Packet Generalized Processor Sharing (PGPS) <ref> [16] </ref> which is defined as follows. Let d (p) i;gps be the departure time of a packet p from Session i under GPS. Then, PGPS is the service discipline that transmits packets in increasing order of d (p) In [16], it is proved that: d i;P GP S d i;GP S r S i;GP S (0; t) S i;P GP S (0; t) L max 8i; t (5) where d (k) (k) i;GP S are the departure times of the k-th packet of Session i under GPS and PGPS, and <p> In other words, a PGPS system cannot fall behind a GPS system by more than one maximum packet size. In <ref> [16] </ref>, it was proved that for leaky bucket constrained sessions, GPS guarantees deterministic worst-case delays. Specifically, let A i (t; t) be the amount of traffic of Session i that arrives in the time interval (t; t]. <p> The isolation property of GPS makes it possible to derive worst-case delay bounds for a session without taking into consideration the behavior of other sessions. If the behavior of other sessions is taken into consideration, the exact worst-case delay bound can be calculated as shown in <ref> [16] </ref>. The delays depend on the traffic characterization of all sessions and the assignment of 's. Note that the exact worst-case delay bound can be quite smaller than i g i . <p> S 2 GPS attempts to approximate the fluid model as closely as possible. Note that S 2 PGPS is derived from S 2 GPS in the same way that PGPS is derived from GPS <ref> [16] </ref>. The question that arises is whether S 2 PGPS is a good approximation of a S 2 GPS system. We will prove that this is indeed the case. <p> We will prove that this is indeed the case. Specifically, we will show that a S 2 PGPS system cannot fall behind from the corresponding S 2 GPS system by more than one maximum packet size. We will take advantage of the following results that are available for GPS/PGPS <ref> [16] </ref>: 16 1. Let p and q be packets in a GPS system at time t , and suppose that packet p completes service before packet q if there are no arrivals after time t . <p> This is because the proofs of these properties for PGPS, which are given in <ref> [16] </ref>, are not sensitive to time dependent service rates. Thus, a S 2 PGPS system cannot fall behind from the corresponding S 2 GPS system by more than one packet size. <p> The concept of virtual time as a means of implementing PGPS was proposed in <ref> [8, 16] </ref>; the virtual time V (t) in [8, 16] is used as a measure of progress in the system. When packets arrive, the scheduler assigns virtual time deadlines to them and serves packets in increasing order of these deadlines. <p> The concept of virtual time as a means of implementing PGPS was proposed in <ref> [8, 16] </ref>; the virtual time V (t) in [8, 16] is used as a measure of progress in the system. When packets arrive, the scheduler assigns virtual time deadlines to them and serves packets in increasing order of these deadlines.
Reference: [17] <author> A. K. Parekh and R. G. Gallager. </author> <title> A generalized processor sharing approach to flow control in intergrated services networks: the multiple node case. </title> <journal> IEEE/ACM Transanctions on Networking, </journal> <volume> 2 </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: The property of sharing is one of the fundamental advantages of packet-switched networks over circuit-switched networks, since it enables switches to achieve a high utilization of link capacities. The Generalized Processor Sharing (GPS) scheduling method is known to support isolation and sharing in a QoS network <ref> [8, 16, 17] </ref>. GPS can provide rate guarantees to the sessions it services. However, with GPS, a session that has been active for a long period of time can experience dramatic decreases in its service rate when some other previously idle session becomes active. <p> Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. In <ref> [16, 17] </ref>, worst-case delay bounds are provided for single node and multiple node networks. In [23, 24], GPS is studied from a probabilistic point of view and statistical bounds on backlog and delay are derived.
Reference: [18] <author> O. Rose. </author> <title> Statistical properties of MPEG video traffic and their impact on trafic modeling in ATM systems. </title> <type> Technical Report Technical Report 101, </type> <institution> University of Wurzburg, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: On this PVC, three MPEG movie transmissions are multiplexed. Sessions 1 and 2 transmit the same movie, 25 "camera", and Session 3 transmits the movie "dino". The MPEG movie sequences are taken from a publicly available library of MPEG traces <ref> [18] </ref>. We refer to [18] for a detailed discussion and statistical analysis of these traces. Sessions 1 and 2 start transmitting at time t = 0 sec and they have a worst-case delay bound of 0.4 sec. <p> On this PVC, three MPEG movie transmissions are multiplexed. Sessions 1 and 2 transmit the same movie, 25 "camera", and Session 3 transmits the movie "dino". The MPEG movie sequences are taken from a publicly available library of MPEG traces <ref> [18] </ref>. We refer to [18] for a detailed discussion and statistical analysis of these traces. Sessions 1 and 2 start transmitting at time t = 0 sec and they have a worst-case delay bound of 0.4 sec.
Reference: [19] <author> D. Saha, S. Mukherjee, and S. H. Tripahi. </author> <title> Carry-over round robin: a Simple cell scheduling mechanism for ATM networks. </title> <booktitle> In Proc. IEEE Infocom'96, </booktitle> <pages> pages 630-637, </pages> <year> 1996. </year>
Reference-contexts: One other approach to approximating GPS is followed by Frame-based Fair Queuing (FFQ) [21], Deficit Round Robin (DRR) [20], and Carry-over Round Robin (CRR) <ref> [19] </ref>. FFQ, DRR, and CRR provide more efficient implementations than PGPS. Central in these schedulers is the notion that during a frame (or round) the scheduler attempts to approximate GPS.
Reference: [20] <author> S. Shreedhar and G. Varghese. </author> <title> Efficient fair queueing using deficit round robin. </title> <journal> IEEE Transanctions on Networking, </journal> <volume> 4(3) </volume> <pages> 375-385, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: One other approach to approximating GPS is followed by Frame-based Fair Queuing (FFQ) [21], Deficit Round Robin (DRR) <ref> [20] </ref>, and Carry-over Round Robin (CRR) [19]. FFQ, DRR, and CRR provide more efficient implementations than PGPS. Central in these schedulers is the notion that during a frame (or round) the scheduler attempts to approximate GPS.
Reference: [21] <author> D. Stiliadis and A. Varma. </author> <title> Design and analysis of frame-based fair queueing: a new traffic scheduling algorithm for packet-switched networks. </title> <booktitle> In Proc. ACM Sigmetrics'96, </booktitle> <pages> pages 104-115, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Instead, the virtual time is considered to be the virtual time of the packet under transmission: SCFQ transmits packets in increasing order of their virtual finishing times, whereas SFQ uses virtual start times. One other approach to approximating GPS is followed by Frame-based Fair Queuing (FFQ) <ref> [21] </ref>, Deficit Round Robin (DRR) [20], and Carry-over Round Robin (CRR) [19]. FFQ, DRR, and CRR provide more efficient implementations than PGPS. Central in these schedulers is the notion that during a frame (or round) the scheduler attempts to approximate GPS.
Reference: [22] <author> D. Stiliadis and A. Varma. </author> <title> Latency-rate servers: A general model for analysis of traffic scheduling algorithms. </title> <booktitle> In Proc. ACM Sigcomm'96, </booktitle> <pages> pages 1d.2.1-1d.2.9, </pages> <year> 1996. </year>
Reference-contexts: In [2], Hierarchical Worst-Case Weighted Fair Queuing is proposed (H-WF 2 Q+); this scheduling discipline is a hierarchical expansion of multiple one-level GPS servers. Finally, given this proliferation of GPS variants, in <ref> [10, 22] </ref>, a general framework that attempts to encompass these variants is proposed. In [10], this framework takes the form of a generalized version of GPS, under which variable service rates can be allocated to the packets of a session. In [22], the concept of a Latency-Rate scheduler is introduced. <p> Finally, given this proliferation of GPS variants, in [10, 22], a general framework that attempts to encompass these variants is proposed. In [10], this framework takes the form of a generalized version of GPS, under which variable service rates can be allocated to the packets of a session. In <ref> [22] </ref>, the concept of a Latency-Rate scheduler is introduced.
Reference: [23] <author> O. Yaron and M. Sidi. </author> <title> Generalized processor sharing networks with exponentially bounded bursti-ness arrivals. </title> <journal> Journal of High Speed Networks, </journal> <volume> 3 </volume> <pages> 375-387, </pages> <year> 1994. </year>
Reference-contexts: Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. In [16, 17], worst-case delay bounds are provided for single node and multiple node networks. In <ref> [23, 24] </ref>, GPS is studied from a probabilistic point of view and statistical bounds on backlog and delay are derived.
Reference: [24] <author> Z. L. Zhang, D. Towsley, and J. Kurose. </author> <title> Statistical analysis of generalized processor sharing scheduling discipline. </title> <booktitle> In Proc. ACM Sigcomm'94, </booktitle> <pages> pages 68-77, </pages> <month> August </month> <year> 1994. </year> <month> 30 </month>
Reference-contexts: Each packet is tagged with a virtual time deadline upon its arrival, and packets are served in increasing order of their deadlines. In [16, 17], worst-case delay bounds are provided for single node and multiple node networks. In <ref> [23, 24] </ref>, GPS is studied from a probabilistic point of view and statistical bounds on backlog and delay are derived.
References-found: 24

