URL: http://www.cs.purdue.edu/homes/spa/papers/ppi.ps
Refering-URL: http://www.cs.purdue.edu/homes/spa/publications.html
Root-URL: http://www.cs.purdue.edu
Title: ON ASYMPTOTICS OF CERTAIN RECURRENCES ARISING IN UNIVERSAL CODING May 21, 1997  
Author: Wojciech Szpankowski 
Keyword: Key Words: Source coding, multi-alphabet universal coding, redundancy, minimum description length, analytical information theory, singularity analysis, Ramanujan's Q-function, Lambert's W -function.  
Note: This research was supported in part by NSF Grants NCR-9206315 and NCR-9415491, and in part by NATO Collaborative Grant CGR.950060.  
Address: W. Lafayette, IN 47907 U.S.A.  
Affiliation: Department of Computer Science Purdue University  
Abstract: Ramanujan's Q-function and the so called "tree function" T (z) defined implicitly by the equation T (z) = ze T (z) found applications in hashing, the birthday paradox problem, random mappings, caching, memory conflicts, and so forth. Recently, several novel applications of these functions to information theory problems such as linear coding and universal portfolios were brought to light. In this paper, we study them in the context of another information theory problem, namely: multi-alphabet universal coding which was recently investigated by Shtarkov et al. [Prob. Inf. Trans., 31, 1995]. We provide asymptotic expansions of certain recurrences studied there which describe the optimal redundancy of universal codes. Our methodology falls under the so called analytical information theory that was recently applied successfully to a variety of information theory problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> M. Abramowitz, and I. Stegun (Eds.), </editor> <title> Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables, </title> <publisher> John Wiley & Sons, </publisher> <address> New York 1972. </address>
Reference-contexts: = log D n ( m ) = 2 2 + log 2 ) (10) ( m 3 ( m 2 ) p p + 6 + m (m 2)(4m + 2) 2 )m 2 2 1 ! 1 + O 1 where (z) is the Euler gamma function (cf. <ref> [1] </ref>). We should observe that a precise asymptotic expansion for the redundancy n ( m ) is necessary for large or unbounded alphabets (e.g., alphabet of an image is 256 pixels and often is of the same order of magnitude as its dimensions).
Reference: [2] <author> T. Cover and E. Ordentlich, </author> <title> Universal Portfolios with Side Information, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 42, </volume> <pages> 348-363, </pages> <year> 1996. </year>
Reference-contexts: In this paper we deal with recurrences of type (2) while in [19] we were more in the framework of (1) (cf. also <ref> [2] </ref>). 2 Main Results In this section, we formulate precisely the problem and present our main results.
Reference: [3] <author> P. Flajolet and A. Odlyzko, </author> <title> Singularity Analysis of Generating Functions, </title> <journal> SIAM J. Disc. Methods, </journal> <volume> 3, </volume> <pages> 216-240, </pages> <year> 1990. </year>
Reference-contexts: + p n (3) = n 2n + 5=3 + O (1=n), as easy to check by a direct computation. 3 Analysis In this section we prove Theorems 1 and 2 using certain tools of analytical analysis of algo rithms, notably generating functions (cf. [16, 20]) and singularity analysis (cf. <ref> [3] </ref>). We shall follow our approach from [19] (cf. also [20]). We start with D fl n (m) given by (8). <p> To extract the coefficients at z n of (18), we shall use the singularity analysis and transfer theorems of Flajolet and Odlyzko <ref> [3] </ref> which allow us to compute separately the coefficients for every function involved in the asymptotic expansion. Thus we use the above, and the following (for more details see [3]): [z n ] 1 1 ez = p 1 + O (n 2 ) ; p e n n 3 1 <p> extract the coefficients at z n of (18), we shall use the singularity analysis and transfer theorems of Flajolet and Odlyzko <ref> [3] </ref> which allow us to compute separately the coefficients for every function involved in the asymptotic expansion. Thus we use the above, and the following (for more details see [3]): [z n ] 1 1 ez = p 1 + O (n 2 ) ; p e n n 3 1 + 16n 1 ez = e n ; n n = e n p 1 + O (n 2 ) : Plugging this into (18), one can derive the
Reference: [4] <author> P. Flajolet, P. Grabner, P. Kirschenhofer, and H. </author> <title> Prodinger, </title> <journal> On Ramanujan's Q-function, J. Comp. and Appl. Math., </journal> <volume> 58, </volume> <pages> 103-116, </pages> <year> 1995. </year>
Reference-contexts: It is also related to Lambert's W -function defined as a solution of W (x) exp (W (x)) = x and which can be called from Maple. (In fact, T (z) = W (z).) Furthermore, it can be obtained from the Ramanujan's Q-function (cf. <ref> [4, 8] </ref>) which finds many applications in hashing, random mappings, and memory conflict (cf. [19, 20]) for further references). We shall discuss some properties of T (z) and B (z) below. Let us now return to (13).
Reference: [5] <author> L. Guibas and A. Odlyzko, </author> <title> Maximal Prefix-Synchronized Codes, </title> <journal> SIAM J. Appl. Math, </journal> <volume> 35, </volume> <pages> 401-418, </pages> <year> 1978. </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes.
Reference: [6] <author> P. Jacquet and W. Szpankowski, </author> <title> Asymptotic Behavior of the Lempel-Ziv Parsing Scheme and Digital Search Trees, </title> <journal> Theoretical Computer Science, </journal> <volume> 144, </volume> <pages> 161-197, </pages> <year> 1995. </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes.
Reference: [7] <author> P. Jacquet and W. Szpankowski, </author> <title> Analytical Information Theory: Entropy Computations, </title> <institution> Purdue University CSD-TR-96-085, </institution> <year> 1996. </year>
Reference-contexts: 1 Introduction Recently, Jacquet and Szpankowski <ref> [7] </ref> propose to call analytical information theory a subarea of information theory that solves problems of information theory by analytical methods, that is, those in which complex analysis plays a primary role.
Reference: [8] <author> D. Knuth, </author> <booktitle> The Art of Computer Programming: Fundamental Algorithms, </booktitle> <volume> vol. 1., </volume> <publisher> Addison-Wesley, </publisher> <address> Reading 1973. </address>
Reference-contexts: It is also related to Lambert's W -function defined as a solution of W (x) exp (W (x)) = x and which can be called from Maple. (In fact, T (z) = W (z).) Furthermore, it can be obtained from the Ramanujan's Q-function (cf. <ref> [4, 8] </ref>) which finds many applications in hashing, random mappings, and memory conflict (cf. [19, 20]) for further references). We shall discuss some properties of T (z) and B (z) below. Let us now return to (13). <p> Our goal, however, is to find an asymptotic expansion for D fl n (m) for large n. This, as it is well-known, depends on singularities of the associated generating function. In our case, singularities of B (z) and singularities of T (z) play a role. Let us recall from <ref> [8, 16, 19, 20] </ref> that T (z) has a singularity at z = e 1 , and around this point it has the following expansion: T (z) 1 = 2 (1 ez) + 3 11 2 (1 ez) 3=2 + 135 6 Using Maple, we can also expand B (z) around
Reference: [9] <author> R. Krichevsky, </author> <title> Universal Compression and Retrieval, </title> <publisher> Kluwer Academic Publishers, </publisher> <month> Dor-drecht </month> <year> 1994. </year>
Reference-contexts: In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. Here, we deal with (multi-alphabet) universal coding <ref> [9, 14, 17] </ref>). A direct motivation for this research is the recent paper of Shtarkov et al. [18] (see also Shtarkov [17]) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish).
Reference: [10] <author> J.H. van Lint, </author> <title> Introduction to Coding Theory, </title> <publisher> Springer-Verlag, </publisher> <address> New York 1982 </address>
Reference-contexts: need a special function B (z) defined as (cf. [19]) B (z) = k=0 k! 1 (15) where T (z) satisfies T (z) = ze T (z) and also T (z) = k=1 k! The function T (z) is called the "tree function" since it enumerates rooted labeled trees (cf. <ref> [10] </ref>).
Reference: [11] <author> G. Louchard and W. Szpankowski, </author> <title> Average Profile and Limiting Distribution for a Phrase Size in the Lempel-Ziv Parsing Algorithm , IEEE Trans. </title> <journal> Information Theory, </journal> <volume> 41, </volume> <pages> 478-488, </pages> <year> 1995. </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes.
Reference: [12] <author> G. Louchard and W. Szpankowski, </author> <title> On the Average Redundancy Rate of the Lempel-Ziv Code, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 43, </volume> <pages> 1-7, </pages> <year> 1997. </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes.
Reference: [13] <author> A. Odlyzko, </author> <title> Asymptotic Enumeration, </title> <booktitle> in Handbook of Combinatorics, </booktitle> <volume> Vol. II, </volume> <editor> (Eds. R. Graham, M. Gotschel and L. Lovasz), </editor> <publisher> Elsevier Science, </publisher> <pages> 1063-1229, </pages> <year> 1995. </year>
Reference: [14] <author> B. Ryabko, </author> <title> Twice-Universal Coding, Problems of Information Transmission, </title> <type> 173-177, </type> <year> 1984. </year>
Reference-contexts: In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. Here, we deal with (multi-alphabet) universal coding <ref> [9, 14, 17] </ref>). A direct motivation for this research is the recent paper of Shtarkov et al. [18] (see also Shtarkov [17]) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish).
Reference: [15] <author> B. Salvy, </author> <title> Examples of Automatic Asymptotic Expansions, </title> <journal> SIGSAM Bulletin, </journal> <volume> 25, </volume> <pages> 4-17, </pages> <year> 1991. </year>
Reference-contexts: Actually, we use directly Maple (more precisely, equivalent program thanks to B. Salvy <ref> [15] </ref>) to extract coefficients of (B (z) 1) m .
Reference: [16] <author> R. Sedgewick and P. Flajolet, </author> <title> An Introduction to the Analysis of Algorithms, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading Mass., </address> <year> 1995. </year> <month> 9 </month>
Reference-contexts: have: D n (3) = n + p n (3) = n 2n + 5=3 + O (1=n), as easy to check by a direct computation. 3 Analysis In this section we prove Theorems 1 and 2 using certain tools of analytical analysis of algo rithms, notably generating functions (cf. <ref> [16, 20] </ref>) and singularity analysis (cf. [3]). We shall follow our approach from [19] (cf. also [20]). We start with D fl n (m) given by (8). <p> Our goal, however, is to find an asymptotic expansion for D fl n (m) for large n. This, as it is well-known, depends on singularities of the associated generating function. In our case, singularities of B (z) and singularities of T (z) play a role. Let us recall from <ref> [8, 16, 19, 20] </ref> that T (z) has a singularity at z = e 1 , and around this point it has the following expansion: T (z) 1 = 2 (1 ez) + 3 11 2 (1 ez) 3=2 + 135 6 Using Maple, we can also expand B (z) around
Reference: [17] <author> Y. Shtarkov, </author> <title> Universal Sequential Coding of Single Messages, </title> <journal> Problems of Information Transmission, </journal> <volume> 23, </volume> <pages> 175-186, </pages> <year> 1987. </year>
Reference-contexts: In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. Here, we deal with (multi-alphabet) universal coding <ref> [9, 14, 17] </ref>). A direct motivation for this research is the recent paper of Shtarkov et al. [18] (see also Shtarkov [17]) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish). <p> Here, we deal with (multi-alphabet) universal coding [9, 14, 17]). A direct motivation for this research is the recent paper of Shtarkov et al. [18] (see also Shtarkov <ref> [17] </ref>) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish). The authors of [18] and [17] aim at designing an acceptable code such that the maximal redundancy over the alphabets is as small as possible. <p> A direct motivation for this research is the recent paper of Shtarkov et al. [18] (see also Shtarkov <ref> [17] </ref>) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish). The authors of [18] and [17] aim at designing an acceptable code such that the maximal redundancy over the alphabets is as small as possible. <p> For memoryless sources, the above redundancy turns out to satisfy certain recurrence that is of interest not only to coding but other problems (e.g., hashing, optimal portfolios, caching, memory conflict, etc.). No solution is known for this recurrence, and only an upper bound (cf. <ref> [17] </ref>) or simple asymptotics ([18]) were derived. Our goal is to solve exactly the recurrence (in terms of certain generating functions) and to establish a full asymptotic expansion for it. We also aspire to present a mathematical tool to deal with this type of recurrences. <p> The redundancy for ! is defined as (x n ; ' n ; !) := log Q (x n ) + log P (x n ) : Finally, let us consider a set of sources , and define the min-max redundancy as n () := inf sup max In <ref> [17] </ref> it is proved that n () = log D n () (3) where D n () = x n 2 P fl (x n ; ) with P fl (x n ; ) := sup !2 Furthermore, the optimal code ' n , called the maximal probability code, is of <p> We shall see below that a quite different situation arises when j m j &gt; 1 for some m &lt; M . Let us first derive a recurrence on D n (m). Following <ref> [17, 18] </ref> we observe that D fl n (1) = 1 D n (m) = i=1 m ! n (i) (7) where D fl n (i) satisfies the following recurrence: D fl n X k k k k nk nk (i 1) : (8) provided that D fl n (i) =
Reference: [18] <author> Y. Shtarkov, T. </author> <title> Tjalkens and F.M. Willems, Multi-alphabet Universal Coding of Mem-oryless Sources, </title> <journal> Problems of Information Transmission, </journal> <volume> 31, </volume> <pages> 114-127, </pages> <year> 1995 </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. <p> In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. Here, we deal with (multi-alphabet) universal coding [9, 14, 17]). A direct motivation for this research is the recent paper of Shtarkov et al. <ref> [18] </ref> (see also Shtarkov [17]) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish). The authors of [18] and [17] aim at designing an acceptable code such that the maximal redundancy over the alphabets is as <p> A direct motivation for this research is the recent paper of Shtarkov et al. <ref> [18] </ref> (see also Shtarkov [17]) that designs universal codes in a multi-alphabet environment (e.g., think of constructing the best possible code for texts written in English, French and Polish). The authors of [18] and [17] aim at designing an acceptable code such that the maximal redundancy over the alphabets is as small as possible. <p> In this paper we deal with recurrences of type (2) while in [19] we were more in the framework of (1) (cf. also [2]). 2 Main Results In this section, we formulate precisely the problem and present our main results. Throughout, we shall try to use the notation from <ref> [18] </ref>. 2 Let x n denote a sequence built over a finite alphabet A = f1; 2; : : : ; M g, and let P (x n ; !) be the probability of x n generated by the source !. <p> We shall see below that a quite different situation arises when j m j &gt; 1 for some m &lt; M . Let us first derive a recurrence on D n (m). Following <ref> [17, 18] </ref> we observe that D fl n (1) = 1 D n (m) = i=1 m ! n (i) (7) where D fl n (i) satisfies the following recurrence: D fl n X k k k k nk nk (i 1) : (8) provided that D fl n (i) = <p> In passing, we also point out that our methodology from the next sections allows to extract a full asymptotic expansion for D n (m) (in the theorem above we only shown the first four terms). 4 The authors of <ref> [18] </ref> next consider the minimum description length defined as the length of j' flfl (x n )j = log D n (m) where P fl (x n ) is given in (5). It is further argued in [18] that for the maximal probability code one should replace the above with j <p> theorem above we only shown the first four terms). 4 The authors of <ref> [18] </ref> next consider the minimum description length defined as the length of j' flfl (x n )j = log D n (m) where P fl (x n ) is given in (5). It is further argued in [18] that for the maximal probability code one should replace the above with j e '(x n )j = log ff m m P fl (x n ) n (m) where ff m &lt; 1 is a certain coefficient (see [18] for details) and D fl n (m) is the quantity <p> It is further argued in <ref> [18] </ref> that for the maximal probability code one should replace the above with j e '(x n )j = log ff m m P fl (x n ) n (m) where ff m &lt; 1 is a certain coefficient (see [18] for details) and D fl n (m) is the quantity defined in (8). In order to compare the above two formul one needs a precise evaluation of D n (m) D fl n (m) which is offered in the next theorem. <p> m 2 D n (m) D fl p ( m 2 ) n m (12) p 2 2 3 12 ( m + O (n 2 2 ) : In particular, our asymptotic expression (12) should be compared to a cruder D fl n (m) = 2 ) proposed in <ref> [18] </ref>. As an additional checking, we observe that for m = 1 both D n (1) = D fl n (1) = 1, as desired.
Reference: [19] <author> W. Szpankowski, </author> <title> On Asymptotics of Certain Sums Arising in Coding Theory, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 41, </volume> <pages> 2087-2090, </pages> <year> 1995 </year>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. <p> In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper <ref> [19] </ref> that deals with certain sums arising in linear codes. Here, we deal with (multi-alphabet) universal coding [9, 14, 17]). <p> We also aspire to present a mathematical tool to deal with this type of recurrences. We establish the above announced result by analytical methods that resemble our approach from <ref> [19] </ref>. We apply generating functions, analytical combinatorics and complex asymptotics (e.g., singularity analysis) to solve the problem. In fact, our methodology allows to solve exactly and asymptotically the following two types of recurrences (cf. Section 4 for more details). <p> In this paper we deal with recurrences of type (2) while in <ref> [19] </ref> we were more in the framework of (1) (cf. also [2]). 2 Main Results In this section, we formulate precisely the problem and present our main results. <p> We shall follow our approach from <ref> [19] </ref> (cf. also [20]). We start with D fl n (m) given by (8). <p> k nk nk (m 1) (13) n (m) + D fl 5 To simplify the above recurrence, we shall work with a special generating functions, namely: b D fl 1 X k k z k b D fl We will also need a special function B (z) defined as (cf. <ref> [19] </ref>) B (z) = k=0 k! 1 (15) where T (z) satisfies T (z) = ze T (z) and also T (z) = k=1 k! The function T (z) is called the "tree function" since it enumerates rooted labeled trees (cf. [10]). <p> defined as a solution of W (x) exp (W (x)) = x and which can be called from Maple. (In fact, T (z) = W (z).) Furthermore, it can be obtained from the Ramanujan's Q-function (cf. [4, 8]) which finds many applications in hashing, random mappings, and memory conflict (cf. <ref> [19, 20] </ref>) for further references). We shall discuss some properties of T (z) and B (z) below. Let us now return to (13). <p> Our goal, however, is to find an asymptotic expansion for D fl n (m) for large n. This, as it is well-known, depends on singularities of the associated generating function. In our case, singularities of B (z) and singularities of T (z) play a role. Let us recall from <ref> [8, 16, 19, 20] </ref> that T (z) has a singularity at z = e 1 , and around this point it has the following expansion: T (z) 1 = 2 (1 ez) + 3 11 2 (1 ez) 3=2 + 135 6 Using Maple, we can also expand B (z) around
Reference: [20] <author> W. Szpankowski, </author> <title> Techniques of the Average Case Analysis of Algorithms, in Handbook on Algorithms and Theory of Computation (Ed. </title> <editor> M. Atallah), </editor> <publisher> CRC 1997. </publisher> <pages> 10 </pages>
Reference-contexts: However, in recent years there has been a resurgence of interest and a few successful applications of analytical methods to problems on words (strings, sequences, codes) that are at the core of information theory (cf. <ref> [5, 6, 11, 12, 18, 19, 20] </ref>). In this paper, we shall continue developing further tools of analytical information theory for coding theory. In a sense, this work is a continuation of our earlier paper [19] that deals with certain sums arising in linear codes. <p> have: D n (3) = n + p n (3) = n 2n + 5=3 + O (1=n), as easy to check by a direct computation. 3 Analysis In this section we prove Theorems 1 and 2 using certain tools of analytical analysis of algo rithms, notably generating functions (cf. <ref> [16, 20] </ref>) and singularity analysis (cf. [3]). We shall follow our approach from [19] (cf. also [20]). We start with D fl n (m) given by (8). <p> We shall follow our approach from [19] (cf. also <ref> [20] </ref>). We start with D fl n (m) given by (8). <p> defined as a solution of W (x) exp (W (x)) = x and which can be called from Maple. (In fact, T (z) = W (z).) Furthermore, it can be obtained from the Ramanujan's Q-function (cf. [4, 8]) which finds many applications in hashing, random mappings, and memory conflict (cf. <ref> [19, 20] </ref>) for further references). We shall discuss some properties of T (z) and B (z) below. Let us now return to (13). <p> Our goal, however, is to find an asymptotic expansion for D fl n (m) for large n. This, as it is well-known, depends on singularities of the associated generating function. In our case, singularities of B (z) and singularities of T (z) play a role. Let us recall from <ref> [8, 16, 19, 20] </ref> that T (z) has a singularity at z = e 1 , and around this point it has the following expansion: T (z) 1 = 2 (1 ez) + 3 11 2 (1 ez) 3=2 + 135 6 Using Maple, we can also expand B (z) around
References-found: 20

