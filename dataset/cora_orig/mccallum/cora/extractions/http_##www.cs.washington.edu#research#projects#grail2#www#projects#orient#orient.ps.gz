URL: http://www.cs.washington.edu/research/projects/grail2/www/projects/orient/orient.ps.gz
Refering-URL: http://www.cs.washington.edu/research/projects/grail2/www/projects/orient/
Root-URL: 
Title: Orientable Textures for Image-Based Pen-and-Ink Illustration  
Author: Michael P. Salisbury Michael T. Wong John F. Hughes David H. Salesin 
Keyword: CR Categories and Subject Descriptors: I.3.3 [Computer Graphics]: Picture/Image Generation Display algorithms. I.4.3 [Image Processing] Enhancement Filtering Additional Key Words: Controlled-density hatching, direction field, image-based rendering, non-photorealistic rendering, scale-dependent rendering, stroke textures.  
Address: GVSTC  
Affiliation: University of Washington  
Abstract: We present an interactive system for creating pen-and-ink-style line drawings from greyscale images in which the strokes of the rendered illustration follow the features of the original image. The user, via new interaction techniques for editing a direction field, specifies an orientation for each region of the image; the computer draws oriented strokes, based on a user-specified set of example strokes, that achieve the same tone as the image via a new algorithm that compares an adaptively-blurred version of the current illustration to the target tone image. By aligning the direction field with surface orientations of the objects in the image, the user can create textures that appear attached to those objects instead of merely conveying their darkness. The result is a more compelling pen-and-ink illustration than was previously possible from 2D reference imagery. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Debra Dooley and Michael Cohen. </author> <title> Automatic illustration of 3D ge ometric models: Lines. </title> <booktitle> In Computer Graphics (1990 Symposium on Interactive 3D Graphics), </booktitle> <pages> pp. 7782, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
Reference: [2] <author> Gershon Elber. </author> <title> Line art rendering via a coverage of isoparametric curves. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 1(3):231239, </volume> <month> September </month> <year> 1995. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
Reference: [3] <author> Ralph Gibson. Tropism: </author> <title> photographs. Aperture, </title> <address> New York, </address> <year> 1987. </year>
Reference: [4] <author> S. Gupta and R. F. Sproull. </author> <title> Filtering edges for gray-scale displays. </title> <booktitle> Computer Graphics (SIGGRAPH '81 Proceedings), </booktitle> <address> 15(3):15, </address> <month> August </month> <year> 1981. </year>
Reference-contexts: The width w is computed as 2h=t mm, where h is the stroke thickness (in mm) and t is the desired tone value between 0.0 (white) and 1.0 (black), and then clamped to the range 110 mm. We use Gupta-Sproull antialiased line drawing <ref> [4] </ref>, but we supply the algorithm with a modified darkness look-up table, whose width is as specified above, and whose height is twice the reciprocal of the width. 7 If the strokes are drawn with even spacing w, a nearly-constant blurred tone of average value t results.
Reference: [5] <author> Arthur L. Guptill. </author> <title> Rendering in Pen and Ink. </title> <address> Watson-Guptill Publica tions, New York, </address> <year> 1976. </year>
Reference: [6] <author> Paul Haeberli. </author> <title> Paint by numbers: Abstract image representations. </title> <journal> Computer Graphics, </journal> <volume> 24(4):207214, </volume> <month> August </month> <year> 1990. </year>
Reference-contexts: to our knowledge, the first to use ori-entable textures for image-based pen-and-ink illustration (in which the strokes must convey not only orientation, but texture and tone), the idea of orienting strokes for illustration dates back at least as far as the seminal papers by Saito and Takahashi [11] and Haeberli <ref> [6] </ref> in SIGGRAPH 90. Winkenbach and Salesin [17] and Meier [9] also make use of oriented strokes for geometry-based illustration. Supporting orientable textures for image-based pen-and-ink illustration requires solutions to several new subproblems, which we discuss in this paper.
Reference: [7] <author> John Lansdown and Simon Schofield. </author> <title> Expressive rendering: A re view of nonphotorealistic techniques. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 15(3):2937, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
Reference: [8] <author> Frank Lohan. </author> <title> Pen and Ink Techniques. Contemporary Books, </title> <publisher> Inc., </publisher> <address> Chicago, </address> <year> 1978. </year>
Reference-contexts: One of the basic rules of pen-and-ink illustration is that strokes should be placed evenly: close together in dark areas, widely spaced in light areas <ref> [8] </ref>. In the computation of the difference image, the importance-image values at points within some distance of a stroke are lowered when the stroke is drawn, with points near the stroke being lowered most; the size of the region affected is determined by the target tone (see Section 3.2).
Reference: [9] <author> Barbara J. Meier. </author> <title> Painterly rendering for animation. </title> <editor> In Holly Rush meier, editor, </editor> <booktitle> SIGGRAPH 96 Conference Proceedings, </booktitle> <pages> pp. 477484. </pages> <publisher> Addison Wesley, </publisher> <month> August </month> <year> 1996. </year>
Reference-contexts: Winkenbach and Salesin [17] and Meier <ref> [9] </ref> also make use of oriented strokes for geometry-based illustration. Supporting orientable textures for image-based pen-and-ink illustration requires solutions to several new subproblems, which we discuss in this paper.
Reference: [10] <author> Yachin Pnueli and Alfred M. Bruckstein. </author> <title> Dig i D urer a digital engraving system. </title> <booktitle> The Visual Computer, </booktitle> <address> 10(5):277292, </address> <year> 1994. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems [1, 2, 7, 12, 16, 17, 18], which take 3D scene descriptions as input; and image-based systems <ref> [10, 13] </ref>, which produce their illustrations directly from greyscale images.
Reference: [11] <author> Takafumi Saito and Tokiichiro Takahashi. </author> <title> Comprehensible rendering of 3-D shapes. </title> <journal> Computer Graphics, </journal> <volume> 24(4):197206, </volume> <month> August </month> <year> 1990. </year>
Reference-contexts: this paper is, to our knowledge, the first to use ori-entable textures for image-based pen-and-ink illustration (in which the strokes must convey not only orientation, but texture and tone), the idea of orienting strokes for illustration dates back at least as far as the seminal papers by Saito and Takahashi <ref> [11] </ref> and Haeberli [6] in SIGGRAPH 90. Winkenbach and Salesin [17] and Meier [9] also make use of oriented strokes for geometry-based illustration. Supporting orientable textures for image-based pen-and-ink illustration requires solutions to several new subproblems, which we discuss in this paper.
Reference: [12] <author> Takafumi Saito and Tokiichiro Takahashi. </author> <title> NC machining with G buffer method. </title> <journal> Computer Graphics, </journal> <volume> 25(4):207216, </volume> <month> July </month> <year> 1991. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
Reference: [13] <author> Michael P. Salisbury, Sean E. Anderson, Ronen Barzel, and David H. Salesin. </author> <title> Interactive pen-and-ink illustration. </title> <editor> In Andrew Glassner, editor, </editor> <booktitle> Proceedings of SIGGRAPH '94, </booktitle> <pages> pp. 101108. </pages> <publisher> ACM Press, </publisher> <month> July </month> <year> 1994. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems [1, 2, 7, 12, 16, 17, 18], which take 3D scene descriptions as input; and image-based systems <ref> [10, 13] </ref>, which produce their illustrations directly from greyscale images. <p> The repeated use of strokes from the example set to achieve tone with a specified orientation is a kind of procedural stroke texture. Non-procedural stroke textures were used by Salisbury et al. <ref> [13, 14] </ref>. In this previous work, the textures tiled the plane, and the stroke selected for drawing at a point was the one that happened to pass through that point. <p> It would be nice for the user to have the option of interacting instead with the pen-and-ink illustration itself. Modifications to the illustration would be immediately reflected by corresponding changes in the tone or direction. While previous interactive systems <ref> [13] </ref> have allowed the user to directly manipulate the illustration, they do not as does our systemallow the user to specify abstract high-level attributes of the illustration, and thus are not required to make a large number of changes as the result of a simple user action.
Reference: [14] <author> Mike Salisbury, Corin Anderson, Dani Lischinski, and David H. Salesin. </author> <title> Scale-dependent reproduction of pen-and-ink illustrations. </title> <editor> In Holly Rushmeier, editor, </editor> <booktitle> SIGGRAPH 96 Conference Proceedings, </booktitle> <pages> pp. 461468. </pages> <publisher> Addison Wesley, </publisher> <month> August </month> <year> 1996. </year>
Reference-contexts: The repeated use of strokes from the example set to achieve tone with a specified orientation is a kind of procedural stroke texture. Non-procedural stroke textures were used by Salisbury et al. <ref> [13, 14] </ref>. In this previous work, the textures tiled the plane, and the stroke selected for drawing at a point was the one that happened to pass through that point. <p> Spacing between strokes is instead maintained indirectly by the rendering system (see Section 3). Dynamic placement of strokes is an important feature, for if we have a standard symmetric resampling kernel, and (right) the modified kernel used by Salisbury et al. <ref> [14] </ref>. <p> Besides providing easy control over essential elements of an illustration, this separation of components until rendering allows us to produce illustrations at any size by first rescaling the components and then rendering, as described by Salisbury et al. <ref> [14] </ref>. Figure 4 demonstrates magnification of the direction field that respects edge dis-continuities. The rendering process is driven by a notion of importance. We define the importance of a point as the fraction of its intended darkness that has not yet been accumulated at that point.
Reference: [15] <author> Gary Simmons. </author> <title> The Technical Pen. </title> <publisher> Watson-Guptill Publications, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Clipping. Pen-and-ink artists have various rules for clipping strokes. One widely-accepted convention is that strokes do not cross object boundaries or boundaries between semantically different portions of objects, such as the edges of hard shadows <ref> [15] </ref>. We adhere to this convention by clipping strokes when they reach places where the direction field turns rapidly. 6 Strokes are also clipped when continuing to draw them would over-darken some region of the image.
Reference: [16] <author> Thomas Strothotte, Bernhard Preim, Andreas Raab, Jutta Schumann, and David R. Forsey. </author> <title> How to render frames and influence people. </title> <journal> Computer Graphics Forum, </journal> <note> 13(3):455466, 1994. Eurographics '94 Conference issue. </note>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
Reference: [17] <editor> Georges Winkenbach and David H. Salesin. Computer-generated pen and-ink illustration. In Andrew Glassner, editor, </editor> <booktitle> Proceedings of SIG-GRAPH '94, </booktitle> <pages> pp. 91100. </pages> <publisher> ACM Press, </publisher> <month> July </month> <year> 1994. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images. <p> Winkenbach and Salesin <ref> [17] </ref> and Meier [9] also make use of oriented strokes for geometry-based illustration. Supporting orientable textures for image-based pen-and-ink illustration requires solutions to several new subproblems, which we discuss in this paper.
Reference: [18] <author> Georges Winkenbach and David H. Salesin. </author> <title> Rendering free-form sur faces in pen and ink. </title> <editor> In Holly Rushmeier, editor, </editor> <booktitle> SIGGRAPH 96 Conference Proceedings, </booktitle> <pages> pp. 469476. </pages> <publisher> Addison Wesley, </publisher> <month> August </month> <year> 1996. </year>
Reference-contexts: In recent years, a number of systems have been built to produce illustrations in a pen-and-ink style. These systems can be classified into two broad categories, depending on their input: geometry-based systems <ref> [1, 2, 7, 12, 16, 17, 18] </ref>, which take 3D scene descriptions as input; and image-based systems [10, 13], which produce their illustrations directly from greyscale images.
References-found: 18

