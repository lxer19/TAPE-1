URL: http://www.cs.ucl.ac.uk/staff/M.Usoh/Papers/vcomp1.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/M.Usoh/visionpubs.html
Root-URL: http://www.cs.ucl.ac.uk
Title: Using Visualisation as a Tool for Model-Based Recognition  
Author: Martin Usoh and Hilary Buxton 
Keyword: Visualisation, Model-Based Vision, SIMD Parallelism, Ray Tracing, Spatial Subdivision, Constructive Solid Geometry, Geometrical Matching.  
Note: 1.0 Introduction  
Address: London, E1 4NS.  
Affiliation: Department of Computer Science, Queen Mary and Westfield College, (University of London),  
Abstract: The aim of the work reported here is to build a useful toolset for 3D model-based vision on an SIMD parallel machine, the AMT DAP. Included in the toolset are facilities for model specification, manipulation and rendering using a ray tracing approach, and model recognition and validation using a geometrical matching approach. In particular, an SIMD parallel version of a ray tracer, and an SIMD parallel version of a bottom-up geometrical matcher, are described. The ray tracer can render Constructive Solid Geometry models and incorporates spatial subdivision of the scene. The matcher uses edge primitives recovered from scenes to match to model edges using local constraints and deals with spurious data using bin assignments. The overall toolset is illustrated by its use in closed-form testing and refinement where the models, camera geometry, and frame to frame motion in an image sequence, generated by the ray tracer, are known, but are checked and validated using the geometrical matching, recognition and localisation. Visualisation and closed-form testing of algorithms are vitally important in the development of model-based vision systems. The general idea is that, if we can specify the models in their own coordinate frames, their subsequent transformation in terms of their translation, rotation and scaling, and the camera geometry, we can then generate images for which the results of our visual recognition and localisation algorithms are known a priori. The fully tested and validated models and algorithms can then be used to analyse scenes where the details of the identity, position, orientation, scale and motion are not known, but where we have a range of models with which to form our interpretation of the scene, that is, model-based vision. Computational vision, in general, can be thought of as the 3D interpretation of a 2D image or images in terms of the objects in the scene, their size, position, shape, motion, etc. Many situations exist where it is useful for machines to form such an accurate 3D interpretation of their environment and then take action based on this description. The analyses required can range from a single scene composed of simple geometrical objects to complex multivarying scenes. However, even a simple sounding problem such as recognising an object from a set of known objects and locating it relative to the camera can break down into a set of extremely demanding operations. This means that there is generally a major problem in investigating the vast number of interpretations of a scene especially if we want to do so quickly. One solution to this problem, and a similar problem of computational complexity in the visualisation of complex scenes, is to use the power of supercomputers. In what follows, first, in Section 2, the AMT DAP is described since it was the supercomputing machine used for the implementation of all the toolset facilities for the 3D model manipulation and visualisation, and for the model recognition and localisation. 
Abstract-found: 1
Intro-found: 1
Reference: [Appe68] <author> Appel, A., </author> <title> Some Techniques for Shading Machine Renderings of Solids, </title> <booktitle> SJCC, </booktitle> <pages> pp. 37-45, </pages> <year> 1968. </year>
Reference: [Dipp84] <author> Dippe, M., Swensen, J., </author> <title> An Adaptive Subdivision Algorithm and Parallel Architecture for Realistic Image Synthesis, </title> <journal> Computer Graphics (Proc. SIGGRAPH84), </journal> <volume> 18(3), </volume> <pages> pp. 149-158, </pages> <month> July </month> <year> 1984. </year>
Reference: [Faug83] <author> Faugeras, O.D., Hbert, M., </author> <title> A 3D Recognition and Positioning Algorithm Using Geometric Matching Between Primitive Surfaces, </title> <booktitle> Proc. Int. J. Conf. on AI, Karlsruhe, </booktitle> <pages> pp. 996-1002, </pages> <year> 1983. </year>
Reference-contexts: It uses the least-squares method developed by Faugeras and Hbert <ref> [Faug83] </ref> for the matching of plane primitive descriptors and can equally be applied to edge vectors. Estimation of the best rotation is performed using the notion of quaternions. The scaling is achieved by first determining the scale of each available data edge and then averaging over the total number.
Reference: [Flyn85] <author> Flynn, A.M., Harris, J.G., </author> <title> Recognition Algorithms for the Connection Machine, </title> <booktitle> Proc. Ninth International Joint Conf. on AI, </booktitle> <publisher> Morgan and Kaufman, </publisher> <pages> pp. 57-60, </pages> <year> 1985. </year>
Reference-contexts: Other methods have included the introduction of parallelism on SIMD machines, namely the AMT DAP [Hold89], and the Connection Machine <ref> [Flyn85, Shan90] </ref>. Here, we adopt the method of Holder and Buxton using model and data edges and a new tree search sorting procedure. 4.1 A Serial Approach to Model Matching Many algorithms have been developed in recent years to match scene data to object models held in memory. <p> The parallelism of H&B when compared with the method of Flynn and Harris on the Connection Machine <ref> [Flyn85] </ref> is very effective. They found that with n model faces and m data points, n m processing elements are required to achieve a processing time of the same order of magnitude.
Reference: [Gora84] <author> Goral, C.M., Torrance, K.E., Greenberg, D.P., Battaile, B., </author> <title> Modeling the Interaction of Light Between Diffuse Surfaces, </title> <booktitle> SIGGRAPH 84, </booktitle> <pages> pp. 213-222, </pages> <year> 1984. </year>
Reference: [Grim84] <author> Grimson, W.E.L., Lozano-Prez, T., </author> <title> Model-Based Recognition and Localization from Sparse Range or Tactile Data, </title> <journal> Int. J. Robotics Research, </journal> <volume> 3(3), </volume> <pages> pp. 382-414, </pages> <month> Fall </month> <year> 1984. </year>
Reference-contexts: This may range from the visualisation of simple geometric objects to complex multivarying scenes. Even a simple problem definition to identify an object from amongst a set of known objects and to locate it relative to a sensor can break down into a set of extremely demanding operations <ref> [Grim84] </ref>. The major problem with any recognition system is the task of investigating a vast number of possible interpretations of a scene, and to do so in real-time. The ability for humans to do this is often thought of as trivial but, on consideration, this is definitely not the case. <p> To put the problem of matching into perspective, let us consider an example. Given s number of sensed data edges to be matched against a polyhedral model with e model edges, the number of possible interpretations is e s <ref> [Grim84] </ref>. Clearly this results in a combinatorial explosion of interpretations with an increase in the number of sensed edges. For a model possessing 12 edges and being tested with 5 sensed edges the number of possible interpretations stand at 248,832. <p> The second is the use of a faster machine and thus, parallel processing. The parallel matching algorithm devised by Holder and Buxton (H&B) [Hold89] and based on work by Grimson and Lozano-Prez <ref> [Grim84] </ref> uses SIMD parallelism on the DAP in order to obtain a much reduced program runtime. The parallelism of H&B when compared with the method of Flynn and Harris on the Connection Machine [Flyn85] is very effective.
Reference: [Heck84a] <author> Heckbert, P., Hanrahan, P., </author> <title> Beam Tracing Polygonal Objects, </title> <booktitle> Computer Graphics (Proc. SIGGRAPH 84), </booktitle> <volume> 18(3), </volume> <pages> pp. 119-127, </pages> <month> July </month> <year> 1984. </year>
Reference: [Heck84b] <author> Heckbert, P., </author> <title> The Mathematics of Quadric Surface Rendering and SOID, </title> <institution> New York Inst. of Tech., Computer Graphics Lab TM4, </institution> <month> July </month> <year> 1984. </year> <month> 24 </month>
Reference: [Hold89] <author> Holder, D., Buxton, H., </author> <title> Polyhedral Object Recognition with Sparse Data in SIMD Processing Mode, </title> <journal> Image and Vision Computing, </journal> <volume> 7(1), </volume> <pages> pp. 71-78, </pages> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Attempts have been made to reduce the process time wasted on spurious scene interpretations by adopting a number of local constraints which are applied to an interpretation tree of the scene space. Other methods have included the introduction of parallelism on SIMD machines, namely the AMT DAP <ref> [Hold89] </ref>, and the Connection Machine [Flyn85, Shan90]. <p> The first is to heavily prune the interpretation tree, thus leaving a fraction of the original to be investigated. The second is the use of a faster machine and thus, parallel processing. The parallel matching algorithm devised by Holder and Buxton (H&B) <ref> [Hold89] </ref> and based on work by Grimson and Lozano-Prez [Grim84] uses SIMD parallelism on the DAP in order to obtain a much reduced program runtime. The parallelism of H&B when compared with the method of Flynn and Harris on the Connection Machine [Flyn85] is very effective. <p> Also, for 250 objects, each with 10 faces and 3 data measurements, F&H required 250,000 of the 256,000 processors on the MIT Connection Machine <ref> [Hold89] </ref>. This will rise by a factor of 10 with each additional data point. The effectiveness in the algorithm is achieved by initially determining matches of data pairs to model pairs in parallel and then testing these for local consistency.
Reference: [Kaji84] <author> Kajiya, J.T., </author> <title> Ray Tracing Volume Densities , Computer Graphics (Proc. </title> <journal> SIGGRAPH84), </journal> <volume> 18(3), </volume> <pages> pp. 165-174, </pages> <month> July </month> <year> 1984. </year>
Reference: [Kuch88] <author> Kuchkuda, R., </author> <title> An Introduction to Ray Tracing, </title> <booktitle> NATO ASI Series, vol. F40, Theoretical Foundations of Computer Graphics and CAD, edited by R.A. Earnshaw, </booktitle> <publisher> Springer-Verlag Berlin, </publisher> <address> Heidelberg, </address> <year> 1988. </year>
Reference: [Malh90] <author> Malhi, R.K., </author> <title> Parallel Tiling Algorithms for Visualising Solid Models, </title> <type> PhD Thesis, </type> <institution> Dept. of Computer Science, QMW College, </institution> <address> London, p. 104, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: introduction of the Tiling algorithm. Tiles of 32 pixels square are used. Results obtained using 8 8 tiles in the serial implementation were found to be an effective tile size as described in <ref> [Malh90] </ref> but still did not compare to those obtained using 32 32 DAP tiles.
Reference: [Murr88] <author> Murray, D.W., Cook, </author> <title> D.B., Using the Orientation of Fragmentary 3D Edge Segments for Polyhedral Object Recognition, </title> <journal> Int. J. Comput. Vision, </journal> <volume> vol. 2, </volume> <pages> pp. 147-163, </pages> <year> 1988. </year>
Reference-contexts: An immediate example is robotic vision where the key task for the robots vision system is to supply the control unit with a quantitative and symbolic description of its surroundings <ref> [Murr88] </ref>. This may range from the visualisation of simple geometric objects to complex multivarying scenes. Even a simple problem definition to identify an object from amongst a set of known objects and to locate it relative to a sensor can break down into a set of extremely demanding operations [Grim84]. <p> The effectiveness of the algorithm is achieved by maintaining a large amount of data in the array store. Unlike the serial version of Murray and Cook <ref> [Murr88] </ref>, when considering edges the data edges need not be sorted in order of length prior to the matching algorithm to achieve matching efficiency. This is because all data edges are checked against model edges in parallel.
Reference: [Nish85] <author> Nishita, T., Nakamae, E., </author> <title> Continuous Tone Representation of Three Dimensional Objects Taking Account of Shadows and Interreflection, </title> <booktitle> SIGGRAPH 85, </booktitle> <pages> pp. 23-30, </pages> <year> 1985. </year>
Reference: [Poll85] <author> Pollard, S.B., Mayhew, J.E.W., Frisby, J.P., PMF: </author> <title> A Stereo Correspondence Algorithm Using a Disparity Gradient Limit, </title> <journal> Perception, </journal> <volume> vol. 14, </volume> <pages> pp. 449-470, </pages> <year> 1985. </year>
Reference-contexts: An accurate geometric representation of the model is stored in memory and recovered scene data is compared systematically to this. In this work, the matching is performed using the edge information recovered by a structure from stereo algorithm <ref> [Poll85] </ref>.
Reference: [Quar84] <author> Quarendon, P., </author> <title> WINSOM Users Guide, </title> <journal> Doc. </journal> <volume> no. UKSC 123, </volume> <month> Aug. 30, </month> <year> 1984. </year>
Reference: [Roth82] <author> Roth, </author> <title> S.D., Ray Casting for Modeling Solids , Computer Graphics and Image Processing, </title> <booktitle> 18, </booktitle> <pages> pp. 109-144, </pages> <year> 1982. </year>
Reference: [Shan90] <author> Shankar, R.V., Ramamoorthy, G., Suk, M., </author> <title> Three Dimensional Object Recognition on the Connection Machine, </title> <journal> Pattern Recognition Letters, </journal> <volume> 11(7), </volume> <pages> pp. 485-492, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Other methods have included the introduction of parallelism on SIMD machines, namely the AMT DAP [Hold89], and the Connection Machine <ref> [Flyn85, Shan90] </ref>. Here, we adopt the method of Holder and Buxton using model and data edges and a new tree search sorting procedure. 4.1 A Serial Approach to Model Matching Many algorithms have been developed in recent years to match scene data to object models held in memory.
Reference: [Slat86] <author> Slater, M., </author> <title> Segments on Bit Mapped Graphic Displays, </title> <journal> Software-Practice and Experience, </journal> <volume> 16(11), </volume> <pages> pp. 965-980, </pages> <month> Nov. </month> <year> 1986. </year>
Reference: [Usoh92] <author> Usoh, M., </author> <title> Parallel Process Techniques for 3D Model-Based Vision, </title> <type> PhD Thesis, </type> <institution> Dept. of Computer Science, QMW College, </institution> <address> London, </address> <pages> pp. 114-115, </pages> <year> 1992. </year>
Reference-contexts: However, the fact that data pairs with a small number of geometric matches is important is taken into account to derive a new Combined sorting technique <ref> [Usoh92] </ref>. This has been found to show significant speed ups during the tree traversal when compared to earlier sorting techniques which only utilised the number of geometric matches during match list ordering.
Reference: [Whit80] <author> Whitted, T., </author> <title> An Improved Illumination Model for Shaded Display, </title> <journal> Comm. ACM, </journal> <volume> 23(6), </volume> <year> 1980. </year>
Reference: [Will87] <author> Williams, N.S., Buxton, B.F., Buxton, H., </author> <title> Distributed Ray Tracing Using an SIMD Processor Array, </title> <institution> NATO Advanced Study Institute, I1 Ciocco, Italy, </institution> <year> 1987. </year>
References-found: 22

