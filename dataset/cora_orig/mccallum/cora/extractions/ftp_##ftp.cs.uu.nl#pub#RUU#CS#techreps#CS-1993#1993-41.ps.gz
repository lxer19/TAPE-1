URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1993/1993-41.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: ami@softlab.is.tsukuba.ac.jp  e-mail: hansz@cs.ruu.nl  
Title: Simple Termination Revisited  
Author: Aart Middeldorp Hans Zantema 
Address: 305, Japan  P.O. Box 80.089, 3508 TB Utrecht, The Netherlands  
Affiliation: Institute of Information Sciences and Electronics University of Tsukuba, Tsukuba  Department of Computer Science, Utrecht University  
Abstract: In this paper we investigate the concept of simple termination. A term rewriting system is called simply terminating if its termination can be proved by means of a simplification order. The basic ingredient of a simplification order is the subterm property, but in the literature two different definitions are given: one based on (strict) partial orders and another one based on preorders (or quasi-orders). In the first part of the paper we argue that there is no reason to choose the second one, while the first one has certain advantages. Simplification orders are known to be well-founded orders on terms over a finite signature. This important result no longer holds if we consider infinite signatures. Nevertheless, well-known simplification orders like the recursive path order are also well-founded on terms over infinite signatures, provided the underlying precedence is well-founded. We propose a new definition of simplification order, which coincides with the old one (based on partial orders) in case of finite signatures, but which is also well-founded over infinite signatures and covers orders like the recursive path order. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> N. Dershowitz, </author> <title> A Note on Simplification Orderings, </title> <journal> Information Processing Letters 9(5), </journal> <pages> pp. 212-215, </pages> <year> 1979. </year>
Reference-contexts: Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions. <p> Moreover, it is easy to show that the class of simply terminating TRSs is not affected by imposing closure under substitutions. Dershowitz <ref> [1, 2] </ref> showed that every simply terminating TRS is terminating. The proof is based on the beautiful Tree Theorem of Kruskal [12]. Definition 3.2.
Reference: 2. <author> N. Dershowitz, </author> <title> Orderings for Term-Rewriting Systems, </title> <booktitle> Theoretical Computer Science 17(3), </booktitle> <pages> pp. 279-301, </pages> <year> 1982. </year>
Reference-contexts: Huet and Lankford [9] showed that this problem is undecidable in general. However, there are several methods for deciding termination that are successful for many special cases. A well-known method for proving termination is the recursive path order (Dershowitz <ref> [2] </ref>). The basic idea of such a path order is that, starting from a given order (the so-called precedence) on the operation symbols, in a recursive way a well-founded order on terms is defined. <p> A TRS (F ; R) is simply terminating if it is compatible with a simplification order on T (F; V). Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. <ref> [2] </ref>). It should also be noted that many authors (e.g. [1, 2, 3, 7, 10, 16]) do not require that simplification orders are closed under substitutions. <p> Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions. <p> Moreover, it is easy to show that the class of simply terminating TRSs is not affected by imposing closure under substitutions. Dershowitz <ref> [1, 2] </ref> showed that every simply terminating TRS is terminating. The proof is based on the beautiful Tree Theorem of Kruskal [12]. Definition 3.2. <p> Lemma 2.3 shows that it is a simplification order. Since also the TRS (F ; R) is compatible with , it is simply terminating. fl In the term rewriting literature the notion of simplification order is sometimes based on preorders instead of partial orders. Dershowitz <ref> [2] </ref> obtained the following result. Theorem 3.6. Let (F ; R) be a TRS. Let % be a preorder on T (F; V) which is closed under contexts and has the subterm property. <p> Hence to conclude termination from compatibility with % it is essential that is closed under substitutions. A simpler TRS illustrating the same point, due to Enno Ohlebusch (personal communication), is ff (x) ! f (a); f (x) ! xg. Dershowitz <ref> [2] </ref> writes that Theorem 3.6 generalizes Theorem 3.4. We have the following result. Theorem 3.7. <p> Nevertheless, it's quite big. For instance, it includes all TRSs whose termination can be shown by means of the recursive path order (Dershowitz <ref> [2] </ref>) and its variants. This can be seen as follows. It is known that rpo is a rewrite order on T (F ; V) with the subterm property (cf. [2]). It is not difficult to show that rpo extends emb , for any precedence on the signature F. <p> For instance, it includes all TRSs whose termination can be shown by means of the recursive path order (Dershowitz <ref> [2] </ref>) and its variants. This can be seen as follows. It is known that rpo is a rewrite order on T (F ; V) with the subterm property (cf. [2]). It is not difficult to show that rpo extends emb , for any precedence on the signature F. Hence rpo is a simplification order whenever the precedence is a PWO. In particular, if the signature is finite then every rpo is a simplification order.
Reference: 3. <author> N. Dershowitz, </author> <title> Termination of Rewriting, </title> <journal> Journal of Symbolic Computation 3(1), </journal> <pages> pp. 69-116, </pages> <year> 1987. </year>
Reference-contexts: Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions. <p> The above definition of multiset extension of a preorder can be shown to be equivalent to the more operational ones in Dershowitz <ref> [3] </ref> and Gallier [7], but since we define the multiset extension of a preorder in terms of the well-known multiset extension of a partial order, we get all desired properties basically for free.
Reference: 4. <author> N. Dershowitz and J.-P. Jouannaud, </author> <title> Rewrite Systems, </title> <booktitle> in: Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> B (ed. J. van Leeuwen), </editor> <publisher> North-Holland, </publisher> <pages> pp. 243-320, </pages> <year> 1990. </year>
Reference-contexts: Termination In order to fix our notations and terminology, we start with a very brief introduction to term rewriting. Term rewriting is surveyed in Dershowitz and Jouannaud <ref> [4] </ref> and Klop [11]. A signature is a set F of function symbols. Associated with every f 2 F is a natural number denoting its arity. Function symbols of arity 0 are called constants. <p> It should be stressed that this requirement cannot be weakened to the compatibility of (F ; R) and (i.e., l r for all rules l ! r 2 R) if we additionally require that % is closed under substitutions, as is incorrectly done in Dershowitz and Jouannaud <ref> [4] </ref>. For instance, the relation ! fl R associated with the TRS R = &gt; &gt; &gt; &lt; f (g (x)) ! f (f (x)) f (x) ! x is a rewrite relation with the subterm property (because R contains Emb (ff; gg)).
Reference: 5. <author> N. Dershowitz and Z. Manna, </author> <title> Proving Termination with Multiset Orderings, </title> <journal> Communications of the ACM 22(8), </journal> <pages> pp. 465-476, </pages> <year> 1979. </year>
Reference-contexts: Using Konig's Lemma, Dershowitz and Manna <ref> [5] </ref> gave a direct proof that multiset extension preserves well-founded partial orders. 12 Definition 5.5. Let % be a preorder on a set A. For every a 2 A, let [a] denote the equivalence class with respect to the equivalence relation ~ containing a.
Reference: 6. <author> M.C.F. Ferreira and H. Zantema, </author> <title> Total Termination of Term Rewriting, </title> <booktitle> Proceedings of the 5th International Conference on Rewriting Techniques and Applications, Montreal, Lecture Notes in Computer Science 690, </booktitle> <pages> pp. 213-227, </pages> <year> 1993. </year>
Reference-contexts: Based on well-quasi-orders a similar result does not hold. A useful notion of termination for term rewriting systems is total termination (see <ref> [6, 17] </ref>). For finite signature one easily shows that total termination implies simple termination. <p> If in addition the operation f A is a polynomial for every f 2 F , the TRS is called polynomially terminating. Total termination has been extensively studied in <ref> [6] </ref>. Clearly every polynomially terminating TRS is !-terminating and every !-terminating TRS is totally terminating.
Reference: 7. <author> J. Gallier, </author> <title> What's so Special about Kruskal's Theorem and the Ordinal 0 ? A Survey of Some Results in Proof Theory, </title> <journal> Annals of Pure and Applied Logic 53, </journal> <pages> pp. 199-260, </pages> <year> 1991. </year>
Reference-contexts: Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions. <p> Gallier <ref> [7] </ref>). First we show a related result for strings, known as Higman's Lemma (Higman [8]). Definition 4.8. Let be a partial order on a set A. <p> The above definition of multiset extension of a preorder can be shown to be equivalent to the more operational ones in Dershowitz [3] and Gallier <ref> [7] </ref>, but since we define the multiset extension of a preorder in terms of the well-known multiset extension of a partial order, we get all desired properties basically for free.
Reference: 8. <author> G. Higman, </author> <title> Ordering by Divisibility in Abstract Algebras, </title> <booktitle> Proceedings of the London Philosophical Society 3(2), </booktitle> <pages> pp. 326-336, </pages> <year> 1952. </year>
Reference-contexts: Gallier [7]). First we show a related result for strings, known as Higman's Lemma (Higman <ref> [8] </ref>). Definition 4.8. Let be a partial order on a set A.
Reference: 9. <author> G. Huet and D. Lankford, </author> <title> On the Uniform Halting Problem for Term Rewriting Systems, </title> <type> report 283, </type> <institution> INRIA, </institution> <year> 1978. </year>
Reference-contexts: 1. Introduction One of the main problems in the theory of term rewriting is the detection of termination: for a fixed system of rewrite rules, determine whether there exist infinite reduction sequences or not. Huet and Lankford <ref> [9] </ref> showed that this problem is undecidable in general. However, there are several methods for deciding termination that are successful for many special cases. A well-known method for proving termination is the recursive path order (Dershowitz [2]).
Reference: 10. <author> G. Huet and D.C. Oppen, </author> <title> Equations and Rewrite Rules: A Survey, in: Formal Language Theory: Perspectives and Open Problems (ed. </title> <publisher> R.V. Book), Academic Press, </publisher> <pages> pp. 349-405, </pages> <year> 1980. </year>
Reference-contexts: Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions.
Reference: 11. <author> J.W. Klop, </author> <title> Term Rewriting Systems, </title> <booktitle> in: Handbook of Logic in Computer Science, </booktitle> <volume> Vol. </volume> <editor> II (eds. S. Abramsky, D. Gabbay and T. Maibaum), </editor> <publisher> Oxford University Press, </publisher> <pages> pp. 1-112, </pages> <year> 1992. </year>
Reference-contexts: Termination In order to fix our notations and terminology, we start with a very brief introduction to term rewriting. Term rewriting is surveyed in Dershowitz and Jouannaud [4] and Klop <ref> [11] </ref>. A signature is a set F of function symbols. Associated with every f 2 F is a natural number denoting its arity. Function symbols of arity 0 are called constants.
Reference: 12. <author> J.B. Kruskal, </author> <title> Well-Quasi-Ordering, the Tree Theorem, and Vazsonyi's Conjecture, </title> <journal> Transactions of the American Mathematical Society 95, </journal> <pages> pp. 210-225, </pages> <year> 1960. </year>
Reference-contexts: Moreover, it is easy to show that the class of simply terminating TRSs is not affected by imposing closure under substitutions. Dershowitz [1, 2] showed that every simply terminating TRS is terminating. The proof is based on the beautiful Tree Theorem of Kruskal <ref> [12] </ref>. Definition 3.2. An infinite sequence t 1 , t 2 , t 3 , : : : of terms in T (F ; V) is self-embedding if there exist 1 6 i &lt; j such that t i E emb t j . Theorem 3.3 (Kruskal's Tree Theorem|Finite Version).
Reference: 13. <author> M. Kurihara and A. Ohuchi, </author> <title> Modularity of Simple Termination of Term Rewriting Systems, </title> <journal> Journal of the Information Processing Society Japan 31(5), </journal> <pages> pp. 633-642, </pages> <year> 1990. </year>
Reference-contexts: Simple Termination | Infinite Signatures Kurihara and Ohuchi <ref> [13] </ref> were the first to use the terminology simple termination. They call a TRS (F ; R) simply terminating if it is compatible with a simplification order on T (F; V).
Reference: 14. <author> C.St.J.A. Nash-Williams, </author> <title> On Well-Quasi-Ordering Finite Trees, </title> <booktitle> Proceedings of the Cambridge Philosophical Society 59, </booktitle> <pages> pp. 833-835, </pages> <year> 1963. </year>
Reference-contexts: If is a PWO on a set A then fl is a PWO on A fl . Proof. The following proof is essentially due to Nash-Williams <ref> [14] </ref>. We have to show that there are no bad sequences over A fl . Suppose to the contrary that there exist bad sequences over A fl . <p> We conclude that there are no bad sequences over A fl . fl Proof of Kruskal's Tree Theorem|General Version. The proof, essentially due to Nash-Williams <ref> [14] </ref>, has the same structure as the proof of Higman's Lemma. We have to show that there are no bad sequences of terms in T (F). Suppose to the contrary that there exist bad sequences of ground terms.
Reference: 15. <author> E. Ohlebusch, </author> <title> A Note on Simple Termination of Infinite Term Rewriting Systems, </title> <type> report nr. 7, </type> <institution> Universitat Bielefeld, </institution> <year> 1992. </year>
Reference-contexts: Since compatibility with a simplification order doesn't ensure the termination of TRSs over infinite signatures, see the example at the beginning of the previous section, this definition of simple termination is clearly not the right one. Ohlebusch <ref> [15] </ref> and others call a TRS (F ; R) simply terminating if it is compatible with a well-founded simplification order on T (F ; V).
Reference: 16. <author> D.A. Plaisted, </author> <title> Equational Reasoning and Term Rewriting Systems, To appear in: </title> <booktitle> Handbook of Logic in Artificial Intelligence and Logic Programming, </booktitle> <volume> Vol. </volume> <editor> I (eds. D. Gabbay and J. Siekmann), </editor> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: Since we are only interested in signatures consisting of function symbols with fixed arity, we have no need for the deletion property (cf. [2]). It should also be noted that many authors (e.g. <ref> [1, 2, 3, 7, 10, 16] </ref>) do not require that simplification orders are closed under substitutions. <p> This is one of the reasons why we favor PWOs. In the remainder of this section we generalize Theorem 3.7 (and hence Theorem 3.6) to arbitrary TRSs. Our proof is based on the elegant proof sketch of Theorem 3.6 given by Plaisted <ref> [16] </ref>. The proof employs multiset extensions of preorders. A multiset is a collection in which elements are allowed to occur more than once. If A is a set then the set of all finite multisets over A is denoted by M (A).
Reference: 17. <author> H. Zantema, </author> <title> Termination of Term Rewriting by Interpretation, </title> <booktitle> Proceedings of the 3rd International Workshop on Conditional Term Rewriting Systems, Pont-a-Mousson, Lecture Notes in Computer Science 656, </booktitle> <pages> pp. 155-167, </pages> <year> 1993. </year> <title> Full version to appear as Termination of Term Rewriting: Interpretation and Type Elimination in Journal of Symbolic Computation, </title> <year> 1994. </year>
Reference-contexts: Based on well-quasi-orders a similar result does not hold. A useful notion of termination for term rewriting systems is total termination (see <ref> [6, 17] </ref>). For finite signature one easily shows that total termination implies simple termination. <p> Hence we have a contradiction with the fact that is a partial order. We conclude that (F ; R) is terminating. fl The following well-known result is especially useful for showing that a given TRS is not simply terminating, see <ref> [17] </ref>. Lemma 3.5. A TRS (F ; R) is simply terminating if and only if (F ; R [Emb (F )) is terminating. Proof. ) Let (F ; R) be compatible with the simplification order on T (F ; V). <p> We conclude that (F ; R [ Emb (F; A)) is a terminating TRS. fl 6. Other Notions of Termination In this final section we investigate the relationship between simple termination and other restricted kinds of termination as introduced in <ref> [17] </ref>. First we recall some terminology. Let F be a signature.
Reference: 18. <author> H. Zantema, </author> <title> Termination of Term Rewriting by Semantic Labelling, </title> <type> report RUU-CS-93-24, </type> <institution> Utrecht University, </institution> <year> 1993. </year> <note> Submitted. 17 </note>
References-found: 18

