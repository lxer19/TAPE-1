URL: http://www.cs.columbia.edu/~german/papers/cas96.ps
Refering-URL: http://www.cs.columbia.edu/~german/papers.html
Root-URL: http://www.cs.columbia.edu
Title: Network Management Views using Delegated Agents  
Author: German Goldszmidt 
Date: Nov. 1996  
Note: Published in the Proceedings of the 6th CAS Conference, Toronto, Canada,  
Affiliation: IBM T.J. Watson Research Center  
Abstract: The lack of an appropriate external data model is one of the reasons for the dearth of effective network management applications. Many network management computations over Management Information Bases (mibs ) cannot be practically accomplished through remote interactions. This paper describes the design of an mib Computations System that supports the dynamic definition of external data models for mibs. The system consists of a View Definition Language (vdl) to specify mib external views and snmp-agent extensions that implement them. vdl views define new mib variables, which are computed via instrumentations performed by a Management-by-Delegation (m b d) server, and which can be queried via the Simple Network Management Protocol, (snmp).
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kazushige Arai and Yechiam Yemini. </author> <title> View Definition Language (VDL) for SNMP. </title> <booktitle> In The Fourth International Symposium on Integrated Network Management, </booktitle> <pages> pages 454-465, </pages> <address> Santa Barbara, California, </address> <month> April </month> <year> 1995. </year> <month> 17 </month>
Reference-contexts: A party may be authorized to access a subset of the mib. mib views extend this mechanism to support not only projections but also computations over mib data. An alternative vdl, which also requires m b d support was proposed by <ref> [1] </ref>. Their vdl extends the mib smi to support views. The smi is a subset of asn.1, a data definition language used to define the types and representations of the contents of snmp pdus. <p> Extending the smi to support views requires merging the sql select-from-where constructs in the asn.1 notation. This results in very long and detailed specifications of mib views. For instance, an example that takes more than 50 lines using the notation presented in <ref> [1] </ref> takes only five lines in our vdl [6]. Notice also that the smi is a well-established standard at the core of snmp. An extension or revision of such a standard must also overcome many non-technical obstacles, as the experience of snmpv2 has shown.
Reference: [2] <author> Subodh Bapat. </author> <title> Richer Modeling Semantics for Management Information. </title> <booktitle> In The Third International Symposium on Integrated Network Management, </booktitle> <pages> pages 15-28, </pages> <address> San Francisco, CA, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: For example, two specification techniques that combine object-oriented and relation-algebraic methods to model mib data are presented in <ref> [2, 3] </ref>. [2] proposes the use of virtual attributes, which are dynamically computed from other attributes to enforce access control. [3] hints at future extensions of their modeling technique that would include views to filter certain objects. <p> For example, two specification techniques that combine object-oriented and relation-algebraic methods to model mib data are presented in [2, 3]. <ref> [2] </ref> proposes the use of virtual attributes, which are dynamically computed from other attributes to enforce access control. [3] hints at future extensions of their modeling technique that would include views to filter certain objects.
Reference: [3] <author> Ch. Benz and M. Leischner. </author> <title> A High Level Specification Technique for Modeling Networks and their Environments including Semantic Aspects. </title> <booktitle> In The Third International Symposium on Integrated Network Management, </booktitle> <pages> pages 29-43, </pages> <address> San Francisco, CA, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: For example, two specification techniques that combine object-oriented and relation-algebraic methods to model mib data are presented in <ref> [2, 3] </ref>. [2] proposes the use of virtual attributes, which are dynamically computed from other attributes to enforce access control. [3] hints at future extensions of their modeling technique that would include views to filter certain objects. <p> For example, two specification techniques that combine object-oriented and relation-algebraic methods to model mib data are presented in [2, 3]. [2] proposes the use of virtual attributes, which are dynamically computed from other attributes to enforce access control. <ref> [3] </ref> hints at future extensions of their modeling technique that would include views to filter certain objects. The role and applicability of formal model-based techniques for diagnosis of dynamic systems is analyzed in [11].
Reference: [4] <author> Ramez Elmasri and Shamkant B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <address> Benjamin/Cummings, </address> <year> 1989. </year>
Reference-contexts: For example, resolution of routing problems typically involves correlation of routing, address translation, and other configuration tables. Thus, it would be very useful to support effective computations of atomic joins. Database Views Traditional database systems support three data definition levels: internal, conceptual, and external <ref> [4] </ref>. External data definitions allow remote applications to define "views", which are computations over the conceptual-level data. Our approach is to support a similar mechanism over an mib. Implementing a complete database system for every network device mib would probably be too costly and complex for this purpose. <p> Management Information Bases An mib can be viewed as a simple database, that is, as a logically coherent collection of data with some inherent meaning, which is designed, built, and populated with data for a specific purpose <ref> [4] </ref>. Thus, snmp is the query language, the smi [12] is its Data Definition Language (ddl), and an snmp-agent is a primitive database management system. A database system includes an intrinsic data model schema, which defines the structure of the database at three levels: internal, conceptual, and external. <p> The generated v-mib objects provide a stored snapshot of the mib state, which can then be retrieved via snmp. 1 Indeed, updating views is still an active research area <ref> [4] </ref>. 8 mib Actions mib views can enforce atomic semantics of management actions over mibs. For each action, there is a set of mib objects that implement a call frame, which includes the input parameters, the output parameters, and a call identifier.
Reference: [5] <author> German Goldszmidt. </author> <title> On Distributed System Management. </title> <booktitle> In Proceedings of the Third IBM/CAS Conference, </booktitle> <address> Toronto, Canada, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Network management applications need to compute useful information from raw data collected in Management Information Bases (mibs). Often such computations cannot be accomplished through remote interactions between the application and the snmp agents that implement the mibs <ref> [5] </ref>. For example, suppose that an application needs to perform some analysis on all the routing table entries of a router. The application can use snmp's get-next requests to retrieve the routing table entries, one row at a time.
Reference: [6] <author> German Goldszmidt. </author> <title> Distributed Management by Delegation. </title> <type> PhD thesis, </type> <institution> Co-lumbia University, </institution> <address> New York, NY, </address> <year> 1995. </year>
Reference-contexts: The complete definition of vdl is given in <ref> [6] </ref>. The vdl translator compiles legal vdl code 7 fragments, and generates the required mib structures to hold the computed mib val-ues. <p> Additional examples are presented in <ref> [6] </ref>. 5.1 mib Views can filter mib data snmp does not support value-based filtering of mib data at its source. An mib view object allows manager applications to filter table retrievals at their source, using arithmetic and Boolean operators over mib values. <p> This results in very long and detailed specifications of mib views. For instance, an example that takes more than 50 lines using the notation presented in [1] takes only five lines in our vdl <ref> [6] </ref>. Notice also that the smi is a well-established standard at the core of snmp. An extension or revision of such a standard must also overcome many non-technical obstacles, as the experience of snmpv2 has shown. Our approach, in contrast, does not require any changes to the smi.
Reference: [7] <author> German Goldszmidt, Yechiam Yemini, and Shaula Yemini. </author> <title> Network Management: The MAD Approach. </title> <booktitle> In Proceedings of the IBM/CAS Conference, </booktitle> <address> Toronto, Canada, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: Fourth, the new framework must be integrated properly within the standard management framework, so that existing applications and systems can interoperate with it. Our approach is based on the m b d paradigm <ref> [7] </ref>, and consists of (1) a vdl to specify mib external views and (2) snmp agent extensions that implement them. External views are computed via instrumentations over an mib, and are performed by a special m b d-server.
Reference: [8] <author> C Hedrick. </author> <title> Routing Information Protocol. </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: Some of these problems are often handled by automatic recovery mechanisms that quickly mask the symptoms of the underlying problem. For example, routing algorithms can dynamically adjust routes to react to changing network conditions. Algorithms such as RIP's <ref> [8] </ref> distance-vector algorithm, try to find the best route for every destination. Thus an intermittent routing problem may be masked by the routing algorithm itself. Example: Atomicity of Management Actions Consider a router whose routing table has several thousands of entries.
Reference: [9] <author> International Standards Organization ISO. </author> <title> Open Systems Interconnection - Common Management Information Protocol Specification, </title> <booktitle> 1990. International Standard 9596. </booktitle>
Reference-contexts: An mib view object allows manager applications to filter table retrievals at their source, using arithmetic and Boolean operators over mib values. Our method of filtering can be more efficient than the one pursued by cmip <ref> [9] </ref>, in which filters are passed as part of the queries. vdl filters are delegated before access. Therefore, they require no parsing and no interpretation during access time, as is the case for cmip filters. Consider, for example, a typical routing device.
Reference: [10] <author> K. McCloghrie and M. Rose. </author> <title> Management Information Base for Network Management of TCP/IP-based internets: </title> <journal> MIB-II. </journal> <volume> RFC 1213, </volume> <month> March </month> <year> 1991. </year>
Reference-contexts: Again, the snmp protocol interaction requires the application to first retrieve data from all the potential mib tables to the platform host and then select (at the platform host) the relevant data. For instance, the mib-ii ipRouteTable <ref> [10] </ref> keeps track of ip routes, while interface information is found at the ifTable. An application may need to correlate routes with interface utilization for capacity-planning purposes.
Reference: [11] <author> Marc Riese. </author> <title> Model-Based Diagnosis of Communication Protocols. </title> <type> PhD thesis, </type> <institution> Swiss Federal Institute of Technology, Lausanne, Switzerland, </institution> <year> 1993. </year> <note> Available via anonymous ftp from litsun.epfl.ch. </note>
Reference-contexts: The role and applicability of formal model-based techniques for diagnosis of dynamic systems is analyzed in <ref> [11] </ref>. The (suspended) draft snmpv2 framework defines "mib views" as subsets of the managed objects held by the managed entity. These subsets are defined by inclusion and exclusion of subtree families via bit-masks, providing a simple projection of a subset of the mib tree.
Reference: [12] <author> M. Rose and K. McCloghrie. </author> <title> Structure and Identification of Management Information for TCP/IP-based Internets. </title> <type> RFC 1155, </type> <month> May </month> <year> 1990. </year>
Reference-contexts: Management Information Bases An mib can be viewed as a simple database, that is, as a logically coherent collection of data with some inherent meaning, which is designed, built, and populated with data for a specific purpose [4]. Thus, snmp is the query language, the smi <ref> [12] </ref> is its Data Definition Language (ddl), and an snmp-agent is a primitive database management system. A database system includes an intrinsic data model schema, which defines the structure of the database at three levels: internal, conceptual, and external.
Reference: [13] <author> Chris Wellens and Karl Auerbach. </author> <title> Towards Useful Network Management. The Simple Times, </title> <type> 4(3), </type> <month> July </month> <year> 1996. </year>
Reference-contexts: In the past, many snmp followers claimed that such computations would require too much from the managed element, i.e., "agents must be dumb". We think that "Today's network devices are capable of managing themselves, if given the opportunity" <ref> [13] </ref>. The mcva functionality is organized in a multithreaded environment, such as an m b d-server. Thus it can be configured to execute only the required computations, according to the host device's computational abilities.

References-found: 13

