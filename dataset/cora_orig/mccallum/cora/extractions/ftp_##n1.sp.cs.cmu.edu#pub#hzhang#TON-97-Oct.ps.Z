URL: ftp://n1.sp.cs.cmu.edu/pub/hzhang/TON-97-Oct.ps.Z
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/hzhang/WWW/publications.html
Root-URL: 
Email: jcrb@fore.com hzhang@cs.cmu.edu  
Title: Hierarchical Packet Fair Queueing Algorithms  
Author: Jon C. R. Bennett Hui Zhang 
Affiliation: FORE Systems Inc. Carnegie Mellon University  
Abstract: In this paper, we propose to use the idealized Hierarchical Generalized Processor Sharing (H-GPS) model to simultaneously support guaranteed real-time, rate-adaptive best-effort, and controlled link-sharing services. We design Hierarchical Packet Fair Queueing (H-PFQ) algorithms to approximate H-GPS by using one-level variable-rate PFQ servers as basic building blocks. By computing the system virtual time and per packet virtual start/finish times in unit of bits instead of seconds, most of the PFQ algorithms in the literature can be properly defined as variable-rate servers. We develop techniques to analyze delay and fairness properties of variable-rate and hierarchical PFQ servers. We demonstrate that in order to provide tight delay bounds with an H-PFQ server, it is essential for the one-level PFQ servers to have small Worst-case Fair Indices (WFI). We propose a new PFQ algorithm called WF 2 Q+ that is the first to have all the following three properties: (a) providing the tightest delay bound among all PFQ algorithms, (b) having the smallest WFI among all PFQ algorithms, and (c) having a relatively low asymptotic complexity of O(log N). Simulation results are presented to evaluate the delay and link-sharing properties of H-WF 2 Q+ , H-WFQ, H-SFQ, and H-SCFQ. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.R. Bennett and H. Zhang. </author> <title> WF 2 Q: Worst-case fair weighted fair queueing. </title> <booktitle> In Proceedings of IEEE INFO-COM'96, </booktitle> <pages> pages 120-128, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in <ref> [1] </ref>. Most of the previously proposed PFQ algorithms [5, 7, 8, 12, 17] do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. <p> As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. The only exception is Worst-case Fair Weighted Fair Queueing algorithm (WF 2 Q), which is proven to provide smallest WFI's among all PFQ algorithms <ref> [1] </ref>. However, WF 2 Q uses a system virtual time function with a complexity of O (N). We propose a new algorithm that maintains all the important properties of WF 2 Q, but has a lower complexity than WF 2 Q. We call the new algorithm WF 2 Q+ . <p> As we discussed in the previous section, both GPS and WFQ are properly defined as variable-rate servers. In fact, by computing the system virtual time and per packet virtual start/finish times in unit of bits, most of the PFQ algorithms proposed in the literature <ref> [1, 7, 8, 13, 17] </ref> are variable-rate servers. Therefore, for PFQ nodes in an H-PFQ hierarchy, the virtual times should be measured in unit of bits. <p> We propose a new algorithm called WF 2 Q+ that not only provides tight delay bounds and low WFI's, but also has a relatively low complexity. 4.1 Limitation of Existing PFQ Algorithms In <ref> [1] </ref>, the following example is used to illustrate the large discrepancies between the services provided by GPS and WFQ. Assume that there are 11 sessions with packet size of 1 sharing a link with the speed of 1, 1 = 0:5, and i = 0:05; i = 2; ; 11. <p> Similar examples can be constructed for SCFQ [7], SFQ [8], and FBFQ [17]. 4.2 WFI and Its Effect on Delay Bounds of H-PFQ In <ref> [1] </ref>, we introduce a metric called Worst-case Fair Index (WFI) to characterize PFQ servers. <p> Therefore, to achieve tight delay bounds in a H-PFQ server, the WFI's for the internal and root server nodes should be small. 5 Worst-case Fair PFQ Algorithms 5.1 WF 2 Q Among all PFQ algorithms proposed in the literature, the Worst-case Fair Weighted Fair Queueing (WF 2 Q) <ref> [1] </ref> is the only one that provides tight WFI's. WF 2 Q differs from WFQ in that it uses the "Smallest Eligible virtual Finish time First" (SEFF) policy instead of the popular SFF or SSF policies. <p> Therefore, WF 2 Q is a more accurate approximation of GPS than WFQ. The following theorem is proven in <ref> [1] </ref>. <p> For example, for GPS, WFQ and WF 2 Q are the corresponding PFQ algorithms with SFF and SEFF packet selection policies respectively. By applying similar techniques that are used in <ref> [1] </ref> to prove the properties of WF 2 Q, the following theorem can be established.
Reference: [2] <author> D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 14-26, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: The first property forms the basis for supporting real-time traffic <ref> [2] </ref> and the third property enables robust and distributed end-to-end traffic management algorithms for best-effort traffic [9, 14]. H-GPS will maintain the first and the third properties, but distribute excess bandwidth unused by a session according to the hierarchy rather than just service shares of sessions.
Reference: [3] <author> R. Cruz. </author> <title> Service burstiness and dynamic burstiness measures: A framework. </title> <journal> Journal of High Speed Networks, </journal> <volume> 1(2) </volume> <pages> 105-127, </pages> <year> 1992. </year>
Reference-contexts: The definition of SBI has its root in the guaranteed service curve concept proposed by Cruz <ref> [3] </ref>. However, there are several differences. First, SBI is applicable to both constant-rate and variable-rate servers, while guaranteed service curve is defined only for constant-rate servers. Second, for SBI, we consider only intervals that end at packet departure times, while Cruz considers intervals that end at arbitrary time instants. <p> Therefore, SBI represents a stronger guarantee than the guaranteed service curve. However, it can be shown that all the analysis and results in <ref> [3] </ref> are applicable with our definition of SBI. Intuitively, for any work-conserving queueing system (including PFQ systems), system busy periods are invariant with respect to the scheduling policy used, therefore can be independently analyzed. <p> For most rate-based service disciplines [20], if the server guarantees a delay bound of D i to a leaky bucket constrained session, it also guarantees an SBI of r i D i i to the ses sion <ref> [3] </ref>. Therefore, bounded service burstiness property and bounded delay property are equivalent for standalone rate-based servers. Since the bounded service burstiness property applies also to variable rate servers, it can be viewed as the generalized bounded delay property.
Reference: [4] <author> J. Davin and A. Heybey. </author> <title> A simulation study of fair queueing and policy enforcement. </title> <journal> Computer Communication Review, </journal> <volume> 20(5) </volume> <pages> 23-29, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The general sched-uler services eligible packets using a static priority policy. Our work differs from this work in that we build our framework on H-GPS, which has theoretically proven properties for supporting link-sharing, real-time service, and best-effort service. A number of algorithms such as Self-Clocked Fair Queueing <ref> [4, 7] </ref>, Stochastic Fair Queueing [10], Deficit Round Robin [16], Frame-based Fair Queueing [17], and Start-time Fair Queueing [8] have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's.
Reference: [5] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <journal> In Journal of Inter-networking Research and Experience, </journal> <pages> pages 3-26, </pages> <month> October </month> <year> 1990. </year> <booktitle> Also in Proceedings of ACM SIGCOMM'89, </booktitle> <pages> pp 3-12. </pages>
Reference-contexts: It has been shown that with a one-level GPS: (1) an end-to-end delay bound can be provided to a session if the traffic on that session is leaky bucket constrained [12], (2) bandwidth is fairly distributed to competing sessions <ref> [5] </ref>, and (3) the sources can accurately estimate the available bandwidth to them in a distributed fashion [9]. The first property forms the basis for supporting real-time traffic [2] and the third property enables robust and distributed end-to-end traffic management algorithms for best-effort traffic [9, 14]. <p> In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in [1]. Most of the previously proposed PFQ algorithms <ref> [5, 7, 8, 12, 17] </ref> do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. <p> A good packet approximation algorithm of GPS would be one that serves packets in increasing order of their finish times in the fluid GPS system <ref> [5, 12] </ref>. <p> To have a work-conserving packet system, the packet server must choose a packet to transmit based only on the state of the fluid system up to time t . In Weighted Fair Queueing (WFQ) <ref> [5] </ref>, when the server is ready to transmit the next packet at time t , it picks, among all the packets queued in the system at t , the first packet that would complete service in the corresponding GPS system if no additional packets were to arrive after time t . <p> With this property, it is possible to maintain the relative GPS finish order for packets in the WFQ system by using a priority queue mechanism <ref> [5, 12] </ref>. Such an implementation is based on the notion of a system virtual time function V (t ), which is the normalized fair amount of service that all back logged sessions should receive by time t in the GPS system.
Reference: [6] <author> S. Floyd and V. Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4), </volume> <month> August </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Future integrated services networks will support multiple service classes that include real-time service, best-effort service, and others. In addition, they will need to support link-sharing <ref> [6] </ref>, which allows resource sharing among traffic streams that are grouped according to administrative affiliation, protocol, traffic type, or other criteria. Figure 1 (a) shows an example where there are 11 agencies sharing the output link. <p> Adjusting the weight according to the set of backlogged sessions in the packet system can result in large errors. In <ref> [6] </ref>, a Class-Based Queueing (CBQ) algorithm is presented to support link-sharing and integrated services. A CBQ server consists of a link-sharing scheduler and a general scheduler. The link-sharing scheduler decides whether to regulate a class based on link-sharing rules and mark packets of regulated classes as ineligible.
Reference: [7] <author> S. Golestani. </author> <title> A self-clocked fair queueing scheme for broadband applications. </title> <booktitle> In Proceedings of IEEE INFOCOM'94, </booktitle> <pages> pages 636-646, </pages> <address> Toronto, CA, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in [1]. Most of the previously proposed PFQ algorithms <ref> [5, 7, 8, 12, 17] </ref> do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. <p> The system virtual time function, though, does need to be re-computed when the set of backlogged sessions change. Since there can be N sessions that become backlogged or unbacklogged during an arbitrarily small interval, the worst case complexity of computing V GP S (:) is O (N) <ref> [7] </ref>. It is possible to have other Packet Fair Queueing (PFQ) algorithms based on virtual time functions with lower worst-case complexity [7, 8, 17]. Later in this paper, we will propose a more accurate virtual time function with a worst-case complexity of O (log N). <p> It is possible to have other Packet Fair Queueing (PFQ) algorithms based on virtual time functions with lower worst-case complexity <ref> [7, 8, 17] </ref>. Later in this paper, we will propose a more accurate virtual time function with a worst-case complexity of O (log N). <p> As we discussed in the previous section, both GPS and WFQ are properly defined as variable-rate servers. In fact, by computing the system virtual time and per packet virtual start/finish times in unit of bits, most of the PFQ algorithms proposed in the literature <ref> [1, 7, 8, 13, 17] </ref> are variable-rate servers. Therefore, for PFQ nodes in an H-PFQ hierarchy, the virtual times should be measured in unit of bits. <p> Similar examples can be constructed for SCFQ <ref> [7] </ref>, SFQ [8], and FBFQ [17]. 4.2 WFI and Its Effect on Delay Bounds of H-PFQ In [1], we introduce a metric called Worst-case Fair Index (WFI) to characterize PFQ servers. <p> While a number of new virtual time functions have been proposed to simplify the implementation of WFQ <ref> [7, 17] </ref>, they all result in PFQ algorithms with large WFI's. <p> Therefore, both WFQ and WF 2 Q can provide tight delay bounds. On the other hand, the virtual time functions used by SCFQ <ref> [7] </ref> and SFQ [8] may have a slope of 0 during certain periods, and the delay bounds provided by the resulted SCFQ and SFQ algorithms are much larger than those provided by WFQ and WF 2 Q. <p> The general sched-uler services eligible packets using a static priority policy. Our work differs from this work in that we build our framework on H-GPS, which has theoretically proven properties for supporting link-sharing, real-time service, and best-effort service. A number of algorithms such as Self-Clocked Fair Queueing <ref> [4, 7] </ref>, Stochastic Fair Queueing [10], Deficit Round Robin [16], Frame-based Fair Queueing [17], and Start-time Fair Queueing [8] have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's.
Reference: [8] <author> P. Goyal, H.M. Vin, and H. Chen. </author> <title> Start-time Fair Queuing: A scheduling algorithm for integrated services. </title> <booktitle> In Proceedings of the ACM-SIGCOMM 96, </booktitle> <pages> pages 157-168, </pages> <address> Palo Alto, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in [1]. Most of the previously proposed PFQ algorithms <ref> [5, 7, 8, 12, 17] </ref> do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. <p> It is possible to have other Packet Fair Queueing (PFQ) algorithms based on virtual time functions with lower worst-case complexity <ref> [7, 8, 17] </ref>. Later in this paper, we will propose a more accurate virtual time function with a worst-case complexity of O (log N). <p> As we discussed in the previous section, both GPS and WFQ are properly defined as variable-rate servers. In fact, by computing the system virtual time and per packet virtual start/finish times in unit of bits, most of the PFQ algorithms proposed in the literature <ref> [1, 7, 8, 13, 17] </ref> are variable-rate servers. Therefore, for PFQ nodes in an H-PFQ hierarchy, the virtual times should be measured in unit of bits. <p> Similar examples can be constructed for SCFQ [7], SFQ <ref> [8] </ref>, and FBFQ [17]. 4.2 WFI and Its Effect on Delay Bounds of H-PFQ In [1], we introduce a metric called Worst-case Fair Index (WFI) to characterize PFQ servers. <p> Therefore, both WFQ and WF 2 Q can provide tight delay bounds. On the other hand, the virtual time functions used by SCFQ [7] and SFQ <ref> [8] </ref> may have a slope of 0 during certain periods, and the delay bounds provided by the resulted SCFQ and SFQ algorithms are much larger than those provided by WFQ and WF 2 Q. <p> A number of algorithms such as Self-Clocked Fair Queueing [4, 7], Stochastic Fair Queueing [10], Deficit Round Robin [16], Frame-based Fair Queueing [17], and Start-time Fair Queueing <ref> [8] </ref> have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's. <p> We hypothesize that it belongs to the class of PFQ algorithms that approximate a fluid rate proportional server using a SEFF policy. The idea of implementing H-PFQ algorithm by integrating one-level PFQ algorithm into a hierarchy was also independently proposed in <ref> [8] </ref>. However, the details of the algorithm are not presented and the analysis applies only to H-SFQ. In addition, there are two claims made in [8] that we don't believe are accurate. In [8], it was claimed that SFQ had two unique advantages compared to other PFQ algorithms: first, it is <p> The idea of implementing H-PFQ algorithm by integrating one-level PFQ algorithm into a hierarchy was also independently proposed in <ref> [8] </ref>. However, the details of the algorithm are not presented and the analysis applies only to H-SFQ. In addition, there are two claims made in [8] that we don't believe are accurate. In [8], it was claimed that SFQ had two unique advantages compared to other PFQ algorithms: first, it is the only algorithm that are fair when the server is variable rate, second, it is the only algorithm that does not require admission control (the <p> of implementing H-PFQ algorithm by integrating one-level PFQ algorithm into a hierarchy was also independently proposed in <ref> [8] </ref>. However, the details of the algorithm are not presented and the analysis applies only to H-SFQ. In addition, there are two claims made in [8] that we don't believe are accurate. In [8], it was claimed that SFQ had two unique advantages compared to other PFQ algorithms: first, it is the only algorithm that are fair when the server is variable rate, second, it is the only algorithm that does not require admission control (the sum of service shares does not need to
Reference: [9] <author> S. Keshav. </author> <title> A control-theoretic approach to flow control. </title> <booktitle> In Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pages 3-15, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: a one-level GPS: (1) an end-to-end delay bound can be provided to a session if the traffic on that session is leaky bucket constrained [12], (2) bandwidth is fairly distributed to competing sessions [5], and (3) the sources can accurately estimate the available bandwidth to them in a distributed fashion <ref> [9] </ref>. The first property forms the basis for supporting real-time traffic [2] and the third property enables robust and distributed end-to-end traffic management algorithms for best-effort traffic [9, 14]. <p> The first property forms the basis for supporting real-time traffic [2] and the third property enables robust and distributed end-to-end traffic management algorithms for best-effort traffic <ref> [9, 14] </ref>. H-GPS will maintain the first and the third properties, but distribute excess bandwidth unused by a session according to the hierarchy rather than just service shares of sessions.
Reference: [10] <author> P. McKenney. </author> <title> Stochastic fair queueing. </title> <booktitle> In Proceedings of IEEE INFOCOM'90, </booktitle> <address> San Francisco, CA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Our work differs from this work in that we build our framework on H-GPS, which has theoretically proven properties for supporting link-sharing, real-time service, and best-effort service. A number of algorithms such as Self-Clocked Fair Queueing [4, 7], Stochastic Fair Queueing <ref> [10] </ref>, Deficit Round Robin [16], Frame-based Fair Queueing [17], and Start-time Fair Queueing [8] have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's.
Reference: [11] <author> O. Ndiaye. </author> <title> An efficient implementation of a hierarchical weighted fair queue packet scheduler. </title> <type> Master's thesis, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: The negative effects introduced by WFQ's high WFI on link-sharing and traffic management algorithms are not studied. To provide tighter bounds for real-time traffic, all real-time queues need to be children of the root node, and link-sharing between real-time and non-real-time sessions is accomplished via a separate mechanism. In <ref> [11] </ref>, an implementation of H-WFQ is presented. The scheduler implemented is actually not an H-WFQ server, but a WFQ server in which the weights are dynamically changed according to the set of backlogged sessions in the packet server.
Reference: [12] <author> A. Parekh and R. Gallager. </author> <title> A generalized processor sharing approach to flow control the single node case. </title> <journal> ACM/IEEE Transactions on Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: This service distribution follows the hierarchy until it reaches the leaf nodes where there are physical queues. It has been shown that with a one-level GPS: (1) an end-to-end delay bound can be provided to a session if the traffic on that session is leaky bucket constrained <ref> [12] </ref>, (2) bandwidth is fairly distributed to competing sessions [5], and (3) the sources can accurately estimate the available bandwidth to them in a distributed fashion [9]. <p> In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in [1]. Most of the previously proposed PFQ algorithms <ref> [5, 7, 8, 12, 17] </ref> do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. <p> With such a strong bandwidth guarantee, GPS can also provide a worst-case delay bound for a session that is constrained by a leaky bucket with an average rate no greater than r i <ref> [12] </ref>. A good packet approximation algorithm of GPS would be one that serves packets in increasing order of their finish times in the fluid GPS system [5, 12]. <p> A good packet approximation algorithm of GPS would be one that serves packets in increasing order of their finish times in the fluid GPS system <ref> [5, 12] </ref>. <p> Since packet finish times will change when sessions become backlogged or unbacklogged, a naive implementation of WFQ is to re-compute the finish times of all packets in the GPS system whenever a session becomes backlogged or unbacklogged. By observing the following important property of GPS <ref> [12] </ref>, a more practical implementation of WFQ is possible. Property 1 The relative finish order of all packets that are in the system at time t is independent of any packet arrivals to the system after time t . <p> With this property, it is possible to maintain the relative GPS finish order for packets in the WFQ system by using a priority queue mechanism <ref> [5, 12] </ref>. Such an implementation is based on the notion of a system virtual time function V (t ), which is the normalized fair amount of service that all back logged sessions should receive by time t in the GPS system.
Reference: [13] <author> S. Suri and G. Varghese and G. Chandranmenon. </author> <title> Leap Forward Virtual Clock. </title> <booktitle> In Proceedings of INFOCOM 97, </booktitle> <address> Kobe, Japan, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> As we discussed in the previous section, both GPS and WFQ are properly defined as variable-rate servers. In fact, by computing the system virtual time and per packet virtual start/finish times in unit of bits, most of the PFQ algorithms proposed in the literature <ref> [1, 7, 8, 13, 17] </ref> are variable-rate servers. Therefore, for PFQ nodes in an H-PFQ hierarchy, the virtual times should be measured in unit of bits. <p> However, none of them address the issue of worst-case fairness, and all of them have large WFI's. As shown in the paper, H-PFQ algorithms based on these algorithms result in much larger worst-case delay than that under H-WF 2 Q+. The Leap Forward Virtual Clock <ref> [13] </ref> achieves low WFI by using a SEFF policy similar to that (a) Class Hierarchy (b) Active Periods for On/Off Sources used by WF 2 Q and WF 2 Q+.
Reference: [14] <author> S. Shenker. </author> <title> Making greed work in networks: A game theoretical analysis of switch service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM'94, </booktitle> <pages> pages 47-57, </pages> <address> London, UK, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: The first property forms the basis for supporting real-time traffic [2] and the third property enables robust and distributed end-to-end traffic management algorithms for best-effort traffic <ref> [9, 14] </ref>. H-GPS will maintain the first and the third properties, but distribute excess bandwidth unused by a session according to the hierarchy rather than just service shares of sessions.
Reference: [15] <author> S. Shenker, D. Clark, and L. Zhang. </author> <title> A scheduling service model and a scheduling architecture for an integrated services network, 1993. </title> <type> preprint. </type>
Reference-contexts: While 100 ms provides a very fine granularity of measuring bandwidth, it is a very large number when it comes to one hop average packet delay. Therefore, even though the worst-case packet delays vary significantly with different H-PFQ algorithms, the bandwidth distribution are very similiar. 7 Related Work In <ref> [15] </ref>, H-WFQ is used to support integrated traffic management. The negative effects introduced by WFQ's high WFI on link-sharing and traffic management algorithms are not studied.
Reference: [16] <author> M. Shreedhar and G. Varghese. </author> <title> Efficient fair queueing using deficit round robin. </title> <booktitle> In Proceedings of SIGCOMM'95, </booktitle> <pages> pages 231-243, </pages> <address> Boston, MA, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: Our work differs from this work in that we build our framework on H-GPS, which has theoretically proven properties for supporting link-sharing, real-time service, and best-effort service. A number of algorithms such as Self-Clocked Fair Queueing [4, 7], Stochastic Fair Queueing [10], Deficit Round Robin <ref> [16] </ref>, Frame-based Fair Queueing [17], and Start-time Fair Queueing [8] have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's.
Reference: [17] <author> D. Stilliadis and A. Verma. </author> <title> Design and analysis of frame-based fair queueing: A new traffic scheduling algorithm for packet-switched networks. </title> <booktitle> In Proceedings of ACM SIGMET-RICS'96, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: In this paper, we design packet approximation algorithms of H-GPS. In the literature, a number of one-level Packet Fair Queueing (PFQ) algorithms have been proposed to approximate the fluid GPS algorithm <ref> [1, 5, 7, 8, 12, 13, 17] </ref>. To reduce the implementation complexity, they all use the notion of a system virtual time function that tracks the progress in the fluid system. <p> In addition, as we will demonstrate, to achieve tight delay bounds in the H-GPS server, one-level PFQ servers also need to provide (c) small Worst-case Fair Indices (WFI's) as defined in [1]. Most of the previously proposed PFQ algorithms <ref> [5, 7, 8, 12, 17] </ref> do not have small WFI's. In fact, they all have WFI's that grow proportionally to the number of queues in the system. As a result, the delay bounds provided by H-PFQ servers made of these PFQ's are much larger than those provided by H-GPS. <p> It is possible to have other Packet Fair Queueing (PFQ) algorithms based on virtual time functions with lower worst-case complexity <ref> [7, 8, 17] </ref>. Later in this paper, we will propose a more accurate virtual time function with a worst-case complexity of O (log N). <p> As we discussed in the previous section, both GPS and WFQ are properly defined as variable-rate servers. In fact, by computing the system virtual time and per packet virtual start/finish times in unit of bits, most of the PFQ algorithms proposed in the literature <ref> [1, 7, 8, 13, 17] </ref> are variable-rate servers. Therefore, for PFQ nodes in an H-PFQ hierarchy, the virtual times should be measured in unit of bits. <p> Similar examples can be constructed for SCFQ [7], SFQ [8], and FBFQ <ref> [17] </ref>. 4.2 WFI and Its Effect on Delay Bounds of H-PFQ In [1], we introduce a metric called Worst-case Fair Index (WFI) to characterize PFQ servers. <p> While a number of new virtual time functions have been proposed to simplify the implementation of WFQ <ref> [7, 17] </ref>, they all result in PFQ algorithms with large WFI's. <p> Our work differs from this work in that we build our framework on H-GPS, which has theoretically proven properties for supporting link-sharing, real-time service, and best-effort service. A number of algorithms such as Self-Clocked Fair Queueing [4, 7], Stochastic Fair Queueing [10], Deficit Round Robin [16], Frame-based Fair Queueing <ref> [17] </ref>, and Start-time Fair Queueing [8] have been proposed to approximate GPS with a lower complexity. However, none of them address the issue of worst-case fairness, and all of them have large WFI's.
Reference: [18] <author> D. Stilliadis and A. Verma. </author> <title> Latency-rate servers: A general model for analysis of traffic scheduling algorithms. </title> <booktitle> In Proceedings of IEEE INFOCOM'96, </booktitle> <pages> pages 111-119, </pages> <address> San Fran-cisco, CA, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: The full proof will appear in a follow-up paper. The proof is based on the theory of rate-proportional servers developed in <ref> [18] </ref>. While the definition of rate-proportional servers in [18] is based on virtual time functions measured in unit of second, it can be easily extended to the more general definition with virtual time functions measured in unit of bit. <p> The full proof will appear in a follow-up paper. The proof is based on the theory of rate-proportional servers developed in <ref> [18] </ref>. While the definition of rate-proportional servers in [18] is based on virtual time functions measured in unit of second, it can be easily extended to the more general definition with virtual time functions measured in unit of bit.
Reference: [19] <author> I. Stoica and H. Abdel-Wahab. </author> <title> Earliest eligible virtual deadline first: A flexible and accurate mechanism for proportional share resource allocation. </title> <type> Technical Report TR-95-22, </type> <institution> Old Dominion University, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: There are two major tasks associated with implementing WF 2 Q+: (a) computing the system virtual time function, and (b) maintaining the set of eligible sessions sorted by virtual finish times. Both can be accomplished with O (log N) complexity <ref> [19] </ref>. The delay and worse-case fairness properties of WF 2 Q+ are given by the following theorem.
Reference: [20] <author> H. Zhang and S. Keshav. </author> <title> Comparison of rate-based service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pages 113-122, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: For most rate-based service disciplines <ref> [20] </ref>, if the server guarantees a delay bound of D i to a leaky bucket constrained session, it also guarantees an SBI of r i D i i to the ses sion [3]. Therefore, bounded service burstiness property and bounded delay property are equivalent for standalone rate-based servers.
References-found: 20

