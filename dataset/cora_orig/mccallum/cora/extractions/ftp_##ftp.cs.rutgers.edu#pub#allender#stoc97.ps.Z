URL: ftp://ftp.cs.rutgers.edu/pub/allender/stoc97.ps.Z
Refering-URL: http://www.cs.rutgers.edu/~allender/publications/
Root-URL: http://www.cs.rutgers.edu
Email: manindra@iitk.ernet.in  allender@cs.rutgers.edu  russell@cs.ucsd.edu  toni@cs.arizona.edu  rudich@cs.cmu.edu  
Title: Reducing the Complexity of Reductions  
Author: Manindra Agrawal Eric Allender Russell Impagliazzo Toniann Pitassi Steven Rudich 
Affiliation: Dept. of Computer Science Indian Institute of Technology  Dept. of Computer Science Rutgers University  Dept. of Computer Science UCSD  Dept. of Computer Science University of Arizona  Dept. of Computer Science Carnegie Mellon University  
Abstract: We prove that the Berman-Hartmanis isomorphism conjecture is true under AC 0 reductions. More generally, we show three theorems that hold for any complexity class C closed under (uniform) TC 0 -computable many-one reductions. Isomorphism: The sets complete for C under AC 0 reductions are all isomorphic under iso-morphisms computable and invertible by AC 0 circuits of depth three. Gap: The sets that are complete for C under AC 0 and NC 0 reducibility coincide. Stop Gap: The sets that are complete for C under AC 0 [mod 2] and AC 0 reducibility do not coincide. (These theorems hold both in the non-uniform and P-uniform settings.) To prove the second theorem for P-uniform settings, we show how to de-randomize a version of the switching lemma, which may be of independent interest. (We have recently learned that this result is originally due to Ajtai and Wigderson, but it has not been published.) 
Abstract-found: 1
Intro-found: 1
Reference: [Ag95] <author> M. Agrawal, DSPACE(n) ? = NSPACE(n): </author> <title> A degree theoretic characterization, </title> <booktitle> in Proc. 10th Structure in Complexity Theory Conference (1995) pp. </booktitle> <address> 315--323. </address>
Reference-contexts: In this regard, note that some non-gap theorems for uniform notions of reducibility were already known. For instance, it is shown in [AA96] that the P-uniformity condition in Theorem 5 cannot be replaced by Dlogtime-uniformity, and it is shown in <ref> [Ag95] </ref> that if DSPACE (n) is not equal to E, then there is a set complete for PSPACE under poly-time reductions but not under logspace reductions.
Reference: [AA96] <author> M. Agrawal and E. Allender, </author> <title> An Isomorphism Theorem for Circuit Complexity, </title> <booktitle> in Proc. 11th Annual IEEE Conference on Computational Complexity (1996) pp. </booktitle> <pages> 2-11. </pages>
Reference-contexts: Gap Theorem: The sets that are complete for C under AC 0 and NC 0 reducibility coincide. Stop Gap Theorem: There is a set that is complete for C under AC 0 [mod 2] reductions, but not under AC 0 reductions. The work in this paper builds on <ref> [AA96] </ref>, where it is shown that the Gap Theorem and a weaker form of the Isomorphism Theorem hold for the particular case of C = NC 1 . 1.1 The Isomorphism Theorem The Berman-Hartmanis conjecture has inspired a great deal of work in complexity theory, and we cannot review all of <p> Our Isomorphism Theorem negates the above intuition in two important special cases. Firstly, it is easy to observe that there are worst-case one-way functions in Dlogtime-uniform NC 0 if there are any one-way functions at all <ref> [AA96] </ref>. Thus, if the worst-case one-way functions are sufficiently easy to compute, the intuition that worst-case one-way functions cause the isomorphism conjecture to fail is incorrect. <p> jf (x)j, jxj 2 jf (x)j); it is C-invertible if there is a function g 2 C such that for all x; f (g (f (x))) = f (x). 3 Main Results 3.1 Superprojections In this section, we show how a more careful application of the main technical contribution of <ref> [AA96] </ref> leads to improved iso-morphism theorems, and isomorphisms computed in depth three. We will need the notion of a "superprojection". <p> This subcircuit will find the n output bits that completely determine what x must be (if such an x exists), and then will check to see if f (x) = y. Theorem 1 <ref> [AA96] </ref> For every proper complexity class C, every set hard for C under NC 0 reductions is hard under one-one, length-squaring superprojections. The following corollaries improve on related corollaries in [AA96]. <p> Theorem 1 <ref> [AA96] </ref> For every proper complexity class C, every set hard for C under NC 0 reductions is hard under one-one, length-squaring superprojections. The following corollaries improve on related corollaries in [AA96]. Corollary 2 For every proper complexity class C, every set hard for C under NC 0 reductions is hard under reductions computable by depth two AC 0 circuits and invertible by depth three AC 0 circuits. Proof. <p> Proof. First note that since a superprojection is an NC 0 reduction, it can be computed in depth two simply by expressing each output bit in DNF or CNF form. By referring to the proof of Theorem 1 in <ref> [AA96] </ref>, the reader will find that if A is hard for C under NC 0 reductions, then it is hard under superprojections f of the form h ffi g where h is a superprojection when restricted to strings in the range of g, and strings in the range of g have <p> In light of theorem 5, it is natural to ask how large a gap in the power of reducibilities is possible. In this regard, note that some non-gap theorems for uniform notions of reducibility were already known. For instance, it is shown in <ref> [AA96] </ref> that the P-uniformity condition in Theorem 5 cannot be replaced by Dlogtime-uniformity, and it is shown in [Ag95] that if DSPACE (n) is not equal to E, then there is a set complete for PSPACE under poly-time reductions but not under logspace reductions. <p> Thus we simply find what the x i would have to be if they map to y, and then do a few consistency checks. At this point the techniques of <ref> [AA96] </ref> can be used to build the isomorphisms.) It is not clear how to extend this observation to handle sets complete under (PARITY of AND) or (AND of PARITY) reductions. 4 Conclusions In closing, let us summarize our results. <p> Berman and Hart-manis conjectured in [BH77] that all sets complete for NP under poly-time many-one reductions are P-isomorphic. Following the lead of <ref> [ABI93, AA96] </ref> we have considered the analogous question, where polynomial-time reductions and isomorphisms are replaced by AC 0 -computable reductions and isomorphisms.
Reference: [Aj83] <author> M. Ajtai, </author> <title> 1 1 formulae on finite structures, </title> <journal> Annals of Pure and Applied Logic 24, </journal> <pages> 1-48. </pages>
Reference-contexts: A similar circuit computes the inverse of the isomorphism. 3.2 The Gap Theorem and The Isomor phism Theorem 3.2.1 Explicit Restrictions of AC 0 reductions It has been a folklore theorem since <ref> [FSS84, Aj83] </ref> that a randomly-chosen restriction of the input variables to an AC 0 circuit family results in an NC 0 family with high probability. (See [Ar95], for example.) For our purposes, it is very useful to know that such a restriction can be constructed quickly deterministically, and that furthermore this
Reference: [Al89] <author> E. Allender, </author> <title> P-uniform circuit complexity, </title> <journal> J. </journal> <note> ACM 36 (1989) 912-928. </note>
Reference-contexts: A family fC n g is uniform if the function n 7! C n is easy to compute in some sense. In this paper, we will consider only Dlogtime-uniformity [BIS90] and P-uniformity <ref> [Al89] </ref> (in addition to non-uniform circuit families).
Reference: [ABI93] <author> E. Allender, N. Immerman, and J. Balcazar, </author> <title> A first-order isomorphism theorem, </title> <note> to appear in SIAM Journal on Computing. A preliminary version appeared in Proc. 10th Symposium on Theoretical Aspects of Computer Science, </note> <year> 1993, </year> <booktitle> Lecture Notes in Computer Science 665, </booktitle> <pages> pp. 163-174. </pages>
Reference-contexts: Also note that, even with this restriction, the NC 0 reductions we consider are still more general than the first-order projections considered in <ref> [ABI93] </ref>. For a complexity class C, a C-isomorphism is a bijection f such that both f and f 1 are in C. Since only many-one reductions are considered in this paper, a "C-reduction" is simply a function in C. <p> Corollary 3 For every proper complexity class C, all sets complete for C under NC 0 reductions are AC 0 -isomorphic. Furthermore, these isomorphisms are computable and invertible by AC 0 circuits of depth three. Proof. This result should be contrasted with the main result of <ref> [ABI93] </ref>, where it is shown that all sets complete under "first-order projections" are isomorphic under Dlogtime-uniform AC 0 isomorphisms. Projections are much more limited than superprojections, in the sense that there are sets that are complete under superprojections but not under projections [ABI93], whereas our Gap Theorem, combined with Theorem 1, <p> should be contrasted with the main result of <ref> [ABI93] </ref>, where it is shown that all sets complete under "first-order projections" are isomorphic under Dlogtime-uniform AC 0 isomorphisms. Projections are much more limited than superprojections, in the sense that there are sets that are complete under superprojections but not under projections [ABI93], whereas our Gap Theorem, combined with Theorem 1, shows that all sets complete under AC 0 reductions are already complete under superprojections. Most of the work in [ABI93] involves showing that things can be done uniformly, and they do not achieve depth k for any constant k. <p> are much more limited than superprojections, in the sense that there are sets that are complete under superprojections but not under projections <ref> [ABI93] </ref>, whereas our Gap Theorem, combined with Theorem 1, shows that all sets complete under AC 0 reductions are already complete under superprojections. Most of the work in [ABI93] involves showing that things can be done uniformly, and they do not achieve depth k for any constant k. On the other hand, although we do provide depth three isomorphisms, we do not acheive Dlogtime-uniformity. Let A and B be complete for C under NC 0 reductions. <p> Berman and Hart-manis conjectured in [BH77] that all sets complete for NP under poly-time many-one reductions are P-isomorphic. Following the lead of <ref> [ABI93, AA96] </ref> we have considered the analogous question, where polynomial-time reductions and isomorphisms are replaced by AC 0 -computable reductions and isomorphisms.
Reference: [AG91] <author> E. Allender and V. Gore, </author> <title> Rudimentary reductions revisited, </title> <note> Information Processing Letters 40 (1991) 89-95. </note>
Reference-contexts: It is worth noting that, with this definition, the class of Dlogtime-uniform AC 0 -computable functions admits many alternative characterizations, including expressibility in first-order with f+; fi; g [Li94, BIS90] the logspace-rudimentary reductions of Jones <ref> [Jo75, AG91] </ref>, logarithmic-time alternating Turing machines with O (1) alternations [BIS90] and others. This lends additional weight to our choice of this definition.
Reference: [AS92] <author> N. Alon and J. Spencer, </author> <title> The Probabilistic Method, </title> <publisher> John Wiley and Sons, </publisher> <year> (1992). </year>
Reference: [Ar95] <author> Sanjeev Arora, </author> <title> AC 0 -reductions cannot prove the PCP theorem, </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: isomorphism. 3.2 The Gap Theorem and The Isomor phism Theorem 3.2.1 Explicit Restrictions of AC 0 reductions It has been a folklore theorem since [FSS84, Aj83] that a randomly-chosen restriction of the input variables to an AC 0 circuit family results in an NC 0 family with high probability. (See <ref> [Ar95] </ref>, for example.) For our purposes, it is very useful to know that such a restriction can be constructed quickly deterministically, and that furthermore this restriction does not set too many adjacent variables. The following lemma makes this precise.
Reference: [BDG88] <author> J. Balcazar, J. Daz, and J. Gabarro, </author> <title> Structural Complexity I and II, </title> <publisher> Springer-Verlag, </publisher> <year> 1988, 1990. </year>
Reference-contexts: does not extend any further since, as we show, there exists a set that is complete for NP under AC 0 [mod 2] reductions but not under AC 0 reductions. 2 Basic Definitions and Preliminaries We assume familiarity with the basic notions of many-one reducibility as presented, for example, in <ref> [BDG88] </ref>. In this paper, only many-one reductions will be considered.
Reference: [BIS90] <author> David Mix Barrington, Neil Immerman, Howard Straubing, </author> <title> On Uniformity Within NC 1 , J. </title> <journal> Com puter Sys. Sci. </journal> <volume> 41 (1990), </volume> <pages> 274-306. </pages>
Reference-contexts: A family fC n g is uniform if the function n 7! C n is easy to compute in some sense. In this paper, we will consider only Dlogtime-uniformity <ref> [BIS90] </ref> and P-uniformity [Al89] (in addition to non-uniform circuit families). <p> It is worth noting that, with this definition, the class of Dlogtime-uniform AC 0 -computable functions admits many alternative characterizations, including expressibility in first-order with f+; fi; g <ref> [Li94, BIS90] </ref> the logspace-rudimentary reductions of Jones [Jo75, AG91], logarithmic-time alternating Turing machines with O (1) alternations [BIS90] and others. This lends additional weight to our choice of this definition. <p> It is worth noting that, with this definition, the class of Dlogtime-uniform AC 0 -computable functions admits many alternative characterizations, including expressibility in first-order with f+; fi; g [Li94, BIS90] the logspace-rudimentary reductions of Jones [Jo75, AG91], logarithmic-time alternating Turing machines with O (1) alternations <ref> [BIS90] </ref> and others. This lends additional weight to our choice of this definition.
Reference: [BH77] <author> L. Berman and J. Hartmanis, </author> <title> On isomorphism and density of NP and other complete sets, </title> <journal> SIAM J. Comput. </journal> <month> 6 </month> <year> (1977) </year> <month> 305-322. </month>
Reference-contexts: was done while visiting the University of Ulm under an Alexander von Humboldt Fellowship. y Supported in part by NSF grant CCR-9509603. z Research Supported by NSF Award CCR-92-570979, Sloan Re search Fellowship BR-3311, and USA-Israel BSF Grant x Research supported by NSF Award CCR-94-57782, and USA Israel BSF Grant <ref> [BH77] </ref>, which states that all sets complete for NP (under polynomial-time many-one reductions) are p-isomorphic; essentially this conjecture states that the complete sets are all merely different encodings of the same set. (Two sets A and B are considered p-isomorphic if there is a bijection on fl mapping A onto B <p> Our goal is to construct an isomorphism mapping A onto B. We first construct a depth four isomorphism between A and B, and then improve it to depth three. As in most other work constructing isomorphisms (see <ref> [BH77] </ref> for example), given an input x, we will need to compute the length of the "ancestor chain" of x, and output f (x) if the length of the chain is even, and output g 1 (x) if the length of the chain is odd. <p> Berman and Hart-manis conjectured in <ref> [BH77] </ref> that all sets complete for NP under poly-time many-one reductions are P-isomorphic. Following the lead of [ABI93, AA96] we have considered the analogous question, where polynomial-time reductions and isomorphisms are replaced by AC 0 -computable reductions and isomorphisms.
Reference: [FSS84] <author> Merrick Furst, James Saxe, and Michael Sipser, </author> <title> Parity, Circuits, and the Polynomial-Time Hierar chy, Math. </title> <booktitle> Systems Theory 17 (1984), </booktitle> <pages> 13-27. </pages>
Reference-contexts: A similar circuit computes the inverse of the isomorphism. 3.2 The Gap Theorem and The Isomor phism Theorem 3.2.1 Explicit Restrictions of AC 0 reductions It has been a folklore theorem since <ref> [FSS84, Aj83] </ref> that a randomly-chosen restriction of the input variables to an AC 0 circuit family results in an NC 0 family with high probability. (See [Ar95], for example.) For our purposes, it is very useful to know that such a restriction can be constructed quickly deterministically, and that furthermore this
Reference: [H-a87] <author> J. H-astad, </author> <note> One-Way Permutations in NC 0 , Infor mation Processing Letters 26 (1987), 153-155. </note>
Reference-contexts: Note that for any NC 0 circuit family, there is some constant c such that each output bit depends on at most c different input bits. The class of functions in NC 0 was considered previously in <ref> [H-a87] </ref>. For technical reasons and for simplicity of exposition, we do not allow an NC 0 circuit C n to produce outputs of different lengths for different inputs of length n, although we do allow AC 0 and NC 1 circuits to do this by following the convention mentioned above.
Reference: [HILL90] <author> J. H-astad, R. Impagliazzo, L. Levin, and M. Luby, </author> <title> Construction of a pseudo-random generator from any one-way function, </title> <type> ICSI Technical Report, </type> <institution> No. </institution> <month> 91-068 </month> <year> (1990). </year>
Reference-contexts: Advances in the theoretical foundations of cryptography have shown that average case one-way functions can be used to construct "pseudo-random" functions that are computable in polynomial-time <ref> [HILL90] </ref>. Intuitively, if f is a 1-1 polynomial time, random-like function, f (SAT) is NP-complete, but has no apparent structure to facilitate the construction of an isomorphism to SAT. Kurtz, Mahaney, and Royer [KMR95] are able to make this intuition technically precise in the random oracle setting.
Reference: [Jo75] <author> Neil Jones, </author> <title> Space-Bounded Reducibility among Combinatorial Problems, </title> <journal> J. Computer Sys. Sci. </journal> <volume> 11 (1975), </volume> <pages> 68-85. </pages>
Reference-contexts: It is worth noting that, with this definition, the class of Dlogtime-uniform AC 0 -computable functions admits many alternative characterizations, including expressibility in first-order with f+; fi; g [Li94, BIS90] the logspace-rudimentary reductions of Jones <ref> [Jo75, AG91] </ref>, logarithmic-time alternating Turing machines with O (1) alternations [BIS90] and others. This lends additional weight to our choice of this definition.
Reference: [JY85] <author> D. Joseph and P. Young, </author> <title> Some remarks on witness functions for non-polynomial and non-complete sets in NP, </title> <note> Theoretical Computer Science 39 (1985) 225-237. </note>
Reference-contexts: We do want to call attention to two general trends this work has taken, regarding (1) one-way functions, and (2) more restrictive reducibilities. One-way functions (in the worst case sense) are functions that can be computed in polynomial-time, but whose inverse functions are not polynomial-time computable. Beginning with <ref> [JY85] </ref> (see also [KMR95, Se92, KLD86], among others) many authors have noticed that if worst case one-way functions exist, then the Berman-Hartmanis conjecture might not be true.
Reference: [J72] <author> J. Justesen, </author> <title> A class of constructive asymptotically good algebraic codes, </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> 18 (1972), </volume> <pages> 652-656. </pages>
Reference-contexts: I.e., for any two distinct n-bit strings x and y, f (x) and f (y) differ in at least a constant fraction ffi of positions. Justesen <ref> [J72] </ref>, provides a particular construction of such an f (for some ffi &gt; 0) that is also very easy to compute. Each output bit of f (x) is simply the parity of some input bits of x, and hence the Justesen code f is computable in AC 0 [mod 2].
Reference: [KLD86] <author> Ker-I Ko, Timothy J. </author> <title> Long, and Ding-Zhu Du, On one-way functions and polynomial-time isomor-phisms, </title> <note> Theoretical Computer Science 47 (1986) 263-276. </note>
Reference-contexts: One-way functions (in the worst case sense) are functions that can be computed in polynomial-time, but whose inverse functions are not polynomial-time computable. Beginning with [JY85] (see also <ref> [KMR95, Se92, KLD86] </ref>, among others) many authors have noticed that if worst case one-way functions exist, then the Berman-Hartmanis conjecture might not be true.
Reference: [KMR90] <author> S. Kurtz, S. Mahaney, and J. Royer, </author> <title> The structure of complete degrees, </title> <editor> in A. Selman, editor, </editor> <title> Complexity Theory Retrospective, </title> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 108-146. </pages>
Reference-contexts: For an excellent survey, see <ref> [KMR90] </ref>. We do want to call attention to two general trends this work has taken, regarding (1) one-way functions, and (2) more restrictive reducibilities. One-way functions (in the worst case sense) are functions that can be computed in polynomial-time, but whose inverse functions are not polynomial-time computable.
Reference: [KMR95] <author> S. Kurtz, S. Mahaney, and J. Royer, </author> <title> The isomor-phism conjecture fails relative to a random oracle, </title> <editor> J. </editor> <booktitle> ACM 42 (1995), </booktitle> <pages> 401-420. </pages>
Reference-contexts: One-way functions (in the worst case sense) are functions that can be computed in polynomial-time, but whose inverse functions are not polynomial-time computable. Beginning with [JY85] (see also <ref> [KMR95, Se92, KLD86] </ref>, among others) many authors have noticed that if worst case one-way functions exist, then the Berman-Hartmanis conjecture might not be true. <p> Intuitively, if f is a 1-1 polynomial time, random-like function, f (SAT) is NP-complete, but has no apparent structure to facilitate the construction of an isomorphism to SAT. Kurtz, Mahaney, and Royer <ref> [KMR95] </ref> are able to make this intuition technically precise in the random oracle setting. They show that when f is a truly random function, f (SAT) is not isomorphic to SAT even when f is given as an oracle.
Reference: [Li94] <author> Steven Lindell, </author> <title> How to define exponentiation from addition and multiplication in first-order logic on finite structures, </title> <type> (manuscript). </type> <note> This improves an earlier characterization that appears in: </note> <author> Steven Lin-dell, </author> <title> A purely logical characterization of circuit uniformity, </title> <booktitle> Proc. 7th Structure in Complexity Theory Conference (1992) pp. </booktitle> <pages> 185-192. </pages>
Reference-contexts: It is worth noting that, with this definition, the class of Dlogtime-uniform AC 0 -computable functions admits many alternative characterizations, including expressibility in first-order with f+; fi; g <ref> [Li94, BIS90] </ref> the logspace-rudimentary reductions of Jones [Jo75, AG91], logarithmic-time alternating Turing machines with O (1) alternations [BIS90] and others. This lends additional weight to our choice of this definition.
Reference: [Ni92] <author> Noam Nisan, </author> <title> Using Hard Problems to Create Pseu dorandom Generators, </title> <publisher> MIT Press (1992). </publisher>
Reference-contexts: But it is known that there are functions computable in AC 0 that are average-case hard to compute for AC 0 circuits of depth three, and that this allows one to produce output that appears pseudorandom to AC 0 circuits of depth three <ref> [Ni92] </ref>. Using these tools, one can construct one-one functions f , many of whose output bits look random to depth three circuits.
Reference: [Se92] <author> A. Selman, </author> <title> A survey of one way functions in complexity theory, </title> <note> Mathematical Systems Theory 25 (1992) 203-221. </note>
Reference-contexts: One-way functions (in the worst case sense) are functions that can be computed in polynomial-time, but whose inverse functions are not polynomial-time computable. Beginning with [JY85] (see also <ref> [KMR95, Se92, KLD86] </ref>, among others) many authors have noticed that if worst case one-way functions exist, then the Berman-Hartmanis conjecture might not be true.
References-found: 23

