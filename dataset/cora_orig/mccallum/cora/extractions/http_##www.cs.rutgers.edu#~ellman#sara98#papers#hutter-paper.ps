URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/hutter-paper.ps
Refering-URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/
Root-URL: http://www.cs.rutgers.edu
Email: hutter@dfki.de  
Title: Structuring Deduction by Using Abstractions  
Author: Dieter Hutter 
Address: Stuhlsatzenhausweg 3, D-66123 Saarbrucken, Germany  
Affiliation: German Research Center for Artificial Intelligence (DFKI GmbH)  
Abstract: During the last decade a variety of industrial strength formal methods has emerged and has been applied to industrial test cases to demonstrate their adequacy and scalability. Formal techniques require a sufficient tool support especially when dealing with proof obligations. The size and the complexity of the arising problems demand for techniques to structure the deduction. In this paper we present techniques to realize a general divide-and-conquer approach in the framework of proof planning. In order to tackle different subgoals by different proof methods we propose the use of the color-calculus as an underlying constraint mechanism to resolve possible threats. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S.Autexier, D. Hutter: </author> <title> Parameterized Abstractions used for Proof Planning Research Report RR 97-04, </title> <institution> DFKI GmbH, Saarbrucken, </institution> <year> 1997 </year>
Reference-contexts: Consider our example: if we commit ourselves to the top-level as target position for wave-fronts we have to ripple out all wave-fronts in the first term while the second term already meets the constraints of the abstract solution. 4.2 Paths to Common Parts of the Skeleton The next abstraction <ref> [1] </ref> suggests to equalize the paths in both terms from the top-level to a specific part of the skeleton. In case of success the symbols on this path will be added to the skeleton in the next step. <p> In the latter category for example, SAM's lemma [3] is fully automatically proven by the system in less than a second. Also problems from the ternary Boolean algebra [10] can be solved by our approach using a path-abstraction <ref> [1] </ref>. More details about the abstractions used for our approach can be found in [1, 5, 7]. <p> Also problems from the ternary Boolean algebra [10] can be solved by our approach using a path-abstraction [1]. More details about the abstractions used for our approach can be found in <ref> [1, 5, 7] </ref>.
Reference: [2] <author> Bundy, A., Stevens, A., V. Harmelen, F., Ireland, A., and Smaill, A. Rippling: </author> <title> a heuristic for guiding inductive proofs. </title> <journal> Journal of Artificial Intelligence, </journal> <volume> No. 62, </volume> <year> 1993 </year>
Reference-contexts: All these tactics operate on a common representation of the actual proof state which is reflected in a proof tree annotated by additional tactical knowledge. Tactics may prune or refine this proof tree and represent the algorithmic part of the proof search. Proof planning <ref> [2] </ref> was proposed to combine tactics in a very flexible way by reasoning about their pre-and postconditions. Using these declarative specifications of tactics we are able to compose dynamically complex proof procedures. However, proof planning suffers from the fact that in practice tactics are highly underspecified. <p> Thus, we will denote the annotated term g red (h ign (a blue ; b ign ); k ign (c green )) by the shaded term g (h ((a); b); k (c)). 4.1 Wave-front Positions Rippling <ref> [2, 8] </ref> was introduced as a basic mechanism to maintain the similarities of terms during the proof and to focus the interest of the prover to specific parts of the theorem. Rippling also denotes a kind of abstraction which allows one to formulate abstract goals.
Reference: [3] <author> J. Guard, and F. Oglesby, and J. Bennett, and L. </author> <title> Settle. </title> <journal> Semi-automated mathematics. Journal of the ACM, pp. </journal> <volume> 49-62, Vol. 16, </volume> <year> 1969 </year>
Reference-contexts: We have implemented and successfully tested our method to both, examples arising from industrial case studies in verification and standard academic examples, like for instance in lattice ordered groups given in the TPTP problem library. In the latter category for example, SAM's lemma <ref> [3] </ref> is fully automatically proven by the system in less than a second. Also problems from the ternary Boolean algebra [10] can be solved by our approach using a path-abstraction [1]. More details about the abstractions used for our approach can be found in [1, 5, 7].
Reference: [4] <author> F. Giunchiglia, T. Walsh. </author> <title> A Theory of Abstraction. </title> <journal> Journal of Artificial Intelligence, </journal> <pages> 56(2-3), pp. 323-390, </pages> <year> 1992. </year>
Reference-contexts: Thus, declaring parts of a term to be parts of the skeleton prevents them from being modified and also structures the problem as it imposes relations between subterms of q and r. 4 Abstractions We propose the use of abstractions in order to guide the proof search. Following <ref> [4] </ref> an abstraction is a pair of formal systems h 1 ; 2 i with languages fl 1 and fl 2 and a total function f fl : fl 1 ! fl 2 .
Reference: [5] <author> D. </author> <title> Hutter Using Rippling for Equational Reasoning 20th KI-96, </title> <editor> Ed. S. Holldobler, </editor> <publisher> Springer, LNAI 1137, </publisher> <address> Dresden, Germany, </address> <year> 1996 </year>
Reference-contexts: Also problems from the ternary Boolean algebra [10] can be solved by our approach using a path-abstraction [1]. More details about the abstractions used for our approach can be found in <ref> [1, 5, 7] </ref>.
Reference: [6] <author> D. Hutter, B. Langenstein, C. Sengler, J. Siekmann, W. Stephan, A. Wolpers: </author> <title> Verification Support Environment (VSE) Journal of High Integrity Systems, </title> <journal> Oxford University Press, </journal> <volume> Vol. 1, No. 6, </volume> <pages> pp. 523-530, </pages> <year> 1996 </year>
Reference-contexts: 1 Introduction The application of formal methods in an industrial setting (cf. <ref> [6] </ref>) results in an increased complexity of the specification and the correspondent verification.
Reference: [7] <author> D. </author> <title> Hutter Hierarchical Proof Planning Using Abstractions 10th FLAIRS'97, </title> <address> Daytona Beach, Florida, </address> <year> 1997 </year>
Reference-contexts: Also problems from the ternary Boolean algebra [10] can be solved by our approach using a path-abstraction [1]. More details about the abstractions used for our approach can be found in <ref> [1, 5, 7] </ref>.
Reference: [8] <author> D. Hutter: </author> <title> Colouring Terms to control equational reasoning Journal of Automated Reasoning, </title> <journal> Kluwer-Publishers, </journal> <volume> Vol. 18, </volume> <pages> pp. 399-442, </pages> <year> 1997 </year>
Reference-contexts: Within this framework tactics are able to communicate their achievements to following tactics and the progress of the proof is represented by a syntactical representation of differences between the actual state and possible goal states. 2 Annotated Formulas Annotated formulas <ref> [8] </ref> are formulas in which each occurrence of a symbol is attached by additional (strategic) information encoded into a color c which is either a color variable (like, ff; fi; : : :) or a color constant (like red; blue; : : :). <p> Thus, we will denote the annotated term g red (h ign (a blue ; b ign ); k ign (c green )) by the shaded term g (h ((a); b); k (c)). 4.1 Wave-front Positions Rippling <ref> [2, 8] </ref> was introduced as a basic mechanism to maintain the similarities of terms during the proof and to focus the interest of the prover to specific parts of the theorem. Rippling also denotes a kind of abstraction which allows one to formulate abstract goals.
Reference: [9] <author> J.B. Kruskal: </author> <title> Well-quasi-ordering, the tree theorem, and Vazsonyi's conjecture. </title> <journal> Trans. Amer. Math. Soc. </journal> <volume> 95, </volume> <pages> pp. 210-255, </pages> <month> May </month> <year> 1960 </year>
Reference-contexts: r i+1 to be skeleton embedding if for each q 0 = r 0 2 skel DR (q i = r i ) there is some q 00 = r 00 2 skel DR (q i+1 = r i+1 ) such that q 0 = r 0 is homomorphic embedded <ref> [9] </ref> in q 00 = r 00 . Since rewrite steps do not alter the skeleton they are trivially skeleton embedding. This approach gives us a general framework to implement proof procedures which are based on syntactical differences.
Reference: [10] <author> E.L. Lusk, W.M. McCune. </author> <title> Uniform Strategies: The CADE-11 Theorem Proving Contest. </title> <journal> Journal of Automated Reasoning, </journal> <volume> Vol. 11, </volume> <pages> pp. 317-331, </pages> <year> 1993 </year>
Reference-contexts: In the latter category for example, SAM's lemma [3] is fully automatically proven by the system in less than a second. Also problems from the ternary Boolean algebra <ref> [10] </ref> can be solved by our approach using a path-abstraction [1]. More details about the abstractions used for our approach can be found in [1, 5, 7].
References-found: 10

