URL: http://l2r.cs.uiuc.edu/~danr/Other-papers/People/Kakas/kakas-ilp97.ps.gz
Refering-URL: http://L2R.cs.uiuc.edu/~danr/Teaching/CS491-98/
Root-URL: http://www.cs.uiuc.edu
Email: antonis@turing.cs.ucy.ac.cy  friguzzi@deis.unibo.it  
Title: Learning with Abduction  
Author: A.C. Kakas F. Riguzzi 
Address: 75 Kallipoleos str., CY-1678 Nicosia, Cyprus  Viale Risorgimento 2, 40136 Bologna, Italy  
Affiliation: Department of Computer Science, University of Cyprus  DEIS, Universita di Bologna  
Abstract: We investigate how abduction and induction can be integrated into a common learning framework through the notion of Abductive Concept Learning (ACL). ACL is an extension of Inductive Logic Programming (ILP) to the case in which both the background and the target theory are abductive logic programs and where an abductive notion of entailment is used as the coverage relation. In this framework, it is then possible to learn with incomplete information about the examples by exploiting the hypothetical reasoning of abduction. The paper presents the basic framework of ACL with its main characteristics and illustrates its potential in addressing several problems in ILP such as learning with incomplete information and multiple predicate learning. An algorithm for ACL is developed by suitably extending the top-down ILP method for concept learning and integrating this with an abductive proof procedure for Abductive Logic Programming (ALP). A prototype system has been developed and applied to learning problems with incomplete information. The particular role of integrity constraints in ACL is investigated showing ACL as a hybrid learning framework that integrates the explanatory (discriminant) and descriptive (characteristic) settings of ILP.
Abstract-found: 1
Intro-found: 1
Reference: [AD94] <author> H. Ade and M. Denecker. RUTH: </author> <title> An ILP Theory Revision System. </title> <booktitle> In Proceedings ISMIS94, </booktitle> <year> 1994. </year>
Reference-contexts: 1 Introduction The problem of integrating abduction and induction in Machine Learning systems has recently received renewed attention with several works on this topic <ref> [DK96, AD95, AD94, Coh95, ?] </ref>. In [DK96] the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) [KKT93]. <p> We have also illustrated the potential ACL as a hybrid framework that can integrate together discriminant and characteristic learning and corresponding ILP systems. Abduction has been incorporated in many learning systems (see e.g. <ref> [DK96, AD95, AD94, Coh95, ?] </ref>) but in most cases this is seen as a useful mechanism that can support some of the activities of the learning systems.
Reference: [AD95] <author> H. Ade and M. Denecker. AILP: </author> <title> Abductive Inductive Logic Programming. </title> <booktitle> In Proceedings IJCAI95, </booktitle> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of integrating abduction and induction in Machine Learning systems has recently received renewed attention with several works on this topic <ref> [DK96, AD95, AD94, Coh95, ?] </ref>. In [DK96] the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) [KKT93]. <p> We have also illustrated the potential ACL as a hybrid framework that can integrate together discriminant and characteristic learning and corresponding ILP systems. Abduction has been incorporated in many learning systems (see e.g. <ref> [DK96, AD95, AD94, Coh95, ?] </ref>) but in most cases this is seen as a useful mechanism that can support some of the activities of the learning systems.
Reference: [BDR96] <author> H. Blockeel and L. De Raedt. </author> <title> Inductive database design. </title> <booktitle> In Proceedings of the 10th International Symposium on Methodologies for Intelligent Systems, volume 1079 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 376-385. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: This experiment illustrates the potential of ACL to integrate characteristic with discrimi nant induction. 5.2 Learning Family Relations We have considered the problem of learning family predicates, e.g. that of father, from a database of family relations <ref> [BDR96] </ref> containing facts about parent, male and female.
Reference: [Coh95] <author> W.W. Cohen. </author> <title> Abductive Explanation-based Learning: A solution to the Multiple Inconsistent Explanation Problem. </title> <journal> Machine Learning, </journal> <volume> 8 </volume> <pages> 167-219, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction The problem of integrating abduction and induction in Machine Learning systems has recently received renewed attention with several works on this topic <ref> [DK96, AD95, AD94, Coh95, ?] </ref>. In [DK96] the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) [KKT93]. <p> We have also illustrated the potential ACL as a hybrid framework that can integrate together discriminant and characteristic learning and corresponding ILP systems. Abduction has been incorporated in many learning systems (see e.g. <ref> [DK96, AD95, AD94, Coh95, ?] </ref>) but in most cases this is seen as a useful mechanism that can support some of the activities of the learning systems.
Reference: [DDK96] <author> Y. Dimopoulos, S. Dzeroski, and A.C. Kakas. </author> <title> Integrating explanatory and descriptive learning in ilp. </title> <type> Technical Report TR-96-16, </type> <institution> University of Cyprus, Computer Science Department, </institution> <year> 1996. </year>
Reference-contexts: Our work builds on earlier work in [DK96] and [ELM + 96, LMMR97] for learning simpler forms of abductive theories. Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in <ref> [DDK96] </ref>. Recently, there have been several other proposals for learning with incomplete information. The FOIL-I system [IKI + 96] learns from incomplete information in the training examples set but not in the background knowledge, with a particular emphasis on learning recursive predicates.
Reference: [DK96] <author> Y. Dimopoulos and A. Kakas. </author> <title> Abduction and Learning. </title> <booktitle> In Advances in Inductive Logic Programming. </booktitle> <publisher> IOS Press, </publisher> <year> 1996. </year>
Reference-contexts: 1 Introduction The problem of integrating abduction and induction in Machine Learning systems has recently received renewed attention with several works on this topic <ref> [DK96, AD95, AD94, Coh95, ?] </ref>. In [DK96] the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) [KKT93]. <p> 1 Introduction The problem of integrating abduction and induction in Machine Learning systems has recently received renewed attention with several works on this topic [DK96, AD95, AD94, Coh95, ?]. In <ref> [DK96] </ref> the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) [KKT93]. <p> We have also illustrated the potential ACL as a hybrid framework that can integrate together discriminant and characteristic learning and corresponding ILP systems. Abduction has been incorporated in many learning systems (see e.g. <ref> [DK96, AD95, AD94, Coh95, ?] </ref>) but in most cases this is seen as a useful mechanism that can support some of the activities of the learning systems. <p> Also recently, the deeper relationship between 19 abduction and induction has been the topic of study of an ECAI96 workshop [MRFK96]. Our work builds on earlier work in <ref> [DK96] </ref> and [ELM + 96, LMMR97] for learning simpler forms of abductive theories. Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in [DDK96]. Recently, there have been several other proposals for learning with incomplete information.
Reference: [dV89] <author> W. Van de Velde. </author> <title> Idl, or taming the multiplexer problem. </title> <editor> In Morik K., editor, </editor> <booktitle> Proceedings of the 4th European Working Session on Learning. </booktitle> <publisher> Pittman, </publisher> <year> 1989. </year>
Reference-contexts: We will consider the well-known mul tiplexer example and problems of learning family relations from an incomplete database. 5.1 Multiplexer The multiplexer example is a well-known benchmark for inductive systems <ref> [dV89] </ref>. It has recently been used in [RD96] for showing the performance of the system ICL-Sat on incomplete data. We perform experiments on the same data of [RD96] and compare the results of I-ACL with those of ICL-Sat.
Reference: [ELM + 96] <author> F. Esposito, E. Lamma, D. Malerba, P. Mello, M.Milano, F. Riguzzi, and G. Semeraro. </author> <title> Learning Abductive Logic Programs. </title> <booktitle> In Proceedings of the ECAI96 Workshop on Abductive and Inductive Reasoning, </booktitle> <year> 1996. </year>
Reference-contexts: It incorporates (and adapts) algorithms for abductive reasoning from ALP [KM90] extending the algorithm in <ref> [ELM + 96] </ref>. The top level covering and specialization loops of the algorithm are shown in (figure 1) and (figure 2) respectively. The covering loop starts with empty hypothesis and, at each iteration, a new clause is added to the hypothesis. <p> Also recently, the deeper relationship between 19 abduction and induction has been the topic of study of an ECAI96 workshop [MRFK96]. Our work builds on earlier work in [DK96] and <ref> [ELM + 96, LMMR97] </ref> for learning simpler forms of abductive theories. Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in [DDK96]. Recently, there have been several other proposals for learning with incomplete information.
Reference: [IKI + 96] <author> N. Inuzuka, M. Kamo, N. Ishii, H. Seki, and H. Itoh. </author> <title> Top-down induction of logic programs from incomplete samples. </title> <editor> In S. Muggleton, editor, </editor> <booktitle> Proceedings of the 6th International Workshop on Inductive Logic Programming, </booktitle> <pages> pages 119-136. </pages> <institution> Stockholm University, Royal Institute of Technology, </institution> <year> 1996. </year>
Reference-contexts: Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in [DDK96]. Recently, there have been several other proposals for learning with incomplete information. The FOIL-I system <ref> [IKI + 96] </ref> learns from incomplete information in the training examples set but not in the background knowledge, with a particular emphasis on learning recursive predicates. Similarly to our approach, it performs a beam-search on the space of clause refinements, keeping a set of clauses of different length.
Reference: [KKT93] <author> A.C. Kakas, R.A. Kowalski, and F. Toni. </author> <title> Abductive Logic Programming. </title> <journal> Journal of Logic and Computation, </journal> <volume> 2 </volume> <pages> 719-770, </pages> <year> 1993. </year>
Reference-contexts: In [DK96] the notion of Abductive Concept 1 Learning (ACL) was proposed as a learning framework based on an integra-tion of Inductive Logic Programming (ILP) and Abductive Logic Programming (ALP) <ref> [KKT93] </ref>. Abductive Concept Learning is an extension of (ILP) that allows us to learn abductive logic programs of ALP with abduction playing a central role in the covering relation of the learning problem. <p> For a more detailed presentation of ALP the reader is referred to the survey <ref> [KKT93] </ref> (and its recent update [KKT97]) and references therein. 2 Abductive Logic Programming is an extension of Logic Programming to support abductive reasoning with theories (logic programs) that incompletely describe their problem domain. In ALP this incomplete knowledge is captured (represented) by an abductive theory T .
Reference: [KKT97] <author> A.C. Kakas, R.A. Kowalski, and F. Toni. </author> <title> The role of abduction in logic programming. </title> <editor> In D. et al. Gabbay, editor, </editor> <booktitle> Handbook of Logic in AI and Logic Programming. </booktitle> <year> 1997. </year> <note> to appear. </note>
Reference-contexts: For a more detailed presentation of ALP the reader is referred to the survey [KKT93] (and its recent update <ref> [KKT97] </ref>) and references therein. 2 Abductive Logic Programming is an extension of Logic Programming to support abductive reasoning with theories (logic programs) that incompletely describe their problem domain. In ALP this incomplete knowledge is captured (represented) by an abductive theory T .
Reference: [KM90] <author> A.C. Kakas and P. Mancarella. </author> <title> On the relation between Truth Maintenance and Abduction. </title> <booktitle> In Proceedings of PRICAI90, </booktitle> <year> 1990. </year>
Reference-contexts: The algorithm is based on the generic top-down algorithm (see e.g. [LD94]) suitably adapted to deal with the incompleteness of the abducible predicates and to take into account the integrity constraints in the background theory. It incorporates (and adapts) algorithms for abductive reasoning from ALP <ref> [KM90] </ref> extending the algorithm in [ELM + 96]. The top level covering and specialization loops of the algorithm are shown in (figure 1) and (figure 2) respectively. The covering loop starts with empty hypothesis and, at each iteration, a new clause is added to the hypothesis. <p> The evaluation of a clause is done by considering each positive example e + and negative example e , and by starting and abductive derivation for e + and not e respectively, using the procedure defined in <ref> [KM90] </ref>. This procedure takes as input the goal to be derived, the abductive theory and, if it succeeds, produces as output the set of assumptions abduced during the derivation.
Reference: [KR96] <author> A.C. Kakas and F. Riguzzi. </author> <title> Abductive Concept Learning. </title> <type> Technical Report TR-96-15, </type> <institution> University of Cyprus, Computer Science Department, </institution> <year> 1996. </year>
Reference-contexts: Thus the formal specification problem for this algorithm is that of the intermediate problem I-ACL (see section 3). For more details on these issues the reader is referred to the technical report <ref> [KR96] </ref> on ACL. The algorithm is based on the generic top-down algorithm (see e.g. [LD94]) suitably adapted to deal with the incompleteness of the abducible predicates and to take into account the integrity constraints in the background theory. <p> Further details on these coefficients and the heuristic function can be found in <ref> [KR96] </ref>. We also mention that the integrity constraints given (or learned first) in the background theory are used in several ways during the computation of the final hypothesis. They can affect significantly the coverage numbers of the rules while these are constructed by rendering assumptions impossible. <p> Then if not ab (e ) is the only assumption that is needed to ensure that the negative example e is not covered this example will now not be counted in n A . Again details can be found in <ref> [KR96] </ref>. 4.1 Properties of the Algorithm The algorithm described above is sound but not complete for the intermmediate problem I-ACL. Its soundness is ensured by the soundness of the abductive proof procedure and its extensions developed for the learning algorithm.
Reference: [LD94] <author> N. Lavrac and S. Dzeroski. </author> <title> Inductive Logic Programming: Techniques and Applications. </title> <publisher> Ellis Horwood, </publisher> <year> 1994. </year>
Reference-contexts: Thus the formal specification problem for this algorithm is that of the intermediate problem I-ACL (see section 3). For more details on these issues the reader is referred to the technical report [KR96] on ACL. The algorithm is based on the generic top-down algorithm (see e.g. <ref> [LD94] </ref>) suitably adapted to deal with the incompleteness of the abducible predicates and to take into account the integrity constraints in the background theory. It incorporates (and adapts) algorithms for abductive reasoning from ALP [KM90] extending the algorithm in [ELM + 96]. <p> This heuristic function of a clause is an expected classification accuracy <ref> [LD94] </ref>: A (c) = p (jc) where p (jc) is the probability that an example covered by a clause c is positive.
Reference: [LMMR97] <author> E. Lamma, P. Mello, M. Milano, and F. Riguzzi. </author> <title> Integrating induction and abduction in logic programming. </title> <editor> In P. P. Wang, editor, </editor> <booktitle> Prooceedings of the Third Joint Conference on Information Sciences, </booktitle> <volume> volume 2, </volume> <pages> pages 203-206. </pages> <institution> Duke University, </institution> <year> 1997. </year>
Reference-contexts: Also recently, the deeper relationship between 19 abduction and induction has been the topic of study of an ECAI96 workshop [MRFK96]. Our work builds on earlier work in [DK96] and <ref> [ELM + 96, LMMR97] </ref> for learning simpler forms of abductive theories. Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in [DDK96]. Recently, there have been several other proposals for learning with incomplete information.
Reference: [MRFK96] <author> M.Denecker, L.De Raedt, P. Flach, and A. Kakas, </author> <title> editors. </title> <booktitle> Proceedings of ECAI96 Workshop on Abductive and Inductive Reasoning. </booktitle> <institution> Catholic University of Leuven, </institution> <year> 1996. </year>
Reference-contexts: Also recently, the deeper relationship between 19 abduction and induction has been the topic of study of an ECAI96 workshop <ref> [MRFK96] </ref>. Our work builds on earlier work in [DK96] and [ELM + 96, LMMR97] for learning simpler forms of abductive theories. Finally, the issue of integrating discriminant (or explanatory) and characterizing ILP systems has also been put forward in [DDK96].
Reference: [RB93] <author> L. De Raedt and M. Bruynooghe. </author> <title> A Theory of Clausal Discovery. </title> <booktitle> In Proceedings of IJCAI93, </booktitle> <year> 1993. </year>
Reference-contexts: In order to perform full ACL we must incorporate the learning of integrity constraints to ensure that negative examples are not abductively derivable in the learned theory. One way to address this issue is to integrate into the algorithm a system for characterizing induction, such as Claudien <ref> [RB93] </ref> (or ICL [RL95]) which will take as input together with the background theory and positive (or all) training examples, the abductive assumptions (or fl ) and generate clauses to be used as integrity constraints. 5 Experiments The main purpose of the experiments reported in this section is to demonstrate the
Reference: [RD96] <author> L. De Raedt and L. Dehaspe. </author> <title> Learning from satisfiability. </title> <type> Technical report, </type> <institution> Katholieke Universiteit Leuven, </institution> <year> 1996. </year>
Reference-contexts: We will consider the well-known mul tiplexer example and problems of learning family relations from an incomplete database. 5.1 Multiplexer The multiplexer example is a well-known benchmark for inductive systems [dV89]. It has recently been used in <ref> [RD96] </ref> for showing the performance of the system ICL-Sat on incomplete data. We perform experiments on the same data of [RD96] and compare the results of I-ACL with those of ICL-Sat. <p> It has recently been used in <ref> [RD96] </ref> for showing the performance of the system ICL-Sat on incomplete data. We perform experiments on the same data of [RD96] and compare the results of I-ACL with those of ICL-Sat. <p> We perform three experiments using the same datasets for each one as in <ref> [RD96] </ref>: the first on the complete dataset, the second on an incomplete dataset and the third on the incomplete dataset plus some integrity constraints. <p> In [WD95] the authors propose several frameworks for learning from partial interpretations. A framework that can learn form incomplete information and is closely related to ACL is that of learning from satisfiability <ref> [RD96] </ref>. This framework is more general than ACL as both the examples and the hypotheses can be clausal theories (although it is possible to extend ACL to allow examples which are clausal theories).
Reference: [RL95] <author> L. De Raedt and W. Van Lear. </author> <title> Inductive Constraint Logic. </title> <booktitle> In Proceedings of the 5th International Workshop on Algorithmic Learning Theory, </booktitle> <year> 1995. </year>
Reference-contexts: One way to address this issue is to integrate into the algorithm a system for characterizing induction, such as Claudien [RB93] (or ICL <ref> [RL95] </ref>) which will take as input together with the background theory and positive (or all) training examples, the abductive assumptions (or fl ) and generate clauses to be used as integrity constraints. 5 Experiments The main purpose of the experiments reported in this section is to demonstrate the ability of I-ACL
Reference: [RLD93] <author> L. De Raedt, N. Lavrac, and S. Dzeroski. </author> <title> Multiple Predicate Learning. </title> <booktitle> In Proceedings of the 3rd International Workshop on Inductive Logic Programming, </booktitle> <year> 1993. </year> <month> 21 </month>
Reference-contexts: This approach is similar to the one adopted in the system MPL <ref> [RLD93] </ref> in order to tackle the problem of the order of learning different predicates (and different rules, in the case of mutually recursive predicates). <p> male (Y ); male (Z); f emale (X); f emale (Y ); female (Z)g Therefore, the rules we are looking for are brother (X; Y ) sibling (X; Y ); male (X): sibling (X; Y ) parent (Z; X); parent (Z; Y ): 18 The family database considered, taken from <ref> [RLD93] </ref>, contains 16 facts about brother, 38 about sibling, 22 about parent, 9 about male and 10 about female. The background knowledge was obtained from this database by considering all the facts about male and female and only 50 % of the facts about parent (selected randomly).
Reference: [TM94] <author> C. Thompson and R. Mooney. </author> <title> Inductive learning for abductive diagnosis. </title> <booktitle> In Proc. of AAAI-94, </booktitle> <year> 1994. </year>
Reference-contexts: For example, in multistrategy learning (or theory revision) abduction is identified as one of the basic computational mechanism (revision operator) for the overall learning process. A notable exception is that of <ref> [TM94] </ref> where a simple form of abduction is used in the learning covering relation in the context of a particular application of learning theories for diagnosis. Also recently, the deeper relationship between 19 abduction and induction has been the topic of study of an ECAI96 workshop [MRFK96].
Reference: [WD95] <author> S. Wroble and S. Dzeroski. </author> <title> The ilp description learning problem: Towards a genearl model-leve definition of data mining in ilp. </title> <booktitle> In Proceedings of the Fachgruppentreffen Maschinelles Lernen, </booktitle> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Similarly to our approach, it performs a beam-search on the space of clause refinements, keeping a set of clauses of different length. In <ref> [WD95] </ref> the authors propose several frameworks for learning from partial interpretations. A framework that can learn form incomplete information and is closely related to ACL is that of learning from satisfiability [RD96].
References-found: 22

