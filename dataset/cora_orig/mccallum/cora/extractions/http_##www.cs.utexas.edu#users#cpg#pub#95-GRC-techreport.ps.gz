URL: http://www.cs.utexas.edu/users/cpg/pub/95-GRC-techreport.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/cpg/pub/abs.html
Root-URL: 
Email: cpg@cs.utexas.edu  
Title: A Solution to the Generalized Railroad Crossing Problem in ESTEREL  
Author: Carlos Puchol 
Keyword: ESTEREL, reactive systems, synchronous systems, system verification, systems specification, formal methods.  
Web: http://www.cs.utexas.edu/users/cpg  
Address: Austin, Texas 78712-1188  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract: We present a solution to the Generalized Railroad Crossing benchmark problem based on the ESTEREL programming language. The solution is shown to satisfy the formal statements of the properties that the system requirements specify by using a verification method for safety properties of ESTEREL programs recently developed. The solution and verification presented have been developed within the synchronous system model, i.e. discrete time, global broadcast of events and instantaneous reactions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> AGEL workshop manual version 3.0, </institution> <year> 1989. </year> <note> Produced by ILOG. </note>
Reference-contexts: This search time can be optimized several 10 orders of magnitude by using an efficient language such as C and performing the search in core memory, or using readily available ESTEREL tools such as AGEL <ref> [1] </ref>. The various execution times of the stages described can be more or less improved, however, the theoretical bottleneck lies in the ESTEREL compilation step, since the resulting state space of the system can be, in the worst case, exponential on the size of the program.
Reference: [2] <author> G. Berry and G. Gonthier. </author> <title> The ESTEREL synchronous programming language: design, semantics, </title> <booktitle> implementation. Science of Computer Programming, </booktitle> <volume> 19 </volume> <pages> 87-152, </pages> <year> 1992. </year>
Reference: [3] <author> E.M. Clarke, </author> <title> E.A. Emerson, and A.P. Sistla. Automatic verification of finite state concurrent systems using temporal logic specifications. </title> <journal> ACM TOPLAS, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <year> 1986. </year> <month> 11 </month>
Reference-contexts: This feature is what allows the compiler to be used towards constructing a finite state machine of the program and the property; by exhaustively generating all the reachable states of the program and the model of the properties, the ESTEREL compiler in effect performs model checking <ref> [3] </ref>. The procedure for checking is thus reduced to a linear search of the generated state machine.
Reference: [4] <author> C. Heitmeyer, R.D. Jeffords, and B. Labaw. </author> <title> A benchmark for comparing different approaches for specifying and verifying real-time systems. </title> <booktitle> In Proceedings 10th International Workshop on Real-Time Operating Systems and Software, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 The Generalized Railroad Crossing Problem The Generalized Railroad Crossing (GRC) problem is a benchmark problem that has been recently proposed <ref> [4] </ref> to compare formal methods that exist for specifying, designing and analyzing real-time systems and to better understand their utility in the development of practical systems.
Reference: [5] <author> L.J. Jagadeesan, C. Puchol, and J.E. Von Olnhausen. </author> <title> Verification of safety properties of ESTEREL programs and a telecommunications application. </title>
Reference-contexts: We have mechanically verified the two safety properties using the verification technique and associated tools presented in <ref> [5] </ref>. The solution comprises modeling reasonable behaviors for the gate and the trains; they are run in parallel to the actual implementation of the controller module. This report is organized as follows. <p> This process is fully explained in <ref> [5] </ref> and is as follows: 1. Translation of the properties from temporal logic to ESTEREL. 2. Compilation of the given program in parallel with the ESTEREL model of the properties. 3. Check for satisfaction/violation of the properties over the resulting finite state machine. <p> We refer the reader to [7] for further details on temporal logic safety properties and to <ref> [5] </ref> for the technique and expressions supported by it. 1 Contact by electronic mail to esterel-request@cma.cma.fr. 7 4 Formal Verification of the GRC Solution The problem consists of showing that the system satisfies the following properties, expressed in temporal logic [7]: Safety Property: t 2 [ i i ) g (t)
Reference: [6] <author> L.J. Jagadeesan, C. Puchol, and J.E. Von Olnhausen. </author> <title> A formal approach to reactive systems software: A telecommunications application in ESTEREL. </title> <booktitle> In Workshop on Industrial-strength Formal Specification Techniques, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: We have also performed verification in several problems (see <ref> [6] </ref> for a more detailed description of a real-world application), and it has been found to be highly effective in practice. 5 Discussion We have presented a solution to the Generalized Railroad Crossing within the environment of ESTEREL.
Reference: [7] <author> Z. Manna and A. Pnueli. </author> <title> The Temporal Logic of Reactive and Concurrent Systems, Specification. </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Informally, these formulas stipulate that something bad never happens. More formally, a formula is said to be a safety formula if any sequence violating it contains a prefix all whose infinite extensions violate it as well. In temporal logic <ref> [7] </ref>, a safety formula is an expression of the form 2 p, where 2 is the always operator, which quantifies over all computation states and p is a past formula. <p> We refer the reader to <ref> [7] </ref> for further details on temporal logic safety properties and to [5] for the technique and expressions supported by it. 1 Contact by electronic mail to esterel-request@cma.cma.fr. 7 4 Formal Verification of the GRC Solution The problem consists of showing that the system satisfies the following properties, expressed in temporal logic <p> for further details on temporal logic safety properties and to [5] for the technique and expressions supported by it. 1 Contact by electronic mail to esterel-request@cma.cma.fr. 7 4 Formal Verification of the GRC Solution The problem consists of showing that the system satisfies the following properties, expressed in temporal logic <ref> [7] </ref>: Safety Property: t 2 [ i i ) g (t) = 0. The gate is down if there is any train in the crossing.
Reference: [8] <author> P. Wolper, M.Y. Vardi, and A.P. Sistla. </author> <title> Reasoning about infinite computation paths. </title> <booktitle> In IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 185-194, </pages> <year> 1983. </year>
Reference-contexts: This automata introduces a special ESTEREL signal SAT p which is emitted in exactly those reactions satisfying the formula p. This program is said to model the property. This technique is based on work presented in <ref> [8] </ref>. For practical reasons, the synthetic code emits a signal VIOLATED p in every state that the formula is not satisfied. After compiling the formula with the given program, the checking algorithm consists of searching for a state where VIOLATED p is emitted, returning successfully if no such state exists.
References-found: 8

