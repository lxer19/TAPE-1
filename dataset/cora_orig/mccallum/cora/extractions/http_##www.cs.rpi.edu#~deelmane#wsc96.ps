URL: http://www.cs.rpi.edu/~deelmane/wsc96.ps
Refering-URL: http://www.cs.rpi.edu/~deelmane/papers.html
Root-URL: http://www.cs.rpi.edu
Title: SIMULATING LYME DISEASE USING PARALLEL DISCRETE EVENT SIMULATION  
Author: Ewa Deelman Boleslaw K. Szymanski Thomas Caraco 
Address: Troy, NY 12180  Albany, NY 12222  
Affiliation: Department of Computer Science Rensselaer Polytechnic Institute  Department of Biological Sciences State University of New York at Albany  
Abstract: Lyme Disease affects many people in the northeastern United States. One of the most important mechanisms that sustains the epidemic is the interaction between white-footed mice (Peromyscus leuco-pus) and deer ticks (Ixodes scapularis). When mice move around in their territory they carry diseased ticks to new locations. Our system simulates the different developmental stages of the tick through its active spring/summer period. The system uses the optimistic protocol for Parallel Discrete Event Simulation. In this paper, we present the model of the spread of the disease. We describe how we parallelize the problem, and we sketch a new global virtual time algorithm used in our system. We present performance benefits resulting from a parallel platform. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Barbour, A. and D. Fish. </author> <year> 1993. </year> <title> The biological and social phenomenon of Lyme disease. </title> <booktitle> Science 260 </booktitle> <pages> 1610-1616. </pages>
Reference-contexts: 1 BIOLOGICAL OVERVIEW Lyme Disease is caused by a spirochete (Borrelia burgdorferi) which is most commonly present in ticks <ref> (Barbour and Fish 1993, Miller et al. 1990) </ref>. When an infected tick feeds on an animal or human, the spirochete may be transferred into the host's blood stream, causing an infection.
Reference: <author> Chandy, K. M. and J. Misra. </author> <title> 1979 Distributed Simulation: A Case Study in Design and Verification of Distributed Programs. </title> <journal> IEEE Transactions on Software Engineering, </journal> <note> 5 440-452 Deelman, </note> <author> E., T. Caraco and B. K. Szymanski. </author> <year> 1996. </year> <title> Parallel Discrete Event Simulation of Lyme Disease. </title> <booktitle> In Pacific Symposium on Biocomputing 191-202. </booktitle>
Reference-contexts: There are two major approaches to the problem: conservative <ref> (Chandy and Misra 1979) </ref> and optimistic (Jefferson Objects Message List Tick Information for Ghost List Two-Dimensional Lattice Processed Event List Clock Event Handler each node Event List Message Handler Space Manager 1985).
Reference: <author> Deelman, E. and B. K. Szymanski. </author> <title> 1996 Continuously Monitored Global Virtual Time. </title> <institution> Department of Computer Science Technical Report 96-18, Rens-selaer Polytechnic Institute. </institution>
Reference-contexts: We have chosen to use discrete event simulation (DES), because it lends itself well to individual-based modeling <ref> (Deelman, Caraco, and Szymanski 1996) </ref>. It allows one to model the behavior of an individual through events that comprise the individual's life history. DES is also appropriate because of the temporal and spatial aspects of the physical system.
Reference: <author> Fujimoto, R. M. </author> <year> 1990. </year> <title> Parallel Discrete Event Simulation. </title> <journal> Communications of the ACM 33 </journal> <pages> 31-53. </pages>
Reference-contexts: The implementation is written in C++ to take full advantage LP2 LP3LP0 LP1 of the object-oriented nature of DES. In Parallel Discrete Event Simulation (PDES), the physical system is divided into several physical processes. The behavior of each physical process is simulated by a Logical Process LP <ref> (Fujimoto 1990) </ref>. In general, an LP consists of a state, event queue, and clock. The simulation progresses as events are removed from the queue and are processed. The event causes a state change, and the simulation clock advances.
Reference: <author> Gropp,W., E. Lusk and A. Skjellum. </author> <year> 1994. </year> <title> Using MPI. </title> <publisher> The MIT Press. </publisher>
Reference: <author> Jefferson, D. R. </author> <year> 1985. </year> <title> Virtual Time. </title> <journal> Trans. Prog. </journal>
Reference-contexts: The gvt is the minimum time of all the local virtual times (lvt) of all the LPs and of all the timestamps of the messages in transit <ref> (Jefferson 1985) </ref>. Since there are no events in the system with a time smaller than the gvt, all information that refers to events that happened before the gvt can be removed from memory.
Reference: <author> Lang. and Syst. </author> <month> 7 </month> <pages> 404-425. </pages>
Reference: <author> Miller, G. L., R. B. Craven, R. E. Bailey and T. F.Tsai. </author> <title> 1990 The epidemiology of Lyme disease in the United States 1987-1998. </title> <journal> Laboratory Medicine 21 </journal> <pages> 285-289. </pages>
Reference: <author> Ostfeld, R. S., K. R. Kirsten and O. M.Cepeda. </author> <year> 1996. </year> <title> Temporal and Spatial Dynamics of Ixodes scapu-laris (Acari: Ixodidae) in a Rural Landscape. </title> <journal> Journal of Medical Entomology. </journal> <volume> 33 </volume> <pages> 90-95. </pages>
Reference-contexts: The duration of the simulation is 180 days, starting in the late spring. This time is the most active for the ticks and mice. Mice, during that time, are looking for nesting sites and may carry ticks a considerable distance <ref> (Ostfeld et al. 1996) </ref>. 2 SIMULATION MODEL Our goal is to understand the mouse-tick interaction at the lowest level, so we treat mice as individuals. We have chosen to use discrete event simulation (DES), because it lends itself well to individual-based modeling (Deelman, Caraco, and Szymanski 1996).
Reference: <author> Raynal, M., and Mukesh Singhal. </author> <year> 1996. </year> <title> Logical Time: Capturing Causality in Distributed Systems. </title> <booktitle> IEEE Computer 49. </booktitle>
Reference: <author> Steinman, J. S. </author> <year> 1993. </year> <title> Incremental State Saving in SPEEDES using C++. </title> <booktitle> In Proceedings of the 1993 Winter Simulation Conference. </booktitle> <pages> 687-696. </pages>
Reference-contexts: Therefore, we are using incremental state saving, described by Steinman <ref> (Steinman 1993) </ref>. Each simulation event is augmented with information about the subset of state variables it has changed. When an event is processed, we place it on the processed list.
Reference: <author> Steinman, J. S., C. A. Lee, L. F. Wilson, and D. </author> <note> M. </note>

References-found: 12

