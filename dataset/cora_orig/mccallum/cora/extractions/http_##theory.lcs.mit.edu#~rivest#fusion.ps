URL: http://theory.lcs.mit.edu/~rivest/fusion.ps
Refering-URL: http://theory.lcs.mit.edu/~rivest/publications.html
Root-URL: 
Email: rivest@theory.lcs.mit.edu  
Title: All-Or-Nothing Encryption and The Package Transform  
Author: Ronald L. Rivest 
Address: 545 Technology Square, Cambridge, Mass. 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: We present a new mode of encryption for block ciphers, which we call all-or-nothing encryption. This mode has the interesting defining property that one must decrypt the entire ciphertext before one can determine even one message block. This means that brute-force searches against all-or-nothing encryption are slowed down by a factor equal to the number of blocks in the ciphertext. We give a specific way of implementing all-or-nothing encryption using a "package transform" as a pre-processing step to an ordinary encryption mode. A package transform followed by ordinary codebook encryption also has the interesting property that it is very efficiently implemented in parallel. All-or-nothing encryption can also provide protection against chosen-plaintext and related-message attacks.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Ross Anderson and Eli Biham. </author> <title> Two practical and probably secure block ciphers: BEAR and LION. </title> <editor> In Dieter Gollman, editor, </editor> <booktitle> Fast Software Encryption, </booktitle> <pages> pages 114-120. </pages> <publisher> Springer, </publisher> <year> 1996. </year> <booktitle> (Proceedings Third International Workshop, </booktitle> <address> Feb. 1996, Cambridge, UK). </address>
Reference-contexts: This is "computa tional secret sharing" (see [6]) since the shares are shorter than the message itself. Indeed, one can design all-or-nothing schemes based on Krawczyk's proposals. An entirely different approach is given by Anderson and Biham <ref> [1] </ref>, who design block ciphers (such as BEAR and LION) from scratch that seem to have an "all-or-nothing" property.
Reference: 2. <author> Mihir Bellare and Phillip Rogaway. </author> <title> Optimal asymmetric encryption|how to encrypt with RSA. </title> <booktitle> In EUROCRYPT94, </booktitle> <year> 1994. </year>
Reference-contexts: Indeed, the package transform described here can be viewed as a special case of the "simple embedding scheme" proposed by Bellare and Rogaway <ref> [2] </ref> in their "optimal asymmetric encryption" preprocesing scheme (used before applying RSA encryption): x G (r) jj r H (x G (r)) : Here x is the message to be encrypted (like our message m), r is a randomly chosen quantity (like our key K 0 ), G (r) is a
Reference: 3. <author> Eli Biham. </author> <title> Cryptanalysis of multiple modes of operation. </title> <note> 1995. Pre-Proceedings of ASIACRYPT '94. Submitted to J. Cryptology. </note>
Reference-contexts: In this paper, we assume that the cipher under discussion is a block cipher with fixed-length input/output blocks, although our remarks generalize to other kinds of ciphers. An "encryption mode" is used to extend the encryption function to arbitrary length messages (see, for example, Schneier [9] and Biham <ref> [3] </ref>). In general, the work required to search for an unknown k-bit key to a known block cipher is 2 k in the worst-case, or 2 k1 on the average.
Reference: 4. <author> Matt Blaze, Whitfield Diffie, Ronald L. Rivest, Bruce Schneier, Tsutomu Shi-momura, Eric Thompson, and Michael Wiener. </author> <title> Minimal key lengths for symmetric ciphers to provide adequate commercial security: A report by an ad hoc group of cryptographers and computer scientists, </title> <month> January </month> <year> 1996. </year> <note> Available at http://www.bsa.org. </note>
Reference-contexts: For example, one can argue that a 56-bit DES key is marginal (see Blaze et al. <ref> [4] </ref>). Or, one may be encumbered by export regulations that restrict one to a 40-bit secret key.
Reference: 5. <author> Don Coppersmith, Matthew Franklin, Jacques Patarin, and Michael Reiter. </author> <title> Low-exponent RSA with related messages. </title> <type> Technical Report IBM RC 20318, </type> <institution> IBM T.J. Watson Research Lab, </institution> <month> December 27, </month> <year> 1995. </year> <note> (To appear in Eurocrypt '96). </note>
Reference-contexts: In addition, an all-or-nothing transformation can be useful before RSA encryption, as it prevents various kinds of "related message" or other attacks (e.g. those of Coppersmith et al. <ref> [5] </ref>).
Reference: 6. <author> Hugo Krawczyk. </author> <title> Secret sharing made short. </title> <editor> In Douglas R. Stinson, editor, </editor> <booktitle> Proc. CRYPTO 93, </booktitle> <pages> pages 136-146. </pages> <address> Spring-Verlag, </address> <year> 1993. </year>
Reference-contexts: Decrypting so as to obtain fewer than s 0 pseudo-message blocks yields no information at all about the underlying message. This is "computa tional secret sharing" (see <ref> [6] </ref>) since the shares are shorter than the message itself. Indeed, one can design all-or-nothing schemes based on Krawczyk's proposals. An entirely different approach is given by Anderson and Biham [1], who design block ciphers (such as BEAR and LION) from scratch that seem to have an "all-or-nothing" property.
Reference: 7. <author> Wenbo Mao and Colin Boyd. </author> <title> Classification of cryptographic techniques in authentication protocols. </title> <booktitle> In Proceedings 1994 Workshop on Selected Areas in Cryptography, </booktitle> <month> May </month> <year> 1994. </year> <institution> (Kingston, </institution> <address> Ontario, Canada). </address>
Reference-contexts: The redundancy block could of course also be computed with more conventional keyed hashing techniques. The preceding paragraphs touch upon an important issue: that an encryption mode should provide integrity as well as confidentiality. Mao and Boyd <ref> [7] </ref> make this point well. Bellare and Rogaway prove that their simple embedding scheme provides non-malleability, for example. 6 Conclusion We have presented an encryption mode|the all-or-nothing encryption mode| and a specific means of implementing it using the package transform.
Reference: 8. <author> J.-J. Quisquater, Yvo Desmedt, and Marc Davio. </author> <title> The importance of "good" key scheduling schemes (how to make a secure DES scheme with 48 bit keys). </title> <editor> In H. C. Williams, editor, </editor> <booktitle> Proc. CRYPTO 85, </booktitle> <pages> pages 537-542. </pages> <publisher> Springer, </publisher> <year> 1986. </year> <note> Lecture Notes in Computer Science No. 218. </note>
Reference-contexts: set, so that (for example) a meet-in-the-middle attack is not more efficient than decrypting all the ciphertext blocks.) 5 Discussion A related well-known approach towards getting more security out of fixed number of key bits is to use encryption techniques that have a long "set-up" time (see Quisquater et al. <ref> [8] </ref>, or Schneier's "Blowfish" algorithm [9]). This penalizes the legitimate user whenever he performs a key-change, whereas all-or-nothing encryption incurs a fixed penalty for each block encrypted.
Reference: 9. <author> Bruce Schneier. </author> <title> Applied Cryptography (Second Edition). </title> <publisher> John Wiley & Sons, </publisher> <year> 1996. </year>
Reference-contexts: In this paper, we assume that the cipher under discussion is a block cipher with fixed-length input/output blocks, although our remarks generalize to other kinds of ciphers. An "encryption mode" is used to extend the encryption function to arbitrary length messages (see, for example, Schneier <ref> [9] </ref> and Biham [3]). In general, the work required to search for an unknown k-bit key to a known block cipher is 2 k in the worst-case, or 2 k1 on the average. <p> a meet-in-the-middle attack is not more efficient than decrypting all the ciphertext blocks.) 5 Discussion A related well-known approach towards getting more security out of fixed number of key bits is to use encryption techniques that have a long "set-up" time (see Quisquater et al. [8], or Schneier's "Blowfish" algorithm <ref> [9] </ref>). This penalizes the legitimate user whenever he performs a key-change, whereas all-or-nothing encryption incurs a fixed penalty for each block encrypted.
Reference: 10. <author> C. P. Schnorr and S. Vaudenay. </author> <title> Black box cryptanalysis of hash networks based on multipermutations. </title> <booktitle> In EUROCRYPT94, </booktitle> <year> 1994. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Another approach that may work well is to use a scheme based on an FFT-like arrangement of randomized multipermutations (see Schnorr et al. <ref> [10] </ref>). Or, one can base an approach on secret-sharing schemes. Actually, the package transform can be viewed as a s 0 out of s 0 secret-sharing threshold scheme; each of the s 0 pseudo-message blocks can be viewed as one "share" of the underlying message.
References-found: 10

