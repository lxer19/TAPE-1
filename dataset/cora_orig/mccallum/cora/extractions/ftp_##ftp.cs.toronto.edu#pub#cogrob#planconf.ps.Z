URL: ftp://ftp.cs.toronto.edu/pub/cogrob/planconf.ps.Z
Refering-URL: 
Root-URL: 
Email: email: reiter@ai.toronto.edu  
Title: The Projection Problem in the Situation Calculus: A Soundness  
Author: Raymond Reiter 
Note: and The Canadian Institute for Advanced Research  
Address: Toronto, Canada M5S 1A4  
Affiliation: Department of Computer Science University of Toronto  
Abstract: and Completeness Result, with an Application to Database Abstract We describe a novel application of planning in the situation calculus to formalize the evolution of a database under update transactions. In the resulting theory, query evaluation becomes identical to the temporal projection problem. We next define a class of axioms for which the classical AI planning technique of goal regression provides a sound and complete method for solving the projection problem, hence for querying evolving databases. Finally, we briefly discuss several issues which naturally arise in the settings of databases and planning, namely, proofs by mathematical induction of properties of world states, logic programming implementations of the projection problem, and historical queries.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. </author> <title> Finger. Exploiting Constraints in Design Synthesis. </title> <type> PhD thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1986. </year>
Reference-contexts: Notice also, as remarked in Section 2, these axioms deal with the frame problem. They do not, alas, address the ramification problem (Finger <ref> [1] </ref>), which is to say that the ramifications of any action must be explicitly represented in the successor state axioms.
Reference: [2] <author> M. Gelfond, V. Lifschitz, and A. Rabinov. </author> <title> What are the limitations of the situation calculus? In Working Notes, </title> <booktitle> AAAI Spring Symposium Series on the Logical Formalization of Commonsense Reasoning, </booktitle> <pages> pages 59-69, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction The situation calculus (McCarthy [7]) is enjoying new popularity these days. One reason is that its expressiveness is considerably richer than has been commonly believed (Gelfond, Lifschitz, Rabinov <ref> [2] </ref>). Another is the possibility of precisely characterizing the strengths and limitations of various general theories of actions expressed within its formalism (see [6, 5, 12] for examples). In this paper we propose yet another reason for not giving up too hastily on the situation calculus.
Reference: [3] <author> A. R. Haas. </author> <title> The case for domain-specific frame axioms. </title> <editor> In F. M. Brown, editor, </editor> <booktitle> The frame problem in artificial intelligence. Proceedings of the 1987 workshop, </booktitle> <pages> pages 343-348, </pages> <address> Los Altos, Cali-fornia, 1987. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: The equivalences in these axioms were motivated by Pednault's approach to the frame problem [9], and the appeal to quantification over transactions stems from the explanation closure axioms of Haas <ref> [3] </ref> and Schubert [14]. See (Reiter [10, 12]) for further discussion. Querying a Database Notice that in the above account of database evolution, all updates are virtual; the database is never physically changed.
Reference: [4] <author> S. Hanks and D. McDermott. </author> <title> Default reasoning, nonmonotonic logics, and the frame problem. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 328-333, </pages> <year> 1986. </year>
Reference-contexts: the transaction sequence drop (John; C100); register (M ary; C100) has been `executed', we must determine whether Database j= (9c):enrolled (J ohn; c; do (register (M ary; C100); do (drop (J ohn; C100); S 0 ))): Thus, querying an evolving database is precisely the temporal projection problem in AI planning <ref> [4] </ref>; this motivates the theoretical focus of this paper. 1 In the sequel, lower case roman letters will denote variables.
Reference: [5] <author> V. Lifschitz. </author> <title> Toward a metatheory of action. </title> <editor> In J. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning (KR'91), </booktitle> <pages> pages 376-386, </pages> <address> Los Altos, CA, 1991. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: One reason is that its expressiveness is considerably richer than has been commonly believed (Gelfond, Lifschitz, Rabinov [2]). Another is the possibility of precisely characterizing the strengths and limitations of various general theories of actions expressed within its formalism (see <ref> [6, 5, 12] </ref> for examples). In this paper we propose yet another reason for not giving up too hastily on the situation calculus. Specifically, we propose a novel application of it to the problem of specifying the evolution of a database under update transactions.
Reference: [6] <author> F. Lin and Y. Shoham. </author> <title> Provably correct theories of action. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference-contexts: One reason is that its expressiveness is considerably richer than has been commonly believed (Gelfond, Lifschitz, Rabinov [2]). Another is the possibility of precisely characterizing the strengths and limitations of various general theories of actions expressed within its formalism (see <ref> [6, 5, 12] </ref> for examples). In this paper we propose yet another reason for not giving up too hastily on the situation calculus. Specifically, we propose a novel application of it to the problem of specifying the evolution of a database under update transactions. <p> Notice also, as remarked in Section 2, these axioms deal with the frame problem. They do not, alas, address the ramification problem (Finger [1]), which is to say that the ramifications of any action must be explicitly represented in the successor state axioms. Recent results by Lin and Shoham <ref> [6] </ref> appear to address this problem in our setting. 4 Regression and the Projection Problem "In solving a problem of this sort, the grand thing is to be able to reason backward." Sherlock Holmes, A Study in Scarlet This section describes our formal results for the temporal projection problem in the
Reference: [7] <author> J. McCarthy. </author> <title> Programs with common sense. </title> <editor> In M. Minsky, editor, </editor> <booktitle> Semantic Information Processing, </booktitle> <pages> pages 403-418. </pages> <publisher> The MIT Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1968. </year>
Reference-contexts: 1 Introduction The situation calculus (McCarthy <ref> [7] </ref>) is enjoying new popularity these days. One reason is that its expressiveness is considerably richer than has been commonly believed (Gelfond, Lifschitz, Rabinov [2]).
Reference: [8] <editor> J. Minker, editor. </editor> <booktitle> Foundations of Deductive Databases and Logic Programming. </booktitle> <publisher> Morgan Kauf-mann Publishers, Inc., </publisher> <address> Los Altos, CA, </address> <year> 1988. </year>
Reference-contexts: 11] derives suitable induction axioms for this task, and gives various exam ples of integrity constraints and their proofs. * Logic programming implementation: As it happens, there is a natural translation of the axioms of Section 3 into Prolog clauses, thereby directly complementing the logic programming perspective on databases (Minker <ref> [8] </ref>).
Reference: [9] <author> E.P.D. Pednault. </author> <title> ADL: Exploring the middle ground between STRIPS and the situation calculus. </title> <editor> In R.J. Brachman, H. Levesque, and R. Reiter, editors, </editor> <booktitle> Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning (KR'89), </booktitle> <pages> pages 324-332. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1989. </year>
Reference-contexts: The equivalences in these axioms were motivated by Pednault's approach to the frame problem <ref> [9] </ref>, and the appeal to quantification over transactions stems from the explanation closure axioms of Haas [3] and Schubert [14]. See (Reiter [10, 12]) for further discussion. Querying a Database Notice that in the above account of database evolution, all updates are virtual; the database is never physically changed.
Reference: [10] <author> R. Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991. </year>
Reference-contexts: This motivates the theoretical focus of this paper, which presents a sound and complete regression-style procedure for solving the projection problem in the case of a limited, but sizable class of background axiomatizations. The theoretical results of this paper complement those of (Reiter <ref> [10] </ref>), where a sound and complete plan synthesis procedure is described, based on goal regression. <p> The equivalences in these axioms were motivated by Pednault's approach to the frame problem [9], and the appeal to quantification over transactions stems from the explanation closure axioms of Haas [3] and Schubert [14]. See (Reiter <ref> [10, 12] </ref>) for further discussion. Querying a Database Notice that in the above account of database evolution, all updates are virtual; the database is never physically changed. To query the database resulting from some sequence of transactions, it is necessary to refer to this sequence in the query.
Reference: [11] <author> R. Reiter. </author> <title> Proving properties of states in the situation calculus. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 337-351, </pages> <year> 1993. </year>
Reference-contexts: Using the axioms (2) and (3) for &lt; and , Reiter <ref> [?, 11] </ref> derives suitable induction axioms for this task, and gives various exam ples of integrity constraints and their proofs. * Logic programming implementation: As it happens, there is a natural translation of the axioms of Section 3 into Prolog clauses, thereby directly complementing the logic programming perspective on databases (Minker
Reference: [12] <author> R. Reiter. </author> <title> A simple solution to the frame problem (sometimes). </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Toronto, </institution> <note> in preparation. </note>
Reference-contexts: One reason is that its expressiveness is considerably richer than has been commonly believed (Gelfond, Lifschitz, Rabinov [2]). Another is the possibility of precisely characterizing the strengths and limitations of various general theories of actions expressed within its formalism (see <ref> [6, 5, 12] </ref> for examples). In this paper we propose yet another reason for not giving up too hastily on the situation calculus. Specifically, we propose a novel application of it to the problem of specifying the evolution of a database under update transactions. <p> The theoretical results of this paper complement those of (Reiter [10]), where a sound and complete plan synthesis procedure is described, based on goal regression. Proofs of our results, and further discussion, may be found in (Reiter <ref> [12] </ref>). 2 Formalizing Database Evolution in the Situation Calculus: An Example In this section we describe a novel application of the situation calculus and its relationship to the temporal projection problem in planning. <p> The equivalences in these axioms were motivated by Pednault's approach to the frame problem [9], and the appeal to quantification over transactions stems from the explanation closure axioms of Haas [3] and Schubert [14]. See (Reiter <ref> [10, 12] </ref>) for further discussion. Querying a Database Notice that in the above account of database evolution, all updates are virtual; the database is never physically changed. To query the database resulting from some sequence of transactions, it is necessary to refer to this sequence in the query. <p> The axioms of Section 2 all fit these patterns. Throughout, we assume a sorted second order language L, with sorts for states and for actions. 2 We omit the details of this language, which are described in (Reiter <ref> [12] </ref>). <p> Notation: When G is a formula of L, R 0 [G] = G; Recall that for each function T of sort action, D ap will contain an axiom of the form (8~x; s):P oss (T (~x); s) T (~x; s); Theorem 1 (Reiter <ref> [12] </ref>) Let T 1 ; : : : ; T m be function symbols of sort action. <p> Theorem 2 (Soundness and Completeness (Re-iter <ref> [12] </ref>)) Suppose Q (s) 2 L is simple, and that the state variable s is the only free variable of Q (s). Suppose t 1 ; : : : ; t n is a sequence of ground terms of L of sort action.
Reference: [13] <author> R. Reiter. </author> <title> Formalizing database evolution in the situation calculus. </title> <booktitle> In Proc. Fifth Generation Computer Systems, </booktitle> <pages> pages 600-609, </pages> <address> Tokyo, June 1 - 5, </address> <year> 1992. </year>
Reference-contexts: Prolog clauses: enrolled (st; c; do (a; s)) a = register (st; c); P oss (a; s): enrolled (st; c; do (a; s)) a 6= drop (st; c); enrolled (st; c; s); P oss (a; s): Similar clauses may be proposed for the other axioms of Section 2 (see Reiter <ref> [?, 13] </ref>). <p> be something like: If this plan is executed, would such and such ever be true during the plan execution? (Will block A ever be on block B during the execution of this plan?) Within the framework of this paper, it is possible to develop a theory of such queries (Reiter <ref> [13] </ref>). Acknowledgements Many of my colleagues provided important conceptual and technical advice.
Reference: [14] <author> L.K. Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyberg, R.P. Loui, and G.N. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: The equivalences in these axioms were motivated by Pednault's approach to the frame problem [9], and the appeal to quantification over transactions stems from the explanation closure axioms of Haas [3] and Schubert <ref> [14] </ref>. See (Reiter [10, 12]) for further discussion. Querying a Database Notice that in the above account of database evolution, all updates are virtual; the database is never physically changed.
Reference: [15] <author> R. Waldinger. </author> <title> Achieving several goals simultaneously. </title> <editor> In E. Elcock and D. Michie, editors, </editor> <booktitle> Machine Intelligence 8, </booktitle> <pages> pages 94-136. </pages> <publisher> Ellis Horwood, Edinburgh, </publisher> <address> Scotland, </address> <year> 1977. </year>
Reference-contexts: The use of the regression operator R is a classical plan synthesis technique (Waldinger <ref> [15] </ref>). Regression also corresponds to the operation of unfolding in logic programming.
References-found: 15

