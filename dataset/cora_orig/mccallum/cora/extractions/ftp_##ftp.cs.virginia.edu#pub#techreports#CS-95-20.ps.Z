URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-95-20.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Adaptive algorithms vs. Time Warp: An analytical comparison  
Author: Sudhir Srinivasan Paul F. Reynolds, Jr. 
Abstract: Computer Science Report No. CS-95-20 April 6, 1995 
Abstract-found: 1
Intro-found: 1
Reference: [BaHo90] <author> Ball, D. and Hoyt, S., </author> <title> The adaptive Time-Warp concurrency control algorithm, </title> <booktitle> Proceedings of the SCS Multiconference on Distributed Simulation, </booktitle> <month> January </month> <year> 1990, </year> <pages> 174-177. </pages>
Reference-contexts: In the penalty based throttling scheme of [ReJe89], an LP that has been rolling back excessively is made to block for some period of time. This decision is made independently of other LPs. Similarly, in Adaptive Time Warp <ref> [BaHo90] </ref>, an LP may decide to block after executing an event based on local history and statistical estimation. In [Madi93], LPs estimate each others logical clock values and block if their clock value differs largely from that of another LP.
Reference: [ChMi79] <author> Distributed Simulation: </author> <title> A case study in the design and verification of distributed programs, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-5, No. </volume> <month> 5 (September </month> <year> 1979), </year> <pages> 440-452. </pages>
Reference-contexts: We present a comparison of a general class of adaptive protocols called the asynchronous adaptive waiting protocols (AAWPs) with Time Warp in the vein of the worst-case comparison between the Chandy-Misra protocol <ref> [ChMi79] </ref> and Time Warp in [LiMi90]. We show that it is possible for Time Warp and AAWPs to outperform each other arbitrarily.
Reference: [FeTr94] <author> Ferscha, A. and Tripathi, </author> <title> S.K., Parallel and distributed simulation of discrete event systems, </title> <institution> University of Maryland at College Park Technical Report number CS-TR-3336, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: In [HaTr94], a real-time blocking window is computed each time an LP executes an event and the LP blocks for an amount of time equal to this window (which may be zero). Similarly, in <ref> [FeTr94] </ref>, an LP blocks probabilistically for some amount of time after each event execution. The new class of adaptive protocols we have described in [SrRe94], which we call NPSI adaptive protocols, also satisfy the AAWP assumptions.
Reference: [Fuji90] <author> Fujimoto, </author> <title> R.M., Parallel discrete event simulation, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 33, No. 10, </volume> <month> October </month> <year> 1990, </year> <pages> 30-53. </pages>
Reference-contexts: 1 Introduction Historically, research in synchronization algorithms (protocols) for parallel discrete event simulation (PDES) has followed two tracks: conservative and optimistic <ref> [Fuji90] </ref>. A significant result of this research is that neither approach seems to be universally efficient. As defined in [Reyn88], adaptive protocols are those that modify their behavior dynamically in response to changes in the state of the simulation. <p> Thus, while intuition suggests that adaptive protocols should enhance performance in general, our analysis indicates that they must be designed carefully since incorrect adaptive decisions can lead to arbitrarily worse performance than Time Warp. We assume familiarity with the common approach to PDES <ref> [Fuji90] </ref>, namely the partitioning of a discrete event simulation into components called logical processes (LPs). Each LP is itself a sequential discrete event simulator. The LPs must execute events, whether generated internally or scheduled by other LPs, without violating causality constraints (effectively). Typically, this is the responsibility of a protocol. <p> Finally, we describe a specific NPSI adaptive protocol, ETA, based on this framework and show that ETA can outperform Time Warp by a factor proportional to the amount of logical time simulated. 2 2 Assumptions The reader is referred to <ref> [Fuji90] </ref> for details of Time Warp and related concepts. We assume the following for all protocols in this paper: Each LP is located on its own processor. The protocols employ aggressive cancellation and aggressive rollback.
Reference: [Gima89] <author> Gimarc, </author> <title> R.L., Distributed simulation using hierarchical rollback, </title> <booktitle> Proceedings of the 1989 Winter Simulation Conference, </booktitle> <year> 1989, </year> <pages> 621-629. </pages>
Reference-contexts: Note, global windowing algorithms do not fit the AAWP model since the global window forces all LPs to synchronize before any of them can proceed. Protocols in which optimism is limited based on spatial clustering <ref> [Gima89, RaAT93] </ref> also satisfy our assumptions, since waiting may be required at cluster boundaries where events are exchanged conservatively and the clusters operate asynchronously. 3 Time Warp outperforms AAWPs We show by example that an AAWP can take arbitrarily longer than Time Warp to complete a simulation.
Reference: [HaTr94] <author> Hamnes, D.O. and Tripathi, A., </author> <title> Evaluation of a local adaptive protocol for distributed discrete event simulation, </title> <booktitle> Proceedings of the 1994 International Conference on Parallel Processing, </booktitle> <month> August </month> <year> 1994, </year> <title> Vol. </title> <booktitle> III, </booktitle> <pages> 127-134. </pages>
Reference-contexts: Similarly, in Adaptive Time Warp [BaHo90], an LP may decide to block after executing an event based on local history and statistical estimation. In [Madi93], LPs estimate each others logical clock values and block if their clock value differs largely from that of another LP. In <ref> [HaTr94] </ref>, a real-time blocking window is computed each time an LP executes an event and the LP blocks for an amount of time equal to this window (which may be zero). Similarly, in [FeTr94], an LP blocks probabilistically for some amount of time after each event execution.
Reference: [Jeff85] <author> Jefferson, </author> <title> D.R., Virtual time, </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> Vol. 7, No. 3, </volume> <month> July </month> <year> 1985, </year> <pages> 404-425. </pages>
Reference-contexts: Several adaptive protocols have been proposed and implemented recently, with encouraging results. However, there are no analytical studies comparing the performance of adaptive protocols with that of traditional protocols. While experiments have shown that adaptively optimistic protocols improve on the performance of the purely optimistic Time Warp protocol <ref> [Jeff85] </ref> in general, it is interesting to question whether they can perform worse than Time Warp. <p> However, even if the final execution of E D is not delayed, the advance of GVT * beyond 165 will be delayed by at least the amount of time it takes for the chains to disappear. Since GVT is the commitment horizon for events <ref> [Jeff85] </ref>, the committing of E D can be delayed arbitrarily even with lazy rollback. 3.3 Pragmatic issues We have identified a general class of adaptive protocols, the AAWPs, and shown that it is possible for Time Warp to outperform them by an arbitrary amount. <p> Our studies [SrRe93] have shown that such a network can disseminate critical information to the LPs at latencies * Global virtual time is the minimum of all logical clocks and timestamps of any messages in transit <ref> [Jeff85] </ref>. that are two or three orders of magnitude smaller than typical event execution times (i.e microseconds versus milliseconds). We have designed and implemented NPSI protocols over a prototype reduction network with very encouraging results.
Reference: [LiMi90] <author> Lipton, R.J. and Mizell, D.W., </author> <title> Time Warp vs. Chandy-Misra: A worst-case comparison, </title> <booktitle> Proceedings of the 1990 SCS Multiconference on Distributed Simulation, </booktitle> <month> January </month> <year> 1990, </year> <pages> 137-143. </pages>
Reference-contexts: We present a comparison of a general class of adaptive protocols called the asynchronous adaptive waiting protocols (AAWPs) with Time Warp in the vein of the worst-case comparison between the Chandy-Misra protocol [ChMi79] and Time Warp in <ref> [LiMi90] </ref>. We show that it is possible for Time Warp and AAWPs to outperform each other arbitrarily.
Reference: [LuWS89] <author> Lubachevsky, B., Weiss, A. and Shwartz, A., </author> <title> Rollback sometimes works . . . if filtered, </title> <booktitle> Proceedings of the 1989 Winter Simulation Conference, </booktitle> <month> December </month> <year> 1989, </year> <pages> 630-639. </pages>
Reference-contexts: Since the difference in completion times is not bounded by a Error Potential Event processing and message sending System State 6 constant for a given simulation, the AAWP outperforms Time Warp arbitrarily. 5.1 Physical system The system we consider for simulation was described previously in <ref> [LuWS89] </ref> as an example of echoing in Time Warp. We refer to it as EchoSystem. It consists of three physical processes (PPs), A, B and C with the communication topology shown in Figure 4.
Reference: [LuWS91] <author> Lubachevsky, B., Weiss, A. and Shwartz, A., </author> <title> An analysis of rollback-based simulation, </title> <journal> ACM Transactions on Modeling and Computer Simulation, </journal> <volume> Vol. 1, No. 2, </volume> <month> April </month> <year> 1991, </year> <pages> 154-193. </pages>
Reference-contexts: behind the example is this: on the one hand, it is possible for Time Warp simulations to execute very efficiently, with few rollbacks; on the other hand, it is also possible for a Time Warp simulation to generate many false events and consequent rollbacks which can degrade its performance severely <ref> [LuWS91] </ref>. Errors in adaptive decisions regarding when and how long to wait can cause a Time Warp execution to move from the former category to the latter. <p> However, the case that is relevant to this discussion is the one shown in with the event chain until the latter reaches LP 5 and initiates an unnecessary rollback. This scenario is feasible <ref> [LuWS91] </ref>. ii) The chains by themselves may be harmless - the problem arises from the fact that the final false message that arrives at LP 5 (marked M F in Figure 2) has timestamp 160, which is smaller than 165, the timestamp of the second event at LP 5 (marked E
Reference: [Madi93] <author> Madisetti, V.K., </author> <title> Randomized algorithms for self-synchronization, </title> <type> Private communication, </type> <year> 1993. </year>
Reference-contexts: This decision is made independently of other LPs. Similarly, in Adaptive Time Warp [BaHo90], an LP may decide to block after executing an event based on local history and statistical estimation. In <ref> [Madi93] </ref>, LPs estimate each others logical clock values and block if their clock value differs largely from that of another LP.
Reference: [McAf90] <author> McAffer, J., </author> <title> A unified distributed simulation system, </title> <booktitle> Proceedings of the 1990 Winter Simulation Conference, </booktitle> <year> 1990, </year> <pages> 415-422. </pages>
Reference-contexts: The new class of adaptive protocols we have described in [SrRe94], which we call NPSI adaptive protocols, also satisfy the AAWP assumptions. Windowing algorithms in which the windows are computed individually for different LPs (such as Unified Distributed Simulation system <ref> [McAf90] </ref> and Breathing Time Warp [Stei93]) are AAWPs as well since the LPs wait when they reach the ceilings of their independent windows. Note, global windowing algorithms do not fit the AAWP model since the global window forces all LPs to synchronize before any of them can proceed.
Reference: [NiRe90] <author> Nicol, D.M. and Reynolds, P.F., Jr., </author> <title> Optimal dynamic remapping of parallel computations, </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 39, No. 2, </volume> <month> February </month> <year> 1990. </year>
Reference-contexts: The main hazard of optimistic protocols is that the checkpointing and rollback costs may degrade performance severely. The gap between these two extremes may be bridged either by adding optimism to conservative protocols or by limiting the optimism of purely optimistic protocols. The inherently dynamic nature of simulations <ref> [NiRe90] </ref> suggests that regardless of the approach to combine the conservative and optimistic strategies, the hybrid scheme must also be dynamic. Adaptive protocols are those that change the bindings of one or more of their design variables dynamically [Reyn88].
Reference: [PaRe93] <author> Pancerella, C.M. and Reynolds, P.F., Jr., </author> <title> Disseminating critical target-specific synchronization information in parallel discrete event simulations, </title> <booktitle> Proceedings of the 7th Workshop on Parallel and Distributed Simulation, </booktitle> <month> May </month> <year> 1993, </year> <pages> 52-59. </pages>
Reference-contexts: The adaptive waiting decisions of LPs are based on this NPSI. In practice, such information can be disseminated using a high-speed reduction network <ref> [PaRe93] </ref> at almost no cost to the simulation.
Reference: [RaAT93] <author> Rajaei, H., Ayani, R. and Thorelli, L-E., </author> <title> The Local Time Warp approach to parallel simulation, </title> <booktitle> Proceedings of the 7th Workshop on Parallel and Distributed Simulation, </booktitle> <month> May </month> <year> 1993, </year> <pages> 119-126. </pages>
Reference-contexts: Note, global windowing algorithms do not fit the AAWP model since the global window forces all LPs to synchronize before any of them can proceed. Protocols in which optimism is limited based on spatial clustering <ref> [Gima89, RaAT93] </ref> also satisfy our assumptions, since waiting may be required at cluster boundaries where events are exchanged conservatively and the clusters operate asynchronously. 3 Time Warp outperforms AAWPs We show by example that an AAWP can take arbitrarily longer than Time Warp to complete a simulation.
Reference: [ReJe89] <author> Reiher, P.L. and Jefferson, D., </author> <title> Limitation of optimism in the Time Warp operating system, </title> <booktitle> Proceedings of the 1989 Winter Simulation Conference, </booktitle> <month> December </month> <year> 1989, </year> <pages> 765-770. </pages>
Reference-contexts: Once again, if this were not true, our claim that an AAWP can perform arbitrarily worse than Time Warp can be shown trivially. Several protocols that have been proposed and implemented belong to the class of AAWPs. In the penalty based throttling scheme of <ref> [ReJe89] </ref>, an LP that has been rolling back excessively is made to block for some period of time. This decision is made independently of other LPs. Similarly, in Adaptive Time Warp [BaHo90], an LP may decide to block after executing an event based on local history and statistical estimation.
Reference: [Reyn82] <author> Reynolds, P.F., Jr., </author> <title> A shared resource algorithm for distributed simulation, </title> <booktitle> Proceedings of the 9th Annual Symposium on Computer Architecture, </booktitle> <month> April </month> <year> 1982. </year>
Reference-contexts: The main advantage of conservative protocols is that they do not have any checkpointing and rollback overheads. However, processes may be blocked due to insufficient information when in fact it would be safe for them to proceed. This artificial blocking <ref> [Reyn82] </ref> introduces lost-opportunity cost [SrRe94]. On the other hand, optimistic protocols do not incur lost-opportunity costs since processes never block. The main hazard of optimistic protocols is that the checkpointing and rollback costs may degrade performance severely.
Reference: [Reyn88] <author> Reynolds, P.F., Jr., </author> <title> A spectrum of options for parallel simulation, </title> <booktitle> Proceedings of the 1988 Winter Simulation Conference, </booktitle> <month> December </month> <year> 1988, </year> <pages> 325-332. </pages>
Reference-contexts: 1 Introduction Historically, research in synchronization algorithms (protocols) for parallel discrete event simulation (PDES) has followed two tracks: conservative and optimistic [Fuji90]. A significant result of this research is that neither approach seems to be universally efficient. As defined in <ref> [Reyn88] </ref>, adaptive protocols are those that modify their behavior dynamically in response to changes in the state of the simulation. Several adaptive protocols have been proposed and implemented recently, with encouraging results. However, there are no analytical studies comparing the performance of adaptive protocols with that of traditional protocols. <p> An optimistic algorithm takes the opposite approach in that LPs execute events without the guarantee of safety and repair their execution if and when an error is detected, typically using a checkpoint and rollback approach. In <ref> [Reyn88] </ref>, aggressiveness is defined to be the property by which an LP processes events conditionally (i.e. without a guarantee of safety) and risk is defined as passing messages that are based on aggressive or inaccurate processing. <p> The inherently dynamic nature of simulations [NiRe90] suggests that regardless of the approach to combine the conservative and optimistic strategies, the hybrid scheme must also be dynamic. Adaptive protocols are those that change the bindings of one or more of their design variables dynamically <ref> [Reyn88] </ref>. Adaptive protocols that modify their aggressiveness and risk (collectively called optimism) dynamically seem the most likely to perform well consistently. Henceforth, we will refer to such protocols simply as adaptive protocols.
Reference: [SrRe93] <author> Srinivasan, S. and Reynolds, P.F., Jr., </author> <title> Non-interfering GVT computation via asynchronous global reductions, </title> <booktitle> Proceedings of the 1993 Winter Simulation Conference, </booktitle> <month> December </month> <year> 1993, </year> <note> 740-749 (available by anonymous FTP from ftp.cs.virginia.edu/pub/techreports/CS-93-17.ps.Z). </note>
Reference-contexts: The adaptive waiting decisions of LPs are based on this NPSI. In practice, such information can be disseminated using a high-speed reduction network [PaRe93] at almost no cost to the simulation. Our studies <ref> [SrRe93] </ref> have shown that such a network can disseminate critical information to the LPs at latencies * Global virtual time is the minimum of all logical clocks and timestamps of any messages in transit [Jeff85]. that are two or three orders of magnitude smaller than typical event execution times (i.e microseconds
Reference: [SrRe94] <author> Srinivasan, S. and Reynolds, P.F., Jr., </author> <title> NPSI adaptive synchronization algorithms for PDES, </title> <type> Technical report number CS-94-44, </type> <institution> Department of Computer Science, University of Virginia, </institution> <month> November 8, </month> <note> 1994 (submitted to the 1995 Winter Simulation Conference - available by anonymous FTP from : ftp.cs.virginia.edu/pub/techreports/CS94-44.ps.Z). </note>
Reference-contexts: The main advantage of conservative protocols is that they do not have any checkpointing and rollback overheads. However, processes may be blocked due to insufficient information when in fact it would be safe for them to proceed. This artificial blocking [Reyn82] introduces lost-opportunity cost <ref> [SrRe94] </ref>. On the other hand, optimistic protocols do not incur lost-opportunity costs since processes never block. The main hazard of optimistic protocols is that the checkpointing and rollback costs may degrade performance severely. <p> Adaptive protocols that modify their aggressiveness and risk (collectively called optimism) dynamically seem the most likely to perform well consistently. Henceforth, we will refer to such protocols simply as adaptive protocols. Several protocols have been proposed that either limit optimism in Time Warp or add optimism to conservative protocols <ref> [SrRe94] </ref>. Most of these have been shown to improve the performance of the protocols from which which they are derived. Since all of these results are experimental, it is interesting and important to question whether adaptive protocols can perform worse than traditional protocols. Our analysis shows they can. <p> Similarly, in [FeTr94], an LP blocks probabilistically for some amount of time after each event execution. The new class of adaptive protocols we have described in <ref> [SrRe94] </ref>, which we call NPSI adaptive protocols, also satisfy the AAWP assumptions. <p> Since several practical protocols belong to the AAWP class, this counter-intuitive result suggests that AAWPs must be designed with care. Correspondingly, while we have developed several very effective NPSI adaptive protocols <ref> [SrRe94] </ref>, we have also discovered some that perform no better than Time Warp and some that perform worse. It is possible to modify protocols so as to avoid the scenario described earlier. However, it is not clear whether doing so will be beneficial in the general case. <p> We have designed and implemented NPSI protocols over a prototype reduction network with very encouraging results. A more detailed discussion on the rationale behind NPSI protocols, their design and performance can be found in <ref> [SrRe94] </ref>. <p> If a message is received during a wait period that will cause a rollback, the LP aborts the waiting and proceeds to roll back. Since this algorithm is a variant of the elastic time algorithm (ETA) described in <ref> [SrRe94] </ref>, we will refer to it by the same name. using the protocol described above. The shaded lines represent waiting due to the adaptive protocol. <p> While the simulation for which this phenomenon is observed is somewhat contrived, 1 2 n 9 ETA is not. In <ref> [SrRe94] </ref> we describe an experiment on a four-processor Time Warp implementation using a workload very similar to EchoSystem. The experimental set-up included a prototype high-speed reduction network which was used to provide near-perfect state information to implement ETA.
Reference: [Stei93] <author> Steinman, J.S., </author> <title> Breathing Time Warp, </title> <booktitle> Proceedings of the 7th Workshop on Parallel and Distributed Simulation, </booktitle> <month> May </month> <year> 1993, </year> <pages> 109-118. </pages>
Reference-contexts: The new class of adaptive protocols we have described in [SrRe94], which we call NPSI adaptive protocols, also satisfy the AAWP assumptions. Windowing algorithms in which the windows are computed individually for different LPs (such as Unified Distributed Simulation system [McAf90] and Breathing Time Warp <ref> [Stei93] </ref>) are AAWPs as well since the LPs wait when they reach the ceilings of their independent windows. Note, global windowing algorithms do not fit the AAWP model since the global window forces all LPs to synchronize before any of them can proceed.
References-found: 21

