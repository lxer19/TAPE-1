URL: http://www.cs.purdue.edu/homes/spaf/tech-reps/933.ps
Refering-URL: http://www.cs.purdue.edu/coast/coast-library.html
Root-URL: http://www.cs.purdue.edu
Email: spaf@cs.purdue.edu  
Title: The Internet Worm Incident  
Author: Eugene H. Spafford 
Note: September 19, 1991  
Address: West Lafayette, IN USA 47907-2004  
Affiliation: Department of Computer Sciences Purdue University  
Pubnum: Technical Report CSD-TR-933  
Abstract: On the evening of 2 November 1988, someone ``infected'' the Internet with a worm program. That program exploited flaws in utility programs in systems based on BSD-derived versions of UNIX. The flaws allowed the program to break into those machines and copy itself, thus infecting those systems. This program eventually spread to thousands of machines, and disrupted normal activities and Internet connectivity for many days. This paper explains why this program was a worm (as opposed to a virus), and provides a brief chronology of both the spread and eradication of the program. That is followed by discussion of some specific issues raised by the community's reaction and subsequent discussion of the event. Included are some interesting lessons learned from the incident. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> Participants, </editor> <booktitle> PROCEEDINGS OF THE VIRUS POST-MORTEM MEETING, </booktitle> <institution> National Computer Security Center, Ft. George Meade, MD, </institution> <month> 8 November </month> <year> 1988. </year>
Reference-contexts: Chronology What follows is an abbreviated chronology of events relating to the release of the Internet Worm. Most of this information was gathered from personal mail, submissions to mailing lists, and Usenet post-ings. Some items were taken from [24] and <ref> [1] </ref>, and are marked accordingly. This is certainly not a 333333333333333333 * rexec is a remote command execution service. It requires that a username/password combination be supplied as part of the request. This was compiled in as port number 23357, on host 127.0.0.1 (loopback). <p> That morning, about 50 people from around the country met with officials of the National Computer Security Center at a hastily convened ``post-mortem'' on the Worm. They identify some likely future courses of action. <ref> [1] </ref> Network traffic analyzers continued to record infection attempts from (apparently) Worm programs still running on Internet machines. The last such instance occurred in the early part of December. * 5. <p> Worm Hunters A significant conclusions reached at the NCSC post-mortem workshop was that the reason the Worm was stopped so quickly was due almost solely to the UNIX ``old-boy'' network, and not because of any formal mechanism in place at the time. <ref> [1] </ref> A general recommendation from that workshop was that a formal crisis center be established to deal with future incidents and to provide a formal point of contact for individuals wishing to report problems. No such center was established at that time.
Reference: 2. <author> Staff, ``Uncle Sam's Anti-Virus Corps,'' </author> <title> UNIX TODAY!, </title> <editor> p. </editor> <volume> 10, </volume> <month> Jan 23, </month> <year> 1989. </year>
Reference: 3. <author> Allman, Eric, </author> <title> SendmailAn Internetwork Mail Router, </title> <institution> University of California, Berkeley, </institution> <year> 1983. </year> <title> Issued with the BSD UNIX documentation set. </title>
Reference-contexts: Despite this, the library routines will continue to be used, and as our memory of this incident fades, new flaws may be introduced with their use. 3.2. Sendmail The sendmail program is a mailer designed to route mail in a heterogeneous internetwork. <ref> [3] </ref> The program operates in several modes, but the one exploited by the Worm involves the mailer operating as a daemon (background) process.
Reference: 4. <author> Bishop, Matt, </author> <title> ``An Application of a Fast Data Encryption Standard Implementation,'' </title> <journal> COMPUTING SYSTEMS: THE JOURNAL OF THE USENIX ASSOCIATION, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 221-254, </pages> <publisher> University of Cali-fornia Press, </publisher> <month> Summer </month> <year> 1988. </year>
Reference-contexts: A block of zero bits is repeatedly encrypted using the user password, and the results of this encryption is what is saved. See <ref> [4] </ref> and [19] for more details. * The hosts.equiv and per-user .rhosts files referred to later. - 6 - To defeat future such attempts requires that the current remote access mechanism be removed and possibly replaced with something else.
Reference: 5. <author> Brunner, John, </author> <title> The Shockwave Rider, </title> <publisher> Harper & Row, </publisher> <year> 1975. </year>
Reference: 6. <author> Cohen, Fred, </author> <title> ``Computer Viruses: Theory and Experiments,'' </title> <booktitle> PROCEEDINGS OF THE 7TH NATIONAL COMPUTER SECURITY CONFERENCE, </booktitle> <pages> pp. 240-263, </pages> <year> 1984. </year>
Reference-contexts: The term computer virus was first used in a formal way by Fred Cohen at USC. <ref> [6] </ref> He defined the term to mean a security problem that attaches itself to other code and turns it into something that produces viruses; to quote from his paper: ``We define a computer `virus' as a program that can infect other programs by modifying them to include a possibly evolved copy
Reference: 7. <author> Comer, Douglas E., </author> <title> Internetworking with TCP/IP: Principles, Protocols and Architecture, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year>
Reference: 8. <author> Denning, Peter, </author> <title> ``The Internet Worm,'' </title> <journal> AMERICAN SCIENTIST, </journal> <volume> vol. 77, no. 2, </volume> <month> March-April </month> <year> 1989. </year>
Reference-contexts: These suggestions were published in mailing lists and on the Usenet network news system, although their spread was 333333333333333333 * This paper appears in the Proceedings of the 1989 European Software Engineering Conference <ref> (ESEC 89) </ref>, published by Springer-Verlag as #87 in the ``Lecture Notes in Computer Science'' series. As presented by Mark Lottor at the October 1988 Internet Engineering Task Force (IETF) meeting in Ann Arbor, MI. BSD is an acronym for Berkeley Software Distribution. UNIX is a registered trademark of AT&T Laboratories. <p> that recommendation, Robert has been suspended from the University for a minimum of one year; the faculty of the computer science department there will have to approve readmission should he apply for it. 333333333333333333 Personal conversations, anonymous by request. - 15 - As has been observed in both [16] and <ref> [8] </ref>, it would not serve us well to overreact to this particular incident; less than 5% of the machines on an insecure network were affected for less than a few days. However, neither should we dismiss it as something of no consequence.
Reference: 9. <author> Denning, Peter J., </author> <title> ``Computer Viruses,'' </title> <journal> AMERICAN SCIENTIST, </journal> <volume> vol. 76, </volume> <pages> pp. 236-238, </pages> <month> May-June </month> <year> 1988. </year>
Reference-contexts: This usage has been reinforced by quotes from computer managers and programmers also unfamiliar with the diff erence. For purposes of clarifying the terminology, let me define the difference between these two terms and give some citations as to their origins; these same definitions were recently given in <ref> [9] </ref>: A worm is a program that can run independently and can propagate a fully working version of itself to other machines. It is derived from the word tapeworm, a parasitic organism that lives inside a host and uses its resources to maintain itself.
Reference: 10. <author> Eichin, Mark W. and Jon A. Rochlis, </author> <title> ``With Microscope and Tweezers: An Analysis of the Internet Virus of November 1988,'' </title> <booktitle> PROCEEDINGS OF THE SYMPOSIUM ON RESEARCH IN SECURITY AND PRIVACY, IEEE-CS, </booktitle> <address> Oakland, CA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: D. dissertation he credited his advisor, L. Adleman, with originating the terminology. However, there are accounts of virus programs being created at least a year earlier, including one written by a student at Texas A&M during early 1982. * 2.3. An Opposing View In a widely circulated paper <ref> [10] </ref>, Eichin and Rochlis chose to call the November 2nd program a virus. Their reasoning for this required reference to biological literature and observing distinctions between lytic viruses and lysogenic viruses. <p> The description in this section assumes that the reader is somewhat familiar with standard UNIX commands and with BSD UNIX network facilities. A more detailed analysis of operation and components can be found in [26], with additional details in <ref> [10] </ref> and [24]. This description starts from the point at which a host is about to be infected.
Reference: 11. <author> Eisenberg, Ted, David Gries, Juris Hartmanis, Dan Holcomb, M. Stuart Lynn, and Thomas Santoro, </author> <title> The Computer Worm, Office of the Provost, </title> <institution> Cornell University, </institution> <address> Ithaca, NY, </address> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: They also claim to have records from Cornell University computers showing early versions of the Worm code being tested on campus machines, and they claim to have copies of the Worm code, found in Mr. Morris's account. The report from the Provost's office at Cornell <ref> [11] </ref> also names Robert T. Morris as the culprit, and presents convincing reasons for that conclusion. Thus, the identity of the author appears well established, but his motive remains a mystery. Conjectures have ranged from an experiment gone awry to a subconscious act of revenge against his father.
Reference: 12. <author> Gerrold, David, </author> <title> When Harlie Was One, </title> <publisher> Ballentine Books, </publisher> <year> 1972. </year> <note> The first edition. </note>
Reference-contexts: Viruses The first published use of the word virus (to my knowledge) to describe something that infects a computer was by David Gerrold in his science fiction short stories about the G.O.D. machine. These stories were later combined and expanded to form the book When Harlie Was One. <ref> [12] </ref> A subplot in that book described a program named VIRUS created by an unethical scientist. * A computer infected with VIRUS would randomly dial the phone until it found another computer. It would then break into that system and infect it with a copy of VIRUS.
Reference: 13. <author> Grampp, Fred. T. and Robert H. Morris, </author> <title> ``UNIX Operating System Security,'' </title> <journal> AT&T BELL LABORATORIES TECHNICAL JOURNAL, </journal> <volume> vol. 63, no. 8, part 2, </volume> <pages> pp. 1649-1672, </pages> <month> Oct. </month> <year> 1984. </year>
Reference-contexts: Although UNIX has long been known to have some security weaknesses (cf. [22], <ref> [13, 21, 29] </ref>), especially in its usual mode of operation in open research environments, the scope of the break-ins nonetheless came as a great surprise to almost everyone. The program was mysterious to users at sites where it appeared. <p> These are, respectively, the account name, the account name concatenated with itself, the first and last names of the user, the user names with leading capital letters turned to lower case, and the account name reversed. Experience described in <ref> [13] </ref> shows that on systems where users are naive about proper password security, these choices may work for a significant percentage of user accounts.
Reference: 14. <author> Harrenstien, K., ``Name/Finger,'' </author> <type> RFC 742, </type> <institution> SRI Network Information Center, </institution> <month> December </month> <year> 1977. </year>
Reference-contexts: The fingerd program is intended to run as a daemon, or background process, to service remote requests using the finger protocol. <ref> [14] </ref> This daemon program accepts connections from remote programs, reads a single line of input, and then sends back output matching the received request. The bug exploited to break fingerd involved overrunning the buffer the daemon used for input.
Reference: 15. <author> Hinden, R., J. Haverty, and A. Sheltzer, </author> <title> ``The DARPA Internet: Interconnecting Heterogeneous Computer Networks with Gateways,'' </title> <journal> COMPUTER MAGAZINE, </journal> <volume> vol. 16, no. 9, </volume> <pages> pp. 38-48, IEEE-CS, </pages> <month> September </month> <year> 1983. </year>
Reference: 16. <author> King, Kenneth M., </author> <title> ``Overreaction to External Attacks on Computer Systems Could be More Harmful than the Viruses Themselves,'' CHRONICLE OF HIGHER EDUCATION, </title> <editor> p. A36, </editor> <month> November 23, </month> <year> 1988. </year>
Reference-contexts: Consistent with that recommendation, Robert has been suspended from the University for a minimum of one year; the faculty of the computer science department there will have to approve readmission should he apply for it. 333333333333333333 Personal conversations, anonymous by request. - 15 - As has been observed in both <ref> [16] </ref> and [8], it would not serve us well to overreact to this particular incident; less than 5% of the machines on an insecure network were affected for less than a few days. However, neither should we dismiss it as something of no consequence.
Reference: 17. <author> Kocher, Bryan, </author> <title> ``A Hygiene Lesson,'' </title> <journal> COMMUNICATIONS OF THE ACM, </journal> <volume> vol. 32, no. 1, </volume> <editor> p. </editor> <volume> 3, </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: Morris by claiming that his intent was to demonstrate something about Internet security, or that he was trying a harmless experiment. Even the current president of the ACM implied that it was just a ``prank'' in <ref> [17] </ref>. It is curious that this many people, journalists and computer professionals alike, would assume to know the intent of the author based on the observed behavior of the program.
Reference: 18. <author> Markhoff, John, </author> <title> ``Author of Computer 'Virus' Is Son of U. S. Electronic Security Expert,'' </title> <address> NEW YORK TIMES, p. A1, </address> <month> November 5, </month> <year> 1988. </year>
Reference: 19. <author> Morris, Robert and Ken Thompson, </author> <title> ``UNIX Password Security,'' </title> <journal> COMMUNICATIONS OF THE A CM, </journal> <volume> vol. 22, no. 11, </volume> <pages> pp. 594-597, </pages> <publisher> ACM, </publisher> <month> November </month> <year> 1979. </year>
Reference-contexts: A block of zero bits is repeatedly encrypted using the user password, and the results of this encryption is what is saved. See [4] and <ref> [19] </ref> for more details. * The hosts.equiv and per-user .rhosts files referred to later. - 6 - To defeat future such attempts requires that the current remote access mechanism be removed and possibly replaced with something else.
Reference: 20. <author> Postel, Jonathan B., </author> <title> ``Simple Mail Transfer Protocol,'' </title> <type> RFC 821, </type> <institution> SRI Network Information Center, </institution> <month> August </month> <year> 1982. </year>
Reference-contexts: In this mode, the program is ``listening'' on a TCP port (#25) for attempts to deliver mail using the standard Internet protocol, SMTP (Simple Mail Transfer Protocol). <ref> [20] </ref> When such an attempt is detected, the daemon enters into a dialog with the remote mailer to determine sender, recipient, delivery instructions, and message contents. The bug exploited in sendmail had to do with functionality provided by a debugging option in the code.
Reference: 21. <author> Reid, Brian, </author> <title> ``Reflections on Some Recent Widespread Computer Breakins,'' </title> <journal> COMMUNICATIONS OF THE ACM, </journal> <volume> vol. 30, no. 2, </volume> <pages> pp. 103-105, </pages> <publisher> ACM, </publisher> <month> February </month> <year> 1987. </year> <month> - 18 </month> - 
Reference-contexts: Although UNIX has long been known to have some security weaknesses (cf. [22], <ref> [13, 21, 29] </ref>), especially in its usual mode of operation in open research environments, the scope of the break-ins nonetheless came as a great surprise to almost everyone. The program was mysterious to users at sites where it appeared. <p> This feature has often been responsible for users gaining unauthorized access to machines (cf. <ref> [21] </ref>), but it continues to be used because of its great convenience. The Worm exploited the mechanism by trying to locate machines that might ``trust'' the current machine/login being used by the Worm.
Reference: 22. <author> Ritchie, Dennis M., </author> <title> ``On the Security of UNIX,'' in UNIX SUPPLEMENTARY DOCUMENTS, </title> <institution> AT & T, </institution> <year> 1979. </year>
Reference-contexts: Although UNIX has long been known to have some security weaknesses (cf. <ref> [22] </ref>, [13, 21, 29]), especially in its usual mode of operation in open research environments, the scope of the break-ins nonetheless came as a great surprise to almost everyone. The program was mysterious to users at sites where it appeared.
Reference: 23. <author> Royko, Mike, </author> <title> ``Here's how to stop computer vandals,'' </title> <address> THE CHICAGO TRIBUNE, </address> <month> November 7, </month> <year> 1988. </year>
Reference-contexts: One somewhat humorous example of this was espoused by Mike Royko <ref> [23] </ref>. The Cornell commission recommended some punishment, but not punishment so severe that Mr. Morris's future career in computing would be jepordized.
Reference: 24. <author> Seeley, </author> <title> Donn, ``A Tour of the Worm,'' </title> <booktitle> PROCEEDINGS OF 1989 WINTER USENIX CONFERENCE, Usenix Association, </booktitle> <address> San Diego, CA, </address> <month> February </month> <year> 1989. </year>
Reference-contexts: The description in this section assumes that the reader is somewhat familiar with standard UNIX commands and with BSD UNIX network facilities. A more detailed analysis of operation and components can be found in [26], with additional details in [10] and <ref> [24] </ref>. This description starts from the point at which a host is about to be infected. <p> Chronology What follows is an abbreviated chronology of events relating to the release of the Internet Worm. Most of this information was gathered from personal mail, submissions to mailing lists, and Usenet post-ings. Some items were taken from <ref> [24] </ref> and [1], and are marked accordingly. This is certainly not a 333333333333333333 * rexec is a remote command execution service. It requires that a username/password combination be supplied as part of the request. This was compiled in as port number 23357, on host 127.0.0.1 (loopback).
Reference: 25. <author> Shoch, John F. and Jon A. Hupp, </author> <title> ``The Worm Programs Early Experience with a Distributed Computation,'' </title> <journal> COMMUNICATIONS OF THE ACM, </journal> <volume> vol. 25, no. 3, </volume> <pages> pp. 172-180, </pages> <publisher> ACM, </publisher> <month> March </month> <year> 1982. </year>
Reference-contexts: Ten years ago, researchers at Xerox PARC built and experimented with worm programs. They reported their experiences in 1982 in <ref> [25] </ref>, and cited Brunner as the inspiration for the name worm. Although not the first self-replicating programs to run in a network environment, these were the first such programs to be called worms.
Reference: 26. <author> Spafford, Eugene H., </author> <title> ``The Internet Worm Program: An Analysis,'' </title> <journal> COMPUTER COMMUNICATION REVIEW, </journal> <volume> vol. 19, no. 1, </volume> <publisher> ACM SIGCOM, </publisher> <month> January </month> <year> 1989. </year> <note> Also issued as Purdue CS technical report TR-CSD-823 </note>
Reference-contexts: Step-by-step description This section contains a more detailed overview of how the Worm program functioned. The description in this section assumes that the reader is somewhat familiar with standard UNIX commands and with BSD UNIX network facilities. A more detailed analysis of operation and components can be found in <ref> [26] </ref>, with additional details in [10] and [24]. This description starts from the point at which a host is about to be infected. <p> On Suns, this simply resulted in a core dump since the code was not in place to corrupt a Sun version of fingerd in a similar fashion. Curiously, correct machine-specific code to corrupt Suns could have been written in a matter of hours and included but was not. <ref> [26] </ref> 8c) The Worm then tried to infect the remote host by establishing a connection to the SMTP port and mailing an infection, as in step 2b, above. Not all the steps were attempted. <p> Step 10 in this section describes what was done if a password ``hit'' was achieved. 9c) The third stage in the process involved trying to break the password of each user by trying each word present in an internal dictionary of words (available in <ref> [26] </ref>). This dictionary of 432 words was tried against each account in a random order, with ``hits'' being handled as described in step 10, below. 9d) The fourth stage was entered if all other attempts failed.
Reference: 27. <author> Spafford, Eugene H., </author> <title> ``Some Musings on Ethics and Computer Break-Ins,'' </title> <booktitle> PROCEEDINGS OF THE WINTER USENIX CONFERENCE, Usenix Association, </booktitle> <address> San Diego, CA, </address> <month> February </month> <year> 1989. </year>
Reference-contexts: Many commercial and government sites operate their systems this way. To attempt to blame these individuals for the success of the Worm is equivalent to blaming an arson victim for the fire because she didn't build her house of fireproof metal. (More on this theme can be found in <ref> [27] </ref>.) The matter of appropriate punishment will likely be decided by a Federal judge. A grand jury in Syracuse, NY has been hearing testimony on the matter.
Reference: 28. <author> Steiner, Jennifer, Clifford Neuman, and Jeffrey Schiller, </author> <title> ``Kerberos: An Authentication Service for Open Network Systems,'' </title> <booktitle> USENIX ASSOCIATION WINTER CONFERENCE 1988 PROCEEDINGS, </booktitle> <pages> pp. 191-202, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: One mechanism that shows promise in this area is the Kerberos authentification server <ref> [28] </ref>. This scheme uses dynamic session keys that need to be updated periodically. Thus, an invader could not make use of static authorizations present in the file system. 3.4. High Level Description The Worm consisted of two parts: a main program, and a bootstrap or vector program.
Reference: 29. <author> Stoll, Cliff, </author> <title> The Cuckoo's Egg, </title> <publisher> Doubleday, </publisher> <address> NY, NY, </address> <month> October </month> <year> 1989. </year> <note> Also published in Frankfurt, Germany by Fischer-Verlag. </note>
Reference-contexts: Although UNIX has long been known to have some security weaknesses (cf. [22], <ref> [13, 21, 29] </ref>), especially in its usual mode of operation in open research environments, the scope of the break-ins nonetheless came as a great surprise to almost everyone. The program was mysterious to users at sites where it appeared.
References-found: 29

