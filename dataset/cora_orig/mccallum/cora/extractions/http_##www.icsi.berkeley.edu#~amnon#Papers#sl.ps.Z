URL: http://www.icsi.berkeley.edu/~amnon/Papers/sl.ps.Z
Refering-URL: http://www.icsi.berkeley.edu/~amnon/
Root-URL: http://www.icsi.berkeley.edu
Title: Symmetric Logspace is Closed Under Complement  
Author: Noam Nisan Amnon Ta-Shma 
Date: November 9, 1995  
Abstract: We present a Logspace, many-one reduction from the undirected st-connectivity problem to its complement. This shows that SL = coSL. 
Abstract-found: 1
Intro-found: 1
Reference: [AKL + 79] <author> R. Aleliunas, R.M. Karp, R.J. Lipton, L. Lovasz, and C. Rackoff. </author> <title> Random walks, universal sequences and the complexity of maze problems. </title> <booktitle> In Proceedings of the 20th Annual IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1979. </year>
Reference-contexts: The containment SL RL is the only non-trivial one in the line above and follows directly from the randomized Logspace algorithm for USTCON of <ref> [AKL + 79] </ref>. It is also known that SL SC [Nis92], SL L L [KW93] and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found [Imm88, Sze88], Borodin et al [BCD + 89] asked whether the same is true for SL.
Reference: [AKS83] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> An O(n log n) sorting network. </title> <booktitle> In Proc. 15th ACM Symposium on Theory of Computing (STOC), </booktitle> <pages> pages 1-9, </pages> <year> 1983. </year>
Reference-contexts: Quite surprisingly the proof of our theorem does not use inductive counting, as do the proofs of NL = coNL, and is in fact even simpler than them, however it uses the <ref> [AKS83] </ref> sorting networks. Theorem 1 SL = coSL. It should be noted that the monotone analogues (see [GS91]) of SL and coSL are known to be different [KW88]. <p> Definition 2.2 Sort : f0; 1g n 7! f0; 1g n is the boolean sorting function, i.e. it moves all the zeroes to the beginning of the string. Using the AKS sorting networks <ref> [AKS83] </ref>, which belong to NC 1 , we get: Corollary 2.2 Sort is monotonically reducible to USTCON (poly).
Reference: [BCD + 89] <author> A. Borodin, S.A. Cook, P.W. Dymond, W.L. Ruzzo, and M. Tompa. </author> <title> Two applications of inductive counting for complementation problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18(3) </volume> <pages> 559-578, </pages> <year> 1989. </year> <month> 8 </month>
Reference-contexts: It is also known that SL SC [Nis92], SL L L [KW93] and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found [Imm88, Sze88], Borodin et al <ref> [BCD + 89] </ref> asked whether the same is true for SL. They could prove only the weaker statement, namely that SL coRL, and left "SL = coSL?" as an open problem.
Reference: [BPS92] <author> Y. Ben-Asher, D. Peleg, and A. Schuster. </author> <title> The complexity of reconfiguring networks models. </title> <booktitle> In Proc. of the Israel Symposium on the Theory of Computing and Systems, </booktitle> <month> May </month> <year> 1992. </year> <note> To appear Information and Computation. </note>
Reference-contexts: Corollary 1.1 L &lt;SL&gt; = SL In particular we show that both "symmetric Logspace hierarchies", (the one defined by alternation in [Rei82], and the one defined by oracle queries in <ref> [BPS92] </ref>) collapse to SL. 2 Proof of Theorem 2.1 Overview of proof. We design a many-one reduction from coUSTCON to USTCON. We start by developing, in subsection 2.2, simple tools for combining reductions. <p> As the symmetric Logspace hierarchy defined in [Rei82] is known to be within L &lt;SL&gt; , this hierarchy collapses to SL. As can easily be seen, the above argument holds for any undirected graph with undirected query edges, which is exactly the definition of SL &lt;SL&gt; given by <ref> [BPS92] </ref>. Thus, SL &lt;SL&gt; = SL, and by induction the SL hierarchy defined in [BPS92] collapses to SL. 4 Acknowledgements We would like to thank Amos Beimel, Allan Borodin, Assaf Schuster, Robert Szelepcsenyi, and Avi Wigderson for helpful discussions. <p> As can easily be seen, the above argument holds for any undirected graph with undirected query edges, which is exactly the definition of SL &lt;SL&gt; given by <ref> [BPS92] </ref>. Thus, SL &lt;SL&gt; = SL, and by induction the SL hierarchy defined in [BPS92] collapses to SL. 4 Acknowledgements We would like to thank Amos Beimel, Allan Borodin, Assaf Schuster, Robert Szelepcsenyi, and Avi Wigderson for helpful discussions.
Reference: [GS91] <author> Grigni and Sipser. </author> <title> Monotone separation of logspace from nc 1 . In Annual Conference on Structure in Complexity Theory, </title> <year> 1991. </year>
Reference-contexts: Quite surprisingly the proof of our theorem does not use inductive counting, as do the proofs of NL = coNL, and is in fact even simpler than them, however it uses the [AKS83] sorting networks. Theorem 1 SL = coSL. It should be noted that the monotone analogues (see <ref> [GS91] </ref>) of SL and coSL are known to be different [KW88].
Reference: [Imm88] <author> Immerman. </author> <title> Nondeterministic space is closed under complementation. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17, </volume> <year> 1988. </year>
Reference-contexts: It is also known that SL SC [Nis92], SL L L [KW93] and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found <ref> [Imm88, Sze88] </ref>, Borodin et al [BCD + 89] asked whether the same is true for SL. They could prove only the weaker statement, namely that SL coRL, and left "SL = coSL?" as an open problem.
Reference: [KW88] <author> M. Karchmer and A. Wigderson. </author> <title> Monotone circuits for connectivity require super-logarithmic depth. </title> <booktitle> In Proc. 20th ACM Symposium on Theory of Computing (STOC), </booktitle> <pages> pages 539-550, </pages> <year> 1988. </year>
Reference-contexts: Theorem 1 SL = coSL. It should be noted that the monotone analogues (see [GS91]) of SL and coSL are known to be different <ref> [KW88] </ref>. As a direct corollary of our theorem, we get that L &lt;SL&gt; = SL where L &lt;SL&gt; is the class of languages accepted by Logspace oracle Turing machines with oracle from SL, being careful with the way we allow queries (see [RST84]).
Reference: [KW93] <author> Karchmer and Wigderson. </author> <title> On span programs. </title> <booktitle> In Annual Conference on Structure in Complexity Theory, </booktitle> <year> 1993. </year>
Reference-contexts: The containment SL RL is the only non-trivial one in the line above and follows directly from the randomized Logspace algorithm for USTCON of [AKL + 79]. It is also known that SL SC [Nis92], SL L L <ref> [KW93] </ref> and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found [Imm88, Sze88], Borodin et al [BCD + 89] asked whether the same is true for SL.
Reference: [LP82] <author> Lewis and Papadimitriou. </author> <title> Symmetric space-bounded computation. </title> <journal> Theoretical Computer Science, </journal> <volume> 19, </volume> <year> 1982. </year>
Reference-contexts: 1 Introduction This paper deals with the complexity class symmetric Logspace, SL, defined by Lewis and Papadimitriou in <ref> [LP82] </ref>. This class can be defined in several equivalent ways: 1. Languages which can be recognised by symmetric nondeterministic Turing Ma chines that run within logarithmic space. See [LP82]. 2. <p> 1 Introduction This paper deals with the complexity class symmetric Logspace, SL, defined by Lewis and Papadimitriou in <ref> [LP82] </ref>. This class can be defined in several equivalent ways: 1. Languages which can be recognised by symmetric nondeterministic Turing Ma chines that run within logarithmic space. See [LP82]. 2. Languages that can be accepted by a uniform family of polynomial size contact schemes (also sometimes called switching networks.) See [Raz91]. 3. Languages which can be reduced in Logspace via a many-one reduction to UST CON, the undirected st-connectivity problem.
Reference: [Nis92] <author> N. Nisan. </author> <title> RL SC. </title> <booktitle> In Proc. 24th ACM Symposium on Theory of Computing (STOC), </booktitle> <pages> pages 619-623, </pages> <year> 1992. </year>
Reference-contexts: The containment SL RL is the only non-trivial one in the line above and follows directly from the randomized Logspace algorithm for USTCON of [AKL + 79]. It is also known that SL SC <ref> [Nis92] </ref>, SL L L [KW93] and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found [Imm88, Sze88], Borodin et al [BCD + 89] asked whether the same is true for SL.
Reference: [NSW92] <author> N. Nisan, E. Szemeredi, and A. Wigderson. </author> <title> Undirected connectivity in O(log 1:5 n) space. </title> <booktitle> In Proc. 33th IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <pages> pages 24-29, </pages> <year> 1992. </year>
Reference-contexts: The containment SL RL is the only non-trivial one in the line above and follows directly from the randomized Logspace algorithm for USTCON of [AKL + 79]. It is also known that SL SC [Nis92], SL L L [KW93] and SL DSPACE (log 1:5 n) <ref> [NSW92] </ref>. After the surprising proofs that NL is closed under complement were found [Imm88, Sze88], Borodin et al [BCD + 89] asked whether the same is true for SL. They could prove only the weaker statement, namely that SL coRL, and left "SL = coSL?" as an open problem.
Reference: [Raz91] <author> A. Razborov. </author> <title> Lower bounds for deterministic and nondeterministic branching programs. </title> <booktitle> In Proceedings of the 8th FCT, Lecture Notes in Computer Science, </booktitle> <volume> 529, </volume> <pages> pages 47-60, </pages> <address> New York/Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: This class can be defined in several equivalent ways: 1. Languages which can be recognised by symmetric nondeterministic Turing Ma chines that run within logarithmic space. See [LP82]. 2. Languages that can be accepted by a uniform family of polynomial size contact schemes (also sometimes called switching networks.) See <ref> [Raz91] </ref>. 3. Languages which can be reduced in Logspace via a many-one reduction to UST CON, the undirected st-connectivity problem. A major reason for the interest in this class is that it captures the complexity of USTCON.
Reference: [Rei82] <author> J. H. Reif. </author> <title> Symmetric complementation. </title> <booktitle> In Proc. 14th ACM Symposium on Theory of Computing (STOC), </booktitle> <pages> pages 201-214, </pages> <year> 1982. </year>
Reference-contexts: Several combinatorial problems are known to be in SL or coSL, e.g., 2-colourability is complete for coSL <ref> [Rei82] </ref>. The following facts are known regarding SL relative to other complexity classes in "the vicinity": L SL RL NL: Here, L is the class deterministic Logspace and RL is the class of problems that can be accepted with one-sided error by a randomized Logspace machine running in polynomial time. <p> Corollary 1.1 L &lt;SL&gt; = SL In particular we show that both "symmetric Logspace hierarchies", (the one defined by alternation in <ref> [Rei82] </ref>, and the one defined by oracle queries in [BPS92]) collapse to SL. 2 Proof of Theorem 2.1 Overview of proof. We design a many-one reduction from coUSTCON to USTCON. We start by developing, in subsection 2.2, simple tools for combining reductions. <p> In this section we show how to build a spanning forest using USTCON. This basic idea was already noticed by Reif and independently by Cook <ref> [Rei82] </ref>. Given a graph G index the edges from 1 to m. We can view the indices as weights to the edges, and as no two edges have the same weight, we know that there is a unique minimal spanning forest F . <p> It is also clear that this can be done in LogSpace, completing the proof. As the symmetric Logspace hierarchy defined in <ref> [Rei82] </ref> is known to be within L &lt;SL&gt; , this hierarchy collapses to SL. As can easily be seen, the above argument holds for any undirected graph with undirected query edges, which is exactly the definition of SL &lt;SL&gt; given by [BPS92].
Reference: [RST84] <author> Ruzzo, Simon, and Tompa. </author> <title> Space-bounded hierarchies and probabilistic computations. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28 </volume> <pages> 216-230, </pages> <month> April </month> <year> 1984. </year>
Reference-contexts: As a direct corollary of our theorem, we get that L &lt;SL&gt; = SL where L &lt;SL&gt; is the class of languages accepted by Logspace oracle Turing machines with oracle from SL, being careful with the way we allow queries (see <ref> [RST84] </ref>). Corollary 1.1 L &lt;SL&gt; = SL In particular we show that both "symmetric Logspace hierarchies", (the one defined by alternation in [Rei82], and the one defined by oracle queries in [BPS92]) collapse to SL. 2 Proof of Theorem 2.1 Overview of proof.
Reference: [SV85] <author> Skyum and Valiant. </author> <title> A complexity theory based on boolean algebra. </title> <journal> Journal of the ACM, </journal> <year> 1985. </year>
Reference-contexts: In subsection 2.4 everything is put together. 2.2 Projections to U ST CON . In this paper we will use only the simplest kind of reductions, i.e. LogSpace uniform projection reductions <ref> [SV85] </ref>. Moreover, we will be interested only in reductions to USTCON. In this subsection we define this kind of reduction and we show some of its basic properties.
Reference: [Sze88] <author> Szelepcsenyi. </author> <title> The method of forced enumeration for nondeterministic automata. </title> <journal> Acta Informatica, </journal> <volume> 26, </volume> <year> 1988. </year> <month> 9 </month>
Reference-contexts: It is also known that SL SC [Nis92], SL L L [KW93] and SL DSPACE (log 1:5 n) [NSW92]. After the surprising proofs that NL is closed under complement were found <ref> [Imm88, Sze88] </ref>, Borodin et al [BCD + 89] asked whether the same is true for SL. They could prove only the weaker statement, namely that SL coRL, and left "SL = coSL?" as an open problem.
References-found: 16

