URL: http://www.media.mit.edu/~vmb/papers/streams.ps
Refering-URL: http://www.media.mit.edu/~vmb/
Root-URL: http://www.media.mit.edu
Email: fwad,vmbg@media.mit.edu  
Title: Stream-Based Computing and Future Television  
Author: John A. Watlington and V. Michael Bove, Jr. 
Address: Room E15-351, 20 Ames Street, Cambridge MA 02139 USA  
Affiliation: Media Laboratory, Massachusetts Institute of Technology  
Note: Proc. 137th SMPTE Technical Conference, September 1995, pp. 69-79  
Abstract: The computational demands of encoding and decoding motion-compensated transform representations of digital video are well-known, and even hard-wired solutions to single algorithms remain a design challenge. When interactivity or personalization are added, and when algorithms increase in complexity to include structured or object-based representations, not only do the requirements increase but so too does the need for computational flexibility. It is often proposed to solve the computational problem in a flexible manner by using multiple identical general-purpose processors in parallel (a multiple-instruction, multiple-data, or MIMD approach). Such methods, though, may not achieve the needed number of operations per second without large numbers of processors; in that case communications bottlenecks can arise and programmers can find difficulty in efficiently parallelizing software. A less-well-known form of parallel computation, based on streams, is conceptually closer to to the ways in which people think about algorithms and seems to the authors to offer a more cost-effective, scalable, highly-integratable approach to flexible computing for video. In this paper, we explain the concept of stream-based processing, and describe why it is a good match to video data. Stream-based computing combined with automatic resource allocation can make the parallelization of the computation automatic at run-time, permitting scalable computing (the same software runs on differently-configured systems) and multitasking. Within this framework, we discuss our implementation of streams on Cheops, a compact data-flow digital video processor developed by the MIT Media Laboratory. We also discuss stream implementations on several other architectures, and how to apply the lessons learned to future programmable hardware for digital video processing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. M. Bove, Jr., </author> <title> "Object-Oriented Television," </title> <note> 136th SMPTE Technical Conference, 1994, paper 136-3. </note>
Reference: [2] <author> J. A. Watlington, M. Lucente, C. J. Sparrell, V. M. Bove, Jr., and I. Tamitani, </author> <title> "A Hardware Architecture for Rapid Generation of Electro-Holographic Fringe Patterns," </title> <booktitle> Proc. SPIE Practical Holography IX, </booktitle> <volume> 2406, </volume> <year> 1995, </year> <pages> pp. 172-183. </pages>
Reference: [3] <author> D. A. Epstein, et al., </author> <title> "The IBM POWER Visualization System: A Digital Post-Production Suite in a Box," </title> <note> 136th SMPTE Technical Conference, 1994, paper 136-98. </note>
Reference: [4] <author> M. J. Flynn, </author> <title> "Some Computer Organizations and Their Effectiveness," </title> <journal> IEEE Trans. on Computers, </journal> <volume> 21, No. 9, </volume> <year> 1972, </year> <pages> pp. 948-960. </pages>
Reference: [5] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming: Fundamental Algorithms, </booktitle> <volume> Vol. 1, </volume> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1973. </year>
Reference: [6] <author> G. Kahn, </author> <title> "The semantics of A Simple Language for Parallel Programming," </title> <booktitle> Information Processing 74: Proceedings of the IFIP Congress, </booktitle> <month> Aug. </month> <year> 1974, </year> <pages> pp. 471-475. </pages>
Reference: [7] <author> W. H. Burge, </author> <title> "Stream Processing Functions," </title> <journal> IBM Journal of Research and Development, </journal> <volume> 19, </volume> <month> Jan. </month> <year> 1975, </year> <pages> pp. 12-25. </pages>
Reference: [8] <author> P. R. Kosinski, </author> <title> "Denotational Semantics of Determinate and Non-Determinate Data Flow Programs," </title> <type> Technical Report TR-220, </type> <institution> MIT Laboratory for Computer Science, </institution> <address> Cambridge MA, </address> <month> May </month> <year> 1979. </year>
Reference: [9] <author> J. B. Dennis, and K. S. Weng, </author> <title> "An abstract implementation for concurrent computation with streams," </title> <booktitle> Proc. 1979 Conf. on Parallel Processing, </booktitle> <month> Aug. </month> <year> 1979, </year> <pages> pp. 35-45. </pages>
Reference: [10] <author> S. J. Allan, and R. R. Olderhoeft, </author> <title> "A Stream Definition for Von Neumann Multiprocessors", </title> <booktitle> Proc. 1983 Int'l Conf. on Parallel Processing, </booktitle> <month> Aug. </month> <year> 1983, </year> <pages> pp. 303-306. </pages>
Reference: [11] <author> E. A. Ashcroft, A. A. Faustini, R. Jagannathan, and W. W. Wadge, </author> <title> Multidimensional Programming, </title> <publisher> Oxford Univ. Press, </publisher> <address> New York, </address> <year> 1995. </year>
Reference: [12] <author> J. L. Gaudiot, </author> <title> "Methods for Handling Structures in Dataflow Systems," </title> <booktitle> Proc. 12th Annual Int'l Symp. on Computer Architecture, </booktitle> <year> 1985, </year> <pages> pp. 352-358. </pages>
Reference: [13] <author> L. J. Caluwaerts, J. Debacker and J. A. Peperstraete, </author> <title> "Implementing Streams on a Data Flow Computer System with Paged Memory," </title> <booktitle> Proc. 10th Annual Int'l Symp. on Computer Architecture, </booktitle> <year> 1983, </year> <pages> pp. 76-83. </pages>
Reference: [14] <author> R. W. Hartenstein, A. G. Hirschbiel and M. Riedmuller, </author> <title> "A Novel ASIC Design Approach Based on a New Machine Paradigm," </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> 26, No. 7, </volume> <month> July </month> <year> 1991, </year> <pages> pp. 975-989. </pages>
Reference: [15] <author> S. S. Bhattacharyya and E. A. Lee, </author> <title> "Memory Management for Dataflow Programming of Mul-tirate Signal Processing Algorithms," </title> <journal> IEEE Trans. on Signal Processing, </journal> <volume> 42, No. 5, </volume> <month> May </month> <year> 1994, </year> <pages> pp. 1190-1201. </pages>
Reference: [16] <author> J. S. Onanian, </author> <title> "A Signal Processing Language for Coarse Grain Dataflow Multiprocessors," </title> <type> MS Thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge MA, </address> <month> June </month> <year> 1989. </year>
Reference: [17] <author> K. Hwang, </author> <title> Advanced Computer Architecture: Parallelism, Scalability, Programmability, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1993. </year>
Reference: [18] <author> E. A. Lee, </author> <title> "Representing and Exploiting Data Parallelism using Multidimensional Dataflow Diagrams," </title> <booktitle> Proc. IEEE 1993 Intl. Conf. on Acoustics, Speech and Signal Processing, </booktitle> <month> April </month> <year> 1993, </year> <pages> pp. </pages> <address> I-453 - I-456. </address>
Reference: [19] <author> V. M. Bove, Jr. and J. A. Watlington, "Cheops: </author> <title> A Reconfigurable Data-Flow System for Video Processing," </title> <journal> IEEE Transactions on Circuits and Systems for Video Processing, </journal> <volume> 5, no. 2, </volume> <month> Apr. </month> <year> 1995, </year> <pages> pp. 140-149. </pages>
Reference-contexts: The constraint of one stream per memory bank, along with the small number of memory banks, strongly limit the parallelism that may be achieved. In spite of these limitations, the performance of a Cheops system on image processing algorithms (examples in <ref> [19] </ref>) is still significant. 8 A Video Signal Processor Philips' Video Signal Processor (VSP) is a commercially available monolithic processing unit designed for operating upon video streams.
Reference: [20] <author> H. Veendrick, O. Popp, G. Postuma, and M. Lecoutere, </author> <title> "A 1.5 GIPS Video Signal Processor (VSP)," </title> <booktitle> Proc. 1994 IEEE Custom Integrated Circuit Conf., </booktitle> <year> 1994, </year> <pages> pp. 95-98. </pages>
Reference: [21] <institution> Texas Instruments, Inc., "TMS320C80 Technical Brief: Multimedia Video Processor (MVP)," Houston TX, </institution> <year> 1994. </year>
Reference: [22] <author> M. E. Benitez and J. W. Davidson, </author> <title> "Code Execution for Streaming: an Access/Execute Mechanism," </title> <booktitle> Proc. Fourth Int'l Conf. on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> April </month> <year> 1991, </year> <pages> pp. 132-141. </pages>
Reference: [23] <author> M. E. Wolf and M. S. Lam, </author> <title> "A Loop Transformation Theory and an Algorithm to Maximize Parallelism," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 2, No. 4, </volume> <month> Oct. </month> <year> 1991, </year> <pages> pp. 452-471. </pages>
Reference: [24] <author> G. S. Sohi and E. S. Davidson, </author> <title> "Performance of the Structured Memory Access (SMA) Architecture," </title> <booktitle> Proc. 1984 Int'l Conference on Parallel Processing, </booktitle> <month> Aug. </month> <year> 1984, </year> <pages> pp. 506-513. </pages>
Reference: [25] <author> J. R. Goodman, J. Hsieh, K. Liou, A. R. Pleszkun, P. B. Schechter, and H. C. Young, </author> <title> "PIPE: </title>
References-found: 25

