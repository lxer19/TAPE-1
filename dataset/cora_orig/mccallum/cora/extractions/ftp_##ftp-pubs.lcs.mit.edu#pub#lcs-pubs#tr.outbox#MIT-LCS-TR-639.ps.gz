URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tr.outbox/MIT-LCS-TR-639.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/tr600.html
Root-URL: 
Title: The Structure of Near-Minimum Edge Cuts  
Author: Andras A. Benczur M. I. T. 
Keyword: Key words: minimum cuts, edge connectivity, edge splitting-off, graph algorithms  
Note: support from OTKA grants no. 1909, 7559 and 2118.  
Affiliation: Department of Mathematics  
Abstract: Let G be an undirected k-edge connected graph. In this paper we give a representation for all edge cuts with capacity not exceeding roughly 6 5 k. This generalizes the cactus representation (Dinits et al) for all minimum cuts. Karger proved that the number of cuts within a multiplicative factor ff of the connectivity is at most O(n 2ff ). We improve this bound to O(n 2 ) for ff = 6=5. An important corollary of our result is a proof with new insights to the Lovasz splitting theorem. A splitting of the edge pair us and vs at vertex s means replacing the two edges by uv. A splitting is admissible if it preserves the minimum local edge connectivity of the graph apart from vertex s. In other words, we may split us and vs if there is no set of degree minimum or minimum+1 containing both u and v; this property can be checked by our representation. Our new technique makes it possible to derive structure results of admissible pairs; among others we can show that splittable pairs form a connected graph unless the degree of s is odd or equals 4. We believe that by using our representation it will be possible to improve on results using the cactus or splittings. One such result is the edge augmentation problem where one needs a minimum cardinality edge set which increases the connectivity of the graph. The algorithm of Naor, Gusfield and Martels applies the cactus representation to solve this problem; Frank's fl Address: Laboratory for Computer Science, Theory Group, 545 Technology Square, Cambridge MA 02139. Email: benczur@theory.lcs.mit.edu. Research supported in part by DARPA contract N00014-92-J-1799 and an NEC corporation grant. Part of this research was done while the author was student at Mathematical Institute, Hungarian Academy of Sciences, and Department of Computer Science, Eotvos University, Hungary, with the partial algorithm relies on the splitting theorems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Benczur, A.A., </author> <title> Augmenting edge connectivity in ~ O(n 3 ) time, </title> <booktitle> Proc. 26th Annual ACM Symp. on Theory of Comp., </booktitle> <year> 1994 </year>
Reference-contexts: Their ideas were improved by Frank [5] to the first polynomial time algorithm for this task. Another algorithm for the same problem (Naor et al [17]) uses the cactus representation as main tool. The recent fastest augmentation algorithms of Benczur <ref> [1] </ref> and Gabow [8] are based on the idea of using the cactus, respectively the splitting theorems. It is open whether our representation can improve on any of these algorithms. One idea could be to accelerate algorithms by using our representation instead of the cactus.
Reference: [2] <author> Cai, G-P. and Y-G Sun, </author> <title> The minimum augmentation of any graph to a k-edge-connected graph, </title> <booktitle> Networks 19. </booktitle> <year> (1989) </year> <month> 151-172 </month>
Reference-contexts: Applications of the splitting theorem include composition rules for k-edge connected graphs [15] and the theorem of Nash-Williams for orienting 2k-connected graphs to k-connected digraphs (Problem 6.54 in [14]). Cai and Sun <ref> [2] </ref> applied splittings for augmenting undirected edge-connectivity by adding optimum number of edges to the graph. Their ideas were improved by Frank [5] to the first polynomial time algorithm for this task. Another algorithm for the same problem (Naor et al [17]) uses the cactus representation as main tool.
Reference: [3] <author> Dinits, </author> <title> E.A., A.V. Karzanov and M.L. Lomonosov, On the structure of a family of minimal weighted cuts in a graph, Studies in Discrete Optimization (in russian), </title> <editor> A.A. Fridman (Ed), </editor> <publisher> Nauka, </publisher> <address> Moscow (1976) 290-306 </address>
Reference-contexts: 1 Introduction Dinits et al <ref> [3] </ref> gave a concise cactus representation of all mincuts of an undirected graph. In this paper we extend this result to cuts with higher capacity. <p> For results concerning the number of cuts with (in some other sense) small capacities, see also [12] and [19]. Note that apart from the cactus theorem <ref> [3] </ref>, ours is the only such result providing a structure of small cuts as well. We review the basic properties of the cactus representation [3] of all mincuts of an undirected graph. A cactus is a graph which contains no cut edges and no two cycles with common edge. <p> Note that apart from the cactus theorem <ref> [3] </ref>, ours is the only such result providing a structure of small cuts as well. We review the basic properties of the cactus representation [3] of all mincuts of an undirected graph. A cactus is a graph which contains no cut edges and no two cycles with common edge. In other words a cactus is built up from a single vertex by recursively joining cycles to existing vertices. <p> In both cases, atoms are all (immediate) children of a set in the system. Finally, we note that the cactus representation (Fig. 2) follows from this general framework. The cactus representation <ref> [3] </ref> represents all minimum cuts, or in other words all sets with minimum degree. Let us consider one class of the system of these sets. Such a class is described by the cyclic partition lemma [3] [18], which in our terms states that the atoms of the class have a natural <p> The cactus representation <ref> [3] </ref> represents all minimum cuts, or in other words all sets with minimum degree. Let us consider one class of the system of these sets. Such a class is described by the cyclic partition lemma [3] [18], which in our terms states that the atoms of the class have a natural cyclic order. The tree structure can thus be viewed as a P -Q-tree as follows.
Reference: [4] <author> Frank, A. </author> <title> On a Theorem of Mader, </title> <booktitle> Proc. of the "Petersen" Graph Conference, </booktitle> <address> Denmark, </address> <year> 1990. </year> <note> Annals of Discrete Mathematics, </note> <author> J. Bang-Jensen, T. Jensen, L.K. Joergensen, B. Toft and P.D. Vestergaard, eds., </author> <note> to appear </note>
Reference-contexts: Provided = ! + 1 (which is the original form of the Splitting Theorem), our condition on d (s) is the same as in earlier results (which is the necessary condition <ref> [4] </ref>). Our theorem is weaker since we require the connectivity to be at least 6. Mader [15] (and later Frank [4]) has a strengthening of Lovasz' result [13] by showing that there is a splitting which preserves the local connectivity between all pairs of nodes (not only the global Near-minimum cuts <p> = ! + 1 (which is the original form of the Splitting Theorem), our condition on d (s) is the same as in earlier results (which is the necessary condition <ref> [4] </ref>). Our theorem is weaker since we require the connectivity to be at least 6. Mader [15] (and later Frank [4]) has a strengthening of Lovasz' result [13] by showing that there is a splitting which preserves the local connectivity between all pairs of nodes (not only the global Near-minimum cuts 16 v v v v v v .. ........ .... ... ... .. .. .. . .. .. . ..
Reference: [5] <author> Frank, A., </author> <title> Augmenting graphs to meet edge connectivity requirements, </title> <booktitle> Proc. 31st Annual IEEE Symposium on Foundations of Comp. Sci., </booktitle> <year> 1990, </year> <journal> and SIAM J. Discr. Math. </journal> <volume> 5 (1992) No. 1, </volume> <pages> 25-53 </pages>
Reference-contexts: Cai and Sun [2] applied splittings for augmenting undirected edge-connectivity by adding optimum number of edges to the graph. Their ideas were improved by Frank <ref> [5] </ref> to the first polynomial time algorithm for this task. Another algorithm for the same problem (Naor et al [17]) uses the cactus representation as main tool. <p> One improvement we make on earlier results is that we can describe the structure of splittable pairs. The theorems of Lovasz and Mader prove only existence of such pairs. In Frank's augmentation algorithm <ref> [5] </ref> splittable pairs are found only by (quite time-consuming) flow algorithms. On the other hand the algorithm of Karger and Stein [10] suggests that finding the mincuts or even all near-minimum cuts might be fundamentally easier than to solve the maximum flow problem.
Reference: [6] <author> Gabow, H.N., </author> <title> Applications of a poset representation to edge connectivity and graph rigidity, </title> <booktitle> Proc. 23rd Annual ACM Symp. on Theory of Comp., 1991 pp. </booktitle> <pages> 812-821 </pages>
Reference: [7] <author> Gabow, H.N., </author> <title> A representation for crossing set families with applications to submodular flow problems, </title> <booktitle> Proc. of 4th Symposium on Discrete Algorithms, 1993 Near-minimum cuts 18 </booktitle>
Reference-contexts: consequence is that this graph is connected unless d (s) is odd or equals 4. (Examples in Fig. 8 show that this last result is best possible.) We prove a structure of minimum and minimum+1 cuts by excluding two simple configurations of such cuts: triangles in the sense of Gabow <ref> [7] </ref> and combs. It turns out that these configurations are forbidden among cuts within 6=5 times the connectivity as well. Hence with the same effort as what is needed to deal with the splittings, we can actually prove a stronger theorem. <p> The second and third are configurations of 3 cuts with 7 or 8 non-empty parts. The third one is (an important) special case of the second: a triangle (3 pairwise intersecting sets with no common element) in the sense as defined by Gabow <ref> [7] </ref>. We also note that combs are the configurations excluded in interval systems; excluding combs and considering interval systems is the main idea of the cactus proof in Lehel et al [12]. Lemma 3.2. Let C 1 , C 2 and C 3 be three extreme sets.
Reference: [8] <author> Gabow, H.N., </author> <title> Efficient Splitting Off Algorithms for Graphs, </title> <booktitle> Proc. 26th Annual ACM Symp. on Theory of Comp., </booktitle> <year> 1994 </year>
Reference-contexts: Their ideas were improved by Frank [5] to the first polynomial time algorithm for this task. Another algorithm for the same problem (Naor et al [17]) uses the cactus representation as main tool. The recent fastest augmentation algorithms of Benczur [1] and Gabow <ref> [8] </ref> are based on the idea of using the cactus, respectively the splitting theorems. It is open whether our representation can improve on any of these algorithms. One idea could be to accelerate algorithms by using our representation instead of the cactus.
Reference: [9] <author> Karger, </author> <title> D.R., Global Min-cuts in RNC, and Other Ramifications of a Simple Min-Cut Algorithm, </title> <booktitle> Proc. of 4th Symposium on Discrete Algorithms, </booktitle> <year> 1993 </year>
Reference-contexts: From the cactus representation this bound is derived for minimum cuts; it is tight as the example of a cycle on n vertices shows. For this special ff, our result is an improvement on the general result of Karger <ref> [9] </ref> showing that the number of cuts within an arbitrary factor ff &gt; 1 is O (n 2ff ). Very recently, Nagamochi et al [16] proved that the number of cuts within ff = 4=3 is also O (n 2 ), but they do not have a structural result.
Reference: [10] <author> Karger, D.R. and Stein, </author> <title> An ~ O(n 2 ) Algorithm for Minimum Cuts, </title> <booktitle> Proc. 25th Annual ACM Symp. on Theory of Comp., </booktitle> <year> 1993 </year> <month> 757-765 </month>
Reference-contexts: The theorems of Lovasz and Mader prove only existence of such pairs. In Frank's augmentation algorithm [5] splittable pairs are found only by (quite time-consuming) flow algorithms. On the other hand the algorithm of Karger and Stein <ref> [10] </ref> suggests that finding the mincuts or even all near-minimum cuts might be fundamentally easier than to solve the maximum flow problem. <p> Unfortunately, our proof for the representation does not yield an efficient algorithm. Can one extend, say, the cactus algorithm of Karzanov and Timofeev [11] to do it? There might be a hope for a fast algorithm, since the randomized algorithm of Karger and Stein <ref> [10] </ref> finds all cuts within capacity 6/5 times the minimum in time ~ O (n 2:4 ). But this is not all the bad news about the algorithmic aspects of our theorem.
Reference: [11] <author> Karzanov, </author> <title> A.V., E.A. Timofeev, Efficient Algorithms for Finding all Minimal Edge Cuts of a Nonori-ented Graph, </title> <journal> Cybernetics 156-162, </journal> <note> translated from Kibernetika 2 (1986) 8-12 </note>
Reference-contexts: Note however that for a given partition of the cycle there is not necessarily a corresponding near-minimum cut. Unfortunately, our proof for the representation does not yield an efficient algorithm. Can one extend, say, the cactus algorithm of Karzanov and Timofeev <ref> [11] </ref> to do it? There might be a hope for a fast algorithm, since the randomized algorithm of Karger and Stein [10] finds all cuts within capacity 6/5 times the minimum in time ~ O (n 2:4 ).
Reference: [12] <author> Lehel, J., F. Maffray and M. Preissmann, </author> <title> Graphs with maximal munber of minimum cuts, </title> <type> Technical report RR 880-M, </type> <institution> Grenoble (1992) </institution>
Reference-contexts: Very recently, Nagamochi et al [16] proved that the number of cuts within ff = 4=3 is also O (n 2 ), but they do not have a structural result. For results concerning the number of cuts with (in some other sense) small capacities, see also <ref> [12] </ref> and [19]. Note that apart from the cactus theorem [3], ours is the only such result providing a structure of small cuts as well. We review the basic properties of the cactus representation [3] of all mincuts of an undirected graph. <p> In a slightly different framework, the P -Q tree approach to the cactus representation is due to <ref> [12] </ref>. 3 Properties of near minimum cuts We begin to investigate connected components of the cross graph of near-minimum cuts. In the case of the cactus representation, crossing mincuts have a very simple structure, namely all of their four intersections have minimum degree as well. <p> We also note that combs are the configurations excluded in interval systems; excluding combs and considering interval systems is the main idea of the cactus proof in Lehel et al <ref> [12] </ref>. Lemma 3.2. Let C 1 , C 2 and C 3 be three extreme sets.
Reference: [13] <author> Lovasz, L., </author> <booktitle> lecture, Conference on Graph Theory , 1974, </booktitle> <publisher> Prague; North-Holland, </publisher> <address> Amsterdam, </address> <year> 1979 </year>
Reference-contexts: 1 Introduction Dinits et al [3] gave a concise cactus representation of all mincuts of an undirected graph. In this paper we extend this result to cuts with higher capacity. The following theorem of Lovasz <ref> [13] </ref> (see also [14], Problem 6.53) and Mader [15] was our main motivation to investigate the structure of minimum and minimum+1 cuts. <p> Thus d (C) d (C; C " C ) + d (C; C " C ) + d (C; s) by Lemma 4.1 and (flfl), a contradiction. 7 The Splitting Theorem In this section we give a new proof for Lovasz' Splitting Lemma <ref> [13] </ref>, [15] in a slightly generalized form. Splitting a pair of edges incident to s, us and vs, say, means replacing us and vs by a single edge uv. <p> Our theorem is weaker since we require the connectivity to be at least 6. Mader [15] (and later Frank [4]) has a strengthening of Lovasz' result <ref> [13] </ref> by showing that there is a splitting which preserves the local connectivity between all pairs of nodes (not only the global Near-minimum cuts 16 v v v v v v .. ........ .... ... ... .. .. .. . .. .. . .. . . .. . . . ..
Reference: [14] <author> Lovasz, L., </author> <title> Combinatorial Problems and Exercises, Problems 6.51-54, </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1979 </year>
Reference-contexts: 1 Introduction Dinits et al [3] gave a concise cactus representation of all mincuts of an undirected graph. In this paper we extend this result to cuts with higher capacity. The following theorem of Lovasz [13] (see also <ref> [14] </ref>, Problem 6.53) and Mader [15] was our main motivation to investigate the structure of minimum and minimum+1 cuts. <p> Both the splitting theorem and the cactus representation is a useful tool in graph theory as well as in designing algorithms. Applications of the splitting theorem include composition rules for k-edge connected graphs [15] and the theorem of Nash-Williams for orienting 2k-connected graphs to k-connected digraphs (Problem 6.54 in <ref> [14] </ref>). Cai and Sun [2] applied splittings for augmenting undirected edge-connectivity by adding optimum number of edges to the graph. Their ideas were improved by Frank [5] to the first polynomial time algorithm for this task.
Reference: [15] <author> Mader, W., </author> <title> A reduction method for edge-connectivity in graphs, </title> <journal> Annales Discr. Math. </journal> <month> 3 </month> <year> (1978) </year> <month> 145-164 </month>
Reference-contexts: 1 Introduction Dinits et al [3] gave a concise cactus representation of all mincuts of an undirected graph. In this paper we extend this result to cuts with higher capacity. The following theorem of Lovasz [13] (see also [14], Problem 6.53) and Mader <ref> [15] </ref> was our main motivation to investigate the structure of minimum and minimum+1 cuts. <p> Both the splitting theorem and the cactus representation is a useful tool in graph theory as well as in designing algorithms. Applications of the splitting theorem include composition rules for k-edge connected graphs <ref> [15] </ref> and the theorem of Nash-Williams for orienting 2k-connected graphs to k-connected digraphs (Problem 6.54 in [14]). Cai and Sun [2] applied splittings for augmenting undirected edge-connectivity by adding optimum number of edges to the graph. <p> Thus d (C) d (C; C " C ) + d (C; C " C ) + d (C; s) by Lemma 4.1 and (flfl), a contradiction. 7 The Splitting Theorem In this section we give a new proof for Lovasz' Splitting Lemma [13], <ref> [15] </ref> in a slightly generalized form. Splitting a pair of edges incident to s, us and vs, say, means replacing us and vs by a single edge uv. <p> Provided = ! + 1 (which is the original form of the Splitting Theorem), our condition on d (s) is the same as in earlier results (which is the necessary condition [4]). Our theorem is weaker since we require the connectivity to be at least 6. Mader <ref> [15] </ref> (and later Frank [4]) has a strengthening of Lovasz' result [13] by showing that there is a splitting which preserves the local connectivity between all pairs of nodes (not only the global Near-minimum cuts 16 v v v v v v .. ........ .... ... ... .. .. .. .
Reference: [16] <author> Nagamochi H., K. Nishimara and T. Ibaraki, </author> <title> A tight upper bound on the number of small cuts in undirected graphs, </title> <booktitle> Proceedings of ISAAC Beijing , 1994, to appear in Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag </publisher>
Reference-contexts: For this special ff, our result is an improvement on the general result of Karger [9] showing that the number of cuts within an arbitrary factor ff &gt; 1 is O (n 2ff ). Very recently, Nagamochi et al <ref> [16] </ref> proved that the number of cuts within ff = 4=3 is also O (n 2 ), but they do not have a structural result. For results concerning the number of cuts with (in some other sense) small capacities, see also [12] and [19].
Reference: [17] <author> Naor, D., D. Gusfield, Ch. Martel, </author> <title> A fast algorithm for optimally increasing the edge connectivity, </title> <booktitle> Proc. 31st Annual IEEE Symposium on Foundations of Comp. Sci., </booktitle> <year> 1990, </year> <pages> 698-707 </pages>
Reference-contexts: Cai and Sun [2] applied splittings for augmenting undirected edge-connectivity by adding optimum number of edges to the graph. Their ideas were improved by Frank [5] to the first polynomial time algorithm for this task. Another algorithm for the same problem (Naor et al <ref> [17] </ref>) uses the cactus representation as main tool. The recent fastest augmentation algorithms of Benczur [1] and Gabow [8] are based on the idea of using the cactus, respectively the splitting theorems. It is open whether our representation can improve on any of these algorithms.
Reference: [18] <author> Naor, D. and V. Vazirani, </author> <title> Representing and enumerating edge connectivity cuts in RNC, </title> <booktitle> Proc. Second Workshop on Algorithms and Data Structures 1991, Lecture Notes in Computer Science 519, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 273-285 </pages>
Reference-contexts: The cactus representation [3] represents all minimum cuts, or in other words all sets with minimum degree. Let us consider one class of the system of these sets. Such a class is described by the cyclic partition lemma [3] <ref> [18] </ref>, which in our terms states that the atoms of the class have a natural cyclic order. The tree structure can thus be viewed as a P -Q-tree as follows.
Reference: [19] <author> Vazirani, V. and M. Yannakakis, </author> <title> Suboptimal cuts: Their enumeration, weight, and number, </title> <booktitle> 19th International Colloquium on Automata, Languages and programming 1992, Lecture Notes in Computer Science 623, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 366-377 </pages>
Reference-contexts: Very recently, Nagamochi et al [16] proved that the number of cuts within ff = 4=3 is also O (n 2 ), but they do not have a structural result. For results concerning the number of cuts with (in some other sense) small capacities, see also [12] and <ref> [19] </ref>. Note that apart from the cactus theorem [3], ours is the only such result providing a structure of small cuts as well. We review the basic properties of the cactus representation [3] of all mincuts of an undirected graph.
References-found: 19

