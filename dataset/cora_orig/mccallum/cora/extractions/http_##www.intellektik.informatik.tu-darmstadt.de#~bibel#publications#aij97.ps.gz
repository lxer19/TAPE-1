URL: http://www.intellektik.informatik.tu-darmstadt.de/~bibel/publications/aij97.ps.gz
Refering-URL: http://www.intellektik.informatik.tu-darmstadt.de/~bibel/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Let's plan it deductively!  
Author: W. Bibel 
Date: January 19, 1998  
Address: Germany  
Affiliation: Technische Universit at Darmstadt,  
Abstract: The paper describes a transition logic, TL, and a deductive formalism for it. It shows how various important aspects (such as ramification, qualification, specificity, simultaneity, indeterminism etc.) involved in planning can be modelled in TL in a rather natural way. (The deductive formalism for) TL extends the linear connection method proposed earlier by the author by embedding the latter into classical logic, so that classical and resource-sensitiv reasoning coexist within TL. The attraction of a logical and deductive approach to planning (or to reasoning about action and causality) is emphasized and the state of automated deduction briefly described.
Abstract-found: 1
Intro-found: 1
Reference: [AB75] <author> A.R. Anderson and N.D. Belnap, Jr. </author> <title> Entailment: The Logic of Relevance and Necessity, volume 1. </title> <publisher> Princeton University Press, </publisher> <address> Princeton NJ, </address> <year> 1975. </year>
Reference-contexts: In summary, although TL is a 2 Only later it became clear that [Lam58] as well as relevance logic <ref> [AB75] </ref> are important predecessors of LCM as of linear logic. 3 On the other hand we dispense for the discussion in this section with the restriction on the formula structure introduced at the beginning of Section 4. 4 Note that we did not follow the unintuitive notation used in LL: TL's
Reference: [Agr95] <author> P. Agre. </author> <title> Computational research on interaction and agency. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 72(1-2):1-52, </volume> <year> 1995. </year>
Reference-contexts: Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science). Different points of view for approaching the goal of creating artificial intelligence have been distinguished [Kus96]. Logicism [Nil91], cognitivism [LNR87], and situated action <ref> [Agr95] </ref> are three out of several such points of view.
Reference: [BBER94] <author> W. Bibel, S. Br uning, U. Egly, and T. Rath. </author> <title> Towards an adequate theorem prover based on the connection method. </title> <editor> In I. Plander, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Artificial Intelligence and Information-Control of Robots, </booktitle> <pages> pages 137-148. </pages> <publisher> World Scientific Publishing Company, </publisher> <year> 1994. </year> <month> 21 </month>
Reference-contexts: From a technological point of view systems such as SETHEO [MIL + 97] or Ko M eT <ref> [BBER94] </ref> have even an advantage over Otter (in the case of SETHEO demonstrated by its first place in the ATP competition 20 during CADE-96) and have thus the potential for more such striking results.
Reference: [BdCFH89] <author> W. Bibel, L. Farinas del Cerro, B. Fronh ofer, and A. Herzig. </author> <title> Plan generation by linear proofs: On semantics. </title> <editor> In D. Metzing, editor, </editor> <booktitle> Proceedings GWAI'89, </booktitle> <pages> pages 49-62, </pages> <address> Berlin, 1989. </address> <publisher> Springer. </publisher>
Reference-contexts: In Section 3 as well as in <ref> [BdCFH89] </ref> the direct route has been taken. Informally, we may think of a Kripke-style semantics with an actual and further worlds.
Reference: [BF95] <author> Avrim L. Blum and Merrick L. Furst. </author> <title> Fast planning through planning graph analysis. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1636-1642, </pages> <address> San Mateo, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Note that no specialization to planning whatsoever is encoded in this approach. Similarly, but even more impressively, [KS96] coded one of the best specialized planning systems, Graphplan <ref> [BF95] </ref>, as a propositional satisfiable problem which is then solved by one of the best complete satisfiability algorithms, TABLEAU [CA93], or, alternatively, by the authors' Walksat, a stochastic local search algorithm for solving general SAT problems. The experiments outperform any known planning system again by several orders of magnitude.
Reference: [BGH + 92] <author> Stefan Br uning, Gerd Groe, Steffen H olldobler, Josef Schneeberger, Ute Sigmund, and Michael Thielscher. </author> <title> Disjunction in plan generation by equational logic programming. </title> <editor> In A. Horz, editor, </editor> <booktitle> Beitr age zum 7. Workshop Planen und Konfigurieren, </booktitle> <pages> pages 18-26, </pages> <address> St. Augustin, Germany, </address> <year> 1992. </year> <type> GI, </type> <institution> Arbeitspapiere der GMD 723 </institution> . 
Reference-contexts: The generalized definition of the linearity restriction just presented also covers the case of disjunction j, which has been the topic of the publications <ref> [GHS + 92, BGH + 92, BHS + 93b] </ref> where a different solution based on the restriction in its original form has been offered. We illustrate our solution for the formula (P j Q) & (P ) R) & (Q ) R) ! R with the following matrix.
Reference: [BHS93a] <author> Wolfgang Bibel, Steffen H olldobler, and Torsten Schaub. </author> <title> Wissensrepr asentation und Inferenz. </title> <publisher> Vieweg Verlag, </publisher> <address> Brauschweig, </address> <year> 1993. </year>
Reference-contexts: Switches can be brocken, circuits cut, light bulbs be damaged, and so forth. How to deal with this infinity of possibilities is known as the qualification problem [McC77]. There is a rich literature on non-monotonic reasoning coping with this problem <ref> [BHS93a] </ref>. TL opens a new way to deal with the problem. Why not using tweety again to illustrate it. Tweety is a bird (Bt) as well as a penguin (Pt). Birds fly (F ) and have wings (W ). <p> As the example demonstrates, TL is able to model such examples to some extent. In a more elaborate approach one would have to integrate probabilities and possibilities into TL the way already achieved for classical logic (see Section 4.4 in <ref> [BHS93a] </ref> for more details and references). A particularly attractive approach for doing this has been described in [Poo93, Poo97]. Nature is more predictable than other agents such as human beings where probabilities might not help either. Here we must take into account even contradictory actions.
Reference: [BHS + 93b] <author> Stefan Br uning, Steffen H olldobler, Josef Schneeberger, Ute Sigmund, and Michael Thielscher. </author> <title> Disjunction in resource-oriented deductive planning. </title> <editor> In D. Miller, editor, </editor> <booktitle> Proceedings of the International Logic Programming Symposium (ILPS), </booktitle> <pages> page 670, </pages> <address> Cambridge MA, 1993. </address> <publisher> MIT Press. Postersession. </publisher>
Reference-contexts: The generalized definition of the linearity restriction just presented also covers the case of disjunction j, which has been the topic of the publications <ref> [GHS + 92, BGH + 92, BHS + 93b] </ref> where a different solution based on the restriction in its original form has been offered. We illustrate our solution for the formula (P j Q) & (P ) R) & (Q ) R) ! R with the following matrix.
Reference: [Bib86a] <author> W. Bibel. </author> <title> A deductive solution for plan generation. </title> <journal> New Generation Computing, </journal> <volume> 4 </volume> <pages> 115-132, </pages> <year> 1986. </year>
Reference-contexts: A (static) mathematical sentence (such as "if a prime number is greater than two then it is odd") looks exactly like a (dynamic) one about actions (such as "if the switch is off and I turn it then it is on"). In <ref> [Bib86a] </ref> the main idea for a logic has been outlined which resembles natural language more closely in this aspect of treating actions than does the situation calculus. <p> In the latter matrix each literal is contained in at most one connection while in the former this linearity restriction in its original form <ref> [Bib86a] </ref>) is not satisfied because the literal :P is contained in more than one, namely in two connections. To cover the general case considered in the present paper this linearity restriction needs a more general definition. <p> The solution presented here and illustrated with these examples informally was already given in <ref> [Bib86a] </ref> where it reads: "the linearity restriction applies to connections with one element in a transition rule only, not to those possibly required for additional `static' reasoning in the usual way". <p> So our logic and its deductive machinery are fully appropriate for solving planning tasks of the sort considered so far. In certain contexts one might expect an explicit answer, ie. a concrete plan. For that purpose <ref> [Bib86a] </ref> introduced state literals, S (x), which keep trace of the states passed through while executing a plan. This also requires that an action rule such as the suicide killing rule above would read S (x) & P ) S (suicide (x)) & :P .
Reference: [Bib86b] <author> W. Bibel. </author> <title> A deductive solution for plan generation. </title> <editor> In J. W. Schmidt and C. Tha-nos, editors, </editor> <booktitle> Foundations of Knowledge Base Management, </booktitle> <pages> pages 413-436, </pages> <address> Crete, </address> <year> 1986. </year>
Reference-contexts: Otherwise the section compares TL with several related formalisms. 6.1 TL and LL A very close relative of TL is linear logic [Gir87] which was first published about two years after the first publication of LCM <ref> [Bib86b] </ref>, predecessor and part of TL. 2 We briefly summarize what is known about the relationship of TL with linear logic (LL).
Reference: [Bib87] <author> W. Bibel. </author> <title> Automated Theorem Proving. </title> <publisher> Vieweg Verlag, </publisher> <address> Braunschweig, 2. edition, </address> <year> 1987. </year>
Reference-contexts: Section 6 will resume the discussion of the semantics of TL while in the next section we focus on its deductive aspects. 4 4 Basic deductive machinery As the original name of our approach, linear connection method (LCM), suggests, the basic deductive machinery is based on the connection method <ref> [Bib93, Bib87] </ref>. This deductive method is characterized by the fundamental theorem which in turn characterizes validity of a formula by the so-called spanning property explained shortly. Many different logical calculi can be based on this method. <p> Since none of our examples will need compound instances we refer to the ATP literature for the respective details (eg. see <ref> [Bib87] </ref>). Nor has any of our examples cycles. Therefore we also ignore this technically intricate issue and refer the interested reader to [Fro96] for the details. Let us briefly discuss the rationale behind the definition of r-compatibility in order to get a better understanding of the linearity restriction.
Reference: [Bib92a] <editor> W. Bibel. Intellectics. In S. C. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence. </booktitle> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Artificial Intelligence (AI, or Intellectics <ref> [Bib92a] </ref>) aims at creating artificial (or computational [PMG98]) intelligence. Were there no natural intelligence, the sentence would be meaningless to us. Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science).
Reference: [Bib92b] <author> W. Bibel. </author> <title> Towards predicative programming. </title> <editor> In Michael R. Lowry and Robert Mc-Cartney, editors, </editor> <booktitle> Automating Software Design, </booktitle> <pages> pages 405-423. </pages> <publisher> AAAI Press, </publisher> <address> Menlo Park CA, </address> <year> 1992. </year>
Reference-contexts: This way many people may contribute their knowledge in the most natural form into a common system which would then be synthesized from the joint specification in a rather formal (ie. again logical) manner <ref> [Bib92b] </ref>. Section 7 demonstrates a bit of the conjunctive nature of logic since there we have drawn from knowledge in a number of different areas of intellectics. Synthesis just brought into the picture is an important part of the vision outlined here.
Reference: [Bib93] <author> W. Bibel. </author> <title> Deduction: Automated Logic. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1993. </year>
Reference-contexts: Section 6 will resume the discussion of the semantics of TL while in the next section we focus on its deductive aspects. 4 4 Basic deductive machinery As the original name of our approach, linear connection method (LCM), suggests, the basic deductive machinery is based on the connection method <ref> [Bib93, Bib87] </ref>. This deductive method is characterized by the fundamental theorem which in turn characterizes validity of a formula by the so-called spanning property explained shortly. Many different logical calculi can be based on this method. <p> As an aside it is mentioned in the context of this example that fragments of r-chains such as ((:P 0 ; P 0 ); (:P; P )) may be regarded as theory connections <ref> [Bib93] </ref>. 8 A more complex example derived from the previous one, namely R ^ (R ! (P 0 ! P )) ^ (R ! (Q 0 ! Q) ! [P 0 & (P ) Q) ! Q 0 ] yields the following proof. <p> In particular if a causal link is the only one to achieve a certain subgoal then we have exactly what in automated deduction is known under the term ISOL reduction <ref> [Bib93] </ref>. Since reductions are not reconsidered in any deductive system, link protection is taken care there automatically. 18 Hierarchical planning is of crucial importance for successful applications. In our view it is a matter of structuring the knowledge base containing action descriptions and of controlling the deduction engine.
Reference: [Br u97] <author> Stefan Br uning. </author> <title> Globally linear connection method. </title> <journal> New Generation Computing Journal, </journal> <volume> 15 </volume> <pages> 369-402, </pages> <year> 1997. </year>
Reference: [BT97] <author> Sven-Erik Bornscheuer and Michael Thielscher. </author> <title> Explicit and implicit indeterminism: Reasoning about uncertain and contradictory specifications of dynamic systems. </title> <journal> J. of Logic Programming, </journal> <volume> 31(1-3):119-156, </volume> <year> 1997. </year>
Reference-contexts: If the persons do not lift the table simultaneously, the glasses will fall down and break. How could an appropriate timing be achieved in TL? Similarly as in <ref> [BT97] </ref> we introduce a compound transition rule A 1 x & A 2 x ) B 1 x & B 2 x for any two (atomic or compound) transition rules A i x ) B i x, i = 1; 2. <p> In fact we may even teach the system to consider either outcome of the conclusion in such a case (cf. also <ref> [BT97] </ref>). In modeling agents in their decision behavior we have further to include utilities. Influence diagrams [PMG98] are general means for this purpose.
Reference: [CA93] <author> James M. Crawford and Larry D. Auton. </author> <title> Experimental results on the crossover point in satisfiability problems. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 21-27, </pages> <address> Menlo Park, CA, 1993. </address> <publisher> AAAI Press. </publisher> <pages> 22 </pages>
Reference-contexts: Note that no specialization to planning whatsoever is encoded in this approach. Similarly, but even more impressively, [KS96] coded one of the best specialized planning systems, Graphplan [BF95], as a propositional satisfiable problem which is then solved by one of the best complete satisfiability algorithms, TABLEAU <ref> [CA93] </ref>, or, alternatively, by the authors' Walksat, a stochastic local search algorithm for solving general SAT problems. The experiments outperform any known planning system again by several orders of magnitude. Note that this performance again is achieved by general logical systems which were used for a variety of other purposes.
Reference: [Cra92] <author> Stephen J. S. Cranefield. </author> <title> A logical framework for practical planning. </title> <booktitle> In Proceedings of the Tenth European Conference on Artificial Intelligence (ECAI-92), </booktitle> <pages> pages 633-637, </pages> <address> London, UK, 1992. </address> <publisher> Wiley. </publisher>
Reference-contexts: More details on FC can be found eg. in [Thi97b]. A different but closely related approach can be found in <ref> [Cra92] </ref>. The main advantage of FC is that it has a standard classical semantics [Thi97a]. Further, the resulting programs can be run by any equational PROLOG system. It is not clear at this point whether these advantages outweigh the potential disadvantages of a representational and computational nature.
Reference: [EHT96] <author> Kerstin Eder, Steffen H olldobler, and Michael Thielscher. </author> <title> An abstract machine for reasoning about situations, actions, and causality. </title> <editor> In R. Dyckhoff, H. Herre, and P. Schroeder-Heister, editors, </editor> <booktitle> Proceedings of the International Workshop on Extensions of Logic Programming (ELP), </booktitle> <pages> pages 137-151, </pages> <address> Berlin, Germany, 1996. </address> <publisher> Springer, LNAI 1050 </publisher> . 
Reference-contexts: A related solution has been worked out for FC in <ref> [EHT96] </ref>. In dynamic environments any plan is bound to fail to some extent. It is therefore essential to be able to react to such failure with efficient replanning. This requires among other things a technique for the manipulation of partial plans [Lin97, WMLW94].
Reference: [FN71] <author> R. E. Fikes and N. J. Nilsson. </author> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 2 </volume> <pages> 189-208, </pages> <year> 1971. </year>
Reference-contexts: a slight difference between the linearity restriction used in the present paper and the corresponding restriction in Theorem 35 of [Fro96] as the latter uses the restriction in its original form (mentioned in Section 4). 6.2 TL and STRIPS Many planning systems are based on the STRIPS formalism introduced in <ref> [FN71] </ref>. This uses operators defined by schemas using precondition, add, and delete lists. As an example consider the following move-operator in a blocks world.
Reference: [Fre79] <author> Gottlob Frege. Begriffsschrift. Louis Nebert, Halle, </author> <month> 1879. </month>
Reference-contexts: The latter need explanations which follow. The language of predicate logic has been designed to express natural language sentences formally and unambiguously. This was done in a biased way since many of those involved in the design (such as Frege <ref> [Fre79] </ref>) had mainly sentences of a mathematical nature in mind.
Reference: [Fro87] <author> Bertram Fronh ofer. </author> <title> Linearity and plan generation. </title> <journal> New Generation Computing, </journal> <volume> 5 </volume> <pages> 213-225, </pages> <year> 1987. </year>
Reference: [Fro96] <author> Bertram Fronh ofer. </author> <title> The Action-as-Implication Paradigm. </title> <publisher> CS Press, </publisher> <address> M unchen, </address> <year> 1996. </year>
Reference-contexts: L i , and the start literal of c i+1 , ie. L i+1 , are literals in the same (top level) clause of M but do not occur in one and the same path through M , ie. they are vertically related <ref> [Fro96] </ref>. A cycle is a chain such that also its start literal L 1 , ie. the start literal of c 1 , and its end literal L n are vertically 1 Note that directionality is related to, but not the same as, polarity. 7 related in this sense. <p> We just mention here that the definitions aim at yielding the fundamental theorem according to which a formula F is valid if (some compound instance F 0 of) F has a spanning and unifiable mating which satisfies the linearity restriction and has no (regular <ref> [Fro96] </ref>) cycles within any of M 's r-parts. Since none of our examples will need compound instances we refer to the ATP literature for the respective details (eg. see [Bib87]). Nor has any of our examples cycles. <p> Since none of our examples will need compound instances we refer to the ATP literature for the respective details (eg. see [Bib87]). Nor has any of our examples cycles. Therefore we also ignore this technically intricate issue and refer the interested reader to <ref> [Fro96] </ref> for the details. Let us briefly discuss the rationale behind the definition of r-compatibility in order to get a better understanding of the linearity restriction. The literals in a chain with an odd index are those of a "resource nature". <p> For that purpose we restrict the language of TL to its r-formulas only and refer as rTL (or LCM for that matter) to this restricted part of TL. 3 Further we consider only r-formulas without j and refer to crTL to this part of TL. Theorem 35 in <ref> [Fro96] </ref> states (among other things) that crTL and the multiplicative part of LL with the exchange and the weakening rule, also known as (classical) BCK [Res94] (or affine logic), amount to the same thing (in terms of derivability). A similar result was obtained in [GHS96]. <p> To <ref> [Fro96] </ref> we owe much of the formal background. For instance, its Chapter 3 provides a formal justification of our use of the matrix representation (for crTL at any rate). <p> For instance, its Chapter 3 provides a formal justification of our use of the matrix representation (for crTL at any rate). There is a slight difference between the linearity restriction used in the present paper and the corresponding restriction in Theorem 35 of <ref> [Fro96] </ref> as the latter uses the restriction in its original form (mentioned in Section 4). 6.2 TL and STRIPS Many planning systems are based on the STRIPS formalism introduced in [FN71]. This uses operators defined by schemas using precondition, add, and delete lists. <p> The transition Result (s; a; s 0 ) from the state s to the state s 0 caused by the action a is represented by the following formula. Action (c; a; e) ^ c ffi z = s ^ s 0 = z ffi e 5 Section 8.2 in <ref> [Fro96] </ref> gives examples which demonstrate that the correspondence is not an exact one. 12 Note the variable z summarizing the part of the state not affected by the action. <p> One of the main attractions of all formalisms mentioned so far (ie. LCM, TL, LL, STRIPS, FC) is that no such additional axioms are needed at all which clearly impede the efficiency of any implementation of the situation calculus. For a more detailed comparative analysis of this drawback see <ref> [Fro96] </ref>. Given that planning occurs in time it is not surprising that temporal or dynamic logics offer the potential for formalizing planning. One such approach for reasoning about plans and its properties (ie. not for planning itself) using dynamic logic is reported in [SB93]. <p> Before concluding this paper we give pointers to impressive results of a different sort from the area of planning. Section 8.3 in <ref> [Fro96] </ref> describes a simple and straightforward implementation of crTL on top of SETHEO, called linear backward chainer (LBC). The performance of LBC/SETHEO is then compared there with a widely used specialized planning system, UCPOP [PW92].
Reference: [Gal91] <author> J. Gallier. </author> <title> Constructive logics. Part II: Linear logic and proof nets. </title> <institution> Research Report PR2-RR-9, Digital Equipment Corporation, Paris, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: In other words, TL and LL more or less coincide in their multiplicative parts so that crTL may inherit its semantics from LL <ref> [Gal91] </ref>. 4 Although it has not been shown in detail, it is conjectured that these results may be generalized to rTL. In fact, LL is as expressive as TL since classical logic can be embedded in LL [Gir87].
Reference: [GHS + 92] <author> Gerd Groe, Steffen H olldobler, Josef Schneeberger, Ute Sigmund, and Michael Thielscher. </author> <title> Equational logic programming, actions and change. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of the International Joint Conference and Symposium on Logic Programming, </booktitle> <pages> pages 177-191, </pages> <address> Cambridge MA, 1992. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The generalized definition of the linearity restriction just presented also covers the case of disjunction j, which has been the topic of the publications <ref> [GHS + 92, BGH + 92, BHS + 93b] </ref> where a different solution based on the restriction in its original form has been offered. We illustrate our solution for the formula (P j Q) & (P ) R) & (Q ) R) ! R with the following matrix.
Reference: [GHS96] <author> Gerd Groe, Steffen H olldobler, and Josef Schneeberger. </author> <title> Linear deductive planning. </title> <journal> Journal of Logic and Computation, </journal> <volume> 6(2) </volume> <pages> 233-262, </pages> <year> 1996. </year>
Reference-contexts: Theorem 35 in [Fro96] states (among other things) that crTL and the multiplicative part of LL with the exchange and the weakening rule, also known as (classical) BCK [Res94] (or affine logic), amount to the same thing (in terms of derivability). A similar result was obtained in <ref> [GHS96] </ref>. Its Theorem 4.1 states (among other things) that crTL and conjunctive linear theories as defined in [MTV90] on the basis of LL amount again to the same thing (in terms of derivability). <p> While appropriate interfaces for casual users may provide a remedy for this, researchers and programmers have still to work on this representational level. The already mentioned Theorem 4.1 in <ref> [GHS96] </ref> also states that crTL and the (conjunctive) fluent calculus just presented amount again to the same thing (in terms of derivability) thus indirectly providing a classical semantics to TL. Somehow one might be able to generalize the fluent calculus to model the full TL.
Reference: [Gir87] <author> J.-Y. Girard. </author> <title> Linear logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 50(1) </volume> <pages> 1-102, </pages> <year> 1987. </year>
Reference-contexts: In the next and the third subsection we describe two formalisms which were used for this purpose. Otherwise the section compares TL with several related formalisms. 6.1 TL and LL A very close relative of TL is linear logic <ref> [Gir87] </ref> which was first published about two years after the first publication of LCM [Bib86b], predecessor and part of TL. 2 We briefly summarize what is known about the relationship of TL with linear logic (LL). <p> In fact, LL is as expressive as TL since classical logic can be embedded in LL <ref> [Gir87] </ref>. On the other hand, we have proposed for practical purposes a much more restricted class of formulas both by the definition of the language of TL itself (no arbitrary nesting of classical and non-classical operators) and by the restriction of the formulas in its r-part (to a rule form).
Reference: [Gro96] <author> Gerd Groe. </author> <title> State Event Logic. </title> <type> PhD thesis, </type> <institution> Technical University Darmstadt, Darmstadt, Germany, </institution> <year> 1996. </year>
Reference-contexts: If for other applications we need to fix the time point of states occurring during the execution of an action, Ax ) Bx, we may break up and partition the action, for instance, into initial 17 situation, action event, and resultant situation, Ax ) Nx and Nx ) Bx <ref> [Gro96] </ref>. Thereby N is a unique n-ary predicate serving as the name of the event occurring during the action, and n is the number of variables involved in the rule. 7.5 Indeterminism Planning supports a more rational behavior. Yet it is a feature of life that much will remain unpredictable.
Reference: [GS88] <author> Matthew L. Ginsberg and David E. Smith. </author> <title> Reasoning about action I: A possible worlds approach. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 35(2) </volume> <pages> 165-195, </pages> <year> 1988. </year>
Reference-contexts: CP has been tested for a number of examples discussed in the literature, also for those where other methods have failed [Thi97b]. For instance, <ref> [GS88] </ref> handles already the given example incorrectly. The remedy suggested in [Lif90] is insufficient either, as the extended circuit depicted in Figure 2 demonstrates. The depicted state can formally be captured as :S 1 & S 2 & :S 3 & :R & :L.
Reference: [HS90] <author> S. H olldobler and J. Schneeberger. </author> <title> A new deductive approach to planning. </title> <journal> New Generation Computing, </journal> <volume> 8 </volume> <pages> 225-244, </pages> <year> 1990. </year>
Reference-contexts: In summary, crTL may be regarded as an approximate logical version of the STRIPS formalism. 5 In other words, TL inherits all advantages from STRIPS but as an additional feature it has also the expressiveness of classical logic. 6.3 TL and the fluent calculus In <ref> [HS90] </ref> a classical calculus, in the meantime named fluent calculus (FC), has been introduced, which represents the manipulations of actions on the term level of classical logic.
Reference: [HT93] <author> Steffen H olldobler and Michael Thielscher. </author> <title> Actions and specificity. </title> <editor> In D. Miller, editor, </editor> <booktitle> Proceedings of the International Logic Programming Symposium, </booktitle> <pages> pages 164-180, </pages> <year> 1993. </year>
Reference-contexts: Hx & Bx ) Fx & Dx . How should a system distinguish the two cases and correctly choose the latter action in the case of a glass in hand, ie. an initial state described by Hg & Bg? <ref> [HT93, HT95] </ref> give an easy solution for this problem which seems to work in many other occasions of a similar nature. If in a given state more than one rule applies, the control of the deductive system prefers the most specific one, referred to as the more-specific-has-priority, or SP, strategy.
Reference: [HT95] <author> Steffen H olldobler and Michael Thielscher. </author> <title> Computing change and specificity with equational logic programs. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 14 </volume> <pages> 99-133, </pages> <year> 1995. </year>
Reference-contexts: Hx & Bx ) Fx & Dx . How should a system distinguish the two cases and correctly choose the latter action in the case of a glass in hand, ie. an initial state described by Hg & Bg? <ref> [HT93, HT95] </ref> give an easy solution for this problem which seems to work in many other occasions of a similar nature. If in a given state more than one rule applies, the control of the deductive system prefers the most specific one, referred to as the more-specific-has-priority, or SP, strategy.
Reference: [HT96] <author> Christoph Herrmann and Michael Thielscher. </author> <title> Reasoning about continuous process-es. </title> <editor> In B. Clancey and D. Weld, editors, </editor> <booktitle> AAAI-96 | Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 639-644, </pages> <address> Palo Alto CA, 1996. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: In reality we have to cope with continuous processes while it seems that TL could cope with discrete actions only. Modelling continuous processes within a logic has become an active area of research though. One issue concerns the partitioning of such a process into reasonable discrete parts <ref> [HT96] </ref>. Another issue concerns the integration of differential equations and their computation within a logic such as TL. As a final point we mention that TL may also be seen as a logical version of an imperative programming language.
Reference: [KMS96] <author> Henry Kautz, David McAllester, and Bart Selman. </author> <title> Encoding plans in propositional logic. </title> <editor> In L. C. Aiello, J. Doyle, and S. Shapiro, editors, </editor> <booktitle> Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 374-384, </pages> <address> Cambridge, MA, 1996. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: In addition there are numerous variants of the formalisms mentioned so far. The most noteworthy of these in terms of performance is the SATPLAN system which encodes planning within the STRIPS formalism as a satisfiability problem in classical propositional logic <ref> [KMS96] </ref>. 7 Modelling action and causality Providing a deductive formalism for planning is one thing; a different is to show how it is used to model the various aspects underlying actions and causality.
Reference: [Kow79] <author> Robert Kowalski. </author> <title> Logic for Problem Solving. </title> <publisher> North-Holland, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: This is done in the tradition of representing the object-level of a calculus logically at the meta-level (see eg. <ref> [Kow79] </ref>), illustrated the following with the previous blocks example. Predicate symbols such as MOVE, CLEAR or ON become functional symbols, say mv , cl and on, respectively. The logical operation & is represented as a functional as well, say ffi.
Reference: [KS96] <author> Henry Kautz and Bart Selman. </author> <title> Pushing the envelope: Planning, propositional logic, and stochastic search. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 1194-1201, </pages> <address> Portland, OR, 1996. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: Note that no specialization to planning whatsoever is encoded in this approach. Similarly, but even more impressively, <ref> [KS96] </ref> coded one of the best specialized planning systems, Graphplan [BF95], as a propositional satisfiable problem which is then solved by one of the best complete satisfiability algorithms, TABLEAU [CA93], or, alternatively, by the authors' Walksat, a stochastic local search algorithm for solving general SAT problems.
Reference: [Kus96] <author> Nicholas Kushmerick. </author> <title> Cognitivism and situated action: Two views on intelligent agency. </title> <journal> Computers and Artificial Intelligence, </journal> <volume> 15(5) </volume> <pages> 393-417, </pages> <year> 1996. </year>
Reference-contexts: Were there no natural intelligence, the sentence would be meaningless to us. Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science). Different points of view for approaching the goal of creating artificial intelligence have been distinguished <ref> [Kus96] </ref>. Logicism [Nil91], cognitivism [LNR87], and situated action [Agr95] are three out of several such points of view.
Reference: [Lam58] <author> J. Lambek. </author> <title> The mathematics of sentence structure. </title> <journal> Am. Math. Monthly, </journal> <volume> 65, </volume> <year> 1958. </year>
Reference-contexts: In summary, although TL is a 2 Only later it became clear that <ref> [Lam58] </ref> as well as relevance logic [AB75] are important predecessors of LCM as of linear logic. 3 On the other hand we dispense for the discussion in this section with the restriction on the formula structure introduced at the beginning of Section 4. 4 Note that we did not follow the
Reference: [Lif90] <author> V. Lifschitz. </author> <title> Frames in the space of situations. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 46 </volume> <pages> 365-376, </pages> <year> 1990. </year>
Reference-contexts: CP has been tested for a number of examples discussed in the literature, also for those where other methods have failed [Thi97b]. For instance, [GS88] handles already the given example incorrectly. The remedy suggested in <ref> [Lif90] </ref> is insufficient either, as the extended circuit depicted in Figure 2 demonstrates. The depicted state can formally be captured as :S 1 & S 2 & :S 3 & :R & :L. <p> Closing S 1 in the current state causes light (rather than S 2 ) to open which suggests that S 2 be a frame fluent in the sense of <ref> [Lif90] </ref>. On the other hand, closing S 3 in the state depicted in the figure results in an activation of the relay and, in consequence, in S 2 opening which suggests that it be a non-frame fluent. In other words, Lifschitz' categorization of fluents does not work in this example.
Reference: [Lin97] <author> Matthias Lindner. </author> <title> Interactive Planning for the Assistance of Human Agents. </title> <type> PhD thesis, Techn. </type> <institution> University Darmstadt, Germany, </institution> <month> forthcoming </month> <year> 1997. </year>
Reference-contexts: In dynamic environments any plan is bound to fail to some extent. It is therefore essential to be able to react to such failure with efficient replanning. This requires among other things a technique for the manipulation of partial plans <ref> [Lin97, WMLW94] </ref>. Autonomous agents need to carry out their planning under strict time constraints. A logical solution for this particular problem has been proposed in [NKP94] which could be adapted to TL.
Reference: [LNR87] <author> J. E. Laird, A. Newell, and P. S. Rosenbloom. </author> <title> SOAR: An architecture for general intelligence. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 33(1) </volume> <pages> 1-64, </pages> <year> 1987. </year>
Reference-contexts: Were there no natural intelligence, the sentence would be meaningless to us. Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science). Different points of view for approaching the goal of creating artificial intelligence have been distinguished [Kus96]. Logicism [Nil91], cognitivism <ref> [LNR87] </ref>, and situated action [Agr95] are three out of several such points of view.
Reference: [LR97] <author> Fangzhen Lin and Ray Reiter. </author> <title> Rules as actions: A situation calculus semantics for logic programs. </title> <journal> The Journal of Logic Programming, </journal> <volume> 31(1-3):299-330, </volume> <year> 1997. </year>
Reference-contexts: For instance, destructive assignment x := t may be modelled as the transition rule 9y cont (x; y) ) cont (x; t), an attractive potential of TL (or some of its cousins) as a future logic programming language. Some step into such a direction has already been made in <ref> [LR97] </ref>. 8 The case for logic Intellectics as well as computer science are general disciplines whose generic methods turn out to be applicable in many different areas. For instance, expert system technology has successfully been used in a great variety of applications.
Reference: [LSBB92] <author> Reinhold Letz, Johannes Schumann, Stephan Bayerl, and Wolfgang Bibel. </author> <title> SE-THEO | A high-performance theorem prover for first-order logic. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 8(2) </volume> <pages> 183-212, </pages> <year> 1992. </year>
Reference-contexts: Since the methods and systems growing out of our work have finally achieved a leading position in the deduction community by winning the CADE-96 competition in automated theorem proving with the SE-THEO system <ref> [LSBB92, MIL + 97] </ref>, we are perhaps also well placed to import the best possible techniques into the planning community. In other words, the paper will focus on deductive planning as well as on the underlying deduction techniques.
Reference: [McC77] <editor> John McCarthy. </editor> <booktitle> Epistemological problems of artificial intelligence. In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1038-1044, </pages> <address> Cambridge, CA, 1977. </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: In reality this assumption often depends on numerous conditions, too many in fact to be checked in detail. Switches can be brocken, circuits cut, light bulbs be damaged, and so forth. How to deal with this infinity of possibilities is known as the qualification problem <ref> [McC77] </ref>. There is a rich literature on non-monotonic reasoning coping with this problem [BHS93a]. TL opens a new way to deal with the problem. Why not using tweety again to illustrate it. Tweety is a bird (Bt) as well as a penguin (Pt).
Reference: [McC96] <author> William McCune. </author> <title> Robbins algebras are boolean. </title> <journal> Association for Automated Reasoning Newsletter, </journal> <volume> 35 </volume> <pages> 1-3, </pages> <year> 1996. </year>
Reference-contexts: Among these the success of the system EQP/Otter stands out which automatically found a proof for the conjecture that any Robbins algebra is Boolean, a widely discussed mathematical problem which was open for more than sixty years <ref> [McC96] </ref>.
Reference: [MH69] <author> John McCarthy and Patrick Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <volume> vol. 4, </volume> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year>
Reference-contexts: This was done in a biased way since many of those involved in the design (such as Frege [Fre79]) had mainly sentences of a mathematical nature in mind. Sentences involving actions were not taken into serious consideration until the publication of the situation calculus in 1969 <ref> [MH69] </ref> in which any n-ary relation P is extended to an (n + 1)-ary one by an extra argument for denoting the situation in which the relation is meant to hold (see Section 6.4). Natural language apparently does not need such an extra vehicle for serving the same purpose. <p> For decades formalisms for planning were plagued by the notorious frame problem <ref> [MH69] </ref>: how to characterize the "frame" of an action, ie. everything not affected by the action. <p> Somehow one might be able to generalize the fluent calculus to model the full TL. Future practice has to determine which of the two will eventually prevail. 6.4 Situation calculus and others The most popular formalism for representing actions is clearly the situation calculus <ref> [MH69] </ref> described in any standard AI book such as [RN94].
Reference: [MIL + 97] <author> M. Moser, O. Ibens, R. Letz, J. Steinbach, C. Goller, J. Schumann, and K. Mayr. </author> <title> SETHEO and E-SETHEO. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 18(2) </volume> <pages> 237-246, </pages> <year> 1997. </year> <month> 24 </month>
Reference-contexts: Since the methods and systems growing out of our work have finally achieved a leading position in the deduction community by winning the CADE-96 competition in automated theorem proving with the SE-THEO system <ref> [LSBB92, MIL + 97] </ref>, we are perhaps also well placed to import the best possible techniques into the planning community. In other words, the paper will focus on deductive planning as well as on the underlying deduction techniques. <p> Among these the success of the system EQP/Otter stands out which automatically found a proof for the conjecture that any Robbins algebra is Boolean, a widely discussed mathematical problem which was open for more than sixty years [McC96]. From a technological point of view systems such as SETHEO <ref> [MIL + 97] </ref> or Ko M eT [BBER94] have even an advantage over Otter (in the case of SETHEO demonstrated by its first place in the ATP competition 20 during CADE-96) and have thus the potential for more such striking results.
Reference: [MTV90] <author> M. Masseron, C. Tollu, and J. Vauzielles. </author> <title> Generating plans in linear logic. </title> <booktitle> In Foundations of Software Technology and Theoretical Computer Science, </booktitle> <pages> pages 63-75. </pages> <publisher> Springer, LNCS 472, </publisher> <year> 1990. </year>
Reference-contexts: A similar result was obtained in [GHS96]. Its Theorem 4.1 states (among other things) that crTL and conjunctive linear theories as defined in <ref> [MTV90] </ref> on the basis of LL amount again to the same thing (in terms of derivability).
Reference: [Nil91] <author> Nils J. </author> <title> Nilsson. </title> <journal> Logic and artificial intelligence. Artificial Intelligence Journal, </journal> <volume> 47(1-3):31-56, </volume> <year> 1991. </year>
Reference-contexts: Were there no natural intelligence, the sentence would be meaningless to us. Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science). Different points of view for approaching the goal of creating artificial intelligence have been distinguished [Kus96]. Logicism <ref> [Nil91] </ref>, cognitivism [LNR87], and situated action [Agr95] are three out of several such points of view.
Reference: [NKP94] <author> M. Nirkhe, S. Kraus, and D. Perlis. </author> <title> How to plan to meet a deadline between now and then. </title> <journal> J. of Logic and Computation, </journal> <year> 1994. </year>
Reference-contexts: This requires among other things a technique for the manipulation of partial plans [Lin97, WMLW94]. Autonomous agents need to carry out their planning under strict time constraints. A logical solution for this particular problem has been proposed in <ref> [NKP94] </ref> which could be adapted to TL. In reality we have to cope with continuous processes while it seems that TL could cope with discrete actions only. Modelling continuous processes within a logic has become an active area of research though.
Reference: [PMG98] <author> David L. Poole, Alan K. Mackworth, and Randolph G. Goebel. </author> <title> Computational Intelligence | A Logical Approach. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1998. </year>
Reference-contexts: 1 Introduction Artificial Intelligence (AI, or Intellectics [Bib92a]) aims at creating artificial (or computational <ref> [PMG98] </ref>) intelligence. Were there no natural intelligence, the sentence would be meaningless to us. Hence understanding natural intelligence by necessity has always been among the goals of Intellectics (as of Cognitive Science). Different points of view for approaching the goal of creating artificial intelligence have been distinguished [Kus96]. <p> As the example also demonstrates deductive reasoning in TL is skeptical reasoning in the sense used in the AI literature <ref> [PMG98] </ref>. Similarly we get a proof for the formula P & (Q j R) ! P & Q j P & R. Just for simplicity we kept all our examples at the propositional level. In general, formulas may include quantifiers which require the additional property of unifiability of connected literals. <p> In fact we may even teach the system to consider either outcome of the conclusion in such a case (cf. also [BT97]). In modeling agents in their decision behavior we have further to include utilities. Influence diagrams <ref> [PMG98] </ref> are general means for this purpose.
Reference: [Poo93] <author> David L. Poole. </author> <title> Probabilistic Horn abduction and Bayesian networks. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 64(1) </volume> <pages> 81-129, </pages> <year> 1993. </year>
Reference-contexts: In a more elaborate approach one would have to integrate probabilities and possibilities into TL the way already achieved for classical logic (see Section 4.4 in [BHS93a] for more details and references). A particularly attractive approach for doing this has been described in <ref> [Poo93, Poo97] </ref>. Nature is more predictable than other agents such as human beings where probabilities might not help either. Here we must take into account even contradictory actions.
Reference: [Poo97] <author> David Poole. </author> <title> Probabilistic partial evaluation: Exploiting rule structure in probabilistic inference. </title> <editor> In Martha Pollack, editor, </editor> <booktitle> 15th International Joint Conference on Artificial Intelligence (IJCAI-97), </booktitle> <address> Los Altos, 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In a more elaborate approach one would have to integrate probabilities and possibilities into TL the way already achieved for classical logic (see Section 4.4 in [BHS93a] for more details and references). A particularly attractive approach for doing this has been described in <ref> [Poo93, Poo97] </ref>. Nature is more predictable than other agents such as human beings where probabilities might not help either. Here we must take into account even contradictory actions.
Reference: [PP97] <author> M. Paramasivam and David A. Plaisted. </author> <title> Automated deduction techniques for classification in description logic systems. </title> <journal> Journal of Automated Reasoning, </journal> <note> to appear, </note> <year> 1997. </year>
Reference-contexts: Yet the logical approach is still not entering the engineering practice because it is believed to lack efficiency in comparison with specialized systems. Eventually, someone in automated deduction disproves this belief 19 experimentally (see eg. <ref> [PP97] </ref> in the case of KR). Nevertheless the well established tools persist in applications for obvious reasons (resistence against transition costs and such).
Reference: [PW92] <author> J. S. Penberthy and D. Weld. Ucpop: </author> <title> A sound, complete, partial order planner for ADL. </title> <booktitle> In Proceedings of the International Conference of Knowledge Representation and Reasoning (KR-92), </booktitle> <pages> pages 103-114, </pages> <address> San Mateo, CA, 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Section 8.3 in [Fro96] describes a simple and straightforward implementation of crTL on top of SETHEO, called linear backward chainer (LBC). The performance of LBC/SETHEO is then compared there with a widely used specialized planning system, UCPOP <ref> [PW92] </ref>. In these experiments with randomly generated blocks-world problems with five to seven blocks LBC/SETHEO outperforms UCPOP by several orders of magnitude.
Reference: [Rei91] <author> Raymond Reiter. </author> <title> The frame problem in the situation calculus: A simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In V. Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: In addition one needs numerous frame axioms, or alternatively successor-state axioms <ref> [Rei91] </ref> which combine effect and frame axioms in an elegant way. One of the main attractions of all formalisms mentioned so far (ie. LCM, TL, LL, STRIPS, FC) is that no such additional axioms are needed at all which clearly impede the efficiency of any implementation of the situation calculus.
Reference: [Res94] <author> G. Restall. </author> <title> On Logics without Contraction. </title> <type> Phd thesis, </type> <institution> University of Queensland, Australia, </institution> <year> 1994. </year>
Reference-contexts: Theorem 35 in [Fro96] states (among other things) that crTL and the multiplicative part of LL with the exchange and the weakening rule, also known as (classical) BCK <ref> [Res94] </ref> (or affine logic), amount to the same thing (in terms of derivability). A similar result was obtained in [GHS96].
Reference: [RN94] <author> Stuart J. Russell and Peter Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1994. </year>
Reference-contexts: For decades formalisms for planning were plagued by the notorious frame problem [MH69]: how to characterize the "frame" of an action, ie. everything not affected by the action. The aspects of the frame problem now called representational and inferential frame problem <ref> [RN94] </ref> are no problems any more in our formalism, which is in stark contrast to the most popular competitor, namely the situation calculus (see Section 6). <p> Future practice has to determine which of the two will eventually prevail. 6.4 Situation calculus and others The most popular formalism for representing actions is clearly the situation calculus [MH69] described in any standard AI book such as <ref> [RN94] </ref>. Again this is just a classical predicate calculus (with its standard semantics) which encodes the change from one situation to the next in the form of an effect axiom by an extra parameter s in each fluent predicate such as ON above. <p> The list is certainly not a comprehensive one. Deductive planning will have to take into account important features from classical planning in some way. An example for these are causal and protected links <ref> [RN94] </ref>. Often such features are already supplied by the deductive engine itself. For instance, a causal link is just a connection and protecting them is subsumed by any sophisticated proof strategy designed to identify a spanning mating as efficiently as possible.
Reference: [SB93] <author> Werner Stephan and Susanne Biundo. </author> <title> A new logical framework for deductive planning. </title> <editor> In R. Bajcsy, editor, </editor> <booktitle> 13th International Joint Conference on Artificial Intelligence (IJCAI-93), </booktitle> <pages> pages 32-38, </pages> <address> San Mateo, CA, 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Given that planning occurs in time it is not surprising that temporal or dynamic logics offer the potential for formalizing planning. One such approach for reasoning about plans and its properties (ie. not for planning itself) using dynamic logic is reported in <ref> [SB93] </ref>. In addition there are numerous variants of the formalisms mentioned so far.
Reference: [Thi96] <author> Michael Thielscher. </author> <title> Causality and the qualification problem. In L.C. </title> <editor> Aiello, J. Doyle, and S. Shapiro, editors, </editor> <booktitle> KR-96 | Proceedings of the International Conference of Knowledge Representation and Reasoning, </booktitle> <pages> pages 51-62, </pages> <address> San Mateo CA, 1996. </address> <publisher> KR Inc., Morgan Kaufmann. </publisher>
Reference-contexts: The second aspect illustrated by the example is that we obtain unintuitive results if we simply minimize the truth of the abnormality predicates as done in nonmonotonic reasoning of a noncausal nature <ref> [Thi96] </ref>. This is because the successful execution of an action (like putting a potato into the tail pipe) may change the state of our beliefs in the executability of other actions (like starting the engine). <p> with the available knowledge are "assumed away", ie. their negation is included in the specification of the initial state. 8 7 The example could as well be modeled using an abnormality literal the way demonstrated in the subsequent example. 8 For the precise definition of the underlying model preference see <ref> [Thi96] </ref>. 16 If nothing specifically is known about abnormalities then starting the car will work by way of the start action and the given knowledge.
Reference: [Thi97a] <author> Michael Thielscher. </author> <title> Challenges for Action Theories: Solving the Ramification and Qualification Problem. </title> <type> Habilitation thesis, </type> <institution> Technical Universit at Darmstadt, Darm-stadt, Germany, </institution> <year> 1997. </year> <month> 25 </month>
Reference-contexts: More details on FC can be found eg. in [Thi97b]. A different but closely related approach can be found in [Cra92]. The main advantage of FC is that it has a standard classical semantics <ref> [Thi97a] </ref>. Further, the resulting programs can be run by any equational PROLOG system. It is not clear at this point whether these advantages outweigh the potential disadvantages of a representational and computational nature. <p> In other words, Lifschitz' categorization of fluents does not work in this example. We need to categorize the actions into primary and secondary ones (rather than the fluents) as done in the solution presented in this section. In <ref> [Thi97a] </ref> an example of two coupled switches (if one is closed or opened the other follows suite) is given which demonstrates that indeed we need distinguish the preconditions of causal rules into causal and conditional ones as we did.
Reference: [Thi97b] <author> Michael Thielscher. </author> <title> Ramification and causality. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 89(1-2):317-364, </volume> <year> 1997. </year>
Reference-contexts: More details on FC can be found eg. in <ref> [Thi97b] </ref>. A different but closely related approach can be found in [Cra92]. The main advantage of FC is that it has a standard classical semantics [Thi97a]. Further, the resulting programs can be run by any equational PROLOG system. <p> The problem is how a planning formalism may cope with this ramification. We present here a solution which is similar in its essence to the one in <ref> [Thi97b] </ref> but accommodated to TL's (rather than FC's) formalism. Obviously, we need an additional action of the form S 1 & S 2 & :L ) S 1 & S 2 & L which causes light whenever both switches are on without changing the state of the switches. <p> That is, any action (including the one "leading" to the initial situation) triggers the activation of causal actions until a stable state is reached. We refer to this as the causality-has-preference strategy, or CP for short. 6 The discussion in this section closely follows <ref> [Thi97b] </ref> from which the examples are borrowed. 14 P P P ffifl *fi P P P r r r r r fi fi :S 1 S 2 :S 3 attracts switch S 2 if activated. In our example the light action is not applicable in the initial state. <p> CP has been tested for a number of examples discussed in the literature, also for those where other methods have failed <ref> [Thi97b] </ref>. For instance, [GS88] handles already the given example incorrectly. The remedy suggested in [Lif90] is insufficient either, as the extended circuit depicted in Figure 2 demonstrates. The depicted state can formally be captured as :S 1 & S 2 & :S 3 & :R & :L.
Reference: [WMLW94] <author> David E. Wilkins, Karen L. Myers, John D. Lowrance, and Leonard P. Wesley. </author> <title> Planning and reacting in uncertain and dynamic environments. </title> <journal> J. of Experimental and Theoretical Artificial Intelligence Journal, </journal> <volume> 6 </volume> <pages> 197-227, </pages> <year> 1994. </year> <month> 26 </month>
Reference-contexts: In dynamic environments any plan is bound to fail to some extent. It is therefore essential to be able to react to such failure with efficient replanning. This requires among other things a technique for the manipulation of partial plans <ref> [Lin97, WMLW94] </ref>. Autonomous agents need to carry out their planning under strict time constraints. A logical solution for this particular problem has been proposed in [NKP94] which could be adapted to TL.
References-found: 63

