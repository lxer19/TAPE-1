URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR95599.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: AUTO94P An Experimental Parallel Version of AUTO  
Author: X. J. Wang and E. J. Doedel 
Address: Pasadena CA 91125  
Affiliation: Center for Research on Parallel Computing California Institute of Technology  
Date: January 19, 1996  
Pubnum: CRPC-95-3  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> U. Ascher, R. M. M. Mattheij, and R. D. Russell. </author> <title> Numerical Solution of Boundary Value Problems for Ordinary Differential Equations. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year>
Reference-contexts: To obtain a copy of AUTO94 or for information on AUTO94P send email to doedel@cs.concordia.ca. We consider the first order system of ordinary differential equations [6]. du = f (u; ); (1) where t 2 <ref> [0; 1] </ref>; u 2 R n and 2 R n , subject to boundary conditions b i (u 0 ; u 1 ; ) = 0; i = 1; 2; ; n b ; (2) and integral constraints Z 1 q i (u; )dt = 0; i = 1; 2; ; <p> The boundary conditions are u 1 (0) = 0 (24) The starting solution at = 0 is u 1 (x) = u 2 (x) = 0, x 2 <ref> [0; 1] </ref>. There are no integral conditions except a pseudo-arclength integral, which is always there. The computation is such that for each run of the problem, there will be 10 decompositions and 10 backsubstitutions in the linear equation solver. <p> To avoid duplication, we do not repeat parts similar to those in Section 2, particularly for the condensation of parameters. Although the ideas are illustrated for the case of 8 processors, the communication scheme applies to any number of processors. 3.1 Pivoting Strategy To enhance numerical stability <ref> [1, 12] </ref>, we use restricted row and column pivoting in our parallel algorithm. During the condensation of parameters process, we use a pivot search window at each elimination step. In Figure 12, the pivot window for A i is the shaded area.
Reference: [2] <author> Intel Corporation. </author> <title> "Touchstone Delta Fortran System Calls Reference Manual". </title> <type> Technical report, </type> <institution> Intel Corporation, </institution> <year> 1991. </year>
Reference-contexts: Thereafter it was ported to the Delta system, an Intel mesh machine with 512 iPSC/860 nodes. Communication between the processors on both machines is done by message passing. Communication can be either synchronous (blocking) or asynchronous (nonblocking). Some of the basic communication primitives on these machines <ref> [2, 3] </ref> are shown in Table 44. 4.2 Node Organization Assume that the number of nodes is fixed. Each node has a unique identifier, which is used as an address in the exchange of messages. In our implementation, the nodes are organized as a one dimensional grid.
Reference: [3] <author> Intel Corporation. </author> <title> "Touchstone Delta System User's Guide". </title> <type> Technical report, </type> <institution> Intel Corporation, </institution> <year> 1991. </year>
Reference-contexts: Thereafter it was ported to the Delta system, an Intel mesh machine with 512 iPSC/860 nodes. Communication between the processors on both machines is done by message passing. Communication can be either synchronous (blocking) or asynchronous (nonblocking). Some of the basic communication primitives on these machines <ref> [2, 3] </ref> are shown in Table 44. 4.2 Node Organization Assume that the number of nodes is fixed. Each node has a unique identifier, which is used as an address in the exchange of messages. In our implementation, the nodes are organized as a one dimensional grid.
Reference: [4] <author> Eric F. Van de Velde. </author> <title> Concurrent Scientific Computing. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Table 2 outlines the communication between neighboring nodes. To update D and F C, a global sum is needed. This is done by a recursive doubling procedure <ref> [4] </ref>, which takes log 2 P steps, where P is the total number of nodes. The recursive doubling procedure is shown in Figure 4, where only four nodes are used for simplicity. Depending on the outcome of the final sum, we use two types of recursive doubling.
Reference: [5] <author> E. J. Doedel, H. B. Keller, and J. P. Kernevez. </author> <title> "Numerical Analysis and Control Of Bifurcation Problems, Part I". </title> <journal> Int. J. Bifurcation and Chaos, </journal> <volume> 3 </volume> <pages> 493-520, </pages> <year> 1991. </year>
Reference-contexts: The latest version of the standard sequential software, AUTO94, is described in [8], where user instructions and many illustrative examples are given. A description of the numerical algorithms used in AUTO, as well as related algorithms, can be found in <ref> [5, 6] </ref>. To obtain a copy of AUTO94 or for information on AUTO94P send email to doedel@cs.concordia.ca. <p> Apart from a scaling factor these are independent of j. Since pseudo-arclength continuation, see <ref> [5, 6, 11] </ref> for details, is used for the computation of branches of solutions to (1), we need to adjoin the equation 2 Z 1 (u (t) u 0 (t)) fl _u 0 (t)dt + 2 where (u 0 ; 0 ) is the previously computed point on the solution branch
Reference: [6] <author> E. J. Doedel, H. B. Keller, and J. P. Kernevez. </author> <title> "Numerical Analysis and Control Of Bifurcation Problems, Part II". </title> <journal> Int. J. Bifurcation and Chaos, </journal> <volume> 4 </volume> <pages> 745-772, </pages> <year> 1991. </year>
Reference-contexts: The latest version of the standard sequential software, AUTO94, is described in [8], where user instructions and many illustrative examples are given. A description of the numerical algorithms used in AUTO, as well as related algorithms, can be found in <ref> [5, 6] </ref>. To obtain a copy of AUTO94 or for information on AUTO94P send email to doedel@cs.concordia.ca. <p> A description of the numerical algorithms used in AUTO, as well as related algorithms, can be found in [5, 6]. To obtain a copy of AUTO94 or for information on AUTO94P send email to doedel@cs.concordia.ca. We consider the first order system of ordinary differential equations <ref> [6] </ref>. du = f (u; ); (1) where t 2 [0; 1]; u 2 R n and 2 R n , subject to boundary conditions b i (u 0 ; u 1 ; ) = 0; i = 1; 2; ; n b ; (2) and integral constraints Z 1 q <p> In this case there will be one free parameter, so that the equations will normally yield curves of solution. An efficient sequential numerical algorithm for solving the above ODE system is described in <ref> [6] </ref>. The corresponding algorithm was implemented in AUTO86 [7] as well as in the more recent AUTO94 [8]. <p> Apart from a scaling factor these are independent of j. Since pseudo-arclength continuation, see <ref> [5, 6, 11] </ref> for details, is used for the computation of branches of solutions to (1), we need to adjoin the equation 2 Z 1 (u (t) u 0 (t)) fl _u 0 (t)dt + 2 where (u 0 ; 0 ) is the previously computed point on the solution branch <p> We can extract the square system enclosed by a big dashed line box as indicated in Figure 25 in node p 8 . The shaded area implicitly represents the Poincare map that is needed in AUTO <ref> [6] </ref>. This small square system is solved by node p 7 using complete pivoting. Thereafter node p 7 broadcasts the solution to all the other nodes as indicated in Figure 26.
Reference: [7] <author> E. J. Doedel and J. P. Kernevez. </author> <title> "AUTO: Software for Continuation and Bifurcation Problems in Ordinary Differential Equations". </title> <type> Technical report, </type> <institution> Applied Mathematics, California Institute of Technology, Pasadena, </institution> <address> CA 91125, </address> <month> May </month> <year> 1986. </year>
Reference-contexts: In this case there will be one free parameter, so that the equations will normally yield curves of solution. An efficient sequential numerical algorithm for solving the above ODE system is described in [6]. The corresponding algorithm was implemented in AUTO86 <ref> [7] </ref> as well as in the more recent AUTO94 [8].
Reference: [8] <author> E. J. Doedel, X. J. Wang, and T. F. Fairgrieve. "AUTO94: </author> <title> Software for Continuation and Bifurcation Problems in Ordinary Differential Equations". </title> <type> Technical report, </type> <institution> CRPC-95-1, Center for Research on Parallel Computing, California Institute of Technology, Pasadena, </institution> <address> CA 91125, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction In this report we give a detailed presentation of the parallel algorithms used in AUTO94P, an experimental version of the software package AUTO for the bifurcation analysis of systems of ordinary differential equations. The latest version of the standard sequential software, AUTO94, is described in <ref> [8] </ref>, where user instructions and many illustrative examples are given. A description of the numerical algorithms used in AUTO, as well as related algorithms, can be found in [5, 6]. To obtain a copy of AUTO94 or for information on AUTO94P send email to doedel@cs.concordia.ca. <p> An efficient sequential numerical algorithm for solving the above ODE system is described in [6]. The corresponding algorithm was implemented in AUTO86 [7] as well as in the more recent AUTO94 <ref> [8] </ref>. <p> It defines a simple first order system of ordinary differential equations with boundary conditions. The dimension of the system is a variable. The parameter N DIM (dimension of the system) may be assigned by any even value within the modifiable limit NDIMX <ref> [8] </ref>. The system of the equations is u 0 u 0 25 X u i i! where u 1 2 R n , u 2 2 R n , n = N DIM=2 and is the continuation parameter.
Reference: [9] <author> J. A. George. </author> <title> "Nested Dissection of a Regular Finite Element Mesh". </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 10 </volume> <pages> 345-363, </pages> <year> 1973. </year>
Reference-contexts: The shaded areas in Figure 5 will be considered below in the nested dissection process. Table 4 is an outline of the condensation of parameters process. 2.3 Nested Dissection After condensation of parameters a nested dissection <ref> [9] </ref> procedure is used. Here we consider nested dissection without pivoting. The communication scheme for the pivoting case is different, and described in Section 3. Extracting the shaded areas in Figure 5, we obtain the matrix shown in Figure 6.
Reference: [10] <author> Anshul Gupta and Vipin Kumar. </author> <title> "Scalability of Parallel Algorithms for Matrix Multiplication". </title> <type> Technical Report Technical Report TR 91-54, </type> <institution> 60 Department of Computer Science, University of Minnesota, </institution> <address> Minneapolis, MN 55455, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: The communications between odd and even nodes are indicated in Figure 3. Note that there are only two startup times for the entire communication. This communication is scalable <ref> [10] </ref> since it is independent of the number of nodes. The communication cost is the same, roughly two startup times, no matter how many nodes are used in the computation.
Reference: [11] <author> H. B. Keller. </author> <title> "Numerical solution of bifurcation and nonlinear eigenvalue problems". </title> <booktitle> In Applications of Bifurcation Theory, </booktitle> <pages> pages 359-384. </pages> <publisher> Academic Press, </publisher> <address> New York, N.Y., </address> <note> 1977. </note> <author> P. H. Rabinowitz, ed., </author> <note> Mathematics Research Center Publication 8. </note>
Reference-contexts: Apart from a scaling factor these are independent of j. Since pseudo-arclength continuation, see <ref> [5, 6, 11] </ref> for details, is used for the computation of branches of solutions to (1), we need to adjoin the equation 2 Z 1 (u (t) u 0 (t)) fl _u 0 (t)dt + 2 where (u 0 ; 0 ) is the previously computed point on the solution branch
Reference: [12] <author> Marcin Paprzyck and Ian Gladwell. </author> <title> "Solving Almost Block Diagonal Systems on Parallel Computers". Parallel Computing, </title> <publisher> North-Holland, </publisher> <pages> 17 133-153, </pages> <year> 1991. </year>
Reference-contexts: To avoid duplication, we do not repeat parts similar to those in Section 2, particularly for the condensation of parameters. Although the ideas are illustrated for the case of 8 processors, the communication scheme applies to any number of processors. 3.1 Pivoting Strategy To enhance numerical stability <ref> [1, 12] </ref>, we use restricted row and column pivoting in our parallel algorithm. During the condensation of parameters process, we use a pivot search window at each elimination step. In Figure 12, the pivot window for A i is the shaded area.
References-found: 12

