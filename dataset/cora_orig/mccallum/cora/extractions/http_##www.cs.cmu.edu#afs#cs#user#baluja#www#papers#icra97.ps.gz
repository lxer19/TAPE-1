URL: http://www.cs.cmu.edu/afs/cs/user/baluja/www/papers/icra97.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs/user/baluja/www/techreps.html
Root-URL: 
Email: frahuls|balujag@jprc.com, jhancock@ri.cmu.edu  
Phone: 1  
Title: Evolving an Intelligent Vehicle for Tactical Reasoning in Traffic  
Author: Rahul Sukthankar ; Shumeet Baluja ; John Hancock 
Address: 4616 Henry Street  Pittsburgh, PA 15213 Pittsburgh, PA 15213  
Affiliation: Justsystem Pittsburgh Research Center 2 The Robotics Institute  Carnegie Mellon University  
Abstract: Recent research in automated highway systems has ranged from low-level vision-based controllers to high-level route-guidance software. However there is currently no system for tactical-level reasoning. Such a system should address tasks such as passing cars, making exits on time, and merging into a traffic stream. Our approach to this intermediate-level planning combines a distributed reasoning system (PolySAPIENT) with a novel evolutionary optimization strategy (PBIL). PBIL automatically tunes PolySAPIENT module parameters in simulation by evaluating candidate modules on various traffic scenarios. Since the control interface to the simulated vehicles is identical to that on the Carnegie Mellon Navlab vehicles, modules developed using this process can be directly ported to existing hardware. This method is currently being applied to the automated highway system domain; it also generalizes to many complex robotics tasks where multiple interacting modules must simultaneously be configured without individual module feedback. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Baluja. </author> <title> Population-based incremental learning: A method for integrating genetic search based function optimization and competitive learning. </title> <type> Technical Report CMU-CS-94-163, </type> <institution> Carnegie Mellon University, </institution> <year> 1994. </year>
Reference-contexts: The encoding is illustrated in Figure 4. In the next section, we describe the evolutionary algorithm used for the learning task. 4. Population-Based Incremental Learning Population-Based Incremental Learning (PBIL) is a combination of genetic algorithms (GAs) [6] and competitive learning <ref> [1] </ref>. The PBIL algorithm attempts to explicitly maintain statistics about the search space and uses them to direct its exploration. The object of the algorithm is to create a real valued probability vector which, when sampled, reveals high quality solution vectors with high probability. <p> This is analogous to PBIL which creates new trial solutions that differ mainly in bit positions where prior good performers have disagreed. More details can be found in <ref> [1] </ref>. Our application challenges PBIL in a number of ways. First, since a vehicle's decisions depend on the behavior of other vehicles which are not under its control, each simulation can produce a different evaluation for the same bit string.
Reference: [2] <author> J. Cremer, J. Kearney, Y. Papelis, and R. Romano. </author> <title> The software architecture for scenario control in the Iowa driving simulator. </title> <booktitle> In Proceedings of the 4th Computer Generated Forces and Behavioral Representation, </booktitle> <year> 1994. </year>
Reference-contexts: Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years <ref> [11, 2, 10] </ref>. However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1). PolySAPIENT, described in Section 3, is a system designed to drive the Carnegie Mellon Navlab [15] in situations similar to the situation shown in Figure 1. <p> Similar problems were reported by Cremer et al. <ref> [2] </ref> in their single-layer state-machine implementation for scenario control. To address some of these problems, we have developed a distributed reasoning architecture, PolySAPIENT, which is discussed in Section 3. The control subsystem is compatible with the controller available on the Carnegie Mellon Navlab II robot testbed vehicle.
Reference: [3] <author> E. Dickmanns and A. Zapp. </author> <title> A curvature-based scheme for improving road vehicle guidance by computer vision. </title> <booktitle> In Proceedings of the SPIE Conference on Mobile Robots, </booktitle> <year> 1986. </year>
Reference-contexts: Strategic-level planners [12] have advanced from research projects to commercial products. The operational level has been investigated for many decades, resulting in systems that range from semi-autonomous vehicle control [5, 7] to autonomous driving in a variety of situations <ref> [3, 9] </ref>. Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years [11, 2, 10]. However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1).
Reference: [4] <author> L. Eshelman. </author> <title> The CHC adaptive search algorithm: How to have safe search when engaging in nontraditional genetic recombination. </title> <booktitle> In Foundations of Genetic Algorithms, </booktitle> <pages> pages 265283. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1991. </year>
Reference-contexts: However, when the population converges, this deprives crossover of the diversity it needs to be an effective search operator. When this happens, crossover begins to behave like a mutation operator that is sensitive to the convergence of the value of each bit <ref> [4] </ref>. If all individuals in the population con verge at some bit position, crossover leaves those bits unaltered. At bit positions where individuals have not converged, crossover will effectively mutate values in those positions.
Reference: [5] <author> K. Gardels. </author> <title> Automatic car controls for electronic highways. </title> <type> Technical Report GMR-276, </type> <institution> General Motors Research Labs, </institution> <month> June </month> <year> 1960. </year> <title> in a population, as a function of generation. Note that all vehicles in the later generations make their desired exits. </title>
Reference-contexts: Mobile robot research has successfully addressed the three levels to different degrees. Strategic-level planners [12] have advanced from research projects to commercial products. The operational level has been investigated for many decades, resulting in systems that range from semi-autonomous vehicle control <ref> [5, 7] </ref> to autonomous driving in a variety of situations [3, 9]. Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years [11, 2, 10].
Reference: [6] <author> D. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: The encoding is illustrated in Figure 4. In the next section, we describe the evolutionary algorithm used for the learning task. 4. Population-Based Incremental Learning Population-Based Incremental Learning (PBIL) is a combination of genetic algorithms (GAs) <ref> [6] </ref> and competitive learning [1]. The PBIL algorithm attempts to explicitly maintain statistics about the search space and uses them to direct its exploration. The object of the algorithm is to create a real valued probability vector which, when sampled, reveals high quality solution vectors with high probability. <p> Therefore, in order to avoid moving towards unproductive areas of the search space, the best vector from the previous population is included in the current population (by replacing the worst member of the current population) in GA literature, this is termed elitist selection <ref> [6] </ref>. Since space limitations preclude a complete discussion about the relationship between GAs and PBIL, we can only provide a brief intuition. Diversity in the population is crucial for GAs.
Reference: [7] <author> I. Masaki, </author> <title> editor. Vision-Based Vehicle Guidance. </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Mobile robot research has successfully addressed the three levels to different degrees. Strategic-level planners [12] have advanced from research projects to commercial products. The operational level has been investigated for many decades, resulting in systems that range from semi-autonomous vehicle control <ref> [5, 7] </ref> to autonomous driving in a variety of situations [3, 9]. Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years [11, 2, 10].
Reference: [8] <author> J. Michon. </author> <title> A critical view of driver behavior models: What do we know, what should we do? In L. </title> <editor> Evans and R. Schwing, editors, </editor> <title> Human Behavior and Traffic Safety. </title> <publisher> Plenum, </publisher> <year> 1985. </year>
Reference-contexts: 1. Introduction The task of driving can be characterized as consisting of three levels: strategic, tactical and operational <ref> [8] </ref>. At the highest (strategic) level, a route is planned and goals are determined; at the intermediate (tactical) level, maneuvers are selected to achieve short-term objectives such as deciding whether to pass a blocking vehicle; and at the lowest (operational) level, these maneuvers are translated into control operations.
Reference: [9] <author> D. Pomerleau. </author> <title> Neural Network Perception for Mobile Robot Guidance. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <month> Febru-ary </month> <year> 1992. </year>
Reference-contexts: Strategic-level planners [12] have advanced from research projects to commercial products. The operational level has been investigated for many decades, resulting in systems that range from semi-autonomous vehicle control [5, 7] to autonomous driving in a variety of situations <ref> [3, 9] </ref>. Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years [11, 2, 10]. However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1).
Reference: [10] <author> A. Ram, R. Arkin, G. Boone, and M. Pearce. </author> <title> Using genetic algorithms to learn reactive control parameters for autonomous robotic navigation. Adaptive Behavior, </title> <type> 2(3), </type> <year> 1994. </year>
Reference-contexts: Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years <ref> [11, 2, 10] </ref>. However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1). PolySAPIENT, described in Section 3, is a system designed to drive the Carnegie Mellon Navlab [15] in situations similar to the situation shown in Figure 1.
Reference: [11] <author> D. Reece. </author> <title> Selective Perception for Robot Driving. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: Substantial progress slow vehicle B. Should Car A attempt to pass? in autonomous navigation in simulated domains has also been reported in recent years <ref> [11, 2, 10] </ref>. However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1). PolySAPIENT, described in Section 3, is a system designed to drive the Carnegie Mellon Navlab [15] in situations similar to the situation shown in Figure 1.
Reference: [12] <author> J. Rillings and R. Betsold. </author> <title> Advanced driver information systems. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 40(1), </volume> <year> 1991. </year>
Reference-contexts: Mobile robot research has successfully addressed the three levels to different degrees. Strategic-level planners <ref> [12] </ref> have advanced from research projects to commercial products. The operational level has been investigated for many decades, resulting in systems that range from semi-autonomous vehicle control [5, 7] to autonomous driving in a variety of situations [3, 9]. Substantial progress slow vehicle B.
Reference: [13] <author> R. Sukthankar. </author> <title> Situation Awareness for Driving in Traffic. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: SHIVA's user interface provides facilities for visualizing and influencing the interactions between vehicles (see Figure 2). Details of the simulator are comprehensively covered elsewhere <ref> [14, 13] </ref>. All vehicles are composed of three subsystems: perception, cognition, and control. The perception subsystem consists of a suite of simulated functional sensors (e.g. global positioning systems, range-sensors, lane-trackers), whose outputs are similar to real perception modules implemented on the Navlab vehicles. <p> Some sensors also model occlusion and noise, forcing cognition routines to be realistic in their input assumptions. While a variety of cognition modules have been developed in SHIVA, this paper is only concerned with two types: rule-based reasoning (MonoSAPIENT <ref> [13] </ref>) and a modular, distributed architecture (PolySAPIENT [13]). The rule-based reasoning system, which was manually designed, is implemented as a monolithic decision tree. <p> Some sensors also model occlusion and noise, forcing cognition routines to be realistic in their input assumptions. While a variety of cognition modules have been developed in SHIVA, this paper is only concerned with two types: rule-based reasoning (MonoSAPIENT <ref> [13] </ref>) and a modular, distributed architecture (PolySAPIENT [13]). The rule-based reasoning system, which was manually designed, is implemented as a monolithic decision tree. <p> Commands to the controller are issued by the cognition modules at a rate of 10 Hz. SHIVA only allows vehicles to control desired velocity and steering curvature. Denying control over acceleration ensures that systems developed in simulation can be directly ported onto our existing hardware configuration. 3. PolySAPIENT PolySAPIENT <ref> [13] </ref> is a distributed reasoning system designed to solve tactical driving problems. To overcome deficiencies with the monolithic reasoning systems, PolySAPIENT partitions the driving task into several aspects; each is represented by an independent module known as a reasoning object. 3.1. <p> Additional inputs included higher-level goals (such as the preferred velocity). The rea as reasoning objects. soning object configuration is shown in Figure 3 For more details on this architecture, see <ref> [13] </ref>. 3.2. Actions Tactical maneuvers (such as lane changing) are composed by concatenating several basic actions. Reasoning objects indicate their preference for a basic action by assigning a vote to that action. <p> The coefficients used in the evaluation function were set by hand. It should be noted that varying these coefficients, even by an order of magnitude, revealed similar results, in terms of missed exits, collisions, speed deviation and lateral handling (See <ref> [13] </ref> for details). While the evaluation function is a reasonable measure of performance, it is important to note that there can be cases when a good driver becomes involved in unavoidable crashes; conversely, favorable circumstances may enable bad vehicles to score well on an easy scenario. <p> Population size is 100 cars in each generation. is reliably able to optimize parameter sets in this domain. which have been conducted with a variety of initial starting conditions and evaluation functions, see <ref> [13] </ref>. These 3-D histograms display the distribution of vehicles scoring a certain evaluation for each generation. It is clear that as the parameters evolve in successive generations, the average performance of vehicles increases and the variance of evaluations within a generation decreases.
Reference: [14] <author> R. Sukthankar, J. Hancock, and C. Thorpe. </author> <title> Tactical-level simulation for intelligent transportation systems. </title> <note> To appear in Journal on Mathematical and Computer Modeling, 1997. Special Issue on ITS. </note>
Reference-contexts: The SHIVA Simulator Simulation is essential in developing intelligent vehicle systems because testing new algorithms in real traffic is expensive, risky and potentially disastrous. SHIVA 1 (Simulated Highways for Intelligent Vehicle Algorithms) <ref> [14] </ref> is a kinematic micro-simulation of vehicles moving and interacting on a user-defined stretch of roadway that models the elements of the tactical driving domain most useful to intelligent vehicle designers. The vehicles can be equipped with simulated human drivers as well as sensors and algorithms for automated control. <p> SHIVA's user interface provides facilities for visualizing and influencing the interactions between vehicles (see Figure 2). Details of the simulator are comprehensively covered elsewhere <ref> [14, 13] </ref>. All vehicles are composed of three subsystems: perception, cognition, and control. The perception subsystem consists of a suite of simulated functional sensors (e.g. global positioning systems, range-sensors, lane-trackers), whose outputs are similar to real perception modules implemented on the Navlab vehicles.
Reference: [15] <author> C. Thorpe, M. Hebert, T. Kanade, and S. Shafer. </author> <title> Vision and navigation for the Carnegie Mellon Navlab. </title> <journal> IEEE Transactions on PAMI, </journal> <volume> 10(3), </volume> <year> 1988. </year>
Reference-contexts: However, the decisions required at the tactical level are difficult and a general solution remains elusive (see Figure 1). PolySAPIENT, described in Section 3, is a system designed to drive the Carnegie Mellon Navlab <ref> [15] </ref> in situations similar to the situation shown in Figure 1. PolySAPI-ENT has a distributed architecture which enables researchers to quickly add new reasoning modules to an existing configuration, but it does not address the problem of reconfiguring the parameters in the new system.
References-found: 15

