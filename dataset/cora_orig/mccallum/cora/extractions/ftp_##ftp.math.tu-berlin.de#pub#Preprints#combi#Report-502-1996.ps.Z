URL: ftp://ftp.math.tu-berlin.de/pub/Preprints/combi/Report-502-1996.ps.Z
Refering-URL: 
Root-URL: 
Email: amenta@parc.xerox.com  ziegler@math.tu-berlin.de  
Title: Deformed Products and Maximal Shadows of Polytopes maximal number of vertices on an increasing path,
Author: Nina Amenta Gunter M. Ziegler flfl 
Note: the  Some of this work was done at The Geometry Center, supported by NSF/DMS-8920161, at the Freie Univer sitat Berlin, supported by the DAAD, and at Xerox, partially supported by NSF/CCR-9404113 flfl Supported by a DFG Gerhard-Hess-Forschungsforderungspreis (Zi 475/1-1) and by the German-Israeli Foun dation grant I-0309-146.06/93.  
Date: March 26, 1996  
Web: http://www.geom.umn.edu/~nina  http://www.math.tu-berlin.de/~ziegler  
Address: 3333 Coyote Hill Road Palo Alto, CA 94304, USA  10623 Berlin, Germany  
Affiliation: Xerox PARC  Dept. Mathematics 6-1 Technische Universitat Berlin  
Abstract: We present a construction of deformed products of polytopes that has as special cases all the known constructions of linear programs with "many pivots," starting with the famous Klee-Minty cubes from 1972. Thus we obtain sharp estimates for the following geometric quantities for d-dimensional simple polytopes with at most n facets: The bounds on the maximal number of vertices on an increasing path or a greatest increase path unify and slightly improve a number of known results. One bound on the maximal number of vertices of a 2-dimensional projection is new: we show that a 2-dimensional projection of a d-dimensional polytope with n facets may have as many as fi(n bd=2c ) vertices for fixed d. This provides the same bound for the worst-case behaviour of the simplex algorithm with the shadow vertex pivot rule. The maximal complexity of shadows in fixed dimension is also relevant for problems of Computational Geometry. We give a new algorithm for the construction of the shadow of a d-dimensional polytope. However, we find that for even d 4 the polars of cyclic polytopes, C d (n) , which have the maximal number of vertices for any given n, do not maximize the shadow: for example, any 2-dimensional projection of C 4 (n) has not more than 3n vertices. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Pankaj Agarwal, Nina Amenta, & Micha Sharir: </author> <title> Largest placement of one convex polygon inside another, </title> <note> Preprint 1995. </note>
Reference-contexts: It turns out that all the "bad examples" were constructed by (clever) variations of Klee and Minty's method of "tilting facets" or of "deforming products": "Then Q is obtained from the prism <ref> [0; 1] </ref> fi P by tilting the left base f0g fi P in one way and the right base f1g fi P in the opposite way." (Klee & Minty [23, p. 162]) "the main difficulty to overcome is to insure that the deformed polytope is combi natorially equivalent to V fi <p> Definition 3.1 (Deformed products) Let P R d be a convex polytope, and ': P ! R a linear functional with '(P ) <ref> [0; 1] </ref>. Let V; W R e be convex polytopes. <p> = P fi V: (ii) If ' is constant ('(x) = for all x 2 P ), then the deformed product is a standard product with an appropriate Minkowski sum: (P; ') 1 (V; W ) = P fi (W + (1 )V ): (iii) If P = Q fi <ref> [0; 1] </ref> with '(q; t) = t, then (Q fi I; ') 1 (V; W ) = Q fi conv ((V fi f0g) [ (W fi f1g)): This includes the case where Q = f0g and P = [0; 1] with '(x) = x, as illustrated in our figure. <p> fi (W + (1 )V ): (iii) If P = Q fi <ref> [0; 1] </ref> with '(q; t) = t, then (Q fi I; ') 1 (V; W ) = Q fi conv ((V fi f0g) [ (W fi f1g)): This includes the case where Q = f0g and P = [0; 1] with '(x) = x, as illustrated in our figure. Here the left drawing depicts a "general" case, where for the right drawing V and W are normally equivalent, so the resulting polytope turns out to be (combinatorially equivalent to) a prism over V . <p> = conv ((V 0 fi f 0 g) [ (W 00 fi f 00 g)): (This is the situation of Example 3.2 (iii).) Theorem 3.4 (Vertices and facets of deformed products) Let P R d be a d-polytope, ': R d ! R a linear function with '(P ) = <ref> [0; 1] </ref>, and let V; W R e be normally equivalent e-polytopes. (i) For P = convfp 1 ; : : : ; p m g, V = convfv 1 ; : : : ; v n g and W = convfw 1 ; : : : ; w n g, <p> Remark 3.5 From now on we will maintain the assumptions of Theorem 3.4, namely that * P R d is d-dimensional (although this is not essential), * '(P ) = <ref> [0; 1] </ref> (it is only important that '(P ) [0; 1]: without this assumption the de formed product is not usually convex, as may be seen from the case where P = [0; 1] R 1 , '(x) = 2x, V = [0; 1], W = f0g). * V; W R <p> Remark 3.5 From now on we will maintain the assumptions of Theorem 3.4, namely that * P R d is d-dimensional (although this is not essential), * '(P ) = <ref> [0; 1] </ref> (it is only important that '(P ) [0; 1]: without this assumption the de formed product is not usually convex, as may be seen from the case where P = [0; 1] R 1 , '(x) = 2x, V = [0; 1], W = f0g). * V; W R e are e-dimensional and normally equivalent. <p> 3.4, namely that * P R d is d-dimensional (although this is not essential), * '(P ) = <ref> [0; 1] </ref> (it is only important that '(P ) [0; 1]: without this assumption the de formed product is not usually convex, as may be seen from the case where P = [0; 1] R 1 , '(x) = 2x, V = [0; 1], W = f0g). * V; W R e are e-dimensional and normally equivalent. <p> this is not essential), * '(P ) = <ref> [0; 1] </ref> (it is only important that '(P ) [0; 1]: without this assumption the de formed product is not usually convex, as may be seen from the case where P = [0; 1] R 1 , '(x) = 2x, V = [0; 1], W = f0g). * V; W R e are e-dimensional and normally equivalent. <p> Seidel has pointed out the following alternative way to view the construction of deformed products (P; ') 1 (V; W ). For this again assume that '(P ) = <ref> [0; 1] </ref>. If V and W are normally equivalent, then conv (V fif0g [ W fif1g) R e+1 is combinatorially equivalent to V fi I (as in Example 3.2 (iii)). <p> Let P R d be a simple (d; n)-polytope which achieves the maximum length for an arbitrary increasing path (respectively of a path according to Bland's or Dantzig's rule), and let ' : P ! <ref> [0; 1] </ref> be a corresponding objective function. Then for some 0 &lt; " &lt; 1 2 form the deformed product (P; ') 1 ([0; 1]; ["; 1"]) and use the same proof as for the Klee-Minty cubes. 4.2 The Goldfarb-Sit Cubes Goldfarb & Sit [16] constructed linear programs | rescaled Klee-Minty <p> Proof. After rescaling the objective function and relabeling the vertices we may take a polytope P of type (d; n) for which Bland's rule, for a functional c t x = '(x) with '(P ) = <ref> [0; 1] </ref>, follows an increasing path on l := H Bl (d; n) vertices starting at the vertex p 1 with '(p 1 ) = 0 and ending at the vertex p m with '(p m ) = 1. <p> Definition 4.11 (Reversible pairs, Jeroslow [20]) Let P R n be a polytope, and ': R d ! R a linear function with '(P ) = <ref> [0; 1] </ref> in general position on P . Let p 1 denote the unique minimal vertex of P with '(p 1 ) = 0, and p m the unique maximal vertex with '(p m ) = 1. <p> A natural problem to which the computation of shadows is relevant is the maximization of a convex function in k variables over a polytope P . The maximum is achieved at some vertex of the k-shadow. Agarwal, Amenta & Sharir <ref> [1] </ref> reduce the problem of finding the largest similar copy of one convex polygon contained in another one to the maximization of a convex function in two dimensions over a polytope given as an intersection of halfspaces in R 4 . This has applications in Robotics and Computer Vision.
Reference: [2] <author> Nina Amenta & G unter M. Ziegler: </author> <title> Shadows and slices of polytopes, </title> <note> Preprint 1995, 10 pages; in: Proc. "12th Annual ACM Symposium on Computational Geometry" (May 1996), to appear. </note>
Reference: [3] <author> David Avis, David Bremner & Raimund Seidel: </author> <title> How good are convex hull algorithms? Preprint 1996, </title> <booktitle> 36 pages. </booktitle>
Reference-contexts: The problem is closely related to the classic problem of finding an output-sensitive algorithm for convex hulls, which is still not entirely solved in higher dimensions (see <ref> [3] </ref>). In the following discussion we make the very strong assumption that the set H of n = jHj input halfspaces is in general position. One consequence of this assumption, which we need, is that P is a simple polytope.
Reference: [4] <author> David Avis & Va sek Chv atal: </author> <title> Notes on Bland's pivoting rule, in: "Polyhedral Combinatorics" (M.L. </title> <editor> Balinski, A.J. Hoffmann, eds.), </editor> <booktitle> Math. Programming Study 8 (1978), </booktitle> <pages> 24-34. </pages>
Reference-contexts: Analogous results were subsequently obtained by various authors: * by Jeroslow [20] for the greatest increase rule, * by Goldfarb and Sit [16] for the diagonal case of the steepest increase rule, * by Avis & Chvatal <ref> [4] </ref> for Bland's least index rule (diagonal case) * and by Murty [28] and Goldfarb [14, 15] for the diagonal case of the shadow vertex (Gass Saaty) rule. <p> obtain them recursively as KM 0 = f0g R 0 KM d+1 = (KM d ; x d ) 1 ([0; 1]; ["; 1 "]) R d+1 : It is not difficult to explicitly determine both vertex coordinates and the combinatorial structure of the Klee-Minty cubes, see Avis & Chvatal <ref> [4] </ref> and Gartner & Ziegler [13]. However, this is not necessary for us, since the basic extremal properties follow already from the construction as deformed products. <p> After that, Bland's rule takes a path through all the 2 d vertices v (i; 2), ending at v (1; 2) = e d+1 . (Avis & Chvatal <ref> [4] </ref> proved that if we take the i-th inequality to be x i "x i1 for i d and to be x id 1 "x id1 for i &gt; d, then the Bland's rule will follow a shorter path, whose number of vertices is, however, still more than a Fibonacchi number,
Reference: [5] <author> David Avis & Komei Fukuda: </author> <title> A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra, </title> <journal> Discrete Comput. </journal> <note> Geometry 8 (1992) 295-314. </note>
Reference-contexts: The running time is O (n dk+2 ). 1 The second algorithm finds all the shadow vertices. It is a pivoting algorithm, analogous, for instance, to the convex hull algorithm of <ref> [5] </ref>. We find the minimum vertex in the x 1 direction, which is a shadow vertex, by linear programming. Then we trace the shadow by following the edges that are supported by vertical hyperplanes.
Reference: [6] <author> Robert G. Bland: </author> <title> New finite pivoting rules for the simplex method, </title> <journal> Math. </journal> <note> Operations Research 2 (1977), 103-107. </note>
Reference-contexts: I] [23, Sect. 7].) Bland's least index rule: Choose v 0 such that the (unique) index in I (v)nI (v 0 ) is minimal, that is, choose the edge that leaves the facet with the smallest number (according to the fixed numbering of the facets resp. inequalities) <ref> [6] </ref>.
Reference: [7] <author> Karl Heinz Borgwardt: </author> <title> The Simplex Method. A Probabilistic Analysis, Algorithms and Combinatorics 1, </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg 1987. </address>
Reference-contexts: to the condition that v i must maximize the ratio ec t (v i v i1 ) Thus, in geometric terms, the shadow vertex rule finds a path that projects (under x 7! (c t x; ec t x)) to a path on the boundary of a 2-dimensional shadow [12] <ref> [7] </ref>.
Reference: [8] <author> Timothy Chan: </author> <title> Output-sensitive results on convex hulls, extreme points and related problems, </title> <booktitle> in: Proc. "11th Annual Symposium on Computational Geometry" 1995, </booktitle> <pages> 10-19. </pages>
Reference-contexts: as expected. 1 Note that we use the notation d k where [31] uses k, and visa versa. 26 Theoretically, they note that the running time of the pivoting algorithm can be improved using the ray-shooting data structure of Matousek & Schwarzkopf [24, 25] (a similar observation is found in <ref> [8] </ref>). There is another approach to the output-sensitive intersection of halfspaces, due to Sei-del [33], which is more efficient when the number of vertices greatly exceeds the number of input halfspaces. <p> for n queries, queries n + 1 through 3n with a data structure designed for 2n queries, and, in general, queries (2 i 1)n + 1 through (2 i+1 1)n using a data structure designed for 2 i n queries, as in the remarks after Corollaries 2.4 and 3.4 in <ref> [8] </ref>. This gives us the following.
Reference: [9] <author> Va sek Chv atal: </author> <title> Linear Programming, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York 1983. </address>
Reference-contexts: all known constructions of classes linear programs on which variants of the simplex algorithm are exponential. 13 4 Some (Old) Examples 4.1 The Klee-Minty Cubes The Klee-Minty cubes [23, Sect. 4] are classical: they can be found in any standard text book of linear programming, in Schrijver [32], in Chvatal <ref> [9] </ref>, and even, reluctantly, in Padberg [29, Sect. 5.7.1]. max x d : x 2 KM d where KM d is, for some " with 0 &lt; " &lt; 1 2 , given by the inequality system 0 x 1 1 As deformed products, we obtain them recursively as KM 0
Reference: [10] <author> Yahya Fathi & Craig Tovey: </author> <title> Affirmative action algorithms, Math. </title> <booktitle> Programming 34 (1986), </booktitle> <pages> 292-301. </pages>
Reference-contexts: Here we mostly concentrate on geometrically defined rules. We do not consider randomized pivot rules, although they are very interesting [21] [26]. The same applies for "affirmative action" pivot rules, where exponential lower bounds in the worst case are not available [35] <ref> [10] </ref>.
Reference: [11] <author> Bernard Chazelle, Herbert Edelsbrunner & Leonidas J. Guibas: </author> <title> The complexity of cutting complexes, </title> <journal> Discrete Comput. Geom. </journal> <volume> 4 (1989), </volume> <pages> 139-182. </pages>
Reference: [12] <author> Saul I. Gass and Thomas Saaty: </author> <title> The computational algorithm for the parametric objective function, </title> <journal> Naval Research Logistics Quarterly 2 (1955), </journal> <pages> 39-45. </pages>
Reference-contexts: equivalent to the condition that v i must maximize the ratio ec t (v i v i1 ) Thus, in geometric terms, the shadow vertex rule finds a path that projects (under x 7! (c t x; ec t x)) to a path on the boundary of a 2-dimensional shadow <ref> [12] </ref> [7].
Reference: [13] <author> Bernd G artner & G unter M. Ziegler: </author> <title> Randomized simplex algorithms on Klee-Minty cubes, </title> <booktitle> in: Proc. 35th Annual "Symposium on Foundations of Computer Science" (FOCS), </booktitle> <pages> November 20-22, </pages> <address> 1994, Santa Fe NM, </address> <publisher> IEEE Computer Society Press, </publisher> <address> Los Alami-tos CA, </address> <year> 1994, </year> <pages> pp. 502-510. </pages>
Reference-contexts: 0 = f0g R 0 KM d+1 = (KM d ; x d ) 1 ([0; 1]; ["; 1 "]) R d+1 : It is not difficult to explicitly determine both vertex coordinates and the combinatorial structure of the Klee-Minty cubes, see Avis & Chvatal [4] and Gartner & Ziegler <ref> [13] </ref>. However, this is not necessary for us, since the basic extremal properties follow already from the construction as deformed products.
Reference: [14] <author> Donald Goldfarb: </author> <title> Worst case complexity of the shadow vertex simplex algorithm, </title> <type> Preprint, </type> <address> Columbia University 1983, </address> <pages> 11 pages. </pages>
Reference-contexts: were subsequently obtained by various authors: * by Jeroslow [20] for the greatest increase rule, * by Goldfarb and Sit [16] for the diagonal case of the steepest increase rule, * by Avis & Chvatal [4] for Bland's least index rule (diagonal case) * and by Murty [28] and Goldfarb <ref> [14, 15] </ref> for the diagonal case of the shadow vertex (Gass Saaty) rule. <p> Essentially equivalent, but much more explicit examples (at least from a linear programming point of view) were given by Goldfarb <ref> [14, 15] </ref>. Goldfarb's programs are max ~ d : ~ 2 Gol d where the polytopes Gol d are given by 0 ~ 1 1 fi~ j ~ j1 ~ j+1 ffi j fi~ j + ~ j1 for 2 j &lt; d with fi 2 and ffi &gt; 2fi. <p> They are deformed products! The "additional rotation" that Goldfarb talks about <ref> [14, p. 2] </ref> is represented by a different functional ': Gol 0 = f0g R 0 Gol d+1 = (Gol d ; ~ d 1 The fi-ffi-scaling in these examples seems, however, to be an artifact that remained from the previous work by Goldfarb & Sit. <p> Gol 2 Gol 3 x 1 Again, these polytopes are deformed products: Gol 0 Gol 0 Gol 0 d ; x d flx d1 ) 1 ([0; 1]; ["; 1 "]) R d+1 2 . Theorem 4.4 (Goldfarb <ref> [14, 15] </ref>) The projection : Gol 0 d ! R 2 given by (x) = (x d1 ; x d ) has 2 d vertices. Proof. Our proof follows [14]. <p> Theorem 4.4 (Goldfarb [14, 15]) The projection : Gol 0 d ! R 2 given by (x) = (x d1 ; x d ) has 2 d vertices. Proof. Our proof follows <ref> [14] </ref>.
Reference: [15] <author> Donald Goldfarb: </author> <title> On the complexity of the simplex algorithm, in: Advances in optimization and numerical analysis, </title> <booktitle> Proc. 6th Workshop on Optimization and Numerical Analysis, Oaxaca, </booktitle> <address> Mexico, </address> <publisher> January 1992; Kluwer, </publisher> <address> Dordrecht 1994, </address> <pages> 25-38. </pages>
Reference-contexts: were subsequently obtained by various authors: * by Jeroslow [20] for the greatest increase rule, * by Goldfarb and Sit [16] for the diagonal case of the steepest increase rule, * by Avis & Chvatal [4] for Bland's least index rule (diagonal case) * and by Murty [28] and Goldfarb <ref> [14, 15] </ref> for the diagonal case of the shadow vertex (Gass Saaty) rule. <p> Essentially equivalent, but much more explicit examples (at least from a linear programming point of view) were given by Goldfarb <ref> [14, 15] </ref>. Goldfarb's programs are max ~ d : ~ 2 Gol d where the polytopes Gol d are given by 0 ~ 1 1 fi~ j ~ j1 ~ j+1 ffi j fi~ j + ~ j1 for 2 j &lt; d with fi 2 and ffi &gt; 2fi. <p> Gol 2 Gol 3 x 1 Again, these polytopes are deformed products: Gol 0 Gol 0 Gol 0 d ; x d flx d1 ) 1 ([0; 1]; ["; 1 "]) R d+1 2 . Theorem 4.4 (Goldfarb <ref> [14, 15] </ref>) The projection : Gol 0 d ! R 2 given by (x) = (x d1 ; x d ) has 2 d vertices. Proof. Our proof follows [14].
Reference: [16] <author> Donald Goldfarb & William T. Sit: </author> <title> Worst case behaviour of the steepest edge simplex method, </title> <journal> Discrete Applied Math. </journal> <volume> 1 (1979), </volume> <pages> 277-285. </pages>
Reference-contexts: Analogous results were subsequently obtained by various authors: * by Jeroslow [20] for the greatest increase rule, * by Goldfarb and Sit <ref> [16] </ref> for the diagonal case of the steepest increase rule, * by Avis & Chvatal [4] for Bland's least index rule (diagonal case) * and by Murty [28] and Goldfarb [14, 15] for the diagonal case of the shadow vertex (Gass Saaty) rule. <p> Two combinatorially equivalent polytopes P; Q R d are normally equivalent if additionally their unit facet normals of corresponding facets coincide. An Isomorphism Lemma of the type below was already used by Klee & Minty [23, p. 167] [20, p. 371] <ref> [16, p. 278] </ref>. Our version adds a dimension condition (which is essential: otherwise see [36, p. 71] for a counterexample!), but slightly weakens the conditions otherwise. <p> Then for some 0 &lt; " &lt; 1 2 form the deformed product (P; ') 1 ([0; 1]; ["; 1"]) and use the same proof as for the Klee-Minty cubes. 4.2 The Goldfarb-Sit Cubes Goldfarb & Sit <ref> [16] </ref> constructed linear programs | rescaled Klee-Minty cubes tailored to fool the steepest increase rule | as follows. They analyzed the programs max i=1 where GS d R d is the polytope given by 0 x 1 1 where fi 2, &gt; 2 and ffi i := (fi) i1 .
Reference: [17] <author> Peter Gritzmann & Victor Klee: </author> <title> Mathematical programming and convex geometry, in: Handbook of Convex Geometry (P. </title> <editor> Gruber, J. Wills, eds.), </editor> <volume> Vol. </volume> <editor> B, </editor> <publisher> North Holland, </publisher> <address> Amsterdam 1993, </address> <pages> pp. 627-674. 31 </pages>
Reference-contexts: By Observation 2.6, the same is true for the worst case of the Dantzig rule for this ordering of the inequalities.) Observation 4.2 The Klee-Minty cubes are not projectively equivalent to "standard" cubes, even if this was recently stated by Gritzmann & Klee <ref> [17, p. 646] </ref>. To see this, analyze the following picture, which represents a parallel projection of the 3-dimensional Klee-Minty cube 14 (for " = 1 3 ).
Reference: [18] <author> Martin Gr otschel, L aszl o Lov asz & Alexander Schrijver: </author> <title> Geometric Al--gorithms and Combinatorial Optimization, Algorithms and Combinatorics 2, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg 1988; second edition 1994. </address>
Reference-contexts: In other words, Dantzig's rule follows the same sequence of pivots that is chosen by Bland's rule, provided that we suitably scale the inequalities. General theory [32] <ref> [18] </ref> implies that all the constructions in the following can be realized with small coefficients.
Reference: [19] <author> Tien Huynh, Catherine Lassez and Jean-Louis Lassez: </author> <title> Practical issues on the projection of polyhedral sets, </title> <booktitle> Annals of Mathematics and Artificial Intelligence 6 (1992), </booktitle> <pages> 295-316. </pages>
Reference-contexts: They analyzed and tested two algorithms for computing k-shadows, which we review in detail below. Algorithms for the computation of shadows were also developed in the context of Logic Programming. Huynh, Lassez & Lassez <ref> [19] </ref> experimented with algorithms and approximation algorithms, focusing on implementation issues and experimental performance on their examples. A natural problem to which the computation of shadows is relevant is the maximization of a convex function in k variables over a polytope P .
Reference: [20] <author> Robert G. Jeroslow: </author> <title> The simplex algorithm with the pivot rule of maximizing improvement criterion, </title> <journal> Discrete Math. </journal> <volume> 4 (1973), </volume> <pages> 367-377. </pages>
Reference-contexts: Analogous results were subsequently obtained by various authors: * by Jeroslow <ref> [20] </ref> for the greatest increase rule, * by Goldfarb and Sit [16] for the diagonal case of the steepest increase rule, * by Avis & Chvatal [4] for Bland's least index rule (diagonal case) * and by Murty [28] and Goldfarb [14, 15] for the diagonal case of the shadow vertex <p> by tilting the left base f0g fi P in one way and the right base f1g fi P in the opposite way." (Klee & Minty [23, p. 162]) "the main difficulty to overcome is to insure that the deformed polytope is combi natorially equivalent to V fi P ." (Jeroslow <ref> [20, p. 370] </ref>) In view of this, it is quite surprising that a proper definition of "deformed products" apparently has never been given. <p> Two combinatorially equivalent polytopes P; Q R d are normally equivalent if additionally their unit facet normals of corresponding facets coincide. An Isomorphism Lemma of the type below was already used by Klee & Minty [23, p. 167] <ref> [20, p. 371] </ref> [16, p. 278]. Our version adds a dimension condition (which is essential: otherwise see [36, p. 71] for a counterexample!), but slightly weakens the conditions otherwise. <p> However, we complement his remark "The reader may wish to follow our construction with paper and pencil, since we shall refer to geometrical aspects of it." <ref> [20, p. 372] </ref> by a suitable figure. Lemma 4.10 Let ff (x) denote the first coordinate for points x 2 R 2 in the plane. <p> With the polygons of Lemma 4.10, Jeroslow uses a deformed product construction to obtain linear programs for which the greatest increase rule needs "many" steps. Definition 4.11 (Reversible pairs, Jeroslow <ref> [20] </ref>) Let P R n be a polytope, and ': R d ! R a linear function with '(P ) = [0; 1] in general position on P . <p> With the method of Corollary 4.9 one also gets a lower bound for liminf n!1 H gi (d; n)=n bd=2c that improve somewhat on those by Jeroslow <ref> [20, p. 370] </ref>. 22 5 Shadows One further application of the deformed product construction yields a new result: a lower bound for the complexity of 2-dimensional shadows.
Reference: [21] <author> Gil Kalai: </author> <title> A subexponential randomized simplex algorithm, </title> <booktitle> in: "Proc. 24th ACM Symposium on the Theory of Computing (STOC)", </booktitle> <publisher> ACM Press 1992, </publisher> <pages> 475-482. </pages>
Reference-contexts: A pivot rule determines which vertex to choose. Here we mostly concentrate on geometrically defined rules. We do not consider randomized pivot rules, although they are very interesting <ref> [21] </ref> [26]. The same applies for "affirmative action" pivot rules, where exponential lower bounds in the worst case are not available [35] [10].
Reference: [22] <author> Victor Klee: </author> <title> A class of linear programs requiring a large number of iterations, </title> <journal> Numerical Math. </journal> <volume> 7 (1965), </volume> <pages> 313-321. </pages>
Reference-contexts: Here [. . . ] the still unsolved problem of determining the maximum number has been of central interest since the inception of the simplex method." (Klee <ref> [22, p. 313] </ref>) In other words, Klee asked for the largest possible number H Da (d; n) of bases that might be visited by the simplex algorithm (with Dantzig's largest coefficient rule) on a linear programming problem that defines a (simple, bounded) d-dimensional polytope with at most n facets. <p> The positive reduced cost coefficients correspond to the legal pivots at v <ref> [22, Sect. I] </ref> [23, Sect. 7].) Bland's least index rule: Choose v 0 such that the (unique) index in I (v)nI (v 0 ) is minimal, that is, choose the edge that leaves the facet with the smallest number (according to the fixed numbering of the facets resp. inequalities) [6].
Reference: [23] <author> Victor Klee & George J. Minty: </author> <title> How good is the simplex algorithm?, in: "Inequalities III," </title> <editor> (O. Shisha, ed.), </editor> <publisher> Academic Press, </publisher> <address> New York, </address> <year> (1972), </year> <pages> 159-175. </pages>
Reference-contexts: In this situation Klee & Minty's classic 1972 paper <ref> [23] </ref> established that the quantities H Da (d; n) and H (d; n), at least asymptotically, grow as badly as M (d; n) | both in the diagonal case where n=d is constant, and in the case of constant dimension. 2 Theorem 1.2 (Long increasing paths, Klee & Minty [23]) Increasing <p> paper <ref> [23] </ref> established that the quantities H Da (d; n) and H (d; n), at least asymptotically, grow as badly as M (d; n) | both in the diagonal case where n=d is constant, and in the case of constant dimension. 2 Theorem 1.2 (Long increasing paths, Klee & Minty [23]) Increasing paths, even those followed by the simplex algorithm with Dantzig's rule, on a d-dimensional polytope with 2d facets may visit as many as M (d; 2d) H Da (d; 2d) 2 d distinct vertices (that is, exponentially many in the diagonal case), and they have a bound liminf n!1 <p> (clever) variations of Klee and Minty's method of "tilting facets" or of "deforming products": "Then Q is obtained from the prism [0; 1] fi P by tilting the left base f0g fi P in one way and the right base f1g fi P in the opposite way." (Klee & Minty <ref> [23, p. 162] </ref>) "the main difficulty to overcome is to insure that the deformed polytope is combi natorially equivalent to V fi P ." (Jeroslow [20, p. 370]) In view of this, it is quite surprising that a proper definition of "deformed products" apparently has never been given. <p> Two combinatorially equivalent polytopes P; Q R d are normally equivalent if additionally their unit facet normals of corresponding facets coincide. An Isomorphism Lemma of the type below was already used by Klee & Minty <ref> [23, p. 167] </ref> [20, p. 371] [16, p. 278]. Our version adds a dimension condition (which is essential: otherwise see [36, p. 71] for a counterexample!), but slightly weakens the conditions otherwise. <p> The positive reduced cost coefficients correspond to the legal pivots at v [22, Sect. I] <ref> [23, Sect. 7] </ref>.) Bland's least index rule: Choose v 0 such that the (unique) index in I (v)nI (v 0 ) is minimal, that is, choose the edge that leaves the facet with the smallest number (according to the fixed numbering of the facets resp. inequalities) [6]. <p> This is the basis for virtually all known constructions of classes linear programs on which variants of the simplex algorithm are exponential. 13 4 Some (Old) Examples 4.1 The Klee-Minty Cubes The Klee-Minty cubes <ref> [23, Sect. 4] </ref> are classical: they can be found in any standard text book of linear programming, in Schrijver [32], in Chvatal [9], and even, reluctantly, in Padberg [29, Sect. 5.7.1]. max x d : x 2 KM d where KM d is, for some " with 0 &lt; " &lt; <p> Corollary 4.5 For d 0, H sh (d; 2d) 2 d : 4.4 The Klee-Minty Products In view of the deformed product construction, it is not hard to construct polytopes with "many" vertices on increasing paths in fixed dimension <ref> [23, Sect. 5] </ref>: we iteratively construct deformed products with polygons (that is, we take e = 2). The single extra ingredient needed here | and in the following constructions | is a construction of suitable polygons V; W R 2 . <p> The single extra ingredient needed here | and in the following constructions | is a construction of suitable polygons V; W R 2 . Again, this was first done by Klee and Minty; we replace their Lemma <ref> [23, p. 165] </ref> by the following. Lemma 4.6 Let ff (x) denote a linear function on the plane (x 2 R 2 ). <p> case where d is even we have H (d; n) ( 2n d 1) d=2 , and hence H (d; n) d=2 2 d=2 which converges nicely for n ! 1 if d is fixed. (This amounts to a certain improvement in comparison with the analysis in Klee & Minty <ref> [23, p. 170] </ref>.) 4.5 The Jeroslow Construction In the following, we keep close to Jeroslow's construction and notation.
Reference: [24] <author> Ji r i Matou sek: </author> <title> Linear optimization queries, </title> <booktitle> Journal of Algorithms 14 (1993), </booktitle> <pages> 432-448. </pages>
Reference-contexts: of the elimination algorithm grew quickly with n, as expected. 1 Note that we use the notation d k where [31] uses k, and visa versa. 26 Theoretically, they note that the running time of the pivoting algorithm can be improved using the ray-shooting data structure of Matousek & Schwarzkopf <ref> [24, 25] </ref> (a similar observation is found in [8]). There is another approach to the output-sensitive intersection of halfspaces, due to Sei-del [33], which is more efficient when the number of vertices greatly exceeds the number of input halfspaces. <p> The O (n 2 ) term can be improved to O (n 22=(b d 2 c) + *) by using the data structure for linear programming queries due to Matousek & Schwarzkopf <ref> [24, 25] </ref>. A linear programming query on a family of halfspaces H consists of a linear functional c and, optionally, an affine subspace Q, and the answer is the minimum point of Q, with respect to c, in the intersection of H.
Reference: [25] <author> Ji r i Matou sek & Otfried Schwarzkopf: </author> <title> Linear optimization queries, </title> <booktitle> in: "Proc. 8th Annual Symposium on Computational Geometry" (Berlin 1992), </booktitle> <publisher> ACM Press 1992, </publisher> <pages> 16-25. </pages>
Reference-contexts: of the elimination algorithm grew quickly with n, as expected. 1 Note that we use the notation d k where [31] uses k, and visa versa. 26 Theoretically, they note that the running time of the pivoting algorithm can be improved using the ray-shooting data structure of Matousek & Schwarzkopf <ref> [24, 25] </ref> (a similar observation is found in [8]). There is another approach to the output-sensitive intersection of halfspaces, due to Sei-del [33], which is more efficient when the number of vertices greatly exceeds the number of input halfspaces. <p> The O (n 2 ) term can be improved to O (n 22=(b d 2 c) + *) by using the data structure for linear programming queries due to Matousek & Schwarzkopf <ref> [24, 25] </ref>. A linear programming query on a family of halfspaces H consists of a linear functional c and, optionally, an affine subspace Q, and the answer is the minimum point of Q, with respect to c, in the intersection of H.
Reference: [26] <author> Ji r Matou sek, Micha Sharir & Emo Welzl: </author> <title> A subexponential bound for linear programming, </title> <booktitle> in: "Proc. 8th Annual ACM Symp. Computational Geometry" (Berlin 1992), </booktitle> <publisher> ACM Press 1992, </publisher> <pages> 1-8. </pages>
Reference-contexts: A pivot rule determines which vertex to choose. Here we mostly concentrate on geometrically defined rules. We do not consider randomized pivot rules, although they are very interesting [21] <ref> [26] </ref>. The same applies for "affirmative action" pivot rules, where exponential lower bounds in the worst case are not available [35] [10].
Reference: [27] <author> Peter McMullen: </author> <title> The maximum numbers of faces of a convex polytope, </title> <booktitle> Mathematika 17 (1970), </booktitle> <pages> 179-184. </pages>
Reference-contexts: S. Motzkin had formulated that M (d; n) is given by the number of vertices of the polars (or duals) of cyclic polytopes C d (n); this conjecture, which became known as the Upper Bound Conjecture, was proved in 1970 by McMullen. Theorem 1.1 (The Upper Bound Theorem, McMullen <ref> [27] </ref> [36, Sect. 8.4]) A d-dimensional polytope with n facets may have no more than M (d; n) := n d d b d 2 e 2 c = nk k for d = 2k even, 2 k for d = 2k + 1 odd. vertices, where equality is attained by
Reference: [28] <author> Katta G. Murty: </author> <title> Computational complexity of parametric linear programming, Math. </title> <booktitle> Programming 19 (1980), </booktitle> <pages> 213-219. </pages>
Reference-contexts: Analogous results were subsequently obtained by various authors: * by Jeroslow [20] for the greatest increase rule, * by Goldfarb and Sit [16] for the diagonal case of the steepest increase rule, * by Avis & Chvatal [4] for Bland's least index rule (diagonal case) * and by Murty <ref> [28] </ref> and Goldfarb [14, 15] for the diagonal case of the shadow vertex (Gass Saaty) rule. <p> 3.4 that we may construct the Goldfarb-Sit cubes as deformed products GS 0 = f0g R 0 GS d+1 = (GS d ; x d ) 1 ([0; ffi d+1 ]; [fi; ffi d+1 fi]) R d+1 : and that they are combinatorial d-cubes. 15 4.3 The Goldfarb Cubes Murty <ref> [28] </ref> was the first to construct linear programs (in the framework of linear complementarity problems), of type (d; 2d), which are exponential for the shadow vertex algorithm. Essentially equivalent, but much more explicit examples (at least from a linear programming point of view) were given by Goldfarb [14, 15].
Reference: [29] <author> Manfred Padberg: </author> <title> Linear Programming and Extensions, Algorithms and Combinatorics 12, </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg 1995. </address>
Reference-contexts: programs on which variants of the simplex algorithm are exponential. 13 4 Some (Old) Examples 4.1 The Klee-Minty Cubes The Klee-Minty cubes [23, Sect. 4] are classical: they can be found in any standard text book of linear programming, in Schrijver [32], in Chvatal [9], and even, reluctantly, in Padberg <ref> [29, Sect. 5.7.1] </ref>. max x d : x 2 KM d where KM d is, for some " with 0 &lt; " &lt; 1 2 , given by the inequality system 0 x 1 1 As deformed products, we obtain them recursively as KM 0 = f0g R 0 KM d+1
Reference: [30] <author> Jean Ponce & Bernard Faverjon: </author> <title> On computing three-finger force-closure grasps of polygonal objects, </title> <journal> IEEE Transactions on Robotics and Automation 11 (1995), </journal> <note> to appear. </note>
Reference-contexts: The fixed dimensional case, in particular, is important for a variety of natural geometric optimization problems, and has been studied by a number of researchers. The computation of shadows was studied by Ponce et al. in <ref> [30] </ref> and [31], with respect to a problem in Robotics. In [30] a set of stable three-finger grasps, with friction, of a polygon in the plane, is represented by the three-shadow of a five-dimensional polytope. <p> The fixed dimensional case, in particular, is important for a variety of natural geometric optimization problems, and has been studied by a number of researchers. The computation of shadows was studied by Ponce et al. in <ref> [30] </ref> and [31], with respect to a problem in Robotics. In [30] a set of stable three-finger grasps, with friction, of a polygon in the plane, is represented by the three-shadow of a five-dimensional polytope.
Reference: [31] <author> Jean Ponce, Steve Sullivan, Attawith Sudsang, Jean-Daniel Boissonnat & Jean-Pierre Merlet: </author> <title> On computing four-finger equilibrium and force-closure grasps of polyhedral objects, </title> <journal> International Journal of Robotics Research (1996), </journal> <note> to appear. </note>
Reference-contexts: The fixed dimensional case, in particular, is important for a variety of natural geometric optimization problems, and has been studied by a number of researchers. The computation of shadows was studied by Ponce et al. in [30] and <ref> [31] </ref>, with respect to a problem in Robotics. In [30] a set of stable three-finger grasps, with friction, of a polygon in the plane, is represented by the three-shadow of a five-dimensional polytope. This result is extended in [31], where a subset of the stable four-finger grasps, with friction, of a <p> computation of shadows was studied by Ponce et al. in [30] and <ref> [31] </ref>, with respect to a problem in Robotics. In [30] a set of stable three-finger grasps, with friction, of a polygon in the plane, is represented by the three-shadow of a five-dimensional polytope. This result is extended in [31], where a subset of the stable four-finger grasps, with friction, of a polyhedron in R 3 is computed by taking the 8-shadow of an 11-dimensional polytope. They analyzed and tested two algorithms for computing k-shadows, which we review in detail below. <p> Since the shadow is a simple polytope, each of its vertices is adjacent to exactly k facets of the shadow, so s = O (v). But the only bound we have on v is that v = O (s bk=2c ), from the Upper Bound Theorem. Ponce et al. <ref> [31] </ref> analyze two algorithms and report on experiments with their implementations. The first algorithm just finds the shadow facets, without computing the vertices, using a refinement of the Fourier-Motzkin elimination algorithm for convex hulls. <p> The running time of the pivoting algorithm was a slow growing linear function in the size of the polytope, while the running time of the elimination algorithm grew quickly with n, as expected. 1 Note that we use the notation d k where <ref> [31] </ref> uses k, and visa versa. 26 Theoretically, they note that the running time of the pivoting algorithm can be improved using the ray-shooting data structure of Matousek & Schwarzkopf [24, 25] (a similar observation is found in [8]).
Reference: [32] <author> Alexander Schrijver: </author> <title> Theory of Linear and Integer Programming, Wiley-Interscience Series in Discrete Mathematics and Optimization, </title> <publisher> John Wiley & Sons, </publisher> <address> Chichester New York 1986. </address>
Reference-contexts: In other words, Dantzig's rule follows the same sequence of pivots that is chosen by Bland's rule, provided that we suitably scale the inequalities. General theory <ref> [32] </ref> [18] implies that all the constructions in the following can be realized with small coefficients. <p> basis for virtually all known constructions of classes linear programs on which variants of the simplex algorithm are exponential. 13 4 Some (Old) Examples 4.1 The Klee-Minty Cubes The Klee-Minty cubes [23, Sect. 4] are classical: they can be found in any standard text book of linear programming, in Schrijver <ref> [32] </ref>, in Chvatal [9], and even, reluctantly, in Padberg [29, Sect. 5.7.1]. max x d : x 2 KM d where KM d is, for some " with 0 &lt; " &lt; 1 2 , given by the inequality system 0 x 1 1 As deformed products, we obtain them recursively
Reference: [33] <author> Raimund Seidel: </author> <title> Constructing higher dimensional convex hulls at logarithmic cost per face, </title> <booktitle> Proc. 18th Annual Symposium on the Theory of Computing, </booktitle> <year> (1986), </year> <pages> 404-413. </pages>
Reference-contexts: There is another approach to the output-sensitive intersection of halfspaces, due to Sei-del <ref> [33] </ref>, which is more efficient when the number of vertices greatly exceeds the number of input halfspaces. This is a plane-sweep algorithm; conceptually, a sweep-hyperplane moves across P , maintaining the (d 1)-dimensional slice of P .
Reference: [34] <author> Bernd Sturmfels: </author> <title> Cyclic polytopes and d-order curves, </title> <booktitle> Geometriae Dedicata 24 (1987), </booktitle> <pages> 103-107. </pages>
Reference-contexts: A curve C in R d is of order d if every hyperplane intersects C in at most d points. The convex hull of any set of n &gt; d points that lie on a curve of order d is a cyclic polytope C d (n). Sturmfels <ref> [34] </ref> has shown that if the dimension d is even, then any polytope P that is combinatorially isomorphic to a polytope C d (n) has its vertices on some curve of order d. A facet of P is supported by a (d 1)-plane H which contains d vertices.
Reference: [35] <author> Norman Zadeh: </author> <title> What is the worst case behavior of the simplex algorithm?, </title> <type> Technical Report No. 27, </type> <institution> Dept. Operations Research, </institution> <address> Stanford 1980, </address> <pages> 26 pages. </pages>
Reference-contexts: A pivot rule determines which vertex to choose. Here we mostly concentrate on geometrically defined rules. We do not consider randomized pivot rules, although they are very interesting [21] [26]. The same applies for "affirmative action" pivot rules, where exponential lower bounds in the worst case are not available <ref> [35] </ref> [10].
Reference: [36] <author> G unter M. Ziegler: </author> <title> Lectures on Polytopes, Graduate Texts in Mathematics 152, </title> <publisher> Springer-Verlag, </publisher> <address> New York 1995. </address> <note> Updates, corrections, and more: http://www.math.tu-berlin.de/~ziegler 32 </note>
Reference-contexts: Motzkin had formulated that M (d; n) is given by the number of vertices of the polars (or duals) of cyclic polytopes C d (n); this conjecture, which became known as the Upper Bound Conjecture, was proved in 1970 by McMullen. Theorem 1.1 (The Upper Bound Theorem, McMullen [27] <ref> [36, Sect. 8.4] </ref>) A d-dimensional polytope with n facets may have no more than M (d; n) := n d d b d 2 e 2 c = nk k for d = 2k even, 2 k for d = 2k + 1 odd. vertices, where equality is attained by all <p> Equivalently <ref> [36, Chap. 1] </ref>, a polytope P is the convex hull of a finite set of points in R d , written P = convfp 1 ; : : : ; p m g for points p i 2 R d . <p> Proof. See e.g. <ref> [36, Prop. 2.3] </ref>. A d-polytope is simple if every vertex lies on exactly d facets, or (equivalently) on exactly d edges. <p> In the following, a polytope of type (d; n) is a simple d-dimensional polytope with at most n facets. It is always understood that the parameters n and d satisfy n &gt; d &gt; 0 or (d; n) = (0; 0). We refer, for example, to <ref> [36] </ref> for other basic combinatorial properties of convex polytopes. <p> An Isomorphism Lemma of the type below was already used by Klee & Minty [23, p. 167] [20, p. 371] [16, p. 278]. Our version adds a dimension condition (which is essential: otherwise see <ref> [36, p. 71] </ref> for a counterexample!), but slightly weakens the conditions otherwise. <p> The (geometric) simplex algorithm <ref> [36, Sect. 3.2] </ref> proceeds from any vertex v to a better adjacent vertex, that is, to a vertex v 0 such that I (v) and I (v 0 ) differ in exactly one element, and such that c t v &lt; c t v 0 . <p> This is equivalent to the conclusion that for large n a monotone path through all vertices cannot be found 28 by the "shadow vertex algorithm," for any realization of C d (n) . Equivalently, a Bruggesser--Mani shelling of C d (n) <ref> [36, Sect. 8.2] </ref> cannot in general be generated by a 2-dimensional section of C d (n) that would cut all the facets. In fact, we show that in even dimensions the shadow of a polar of a cyclic polytope must have asymptotically fewer vertices than the polytope itself. <p> In fact, we show that in even dimensions the shadow of a polar of a cyclic polytope must have asymptotically fewer vertices than the polytope itself. Let us review some properties of cyclic polytopes; for more details, see <ref> [36, Example 0.6] </ref>. A curve C in R d is of order d if every hyperplane intersects C in at most d points. The convex hull of any set of n &gt; d points that lie on a curve of order d is a cyclic polytope C d (n). <p> Thus the vertex set of any facet of P is a union of adjacent pairs v i ; v i+1 ("Gale's evenness criterion" <ref> [36, Thm. 0.7] </ref>). Every face of smaller dimension is determined by a subset of the vertex set of a facet.
References-found: 36

