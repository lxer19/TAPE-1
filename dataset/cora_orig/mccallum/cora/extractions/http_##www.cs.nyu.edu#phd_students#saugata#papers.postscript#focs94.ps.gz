URL: http://www.cs.nyu.edu/phd_students/saugata/papers.postscript/focs94.ps.gz
Refering-URL: http://www.cs.nyu.edu/phd_students/saugata/index.html
Root-URL: http://www.cs.nyu.edu
Title: On the combinatorial and algebraic complexity of Quantifier Elimination  
Author: S. Basu R. Pollack M.-F. Roy 
Note: Supported in part by NSF grant CCR-9122103, and NSA grant MDA904-92-H-3075. Supported in part by the project ESPRIT-BRA 6846POSSO  
Address: New York, New York, Campus de Beaulieu NY 10012 NY 10012 35042 Rennes cedex FRANCE  
Affiliation: Department of Department of Department of Computer Science, Mathematics, Mathematics, Courant Institute Courant Institute Universite de Rennes  
Abstract: In this paper we give a new algorithm for performing quantifier elimination from first order formulae over real closed fields. This algorithm improves the complexity of the asymptotically fastest algorithm for this problem, known to this date. A new feature of our algorithm is that the role of the algebraic part (the dependence on the degrees of the input polynomials) and the combinatorial part (the dependence on the number of polynomials) are separated, making possible our improved complexity bound. Another new feature is that the degrees of the polynomials in the equivalent quantifier-free formula that we output, are independent of the number of input polynomials. As special cases of this algorithm, we obtain new and improved algorithms for deciding a sentence in the first order theory over real closed fields, and also for solving the existential problem in the first order theory over real closed fields. Using the theory developed in this paper, we also give an improved bound on the radius of a ball centered at the origin, which is guaranteed to intersect every connected component of the sign partition induced by a family of polynomials. We also use our methods to obtain algorithms for solving certain decision problems in real and complex geometry which improves the complexity of the currently known algorithms for these problems. fl Supported in part by NSF grant CCR-9122103
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. E. Alonso, E. Becker, M.-F. Roy. T. </author> <note> Wormann Zeros, Multiplicities and Idempotents for Zero Dimensional Systems to appear in MEGA 94. </note>
Reference-contexts: The degrees of the polynomials are bounded by d, and the coefficients are drawn from an ordered domain D, contained in a real closed field R: We are given a first-order formula of the form, (Q ! X [!] ) : : : (Q 1 X <ref> [1] </ref> )F (P 1 ; : : : ; P s ); (henceforth, denoted (Y )) where, Q i 2 f8; 9g; Q i 6= Q i+1 , Y = (Y 1 ; : : : ; Y l ) is a block of l free variables, X [i] is a <p> ) is a block of l free variables, X [i] is a block of k i variables, P F (P 1 ; : : :; P s ) is a quantifier-free Boolean formula with atomic predicates of the form, P i (Y; X [!] ; : : : ; X <ref> [1] </ref> ) * 0; 1 i s; where * 2 f&gt;; &lt;; =g . The quantifier elimination problem is to construct a quantifier-free Boolean formula, (Y ), such that for any y 2 R l ; (y) is true if and only if (y) is true. <p> g D [X 1 ; : : : ; X k ; Y 1 ; : : : ; Y l ] of polynomials whose degrees are bounded by d; as well as a first-order formula, (Y ) = (Q ! X [!] ) : : : (Q 1 X <ref> [1] </ref> )F (P 1 ; : : : ; P s ); there exists an equivalent quantifier-free formula, (Y ) = _ I j=1 (P ij (Y ) * ij 0); where P ij (Y ) are polynomials in the variables Y , * ij 2 f&gt;; &lt;; =g J i <p> As special cases of the above theorem, we immedi ately derive the following two corollaries. Corollary 1 (The General Decision Problem) Given a first order formula of the form, (Q ! X [!] )(Q !1 X [!1] ) : : : (Q 1 X <ref> [1] </ref> )F (P 1 ; : : : ; P s ); where, Q i 2 f8; 9g; Q i 6= Q i+1 ; X [i] is a block of k i variables, P a quantifier-free Boolean formula, with atoms of the form P i (X [!] ; : : : <p> 1 ; : : : ; P s ); where, Q i 2 f8; 9g; Q i 6= Q i+1 ; X [i] is a block of k i variables, P a quantifier-free Boolean formula, with atoms of the form P i (X [!] ; : : : ; X <ref> [1] </ref> ) * 0, where * 2 f&gt;; &lt;; =g; there exists a well-behaved algorithm to decide the truth of the formula which uses s (k i +1) d O (k i ) arithmetic op erations in D. If ! = 1, we have the following corollary. <p> In order to compute the real solutions to the system of equations, Q 1 = @X 2 @Q 1 = 0; we do a Chow polynomial computation, following <ref> [1] </ref>, and output a set of univariate representations consisting of (k + 2)-tuples of univariate polynomials, (f (t); g 0 (t); : : : ; g k (t)), such that the complex zeroes of the above system are among the points obtained by evaluating the rational functions ( g 1 (t) <p> Given the input set of polynomials, P = fP 1 ; : : : ; P s g in k + l variables, X <ref> [1] </ref> ; : : : ; X [!] ; Y , we first call the Parametrized Sample Points Subroutine treating the variables X [2] ; : : : ; X [!] ; Y as parameters. <p> to the specialized output tuples, (f (x 1 ; ffi 1 ; t 1 ); g 0 (x 1 ; ffi 1 ; t 1 ); : : : ; g k 1 (x 1 ; ffi 1 ; t 1 )); intersects every cell of P (x 1 )(X <ref> [1] </ref> ), in (Rhffi 1 i) k 1 : The sign conditions of the polynomials P (x 1 )(X [1] ) at these points is denoted by, SIGN 1 (x 1 ). Note that X [1] is the innermost block of quantified variables, and we eliminate it, by partitioning R k+lk <p> ; ffi 1 ; t 1 ); : : : ; g k 1 (x 1 ; ffi 1 ; t 1 )); intersects every cell of P (x 1 )(X <ref> [1] </ref> ), in (Rhffi 1 i) k 1 : The sign conditions of the polynomials P (x 1 )(X [1] ) at these points is denoted by, SIGN 1 (x 1 ). Note that X [1] is the innermost block of quantified variables, and we eliminate it, by partitioning R k+lk 1 in such a way, that over each cell of the partition, the set SIGN 1 (x 1 ) <p> ; ffi 1 ; t 1 )); intersects every cell of P (x 1 )(X <ref> [1] </ref> ), in (Rhffi 1 i) k 1 : The sign conditions of the polynomials P (x 1 )(X [1] ) at these points is denoted by, SIGN 1 (x 1 ). Note that X [1] is the innermost block of quantified variables, and we eliminate it, by partitioning R k+lk 1 in such a way, that over each cell of the partition, the set SIGN 1 (x 1 ) remains invariant. <p> family of s polynomials, fP 1 ; : : :; P s g, in k variables, (X 1 ; : : : ; X k ), and let denote the partition of the set of vari ables (X 1 ; : : : ; X k ) into blocks, X <ref> [1] </ref> ; : : : ; X [!] , where the block X [i] is of size k i ; 1 i !. For x [!] 2 R k ! ; : : : ; x [1] 2 R k 1 ; let SIGN ;0 (P)(x [!] ; : : :; <p> ables (X 1 ; : : : ; X k ) into blocks, X <ref> [1] </ref> ; : : : ; X [!] , where the block X [i] is of size k i ; 1 i !. For x [!] 2 R k ! ; : : : ; x [1] 2 R k 1 ; let SIGN ;0 (P)(x [!] ; : : :; x [1] ) = (sign (P 1 (x [!] ; : : : ; x [1] )); : : : ; sign (P s (x [!] ; : : : ; x [1] ))): For x <p> For x [!] 2 R k ! ; : : : ; x <ref> [1] </ref> 2 R k 1 ; let SIGN ;0 (P)(x [!] ; : : :; x [1] ) = (sign (P 1 (x [!] ; : : : ; x [1] )); : : : ; sign (P s (x [!] ; : : : ; x [1] ))): For x [i+1] 2 R k i+1 ; : : : ; x [!] 2 R k ! <p> For x [!] 2 R k ! ; : : : ; x <ref> [1] </ref> 2 R k 1 ; let SIGN ;0 (P)(x [!] ; : : :; x [1] ) = (sign (P 1 (x [!] ; : : : ; x [1] )); : : : ; sign (P s (x [!] ; : : : ; x [1] ))): For x [i+1] 2 R k i+1 ; : : : ; x [!] 2 R k ! , and for all i, 0 &lt; i !, we recursively define, SIGN ;i <p> : ; x <ref> [1] </ref> 2 R k 1 ; let SIGN ;0 (P)(x [!] ; : : :; x [1] ) = (sign (P 1 (x [!] ; : : : ; x [1] )); : : : ; sign (P s (x [!] ; : : : ; x [1] ))): For x [i+1] 2 R k i+1 ; : : : ; x [!] 2 R k ! , and for all i, 0 &lt; i !, we recursively define, SIGN ;i (P)(x [!] ; : : : ; x [i+1] ) = fSIGN ;i1 (P)(x [!] ; : <p> fSIGN ;i1 (P)(x [!] ; : : :; x [i+1] ; x [i] )jx [i] 2 R k i g: Finally, we define the total list of signs of P with re spect to the partition of the variables into the blocks, (X [!] ; : : : ; X <ref> [1] </ref> ); as SIGN (P) = SIGN ;! (P): A given formula, (Q ! X [!] )(Q !1 X [!1] ) : : : (Q 1 X [1] )F (P 1 ; : : : ; P s ); can be decided easily from the set SIGN (P): The number of <p> signs of P with re spect to the partition of the variables into the blocks, (X [!] ; : : : ; X <ref> [1] </ref> ); as SIGN (P) = SIGN ;! (P): A given formula, (Q ! X [!] )(Q !1 X [!1] ) : : : (Q 1 X [1] )F (P 1 ; : : : ; P s ); can be decided easily from the set SIGN (P): The number of evaluations of the Boolean formula F that is required is no more than the size of the set SIGN (P): We prove a bound on the size <p> Theorem 2 Let denote a partition of the set of variables (X 1 ; : : : ; X k ) into blocks, X <ref> [1] </ref> ; : : :; X [!] , where the block X [i] is of size k i ; 1 i !. Then the size of the set SIGN (P) is bounded by s (k i +1) d O (k i ) .
Reference: [2] <author> S. Basu, R. Pollack, M.-F. </author> <title> Roy A New Algorithm to Find a Point in Every Cell Defined by a Family of Polynomials in "Quantifier Elimination and Cylindrical Algebraic Decomposition", </title> <editor> B. Caviness and J. Johnson Eds., </editor> <publisher> Springer-Verlag, to appear. </publisher>
Reference-contexts: Given a polynomial Q with coefficients in a real closed field R, we will denote by Z (Q) the set of real zeros of Q. Our algorithm builds on the following basic subroutine, which we call the Parametrized Sample Points Subroutine (see [4] or <ref> [2] </ref>). <p> Given the input set of polynomials, P = fP 1 ; : : : ; P s g in k + l variables, X [1] ; : : : ; X [!] ; Y , we first call the Parametrized Sample Points Subroutine treating the variables X <ref> [2] </ref> ; : : : ; X [!] ; Y as parameters. <p> Using the well known properties of subresultant coefficients, it can be easily shown that as x 1 varies over each cell of Q 1 , the set SIGN 1 (x 1 ) remains invariant, as claimed. Next, we eliminate the block X <ref> [2] </ref> . More precisely, we compute a set of polynomials Q 2 D [ X 2 ]; with the property that the k 2 dimensional fibre over each point in one cell of Q 2 , meets exactly the same cells of Q 1 . <p> This in turn implies that the set, SIGN 2 (x 2 ) = fSIGN 1 (x <ref> [2] </ref> ; x 2 )jx [2] 2 R k 2 g remains invariant as x 2 varies over each cell of Q 2 . Moreover, we compute parametrized points in each of these cells. <p> This in turn implies that the set, SIGN 2 (x 2 ) = fSIGN 1 (x <ref> [2] </ref> ; x 2 )jx [2] 2 R k 2 g remains invariant as x 2 varies over each cell of Q 2 . Moreover, we compute parametrized points in each of these cells.
Reference: [3] <author> S. Basu, R. Pollack, M.-F. </author> <title> Roy On the number of cells defined by a family of polynomials on a variety. " Algorithmic foundations of robotics", K.Y. </title> <editor> Goldberg, D. Halperin, J.-C. Latombe, R.H. Wilson, Eds., A.K. Peters, </editor> <address> Boston, </address> <note> to appear. </note>
Reference-contexts: We say that such points are defined over D [*]. We denote by eval * the map from the valuation ring of Rh*i to R, obtained by evaluating the Puiseux series at * = 0. We refer the reader to <ref> [3] </ref> for a complete list of properties of Puiseux series that we utilize. Whenever we compute a point x = (x 1 ; : : : ; x k ) what we actually compute is : 1. A univariate polynomial f (t). 2. <p> The following basic proposition, which we prove in <ref> [3] </ref>, makes it possible to reduce the problem of computing a point in every cell of P, to finding points in every connected component of certain algebraic sets. <p> It is possible to compute points in every connected component of such an algebraic set using d O (k) arithmetic operations (this is implicit in [9], [25]). We follow <ref> [3] </ref> and compute these points using the Cell Representatives Subroutine. We briefly outline the Cell Representatives Subroutine. <p> These points are the real solutions to the equations, Q 1 = @X 2 @Q 1 = 0: The following Proposition, whose proof appears in <ref> [3] </ref>, proves the claimed properties of Z (Q 1 ), and also provides an easy way to do computations in the quotient ring of the ideal generated by Q 1 ; @X 2 @Q 1 : Proposition 2 Let Q, and Q 1 be as above.
Reference: [4] <author> S. Basu, R. Pollack, M.-F. </author> <title> Roy On the combinatorial and algebraic complexity of Quantifier Elimination. </title> <type> Preprint. </type>
Reference-contexts: We will skip many details, and refer the reader to the full paper <ref> [4] </ref>, where we present the algorithm in greater detail. In our algorithms, we construct points whose coordinates belong to certain real closed non-archimedean extensions of R. Typically, these are fields of Puiseux series, in one or more infinitesimals, with coefficients in R. <p> Given a polynomial Q with coefficients in a real closed field R, we will denote by Z (Q) the set of real zeros of Q. Our algorithm builds on the following basic subroutine, which we call the Parametrized Sample Points Subroutine (see <ref> [4] </ref> or [2]). <p> Finally we replace by a sufficiently large element of R (see <ref> [4] </ref>). We remark that the Cell Representatives Subroutine is completely uniform, except the last step where we let ! 0; and that the dimension of the quotient ring, is independent of the particular coefficients of Q. <p> The proof of correctness of this procedure can be found in the full paper <ref> [4] </ref>. The input set of polynomials P, in general will not satisfy the general position requirement. <p> The matrix is of size N fi N and its characteristic polynomial can be computed using N O (1) arithmetic operations in D. The details can be found in [24] or in the full paper <ref> [4] </ref>. We compute these coefficients, which are polynomials in Y , and also compute the set of realizable sign conditions for these polynomials. We output those sign conditions which give the right answer to the Sturm query as a disjunction of conjunctive Boolean formulae.
Reference: [5] <author> M. Ben-Or, D. Kozen , J. </author> <title> Reif The complexity of elementary algebra and geometry. </title> <journal> J. of Computer and Systems Sciences, </journal> <volume> 32:251- 264, </volume> <year> (1986). </year>
Reference-contexts: We call this the Inverse Sign Determination Subroutine. Roughly, the idea is the following. 2.3 The Inverse Sign Determination Sub routine We assume that the reader is familiar with the Sign Determination Algorithm ([27],[24], inspired by <ref> [5] </ref>).
Reference: [6] <author> J. Bochnak, M. Coste, M.-F. Roy Geometrie algebrique reelle. </author> <month> Springer-Verlag </month> <year> (1987). </year>
Reference: [7] <author> B. </author> <title> Buchberger Grobner bases: an algorithmic method in polynomial ideal theory. Recent trends in multidimensional systems theory, </title> <editor> Reider ed. Bose, </editor> <year> (1985). </year>
Reference: [8] <author> J. </author> <title> Canny Some Algebraic and Geometric Computations in PSPACE, </title> <booktitle> Proc. Twentieth ACM Symp. on Theory of Computing, </booktitle> <pages> 460-467, </pages> <year> (1988). </year>
Reference: [9] <author> J. Canny, </author> <title> Improved algorithms for sign determination and existential quantifier elimination, </title> <journal> the Computer Journal, </journal> <volume> 36 </volume> <pages> 409-418, </pages> <year> (1993). </year>
Reference-contexts: It is possible to compute points in every connected component of such an algebraic set using d O (k) arithmetic operations (this is implicit in <ref> [9] </ref>, [25]). We follow [3] and compute these points using the Cell Representatives Subroutine. We briefly outline the Cell Representatives Subroutine.
Reference: [10] <author> G. E. Collins, </author> <title> Quantifier elimination for real closed fields by cylindrical algebraic decomposition Springer Lecture Notes in Computer Science 33, </title> <address> 515- 532. </address>
Reference: [11] <author> M. Coste, M.-F. Roy Thom's lemma, </author> <title> the coding of real algebraic numbers and the topology of semi-algebraic sets. </title> <journal> J. </journal> <note> of Symbolic Computation 5 121- 129 (1988). </note>
Reference: [12] <author> M. Giusti, J. </author> <title> Heintz La determination des points isoles d'une variete algebrique peut se faire en temps polynomial Proc. </title> <booktitle> Int. Meeting on Commutative Algebra, </booktitle> <month> Cortona </month> <year> (1991) </year> . 
Reference-contexts: Our techniques can be applied to decision problems in complex geometry improving slightly the results of <ref> [12] </ref> and [20], since we achieve the same complexity with deterministic algorithms, rather than with prob abilistic ones.
Reference: [13] <author> D. Grigor'ev, </author> <title> The Complexity of deciding Tarski algebra Journal of Symbolic Computation 5 (1988), </title> <type> 65-108. </type>
Reference: [14] <author> D. Grigor'ev, N. </author> <title> Vorobjov Solving Systems of Polynomial Inequalities in Subexponential Time, </title> <journal> J. Symbolic Comput., </journal> <volume> 5 </volume> <pages> 37-64, </pages> <year> (1988). </year>
Reference-contexts: This result improves the bound in [19], where the dependence on k was doubly exponential as well as the bound in <ref> [14] </ref> which depended on s. 3.2 Real and Complex Decision Problems As applications of our techniques, we give improved algorithms for several problems in real and complex geometry.
Reference: [15] <author> D. Grigor'ev, N. </author> <title> Vorobjov Counting connected components of a semi-algebraic set in subex-ponential time. </title> <journal> Comput. </journal> <note> Complexity, 2 :133-186 (1992). </note>
Reference: [16] <author> J. Heintz, M.-F. Roy, P. Solern o Sur la complexite du principe de Tarski-Seidenberg. </author> <title> Bull. </title> <publisher> Soc. Math. </publisher> <address> France 118 101-126 (1990). </address>
Reference-contexts: decision problem, and the quantifier elimination problem, which do not assume any particular structure on the input formulae, have this property (see [25]). * It is well parallelizable i.e. it can be described by an arithmetic network whose depth is a polynomial in the log of the sequential complexity (see <ref> [16] </ref>).
Reference: [17] <author> J. Heintz, M.-F. Roy, P. </author> <title> Solern o On the Complexity of Semi-Algebraic Sets, </title> <booktitle> Proc. IFIP 89, </booktitle> <address> San Francisco. </address> <publisher> North-Holland 293-298 (1989). </publisher>
Reference: [18] <author> J. Heintz, M.-F. Roy, and P. </author> <title> Solern o Single Exponential Path Finding in Semi-Algebraic sets: Part II: The general case, Algebraic geometry and its applications, </title> <editor> C. Bajaj editor, </editor> <publisher> Springer Verlag (1993) 467-481. </publisher>
Reference: [19] <author> P. </author> <title> Koiran A Weak Version of the Blum, </title> <booktitle> Shub & Smale model Proc. 34th IEEE Symp. on Foundations of Computer Science 486-495 (1993). </booktitle>
Reference-contexts: This result improves the bound in <ref> [19] </ref>, where the dependence on k was doubly exponential as well as the bound in [14] which depended on s. 3.2 Real and Complex Decision Problems As applications of our techniques, we give improved algorithms for several problems in real and complex geometry.
Reference: [20] <author> T. Krick, L. </author> <title> M Pardo A Computational Method for Diophantine Approximation To appear in MEGA 94 </title> . 
Reference-contexts: Our techniques can be applied to decision problems in complex geometry improving slightly the results of [12] and <ref> [20] </ref>, since we achieve the same complexity with deterministic algorithms, rather than with prob abilistic ones.
Reference: [21] <author> R. </author> <title> Loos Generalized polynomial remainder sequences, Computer Algebra : Symbolic and Algebraic Computation, </title> <editor> B. Buchberger, G. E. Collins, R. Loos editors. </editor> <publisher> Springer-Verlag, </publisher> <year> (1983) </year> <month> 115-138. </month>
Reference-contexts: We obtain such a partition by computing a set of polynomials Q 1 D [ X 1 ], such that the set SIGN 1 (x 1 ) remains invariant over each cell of Q 1 : We make use of the classical theory of subresultant coefficient sequences (see <ref> [21] </ref>, or [22]) and compute the subresultant coefficient sequences, of the following pairs of polynomials.
Reference: [22] <author> B. </author> <title> Mishra Algorithmic Algebra, </title> <publisher> Springer-Verlag, </publisher> <year> (1993). </year>
Reference-contexts: We obtain such a partition by computing a set of polynomials Q 1 D [ X 1 ], such that the set SIGN 1 (x 1 ) remains invariant over each cell of Q 1 : We make use of the classical theory of subresultant coefficient sequences (see [21], or <ref> [22] </ref>) and compute the subresultant coefficient sequences, of the following pairs of polynomials.
Reference: [23] <author> R. Pollack, M.-F. </author> <title> Roy On the number of cells defined by a set of polynomials, </title> <journal> C. R. Acad. Sci. Paris, </journal> <volume> 316 </volume> <pages> 573-577, </pages> <year> (1993). </year>
Reference: [24] <author> P. Pedersen, M.-F. Roy, A. </author> <title> Szpirglas Counting real zeroes in the multivariate case, Computational algebraic geometry, </title> <editor> Eyssette et Gal-ligo ed. </editor> <booktitle> Progress in Mathematics 109, </booktitle> <pages> 203-224, </pages> <note> Birkhauser (1993). </note>
Reference-contexts: However, this means that we know the particular Sturm queries made and also the answers to these queries. The Sturm query computation, (following <ref> [24] </ref>) involves computing the sign variations of the coefficients of the characteristic polynomial of a matrix. The matrix is of size N fi N and its characteristic polynomial can be computed using N O (1) arithmetic operations in D. The details can be found in [24] or in the full paper <p> The Sturm query computation, (following <ref> [24] </ref>) involves computing the sign variations of the coefficients of the characteristic polynomial of a matrix. The matrix is of size N fi N and its characteristic polynomial can be computed using N O (1) arithmetic operations in D. The details can be found in [24] or in the full paper [4]. We compute these coefficients, which are polynomials in Y , and also compute the set of realizable sign conditions for these polynomials. We output those sign conditions which give the right answer to the Sturm query as a disjunction of conjunctive Boolean formulae.
Reference: [25] <author> J. </author> <title> Renegar On the computational complexity and geometry of the first order theory of the reals, </title> <journal> J. of Symbolic Comput., </journal> <year> (1992). </year>
Reference-contexts: Note that all the known algorithms for the decision problem, and the quantifier elimination problem, which do not assume any particular structure on the input formulae, have this property (see <ref> [25] </ref>). * It is well parallelizable i.e. it can be described by an arithmetic network whose depth is a polynomial in the log of the sequential complexity (see [16]). <p> It is possible to compute points in every connected component of such an algebraic set using d O (k) arithmetic operations (this is implicit in [9], <ref> [25] </ref>). We follow [3] and compute these points using the Cell Representatives Subroutine. We briefly outline the Cell Representatives Subroutine. <p> More precisely, we follow <ref> [25] </ref> and define H i = 1 + P j , for 1 i s, where d 0 is the least even integer greater than d, the maximum degree of the polynomials in P.
Reference: [26] <author> J. </author> <title> Renegar Recent progress on the complexity of the decision problem for the reals, Discrete and Computational Geometry: </title> <booktitle> Papers from the DI-MACS Special Year. DIMACS series in Discrete Mathematics and Theoretical Computer Science, AMS-ACM. </booktitle> <volume> 6 </volume> <pages> 287-308, </pages> <year> (1991). </year>
Reference: [27] <author> M.-F. Roy, A. </author> <title> Szpirglas Complexity of computations with real algebraic numbers, </title> <journal> J. of Symbolic Comput., </journal> <volume> 10 </volume> <pages> 39-51, </pages> <year> (1990). </year>
Reference: [28] <author> A. </author> <title> Seidenberg A new decision method for elementary algebra, </title> <journal> Annals of Mathematics, </journal> <volume> 60 </volume> <pages> 365-374, </pages> <year> (1954). </year>
Reference: [29] <author> A. </author> <title> Tarski A Decision method for elementary algebra and geometry, </title> <publisher> University of California Press (1951). </publisher>
Reference-contexts: The complexity of the decision procedure for the first order theory of the reals, given by Tarski <ref> [29] </ref> (see also ([28]) was not elementary recursive. The first algorithm, with a reasonable worst-case time bound was given by Collins ([10]). His algorithm had a worst case running time doubly exponential in the number of variables.
Reference: [30] <author> B. L. </author> <title> Van Der Waerden Modern Algebra, Volume II, </title> <editor> F. </editor> <publisher> Ungar Publishing Co. </publisher> <year> (1950). </year>
References-found: 30

