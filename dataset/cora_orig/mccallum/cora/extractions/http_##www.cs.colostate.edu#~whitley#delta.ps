URL: http://www.cs.colostate.edu/~whitley/delta.ps
Refering-URL: http://www.cs.colostate.edu/~whitley/Pubs.html
Root-URL: 
Title: Initial Performance Comparisons for the Delta Coding Algorithm  
Author: Keith E. Mathias and L. Darrell Whitley 
Abstract: Delta coding is an iterative genetic search strategy that sustains search by periodically re-initializing the population. This helps to avoid premature convergence during genetic search. Delta coding also remaps hyperspace with each iteration in an attempt to locate "easier" search spaces with respect to genetic search. Here, the optimization ability of delta coding is compared against the CHC genetic algorithm and a mutation driven stochastic hill-climbing algorithm on a suite of standard genetic algorithm test functions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James Baker. </author> <title> Adaptive Search Methods for Genetic Algorithms. </title> <editor> In John Grefenstette, editor, </editor> <booktitle> Proceedings of an International Conference on Genetic Algorithms and Their Applications, </booktitle> <pages> pages 101-111, </pages> <year> 1985. </year>
Reference: [2] <editor> Lashon Booker. </editor> <title> Improving Search in Genetic Algorithms. </title> <editor> In Lawrence Davis, editor, </editor> <title> Genetic Algorithms and Simulated Annealing, </title> <booktitle> chapter 5, </booktitle> <pages> pages 61-73. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: For the comparisons in Table 2 the cataclysmic mutation rate (35%), population size (50) and HUX crossover threshold parameters for the CHC algorithm were set as suggested by Eshelman [4]. The delta coding algorithm used two point reduced surrogate crossover <ref> [2] </ref>. When Gray coding is not applied to the functions in the test set, the stochastic hill-climber can solve only one of the test functions consistently (F3). Even the CHC genetic algorithm cannot consistently solve the F6 and F8 test functions when Gray coding is not used.
Reference: [3] <author> Ken DeJong. </author> <title> An Analysis of the Behavior of a Class of Genetic Adaptive Systems. </title> <type> PhD thesis, </type> <institution> University of Michigan, Department of Computer and Communication Sciences Ann Arbor, Michigan, </institution> <year> 1975. </year>
Reference-contexts: V. Algorithm Performance Comparisons The test functions for the comparisons presented here included the DeJong test suite (F1 - F5) <ref> [3, 5] </ref> and the Ras-trigin (F6), Schwefel (F7) and Griewank (F8) functions [10]. Previous genetic algorithm performance comparisons using these functions report the use of Gray coding to enhance performance [4, 11]. <p> Additionally, these results lead to the conclusion that the suite of test problems used here, although currently serving as the genetic algorithm community benchmark, need to be reviewed. Many of these functions were never intended to be lasting genetic algorithm benchmarks <ref> [3] </ref> and there is a real need for a new and more difficult test suite for genetic algorithm performance comparisons. We also question the use of Gray coding in comparative work when using test functions that were designed to be difficult in either numeric or standard binary space.
Reference: [4] <editor> Larry Eshelman. </editor> <title> The CHC Adaptive Search Algorithm. How to Have Safe Search When Engaging in Nontraditional Genetic Recombination. </title> <editor> In G. Rawlins, editor, </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <pages> pages 265-283. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: The subpartition of hyperspace surrounding point 2 is then searched, converging on point 3. The search eventually converges on point 5. solution (i.e. 1 & 2) on consecutive iterations using a reduced search space string representation. The CHC Adaptive Search Algorithm <ref> [4] </ref>, is a generational genetic search model. However, this algorithm differs from the standard genetic algorithm in several ways and seems to be designed such that all of its subcompo-nents are necessary to achieve the best performance. <p> However, this algorithm differs from the standard genetic algorithm in several ways and seems to be designed such that all of its subcompo-nents are necessary to achieve the best performance. First of all, the CHC algorithm employs heterogeneous recombination as a method of "incest prevention" <ref> [4] </ref>. The operator designed for this task performs uniform crossover over half of the differing bits (HUX). HUX is a very disruptive crossover operator designed to sample new points in the search space by ensuring that parents paired for recombination have at least some appreciable differences. <p> Algorithm Performance Comparisons The test functions for the comparisons presented here included the DeJong test suite (F1 - F5) [3, 5] and the Ras-trigin (F6), Schwefel (F7) and Griewank (F8) functions [10]. Previous genetic algorithm performance comparisons using these functions report the use of Gray coding to enhance performance <ref> [4, 11] </ref>. Therefore, we tested the ability of the stochastic hill-climbing algorithm to locate the optimal solution on these functions using Gray coding. A wide range of mutation rates were tested, with the best results being reported in Table 1. <p> Table 1 shows that when Gray coding is employed, the stochastic hill-climbing algorithm consistently finds the optimal solution for 6 of the 8 test functions. Additionally, the stochastic hill-climber is able to solve many of these functions faster than many genetic algorithms, as reported in other studies <ref> [4, 11] </ref>. However, many of these 2 Several methods have been reported for determining the optimality for F4. Here, we have used the evaluation value of -2.5 to determine when optimality has been reached. test functions were designed specifically to be difficult for hill-climbers. <p> For the comparisons in Table 2 the cataclysmic mutation rate (35%), population size (50) and HUX crossover threshold parameters for the CHC algorithm were set as suggested by Eshelman <ref> [4] </ref>. The delta coding algorithm used two point reduced surrogate crossover [2]. When Gray coding is not applied to the functions in the test set, the stochastic hill-climber can solve only one of the test functions consistently (F3).
Reference: [5] <author> David Goldberg. </author> <title> Genetic Algorithms in Search, Optimization and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: V. Algorithm Performance Comparisons The test functions for the comparisons presented here included the DeJong test suite (F1 - F5) <ref> [3, 5] </ref> and the Ras-trigin (F6), Schwefel (F7) and Griewank (F8) functions [10]. Previous genetic algorithm performance comparisons using these functions report the use of Gray coding to enhance performance [4, 11].
Reference: [6] <author> David Goldberg. </author> <title> Sizing Populations for Serial and Parallel Genetic Algorithms. </title> <editor> In J. D. Schaffer, editor, </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pages 70-79. </pages> <publisher> Morgan Kauffman, </publisher> <year> 1989. </year>
Reference: [7] <author> Keith Mathias and L. Darrell Whitley. </author> <title> Remapping Hyperspace During Genetic Search: Canonical Delta Folding. </title> <editor> In L. Darrell Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms - 2, </booktitle> <pages> pages 167-186. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference: [8] <author> Keith E. Mathias and L. Darrell Whitley. </author> <title> The Delta Coding Algorithm: Comparisons to CHC, SGA, GENITOR and Hill Climbing. </title> <note> Submitted for publication. </note>
Reference-contexts: Instead of simply providing a method for diversity management, mutation may play the role of a hill-climber and actually aid in solving the function. Finally, these results represent an initial performance comparison of delta coding on standard benchmark functions (A more complete comparison is given in <ref> [8] </ref>). Delta coding performs better than the other algorithms compared here in all but a single case when Gray coding is not applied to the test functions.
Reference: [9] <author> Keith E. Mathias and L. Darrell Whitley. </author> <title> Transforming the Search Space with Gray Coding. </title> <note> Submitted for publication. </note>
Reference-contexts: Gray coding has been shown to change the number of local optima in the search space as well as the relative size of the attraction basins <ref> [9] </ref>. Gray coding also produces a more dramatic transformation with respect to the genetic algorithm: the subsets of strings found in the hyperplane partitions represented by schema also change.
Reference: [10] <author> H. Muhlenbein, M. Schomisch, and J. Born. </author> <title> The Parallel Genetic Algorithm as Function Optimizer. </title> <editor> In L. Booker and R. Belew, editors, </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 271-278. </pages> <publisher> Morgan Kauff-man, </publisher> <year> 1991. </year>
Reference-contexts: V. Algorithm Performance Comparisons The test functions for the comparisons presented here included the DeJong test suite (F1 - F5) [3, 5] and the Ras-trigin (F6), Schwefel (F7) and Griewank (F8) functions <ref> [10] </ref>. Previous genetic algorithm performance comparisons using these functions report the use of Gray coding to enhance performance [4, 11]. Therefore, we tested the ability of the stochastic hill-climbing algorithm to locate the optimal solution on these functions using Gray coding.
Reference: [11] <author> J. David Schaffer, Richard A. Caruana, Larry J. Eshelman, and Rajarshi Das. </author> <title> A Study of Control Parameters Affecting Online Performance of Genetic Algorithms for Function Optimization. </title> <editor> In J. D. Schaffer, editor, </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pages 51-60. </pages> <publisher> Morgan Kauffman, </publisher> <year> 1989. </year>
Reference-contexts: Algorithm Performance Comparisons The test functions for the comparisons presented here included the DeJong test suite (F1 - F5) [3, 5] and the Ras-trigin (F6), Schwefel (F7) and Griewank (F8) functions [10]. Previous genetic algorithm performance comparisons using these functions report the use of Gray coding to enhance performance <ref> [4, 11] </ref>. Therefore, we tested the ability of the stochastic hill-climbing algorithm to locate the optimal solution on these functions using Gray coding. A wide range of mutation rates were tested, with the best results being reported in Table 1. <p> Table 1 shows that when Gray coding is employed, the stochastic hill-climbing algorithm consistently finds the optimal solution for 6 of the 8 test functions. Additionally, the stochastic hill-climber is able to solve many of these functions faster than many genetic algorithms, as reported in other studies <ref> [4, 11] </ref>. However, many of these 2 Several methods have been reported for determining the optimality for F4. Here, we have used the evaluation value of -2.5 to determine when optimality has been reached. test functions were designed specifically to be difficult for hill-climbers.
Reference: [12] <author> Timothy Starkweather, L. Darrell Whitley, and Keith Mathias. </author> <title> Optimization Using Distributed Genetic Algorithms. In H.P. </title> <editor> Schwefel and R. Manner, editors, </editor> <booktitle> Parallel Problem Solving from Nature, </booktitle> <pages> pages 176-185. </pages> <address> Springer/Verlag, </address> <year> 1990. </year>
Reference-contexts: No complex mechanisms are required for these adjustment functions, although additional parameters are used. The use of shorter strings to perform search in a reduced hypercube allows the employment of smaller populations. This decreases the execution time for GENITOR <ref> [12] </ref>. A. Advantages of Relocating the Subpartition Sample The reduced hypercube induced by delta coding produces a more focused search. It also introduces the possibility of excluding the global optimum from the reduced search space.
Reference: [13] <author> L. Darrell Whitley. </author> <title> The GENITOR Algorithm and Selective Pressure: Why Rank Based Allocation of Reproductive Trials is Best. </title> <editor> In J. D. Schaffer, editor, </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pages 116-121. </pages> <publisher> Morgan Kauffman, </publisher> <year> 1989. </year>
Reference: [14] <author> L. Darrell Whitley, Keith Mathias, and Patrick Fitzhorn. </author> <title> Delta Coding: An Iterative Strategy for Genetic Algorithms. </title> <editor> In L. Booker and R. Belew, editors, </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 77-84. </pages> <publisher> Morgan Kauffman, </publisher> <year> 1991. </year>
References-found: 14

