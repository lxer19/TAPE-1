URL: http://www.cs.caltech.edu/~arvo/papers/ESA.ps
Refering-URL: http://www.cs.caltech.edu/~arvo/papers.html
Root-URL: http://www.cs.caltech.edu
Title: Modeling Plants with Environment-Sensitive Automata  
Author: James Arvo and David Kirk*, 
Note: *current address:  
Address: 330 Billerica, Chelmsford, MA 01824, USA.  256-80, Pasadena, CA 91125, USA  
Affiliation: Apollo Computer, Inc.,  California Institute of Technology, Computer Science  
Abstract: We present a new approach for modeling plants which allows for adaptation to geometrical and material properties of a simulated environment. The form of a plant is derived from the paths of one or more automata which begin as seeds and progressively explore the environment. The automata sense their surroundings by casting rays and using intersection information to influence subsequent patterns of growth. In this way the power of well-known ray tracing techniques is applied to a problem of geometric modeling. By seeking locations which satisfy various environmental criteria such as proximity to surfaces and availability of light, the automata extend the repertoire of simulated plant growth to include emulation of phenomena such as clinging vines and heliotropism. This approach to database amplification can be used in conjunction with previous methods such as particle systems and graftals. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Aono and T. L. Kunii. </author> <title> Botanical tree image generation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 4(5) </volume> <pages> 55-64, </pages> <year> 1982. </year>
Reference-contexts: Lin-denmayer [10] introduced rewriting grammars to model simple forms of biological growth, and later 1 In Proceedings of Ausgraph `88, pages 27-33, Mel-bourne, Australia, July 1988. Recreated from original manuscript, January, 1996. extended this to bracketed L-systems which could model branching trees. Aono and Kunii <ref> [1] </ref> improved upon the L-system models through additional parametric control of branching patterns and by taking factors such as wind, sunlight, and gravity into account. Smith [15] introduced a deterministic grammar-based modeling approach called "graftals" which could model plants and trees. <p> This important ability defines a class which we call environment-sensitive automata, or ESA. Most approaches which have included context-sensitivity have done so only with respect to previous "generations" of the model in isolation. Though Aono and Kunii <ref> [1] </ref> have included coarse environmental factors such as wind and sunlight, none have employed detailed awareness of the environment geometry during the growth process. ESA possess such an awareness, and consequently exhibit behaviors which were previously difficult or impossible to simulate. <p> The meaning of the resource function need not correspond to anything occurring in nature, but may merely provide convenient control over the ESA. As an example, spatial resource functions may include attractors or inhibitors <ref> [1] </ref> which encourage or discourage growth in particular regions, regardless of other factors. A very important naturally occurring resource is light. <p> Select a seed (A 0 ; N 0 ) P 0 = A 0 + c 1 fl N 0 <ref> [1] </ref> add P 0 etc. to the skeleton [2] REPEAT Pick random T orthogonal to N k Q = P k + c 2 fl T UNTIL NOT Interfere (P k ; Q) d = infinity [3] FOR 1 TO c 3 DO BEGIN Select random ray R at Q (d <p> THEN BEGIN d = d 0 A k+1 = Q + d fl R END IF IF d &gt; c 4 THEN GOTO [2] IF Interfere (P k ; P k+1 ) GOTO [3] k = k + 1 quit with probability c 5 branch with probability c 6 GOTO <ref> [1] </ref> c 1 ; : : : ; c 6 . We have omitted many of the worrisome details in the interest of clarity. For instance, care must be taken to prevent the automaton from getting stuck.
Reference: [2] <author> James Arvo and David Kirk. </author> <title> Fast ray tracing by ray classification. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 55-64, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies [14, 17, 8], space subdivision [5, 7], plane sets [9], and ray classification <ref> [2] </ref>. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved. Environmental Criteria The list of environmental features which can be influenced by ESA is virtually limitless. <p> Select a seed (A 0 ; N 0 ) P 0 = A 0 + c 1 fl N 0 [1] add P 0 etc. to the skeleton <ref> [2] </ref> REPEAT Pick random T orthogonal to N k Q = P k + c 2 fl T UNTIL NOT Interfere (P k ; Q) d = infinity [3] FOR 1 TO c 3 DO BEGIN Select random ray R at Q (d 0 ; M; N 0 ) = Intersect <p> at Q (d 0 ; M; N 0 ) = Intersect (R) IF M is an inappropriate material THEN GO TO [3] IF d 0 &lt; d THEN BEGIN d = d 0 A k+1 = Q + d fl R END IF IF d &gt; c 4 THEN GOTO <ref> [2] </ref> IF Interfere (P k ; P k+1 ) GOTO [3] k = k + 1 quit with probability c 5 branch with probability c 6 GOTO [1] c 1 ; : : : ; c 6 . <p> Thus it is even more critical that an efficient ray tracing algorithm be used for the rendering than for generation. The authors have found uniform subdivision [5] and ray classification <ref> [2] </ref> to be effective in both phases. A very useful alternative rendering technique is depth buffering. Since the depth buffer algorithm permits incremental updates of geometry, we can initially render the environment without the interpretation of the skeleton, plant the seeds interactively, and watch the ESA progress.
Reference: [3] <author> Jules Bloomenthal. </author> <title> Modeling the mighty maple. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 305-311, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: In biological terms the skeleton and resulting plant are genotype and 1 phenotype respectively. While Smith focused almost exclusively on the grammar-based mechanism for generation, others have attacked specific problems of interpretation. For example, Bloomenthal <ref> [3] </ref> addressed the problem of modeling a particular type of maple tree. His main emphasis was on fine geometric features of the model, such as bark and leaves, as opposed to problems of generation such as branching patterns or other parameters of growth. <p> N 0 ) P 0 = A 0 + c 1 fl N 0 [1] add P 0 etc. to the skeleton [2] REPEAT Pick random T orthogonal to N k Q = P k + c 2 fl T UNTIL NOT Interfere (P k ; Q) d = infinity <ref> [3] </ref> FOR 1 TO c 3 DO BEGIN Select random ray R at Q (d 0 ; M; N 0 ) = Intersect (R) IF M is an inappropriate material THEN GO TO [3] IF d 0 &lt; d THEN BEGIN d = d 0 A k+1 = Q + d <p> P k + c 2 fl T UNTIL NOT Interfere (P k ; Q) d = infinity <ref> [3] </ref> FOR 1 TO c 3 DO BEGIN Select random ray R at Q (d 0 ; M; N 0 ) = Intersect (R) IF M is an inappropriate material THEN GO TO [3] IF d 0 &lt; d THEN BEGIN d = d 0 A k+1 = Q + d fl R END IF IF d &gt; c 4 THEN GOTO [2] IF Interfere (P k ; P k+1 ) GOTO [3] k = k + 1 quit with probability c 5 branch <p> Intersect (R) IF M is an inappropriate material THEN GO TO <ref> [3] </ref> IF d 0 &lt; d THEN BEGIN d = d 0 A k+1 = Q + d fl R END IF IF d &gt; c 4 THEN GOTO [2] IF Interfere (P k ; P k+1 ) GOTO [3] k = k + 1 quit with probability c 5 branch with probability c 6 GOTO [1] c 1 ; : : : ; c 6 . We have omitted many of the worrisome details in the interest of clarity. <p> The transformation matrix is easily constructed from two successive points along a path and the desired branch radius. A more elaborate inter pretation might include texture mapping, smooth transitions between branches, and detailed leaves, as described in <ref> [3] </ref>. This algorithm is easily modified to simulate grass instead of ivy. We force the ESA to explore only surfaces designated as "soil" by the surface properties, generate "blades" which do not interfere with anything in the environment, and finally apply a new interpretation to the resulting skeleton.
Reference: [4] <author> Robert L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 18(3) </volume> <pages> 137-145, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: The former involves nothing more than the shadowing operation commonly used in ray tracing. Stochastic sampling techniques used for simulating motion blur <ref> [4] </ref> can be employed in the case of moving lights. By considering not only the overall quantity of light reach ing the point Q but also its direction, the ESA ban bias their progress toward the light, thereby simulating heliotropism.
Reference: [5] <author> Akira Fujimoto and Takayuki Tanaka. </author> <title> ARTS: Accelerated ray-tracing system. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6(4) </volume> <pages> 16-26, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies [14, 17, 8], space subdivision <ref> [5, 7] </ref>, plane sets [9], and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved. <p> By incrementally updating the environment with the geometrical interpretation of the ESA during generation, subsequent growth will automatically navigate around previous paths. This requires a ray tracing data structure which admits efficient incremental update. Examples of such data structures are those described in <ref> [5] </ref>, [7], and [8]. The state information which initiates the growth process of an automaton is called a seed. In the examples which we discuss below, a seed consists of a point on some surface along with the 3 normal vector at that point. <p> Thus it is even more critical that an efficient ray tracing algorithm be used for the rendering than for generation. The authors have found uniform subdivision <ref> [5] </ref> and ray classification [2] to be effective in both phases. A very useful alternative rendering technique is depth buffering.
Reference: [6] <author> Martin Gardener. </author> <title> Mathematical games. </title> <journal> Scientific American, </journal> <volume> 223(4) </volume> <pages> 120-123, </pages> <month> October </month> <year> 1970. </year> <note> 7 Scene CPU seconds number of primitives Trellis 1 61 3804 Trellis 2 21 1266 Grass 36 3173 </note>
Reference-contexts: The former criterion is simply a linear interference test while 2 the latter is an example of a property which typ-ically must be determined probabilistically. The proximity criterion is reminiscent of John Con-way's game of "Life" <ref> [6] </ref>, an example of cellular automata in which "organisms" die of isolation if there are too few neighbors, or of overcrowding if there are too many. In this case, however, "neighbors" are other organisms instead of static geometry.
Reference: [7] <author> Andrew Glassner. </author> <title> Space subdivision for fast ray tracing. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 4(10) </volume> <pages> 15-22, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies [14, 17, 8], space subdivision <ref> [5, 7] </ref>, plane sets [9], and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved. <p> By incrementally updating the environment with the geometrical interpretation of the ESA during generation, subsequent growth will automatically navigate around previous paths. This requires a ray tracing data structure which admits efficient incremental update. Examples of such data structures are those described in [5], <ref> [7] </ref>, and [8]. The state information which initiates the growth process of an automaton is called a seed. In the examples which we discuss below, a seed consists of a point on some surface along with the 3 normal vector at that point.
Reference: [8] <author> Jeffrey Goldsmith and John Salmon. </author> <title> Automatic creation of object hierarchies for ray tracing. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 7(5) </volume> <pages> 14-20, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: The ray-environment intersection testing is performed exclusively through a single abstraction which represents a capability present in almost any ray tracer. Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies <ref> [14, 17, 8] </ref>, space subdivision [5, 7], plane sets [9], and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved. <p> By incrementally updating the environment with the geometrical interpretation of the ESA during generation, subsequent growth will automatically navigate around previous paths. This requires a ray tracing data structure which admits efficient incremental update. Examples of such data structures are those described in [5], [7], and <ref> [8] </ref>. The state information which initiates the growth process of an automaton is called a seed. In the examples which we discuss below, a seed consists of a point on some surface along with the 3 normal vector at that point.
Reference: [9] <author> Timothy L. Kay and James Kajiya. </author> <title> Ray tracing complex scenes. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 269-278, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies [14, 17, 8], space subdivision [5, 7], plane sets <ref> [9] </ref>, and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved.
Reference: [10] <author> Aristid Lindenmayer. </author> <title> Mathematical models for cellular interactions in development. </title> <journal> Journal of Theoretical Biology, </journal> <volume> 18 </volume> <pages> 280-315, </pages> <year> 1968. </year>
Reference-contexts: Introduction Many methods have been devised for modeling botanical forms for computer graphics. Lin-denmayer <ref> [10] </ref> introduced rewriting grammars to model simple forms of biological growth, and later 1 In Proceedings of Ausgraph `88, pages 27-33, Mel-bourne, Australia, July 1988. Recreated from original manuscript, January, 1996. extended this to bracketed L-systems which could model branching trees.
Reference: [11] <author> William T. Reeves. </author> <title> Particle systems a technique for modeling a class of fuzzy objects. </title> <journal> Computer Graphics, </journal> <volume> 17(3) </volume> <pages> 359-376, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: Smith [15] introduced a deterministic grammar-based modeling approach called "graftals" which could model plants and trees. Graftals are fractal-like in their ability to create forms of great complexity from simple instructions, yet are more versatile than fractals which are strictly self-similar. A very different approach, introduced by Reeves <ref> [11] </ref>, was used to simulate fire, grass, and fireworks by rendering the trajectories of stochastically controlled particle systems. This was later extended to model and render trees [12]. In this approach large numbers of particles are given independent "lifetimes" in which to contribute to the environment. <p> We shall refer to these particles, along with their governing rules, as automata in order to distinguish a broader range of capabilities. In particular, we shall focus on automata endowed with elaborate behaviors which are neither purely random, as in <ref> [11] </ref>, nor completely deterministic, as in [15]. We accomplish this by allowing the automata to sense and adapt to their surroundings. This important ability defines a class which we call environment-sensitive automata, or ESA.
Reference: [12] <author> William T. Reeves. </author> <title> Approximate and probabilistic algorithms for shading and rendering structured particle systems. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 313-322, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: A very different approach, introduced by Reeves [11], was used to simulate fire, grass, and fireworks by rendering the trajectories of stochastically controlled particle systems. This was later extended to model and render trees <ref> [12] </ref>. In this approach large numbers of particles are given independent "lifetimes" in which to contribute to the environment. Generation and Interpretation Most botanical modeling approaches begin by generating a relatively simple scaffolding, or skeleton, on which to build the more detailed geometry of the final plant or tree.
Reference: [13] <author> Craig W. Reynolds. </author> <title> Flocks, herds, and schools: A distributed behavioral model. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 25-34, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: The simple and approximate collision detection of the ESA can also be used to animate "small" creatures in the environment. Examples include fish swimming among coral and insects crawling on surfaces. This suggests a possible connection with the behavioral models of flocks, schools, and herds introduced by Reynolds <ref> [13] </ref>. Finally, rain or snow can be modeled by ESA which begin in the sky and fall or flutter to earth, interacting with arbitrarily complex obstacles. Accumulation can be modeled by particles which continue to exist after impact and affect the rest positions of subsequent particles.
Reference: [14] <author> Steve Rubin and Turner Whitted. </author> <title> A three-dimensional representation for fast rendering of complex scenes. </title> <journal> Computer Graphics, </journal> <volume> 14(3) </volume> <pages> 110-116, </pages> <month> July </month> <year> 1980. </year>
Reference-contexts: The ray-environment intersection testing is performed exclusively through a single abstraction which represents a capability present in almost any ray tracer. Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies <ref> [14, 17, 8] </ref>, space subdivision [5, 7], plane sets [9], and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved.
Reference: [15] <author> Alvy Ray Smith. </author> <title> Plants fractals and formal languages. </title> <journal> Computer Graphics, </journal> <volume> 18(3) </volume> <pages> 1-10, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Recreated from original manuscript, January, 1996. extended this to bracketed L-systems which could model branching trees. Aono and Kunii [1] improved upon the L-system models through additional parametric control of branching patterns and by taking factors such as wind, sunlight, and gravity into account. Smith <ref> [15] </ref> introduced a deterministic grammar-based modeling approach called "graftals" which could model plants and trees. Graftals are fractal-like in their ability to create forms of great complexity from simple instructions, yet are more versatile than fractals which are strictly self-similar. <p> Generation and Interpretation Most botanical modeling approaches begin by generating a relatively simple scaffolding, or skeleton, on which to build the more detailed geometry of the final plant or tree. Adopting Smith's terminology <ref> [15] </ref>, we refer to the process of constructing the skeleton as generation and the subsequent modeling as interpretation. In biological terms the skeleton and resulting plant are genotype and 1 phenotype respectively. While Smith focused almost exclusively on the grammar-based mechanism for generation, others have attacked specific problems of interpretation. <p> We shall refer to these particles, along with their governing rules, as automata in order to distinguish a broader range of capabilities. In particular, we shall focus on automata endowed with elaborate behaviors which are neither purely random, as in [11], nor completely deterministic, as in <ref> [15] </ref>. We accomplish this by allowing the automata to sense and adapt to their surroundings. This important ability defines a class which we call environment-sensitive automata, or ESA. Most approaches which have included context-sensitivity have done so only with respect to previous "generations" of the model in isolation.
Reference: [16] <author> John M. Snyder and Alan H. Barr. </author> <title> Ray tracing complex models containing surface tessellations. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 119-128, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Observe, however, that information pertaining to blade height and orientation must be communicated via the skeleton because interference checking takes place in the generation phase. A more realistic interpretation might include accurately modeled grass blades, as done by Snyder and Barr <ref> [16] </ref>. Rendering The ESA approach is virtually independent of the method of interpretation and subsequent rendering. Since the ESA require the existence of a ray-environment intersection routine, we may employ the same routine for the purpose of rendering via ray tracing.
Reference: [17] <author> Hank Weghorst, Gary Hooper, and Donald Greenberg. </author> <title> Improved computational methods for ray tracing. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 3(1) </volume> <pages> 52-69, </pages> <month> January </month> <year> 1984. </year>
Reference-contexts: The ray-environment intersection testing is performed exclusively through a single abstraction which represents a capability present in almost any ray tracer. Though ray tracing has a reputation for slow execution, many techniques have been proposed in recent years for optimizing this particular operation. These include bounding volume hierarchies <ref> [14, 17, 8] </ref>, space subdivision [5, 7], plane sets [9], and ray classification [2]. Virtually any such technique is applicable to ESA if the generation and interpretation phases are performed independently. As we shall see, the situation becomes more complex when these phases are interleaved.
Reference: [18] <author> Turner Whitted. </author> <title> An improved illumination model for shaded display. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 343-349, </pages> <month> June </month> <year> 1980. </year> <month> 8 </month>
Reference-contexts: With the exception of resource functions, which we discuss later, all contact with the environment is through ray-environment intersection testing. In this context ray tracing provides the key to "global" geometric modeling. This is a parallel to its original role in global illumination <ref> [18] </ref>. Some geometric information cannot be obtained through ray tracing. This is similar to the problem of picture reconstruction from point samples. However, this mechanism is well suited to stochastic navigation of "particles" and allows the ESA to thrive in any environment which can be ray traced.
References-found: 18

