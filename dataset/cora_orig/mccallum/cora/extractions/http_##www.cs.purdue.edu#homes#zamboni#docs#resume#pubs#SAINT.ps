URL: http://www.cs.purdue.edu/homes/zamboni/docs/resume/pubs/SAINT.ps
Refering-URL: http://www.cs.purdue.edu/homes/zamboni/docs/resume/
Root-URL: http://www.cs.purdue.edu
Email: diego@conga.super.unam.mx  
Title: SAINT: A Security Analysis Integration Tool  Security Area  
Author: Diego M. Zamboni Direccion General de Servicios de Computo Academico 
Address: Apdo. Postal 20-059, 01000 Mexico D.F., Mexico  
Affiliation: Computer  Universidad Nacional Autonoma de Mexico  
Abstract: This paper presents the design of SAINT, a tool being developed at the National Autonomous University of Mexico that will allow integrated analysis of information gathered from various sources, such as security tools and system logs. By simulating events occurring in the systems, and collected from the different sources, SAINT will allow detection, or even prevention of problems that may otherwise go undetected due to lack of information about them in any single place. SAINT's modular and extensible architecture make it feasible to add new modules for processing new data types, detecting new kinds of problems, or presenting the results in different formats. 
Abstract-found: 1
Intro-found: 1
Reference: [Bis95] <author> Matt Bishop. Passwd+. </author> <title> In Course W16: UNIX Security Tools: Use and Comparison, presented at Network Security '95 in Washington, </title> <address> D. C., </address> <pages> pages 20-33. </pages> <institution> Network Security Institute, </institution> <note> Novem-ber 1995. Package available at ftp://ftp.super.unam.mx/pub/security/tools/ passwd+.tar.gz. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ <ref> [Bis95] </ref>, Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [CIA] <author> U. S. </author> <note> Department of Defense Computer Incident Advisory Capability (CIAC). Merlin. Available at ftp://ftp.super.unam.mx/pub/security/tools/merlin.tar.gz. </note>
Reference-contexts: This can, and does, lead to mis-utilization of the tools, which just sit there collecting mountains of data that nobody never uses. Recently, some tools have been released that allow easier viewing of generated data (most notably CIAC's Merlin <ref> [CIA] </ref>), but the problem still remains of making an understandable whole of the seemingly chaotic set of reports and log files.
Reference: [CS95a] <author> Mark Crosbie and Gene Spafford. </author> <title> Active defense of a computer system using autonomous agents. </title> <type> Technical Report CSD-TR-95-008, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, February 1995. Available at http: //www.cs.purdue.edu/homes/spaf/tech-reps/9508.ps. </note>
Reference-contexts: IDS technology is by now far ahead of SAINT's design. Advanced work on this topic is being done, among others, by Crosbie and Spafford <ref> [CS95a, CS95b] </ref>, Kumar and Spafford [KS94c, KS95] and Kumar [Kum95]. SAINT is intended just as an information analysis tool. This point made, let's proceed with SAINT's design description. 5 What does SAINT do? SAINT's operation can be divided in four big phases: 1. Data collection and homogenization. 2. <p> However, it could be possible to collect and analyze data as it is being generated. In fact, only the data collection and homogenization modules would have to change. * Distributed processing. Interesting work is being currently made in the field of intelligent agents for security monitoring and intrusion detection <ref> [CS95a, CS95b] </ref>. It probably wouldn't be too difficult to allow SAINT to distribute processing, so the simulation stage becomes more of a real-time monitoring by an independent agent located in each system, and reporting to a central system where the results are consolidated and reports generated.
Reference: [CS95b] <author> Mark Crosbie and Gene Spafford. </author> <title> Defending a computer system using autonomous agents. </title> <type> Technical Report CSD-TR-95-022, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, </note> <month> March </month> <year> 1995. </year> <note> Available at http://www.cs. purdue.edu/homes/spaf/tech-reps/9522.ps. </note>
Reference-contexts: IDS technology is by now far ahead of SAINT's design. Advanced work on this topic is being done, among others, by Crosbie and Spafford <ref> [CS95a, CS95b] </ref>, Kumar and Spafford [KS94c, KS95] and Kumar [Kum95]. SAINT is intended just as an information analysis tool. This point made, let's proceed with SAINT's design description. 5 What does SAINT do? SAINT's operation can be divided in four big phases: 1. Data collection and homogenization. 2. <p> However, it could be possible to collect and analyze data as it is being generated. In fact, only the data collection and homogenization modules would have to change. * Distributed processing. Interesting work is being currently made in the field of intelligent agents for security monitoring and intrusion detection <ref> [CS95a, CS95b] </ref>. It probably wouldn't be too difficult to allow SAINT to distribute processing, so the simulation stage becomes more of a real-time monitoring by an independent agent located in each system, and reporting to a central system where the results are consolidated and reports generated.
Reference: [FS90] <author> Daniel Farmer and Eugene H. Spafford. </author> <title> The COPS security checker system. </title> <booktitle> In Proceedings of the Summer 1990 Usenix Conference, </booktitle> <pages> pages 165-170. </pages> <publisher> Usenix, </publisher> <month> June </month> <year> 1990. </year> <note> Available at http: //www.cs.purdue.edu/homes/spaf/tech-reps/993.ps. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS <ref> [FS90] </ref>, TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [FV] <author> Dan Farmer and Wietse Venema. </author> <title> SATAN documentation (Security Administrator Tool for Analyzing Networks). Included in the SATAN package distribution, </title> <note> available at ftp://ftp. super.unam.mx/pub/security/tools/satan.tar.gz. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN <ref> [FV] </ref>, although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used. Experience has shown that, when need arises to diagnose a problem, the solution often comes after collecting information from more than one source, including, but not restricted to, the tools mentioned above.
Reference: [GBD + 94] <author> Al Geist, Adam Beguelin, Jack Dongarra, Weicheng Jiang, Robert Manchek, and Vaidy Sun-deram. </author> <title> PVM 3 user's guide and reference manual. Manual ORNL/TM-12187, </title> <institution> Engineering Physics and Mathematics Division, Mathematical Sciences Section, Oak Ridge National Laboratory, </institution> <month> September </month> <year> 1994. </year> <note> Available at http://www.netlib.org/pvm3/ug.ps. </note>
Reference-contexts: Although the model is general enough to be ported to any type of system, the current implementation is oriented towards SunOS 4.1 with C2 security features, and uses PVM <ref> [GBD + 94] </ref> as the communication mechanism between distributed processes. ASAX is a very powerful package, and its rule-base analysis makes it able to detect complex event sequences that may indicate problems. However, its same complexity makes it difficult to use in a very heterogeneous environment like ours.
Reference: [HA92] <author> Stephen E. Hansen and E. Todd Atkins. </author> <title> Centralized system monitoring with Swatch. </title> <booktitle> In Proceedings of the 3rd UNIX Security Symposium, </booktitle> <pages> pages 105-117. </pages> <publisher> Usenix, </publisher> <month> September </month> <year> 1992. </year>
Reference-contexts: This paper presents the design of SAINT, which is still under development at UNAM's Computer Security Area 1 . 2 Related work Log file analysis is not new. In fact, it has been used for many years. In the simpler end, there are tools like Swatch <ref> [HA92, HA93] </ref> and TkLogger [Hug] which primarily do regular expression matching against log files, searching for certain patterns and doing something when they are found.
Reference: [HA93] <author> Stephen E. Hansen and E. Todd Atkins. </author> <title> Automated system monitoring and notification with swatch. </title> <booktitle> In Proceedings of the LISA VII Systems Administration Conference, </booktitle> <pages> pages 145-155. </pages> <publisher> Usenix, </publisher> <year> 1993. </year>
Reference-contexts: This paper presents the design of SAINT, which is still under development at UNAM's Computer Security Area 1 . 2 Related work Log file analysis is not new. In fact, it has been used for many years. In the simpler end, there are tools like Swatch <ref> [HA92, HA93] </ref> and TkLogger [Hug] which primarily do regular expression matching against log files, searching for certain patterns and doing something when they are found.
Reference: [HA94] <author> N. Haller and R. Atkinson. </author> <title> On Internet authentication. </title> <type> RFC 1704, </type> <institution> Network Working Group, </institution> <month> October </month> <year> 1994. </year> <note> Available at ftp://nic.ddn.mil/rfc/rfc1704.txt. </note>
Reference-contexts: The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key <ref> [Hal94, HA94] </ref> and the logdaemon suite [Ven]) are also used. Experience has shown that, when need arises to diagnose a problem, the solution often comes after collecting information from more than one source, including, but not restricted to, the tools mentioned above.
Reference: [Hal94] <author> Neil Haller. </author> <title> The S/KEY one-time password system. </title> <booktitle> In Proceedings of the ISOC Symposium on Network and Distributed System Security, </booktitle> <month> February </month> <year> 1994. </year> <note> Article and related programs available at ftp://ftp.super.unam.mx/pub/security/tools/skey/. </note>
Reference-contexts: The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key <ref> [Hal94, HA94] </ref> and the logdaemon suite [Ven]) are also used. Experience has shown that, when need arises to diagnose a problem, the solution often comes after collecting information from more than one source, including, but not restricted to, the tools mentioned above.
Reference: [HCMM92] <author> Naji Habra, Baudouin Le Charlier, Abdelaziz Mounji, and Isabelle Mathieu. ASAX: </author> <title> Software architecture and rule-based language for universal audit trail analysis. </title> <booktitle> In Proceedings of ESORICS '92: European Symposium on Research in Computer Security. </booktitle> <publisher> Springer-Verlag, </publisher> <month> November </month> <year> 1992. </year> <note> Available in the ASAX distribution at ftp://coast.cs.purdue.edu/ pub/tools/unix/asax/. </note>
Reference-contexts: These tools are useful for looking for very specific things, but since the search they perform is essentially stateless, their usefulness is restricted to looking for specific things that may indicate problems. On the higher end, there is a tool called ASAX (Advanced Security audit trail Analyzer on uniX) <ref> [MCZH95, HCMM92] </ref>, which uses a rule-based language (called RUSSEL) to process audit trails generated by a number of systems. In a distributed environment, ASAX runs local evaluator processes on each monitored host, which submit their local results to a master server, which in turn processes the consolidated data.
Reference: [Hug] <author> Doug Hughes. TkLogger. </author> <note> Program available at ftp://coast.cs.purdue.edu/pub/ tools/unix/tklogger.tar.Z. </note>
Reference-contexts: In fact, it has been used for many years. In the simpler end, there are tools like Swatch [HA92, HA93] and TkLogger <ref> [Hug] </ref> which primarily do regular expression matching against log files, searching for certain patterns and doing something when they are found.
Reference: [KS93] <author> Gene H. Kim and Eugene H. Spafford. </author> <title> The design of a system integrity monitor: Tripwire. </title> <type> Technical Report CSD-TR-93-071, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, </note> <month> November </month> <year> 1993. </year> <note> Available at http://www.cs. purdue.edu/homes/spaf/tech-reps/9371.ps. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire <ref> [KS93, KS94a, KS94b] </ref> and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [KS94a] <author> Gene H. Kim and Eugene H. Spafford. </author> <title> Experiences with Tripwire: Using integrity checkers for intrusion detection. </title> <type> Technical Report CSD-TR-94-012, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, February 1994. Available at http://www.cs.purdue.edu/homes/spaf/tech-reps/9412.ps. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire <ref> [KS93, KS94a, KS94b] </ref> and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [KS94b] <author> Gene H. Kim and Eugene H. Spafford. </author> <title> Writing, supporting, and evaluating Tripwire: A pub-lically available security tool. </title> <type> Technical Report CSD-TR-94-019, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, </note> <month> March </month> <year> 1994. </year> <note> Available at http://www.cs.purdue.edu/homes/spaf/tech-reps/9419.ps. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire <ref> [KS93, KS94a, KS94b] </ref> and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [KS94c] <author> Sandeep Kumar and Eugene H. Spafford. </author> <title> An application of pattern matching in intrusion detection. </title> <type> Technical Report CSD-TR-94-013, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, June 1994. Available at http:// www.cs.purdue.edu/homes/spaf/tech-reps/9413.ps. </note>
Reference-contexts: IDS technology is by now far ahead of SAINT's design. Advanced work on this topic is being done, among others, by Crosbie and Spafford [CS95a, CS95b], Kumar and Spafford <ref> [KS94c, KS95] </ref> and Kumar [Kum95]. SAINT is intended just as an information analysis tool. This point made, let's proceed with SAINT's design description. 5 What does SAINT do? SAINT's operation can be divided in four big phases: 1. Data collection and homogenization. 2. Event sorting. 3. Event analysis. 4.
Reference: [KS95] <author> Sandeep Kumar and Eugene H. Spafford. </author> <title> A software architecture to support misuse intrusion detection. </title> <type> Technical Report CSD-TR-95-009, </type> <institution> COAST Laboratory, Department of Computer Sciences, Purdue University, West Lafayette, </institution> <note> IN 47907-1398, </note> <month> March </month> <year> 1995. </year> <note> Available at http: //www.cs.purdue.edu/homes/spaf/tech-reps/9509.ps. </note>
Reference-contexts: IDS technology is by now far ahead of SAINT's design. Advanced work on this topic is being done, among others, by Crosbie and Spafford [CS95a, CS95b], Kumar and Spafford <ref> [KS94c, KS95] </ref> and Kumar [Kum95]. SAINT is intended just as an information analysis tool. This point made, let's proceed with SAINT's design description. 5 What does SAINT do? SAINT's operation can be divided in four big phases: 1. Data collection and homogenization. 2. Event sorting. 3. Event analysis. 4.
Reference: [Kum95] <author> Sandeep Kumar. </author> <title> Classification and Detection of Computer Intrusions. </title> <type> PhD thesis, </type> <institution> Purdue University, </institution> <month> August </month> <year> 1995. </year> <note> Available at ftp://coast.cs.purdue.edu/pub/COAST/ papers/kumar-intdet-phddiss.ps.Z. </note>
Reference-contexts: IDS technology is by now far ahead of SAINT's design. Advanced work on this topic is being done, among others, by Crosbie and Spafford [CS95a, CS95b], Kumar and Spafford [KS94c, KS95] and Kumar <ref> [Kum95] </ref>. SAINT is intended just as an information analysis tool. This point made, let's proceed with SAINT's design description. 5 What does SAINT do? SAINT's operation can be divided in four big phases: 1. Data collection and homogenization. 2. Event sorting. 3. Event analysis. 4. Results presentation.
Reference: [MCZH95] <author> Abdelaziz Mounji, Baudouin Le Charlier, Denis Zampunieris, and Naji Habra. </author> <title> Distributed audit trail analysis. </title> <booktitle> In Proceedings of the ISOC 95 Symposium on Network and Distributed System Security, </booktitle> <year> 1995. </year> <note> Available in the ASAX distribution at ftp://coast.cs.purdue.edu/ pub/tools/unix/asax/. </note>
Reference-contexts: These tools are useful for looking for very specific things, but since the search they perform is essentially stateless, their usefulness is restricted to looking for specific things that may indicate problems. On the higher end, there is a tool called ASAX (Advanced Security audit trail Analyzer on uniX) <ref> [MCZH95, HCMM92] </ref>, which uses a rule-based language (called RUSSEL) to process audit trails generated by a number of systems. In a distributed environment, ASAX runs local evaluator processes on each monitored host, which submit their local results to a master server, which in turn processes the consolidated data.
Reference: [Muf] <author> Alec D.E. Muffet. </author> <title> Crack Version 4.1: A Sensible Password Checker for Unix. Manual included in the distribution of Crack, </title> <note> available at ftp://ftp.super.unam.mx/pub/security/ tools/crack.tar.gz. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack <ref> [Muf] </ref>, TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [SSH93] <author> Dave Safford, Douglas Lee Schales, and David K. Hess. </author> <title> The TAMU security package: An ongoing response to internet intruders in an academic environment. </title> <booktitle> In Proceedings of the Fourth USENIX UNIX Security Symposium, </booktitle> <pages> pages 91-118. </pages> <publisher> Usenix, </publisher> <month> October </month> <year> 1993. </year> <note> Program available at ftp://ftp.super.unam.mx/pub/security/tools/TAMU/. </note>
Reference-contexts: The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger <ref> [SSH93] </ref>, S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used. Experience has shown that, when need arises to diagnose a problem, the solution often comes after collecting information from more than one source, including, but not restricted to, the tools mentioned above.
Reference: [Ven] <author> Wietse Venema. </author> <title> Logdaemon package. Program and documentation available at ftp://ftp. </title> <publisher> super.unam.mx/pub/security/tools/logdaemon.tar.gz. </publisher>
Reference-contexts: The main set of tools used consists of COPS [FS90], TCP-Wrappers [Ven92], Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite <ref> [Ven] </ref>) are also used. Experience has shown that, when need arises to diagnose a problem, the solution often comes after collecting information from more than one source, including, but not restricted to, the tools mentioned above.
Reference: [Ven92] <author> Wietse Venema. </author> <title> TCP Wrapper: Network monitoring, access control, and booby traps. </title> <booktitle> In Proceedings of the 3rd UNIX Security Symposium, </booktitle> <pages> pages 85-92. </pages> <publisher> Usenix, </publisher> <month> September </month> <year> 1992. </year> <note> Program available at ftp://ftp.super.unam.mx/pub/security/tools/ tcp_wrappers.tar.gz. </note>
Reference-contexts: Until now, only freely available tools have been used, mainly because they cover most of the needs in this particular academic and research environment. The main set of tools used consists of COPS [FS90], TCP-Wrappers <ref> [Ven92] </ref>, Passwd+ [Bis95], Crack [Muf], TripWire [KS93, KS94a, KS94b] and SATAN [FV], although other tools (like Tiger [SSH93], S/Key [Hal94, HA94] and the logdaemon suite [Ven]) are also used.
Reference: [Wal] <author> Larry Wall. Perl5 documentation. </author> <note> Included in the Perl5 package, available at ftp://ftp. super.unam.mx/pub/languages/perl/. </note>
Reference-contexts: Building on the experience of other tools like COPS, SATAN and Merlin, as well as on the experience of the people working on it, most of SAINT (if not all) is being written in Perl5 <ref> [WS92, Wal] </ref> (why not admit it, SATAN also inspired the name). 4 What is SAINT not? SAINT does not try to be a full-featured Intrusion Detection System (IDS), although SAINT reports can be used to detect intrusions. IDS technology is by now far ahead of SAINT's design.
Reference: [WS92] <author> Larry Wall and Randal L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> 103 Morris Street, Suite A, Sebastopol, CA 95472, first edition, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: Building on the experience of other tools like COPS, SATAN and Merlin, as well as on the experience of the people working on it, most of SAINT (if not all) is being written in Perl5 <ref> [WS92, Wal] </ref> (why not admit it, SATAN also inspired the name). 4 What is SAINT not? SAINT does not try to be a full-featured Intrusion Detection System (IDS), although SAINT reports can be used to detect intrusions. IDS technology is by now far ahead of SAINT's design.
References-found: 26

