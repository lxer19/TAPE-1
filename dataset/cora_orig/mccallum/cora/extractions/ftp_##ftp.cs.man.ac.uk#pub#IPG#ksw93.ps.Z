URL: ftp://ftp.cs.man.ac.uk/pub/IPG/ksw93.ps.Z
Refering-URL: http://www.cs.man.ac.uk/ipg/publications.html
Root-URL: http://www.cs.man.ac.uk
Title: OBM: A Specification Method for Modelling Organisational Process  
Author: Jin Sa, B.C. Warboys and J.A. Keane, 
Note: Published in the proceedings of the Workshop on Constraint Processing at CSAM'93 in St. Petersburg, 1993.  
Address: Manchester M13 9PL, England.  
Affiliation: Department of Computer Science, University of Manchester,  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> S. Bandinelli, A.Fuggetta, C. Ghezzi and S. Grigolli, </author> <title> "Process Enactment in SPADE", </title> <booktitle> Proc. of the 2nd European Workshop, </booktitle> <address> EWSPT'92, Trondheim, Norway, </address> <month> September </month> <year> 1992, </year> <pages> LNCS 635, pages 67-83. </pages>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], [3, 4], [5], <ref> [1] </ref>, [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process. However in reality, processes are often not clearly defined.
Reference: [2] <author> H.Barringer, R.Kuiper and A.Pnueli, </author> <title> Now you may compose temporal logic specifications, </title> <booktitle> Proc. of the 16th ACM symp. on Theory of Computing, </booktitle> <year> 1984. </year>
Reference-contexts: Usage A boxed object is used to compose level i+1 components together to show that the composition is consistent with the level i abstract object. 1.7 Temporal Semantics of OBM Constructs In this paper we define the semantics of OBM constructs using the temporal logic described in <ref> [2] </ref>. The Model The specification of a component specifies a set of sequences. In our model parallelism is modelled by interleaving events of different components, each specified sequence contains idle steps as well as the events of the component. <p> A component proposition has the value True if its component is making an event, and it has the value False if its component is doing nothing (visible externally). Detailed discussions on this type of interleaving model can be found in <ref> [2] </ref>. Context A context of a component contains the component proposition, component name, names of all the provided coperation, names of all the required coperations and names of all the variables. 6 J. Sa, B.C. Warboys, and J.A.
Reference: [3] <author> N. Belkhatir, J. Estublier and W.L. Melo, </author> <title> "ADELE2:a Support to Large Software Development Process", </title> <booktitle> Proc. of the 1st International Conference on the Software Process, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], <ref> [3, 4] </ref>, [5], [1], [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process.
Reference: [4] <author> N. Belkhatir, J. Estublier and W.L. Melo, </author> <title> "Software Process Model and Work Space Control in the Adele System", </title> <booktitle> Proc. of the 2nd International Conference on the Software Process, </booktitle> <address> Berlin, Germany, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], <ref> [3, 4] </ref>, [5], [1], [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process.
Reference: [5] <author> R. Conradi, et al., </author> <title> "Design, Use and Implementation of SPELL, a Language for Software Process Modeling and Evolution", </title> <booktitle> Proc. of the 2nd European Workshop, </booktitle> <address> EWSPT'92, Trondheim, Norway, </address> <month> September </month> <year> 1992, </year> <pages> LNCS 635, pages 167-177. </pages>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], [3, 4], <ref> [5] </ref>, [1], [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process.
Reference: [6] <author> C. Fernstrom, </author> <title> "PROCESS WEAVER: Adding Process Support to UNIX", </title> <booktitle> Proc. of the 2nd International Conference on the Software Process, </booktitle> <address> Berlin, Germany, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], <ref> [6] </ref>, [3, 4], [5], [1], [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process.
Reference: [7] <author> N. Goldman and K. Narayanaswamy, </author> <title> "Solution to ISPW-7 Process Example", </title> <institution> October,1991. 16 J. Sa, B.C. Warboys, and J.A. Keane </institution>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], [3, 4], [5], [1], [12] and <ref> [7] </ref>. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process. However in reality, processes are often not clearly defined.
Reference: [8] <author> P.H. Feiler, </author> <title> WS Humphrey: "Software Process Development And Enactment: Concepts And Definitions", </title> <booktitle> Proc. of the 2nd International Conference on Software Process, </booktitle> <year> 1993. </year>
Reference-contexts: The order of these executions must conform to the operation pattern. The temporal semantics of abstract objects are given in section 1.7.1. Usage An abstract object is used to model part of a process at an abstract level which may be refined later. In [11] and <ref> [8] </ref>, a process is defined as a set of partially ordered process steps, with sets of related artifacts, human and computerised resources, organisational structures and constraints, intended to reach a goal.
Reference: [9] <author> P. Henderson, </author> <title> "Object-Oriented Specification and Design with C++". </title> <booktitle> International Series in Software Engineering, </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1993. </year>
Reference-contexts: In this paper, an example of a hand proof was shown. It is not difficult to see that mistakes can be made easily in the proof itself due to the complexity. At the moment we have developed a BM Stepper using the object-oriented proto-typing language Enact <ref> [9] </ref>. The BM Stepper provides a simulation facility by stepping through the operation patterns of the components. Further study will be carried out to investigate the role of the BM Stepper in OBM. Acknowledgements: The authors would like to thank Dr. R.A.
Reference: [10] <author> C.B. Jones, </author> <title> "Systematic Software Development Using VDM", </title> <booktitle> Prentice-Hall International Series in Computer Science, C.A.R. Hoare Series Editor, </booktitle> <year> 1986. </year>
Reference-contexts: One aspect of our future work is to investigate how to reason about the consistency between the refinement and its abstract object if the abstract object contains some user defined variables. A possible solution is to use the data reification technique as described in <ref> [10] </ref>. In this paper, an example of a hand proof was shown. It is not difficult to see that mistakes can be made easily in the proof itself due to the complexity. At the moment we have developed a BM Stepper using the object-oriented proto-typing language Enact [9].
Reference: [11] <author> J. Lonchamp, </author> <title> "A Structured Conceptual and Terminological Framework for Software Process Engineering", </title> <booktitle> Proc. of the 2nd International Conference on Software Process, </booktitle> <year> 1993. </year>
Reference-contexts: The order of these executions must conform to the operation pattern. The temporal semantics of abstract objects are given in section 1.7.1. Usage An abstract object is used to model part of a process at an abstract level which may be refined later. In <ref> [11] </ref> and [8], a process is defined as a set of partially ordered process steps, with sets of related artifacts, human and computerised resources, organisational structures and constraints, intended to reach a goal.
Reference: [12] <author> B. Peuschel, W. Schafer and S. Wolf, </author> <title> "A Knowledge-based Software Development Environment Supporting Cooperative Work", </title> <journal> International Journal of Software Engineering and Knowledge Engineering (SeKe), </journal> <volume> Vol. 2, No. 1, </volume> <publisher> World Scientific Publishing Company, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, [17], [6], [3, 4], [5], [1], <ref> [12] </ref> and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process. However in reality, processes are often not clearly defined.
Reference: [13] <author> J. Sa, B. C. Warboys, </author> <title> "Specifying Concurrent Object-based Systems using Combined Specification Notations", </title> <type> Technical Report Series UMCS-91-7-2, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> July </month> <year> 1991. </year>
Reference-contexts: In this paper, we present an approach, called Organisational Base Model (OBM), which provides a means to gradually identify the details of the processes in an organisation and develops the detailed representation of the organisational process by refinement. OBM is based on Base Model (BM) <ref> [13] </ref>, which was originally developed for specifying concurrent object-based systems that allow interference among objects. BM provides a framework so that specifications are written in a systematic way. A temporal logic semantics is given for each specification construct. This formal foundation makes it possible to reason about BM specifications mathematically. <p> Whilst BM has been shown to be a suitable methodology for representing processes, the emphasis of OBM is on the support for the development of a process model. 1.2 Brief Overview of BM In BM <ref> [13] </ref>, a system is considered to be composed of components which may be executed in parallel. The model of a system, therefore, contains a collection of component specifications and how these components interact with each other. <p> The interface part consists of: * a list of provided coperations * a list of required coperations * an operation pattern defined in terms of the provided coperations. Operation patterns are defined using an ordering expression. The detailed definition of ordering expressions can be found in <ref> [13, 16] </ref>. Operation patterns are defined in terms of coperation names.
Reference: [14] <author> J. Sa, B. C. Warboys, </author> <title> "Integrating a Formal Specification Method with PML: A Case Study", </title> <booktitle> Proc. of the 2nd European Workshop, </booktitle> <address> EWSPT'92, Trondheim, Norway, </address> <month> September </month> <year> 1992, </year> <pages> LNCS 635, pages 106-122. </pages>
Reference-contexts: Sa, B.C. Warboys, and J.A. Keane thought to be important when modelling the software process, were summarised. Our case studies <ref> [14, 15] </ref> have shown that BM is capable of addressing many of these aspects. These aspects include: control flow, sequencing and constraints, feedback to earlier steps, iterations, object/information management and flow through process, organisational responsibility for specific tasks, and parallelism.
Reference: [15] <author> J.Sa, </author> <title> B.C. Warboys, "A Formal Description of the ISPW-6 Software Process Example", </title> <type> Technical Report Series UMCS-93-6-1, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Sa, B.C. Warboys, and J.A. Keane thought to be important when modelling the software process, were summarised. Our case studies <ref> [14, 15] </ref> have shown that BM is capable of addressing many of these aspects. These aspects include: control flow, sequencing and constraints, feedback to earlier steps, iterations, object/information management and flow through process, organisational responsibility for specific tasks, and parallelism.
Reference: [16] <author> J.Sa, "OBM: </author> <title> A Tutorial", </title> <type> Project Report, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: The interface part consists of: * a list of provided coperations * a list of required coperations * an operation pattern defined in terms of the provided coperations. Operation patterns are defined using an ordering expression. The detailed definition of ordering expressions can be found in <ref> [13, 16] </ref>. Operation patterns are defined in terms of coperation names. <p> The semantics of a subset of the ordering expression is defined in section 1.7.3. flP specifies that P is always true. Due to lack of space, atmostone (X ) is not defined in this paper. For interested readers, it can be found in <ref> [16] </ref>. 1.7.2 Temporal Semantics of Boxed Objects The behaviour of a boxed object is defined as the set of all possible execution sequences of the boxed object. <p> P C Q specifies that P is true and then Q is true. The definitions of idle, interleave, synchronise and hide are given in <ref> [16] </ref>. 1.7.3 Temporal Semantics of Ordering Expression In this section only a subset of the ordering expression is defined. The full definition can be found in [16]. [[on]] C 4 : fl true [[P 1; P 2]] C 4 [[P 1]] C C [[P 2]] C [[P 1 jj P 2]] <p> The definitions of idle, interleave, synchronise and hide are given in <ref> [16] </ref>. 1.7.3 Temporal Semantics of Ordering Expression In this section only a subset of the ordering expression is defined. The full definition can be found in [16]. [[on]] C 4 : fl true [[P 1; P 2]] C 4 [[P 1]] C C [[P 2]] C [[P 1 jj P 2]] C 4 ([[P 1]] C 1 C (idle (C 1) U fin)) ^ ([[P 2]] C 2 C (idle (C 2) U fin)) [[P + ; <p> Again their definitions can be found in <ref> [16] </ref>.
Reference: [17] <author> B.C. Warboys, </author> <title> "The ISPE2.5 Project: Process Modelling as the basis for a Support Environment", </title> <booktitle> Proceedings of the first International Conference on Software Development, Environments and Factories, </booktitle> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: 1.1 Introduction and Background Recently many process modelling approaches have been developed, for instance, <ref> [17] </ref>, [6], [3, 4], [5], [1], [12] and [7]. However, in many process modelling approaches, it is often assumed that the processes in an organisation are clearly defined, and therefore the emphasis of process modelling is often put on the final representation of the organisational process.
References-found: 17

