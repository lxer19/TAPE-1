URL: http://www.cs.indiana.edu/scicomp/icmcm.ps.gz
Refering-URL: http://www.cs.indiana.edu/scicomp/papers.html
Root-URL: http://www.cs.indiana.edu
Email: (tloos@cs.indiana.edu)  (rbramley@cs.indiana.edu)  
Title: The Approximate Execution Time Metric and its Application to the Graph Partitioning Problem  
Author: Thomas Loos Randall Bramley 
Date: August 28, 1995  
Address: 215 Lindley Hall  Bloomington, IN 47405  
Affiliation: Computer Science Department,  Indiana University,  
Abstract: 1 Abstract 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Bodin, P. Beckman, D. Gannon, S. Narayana, and S. Yang, </author> <title> Distributed pC++: Basic Ideas for an Object Parallel Language, </title> <booktitle> Scientific Programming, 2 (1993), </booktitle> <pages> pp. 631-644. </pages>
Reference-contexts: See Figure 3 for a view of the matrix after being octa-partitioned with the linear GP algorithm. by EC. The ACT curves show times for actual LSS runs on a 10 CPU SGI Power Challenge algorithm under PC++ <ref> [1] </ref>. The AET curves are the simulator's estimate for the time per iteration. Both the explicit block diagonal (BDIAG curves) and the implicit block SSOR (BSSOR curves) preconditioners were used.
Reference: [2] <author> R. Bramley and T. Loos, EMILY: </author> <title> A Visualization Tool for Large Sparse Matrices, </title> <type> Tech. Rep. TR 412A, </type> <institution> Indiana University Computer Science Department, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: See Figure 2 for the structure of the partitioned matrix generated by emily <ref> [2] </ref>. About 90% of the time spent solving PDEs is spent solving linear systems; the remaining PDE solution cost is proportional to the LSS execution cost. These linear systems are generally both large and sparse requiring the use of iterative LSSs with preconditioning.
Reference: [3] <author> T. N. Bui and C. Jones, </author> <title> Finding Good Approximate Vertex and Edge Partitions is NP-Hard, </title> <journal> Information Processing Letters, </journal> <volume> 42 (1992), </volume> <pages> pp. 153-159. </pages>
Reference-contexts: A edge e = (v 1 ; v 2 ) is cut if v 1 is in a different partition set than v 2 . This problem is at least NP-complete [5] and under certain conditions, it is NP-hard <ref> [3] </ref>. For an example of a partitioned mesh, see Figure 1. This mesh is an example of a complicated geometrical form; complicated geometries are seen in many realistic problems.
Reference: [4] <author> C. Farhat and M. Lesoinne, </author> <title> Automatic Partitioning of Unstructured Meshes for the Parallel Solution of Problems in Computational Mechanics, International Journal for Numerical Methods in Engineering, </title> <booktitle> 36 (1993), </booktitle> <pages> pp. 745-764. </pages>
Reference: [5] <author> M. R. Geary and D. S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of Incompleteness, </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <note> first ed., </note> <year> 1979. </year> <title> Has an extensive list (around 300) of known NP complete problems. </title>
Reference-contexts: A edge e = (v 1 ; v 2 ) is cut if v 1 is in a different partition set than v 2 . This problem is at least NP-complete <ref> [5] </ref> and under certain conditions, it is NP-hard [3]. For an example of a partitioned mesh, see Figure 1. This mesh is an example of a complicated geometrical form; complicated geometries are seen in many realistic problems.
Reference: [6] <author> B. Hendrickson and R. Leland, </author> <title> The Chaco User's Guide Version 1.0, </title> <type> Tech. Rep. SAND 93-2339, </type> <institution> Sandia National Laboratories, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: Time per iteration figures are then used to compare different existing GP algorithms. To determine the accuracy of EC and AET as predictive met-rics, ten different partitionings of a mesh from the backward facing step problem were generated using the Chaco <ref> [6] </ref> graph partitioning package.
Reference: [7] <author> H. van der Vorst, </author> <title> Bi-CGSTAB: A fast and smoothly converging variant of Bi-CG for the solution of nonsymmetric linear systems, </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> 13 (1992), </volume> <pages> pp. 631-644. </pages> <note> and Estimated (AET) Runtimes </note>
Reference-contexts: This matrix is large enough (order 20 284 with 452 752 non-zeros) to get meaningful results from a parallel computer, but simple enough to solve that the bi-conjugate gradient stabilized LSS algorithm <ref> [7] </ref>, which was used for all tests below, with either block diagonal or block SSOR preconditioning can solve the reordered system (the reordering is caused by the vertex assignment after partitioning). See Figure 3 for a view of the matrix after being octa-partitioned with the linear GP algorithm. by EC.
References-found: 7

