URL: ftp://ftp.cs.unc.edu/pub/users/sc/COMP203-S96/L1996-01-23.PS.Z
Refering-URL: http://www.cs.unc.edu/~sc/teaching/COMP203-S1996/lectures.html
Root-URL: http://www.cs.unc.edu
Email: (barde@cs.unc.edu) Huiwen Ru (ru@cs.unc.edu)  
Title: The partitioning strategy is similar to divide and conquer, the difference is: Definition:Rank Let A
Date: 4 Jan 23, 1996  January 24, 1996  
Note: COMP203: Parallel and Distributed Computing Lecture  Sumedh Barde  1.2 Parallel Algorithm 1.2.1 Motivation  jfa 2 Aja xgj (1)  
Abstract: In the previous lecture we saw three of six techniques used in designing PRAM algorithms, viz. balanced tree, pointer jumping, and divide and conquer. In this lecture we shall look at the fourth technique, called partitioning, and lay the foundation for the fifth, called accelerated cascading. * in divide and conquer, after dividing and solving, we combine the subproblems. e.g. merge sort. * in partitioning, we partition the problems into independent subproblems, s.t. we do not have to do merge the solutions as the final step e.g. quick sort. The effort involved in partitioning is to make independent subproblems of approximately equal size. As an example, consider merging the two sorted sequences A = (a 1 ; : : : ; a n ) and B = (b 1 ; : : : ; b n ) into a single sorted sequence C = (c 1 ; : : :; c 2n ), where the elements of A and B are drawn from a set S totally ordered by the relation . Without loss of generality, assume that all the elements of A and B are distinct, i.e. jA [ Bj = 2n. 1.1 Sequential Algorithm We use the merge step of merge sort. The sequential time complexity is T s (n) = O(n). See any standard algorithms book for details. 
Abstract-found: 1
Intro-found: 1
References-found: 0

