URL: http://www.cs.ucsd.edu/users/mihir/papers/exactsigs.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/mihir/papers/exactsigs.html
Root-URL: http://www.cs.ucsd.edu
Email: E-mail: mihir@cs.ucsd.edu  
Title: The Exact Security of Digital Signatures How to Sign with RSA and Rabin  
Author: Mihir Bellare Phillip Rogaway 
Web: Web  http://www-cse.ucsd.edu/users/mihir  
Address: San Diego, 9500 Gilman Drive, La Jolla, CA 92093, USA.  CA 95616, USA. E  
Affiliation: Department of Computer Science and Engineering, Mail Code 0114, University of California at  Department of Computer Science, University of California at Davis, Davis,  
Date: March 14, 1996  
Note: Appears in Advances in Cryptology Eurocrypt 96 Proceedings, Lecture Notes in Computer Science Vol. 1070, U. Maurer ed., Springer-Verlag, 1996.  page:  mail: rogaway@cs.ucdavis.edu Web page: http://wwwcsif.cs.ucdavis.edu/~rogaway/homepage.html  
Abstract: We describe an RSA-based signing scheme which combines essentially optimal efficiency with attractive security properties. Signing takes one RSA decryption plus some hashing, verification takes one RSA encryption plus some hashing, and the size of the signature is the size of the modulus. Assuming the underlying hash functions are ideal, our schemes are not only provably secure, but are so in a tight way| an ability to forge signatures with a certain amount of computational resources implies the ability to invert RSA (on the same size modulus) with about the same computational effort. Furthermore, we provide a second scheme which maintains all of the above features and in addition provides message recovery. These ideas extend to provide schemes for Rabin signatures with analogous properties; in particular their security can be tightly related to the hardness of factoring. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Balenson, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part III: Algorithms, Modes, and Identifiers," </title> <type> IETF RFC 1423, </type> <month> February </month> <year> 1993. </year>
Reference-contexts: Other standards, such as <ref> [1] </ref>, are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include [9, 2, 11, 20, 6]. <p> Formally an inverting algorithms is said to be a t-inverter, where t: N ! N, if its running time plus the size of its description is bounded by t (k), in some fixed standard model of computation. We say that I (t; *)-breaks RSA, where *: N ! <ref> [0; 1] </ref>, if I is a t-inverter and for each k the success probability of I is at least *(k). Finally, we say that RSA is (t; *)-secure if there is no inverter which (t; *)-breaks RSA. Example.
Reference: [2] <author> M. Bellare and S. Micali, </author> <title> "How to sign given any trapdoor permutation," </title> <journal> JACM Vol. </journal> <volume> 39, No. 1, </volume> <pages> 214-233, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include <ref> [9, 2, 11, 20, 6] </ref>. The major plus of these works is that they do not use an ideal hash function (random oracle) model| the provable security is in the standard sense. On the other hand, the security reductions are quite loose for each of those schemes. <p> On the other hand, the security reductions are quite loose for each of those schemes. On the efficiency front, the efficiency of the schemes of <ref> [9, 2, 11, 20] </ref> is too poor to seriously consider them for practice. The Dwork-Naor scheme [6], on the other hand, is computationally quite efficient, taking two to six RSA computations, although there is some storage overhead and the signatures are longer than a single RSA modulus.
Reference: [3] <author> M. Bellare and P. Rogaway, </author> <title> "Random oracles are practical: a paradigm for designing efficient protocols," </title> <booktitle> Proceedings of the First Annual Conference on Computer and Communications Security, ACM, </booktitle> <year> 1993. </year>
Reference-contexts: Let us now expand on all of the above. We begin by looking at current practice. Then we consider the full domain hash scheme of <ref> [3] </ref> which is provable, and discuss its exact security. Finally we come to our new schemes, PSS and PSS-R, and their exact security. 1.1 Signing with RSA- Current practice The RSA system. <p> The function Hash PKCS is guaranteed to be collision-intractable if we use a collision-intractable H. But this won't suffice to get a proof of security. 1.2 FDH and its exact security The FDH scheme. In earlier work <ref> [3] </ref> we suggested to hash M onto the full domain Z fl N of the RSA function before decrypting. <p> fl N is understood to hash strings "uniformly" into Z fl N , and the signature of M is Sign FDH (M ) = f 1 (Hash FDH (M )). (Candidates for suitable functions Hash FDH can easily be constructed out of MD5 or similar hash functions, as described in <ref> [3] </ref>.) We call this the Full-Domain-Hash scheme (FDH). Provable security of FDH. <p> Provable security of FDH. Assuming Hash FDH is ideal (ie. it behaves like a random function of the specified domain and range) the security of FDH can be proven assuming only that RSA is a trapdoor permutation. (This is a special case of <ref> [3, Section 4] </ref>, which considers this construction with an arbitrary trapdoor permutation.) This makes the security guarantee of the FDH scheme superior to those of the schemes we discussed in Section 1.1. Now we want to go further. <p> Exact security of FDH. The "exact security" of the reduction of <ref> [3] </ref> used to prove the security of the FDH signature scheme is analyzed in Theorem 3.1. <p> In no case that we know of is the security tight. The efficiency varies. The computational requirements are often lower than a hash-then-decrypt RSA signature, although key sizes are typically larger. The paradigm of protocol design with ideal hash functions (aka random oracles) is developed in <ref> [3] </ref> and continued in [4]. The current paper is in some ways the analogue, for digital signatures, of our earlier work on encryption [4]. <p> Security of signature schemes. Definitions for the security of signatures in the asymptotic 6 setting were provided by Goldwasser, Micali and Rivest [9], and enhanced to take into account the presence of an ideal hash function in <ref> [3] </ref>. Here we provide an exact version of these definitions. A forger takes as input a public key pk, where (pk; sk) R Gen (1 k ), and tries to forge signatures with respect to pk. <p> We are usually satisfied when t 0 = t poly (q hash ; q sig ; k) and * 0 *. 3 The Full-Domain-Hash Scheme - FDH The scheme. Signature scheme FDH = (GenFDH ; SignFDH ; VerifyFDH ) is defined as follows <ref> [3] </ref>. The key generation algorithm, on input 1 k , runs RSA (1 k ) to obtain (N; e; d). It outputs (pk; sk), where pk = (N; e) and sk = (N; d). <p> The following theorem summarizes the exact security of the FDH scheme as provided by the reduction of <ref> [3] </ref>. The proof is straightforward, but it is instructive all the same, so we include 7 it. The disadvantage of the result, from our point of view, is that * 0 could be much smaller than *. Theorem 3.1 Suppose RSA is a (t 0 ; * 0 )-secure.
Reference: [4] <author> M. Bellare and P. Rogaway, </author> <title> "Optimal Asymmetric Encryption," </title> <booktitle> Advances in Cryptology - Eurocrypt 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 950, </volume> <editor> A. De Santis ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The efficiency varies. The computational requirements are often lower than a hash-then-decrypt RSA signature, although key sizes are typically larger. The paradigm of protocol design with ideal hash functions (aka random oracles) is developed in [3] and continued in <ref> [4] </ref>. The current paper is in some ways the analogue, for digital signatures, of our earlier work on encryption [4]. <p> The paradigm of protocol design with ideal hash functions (aka random oracles) is developed in [3] and continued in <ref> [4] </ref>. The current paper is in some ways the analogue, for digital signatures, of our earlier work on encryption [4].
Reference: [5] <author> W. Diffie and M. E. Hellman, </author> <title> "New directions in cryptography," </title> <journal> IEEE Trans. Info. Theory IT-22, </journal> <pages> 644-654, </pages> <month> November </month> <year> 1976. </year>
Reference: [6] <author> C. Dwork and M. Naor. </author> <title> An efficient existentially unforgeable signature scheme and its applications. </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <editor> Y. Desmedt ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include <ref> [9, 2, 11, 20, 6] </ref>. The major plus of these works is that they do not use an ideal hash function (random oracle) model| the provable security is in the standard sense. On the other hand, the security reductions are quite loose for each of those schemes. <p> On the other hand, the security reductions are quite loose for each of those schemes. On the efficiency front, the efficiency of the schemes of [9, 2, 11, 20] is too poor to seriously consider them for practice. The Dwork-Naor scheme <ref> [6] </ref>, on the other hand, is computationally quite efficient, taking two to six RSA computations, although there is some storage overhead and the signatures are longer than a single RSA modulus.
Reference: [7] <author> T. El Gamal, </author> <title> "A public key cryptosystem and a signature scheme based on discrete logarithms," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> Vol. 31, No. 4, </volume> <month> July </month> <year> 1985. </year> <month> 15 </month>
Reference: [8] <author> A. Fiat and A. Shamir, </author> <title> "How to prove yourself: practical solutions to identification and signature problems," </title> <booktitle> Advances in Cryptology - Crypto 86 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 263, </volume> <editor> A. Odlyzko ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: Back among signature schemes which assume an ideal hash, a great many have been proposed, based on the hardness of factoring or other assumptions. Most of these schemes are derived from identification schemes, as was first done by <ref> [8] </ref>. Some of these methods are provable (in the ideal hash model), some not. In some of the proven schemes exact security is analyzed; usually it is not. In no case that we know of is the security tight. The efficiency varies.
Reference: [9] <author> S. Goldwasser, S. Micali and R. Rivest, </author> <title> "A digital signature scheme secure against adaptive chosen-message attacks," </title> <journal> SIAM Journal of Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include <ref> [9, 2, 11, 20, 6] </ref>. The major plus of these works is that they do not use an ideal hash function (random oracle) model| the provable security is in the standard sense. On the other hand, the security reductions are quite loose for each of those schemes. <p> On the other hand, the security reductions are quite loose for each of those schemes. On the efficiency front, the efficiency of the schemes of <ref> [9, 2, 11, 20] </ref> is too poor to seriously consider them for practice. The Dwork-Naor scheme [6], on the other hand, is computationally quite efficient, taking two to six RSA computations, although there is some storage overhead and the signatures are longer than a single RSA modulus. <p> Security of signature schemes. Definitions for the security of signatures in the asymptotic 6 setting were provided by Goldwasser, Micali and Rivest <ref> [9] </ref>, and enhanced to take into account the presence of an ideal hash function in [3]. Here we provide an exact version of these definitions.
Reference: [10] <author> ISO/IEC 9796, </author> <title> "Information Technology Security Techniques Digital Signature Scheme Giving Message Recovery," International Organization for Standards, </title> <year> 1991. </year>
Reference-contexts: We stress that we don't know of any attack on this scheme. But we prefer, for such important primitives, to have some proof of security rather than just an absence of known attacks. The same situation holds for other standards, including ISO 9796 <ref> [10] </ref>. (There the function Hash involves no cryptographic hashing, and the message M is easily recovered from Hash (M ). This doesn't effect the points we've just made.) The above discussion highlights that collision-intractability is not enough. <p> then you must select a modulus of 3447 bits in order to get the same degree of guaranteed-security as you would have gotten had you selected a modulus of 1024 bits and used PSS. 1.5 Related work We have already discussed the PKCS standards [16, 17] and the ISO standard <ref> [10] </ref> and seen that their security cannot be justified based on the assumption that RSA is trapdoor one-way. Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm.
Reference: [11] <author> M. Naor and M. Yung, </author> <title> "Universal one-way hash functions and their cryptographic applications," </title> <booktitle> Proceedings of the 21st Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1989. </year>
Reference-contexts: Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include <ref> [9, 2, 11, 20, 6] </ref>. The major plus of these works is that they do not use an ideal hash function (random oracle) model| the provable security is in the standard sense. On the other hand, the security reductions are quite loose for each of those schemes. <p> On the other hand, the security reductions are quite loose for each of those schemes. On the efficiency front, the efficiency of the schemes of <ref> [9, 2, 11, 20] </ref> is too poor to seriously consider them for practice. The Dwork-Naor scheme [6], on the other hand, is computationally quite efficient, taking two to six RSA computations, although there is some storage overhead and the signatures are longer than a single RSA modulus.
Reference: [12] <author> A. Lenstra and H. Lenstra (eds.), </author> <title> "The development of the number field sieve," </title> <booktitle> Lecture Notes in Mathematics, </booktitle> <volume> vol 1554, </volume> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Let us again assume that the forger F can compute the hash of at most 2 60 strings and that she can obtain the signatures of at most 2 30 messages. Assume that it takes time Ce 1:923 (logN) 1=3 (log log N) 2=3 to invert RSA <ref> [12] </ref>.
Reference: [13] <author> D. Pointcheval and J. Stern, </author> <title> "Security proofs for signatures," </title> <booktitle> Advances in Cryptology - Eurocrypt 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1070, </volume> <editor> U. Maurer ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The current paper is in some ways the analogue, for digital signatures, of our earlier work on encryption [4]. Further work on signing in the random oracle model includes Pointcheval and Stern <ref> [13] </ref>. (They do not consider exact security, and it may be helpful to do so in their context.) 2 Definitions We provide definitions for an exact security treatment of RSA, basic signature schemes, and signing with recovery. 5 2.1 An exact treatment of RSA The RSA family.
Reference: [14] <author> R. Rivest, </author> <title> "The MD5 Message-Digest Algorithm," </title> <type> IETF RFC 1321, </type> <month> April </month> <year> 1992. </year>
Reference: [15] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> "A method for obtaining digital signatures and public key cryptosystems," </title> <note> CACM 21 (1978). </note>
Reference-contexts: Then we consider the full domain hash scheme of [3] which is provable, and discuss its exact security. Finally we come to our new schemes, PSS and PSS-R, and their exact security. 1.1 Signing with RSA- Current practice The RSA system. In the RSA public key system <ref> [15] </ref> a party has public key (N; e) and secret key (N; d), where N is a k-bit modulus, the product of two (k=2)-bit primes, and e; d 2 Z fl (N ) satisfy ed 1 mod '(N ). (Think of k = 1024, a recommended modulus size these days.) Recall
Reference: [16] <institution> RSA Data Security, Inc., </institution> <note> "PKCS #1: RSA Encryption Standard (Version 1.4)." </note> <month> June </month> <year> 1991. </year>
Reference-contexts: Accordingly, Hash is most often implemented via a cryptographic hash function like H = MD5 (which yields a 128 bit output and is assumed to be collision-intractable) and some padding. A concrete example of such a scheme is <ref> [16, 17] </ref>, where the hash is Hash PKCS (M ) = 0x 00 01 FF FF FF FF 00 k H (M ) : Here k denotes concatenation, and enough 0xFF-bytes are used so as to make the length of Hash PKCS (M ) equal to k bits. Security. <p> imply that if you use FDH then you must select a modulus of 3447 bits in order to get the same degree of guaranteed-security as you would have gotten had you selected a modulus of 1024 bits and used PSS. 1.5 Related work We have already discussed the PKCS standards <ref> [16, 17] </ref> and the ISO standard [10] and seen that their security cannot be justified based on the assumption that RSA is trapdoor one-way. Other standards, such as [1], are similar to [16], and the same statement applies. <p> Other standards, such as [1], are similar to <ref> [16] </ref>, and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include [9, 2, 11, 20, 6].
Reference: [17] <author> RSA Data Security, Inc., </author> <title> "PKCS #7: Cryptographic Message Syntax Standard (version 1.4)." </title> <month> June </month> <year> 1991. </year>
Reference-contexts: Accordingly, Hash is most often implemented via a cryptographic hash function like H = MD5 (which yields a 128 bit output and is assumed to be collision-intractable) and some padding. A concrete example of such a scheme is <ref> [16, 17] </ref>, where the hash is Hash PKCS (M ) = 0x 00 01 FF FF FF FF 00 k H (M ) : Here k denotes concatenation, and enough 0xFF-bytes are used so as to make the length of Hash PKCS (M ) equal to k bits. Security. <p> imply that if you use FDH then you must select a modulus of 3447 bits in order to get the same degree of guaranteed-security as you would have gotten had you selected a modulus of 1024 bits and used PSS. 1.5 Related work We have already discussed the PKCS standards <ref> [16, 17] </ref> and the ISO standard [10] and seen that their security cannot be justified based on the assumption that RSA is trapdoor one-way. Other standards, such as [1], are similar to [16], and the same statement applies.
Reference: [18] <author> M. Rabin, </author> <title> "Digital signatures," in Foundations of secure computation, </title> <editor> R. A. Millo et. al. eds, </editor> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: (k) + q hash (k)) 2 ] (2 k 0 + 2 k 1 ) : The proof of this theorem is very similar to that of Theorem 4.1 and hence is omitted. 13 6 Rabin signatures - PRab and PRab-R The ideas of this paper extend to Rabin signatures <ref> [18, 19] </ref>, yielding a signature scheme and a signing with recovery scheme whose security can be tightly related to the hardness of factoring. The scheme.
Reference: [19] <author> M. Rabin., </author> <title> "Digital signatures and public key functions as intractable as factorization," </title> <institution> MIT Laboratory for Computer Science Report TR-212, </institution> <month> January </month> <year> 1979. </year>
Reference-contexts: (k) + q hash (k)) 2 ] (2 k 0 + 2 k 1 ) : The proof of this theorem is very similar to that of Theorem 4.1 and hence is omitted. 13 6 Rabin signatures - PRab and PRab-R The ideas of this paper extend to Rabin signatures <ref> [18, 19] </ref>, yielding a signature scheme and a signing with recovery scheme whose security can be tightly related to the hardness of factoring. The scheme.
Reference: [20] <author> J. Rompel, </author> <title> "One-Way Functions are Necessary and Sufficient for Secure Signatures," </title> <booktitle> Proceedings of the 22nd Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1990. </year>
Reference-contexts: Other standards, such as [1], are similar to [16], and the same statement applies. The schemes we discuss in the remainder of this section do not use the hash-then-decrypt paradigm. Signature schemes whose security can be provably based on the RSA assumption include <ref> [9, 2, 11, 20, 6] </ref>. The major plus of these works is that they do not use an ideal hash function (random oracle) model| the provable security is in the standard sense. On the other hand, the security reductions are quite loose for each of those schemes. <p> On the other hand, the security reductions are quite loose for each of those schemes. On the efficiency front, the efficiency of the schemes of <ref> [9, 2, 11, 20] </ref> is too poor to seriously consider them for practice. The Dwork-Naor scheme [6], on the other hand, is computationally quite efficient, taking two to six RSA computations, although there is some storage overhead and the signatures are longer than a single RSA modulus.
Reference: [21] <author> H. Williams, </author> <title> "A modification of the RSA public key encryption procedure," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> Vol. IT-26, No. 6, </volume> <month> November </month> <year> 1980. </year>
References-found: 21

