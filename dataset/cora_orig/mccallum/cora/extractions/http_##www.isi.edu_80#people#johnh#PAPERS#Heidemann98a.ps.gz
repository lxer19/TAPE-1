URL: http://www.isi.edu:80/people/johnh/PAPERS/Heidemann98a.ps.gz
Refering-URL: http://www.isi.edu:80/people/johnh/PAPERS/Heidemann98a.html
Root-URL: http://www.isi.edu
Title: Experiences with User-configurable, Location-aware Scheduling  
Author: John Heidemann Dhaval Shah 
Date: April 23, 1998  
Abstract: Mobile computers often benefit from software which adapts to its location. For example, a computer might be backed up when at the office, or the default printer might always be a nearby one. In many existing systems, location-triggered actions are only possible for specific applications or with special infrastructure. This paper describes lcron, a system which supports user-configurable actions triggered on change in location or other events common to mobile computers. We describe the design, implementation and our experiences with this system, focusing on use of existing clues for computer location (such as network connection) and mapping of low-level location into user-sensible terms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arup Acharya, B. R. Badrinath, Tomasz Imielin-ski, and Julio C. Navas. </author> <title> A WWW-based location-dependent information service for mobile clients. </title> <institution> At http://www.cs.rutgers.edu/~navas/dataman /papers/loc dep mosaic/Overview.html, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: We believe that the final quadrant (manual information retrieval) is best solved with other work such as location-aware web-browsers <ref> [1, 11] </ref>. Location dependent information such as nearest restaurant, availability of space in the nearest parking lot or local weather information can best be retrieved on-demand basis by location-aware web-browsers.
Reference: [2] <author> Mic Bowman, Larry L. Peterson, and Andrey Yeatts. Univers: </author> <title> An attribute-based name server. </title> <journal> Software|Practice and Experience, </journal> <volume> 20(4) </volume> <pages> 403-424, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration <ref> [2, 14, 10] </ref>, location-specific alarms [14, 10], and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer.
Reference: [3] <author> John S. Heidemann, Thomas W. Page, Jr., Rich-ard G. Guy, and Gerald J. Popek. </author> <title> Primarily disconnected operation: Experiences with Ficus. </title> <booktitle> In Proceedings of the Second Workshop on Management of Replicated Data, </booktitle> <pages> pages 2-5. </pages> <institution> University of California, Los Angeles, IEEE, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication <ref> [5, 3] </ref>, automatic system configuration [2, 14, 10], location-specific alarms [14, 10], and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure.
Reference: [4] <author> Tomasz Imielinski and B. R. Badrinath. </author> <title> Wireless mobile computing: Challenges in data management. </title> <journal> Communications of the ACM, </journal> <volume> 37(10) </volume> <pages> 18-28, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: In this sense, lcron is an example of an answer to the question raised by the Dataman project at Rutgers: "what if location were a first-class operating-system concept, much as time is now?" <ref> [4] </ref>. Finally it takes advantage of intrinsic sources of location information in existing wired and wireless networks. We believe that there is substantial benefit to adding a notion of location to user-configurable scheduling. Location- and event-aware scheduling simplifies a number of common tasks. <p> Finally, several special purpose systems have developed custom approaches to watch for location changes. Our work was inspired by the Dataman project's question of "how would system software change if location were a first-class operating-system concept" <ref> [4] </ref>. The Dataman project has looked at how mobility affects network transport (mobile IP) and multicast (geographic messaging). We apply their proposition in a very real sense by considering the use of location in existing approaches to task scheduling.
Reference: [5] <author> James J. Kistler and Mahadev Satyanarayanan. </author> <title> Disconnected operation in the Coda file system. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1) </volume> <pages> 3-25, </pages> <year> 1992. </year>
Reference-contexts: Lcron is most useful for systems which connect to several different networks, but it is also useful for connection and disconnection to a single network. Detection of network reconnection can be used to trigger events such as sending queued mail or synchronization of a disconnected file system <ref> [5] </ref>. Finally, although we have focused on location-aware job scheduling, other events map well into the lcron model. <p> We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication <ref> [5, 3] </ref>, automatic system configuration [2, 14, 10], location-specific alarms [14, 10], and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure.
Reference: [6] <author> Geoff Kuenning. </author> <title> Experiences with an extended cron daemon. </title> <type> Unpublished manuscript, </type> <month> November </month> <year> 1997. </year>
Reference-contexts: We based lcron on Geoff Kuenning's implementation xcron <ref> [6] </ref>. Although other freely available cron implementations are more widely used, xcron had several features important to us for mobile use. Xcron is aware that computers may be turned off or suspended; it optionally runs jobs scheduled during down-time when the system next starts.
Reference: [7] <author> C. Perkins. </author> <title> IP mobility support. RFC 2002, Internet Request For Comments, </title> <month> October </month> <year> 1996. </year>
Reference-contexts: For computers which are frequently networked, the wired network infrastructure itself can provide location information. Portable computers may be assigned different IP addresses and routers (or different mobile IP addresses <ref> [7] </ref>) depending on where they are. By monitoring the network attachment we can determine where the computer is.
Reference: [8] <author> Tristan Richardson, Frazer Bennett, Glenford Mapp, and Andy Hopper. </author> <title> Teleporting in an x window system environment. </title> <journal> IEEE Personal Communications Magazine, </journal> <volume> 1(3) </volume> <pages> 6-12, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration [2, 14, 10], location-specific alarms [14, 10], and teleporting <ref> [8] </ref> have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer. <p> We are currently working to remove this limitation. We also experimented with teleporting in lcron. Teleporting is the idea that a user's existing applications should move transparently to the nearest, most capable display <ref> [8] </ref>. Although we have not deployed a full teleporting system (such as has been used at ORL), we have experimented with a weaker form where new sessions of a set of applications are automatically begun on a nearby display when a network connection is made.
Reference: [9] <author> B. Schilit, N. Adams, and R. </author> <title> Want. </title> <booktitle> Context-aware computing applications. In Proceedings of the Workshop on Mobile Computing Systems and Applications, </booktitle> <pages> pages 85-90, </pages> <address> Santa Cruz, CA, USA, </address> <month> December </month> <year> 1994. </year> <note> IEEE. </note>
Reference-contexts: John Heidemann's work was partially funded under the VINT project (DARPA grant ABT63-96-C-0054) and the LSAM project (DARPA grant J-FBI-95-185). lax these constraints. The Xerox ParcTab supported a customizable context-aware system <ref> [9] </ref>, as does the ORL Active Badge system [12]. Although influential in exploring these ideas, these systems have seen relatively little widespread deployment, possibly because of the overhead of building and maintaining the required infrastructure. A system which uses existing infrastructure for location detection would be much easier to deploy. <p> Xerox PARC's work in ubiquitous computing [14] through systems such as the ParcTab [13] pioneered location-aware computing. Their work in context-aware computing described systems similar in function to lcron <ref> [10, 9] </ref>. Lcron builds upon this work by describing how multiple, commonly available of location information (such as network connections and GPS information) can be mapped to user-relevant locations. <p> Lcron builds upon this work by describing how multiple, commonly available of location information (such as network connections and GPS information) can be mapped to user-relevant locations. Schilit, Adams, and Want classify context-aware computing along two axes (see Figure 2 from <ref> [9] </ref>) based on whether the task at hand is performing information retrieval or command execution and whether 6 manual automatic information proximate selection/contextual info auto contextual reconfig command contextual commands contextual-triggered actions Table 2: Schilit, Adams, and Want's classification of context-aware computing (from [9]). it is done manually or automatically. <p> along two axes (see Figure 2 from <ref> [9] </ref>) based on whether the task at hand is performing information retrieval or command execution and whether 6 manual automatic information proximate selection/contextual info auto contextual reconfig command contextual commands contextual-triggered actions Table 2: Schilit, Adams, and Want's classification of context-aware computing (from [9]). it is done manually or automatically. By this classification lcron is automatic (not manual) and supports commands (not information), thus falling into the "context-triggered actions" quadrant.
Reference: [10] <author> Bill Schilit, Marvin Theimer, and Brent Welch. </author> <title> Customizing mobile applications. </title> <booktitle> In Proceedings of the USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 129-138, </pages> <address> Cambridge, MA, USA, </address> <month> August </month> <year> 1993. </year> <booktitle> USENIX. </booktitle>
Reference-contexts: We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration <ref> [2, 14, 10] </ref>, location-specific alarms [14, 10], and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer. <p> We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration [2, 14, 10], location-specific alarms <ref> [14, 10] </ref>, and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer. <p> Xerox PARC's work in ubiquitous computing [14] through systems such as the ParcTab [13] pioneered location-aware computing. Their work in context-aware computing described systems similar in function to lcron <ref> [10, 9] </ref>. Lcron builds upon this work by describing how multiple, commonly available of location information (such as network connections and GPS information) can be mapped to user-relevant locations.
Reference: [11] <author> Geoffrey M. Voelker and Brian N. Bershad. Mo-bisaic: </author> <title> An information system for a mobile wireless computing environment. </title> <booktitle> In Proceedings of the Workshop on Mobile Computing Systems and Applications, </booktitle> <pages> pages 185-190, </pages> <address> Santa Cruz, CA, USA, </address> <month> December </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: We believe that the final quadrant (manual information retrieval) is best solved with other work such as location-aware web-browsers <ref> [1, 11] </ref>. Location dependent information such as nearest restaurant, availability of space in the nearest parking lot or local weather information can best be retrieved on-demand basis by location-aware web-browsers.
Reference: [12] <author> Roy Want, Andy Hopper, Veronica Falcao, and Jonathon Gibbons. </author> <title> The active badge location system. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 91-102, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: John Heidemann's work was partially funded under the VINT project (DARPA grant ABT63-96-C-0054) and the LSAM project (DARPA grant J-FBI-95-185). lax these constraints. The Xerox ParcTab supported a customizable context-aware system [9], as does the ORL Active Badge system <ref> [12] </ref>. Although influential in exploring these ideas, these systems have seen relatively little widespread deployment, possibly because of the overhead of building and maintaining the required infrastructure. A system which uses existing infrastructure for location detection would be much easier to deploy.
Reference: [13] <author> Roy Want, Bill N. Schilit, Norman I. Adams, Rich Gold, Karin Petersen, David Goldberg, John R. Ellis, and Mark Weiser. </author> <title> An overview of the ParcTab ubiquitous computing experiment. </title> <journal> IEEE Personal Communications Magazine, </journal> <volume> 2(6) </volume> <pages> 28-43, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: We apply their proposition in a very real sense by considering the use of location in existing approaches to task scheduling. Xerox PARC's work in ubiquitous computing [14] through systems such as the ParcTab <ref> [13] </ref> pioneered location-aware computing. Their work in context-aware computing described systems similar in function to lcron [10, 9]. Lcron builds upon this work by describing how multiple, commonly available of location information (such as network connections and GPS information) can be mapped to user-relevant locations.
Reference: [14] <author> Mark Weiser. </author> <title> Some computer science problems in ubiquitous computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(7) </volume> <pages> 75-84, </pages> <month> July </month> <year> 1993. </year> <month> 8 </month>
Reference-contexts: We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration <ref> [2, 14, 10] </ref>, location-specific alarms [14, 10], and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer. <p> We have experimented with user-interface tele-porting (automatically bringing up a copy of running applications on a nearby display) but some further development is still required. None of these applications are new: file-replication [5, 3], automatic system configuration [2, 14, 10], location-specific alarms <ref> [14, 10] </ref>, and teleporting [8] have been experimented with before. The advantage of lcron is that now these applications can be casually deployed by users without substantial existing infrastructure. A common and effective use of lcron is for file replication and e-mail transfer. <p> The Dataman project has looked at how mobility affects network transport (mobile IP) and multicast (geographic messaging). We apply their proposition in a very real sense by considering the use of location in existing approaches to task scheduling. Xerox PARC's work in ubiquitous computing <ref> [14] </ref> through systems such as the ParcTab [13] pioneered location-aware computing. Their work in context-aware computing described systems similar in function to lcron [10, 9].
References-found: 14

