URL: http://http.icsi.berkeley.edu/~luby/PAPERS/mirrdown.ps
Refering-URL: http://http.icsi.berkeley.edu/~luby/
Root-URL: http://http.icsi.berkeley.edu
Title: Accessing Multiple Mirror Sites in Parallel: Using Tornado Codes to Speed Up Downloads  
Author: John W. Byers Michael Luby Michael Mitzenmacher 
Address: Palo Alto, California.  
Note: Research supported in part by National Science Foundation operating grant NCR-9416101.  Research supported in part by National Science Foundation operating grant NCR-9416101.  
Affiliation: UC Berkeley and International Computer Science Institute, Berkeley, California.  International Computer Science Institute, Berkeley, California.  Compaq Systems Research Center,  
Pubnum: TR-98-021  
Abstract: Mirror sites enable client requests to be serviced by any of a number of servers, reducing load at individual servers and dispersing network load. Typically, a client requests service from a single mirror site. We consider enabling a client to access a file from multiple mirror sites in parallel to speed up the download. To eliminate complex client-server negotiations that a straightforward implementation of this approach would require, we develop a feedback-free protocol based on erasure codes. We demonstrate that a protocol using fast Tornado codes can deliver dramatic speedups at the expense of transmitting a moderate number of additional packets into the network. Our scalable solution extends naturally to allow multiple clients to access data from multiple mirror sites simultaneously. Our approach applies naturally to wireless networks and satellite networks as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Dissemination-Based Data Delivery Using Broadcast Disks," </title> <journal> IEEE Personal Communications, </journal> <month> December </month> <year> 1995, </year> <pages> pp. 50-60. 15 </pages>
Reference: [2] <author> K. C. Almeroth, M. Ammar, and Z. Fei, </author> <title> "Scalable Delivery of Web Pages Using Cyclic Best-Effort (UDP) Multicast," </title> <booktitle> In IEEE INFOCOM '98, </booktitle> <address> San Francisco, </address> <year> 1998. </year>
Reference-contexts: Previous multicast work is also relevant since it demonstrates another approach for removing system bottlenecks by reducing the load on a single server. For example, <ref> [2] </ref> suggests that servers holding heavily accessed web pages can reduce load and improve delivery performance by servicing requests in batches, rather than with separate point-to-point connections.
Reference: [3] <author> A. Bestavros. </author> <title> "An adaptive information dispersal algorithm for time-critical reliable communications." </title> <editor> In I. Frisch, M. Malek, and S Panwar, editors, </editor> <title> Network Management and Control, Volume II. </title> <publisher> Plenum Publishing Corporation, </publisher> <address> New York, New York, </address> <year> 1994. </year>
Reference-contexts: In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks <ref> [3, 4] </ref>. A primary benefit of using erasure codes in these contexts is that it reduces or potentially eliminates the need for feedback from the receivers to the sender.
Reference: [4] <author> A. Bestavros. </author> <title> "AIDA-based real-time fault-tolerant broadcast disks." </title> <booktitle> In Procedings of the 16th IEEE Real-Time System Symposium, </booktitle> <year> 1996. </year>
Reference-contexts: In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks <ref> [3, 4] </ref>. A primary benefit of using erasure codes in these contexts is that it reduces or potentially eliminates the need for feedback from the receivers to the sender.
Reference: [5] <author> J. Blomer, M. Kalfane, M. Karpinski, R. Karp, M. Luby, and D. Zuckerman, </author> <title> "An XOR-Based Erasure-Resilient Coding Scheme," </title> <type> ICSI Technical Report No. </type> <institution> TR-95-048, </institution> <month> August </month> <year> 1995. </year>
Reference: [6] <author> J. Byers, M. Luby, M. Mitzenmacher, and A. </author> <title> Rege, "A Digital Fountain Approach to Reliable Distribution of Bulk Data," </title> <note> To appear in ACM SIGCOMM '98. </note>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Indeed, previously these codes have been shown to be more effective than standard erasure codes in the setting of reliable multicast transmission of large files <ref> [6] </ref>. The price for the fast encoding and decoding is that slightly more than k distinct packets are required to reconstitute the message. In this paper, we will use Tornado codes as the basis for our proposed approach. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4]. <p> Of course, fault tolerance remains a benefit of our approach. Second, our consideration of the combination of multicast and parallel access, or many-to-many distribution, also appears novel. Using a conceptual approach from our previous work on multicast <ref> [6] </ref>, we demonstrate a simple, efficient solution to this distribution problem. A third important difference is that virtually all previous work has utilized standard erasure codes, such as Reed-Solomon codes. <p> Moreover, this solution appears completely inadequate for many-to-many distribution. 3 A digital fountain solution In this section, we outline an idealized solution to the multigather problem, based on a similar approach to reliable multicast presented in <ref> [6] </ref>. In subsequent sections, we describe approximations to this ideal solution based on erasure codes, and discuss the performance of protocols based on Tornado codes. A client wishes to obtain a file consisting of k packets from a collection of servers. <p> Thus, the client can run the Tornado decoding algorithm in real-time as 2 Because our codes are randomly constructed, a given code does not have a fixed decoding inefficiency threshold *; however, the variance in decoding inefficiency is generally very small. For more details see <ref> [6] </ref>. 6 the encoding packets arrive, and reconstruct the original file as soon as it determines that sufficiently many packets have arrived. We now clarify the speed advantage of Tornado codes. <p> A summary comparing the properties of Tornado codes and standard Reed-Solomon codes is given in Table 1. Table 2 compares decoding times for a standard Reed-Solomon code based on Cauchy matrices and a specific Tornado Code we call Tornado Z. (Encoding times and further simulation results are available in <ref> [6] </ref>.) 3 The implementations were not carefully optimized, so their running times could be improved by small factors. All experiments were benchmarked on a Sun 167 MHz UltraSPARC 1 with 64 megabytes of RAM running Solaris 2.5.1. All runs are with packet length P = 1KB. <p> In this case, the speed advantage of Tornado codes is of course less dramatic; however, in this case Tornado codes have an advantage in terms of robustness as they encode over a larger set of packets. See <ref> [6] </ref> for more details. 7 Tornado Reed-Solomon Decoding inefficiency 1 + * required 1 Encoding times (k + `) ln (1=*)P k`P Decoding times (k + `) ln (1=*)P keP Basic operation XOR Field operations Table 1: Properties of Tornado vs. <p> Moreover, congestion control can be implemented with this approach using ideas from layered multicast of [26] and <ref> [6] </ref>. We demonstrate the scalability and utility of this protocol by measuring worst-case efficiency and speedups in simulations of between 100 and 100,000 users. <p> In practice, there would be somewhat more variation in speedup and reception inefficiency due to the fact that the decoding inefficiency is not fixed at 5.5% as we had assumed. However, because the variance in the decoding inefficiency is also relatively small (see <ref> [6] </ref>), this would not impact the scalability of the solution. 6.3 Extensions: Tornado solutions with minimal control information One limitation of the stateless transmission protocols we have described so far is that the lack of coordination between the sources can result in duplicate transmissions and hence distinctness inefficiency.
Reference: [7] <author> R.L. Carter and M.E. Crovella. </author> <title> "Dynamic Server Selection Using Bandwidth Probing in Wide-Area Networks," </title> <type> Technical Report BU-CS-96-006, </type> <institution> Computer Science Department, Boston University, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: This selection process can be automated and improved by statistical record-keeping [25], or by dynamic probing <ref> [7, 18] </ref>. Our first objective is to enable users to download data from multiple mirror sites in parallel in order to reduce downloading time. This technique not only has the potential to improve performance substantially over a single server approach, but can eliminate the need for a complex selection process.
Reference: [8] <author> S. Floyd, V. Jacobson, C. G. Liu, S. McCanne, and L. Zhang, </author> <title> "A Reliable Multi-cast Framework for Light-Weight Sessions and Application Level Framing." </title> <booktitle> In ACM SIGCOMM '95, </booktitle> <pages> pp. 342-356, </pages> <month> August </month> <year> 1995. </year>
Reference: [9] <author> J. </author> <title> Gemmell, "ECSRM Erasure Correcting Scalable Reliable Multicast," </title> <institution> Microsoft Research Technical Report MS-TR-97-20, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: This technique not only has the potential to improve performance substantially over a single server approach, but can eliminate the need for a complex selection process. For some applications, such as software downloading <ref> [9, 24] </ref>, mirrored data may be requested by a vast number of autonomous clients whose access intervals may overlap with one another. <p> For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4].
Reference: [10] <author> C. Hanle. </author> <title> "A Comparison of Architecture and Performance between Reliable Multicast Protocols over the MBONE." </title> <type> Diploma Thesis, </type> <institution> Institute of Telematics, University of Karlsruhe. </institution> <note> Available at www.starburstcom.com.w papers.htm. </note>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4].
Reference: [11] <author> C. Huitema, </author> <title> "The Case for Packet Level FEC." </title> <booktitle> In Proc. of IFIP 5th Int'l Workshop on Protocols for High Speed Networks, </booktitle> <institution> Sophia Antipolis, France, </institution> <month> October </month> <year> 1996. </year>
Reference: [12] <author> M. Luby, M. Mitzenmacher, A. Shokrollahi, D. Spielman, and V. Stemann, </author> <title> "Practical Loss-Resilient Codes." </title> <booktitle> In Proceedings of the 29 th ACM Symposium on Theory of Computing, </booktitle> <year> 1997. </year>
Reference-contexts: Hence, although other erasure codes could be used in this setting, we suggest that a newly developed class of erasure codes called Tornado codes are best suited to this application, as they have extremely fast encoding and decoding algorithms <ref> [12] </ref>. Indeed, previously these codes have been shown to be more effective than standard erasure codes in the setting of reliable multicast transmission of large files [6]. The price for the fast encoding and decoding is that slightly more than k distinct packets are required to reconstitute the message. <p> For example, encoding and decoding an entire file could take orders of magnitude more time than the download. By making use of Tornado codes, a new class of erasure codes developed in <ref> [12, 13] </ref>, we can develop practical schemes that employ encoding. <p> We outline how these codes differ from traditional Reed-Solomon erasure codes, and focus in particular on performance comparisons. A detailed, technical description of these codes is provided in <ref> [12] </ref> and [13]. For the rest of the discussion, we will consider erasure codes that take a set of k packets and produce a set of ` redundant packets for a total of n = k + ` encoding packets all of a fixed length P . <p> We note also that one can trade off speed against inefficiency in designing Tornado codes. For example, we have found a slightly slower code with average decoding inefficiency 1.03, and more efficient but slower codes can be constructed; see <ref> [12, 13] </ref>. Throughout this paper, we will adopt Tornado Z as a suitable example for convenience.
Reference: [13] <author> M. Luby, M. Mitzenmacher, and A. Shokrollahi, </author> <title> "Analysis of Random Processes via And-Or Tree Evaluation." </title> <booktitle> In Proceedings of the 9 th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <month> January </month> <year> 1998. </year>
Reference-contexts: For example, encoding and decoding an entire file could take orders of magnitude more time than the download. By making use of Tornado codes, a new class of erasure codes developed in <ref> [12, 13] </ref>, we can develop practical schemes that employ encoding. <p> We outline how these codes differ from traditional Reed-Solomon erasure codes, and focus in particular on performance comparisons. A detailed, technical description of these codes is provided in [12] and <ref> [13] </ref>. For the rest of the discussion, we will consider erasure codes that take a set of k packets and produce a set of ` redundant packets for a total of n = k + ` encoding packets all of a fixed length P . <p> We note also that one can trade off speed against inefficiency in designing Tornado codes. For example, we have found a slightly slower code with average decoding inefficiency 1.03, and more efficient but slower codes can be constructed; see <ref> [12, 13] </ref>. Throughout this paper, we will adopt Tornado Z as a suitable example for convenience.
Reference: [14] <author> N. F. Maxemchuk, </author> <title> Dispersity Routing in Store and Forward Networks, </title> <type> Ph.D. thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1975. </year>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission [6, 9, 10, 20, 22, 23, 24, 26]. The main idea underlying this technique <ref> [14, 21] </ref> is to take an initial file consisting of k packets and generate an n packet encoding of the file with the property that the initial file can be restituted from any k-packet subset of the encoding. <p> The most relevant related work includes Maxemchuk's work on dispersity routing <ref> [14, 15] </ref> and Rabin's work on information dispersal (IDA) [21]. For example, the idea of Rabin's IDA scheme is to break a file into several pieces, where each piece also includes some redundant information.
Reference: [15] <author> N. F. Maxemchuk, </author> <title> "Dispersity Routing." </title> <booktitle> In Proc. of the International Conference on Communications, </booktitle> <pages> pp. 41-10 - 41-13, </pages> <year> 1975. </year>
Reference-contexts: The most relevant related work includes Maxemchuk's work on dispersity routing <ref> [14, 15] </ref> and Rabin's work on information dispersal (IDA) [21]. For example, the idea of Rabin's IDA scheme is to break a file into several pieces, where each piece also includes some redundant information.
Reference: [16] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven Layered Multicast." </title> <booktitle> In Proc. of ACM SIGCOMM '96, </booktitle> <pages> pp. 117-130, </pages> <year> 1996. </year> <month> 16 </month>
Reference: [17] <author> C. K. Miller, </author> <title> "Reliable Multicast Protocols: A Practical View." </title> <booktitle> In Proc. of the 22nd Annual Conference on Local Computer Networks (LCN '97), </booktitle> <year> 1997. </year>
Reference: [18] <author> M. Mitzenmacher, </author> <title> The Power of two Choices in Randomized Load Balancing. </title> <type> Ph. D. thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1996. </year>
Reference-contexts: This selection process can be automated and improved by statistical record-keeping [25], or by dynamic probing <ref> [7, 18] </ref>. Our first objective is to enable users to download data from multiple mirror sites in parallel in order to reduce downloading time. This technique not only has the potential to improve performance substantially over a single server approach, but can eliminate the need for a complex selection process.
Reference: [19] <author> J. Nonnenmacher and E. W. Biersack, </author> <title> "Asynchronous Multicast Push: AMP." </title> <booktitle> In Proc. of International Conference on Computer Communications, </booktitle> <address> Cannes, France, </address> <month> November </month> <year> 1997. </year>
Reference: [20] <author> J. Nonnenmacher, E. W. Biersack, and D. Towsley, </author> <title> "Parity-Based Loss Recovery for Reliable Multicast Transmission." </title> <booktitle> In Proc. of ACM SIGCOMM '97, </booktitle> <year> 1997. </year>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4]. <p> Standard erasure codes also require somewhat complex finite field operations, further increasing their encoding and decoding times. As a result, standard erasure codes can only be applied in practice when k and ` are small. (Values used in <ref> [20, 23, 24, 26] </ref> have k and ` ranging from 8 to 256). In contrast, Tornado codes have encoding and decoding times that are proportional to (k + `) ln (1=(* 1))P , where * is the decoding inefficiency.
Reference: [21] <author> M. O. Rabin, </author> <title> "Efficient Dispersal of Information for Security, Load Balancing, and Fault Tolerance." </title> <journal> In Journal of the ACM, </journal> <volume> Volume 38, </volume> <pages> pp. 335-348, </pages> <year> 1989. </year>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission [6, 9, 10, 20, 22, 23, 24, 26]. The main idea underlying this technique <ref> [14, 21] </ref> is to take an initial file consisting of k packets and generate an n packet encoding of the file with the property that the initial file can be restituted from any k-packet subset of the encoding. <p> The most relevant related work includes Maxemchuk's work on dispersity routing [14, 15] and Rabin's work on information dispersal (IDA) <ref> [21] </ref>. For example, the idea of Rabin's IDA scheme is to break a file into several pieces, where each piece also includes some redundant information. By dispersing these pieces among different nodes in the network, one guarantees fault tolerance against link or node failures.
Reference: [22] <author> L. </author> <title> Rizzo, "Effective Erasure Codes for Reliable Computer Communication Protocols." </title> <booktitle> In Computer Communication Review, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4].
Reference: [23] <author> L. Rizzo and L. Vicisano, </author> <title> "A Reliable Multicast Data Distribution Protocol Based on Software FEC Techniques." </title> <booktitle> In Proc. of HPCS '97, </booktitle> <address> Greece, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4]. <p> Standard erasure codes also require somewhat complex finite field operations, further increasing their encoding and decoding times. As a result, standard erasure codes can only be applied in practice when k and ` are small. (Values used in <ref> [20, 23, 24, 26] </ref> have k and ` ranging from 8 to 256). In contrast, Tornado codes have encoding and decoding times that are proportional to (k + `) ln (1=(* 1))P , where * is the decoding inefficiency.
Reference: [24] <author> E. Schooler and J. </author> <title> Gemmell, "Using multicast FEC to solve the midnight madness problem," </title> <institution> Microsoft Research Technical Report MS-TR-97-25, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: This technique not only has the potential to improve performance substantially over a single server approach, but can eliminate the need for a complex selection process. For some applications, such as software downloading <ref> [9, 24] </ref>, mirrored data may be requested by a vast number of autonomous clients whose access intervals may overlap with one another. <p> For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4]. <p> Standard erasure codes also require somewhat complex finite field operations, further increasing their encoding and decoding times. As a result, standard erasure codes can only be applied in practice when k and ` are small. (Values used in <ref> [20, 23, 24, 26] </ref> have k and ` ranging from 8 to 256). In contrast, Tornado codes have encoding and decoding times that are proportional to (k + `) ln (1=(* 1))P , where * is the decoding inefficiency.
Reference: [25] <author> S. Seshan, M. Stemm, and R. Katz, "SPAND: </author> <title> Shared Passive Network Performance Discovery," </title> <booktitle> In Proc. of Usenix Symposium on Internet Technologies and Systems '97, </booktitle> <address> Monterey, CA, </address> <month> December </month> <year> 1997. </year>
Reference-contexts: A limitation of current mirroring technology is that the user must choose a single mirror site from which to access data. While the choice of server may appear obvious when the number of mirror sites is small, the work of <ref> [25] </ref> (and others) indicates that the obvious choice is not always the best choice and dramatic performance improvements can result from more careful selection. This selection process can be automated and improved by statistical record-keeping [25], or by dynamic probing [7, 18]. <p> server may appear obvious when the number of mirror sites is small, the work of <ref> [25] </ref> (and others) indicates that the obvious choice is not always the best choice and dramatic performance improvements can result from more careful selection. This selection process can be automated and improved by statistical record-keeping [25], or by dynamic probing [7, 18]. Our first objective is to enable users to download data from multiple mirror sites in parallel in order to reduce downloading time.
Reference: [26] <author> L. Vicisano, L. Rizzo, and J. Crowcroft. </author> <title> "TCP-like congestion control for layered mul-ticast data transfer." </title> <note> To appear in INFOCOM '98. </note>
Reference-contexts: For this step, we utilize erasure codes (often referred to as Forward Error Correction codes) which have been widely suggested as a means of simplifying and streamlining reliable mul 1 ticast transmission <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. <p> Although parallel access to multiple mirror sites (many-to-one transmission) is not a well studied concept, multicast distribution (or one-to-many distribution) has been widely studied. In particular, as we have mentioned, the idea of using erasure codes to simplify multicast transmission has recently been considered in many works <ref> [6, 9, 10, 20, 22, 23, 24, 26] </ref>. In the database and mobile computing literature, there has also been similar use of erasure codes in work on broadcast disks [3, 4]. <p> Standard erasure codes also require somewhat complex finite field operations, further increasing their encoding and decoding times. As a result, standard erasure codes can only be applied in practice when k and ` are small. (Values used in <ref> [20, 23, 24, 26] </ref> have k and ` ranging from 8 to 256). In contrast, Tornado codes have encoding and decoding times that are proportional to (k + `) ln (1=(* 1))P , where * is the decoding inefficiency. <p> The use of scalable multicast ensures that the bandwidth requirements of the protocol would be significantly lower than approaches built on point-to-point connections, even if the reception inefficiency of the scheme is moderate. Moreover, congestion control can be implemented with this approach using ideas from layered multicast of <ref> [26] </ref> and [6]. We demonstrate the scalability and utility of this protocol by measuring worst-case efficiency and speedups in simulations of between 100 and 100,000 users.
Reference: [27] <author> M. Yajnik, J. Kurose, and D. Towsley, </author> <title> "Packet Loss Correlation in the MBone Multicast Network." </title> <booktitle> In Proceedings of IEEE Global Internet '96, </booktitle> <address> London, </address> <month> November </month> <year> 1996. </year>
Reference: [28] <author> R. Yavatkar, J. Griffoen, and M. Sudan, </author> <title> "A Reliable Dissemination Protocol for Interactive Collaborative Applications." </title> <booktitle> In Proceedings of ACM Multimedia '95, </booktitle> <address> San Francisco, </address> <year> 1995, </year> <pages> pp. 333-344. 17 </pages>
References-found: 28

