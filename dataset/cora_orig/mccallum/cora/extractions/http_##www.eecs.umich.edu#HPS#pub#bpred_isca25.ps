URL: http://www.eecs.umich.edu/HPS/pub/bpred_isca25.ps
Refering-URL: http://www.eecs.umich.edu/HPS/hps_branchpred.html
Root-URL: http://www.cs.umich.edu
Email: email: folaf,sanjayp,robc,pattg@eecs.umich.edu  
Title: An Analysis of Correlation and Predictability: What Makes Two-Level Branch Predictors Work predictors and configurations
Author: Marius Evers Sanjay J. Patel Robert S. Chappell Yale N. Patt 
Note: Numerous studies have shown which  that can be detrimental to the performance of these predictors. However, little research has been done on which  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science The University of Michigan,  
Abstract: In this paper, we investigate and quantify reasons why branches are predictable. We show that some of this predictability is not captured by the two-level adaptive branch predictors. An understanding of the predictability of branches may lead to insights ultimately resulting in better or less complex predictors. We also investigate and quantify what fraction of the branches in each benchmark is predictable using each of the methods described in this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P.-Y. Chang, E. Hao, T.-Y. Yeh, and Y. N. Patt, </author> <title> Branch classification: A new mechanism for improving branch predictor performance, </title> <booktitle> in Proceedings of the 27th Annual ACM/IEEE International Symposium on Microar-chitecture, </booktitle> <pages> pp. 22-31, </pages> <year> 1994. </year>
Reference-contexts: Studies on effects seen in branch predictors There have also been some studies on the behavior of branches and branch predictors. Pan et al. [4] identified several cases of branches being correlated in the source code of the SPEC89 benchmarks. Chang et al. <ref> [1] </ref> classified branches based on their taken rates. They proposed a predictor using a static predictor for the strongly biased branches, and a dynamic hybrid predictor for the weakly biased branches.
Reference: [2] <author> S. McFarling, </author> <title> Combining branch predictors, </title> <type> Technical Report TN-36, </type> <institution> Digital Western Research Laboratory, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed <ref> [8, 11, 2] </ref> to improve prediction accuracy. Several researchers have proposed modifications [2, 3, 7] to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable. <p> 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed [8, 11, 2] to improve prediction accuracy. Several researchers have proposed modifications <ref> [2, 3, 7] </ref> to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable. <p> However, there has been little work that explains what makes branches predictable. A better understanding of this would likely lead to insights ultimately resulting in better predictors, or in re ducing the complexity of current predictors. Global two-level branch predictors such as GAs [11] and gshare <ref> [2] </ref> take advantage of the correlation between branches. Pan, So, and Rahmeh [4] identified several cases of such correlated branches in the SPEC89 benchmarks. If two branches are correlated, knowing the outcome of the first branch gives you information about which direction the second branch is likely to take. <p> The lower bits of the branch address is used to select the appropriate Pattern History Table (PHT) and the contents of the branch history register select the appropriate 2-bit counter to use within that PHT. Several variations of the Two-Level Branch Predictor have been proposed. McFarling <ref> [2] </ref> introduced gshare, a variation of the global-history Two-Level Branch Predictor that XORs the global branch history with the branch address to index into the PHT. This leads to better utilization of the PHT. <p> This has the advantage of being able to represent the path, albeit imperfectly. It has the disadvantage that information from fewer branches can be captured in the history. To further improve prediction accuracy, hybrid branch predictors have recently been proposed <ref> [2] </ref>. A hybrid branch predictor is composed of two or more predictors and a mechanism to select among them. A hybrid branch predictor can exploit the different strengths of its component predictors, enabling it to achieve a prediction accuracy greater than that achieved by any of its components alone. 2.2.
Reference: [3] <author> R. Nair, </author> <title> Dynamic path-based branch correlation, </title> <booktitle> in Proceedings of the 28th Annual ACM/IEEE International Symposium on Microarchitecture, </booktitle> <pages> pp. 15-23, </pages> <year> 1995. </year>
Reference-contexts: 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed [8, 11, 2] to improve prediction accuracy. Several researchers have proposed modifications <ref> [2, 3, 7] </ref> to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable. <p> Several variations of the Two-Level Branch Predictor have been proposed. McFarling [2] introduced gshare, a variation of the global-history Two-Level Branch Predictor that XORs the global branch history with the branch address to index into the PHT. This leads to better utilization of the PHT. Nair <ref> [3] </ref> proposed using a path history instead of a pattern history to index into the PHT. This has the advantage of being able to represent the path, albeit imperfectly. It has the disadvantage that information from fewer branches can be captured in the history.
Reference: [4] <author> S.-T. Pan, K. So, and J. T. Rahmeh, </author> <title> Improving the accuracy of dynamic branch prediction using branch correlation, </title> <booktitle> in Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pp. 76-84, </pages> <year> 1992. </year>
Reference-contexts: A better understanding of this would likely lead to insights ultimately resulting in better predictors, or in re ducing the complexity of current predictors. Global two-level branch predictors such as GAs [11] and gshare [2] take advantage of the correlation between branches. Pan, So, and Rahmeh <ref> [4] </ref> identified several cases of such correlated branches in the SPEC89 benchmarks. If two branches are correlated, knowing the outcome of the first branch gives you information about which direction the second branch is likely to take. <p> Studies on effects seen in branch predictors There have also been some studies on the behavior of branches and branch predictors. Pan et al. <ref> [4] </ref> identified several cases of branches being correlated in the source code of the SPEC89 benchmarks. Chang et al. [1] classified branches based on their taken rates. They proposed a predictor using a static predictor for the strongly biased branches, and a dynamic hybrid predictor for the weakly biased branches.
Reference: [5] <author> S. Sechrest, C.-C. Lee, and T. Mudge, </author> <title> The role of adaptivity in two-level adaptive branch prediction, </title> <booktitle> in Proceedings of the 28th Annual ACM/IEEE International Symposium on Microarchitecture, </booktitle> <year> 1995. </year>
Reference-contexts: Chang et al. [1] classified branches based on their taken rates. They proposed a predictor using a static predictor for the strongly biased branches, and a dynamic hybrid predictor for the weakly biased branches. Sechrest et al. <ref> [5] </ref> studied the role of adaptivity in two-level branch predictors and determined that, for per-address predictors with short histories, having statically determined values in the PHT performed on par with the adaptive scheme using 2-bit counters.
Reference: [6] <author> S. Sechrest, C.-C. Lee, and T. Mudge, </author> <title> Correlation and aliasing in dynamic branch predictors, </title> <booktitle> in Proceedings of the 23rd Annual International Symposium on Computer Architecture, </booktitle> <year> 1996. </year>
Reference-contexts: Over the years, several branch prediction strategies have been proposed [8, 11, 2] to improve prediction accuracy. Several researchers have proposed modifications [2, 3, 7] to these schemes, and there have been studies on which configurations of these work best <ref> [6] </ref>. However, there has been little work that explains what makes branches predictable. A better understanding of this would likely lead to insights ultimately resulting in better predictors, or in re ducing the complexity of current predictors.
Reference: [7] <author> A. Seznec, </author> <title> Trading conflict and capacity aliasing in conditional branch predictors, </title> <booktitle> in Proceedings of the 24th Annual International Symposium on Computer Architecture, </booktitle> <year> 1997. </year>
Reference-contexts: 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed [8, 11, 2] to improve prediction accuracy. Several researchers have proposed modifications <ref> [2, 3, 7] </ref> to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable.
Reference: [8] <author> J. E. Smith, </author> <title> A study of branch prediction strategies, </title> <booktitle> in Proceedings of the 8th Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 135-148, </pages> <year> 1981. </year>
Reference-contexts: 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed <ref> [8, 11, 2] </ref> to improve prediction accuracy. Several researchers have proposed modifications [2, 3, 7] to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable. <p> We try to identify why predictors work well, and identify some areas where the current predictors are not uncovering the predictability that exists. 2. Previous work 2.1. Branch prediction mechanisms To improve prediction accuracy, various branch prediction strategies have been studied. Smith <ref> [8] </ref> proposed a branch prediction scheme that uses a table of 2-bit saturating up-down counters to keep track of the direction a branch is more likely to take. Each branch is mapped via its address to a counter.
Reference: [9] <author> A. R. Talcott, M. Nemirovsky, and R. C. Wood, </author> <title> The influence of branch prediction table interference on branch prediction scheme performance, </title> <booktitle> in Proceedings of the 1995 ACM/IEEE Conference on Parallel Architectures and Compilation Techniques, </booktitle> <year> 1995. </year>
Reference-contexts: Sechrest et al. [5] studied the role of adaptivity in two-level branch predictors and determined that, for per-address predictors with short histories, having statically determined values in the PHT performed on par with the adaptive scheme using 2-bit counters. Talcott et al. <ref> [9] </ref> and Young et al. [12] studied and classified the effects of pattern history table interference, and showed that it negatively affected the performance of 2-level branch predictors. These two papers used interference-free predictors to aid in the understanding of the potential of 2-level predictors.
Reference: [10] <author> T.-Y. Yeh and Y. N. Patt, </author> <title> Two-level adaptive branch prediction, </title> <booktitle> in Proceedings of the 24th Annual ACM/IEEE International Symposium on Microarchi-tecture, </booktitle> <pages> pp. 51-61, </pages> <year> 1991. </year>
Reference-contexts: In addition to correlation with other branches, many branches are predictable based on the previous outcomes of the branch itself. This is the predictability exploited by per-address two-level branch predictors such as PAs <ref> [10] </ref>. Branches predictable in this way include loop branches with a regular number of iterations and branches that follow a periodic pattern (such as being taken every other time). <p> These counters are updated based on the branch outcomes. When a branch is taken, the 2-bit value of the associated saturating counter is incremented by one; otherwise, the value is decremented by one. By keeping more history information, a higher level of branch prediction accuracy can be attained <ref> [10, 11] </ref>. Yeh and Patt proposed the Two-Level Branch Predictor which uses two levels of history to make branch predictions.
Reference: [11] <author> T.-Y. Yeh and Y. N. Patt, </author> <title> Alternative implementations of two-level adaptive branch prediction, </title> <booktitle> in Proceedings of the 19th Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 124-134, </pages> <year> 1992. </year>
Reference-contexts: 1. Introduction To build high performance microprocessors, accurate branch prediction is required. The correct prediction of branch outcomes and targets is necessary to avoid pipeline bubbles. Over the years, several branch prediction strategies have been proposed <ref> [8, 11, 2] </ref> to improve prediction accuracy. Several researchers have proposed modifications [2, 3, 7] to these schemes, and there have been studies on which configurations of these work best [6]. However, there has been little work that explains what makes branches predictable. <p> However, there has been little work that explains what makes branches predictable. A better understanding of this would likely lead to insights ultimately resulting in better predictors, or in re ducing the complexity of current predictors. Global two-level branch predictors such as GAs <ref> [11] </ref> and gshare [2] take advantage of the correlation between branches. Pan, So, and Rahmeh [4] identified several cases of such correlated branches in the SPEC89 benchmarks. <p> These counters are updated based on the branch outcomes. When a branch is taken, the 2-bit value of the associated saturating counter is incremented by one; otherwise, the value is decremented by one. By keeping more history information, a higher level of branch prediction accuracy can be attained <ref> [10, 11] </ref>. Yeh and Patt proposed the Two-Level Branch Predictor which uses two levels of history to make branch predictions.
Reference: [12] <author> C. Young, N. Gloy, and M. D. Smith, </author> <title> A comparative analysis of schemes for correlated branch prediction, </title> <booktitle> in Proceedings of the 22nd Annual International Symposium on Computer Architecture, </booktitle> <pages> pp. 276-286, </pages> <year> 1995. </year>
Reference-contexts: Sechrest et al. [5] studied the role of adaptivity in two-level branch predictors and determined that, for per-address predictors with short histories, having statically determined values in the PHT performed on par with the adaptive scheme using 2-bit counters. Talcott et al. [9] and Young et al. <ref> [12] </ref> studied and classified the effects of pattern history table interference, and showed that it negatively affected the performance of 2-level branch predictors. These two papers used interference-free predictors to aid in the understanding of the potential of 2-level predictors. <p> These two papers used interference-free predictors to aid in the understanding of the potential of 2-level predictors. An interference-free predictor has one PHT for each branch and is therefore prohibitively large, but does not suffer from the negative effects of PHT interference. Young et al. <ref> [12] </ref> also showed the advantage of path histories over pattern histories for static branch prediction.
References-found: 12

