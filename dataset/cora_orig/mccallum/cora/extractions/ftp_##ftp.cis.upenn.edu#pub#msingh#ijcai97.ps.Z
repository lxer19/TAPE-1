URL: ftp://ftp.cis.upenn.edu/pub/msingh/ijcai97.ps.Z
Refering-URL: http://www.cis.upenn.edu/~msingh/frames/papers_list.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Expert System Using Nonmonotonic Techniques for Benefits Inquiry in the Insurance Industry  
Author: Leora Morgenstern Moninder Singh 
Address: 30 Saw Mill River Road  NY 10532  200 S 33rd. Street Philadelphia, PA 19104-6389  
Affiliation: IBM T.J. Watson Research Center  Hawthorne,  Department of Computer Information Science University of Pennsylvania  
Pubnum: Mail Stop H1-B54  
Abstract: This paper describes BenInq, an expert system for benefits inquiry in the insurance industry. BenInq is designed to be used by both customer service representatives, who answer customers' questions in real time, and policy modifiers, who update insurance products. The main challenges were the design of the KR structure | in particular, representing a huge knowledge base at varying levels of granularity, and the development of the reasoning methods | in particular, developing a method that determines which insurance regulations apply to an insurance service. This required nonmonotonic reasoning, which we modeled using an extension of inheritance methods. BenInq represents one of the few large scale industrial applications that explicitly uses formal nonmonotonic reasoning techniques.
Abstract-found: 1
Intro-found: 1
Reference: [ Horty et al., 1990 ] <author> J. Horty, R. Thomason, and D. Touret-zky. </author> <title> A Skeptical Theory of Inheritance in Nonmonotonic Semantic Networks. </title> <journal> Artif. Intell. </journal> <volume> 42, </volume> <pages> 311-349. </pages>
Reference-contexts: It is obvious that there is a close connection between this structure and a standard inheritance network with exceptions <ref> [Horty et al., 1990] </ref>, and in fact we can make this connection (an example of a direct mapping) precise in the following way: Replace each benefit node by a service node which represents all services covered by that particular benefit (so that, e.g., the Diagnostic Benefit node would be replaced by <p> Replace each covers link by a subtype (isa) link, and each excludes link by a cancels link. One then uses a standard traversal algorithm for inheritance networks with exceptions <ref> [Horty et al., 1990; Stein, 1992] </ref> to determine whether or not services are covered. Both representations are useful: the standard inheritance network with exceptions representation allows us to use well-documented algorithms without modification, while the explicit use of covers and excludes links is more accessible to CSRs and PMs.
Reference: [ Morgenstern, 1996 ] <author> L. Morgenstern. </author> <title> Inheriting Well-formed Formulae in a Formula-Augmented Semantic Network. </title> <booktitle> Proc. KR-96, </booktitle> <pages> 268-279. </pages>
Reference-contexts: The reasoning engine consists of two components: one for performing standard attribute inheritance and one for performing wff inheritance. The attribute-inheritance component uses the algorithm described in [Stein, 1992]. The wff inheritance component uses the algorithm described in <ref> [Morgenstern, 1996] </ref> and summarized in section 3.4. The authoring tool uses both components of the reasoning engine as well as the graphical interface. The graphical interface is used to search for the node or portion of the network to be modified.
Reference: [ Morgenstern, 1997 ] <author> L. Morgenstern. </author> <title> Inheritance Comes of Age. </title> <type> Invited Talk, IJCAI-97. </type>
Reference: [ Reiter, 1980 ] <author> R. Reiter. </author> <title> A Logic for Default Reasoning. </title> <journal> Ar-tif. Intell. </journal> <volume> 13, </volume> <pages> 81-132. </pages>
Reference-contexts: It is rarely the case that a class of services is covered or excluded by some benefit; there are almost always exceptions. This nonmonotonicity is hardly surprising; proponents of nonmonotonic logic <ref> [Reiter, 1980] </ref> have argued since its inception that nonmonotonic reasoning is common in everyday reasoning (including the business world). What is surprising is how rarely nonmonotonic-ity has entered commercial applications, even in well understood forms such as inheritance with exceptions.
Reference: [ Selman and Kautz, 1993 ] <author> B. Selman and H. Kautz. </author> <title> Domain-Independent Extensions to GSAT. </title> <booktitle> Proc IJCAI. </booktitle>
Reference: [ Stein, 1992 ] <author> L. Stein. </author> <title> Resolving Ambiguity in Nonmono-tonic Inheritance Hierarchies, </title> <booktitle> Artif. Intell., </booktitle> <pages> 259-310. </pages>
Reference-contexts: Replace each covers link by a subtype (isa) link, and each excludes link by a cancels link. One then uses a standard traversal algorithm for inheritance networks with exceptions <ref> [Horty et al., 1990; Stein, 1992] </ref> to determine whether or not services are covered. Both representations are useful: the standard inheritance network with exceptions representation allows us to use well-documented algorithms without modification, while the explicit use of covers and excludes links is more accessible to CSRs and PMs. <p> The reasoning engine consists of two components: one for performing standard attribute inheritance and one for performing wff inheritance. The attribute-inheritance component uses the algorithm described in <ref> [Stein, 1992] </ref>. The wff inheritance component uses the algorithm described in [Morgenstern, 1996] and summarized in section 3.4. The authoring tool uses both components of the reasoning engine as well as the graphical interface.
References-found: 6

