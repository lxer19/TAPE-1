URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c44.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Quantified Suboptimality of VLSI Layout Heuristics  
Author: Lars W. Hagen Dennis J.-H. Huang and Andrew B. Kahng 
Address: Los Angeles, CA 90024-1596  San Jose, CA 95134  
Affiliation: UCLA Department of Computer Science,  Cadence Design Systems, Inc.,  
Abstract: We show how to quantify the suboptimality of heuristic algorithms for NP-hard problems arising in VLSI layout. Our approach is based on the notion of constructing new scaled instances from an initial problem instance. From the given problem instance, we essentially construct doubled, tripled, etc. instances which have optimum solution costs at most twice, three times, etc. that of the original instance. By executing the heuristic on these scaled instances, and then comparing the growth of solution cost with the growth of instance size, we can measure the scaling suboptimality of the heuristic. We give experimentally determined scaling behavior of several placement and partitioning heuristics; these results suggest that sig-inificant improvement remains possible over current state-of-the-art methods. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Ackley, </author> <title> A Connectionist Machine for Genetic Hill-climbing, </title> <publisher> Kluwer, </publisher> <year> 1987. </year>
Reference-contexts: For example, mesh- or chain-like topologies for placement, and the instances of Bui et al. [6], Garbers et al. [8] and Ackley <ref> [1] </ref> for partitioning, may be helpful in measuring algorithmic suboptimality but do not always give meaningful performance estimates for "real" examples. In this paper, we propose a general measure of heuristic performance, based on the notion of the scaling suboptimality of a given heuristic. <p> Previous estimates of heuristic suboptimality have centered on the construction of instances for which the optimal solution cost is known. As noted above, such methods have included the use of mesh and chain topologies for placement, and "difficult" (highly clustered or even disconnected) classes of partitioning instances <ref> [6, 8, 1] </ref>. Historically, the major objection to the constructive approach has been that the instances are artifactual and "not realistic".
Reference: [2] <author> C. J. Alpert and A. B. Kahng, </author> <title> "A General Framework for Vertex Orderings, With Applications to Netlist Clustering", </title> <booktitle> Proc. IEEE Intl. Conf. Computer-Aided Design, </booktitle> <year> 1994, </year> <note> to appear. </note>
Reference-contexts: The first assumption may be reasonable in light of the local hierarchy and regularity that is typical in most VLSI designs. The second assumption may also be reasonable in light of vertex-ordering or graph-search techniques (e.g., <ref> [2] </ref>) which can be used to extract a closely-connected subgraph from the netlist. Such techniques can be applied from various locations in the netlist in order to obtain a sampling of subgraphs which can together serve as the original instance I in the scaling calculation.
Reference: [3] <author> C. J. Alpert and A. B. Kahng, </author> <title> "Recent Directions in Netlist Partitioning: A Survey," to appear in Integration: </title> <journal> the VLSI Journal, </journal> <year> 1995. </year>
Reference-contexts: However, accurate estimates of suboptimality are difficult to obtain, for two reasons: * First, determining the optimum solution is usually intractable, and theoretical bounds on the optimum solution cost may be quite loose. For example, spectral lower bounds for partitioning can be far from the optimum solution cost <ref> [3] </ref>. fl This research was supported in part by NSF grant MIP-9257982.
Reference: [4] <author> E. B. Baum, </author> <title> "Iterated Descent: A Better Algorithm for Local Search in Combinatorial Optimization Problems", </title> <booktitle> Proc. Neural Information Processing Systems, </booktitle> <editor> D. Touret-zky, ed., </editor> <year> 1987. </year>
Reference: [5] <author> K. D. </author> <title> Boese, </title> <type> personal communication, </type> <month> January </month> <year> 1994. </year>
Reference-contexts: Then, [11] derives a parameter of the heuris tic, analogous to the parameter we develop below, which measures the growth rate of the maximum channel density. * A construction of Boese <ref> [5] </ref> can be used to estimate the suboptimality of cell-based placement algorithms.
Reference: [6] <author> T. Bui, S. Chaudhuri, T. Leighton, and M. Sipser, </author> <title> "Graph Bisection Algorithms with Good Average Case Behavior", </title> <booktitle> Combinatorica 7(2) (1987), </booktitle> <pages> pp. 171-191. </pages>
Reference-contexts: For example, mesh- or chain-like topologies for placement, and the instances of Bui et al. <ref> [6] </ref>, Garbers et al. [8] and Ackley [1] for partitioning, may be helpful in measuring algorithmic suboptimality but do not always give meaningful performance estimates for "real" examples. <p> Previous estimates of heuristic suboptimality have centered on the construction of instances for which the optimal solution cost is known. As noted above, such methods have included the use of mesh and chain topologies for placement, and "difficult" (highly clustered or even disconnected) classes of partitioning instances <ref> [6, 8, 1] </ref>. Historically, the major objection to the constructive approach has been that the instances are artifactual and "not realistic". <p> In the context of cell placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package [13] and the GORDIAN-L package [14]), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) [7], two-phase matching-based clustering FM <ref> [6] </ref>, the EIG1 spectral method [9], and the RCut1.0 ratio cut partitioner [17]. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling behavior of heuristics for cell placement. <p> Experimental Results We have run experiments to test the scaling sub-optimality of four partitioning heuristics: (1) the FM algorithm [7] for bisection, (2) a two-phase Matching-Based Compaction and FM (MBC+FM) algorithm due to Bui et al. <ref> [6] </ref> that is also for bisection, (3) the EIG1 spectral method from [9] for ratio cut biparti-tioning, and (4) the RCut1.0 [17] ratio cut partitioner.
Reference: [7] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> "A Linear Time Heuristic for Improving Network Partitions", </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference-contexts: In the context of cell placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package [13] and the GORDIAN-L package [14]), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) <ref> [7] </ref>, two-phase matching-based clustering FM [6], the EIG1 spectral method [9], and the RCut1.0 ratio cut partitioner [17]. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling behavior of heuristics for cell placement. <p> Experimental Results We have run experiments to test the scaling sub-optimality of four partitioning heuristics: (1) the FM algorithm <ref> [7] </ref> for bisection, (2) a two-phase Matching-Based Compaction and FM (MBC+FM) algorithm due to Bui et al. [6] that is also for bisection, (3) the EIG1 spectral method from [9] for ratio cut biparti-tioning, and (4) the RCut1.0 [17] ratio cut partitioner.
Reference: [8] <author> J. Garbers, H. J. Promel, and A. Steger, </author> <title> "Finding Clusters in VLSI Circuits", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 520-523. </pages> <note> Extended version. </note>
Reference-contexts: For example, mesh- or chain-like topologies for placement, and the instances of Bui et al. [6], Garbers et al. <ref> [8] </ref> and Ackley [1] for partitioning, may be helpful in measuring algorithmic suboptimality but do not always give meaningful performance estimates for "real" examples. In this paper, we propose a general measure of heuristic performance, based on the notion of the scaling suboptimality of a given heuristic. <p> Previous estimates of heuristic suboptimality have centered on the construction of instances for which the optimal solution cost is known. As noted above, such methods have included the use of mesh and chain topologies for placement, and "difficult" (highly clustered or even disconnected) classes of partitioning instances <ref> [6, 8, 1] </ref>. Historically, the major objection to the constructive approach has been that the instances are artifactual and "not realistic".
Reference: [9] <author> L. Hagen and A. B. Kahng, </author> <title> "New Spectral Methods for Ratio Cut Partitioning and Clustering", </title> <journal> IEEE Trans. on CAD 11(9), </journal> <month> Sept. </month> <year> 1992, </year> <pages> pp. 1074-1085. </pages>
Reference-contexts: In the context of cell placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package [13] and the GORDIAN-L package [14]), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) [7], two-phase matching-based clustering FM [6], the EIG1 spectral method <ref> [9] </ref>, and the RCut1.0 ratio cut partitioner [17]. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling behavior of heuristics for cell placement. <p> Experimental Results We have run experiments to test the scaling sub-optimality of four partitioning heuristics: (1) the FM algorithm [7] for bisection, (2) a two-phase Matching-Based Compaction and FM (MBC+FM) algorithm due to Bui et al. [6] that is also for bisection, (3) the EIG1 spectral method from <ref> [9] </ref> for ratio cut biparti-tioning, and (4) the RCut1.0 [17] ratio cut partitioner. FM, MBC+FM, and RCut1.0 perform greedy local search from a given (random or constructed) starting solution, while EIG1 is a deterministic algorithm that relies on a "global" eigenvector computation.
Reference: [10] <author> L. Hagen, A. B. Kahng, F. J. Kurdahi, and C. Ramachan-dran. </author> <title> "On the Intrinsic Rent Parameter and Spectra-Based Partitioning Methodologies." </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 13(1) </volume> <pages> 27-37, </pages> <year> 1994. </year>
Reference-contexts: A second observation is that the ff parameter can lead to new layout area estimation methodologies. By quantifying the performance degradation of a given heuristic, it becomes possible to achieve an area estimate that is not only design-dependent, but also algorithm-dependent. Many existing estimation tools, such as Rent-based methods <ref> [10] </ref>, give estimates that are "intrinsic" to the netlist topology (e.g., estimates of the minimum area needed to embed the design). On the other hand, for many applications the designer must know the area requirements of the placement that will result after particular design tools are applied.
Reference: [11] <author> S. Nakatake and Y. Kajitani, </author> <title> "Channel-Driven Global Routing with Consistent Placement", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 350-355. </pages>
Reference-contexts: Historically, the major objection to the constructive approach has been that the instances are artifactual and "not realistic". Two recent methods which start with "real" instances are thus of interest: * Nakatake and Kajitani <ref> [11] </ref> generate a sequence of global routing instances, each of which has known minimum-possible maximum channel density. Then, [11] derives a parameter of the heuris tic, analogous to the parameter we develop below, which measures the growth rate of the maximum channel density. * A construction of Boese [5] can be <p> Two recent methods which start with "real" instances are thus of interest: * Nakatake and Kajitani <ref> [11] </ref> generate a sequence of global routing instances, each of which has known minimum-possible maximum channel density. Then, [11] derives a parameter of the heuris tic, analogous to the parameter we develop below, which measures the growth rate of the maximum channel density. * A construction of Boese [5] can be used to estimate the suboptimality of cell-based placement algorithms.
Reference: [12] <author> B. M. </author> <title> Riess, </title> <type> personal communication, </type> <month> January </month> <year> 1995. </year>
Reference-contexts: Very recent work <ref> [12] </ref> has shown that GORDIAN-L shows almost "perfect" scaling on a set of scaled instances constructed using a slightly dif ferent but similar methodology to the one we used. 4 4 The methodology of Riess [12] preserved nearly all of the original pads, thereby resulting in instances with greater pull Although <p> Very recent work <ref> [12] </ref> has shown that GORDIAN-L shows almost "perfect" scaling on a set of scaled instances constructed using a slightly dif ferent but similar methodology to the one we used. 4 4 The methodology of Riess [12] preserved nearly all of the original pads, thereby resulting in instances with greater pull Although this result does not explain the poor scal-ing of GORDIAN-L shown in our experiments, it does raise the question of whether the construction we use is somehow biased against GORDIAN-L.
Reference: [13] <author> C. Sechen, </author> <title> Placement and Global Routing of Integrated Circuits Using Simulated Annealing, </title> <type> PhD thesis, </type> <institution> Univ. of California, Berkeley, </institution> <year> 1986. </year>
Reference-contexts: However, for several basic VLSI layout optimizations, we have devised very straightforward scaling constructions, as described in Sections 3 and 4 below. In the context of cell placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package <ref> [13] </ref> and the GORDIAN-L package [14]), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) [7], two-phase matching-based clustering FM [6], the EIG1 spectral method [9], and the RCut1.0 ratio cut partitioner [17]. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling <p> The four pads of the "multiplied" benchmark are the pads belonging to the copies of benchmark X at the center of each side; remaining unconnected pads are eliminated. Experimental Results We have run experiments to test the scaling subop-timality of two "industrial-strength" placement and routing tools: the TimberWolf7.0 package <ref> [13, 15] </ref> and the GORDIAN-L package [14].
Reference: [14] <author> G. Sigl, K. Doll, and F. M. Johannes, </author> <title> "Analytical Placement: A Linear or a Quadratic Objective Function?", </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1991, </year> <pages> pp. 427-432. </pages>
Reference-contexts: However, for several basic VLSI layout optimizations, we have devised very straightforward scaling constructions, as described in Sections 3 and 4 below. In the context of cell placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package [13] and the GORDIAN-L package <ref> [14] </ref>), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) [7], two-phase matching-based clustering FM [6], the EIG1 spectral method [9], and the RCut1.0 ratio cut partitioner [17]. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling behavior of heuristics for cell <p> Experimental Results We have run experiments to test the scaling subop-timality of two "industrial-strength" placement and routing tools: the TimberWolf7.0 package [13, 15] and the GORDIAN-L package <ref> [14] </ref>.
Reference: [15] <author> W. J. Sun, K. Roy and C. Sechen, </author> <title> "Fast, High-Quality Placement for Large Circuits", </title> <booktitle> Proc. 4th ACM/SIGDA Physical Design Workshop, </booktitle> <address> Lake Arrowhead, </address> <month> April </month> <year> 1993, </year> <pages> pp. 11-12. </pages>
Reference-contexts: The four pads of the "multiplied" benchmark are the pads belonging to the copies of benchmark X at the center of each side; remaining unconnected pads are eliminated. Experimental Results We have run experiments to test the scaling subop-timality of two "industrial-strength" placement and routing tools: the TimberWolf7.0 package <ref> [13, 15] </ref> and the GORDIAN-L package [14].
Reference: [16] <author> R.-T. Tsay, E. S. Kuh. and C.-P. Hsu, "PROUD: </author> <title> A Fast Sea-of-Gates Placement Algorithm", </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1988, </year> <pages> pp. 318-323. </pages>
Reference-contexts: is somewhat surprising in light of : (i) GORDIAN-L is a deterministic, "global" method, and one might expect the solution quality to scale better than that of an inherently "local" move-based algorithm such as TimberWolf7.0; and (ii) recent trends in CAD vendor tools show a migration to GORDIAN- or PROUD-style <ref> [16] </ref> approaches.
Reference: [17] <author> Y. C. Wei and C. K. Cheng, </author> <title> "Towards Efficient Hierarchical Designs by Ratio Cut Partitioning", </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1989, </year> <pages> pp. 298-301. </pages>
Reference-contexts: placement we demonstrate our methodology using two leading standard-cell layout tools (the TimberWolf7.0 place-and-route package [13] and the GORDIAN-L package [14]), and in the context of netlist bipartition ing we use Fiduccia-Mattheyses (FM) [7], two-phase matching-based clustering FM [6], the EIG1 spectral method [9], and the RCut1.0 ratio cut partitioner <ref> [17] </ref>. 3 Scaling Suboptimality in Cell Place ment Our first set of experiments examines the scaling behavior of heuristics for cell placement. <p> We also test the scaling suboptimality of two algorithms which address the ratio cut bipartitioning objective of Wei and Cheng <ref> [17] </ref>. The ratio cut objective minimizes C (U;W) jUjjW j where C (U; W ) is the number of signal nets crossing between the two partitions U and W . <p> test the scaling sub-optimality of four partitioning heuristics: (1) the FM algorithm [7] for bisection, (2) a two-phase Matching-Based Compaction and FM (MBC+FM) algorithm due to Bui et al. [6] that is also for bisection, (3) the EIG1 spectral method from [9] for ratio cut biparti-tioning, and (4) the RCut1.0 <ref> [17] </ref> ratio cut partitioner. FM, MBC+FM, and RCut1.0 perform greedy local search from a given (random or constructed) starting solution, while EIG1 is a deterministic algorithm that relies on a "global" eigenvector computation.
References-found: 17

