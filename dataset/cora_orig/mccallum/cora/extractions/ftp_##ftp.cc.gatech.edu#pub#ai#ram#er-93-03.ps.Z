URL: ftp://ftp.cc.gatech.edu/pub/ai/ram/er-93-03.ps.Z
Refering-URL: http://www.cs.gatech.edu/aimosaic/robot-lab/mrl-online-publications.html
Root-URL: 
Title: A Multistrategy Case-Based and Reinforcement Learning Approach to Self-Improving Reactive Control Systems for Autonomous Robotic Navigation  
Author: Ashwin Ram and Juan Carlos Santamar a 
Keyword: Robot navigation, reactive control, case-based reasoning, reinforcement learning, adaptive control.  
Affiliation: College of Computing Georgia Institute of Technology  
Address: Harpers Ferry, WV,  Atlanta, Georgia 30332-0280  
Note: Proceedings of the Second International Workshop on Multistrategy Learning,  
Email: fashwin,carlosg@cc.gatech.edu  
Date: May 1993.  
Abstract: This paper presents a self-improving reactive control system for autonomous robotic navigation. The navigation module uses a schema-based reactive control system to perform the navigation task. The learning module combines case-based reasoning and reinforcement learning to continuously tune the navigation system through experience. The case-based reasoning component perceives and characterizes the system's environment, retrieves an appropriate case, and uses the recommendations of the case to tune the parameters of the reactive control system. The reinforcement learning component refines the content of the cases based on the current experience. Together, the learning components perform on-line adaptation, resulting in improved performance as the reactive control system tunes itself to the environment, as well as on-line learning, resulting in an improved library of cases that capture environmental regularities necessary to perform on-line adaptation. The system is extensively evaluated through simulation studies using several performance metrics and system configurations. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Arkin, </author> <title> R.C., Motor Schema-Based Mobile Robot Navigation, </title> <journal> The International Journal of Robotics Research, </journal> <volume> 8(4) </volume> <pages> 92-112, </pages> <year> 1989. </year>
Reference-contexts: We now present the reactive module, the representations used by the system, and the methods used by the learning module in more detail. 2.2 The Schema-Based Reactive Control Module The reactive control module is based on the AuRA architecture <ref> (Arkin, 1989) </ref>, and consists of a set of motor schemas that represent the individual motor behaviors available to the system. Each schema reacts to sensory information from the environment, and produces a velocity vector representing the direction and speed at which the robot is to move given current environmental conditions.
Reference: <author> Brooks, R., </author> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2(1):14-23, </volume> <year> 1986. </year>
Reference: <author> Chien, S.A., Gervasio, </author> <title> M.T., & DeJong, G.F., On Becoming Decreasingly Reactive: Learning to Deliberate Minimally, </title> <editor> in Birnbaum, L. & Collins, G. (editors), </editor> <booktitle> Proceedings of the Eighth International Workshop on Machine Learning, </booktitle> <pages> 288-292, </pages> <address> Chicago, IL, </address> <year> 1991. </year>
Reference-contexts: However, in traditional case-based planning systems (e.g., Ham-mond, 1989a) learning and adaptation requires a detailed model of the domain. This is exactly what reactive planning systems are trying to avoid. Earlier attempts to combine reactive control with classical planning systems <ref> (e.g., Chien, Gervasio, & DeJong, 1991) </ref> or explanation-based learning systems (e.g., Mitchell, 1990) also relied on deep reasoning and were typically too slow for the fast, reflexive behavior required in reactive control systems. Unlike these approaches, our method does not fall back on slow non-reactive techniques for improving reactive control.
Reference: <author> Clark, R.J., Arkin, R.C., & Ram, A., </author> <title> Learning Momentum: On-Line Performance Enhancement for Reactive Systems, </title> <booktitle> in Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> 111-116, </pages> <address> Nice, France, </address> <year> 1992. </year>
Reference-contexts: Simple behaviors, such as wandering, obstacle avoidance, and goal following, can combine to produce complex emergent behaviors in a particular environment. Different emergent behaviors can be obtained by modifying the simple behaviors. This allows the system to interact successfully in different environmental configurations requiring different navigational strategies <ref> (Clark, Arkin, & Ram, 1992) </ref>. A detailed description of schema-based reactive control methods can be found in Arkin (1989). In this research, we used three motor schemas: AVOID-STATIC-OBSTACLE, MOVE-TO-GOAL, and NOISE. AVOID-STATIC-OBSTACLE directs the system to move itself away from detected obstacles.
Reference: <author> Fikes, R.E., Hart, P.E., & Nilsson, N.J., </author> <title> Learning and Executing Generalized Robot Plans. </title> <journal> Artificial Intelligence, </journal> <volume> 3 </volume> <pages> 251-288, </pages> <year> 1972. </year>
Reference: <author> Grefenstette, J.J. & Ramsey, C.L. </author> <title> An Approach to Anytime Learning, </title> <editor> in Sleeman, D. & Ed-wards, P. (editors), </editor> <booktitle> Machine Learning: Proceedings of the Ninth International Conference, </booktitle> <pages> 189-195, </pages> <address> Aberdeen, Scotland, </address> <year> 1992. </year>
Reference: <author> Hammond, K.J. </author> <title> Case-Based Planning: Viewing Planning as a Memory Task, </title> <publisher> Academic Press, </publisher> <address> Boston, MA, </address> <year> 1989a. </year>
Reference: <editor> Hammond, K.J. (editor), </editor> <booktitle> Proceedings of the Second Case-Based Reasoning Workshop, </booktitle> <address> Pen-sacola Beach, FL, </address> <publisher> Morgan Kaufman, </publisher> <year> 1989b. </year>
Reference: <author> Kaelbling, L., </author> <title> An Architecture for Intelligent Reactive Systems, </title> <type> Technical Note 400, </type> <institution> SRI International, </institution> <year> 1986. </year>
Reference: <editor> Kolodner, J.L. (editor), </editor> <booktitle> Proceedings of a Workshop on Case-Based Reasoning, </booktitle> <address> Clearwater Beach, FL, </address> <publisher> Morgan Kaufman, </publisher> <year> 1988. </year>
Reference: <author> Kolodner, J.L., </author> <title> Case-Based Reasoning, </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <note> 1992 (in press). </note>
Reference-contexts: Our current solution to this problem is to place an upper bound on the number of cases allowed in the system. A better solution would be to develop a method for organization of cases in memory; however, conventional memory organization schemes used in case-based reasoning systems <ref> (see Kolodner, 1992) </ref> assume structured, nominal information rather than continuous, time-varying, analog information of the kind used in our cases. Another open issue is that of the nature of the regularities captured in the system's cases. While SINS' cases do enhance its performance, they are not easy to interpret.
Reference: <author> Minton, S., </author> <title> Learning Effective Search Control Knowledge: An Explanation-Based Approach, </title> <type> PhD thesis, Technical Report CMU-CS-88-133, </type> <institution> Carnegie-Mellon University, Computer Science Department, </institution> <address> Pittsburgh, PA, </address> <year> 1988. </year>
Reference-contexts: There are still several unresolved issues in this research. The case retrieval process is very expensive and limits the number of cases that the system can handle without deteriorating the overall navigational performance, leading to a kind of utility problem <ref> (Minton, 1988) </ref>. Our current solution to this problem is to place an upper bound on the number of cases allowed in the system.
Reference: <author> Mitchell, </author> <title> T.M., Becoming Increasingly Reactive, </title> <booktitle> in Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> 1051-1058, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: This is exactly what reactive planning systems are trying to avoid. Earlier attempts to combine reactive control with classical planning systems (e.g., Chien, Gervasio, & DeJong, 1991) or explanation-based learning systems <ref> (e.g., Mitchell, 1990) </ref> also relied on deep reasoning and were typically too slow for the fast, reflexive behavior required in reactive control systems. Unlike these approaches, our method does not fall back on slow non-reactive techniques for improving reactive control.
Reference: <author> Moorman, K. & Ram, A., </author> <title> A Case-Based Approach to Reactive Control for Autonomous Robots, </title> <booktitle> in Proceedings of the AAAI Fall Symposium on AI for Real-World Autonomous Mobile Robots, </booktitle> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference: <author> Mostow, J. & Bhatnagar, N., </author> <title> FAILSAFE </title>
References-found: 15

