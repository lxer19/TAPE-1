URL: ftp://coast.cs.purdue.edu/pub/doc/cryptography/faq_cryptography_Paul_Fahn.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ12.html
Root-URL: http://www.cs.purdue.edu
Title: Answers To Frequently Asked Questions About Today's Cryptography  
Author: Paul Fahn 
Date: September 14, 1992.  
Note: Version 1.0, draft 1e. Last update:  Copyright c 1992 RSA Laboratories, a division of RSA Data Security Inc. All rights reserved. Part #999-100002-100-000-000  
Address: Redwood City, CA 94065  
Affiliation: RSA Laboratories 100 Marine Parkway  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> J. Bamford. </author> <title> The Puzzle Palace. </title> <publisher> Houghton Mi*in, </publisher> <address> Boston, </address> <year> 1982. </year>
Reference-contexts: For a history of the NSA, see Bamford <ref> [1] </ref>. The NSA has a mandate to listen to and decode all foreign communications of interest to the security of the United States.
Reference: [2] <author> J.P. Barlow. </author> <title> Decrypting the puzzle palace. </title> <journal> Communications of the ACM, </journal> <volume> 35(7) </volume> <pages> 25-31, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: It also has no objection to cryptographic tools used for authentication, as opposed to privacy. However, the NSA is widely viewed as following policies that have the practical effect of limiting and/or weakening the cryptographic tools used by law-abiding U.S. citizens and corporations; see Barlow <ref> [2] </ref> for a discussion of NSA's effect on commercial cryptography. The NSA exerts influence over commercial cryptography in several ways. It controls the export of cryptography from the U.S.; see Question 1.6.
Reference: [3] <author> P. Beauchemin, G. Brassard, C. Crepeau, C. Goutier, and C. Pomerance. </author> <title> The generation of random numbers that are probably prime. </title> <journal> J. of Cryptology, </journal> <volume> 1 </volume> <pages> 53-64, </pages> <year> 1988. </year>
Reference: [4] <author> T.A. Berson. </author> <title> Differential cryptanalysis mod 2 32 with applications to MD5. </title> <booktitle> In Advances in Cryptology | Eurocrypt '92, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year> <note> To appear. </note>
Reference-contexts: There is also an extension of MD4 which produces a 256-bit hash value [63]. No serious weaknesses have been discovered in any of the three MD algorithms. An attempt by Berson to apply differential cryptanalysis to MD5 <ref> [4] </ref> failed to reveal any feasible attack, despite some interesting theoretical analysis. Differential cryptanalysis has in fact found weaknesses in two other proposed hash functions, N-hash and Snefru.
Reference: [5] <author> E. Biham and A. Shamir. </author> <title> Differential cryptanalysis of Feal and N-hash. </title> <booktitle> In Advances in Cryptology | Eurocrypt '91, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: One is FEAL (Fast Encryption ALgorithm), a cipher for which attacks have been discovered <ref> [5] </ref>, although new versions have been proposed. Another recently proposed cipher [39] seems promising, although it has not yet received sufficient scrutiny to instill full confidence in its security.
Reference: [6] <author> E. Biham and A. Shamir. </author> <title> Differential cryptanalysis of the full 16-round DES. </title> <booktitle> In Advances in Cryptology | Crypto '92, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: There were also accusations that the NSA intentionally weakened DES. Despite these suspicions, no feasible way to break DES was discovered. 34 Just recently, however, the first attack on DES that is better than exhaustive search was announced by Eli Biham and Adi Shamir <ref> [6] </ref>, using a new technique known as differential cryptanalysis. This attack requires encryption of 2 47 chosen plaintexts, i.e., plaintexts chosen by the attacker.
Reference: [7] <author> M. Bishop. </author> <title> Privacy-enhanced electronic mail. Internetworking: </title> <journal> Research and Experience, </journal> <volume> 2 </volume> <pages> 199-233, </pages> <year> 1991. </year>
Reference-contexts: Later versions of PEM will include other encryption algorithms. The use of certificates and the other key management structures is optional. 40 The details of PEM can be found in an article by Bishop <ref> [7] </ref> and in RFCs (Requests for Comment) 1113 through 1115; some details have been changed since those publications, but so far the changes exist only in unpublished draft form.
Reference: [8] <author> M. Blum and S. Goldwasser. </author> <title> An efficient probabilistic public-key encryption scheme which hides all partial information. </title> <booktitle> In Advances in Cryptology | Crypto '84, </booktitle> <pages> pages 289-299, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference: [9] <author> J. Brandt and I. Damgard. </author> <title> On generation of probable primes by incremental search. </title> <booktitle> In Advances in Cryptology | Crypto '92, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year> <note> To appear. </note>
Reference: [10] <editor> G. Brassard. </editor> <booktitle> Modern Cryptology. Volume 325 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference: [11] <author> D.M. Bressoud. </author> <title> Factorization and Primality Testing. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: O notation measures how fast an algorithm is; it gives the number of operations (to order of magnitude) in terms of n, the number to be factored, and p, a prime factor of n. For textbook treatment of factoring algorithms, see [36], [42], [37], and <ref> [11] </ref>. Factoring algorithms come in two flavors, special purpose and general purpose; the efficiency of the former depend both on the number to be factored and on the unknown factors, whereas the efficiency of the latter depend only on the number to be factored.
Reference: [12] <author> E.F. Brickell. </author> <title> A survey of hardware implementations of RSA. </title> <booktitle> In Advances in Cryptology | Crypto '89, </booktitle> <pages> pages 368-370, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference: [13] <editor> E.F. Brickell and A.M. Odlyzko. </editor> <title> Cryptanalysis: A survey of recent results. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76 </volume> <pages> 578-593, </pages> <year> 1988. </year>
Reference-contexts: RSA has received far more attention, study, and actual use than any other public-key cryptosystem, and thus RSA has more empirical evidence of its security than more recent and less scrutinized systems. In fact, a large number of public-key cryptosystems which at first appeared secure were later broken; see <ref> [13] </ref> for some case histories. RSA's resistance to attack during many years of vigorous attempts to break it is unrivaled by any other public-key system. 2.18 Is RSA currently in use today? RSA is used in a wide variety of products, platforms and industries around the world. <p> This may be the most powerful argument against the security of DSS. Any new cryptosystem could have serious flaws that are only discovered after a couple of years of scrutiny by cryptographers. Indeed this has happened many times in the past; see <ref> [13] </ref> for details. RSA has withstood 15 years of vigorous examination for weaknesses. In the absence of mathematical proofs of security, nothing builds confidence in a cryptosystem like sustained attempts to crack it.
Reference: [14] <author> J.P. Buhler, H.W. Lenstra, and C. Pomerance. </author> <title> Factoring integers with the number field sieve. </title> <note> 1992. To appear. 47 </note>
Reference-contexts: The recent number field sieve method [43], also a special-purpose algorithm, is superior to all the other methods, but so far it only works for factoring numbers of a narrow class. It is currently being modified to obtain a general-purpose factoring algorithm <ref> [14] </ref>. The generalized number field sieve may become the top factoring algorithm within a few years, if it proves to be practical.
Reference: [15] <author> M.V.D. Burmester, Y.G. Desmedt, and T. Beth. </author> <title> Efficient zero-knowledge identification schemes for smart cards. </title> <journal> Computer Journal, </journal> <volume> 35 </volume> <pages> 21-29, </pages> <year> 1992. </year>
Reference: [16] <author> K.W. Campbell and M.J. Wiener. </author> <title> Proof that DES is not a group. </title> <booktitle> In Advances in Cryptology | Crypto '92, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: DES is not a group. Although there has been much speculation and discussion of this issue for years, it was settled only recently <ref> [16] </ref>. This follows 36 previously reported experimental evidence to the same effect. For a more com-plete discussion of the significance of the issue, see [34].
Reference: [17] <author> CCITT (Consultative Committee in International Telegraphy and Telephony). </author> <title> Recommendation X.509: The Directory|Authentication Framework. </title> <year> 1988. </year>
Reference-contexts: The ISO (International Standards Organization) 9796 standard [32] lists RSA as an acceptable cryptographic algorithm, as does the Consultative Committee in International Telegraphy and Telephony (CCITT) X.509 security standard <ref> [17] </ref>. RSA is part of both the Society for Worldwide Interbank Financial Telecommunication (SWIFT) standard and the French financial industry's ETEBAC 5 standard [18]. The Australian digital signature standard, AS2805.6.5.3 [71], also specifies RSA.
Reference: [18] <editor> Comite Fran~cais d'Organisation et de Normalisation Bancaire. Echanges Telematiques entre les Banques et leurs Clients, </editor> <address> Standard ETEBAC 5, v1.1. Paris, </address> <year> 1989. </year>
Reference-contexts: RSA is part of both the Society for Worldwide Interbank Financial Telecommunication (SWIFT) standard and the French financial industry's ETEBAC 5 standard <ref> [18] </ref>. The Australian digital signature standard, AS2805.6.5.3 [71], also specifies RSA. RSA is found in Internet's proposed PEM (Privacy Enhanced Mail) standard (see Question 6.6) and the PKCS standard for the software industry (see Question 6.7).
Reference: [19] <institution> Comptroller General of the United States. Matter of National Institute of Standards and Technology | Use of Electronic Data Interchange Technology to Create Valid Obligations. </institution> <month> December 13, </month> <year> 1991. </year> <note> File B-245714. </note>
Reference-contexts: A GAO (Government Accounting Office) decision request by NIST also opines that digital signatures will meet the legal standards of handwritten signatures <ref> [19] </ref>. However, since the validity of documents with digital signatures has never been challenged in court, their legal status is not yet well-defined.
Reference: [20] <author> D. Coppersmith, A.M. Odlyzko, and R. Schroeppel. </author> <title> Discrete logarithms in GF(p). </title> <journal> Algorithmica, </journal> <volume> 1 </volume> <pages> 1-15, </pages> <year> 1986. </year>
Reference-contexts: The discrete log problem has received much attention in recent years from researchers looking for efficient algorithms. For descriptions of today's most efficient algorithms see [42] and <ref> [20] </ref>. The best discrete log problems have an expected running time of approximately O (exp ( p ln p ln ln p)), which is similar to the expected running time of the best general-purpose factoring algorithm.
Reference: [21] <author> G. Davida. </author> <title> Chosen signature cryptanalysis of the RSA public key cryptosys-tem. </title> <type> Technical Report TR-CS-82-2, </type> <institution> Dept of EECS, University of Wiscon-sin, Milwaukee, </institution> <year> 1982. </year>
Reference: [22] <author> W. Diffie. </author> <title> The first ten years of public-key cryptography. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76 </volume> <pages> 560-577, </pages> <year> 1988. </year>
Reference: [23] <author> W. Diffie and M.E. Hellman. </author> <title> Exhaustive cryptanalysis of the NBS Data Encryption Standard. </title> <journal> Computer, </journal> <volume> 10 </volume> <pages> 74-84, </pages> <year> 1977. </year>
Reference-contexts: The obvious method of attack is brute-force exhaustive search of the key space; this takes 2 54 steps on average. Early on it was suggested <ref> [23] </ref> that a rich and powerful enemy could build a special-purpose computer capable of breaking DES by exhaustive search in a reasonable amount of time. Later, Hellman [31] showed a time-memory trade-off that allows improvement over exhaustive search if memory space is plentiful, after an exhaustive precomputation.
Reference: [24] <author> W. Diffie and M.E. Hellman. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22:644-654, </volume> <year> 1976. </year>
Reference-contexts: the inverse direction is easy if you know a certain piece of information (the trap door), but difficult otherwise. 4.2 What is the significance of one-way functions for cryptogra phy? Every public-key cryptosystem is based on a (presumed) trap-door one-way function; this was realized by the inventors of public-key cryptography <ref> [24] </ref>. The public key gives information about the particular instance of the function; 29 the secret key is information about the trap door.
Reference: [25] <author> T. ElGamal. </author> <title> A public-key cryptosystem and a signature scheme based on discrete logarithms. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31:469-472, </volume> <year> 1985. </year>
Reference-contexts: Private industry was not involved in the selection of DSS; since the selection, however, industry has been able to make public comments to NIST and Congress regarding DSS. DSS is based on the discrete log problem (see Question 4.9) and derives from cryptosystems proposed by Schnorr [67] and ElGamal <ref> [25] </ref>. It is for authentication only and cannot be used for key exchange or encryption. For a detailed description of DSS, see [54] or [53].
Reference: [26] <author> A. Fiat and A. Shamir. </author> <title> How to prove yourself: Practical solutions to identification and signature problems. </title> <booktitle> In Advances in Cryptology | Crypto '86, </booktitle> <pages> pages 186-194, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year>
Reference: [27] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic encryption. </title> <journal> J. of Computer and System Sciences, </journal> <volume> 28 </volume> <pages> 270-299, </pages> <year> 1984. </year>
Reference: [28] <author> D.M. Gordon and K.S. McCurley. </author> <title> Massively parallel computation of discrete logarithms. </title> <booktitle> In Advances in Cryptology | Crypto '92, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year> <note> To appear. 48 </note>
Reference: [29] <author> S. Haber and W.S. Stornetta. </author> <title> How to time-stamp a digital document. </title> <booktitle> In Advances in Cryptology | Crypto '90, </booktitle> <pages> pages 437-455, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Fourth, the timestamps must only be able to be created by using the tamperproof box with the date, time, and private key supplied from inside the box. A cryptographically strong DTS using only software has been suggested <ref> [29] </ref>, but it requires other clients of the DTS to save their timestamps and to cooperate in the timestamp verification process. Modified versions may avoid such requirements.
Reference: [30] <author> J. Hastad. </author> <title> Solving simultaneous modular equations of low degree. </title> <journal> SIAM J. Computing, </journal> <volume> 17 </volume> <pages> 336-241, </pages> <year> 1988. </year>
Reference: [31] <author> M.E. Hellman. </author> <title> A cryptanalytic time-memory trade off. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-26:401-406, </volume> <year> 1980. </year>
Reference-contexts: Early on it was suggested [23] that a rich and powerful enemy could build a special-purpose computer capable of breaking DES by exhaustive search in a reasonable amount of time. Later, Hellman <ref> [31] </ref> showed a time-memory trade-off that allows improvement over exhaustive search if memory space is plentiful, after an exhaustive precomputation. These ideas helped engender doubts about the security of DES. There were also accusations that the NSA intentionally weakened DES.
Reference: [32] <author> International Standards Organization. </author> <title> IS 9796: Information technology, security techniques: digital signature scheme giving message recovery. </title> <address> Geneva, Switzerland. </address>
Reference-contexts: The ISO (International Standards Organization) 9796 standard <ref> [32] </ref> lists RSA as an acceptable cryptographic algorithm, as does the Consultative Committee in International Telegraphy and Telephony (CCITT) X.509 security standard [17]. RSA is part of both the Society for Worldwide Interbank Financial Telecommunication (SWIFT) standard and the French financial industry's ETEBAC 5 standard [18].
Reference: [33] <author> D. Kahn. </author> <title> The Codebreakers. </title> <publisher> Macmillan Co., </publisher> <address> New York, </address> <year> 1967. </year>
Reference: [34] <author> B.S. Kaliski Jr., R.L. Rivest, and A.T. Sherman. </author> <title> Is the data encryption standard a group? J. </title> <journal> of Cryptology, </journal> <volume> 1 </volume> <pages> 3-36, </pages> <year> 1988. </year>
Reference-contexts: DES is not a group. Although there has been much speculation and discussion of this issue for years, it was settled only recently [16]. This follows 36 previously reported experimental evidence to the same effect. For a more com-plete discussion of the significance of the issue, see <ref> [34] </ref>.
Reference: [35] <author> S. Kent and J. Linn. </author> <title> RFC 1114: Privacy Enhancement for Internet Electronic Mail: Part II - Certificate-Based Key Management. </title> <institution> Internet Activities Board, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: Currently it is recommended that users' keys expire two years after issue <ref> [35] </ref>. One should choose a key size appropriate to this period of time (see Question 2.8).
Reference: [36] <author> D.E. Knuth. </author> <booktitle> The Art of Computer Programming. </booktitle> <volume> Volume 2, </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., 2nd edition, </address> <year> 1981. </year>
Reference-contexts: O notation measures how fast an algorithm is; it gives the number of operations (to order of magnitude) in terms of n, the number to be factored, and p, a prime factor of n. For textbook treatment of factoring algorithms, see <ref> [36] </ref>, [42], [37], and [11]. Factoring algorithms come in two flavors, special purpose and general purpose; the efficiency of the former depend both on the number to be factored and on the unknown factors, whereas the efficiency of the latter depend only on the number to be factored.
Reference: [37] <author> N. Koblitz. </author> <title> A Course in Number Theory and Cryptography. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: O notation measures how fast an algorithm is; it gives the number of operations (to order of magnitude) in terms of n, the number to be factored, and p, a prime factor of n. For textbook treatment of factoring algorithms, see [36], [42], <ref> [37] </ref>, and [11]. Factoring algorithms come in two flavors, special purpose and general purpose; the efficiency of the former depend both on the number to be factored and on the unknown factors, whereas the efficiency of the latter depend only on the number to be factored.
Reference: [38] <author> N. Koblitz. </author> <title> Elliptic curve cryptosystems. </title> <journal> Mathematics of Computation, </journal> <volume> 48 </volume> <pages> 203-209, </pages> <year> 1987. </year>
Reference: [39] <author> X. Lai and J.L. Massey. </author> <title> A proposal for a new block encryption standard. </title> <booktitle> In Advances in Cryptology | Eurocrypt '90, </booktitle> <pages> pages 389-404, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: One is FEAL (Fast Encryption ALgorithm), a cipher for which attacks have been discovered [5], although new versions have been proposed. Another recently proposed cipher <ref> [39] </ref> seems promising, although it has not yet received sufficient scrutiny to instill full confidence in its security. Rivest has developed the ciphers RC2 and RC4 (see Question 6.5), which can be made as secure as necessary because they use variable key sizes.
Reference: [40] <author> B.A. LaMacchia and A.M. Odlyzko. </author> <title> Computation of discrete logarithms in prime fields. Designs, </title> <journal> Codes and Cryptography, </journal> <volume> 1 </volume> <pages> 47-62, </pages> <year> 1991. </year>
Reference-contexts: Therefore, it requires about as much effort to solve the discrete log problem mod a 512-bit prime as to factor a 512-bit RSA modulus. A recent paper <ref> [40] </ref> cites experimental evidence that the discrete log problem is slightly harder than factoring: they 33 suggest that the effort necessary to factor a 110-digit integer is the same as the effort to solve discrete logarithms modulo a 100-digit prime.
Reference: [41] <author> S. Landau. </author> <title> Zero knowledge and the Department of Defense. </title> <journal> Notices of the American Mathematical Society, </journal> <volume> 35 </volume> <pages> 5-12, </pages> <year> 1988. </year>
Reference-contexts: The NSA, as well as other intelligence and military agencies, has also blocked encryption methods from being published or patented, citing a national security threat from publishing the method; see Landau <ref> [41] </ref> for discussion of this practice.
Reference: [42] <author> A.K. Lenstra and H.W. Lenstra Jr. </author> <title> Algorithms in number theory. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <publisher> MIT Press/Elsevier, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: O notation measures how fast an algorithm is; it gives the number of operations (to order of magnitude) in terms of n, the number to be factored, and p, a prime factor of n. For textbook treatment of factoring algorithms, see [36], <ref> [42] </ref>, [37], and [11]. Factoring algorithms come in two flavors, special purpose and general purpose; the efficiency of the former depend both on the number to be factored and on the unknown factors, whereas the efficiency of the latter depend only on the number to be factored. <p> The discrete log problem has received much attention in recent years from researchers looking for efficient algorithms. For descriptions of today's most efficient algorithms see <ref> [42] </ref> and [20]. The best discrete log problems have an expected running time of approximately O (exp ( p ln p ln ln p)), which is similar to the expected running time of the best general-purpose factoring algorithm.
Reference: [43] <author> A.K. Lenstra, H.W. Lenstra Jr., M.S. Mannasse, and J.M. Pollard. </author> <title> The number field sieve. </title> <booktitle> In Proc. of the 22nd Annual ACM Symposium on the Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1990. </year> <month> 49 </month>
Reference-contexts: Even though the ECM depends on the size of factors, in many ways it behaves like a general-purpose algorithm. The recent number field sieve method <ref> [43] </ref>, also a special-purpose algorithm, is superior to all the other methods, but so far it only works for factoring numbers of a narrow class. It is currently being modified to obtain a general-purpose factoring algorithm [14].
Reference: [44] <author> A.K. Lenstra and M.S. Manasse. </author> <title> Factoring with two large primes. </title> <booktitle> In Advances in Cryptology | Eurocrypt '90, </booktitle> <pages> pages 72-82, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: The mpqs (and some of its variations) is the only general purpose algorithm that has successfully factored numbers greater than 100 digits. A variation due to Lenstra and Manasse <ref> [44] </ref>, known as ppmpqs, has been popular. Special purpose factoring algorithms include the Pollard rho method [58], with running time O ( p p), and the Pollard p 1 method [59], with running time O (p 0 ), where p 0 is the largest prime factor of p 1.
Reference: [45] <author> H.W. Lenstra Jr. </author> <title> Factoring integers with elliptic curves. </title> <journal> Ann. of Math., </journal> <volume> 126 </volume> <pages> 649-673, </pages> <year> 1987. </year>
Reference-contexts: Both of these take a number of steps that is exponential in the size of n; they thus take too long for most factoring jobs. The elliptic curve method (ECM) <ref> [45] </ref> is superior to these; its asymptotic running time is the same as mpqs in the worst case, and somewhat better on average. Even though the ECM depends on the size of factors, in many ways it behaves like a general-purpose algorithm.
Reference: [46] <author> R.C. Merkle and M.E. Hellman. </author> <title> Hiding information and signatures in trapdoor knapsacks. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-24:525-530, </volume> <year> 1978. </year>
Reference: [47] <author> R.C. Merkle and M.E. Hellman. </author> <title> On the security of multiple encryption. </title> <journal> Communications of the ACM, </journal> <volume> 24 </volume> <pages> 465-467, </pages> <month> July </month> <year> 1981. </year>
Reference-contexts: Another technique for improving security is triple encryption, that is, encrypting each message block under three different DES keys in succession. Triple encryption is equivalent to doubling the key size of DES, and helps prevent decryption by an enemy capable of single-key exhaustive search <ref> [47] </ref>. Aside from the issues mentioned above, DES can be used for encryption in several different modes. Some are more secure than others. ECB (electronic codebook) mode simply encrypts each 64-bit block of plaintext one after another under the same 56-bit DES key; it is the simplest mode.
Reference: [48] <author> E. Messmer. </author> <title> NIST stumbles on proposal for public-key encryption. </title> <journal> Network World, </journal> <volume> 9(30), </volume> <month> July 27, </month> <year> 1992. </year>
Reference-contexts: Several recent articles in the press discuss the industry dissatisfaction with DSS; an article by Messmer <ref> [48] </ref> is one example.
Reference: [49] <author> V.S. Miller. </author> <title> Use of elliptic curves in cryptography. </title> <booktitle> In Advances in Cryptology | Crypto '85, </booktitle> <pages> pages 417-426, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1986. </year>
Reference: [50] <author> National Bureau of Standards. </author> <title> FIPS Publication 46: Announcing the Data Encryption Standard. </title> <month> January </month> <year> 1977. </year>
Reference-contexts: This suggests that the degrees of difficulty of both problems are closely linked, and that any breakthrough, either positive or negative, will affect both problems equally. 5 DES 5.1 What is DES? DES is the Data Encryption Standard, an encryption block cipher defined by and endorsed by the U.S. government <ref> [50] </ref> in 1977 for use within the U.S. It was originally developed at IBM. DES has been extensively studied over the last 15 years and is the most well-known and widely used cryptosystem in the world. DES is a secret-key, symmetric cryptosystem.
Reference: [51] <institution> National Bureau of Standards. </institution> <note> FIPS Publication 46-1: Data Encryption Standard. </note> <month> January </month> <year> 1988. </year>
Reference-contexts: It was designed to be implemented in hardware, and is fast. It is very good for bulk encryption, that is, for encrypting a large set of data. NIST (see Question 8.1) recertifies DES as an official U.S. government encryption standard every five years; DES was last recertified in 1988 <ref> [51] </ref>. NIST has indicated that it is considering not recertifying DES again [69]. 5.2 Has DES been broken? Researchers have been trying to "break" DES for a long time. The obvious method of attack is brute-force exhaustive search of the key space; this takes 2 54 steps on average.
Reference: [52] <institution> National Bureau of Standards. FIPS Publication 81: DES Modes of Operation. </institution> <month> December </month> <year> 1980. </year>
Reference-contexts: In CBC mode, the very first plaintext block is XORed with an initialization vector before encryption. CFB (cipher feedback) mode allows one to use DES with block lengths less than 64 bits. Detailed discussion of the various DES modes can be found in <ref> [52] </ref>. In practice, CBC is the most widely used mode of DES, and is specified in several standards.
Reference: [53] <author> National Institute of Standards and Technology (NIST). </author> <title> The Digital Signature Standard, proposal and discussion. </title> <journal> Communications of the ACM, </journal> <volume> 35(7) </volume> <pages> 36-54, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: DSS is based on the discrete log problem (see Question 4.9) and derives from cryptosystems proposed by Schnorr [67] and ElGamal [25]. It is for authentication only and cannot be used for key exchange or encryption. For a detailed description of DSS, see [54] or <ref> [53] </ref>. DSS has been looked upon unfavorably by the computer industry, which had hoped the government would choose the RSA algorithm as the official standard; RSA is the most widely used authentication algorithm and is a de facto standard in the private sector. <p> A more detailed discussion of these criticisms can be found in <ref> [53] </ref>, and a detailed response by NIST to the criticisms can be found in [70].
Reference: [54] <author> National Institute of Standards and Technology (NIST). </author> <title> Publication XX: Announcement and Specifications for a Digital Signature Standard (DSS). </title> <month> August 19, </month> <year> 1992. </year>
Reference-contexts: DSS is based on the discrete log problem (see Question 4.9) and derives from cryptosystems proposed by Schnorr [67] and ElGamal [25]. It is for authentication only and cannot be used for key exchange or encryption. For a detailed description of DSS, see <ref> [54] </ref> or [53]. DSS has been looked upon unfavorably by the computer industry, which had hoped the government would choose the RSA algorithm as the official standard; RSA is the most widely used authentication algorithm and is a de facto standard in the private sector.
Reference: [55] <author> National Institute of Standards and Technology (NIST). </author> <title> Publication YY: Announcement and Specifications for a Secure Hash Standard (SHS). </title> <address> Jan-uary 22, </address> <year> 1992. </year>
Reference-contexts: Details of MD4 and MD5 with sample C code are available as Internet RFCs (Request for Comments) 1320 and 1321 respectively. They can be obtained via anonymous ftp at ftp.nisc.sri.com in the rfc directory. 6.4 What is SHS? The Secure Hash Standard (SHS) <ref> [55] </ref> is a hash function proposed by NIST (see Question 8.1); it is designed for use with its proposed Digital Signature Standard (see Question 7.1). It produces a 160-bit hash value from a variable size input. SHS is structurally similar to MD4 and MD5.
Reference: [56] <author> A.M. Odlyzko. </author> <title> Discrete logarithms in finite fields and their cryptographic significance. </title> <booktitle> In Advances in Cryptology | Eurocrypt '84, </booktitle> <pages> pages 224-314, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1984. </year>
Reference: [57] <editor> OSI Implementors' Workshop. </editor> <title> Draft Working Implementation Agreements For Open Systems Interconnection Protocols. </title> <address> Gaithersburg, Maryland, </address> <month> June </month> <year> 1992. </year> <month> 50 </month>
Reference-contexts: The Australian digital signature standard, AS2805.6.5.3 [71], also specifies RSA. RSA is found in Internet's proposed PEM (Privacy Enhanced Mail) standard (see Question 6.6) and the PKCS standard for the software industry (see Question 6.7). The OSI Implementors' Workshop (OIW) has issued implementors' agreements <ref> [57] </ref> referring to PKCS and PEM, which each include RSA.
Reference: [58] <author> J. Pollard. </author> <title> Monte Carlo method for factorization. </title> <journal> BIT, </journal> <volume> 15 </volume> <pages> 331-334, </pages> <year> 1975. </year>
Reference-contexts: The mpqs (and some of its variations) is the only general purpose algorithm that has successfully factored numbers greater than 100 digits. A variation due to Lenstra and Manasse [44], known as ppmpqs, has been popular. Special purpose factoring algorithms include the Pollard rho method <ref> [58] </ref>, with running time O ( p p), and the Pollard p 1 method [59], with running time O (p 0 ), where p 0 is the largest prime factor of p 1.
Reference: [59] <author> J. Pollard. </author> <title> Theorems of factorization and primality testing. </title> <journal> Proc. Cam-bridge Philos. Soc., </journal> <volume> 76 </volume> <pages> 521-528, </pages> <year> 1974. </year>
Reference-contexts: A variation due to Lenstra and Manasse [44], known as ppmpqs, has been popular. Special purpose factoring algorithms include the Pollard rho method [58], with running time O ( p p), and the Pollard p 1 method <ref> [59] </ref>, with running time O (p 0 ), where p 0 is the largest prime factor of p 1. Both of these take a number of steps that is exponential in the size of n; they thus take too long for most factoring jobs.
Reference: [60] <author> M.O. Rabin. </author> <title> Digitalized signatures as intractable as factorization. </title> <type> Technical Report MIT/LCS/TR-212, </type> <institution> MIT, </institution> <year> 1979. </year>
Reference: [61] <editor> R.L. Rivest. Cryptography. In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <publisher> MIT Press/Elsevier, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference: [62] <author> R.L. Rivest. </author> <title> Finding four million random primes. </title> <booktitle> In Advances in Cryptology | Crypto '90, </booktitle> <pages> pages 625-626, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference: [63] <author> R.L Rivest. </author> <title> The MD4 message digest algorithm. </title> <booktitle> In Advances in Cryptology | Crypto '90, </booktitle> <pages> pages 303-311, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: MD2 is the slowest of the three. MD4 <ref> [63] </ref> is the fastest and is part of the SNMP (Secure Network Management Protocol) Internet standard. <p> Currently, MD5 is the most often recommended hash algorithm for digital signatures. The Internet Privacy-Enhanced Mail standard (see Question 6.6) lists the MD algorithms as endorsed message digest functions. There is also an extension of MD4 which produces a 256-bit hash value <ref> [63] </ref>. No serious weaknesses have been discovered in any of the three MD algorithms. An attempt by Berson to apply differential cryptanalysis to MD5 [4] failed to reveal any feasible attack, despite some interesting theoretical analysis. <p> However, those with greater security needs, such as certifying authorities, should use a longer modulus and a hash function that produces a longer message digest; either SHS (160-bit digest) or a modified version of MD4 that produces a 256-bit digest <ref> [63] </ref> would suffice. The MD algorithms are available for unrestricted use. Details of MD4 and MD5 with sample C code are available as Internet RFCs (Request for Comments) 1320 and 1321 respectively.
Reference: [64] <author> R.L. Rivest. </author> <title> Response to NIST's proposal. </title> <journal> Communications of the ACM, </journal> <volume> 35 </volume> <pages> 41-47, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: It is currently being modified to obtain a general-purpose factoring algorithm [14]. The generalized number field sieve may become the top factoring algorithm within a few years, if it proves to be practical. Rivest estimates <ref> [64] </ref> that a 512-bit number would need 2.1 million MIPS-years to factor by the best general purpose factoring algorithm today; a MIPS-year is the amount of computation done by a 1 MIPS (million instructions per second) computer in one year. <p> For descriptions of today's most efficient algorithms see [42] and [20]. The best discrete log problems have an expected running time of approximately O (exp ( p ln p ln ln p)), which is similar to the expected running time of the best general-purpose factoring algorithm. Rivest <ref> [64] </ref> has analyzed the expected time to solve discrete log both in terms of MIPS-years and money. 4.10 Which is easier, factoring or discrete log? The asymptotic running time of the best discrete log algorithm is approximately the same as for the best general purpose factoring algorithm.
Reference: [65] <author> R.L. Rivest. </author> <title> RFC 1321: The MD5 MessageDigest Algorithm. </title> <institution> Internet Activities Board, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: MD2 is the slowest of the three. MD4 [63] is the fastest and is part of the SNMP (Secure Network Management Protocol) Internet standard. MD5 <ref> [65] </ref> has been described by Rivest as "MD4 with safety belts": it has a more conservative design than MD4 and can be considered more secure, but at a cost of being approximately 33% slower. Currently, MD5 is the most often recommended hash algorithm for digital signatures.
Reference: [66] <author> R.L. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public-key cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-126, </pages> <month> February </month> <year> 1978. </year>
Reference: [67] <author> C.P. Schnorr. </author> <title> Efficient identification and signatures for smart cards. </title> <booktitle> In Advances in Cryptology | Crypto '89, </booktitle> <pages> pages 239-251, </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: Private industry was not involved in the selection of DSS; since the selection, however, industry has been able to make public comments to NIST and Congress regarding DSS. DSS is based on the discrete log problem (see Question 4.9) and derives from cryptosystems proposed by Schnorr <ref> [67] </ref> and ElGamal [25]. It is for authentication only and cannot be used for key exchange or encryption. For a detailed description of DSS, see [54] or [53]. <p> DSS has not been around long enough to withstand attempts to break it; although the discrete log problem is old, the particular form of the problem used in DSS was first proposed for cryptographic use in 1989 <ref> [67] </ref> and has not received much study. This may be the most powerful argument against the security of DSS. Any new cryptosystem could have serious flaws that are only discovered after a couple of years of scrutiny by cryptographers.
Reference: [68] <author> R.D. Silverman. </author> <title> The multiple polynomial quadratic sieve. </title> <journal> Math. Comp., </journal> <volume> 48 </volume> <pages> 329-339, </pages> <year> 1987. </year>
Reference-contexts: General purpose algorithms are the most important ones in the context of cryptographic systems and their security. The best general purpose algorithm today is the multiple polynomial quadratic sieve (mpqs) <ref> [68] </ref>, which has running time O (exp ( p ln n ln ln n)). The mpqs (and some of its variations) is the only general purpose algorithm that has successfully factored numbers greater than 100 digits. A variation due to Lenstra and Manasse [44], known as ppmpqs, has been popular.
Reference: [69] <author> M.E. Smid and D.K. Branstad. </author> <title> The Data Encryption Standard: Past and future. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76 </volume> <pages> 550-559, </pages> <year> 1988. </year>
Reference-contexts: NIST (see Question 8.1) recertifies DES as an official U.S. government encryption standard every five years; DES was last recertified in 1988 [51]. NIST has indicated that it is considering not recertifying DES again <ref> [69] </ref>. 5.2 Has DES been broken? Researchers have been trying to "break" DES for a long time. The obvious method of attack is brute-force exhaustive search of the key space; this takes 2 54 steps on average.
Reference: [70] <author> M.E. Smid and D.K. Branstad. </author> <title> Response to comments on the NIST proposed Digital Signature Standard. </title> <booktitle> In Advances in Cryptology | Crypto '92, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: A more detailed discussion of these criticisms can be found in [53], and a detailed response by NIST to the criticisms can be found in <ref> [70] </ref>. In the DSS system, signature generation is faster than signature verification; in the RSA system, signature verification is much faster than signature generation (as long as the public and private exponents are chosen to have this property, which is the usual case). <p> These trapdoor primes are relatively rare however, and can be avoided if each person generates his own key. If keys are generated by a central authority, a procedure can followed by which a DSS user can be confident that he was not intentionally given a weak prime <ref> [70] </ref>. 7.3 Is use of DSS covered by any patents? Whether use of DSS infringes any existing patents is a matter of current dispute.
Reference: [71] <author> Standards Australia. </author> <title> AS 2805.6.5.3: Electronic Funds Transfer | Key Management. </title> <year> 1990. </year>
Reference-contexts: RSA is part of both the Society for Worldwide Interbank Financial Telecommunication (SWIFT) standard and the French financial industry's ETEBAC 5 standard [18]. The Australian digital signature standard, AS2805.6.5.3 <ref> [71] </ref>, also specifies RSA. RSA is found in Internet's proposed PEM (Privacy Enhanced Mail) standard (see Question 6.6) and the PKCS standard for the software industry (see Question 6.7). The OSI Implementors' Workshop (OIW) has issued implementors' agreements [57] referring to PKCS and PEM, which each include RSA.

References-found: 71

