URL: file://ftp.cis.ohio-state.edu/pub/communication/papers/icpp94-design.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/cluster_pub.html
Root-URL: 
Email: Email: fbasak,pandag@cis.ohio-state.edu  
Title: Designing Large Hierarchical Multiprocessor Systems under Processor, Interconnection, and Packaging Advancements A) to elastomeric surface
Author: Debashis Basak and Dhabaleswar K. Panda 
Address: Columbus, OH 43210-1277  
Affiliation: Department of Computer and Information Science The Ohio State University,  
Date: 1994  
Note: To appear in Proceedings of the International Conference on Parallel Processing,  O(  
Abstract: A general framework for architectural design of large hierarchical multiprocessor systems under rapidly changing packaging, processor, and interconnection technologies is presented. In recent years processor boards with larger area (A) and greater pinouts are becoming feasible. Board interconnection technology has advanced from peripheral connections 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Basak and D. K. Panda. </author> <title> Scalable Architectures with k-ary n-cube cluster-c organization. </title> <booktitle> In Proc. of the SPDP, </booktitle> <pages> pp 780-787, </pages> <year> 1993. </year>
Reference-contexts: Referring to the set of design-feasible configurations and their performance characteristics as what the packaging technology offers, we call this the supply side. On the other hand, to sustain processor performance in terms of throughput places a demand on the size of the required bisection bandwidth <ref> [1, 5] </ref> of the system. The design-feasible configurations which offer performance greater than what is demanded are defined as good configurations. Among the good choices the one which provides desired performance at optimal cost is defined as the best configuration. Our goal is to derive this best topology. <p> Our goal is to derive this best topology. Simulation modeling is also employed to determine exact performance to decide between very close good candidates. The paper is organized as follows. In Sec. 2 we present the two-level k-ary n-cube cluster-c architecture <ref> [1] </ref> used in later discussion. In Sec. 3 we discuss the trends in growth of processor board sizes, alternate pinout technologies, channel width technology, and derive the design-feasible configurations. Processor speeds, communication link speeds and the performance demand are discussed in Sec. 4. <p> In Sec. 5 we derive the good configurations and discuss important considerations in choosing the best configuration. 2 k-ary n-cube cluster-c interconnec tion and architectural alternatives A popular interconnection being used currently to build large scalable systems is the class of k-ary n-cube cluster-c two-level systems <ref> [1, 2] </ref>. Some examples are Intel Paragon, Stanford DASH, and Cray T3D. The lower level consists of k n clusters of processors interconnected by a higher level direct k-ary n-cube network (also referred to as inter-cluster network or internet).
Reference: [2] <author> D. Basak and D. K. Panda. </author> <title> Designing Large Hierarchical Multiprocessor Systems under Processor, Interconnection, and Packaging Advancements. </title> <type> Tech. </type> <institution> Report OSU-CIS 1994/TR01, Ohio State Univ., </institution> <month> Jan </month> <year> 1994. </year>
Reference-contexts: In Sec. 5 we derive the good configurations and discuss important considerations in choosing the best configuration. 2 k-ary n-cube cluster-c interconnec tion and architectural alternatives A popular interconnection being used currently to build large scalable systems is the class of k-ary n-cube cluster-c two-level systems <ref> [1, 2] </ref>. Some examples are Intel Paragon, Stanford DASH, and Cray T3D. The lower level consists of k n clusters of processors interconnected by a higher level direct k-ary n-cube network (also referred to as inter-cluster network or internet). <p> The maximum board size puts an upper limit on the largest cluster size c in the system design. To build a system with N processors we need a total board area (N a). However, board area being precious <ref> [2] </ref> we suggest using exactly (N a) total board space. <p> This corresponds to a channel width W 24 including control wires. Many factors like path-width inside routers, connector technology etc. restrict channel widths from being arbitrarily large. In the near future it is expected that technologies would allow channels to carry 32-bit or 64-bit data <ref> [2] </ref>, corresponding to W 40 and W 72, respectively. 3.4 Deriving design-feasible configura tions Let us now consider the problem of building a two level system with a total of N = 1024 processors and using boards/clusters of size (ca). <p> Depending on the k-ary n-cube internet to connect these M boards different values for bisection bandwidth B and channel width W of the internet can be obtained. Due to space constraint, we are mentioning the main results here and the detailed derivations can be found in <ref> [2] </ref>. The bisection bandwidth B of an architecture limits the volume of traffic that can cross from one half to other half of the network [2]. This puts a restriction on the peak performance of the system. <p> Due to space constraint, we are mentioning the main results here and the detailed derivations can be found in <ref> [2] </ref>. The bisection bandwidth B of an architecture limits the volume of traffic that can cross from one half to other half of the network [2]. This puts a restriction on the peak performance of the system. The bisection bandwidth in the internet can be derived as B = M (n1=n) P=n. <p> Observe that an increase in D will capture the improvement in processor speeds while a decrease in T c will capture the improvement in link speeds. To capture both these technologies together we define a parameter = D=T c to represent processor demand on network in bits/cycle. In <ref> [2] </ref> it is shown that representative values of lie in the range of 4-10 bits/cycle. Under uniform traffic, the demand on internet bisection bandwidth B d can be derived as B d = N =2 [2]. 5 Design choices A good configuration is a design-feasible configuration which can support the bandwidth <p> In <ref> [2] </ref> it is shown that representative values of lie in the range of 4-10 bits/cycle. Under uniform traffic, the demand on internet bisection bandwidth B d can be derived as B d = N =2 [2]. 5 Design choices A good configuration is a design-feasible configuration which can support the bandwidth demanded from it. <p> It is to be noted that under both pinout technologies we are left with around fifteen good choices, amongst which we have to choose the best one. Based on the observations in <ref> [2] </ref> that larger clusters yield systems with lesser cost, we focus on the good configurations for which a given internet dimensionality offers larger cluster size. This leaves us with three good candidates for best topology in either pinout technology. <p> To decide amongst the 3D internet with c = 8 and 4D internet with c = 9, we use simulation modeling for determining throughput-latency behavior. In this analysis since we are focusing more on the internet character-istics we have assumed a fair cluster interface design and available intra-cluster bandwidth <ref> [2] </ref> in our simulations. Fig. 4 (a) shows that both 3D and 4D internet offer almost similar latencies to support a throughput of = 6:0. From Table 1 (a) we observe that the 3D internet requires much fewer internet channel connectors.
Reference: [3] <author> W. Hsu and P. C. Yew. </author> <title> The Performance of Hierarchical Systems with wiring constraints. </title> <booktitle> In Proc. of the Int. Conf. on Parallel Processing, </booktitle> <month> Aug </month> <year> 1991. </year>
Reference-contexts: In our framework we therefore put more importance on optimizing the inter-board costs. Among other things the design model allows varying board sizes, a choice of reasonable channel widths, and flexible pinout with alternate pinout technologies. Previous work in this area <ref> [3, 5] </ref> have developed guidelines based only on fixed board sizes with fixed pinouts, not considering changes in board sizes and alternate pinout technologies. The changes in processor and interconnection technology and its relation to packaging technology in designing systems has also not been studied earlier.
Reference: [4] <author> M. D. Noakes, D. A. Wallach, and W. J. Dally. </author> <title> The J-Machine Multicomputer: An Architectural Evaluation. </title> <booktitle> In Proc. of the ISCA, </booktitle> <pages> pp. 224-235, </pages> <year> 1993. </year>
Reference-contexts: Given a board of size (ja), we can accommodate upto j processors on it. Over the years board sizes have grown in physical dimensions. We now have contemporary prototypes like the MIT J-machine <ref> [4] </ref> which has 64 processors on a board. The technology at a given time determines the largest board size (ma), which can fit at most m processors. For illustrative purposes we consider m to be 64 in this paper. <p> as long as the sum of all board areas in the system remains (N a). 3.2 Two pinout technologies Currently two different types of technologies are being employed by the computer industry: Surface pinouts: In this technology the surface of the board is utilized for external connections using elastomeric connectors <ref> [4] </ref>. Under this technology the pin-count from a board of area A is O (A). Let us define parameter p1 to be the pin-count that can be supported on a given board area a using surface pinout technology. <p> For the purposes of this paper we use values of p1 = 64 and p2 = 256. These values are derived from the cur rent design trends of CRAY T3D and J-machine <ref> [4] </ref>. 3.3 Channel width technology Most current machines have 16-bit data channels. This corresponds to a channel width W 24 including control wires. Many factors like path-width inside routers, connector technology etc. restrict channel widths from being arbitrarily large.
Reference: [5] <author> M. T. Raghunath and A. Ranade. </author> <title> Designing interconnection networks for multi-level packaging. </title> <booktitle> In Proc. of the Supercomputing, </booktitle> <pages> pp. 772-781, </pages> <year> 1993. </year>
Reference-contexts: In this paper, we present a new framework for designing and developing large hierarchical architectures. We consider a packaging technology with two levels: processors in the parallel computer are organized into a number of boards (clusters) and the boards are then connected through inter-board wires. It has been shown <ref> [5] </ref> that a common characteristic of most packaging technologies is a progressive increase in costs and decrease in capacities as we go up the packaging hierarchy. In our framework we therefore put more importance on optimizing the inter-board costs. <p> In our framework we therefore put more importance on optimizing the inter-board costs. Among other things the design model allows varying board sizes, a choice of reasonable channel widths, and flexible pinout with alternate pinout technologies. Previous work in this area <ref> [3, 5] </ref> have developed guidelines based only on fixed board sizes with fixed pinouts, not considering changes in board sizes and alternate pinout technologies. The changes in processor and interconnection technology and its relation to packaging technology in designing systems has also not been studied earlier. <p> Referring to the set of design-feasible configurations and their performance characteristics as what the packaging technology offers, we call this the supply side. On the other hand, to sustain processor performance in terms of throughput places a demand on the size of the required bisection bandwidth <ref> [1, 5] </ref> of the system. The design-feasible configurations which offer performance greater than what is demanded are defined as good configurations. Among the good choices the one which provides desired performance at optimal cost is defined as the best configuration. Our goal is to derive this best topology.
References-found: 5

