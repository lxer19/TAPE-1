URL: ftp://ftp.cag.lcs.mit.edu/pub/virtual_wires/fpga94.ps.Z
Refering-URL: http://www.cag.lcs.mit.edu/vwires/papers/index.html
Root-URL: 
Title: The Virtual Wires Emulation System: A Gate-Efficient ASIC Prototyping Environment  
Author: Russell Tessier, Jonathan Babb, Matthew Dahl, Silvina Hanono, and Anant Agarwal 
Address: Cambridge, MA 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: This paper focuses on the prototype hardware and software interfaces that have been developed for an FPGA-based ASIC emulation system based on a new technique for overcoming inter-chip communication limitations. This technique, referred to as virtual wires, intelligently multiplexes each physical FPGA wire among a number of logical wires. The Virtual Wires Emulation System exhibits high FPGA gate utilization while achieving system speeds comparable to existing logic emulators. A two-dimensional mesh interconnection topology of FPGAs is used to eliminate the cost of signal switching elements and to facilitate scalability. A system capable of emulating 20,000 gates has been constructed for under $3000. This system includes both prototype emulation hardware and a Virtual Wires netlist compiler. Currently, this system is being used as both a simulation accelerator for the LSI Logic LSIM and Cadence Verilog simulators and as an in-circuit emulator. Results from mapping netlists, such as the 18K gate Sparcle microprocessor [2], to this system for simulation acceleration and in-circuit emulation indicate that virtual wires can substantially increase FPGA utilization without adversely affecting emulation speed. Keywords: FPGA, logic emulation, prototyping, mesh topology, static routing, virtual wires. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Agarwal et al. </author> <title> The MIT Alewife machine: A large-scale distributed memory multiprocessor. In Scalable Shared Memory Multiprocessors. </title> <publisher> Kluwer Academic Press, </publisher> <year> 1991. </year>
Reference: [2] <author> A. Agarwal, J. Kubiatowicz, D. Kranz, B.-H. Lim, D. Yeung, G. D'Souza, and M. Parkin. Sparcle: </author> <title> An Evolutionary Processor Design for Multiprocessors. </title> <booktitle> IEEE Micro, </booktitle> <month> June </month> <year> 1993. </year>
Reference: [3] <institution> Aptix, Inc. Aptix AXB-AP4 Data Sheet, </institution> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: The Quickturn Enterprise system uses a hierarchical approach to interconnection. The Virtual ASIC system by InCA [7] uses a combination of nearest neighbor and crossbar interconnect. Like Quickturn's systems, Virtual ASIC logic partitions are hardwired to FPGAs following partition placement. The AXB-AP4 by Aptix Corporation <ref> [3] </ref> uses field programmable interconnect chips (FPICs) for communication between small groups of FPGAs.
Reference: [4] <author> J. Babb, R. Tessier, and A. Agarwal. </author> <title> Virtual Wires: </title> <booktitle> Overcoming Pin Limitations in FPGA-based Logic Emulators In IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <address> Napa, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Current emulators only use a fraction of potential communication bandwidth because they dedicate each FPGA pin (physical wire) to a single emulated signal (logical wire). These logical wires are not active simultaneously and are switched at emulation clock speeds. Virtual wires <ref> [4] </ref> overcome pin limitations by intelligently multiplexing each physical wire among multiple logical wires and pipelining these connections at the maximum clocking frequency of the FPGA. <p> Each logic partition is subsequently translated into gates in the target FPGA technology and mapped to silicon by a vendor specific place and route tool. This generates a configuration bitstream which may be downloaded to the emulation hardware. For more information on the Virtual Wires software environment see <ref> [4] </ref>. The hardware component of a Virtual Wires emulation system consists of one or more FPGA-based emulation boards interfaced to a host workstation. Each FPGA-based board contains sixteen Xilinx XC4005 FPGAs [14] interconnected in a two-dimensional nearest-neighbor mesh. <p> FPGA for the Sparcle design. There is a fixed overhead of roughly 12 percent of the CLB's for virtual wires, as well as a small decrease in chip routability. 4.1 Pin Multiplication Factor In <ref> [4] </ref> it was shown that logic designs, partitioned for given FPGA gate counts, exhibit partition pin counts which are typically greater than those found in FPGA packages.
Reference: [5] <author> J. Cocke and R. E Miller. </author> <title> Configurable Computer System. </title> <journal> IBM Technical Disclosure Bulletin, </journal> <volume> 15:9, </volume> <month> February </month> <year> 1973. </year>
Reference-contexts: This system is currently being used as a simulation accelerator and an in-circuit emulator for sequential circuits of about 20,000 gates. 1.3 Background The concept of reconfiguring digital hardware to accelerate computation has been present for a number of years <ref> [5] </ref>. Even before FPGAs existed, logic emulation based on cellular arrays was explored in academia [12]. This work could not be applied to logic emulation without the enabling technology of large scale integration found in today's FPGAs.
Reference: [6] <author> A. DeHon, S. Perentz. </author> <title> Transit Sbus Interface. Transit Note No. </title> <type> 67, </type> <institution> Artificial Intelligence Laboratory, Massachusetts Institute of Technology, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: To provide a higher bandwidth interface to the host an additional Xilinx XC4005 chip serves as an intermediary between an Sbus interface card located in the host Sparcsta-tion and the Xilinx array. This chip is configured to transfer words of data between the Sbus card <ref> [6] </ref> and the eight bit North port of the Xilinx chip in the upper right position of the array. Estimated transfer rate is about one Mbyte per second. This interface chip may be reconfigured to interface to other types of buses as well.
Reference: [7] <author> InCA Inc. </author> <title> Concept Silicon Reference Manual, </title> <month> Nov. </month> <year> 1992. </year> <note> Version 1.1. </note>
Reference-contexts: Quickturn Inc. [13] [11] has developed emulation systems which interconnect FPGAs in a two-dimensional mesh and, more recently, in a partial crossbar topology. The Quickturn Enterprise system uses a hierarchical approach to interconnection. The Virtual ASIC system by InCA <ref> [7] </ref> uses a combination of nearest neighbor and crossbar interconnect. Like Quickturn's systems, Virtual ASIC logic partitions are hardwired to FPGAs following partition placement. The AXB-AP4 by Aptix Corporation [3] uses field programmable interconnect chips (FPICs) for communication between small groups of FPGAs. <p> Input netlists are first partitioned using the Concept Silicon netlist partitioner by InCA <ref> [7] </ref>. Signal dependencies between partitions are then analyzed and logic partitions are assigned to physical FPGAs using a placement algorithm based on simulated annealing [8]. The Virtual Wires router is used to statically schedule and route inter-FPGA communication.
Reference: [8] <author> S. Kirkpatrick, C. D. Gellatt, and M. P. Vecchi. </author> <title> Simulated annealing. </title> <journal> Science, </journal> <volume> 220, </volume> <year> 1983. </year>
Reference-contexts: Input netlists are first partitioned using the Concept Silicon netlist partitioner by InCA [7]. Signal dependencies between partitions are then analyzed and logic partitions are assigned to physical FPGAs using a placement algorithm based on simulated annealing <ref> [8] </ref>. The Virtual Wires router is used to statically schedule and route inter-FPGA communication. Gates needed to perform this routing inside the FPGAs are added to the partition netlists.
Reference: [9] <author> J. Kubiatowicz. </author> <title> User's Manual for the A-1000 Communications and Memory Management Unit. </title> <note> ALEWIFE Memo No. Page 8 19, </note> <institution> Laboratory for Computer Science, Massachusetts Institute of Technology, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: These results are then passed back to the simulator via the drivers for display or further simulation. 2.2 Emulation Interface The ultimate goal of this project is to perform in-circuit emulation of the Alewife Communications and Cache Controller <ref> [9] </ref>, an 86K gate ASIC under development at MIT, using prototype emulation hardware. Following netlist compilation by Virtual Wires software, a partitioned and translated ASIC design may be downloaded to the emulation system and set into operation.
Reference: [10] <institution> LSI Logic Corporation User's Guide for LDS Simulation and Verification Tools, </institution> <month> Oct. </month> <year> 1989. </year> <note> Release 10.0. </note>
Reference-contexts: The latter rate is typically limited by the speed of the simulation software or the bandwidth across the host interface. Simulation acceleration of Sparcle is driven by a behavioral model test shell running in the LSI Logic simulator <ref> [10] </ref>. The 136-word Sparcle register file is emulated by the on-board SRAM available on the Virtual Wires prototype board. The emulation system also has been used in place of a Page 6 Statistic Sparcle FPGAs 24 Avg. Gates / partition 718 Avg.
Reference: [11] <author> L. Maliniak. </author> <title> Multiplexing enhances hardware emulation. </title> <booktitle> Electronic Design, </booktitle> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: This work could not be applied to logic emulation without the enabling technology of large scale integration found in today's FPGAs. FPGA-based logic emulation systems have been developed for design complexity ranging from several thousand to several million gates. Quickturn Inc. [13] <ref> [11] </ref> has developed emulation systems which interconnect FPGAs in a two-dimensional mesh and, more recently, in a partial crossbar topology. The Quickturn Enterprise system uses a hierarchical approach to interconnection. The Virtual ASIC system by InCA [7] uses a combination of nearest neighbor and crossbar interconnect.
Reference: [12] <author> F. Manning. </author> <title> Automatic Test, Configuration, and Repair of Cellular Arrays MIT/LCS Technical Report-151, </title> <month> June </month> <year> 1975. </year>
Reference-contexts: Even before FPGAs existed, logic emulation based on cellular arrays was explored in academia <ref> [12] </ref>. This work could not be applied to logic emulation without the enabling technology of large scale integration found in today's FPGAs. FPGA-based logic emulation systems have been developed for design complexity ranging from several thousand to several million gates.
Reference: [13] <author> S. Walters. </author> <title> Computer-aided prototyping for ASIC-Based systems. </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: This work could not be applied to logic emulation without the enabling technology of large scale integration found in today's FPGAs. FPGA-based logic emulation systems have been developed for design complexity ranging from several thousand to several million gates. Quickturn Inc. <ref> [13] </ref> [11] has developed emulation systems which interconnect FPGAs in a two-dimensional mesh and, more recently, in a partial crossbar topology. The Quickturn Enterprise system uses a hierarchical approach to interconnection. The Virtual ASIC system by InCA [7] uses a combination of nearest neighbor and crossbar interconnect.
Reference: [14] <author> Xilinx, Inc. </author> <title> The XC4000 Data Book, </title> <month> Aug. </month> <year> 1992. </year> <pages> Page 9 </pages>
Reference-contexts: For more information on the Virtual Wires software environment see [4]. The hardware component of a Virtual Wires emulation system consists of one or more FPGA-based emulation boards interfaced to a host workstation. Each FPGA-based board contains sixteen Xilinx XC4005 FPGAs <ref> [14] </ref> interconnected in a two-dimensional nearest-neighbor mesh. System size can be scaled by attaching additional boards to the existing system via connectors on any of the four sides of the current system boards thus extending the two-dimensional mesh either horizontally or vertically.
References-found: 14

