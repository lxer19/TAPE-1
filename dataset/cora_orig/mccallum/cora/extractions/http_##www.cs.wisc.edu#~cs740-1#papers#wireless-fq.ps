URL: http://www.cs.wisc.edu/~cs740-1/papers/wireless-fq.ps
Refering-URL: 
Root-URL: 
Email: slu@crhc.uiuc.edu; bharghav@crhc.uiuc.edu; rsrikant@uiuc.edu  
Title: Fair Scheduling in Wireless Packet Networks  
Author: Songwu Lu Vaduvur Bharghavan Rayadurgam Srikant 
Affiliation: Coordinated Sciences Laboratory University of Illinois at Urbana-Champaign  
Abstract: Fair scheduling of delay and rate-sensitive packet flows over a wireless channel is not addressed effectively by most contemporary wireline fair scheduling algorithms because of two unique characteristics of wireless media: (a) bursty channel errors, and (b) location-dependent channel capacity and errors. Besides, in packet cellular networks, the base station typically performs the task of packet scheduling for both downlink and uplink flows in a cell; however a base station has only a limited knowledge of the arrival processes of uplink flows. In this paper, we propose a new model for wireless fair scheduling based on an adaptation of fluid fair queueing to handle location-dependent error bursts. We describe an ideal wireless fair scheduling algorithm which provides a packetized implementation of the fluid model while assuming full knowledge of the current channel conditions. For this algorithm, we derive the worst-case throughput and delay bounds. Finally, we describe a practical wireless scheduling algorithm which approximates the ideal algorithm. Through simulations, we show that the algorithm achieves the desirable properties identified in the wireless fluid fair queueing model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.R. Bennett and H. Zhang, </author> <title> "WF 2 Q: Worst-case fair weighted fair queueing," </title> <booktitle> Proc. IEEE INFOCOM'96, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: There are several packet-level algorithmic implementations of this model, such as WFQ [5], WF 2 Q <ref> [1] </ref>, SCFQ [7], STFQ [8], etc. Essentially, the goal of each of these algorithms is to serve packets in an order that approximates fluid fair queueing as closely as possible. <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 <ref> [0; 1] </ref> = W 2 [0; 1] = 1=2; W 1 [1; 2] = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 <ref> [0; 1] </ref> = W 2 [0; 1] = 1=2; W 1 [1; 2] = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> The properties of WFQ were analyzed in [5, 12]. Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) [7] algorithm and WF 2 Q <ref> [1] </ref>. Recent modifications to accommodate time-varying server capacity include STFQ [8]. While most of the above algorithms can handle time-varying server capacity with minor or no modifications, none of them handle the case when the variation in the capacity is location-dependent.
Reference: [2] <author> P. Bhagwat, P. Bhattacharya, A. Krishma and S. Tri-pathi, </author> <title> "Enhancing throughput over wireless LANs using channel state dependent packet scheduling," </title> <note> to appear on Proc. of IEEE INFOCOM'97. </note>
Reference-contexts: By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> By applying equation (1) over the time periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 <ref> [1; 2] </ref> = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 [0; 2] = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). <p> periods [0,1] and [1,2], we arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 [1; 2] = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 <ref> [0; 2] </ref> = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). This simple example illustrates the difficulty in defining fairness in a wireless network, even in an idealized model. <p> arrive at the following channel capacity allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 [1; 2] = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 <ref> [0; 2] </ref> = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). This simple example illustrates the difficulty in defining fairness in a wireless network, even in an idealized model. <p> allocation: W 1 [0; 1] = W 2 [0; 1] = 1=2; W 1 [1; 2] = W 2 [1; 2] = W 3 [1; 2] = 1=3; Now, over the time window [0,2], the allocation is W 1 <ref> [0; 2] </ref> = W 2 [0; 2] = 5=6; W 3 [0; 2] = 1=3: which does not satisfy the fairness property of equation (1). This simple example illustrates the difficulty in defining fairness in a wireless network, even in an idealized model. <p> Finally, a recent work on channel state dependent packet (CSDP) scheduling does address the issues of wireless medium access with a view to handling not only contention but also location-dependent error bursts <ref> [2] </ref>. However, it does not address the issues of fairness, throughput and delay guarantees. 10 Conclusions Emerging indoor and outdoor packet cellular networks will seek to support communication-intensive applications which require sustained quality of service over scarce, dynamic and shared wireless channels.
Reference: [3] <author> V. Bharghavan, A. Demers, S. Shenker and L. Zhang, "MACAW: </author> <title> A Medium Access Protocol for Indoor Wireless LANs," </title> <booktitle> Proc. ACM SIGCOMM'94. </booktitle>
Reference-contexts: Thus we cannot assume convenient tagging mechanisms at the source when packets arrive, as in most fair queueing algorithms. Besides, due to the shared nature of the wireless medium, we must take into account hidden/exposed stations <ref> [3] </ref>. This points to a close coordination of the scheduling algorithm with the medium access protocol for wireless channels. In this paper, we seek to address the issues unique to wireless fair queueing, while drawing extensively from the basic fluid fair queueing model for wireline networks. <p> Acknowledgements have been used in several medium access protocols <ref> [3, 10] </ref> for similar purposes. One-Step Prediction: Since errors are bursty and errors in successive slots are highly correlated, we perform a one-step channel prediction by monitoring the channel condition in the previous slot. <p> For a more detailed general discussion on MAC protocol issues, we refer the reader to <ref> [3, 9] </ref>. Identification of New and Backlogged Flows: The base station has a special downlink `broadcast' flow called the control flow, which has a flow id of &lt;0, downlink, 0&gt;. <p> While wireline fair scheduling has been extensively researched, wireless fair scheduling is relatively unchartered territory. Typically, most related work on fairness in wireless channels approach it from a network-centric view (e.g. probability of channel access is inversely proportional to the contention perceived at the location of the host <ref> [3] </ref>), or provide fairly simplistic definitions of fairness [6].
Reference: [4] <author> C. Chang, J. Chang, K. Chen and M. </author> <title> You, "Guaranteed quality-of-service wireless access to ATM," </title> <type> preprint, </type> <year> 1996. </year>
Reference-contexts: In recent related work, some solutions to providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored <ref> [4, 10] </ref>. The underlying idea is to combine the best features of some contention-based schemes like CSMA and contention-free schemes like TDMA. Performance analysis in terms of throughput and delay has been obtained [4, 10]. However, there are three major limitations of this approach. <p> providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored <ref> [4, 10] </ref>. The underlying idea is to combine the best features of some contention-based schemes like CSMA and contention-free schemes like TDMA. Performance analysis in terms of throughput and delay has been obtained [4, 10]. However, there are three major limitations of this approach. Firstly, channel errors and packet loss during transmission are ignored; second, the issue of location-dependent channel capacity is addressed only partially (as a function of contention); lastly, the scheduling issues in the higher level are typically unaddressed.
Reference: [5] <author> A. Demers, S. Keshav and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorithm," </title> <booktitle> Proc. ACM SIGCOMM'89. </booktitle>
Reference-contexts: In this work, we first propose a precisely quantifiable definition of fairness and then describe algorithms for packet scheduling in wireless networks to achieve such fairness. In wireline networks, a popular model for packet scheduling over a link is the fluid fair queueing model <ref> [5, 11] </ref>. <p> There are several packet-level algorithmic implementations of this model, such as WFQ <ref> [5] </ref>, WF 2 Q [1], SCFQ [7], STFQ [8], etc. Essentially, the goal of each of these algorithms is to serve packets in an order that approximates fluid fair queueing as closely as possible. <p> By varying the transition probabilities, we generate a range of error patterns in the wireless channels, ranging from highly bursty to Bernoulli distributed errors. 3 Wireless Fluid Fair Queueing As described in Section 1, the Fluid Fair Queueing model <ref> [5] </ref> treats each packet flow as a fluid flow. <p> that a flow receives in the IWFQ algorithm is never behind the service that it would receive in the wireless fluid fair queueing model by more than L P (for the same reason that the service in WFQ is never behind the service in FFQ by more than L P <ref> [5] </ref>). For error-free service, IWFQ and WFQ are identical. When some flows perceive short error-bursts (i.e. neither lags nor leads exceed their bounds), IWFQ performs local adjustments in channel allocation in order to compensate the flows for their channel errors. <p> It further avoid penalizing the less error-prone sources (Sources 1 thorough 4) by up per bounding the number of credits and debits. 9 Related Work Fair packet scheduling algorithms have been the subject of intensive study in networking literature, particularly since the weighted fair queueing (WFQ) algorithm was proposed in <ref> [5] </ref>. The properties of WFQ were analyzed in [5, 12]. Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) [7] algorithm and WF 2 Q [1]. <p> The properties of WFQ were analyzed in <ref> [5, 12] </ref>. Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) [7] algorithm and WF 2 Q [1]. Recent modifications to accommodate time-varying server capacity include STFQ [8].
Reference: [6] <author> M. Gerla and J. T. Tsai. </author> <title> "Multicluster Mobile Multimedia Network," </title> <journal> ACM Baltzer Journal of Wireless Networks, </journal> <month> August </month> <year> 1995. </year>
Reference-contexts: Typically, most related work on fairness in wireless channels approach it from a network-centric view (e.g. probability of channel access is inversely proportional to the contention perceived at the location of the host [3]), or provide fairly simplistic definitions of fairness <ref> [6] </ref>. In particular, most of the work in this area has been performed from the perspective of wireless medium access, where the empha-sis has been on the mechanisms of channel access once the scheduling algorithm has been worked out [6, 9, 10], rather than the other way around. <p> In particular, most of the work in this area has been performed from the perspective of wireless medium access, where the empha-sis has been on the mechanisms of channel access once the scheduling algorithm has been worked out <ref> [6, 9, 10] </ref>, rather than the other way around. In recent related work, some solutions to providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored [4, 10].
Reference: [7] <author> S. Golestani, </author> <title> "A self-clocked fair queueing scheme for broadband applications," </title> <booktitle> Proc. IEEE INFOCOM'94, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: There are several packet-level algorithmic implementations of this model, such as WFQ [5], WF 2 Q [1], SCFQ <ref> [7] </ref>, STFQ [8], etc. Essentially, the goal of each of these algorithms is to serve packets in an order that approximates fluid fair queueing as closely as possible. <p> The properties of WFQ were analyzed in [5, 12]. Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) <ref> [7] </ref> algorithm and WF 2 Q [1]. Recent modifications to accommodate time-varying server capacity include STFQ [8]. While most of the above algorithms can handle time-varying server capacity with minor or no modifications, none of them handle the case when the variation in the capacity is location-dependent.
Reference: [8] <author> P. Goyal, H. Vin, and H. Cheng, </author> <title> "Start-time fair queuing: a scheduling algorithm for integrated services packet switching networks," </title> <booktitle> Proc. of SIGCOMM'96, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: There are several packet-level algorithmic implementations of this model, such as WFQ [5], WF 2 Q [1], SCFQ [7], STFQ <ref> [8] </ref>, etc. Essentially, the goal of each of these algorithms is to serve packets in an order that approximates fluid fair queueing as closely as possible. <p> Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) [7] algorithm and WF 2 Q [1]. Recent modifications to accommodate time-varying server capacity include STFQ <ref> [8] </ref>. While most of the above algorithms can handle time-varying server capacity with minor or no modifications, none of them handle the case when the variation in the capacity is location-dependent.
Reference: [9] <author> M.J. Karol, Z. Liu, and K.Y. </author> <title> Eng. "An efficient demand-assignment multiple access protocol for wireless packet (ATM) networks," </title> <journal> ACM Journal on Wireless Networking, </journal> <month> December </month> <year> 1995. </year>
Reference-contexts: One of the highlights of our approach is the way in which control and data slots are integrated in the MAC framework. 6.2 Wireless Medium Access Protocol Our wireless medium access protocol has its origins in DQRUMA <ref> [9] </ref>. We divide time into frames, and each frame into slots (as described in Section 7, the frame size is not fixed, and the number of slots in a frame changes over time). A slot may be either a data slot or a control slot. <p> For a more detailed general discussion on MAC protocol issues, we refer the reader to <ref> [3, 9] </ref>. Identification of New and Backlogged Flows: The base station has a special downlink `broadcast' flow called the control flow, which has a flow id of &lt;0, downlink, 0&gt;. <p> In particular, most of the work in this area has been performed from the perspective of wireless medium access, where the empha-sis has been on the mechanisms of channel access once the scheduling algorithm has been worked out <ref> [6, 9, 10] </ref>, rather than the other way around. In recent related work, some solutions to providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored [4, 10].
Reference: [10] <author> A. Muir and J. J. Garcia-Luna-Aceves, </author> <title> "Supporting real-time multimedia traffic in a wireless LAN," </title> <booktitle> Proc. SPIE Multimedia Computing and Networking 1997, </booktitle> <month> February </month> <year> 1997. </year>
Reference-contexts: Acknowledgements have been used in several medium access protocols <ref> [3, 10] </ref> for similar purposes. One-Step Prediction: Since errors are bursty and errors in successive slots are highly correlated, we perform a one-step channel prediction by monitoring the channel condition in the previous slot. <p> In particular, most of the work in this area has been performed from the perspective of wireless medium access, where the empha-sis has been on the mechanisms of channel access once the scheduling algorithm has been worked out <ref> [6, 9, 10] </ref>, rather than the other way around. In recent related work, some solutions to providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored [4, 10]. <p> In recent related work, some solutions to providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored <ref> [4, 10] </ref>. The underlying idea is to combine the best features of some contention-based schemes like CSMA and contention-free schemes like TDMA. Performance analysis in terms of throughput and delay has been obtained [4, 10]. However, there are three major limitations of this approach. <p> providing performance guarantees in the presence of the channel contention and dynamic reservation problems have been explored <ref> [4, 10] </ref>. The underlying idea is to combine the best features of some contention-based schemes like CSMA and contention-free schemes like TDMA. Performance analysis in terms of throughput and delay has been obtained [4, 10]. However, there are three major limitations of this approach. Firstly, channel errors and packet loss during transmission are ignored; second, the issue of location-dependent channel capacity is addressed only partially (as a function of contention); lastly, the scheduling issues in the higher level are typically unaddressed.
Reference: [11] <author> A. Parekh. </author> <title> "A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks," </title> <type> PhD Thesis, </type> <institution> MIT LAboratory for Information and Decision Systems, </institution> <note> Technical Report LIDS-TR-2089 1992. </note>
Reference-contexts: In this work, we first propose a precisely quantifiable definition of fairness and then describe algorithms for packet scheduling in wireless networks to achieve such fairness. In wireline networks, a popular model for packet scheduling over a link is the fluid fair queueing model <ref> [5, 11] </ref>. <p> Thus, WPS modifies the basic weighted round robin scheduling algorithm in order to accommodate location-dependent and bursty wireless channel errors. The following are the key features of the WPS algorithm: * Spreading: generates a slot allocation identical to WFQ <ref> [11] </ref> or WF 2 Q when all flows are backlogged. * Swapping within frame: when a flow cannot transmit in its slot because of channel error, it tries to swaps its slot with another backlogged flow which has (a) been allocated a slot later in the same frame, and (b) perceives
Reference: [12] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks: the single-node case," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(3), </volume> <pages> pp. 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Fact 2 For any lagging slot s of flow i at time t, its finish tag is no greater than that of any non-lagging slot, i.e. it is served with higher priority. The following results regarding error-free fluid fair queueing (FFQ) and error-free WFQ 3 have been proved in <ref> [12] </ref>, and are included here for quick reference. 2 In this section, slots refer to logical slots rather than physical time slots. 3 Error-free FFQ and error-free WFQ refer to FFQ and WFQ, respectively, when all the channels are error free. Lemma 1 [12] Let ~ S i (t; t) and <p> error-free WFQ 3 have been proved in <ref> [12] </ref>, and are included here for quick reference. 2 In this section, slots refer to logical slots rather than physical time slots. 3 Error-free FFQ and error-free WFQ refer to FFQ and WFQ, respectively, when all the channels are error free. Lemma 1 [12] Let ~ S i (t; t) and S fl i (t; t) be the amount of flow i traffic (in bits, not packets) served under the fluid fair queueing and the error-free WFQ in the interval [t; t], for all times t and flows i: ~ S i (0; t <p> The properties of WFQ were analyzed in <ref> [5, 12] </ref>. Several modifications to WFQ have been proposed to address its computational complexity or improve the performance of WFQ, two notable ones being the self-clocked fair queueing (SCFQ) [7] algorithm and WF 2 Q [1]. Recent modifications to accommodate time-varying server capacity include STFQ [8].
Reference: [13] <author> L. Zhang, </author> <title> "Virtual Clock: a new traffic control algorithm for packet switching networks," </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> vol. 9, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The traditional fluid fair queueing model does not need to address this issue since in a wireline model, either all flows are permitted to transmit or none of them is. In the Virtual Clock model <ref> [13] </ref>, when a flow has nothing to transmit during a time window, it can reclaim its missed share of the channel capacity at a later time. <p> In addition to the fair queueing paradigm, there are several other paradigms for fair allocation of a shared channel (surveyed comprehensively in [14]). One such approach, which proposes to achieve long-term fairness at the expense of penalizing flows that use otherwise idle capacity, is Virtual Clock <ref> [13] </ref>. Section 3 points out the fundamental differences in the compensation model for IWFQ and Virtual Clock. While wireline fair scheduling has been extensively researched, wireless fair scheduling is relatively unchartered territory.
Reference: [14] <author> H. Zhang, </author> <title> "Service disciplines for guaranteed performance service in packet-switching networks," </title> <journal> Proc. of IEEE, </journal> <volume> 83(10), </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: In addition to the fair queueing paradigm, there are several other paradigms for fair allocation of a shared channel (surveyed comprehensively in <ref> [14] </ref>). One such approach, which proposes to achieve long-term fairness at the expense of penalizing flows that use otherwise idle capacity, is Virtual Clock [13]. Section 3 points out the fundamental differences in the compensation model for IWFQ and Virtual Clock.
References-found: 14

