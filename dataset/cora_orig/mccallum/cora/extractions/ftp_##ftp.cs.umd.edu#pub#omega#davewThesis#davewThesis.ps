URL: ftp://ftp.cs.umd.edu/pub/omega/davewThesis/davewThesis.ps
Refering-URL: http://www.haverford.edu/cmsc/davew/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Constraint-Based Array Dependence Analysis  have developed a new general-purpose approach to the analysis of array calculations.  
Author: David G. Wonnacott, 
Degree: Doctor of Philosophy, 1995 Dissertation directed by: William Pugh  
Affiliation: Department of Computer Science  
Note: Abstract Title of Dissertation:  I  This approach produces information that can be used to guide the  
Abstract: Existing compilers rely on array data dependence analysis as their primary source of information about calculations involving arrays. This analysis technique focuses on answering questions about the possibility of memory aliasing. Information about memory aliasing can be used to guide program transformations that reorder or parallelize the iterations of one or more loops. A number of recent studies have shown the need for other kinds of transformations, whose legality cannot be determined from the results of traditional array dependence analysis. This shortcoming stems, not from limitations on our ability to answer questions about memory aliasing, but from the fact that we are asking the wrong question. Other researchers have developed special-purpose techniques to test the legality of one or the other of these new transformations. 
Abstract-found: 1
Intro-found: 1
Reference: [ACK81] <author> F. E. Allen, J. Cocke, and K. Kennedy. </author> <title> Reduction of operator strength. </title> <editor> In S. S. Muchnick and N. D. Jones, editors, </editor> <title> Program Flow Analysis, </title> <booktitle> chapter 3, </booktitle> <pages> pages 79-101. </pages> <publisher> Prentice Hall, </publisher> <year> 1981. </year>
Reference: [ASU86] <author> Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman. </author> <booktitle> Compilers: Principles, Techniques and Tools. </booktitle> <publisher> Addison Wesley, </publisher> <year> 1986. </year>
Reference: [B + 89] <author> M. Berry et al. </author> <title> The PERFECT Club benchmarks: Effective performance evaluation of supercomputers. </title> <journal> International Journal of Supercomputing Applications, </journal> <volume> 3(3) </volume> <pages> 5-40, </pages> <month> March </month> <year> 1989. </year>
Reference: [Ban90] <author> U. Banerjee. </author> <title> Unimodular transformations of double loops. </title> <booktitle> In Proc. of the 3rd Workshop on Programming Languages and Compilers for Parallel Computing, </booktitle> <pages> pages 192-219, </pages> <address> Irvine, CA, </address> <month> August </month> <year> 1990. </year>
Reference: [Ban93] <author> U. Banerjee. </author> <title> Loop Transformations for Restructuring Compilers: The Foundations. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference: [BK89] <author> Vasanth Balasundaram and Ken Kennedy. </author> <title> A technique for summarizing data access and its use in parallelism enhancing transformations. </title> <booktitle> In ACM SIGPLAN'89 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 41-53, </pages> <year> 1989. </year> <month> 140 </month>
Reference: [Ble75] <author> W. W. Bledsoe. </author> <title> A new method for proving certain presburger formulas. In Advance Papers, </title> <booktitle> 4th Int. Joint Conference on Artif. Intell., </booktitle> <address> Tibilisi, Georgia, U.S.S.R, </address> <year> 1975. </year>
Reference: [Blu92] <author> William Joseph Blume. </author> <title> Success and limitations in automatic paralleliza-tion of the Perfect benchmarks T M programs. </title> <type> Master's thesis, </type> <institution> Dept. of Computer Science, U. of Illinois at Urbana-Champaign, </institution> <year> 1992. </year>
Reference: [BMO90] <author> R. A. Ballance, A. B. Maccabe, and K. J. Ottenstein. </author> <title> The program dependence Web. </title> <booktitle> Proc. SIGPLAN'90 Symp. on Compiler Construction, </booktitle> <pages> pages 257-271, </pages> <month> June </month> <year> 1990. </year> <journal> Published as SIGPLAN Notices Vol. </journal> <volume> 25, No. </volume> <pages> 6. </pages>
Reference: [Bra88] <author> Thomas Brandes. </author> <title> The importance of direct dependences for automatic parallelism. </title> <booktitle> In Proc of 1988 International Conference on Supercomputing, </booktitle> <pages> pages 407-417, </pages> <month> July </month> <year> 1988. </year>
Reference: [CBF95] <author> Jean-Fran~cois Collard, Denis Barthou, and Paul Feautrier. </author> <title> Fuzzy array dataflow analysis. </title> <booktitle> In Proc. of the 5th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, </booktitle> <pages> pages 92-101, </pages> <month> July </month> <year> 1995. </year>
Reference: [CCKT86] <author> D. Callahan, K. D. Cooper, K. Kennedy, and L. Torczon. </author> <title> Interprocedural constant propagation. </title> <booktitle> In ACM SIGPLAN '86 Symposium on Compiler Construction, </booktitle> <pages> pages 152-161, </pages> <month> June </month> <year> 1986. </year>
Reference: [CF94] <author> Jean-Fran~cois Collard and Paul Feautrier. </author> <title> Fuzzy array dataflow analysis. </title> <type> Technical Report Research Report N o 94-21, </type> <institution> Labora-toire de l'Informatique du Parallelisme, Ecolo Normal Superieure de Lyon, Instiut IMAG, </institution> <month> July </month> <year> 1994. </year> <note> Postscript available as lip.ens-lyon.fr:pub/LIP/RR/RR94/RR94-21.ps.Z. </note>
Reference: [CFR + 89] <author> R. Cytron, J. Ferrante, B. K. Rosen, M. N. Wegman, and F. K. Zadeck. </author> <title> An efficient method of computing static single assignment form. </title> <booktitle> Conf. Rec. 141 Sixteenth ACM Symp. on Principles of Programming Languages, </booktitle> <pages> pages 25-35, </pages> <month> January </month> <year> 1989. </year>
Reference: [Cha93] <author> Vijay Chandru. </author> <title> Variable elimination in linear constraints. </title> <journal> The Computer Journal, </journal> <volume> 36(5) </volume> <pages> 463-472, </pages> <year> 1993. </year>
Reference: [CHK93] <author> K. Cooper, M. Hall, and K. Kennedy. </author> <title> A methodology for procedure cloning. </title> <journal> Computer Languages, </journal> <volume> 12(2), </volume> <month> April </month> <year> 1993. </year>
Reference: [CK88] <author> D. Callahan and K. Kennedy. </author> <title> Analysis of interprocedural side effects in a parallel environment. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <pages> pages 5 517-550, </pages> <year> 1988. </year>
Reference: [CK92] <author> Steve Carr and Ken Kennedy. </author> <title> Compiler blockability of numerical algorithms. </title> <booktitle> In Proceedings Supercomputing'92, </booktitle> <pages> pages 114-125, </pages> <address> Minneapolis, Minnesota, </address> <month> Nov </month> <year> 1992. </year>
Reference: [DE73] <author> G.B. Dantzig and B.C. Eaves. </author> <title> Fourier-Motzkin elimination and its dual. </title> <journal> Journal of Combinatorial Theory (A), </journal> <volume> 14 </volume> <pages> 288-297, </pages> <year> 1973. </year>
Reference: [Dow72] <author> P. Downey. </author> <title> Undeciability of presburger arithmetic with a single monadic predicate letter. </title> <type> Technical Report 18-72, </type> <institution> Center for Research in Computing Technology, Havard Univ., </institution> <year> 1972. </year>
Reference: [EHLP91] <author> R. Eigenmann, J. Hoeflinger, Z. Li, and D. Padua. </author> <title> Experience in the automatic parallelization of 4 Perfect benchmark programs. </title> <booktitle> In Proc. of the 4th Workshop on Programming Languages and Compilers for Parallel Computing, </booktitle> <month> August </month> <year> 1991. </year>
Reference: [EHP94] <author> R. Eigenmann, J. Hoeflinger, and D. Padua. </author> <title> On the automatic paralleliza-tion of the Perfect benchmarks. </title> <month> November </month> <year> 1994. </year> <month> 142 </month>
Reference: [Fea88a] <author> P. Feautrier. </author> <title> Parametric integer programming. </title> <journal> Operationnelle/Operations Research, </journal> <volume> 22(3) </volume> <pages> 243-268, </pages> <month> September </month> <year> 1988. </year>
Reference: [Fea88b] <author> Paul Feautrier. </author> <title> Array expansion. </title> <booktitle> In ACM Int. Conf. on Supercomputing, St Malo, </booktitle> <pages> pages 429-441, </pages> <year> 1988. </year>
Reference: [Fea91] <author> Paul Feautrier. </author> <title> Dataflow analysis of array and scalar references. </title> <journal> International Journal of Parallel Programming, </journal> <volume> 20(1), </volume> <month> February </month> <year> 1991. </year>
Reference-contexts: s 30.1 s 10.2 s SDSI 8446 31 s 51.7 s 12.8 s SRSI 4650 84 s 41.9 s 6.2 s TISI 580 6 s 6.4 s 1.6 s Total 17922 158 s 188.7 s 47.3 s Table 13.3: Other Characteristics of the Programs Studied Kernel Length My Analysis Times <ref> [Fea91] </ref> f77 -c (lines) memory- value- time fl -fast based based total time across 10 0.01s * 0.01s 0.6 s fl 0.7s burg 27 0.07s 0.08s 0.15s 5.6 s fl 1.2s relax 11 0.03s 0.02s 0.05s 1.7 s fl 0.6s gosser 19 0.03s 0.04s 0.07s 2.8 s fl 0.9s choles 21 <p> 11 0.03s 0.02s 0.05s 1.7 s fl 0.6s gosser 19 0.03s 0.04s 0.07s 2.8 s fl 0.9s choles 21 0.01s * 0.01s 2.6 s fl 0.7s lanczos 55 0.16s 0.18s 0.34s 12.6s fl 2.9s yacobi 50 1.31s 1.10s 2.41s 81.9s fl 1.9s Table 13.4: Analysis Times for Programs Given in <ref> [Fea91] </ref> * Feautrier's times were measured on a "low-end SPARCstation" 131 time, even when applied only in the limited case of "privatization analysis". This suggests that it is too expensive for general use in uniprocessor compilers.
Reference: [Fea92a] <author> Paul Feautrier. </author> <title> Some efficient solutions to the affine scheduling problem, Part I, One-dimensional time. </title> <journal> Int. J. of Parallel Programming, </journal> <volume> 21(5), </volume> <month> Oct </month> <year> 1992. </year> <note> Postscript available as pub.ibp.fr:ibp/reports/masi.92/78.ps.Z. </note>
Reference: [Fea92b] <author> Paul Feautrier. </author> <title> Some efficient solutions to the affine scheduling problem, Part II, Multidimensional time. </title> <journal> Int. J. of Parallel Programming, </journal> <volume> 21(6), </volume> <month> Dec </month> <year> 1992. </year> <note> Postscript available as pub.ibp.fr:ibp/reports/masi.92/28.ps.Z. </note>
Reference: [Fea94] <author> Paul Feautrier. </author> <title> Toward automatic distribution. </title> <journal> Parallel Processing Letters, </journal> <volume> 4(3) </volume> <pages> 233-244, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: For example, "communication analysis" (analysis of the flow of values) has been used to guide a number of steps during compilation for distributed memory machines, including generation of message sends, elimination of unnecessary barrier synchronizations [Tse95], and distribution of computation <ref> [Fea94] </ref>. Information about communication can be found easily for compilers that rely on the owner-computes rule, as in the work of Tseng [Tse95]. If this rule is relaxed, as in the work of Feautrier [Fea94], the analysis becomes more complex; my value-based dependence relations could be used for communication analysis in <p> machines, including generation of message sends, elimination of unnecessary barrier synchronizations [Tse95], and distribution of computation <ref> [Fea94] </ref>. Information about communication can be found easily for compilers that rely on the owner-computes rule, as in the work of Tseng [Tse95]. If this rule is relaxed, as in the work of Feautrier [Fea94], the analysis becomes more complex; my value-based dependence relations could be used for communication analysis in this context. I have also made contributions to the area of constraint manipulation; these techniques are needed if I am to perform my analysis quickly.
Reference: [Fue82] <author> M. Fuerer. </author> <title> The complexity of presburger arithmetic with bounded quantifier alternation depth. </title> <journal> Theoretical Computer Science, </journal> <volume> 18(1) </volume> <pages> 105-111, </pages> <month> April </month> <year> 1982. </year>
Reference: [GF95] <author> Anwar M. Ghuloum and Allan L. Fisher. </author> <title> Flattening and parallelizing irregular, recurrent loop nests. </title> <booktitle> In Proc. of the 5th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, </booktitle> <pages> pages 58-67, </pages> <month> July </month> <year> 1995. </year> <month> 143 </month>
Reference: [GJ79] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freemand and Company, </publisher> <year> 1979. </year>
Reference: [GS90] <author> Thomas Gross and Peter Steenkiste. </author> <title> Structured dataflow analysis for arrays and its use in an optimizing compiler. </title> <journal> Software Practice and Experience, </journal> <volume> 20 </volume> <pages> 133-155, </pages> <month> February </month> <year> 1990. </year>
Reference: [HKK + 93] <author> M. W. Hall, T. Karvey, K. Kennedy, N. McIntosh, K.S. McKinley, J. D. Oldham, M. Paleczny, and G. Roth. </author> <title> Experiences using the parascope editor: an interactive parallel programming tool. </title> <booktitle> In Principles and Practice of Parallel Programming, </booktitle> <month> April </month> <year> 1993. </year>
Reference: [HLL92] <author> Tien Huynh, Catherine Lassez, and Jean-Louis Lassez. </author> <title> Practical issues on the projection of polyhedral sets. </title> <journal> Annals of mathematics and artificial intelligence, </journal> <month> November </month> <year> 1992. </year>
Reference: [HP91] <author> M. Haghighat and C. Polychronopoulos. </author> <title> Symbolic dependence analysis for high-performance parallelizing compilers. </title> <booktitle> In Advances In Languages And Compilers for Parallel Processing, </booktitle> <month> August </month> <year> 1991. </year>
Reference: [Imb93] <author> Jean-Louis Imbert. </author> <title> Fourier's elimination: Which to choose? In PCPP 93, </title> <year> 1993. </year>
Reference: [JM87] <author> Farnam Jahanian and Aloysius Ka-Lau Mok. </author> <title> A graph-theoretic approach for timing analysis and its implementation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(8):961-975, </volume> <month> August </month> <year> 1987. </year>
Reference: [KK67] <author> G. Kreisel and J. L. Krevine. </author> <title> Elements of Mathematical Logic. </title> <publisher> North-Holland Pub. Co., </publisher> <year> 1967. </year> <month> 144 </month>
Reference: [KMP + 95] <author> Wayne Kelly, Vadim Maslov, William Pugh, Evan Rosser, Tatiana Shpeis--man, and David Wonnacott. </author> <title> The Omega Library interface guide. </title> <type> Technical Report CS-TR-3445, </type> <institution> Dept. of Computer Science, University of Maryland, College Park, </institution> <month> March </month> <year> 1995. </year>
Reference: [KMT90] <author> Ken Kennedy, Kathryn McKinly, and Chau-Wen Tseng. </author> <title> Interactive parallel programming using the parascope editor. </title> <institution> Technical Report RICE COMP TR90-137, Dept. of Computer Science, Rice University, </institution> <month> October </month> <year> 1990. </year>
Reference: [KP95] <author> Wayne Kelly and William Pugh. </author> <title> A unifying framework for iteration reordering transformations. </title> <booktitle> In Proceedings of the IEEE First International Conference on Algorithms And Architectures for Parallel Processing, </booktitle> <address> Bris-bane, Australia, </address> <month> April </month> <year> 1995. </year>
Reference: [Li92] <author> Zhiyuan Li. </author> <title> Array privatization for parallel execution of loops. </title> <booktitle> In Proc. of the 1992 International Conference on Supercomputing, </booktitle> <pages> pages 313-322, </pages> <month> July </month> <year> 1992. </year>
Reference: [LM69] <author> E. S. Lowry and C. W. Medlock. </author> <title> Object code optimization. </title> <journal> Communications of the ACM, </journal> <volume> 12(1) </volume> <pages> 13-22, </pages> <year> 1969. </year>
Reference: [MAL92] <author> Dror E. Maydan, Saman P. Amarasinghe, and Monica S. Lam. </author> <title> Data dependence and data-flow analysis of arrays. </title> <booktitle> In 5th Workshop on Languages and Compilers for Parallel Computing (Yale University tech. report YALEU/DCS/RR-915), </booktitle> <pages> pages 283-292, </pages> <month> August </month> <year> 1992. </year>
Reference: [MAL93] <author> Dror E. Maydan, Saman P. Amarasinghe, and Monica S. Lam. </author> <title> Array data-flow analysis and its use in array privatization. </title> <booktitle> In ACM '93 Conf. on Principles of Programming Languages, </booktitle> <month> January </month> <year> 1993. </year> <month> 145 </month>
Reference: [Mas94] <author> Vadim Maslov. </author> <title> Lazy array data-flow dependence analysis. </title> <booktitle> In ACM '94 Conf. on Principles of Programming Languages, </booktitle> <month> January </month> <year> 1994. </year>
Reference: [May92] <author> Dror Eliezer Maydan. </author> <title> Accurate Analysis of Array References. </title> <type> PhD thesis, </type> <institution> Computer Systems Laboratory, Stanford U., </institution> <month> September </month> <year> 1992. </year>
Reference: [McK90] <author> Kathryn S. McKinley. </author> <title> Dependence analysis of arrays subscripted by index arrays. </title> <institution> Technical Report RICE COMP TR91-162, Dept. of Computer Science, Rice University, </institution> <month> December </month> <year> 1990. </year>
Reference: [MHL91] <author> D. E. Maydan, J. L. Hennessy, and M. S. Lam. </author> <title> Efficient and exact data dependence analysis. </title> <booktitle> In ACM SIGPLAN'91 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 1-14, </pages> <month> June </month> <year> 1991. </year>
Reference: [MP94] <author> Vadim Maslov and William Pugh. </author> <title> Simplifying polynomial constraints over integers to make dependence analysis more precise. </title> <booktitle> In CONPAR, </booktitle> <year> 1994. </year>
Reference: [Nel78] <author> C. G. Nelson. </author> <title> An o(n logn ) algorithm for the two-variable-per-constraint linear programming satisfiablility problem. </title> <type> Technical Report AIM-319, </type> <institution> Stanford University, Department of Computer Science, </institution> <year> 1978. </year>
Reference: [Opp78] <author> D. Oppen. </author> <title> A 2 2 2 pn upper bound on the complexity of presburger arithmetic. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 16(3) </volume> <pages> 323-332, </pages> <month> July </month> <year> 1978. </year>
Reference: [PEH + 93] <author> David A. Padua, Rudolf Eigenmann, Jay Hoelflinger, Paul Peterson, Peng Tu, Stephen Weatherford, and Keith Faigin. </author> <title> Polaris: A new-generation parallelizing compiler for mpps. CSRD Rpt. </title> <type> 1306, </type> <institution> Dept. of Computer Science, University of Illinois at Urbana-Champaign, </institution> <month> June </month> <year> 1993. </year> <month> 146 </month>
Reference: [PP93] <author> Paul M. Petersen and David A. Padua. </author> <title> Static and dynamic evaluation of data dependence analysis. </title> <booktitle> In International Conference on Supercomputers, </booktitle> <month> July </month> <year> 1993. </year>
Reference: [Pug91] <author> William Pugh. </author> <title> Uniform techniques for loop optimization. </title> <booktitle> In 1991 International Conference on Supercomputing, </booktitle> <pages> pages 341-352, </pages> <address> Cologne, Germany, </address> <month> June </month> <year> 1991. </year>
Reference: [Pug92] <author> William Pugh. </author> <title> The Omega test: a fast and practical integer programming algorithm for dependence analysis. </title> <journal> Communications of the ACM, </journal> <volume> 8 </volume> <pages> 102-114, </pages> <month> August </month> <year> 1992. </year>
Reference: [Pug93] <author> William Pugh. </author> <title> Definitions of dependence distance. </title> <journal> Letters on Programming Languages and Systems, </journal> <month> September </month> <year> 1993. </year>
Reference: [Pug94] <author> William Pugh. </author> <title> Counting solutions to presburger formulas: How and why. </title> <booktitle> In SIGPLAN Conference on Programming Language Design and Implementation, </booktitle> <address> Orlando, FL, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: If this slice is small enough, the speedup from the information it produces may justify investing the time to run the slice before each run of the program itself. It may be possible to use Pugh's techniques for volume computation <ref> [Pug94] </ref> to estimate the cost of running the slice vs. the cost of sequential execution. 134 Chapter 15 Conclusion Existing compilers rely on array data dependence analysis as their primary source of information about calculations involving arrays.
Reference: [PW92a] <author> William Pugh and David Wonnacott. </author> <title> Eliminating false data dependences using the Omega test. </title> <booktitle> In SIGPLAN Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 140-151, </pages> <address> San Francisco, Califor-nia, </address> <month> June </month> <year> 1992. </year>
Reference: [PW92b] <author> William Pugh and David Wonnacott. </author> <title> Going beyond integer programming with the Omega test to eliminate false data dependences. </title> <type> Technical Report CS-TR-3191, </type> <institution> Dept. of Computer Science, University of Maryland, College Park, </institution> <month> December </month> <year> 1992. </year> <note> An earlier version of this paper appeared at the SIGPLAN PLDI'92 conference. 147 </note>
Reference: [PW92c] <author> William Pugh and David Wonnacott. </author> <title> Static analysis of upper bounds on parallelism. </title> <type> Technical Report CS-TR-2994, </type> <institution> Dept. of Computer Science, University of Maryland, College Park, </institution> <month> December </month> <year> 1992. </year>
Reference: [PW93] <author> William Pugh and David Wonnacott. </author> <title> An exact method for analysis of value-based array data dependences. </title> <booktitle> In Lecture Notes in Computer Science 768: Sixth Annual Workshop on Programming Languages and Compilers for Parallel Computing, </booktitle> <address> Portland, OR, </address> <month> August </month> <year> 1993. </year> <note> Springer-Verlag. </note>
Reference: [PW94a] <author> William Pugh and David Wonnacott. </author> <title> Experiences with constraint-based array dependence analysis. </title> <booktitle> In Principles and Practice of Constraint Programming Workshop, </booktitle> <address> Orcas Island, Washington, </address> <month> May </month> <year> 1994. </year>
Reference: [PW94b] <author> William Pugh and David Wonnacott. </author> <title> Static analysis of upper and lower bounds on dependences and parallelism. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 14(3) </volume> <pages> 1248-1278, </pages> <month> July </month> <year> 1994. </year>
Reference: [PW95] <author> William Pugh and David Wonnacott. </author> <title> Going beyond integer programming with the Omega test to eliminate false data dependences. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pages 204-211, </pages> <month> February </month> <year> 1995. </year>
Reference: [RF93] <author> Xavier Redon and Paul Feautrier. </author> <title> Detection of recurrences in sequential programs with loops. </title> <editor> In Arndt Bode, Mike Reeve, and Gottfried Wolf, editors, </editor> <booktitle> Proceedings of the 5th International Parallel Architectures and Languages Europe, </booktitle> <pages> pages 132-145, </pages> <month> June </month> <year> 1993. </year>
Reference: [Rib90] <author> Hudson Ribas. </author> <title> Obtaining dependence vectors for nested-loop computations. </title> <booktitle> In Proc of 1990 International Conference on Parallel Processing, </booktitle> <address> pages II-212 II-219, </address> <month> August </month> <year> 1990. </year>
Reference: [Ros90] <author> Carl Rosene. </author> <title> Incremental Dependence Analysis. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Rice University, </institution> <month> March </month> <year> 1990. </year> <month> 148 </month>
Reference: [SH91] <author> Jaswinder Pal Singh and John L. Hennessy. </author> <title> An empirical investigation of the effectiveness and limitations of automatic parallelization. </title> <booktitle> In Proceedings of the International Symposium on Shared Memory Multiprocessing, </booktitle> <month> April </month> <year> 1991. </year>
Reference: [Sho77] <author> Robert E. Shostak. </author> <title> On the sup-inf method for proving presburger formulas. </title> <journal> Journal of the ACM, </journal> <volume> 24(4) </volume> <pages> 529-543, </pages> <month> October </month> <year> 1977. </year>
Reference: [Sho79] <author> Robert E. Shostak. </author> <title> A practical decision procedure for arithmetic with function symbols. </title> <journal> Journal of the ACM, </journal> <volume> 26(2) </volume> <pages> 351-360, </pages> <month> April </month> <year> 1979. </year>
Reference: [Str88] <author> Gilbert Strang. </author> <title> Linear Algebra and its Applications. </title> <publisher> Harcourt Brace Jo-vanovich, Publishers, </publisher> <year> 1988. </year>
Reference: [SW94] <author> Eric Stoltz and Michael Wolfe. </author> <title> Detecting value-based scalar dependence. </title> <booktitle> In Proc. of the Seventh Annual Workshop on Languages and Compilers for Parallel Computing. </booktitle> <institution> Cornell University, </institution> <month> August </month> <year> 1994. </year>
Reference: [TP92] <author> Peng Tu and David Padua. </author> <title> Array privatization for shared and distributed memory machines. </title> <booktitle> In Workshop on Languages, Compilers, and Run-Time Environments for Distributed Memory Multiprocessors, </booktitle> <month> September </month> <year> 1992. </year>
Reference: [Tse95] <author> Chau-Wen Tseng. </author> <title> Compiler optimizations for eliminating barrier synchronization. </title> <booktitle> In Proc. of the 5th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, </booktitle> <pages> pages 144-155, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: For example, "communication analysis" (analysis of the flow of values) has been used to guide a number of steps during compilation for distributed memory machines, including generation of message sends, elimination of unnecessary barrier synchronizations <ref> [Tse95] </ref>, and distribution of computation [Fea94]. Information about communication can be found easily for compilers that rely on the owner-computes rule, as in the work of Tseng [Tse95]. <p> used to guide a number of steps during compilation for distributed memory machines, including generation of message sends, elimination of unnecessary barrier synchronizations <ref> [Tse95] </ref>, and distribution of computation [Fea94]. Information about communication can be found easily for compilers that rely on the owner-computes rule, as in the work of Tseng [Tse95]. If this rule is relaxed, as in the work of Feautrier [Fea94], the analysis becomes more complex; my value-based dependence relations could be used for communication analysis in this context.
Reference: [Tu95] <author> Peng Tu. </author> <title> Automatic Array Privatization and Demand-Driven Symbolic Analysis. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, University of Illinois at Urbana-Champaign, </institution> <year> 1995. </year> <month> 149 </month>
Reference: [Voe92a] <author> Valentin V. Voevodin. </author> <booktitle> Mathematical Foundations of Parallel Computing. </booktitle> <publisher> World Scientific Publishers, </publisher> <year> 1992. </year> <booktitle> World Scientific Series in Computer Science, </booktitle> <volume> vol. </volume> <pages> 33. </pages>
Reference: [Voe92b] <author> Vladimir V. Voevodin. </author> <title> Theory and practice of parallelism detection in sequential programs. </title> <journal> Programming and Computer Software (Program-mirovaniye), </journal> <volume> 18(3), </volume> <month> May </month> <year> 1992. </year>
Reference: [Wei84] <author> M. Weiser. </author> <title> Program slicing. </title> <journal> IEEE Transactions on Software Engineering, </journal> <pages> pages 352-357, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: the techniques of Tu and Padua to perform this analysis. 14.3 Program Slicing In cases where static analysis can neither prove nor disprove a dependence, but the information needed for a run-time test is not available until after we are committed to sequential execution, we could run a program slice <ref> [Wei84] </ref> to test these conditions. My identification of which values determine a dependence helps me produce the smallest possible slice. If this slice is small enough, the speedup from the information it produces may justify investing the time to run the slice before each run of the program itself.
Reference: [Wol89] <author> M. J. Wolfe. </author> <title> Optimizing Supercompilers for Supercomputers. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
Reference: [Wol92] <author> Michael Wolfe. </author> <title> Beyond induction variables. </title> <booktitle> In SIGPLAN Conference on Programming Language Design and Implementation, </booktitle> <address> San Francisco, California, </address> <month> June </month> <year> 1992. </year>
Reference: [Wol95] <author> M. J. Wolfe. </author> <title> High Performance Compilers for Parallel Computing. </title> <publisher> Addi-son Wesley, </publisher> <year> 1995. </year>
Reference: [WT92] <author> M. J. Wolfe and C. Tseng. </author> <title> The Power test for data dependence. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(5) </volume> <pages> 591-601, </pages> <month> Septem-ber </month> <year> 1992. </year>
Reference: [ZC91] <author> Hans Zima and Barbara Chapman. </author> <title> Supercompilers for Parallel and Vector Computers. </title> <publisher> ACM Press, </publisher> <year> 1991. </year> <month> 150 </month>
References-found: 84

