URL: http://www.cs.colostate.edu/~ftppub/TechReports/1997/tr97-111.ps.Z
Refering-URL: http://www.cs.colostate.edu/~ftppub/
Root-URL: 
Phone: Phone: (970) 491-5792 Fax: (970) 491-2466  
Title: Hypercubes  
Author: Shahram Latifi Myung Hoon Lee and Pradip K. Srimani 
Keyword: Near-optimal Path-based Wormhole  
Date: October 1-3, 1997,  
Web: WWW: http://www.cs.colostate.edu  
Address: Fort Collins, CO 80523-1873  Nevada, Las Vegas, NV 89154-4026  Nevada, Las Vegas, NV 89154-4026  Ft. Collins, CO 80523  
Affiliation: Computer Science Department Colorado State University  New Orleans, Louisiana Department of Electrical Engineering, University of  Department of Electrical Engineering, University of  Department of Computer Science, Colorado State University,  
Note: Broadcast in  To appear in the Proceedings of ISCA 10th INTERNATIONAL CONFERENCE ON PARALLEL DISTRIBUTED COMPUTING SYSTEMS (PDCS),  
Pubnum: Technical Report CS-97-111  
Abstract: Computer Science Technical Report 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. J. Dally and C. l. Seitz. </author> <title> The Torus routing chip. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 1(3) </volume> <pages> 187-196, </pages> <year> 1986. </year>
Reference-contexts: By dividing the packet into smaller units of data (called flits) and sending flits through intermediate nodes in a pipelined fashion, the communication latency can be made almost insensitive to distance between source and destination <ref> [1] </ref>. This scheme, known as wormhole routing, is implemented in modern multiprocessors. Reference [2] provides a good survey of this topic. Common wormhole-based networks will route data only to their final destination. In other words, the routers attached to intermediate nodes can only forward data without copying it. <p> Then k = r = 2. The steps taken by the algorithm are as follows. 1. Call Basic <ref> [00000000; 0; 1; 2] </ref> (the active cube: 00000XXX); this takes T (3) routing steps. 2. Call Basic [00000a 2 a 1 a 0 ; 3; 4; 5] (the active cubes: 00XXXa 2 a 1 a 0 ); this takes T (3) routing steps. 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray <ref> [5; 2; 0 5 ; 0; 1] </ref> (the active cube: 0 5 XX) 2. Call Gray [5; 2; 0 3 a 1 a 0 ; 2; 3] (the active cubes: 0XXa 1 a 0 ) 3.
Reference: [2] <author> L. M. Ni and P. K. McKinley. </author> <title> A survey of worm-hole routing techniques in direct networks. </title> <journal> IEEE Computer, </journal> <volume> 26(2) </volume> <pages> 92-96, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: By dividing the packet into smaller units of data (called flits) and sending flits through intermediate nodes in a pipelined fashion, the communication latency can be made almost insensitive to distance between source and destination [1]. This scheme, known as wormhole routing, is implemented in modern multiprocessors. Reference <ref> [2] </ref> provides a good survey of this topic. Common wormhole-based networks will route data only to their final destination. In other words, the routers attached to intermediate nodes can only forward data without copying it. <p> complexity will be given by s + s 0 ( 1) + mt , where s denotes the start-up latency at the source node, s 0 denotes the start-up latency at each of the intermediate nodes before the message reaches its destination, and t denotes the transmission time per flit <ref> [2] </ref>. This is under the assumption that there is no link congestion, i.e., no two messages contend for the same com <p>- munication channel at the same time (note that when there is link congestion modeling communication complexity for wormhole routing becomes the same as in circuit switched routing). <p> However, as noted by Ho et. al. in [7], it is technologically possible to add such reception capability at intermediate nodes without any degradation in communication efficiency; real-life examples include HARTS machine [5] and 2D mesh computers <ref> [2] </ref>. So, it makes sense to talk about implementation of communication primitives assuming the reception capability at intermediate nodes on a w-path. 3 Generalized Wormhole Routing in Hypercube Q n The network under study is the binary n-cube denoted by Q n . <p> Then k = r = 2. The steps taken by the algorithm are as follows. 1. Call Basic <ref> [00000000; 0; 1; 2] </ref> (the active cube: 00000XXX); this takes T (3) routing steps. 2. Call Basic [00000a 2 a 1 a 0 ; 3; 4; 5] (the active cubes: 00XXXa 2 a 1 a 0 ); this takes T (3) routing steps. 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray <ref> [5; 2; 0 5 ; 0; 1] </ref> (the active cube: 0 5 XX) 2. Call Gray [5; 2; 0 3 a 1 a 0 ; 2; 3] (the active cubes: 0XXa 1 a 0 ) 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray [5; 2; 0 5 ; 0; 1] (the active cube: 0 5 XX) 2. Call Gray <ref> [5; 2; 0 3 a 1 a 0 ; 2; 3] </ref> (the active cubes: 0XXa 1 a 0 ) 3.
Reference: [3] <author> P. K. McKinley, Y. J. Tsai, and D. Robinson. </author> <title> Collective communication in wormhole routed massively parallel computers. </title> <journal> IEEE Computer, </journal> <volume> 28(12) </volume> <pages> 39-50, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: It is, however, possible to add flit-copying feature to intermediate nodes whereby these nodes can copy the flits as they pass by. This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes <ref> [3, 4, 5] </ref>. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port [6, 7], and one-port [4] communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits. <p> Then k = r = 2. The steps taken by the algorithm are as follows. 1. Call Basic [00000000; 0; 1; 2] (the active cube: 00000XXX); this takes T (3) routing steps. 2. Call Basic <ref> [00000a 2 a 1 a 0 ; 3; 4; 5] </ref> (the active cubes: 00XXXa 2 a 1 a 0 ); this takes T (3) routing steps. 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray [5; 2; 0 5 ; 0; 1] (the active cube: 0 5 XX) 2. Call Gray <ref> [5; 2; 0 3 a 1 a 0 ; 2; 3] </ref> (the active cubes: 0XXa 1 a 0 ) 3.
Reference: [4] <author> C. T. Ho and M. Y. Kao. </author> <title> Optimal broadcast on hypercube with wormhole and e-cube routing. </title> <booktitle> In Proceedings of International Conference on Parallel and Distributed Systems, </booktitle> <pages> pages 694-697, </pages> <year> 1993. </year>
Reference-contexts: It is, however, possible to add flit-copying feature to intermediate nodes whereby these nodes can copy the flits as they pass by. This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes <ref> [3, 4, 5] </ref>. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port [6, 7], and one-port [4] communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits. <p> This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes [3, 4, 5]. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port [6, 7], and one-port <ref> [4] </ref> communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits. <p> We assume the one-port communication model whereby each node can communicate with only one of its neighbors at any given step of the broadcast algorithm. In their study on hypercubes, Ho et. al <ref> [4] </ref> have chosen the diameter as the limit. The diameter limit combined with e-cube routing (routing dimensions in ascending order) avoids any deadlock. We generalize this assumption to the case where a w-path can be of length m, 1 &lt; m n. <p> The first algorithm employs Ho's algorithm as a subroutine and hence we adopt the following notation. Basic (SN; DS), where SN stands for the source node and DS stands for dimensions spanned, refers to Ho's broadcasting algorithm <ref> [4] </ref> which is applied to a subcube with the specified origin and dimensions. For example Basic (00001; 12) involves broadcasting from 00001 within the subcube 00XX1. <p> Then k = r = 2. The steps taken by the algorithm are as follows. 1. Call Basic [00000000; 0; 1; 2] (the active cube: 00000XXX); this takes T (3) routing steps. 2. Call Basic <ref> [00000a 2 a 1 a 0 ; 3; 4; 5] </ref> (the active cubes: 00XXXa 2 a 1 a 0 ); this takes T (3) routing steps. 3. <p> Table 1 shows the values of T c (n; m), T g (n; m) and T (n) for different combinations of values of n and m. We make the following observations: * Our cube-based algorithm becomes Ho's algorithm <ref> [4] </ref> when m = n and when m &lt; N , the cube- based algorithm performs worse than Ho's algorithm, but can accommodate arbitrary restriction on the w-path length m. * The GC based algorithm almost always outperforms the existing Ho's algorithm and at the same time can accommodate any w-path
Reference: [5] <author> D. D. Kandlur and K. G. Shin. </author> <title> Reliable broad-cast algorithms for HARTS. </title> <type> Technical Report CSE-TR-69-90, </type> <institution> University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1990. </year>
Reference-contexts: It is, however, possible to add flit-copying feature to intermediate nodes whereby these nodes can copy the flits as they pass by. This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes <ref> [3, 4, 5] </ref>. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port [6, 7], and one-port [4] communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits. <p> However, as noted by Ho et. al. in [7], it is technologically possible to add such reception capability at intermediate nodes without any degradation in communication efficiency; real-life examples include HARTS machine <ref> [5] </ref> and 2D mesh computers [2]. So, it makes sense to talk about implementation of communication primitives assuming the reception capability at intermediate nodes on a w-path. 3 Generalized Wormhole Routing in Hypercube Q n The network under study is the binary n-cube denoted by Q n . <p> Then k = r = 2. The steps taken by the algorithm are as follows. 1. Call Basic [00000000; 0; 1; 2] (the active cube: 00000XXX); this takes T (3) routing steps. 2. Call Basic <ref> [00000a 2 a 1 a 0 ; 3; 4; 5] </ref> (the active cubes: 00XXXa 2 a 1 a 0 ); this takes T (3) routing steps. 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray <ref> [5; 2; 0 5 ; 0; 1] </ref> (the active cube: 0 5 XX) 2. Call Gray [5; 2; 0 3 a 1 a 0 ; 2; 3] (the active cubes: 0XXa 1 a 0 ) 3. <p> Then s = 2, k 0 = 2, r 0 = 1, and ff = 1. The broadcasting is done in 3 routing steps as follows. 1. Call Gray [5; 2; 0 5 ; 0; 1] (the active cube: 0 5 XX) 2. Call Gray <ref> [5; 2; 0 3 a 1 a 0 ; 2; 3] </ref> (the active cubes: 0XXa 1 a 0 ) 3.
Reference: [6] <author> D. F. Robinson and P. K. McKinley. </author> <title> Efficient multicast in all-port wormhole routed hypercubes. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 31 </volume> <pages> 126-140, </pages> <year> 1995. </year>
Reference-contexts: This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes [3, 4, 5]. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port <ref> [6, 7] </ref>, and one-port [4] communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits.
Reference: [7] <author> C. T. Ho and M Kao. </author> <title> Optimal broadcast in all-port wormhole routed hypercubes. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 6(2) </volume> <pages> 200-204, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: This model is called path-based routing and has been adopted by researchers to develop efficient multicast and broadcast algorithms for meshes and hypercubes [3, 4, 5]. Ho et. al. developed efficient broadcasting algorithm in hypercube based on all-port <ref> [6, 7] </ref>, and one-port [4] communication whereby a path is extended from source to destination in one routing step, and during this step all the intermediate nodes along the path will receive the flits. <p> In their study on wormhole broadcast in hypercubes, Ho et. al <ref> [7] </ref> have chosen n to be the size of the wormhole path for a hypercube with N = 2 n nodes. <p> The routing controller is normally connected to the node's local memory by one pair of input/output internal channel and hence an intermediate node on a w-path cannot, in general, store a copy of the passing message. However, as noted by Ho et. al. in <ref> [7] </ref>, it is technologically possible to add such reception capability at intermediate nodes without any degradation in communication efficiency; real-life examples include HARTS machine [5] and 2D mesh computers [2].
Reference: [8] <author> P. K. Mckinley, H. Xu, A. H. Esfahanian, and L. M. Ni. </author> <title> Unicast based multicast communication in wormhole routed networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12):12521264, </volume> <month> December </month> <year> 1994. </year>
Reference-contexts: routing derives from the fact that s s 0 and that when m is large and is small, the second term s 0 ( 1) becomes negligiblly small in other words, if the message travels a relatively small distance, the communication delay in wormhole routing becomes insensitive to the distance <ref> [8] </ref>. Experimental results are available [9] to verify this in case of hypercube networks; for an Intel iPSC/2 hypercube, it was measured that s = 0:7 ms, s 0 = 60s, and t = 0:36s.
Reference: [9] <author> C. T. Ho and M. T. Raghunath. </author> <title> Efficient com-munication primitives on hypercubes. </title> <journal> Journal of Concurrency: Practice and Experience, </journal> <volume> 4(6):427457, </volume> <month> September </month> <year> 1992. </year>
Reference-contexts: Experimental results are available <ref> [9] </ref> to verify this in case of hypercube networks; for an Intel iPSC/2 hypercube, it was measured that s = 0:7 ms, s 0 = 60s, and t = 0:36s.
Reference: [10] <author> Y. Saad and M. H. Shultz. </author> <title> Topological properties of hypercubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(7) </volume> <pages> 867-872, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: (3) = T (2) = 2, total number of routing steps taken by our algorithm is T (8; 3) = 6. 3.2 Gray-code based Broadcasting Algo <p>- rithm Our second algorithm for broadcasting in Q n with wormhole path length of m &lt; n is based on Gray codes (GCs) <ref> [10] </ref>. An n-bit GC contains 2 n binary codewords, each of length n bits, in which two adjacent codewords differ in exactly one bit. The GC sequence for a given n is not unique, and any arbitrary GC sequence can be used for wormhole broadcasting in our algorithm.
References-found: 10

