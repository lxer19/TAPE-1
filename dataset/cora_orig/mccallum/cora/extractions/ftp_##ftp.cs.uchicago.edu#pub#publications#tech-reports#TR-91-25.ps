URL: ftp://ftp.cs.uchicago.edu/pub/publications/tech-reports/TR-91-25.ps
Refering-URL: http://cs-www.uchicago.edu/publications/tech-reports/
Root-URL: 
Email: lilide@cs.uchicago.edu  
Title: ALGEBRAIC ASPECTS OF COMPLEXITY FUNCTIONS  positive integer i; P g P g i  
Author: Lide Li 
Note: and for all  F P is infinite.  
Date: August 27, 1991  
Address: 1100 E. 58th Chicago, IL60637  
Affiliation: University of Chicago Dept. of Computer Science  
Abstract: We introduce the algebraic structure of GapP (resp. ]P ) functions by formalizing them as a power series ring(resp. semiring), and a multiplicative group as well for all invertible functions. We investigate the algebraic properties of GapP related to subrings, ideals, and their connections with the complexity theory. We prove that for every GapP function g, P g = P g 1 . If S GapP has the property that it always contains a "hard" function for every finite subset, then P S = P [S] ; P S = P &lt;S&gt; , where [S] (resp. &lt; S &gt;) is the subring (resp. subgroup) generated by S. Moreover, P S = P [S] for all S if and only if P = P P . We also conclude that the class of rational series, which is well known in automata theory, is contained in F P . Furthermore F P itself (here we consider all invertible functions only) is a subgroup. We prove that all functions in the same coset with respect to F P is Turing equivalent and every Turing degree inside GapP except F P contains infinitely many cosets . Therefore P 6= P P if and only if the index of
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Babai and L. Fortnow, Arithmetization: </author> <title> A new method in structural complexity theory, in Computational Complexity, </title> <type> 1(1), </type> <year> 1991, </year> <pages> 41-67. </pages>
Reference: [2] <author> R. Beigel, J. Gill, and U. Hertrampf, </author> <title> Counting classes: thresholds, parity, </title> <booktitle> mods, and fewness, in Proc. 7th Symp. on Theoretical Aspects of Comp. Sci., Lecture Notes in Comp. Sci. </booktitle> <volume> 415(1990), </volume> <pages> 49-57. </pages>
Reference: [3] <author> S.A. Fenner, L.J. Fortnow and S.A. Kurtz, </author> <title> Gap-Definable counting classes, </title> <booktitle> in Proc. 6th Ann. IEEE Structures in Complexity Theory Conf., </booktitle> <year> 1991, </year> <pages> 30-42. </pages>
Reference-contexts: Valiant's ]P is defined as the class of functions that count the number of accepting paths of a nondeterministic polynomial time Turing machine on the given input [9]. Fenner, Fortnow and Kurtz's GapP is defined as the class of functions that computes the difference of of two ]P functions <ref> [3] </ref>. Clearly, the former is a subclass of the later. Many computational complexity classes have been studied using ]P and GapP functions, such as N P; U P; P P; P , Mod k P , C = P; SP P . <p> On the other hand, these function classes themselves have certain arithmetic closure properties such as closure under addition and multiplication. GapP is also closed under subtraction. Many closure properties of GapP functions have been studied in <ref> [3] </ref>. In the present paper we study the algebraic structure of GapP functions. First we formalize this class as a formal power series ring. A different version of the power series has been studied 1 2 in finite automata theory such as Salomaa and Soittola [8]. <p> L 2 GapF ew if 9g 2 GapP , a polynomial time predicate A, a polynomial q s.t. 8x, j g (x) j q (jxj) and x 2 L iff A (x; q (x)). GapF ew is known to be equal to SP P <ref> [3] </ref>. ffi A formal power series is a mapping f : fl ! R, where is alphabet and R is a ring. An alternative form is f = X f (w)w. Sometimes we also write f = X C w w, where C w is called the coefficient of w. <p> From the fact that g = ]M ]M , an induction on k will prove that gap N (w) = g 1 (w). The technique is similar to the proof of Closure Property 4 in <ref> [3] </ref>. The sum is taken from that 2 k1 terms, N works in polynomial time. 2 Examples 1. g = w2 fl g 1 = 1 a b.
Reference: [4] <author> M. Garey and D. Johnson, </author> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference: [5] <author> N. Jacobson, </author> <title> Basic Algebra I, II, W.H. </title> <publisher> Freeman and Company, </publisher> <year> 1985. </year>
Reference-contexts: Element r 2 R; r 6= 0 is called zero-divisor if 9s 2 R; s 6= 0 but r s = 0 or s r = 0. A ring without zero-divisor is called a domain. For more details, interested readers may refer to <ref> [5] </ref> and [15]. 3. The formal power series ring of GapP Definition 3.1.
Reference: [6] <author> J. Kobler, U. Schoning, S. Toda, J. Toran, </author> <title> Turing machine with few accepting computations and low sets for PP, </title> <booktitle> in Proc. 4th Ann. IEEE Structures in Complexity Theory Conf., </booktitle> <year> 1989, </year> <pages> 208-215. </pages>
Reference: [7] <author> R. Ladner, </author> <title> On the structure of polynomial time reducibility, </title> <journal> in Journal of ACM, </journal> <volume> Vol. 22, No. 1, </volume> <year> 1975, </year> <pages> 155-171. </pages>
Reference-contexts: This means either h 2 F P af = F P f or h 2 F P bg = F P g , and then g p f or f p g, a contradiction. 2 Applying Ladner's proof <ref> [7] </ref> to GapP functions, we have Lemma 4.15. If P 6= P P , then there exists two GapPfunctions which are not Turing comparable. 2 Theorem 4.16. P = P P if and only if for all S G; P S = P [S] . Proof.
Reference: [8] <author> A. Salomaa, M. Soittola, </author> <title> Automata-Theoretic Aspects of Formal Power Series, </title> <publisher> Springer-Verlag, </publisher> <year> 1978. </year>
Reference-contexts: In the present paper we study the algebraic structure of GapP functions. First we formalize this class as a formal power series ring. A different version of the power series has been studied 1 2 in finite automata theory such as Salomaa and Soittola <ref> [8] </ref>. Especially, the rational series are known to have very close relationship with regular languages. We prove that all rational series are in F P . <p> For any unit g 2 G; P g = P g 1 . 2 The following concepts and notations are from Salomaa and Soittola <ref> [8] </ref>. Definition 5.10. Let f 2 G with f (") = 0. Then the quasi-inverse of f is defined as f + = 1 X f n , Definition 5.11. <p> A series g 2 G is called rational if it can be constructed from polynomials by a finite number of applications of the operations of sum, product and quasi-inversion. In automata theory, the rational series (in sense of finite automata) are closely related to regular languages <ref> [8] </ref>. However, we have the following Theorem 5.12. All rational series are in FP. 12 Proof. All polynomials are clearly in F P . Suppose after k applications of the operations of sum, product and + , all resulting functions are in F P .
Reference: [9] <author> U. Sch oning, </author> <title> The power of counting, </title> <editor> A.L. Selman (editor), </editor> <title> Complexity Theory Retrospective, </title> <year> 1990. </year>
Reference-contexts: 1. Introduction The counting function classes play an important role in the complexity theory. Valiant's ]P is defined as the class of functions that count the number of accepting paths of a nondeterministic polynomial time Turing machine on the given input <ref> [9] </ref>. Fenner, Fortnow and Kurtz's GapP is defined as the class of functions that computes the difference of of two ]P functions [3]. Clearly, the former is a subclass of the later.
Reference: [10] <author> J. Simon, </author> <title> On the difference between the one and many (preliminary version), </title> <booktitle> in Automata, Languages, and Programming, Lecture Notes in Computer Science, </booktitle> <volume> vol. 52, </volume> <publisher> Springer, Berlin, </publisher> <pages> 480-491. </pages>
Reference: [11] <author> S. </author> <title> Toda, On the computational power of PP and P, </title> <booktitle> in Proc. 30th Ann. IEEE Symp. Foundations of Comp. Sci., </booktitle> <year> 1989, </year> <pages> 514-519. </pages>
Reference: [12] <author> S. Toda and M. Ogiwara, </author> <title> Counting classes are at least as hard as the polynomial-time hierarchy, </title> <booktitle> in Proc. 6th Ann. IEEE Structures in Complexity Theory Conf., </booktitle> <year> 1991, </year> <pages> 2-12. </pages>
Reference: [13] <author> S. Toda and O. Watanabe, </author> <title> Polynomial time 1-Turing reductions from ]P H to ]P </title> , 
Reference: [14] <author> L.G. Valiant, </author> <title> The complexity of computing the permanent, </title> <booktitle> Theoretical Computer Science 8 (1979), </booktitle> <pages> 189-201. </pages>
Reference: [15] <author> O. Zariski and P. Samuel, </author> <title> Commutative Algebra Vol I, II, </title> <publisher> Van Nostrand, Princeton, </publisher> <year> 1958. </year>
Reference-contexts: Element r 2 R; r 6= 0 is called zero-divisor if 9s 2 R; s 6= 0 but r s = 0 or s r = 0. A ring without zero-divisor is called a domain. For more details, interested readers may refer to [5] and <ref> [15] </ref>. 3. The formal power series ring of GapP Definition 3.1.
References-found: 15

