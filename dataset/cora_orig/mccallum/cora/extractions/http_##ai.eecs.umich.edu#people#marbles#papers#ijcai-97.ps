URL: http://ai.eecs.umich.edu/people/marbles/papers/ijcai-97.ps
Refering-URL: http://ai.eecs.umich.edu/people/marbles/homepage.html
Root-URL: http://www.eecs.umich.edu
Email: kgshin-@umich.edu  
Title: Development of Iterative Real-time Scheduler to Planner Feedback  
Author: Charles B. McVey Ella M. Atkins Edmund H. Durfee Kang G. Shin -mcvey, marbles, durfee, 
Address: 139 ATL, 1101 Beal Ave. Ann Arbor, MI 48109-2110  
Affiliation: University of Michigan  
Abstract: Planning for real-time applications involves decisions not only about what actions to take in what states to progress toward achieving goals (the traditional decision problem faced by AI planning systems), but also about how to realize those actions within hard real-time deadlines given the inherent limitations of an execution platform. Determining how to arrange actions in a sequence such that timely execution is guaranteed within constraints is a manifestation of the scheduling problem. All cases of the scheduling problem in any domain of nontrivial complexity are difficult to solve (NP-Hard). To more efficiently solve the real-time plan scheduling problem, we propose and analyze an iterative feedback/constraint relaxation method in which a scheduler and planner iteratively interact to efficiently develop a well-utilized schedule which includes as many planned actions as possible. This method has been successfully implemented within the Cooperative Intelligent Real-time Control Architecture (CIRCA). 
Abstract-found: 1
Intro-found: 1
Reference: [Atkins et al., 1996] <author> Ella M. Atkins, Edmund H. Durfee, and Kang G. Shin. </author> <title> Plan Development using Local Probabilistic Models. </title> <booktitle> In Uncertainty in Artificial Intelligence: Proceedings of the Twelfth Conference, </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: We have implemented and tested our feedback mechanisms in the context of a particular system, the Cooperative Intelligent Real-time Control Architecture (CIRCA) [Musliner et al., 1995], applied to automated aircraft control in flight simulation <ref> [Atkins et al., 1996] </ref>, a domain which demands strict real-time response. 2 Iterative Real-time Planning/Scheduling The process of planning can be thought of in three distinct stages: projecting combinations of modeled features forward in time to find reachable states, selecting actions to manipulate this set of reachable states, and determining constraints <p> Feedback Data Control Commands T r a n s i t i o n & G o a l Schedule or F e e d b a c k S c h e d u l i n g Requests Temporal/Action Transitions Initial State/Goals and transitions leading to the state <ref> [Atkins et al., 1996] </ref>. A cutoff threshold probability is used to limit state expansion. Actions are chosen by the planner to preempt any temporal transitions to failure, and hard real-time required TAPs are developed for these actions. <p> A new threshold message can occur either when the Scheduler is over or under constrained: the new value being either greater than or less than the previous threshold, respectively. 5 Testing Scheduler Feedback Extensions were introduced into the previous simulated flight domain knowledge base <ref> [Atkins et al., 1996] </ref> to model more potential dangers, forcing the planning and scheduling of more preemptive TAPs. The addition to the knowledge base consisted of modeling the possibility of colliding with other air traffic at any point in the flight.
Reference: [Atkins et al., 1997] <author> Ella M. Atkins, Edmund H. Durfee, and Kang G. Shin. </author> <title> Buying Time for Resource-Bounded Planning. </title> <note> To appear in AAAI-97 Workshop: Building Resource-Bounded Reasoning Systems Technical Report, </note> <month> July </month> <year> 1997. </year>
Reference: [Liu and Layland, 1973] <author> C. L. Liu and James W. Layland. </author> <title> Scheduling Algorithms for Multiprogramming in a Hard-Real-Time Environment. In Hard Real-Time Systems. </title> <publisher> IEEE Press, </publisher> <pages> pages 174-189, </pages> <year> 1988. </year>
Reference-contexts: The worst-case-execution-time (wcet) is the time that both the test and action together require to complete in the worst case. CIRCA builds plans and schedules based on worst case execution times to make real-time guarantees. A separation constraint, similar to a period in periodic scheduling literature <ref> [Liu and Layland, 1973] </ref> but subtly different, is calculated for each TAP which is to guarantee failure avoidance.
Reference: [Garvey et al., 1994] <author> Alan Garvey, Keith Decker, and Victor Lesser. </author> <title> A Negotiation-based Interface Between a Real-time Scheduler and a Decision-Maker. </title> <type> Technical Report 94-08, </type> <institution> University of Massachusetts Department of Computer Science, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: In this paper, we detail the development of scheduler feedback mechanisms intended to support the iterative formation of real-time guaranteed control plans. Unlike prior work in this field <ref> [Garvey et al., 1994] </ref> we propose a cooperative protocol in which a scheduler makes statespace search modification suggestions to the planner as opposed to presenting multiple schedules for acceptance based on various criteria. <p> For scheduler feedback to work effectively, however, the two must share some knowledge. How much knowledge should be shared and how to represent this shared knowledge is not clear. It is undesirable and impractical for the planner to share everything it knows about the global problem with the scheduler <ref> [Garvey et al., 1994] </ref>, and vice versa. The major question which remains, however, is the exact nature of the feedback provided by the scheduler such that the planners search is guided rather than relying on extensive blind generate and test cycles. <p> Alternatively, the planner could allow the scheduler to automatically explore variations of the task request, returning the best possible schedules for predefined criteria <ref> [Garvey et al., 1994] </ref>. However, dropping, adding, or changing the timing of a task could change the whole topology of the reachability graph, creating the need for increasing and/or decreasing the importance of many other tasks.
Reference: [Musliner et al., 1995] <author> David J. Musliner, Edmund H. Durfee, and Kang G. Shin. </author> <title> World Modeling for the Dynamic Construction of Real-Time Control Plans. </title> <journal> Artificial Intelligence, </journal> <volume> vol. 74, </volume> <pages> pp. 83-127, </pages> <year> 1995. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: Iterative scheduler/planner feedback as described in this paper is generally applicable to any system which can be mapped to a planner/scheduler agent-oriented model. We have implemented and tested our feedback mechanisms in the context of a particular system, the Cooperative Intelligent Real-time Control Architecture (CIRCA) <ref> [Musliner et al., 1995] </ref>, applied to automated aircraft control in flight simulation [Atkins et al., 1996], a domain which demands strict real-time response. 2 Iterative Real-time Planning/Scheduling The process of planning can be thought of in three distinct stages: projecting combinations of modeled features forward in time to find reachable states, <p> The scheduler uses this information to determine if scheduling is certainly infeasible before attempting any scheduling, or to determine appropriate feedback in the event that scheduling is unsuccessful. 3.2 The If-Time Server Using techniques from <ref> [Musliner et al., 1995] </ref>, we have implemented the scheduling of an if-time TAP server to use slack resources available in a schedule.
Reference: [Musliner, 1995] <author> David J. Musliner. </author> <title> Scheduling Issues Arising from Automated Real-Time System Design. </title> <institution> University of Maryland Department of Computer Science Technical Report CS-TR-3364, UMIACS-TR-94-118, </institution> <month> January </month> <year> 1995. </year>
Reference-contexts: This final approach has been taken in our implementation within CIRCA. 3 CIRCA Background CIRCA's realization of real-time AI emphasizes allowing the planning algorithms to be intelligent about real-time rather than forcing them to be intelligent in real-time <ref> [Musliner, 1995] </ref>. CIRCA's approach is achieved by separating the architecture into three distinct modules (Figure 1): the Planner, Scheduler, and the Real-Time Subsystem (RTS). The Planner includes a domainspecific knowledge base and a planner which generates TestAction Pairs or TAPs analogous to the tasks discussed above. <p> Critical transitions to failure are modeled to occur with a minimum delay time of D seconds, therefore it is only necessary that a TAP designed to preempt the failure execute at least once every D seconds, not precisely every D seconds (periodic) <ref> [Musliner, 1995] </ref>. The utilization of a TAP measures the minimum fraction of CPU time the TAP requires. It is defined as the ratio of its worst case execution time to its maximum separation constraint. <p> In testing with 2200 random scheduling requests, this heuristically aided binary search converges faster than or as fast as binary search in 51% and 27% of the cases respectively. 4 Feedback Scheduler Design 4.1 The Base Scheduler Schedules are built based on a separation constrained method of scheduling described in <ref> [Musliner, 1995] </ref>. The scheduler simulates the execution of a dynamic scheduler by maintaining a time counter and iteratively incrementing it as TAPs are chosen for execution. At each iteration, the TAP with the shortest slack time is initially chosen to be executed.
Reference: [Stefik, 1995] <author> Mark J. Stefik. </author> <title> Introduction to Knowledge Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, California, </address> <year> 1995. </year>
Reference-contexts: Decoupling planning from scheduling cannot be complete, however. Viewed as a configuration task <ref> [Stefik, 1995] </ref>, it is not the case that the selection of the component pieces of the plan can be done independently of trying to arrange them within the constraints of the execution system.
References-found: 7

