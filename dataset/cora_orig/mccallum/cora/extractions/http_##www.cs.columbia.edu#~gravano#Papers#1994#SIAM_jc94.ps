URL: http://www.cs.columbia.edu/~gravano/Papers/1994/SIAM_jc94.ps
Refering-URL: http://www.cs.columbia.edu/~gravano/publications.html
Root-URL: http://www.cs.columbia.edu
Title: Requirements for Deadlock-Free, Adaptive Packet Routing  
Author: Robert Cypher Luis Gravano yz 
Abstract: This paper studies the problem of deadlock-free packet routing in parallel and distributed architectures. We present three main results. First, we show that the standard technique of ordering the buffers so that every packet always has the possibility of moving to a higher ordered buffer is not necessary for deadlock-freedom. Second, we show that every deadlock-free, adaptive packet routing algorithm can be restricted, by limiting the adaptivity available, to obtain an oblivious algorithm which is also deadlock-free. Third, we show that any packet routing algorithm for a cycle or torus network which is free of deadlock and which uses only minimal length paths must require at least three buffers in some node. This matches the known upper bound of three buffers per node for deadlock-free, minimal packet routing on cycle and torus networks. fl A preliminary version of this paper appeared in the 1992 ACM Symp. on Principles of Distributed Computing y IBM Almaden Research Center, 650 Harry Rd., San Jose, CA 95120 z Computer Research and Advanced Applications Group, IBM Argentina, Buenos Aires, Argentina 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Baruch Awerbuch, Shay Kutten, and David Peleg. </author> <title> Efficient deadlock-free routing. </title> <booktitle> In Proc. ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 177-188, </pages> <year> 1991. </year>
Reference: [2] <author> Pablo E. Berman, Luis Gravano, Gustavo D. Pifarre, and Jorge L. C. Sanz. </author> <title> Adaptive deadlock- and livelock-free routing with all minimal paths in torus networks. </title> <booktitle> In Proc. ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 3-12, </pages> <year> 1992. </year> <month> 14 </month>
Reference: [3] <author> Andrew A. Chien and Jae H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. 19th Intl. Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference: [4] <author> Robert Cypher and Luis Gravano. </author> <title> Adaptive, deadlock-free packet routing in torus networks with minimal storage. </title> <booktitle> In Proc. Intl. Conf. on Parallel Processing, </booktitle> <pages> pages 204-211 (vol. III), </pages> <year> 1992. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock. <p> This matches the known upper bound of three buffers per node for deadlock-free, minimal routing on cycle [11] and torus networks <ref> [4] </ref>. The remainder of this paper is organized as follows. Definitions and a formal description of the routing model are given in Section 2.
Reference: [5] <author> W. J. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 36 </volume> <pages> 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference: [6] <author> J. Duato. </author> <title> Deadlock-free adaptive routing algorithms for multicomput-ers: Evaluation of a new algorithm. </title> <booktitle> In Proc. 3rd IEEE Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 840-847, </pages> <year> 1991. </year>
Reference: [7] <author> Sergio A. Felperin, Hernan Laffitte, Guillermo Buranits, and Jorge L.C. Sanz. </author> <title> Deadlock-free minimal packet routing in the torus network. </title> <type> Technical Report TR:91-22, </type> <institution> IBM Argentina, CRAAG, </institution> <year> 1991. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [8] <author> B. Gavish, P.M. Merlin, and P.J. Schweitzer. </author> <title> Minimal buffer requirements for avoiding store-and-forward deadlock. </title> <type> Technical Report RC 6672, </type> <institution> IBM T.J. Watson Research Center, </institution> <month> August </month> <year> 1977. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [9] <author> Christopher J. Glass and Lionel M. Ni. </author> <title> The turn model for adaptive routing. </title> <booktitle> In Proc. 19th Intl. Symposium on Computer Architecture, </booktitle> <pages> pages 278-287, </pages> <year> 1992. </year>
Reference: [10] <author> Inder S. Gopal. </author> <title> Prevention of store-and-forward deadlock in computer networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 33(12) </volume> <pages> 1258-1264, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock. <p> Of course, it should be recalled that we are concerned solely with buffer-reservation algorithms, and that other types of deadlock-free routing algorithms for cycle networks have been created <ref> [10, 20, 23] </ref>. However, these other types of routing algorithms have fundamentally different properties. For example, buffer insertion rings [20] can provide high throughput, but they are poorly suited to the creation of minimal routing algorithms for torus networks.
Reference: [11] <author> Luis Gravano, Gustavo D. Pifarre, Sergio A. Felperin, and Jorge L.C. Sanz. </author> <title> Adaptive deadlock-free worm-hole routing with all minimal paths. </title> <type> Technical Report TR:91-21, </type> <institution> IBM Argentina, CRAAG, </institution> <year> 1991. </year>
Reference-contexts: This matches the known upper bound of three buffers per node for deadlock-free, minimal routing on cycle <ref> [11] </ref> and torus networks [4]. The remainder of this paper is organized as follows. Definitions and a formal description of the routing model are given in Section 2.
Reference: [12] <author> K.D. Gunther. </author> <title> Prevention of deadlocks in packet-switched data transport systems. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 29(4), </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: One well-known technique for proving freedom from deadlock is to order the buffers so that every packet always has the possibility of moving to a higher ordered buffer <ref> [12] </ref>. Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24]. <p> Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [13] <author> Peter A.J. Hilbers and Johan J. Lukkien. </author> <title> Deadlock-free message routing in multicomputer networks. </title> <journal> Distributed Computing, </journal> <volume> 3 </volume> <pages> 178-186, </pages> <year> 1989. </year> <month> 15 </month>
Reference: [14] <author> C.R. Jesshope, P.R. Miller, and J.T. Yantchev. </author> <title> High performance com-munications in processor networks. </title> <booktitle> In Proc. 16th Intl. Symposium on Computer Architecture, </booktitle> <pages> pages 150-157, </pages> <year> 1989. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [15] <author> P. Kermani and L. Kleinrock. </author> <title> Virtual Cut-Through: A new computer communication switching technique. </title> <journal> Computer Networks, </journal> <volume> 3 </volume> <pages> 267-286, </pages> <year> 1979. </year>
Reference-contexts: Packets may be transmitted in either store-and-forward [19] or virtual cut-through <ref> [15] </ref> mode. The only requirement is that when a packet is moved from one buffer to another, it occupies both of the buffers for a finite amount of time, and after a finite amount of time the former buffer becomes empty.
Reference: [16] <author> S. Konstantinidou. </author> <title> Adaptive, minimal routing in hypercubes. </title> <booktitle> In Proc. 6th. MIT Conference on Advanced Research in VLSI, </booktitle> <pages> pages 139-153, </pages> <year> 1990. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [17] <author> S. Konstantinidou and L. Snyder. </author> <title> The Chaos router: A practical application of randomization in network routing. </title> <booktitle> In Proc. 2nd Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 21-30, </pages> <year> 1990. </year>
Reference: [18] <author> Yishay Mansour and Boaz Patt-Shamir. </author> <title> Greedy packet scheduling on shortest paths. </title> <booktitle> In Proc. ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 165-175, </pages> <year> 1991. </year>
Reference: [19] <author> P.M. Merlin and P.J. Schweitzer. </author> <title> Deadlock avoidance in store-and-forward networks. 1: Store-and-forward deadlock. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 28(3) </volume> <pages> 345-354, </pages> <month> March </month> <year> 1980. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock. <p> Packets may be transmitted in either store-and-forward <ref> [19] </ref> or virtual cut-through [15] mode. The only requirement is that when a packet is moved from one buffer to another, it occupies both of the buffers for a finite amount of time, and after a finite amount of time the former buffer becomes empty.
Reference: [20] <author> Yoram Ofek and Moti Yung. </author> <title> Principles for high speed network control: loss-less and deadlock-freeness, self-routing and a single buffer per link. </title> <booktitle> In Proc. ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 161-175, </pages> <year> 1990. </year>
Reference-contexts: Of course, it should be recalled that we are concerned solely with buffer-reservation algorithms, and that other types of deadlock-free routing algorithms for cycle networks have been created <ref> [10, 20, 23] </ref>. However, these other types of routing algorithms have fundamentally different properties. For example, buffer insertion rings [20] can provide high throughput, but they are poorly suited to the creation of minimal routing algorithms for torus networks. <p> Of course, it should be recalled that we are concerned solely with buffer-reservation algorithms, and that other types of deadlock-free routing algorithms for cycle networks have been created [10, 20, 23]. However, these other types of routing algorithms have fundamentally different properties. For example, buffer insertion rings <ref> [20] </ref> can provide high throughput, but they are poorly suited to the creation of minimal routing algorithms for torus networks. Lemma 5.1 Let routing algorithm A be any deadlock-free, minimal, oblivious routing algorithm for a cycle network with n nodes.
Reference: [21] <author> Gustavo D. Pifarre, Luis Gravano, Sergio A. Felperin, and Jorge L.C. Sanz. </author> <title> Fully-adaptive minimal deadlock-free packet routing in hyper-cubes, meshes, and other networks. </title> <booktitle> In Proc. 3rd ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 278-290, </pages> <year> 1991. </year>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
Reference: [22] <author> Sam Toueg and Kenneth Steiglitz. </author> <title> Some complexity results in the design of deadlock-free packet switching networks. </title> <journal> SIAM Journal on Computing, </journal> <volume> 10(4) </volume> <pages> 702-712, </pages> <month> November </month> <year> 1981. </year>
Reference-contexts: In fact, in the special case of 2 oblivious buffer-reservation algorithms, Toueg and Steiglitz have shown that the existence of such an ordering of the buffers is necessary for deadlock-freedom <ref> [22] </ref>. However, in this paper we will present an adaptive buffer-reservation algorithm which is provably free of deadlock and for which no ordering of the buffers can be defined such that every packet always has the possibility of moving to a higher ordered buffer. <p> The cycle network must contain at least 3n 30 standard buffers. Proof: Because A is deadlock-free and oblivious, it follows that there exists an ordering of the buffers such that every packet visits the buffers in ascending order <ref> [22] </ref>. Let k = bn=2c 1 (so either n = 2k + 2 or n = 2k + 3).
Reference: [23] <author> Sam Toueg and Jeffrey D. Ullman. </author> <title> Deadlock-free packet switching networks. </title> <journal> SIAM Journal on Computing, </journal> <volume> 10(3) </volume> <pages> 594-611, </pages> <month> August </month> <year> 1981. </year> <month> 16 </month>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock. <p> Of course, it should be recalled that we are concerned solely with buffer-reservation algorithms, and that other types of deadlock-free routing algorithms for cycle networks have been created <ref> [10, 20, 23] </ref>. However, these other types of routing algorithms have fundamentally different properties. For example, buffer insertion rings [20] can provide high throughput, but they are poorly suited to the creation of minimal routing algorithms for torus networks.
Reference: [24] <author> J. Yantchev and C.R. Jesshope. </author> <title> Adaptive, low latency, deadlock-free packet routing for networks of processors. </title> <journal> IEE Proc., Pt. E, </journal> <volume> 136(3) </volume> <pages> 178-186, </pages> <month> May </month> <year> 1989. </year> <pages> 17 18 </pages>
Reference-contexts: Providing such an ordering of the buffers is the standard technique for proving freedom from deadlock and has been used by many researchers <ref> [4, 7, 8, 10, 12, 14, 16, 19, 21, 23, 24] </ref>. Therefore, it seems plausible that the existence of such an ordering of the buffers is a necessary condition for freedom from deadlock.
References-found: 24

