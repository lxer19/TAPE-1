URL: ftp://ftp.cs.ucsd.edu/pub/grad/tkammeye/EG-FOGA96-TR.ps
Refering-URL: http://www-cse.ucsd.edu/users/tkammeye/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: -tkammeye,rik-@cs.ucsd.edu  
Title: Stochastic Context-Free Grammar Induction with a Genetic Algorithm Using Local Search  
Author: Thomas E. Kammeyer and Richard K. Belew 
Keyword: Genetic Algorithms, Stochastic Grammar Induction  
Note: Technical Report CS96-476 0 Introduction  
Address: Mail Code 0114  9500 Gilman Drive La Jolla, CA 92093-0114  
Affiliation: Cognitive Computer Science Research Group Computer Science and Engineering Dept.  University of California, San Diego  
Abstract: We have previously used grammars as a formalism to structure a GA's search for program called sorting networks (SNets) [KBW95]. In this paper we restrict ourselves to stochastic context-free grammars which, while more analytically tracxtable than our SNet grammars, are more difficult than others previously considered by the GA community. In our approach: production rules of a grammar are encoded as genes of a genome; this grammar is used as a recognizer of strings and assigned a fitness measure that reflects the probability that it captures the structure of a restricted sample of strings generated by a stochastic target language. Our GA introduces a novel encoding of grammars as genotypic strings, and uses a local search component to aid in learning rule probabilities. Both fitness evaluation and the local search algorithm depend on a sophisticated chart parser. We give results for two simple grammars whose nonstochastic equivalents have been used in a previous study. We also present arguments about the degree of testing needed for GA based grammar induction. Genetic algorithms (GAs) are now regularly being applied to much more difficult problems than originally conceived. Much of this advance has been towards extending GA performance on classic function optimization problems, for example on problem instances with very difficult or even perverse GA-hard" characteristics, on problems of much higher dimensionality than have been attempted in the past, etc. This paper is part of a second extension of GA theory, to problems outside the standard function optimization formulation. Most ambitiously, we seek a way of evolving arbitrary programs : functions that produce appropriate outputs for all possible inputs. Recent empirical results arising from Lisp-oriented genetic programming and related techniques have made this prospect much more tantalizing than we might have imagined even a few years ago. A fundamental obstacle to theoretical progress on the evolution of programs is due to the enormous variability introduced by the programs depenendence on its input. For most problems of practical interest, the space of possible inputs is infinite, or at least too large to be exhaustively tested as part of each individual's fitness evaluation. We have previously used grammars as a formalism to structure a GA's search for a particular class of program called sorting networks (SNets) [KBW95]. Briefly, production rules of a grammar are encoded as genes of a genome; this grammar is used as a generator of a string which can be interpreted as an SNet specification; the SNet is then tested against a small set of input vectors; and finally the individual's fitness measures how successfully it has sorted them. While the goal of evolving a sorting program is obviously much more restricted than a search for an arbitrary function, it does retain the characteristic that the solution must sort correctly for any input vector, despite the fact that this space of potential inputs is exponentially large. In this paper we restrict ourselves still further, to much simpler but analytically tractable grammars. Our goal is to apply the enormous background of research regarding the computational power of various grammatical classes and problems inducing these from finite samples of their corresponding languages. We focus particularly on the task of stochastic, context-free grammar induction. We again encode production rules of the grammar as genes of a variable-length genome in a novel way, and use a fitness measure that reflects the probability that a grammar assigns to restricted samples from a stochastic target language. Our main results explore the effect of a local search algorithm for tuning production probabilities on GA performance. Previous studies have concentrated on nonstochastic context-free grammars (CFGs) ([Lankhorst TR], [Wyard, ICGA91]) or stochastic regular grammars 
Abstract-found: 1
Intro-found: 1
Reference: [Charniak] <author> Charniak, C. </author> <title> Statistical Language L e a r n i n g . The MIT Press, </title> <address> Cambridge, MA, </address> <year> 1993. </year>
Reference: [Fu&Booth] <author> F u , K . S . a n d B o o t h , T . L . Grammatical Inference: </author> <title> introduction and survey, parts 1 and 2. </title> <journal> I E E E Transactions on Systems, Man, and Cybernetics SMC-5. </journal> <year> (1975), </year> <pages> 95-111 and 409-423. </pages>
Reference: [Gazdar&Mellish] <author> Gazdar, D. and Mellish, C. </author> <title> Natural Language Processing in L I S P : A n I n tr o d u c t io n t o A d d i s o n We s l e y P u b l i s h i n g Company, </title> <address> Reading, MA, </address> <year> 1989. </year>
Reference: [Hopcraft&Ullman] <author> Hopcraft, J. and Ullman, J. </author> <title> Introduction to Automata Theory, La nguag es, and C om putation. A d d i s o n We s l e y P u b l i s h i n g Company, </title> <address> Reading, MA, </address> <year> 1979. </year>
Reference: [KBW95] <author> Thomas E. Kammeyer, Richard K. Belew, and S. Gill Williamson. </author> <title> E v o l v i n g C o m p a r e exchange Networks Using Grammars. To appear in: </title> <booktitle> Artifical Life, </booktitle> <volume> vol. 2 no. 2, </volume> <pages> pp. 199-237. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass. </address> <year> 1995. </year>
Reference-contexts: To encode a production, we must encode its LHS, a single nonterminal for context-free grammars, its RHS, a sequence of nonterminal and terminals, and its probability, a real number in (0,1]. Our earlier SCFG Induction with a GA using Local Search 6 work with sorting networks <ref> [KBW95] </ref> use a highly structured genotypic representation. Crossover occurred only between grammar productions and mutations was custom-designed to work with just the representation we chose for encoding grammars to build SNets. In designing our new representation, we were motivated to consider making more of the genome accessible to crossover.
Reference: [Lankhorst TR] <author> Lankhorst, </author> <title> M.M. Breeding Grammars: Grammatical Inference w i t h a G e n e t i c A l g o r i t h m . Computing Science Report CS-R 9401, </title> <institution> Deptartment of Computing Science, University of Groningen, </institution> <address> The Netherlands, </address> <year> 1994. </year>
Reference: [Levenick,ICGA91] <author> Levenick, James R. </author> <title> Inserting Introns Improves Genetic Algorithm Success Rate: Taking a Cue from Biology. Proceedings of the Fourth International Conference on Genetic A l g o r i t h m s . Morgan Kaufmann Publishers, </title> <publisher> Inc., </publisher> <address> San Francisco, California, </address> <year> 1991. </year>
Reference: [Ost&Schwehm, ICGA95] <author> Schwehm, M. and Ost, A. </author> <title> Inference of Stochastic Regular Grammars by Massively P a r a l l e l G e n e t i c A l g o r i t h m s . International Conference on Genetic A l g o r i t h m s . Morgan Kaufmann Publishers, </title> <publisher> Inc., </publisher> <address> San Francisco, California, </address> <year> 1995. </year>
Reference: [SCTR] <author> Sakakibara, Y., Brown, M., Hughey, R., Mian I.S., Sjlander, K., Underwood, R.C., and Haussler, D. </author> <title> Stochastic Context-Free Grammars f o r t R N A M o d e l i n g . UCSC Technical Report Number UCSC-CRL-94-14, </title> <month> November </month> <year> 1993. </year>
Reference: [Wyard, ICGA91] <author> Wyard, P. </author> <title> Context Free Grammar Induction Using Genetic Algorithms. Proceedings of the Fourth International Conference on G e n e t i c A l g o r i t h m s . Morgan SCFG Induction with a GA using Local Search 1 2 Kaufmann Publishers, </title> <publisher> Inc., </publisher> <address> San Francisco, California, </address> <year> 1991. </year>
Reference: [Wyard95] <author> Wyard, P. </author> <title> Representational Issues f o r C o n t e x t Free G r a m m a r Induction Using Genetic Algorithms. </title> <type> Technical Report, </type> <institution> British Telecom, </institution> <year> 1995. </year> <title> SCFG Induction with a GA using Local Search 1 3 -4000 -3000 -2000 -1000 'ga only' 'ga+ls' Figure7: Results of running GA-only and GA with local search to learn the language whose grammar is given in figure 6. </title>
References-found: 11

