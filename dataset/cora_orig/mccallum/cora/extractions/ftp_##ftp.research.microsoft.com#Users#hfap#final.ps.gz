URL: ftp://ftp.research.microsoft.com/Users/hfap/final.ps.gz
Refering-URL: http://www.research.microsoft.com/graphics/hfap/
Root-URL: http://www.research.microsoft.com
Title: Efficient Generation of Motion Transitions using Spacetime Constraints  
Author: Charles Rose Brian Guenter Bobby Bodenheimer Michael F. Cohen 
Keyword: Additional Keywords and Phrases: computer animation, inverse kinematics, motion capture, motion control, human figure animation, cyclification. CR Categories and Subject Descriptions: I.3.7 [Computer Graphics]: Three Dimensional Graphics and Realism: Animation; I.6.3 [Simulation and Modeling]: Applications; G.1.6 [Constrained Optimization]; I.3.5 [Physically-Based Modeling].  
Affiliation: Princeton University (currently at Microsoft Research)  Microsoft Research  Microsoft Research  Microsoft Research  
Abstract: This paper describes the application of space time constraints to creating transitions between segments of human body motion. The motion transition generation uses a combination of spacetime constraints and inverse kinematic constraints to generate seamless and dynamically plausible transitions between motion segments. We use a fast recursive dynamics formulation which makes it possible to use spacetime constraints on systems with many degrees of freedom, such as human figures. The system uses an interpreter of a motion expression language to allow the user to manipulate motion data, break it into pieces, and reassemble it into new, more complex, motions. We have successfully used the system to create basis motions, cyclic data, and seamless motion transitions on a human body model with 44 degrees of freedom. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> BALAFOUTIS, C. A., AND PATEL, R. V. </author> <title> Dynamic Analysis of Robot Manipulators: A Cartesian Tensor Approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Computing g requires finding the joint torques and a variety of subsidiary quantities, such as angular velocity and acceleration. This is the inverse dynamics problem which has been extensively studied in the robotics literature. See <ref> [1] </ref> for a good overview of many of these algorithms. Many inverse dynamics formulations have been proposed in the robotics literature ranging from O (n 4 ) non-recursive to O (n) recursive algorithms. The inverse dynamics formulation we use is due to Balafoutis [1]. <p> See <ref> [1] </ref> for a good overview of many of these algorithms. Many inverse dynamics formulations have been proposed in the robotics literature ranging from O (n 4 ) non-recursive to O (n) recursive algorithms. The inverse dynamics formulation we use is due to Balafoutis [1]. This is an O (n) recursive formulation which requires 96n 77 multiplications and 84n77 additions to solve the inverse dynamics problem for a robot manipulator with n joints.
Reference: [2] <author> BRUDERLIN, A., AND WILLIAMS, L. </author> <title> Motion signal processing. </title> <booktitle> In Computer Graphics (Aug. </booktitle> <year> 1995), </year> <pages> pp. 97-104. </pages> <note> Proceedings of SIGGRAPH 95. </note>
Reference-contexts: With this dynamics formulation, the algorithm achieves the lower bound time complexity for spacetime algorithms that use gradient based optimization techniques. The motion transitions satisfy both dynamic and kinematic constraints. This differs from the work described in <ref> [2, 11, 9] </ref>. These papers described various mechanisms, such as dynamic time warping, Fourier interpolation, and multi-resolution signal processing, for transforming existing motion data. Transitions between motion clips were achieved using linear combinations of the two motions being transitioned.
Reference: [3] <author> BURDETT, R. G., SKRINAR, G. S., AND SIMON, S. R. </author> <title> Comparison of mechanical work and metabolic energy consumption during normal gait. </title> <journal> Journal of Orhopaedic Research 1, </journal> <volume> 1 (1983), </volume> <pages> 63-72. </pages>
Reference-contexts: As shown in <ref> [3] </ref>, joint torques are a reasonable predictor of metabolic energy, so minimizing torque over time should be a reasonable approximation to minimizing metabolic energy. Experience has shown that motion that minimizes energy looks natural.
Reference: [4] <author> COHEN, M. F. </author> <title> Interactive spacetime control for animation. </title> <booktitle> In Computer Graphics (July 1992), </booktitle> <pages> pp. 293-302. </pages> <note> Proceedings of SIGGRAPH 92. </note>
Reference-contexts: perfectly cyclic into one which is. 3.1 Function Representation Representations used in the past for the joint angle function, q (t) = (q 1 (t); : : : ; q n (t)) where q i (t) is the angle of joint i at time t, include piecewise constant [10], B-splines <ref> [4] </ref>, and B-spline wavelets [8]. B-spline wavelets show good convergence properties for spacetime optimization when the number of basis functions in a single degree of freedom is large, e.g., more than 20 or 30.
Reference: [5] <author> GILL, P. E., MURRAY, W., AND WRIGHT, M. H. </author> <title> Practical Optimization. </title> <publisher> Academic Press, </publisher> <year> 1981. </year>
Reference-contexts: Experience has shown that motion that minimizes energy looks natural. This leads to the minimization problem: minimize e = Z t 2 X t i (t) dt: We use the BFGS optimization algorithm <ref> [5] </ref> to find a minimum of this integral equation.
Reference: [6] <author> HOLLERBACH, J. M. </author> <title> A recursive lagrangian formulation of manipulator dynamics and a comparative study of dynamics formulation complexity. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics SMC-10, </journal> <volume> 11 (Nov. </volume> <year> 1980). </year>
Reference-contexts: This is an O (n) recursive formulation which requires 96n 77 multiplications and 84n77 additions to solve the inverse dynamics problem for a robot manipulator with n joints. This is faster than the O (n) Lagrangian recursive formulation developed by Hollerbach <ref> [6] </ref> and used in [7], which requires 412n 277 multiplications and 320n 201 additions. The efficiency of the Balafoutis algorithm derives from the computational efficiency of Cartesian tensors and from the recursive nature of the computations. These efficiencies carry over to the computation of the gradient terms.
Reference: [7] <author> LIU, Z., AND COHEN, M. F. </author> <title> An efficient symbolic interface to constraint based animation systems. </title> <booktitle> In Proceedings of the 5th EuroGraphics Workshop on Animation and Simulation (Sept. </booktitle> <year> 1994). </year>
Reference-contexts: This is an O (n) recursive formulation which requires 96n 77 multiplications and 84n77 additions to solve the inverse dynamics problem for a robot manipulator with n joints. This is faster than the O (n) Lagrangian recursive formulation developed by Hollerbach [6] and used in <ref> [7] </ref>, which requires 412n 277 multiplications and 320n 201 additions. The efficiency of the Balafoutis algorithm derives from the computational efficiency of Cartesian tensors and from the recursive nature of the computations. These efficiencies carry over to the computation of the gradient terms. The Balafoutis algorithm proceeds in two steps.
Reference: [8] <author> LIU, Z., GORTLER, S. J., AND COHEN, M. F. </author> <title> Hierarchical spacetime control. </title> <booktitle> In Computer Graphics (July 1994), </booktitle> <pages> pp. 35-42. </pages> <note> Proceedings of SIGGRAPH 94. </note>
Reference-contexts: which is. 3.1 Function Representation Representations used in the past for the joint angle function, q (t) = (q 1 (t); : : : ; q n (t)) where q i (t) is the angle of joint i at time t, include piecewise constant [10], B-splines [4], and B-spline wavelets <ref> [8] </ref>. B-spline wavelets show good convergence properties for spacetime optimization when the number of basis functions in a single degree of freedom is large, e.g., more than 20 or 30.
Reference: [9] <author> UNUMA, M., ANJYO, K., AND TEKEUCHI, R. </author> <title> Fourier principles for emotion-based human figure animation. </title> <booktitle> In Computer Graphics (Aug. </booktitle> <year> 1995), </year> <pages> pp. 91-96. </pages> <note> Proceedings of SIG-GRAPH 95. </note>
Reference-contexts: With this dynamics formulation, the algorithm achieves the lower bound time complexity for spacetime algorithms that use gradient based optimization techniques. The motion transitions satisfy both dynamic and kinematic constraints. This differs from the work described in <ref> [2, 11, 9] </ref>. These papers described various mechanisms, such as dynamic time warping, Fourier interpolation, and multi-resolution signal processing, for transforming existing motion data. Transitions between motion clips were achieved using linear combinations of the two motions being transitioned.
Reference: [10] <author> WITKIN, A., AND KASS, M. </author> <title> Spacetime constraints. </title> <booktitle> In Computer Graphics (Aug. </booktitle> <year> 1988), </year> <pages> pp. 159-168. </pages> <note> Proceedings of SIGGRAPH 88. </note>
Reference-contexts: We have developed an algorithm for generating these transitions semi-automatically, greatly reducing the time spent and the number of parameters an animator must specify. The system provides two semi-automatic mechanisms for generating motion: motion transition generation and cyclification. Motion transition generation uses a combination of spacetime constraints <ref> [10] </ref> and inverse kinematic constraints [12] to generate transitions between basis motions. A fast dynamics formulation makes it practical to use spacetime transition generation on high degree of freedom systems. <p> not be perfectly cyclic into one which is. 3.1 Function Representation Representations used in the past for the joint angle function, q (t) = (q 1 (t); : : : ; q n (t)) where q i (t) is the angle of joint i at time t, include piecewise constant <ref> [10] </ref>, B-splines [4], and B-spline wavelets [8]. B-spline wavelets show good convergence properties for spacetime optimization when the number of basis functions in a single degree of freedom is large, e.g., more than 20 or 30.
Reference: [11] <author> WITKIN, A., AND POPOV IC, Z. </author> <title> Motion warping. </title> <booktitle> In Computer Graphics (Aug. </booktitle> <year> 1995), </year> <pages> pp. 105-108. </pages> <note> Proceedings of SIGGRAPH 95. </note>
Reference-contexts: With this dynamics formulation, the algorithm achieves the lower bound time complexity for spacetime algorithms that use gradient based optimization techniques. The motion transitions satisfy both dynamic and kinematic constraints. This differs from the work described in <ref> [2, 11, 9] </ref>. These papers described various mechanisms, such as dynamic time warping, Fourier interpolation, and multi-resolution signal processing, for transforming existing motion data. Transitions between motion clips were achieved using linear combinations of the two motions being transitioned.
Reference: [12] <author> ZHAO, J., AND BADLER, N. I. </author> <title> Inverse kinematics positioning using non-linear programming for highly articulated figures. </title> <journal> ACM Transactions on Graphics 13, </journal> <month> 4 (Oct. </month> <year> 1994), </year> <pages> 313-336. </pages>
Reference-contexts: The system provides two semi-automatic mechanisms for generating motion: motion transition generation and cyclification. Motion transition generation uses a combination of spacetime constraints [10] and inverse kinematic constraints <ref> [12] </ref> to generate transitions between basis motions. A fast dynamics formulation makes it practical to use spacetime transition generation on high degree of freedom systems. With this dynamics formulation, the algorithm achieves the lower bound time complexity for spacetime algorithms that use gradient based optimization techniques. <p> A handful of human joints actually have three degrees of freedom but most have one or two. Anatomically extraneous degrees of freedom cause trouble when generating motion transitions since the synthetic body may move in ways that are impossible for a real human. We use an optimization procedure <ref> [12] </ref> which minimizes the angular and positional deviation between our internal model of a human and the motion capture data. Limb lengths are automatically extracted from the motion data and used to scale the internal model appropriately. <p> The animator has the option of overriding the system's guess, manually specifying a joint coordinate frame as being a support frame. During the transition this coordinate frame will be held fixed using inverse kinematics constraints. Enforcing kinematic constraints is done using an extension of the techniques presented in <ref> [12] </ref>, optimizing for coefficients influencing a range of time.
References-found: 12

