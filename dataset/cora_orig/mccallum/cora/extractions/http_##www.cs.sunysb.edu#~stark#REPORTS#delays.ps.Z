URL: http://www.cs.sunysb.edu/~stark/REPORTS/delays.ps.Z
Refering-URL: http://www.cs.sunysb.edu/~giri/
Root-URL: http://www.cs.sunysb.edu
Email: stark@cs.sunysb.edu sas@cs.sunysb.edu,  
Title: Compositional Analysis of Expected Delays in Networks of Probabilistic I/O Automata  
Author: Eugene W. Stark, Scott A. Smolka 
Note: Research supported in part by AFOSR Grant F49620-96-1-0087. E-mail addresses:  
Date: December 5, 1997  
Address: NY 11794 USA  
Affiliation: Department of Computer Science State University of New York at Stony Brook Stony Brook,  
Abstract: In previous work, we defined a notion of probabilistic I/O automata (PIOA), and we showed that certain functions, which we called "probabilistic behavior maps," constitute a compositional semantics for PIOAs that is fully abstract with respect to a notion of testing equivalence. We also observed that information about completion probability and expected completion time for a "closed PIOA" can be extracted from its behavior map. In the present paper, we greatly extend and refine our previous results, thereby obtaining a practical method for computing completion probabilities and expected completion times. Our method is compositional, in the sense that it can be applied to a system of PIOAs one component at a time, without ever calculating the global state space of the system. The method is based on symbolic calculations with vectors and matrices of rational functions, and it draws upon a theory of observables, which are mappings from delayed traces to real numbers that generalize "formal power series" from algebra and combinatorics. We define rational observables to be those satisfying certain conditions, among which is the condition that a certain vector space of "derivatives" be finite-dimensional. Central to the theory is a notion of representation for an observable, which generalizes the notion "linear representation" for formal power series. We prove that the representable observables coincide with the rational ones; this generalizes to observables a result of Carlyle and Paz equating the recognizable series with those whose "syntactic right ideal" has finite codimension. We also present a minimization algorithm for representations of observables that generalizes a result of Schutzenberger for formal power series. The minimization algorithm is applied in our analysis method to limit combinatorial explosion that would otherwise occur. 
Abstract-found: 1
Intro-found: 1
Reference: [BDG98] <author> M. Bernardo, L. Donatiello, and R. Gorrieri. </author> <title> A formal approach to the integration of performance aspects in the modeling and analysis of concurrent systems. </title> <journal> Information and Computation, </journal> <note> 1998. To appear. </note>
Reference-contexts: Finally, a number of "stochastically timed" process algebras and Petri net formalisms have been proposed for the performance analysis of concurrent systems, including <ref> [MBC84, GHR93, Hil96, Pri96, BDG98] </ref>. In the case of process algebra, these approaches are sometimes referred to as "compositional" in the sense that a composite stochastic system can be specified algebraically in terms of its components.
Reference: [BR84] <author> J. Berstel and C. Reutenauer. </author> <title> Rational Series and Their Languages, </title> <booktitle> volume 12 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: Our theory of observables and their representations can be seen as a generalization of work by Carlyle and Paz [CP71], Schutzenberger [Sch61a, Sch61b], and others (see <ref> [BR84] </ref> for references), on formal power series and linear representations.
Reference: [CCM97] <author> S. Campos, E. M. Clarke, and M. Minea. </author> <title> Symbolic techniques for formally verifying industrial systems. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 29 </volume> <pages> 79-88, </pages> <year> 1997. </year>
Reference-contexts: In other related work, Campos et al. in <ref> [CCM97] </ref> present BDD-based algorithms that determine the exact bounds on the delay between two specified events and the number of occurrences of another event in all such intervals. Segala et al. [LSS94, PS95] have developed a method for the analysis of the expected time complexity of randomized distributed algorithms.
Reference: [CP71] <author> J. W. Carlyle and A. Paz. </author> <title> Realizations by stochastic finite automata. </title> <journal> J. Com-put. System Sci., </journal> <volume> 5 </volume> <pages> 26-40, </pages> <year> 1971. </year>
Reference-contexts: Our theory of observables and their representations can be seen as a generalization of work by Carlyle and Paz <ref> [CP71] </ref>, Schutzenberger [Sch61a, Sch61b], and others (see [BR84] for references), on formal power series and linear representations. <p> This in a sense generalizes to observables a result of Carlyle and Paz <ref> [CP71] </ref>, which equates the recognizable series with those whose "syntactic right ideal" has finite codimension. Our minimization algorithm for representations of observables corresponds to a result of Schutzenberger [Sch61a, Sch61b] for formal power series.
Reference: [GHR93] <author> N. Gotz, U. Herzog, and M. Rettelbach. </author> <title> Multiprocessor and distributed system design: the integration of functional specification and performance analysis using stochastic process algebras. </title> <booktitle> In Proceedings of PERFORMANCE '93, </booktitle> <pages> pages LNCS 729 121-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Finally, a number of "stochastically timed" process algebras and Petri net formalisms have been proposed for the performance analysis of concurrent systems, including <ref> [MBC84, GHR93, Hil96, Pri96, BDG98] </ref>. In the case of process algebra, these approaches are sometimes referred to as "compositional" in the sense that a composite stochastic system can be specified algebraically in terms of its components.
Reference: [Hil96] <author> J. Hillston. </author> <title> A Compositional Approach to Performance Modelling. </title> <publisher> Cambridge University Press, </publisher> <year> 1996. </year>
Reference-contexts: Finally, a number of "stochastically timed" process algebras and Petri net formalisms have been proposed for the performance analysis of concurrent systems, including <ref> [MBC84, GHR93, Hil96, Pri96, BDG98] </ref>. In the case of process algebra, these approaches are sometimes referred to as "compositional" in the sense that a composite stochastic system can be specified algebraically in terms of its components.
Reference: [How71] <author> Ronald A. Howard. </author> <title> Dynamic Probabilistic Systems, Volume II: Semi-Markov and Decision Processes, volume 2 of Series in Decision and Control. </title> <publisher> John Wiley & Sons, </publisher> <year> 1971. </year>
Reference: [LSS94] <author> N. Lynch, I. Saias, and R. Segala. </author> <title> Proving time bounds for randomized distributed algorithms. </title> <booktitle> In Proceedings of the 13th ACM PODC, </booktitle> <address> Los Angeles, CA, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: In other related work, Campos et al. in [CCM97] present BDD-based algorithms that determine the exact bounds on the delay between two specified events and the number of occurrences of another event in all such intervals. Segala et al. <ref> [LSS94, PS95] </ref> have developed a method for the analysis of the expected time complexity of randomized distributed algorithms.
Reference: [MBC84] <author> M. Ajmone Marsan, G. Balbo, and G. Conte. </author> <title> A class of generalized stochastic Petri nets for the performance evaluation of multiprocessor systems. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 2 </volume> <pages> 143-172, </pages> <year> 1984. </year>
Reference-contexts: Finally, a number of "stochastically timed" process algebras and Petri net formalisms have been proposed for the performance analysis of concurrent systems, including <ref> [MBC84, GHR93, Hil96, Pri96, BDG98] </ref>. In the case of process algebra, these approaches are sometimes referred to as "compositional" in the sense that a composite stochastic system can be specified algebraically in terms of its components.
Reference: [Pri96] <author> C. Priami. </author> <title> Stochastic -calculus with general distributions. </title> <editor> In M. Ribaudo, editor, </editor> <booktitle> Proceedings of the Fourth Workshop on Process Algebras and Performance Modelling, </booktitle> <address> Torino, Italy, </address> <year> 1996. </year>
Reference-contexts: Finally, a number of "stochastically timed" process algebras and Petri net formalisms have been proposed for the performance analysis of concurrent systems, including <ref> [MBC84, GHR93, Hil96, Pri96, BDG98] </ref>. In the case of process algebra, these approaches are sometimes referred to as "compositional" in the sense that a composite stochastic system can be specified algebraically in terms of its components.
Reference: [PS95] <author> A. Pogosyants and R. Segala. </author> <title> Formal verification of time properties for randomized distributed algorithms. </title> <booktitle> In Proceedings of the 14th ACM PODC, </booktitle> <address> Ottawa, Ontario, Canada, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: In other related work, Campos et al. in [CCM97] present BDD-based algorithms that determine the exact bounds on the delay between two specified events and the number of occurrences of another event in all such intervals. Segala et al. <ref> [LSS94, PS95] </ref> have developed a method for the analysis of the expected time complexity of randomized distributed algorithms.
Reference: [Sch61a] <author> M. P. Schutzenberger. </author> <title> On a special class of recurrent events. </title> <journal> Annals Math. Stat., </journal> <volume> 32 </volume> <pages> 1201-1213, </pages> <year> 1961. </year>
Reference-contexts: Our theory of observables and their representations can be seen as a generalization of work by Carlyle and Paz [CP71], Schutzenberger <ref> [Sch61a, Sch61b] </ref>, and others (see [BR84] for references), on formal power series and linear representations. <p> This in a sense generalizes to observables a result of Carlyle and Paz [CP71], which equates the recognizable series with those whose "syntactic right ideal" has finite codimension. Our minimization algorithm for representations of observables corresponds to a result of Schutzenberger <ref> [Sch61a, Sch61b] </ref> for formal power series.
Reference: [Sch61b] <author> M. P. Schutzenberger. </author> <title> On the definition of a family of automata. </title> <journal> Information and Control, </journal> <volume> 4 </volume> <pages> 245-270, </pages> <year> 1961. </year>
Reference-contexts: Our theory of observables and their representations can be seen as a generalization of work by Carlyle and Paz [CP71], Schutzenberger <ref> [Sch61a, Sch61b] </ref>, and others (see [BR84] for references), on formal power series and linear representations. <p> This in a sense generalizes to observables a result of Carlyle and Paz [CP71], which equates the recognizable series with those whose "syntactic right ideal" has finite codimension. Our minimization algorithm for representations of observables corresponds to a result of Schutzenberger <ref> [Sch61a, Sch61b] </ref> for formal power series.
Reference: [WSS97] <author> S.-H. Wu, S. A. Smolka, and E. W. Stark. </author> <title> Composition and behaviors of probabilistic I/O automata. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 176(1-2):1-38, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction In our previous paper <ref> [WSS97] </ref>, we defined the class of probabilistic I/O automata (PIOA), which are a model for distributed or concurrent systems that incorporates a notion of probabilistic choice. <p> Section 2 treats rational observables and their representations. Section 3 considers a simple example of the use of the 4 techniques. 2 Probabilistic I/O Automata and Their Behaviors 2.1 Probabilistic I/O Automata In this section, we recall the basic definitions from <ref> [WSS97] </ref>, to which the reader is referred for additional details and discussion. We give here simplified versions of the definitions, which are equivalent to those of [WSS97] in the case of finite PIOAs, which are all that we consider in the present paper. <p> of the 4 techniques. 2 Probabilistic I/O Automata and Their Behaviors 2.1 Probabilistic I/O Automata In this section, we recall the basic definitions from <ref> [WSS97] </ref>, to which the reader is referred for additional details and discussion. We give here simplified versions of the definitions, which are equivalent to those of [WSS97] in the case of finite PIOAs, which are all that we consider in the present paper. <p> As discussed in <ref> [WSS97] </ref>, the definitions of and ffi above reflect the intuition we wish to capture concerning the execution of a system of PIOAs. Upon arrival in a state, a component PIOA chooses randomly the length of time it will spend in that state before executing its next "locally controlled" transition. <p> This time is governed by an exponential distribution, whose parameter is the sum of the parameters of the distributions for each of the components. 2.3 Probability Space In <ref> [WSS97] </ref>, we showed how a closed PIOA A (one with no input actions) induces a probability space over the set of all its executions. <p> Corollary 2 Suppose A and B are compatible PIOAs. Then B A E [E A = B B E [E B : The above definitions and compositionality result are a generalization and simplification of those in <ref> [WSS97] </ref>. For a fixed action sequence u, the definition given in [WSS97] for the probabilistic behavior map E A u was as follows: E A X g (d)p A where the index of summation d ranges over R juj+1 , where g : R juj+1 ! R, and where p A <p> Corollary 2 Suppose A and B are compatible PIOAs. Then B A E [E A = B B E [E B : The above definitions and compositionality result are a generalization and simplification of those in <ref> [WSS97] </ref>. For a fixed action sequence u, the definition given in [WSS97] for the probabilistic behavior map E A u was as follows: E A X g (d)p A where the index of summation d ranges over R juj+1 , where g : R juj+1 ! R, and where p A u (d) denotes the summation of p A () over all <p> addition, we see that the correct place for the summing of delay parameters to appear is in the definition of B A E , rather than in the compositionality law, and that the ugly "correction factor" h (d A ; d B ) appearing in the compositionality law proved in <ref> [WSS97] </ref> can be made to disappear if the definition of B A E uses the "weight" w A (), rather than the probability p A (). 12 2.6 Completion Probability and Expected Completion Time We are interested in calculating the expected time taken for a PIOA A to perform a finite
Reference: [Wu96] <author> S.-H. Wu. </author> <title> Composition and Behaviors of Probabilistic Input/Output Automata. </title> <type> PhD thesis, </type> <institution> SUNY at Stony Brook, </institution> <year> 1996. </year> <month> 47 </month>
Reference-contexts: As a byproduct of the way of way probability is represented in the PIOA model, it is meaningful to consider certain aspects of timing for PIOA executions. In <ref> [Wu96] </ref>, it is noted that the expected time for a PIOA to complete a specified finite sequence of actions (called a trace) can be extracted from the probabilistic behavior map associated with that automaton, and this idea was applied there to analyze some examples.
References-found: 15

