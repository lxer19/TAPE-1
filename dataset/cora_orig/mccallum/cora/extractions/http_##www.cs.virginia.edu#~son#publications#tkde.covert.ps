URL: http://www.cs.virginia.edu/~son/publications/tkde.covert.ps
Refering-URL: http://www.cs.virginia.edu/~son/publications.html
Root-URL: http://www.cs.virginia.edu
Title: SUPPORTING MULTILEVEL SECURITY REQUIREMENTS IN REAL-TIME DATABASES  
Author: Rasikan David and Sang H. Son Ravi Mukkamala 
Address: Charlottesville, Virginia 22903 Norfolk,Virginia 23529  
Affiliation: Department of Computer Science Department of Computer Science University of Virginia Old Dominion University  
Abstract: Database systems for real-time applications must satisfy timing constraints associated with transactions, in addition to maintaining data consistency. In addition to real-time requirements, security is usually required in many applications. Multilevel security requirements introduce a new dimension to transaction processing in real-time database systems. In this paper, we argue that due to the conflicting goals of each requirement, trade-offs need to be made between security and timeliness. We first define mutual information, a measure of the degree to which security is being satisfied by a system. A secure two-phase locking protocol is then described and a scheme is proposed to allow partial violations of security for improved timeliness. The mutual information of the resultant covert channel is derived and a feedback control scheme is proposed that does not allow the mutual information to exceed a specified upper bound. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Robert K. Abbott and Hector Garcia-Molina. </author> <title> "Scheduling Real-Time Transactions: A Performance Evaluation," </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 17, No. 3, </volume> <pages> pp 513-560, </pages> <month> September `92. </month>
Reference-contexts: There have been a number of papers in the real-time databases Literature that have explored priority based scheduling approaches with respect to conventional databases <ref> [1] </ref>, [12], [14]. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reflects how close the transaction is to missing its deadline. <p> A formal description of the Secure 2PL algorithm and its correctness proofs are given in [3]. 4.2 2PL High Priority In 2PL-HP <ref> [1] </ref>, all data conflicts are resolved in favor of the transaction with higher priority. <p> request conflicts with that of the holders, then the holders are aborted and the transaction is granted a lock with a probability q else the steps taken by the Secure 2PL protocol are followed; if the transaction's priority is lower, it waits for the lock holders to release the lock <ref> [1] </ref>. The probability q depends on the factors I and r. I is available directly, but r is calculated based on the arrival rate of transactions, the probability of contention, and their deadlines. The analysis is based on preemptive priority queueing policy with restart.
Reference: [2] <author> D. E. Bell and L. J. LaPadula. </author> <title> "Secure Computer Systems: Unified Exposition and Multics Interpretation," </title> <institution> The Mitre Corp., </institution> <month> March </month> <year> 1976. </year>
Reference-contexts: 1 Introduction Database security is concerned with the ability of a database management system to enforce a security policy governing the disclosure, modification or destruction of information. Most secure database systems use an access control mechanism based on the Bell-LaPadula model <ref> [2] </ref>. This model is stated in terms of subjects and objects. An object is understood to be a data file, record or a field within a record. A subject is an active process that requests access to objects. Every object is assigned a classification and every subject a clearance.
Reference: [3] <author> Rasikan David and Sang H. Son. </author> <title> "A Secure Two Phase Locking Protocol," </title> <booktitle> Proceedings of the 12th Symposium on Reliable Distributed Systems, </booktitle> <address> Princeton, NJ, </address> <month> Oct `93. </month>
Reference-contexts: In multilevel secure databases, there is the additional problem of maintaining consistency without introducing covert channels. For a more detailed description of and a possible solution to the problem of concurrency control in secure databases, the reader is referred to <ref> [3] </ref>. In this paper, we concern ourselves with concurrency control mechanisms that have to satisfy both security and real-time requirements. We advance our claim that conflicts between these two requirements are inherent and hence trade-offs between them are necessary. <p> A formal description of the Secure 2PL algorithm and its correctness proofs are given in <ref> [3] </ref>. 4.2 2PL High Priority In 2PL-HP [1], all data conflicts are resolved in favor of the transaction with higher priority. <p> A real-time secure concurrency control must possess two characteristics high performance and minimal deadline miss percentage. The secure two phase locking protocol <ref> [3] </ref> was shown to yield best average case performance among all the secure concurrency control approaches whose performance was evaluated in [16]. We therefore use it as a basis for our approach to the problem of real-time secure concurrency control. <p> From the correctness criteria for secure schedulers, covert channels can be broadly classified into three categories | those that communicate information through a violation of delay security, those that violate recovery security and those that violate value security. In <ref> [3] </ref>, it is proved that Secure 2PL satisfies delay security. Our real-time secure concurrency control mechanism explained in Section 6 is based on the Secure 2PL protocol. <p> I is available directly, but r is calculated based on the arrival rate of transactions, the probability of contention, and their deadlines. The analysis is based on preemptive priority queueing policy with restart. The details of the analysis can be found in <ref> [3] </ref>. If the request for a lock is granted, the transaction proceeds to perform the data operation, which consists of a possible disk access (if the data item is not present in the cache) followed by CPU computation.
Reference: [4] <author> J. A. Goguen and J. Meseguer. </author> <title> "Security Policy and Security Models," </title> <booktitle> Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <pages> pp 11-20, </pages> <year> 1982. </year>
Reference-contexts: An implementation and performance analysis of the feedback control mechanism is explained in Section 8. Section 9 concludes the paper. 2 Correctness Criteria for Secure Schedulers Covert channel analysis and removal is the single most important issue in multilevel secure concurrency control. The notion of non-interference has been proposed <ref> [4] </ref> as a simple and intuitively satisfying definition of what it means for a system to be secure. The property of non-interference states that the output as seen by a subject must be unaffected by the inputs of another subject at a higher access class.
Reference: [5] <author> Sushil Jajodia and Vijayalaksmi Atluri. </author> <title> "Alternative Correctness Criteria for Concurrent Execution of Transactions in Multilevel Secure Databases," </title> <booktitle> Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May </month> <year> 1992. </year>
Reference: [6] <author> T. F. Keefe, W. T. Tsai and J. Srivastava. </author> <title> "Multilevel Secure Database Concurrency Control," </title> <booktitle> In Proceedings of the Sixth International Conference on Data Engineering, </booktitle> <pages> pp 337-344, </pages> <address> Los Angeles, CA, </address> <month> February </month> <year> 1990. </year>
Reference-contexts: that a subject at a lower access class should not be able to distinguish between the outputs 2 from the system in response to an input sequence including actions from a higher level subject and an input sequence in which all inputs at a higher access class have been removed <ref> [6] </ref>. An extensive analysis of the possible covert channels in a secure concurrency control mechanism and the necessary and sufficient conditions for a secure, interference-free scheduler are given in [6]. Three of these properties are of relevance to the secure two phase locking protocol discussed in this paper. <p> from a higher level subject and an input sequence in which all inputs at a higher access class have been removed <ref> [6] </ref>. An extensive analysis of the possible covert channels in a secure concurrency control mechanism and the necessary and sufficient conditions for a secure, interference-free scheduler are given in [6]. Three of these properties are of relevance to the secure two phase locking protocol discussed in this paper. <p> Even these schedulers, however, can reach a state from which they cannot continue without aborting one or more transactions. For simplicity, these two conditions are lumped together and called as deadlock <ref> [6] </ref>. When a deadlock is detected, some of the actions in the schedule must be aborted, allowing the others to proceed. <p> All existing real-time systems schedule transactions based on some priority scheme. The priority usually reflects how close the transaction is to missing its deadline. Priority-based scheduling of real-time transactions, however, interacts with the property of non-interference which has to be satisfied by secure schedulers <ref> [6] </ref>.
Reference: [7] <author> Butler W. Lampson. </author> <title> "A Note on the Confinement Problem," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 16, No. 10, </volume> <pages> pp 613-615, </pages> <month> October </month> <year> 1973. </year> <month> 23 </month>
Reference-contexts: The Bell-LaPadula model prevents direct flow of information from a higher access class to a lower access class, but the conditions are not sufficient to ensure that security is not violated indirectly through what are known as covert channels <ref> [7] </ref>. A covert channel allows indirect transfer of information from a subject at a higher access class to a subject at a lower access class. <p> Therefore, for minimizing deadline miss percentage, we take the approach that partial security violations under certain conditions are permissible, if it results in substantial gain in time cognizance. 5 Covert Channel Analysis 5.1 Covert Channels and Mutual Information The systematic study of covert channels began with <ref> [7] </ref>. As an example of a simple covert channel consider two processes running on a system that schedules them alternately for exactly one or two time quanta each, the choice being up to the process [9].
Reference: [8] <author> Juhnyoung Lee and Sang H. Son. </author> <title> "Concurrency Control Algorithms for Real-Time Database Sys--tems" in "Performance of Concurrency Control Mechanisms in Centralized Database Systems," </title> <editor> Vijay Kumar (editor), </editor> <publisher> Prentice Hall 1995 (to appear). </publisher>
Reference-contexts: The goal of the analysis is to show the variation in miss percentage 19 for varying amounts of mutual information transferred through the covert channel. 8.1 Simulation Model Central to the simulation model is a single-site disk resident database system operating on shared-memory multiprocessors <ref> [8] </ref>. The system consists of a disk-based database and a main memory cache. The unit of database granularity is the page. When a transaction needs to perform an operation on a data item it accesses a page.
Reference: [9] <author> Jonathan K. Millen. </author> <title> "Finite-State Noiseless Covert Channels," </title> <booktitle> The Second Computer Security Foundations Workshop, </booktitle> <pages> pp 81-86, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: As an example of a simple covert channel consider two processes running on a system that schedules them alternately for exactly one or two time quanta each, the choice being up to the process <ref> [9] </ref>. One process (the sender) may send information covertly to the other (receiver) by encoding successive symbols (0's and 1's in this paper) in the amount of time taken for its execution.
Reference: [10] <author> Ira S. Moskowitz and Allen R. Miller. </author> <title> "The Channel Capacity of a Certain Noisy Timing Channel," </title> <journal> IEEE Transactions on Information Theory, </journal> <pages> pp 1339-1344, </pages> <month> July </month> <year> 1992. </year>
Reference: [11] <author> Ira S. Moskowitz and Myong H. Kang. </author> <title> "Covert Channels Hereto Stay?," </title> <type> COMPASS `94, </type> <year> 1994. </year>
Reference-contexts: This could eliminate the need for raising an ERROR condition when the desired miss percentage is exceeded, since the correct setting of r can be obtained mathematically from I and desired miss percentage. Secondly, in <ref> [11] </ref> the use of I as a measure of security is questioned. Examples of zero mutual information channels are provided, where short messages can be sent through without any errors (or loss in fidelity).
Reference: [12] <author> Sha L., R. Rajkumar and J. P. Lehoczky. </author> <title> "Priority Inheritance Protocol: An Approach to Real-time Synchronization," </title> <type> Technical Report, </type> <institution> Computer Science Department, Carnegie-Mellon University, </institution> <year> 1987. </year>
Reference-contexts: There have been a number of papers in the real-time databases Literature that have explored priority based scheduling approaches with respect to conventional databases [1], <ref> [12] </ref>, [14]. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reflects how close the transaction is to missing its deadline.
Reference: [13] <author> C. E. Shannon and W. Weaver. </author> <title> "The Mathematical Theory of Communication," </title> <publisher> The University of Illinois Press, </publisher> <address> Urbana, IL, </address> <year> 1949. </year>
Reference-contexts: The presence of noise decreases the information rate. Covert channel analysis is just a subset of information theory, which is concerned with sending signals from a transmitter to a receiver, with the possibility of noise degrading the signal fidelity. Shannon's pioneering work <ref> [13] </ref> gives an upper limit on the rate at which messages can be passed through the communication channel based solely on how noise affects the transmission of signals. In popular usage, the term "information" is elusive to define.
Reference: [14] <author> Sang H. Son, Juhnyoung Lee and Yi Lin. </author> <title> "Hybrid Protocols Using Dynamic Adjustment of Serialization Order for Real-Time Concurrency Control," </title> <journal> Real-Time Systems Journal, </journal> <volume> Vol. 4, No. 3, </volume> <pages> pp 269-276, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: There have been a number of papers in the real-time databases Literature that have explored priority based scheduling approaches with respect to conventional databases [1], [12], <ref> [14] </ref>. The problem arises when these approaches are applied to secure databases, because covert channels can be introduced by priority based scheduling. All existing real-time systems schedule transactions based on some priority scheme. The priority usually reflects how close the transaction is to missing its deadline. <p> This idea is adapted from <ref> [14] </ref>, where before cnt and after cnt are used to dynamically adjust the serialization order of transactions.
Reference: [15] <author> Sang H. Son and Bhavani Thuraisingham. </author> <title> "Towards a Multilevel Secure Database Management System for Real-Time Applications," </title> <booktitle> IEEE Workshop on Real-Time Applications, </booktitle> <address> New York, New York, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: As advances in multilevel security take place, MLS/DBMSs are also required to support real-time requirements. As more and more of such systems are in use, one cannot avoid the need for integrating real-time transaction processing techniques into MLS/DBMSs. In <ref> [15] </ref>, the security impact on real-time database systems is studied, but to the best of our knowledge, no work has been reported on developing DBMSs that are multilevel secure and that support real-time requirements.
Reference: [16] <author> Sang H. Son and R. David, </author> <title> "Design and Analysis of a Secure Two-Phase Locking Protocol," </title> <booktitle> 18th International Computer Software and Applications Conference (COMPSAC'94), </booktitle> <address> Taipei, Taiwan, </address> <month> November </month> <year> 1994, </year> <pages> pp 374-379. 24 </pages>
Reference-contexts: A real-time secure concurrency control must possess two characteristics high performance and minimal deadline miss percentage. The secure two phase locking protocol [3] was shown to yield best average case performance among all the secure concurrency control approaches whose performance was evaluated in <ref> [16] </ref>. We therefore use it as a basis for our approach to the problem of real-time secure concurrency control. From our discussion earlier in this paper, it is clear that priority based transaction scheduling is not feasible for a fully secure database system. <p> But a simple iterative solution for q can be 17 obtained easily using the Newton-Raphson method. While there is no direct mathematical relationship between the deadline miss percentage and these parameters, simulation studies <ref> [16] </ref> indicate that with increasing arrival rate (and therefore increasing r), the deadline miss percentage increases slowly but steadily up to a certain point, after which the system becomes unstable.
References-found: 16

