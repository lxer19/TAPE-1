URL: http://www.icsi.berkeley.edu/~luby/PAPERS/stocepsilon_1.ps
Refering-URL: http://www.icsi.berkeley.edu/~luby/derand.html
Root-URL: http://www.icsi.berkeley.edu
Title: Efficient construction of a small hitting set for combinatorial rectangles in high dimension  
Author: Nati Linial Michael Luby Michael Saks David Zuckerman 
Abstract: Given d, m and *, we deterministically produce a sequence of points S that hits every combinatorial rectangle in [m] d of volume at least *. Both the running time of the algorithm and jSj are polynomial in m log(d)=*. This algorithm has applications to deterministic constructions of small sample spaces for general multivalued random variables. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chor, B., Goldreich, O., </author> <title> "On the Power of Two-Point Based Sampling," </title> <journal> Journal of Complexity, </journal> <volume> Vol 5, </volume> <year> 1989, </year> <pages> pp. 96-106. </pages>
Reference-contexts: Over the past few years, research has centered on designing efficient algorithms for the witness finding problem that use fewer random bits. [5, Karp, Pippenger, Sipser] and [10, Sipser] introduced a randomized algorithm for witness finding that uses O (n) random bits, and subsequently <ref> [1, Chor, Goldreich] </ref> introduced a substantially simpler randomized algorithm that uses only 2n random bits.
Reference: [2] <author> Even, G., Goldreich, O., Luby, M., Nisan, N., Boban Velickovic, B., </author> <title> "Approximations of General Independent Distributions", </title> <booktitle> appears in the proceedings of the 24 th STOC, </booktitle> <year> 1992. </year>
Reference-contexts: This work was motivated by the problem of finding efficient constructions of small sample spaces that approximate the independent uniform distribution on many multivalued random variables (these can easily be used to simulate non-uniformly distributed random variables, see e.g., <ref> [2, Even, Goldreich, Luby, Nisan, Velickovic] </ref>). Let X = hX 1 ; : : : ; X d i be a sequence of d random variables taking on values in [m]. <p> As noted in <ref> [2] </ref>, the geometric version of the problem can be easily reduced to the combinatorial version we consider in this paper, where m = O (d=*). In our view, the result we give in this paper that solves the combinatorial problem is substantially stronger than a solution to the geometric problem. <p> In our view, the result we give in this paper that solves the combinatorial problem is substantially stronger than a solution to the geometric problem. Two constructions given in <ref> [2] </ref> are comparable to the work described here. The first is the construction of a set S of size (md) O (log (1=*)) and the second is the construction of a set S of size (md=*) O (log (d)) . One property of S in the constructions of [2] is stronger <p> given in <ref> [2] </ref> are comparable to the work described here. The first is the construction of a set S of size (md) O (log (1=*)) and the second is the construction of a set S of size (md=*) O (log (d)) . One property of S in the constructions of [2] is stronger than constructions described here: there S hits each combinatorial rectangle R a fraction of times that is within an additive factor * of vol (R) (and thus it follows that S hits each R with vol (R) * at least once). <p> On the other hand, the construction here improves over the constructions of <ref> [2] </ref> in terms of jSj, and this improvement is more substantial than might first appear. For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in [2] are of size <p> the constructions of <ref> [2] </ref> in terms of jSj, and this improvement is more substantial than might first appear. For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in [2] are of size n log (n) . One of the constructions in [2] is based on Nisan's pseudorandom generator that maps log 2 (n) bits to n O (1) (n) bits and fools any logspace machine [8, Nisan]. <p> For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in <ref> [2] </ref> are of size n log (n) . One of the constructions in [2] is based on Nisan's pseudorandom generator that maps log 2 (n) bits to n O (1) (n) bits and fools any logspace machine [8, Nisan]. Combinatorial rectangles may be viewed as nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in [2]. <p> of the constructions in <ref> [2] </ref> is based on Nisan's pseudorandom generator that maps log 2 (n) bits to n O (1) (n) bits and fools any logspace machine [8, Nisan]. Combinatorial rectangles may be viewed as nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in [2]. A similar idea gives the n log (n) size universal traversal sequences found in [N], which is the best explicit construction to date. <p> From these discussions, it is also clear that for any R with vol (R) * there is some s 2 S such that X (s) 2 R. 3 Open Problems The problem considered in this paper was directly motivated by the discrepancy problem stated in <ref> [2] </ref>. The discrepancy problem is the stronger version of the hitting problem, where, instead of hitting each rectangle R with vol (R) * at least once, each rectangle is hit 9 a fraction of times that is within * of its vol-ume. <p> the total volume where an odd number of rectangles intersect for any set of at most k rectangles has discrepancy at most *. (When k = 1 this is again the discrepancy problem.) A solution to this problem would immediately yield a polynomial time deterministic approximation algorithm for the GF <ref> [2] </ref> counting problem considered in [4, Karpinski, Luby] and [7, Luby, Velickovic, Wigderson]. As described in [7], some progress on this problem has been made using a different approach.
Reference: [3] <author> Friedman, J., </author> <title> "Constructing O(n log(n)) size monotone formulae for the kth threshold function of n boolean variables", </title> <journal> SIAM J. on Computing, </journal> <volume> Vol. 15, No. 3, </volume> <month> August </month> <year> 1986. </year>
Reference-contexts: The main property is that there is an a 2 A (3) such that vol (R (3) ) is not much smaller than vol (R (2) ). A (3) is similar to a family of functions pre viously introduced by [9, Schmidt, Siegel] and by <ref> [3, Friedman] </ref>.
Reference: [4] <author> Karpinski, M., Luby, M., </author> <title> "Approximating the Number of Solutions to a GF[2] Formula," </title> <journal> Journal of Algorithms, </journal> <volume> Vol. 14, No. 2, </volume> <month> March </month> <year> 1993, </year> <pages> pp. 280-287. </pages>
Reference-contexts: odd number of rectangles intersect for any set of at most k rectangles has discrepancy at most *. (When k = 1 this is again the discrepancy problem.) A solution to this problem would immediately yield a polynomial time deterministic approximation algorithm for the GF [2] counting problem considered in <ref> [4, Karpinski, Luby] </ref> and [7, Luby, Velickovic, Wigderson]. As described in [7], some progress on this problem has been made using a different approach.
Reference: [5] <author> Karp, R. Pippenger, N. and Sipser, M., </author> <title> "Time-Randomness Tradeoff", </title> <booktitle> presented at the AMS conference on probabilistic computational complexity, </booktitle> <address> Durham, New Hampshire, </address> <year> 1982. </year>
Reference-contexts: A solution to the witness finding problem is a key component in many known efficient randomized algorithm. Typically in these applications, 1=* is polynomial in n. Over the past few years, research has centered on designing efficient algorithms for the witness finding problem that use fewer random bits. <ref> [5, Karp, Pippenger, Sipser] </ref> and [10, Sipser] introduced a randomized algorithm for witness finding that uses O (n) random bits, and subsequently [1, Chor, Goldreich] introduced a substantially simpler randomized algorithm that uses only 2n random bits.
Reference: [6] <author> Luby, M., Velickovic, B., </author> <title> "On Deterministic Approximation of DNF", </title> <booktitle> Proc. 23rd STOC, </booktitle> <year> 1991, </year> <pages> pp. 430-438. </pages>
Reference-contexts: As described in <ref> [6, Luby, Velickovic] </ref>, some progress on this problem has been made using a different approach. Another natural generalization of the discrepancy problem is the following.
Reference: [7] <author> Michael Luby, Avi Wigderson and Boban Velickovic, </author> <title> "Deterministic Approximate Counting of Depth-2 Circuits", </title> <booktitle> work in progress, </booktitle> <year> 1992. </year>
Reference-contexts: intersect for any set of at most k rectangles has discrepancy at most *. (When k = 1 this is again the discrepancy problem.) A solution to this problem would immediately yield a polynomial time deterministic approximation algorithm for the GF [2] counting problem considered in [4, Karpinski, Luby] and <ref> [7, Luby, Velickovic, Wigderson] </ref>. As described in [7], some progress on this problem has been made using a different approach. <p> As described in <ref> [7] </ref>, some progress on this problem has been made using a different approach.
Reference: [8] <author> Nisan, N., </author> <title> "Pseudo-random Generators for Space-Bounded Computation", </title> <booktitle> 22 nd STOC, </booktitle> <month> May 14-16 </month> <year> 1990, </year> <pages> pp. 204-212. </pages>
Reference-contexts: In contrast, the constructions in [2] are of size n log (n) . One of the constructions in [2] is based on Nisan's pseudorandom generator that maps log 2 (n) bits to n O (1) (n) bits and fools any logspace machine <ref> [8, Nisan] </ref>. Combinatorial rectangles may be viewed as nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in [2]. A similar idea gives the n log (n) size universal traversal sequences found in [N], which is the best explicit construction to date.
Reference: [9] <author> Schmidt, J., Siegel, A., </author> <title> "The Spatial Complexity of oblivious k-probe hash functions", </title> <journal> Siam Journal on Computing, </journal> <volume> 19 (1990), </volume> <pages> pp. 775-786. </pages>
Reference-contexts: The main property is that there is an a 2 A (3) such that vol (R (3) ) is not much smaller than vol (R (2) ). A (3) is similar to a family of functions pre viously introduced by <ref> [9, Schmidt, Siegel] </ref> and by [3, Friedman].
Reference: [10] <author> Sipser, M., "Expanders, </author> <title> Randomness, or Time vs. Space," </title> <booktitle> in Proceedings of Conference on Structure in Complexity, </booktitle> <year> 1986. </year>
Reference-contexts: Typically in these applications, 1=* is polynomial in n. Over the past few years, research has centered on designing efficient algorithms for the witness finding problem that use fewer random bits. [5, Karp, Pippenger, Sipser] and <ref> [10, Sipser] </ref> introduced a randomized algorithm for witness finding that uses O (n) random bits, and subsequently [1, Chor, Goldreich] introduced a substantially simpler randomized algorithm that uses only 2n random bits.
Reference: [11] <author> D. Zuckerman, </author> <title> "Simulating BPP Using a General Weak Random Source," </title> <booktitle> 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1991, </year> <pages> pp. 79-89. 10 </pages>
Reference-contexts: Recall from Lemma 8 that, for all j 2 [p (3) ], fi j = jR j j=jT (2) j 3=8. The following lemma is due to <ref> [11, Zuckerman] </ref>. Lemma 9 There is a t 2 T (2) and n 2 N (1) such that Z (n; t) 2 R (4) . Fix : t fl (1) 2 N (1) so as to satisfy Lemma 9.
References-found: 11

