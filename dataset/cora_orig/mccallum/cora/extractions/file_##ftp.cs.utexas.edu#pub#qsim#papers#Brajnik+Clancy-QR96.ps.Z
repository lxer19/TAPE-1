URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Brajnik+Clancy-QR96.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/abstracts-tl.html
Root-URL: 
Email: giorgio@dimi.uniud.it  clancy@cs.utexas.edu  
Title: In Tenth International Workshop on Qualitative Reasoning (QR '96) Temporal Constraints on Tra jectories in
Author: Fallen Leaf Giorgio Brajnik Daniel J. Clancy 
Affiliation: Dip. di Matematica e Informatica Universita di Udine  Department of Computer Sciences University of Texas at Austin  
Date: May, 1996.  
Address: Lake, CA;  Udine Italy  Austin, Texas 78712  
Abstract: We present a new method for specifying temporal constraints on trajectories of dynamical systems and enforcing them during qualitative simulation. Such constraints are otherwise inexpressible using standard qualitative reasoning techniques. Trajectory constraints can be used to restrict the simulation to a region of the state space and to inject discontinuities. This capability can be used to focus the simulation for larger, more complex simulations, simulate nonautonomous and piecewise-continuous systems, reason about boundary condition problems and incorporate observations into the simulation. The method has been implemented in TeQSIM, a qualitative simulator. It combines the expressive power of qualitative differential equations with temporal logic by interleaving temporal logic model checking with the simulation to constrain and refine the resulting predicted behaviors and to inject discontinuous changes into the simulation. The paper discusses the applicability of temporal constraints in tasks ranging from simulation to monitoring and control of continuous dynamical systems. We present a real-world control problem in the domain of water supply. Finally, the basic algorithm and theoretical results (soundness and completeness) are described. 
Abstract-found: 1
Intro-found: 1
Reference: <author> J. F. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: The trajectory specification language can be compared to other formalisms for specifying temporal constraints. Our language is similar in expressiveness to both Allen's interval algebra <ref> (Allen, 1984) </ref> and Dechter, Meiri and Pearl's temporal constraint networks (Dechter et al., 1991). The usage of the language in TeQSIM, however, is quite different from these two formalisms.
Reference: <author> R. Alur and T. Henzinger. </author> <title> Real-time logics: complexity and expressiveness. </title> <journal> Information and Computation, </journal> <volume> 104(1) </volume> <pages> 35-77, </pages> <year> 1993. </year>
Reference-contexts: Getting a definite answer for formulae such as (eventually p) is not always possible when potentially infinite behaviors are encountered since it is always possible for p to occur in the future. Metric temporal logic <ref> (Alur and Henzinger, 1993) </ref> allows the definition of a horizon for a temporal logic expression. This would allow statements such as "within 50 seconds the tanks level reaches 70 inches." These statements are only expressible within our logic using an externally defined event.
Reference: <author> G. Bhat, R. Cleaveland, and O. Grumberg. </author> <title> Efficient on-the-fly model checking for CTL*. </title> <booktitle> In Proc. of Conference on Logic in Computer Science (LICS-95), </booktitle> <year> 1995. </year>
Reference-contexts: Finally, the current algorithm for incremental model checking is inefficient if compared to the on-the-fly model checker algorithm developed by Bhat and colleagues <ref> (Bhat et al., 1995) </ref>. 3 We are planning to incorporate it within TeQSIM. Conclusions Qualitative simulation and temporal logic are two alternative formalisms for reasoning about change across time. TeQSIM integrates these two paradigms.
Reference: <author> G. Brajnik and D. J. Clancy. </author> <title> Temporal constraints on trajectories in qualitative simulation. </title> <type> Technical Report UDMI-RT-01-96, </type> <institution> Dip. di Matematica e In-formatica, University of Udine, Udine, Italy, </institution> <month> January </month> <year> 1996. </year>
Reference: <author> G. Brajnik and D. J. Clancy. </author> <title> Guiding and refining simulation using temporal logic. </title> <booktitle> In Proc. of the Third International Workshop on Temporal Representation and Reasoning (TIME'96), </booktitle> <address> Key West, Florida, </address> <month> May </month> <year> 1996. </year> <note> IEEE Computer Society Press. To appear. </note>
Reference: <author> G. Brajnik. </author> <title> Introducing boundary conditions in semi-quantitative simulation. </title> <booktitle> In Ninth International Workshop on Qualitative Reasoning, </booktitle> <pages> pages 22-31, </pages> <address> Amsterdam, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Qualitative reasoning uses continuity constraints to restrict the possible changes that can occur within a system. In order to predict the effects of discontinuous changes, however, continuity constraints have to be relaxed leading to a combinatorial explosion of possible outcomes. Continuity relaxation <ref> (Brajnik, 1995) </ref> is a technique that propagates the effects of a discontinu-ous change through the model by identifying variables that are necessarily continuous and variables that are potentially discontinuous.
Reference: <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: The trajectory specification language can be compared to other formalisms for specifying temporal constraints. Our language is similar in expressiveness to both Allen's interval algebra (Allen, 1984) and Dechter, Meiri and Pearl's temporal constraint networks <ref> (Dechter et al., 1991) </ref>. The usage of the language in TeQSIM, however, is quite different from these two formalisms.
Reference: <author> D. DeCoste. </author> <title> Goal-directed qualitative reasoning with partial states. </title> <type> Technical Report 57, </type> <institution> The Institute for the Learning Sciences, University of Illinois at Urbana-Champaign, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Table 1 describes some of the tasks that have been addressed using trajectory information. Related Work While the incorporation of trajectory information into a qualitative simulation has been investigated in the literature, it has not been extensively explored. De-Coste <ref> (DeCoste, 1994) </ref> introduces sufficient discriminatory envisionments to determine whether a goal region is possible, impossible or inevitable from each state of the space. This is performed by generating the simplest state description that is sufficient for inferring these discriminations. Discrete actions are handled using the action-augmented envisionment method reviewed below.
Reference: <author> E.A. Emerson. </author> <title> Temporal and modal logic. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 995-1072. </pages> <publisher> Elsevier Science Publishers/MIT Press, </publisher> <year> 1990. </year> <note> Chap. 16. </note>
Reference-contexts: Temporal logic model checking is interleaved with the simulation process to ensure that only behaviors satisfying the set of temporal logic expressions are included within the resulting description. The temporal logic used is a variation of a propositional linear-time temporal logic (PLTL) <ref> (Emerson, 1990) </ref>. It combines state formulae specifying both qualitative and quantitative information about a qualitative state with temporal operators such as until, always, and eventually that quantify such properties over a sequence of states. <p> These abbreviations are described in figure 7. Temporal logic formulae are given meaning with respect to linear-time interpretation structures. These structures are extended from their typical definition (e.g. <ref> (Emerson, 1990) </ref>) in order to accommodate the refinement of QSIM behaviors with quantitative information. In addition to defining a sequence of states and a propositional interpretation function, means for representing, generating and applying refinement conditions are provided.
Reference: <author> K. Forbus. </author> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference: <author> K. Forbus. </author> <title> Introducing actions into qualitative simulation. </title> <booktitle> In IJCAI-89, </booktitle> <pages> pages 1273-1278, </pages> <year> 1989. </year>
Reference-contexts: The appropriate truth value is returned depending upon whether or not the description satisfies the expression. Our work focuses on constraining the simulation as opposed to testing a simulation after it is completed. Forbus <ref> (Forbus, 1989) </ref> explicitly introduces the concept of discrete action, with pre and post-conditions in the action-augmented envisionment. The purely qualitative total envisionment that is generated includes all possible instantiation of known actions.
Reference: <author> Y. Iwasaki, A. Farquhar, V. Saraswat, D. Bobrow, and V. Gupta. </author> <title> Modeling time in hybrid systems: how fast is "instantaneous"? In Proc. </title> <booktitle> of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1773-1780, </pages> <address> Montreal, Canada, 1995. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: The former requires a complex machinery to compute the limit of the quick change, whereas the latter is based on heuristic criteria for selecting appropriate states. Both methods are interesting, but their effectiveness and formal properties are difficult to ascertain. Iwasaki and colleagues <ref> (Iwasaki et al., 1995) </ref> discuss the semantics of discontinuous changes that is more appropriate when dealing with hybrid systems. Their work leads to the adoption of a complex nonstandard analysis semantics for reals and the development of a mechanism similar to continuity relaxation but requiring user-supplied frame axioms.
Reference: <author> B.J. Kuipers and B. Shults. </author> <title> Reasoning in logic about continuous change. </title> <editor> In J. Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning, </booktitle> <address> San Mateo, CA, </address> <year> 1994. </year> <booktitle> Fourth International Conference (KR-94), </booktitle> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: This allows behaviors to be filtered and refined as early as possible during the simulation. Our algorithm is derived from the one described in <ref> (Kuipers and Shults, 1994) </ref>; however, it has been modified to deal with conditionally true formulae and to cope with behaviors which are not closed, i.e. which are still to be extended by the simulator and it may be still undetermined whether or not they satisfy a given temporal logic formula. <p> TeQSIM, within a more rigorously formalized framework, provides a more expressive language, it refines behaviors as opposed to just filtering them, and it incorporates discontinuous changes into behaviors. The integration of temporal logic model checking and qualitative simulation was initially investigated by Kuipers and Shults <ref> (Kuipers and Shults, 1994) </ref>. They use a branching-time temporal logic to prove properties about continuous systems by testing the entire behavioral description against a temporal logic expression. The appropriate truth value is returned depending upon whether or not the description satisfies the expression.
Reference: <author> B.J. Kuipers. </author> <title> Qualitative Reasoning: modeling and simulation with incomplete knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: This allows behaviors to be filtered and refined as early as possible during the simulation. Our algorithm is derived from the one described in <ref> (Kuipers and Shults, 1994) </ref>; however, it has been modified to deal with conditionally true formulae and to cope with behaviors which are not closed, i.e. which are still to be extended by the simulator and it may be still undetermined whether or not they satisfy a given temporal logic formula. <p> TeQSIM, within a more rigorously formalized framework, provides a more expressive language, it refines behaviors as opposed to just filtering them, and it incorporates discontinuous changes into behaviors. The integration of temporal logic model checking and qualitative simulation was initially investigated by Kuipers and Shults <ref> (Kuipers and Shults, 1994) </ref>. They use a branching-time temporal logic to prove properties about continuous systems by testing the entire behavioral description against a temporal logic expression. The appropriate truth value is returned depending upon whether or not the description satisfies the expression.
Reference: <author> T. Nishida and S. Doshita. </author> <title> Reasoning about discontinuous change. </title> <booktitle> In AAAI87, </booktitle> <pages> pages 643-648, </pages> <year> 1987. </year>
Reference-contexts: Forbus allows only instantaneous actions and adopts heuristic criteria (based on minimality of the change in the description) to handle discontinuities. No provision is made to handle quantitative information, nor to prove correctness of the discontinuity handling mechanism. Dis-continuities have been investigated also by Nishida and Doshita <ref> (Nishida and Doshita, 1987) </ref>, who describe two methods for handling discontinuities caused by external agents or generated autonomously within a system (e.g. change in operating regime): (i) approximating a discontinuous change by a quick continuous change and (ii) introducing "mythical states" to describe how a system is supposed to evolve during
Reference: <author> B. Shults and B. J. Kuipers. </author> <title> Qualitative simulation and temporal logic: proving properties of continuous systems. </title> <type> Technical Report TR AI96-244, </type> <institution> University of Texas at Austin, Dept. of Computer Sciences, </institution> <month> Jan-uary </month> <year> 1996. </year>
Reference-contexts: We extended the temporal operators defined by Kuipers and Shults <ref> (Shults and Kuipers, 1996) </ref> to provide a more abstract language to simplify specification of assertions. These abbreviations are described in figure 7. Temporal logic formulae are given meaning with respect to linear-time interpretation structures. <p> The algorithm, described in <ref> (Shults and Kuipers, 1996) </ref>, computes the function t : Formulae fi Behaviors ! fT; F; Ug fi Conditions, where Conditions is the set of all possible refinement conditions including the trivial condition TRUE. A definite answer (i.e.
Reference: <author> T. Washio and M. Kitamura. </author> <title> A fast history-oriented envisioning method introducing temporal logic. </title> <booktitle> In Ninth International Workshop on Qualitative Reasoning, </booktitle> <pages> pages 279-288, </pages> <address> Amsterdam, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Washio and Kitamura <ref> (Washio and Kitamura, 1995) </ref> present a technique that uses temporal logic to perform a history oriented envi-sionment to filter predictions. TeQSIM, within a more rigorously formalized framework, provides a more expressive language, it refines behaviors as opposed to just filtering them, and it incorporates discontinuous changes into behaviors.
References-found: 17

