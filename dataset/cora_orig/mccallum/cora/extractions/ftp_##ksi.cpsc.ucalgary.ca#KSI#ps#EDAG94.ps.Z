URL: ftp://ksi.cpsc.ucalgary.ca/KSI/ps/EDAG94.ps.Z
Refering-URL: http://ksi.cpsc.ucalgary.ca/articles/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: gaines@cpsc.ucalgary.ca  
Title: Transforming Rules and Trees into Comprehensible Knowledge Structures  
Author: Brian R. Gaines 
Address: Alberta, Canada T2N 1N4  
Affiliation: Knowledge Science Institute University of Calgary  
Abstract: The problem of transforming the knowledge bases of expert systems using induced rules or decision trees into comprehensible knowledge structures is addressed. A knowledge structure is developed that generalizes and subsumes production rules, decision trees, and rules with exceptions. It gives rise to a natural complexity measure that allows them to be understood, analyzed and compared on a uniform basis. The structure is a directed acyclic graph with the semantics that nodes are premises, some of which have attached conclusions, and the arcs are inheritance links with disjunctive multiple inheritance. A detailed example is given of the generation of a range of such structures of equivalent performance for a simple problem, and the complexity measure of a particular structure is shown to relate to its perceived complexity. The simplest structures are generated by an algorithm that factors common sub-premises from the premises of rules. A more complex example of a chess dataset is used to show the value of this technique in generating comprehensible knowledge structures. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Cendrowska, J. </author> <year> 1987. </year> <title> An algorithm for inducing modular rules. </title> <journal> International Journal of Man - Machine Studies 27(4) 349-370. </journal>
Reference-contexts: The second and third stages of factoring can be applied to any set of production rules represented as an EDAG, and it is appropriate to do so to C4.5 and PRISM rules when comparing methodologies and illustrating EDAGs as knowledge structures. The familiar contact lens prescription problem <ref> (Cendrowska, 1987) </ref> will be used to illustrate the EDAG as a knowledge structure. The problem involves three 2-valued attributes, one 3-valued attribute, and a 3-valued conclusion.
Reference: <author> Clancey, W.J. </author> <year> 1987. </year> <title> From GUIDON to NEOMYCIN and HERACLES in twenty short lessons. </title> <booktitle> Current Issues in Expert Systems. </booktitle> <pages> 79-123. </pages> <address> London: </address> <publisher> Academic Press. </publisher>
Reference-contexts: Clancey, who has played a major role in promoting this paradigm shift (Clancey, 1989; 1993), has done so in part based on his experience in developing overt knowledge structures from MYCIN rules to support GUIDON <ref> (Clancey, 1987) </ref> as a teaching system based on MYCIN. The development of excellent performance systems will remain a major practical objective regardless of the comprehensibility of the basis of their performance.
Reference: <author> Clancey, W.J. </author> <year> 1989. </year> <title> Viewing knowledge bases as qualitative models. </title> <journal> IEEE Expert 4(2) 9-23. </journal>
Reference: <author> Clancey, W.J. </author> <year> 1993. </year> <title> The knowledge level reinterpreted: modeling socio-technical systems. </title> <journal> International Journal of Intelligent Systems 8(1) 33-49. </journal>
Reference-contexts: It is not obvious that an excellent performance system necessarily implies the existence of a comprehensible knowledge structure to be discovered. Human practical reasoning does not require overt knowledge structures (Gaines, 1993b), and the supposition of an implicit structure, 2 or mental model, is a construct of the observer <ref> (Clancey, 1993) </ref>. In the knowledge acquisition community expertise transfer paradigms have been replaced in recent years by knowledge modeling paradigms (Schreiber, Wielinga and Breuker, 1993) that impute the resultant overt knowledge to the modeling process, not to some hypothetical knowledge base within the expert.
Reference: <author> Compton, P. and Jansen, R. </author> <year> 1990. </year> <title> A philosophical basis for knowledge acquisition. Knowledge Acquisition 2(3) 241-258. </title> <type> 17 Gaines, B.R. </type> <year> 1977. </year> <title> System identification, approximation and complexity. </title> <journal> International Journal of General Systems 2(3) 241-258. </journal>
Reference: <author> Gaines, B.R. </author> <year> 1989. </year> <title> An ounce of knowledge is worth a ton of data: quantitative studies of the tradeoff between expertise and data based on statistically well-founded empirical induction. </title> <booktitle> Proceedings of the Sixth International Workshop on Machine Learning. </booktitle> <pages> 156-159. </pages> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This notion of context is that suggested by Compton and Jansen (1990) in their analysis of rippledown rules, the difference being that EDAG contexts are not necessarily mutually exclusive. 4 Inducing EDAGs Induct <ref> (Gaines, 1989) </ref> is used to generate EDAGs through a threestage process. First, it is used to generate rules with exceptions. Second, the premises of the rules are factored to extract common sub-premises (which are not necessarily unique, e.g.
Reference: <author> Gaines, B.R. </author> <year> 1991a. </year> <title> Empirical investigations of knowledge representation servers: Design issues and applications experience with KRS. </title> <journal> ACM SIGART Bulletin 2(3) 45-56. </journal>
Reference: <author> Gaines, B.R. </author> <year> 1991b. </year> <title> Integrating rules in term subsumption knowledge representation servers. </title> <booktitle> AAAI91: Proceedings of the Ninth National Conference on Artificial Intelligence. </booktitle> <pages> 458-463. </pages> <address> Menlo Park, California: </address> <publisher> AAAI Press/MIT Press. </publisher>
Reference: <author> Gaines, B.R. </author> <year> 1991c. </year> <title> An interactive visual language for term subsumption visual languages. </title> <booktitle> IJCAI91: Proceedings of the Twelfth International Joint Conference on Artificial Intelligence. </booktitle> <pages> 817-823. </pages> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: At the top right is a partial view of a KMap window with the C4.5 rules of Figure 11 represented graphically, and at the bottom is a KMap window with the ID3 rules of Figure 10 represented graphically. KMap is a general visual language tool for knowledge structures <ref> (Gaines, 1991c) </ref> and concept maps (Gaines and Shaw, 1994). Induct exports its derived EDAGs as graphs in KMap, and edited graphs in KMap may be pasted back into Induct for evaluation of error rates.
Reference: <author> Gaines, B.R. </author> <year> 1991d. </year> <title> Refining induction into knowledge. </title> <booktitle> Proceedings of the AAAI Workshop on Knowledge Discovery in Databases. </booktitle> <pages> 1-10. </pages> <address> Menlo Park, California: </address> <publisher> AAAI. </publisher>
Reference-contexts: Rules with exceptions form an EDAG in which every node has a conclusion. Rules with exceptions with their premises factored for common sub-premises <ref> (Gaines, 1991d) </ref> form a general EDAG. The direction of arrows in Figure 1 indicates the decision-making paths. However, if the arrows are reversed they become the isa arrows of a semantic network showing inheritance among premises, with multiple inheritance read disjunctively.
Reference: <author> Gaines, B.R. </author> <year> 1993a. </year> <title> A class library implementation of a principled open architecture knowledge representation server with plug-in data types. </title> <booktitle> IJCAI93: Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence . 504-509. </booktitle> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Gaines, B.R. </author> <year> 1993b. </year> <title> Modeling practical reasoning. </title> <journal> International Journal of Intelligent Systems 8(1) 51-70. </journal>
Reference-contexts: It is not obvious that an excellent performance system necessarily implies the existence of a comprehensible knowledge structure to be discovered. Human practical reasoning does not require overt knowledge structures <ref> (Gaines, 1993b) </ref>, and the supposition of an implicit structure, 2 or mental model, is a construct of the observer (Clancey, 1993).
Reference: <author> Gaines, B.R. </author> <year> 1994. </year> <title> Class library implementation of an open architecture knowledge support system. </title> <journal> International Journal Human-Computer Studies 41(1-2) 59-107. </journal>
Reference-contexts: Figure 17 shows the Induct and KMap tools in KSSn <ref> (Gaines, 1994) </ref> being used to edit and evaluate EDAGs for the chess end game discussed above. At the top left is an Induct server window with the chess data loaded. <p> KMap is a general visual language tool for knowledge structures (Gaines, 1991c) and concept maps <ref> (Gaines and Shaw, 1994) </ref>. Induct exports its derived EDAGs as graphs in KMap, and edited graphs in KMap may be pasted back into Induct for evaluation of error rates.
Reference: <author> Gaines, B.R. </author> <year> 1995. </year> <title> Inducing knowledge. Proceedings of the Ninth Knowledge Acquisition for Knowledge-Based Systems Workshop. </title> <note> to appear. </note> <institution> Alberta: University of Calgary. </institution>
Reference-contexts: EDAG inference is computationally simple, even under conditions of partial information, and its simplicity should make it easily understood by people. 16 The EDAGs studied in this article are simple and leave open the question of the scalability of the methodology to more significant problems. A recent study <ref> (Gaines, 1995) </ref> has used EDAGs to reconstruct Shapiros (1987) structured induction of a solution to the rook version pawn end - game when the pawn is about to queen. Replacing the ID3 trees with EDAGs results in a very much smaller solution to the problem that is more comprehensible.
Reference: <author> Gaines, B.R. and Shaw, M.L.G. </author> <year> 1994. </year> <title> Concept maps indexing multimedia knowledge bases. AAAI-94 Workshop: Indexing and Reuse in Multimedia Systems . 36-45. </title> <address> Menlo Park, California: </address> <publisher> AAAI. </publisher>
Reference-contexts: Figure 17 shows the Induct and KMap tools in KSSn <ref> (Gaines, 1994) </ref> being used to edit and evaluate EDAGs for the chess end game discussed above. At the top left is an Induct server window with the chess data loaded. <p> KMap is a general visual language tool for knowledge structures (Gaines, 1991c) and concept maps <ref> (Gaines and Shaw, 1994) </ref>. Induct exports its derived EDAGs as graphs in KMap, and edited graphs in KMap may be pasted back into Induct for evaluation of error rates.
Reference: <author> Kohavi, R. </author> <year> 1994. </year> <title> Bottom-up induction of oblivious read-once decision graphs: strengths and limitations. </title> <booktitle> AAAI94: Proceedings of the Twelfth National Conference on Artificial Intelligence. </booktitle> <pages> 613-618. </pages> <address> Menlo Park, California: </address> <publisher> AAAI Press/MIT Press. </publisher>
Reference: <author> Li, X. </author> <year> 1991. </year> <title> Whats so bad about rule-based programming? IEEE Software 103-105. </title>
Reference-contexts: This problem is common to both the manually and inductively derived rule sets, and seems intrinsic to the use of tree or rule structures as the basis of performance systems <ref> (Li, 1991) </ref>. It is not obvious that an excellent performance system necessarily implies the existence of a comprehensible knowledge structure to be discovered.
Reference: <author> Nosek, J.T. and Roth, I. </author> <year> 1990. </year> <title> A comparison of formal knowledge representations as communication tools: predicate logic vs semantic network. </title> <journal> International Journal of Man - Machine Studies 33 227-239. </journal>
Reference: <author> Oliver, J.J. </author> <year> 1993. </year> <title> Decision graphs - an extension of decision trees. </title> <booktitle> Proceedings of 4th International Workshop on AI and Statistics. </booktitle> <pages> 343-350. </pages>
Reference: <author> Quinlan, J.R. </author> <year> 1979. </year> <title> Discovering rules by induction from large collections of examples. </title> <booktitle> Expert Systems in the Micro Electronic Age. </booktitle> <pages> 168-201. </pages> <publisher> Edinburgh: Edinburgh University Press. </publisher> <address> 18 Quinlan, J.R. </address> <year> 1991. </year> <title> Foreword. Knowledge Discovery in Databases . ix-xii. </title> <address> Cambridge, Massachusetts: </address> <publisher> MIT Press. </publisher>
Reference: <author> Schreiber, A.T., Wielinga, B.J. and Breuker, J.A., Ed. </author> <year> 1993. </year> <title> KADS: A Principled Approach to Knowledge-based System Development. </title> <publisher> London: Academic Press. </publisher>
Reference-contexts: Human practical reasoning does not require overt knowledge structures (Gaines, 1993b), and the supposition of an implicit structure, 2 or mental model, is a construct of the observer (Clancey, 1993). In the knowledge acquisition community expertise transfer paradigms have been replaced in recent years by knowledge modeling paradigms <ref> (Schreiber, Wielinga and Breuker, 1993) </ref> that impute the resultant overt knowledge to the modeling process, not to some hypothetical knowledge base within the expert.
Reference: <author> Shapiro, A.D. </author> <year> 1987. </year> <title> Structured Induction in Expert Systems. </title> <address> Wokingham, UK: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Shum, S.B. and Hammond, N. </author> <year> 1994. </year> <title> Argumentation-based design rationale: what use at what cost? International Journal of Human-Computer Studies 40(4) 603-652. </title>
References-found: 23

