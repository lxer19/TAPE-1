URL: http://www.cs.pitt.edu/~hua/report.ps
Refering-URL: 
Root-URL: 
Email: -chang, cwyoo, hua-@cs.pitt.edu  
Title: VISUAL ABSTRACTION IN THE VISUAL DESIGN PROCESS  
Author: S. K. Chang, W. Hua and C. W. Yoo 
Keyword: Visual abstraction, visual diagrams, software engineering principles for visual design, visual software engineering  
Address: Pittsburgh, Pittsburgh, PA 15260 USA  
Affiliation: Department of Computer Science University of  
Abstract: We investigate the properties of syntactically well-formed, semantically valid and pragmatically admissable visual diagrams for the visual design process, supporting transformations among visual diagrams at different levels of abstraction. With this characterization of the visual design process, sound software engineering principles can be applied to the visual design process to effectively and efficiently accomplish the design objectives. This merger of visual design process with software engineering may also lead to the new discipline of visual software engineering. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. K. Chang and P. Mussio, </author> <title> "Customized Visual Language Design", </title> <booktitle> Proc. of Eighth Int'l Conference on Software Engineering and Knowledge Engineering, </booktitle> <address> June 10-12, 1996, Lake Tahoe, Nevada, </address> <pages> 553-562. </pages>
Reference-contexts: Thus the designer is constantly "programming" through continuous interaction with the visual diagram although the designer may not know he (she) is "programming". This instance of the visual diagram is called a visual sentence <ref> [1] </ref>. Moreover, the designer does not merely interact with the visual diagram at a fixed level of abstraction. The visual sentence can be transformed into other visual sentences. Thus our viewpoint leads to a transformational framework. <p> Even though visual languages are rapidly gaining importance, there is yet to be developed a standard set of criteria that measures the quality of visual languages. In <ref> [1] </ref> S.K. Chang and P. Mussio proposed a practical set of design criteria for visual languages, based upon the theory of visual sentences as programs.
Reference: [2] <author> Eric J. Golin, </author> <title> "Parsing Visual Languages with Picture Layout Grammars", </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> Vol. 2, No. 4, </volume> <pages> pp. 371-393, </pages> <year> 1991. </year>
Reference-contexts: Diagram is a popular representation for visual languages. Daniel D. Hils [4] had a survey of data flow visual languages. Some research have been done to define the syntax of the visual language. In his papers <ref> [2, 3] </ref>, Eric J. Golin uses the picture layout grammar to define the syntax of visual languages. A. Papantonakis and P. J. H. King [6] give the attribute grammar and semantics of their graphical query language. Joe Marks [5] also describes the syntax and semantics of the network diagram.
Reference: [3] <author> Eric J. Golin and Steven P. Reiss, </author> <title> "The Specification of Visual Language syntax", </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> Vol. 1, No. 2, </volume> <pages> pp. 141-157, </pages> <year> 1990. </year>
Reference-contexts: Diagram is a popular representation for visual languages. Daniel D. Hils [4] had a survey of data flow visual languages. Some research have been done to define the syntax of the visual language. In his papers <ref> [2, 3] </ref>, Eric J. Golin uses the picture layout grammar to define the syntax of visual languages. A. Papantonakis and P. J. H. King [6] give the attribute grammar and semantics of their graphical query language. Joe Marks [5] also describes the syntax and semantics of the network diagram.
Reference: [4] <author> Daniel D. Hils, </author> <title> "Visual Languages and Computing Survey: Data Flow Visual Programming Languages", </title> <journal> Journal of Visual Languages and Computing, Vol.3, </journal> <volume> No. 4, </volume> <pages> pp. 69-101, </pages> <year> 1992. </year>
Reference-contexts: Diagram is a popular representation for visual languages. Daniel D. Hils <ref> [4] </ref> had a survey of data flow visual languages. Some research have been done to define the syntax of the visual language. In his papers [2, 3], Eric J. Golin uses the picture layout grammar to define the syntax of visual languages. A. Papantonakis and P. J. H.
Reference: [5] <author> Joe Marks, </author> <title> "A Formal Specification Scheme for Network Diagrams That Facilitates Automated Design", </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> Vol. 2, No. 4, </volume> <pages> pp. 395-414, </pages> <year> 1991. </year>
Reference-contexts: In his papers [2, 3], Eric J. Golin uses the picture layout grammar to define the syntax of visual languages. A. Papantonakis and P. J. H. King [6] give the attribute grammar and semantics of their graphical query language. Joe Marks <ref> [5] </ref> also describes the syntax and semantics of the network diagram. But none of the above works considers visual abstraction.
Reference: [6] <author> A. Papantonakis and P. J. H. King, </author> <title> "Syntax and Semantics of Gql, a Graphical Query Language", </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> Vol. 6, No. 1, </volume> <pages> pp. 3-25, </pages> <year> 1995. </year>
Reference-contexts: Some research have been done to define the syntax of the visual language. In his papers [2, 3], Eric J. Golin uses the picture layout grammar to define the syntax of visual languages. A. Papantonakis and P. J. H. King <ref> [6] </ref> give the attribute grammar and semantics of their graphical query language. Joe Marks [5] also describes the syntax and semantics of the network diagram. But none of the above works considers visual abstraction.
Reference: [7] <author> P. Roesch, </author> <title> "User Interaction in a Multi-View Design Environment", </title> <booktitle> IEEE Symposium on Visual Languages, </booktitle> <address> Sept 3-6, 1996, Boulder, </address> <pages> 316-323. </pages>
Reference-contexts: Since there is no adequate theoretical framework for visual abstraction, documentation and maintenance of visual diagrams then become a problem. On the other hand, adequate design tools should support multiple views in the design environment <ref> [7] </ref>. We are therefore faced with the following challenges: (a) how to formulate a theoretical framework for visual abstraction, (b) how to design software tools to provide various levels of abstraction and dynamic visualization, and (c) how to ensure the tools are adequate in supporting the designer's visual design process.
References-found: 7

