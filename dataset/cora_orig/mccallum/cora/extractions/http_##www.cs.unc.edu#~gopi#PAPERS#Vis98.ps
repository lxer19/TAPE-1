URL: http://www.cs.unc.edu/~gopi/PAPERS/Vis98.ps
Refering-URL: http://www.cs.unc.edu/~gopi/
Root-URL: http://www.cs.unc.edu
Email: fgopi,dmg@cs.unc.edu  
Title: A Unified Approach for Simplifying Polygonal and Spline Models  
Author: M. Gopi D. Manocha 
Keyword: CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object ModelingCurve, surface, solid, and object representations Keywords: model simplification, levels-of-detail, surface approximation, spline patches, surface fitting, dynamic tessellation  
Address: Chapel Hill  
Affiliation: Department of Computer Science University of North Carolina at  
Abstract: We present a new approach for simplifying models composed of polygons or spline patches. Given an input model, the algorithm computes a new representation of the model in terms of triangular Bezier patches. It performs a series of geometric operations, consisting of patch merging and swapping diagonals, and makes use of patch connectivity information to generate C-LODs (curved levels-of-detail). Each C-LOD is represented using cubic triangular Bezier patches. The C-LOD's provide a compact representation for storing the model. The algorithm tries to minimize the surface deviation error and maintains continuity at patch boundaries. Given the CLOD's, the algorithm can generate their polygonal approximations using static and dynamic tessellation schemes. It has been implemented and we highlight its performance on a number of polygonal and spline models. 
Abstract-found: 1
Intro-found: 1
Reference: [BS96] <author> C. Bajaj and D. Schikore. </author> <title> Error-bounded reduction of triangle meshes with multivariate data. </title> <booktitle> SPIE, </booktitle> <address> 2656:3445, </address> <year> 1996. </year>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal <ref> [BS96, SZL92, Tur92] </ref> and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models.
Reference: [COM98] <author> J. Cohen, M. Olano, and D. Manocha. </author> <title> Appearance Preserving Simplification. </title> <note> In Proc. of ACM SIGGRAPH '98, To appear. </note>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models.
Reference: [EM98] <author> C. Erikson and D. Manocha. </author> <title> Simplification Culling of Static and Dynamic Scene Graphs. </title> <type> Technical Report, </type> <institution> TR98-009, Department of Computer Science, University of North Carolina at Chapel Hill, </institution> <year> 1998. </year>
Reference-contexts: We are also planning to make the patches strictly G 1 continuous, for improved visual quality, and use results from <ref> [EM98] </ref> to perform topological simplification.
Reference: [CMO97] <author> J. Cohen, D. Manocha, and M. Olano. </author> <title> Simplifying polygonal models using successive mappings. </title> <booktitle> In Proc. of IEEE Visualization, </booktitle> <pages> pages 395 402, </pages> <year> 1997. </year>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models.
Reference: [CVMe96] <author> J. Cohen, A. Varshney, D. Manocha, and G. Turk et al. </author> <title> Simplification envelopes. </title> <booktitle> In Proc. of ACM Siggraph'96, </booktitle> <pages> pages 119128, </pages> <year> 1996. </year>
Reference-contexts: These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models. Cohen et al. <ref> [CVMe96] </ref> and Eck et al. [EDD + 95] have presented algorithms that preserve the topology of the original object and give a global error bound on surface deviation. [DLW93, EDD + 95] have presented algorithms for multi-resolution analysis for surfaces of arbitrary topology types.
Reference: [dB74] <author> C. de Boor. </author> <title> Good aproximation by splines with variable knots-II. </title> <editor> In G. Watson, editor, </editor> <title> Numerical Solutions of Differential Equations, pages 1220. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1974. </year>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes [Sar90, Pet95, Loo94, EH96], using n-sided patches for fitting [LD90] and using spline approximation <ref> [dBF73, dB74] </ref>. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms. It can handle polygonal as well as spline models in a unified manner.
Reference: [dBF73] <author> C. de Boor and G. Fix. </author> <title> Spline approximation by quasi-interpolants. </title> <journal> J Approx. Theory, </journal> <volume> 8:1945, </volume> <year> 1973. </year>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes [Sar90, Pet95, Loo94, EH96], using n-sided patches for fitting [LD90] and using spline approximation <ref> [dBF73, dB74] </ref>. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms. It can handle polygonal as well as spline models in a unified manner.
Reference: [Die93] <author> P. Dierckx. </author> <title> Curve and Surface Fitting with Splines. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: There exists algorithms for polygonal models to simplify the topology also ([EM98]). 2.2 Surface Fitting The problem of fitting spline patches to a polygonal model has been extensively studied in computer-aided geometric design. A survey of different techniques has been given in <ref> [Die93] </ref>. These include algorithms smooth spline surface over irregular meshes [Sar90, Pet95, Loo94, EH96], using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74].
Reference: [DLW93] <author> T. Derose, M. Lounsbery, and J. Warren. </author> <title> Multiresolution analysis for surfaces of arbitrary topology type. </title> <type> Technical Report TR 93-10-05, </type> <institution> Department of Computer Science, University of Washington, </institution> <year> 1993. </year>
Reference-contexts: They use different local and global error met-rics for simplifying polygonal models. Cohen et al. [CVMe96] and Eck et al. [EDD + 95] have presented algorithms that preserve the topology of the original object and give a global error bound on surface deviation. <ref> [DLW93, EDD + 95] </ref> have presented algorithms for multi-resolution analysis for surfaces of arbitrary topology types. Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs.
Reference: [EDD + 95] <author> M. Eck, T. DeRose, et al. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> SIGGRAPH 95 Conference Proceedings, </booktitle> <pages> pages 173182. </pages>
Reference-contexts: These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models. Cohen et al. [CVMe96] and Eck et al. <ref> [EDD + 95] </ref> have presented algorithms that preserve the topology of the original object and give a global error bound on surface deviation. [DLW93, EDD + 95] have presented algorithms for multi-resolution analysis for surfaces of arbitrary topology types. <p> They use different local and global error met-rics for simplifying polygonal models. Cohen et al. [CVMe96] and Eck et al. [EDD + 95] have presented algorithms that preserve the topology of the original object and give a global error bound on surface deviation. <ref> [DLW93, EDD + 95] </ref> have presented algorithms for multi-resolution analysis for surfaces of arbitrary topology types. Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs.
Reference: [EH96] <author> Matthias Eck and Hugues Hoppe. </author> <title> Automatic reconstruction of B-Spline surfaces of arbitrary topological type. </title> <booktitle> SIGGRAPH 96 Conference Proceedings. </booktitle>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes <ref> [Sar90, Pet95, Loo94, EH96] </ref>, using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms.
Reference: [ESV97] <author> J. El-Sana and A. Varshney. </author> <title> Controlled simplification of genus for polygonal models. </title> <booktitle> Proc. of IEEE Visualization, </booktitle> <pages> pages 403410, </pages> <year> 1997. </year>
Reference-contexts: Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification <ref> [ESV97] </ref>. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed [XESV97, Hop97]. Hoppe [Hop97] has also applied the resulting algorithm to small (in terms of number of patches) spline models.
Reference: [Far93] <author> G. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design: A Practical Guide. </title> <publisher> Academic Press Inc., </publisher> <year> 1993. </year>
Reference-contexts: The merging operation introduced in this section is based on the properties of the triangular patches and the well known de Casteljau subdivision algorithm for triangular patches. 4 Triangular B ezier Patches The Bezier triangular surface <ref> [Far93] </ref> of degree n can be written as, P (u; v; w) = (i;j;k);i+j+k=n P i;j;k B i;j;k (u; v; w) (1) where P (u; v; w) is a point on the surface, with the constraint w = 1 u v and i + j + k = n. <p> These two conditions are necessary and sufficient conditions for the patches to be G 1 continuous <ref> [Far93] </ref>. The three boundary curves of a triangular patch are Bezier curves formed by the boundary control points of the patch. <p> If the original patch was divided into two patches, the computation of (u; v; w) becomes simpler. One of the parameters is zero, and the others can be computed from the inverse de Casteljau algorithm for Bezier curve, as outlined in <ref> [Far93] </ref>. These techniques are used in our algorithms for patch merging. 5 Generating C-Models In this section we discuss algorithms to convert a few types of model representations to our C-Model representation. Our C-Model representation consists of a set of cubic Bezier triangular patches along with adjacency and topology information.
Reference: [GH97] <author> M. Garland and P. Heckbert. </author> <title> Surface simplification using quadric error bounds. </title> <booktitle> Proc. of SIGGRAPH '97, </booktitle> <pages> pages 209216. </pages>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models.
Reference: [Gop98] <author> M. Gopi, D. Manocha. </author> <title> A Unified Approach for Simplifying Polygonal and Spline Models. </title> <type> Technical Report TR98-021, </type> <institution> Department of Computer Science, University of North Carolina at Chapel Hill, </institution> <year> 1998. </year>
Reference-contexts: The vertex that loses an edge can be in any of the three states before the swap diagonal operation. It should be tagged retained after the swap diagonal operation, if it was not tagged removed before the operation <ref> [Gop98] </ref>. We will adopt this solution, when none of two 2T pattern or a T-in-T pattern match with the portion of the geometry. If a 2T pattern is matched, one vertex is tagged retained and one vertex is tagged removed. <p> Pointers exist in the Model class, only to the patches in the original model. No direct pointer is provided for each generated patch. Patches belonging to a specific C-LOD of a C-Model can be extracted by an interesting Patch class traversal using a linked list and is explained in <ref> [Gop98] </ref>. The algorithms and data structures have been designed to save run-time memory usage. A good balance of speed against memory is achieved in the implementation.
Reference: [Gue95] <author> A. Gueziec. </author> <title> Surface simplification with variable tolerance. </title> <booktitle> In Second Annual Intl. Symp. on Medical Robotics and Computer Assisted Surgery (MRCAS '95), </booktitle> <pages> pages 132139, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models.
Reference: [HDD + 93] <author> H. Hoppe, T. Derose, et al. </author> <title> Mesh optimization. </title> <booktitle> In Proc. of SIGGRAPH '93, </booktitle> <month> pages </month> <year> 1926. </year>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models.
Reference: [HDD + 94] <author> Hugues Hoppe, Tony DeRose, et al. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> Proc. of SIGGRAPH '94, </booktitle> <pages> pages 295302. </pages>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes [Sar90, Pet95, Loo94, EH96], using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction <ref> [HDD + 94] </ref>. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms. It can handle polygonal as well as spline models in a unified manner.
Reference: [Hop96] <author> Hugues Hoppe. </author> <title> Progressive meshes. </title> <booktitle> In Proc. of SIGGRAPH 96, </booktitle> <pages> pages 99108. </pages>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal [BS96, SZL92, Tur92] and edge collapsing <ref> [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98] </ref>. They use different local and global error met-rics for simplifying polygonal models. <p> Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe <ref> [Hop96] </ref> has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed [XESV97, Hop97]. Hoppe [Hop97] has also applied the resulting algorithm to small (in terms of number of patches) spline models.
Reference: [Hop97] <author> Hugues Hoppe. </author> <title> View dependent refinement of progressive meshes. </title> <booktitle> In Proc. of SIGGRAPH 97, </booktitle> <pages> pages 189198. </pages>
Reference-contexts: Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed <ref> [XESV97, Hop97] </ref>. Hoppe [Hop97] has also applied the resulting algorithm to small (in terms of number of patches) spline models. The algorithm pre-computes a polygonal approximation for a spline model, performs a series of edge-collapse operations on the polygonal model and stores the result as a progressive mesh. <p> Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed [XESV97, Hop97]. Hoppe <ref> [Hop97] </ref> has also applied the resulting algorithm to small (in terms of number of patches) spline models. The algorithm pre-computes a polygonal approximation for a spline model, performs a series of edge-collapse operations on the polygonal model and stores the result as a progressive mesh. <p> The algorithm pre-computes a polygonal approximation for a spline model, performs a series of edge-collapse operations on the polygonal model and stores the result as a progressive mesh. At run-time it refines the progressive mesh as a function of viewpoint <ref> [Hop97] </ref>. While this approach has some nice properties, its main limitations arise from using static tessellation algorithms and having relatively high memory requirements.
Reference: [KML95] <author> S. Kumar, D. Manocha, and A. Lastra. </author> <title> Interactive display of large scale nurbs models. </title> <booktitle> In Proc. of ACM Interactive 3D Graphics Conference, </booktitle> <pages> pages 5158, </pages> <year> 1995. </year>
Reference-contexts: The polygonal approximation of the entire model may not fit into the main memory. Transmitting such models over the network is also time consuming. The second drawback relates to using static tessellations and a few discrete polygonal approximations. In particular, Kumar et al. <ref> [KML95, KMZH97] </ref> have highlighted a number of advantages of algorithms based on dynamic tessellation over static tessellation.
Reference: [LD90] <author> Charles Loop and Tony DeRose. </author> <title> Generalized B-spline surfaces of arbitrary topology. </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> volume 24, </volume> <pages> pages 347356, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes [Sar90, Pet95, Loo94, EH96], using n-sided patches for fitting <ref> [LD90] </ref> and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms.
Reference: [Loo94] <author> Charles Loop. </author> <title> Smooth spline surfaces over irregular meshes. </title> <booktitle> In Proc. of SIGGRAPH '94, </booktitle> <pages> pages 303310. </pages>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes <ref> [Sar90, Pet95, Loo94, EH96] </ref>, using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms.
Reference: [Man97] <author> S. Mann. </author> <title> Surface interpolation with triangular patches. </title> <booktitle> In Fifth SIAM Conference on Geometric Design, </booktitle> <year> 1997. </year>
Reference-contexts: The foremost requirement for the patches to be mergeable is G 1 continuity. In our application, the patches might not be G 1 continuous to start with. Making the triangular patches in a model G 1 continuous, especially to ensure the affine pairs condition, is an optimization problem <ref> [Man97] </ref>. So, in our system, we only ensure the coplanarity condition for geometric continuity. <p> We are currently working towards a better swap diagonal algorithm and its implementation. Some error is also introduced by not satisfying the affine pairs condition for G 1 continuity. We are planning to implement the algorithm presented by <ref> [Man97] </ref>. This is based on local parametric scheme that improves surface shape by empirically proven improved settings of the free parameters. 11 Conclusion and Future Work In this paper, we have presented a new algorithm for simplifying spline models without tessellating them into polygons.
Reference: [Pet95] <author> J. Peters. </author> <title> C1 surface splines. </title> <journal> Siam J. of Numerical Analysis, </journal> <volume> 32(2):645 666, </volume> <year> 1995. </year>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes <ref> [Sar90, Pet95, Loo94, EH96] </ref>, using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms.
Reference: [RB93] <author> J. Rossignac and P. Borrel. </author> <title> Multi-resolution 3D approximations for rendering. </title> <booktitle> In Modeling in Computer Graphics, </booktitle> <pages> pages 455465. </pages> <publisher> Springer-Verlag, </publisher> <month> JuneJuly </month> <year> 1993. </year>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering <ref> [RB93] </ref>, vertex removal [BS96, SZL92, Tur92] and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models.
Reference: [KMZH97] <author> S. Kumar and D. Manocha and H. Zhang and K. Hoff. </author> <title> Accelerated walk-through of large spline models. </title> <booktitle> In Proc. of ACM Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 91102, </pages> <year> 1997. </year>
Reference-contexts: The polygonal approximation of the entire model may not fit into the main memory. Transmitting such models over the network is also time consuming. The second drawback relates to using static tessellations and a few discrete polygonal approximations. In particular, Kumar et al. <ref> [KML95, KMZH97] </ref> have highlighted a number of advantages of algorithms based on dynamic tessellation over static tessellation.
Reference: [Sar90] <author> Ramon F. Sarraga. </author> <title> Computer modeling of surfaces with arbitrary shapes. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 10(2):6777, </volume> <month> March </month> <year> 1990. </year>
Reference-contexts: A survey of different techniques has been given in [Die93]. These include algorithms smooth spline surface over irregular meshes <ref> [Sar90, Pet95, Loo94, EH96] </ref>, using n-sided patches for fitting [LD90] and using spline approximation [dBF73, dB74]. More recently, many algorithms have used subdivision surfaces for piecewise smooth reconstruction [HDD + 94]. 3 Overview of our approach Our approach for simplifying geometric models makes use of surface-fitting algorithms.
Reference: [Sch97] <author> W. Schroeder. </author> <title> A topology modifying progressive decimation algorithm. </title> <booktitle> In Proceedings of Visualization'97, </booktitle> <pages> pages 205212, </pages> <year> 1997. </year>
Reference-contexts: Other simplification algorithms include decimation techniques based on vertex removal <ref> [SZL92, Sch97] </ref> and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed [XESV97, Hop97].
Reference: [SZL92] <author> W.J. Schroeder, J.A. Zarge, and W.E. Lorensen. </author> <title> Decimation of triangle meshes. </title> <booktitle> In Proc. of SIGGRAPH '92 , pages 6570. </booktitle>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal <ref> [BS96, SZL92, Tur92] </ref> and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models. <p> Other simplification algorithms include decimation techniques based on vertex removal <ref> [SZL92, Sch97] </ref> and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed [XESV97, Hop97].
Reference: [Tur92] <author> G. Turk. </author> <title> Re-tiling polygonal surfaces. </title> <booktitle> In Proc. of ACM SIGGRAPH '92, </booktitle> <pages> pages 5564. </pages>
Reference-contexts: In this section, we briefly survey the state of the art. 2.1 Simplifying Polygonal Models Given a polygonal model, a number of algorithms have been proposed to generate its levels-of-detail. These include algorithms based on vertex clustering [RB93], vertex removal <ref> [BS96, SZL92, Tur92] </ref> and edge collapsing [HDD + 93, Hop96, GH97, Gue95, CMO97, COM98]. They use different local and global error met-rics for simplifying polygonal models.
Reference: [XESV97] <author> J. Xia, J. El-Sana, and A. Varshney. </author> <title> Adaptive real-time level-of-detail-based rendering for polygonal models. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 3(2):171183, </volume> <month> June </month> <year> 1997. </year>
Reference-contexts: Other simplification algorithms include decimation techniques based on vertex removal [SZL92, Sch97] and controlled topology modification [ESV97]. All these algorithms generate a few static LODs. Hoppe [Hop96] has introduced progressive meshes to incrementally represent various LOD. Based on progressive meshes, view-dependent simplification algorithms have been proposed <ref> [XESV97, Hop97] </ref>. Hoppe [Hop97] has also applied the resulting algorithm to small (in terms of number of patches) spline models. The algorithm pre-computes a polygonal approximation for a spline model, performs a series of edge-collapse operations on the polygonal model and stores the result as a progressive mesh.
References-found: 32

