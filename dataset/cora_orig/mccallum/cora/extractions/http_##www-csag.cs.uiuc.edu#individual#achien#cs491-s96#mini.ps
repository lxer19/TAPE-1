URL: http://www-csag.cs.uiuc.edu/individual/achien/cs491-s96/mini.ps
Refering-URL: http://www-csag.cs.uiuc.edu/individual/achien/cs491-s96/reading.html
Root-URL: http://www.cs.uiuc.edu
Email: (rminnich@sarnoff.com) 2  (djburns@sarnoff.com) 2  (Frank_Hady@ccm.jf.intel.com)  
Title: The Memory Integrated Network Interface  
Author: Ron Minnich Dan Burns Frank Hady 
Address: Ave, Hillsboro, OR 97124  
Note: 3. Platform Architecture Labs, Intel Corporation, 2111 NE 25th  
Abstract: 1. This paper appeared in the February 1994 IEEE Micro 2. David Sarnoff Research Center, 201 Washington Rd, Princeton, NJ Abstract We are designing a zero-copy ATM interface call MINI, the Memory Integrated Network Interface. MINI has a target bandwidth of 1 Gbits/sec and will support application-to-application latency of 1.2 microseconds. MINI is a multi-user ATM interface which resides in the memory space of the computer system, as opposed to I/O space. Applications will have direct access to pages of memory which are used for the network I/O; thus applications can send and receive packets with no operating system support needed. An application can initiate packet transmission with one memory write; it can determine if a packet has arrived by checking a per-circuit control and status word. At the same time, the operating system can use MINI for its own communications and for supporting standard networking software such as TCP/IP and NFS. Initial structural VHDL simulations have shown that for single ATM cells we can bounce an ATM cell from application to application in a round-trip-time of 3.9 microseconds (including software overhead on the relaying node), at a bandwidth of 10 Mbytes/second. For 960-byte packets, the bandwidth is 103 Mbytes/second. The architecture of MINI is motivated by our experiences with applications we have run in cluster and distributed computing environments. We have used from 48 to 200 computers per application, and have observed that successful applications are ones that use the network very little. The MINI design is targeted at the kinds of applications we can not currently run, those that need to send or receive data at very frequent intervals. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Kolawa, Adam, Bryan Strickland, </author> <title> Automatic Parallelization of Programs for Distributed Memory Systems: A Case Study, </title> <booktitle> Cluster Workshop 93, Supercomputing Computations Research Institute. </booktitle>
Reference-contexts: Thus the applications which run in a distributed computing environment using current networking technology must require only a byte of communication for every thousand or ten thousand FLOPS. While these sorts of low-communication-rate applications exist, studies of other types of applications <ref> [1] </ref> show a much higher frequency of communication with large amounts of data, and requiring application-to-application latency on the order of 1 microsecond. New high bandwidth networks carry the promise of widening the scope of cluster computing applications to include those requiring substantial communications.
Reference: 2. <institution> Myrinet Link Specifications, Myricom Inc., </institution> <month> December 10 </month> <year> 1993. </year> <note> provided by Chuck Seitz. </note>
Reference-contexts: FIGURE 5 MINI Boards. Host Motherboard Finisar Modules Physical SIMM Extenders SIMMs Network Interface Layer Translation Board MINI -- Memory Integrated Network Interface 7 Flow Control MINI provides hardware support for a low level form of ow control developed by Seitz <ref> [2] </ref> designed to keep the network from dropping cells. In this scheme a Stop message is sent from a receiving node to the transmitting node (or switch port) when the receiving FIFO fills past some predetermined high water mark.
Reference: 3. <author> Minnich, Ron, Mether: </author> <title> A Memory System for Network Multiprocessors, </title> <type> Ph. D. Thesis, </type> <institution> University of Pennsylvania Department of Computer Science, </institution> <year> 1990. </year>

References-found: 3

