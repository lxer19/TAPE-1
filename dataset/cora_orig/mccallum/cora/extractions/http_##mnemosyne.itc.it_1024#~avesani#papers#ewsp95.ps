URL: http://mnemosyne.itc.it:1024/~avesani/papers/ewsp95.ps
Refering-URL: http://mnemosyne.itc.it:1024/avesani/html/charade.html
Root-URL: 
Email: e.mail: fperini,riccig@irst.itc.it  
Phone: Phone ++39+461-314330 Fax ++39+461-302040  
Title: An Interactive Planning Architecture The Forest Fire Fighting case  
Author: Anna Perini and Francesco Ricci 
Address: 38050 Povo (TN) Italy  
Affiliation: I.R.S.T.  
Abstract: This paper describes an interactive planning system that was developed inside an Intelligent Decision Support System aimed at supporting an operator when planning the initial attack to forest fires. The planning architecture rests on the integration of case-based reasoning techniques with constraint reasoning techniques exploited, mainly, for performing temporal reasoning on temporal metric information. Temporal reasoning plays a central role in supporting interactive functions that are provided to the user when performing two basic steps of the planning process: plan adaptation and resource scheduling. A first prototype was integrated with a situation assessment and a resource allocation manager subsystem and is currently being tested.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. F. Allen. </author> <title> Mantaining knowledge about temporal intervals. </title> <journal> Communication of ACM, </journal> <volume> 26(11) </volume> <pages> 832-843, </pages> <year> 1983. </year>
Reference-contexts: From a user point of view, the temporal structure of a plan is represented through the temporal relations that can be defined between these time intervals in the form of single Allen's interval relations <ref> [1] </ref>. That is, given two plan components, one of the thirteen Allen's temporal relations can be stated for them.
Reference: [2] <author> P. Avesani, A. Perini, and F. Ricci. </author> <title> Combining CBR and constraint reasoning in planning forest fire fighting. </title> <booktitle> In Proceedings of the First European Workshop on Case-Based Reasoning, </booktitle> <pages> pages 235-239, </pages> <address> Kaiserslautern, </address> <year> 1993. </year>
Reference-contexts: The constraint module supports also the resource allocation process for the chosen plan. This paper focuses on the role of temporal reasoning in supporting interactive planning functions, an extended description of the CBR module developed for the application can be found in <ref> [2] </ref>. Section 2 illustrates the forest fire planning problem, Section 3 gives a brief description of the system architecture.
Reference: [3] <author> P. Avesani, A. Perini, and F. Ricci. </author> <title> The intervention planning subsystem. </title> <type> Technical report, IRST, </type> <year> 1995. </year> <note> CHARADE Restricted Report #50B. </note>
Reference-contexts: Basically arc consistency and single-source shortest paths algorithms exploit the same refining procedure. Arc consistency algorithms make networks stable with respect to the arc-refine operator 6 . Shortest paths algorithms make networks stable in respect to the Bellman-Ford operator, which is usually called relax [7]. It can be shown <ref> [3] </ref> that two applications of relax correspond to the application of the arc-refine operator and that when a network is consistent arc consistency and two applications of the Bellman-Ford algorithm can be equivalently used to compute the minimal 7 feasible time interval for variables in an STP.
Reference: [4] <author> F. A. Barber. </author> <title> A metric time-point and duration-based temporal model. </title> <journal> SIGART Bulletin, </journal> <volume> 4(3) </volume> <pages> 30-49, </pages> <year> 1993. </year>
Reference-contexts: The system requirement of supporting an interactive process poses the problem of using efficient computations. So a careful analysis of the system functions was performed in order to better exploit the arc consistency versus the shortest paths computation. An analogous approach was followed also in other works <ref> [4, 6] </ref>. 5 Other shortest-path algorithms can have a better performance, for instance Dijkastra's algorithm takes O (n 2 ) time, but they require that all edges in the distance graph be nonnegative [7].
Reference: [5] <author> C. Bessiere. </author> <title> Arc-consistency in dynamic constraint satisfaction problems. </title> <booktitle> In Proceedings of the Nineth National Conference on Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference-contexts: In this second approach one can use an algorithm for dynamically maintaining the loops in the constraint graphs for the first task, and arc consistency for dynamic networks for the second task <ref> [17, 5, 20] </ref>.
Reference: [6] <author> R. Cervoni, A. Cesta, and A. Oddi. </author> <title> Managing dynamic temporal constraint networks. </title> <editor> In K. Hammond, editor, </editor> <booktitle> Proceedings of the Second International Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pages 196-201. </pages> <year> 1994. </year>
Reference-contexts: The system requirement of supporting an interactive process poses the problem of using efficient computations. So a careful analysis of the system functions was performed in order to better exploit the arc consistency versus the shortest paths computation. An analogous approach was followed also in other works <ref> [4, 6] </ref>. 5 Other shortest-path algorithms can have a better performance, for instance Dijkastra's algorithm takes O (n 2 ) time, but they require that all edges in the distance graph be nonnegative [7]. <p> We are now focusing on another problem suggested by the strong requirement of supporting an interactive process, i.e. that of developing incremental algorithms. It is an interesting and open field of research to provide tools for dynamic updating of a constraint network and for checking the constraint satisfiability <ref> [17, 6] </ref>. Two lines of research are under investigation; first, to develop incremental graph based algorithms for shortest paths; second, to separate the satisfiability of the network from the search for the minimal network representation.
Reference: [7] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: So the minimal network can be computed by the all shortest paths algorithm of Floyd-Warshall that works in O (n 3 ) time <ref> [7] </ref>. An important property of the minimal network of STPs is that it is decomposable, i.e. any local assignment to any subset of variables, such that it satisfies the constraints involving only the variables of this subset, can be extended to a global solution. <p> Basically arc consistency and single-source shortest paths algorithms exploit the same refining procedure. Arc consistency algorithms make networks stable with respect to the arc-refine operator 6 . Shortest paths algorithms make networks stable in respect to the Bellman-Ford operator, which is usually called relax <ref> [7] </ref>. <p> An analogous approach was followed also in other works [4, 6]. 5 Other shortest-path algorithms can have a better performance, for instance Dijkastra's algorithm takes O (n 2 ) time, but they require that all edges in the distance graph be nonnegative <ref> [7] </ref>.
Reference: [8] <author> E. Davis. </author> <title> Constraint propagation with interval labels. </title> <journal> Artificial Intelligence, </journal> <volume> 32 </volume> <pages> 281-331, </pages> <year> 1987. </year>
Reference-contexts: Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable [15, 10]. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented <ref> [16, 8, 9] </ref>. The class of constraints dealt with in our application corresponds to this class. <p> In <ref> [8] </ref> Davis proved that determining the consistency of an STP is equivalent to computing single-source shortest paths. <p> An interesting point is the role of arc consistency on a STP. Arc consistency can be computed with algorithms that perform linearly with the number of edges in a discrete domain CSP, but it suffers from the termination problem in continuous domain CSP <ref> [8] </ref>, i.e. in a not-consistent network arc consistency can enter in an arbitrary long loop and recognize inconsistencies only after a number of steps equal to D=p, where D is the maximum domain size and p the precision [13].
Reference: [9] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49, </volume> <year> 1991. </year>
Reference-contexts: bounds to the distance between the start and end times of the actions. 5.1 Temporal Constraint Satisfaction Problems A set of bounded difference constraints defined on a set of time points can be cast into a CSP problem defined on variables with continuous domains according to the formalization given in <ref> [9] </ref>, the so called Temporal CSP (TCSP). We recall here some important properties of TCSP. In the TCSP formalism time points are represented by the variables of a constraint network. The variable domains are sets of real numbers. <p> Moreover qualitative point-interval relations and interval-interval relations can be represented [15, 26]. It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems <ref> [9, 26] </ref> and recognizing subclasses of the language that are tractable [15, 10]. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented [16, 8, 9]. The class of constraints dealt with in our application corresponds to this class. <p> Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable [15, 10]. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented <ref> [16, 8, 9] </ref>. The class of constraints dealt with in our application corresponds to this class. <p> The class of constraints dealt with in our application corresponds to this class. Enforcing path-consistency on a STP gives the minimal network representation and is equivalent to computing all the shortest paths on the distance graph representing the STP <ref> [9] </ref>, that is the directed edge-weighted graph G = (N; E), in which each node i 2 N represents the temporal variable X i of the STP network, and each edge (i; j) 2 E represents the linear inequality X j X i a ij (it is labeled by a weight <p> Constraint reasoning plays a central role in managing the temporal information related to a plan and in supporting interactive planning functions to be used during plan adaptation and resource allocation. The temporal reasoning system implemented so far corresponds to the Simple Temporal Problem formalism defined in <ref> [9] </ref>. An interesting aspect of the work here described is the careful use of the different temporal reasoning computations that can be performed on a STP: determining the network consistency, computing the feasible times for the variables of the network, computing the minimal network representation.
Reference: [10] <author> A. Gerevini and M. Cristani. </author> <title> Reasoning with inequations in temporal constraint networks. </title> <type> Technical report, IRST, </type> <address> Trento, Italy, </address> <year> 1995. </year>
Reference-contexts: It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable <ref> [15, 10] </ref>. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented [16, 8, 9]. The class of constraints dealt with in our application corresponds to this class.
Reference: [11] <author> K. J. Hammond. </author> <title> Case-Based Planning: Viewing Planning as a Memory Task. </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1989. </year>
Reference-contexts: Driven by domain requirements and constraints, a planning approach was defined that rests on the integration of Case-Based Reasoning <ref> [11] </ref> and Constraint Reasoning. Combining different specialized AI techniques is common in dealing with real planning problems [12]. A remarkable work in this direction is ongoing within the ARPA & ROME Laboratory Knowledge Based Planning Initiative (partially described in [28]).
Reference: [12] <author> T. R. Hinrichs. </author> <title> Towards an architecture for open world problem solving. </title> <editor> In J. L. Kolod-ner, editor, </editor> <booktitle> Proceedings of the 1988 DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 182-189, </pages> <year> 1988. </year>
Reference-contexts: Driven by domain requirements and constraints, a planning approach was defined that rests on the integration of Case-Based Reasoning [11] and Constraint Reasoning. Combining different specialized AI techniques is common in dealing with real planning problems <ref> [12] </ref>. A remarkable work in this direction is ongoing within the ARPA & ROME Laboratory Knowledge Based Planning Initiative (partially described in [28]).
Reference: [13] <author> O. Lhomme. </author> <title> Consistency techniques for numeric CSPs. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <address> Chambery, France, </address> <pages> pages 232-238, </pages> <year> 1993. </year>
Reference-contexts: CSP, but it suffers from the termination problem in continuous domain CSP [8], i.e. in a not-consistent network arc consistency can enter in an arbitrary long loop and recognize inconsistencies only after a number of steps equal to D=p, where D is the maximum domain size and p the precision <ref> [13] </ref>. Basically arc consistency and single-source shortest paths algorithms exploit the same refining procedure. Arc consistency algorithms make networks stable with respect to the arc-refine operator 6 . Shortest paths algorithms make networks stable in respect to the Bellman-Ford operator, which is usually called relax [7].
Reference: [14] <author> P. Marti. </author> <title> The interface design of an integrated system for handling environmental emergencies. </title> <booktitle> In Cognitive Ergonomics and User-Centered Design, </booktitle> <address> Padova, Italy, </address> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: Besides the planning module it includes a situation assessment module 1 based on a cartographic module 2 , modules for resource management and allocation 3 and a man-machine interface 4 based on an explicit representation of user tasks, as described in <ref> [18, 25, 14] </ref>. 2 Planning Forest Fire Interventions Planning for forest fires requires alternating phases of planning and situation assessment following a precise operational work-flow that is typical of each fire fighting organization. Here we focus on the planning problem.
Reference: [15] <author> I. Meiri. </author> <title> Combining qualitative and quantitative constraints in temporal reasoning. </title> <booktitle> In Proceedings of the Nineth National Conference on Artificial Intelligence, </booktitle> <pages> pages 260 - 267, </pages> <year> 1991. </year>
Reference-contexts: TCSP language allows representing disjunctive information like "event A ends about 10-20 seconds or about 40-60 seconds before event B starts". Moreover qualitative point-interval relations and interval-interval relations can be represented <ref> [15, 26] </ref>. It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable [15, 10]. <p> It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable <ref> [15, 10] </ref>. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented [16, 8, 9]. The class of constraints dealt with in our application corresponds to this class.
Reference: [16] <author> U. Montanari. </author> <title> Networks of constraints: fundamental properties and applications to picture processing. </title> <journal> Inf. Sci., </journal> <volume> 7 </volume> <pages> 95-132, </pages> <year> 1974. </year>
Reference-contexts: Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable [15, 10]. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented <ref> [16, 8, 9] </ref>. The class of constraints dealt with in our application corresponds to this class.
Reference: [17] <author> B. Neveu and P. Berlandier. </author> <title> Arc-Consistency for dynamic constraint satisfaction problems: an rms-free approach. In ECAI94 Workshop, Constraint Satisfaction Issues Raised by Practical Applications. </title> <year> 1994. </year>
Reference-contexts: We are now focusing on another problem suggested by the strong requirement of supporting an interactive process, i.e. that of developing incremental algorithms. It is an interesting and open field of research to provide tools for dynamic updating of a constraint network and for checking the constraint satisfiability <ref> [17, 6] </ref>. Two lines of research are under investigation; first, to develop incremental graph based algorithms for shortest paths; second, to separate the satisfiability of the network from the search for the minimal network representation. <p> In this second approach one can use an algorithm for dynamically maintaining the loops in the constraint graphs for the first task, and arc consistency for dynamic networks for the second task <ref> [17, 5, 20] </ref>.
Reference: [18] <author> V. Normand. </author> <title> Task modelling in the design and implementation of interactive systems. </title> <booktitle> In Proceedings of the 5th Conference on the Engineering of Man-Machine Interfaces, </booktitle> <address> Lyon, France, </address> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: Besides the planning module it includes a situation assessment module 1 based on a cartographic module 2 , modules for resource management and allocation 3 and a man-machine interface 4 based on an explicit representation of user tasks, as described in <ref> [18, 25, 14] </ref>. 2 Planning Forest Fire Interventions Planning for forest fires requires alternating phases of planning and situation assessment following a precise operational work-flow that is typical of each fire fighting organization. Here we focus on the planning problem.
Reference: [19] <author> A. Perini and F. Ricci. </author> <title> Constraint reasoning and interactive planning. </title> <booktitle> In Workshop on Constraint Languages-Systems and Their Use in Problem Modelling International Logic Programming Symposium, </booktitle> <address> Ithaca, New York, </address> <year> 1994. </year>
Reference-contexts: A brief note on variable representation and on two basic procedures can help in making clear the description of the functions given below (a more extensive description can be found in <ref> [19] </ref>). A time variable is represented by a set of features such as the value, the domain and the default domain.
Reference: [20] <author> P. Prosser, C. Conway, and C. Muller. </author> <title> A distributed constraint maintenance system. </title> <booktitle> In Proceedings of Expert Systems and their Applications, </booktitle> <address> Avignon, France, </address> <year> 1992. </year>
Reference-contexts: In this second approach one can use an algorithm for dynamically maintaining the loops in the constraint graphs for the first task, and arc consistency for dynamic networks for the second task <ref> [17, 5, 20] </ref>.
Reference: [21] <author> F. Ricci and P. Avesani. </author> <title> Learning a local similarity metric for case-based reasoning. </title> <booktitle> In International Conference on Case-Based Reasoning (ICCBR-95), </booktitle> <address> Sesimbra, Portugal, </address> <month> Oct. </month> <pages> 23-26, </pages> <year> 1995, </year> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: A remarkable work in this direction is ongoing within the ARPA & ROME Laboratory Knowledge Based Planning Initiative (partially described in [28]). The case-based module retrieves partial plans from memory using a novel similarity metric that has a local definition and can be adapted by a reinforcement learning procedure <ref> [21] </ref>. Plans are represented in a hierarchy of parts and partial plans can be completed using the similarity metric by searching for expansions of the leaves in the plan tree structure. The constraint module adapts the retrieved plan, attaching and propagating constraints.
Reference: [22] <author> F. Ricci, P. Avesani, A. Perini, and M. Stocchero. </author> <title> Approaches and techniques for a.i. planning. </title> <type> Technical Report TR9307-32, IRST, </type> <year> 1993. </year> <note> CHARADE Restricted Report #51. </note>
Reference-contexts: The above mentioned issues stress various limitations of AI planning techniques (see <ref> [27, 22] </ref> for a more extensive discussion), in particular those developed in the context of pure formal approaches to planning. Driven by domain requirements and constraints, a planning approach was defined that rests on the integration of Case-Based Reasoning [11] and Constraint Reasoning.
Reference: [23] <author> F. Ricci, S. Mam, P. Marti, V. Normand, and P. Olmo. CHARADE: </author> <title> a platform for emergencies management systems. </title> <type> Technical Report 9404-07, IRST, </type> <year> 1994. </year>
Reference-contexts: 1 Introduction This paper presents an interactive planning architecture that shall be used for planning the initial attack to forest fires. The system is part of an Intelligent Decision Support System aimed at supporting the user in the whole process of fire fighting including both situation assessment and planning activities <ref> [23] </ref>. Developing a practical planning application for a real domain problem raises several dimensions of complexity, as discussed in [24]. The founding assumptions of AI planning have to be carefully analyzed in light of the application requirements.
Reference: [24] <author> F. Ricci, A. Perini, and P. Avesani. </author> <title> Planning in a complex real domain. </title> <booktitle> In Proceedings of the Italian Planning Workshop, </booktitle> <pages> pages 55-60, </pages> <address> Rome, </address> <year> 1993. </year>
Reference-contexts: The system is part of an Intelligent Decision Support System aimed at supporting the user in the whole process of fire fighting including both situation assessment and planning activities [23]. Developing a practical planning application for a real domain problem raises several dimensions of complexity, as discussed in <ref> [24] </ref>. The founding assumptions of AI planning have to be carefully analyzed in light of the application requirements.
Reference: [25] <author> J. M. Rousseau and V. Normand. </author> <title> Task modelling: a common framework for the ergonomy and the computer scientist. </title> <booktitle> In Proceedings of ERGOIA, </booktitle> <address> Biarritz, France, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Besides the planning module it includes a situation assessment module 1 based on a cartographic module 2 , modules for resource management and allocation 3 and a man-machine interface 4 based on an explicit representation of user tasks, as described in <ref> [18, 25, 14] </ref>. 2 Planning Forest Fire Interventions Planning for forest fires requires alternating phases of planning and situation assessment following a precise operational work-flow that is typical of each fire fighting organization. Here we focus on the planning problem.
Reference: [26] <author> E. Schwalb and R. Dechter. </author> <title> Processing temporal constraint networks. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <year> 1994. </year>
Reference-contexts: TCSP language allows representing disjunctive information like "event A ends about 10-20 seconds or about 40-60 seconds before event B starts". Moreover qualitative point-interval relations and interval-interval relations can be represented <ref> [15, 26] </ref>. It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems [9, 26] and recognizing subclasses of the language that are tractable [15, 10]. <p> Moreover qualitative point-interval relations and interval-interval relations can be represented [15, 26]. It is well known that determining the consistency and computing the minimal network of a general TCSP is not tractable. Current research focuses on finding polynomial algorithms that can give approximate solutions to these problems <ref> [9, 26] </ref> and recognizing subclasses of the language that are tractable [15, 10]. A tractable subclass is the Simple Temporal Problem (STP) in which single disjunct constraints can be represented [16, 8, 9]. The class of constraints dealt with in our application corresponds to this class.
Reference: [27] <author> W. Swartout. </author> <title> DARPA Santa Cruz workshop on planning. </title> <journal> The AI Magazine, </journal> <volume> 9(2) </volume> <pages> 115-131, </pages> <year> 1988. </year>
Reference-contexts: The above mentioned issues stress various limitations of AI planning techniques (see <ref> [27, 22] </ref> for a more extensive discussion), in particular those developed in the context of pure formal approaches to planning. Driven by domain requirements and constraints, a planning approach was defined that rests on the integration of Case-Based Reasoning [11] and Constraint Reasoning.
Reference: [28] <author> D. E. Wilkins and R. V. Desimone. </author> <title> Applying an a.i. planner to military operation planning. </title> <editor> In M. Zweben and M. Fox, editors, </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan-Kaufmann, </publisher> <address> San Mateo, </address> <year> 1992. </year>
Reference-contexts: Combining different specialized AI techniques is common in dealing with real planning problems [12]. A remarkable work in this direction is ongoing within the ARPA & ROME Laboratory Knowledge Based Planning Initiative (partially described in <ref> [28] </ref>). The case-based module retrieves partial plans from memory using a novel similarity metric that has a local definition and can be adapted by a reinforcement learning procedure [21].
References-found: 28

