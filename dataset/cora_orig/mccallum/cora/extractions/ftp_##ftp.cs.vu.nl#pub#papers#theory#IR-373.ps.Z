URL: ftp://ftp.cs.vu.nl/pub/papers/theory/IR-373.ps.Z
Refering-URL: http://www.cs.vu.nl/vakgroepen/ti/ftpindex.html
Root-URL: 
Title: Counting Variables in a Dynamic Setting  
Author: Marco Hollenberg Kees Vermeulen 
Date: December 1994  
Address: Amsterdam  
Affiliation: Utrecht University Utrecht University Free University  
Abstract: We discuss the issue of finite variable fragments from a dynamic perspective. Instead of taking PRED, first order logic with equality, as our base language, we look at DPLE, a variant of predicate logic developed in the area of dynamic semantics for natural language. We present a characterisation of all the finite variable fragments of DPLE.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Andreka, I. Nemeti, and J. van Benthem. </author> <title> Universal formulas and preservations under substructures I. </title> <type> unpublished manuscript, </type> <month> july </month> <year> 1993. </year>
Reference-contexts: If we compare this situation with what we find in PRED (cf. [4] (ch. 9-13), <ref> [1] </ref>, [9], [7] and references therein), then we see that the situation is very different there. In PRED a restriction on the number of variables has serious consequences on the expressive power.
Reference: [2] <author> D. Ben-Shalom. </author> <title> Natural language, generalized quantifiers and modal logic. </title> <editor> In P. Dekker and M. Stokhof, editors, </editor> <booktitle> Proceedings of the 9th Amsterdam Colloquium, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: We already pointed out above that the situation in DPLE is optimal, provided we do not allow fiddling with the atomic propositions. The traditional work on versions of predicate logic without variables (cf. [8], [3], <ref> [2] </ref>) can be understood as doing precisely that.
Reference: [3] <author> M Cresswell. </author> <title> Entities and Indices. </title> <publisher> SLAP. Kluwer, </publisher> <address> Dordecht, </address> <year> 1990. </year>
Reference-contexts: We already pointed out above that the situation in DPLE is optimal, provided we do not allow fiddling with the atomic propositions. The traditional work on versions of predicate logic without variables (cf. [8], <ref> [3] </ref>, [2]) can be understood as doing precisely that.
Reference: [4] <editor> D Gabbay et al. </editor> <booktitle> Mathematical Logic and Computational Aspects, volume 1, Temporal Logic. </booktitle> <year> 1994. </year>
Reference-contexts: If we compare this situation with what we find in PRED (cf. <ref> [4] </ref> (ch. 9-13), [1], [9], [7] and references therein), then we see that the situation is very different there. In PRED a restriction on the number of variables has serious consequences on the expressive power.
Reference: [5] <author> J. Groenendijk and M. Stokhof. </author> <title> Dynamic predicate logic. </title> <journal> Linguistics and Philosophy, </journal> <volume> 14 </volume> <pages> 39-100, </pages> <year> 1991. </year>
Reference-contexts: In these approaches interpreting a natural language expression is the same as executing the procedure assigned to it in the procedural or dynamic semantics (cd. [6], <ref> [5] </ref>). The motivation for dynamic semantics comes from linguistics: the explanation of some well known hard problems in the semantics of anaphora becomes much easier once a dynamic view towards semantics is adopted. <p> To each formula 2 DPLE we assign a relation [[]] M SASS D fi SASS D as follows: 4 3 The name DPLE is chosen, because this logic was developed as an extension of DPL, as introduced in <ref> [5] </ref>. 4 We trust that this overloading of the notation [[]] will not cause confusion. 4 f [[x = y]]g , f = g & top (f (x)) = top (f (y)) f [[[ x ]]g , f [x]g f [[:]]g , f = g & :9h : f [[]]h We
Reference: [6] <author> H. Kamp. </author> <title> A theory of truth and semantic representation. </title> <editor> In J. Groenendijk et al., editors, </editor> <booktitle> Formal Methods in the Study of Language, </booktitle> <address> Amsterdam, 1981. </address> <publisher> Mathematisch Centrum. </publisher>
Reference-contexts: In these approaches interpreting a natural language expression is the same as executing the procedure assigned to it in the procedural or dynamic semantics (cd. <ref> [6] </ref>, [5]). The motivation for dynamic semantics comes from linguistics: the explanation of some well known hard problems in the semantics of anaphora becomes much easier once a dynamic view towards semantics is adopted.
Reference: [7] <author> R. Maddux. </author> <title> A sequent calculus for relation algebra. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 25 </volume> <pages> 73-101, </pages> <year> 1983. </year>
Reference-contexts: The first example we consider is relation composition. 6 The definition of relation composition is a well known case where PRED requires 6 These examples were discovered in cooperation with Albert Visser. 7 at least three variables (cf. [9], <ref> [7] </ref>). <p> If we compare this situation with what we find in PRED (cf. [4] (ch. 9-13), [1], [9], <ref> [7] </ref> and references therein), then we see that the situation is very different there. In PRED a restriction on the number of variables has serious consequences on the expressive power.
Reference: [8] <author> W.V.O. Quine. </author> <title> Predicate functor logic. </title> <editor> In J-E Fenstad, editor, </editor> <booktitle> Proceedings of the Second Scandinavian Logic Symposium, </booktitle> <pages> pages 309-315, </pages> <address> Amsterdam, 1971. </address> <publisher> North-Holland. </publisher>
Reference-contexts: We already pointed out above that the situation in DPLE is optimal, provided we do not allow fiddling with the atomic propositions. The traditional work on versions of predicate logic without variables (cf. <ref> [8] </ref>, [3], [2]) can be understood as doing precisely that.
Reference: [9] <author> A. Tarski. </author> <title> On the calculus of relations. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 6 </volume> <pages> 73-89, </pages> <year> 1941. </year>
Reference-contexts: The first example we consider is relation composition. 6 The definition of relation composition is a well known case where PRED requires 6 These examples were discovered in cooperation with Albert Visser. 7 at least three variables (cf. <ref> [9] </ref>, [7]). <p> If we compare this situation with what we find in PRED (cf. [4] (ch. 9-13), [1], <ref> [9] </ref>, [7] and references therein), then we see that the situation is very different there. In PRED a restriction on the number of variables has serious consequences on the expressive power.
Reference: [10] <author> C.F.M. Vermeulen. </author> <title> Sequence semantics for dynamic predicate logic. </title> <journal> Journal of Logic, Language and Information, </journal> <volume> 2 </volume> <pages> 217-254, </pages> <year> 1993. </year> <title> after: idem, Logic Group Preprint Series, </title> <type> 60, </type> <institution> Department of Philosophy, Utrecht University, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: In this paper we will start from a procedural semantics for predicate logic: we will show how to read formulas of predicate logic as programs executed on stacks. Then we will consider a slightly more liberal language for writing programs on stacks, DPLE (cf. <ref> [10] </ref>, [11]).
Reference: [11] <author> C.F.M. Vermeulen. </author> <title> Explorations of the Dynamic Environment. </title> <type> PhD thesis, </type> <institution> Utrecht University, </institution> <month> september </month> <year> 1994. </year> <month> 18 </month>
Reference-contexts: In this paper we will start from a procedural semantics for predicate logic: we will show how to read formulas of predicate logic as programs executed on stacks. Then we will consider a slightly more liberal language for writing programs on stacks, DPLE (cf. [10], <ref> [11] </ref>).
References-found: 11

