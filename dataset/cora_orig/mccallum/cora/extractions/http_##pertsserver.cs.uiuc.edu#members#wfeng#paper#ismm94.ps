URL: http://pertsserver.cs.uiuc.edu/members/wfeng/paper/ismm94.ps
Refering-URL: http://pertsserver.cs.uiuc.edu/members/wfeng/paper/paper.html
Root-URL: http://www.cs.uiuc.edu
Email: E-mail: feng@cs.uiuc.edu  
Title: An Intelligent System for Map Data Processing in Geographic Information Systems  
Author: W. Feng 
Address: 1304 W. Springfield Avenue Urbana, IL 61801  
Affiliation: University of Illinois at Urbana-Champaign  
Date: 9-12, June 1994.  
Note: Appeared in Proc. of the Int'l Conf. on Intelligent Information Systems, Washington, DC, pp.  
Abstract: A geographic information system (GIS) allows users to collect, analyze, and manage a large amount of spatially referenced data. Our GIS incorporates computer graphics, image processing, database management, spatial modeling, and artificial intelligence in order to integrate volumes of information from maps, graphs, and tabular data into a variety of formats and media. Such a system would be a valuable tool in a car | in particular, a rental car | where paper-based maps are often needed to reach one's destination. Keywords: information management systems, artificial intelligence, expert systems 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Nickerson and H. Freeman, </author> <title> "Development of a Rule-Based System for Automatic Map Generalization," </title> <booktitle> Proc. 2nd Int'l Symp. on Spatial Data Handling, </booktitle> <year> 1986, </year> <pages> pp. 537-556. </pages>
Reference-contexts: 1 Introduction A map is an abstract symbolic representation of spatial data. The automatic generation and reproduction of such maps, using computers, is becoming more prevalent in geographic information systems (GISs). For instance, Nickerson & Freeman <ref> [1] </ref> designed an expert system which generated low-resolution maps from high-resolution data. Freeman & Ahn [2] and Doerschler & Freeman [3] provided an automatic name placement feature for their paper-based maps. A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered.
Reference: [2] <author> H. Freeman and J. Ahn, </author> <title> "On the Problem of Placing Names in a Geographic Map," </title> <booktitle> Int'l J. on Patt. Recog. & AI, </booktitle> <month> Apr </month> <year> 1987, </year> <pages> pp. 121-140. </pages>
Reference-contexts: The automatic generation and reproduction of such maps, using computers, is becoming more prevalent in geographic information systems (GISs). For instance, Nickerson & Freeman [1] designed an expert system which generated low-resolution maps from high-resolution data. Freeman & Ahn <ref> [2] </ref> and Doerschler & Freeman [3] provided an automatic name placement feature for their paper-based maps. A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered.
Reference: [3] <author> J. Doerschler and H. Freeman, </author> <title> "A Rule-Based System for Dense-Map Name Placement," </title> <journal> Comm. of the ACM, </journal> <month> Jan </month> <year> 1992, </year> <pages> pp. 68-79. </pages>
Reference-contexts: The automatic generation and reproduction of such maps, using computers, is becoming more prevalent in geographic information systems (GISs). For instance, Nickerson & Freeman [1] designed an expert system which generated low-resolution maps from high-resolution data. Freeman & Ahn [2] and Doerschler & Freeman <ref> [3] </ref> provided an automatic name placement feature for their paper-based maps. A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered.
Reference: [4] <author> T. Smith et al., </author> <title> "A Knowledge-Based Geographic Information System," </title> <booktitle> Int'l J. on GIS, Apr-Jun 1987, </booktitle> <pages> pp. 149-172. </pages>
Reference-contexts: Freeman & Ahn [2] and Doerschler & Freeman [3] provided an automatic name placement feature for their paper-based maps. A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered. Examples of such GISs include a knowledge-based geographic information system <ref> [4] </ref>, a topographical land-use expert system [5], and an automatic map digitizer [6]. Our approach for extracting information from paper-based maps tries to mimic the logical operations that most people would use to extract such information.
Reference: [5] <author> M. Ejiri et al., </author> <title> "Automatic Recognition of Engineering Drawings and Maps," in Image Analysis Applications, </title> <editor> R. Kasturi and M. M. Trivedi, eds., </editor> <publisher> Marcel Dekker, </publisher> <year> 1990, </year> <pages> pp. 73-126. </pages>
Reference-contexts: A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered. Examples of such GISs include a knowledge-based geographic information system [4], a topographical land-use expert system <ref> [5] </ref>, and an automatic map digitizer [6]. Our approach for extracting information from paper-based maps tries to mimic the logical operations that most people would use to extract such information.
Reference: [6] <author> M. Ejiri et al., </author> <title> "Automatic Recognition of Design Drawings and Maps," </title> <booktitle> Proc. 7th Int'l Conf. on Patt. </booktitle> <address> Recog., </address> <year> 1984, </year> <pages> pp. 1296-1305. </pages>
Reference-contexts: A GIS should also provide automatic extraction of information from paper-based maps so that users' queries may be answered. Examples of such GISs include a knowledge-based geographic information system [4], a topographical land-use expert system [5], and an automatic map digitizer <ref> [6] </ref>. Our approach for extracting information from paper-based maps tries to mimic the logical operations that most people would use to extract such information.
Reference: [7] <author> J. Alemany and R. Kasturi, </author> <title> "A Computer Vision System for Interpretation of Paper-Based Maps," </title> <booktitle> Proc. SPIE Conf. on Appl. of Digital Image Processing, </booktitle> <year> 1987. </year>
Reference-contexts: a sequence of basic image-processing operations. 2 System Overview system: a preprocessor, an image processor, a dynamic database, a database query processor, and a natural-language front-end, which is capable of learning by example. 1 The preprocessor contains an image acquisition and orientation system, a text-string separator, and a system-parameter generator <ref> [7] </ref>. The image acquisition system captures images by scanning binary paper maps at a resolution of 120 pixels/cm. The user then specifies the relationship between the image coordinates and longitude-latitude coordinates via a set of four cross-hairs. Figure 2 shows an example of a scanned image of the western U.S.
Reference: [8] <author> R. Kasturi, J. Alemany, and M. L. Amlani, </author> <title> "A Query Processing System for Paper-Based Maps," </title> <booktitle> Proc. 8th Int'l Conf. on Patt. </booktitle> <address> Recog., </address> <year> 1986, </year> <pages> pp. 874-876. </pages>
Reference-contexts: The database query processor analyzes a query presented by the user or natural-language front-end, generates an ordered list of calls to the relevant image-processing routines, and then compiles the information extracted by the image processor to generate a response <ref> [8] </ref>. The general syntax of a database query is [ ENTITY ] CONSTRAINT ( & CONSTRAINT : : : ) where each CONSTRAINT is of the form QUALIFIER ( &lt; QUERY ( & QUERY : : : ) &gt; ) All quantities enclosed by parentheses are optional.
Reference: [9] <author> R. Kasturi and J. Alemany, </author> <title> "Information Extraction from Images of Paper-Based Maps," </title> <journal> IEEE Trans. on Software Engr., </journal> <month> May </month> <year> 1988, </year> <pages> pp. 671-675. </pages>
Reference-contexts: This bit is then used by the display routine to show only those roads within the state. The image processor operates on digitized map images and generates a higher-level description file containing the symbols and lines in the map which are relevant for answering the database query <ref> [9] </ref>. This higher-level description file is generated by a set of pattern recognition and image processing routines, which are called by the database query processor, to extract spatial and structural information from the map.
Reference: [10] <author> J. Carbonell and P. Hayes, </author> <title> "Recovery Strategies for Parsing Extragrammatical Language," </title> <journal> American J. of Comp. </journal> <volume> Ling., </volume> <month> Jul-Dec </month> <year> 1983, </year> <pages> pp. 123-146. </pages>
Reference: [11] <author> P. Hayes and G. Mouradian, </author> <title> "Flexible Parsing," </title> <journal> American J. of Comp. </journal> <volume> Ling., </volume> <month> Oct-Dec </month> <year> 1981, </year> <pages> pp. 232-242. </pages>
Reference: [12] <author> S. Kwasny and N. Sondheimer, </author> <title> "Relaxation Techniques for Parsing Grammatically Ill-Formed Input in Natural-Language Understanding Systems," </title> <journal> American J. of Comp. </journal> <volume> Ling., </volume> <month> Apr-Jun </month> <year> 1987, </year> <pages> pp. 99-108. </pages>
Reference: [13] <author> W. Feng and R. Kasturi, </author> <title> "A Learn-By-Example Natural Language Processor Based on Case-Frame Instantiation," </title> <type> Technical Report TR-90-072, </type> <institution> The Pennsylvania State University, Dept. of Electrical Engineering, University Park, </institution> <address> PA. </address> <month> 4 </month>
Reference-contexts: on the rewrite rules of a grammar creates problems if the number of rewrite rules is large, the size of the database is large, or learning capabilities are to be incorporated [10-12] To address some of the shortcomings of existing knowledge-based approaches, we developed a knowledge-based approach called case-frame instantiation <ref> [13] </ref>. Case-frame instantiation partitions a natural language query into meaningful substrings called case frames. Each case frame consists of a distinct header pattern and a set of cases. The distinct header pattern is called the case marker, and the set of cases represents the case filler. <p> We chose to implement a learn-by-example sys 1 The ovals represent facts or declarative information while the rectangles represent procedures. The arrows denote the flow of data through the learning system. 3 tem because the database-query language provides a natural environment for the implementation of an explanation-based learning mechanism <ref> [13] </ref>. Whenever the natural-language front-end does not properly translate a natural-language query to a database query, the user simply supplies an example of how the database query should have been translated.
References-found: 13

