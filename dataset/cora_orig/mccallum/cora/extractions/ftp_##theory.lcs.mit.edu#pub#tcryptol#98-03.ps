URL: ftp://theory.lcs.mit.edu/pub/tcryptol/98-03.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1998/98-03.html
Root-URL: 
Email: Email: benny@cs.technion.ac.il  Email: gilboa@cs.technion.ac.il  Email: naor@wisdom.weizmann.ac.il  
Title: Private Information Retrieval by Keywords  
Author: Benny Chor Niv Gilboa Moni Naor 
Address: Israel.  Rehovot, Israel.  
Note: Israel. Supported by the fund for the promotion of research at the Technion.  
Affiliation: Computer Science Dept., Technion, Haifa,  Computer Science Dept., Technion, Haifa,  Computer Science and Applied Math. Dept., Weizmann Institute of Science,  
Abstract: Private information retrieval (PIR) schemes enable a user to access one or more servers that hold copies of a database and privately retrieve parts of the n bits of data stored in the database. This means that the queries give each individual database no partial information (in the information theoretic or computational sense) on the identity of the item retrieved by the user. All known PIR schemes assume that the user knows the physical address of the sought item. This is usually not the case when accessing a public database that is not managed by the user. Such databases are typically presented with keywords, which are then internally translated (at the database end) to physical addresses, using an appropriate search structure (for example, a hash table or a binary tree). In this note we describe a simple, modular way to privately access data by keywords. It combines any conventional search structure with any underlying PIR scheme (including single server schemes). The transformation requires no modification in the way that the search structure is maintained. Therefore the same database will support both private and regular (non private) searches. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Ambainis, </author> <title> "An upper bound for Private Information Retrieval", </title> <booktitle> In Proc. of 24 th ICALP, to appear,1997. </booktitle> <pages> 17 </pages>
Reference-contexts: Private information retrieval schemes enable a user to access (a single or replicated copies of) databases and retrieve information without revealing the identity of the sought items to any individual database <ref> [3, 1, 2, 11] </ref>. A major drawback of all PIR schemes known today is the assumption that the user knows the physical address of the sought item. This is usually not the case in most databases in use. <p> A distributed setting was suggested in which: * There are k, k &gt; 1, databases which hold copies of the same string x. * The databses are allowed to communicate with the user, but not with one another. In <ref> [1] </ref> Ambainis generalized several of the results in [3]. The two works combined present the following schemes: 1. A k database scheme, for any constant k 2, with communication complexity O (n 1 1 2. <p> In this scenario, each database holds, instead of a string of n bits, n blocks of ` bits each. The user's goal is to privately retrieve one of the n blocks. Further details on this problem and possible solutions appear in section 3. Both [3] and <ref> [1] </ref> require the privacy of the user to be protected in an information theoretic sense. In [2, 11] and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. <p> It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of [2, 11, 14] is that their schemes have significantly lower communication complexity than those in <ref> [1, 3] </ref>. A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). The communication complexity of the scheme is O (n * ) for any constant * &gt; 0. <p> However, the polynomial interpolation scheme which is constructed in [3] as a solution to PIR (n; k), for any k 2, achieves the result in the claim. The second part of the claim is proved by combining two techniques: the efficient PIR (n; k) schemes of <ref> [1] </ref>, and a generalization of the balancing technique of [2]. The full proof appears in [6]. In the one database, computational setting of [11] we do not know of any ` such that blocks of size greater than ` can be retrieved with communication comlexity O (`). <p> of [7] are (for an honest user): * A k + 1 database SPIR scheme with communication complexity O (C (1; n; k + 1)). * A k database SPIR scheme with communication complexity O (C (1; n; k)), in case P is one of the PIR schemes presented in <ref> [1, 2, 3, 11] </ref>. If the user is dishonest and tries to learn extra information by not adhering to the required protocol, the SPIR schemes have to be changed slightly.
Reference: [2] <author> B. Chor, N. Gilboa, </author> <title> "Computationally Private Information Retrieval" Proc. </title> <booktitle> of 29 th STOC (1997), </booktitle> <pages> pp. 304-313. </pages>
Reference-contexts: Private information retrieval schemes enable a user to access (a single or replicated copies of) databases and retrieve information without revealing the identity of the sought items to any individual database <ref> [3, 1, 2, 11] </ref>. A major drawback of all PIR schemes known today is the assumption that the user knows the physical address of the sought item. This is usually not the case in most databases in use. <p> The user's goal is to privately retrieve one of the n blocks. Further details on this problem and possible solutions appear in section 3. Both [3] and [1] require the privacy of the user to be protected in an information theoretic sense. In <ref> [2, 11] </ref> and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. <p> In [2, 11] and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of <ref> [2, 11, 14] </ref> is that their schemes have significantly lower communication complexity than those in [1, 3]. A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). <p> It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of [2, 11, 14] is that their schemes have significantly lower communication complexity than those in [1, 3]. A computationally private,two database scheme is presented in <ref> [2] </ref>. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). The communication complexity of the scheme is O (n * ) for any constant * &gt; 0. <p> The second part of the claim is proved by combining two techniques: the efficient PIR (n; k) schemes of [1], and a generalization of the balancing technique of <ref> [2] </ref>. The full proof appears in [6]. In the one database, computational setting of [11] we do not know of any ` such that blocks of size greater than ` can be retrieved with communication comlexity O (`). <p> In the PIR scheme of [11] a single bit is retrieved with n 1=d bits sent by the user and d by the database. Combining the above with a balancing technique shown in [3] proves the claim. In the two database, computational setting of <ref> [2] </ref> it is possible to construct PIR (n; 2) schemes in which the user sends O (n 1=d ) bits, for some constant d, and each database replies with a single bit. Therefore: Claim 3: Assume the existence of pseudo-random generators. <p> This may pose no problem when the only measure of efficiency we use is communication complexity. It does cause difficulties if the databases are assumed to be computationally bounded, as in <ref> [2, 11] </ref>. <p> of [7] are (for an honest user): * A k + 1 database SPIR scheme with communication complexity O (C (1; n; k + 1)). * A k database SPIR scheme with communication complexity O (C (1; n; k)), in case P is one of the PIR schemes presented in <ref> [1, 2, 3, 11] </ref>. If the user is dishonest and tries to learn extra information by not adhering to the required protocol, the SPIR schemes have to be changed slightly. <p> The communication complexity of P 0 is at most mC (n). However, in many cases the amount of communication can be reduced by using balancing techniques, see <ref> [2, 6] </ref>. We construct the symmetric PERKY scheme, Q, in similar fashion to the first trie based PERKY scheme (see subsection 5.2). The data structure is again made up of ` arrays, with indices 0; : : : ; ` 1.
Reference: [3] <author> B. Chor, O. Goldreich, E. Kushilevitz, M. </author> <title> Sudan, </title> <booktitle> "Private Information Retrieval" , Proc. of 36 th FOCS, </booktitle> <year> 1995, </year> <pages> pp. 41-50. </pages>
Reference-contexts: Private information retrieval schemes enable a user to access (a single or replicated copies of) databases and retrieve information without revealing the identity of the sought items to any individual database <ref> [3, 1, 2, 11] </ref>. A major drawback of all PIR schemes known today is the assumption that the user knows the physical address of the sought item. This is usually not the case in most databases in use. <p> By employing a PIR scheme, we transform this walk into an oblivious walk on the data structure, namely a walk where each server gets no information on the walk (and, therefore, on the desired keyword itself). 1.1 Related Work The work that introduced the problem of retrieving information privately is <ref> [3] </ref>. A user wishes to privately retrieve the i-th bit in the database, without revealing any information about i. <p> A distributed setting was suggested in which: * There are k, k &gt; 1, databases which hold copies of the same string x. * The databses are allowed to communicate with the user, but not with one another. In [1] Ambainis generalized several of the results in <ref> [3] </ref>. The two works combined present the following schemes: 1. A k database scheme, for any constant k 2, with communication complexity O (n 1 1 2. An O (log n) database scheme with communication complexity O (log 2 n log log n). A related problem that was studied in [3], <p> <ref> [3] </ref>. The two works combined present the following schemes: 1. A k database scheme, for any constant k 2, with communication complexity O (n 1 1 2. An O (log n) database scheme with communication complexity O (log 2 n log log n). A related problem that was studied in [3], and is especially important in the current work of private retrieval by keywords, is the problem of private block retrieval. In this scenario, each database holds, instead of a string of n bits, n blocks of ` bits each. <p> In this scenario, each database holds, instead of a string of n bits, n blocks of ` bits each. The user's goal is to privately retrieve one of the n blocks. Further details on this problem and possible solutions appear in section 3. Both <ref> [3] </ref> and [1] require the privacy of the user to be protected in an information theoretic sense. In [2, 11] and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. <p> It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of [2, 11, 14] is that their schemes have significantly lower communication complexity than those in <ref> [1, 3] </ref>. A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). The communication complexity of the scheme is O (n * ) for any constant * &gt; 0. <p> A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). The communication complexity of the scheme is O (n * ) for any constant * &gt; 0. In <ref> [3] </ref> it was proved that if there is only one database, and information theoretic privacy is required, then the communication complexity of a PIR scheme is (n). <p> In both cases there are is a single user, denoted by U and k 1 2 databases, denoted by DB 1 ; : : : ; DB k , which hold copies of the same data. The first problem was defined in <ref> [3] </ref> in the following way: Definition 1: Suppose that each database holds x 2 f0; 1g n , and that the user holds i 2 f1; : : : ; ng. <p> A solution to the private information retrieval problem is a protocol, which allows the user to retrieve the value of the i-th bit in x without leaking information about i to any individual database. In <ref> [3] </ref> the authors also introduced a generalization of the PIR problem in which blocks of bits are retrieved. In this setting the databases hold n blocks of ` bits each, and the user wishes to privately retrieve the i-th block. This problem is denoted by PIR (`; n; k). <p> We use to denote the security parameter in computationally private schemes. 3 Private Retrieval of Blocks The model of private information retrieval of a single bit is interesting from a theoretic point of view. A more realistic model <ref> [3] </ref> assumes that the data is partitioned into blocks (or records), and a whole block has to be retrieved. For simplicity, we assume that each block/record contains the same number of bits, `. <p> This distinction depends on the PIR setting: the number of databases and the required type of privacy. A large block in one setting may be small in another. In the information-theoretic setting of <ref> [3] </ref> the following results are known: 3 Claim 1: 1. For any constant k, k 2 and for any `, ` n 1 k1 , there exists a PIR (`; n; k) scheme with communication complexity O (`). 2. <p> For any constant k, k 2 and for any `, there exists a PIR (`; n; k) scheme with commu nication complexity O (n 1 k The first part of the claim, which deals with large blocks, is proved in <ref> [3] </ref>. It is explicitly stated, in that work, only for k = 2. However, the polynomial interpolation scheme which is constructed in [3] as a solution to PIR (n; k), for any k 2, achieves the result in the claim. <p> a PIR (`; n; k) scheme with commu nication complexity O (n 1 k The first part of the claim, which deals with large blocks, is proved in <ref> [3] </ref>. It is explicitly stated, in that work, only for k = 2. However, the polynomial interpolation scheme which is constructed in [3] as a solution to PIR (n; k), for any k 2, achieves the result in the claim. The second part of the claim is proved by combining two techniques: the efficient PIR (n; k) schemes of [1], and a generalization of the balancing technique of [2]. <p> In the PIR scheme of [11] a single bit is retrieved with n 1=d bits sent by the user and d by the database. Combining the above with a balancing technique shown in <ref> [3] </ref> proves the claim. In the two database, computational setting of [2] it is possible to construct PIR (n; 2) schemes in which the user sends O (n 1=d ) bits, for some constant d, and each database replies with a single bit. <p> of [7] are (for an honest user): * A k + 1 database SPIR scheme with communication complexity O (C (1; n; k + 1)). * A k database SPIR scheme with communication complexity O (C (1; n; k)), in case P is one of the PIR schemes presented in <ref> [1, 2, 3, 11] </ref>. If the user is dishonest and tries to learn extra information by not adhering to the required protocol, the SPIR schemes have to be changed slightly. <p> We require that in this type of scheme the user obtains a single block of m bits and nothing else. In particular, the user cannot obtain bits from different blocks. The protocol is essentially the same as the general solution to PIR (`; n; k) presented in <ref> [3] </ref>. The string x, which each database holds, is viewed as an m fi n matrix, where each column is one block of m bits. U sends a single query to each database, as his part of the scheme P, when retrieving a single bit out of n bits.
Reference: [4] <author> M. Fredman, J. Komlos, E. Szemeredi, </author> <title> "Storing a sparse table in O(1) worst case access time" , Journal of the ACM, </title> <journal> Vol. </journal> <volume> 31, </volume> <year> 1984, </year> <pages> pp. 538-544. </pages>
Reference-contexts: Proof: In order to find a hash function whose restriction is bijective we use techniques introduced in [15] and <ref> [4] </ref>. We define a family, of functions, H, such that 8h 2 H; h : f0; 1g ` ! f1; : : : ; tg and jHj = 2 2` . <p> An improved scheme: We reduce the number of entries in the array to O (n) by using the perfect hashing technique introduced in <ref> [4] </ref>. To make this presentation self contained, we give a brief description of the technique. The main idea is to map the strings s 1 ; : : : ; s n to an array of length O (n) in two stages.
Reference: [5] <author> O. </author> <title> Goldreich "Towards a theory of software protection and simulation by oblivious RAMs", </title> <booktitle> Proc. of 19 th STOC, </booktitle> <year> 1987. </year>
Reference-contexts: They assume that the problem of determining quadratic residuosity modulo composite numbers [9] is intractable. In [14] Ostrovsky and Shoup construct computationally private schemes that are based on the oblivious RAM technique <ref> [5, 8, 13] </ref>, with poly-logarithmic communication complexity. The assumption used in this work is that trap door permutations exist. The scheme is executes in O (log n) rounds of communication, compared with 1 round for all other PIR schemes.
Reference: [6] <author> N. Gilboa, </author> <title> "Balancing and Private retrieval of blocks", </title> <note> in preparation. </note>
Reference-contexts: The second part of the claim is proved by combining two techniques: the efficient PIR (n; k) schemes of [1], and a generalization of the balancing technique of [2]. The full proof appears in <ref> [6] </ref>. In the one database, computational setting of [11] we do not know of any ` such that blocks of size greater than ` can be retrieved with communication comlexity O (`). <p> The communication complexity of P 0 is at most mC (n). However, in many cases the amount of communication can be reduced by using balancing techniques, see <ref> [2, 6] </ref>. We construct the symmetric PERKY scheme, Q, in similar fashion to the first trie based PERKY scheme (see subsection 5.2). The data structure is again made up of ` arrays, with indices 0; : : : ; ` 1.
Reference: [7] <author> Y. Gertner, Y. Ishai, E. Kushilevitz, T. Malkin, </author> " <title> Protecting Data Privacy in private Information Retrieval Schemes", </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: The assumption used in this work is that trap door permutations exist. The scheme is executes in O (log n) rounds of communication, compared with 1 round for all other PIR schemes. Gertner et. al. <ref> [7] </ref> have extended the privacy requirement so that the database's privacy is protected too. Further details on that problem, and its application to the current paper appear in subsection 6.2. Organization In section 2 we introduce basic definitions and notations. <p> The second type of solution is to slightly extend the scope of the PIR, or PERKY model. For instance, the databases can be allowed to have a source of shared randomness. This is already assumed if the model of communication and privacy being used is that of Symmetric PIR <ref> [7] </ref>. 3. Another solution is to have all the databases go over the functions in H in deterministic fashion, for example in lexicographic order. The first function that satisfies the conditions required of h i is chosen as h i . <p> Obviously, if w 2 fs 1 ; : : : ; s n g, then w (x) 2 fs 1 (x); : : : ; s n (x)g. 6.2 Symmetric P E RKY In <ref> [7] </ref> the notion of symmetric PIR, SPIR, was introduced. The paper dealt with the problem of retrieving a bit while keeping the information of both the user and the databases private. The privacy of the database is protected in a very strict sense. <p> In fact, it is proven in the paper that without some sort of interaction between the databases, no SPIR scheme is possible, regardless of its communication complexity. Given a k, k 1, database PIR scheme, P, with communication complexity C (1; n; k), the main constructions of <ref> [7] </ref> are (for an honest user): * A k + 1 database SPIR scheme with communication complexity O (C (1; n; k + 1)). * A k database SPIR scheme with communication complexity O (C (1; n; k)), in case P is one of the PIR schemes presented in [1, 2,
Reference: [8] <author> O. Goldreich, R. Ostrovsky, </author> <title> "Software Protection and Simulation on Oblivious RAMs", </title> <journal> JACM, </journal> <volume> Vol. 43, No. 3, </volume> <year> 1996, </year> <pages> pp. 431-473. </pages>
Reference-contexts: They assume that the problem of determining quadratic residuosity modulo composite numbers [9] is intractable. In [14] Ostrovsky and Shoup construct computationally private schemes that are based on the oblivious RAM technique <ref> [5, 8, 13] </ref>, with poly-logarithmic communication complexity. The assumption used in this work is that trap door permutations exist. The scheme is executes in O (log n) rounds of communication, compared with 1 round for all other PIR schemes.
Reference: [9] <author> S. Goldwasser, S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages> <note> Previous version in STOC 1982. </note>
Reference-contexts: However, Kushilevitz and Ostrovsky construct in [11] a computationally private, one database scheme, with communication complexity O (n * ) for any constant * &gt; 0. They assume that the problem of determining quadratic residuosity modulo composite numbers <ref> [9] </ref> is intractable. In [14] Ostrovsky and Shoup construct computationally private schemes that are based on the oblivious RAM technique [5, 8, 13], with poly-logarithmic communication complexity. The assumption used in this work is that trap door permutations exist. <p> In the one database, computational setting of [11] we do not know of any ` such that blocks of size greater than ` can be retrieved with communication comlexity O (`). We do have the following result: Claim 2 : Assume the intractability of the quadratic residuosity problem, <ref> [9] </ref>, and let the security parameter be . For any block size `, and constant d there exists a computational PIR (`; n; 1) scheme with communication complexity n 1=d + ` d .
Reference: [10] <author> D. Knuth, </author> <booktitle> The art of computer programming, </booktitle> <volume> Vol. 3, </volume> <publisher> Addison Wesley, </publisher> <year> 1973. </year>
Reference-contexts: Proof: An initial scheme: We use a trie data structure <ref> [10, page 481] </ref> and hereby describe the arrays that are used to implement it in our context. There are ` arrays with indices q = 0; 1; : : : ; ` 1. The q-th array represents all the legal prefixes of length q.
Reference: [11] <author> E. Kushilevitz, R. Ostrovsky, </author> <booktitle> "Single-database computationally private information retrieval" Proc. of 38 th FOCS, </booktitle> <year> 1997. </year>
Reference-contexts: Private information retrieval schemes enable a user to access (a single or replicated copies of) databases and retrieve information without revealing the identity of the sought items to any individual database <ref> [3, 1, 2, 11] </ref>. A major drawback of all PIR schemes known today is the assumption that the user knows the physical address of the sought item. This is usually not the case in most databases in use. <p> The user's goal is to privately retrieve one of the n blocks. Further details on this problem and possible solutions appear in section 3. Both [3] and [1] require the privacy of the user to be protected in an information theoretic sense. In <ref> [2, 11] </ref> and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. <p> In [2, 11] and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of <ref> [2, 11, 14] </ref> is that their schemes have significantly lower communication complexity than those in [1, 3]. A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). <p> In [3] it was proved that if there is only one database, and information theoretic privacy is required, then the communication complexity of a PIR scheme is (n). However, Kushilevitz and Ostrovsky construct in <ref> [11] </ref> a computationally private, one database scheme, with communication complexity O (n * ) for any constant * &gt; 0. They assume that the problem of determining quadratic residuosity modulo composite numbers [9] is intractable. <p> The second part of the claim is proved by combining two techniques: the efficient PIR (n; k) schemes of [1], and a generalization of the balancing technique of [2]. The full proof appears in [6]. In the one database, computational setting of <ref> [11] </ref> we do not know of any ` such that blocks of size greater than ` can be retrieved with communication comlexity O (`). We do have the following result: Claim 2 : Assume the intractability of the quadratic residuosity problem, [9], and let the security parameter be . <p> For any block size `, and constant d there exists a computational PIR (`; n; 1) scheme with communication complexity n 1=d + ` d . In the PIR scheme of <ref> [11] </ref> a single bit is retrieved with n 1=d bits sent by the user and d by the database. Combining the above with a balancing technique shown in [3] proves the claim. <p> Below we present several solutions to this problem. 1. The simplest solution is to use a scheme that solves PIR (`; n; 1). If there is a single database, <ref> [11] </ref>, the problem of database coordination does not even arise. 2. The second type of solution is to slightly extend the scope of the PIR, or PERKY model. For instance, the databases can be allowed to have a source of shared randomness. <p> This may pose no problem when the only measure of efficiency we use is communication complexity. It does cause difficulties if the databases are assumed to be computationally bounded, as in <ref> [2, 11] </ref>. <p> of [7] are (for an honest user): * A k + 1 database SPIR scheme with communication complexity O (C (1; n; k + 1)). * A k database SPIR scheme with communication complexity O (C (1; n; k)), in case P is one of the PIR schemes presented in <ref> [1, 2, 3, 11] </ref>. If the user is dishonest and tries to learn extra information by not adhering to the required protocol, the SPIR schemes have to be changed slightly.
Reference: [12] <author> E. Kushilevitz, N. </author> <title> Nisan, </title> <publisher> "Communication Complexity" Cambridge University Press, </publisher> <year> 1997. </year>
Reference-contexts: That is the probability, that at the end of the protocol U obtains a wrong answer as to whether w is one of s 1 ; : : : ; s n or not. This tradeoff is possible through the application of the string equivalence technique, described in <ref> [12, pp. 30-31] </ref>.
Reference: [13] <author> R. </author> <title> Ostrovsky "Software protection and simulation on oblivious RAMs", M.I.T. </title> <type> Ph.D. </type> <institution> Thesis in Computer Science, </institution> <month> June </month> <year> 1992. </year> <note> Preliminary version in Proc. 22 nd STOC, </note> <year> 1990. </year>
Reference-contexts: They assume that the problem of determining quadratic residuosity modulo composite numbers [9] is intractable. In [14] Ostrovsky and Shoup construct computationally private schemes that are based on the oblivious RAM technique <ref> [5, 8, 13] </ref>, with poly-logarithmic communication complexity. The assumption used in this work is that trap door permutations exist. The scheme is executes in O (log n) rounds of communication, compared with 1 round for all other PIR schemes.
Reference: [14] <author> R. Ostrovsky, V. Shoup, </author> <title> "Private Information Storage", </title> <booktitle> these proceedings. Proc. of 29 th STOC, </booktitle> <year> 1997, </year> <pages> pp. 294-303. </pages>
Reference-contexts: The user's goal is to privately retrieve one of the n blocks. Further details on this problem and possible solutions appear in section 3. Both [3] and [1] require the privacy of the user to be protected in an information theoretic sense. In [2, 11] and partially in <ref> [14] </ref>, this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of [2, 11, 14] is that their schemes have significantly lower communication complexity than those in [1, 3]. <p> In [2, 11] and partially in [14], this is replaced with computational privacy. It is assumed that the databases are computationally bounded. Under appropriate intractability assumptions, the databases cannot gain information about i. The advantage of <ref> [2, 11, 14] </ref> is that their schemes have significantly lower communication complexity than those in [1, 3]. A computationally private,two database scheme is presented in [2]. The cryptographic assumption in this work is that pseudo-random generators exist (alternatively that one way functions exist). <p> However, Kushilevitz and Ostrovsky construct in [11] a computationally private, one database scheme, with communication complexity O (n * ) for any constant * &gt; 0. They assume that the problem of determining quadratic residuosity modulo composite numbers [9] is intractable. In <ref> [14] </ref> Ostrovsky and Shoup construct computationally private schemes that are based on the oblivious RAM technique [5, 8, 13], with poly-logarithmic communication complexity. The assumption used in this work is that trap door permutations exist.
Reference: [15] <author> M. Wegman, J. Carter, </author> <title> "New hash functions and their use in authentication and set equality", </title> <journal> Journal of Computer and System Sciences, </journal> <volume> Vol. 22, No. 3, </volume> <year> 1981, </year> <pages> pp. 265-279. 18 </pages>
Reference-contexts: Proof: In order to find a hash function whose restriction is bijective we use techniques introduced in <ref> [15] </ref> and [4]. We define a family, of functions, H, such that 8h 2 H; h : f0; 1g ` ! f1; : : : ; tg and jHj = 2 2` .
References-found: 15

