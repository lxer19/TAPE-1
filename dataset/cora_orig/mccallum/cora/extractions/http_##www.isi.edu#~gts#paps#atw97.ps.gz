URL: http://www.isi.edu/~gts/paps/atw97.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Title: Server-Supported Signatures  
Author: N. Asokan G. Tsudik M. Waidner 
Keyword: digital signatures, non-repudiation, electronic commerce, network security, distributed systems, mobility.  
Note: Journal of Computer Security, to appear in  A previous version of this work was presented at ESORICS '96  
Address: Waterloo, Canada  USA  Switzerland  
Affiliation: IBM Research Division, Zurich Research Laboratory, Switzerland and University of  University of Southern California, Information Sciences Institute,  IBM Research Division, Zurich Research Laboratory,  
Email: e-mail: aso@zurich.ibm.com e-mail: gts@isi.edu e-mail: wmi@zurich.ibm.com  
Phone: [1].  
Date: Fall 1997  
Abstract: Non-repudiation is one of the most important security services. In this paper we present a novel non-repudiation technique, called Server-Supported Signatures, S 3 . It is based on one-way hash functions and traditional digital signatures. One of its highlights is that for ordinary users the use of asymmetric cryptography is limited to signature verification. S 3 is efficient in terms of computational, communication and storage costs. It also offers a degree of security comparable to that of existing techniques based on asymmetric cryptography. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Asokan, G. Tsudik, and M. Waidner. </author> <title> Server-supported signatures. </title> <editor> In Elisa Bertino et al., editors, </editor> <booktitle> Proceedings of the Fourth European Symposium on Research in Computer Security (ESORICS), number 1146 in Lecture Notes in Computer Science, </booktitle> <pages> pages 131-143. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany, </address> <month> September </month> <year> 1996. </year>
Reference: [2] <author> Warwick Ford. </author> <title> Computer Communications Security Principles, Standard Protocols and Techniques. </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1994. </year>
Reference-contexts: See <ref> [2] </ref> for a summary of the standard constructions. We are not aware of any previous work that aims to minimize the computational costs (at the protocol level) for ordinary users while providing the same security as standard non-repudiation techniques based on asymmetric cryptography.
Reference: [3] <author> S. Haber and W. S. Stornetta. </author> <title> How to time-stamp a digital document. </title> <booktitle> In Advances in Cryptology - CRYPTO '90, </booktitle> <pages> pages 437-455. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany, </address> <year> 1991. </year>
Reference-contexts: If S cannot provide a sequence of signatures that fits the hash value contained in the last signature received by O, the arbiter allows O to repudiate all signatures and assumes that S cheated. This idea of chaining previous signatures was used by Haber and Stornetta <ref> [3] </ref> for the construction of a time stamping service, based on the observation that the sequence of messages in H i cannot be changed afterwards. <p> This enables us to build a time stamping service based on S 3 . Ideally, a time stamping system must be able to impose a total order on all the messages time stamped. We can adapt the approach used in <ref> [3] </ref>, where S generates a chaining factor from a single, global chain. Every signature generated by the server has a chaining factor from this global chain.
Reference: [4] <author> Ralf Hauser, Michael Steiner, and Michael Waidner. </author> <title> Micro-payments based on ikp. </title> <type> Research Report 2791 (# 89269), </type> <institution> IBM Research, </institution> <month> Feb </month> <year> 1996. </year>
Reference-contexts: Optionally, it may also get a S 3 NRR token from the payee and forward it to the payee. The non-repudiation tokens serve as evidence of the transaction. The idea of using a hash chain for repeated, fixed-value payments was suggested recently <ref> [9, 4] </ref>. We have been able to use S 3 for payments of arbitrary values because S 3 provides non-repudiation of origin for arbitrary messages. 7 Analysis Computation: Ordinary users of S 3 need to be able to compute one-way hashes and to verify traditional digital signatures.
Reference: [5] <institution> ISO/IEC JTC1, Information Technology SC 27. Information technology security techniuqes non-repudiation. </institution> <note> ISO/IEC JTC 1/SC 27, 1996. Contains 3 parts; Current version dated June 1996; Next version expected in early 1997. </note>
Reference-contexts: Current versions of the draft ISO standards <ref> [5] </ref> identify various classes of non-repudiation services.
Reference: [6] <author> Leslie Lamport. </author> <title> Password authentication with insecure communication. </title> <journal> Communications of the ACM, </journal> <volume> 24(11) </volume> <pages> 770-772, </pages> <month> November </month> <year> 1981. </year>
Reference-contexts: Note that although server-supported signatures use a signature scheme that is asymmetric with respect to signature generation and verification, ordinary users are never required to generate signatures; thus, both sender and recipient are assumed to be computationally weak. In his well-known paper <ref> [6] </ref>, Lamport proposed using hash chains for password authentication over insecure networks. There had been other, earlier proposals to use one-way hash functions to construct signatures. Merkle has presented an overview of these efforts [7].
Reference: [7] <author> Ralph C. Merkle. </author> <title> A digital signature based on a conventional encryption function. </title> <editor> In Carl Pomerance, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO '87, number 293 in Lecture Notes in Computer Science, </booktitle> <pages> pages 369-378, </pages> <address> Santa Barbara, CA, USA, August 1987. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany. </address>
Reference-contexts: In his well-known paper [6], Lamport proposed using hash chains for password authentication over insecure networks. There had been other, earlier proposals to use one-way hash functions to construct signatures. Merkle has presented an overview of these efforts <ref> [7] </ref>. The original proposals in this category were impractical: a proposal by Lamport and Diffie requires a "public key" (i.e. an object that must be bound to the signer beforehand) and two hash operations to sign every bit. <p> Using an improvement attributed to Winternitz involving a single public key (which is the n th hash image of the private key) and n hash operations, one can sign a single message of size log 2 n bits. Merkle introduced the notion of a tree structure <ref> [7] </ref>; in one version of his proposals, with just a single public key, it is possible to sign an arbitrary number of messages.
Reference: [8] <institution> NIST National Institute of Standards and Technology (Computer Systems Laboratory). </institution> <note> Secure hash standard. Federal Information Processing Standards Publication FIPS PUB 180-1, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: Collision-resistance implies one-wayness [13, Section 7.2]. A number of efficient and allegedly one-way hash functions, such as SHA <ref> [8] </ref>, have been invented. One-way hash functions can be recursively applied to an input string. The notation h i (x) denotes the result of applying h () i times recursively to an input x.
Reference: [9] <author> Torben P. Pedersen. </author> <title> Electronic payments of samll amounts. </title> <booktitle> In Cambridge Workshop on Security Protocols, volume 1189 of Lecture Notes in Computer Science, </booktitle> <pages> pages 59-68, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Optionally, it may also get a S 3 NRR token from the payee and forward it to the payee. The non-repudiation tokens serve as evidence of the transaction. The idea of using a hash chain for repeated, fixed-value payments was suggested recently <ref> [9, 4] </ref>. We have been able to use S 3 for payments of arbitrary values because S 3 provides non-repudiation of origin for arbitrary messages. 7 Analysis Computation: Ordinary users of S 3 need to be able to compute one-way hashes and to verify traditional digital signatures.
Reference: [10] <author> Andreas Pfitzmann, Birgit Pfitzmann, and Michael Waidner. </author> <title> Practical signatures where individuals are unconditionally secure. </title> <type> Unpublished manuscript, </type> <note> available from the authors (pfitzb@informatik.uni-hildesheim.de), </note> <year> 1991. </year>
Reference: [11] <author> Birgit Pfitzmann. </author> <title> Digital Signature Schemes | General Framework and Fail-Stop Signatures. </title> <booktitle> Number 1100 in Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference: [12] <author> Bruce Schneier. </author> <title> Applied Cryptography: Protocols, Algorithms, and Source Code in C. </title> <publisher> John Wiley & Sons, Inc, </publisher> <year> 1996. </year>
Reference-contexts: The efficiency problem as addressed by specific designs of signature schemes was mainly motivated by the limited computing power of smart cards and smart tokens. <ref> [12] </ref> lists most known proposals. Typically they are based on pre-processing or on some asymmetry in the complexity of signature generation and verification (i.e., either sender or recipient must be able to perform complex operations, but not both).
Reference: [13] <author> Douglas R. Stinson. </author> <title> Cryptography: theory and practice. CRC Press Series on Discrete Mathematics and Its Applications, edited by Kenneth Rosen. </title> <publisher> CRC Press, </publisher> <address> Boca Raton, Florida, </address> <year> 1995. </year> <month> 13 </month>
Reference-contexts: The term x is called a pre-image of h (x). A one-way hash function h () is said to be collision-resistant if it is computationally infeasible to find any two strings x and x 0 such that h (x) = h (x 0 ). Collision-resistance implies one-wayness <ref> [13, Section 7.2] </ref>. A number of efficient and allegedly one-way hash functions, such as SHA [8], have been invented. One-way hash functions can be recursively applied to an input string. The notation h i (x) denotes the result of applying h () i times recursively to an input x.
References-found: 13

