URL: ftp://info.mcs.anl.gov/pub/tech_reports/plassman/smoothing_pp97.ps.gz
Refering-URL: http://www.mcs.anl.gov/sumaa3d/Papers/papers.html
Root-URL: http://www.mcs.anl.gov
Title: A Parallel Algorithm for Mesh Smoothing  
Author: Lori Freitag Mark Jones Paul Plassmann 
Abstract: Maintaining good mesh quality during the generation and refinement of unstructured meshes in finite-element applications is an important aspect in obtaining accurate discretizations and well-conditioned linear systems. In this article, we present a mesh-smoothing algorithm based on nonsmooth optimization techniques and a scalable implementation of this algorithm. We report mesh improvement results for two-dimensional simplicial meshes that demonstrate the effectiveness of this approach for a number of different test cases. We also show the scalability of the parallel algorithm on the IBM SP supercomputer and an ATM-connected network of SPARC Ultras. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Amenta, M. Bern, and D. Eppstein. </author> <title> Optimal point placement for mesh smoothing. </title> <booktitle> In 8th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <address> New Orleans, </address> <note> to appear. </note>
Reference-contexts: These results also showed that more than three sweeps of the mesh offer minimal improvements. We note that similar optimization-based smoothing methods have been proposed by <ref> [1, 3, 12] </ref> for a variety of optimization procedures and mesh quality measures. 3 A Parallel Mesh-Smoothing Algorithm In this section we present a framework for the correct implementation of local mesh-smoothing algorithms on a parallel computer. To begin, consider the partitioning of a mesh across a parallel machine.
Reference: [2] <author> I. Babuska and A. Aziz. </author> <title> On the angle condition in the finite element method. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 13 </volume> <pages> 214-226, </pages> <year> 1976. </year>
Reference-contexts: For example, with two-dimensional triangulations, classical finite element theory has shown that if the element angles approach the limits of 0 o and 180 o , the discretization error or the condition number of the element matrices can be negatively affected <ref> [2, 7] </ref>. Such poorly shaped elements are frequently produced by automatic mesh generation tools, particularly near domain boundaries.
Reference: [3] <author> Randolph E. Bank and R. Kent Smith. </author> <title> Mesh smoothing using a posteriori error estimates. </title> <note> SIAM Journal on Numerical Analysis, to appear. </note>
Reference-contexts: These results also showed that more than three sweeps of the mesh offer minimal improvements. We note that similar optimization-based smoothing methods have been proposed by <ref> [1, 3, 12] </ref> for a variety of optimization procedures and mesh quality measures. 3 A Parallel Mesh-Smoothing Algorithm In this section we present a framework for the correct implementation of local mesh-smoothing algorithms on a parallel computer. To begin, consider the partitioning of a mesh across a parallel machine.
Reference: [4] <author> David A Field. </author> <title> Laplacian smoothing and Delaunay triangulations. </title> <journal> Communications and Applied Numerical Methods, </journal> <volume> 4 </volume> <pages> 709-712, </pages> <year> 1988. </year>
Reference-contexts: One or more sweeps through the mesh are performed to improve the overall mesh quality. Thus, it is critical that each individual adjustment be inexpensive to compute. Perhaps the most commonly used local mesh-smoothing technique is Laplacian smoothing <ref> [4, 11] </ref>. This approach replaces the position of a vertex v by the average of the positions of its neighbors. The method is computationally inexpensive, but it does not provide any mechanisms that guarantee improvement in element quality.
Reference: [5] <author> Lori Freitag and Carl Ollivier-Gooch. </author> <title> A comparison of tetrahedral mesh improvement techniques. </title> <booktitle> In Proceedings of the Fifth International Meshing Roundtable. </booktitle> <institution> Sandia National Laboratories, </institution> <year> 1996. </year>
Reference-contexts: Optimization-based smoothing techniques offer an alternative to Laplacian smoothing that can be inexpensive, can guarantee valid elements in the final mesh, and can be effective for a wide variety of mesh quality measures. In [6] and <ref> [5] </ref>, we proposed an efficient, local smoothing algorithm based on nonsmooth optimization techniques that move the grid points in a manner guaranteed to maintain or improve mesh quality. <p> Standard step acceptance and termination criteria are used to ensure a robust implementation. Experimental results demonstrating the effectiveness of the optimization-based method compared with Laplacian smoothing for two and three-dimensional simplicial meshes are given in <ref> [5, 6] </ref>. The most effective and efficient smoothing approach presented in those articles combined a variant of Laplacian smoothing with the optimization-based algorithm. In this technique, Laplacian smoothing is used as the first step and is accepted if the local mesh is improved.
Reference: [6] <author> Lori A. Freitag, Mark T. Jones, and Paul E. Plassmann. </author> <title> An efficient parallel algorithm for mesh smoothing. </title> <booktitle> In Proceedings of the Fourth International Meshing Roundtable, </booktitle> <pages> pages 47-58. </pages> <institution> Sandia National Laboratories, </institution> <year> 1995. </year>
Reference-contexts: The shaded square marks the average of the positions of the vertices adjacent to v. Optimization-based smoothing techniques offer an alternative to Laplacian smoothing that can be inexpensive, can guarantee valid elements in the final mesh, and can be effective for a wide variety of mesh quality measures. In <ref> [6] </ref> and [5], we proposed an efficient, local smoothing algorithm based on nonsmooth optimization techniques that move the grid points in a manner guaranteed to maintain or improve mesh quality. <p> Standard step acceptance and termination criteria are used to ensure a robust implementation. Experimental results demonstrating the effectiveness of the optimization-based method compared with Laplacian smoothing for two and three-dimensional simplicial meshes are given in <ref> [5, 6] </ref>. The most effective and efficient smoothing approach presented in those articles combined a variant of Laplacian smoothing with the optimization-based algorithm. In this technique, Laplacian smoothing is used as the first step and is accepted if the local mesh is improved. <p> We now consider two methods for computing the independent sets; both of these methods achieve a scalable running time for bounded-degree meshes. A proof of the the correctness of the algorithm is given in <ref> [6] </ref>. We discuss two approaches for efficiently choosing the independent sets in parallel: (1) a vertex coloring method, and (2) a randomization scheme.
Reference: [7] <author> I. Fried. </author> <title> Condition of finite element matrices generated from nonuniform meshes. </title> <journal> AIAA Journal, </journal> <volume> 10 </volume> <pages> 219-221, </pages> <year> 1972. </year>
Reference-contexts: For example, with two-dimensional triangulations, classical finite element theory has shown that if the element angles approach the limits of 0 o and 180 o , the discretization error or the condition number of the element matrices can be negatively affected <ref> [2, 7] </ref>. Such poorly shaped elements are frequently produced by automatic mesh generation tools, particularly near domain boundaries.
Reference: [8] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> A parallel graph coloring heuristic. </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 14(3) </volume> <pages> 654-669, </pages> <year> 1993. </year>
Reference-contexts: The second approach is based on the assignment of a distinct random number, ae (v), to each vertex. At each step in the algorithm, we choose an independent set I from S according to the rule given in <ref> [8] </ref>: v 2 I if ae (v) &gt; ae (u) for u 2 adj (v) and u 2 S. <p> Thus, the number of passes through the while loop in the smoothing algorithm is bounded by this constant. Using the randomized approach, one can show that the expected number of passes through the loop is bounded by EO ( logjSj log logjSj ) <ref> [8] </ref>. The coloring approach yields a running time bound independent of the size of the graph being smoothed; however, the efficient parallel computation of this coloring requires the use of the randomized algorithm [8]. <p> the expected number of passes through the loop is bounded by EO ( logjSj log logjSj ) <ref> [8] </ref>. The coloring approach yields a running time bound independent of the size of the graph being smoothed; however, the efficient parallel computation of this coloring requires the use of the randomized algorithm [8]. Therefore, the coloring approach is cost effective only if it is used enough times to amortize the initial expense of computing the coloring (or is maintained for some other purpose, such as mesh refinement [10]).
Reference: [9] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Adaptive refinement of unstructured finite-element meshes. Journal of Finite Elements in Analysis and Design, </title> <note> to appear. </note>
Reference-contexts: In addition, adaptive refinement techniques used during the solution of a problem tend to produce more highly distorted elements than were contained in the initial mesh, especially when the adaptation occurs along curved boundaries <ref> [9] </ref> To obtain high-quality meshes, often one must repair or improve the meshes before or during the solution process. This improvement should be based on an element quality measure appropriate for the particular problem being solved.
Reference: [10] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Parallel algorithms for adaptive mesh refinement. </title> <journal> SIAM Journal on Scientific Computing, </journal> <note> to appear. </note>
Reference-contexts: Therefore, the coloring approach is cost effective only if it is used enough times to amortize the initial expense of computing the coloring (or is maintained for some other purpose, such as mesh refinement <ref> [10] </ref>). Since we typically use a small number of smoothing passes, the randomized approach is used in the experimental results presented in the next section. <p> The meshes for these problems are generated by adaptive refinement, where elements are refined by Rivara's bisection algorithm. The refinement indicator function is based on local energy norm estimates. The parallel adaptive refinement algorithm and the test problems are described in more detail in <ref> [10] </ref>. We compare two different smoothing approaches: one using the optimization-based smoothing only to one using the more targeted combined approach. For the combined approach, we first compute the result given by Laplacian smoothing and check the resulting quality of the adjacent elements.
Reference: [11] <author> S. H. Lo. </author> <title> A new mesh generation scheme for arbitrary planar domains. </title> <journal> International Journal for Numerical Methods in Engineering, </journal> <volume> 21 </volume> <pages> 1403-1426, </pages> <year> 1985. </year>
Reference-contexts: One or more sweeps through the mesh are performed to improve the overall mesh quality. Thus, it is critical that each individual adjustment be inexpensive to compute. Perhaps the most commonly used local mesh-smoothing technique is Laplacian smoothing <ref> [4, 11] </ref>. This approach replaces the position of a vertex v by the average of the positions of its neighbors. The method is computationally inexpensive, but it does not provide any mechanisms that guarantee improvement in element quality.
Reference: [12] <author> Mark Shephard and Marcel Georges. </author> <title> Automatic three-dimensional mesh generation by the finite octree technique. </title> <journal> International Journal for Numerical Methods in Engineering, </journal> <volume> 32 </volume> <pages> 709-749, </pages> <year> 1991. </year>
Reference-contexts: These results also showed that more than three sweeps of the mesh offer minimal improvements. We note that similar optimization-based smoothing methods have been proposed by <ref> [1, 3, 12] </ref> for a variety of optimization procedures and mesh quality measures. 3 A Parallel Mesh-Smoothing Algorithm In this section we present a framework for the correct implementation of local mesh-smoothing algorithms on a parallel computer. To begin, consider the partitioning of a mesh across a parallel machine.
References-found: 12

