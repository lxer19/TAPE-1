URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr93/tr93-012.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr93-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: A Parallel Algorithm For Surface Triangulation  
Author: Theodore Johnson, Panos E. Livadas, Sunjay E. Talele 
Date: March 31, 1993  
Affiliation: Dept. of Computer and Information Science University of Florida  
Abstract: In many scientific fields, three dimensional surfaces must be reconstructed from a given collection of its surface points. Applications for surface reconstruction exist in medical research and diagnosis as well as in design intensive disciplines. Fuchs, Kedem, and Uselton and Keppel show that surface reconstruction via triangulation can be reduced to the problem of finding a path in a toroidal graph. This paper presents a parallel algorithm to find the minimum cost acceptable path in an m by n toroidal graph. We then show an implementation of the parallel algorithm on a parallel architecture, using a message passing approach. Results are shown, along with suggestions for future enhancements. 
Abstract-found: 1
Intro-found: 1
Reference: [AFH81] <author> Ehud Artzy, Gideon Frieder, and Gabor T. Herman. </author> <title> The theory, design, implementation, and evaluation of a three-dimensional surface detection algorithm. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 15 </volume> <pages> 1-24, </pages> <year> 1981. </year>
Reference: [AOUK87] <author> Ken-Ichi Anjyo, Toshio Ochi, Yoshiaki Usami, and Yasumasa Kawashima. </author> <title> A practical method of constructing surfaces in three- dimensional digitized space. </title> <journal> The Visual Computer, </journal> <volume> 3 </volume> <pages> 4-12, </pages> <year> 1987. </year> <month> 20 </month>
Reference-contexts: Branching occurs when either a single contour splits into several contours, or several contours merge into a single contour. Christiansen and Sederberg [CS78] and Anjyo et al. <ref> [AOUK87] </ref> proposed transforming each pair of adjacent serial sections into a number of simple cases. In more acomplex cases, human interaction would be required. This may be unacceptable in some cases, such as a clinical environment, where user interaction should be minimal.
Reference: [Blo88] <author> J. Bloomenthal. </author> <title> Polygonalization of implicit surfaces. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5 </volume> <pages> 341-355, </pages> <year> 1988. </year>
Reference-contexts: Furthermore, if the surface intersects edge (s) of a cube face, then the surface must intersect the cube face also. Lorensen and Cline [LC87], Wyvill et al. [WMW86], and Bloomenthal <ref> [Blo88] </ref> all use a variation of this method. Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. Bloomenthal's method [Blo88] also allows for more sampling around particular areas of a surface, allowing for a better surface fit in some cases. <p> Furthermore, if the surface intersects edge (s) of a cube face, then the surface must intersect the cube face also. Lorensen and Cline [LC87], Wyvill et al. [WMW86], and Bloomenthal <ref> [Blo88] </ref> all use a variation of this method. Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. Bloomenthal's method [Blo88] also allows for more sampling around particular areas of a surface, allowing for a better surface fit in some cases. <p> Lorensen and Cline [LC87], Wyvill et al. [WMW86], and Bloomenthal <ref> [Blo88] </ref> all use a variation of this method. Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. Bloomenthal's method [Blo88] also allows for more sampling around particular areas of a surface, allowing for a better surface fit in some cases. The method of Wyvill et al. [WMW86] considers the cube corner values of each face. There are only seven combinations of cube values for a given face.
Reference: [CHRU85] <author> Lih-Shyang Chen, Gabor T. Herman, R. Anthony Reynolds, and Jayaram K. Udupa. </author> <title> Surface shading in the cuberille environment. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 5(12) </volume> <pages> 33-43, </pages> <month> Dec </month> <year> 1985. </year>
Reference: [CS78] <author> H. N. Christiansen and T. W. </author> <title> Sederberg. Conversion of complex contour line definitions into polygonal element mosaics. </title> <journal> Computer Graphics, </journal> <volume> 12(3) </volume> <pages> 187-192, </pages> <month> Aug </month> <year> 1978. </year>
Reference-contexts: Fuchs et al. [FKU77], on the other hand, sought the minimum weighted path, thus finding the minimum surface area of the polyhedron formed by the triangular mesh. Christiansen and Sederberg <ref> [CS78] </ref> pointed out that heuristics work best in these methods when contour pairs are similar in size and shape, and are mutually centered. <p> Branching occurs when either a single contour splits into several contours, or several contours merge into a single contour. Christiansen and Sederberg <ref> [CS78] </ref> and Anjyo et al. [AOUK87] proposed transforming each pair of adjacent serial sections into a number of simple cases. In more acomplex cases, human interaction would be required. This may be unacceptable in some cases, such as a clinical environment, where user interaction should be minimal.
Reference: [DCH88] <author> Robert A. Drebin, Loren Carpenter, and Pat Hanrahan. </author> <title> Volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 65-74, </pages> <month> Aug </month> <year> 1988. </year>
Reference: [EPO91] <author> A. B. Ekoule, F. C. Peyrin, and C. L. Odet. </author> <title> A triangulation algorithm from abritrary shaped muliple planar contours. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(2) </volume> <pages> 182-199, </pages> <month> Apr </month> <year> 1991. </year>
Reference: [FKU77] <author> H. Fuchs, Z. M. Kedem, and S.P. Uselton. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> 20(10) 693-702, Oct 1977. 
Reference-contexts: Thus, an exhaustive search is unacceptable. Previously, Keppel [Kep75] and Fuchs et al. <ref> [FKU77] </ref> have shown that the problem of finding an optimal triangular arrangement can be reduced to finding a minimum cost path in a directed toroidal graph, which 1 can be solved by Dijkstra's algorithm. In this paper, we present a dynamic programming solution to the triangular arrangement problem. <p> Keppel [Kep75] and Fuchs et al. <ref> [FKU77] </ref> proposed an optimal approximation of a three-dimensional surface from a set of cross sections using triangulation. The optimal surface was determined by finding a path in a directed toroidal graph. <p> The optimal surface was determined by finding a path in a directed toroidal graph. Keppel [Kep75] defined an optimal surface to be an acceptable surface represented by the maximal weighted path, thus maximizing the enclosed volume of the surface. Fuchs et al. <ref> [FKU77] </ref>, on the other hand, sought the minimum weighted path, thus finding the minimum surface area of the polyhedron formed by the triangular mesh. Christiansen and Sederberg [CS78] pointed out that heuristics work best in these methods when contour pairs are similar in size and shape, and are mutually centered. <p> Any two consecutive points are connected by a contour segment. The collection of contour segments which form the polygonal approximation of the 4 curve is called a contour. We review the notation used by Fuchs et al. <ref> [FKU77] </ref>. <p> The triangle will have two vertices on one contour and one vertex on the other contour. Thus each tile is of the form fQ i ; Q k ; P j g or fP i ; P k ; Q j g. Fuchs, et al. <ref> [FKU77] </ref> makes the observation that any tile of the form above can be reduced to a sequence of elementary tiles without changing the approximating surface. <p> The regions formed by chopping off subgraphs can also be divided into finer pieces, resulting in a quicksort-type algorithm. Fuchs et al. <ref> [FKU77] </ref> show that this algorithm reduces the time to compute the minimum cost acceptable path from mT (m; n) to T (m; n) log (m), where T (m; n) is the time to solve the single source shortest path problem on a toroidal graph.
Reference: [GD82] <author> S. Ganapathy and T. G. Dennehy. </author> <title> A new general triangulation method for planar contours. </title> <journal> Computer Graphics, </journal> <volume> 16(3) </volume> <pages> 69-74, </pages> <month> Jul </month> <year> 1982. </year> <pages> 21 22 </pages>
Reference: [JL92] <author> Theodore Johnson and Panos E. Livadas. </author> <title> Finding minimum cost acceptable paths in parallel. </title> <note> To appear in the Journal of Mathematical Imaging and Vision. Also available at cis.ufl.edu:cis/tech-reports/tr92-tr92-010.ps.Z </note>
Reference-contexts: This condition occurs whenever there are two adjacent d in the subgraph such that jS d j = 1, and can be detected and corrected for when the paths are split and distributed with only a constant time penalty <ref> [JL92] </ref>. Johnson and Livadas [JL92] show that this consideration, along with processor allocation based on graph size, leads to a parallel algorithm with an optimal speedup. <p> This condition occurs whenever there are two adjacent d in the subgraph such that jS d j = 1, and can be detected and corrected for when the paths are split and distributed with only a constant time penalty <ref> [JL92] </ref>. Johnson and Livadas [JL92] show that this consideration, along with processor allocation based on graph size, leads to a parallel algorithm with an optimal speedup.
Reference: [Kep75] <author> E. Keppel. </author> <title> Approximating complex surfaces by triangulation of contour lines. </title> <journal> IBM J. Res Develop., </journal> <volume> 19 </volume> <pages> 2-11, </pages> <year> 1975. </year>
Reference-contexts: We can approximate the surface by a collection of triangles between any two successive contours as shown in Figure 2. These triangles, which we will call tiles, are formed by two vertices on one contour and one vertex on the other contour. Keppel <ref> [Kep75] </ref> shows that, if two consecutive contours consist of m and n vertices, respectively, then the number of tile arrangements is T, where T (m; n) = (m 1)!(n 1)! For n = m = 12 points, we obtain approximately 10 8 different tile combinations, and therefore different surface shapes. <p> Thus, an exhaustive search is unacceptable. Previously, Keppel <ref> [Kep75] </ref> and Fuchs et al. [FKU77] have shown that the problem of finding an optimal triangular arrangement can be reduced to finding a minimum cost path in a directed toroidal graph, which 1 can be solved by Dijkstra's algorithm. <p> Keppel <ref> [Kep75] </ref> and Fuchs et al. [FKU77] proposed an optimal approximation of a three-dimensional surface from a set of cross sections using triangulation. The optimal surface was determined by finding a path in a directed toroidal graph. Keppel [Kep75] defined an optimal surface to be an acceptable surface represented by the maximal <p> Keppel <ref> [Kep75] </ref> and Fuchs et al. [FKU77] proposed an optimal approximation of a three-dimensional surface from a set of cross sections using triangulation. The optimal surface was determined by finding a path in a directed toroidal graph. Keppel [Kep75] defined an optimal surface to be an acceptable surface represented by the maximal weighted path, thus maximizing the enclosed volume of the surface.
Reference: [LC87] <author> William E. Lorensen and Harvey E. Cline. </author> <title> Marching cubes: A high resolution 3d surface construction algorithm. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 163-169, </pages> <month> Jul </month> <year> 1987. </year>
Reference-contexts: The precise location of the surface vertex is determined by assuming the values along a cube edge linearly interpolate the cube corners. Furthermore, if the surface intersects edge (s) of a cube face, then the surface must intersect the cube face also. Lorensen and Cline <ref> [LC87] </ref>, Wyvill et al. [WMW86], and Bloomenthal [Blo88] all use a variation of this method. Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. <p> The method of Wyvill et al. [WMW86] considers the cube corner values of each face. There are only seven combinations of cube values for a given face. Lorensen and Cline's <ref> [LC87] </ref> marching cubes algorithm, on the other hand, examines the 3 values of all the cube corners. This set of algorithms does not suffer from the branching problem because the entire surface is extracted in the volume.
Reference: [LCC89] <author> Wei-Chung Lin, Shiuh-Yung Chen, and Chin-Tu Chen. </author> <title> A new surface interpolation technique for reconstructing 3d objects from serial cross-sections. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 48(1) </volume> <pages> 124-143, </pages> <month> Oct </month> <year> 1989. </year>
Reference-contexts: In more acomplex cases, human interaction would be required. This may be unacceptable in some cases, such as a clinical environment, where user interaction should be minimal. Lin, Chen, and Chen <ref> [LCC89] </ref> connected two-dimensional cross sections using dynamic elastic contour interpolation, spline theory, and quadratic variation-based surface interpolation [LCC89], rather than the contour stitching methods of the above algorithms. A series of intermediate contours are formed between each of the original cross sections using elastic interpolation. <p> In more acomplex cases, human interaction would be required. This may be unacceptable in some cases, such as a clinical environment, where user interaction should be minimal. Lin, Chen, and Chen <ref> [LCC89] </ref> connected two-dimensional cross sections using dynamic elastic contour interpolation, spline theory, and quadratic variation-based surface interpolation [LCC89], rather than the contour stitching methods of the above algorithms. A series of intermediate contours are formed between each of the original cross sections using elastic interpolation. Then, contours are mapped to a surface function, to calculate initial surface values.
Reference: [Liv88] <author> Panos E. Livadas. </author> <title> A reconstruction of an unknown 3-d surface from a collection of its cross sections: An implementation. </title> <journal> International Journal of Computer Math, </journal> <volume> 26 </volume> <pages> 143-160, </pages> <year> 1988. </year>
Reference: [M + 91] <author> James V. Miller et al. </author> <title> Geometrically deformed models: A method for extracting closed geometric models from volume data. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 217-226, </pages> <month> Jul </month> <year> 1991. </year>
Reference-contexts: Note that these cube methods are appropriate only when dealing with grid data. In the case of contour data, triangulation methods will me more efficient. The third method of constructing surface geometries from volume data is geometrically deformable models (GDMs) <ref> [M + 91] </ref>. This method differs from the previous two in that it attempts to approximate, rather than interpolate the surface. The motivation behind GDMs is that a geometric approximation provides more opportunities for analyzing and visualizing the object than interpolative methods.
Reference: [MSS92] <author> David Meyers, Shelley Skinner, and Kenneth Sloan. </author> <title> Surfaces from contours. </title> <journal> ACM Transaction on Graphics, </journal> <volume> 11(3) </volume> <pages> 228-258, </pages> <month> Jul </month> <year> 1992. </year>
Reference: [TJL92] <author> Sunjay Talele, Theodore Johnson, and Panos E. Livadas. </author> <title> Surface reconstruction in parallel. </title> <booktitle> In Fourth IEEE Symposium on Parallel and Distributed Processing, </booktitle> <year> 1992. </year>
Reference: [WMW86] <author> Geoff Wyvill, Craig McPheeters, and Brian Wyvill. </author> <title> Data structures for soft objects. </title> <journal> The Visual Computer, </journal> <volume> 2 </volume> <pages> 227-234, </pages> <year> 1986. </year> <month> 23 </month>
Reference-contexts: The precise location of the surface vertex is determined by assuming the values along a cube edge linearly interpolate the cube corners. Furthermore, if the surface intersects edge (s) of a cube face, then the surface must intersect the cube face also. Lorensen and Cline [LC87], Wyvill et al. <ref> [WMW86] </ref>, and Bloomenthal [Blo88] all use a variation of this method. Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. <p> Bloomenthal [Blo88] uses an algorithmic approach in determining surface vertices, while the other two methods are table-driven. Bloomenthal's method [Blo88] also allows for more sampling around particular areas of a surface, allowing for a better surface fit in some cases. The method of Wyvill et al. <ref> [WMW86] </ref> considers the cube corner values of each face. There are only seven combinations of cube values for a given face. Lorensen and Cline's [LC87] marching cubes algorithm, on the other hand, examines the 3 values of all the cube corners.
References-found: 18

