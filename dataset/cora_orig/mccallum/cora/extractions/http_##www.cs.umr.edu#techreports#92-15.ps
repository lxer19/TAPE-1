URL: http://www.cs.umr.edu/techreports/92-15.ps
Refering-URL: http://www.cs.umr.edu/techreports/
Root-URL: 
Title: FORMAL GENERATION OF EXECUTABLE ASSERTIONS FOR APPLICATION-ORIENTED FAULT TOLERANCE  
Author: Hanan Lutfiyya, Martina Schollmeyer and Bruce McMillin 
Keyword: Index Terms Algorithms, Concurrent Systems, Fault Tolerance, Formal Methods, Pro- gram Verification.  
Address: Ontario, London, ONTARIO  Rolla, Rolla, MO 65401.  
Affiliation: Department of Computer Science at the University of Western  Department of Computer Science at the University of Missouri-  
Note: Portions of this work have appeared in the Proceedings of the 16th International COMPSAC (IEEE) and will appear in the 2nd Responsive Computer Systems Symposium (Springer-Verlag).  This work was supported in part by the National Science Foundation under Grant Number MSS-9216479, and, in part, from the Air Force Office of Scientific Research under contract number F49620-92-J-0546. Hanan Lutfiyya is with the  N6A 5B7. The work was performed when Dr. Lutfiyya was at the University of Missouri-Rolla. Martina Schollmeyer and Bruce McMillin are with the  
Date: January 28, 1992  
Pubnum: C.Sc. 92-15  
Abstract: Executable assertions embedded into a distributed computing system can provide run-time assurance by ensuring that the program state, in the actual run-time environment, is consistent with the logical stage specified in the assertions; if not, then an error has occurred and a reliable communication of this diagnostic information is provided to the system such that reconfiguration and recovery can take place. Application-oriented fault tolerance is a method that provides fault detection using executable assertions based on the natural constraints of the application. This paper focuses on giving application-oriented fault tolerance a theoretical foundation by providing a mathematical model for the generation of executable assertions which detect faults in the presence of arbitrary failures. The mathematical model of choice consists of two components: CSP and an associated axiomatic verification system. A method was developed that translates a concurrent verification proof outline into an error-detecting concurrent program. This paper shows the application of the developed method to several applications. 
Abstract-found: 1
Intro-found: 1
Reference: [ApRo81] <author> Apt, R. and Roever, W., </author> <title> ``A Proof System for Communicating Sequential Processes,'' </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 2, 3, </volume> <year> 1981, </year> <pages> 359-385. </pages>
Reference: [BaKP85] <author> Barringer, H., Kuiper, R., and Pnueli, A., </author> <title> ``A Compositional Temporal Approach to a CSP-like Language,'' </title> <booktitle> Proceedings of the IFIP Conference, The Role of Abstract Models in Information Processing, </booktitle> <publisher> Elsevier Scientific Publishers, </publisher> <month> February, </month> <year> 1985, </year> <pages> pp. 209-229. </pages>
Reference: [Batc68] <author> Batcher, K., </author> <title> ``Sorting Networks and Their Applications,'' </title> <booktitle> Proc. of the 1968 Spring Joint Computer Conference, </booktitle> <volume> Vol. 32, </volume> <publisher> AFIPS Press, </publisher> <address> Reston, VA, </address> <pages> pp. 307-314. </pages>
Reference: [BeGo82] <author> Bernstein, P. and Goodman, N., </author> <title> ``Concurrency Control in Distributed Database Systems,'' </title> <journal> Computing Surveys, </journal> <volume> 13, 2, </volume> <year> 1981, </year> <pages> pp. 185-221. </pages>
Reference: [Clin73] <author> Clint, M., </author> <title> ``Program proving: coroutines,'' </title> <journal> Acta Informatical, </journal> <volume> 2, </volume> <year> 1973, </year> <pages> pp. 50-63. </pages>
Reference: [Dijk76] <author> Dijkstra, E., </author> <title> A Discipline of Programming, 1976, </title> <publisher> Prentice-Hall, Inc. </publisher>
Reference: [EGLT76] <author> Eswan, K.P., Gray, J.N., Lorie, R.A., </author> <title> and Traiger I.L., ``The Notions of Consistency and Predicate Locks in a Database System,'' </title> <journal> Communications of the ACM, </journal> <volume> 19, 11, </volume> <year> 1976, </year> <pages> pp. 624-633. </pages>
Reference: [Hoar69] <author> Hoare, C., </author> <title> ``An Axiomatic Basis for Computer Programming,'' </title> <journal> Communications of the ACM, </journal> <volume> 12, 10, </volume> <year> 1969, </year> <pages> 576-583. </pages>
Reference: [Hoar78] <author> Hoare, C., </author> <title> ``Communicating Sequential processes,'' </title> <journal> Communications of the ACM, </journal> <volume> 21, </volume> <year> 1978, </year> <pages> 666-677. </pages>
Reference: [HuAb84] <author> Huang, K. and Abraham, J., </author> <title> ``Fault-Tolerant Algorithms and Their Application to Solving Laplace Equations,'' </title> <booktitle> Proceedings of the 1984 International Conference on Parallel Processing, </booktitle> <month> August </month> <year> 1984, </year> <pages> pp. 117-122. </pages> -- -- 
Reference: [HuAb86] <author> Hua, K. and Abraham, J., </author> <title> ``Design of Systems with Concurrent Error Detection using Software Redundancy,'' </title> <booktitle> Proceeding Fall Joint Computer Conf. </booktitle> <month> Nov. </month> <pages> 2-6, </pages> <year> 1986, </year> <pages> pp 826-835. </pages>
Reference: [HoMc91] <author> Hong, C.E. and McMillin, B.M., </author> <title> ``Fault-Tolerant Parallel Matrix Multiplication with One Iteration Fault Detection Latency,'' </title> <booktitle> Proceedings of the 15th International COMPSAC, </booktitle> <year> 1991 </year>
Reference: [KuRe86] <author> Kuhl, J.G. and Reddy S.M., </author> <title> ``Fault-Tolerance Considerations in Large, </title> <journal> MultipleProcessor Systems,'' IEEE Computer, </journal> <month> March, </month> <year> 1986, </year> <pages> pp. 56-67. </pages>
Reference: [KoSt74] <author> Kohler, W., and Steiglitz, K., </author> <title> ``Characterization and Theoretical Comparison of Branchand-Bound Algorithms for Permutation Problems,'' </title> <journal> Journal of the ACM, </journal> <volume> Vol. 21, No. 1, </volume> <year> 1974, </year> <pages> pp. 140-156. </pages>
Reference: [LaLi92] <author> Jean-Claude Laprie and Bev Littlewood, </author> <title> ``Probabilistic Assessment of Safety-Critical Software: Why and How?,'' </title> <journal> Communications of the ACM, </journal> <volume> Vol. 35, No. 2, </volume> <year> 1992, </year> <pages> pp. 13-21. </pages>
Reference: [LaMG91] <author> Larangeria, L., Malek, M., and Jenevein, J., </author> <title> ``On Tolerating Faults in Naturally Redundant Algorithms,'' </title> <booktitle> Tenth Symposium on Reliable Distributed Systems, </booktitle> <year> 1991, </year> <pages> pp. 118-127. </pages>
Reference: [LaSP82] <author> Lamport, L., Shostack, R. and Pease, M., </author> <title> ``The Byzantine General's Problem,'' </title> <journal> ACM Transaction on Programming Language Systems, </journal> <volume> Vol. 4, </volume> <month> July </month> <year> 1982, </year> <pages> pp. 38 2-401. </pages>
Reference: [LeGr81] <author> Levin, G.M and Gries, D., </author> <title> ``A Proof Technique for Communicating Sequential Process,'' </title> <journal> Acta Information, </journal> <volume> 15, </volume> <year> 1981, </year> <pages> 281-302. </pages>
Reference: [LiMc92] <author> Liu, J. and McMillin, B., </author> <title> ``A Divide and Conquer Ring Embedding Scheme on Hypercubes with Efficient Recovery Capability,'' </title> <booktitle> Proceedings of the 21st International Conference on Parallel Processing, </booktitle> <pages> pp. </pages> <month> III-38-III-45. </month>
Reference: [LuMc91] <author> Lutfiyya, H. and McMillin, B., </author> <title> ``Comparison of Three Axiomatic Proof Systems,'' </title> <institution> UMR Department of Computer Science Technical Report Number CSC 91-13, </institution> <note> (Submitted to Parallel Processing Letters) </note>
Reference: [LuSM92a] <author> Lutfiyya, H., Schollmeyer, M., and McMillin, B., </author> <title> ``Fault-Tolerant Distributed Database Lock Managers,'' </title> <institution> UMR Department of Computer Science Technical Report Number CSC 92-05. </institution>
Reference: [LuSM92b] <author> Lutfiyya, H., Schollmeyer, M., and McMillin, B., </author> <title> ``Fault-Tolerant Distributed Sort Generated from a Verification Proof Outline,'' 2nd Responsive Computer Systems Symposium, </title> <note> Springer-Verlag (to appear) pp. 39-50. </note>
Reference: [LuSM92c] <author> Lutfiyya, H., Sun, A., and McMillin, B., </author> <title> ``A Fault-Tolerant Branch and Bound Algorithm Derived from Program Verification ,'' Proceedings of the 16th International COMPSAC, </title> <month> September, </month> <year> 1992, </year> <pages> pp. 182-187. </pages> -- -- 
Reference: [MaML83] <author> Mahmood, A., McCluskey, E. J., and Lu, D. J., </author> <title> ``Concurrent Fault Detection using a Watchdog Processor and Assertions,'' </title> <booktitle> IEEE 1983 Int'l Test Conf. </booktitle> <pages> pp 622-628. </pages>
Reference: [McNi92] <author> McMillin, B. and Ni, L., </author> <title> ``Reliable Distributed Sorting Through The Applicationoriented Fault Tolerance Paradigm,'' </title> <journal> IEEE Trans. On Parallel and Distributed Computing, </journal> <volume> Vol. 3, No. 4, </volume> <month> July </month> <year> 1992, </year> <pages> pp. 411-420. </pages>
Reference: [Mili81] <author> Mili, A., </author> <title> ``Self-Checking Programs: An Axiomatization of Program Validation by Executable Assertions,'' </title> <booktitle> 11th Annual Int'l Symp. on Fault Tolerant Computing, </booktitle> <year> 1981, </year> <pages> pp 118-120. </pages>
Reference: [Mili85] <author> Mili, A., </author> <title> ``Towards a Theory of Forward Recovery,'' </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-13, no. 1, </volume> , <year> 1987, </year> <pages> pp. 23-31. </pages>
Reference: [OsKA86] <author> Osawa, G., Kawai, T., and Aiso, H., </author> <title> ``Fault Tolerant Scheme on Partial Differential Equations,'' </title> <booktitle> Proceedings of the 1986 International Conference on Parallel Processing, </booktitle> <month> August </month> <year> 1986, </year> <pages> pp. 413-416. </pages>
Reference: [Owic75] <author> Owicki, S., </author> <title> Axiomatic Proof Techniques for Parallel Programs, </title> <institution> Computer Science Dept., Cornell University, </institution> <type> PhD Thesis, </type> <year> 1975. </year>
Reference: [OwGr76] <author> Owicki, S. and Gries, D., </author> <title> ``An Axiomatic Proof Technique for Parallel Programs I,'' </title> <journal> Acta Informatica, </journal> <volume> 6, </volume> <year> 1976, </year> <pages> 319-340. </pages>
Reference: [OwLa82] <author> Owicki, S. and Lamport, L., </author> <title> ``Proving Liveness Properties of Concurrent Programs,'' </title> <journal> ACM TOPLAS, </journal> <volume> Vol. 4, No. 3, </volume> <month> July </month> <year> 1982, </year> <pages> pp. 455-495. </pages>
Reference: [PeSL80] <author> Pease, M., Shostak, R. and Lamport, L., </author> <title> ``Reaching Agreement in the presence of faults,'' </title> <journal> Journal of the ACM, </journal> <volume> Vol. 27, No. 2, </volume> <month> April </month> <year> 1980, </year> <pages> pp. 228-234. </pages>
Reference: [Pnue84] <author> Pnueli, A., </author> <title> ``In Transition from Global to Modular - Temporal Reasoning about Programs,'' Logics and Models of Concurrent Systems, edited by K. Apt, </title> <booktitle> Nato ISI Series. </booktitle> <volume> Vol. F13, </volume> <pages> pp. 123-144. </pages>
Reference: [Quin87] <author> Quinn, M., </author> <title> Designing Efficient Algorithms for Parallel Computers, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference: [Rand75] <author> Randall, B., </author> <title> ``System Structure for Software Fault Tolerance,'' </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-1, No. 2, </volume> <month> June </month> <year> 1975, </year> <pages> pp. 220-232. </pages>
Reference: [Renn84] <author> Rennels, D., </author> <title> ``Fault-Tolerant Computing-Concepts and Examples,'' </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. C-33, No. 12, </volume> <month> Dec. </month> <year> 1984, </year> <pages> pp. 1116-1129. </pages>
Reference: [Reit87] <author> Reiter, R., </author> <title> ``A Theory of Diagnosis From First Principles,'' </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 32, </volume> <year> 1987, </year> <pages> pp. 57-95. </pages>
Reference: [Roma87] <author> Roman, G., </author> <title> ``Specifying Software/Hardware Interactions in Distributed Systems,'' </title> <booktitle> Proceedings of the 9th International Conference on Software Engineering,, </booktitle> <month> March </month> <year> 1987, </year> <pages> pp. -- -- 126-139. </pages>
Reference: [ScSc84] <author> Schlichting, R., and Schneider, F., </author> <title> ``Using Message Passing For Distributed Programming: Proof Rules and Disciplines,'' </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> Vol. 6, No. 3, </volume> <month> July </month> <year> 1984, </year> <pages> pp. 402-431. </pages>
Reference: [SuMc91] <author> Sun, A. and McMillin, B., </author> <title> ``Application-Oriented Fault-Tolerant Parallel Branch&Bound,'' </title> <institution> UMR Department of Computer Science Technical Report CSC-91-014, </institution> <month> September, </month> <year> 1991. </year>
Reference: [Soun84] <author> Soundararahan, N., </author> <title> ``Axiomatic Semantics of Communicating Sequential Processes,'' </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 6, 4, </volume> <year> 1984, </year> <pages> 647-662. </pages>
Reference: [Vorn87] <author> Vorberger, O., </author> <title> ``Fault Tolerant Parallelization of Branch&Bound Algorithm,'' </title> <booktitle> The 7th Distributed Computing Symposium, </booktitle> <year> 1987, </year> <pages> pp. 194-197. </pages>
Reference: [YaCh75] <author> Yau, S. S. and Cheung R. C., </author> <title> ``Design of Self-Checking Software,'' </title> <booktitle> Proc. Int'l Conf. on Reliability Software, </booktitle> <month> April </month> <year> 1975, </year> <pages> pp 450-457. </pages>

References-found: 43

