URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR97703-S.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: Airfoil Design by an AllAtOnce Method  
Author: Ajit Shenoy Matthias Heinkenschloss Eugene M. Cliff 
Keyword: Key words Airfoil design, optimization, computational fluid dynamics, Euler equa tions, nonlinear programming, optimal design.  
Abstract: The allatonce approach is implemented to solve an optimum airfoil design problem. The airfoil design problem is formulated as a constrained optimization problem in which flow variables and design variables are viewed as independent and the coupling steady state Eu- ler equation is included as a constraint, along with geometry and other constraints. In this formulation, the optimizer computes a sequence of points which tend toward feasiblility and optimality at the same time (allatonce). This decoupling of variables typically makes the problem less nonlinear and can lead to more efficient solutions. In this paper an existing optimization algorithm is combined with an existing flow code. The problem formulation, its discretization, and the underlying solvers are described. Implementation issues are presented and numerical results are given which indicate that the cost of solving the design problem is approximately six times the cost of solving a single analysis problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. H. ABBOTT AND A. E. VON DOENHOFF, </author> <title> Theory of Wing Sections, </title> <publisher> Dover Publications, Inc., </publisher> <address> New York, </address> <year> 1959. </year>
Reference-contexts: The shape functions y 1 y 4 may be referenced from <ref> [1] </ref>. The two AIRFOIL DESIGN BY AN ALLATONCE METHOD 13 Algorithm 3.1 (ErICA) 1 Given $ i . 1.1 Generate Cgrid, including ghost cells. 1.2 Compute direction cosines and lengths for each cell face and the areas of each cell. 2 Given q n .
Reference: [2] <author> W. K. ANDERSON AND V. VENKATAKRISHNAN, </author> <title> Aerodynamic design optimization on un-structured grids with a continuous adjoint formulation, </title> <type> Tech. Rep. 979, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1997. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers <ref> [2] </ref>, [4], [18], [19], [20], [22], [23], [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution.
Reference: [3] <author> R. J. BALLING AND J. SOBIESZCZANSKI-SOBIESKI, </author> <title> Optimization of coupled systems: A critical overview of approaches, </title> <type> Tech. Rep. 94100, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1994. </year>
Reference-contexts: CLIFF relevant), then we can eliminate the flow variables q and formulate (2.1)(2.3) in the following reduced form: min b J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], [11] (also called the simultaneous analysis and design (SAND) approach <ref> [3] </ref>, [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the <p> J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], [11] (also called the simultaneous analysis and design (SAND) approach <ref> [3] </ref>, [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the relation between these two problems.
Reference: [4] <author> J. T. BETTS, W. P. HUFFMAN, AND D. P. YOUNG, </author> <title> An investigation of algorithm perfor-mance in aerodynamic design optimization, </title> <type> Tech. Rep. </type> <institution> BCSTECH94061, Boeing Computer Services, </institution> <address> P.O. Box 24346, M/S 7L-68, Seattle, WA 98124-0346, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], <ref> [4] </ref>, [18], [19], [20], [22], [23], [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. <p> In our case the design space is small n w = 4 and other approaches such as projection methods or active set methods can likely be used with similar performance to handle the inequality constraints (5.3). However, wing designs in industrial settings may involve up to 500 design parameters <ref> [4] </ref>. In this case an interior point approach promises to be superior. AIRFOIL DESIGN BY AN ALLATONCE METHOD 19 6 Numerical Implementation 6.1 Handling the Inequality Constraints and Reformulation of the Opti <p>- mization Problem The current version of TRICE only solves problems of the form (5.1)(5.3).
Reference: [5] <author> J. BORGGAARD AND J. BURNS, </author> <title> A PDE sensitivity equation method for optimal aerodynamic design, </title> <journal> Journal of Computational Physics, </journal> <note> (To appear). </note>
Reference-contexts: Several issues have to be kept in mind. In the optimize thendiscretize approach the derivatives after discretization are usually not the derivatives of the discretized functions. Therefore optimization algorithms have to cope with inexact derivative information. See e.g., <ref> [5] </ref>, [33]. The discretizethenoptimize approach often neglects the fact that the infinite dimensional problem structure still influences the finite dimensional problem.
Reference: [6] <author> E. M. CLIFF, M. HEINKENSCHLOSS, AND A. SHENOY, </author> <title> An optimal control problem for flows with discontinuities, </title> <journal> Journal of Optimization Theory and Applications, </journal> <note> 94 (1997). To appear in August 1997. </note>
Reference-contexts: We give a more detailed description below. For general airfoil design problems comprehensive, rigorous treatments of these issues are still missing. In the case of a one-dimensional duct design problem, which is related to the airfoil design problem, such a comprehensive, rigorous treatment can be found in <ref> [6] </ref>. It is shown in [6] that an understanding of these issues can be used to improve robustness and efficiency of the optimization code. These improvements are based on the understanding of the problem, of its discretization, and of the optimization method. <p> For general airfoil design problems comprehensive, rigorous treatments of these issues are still missing. In the case of a one-dimensional duct design problem, which is related to the airfoil design problem, such a comprehensive, rigorous treatment can be found in <ref> [6] </ref>. It is shown in [6] that an understanding of these issues can be used to improve robustness and efficiency of the optimization code. These improvements are based on the understanding of the problem, of its discretization, and of the optimization method. <p> The discretizethenoptimize approach often neglects the fact that the infinite dimensional problem structure still influences the finite dimensional problem. If this influence is not incorporated properly, then the optimization problem typically becomes artificially illconditioned and one observes a severe degradation in performance and robustness of the optimizer, see <ref> [6] </ref>, [28]. Derivatives of constraint functions and solutions q to the state equations are used in the formulation of optimality conditions and in efficient optimizers. See, for example, gradient computations using sensitivities or adjoint equations. <p> As we have noted before, for a one-dimensional duct design problem, which is related to the airfoil design problem, the above issues have been rigorously discussed in <ref> [6] </ref>. For general airfoil design problems these issues are subject of current research. In our approach to the airfoil design problem we parameterize the airfoil using linear combinations of existing airfoils. <p> Among the discretization schemes available in that package, we use the schemes with better smoothness properties. We use the discretize- then-optimize approach. Since we have a low dimensional design space and a rather simple grid generation scheme, we believe this is sensible. However, given our experiences in <ref> [6] </ref>, we believe this approach has to be rethought if more complex discretization schemes are used. More details on the discretization schemes are provided in Sections 3 and 6. 8 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. <p> The infinite dimensional problem, its discretization, and the optimization approach have to be analyzed jointly to derive robust and efficient solution methods. In a simplified model problem the benefits of such an analysis were demonstrated in <ref> [6] </ref> and were shown to lead to 1015% reductions in optimization iterations. Provisions for the inclusion of infinite dimensional problem structure into the optimizer have been made, see [15].
Reference: [7] <author> E. J. CRAMER, J. E. DENNIS, JR., P. D. FRANK, R. M. LEWIS, AND G. R. SHUBIN, </author> <title> On alternative problem formulations for multidisciplinary design optimization, </title> <journal> SIAM J. Optim., </journal> <volume> 4 (1994), </volume> <pages> pp. 754776. </pages>
Reference-contexts: R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF relevant), then we can eliminate the flow variables q and formulate (2.1)(2.3) in the following reduced form: min b J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach <ref> [7] </ref>, [11] (also called the simultaneous analysis and design (SAND) approach [3], [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the <p> allatonce (AAO) approach <ref> [7] </ref>, [11] (also called the simultaneous analysis and design (SAND) approach [3], [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the relation between these two problems. These results are known and can be found in a similar form, e.g., in [9], [13]. Let be the Lagrangian corresponding to (2.1)(2.3). <p> The second order necessary [sufficient] optimality conditions are given by (2.8) and s w H (q; w; ; ) s q [&gt;] 1 Since we only have one discipline R (q; w) = 0 there is no distinction between the multidiscipline feasible and individual discipline feasible formulation in <ref> [7] </ref>. AIRFOIL DESIGN BY AN ALLATONCE METHOD 5 for all s q ; s w satisfying R q (q; w)s q + R w (q; w)s w = 0; (2.11) Unless noted otherwise, G (q; w) would usually refer to the set of active constraints, G I (q; w). <p> Finally, the Jacobian b G w (w) is equal to the matrix on the left hand side of (2.15) at q = q (w). Comparisons between the allatonce (SAND) approach and the blackbox (NAND, discipline feasible) approach can be found in, e.g., <ref> [7] </ref>, [11], [26]. The allatonce approach decouples state and design variables. An optimizer for (2.1)(2.3) can use this decoupling and is allowed to violate constraints during the iteration. This can result in substantial gains in performance.
Reference: [8] <author> A. DADONE AND B. GROSSMAN, </author> <title> Surface Boundary Conditions for the Numerical Solution of the Euler Equations, </title> <journal> AIAA Journal, </journal> <volume> 32 (1994), </volume> <pages> pp. </pages> <month> 285293. </month> <title> AIRFOIL DESIGN BY AN ALLATONCE METHOD 31 </title>
Reference-contexts: We use the surface boundary conditions described in [16, Ch. 19] and <ref> [8] </ref> (flow tangency stipulation and requirements that the normal momentum be zero and entropy be conserved, curvature AIRFOIL DESIGN BY AN ALLATONCE METHOD 11 corrections described in [8] are neglected), along with the far-field boundary conditions proposed in [30]. These boundary conditions involve the creation of ghost cells. <p> We use the surface boundary conditions described in [16, Ch. 19] and <ref> [8] </ref> (flow tangency stipulation and requirements that the normal momentum be zero and entropy be conserved, curvature AIRFOIL DESIGN BY AN ALLATONCE METHOD 11 corrections described in [8] are neglected), along with the far-field boundary conditions proposed in [30]. These boundary conditions involve the creation of ghost cells. The steady state solution corresponding to the semi-discrete equations (3.3) is computed using a pseudotime marching scheme applied to (3.3).
Reference: [9] <author> J. E. DENNIS, M. HEINKENSCHLOSS, AND L. N. VICENTE, </author> <title> Trustregion interiorpoint algorithms for a class of nonlinear programming problems, </title> <type> Tech. Rep. </type> <institution> TR9445, Department of Computational and Applied Mathematics, Rice University, </institution> <address> Houston, TX 770051892, </address> <year> 1994. </year>
Reference-contexts: These results are known and can be found in a similar form, e.g., in <ref> [9] </ref>, [13]. Let be the Lagrangian corresponding to (2.1)(2.3). <p> If G does not depend on q and if the rows of G I (w) are linear independent, which is, e.g., the case if G (w) = w, then our assumption that R q (q; w) is invertible implies that LICQ is satisfied <ref> [9] </ref>, [13]. <p> In particular if n g is smaller than n w the adjoint equation based approach seems more attractive than the sensitivity equation approach. It is known, see, e.g., <ref> [9] </ref>, [13], that derivatives for the reduced problem (2.5), (2.6) are related to the reduced quantities of the problem (2.1)(2.3). <p> We use the allatonce formulation (2.1)(2.3). For our particular design problem the constraints G are simple constraints on the design variables. The exact problem formulation will be introduced in the subsequent sections. We use an SQP method from the class of methods described in <ref> [9] </ref>, [15] for the solution of the allatonce formulation. This SQP method uses an interior point strategy to handle the inequality constraints and employs a trustregion strategy for globalization of convergence and to enhance robustness. See also Section 5. <p> See also Section 5. If only equality constraints are present, then the Newton based methods in [34] are related to the SQP methods in <ref> [9] </ref>, [15]. Be- sides the capability of handling inequalities on the designs, other main differences are that the SQP methods in [9], [15] use a trustregion globalization and, in addition to exact second derivatives, provide quasiNewton approximations to the full and reduced Hessian of the Lagrangian. <p> See also Section 5. If only equality constraints are present, then the Newton based methods in [34] are related to the SQP methods in <ref> [9] </ref>, [15]. Be- sides the capability of handling inequalities on the designs, other main differences are that the SQP methods in [9], [15] use a trustregion globalization and, in addition to exact second derivatives, provide quasiNewton approximations to the full and reduced Hessian of the Lagrangian. First and second order convergence results are proven in [9] and the influence of inexact derivatives is analyzed in [14]. <p> capability of handling inequalities on the designs, other main differences are that the SQP methods in <ref> [9] </ref>, [15] use a trustregion globalization and, in addition to exact second derivatives, provide quasiNewton approximations to the full and reduced Hessian of the Lagrangian. First and second order convergence results are proven in [9] and the influence of inexact derivatives is analyzed in [14]. For the formulation of the airfoil design problem as an optimization problem, several other issues are of great importance. These are the issues of discretization, differentiability, and unique solvability of state equations and linearized state equations. <p> while the above approximation of the trailing edge angle is fairly crude, it does yield a constraint that is easy to compute and achieves the desired effect. 5 Optimization Algorithm The optimization algorithm used for our computation is a version of the trust-region interior-point SQP methods called TRICE developed in <ref> [9] </ref>, [14], [15] for solving min J (q; w); (5.1) w min w w max : (5.3) 16 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF Clearly, (5.1)(5.3) is a particular case of (2.1)(2.3). In this section we give a brief description of the algorithm. <p> In this section we give a brief description of the algorithm. We leave out many technical details and focus on how the algorithm interfaces with the flow solver. For more details on the algorithm and its convergence we refer to the papers <ref> [9] </ref>, [14]. An important aspect of the TRICE implementation [15] is that application specific subtasks in the optimization are separated from the optimizer TRICE and can be provided by the user. <p> IR n w fin w with diagonal elements = &gt; &lt; (w max w) 2 &lt; 0; 1 i if T (q; w) T rJ (q; w) i (5.4) then the first order optimality conditions (2.8) can be equivalently written as R (q; w) = 0; (5.5) The algorithms in <ref> [9] </ref>, [14], [15] generate a sequence of iterates (q k ; w k ), where w k is strictly feasible with respect to the bounds, i.e., w min &lt; w k &lt; w max (hence the term interiorpoint method). <p> The cost of computing the `reduced' gradient T T k (H k s n dominates the cost of solving (5.12). The main steps of the trustregion interiorpoint SQP scheme are outlined in algorithm 5.1. More general versions of these algorithms are possible. See <ref> [9] </ref>, [14], [15]. 18 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. <p> See (2.13). Computations involving the solution of one linearized state equation and one adjoint equation may be needed in step 2.8. This depends on the update used. This and other algorithms are implemented in [15]. Global and local convergence results are proven in <ref> [9] </ref>. The influence of inexact derivatives is analyzed in [14]. The latter aspect is important in our application since we use a pseudotime marching (iterative) scheme to compute approximate solutions to linearized state equations and to the adjoint equations.
Reference: [10] <author> A. EBERLE, A. RIZZI, AND E. H. HIRSCHEL, </author> <title> Numerical Solutions of the Euler Equations for Steady Flow Problems, </title> <booktitle> vol. 34 of Notes on Numerical Fluid Mechanics, </booktitle> <publisher> Vieweg, Wiesbaden, </publisher> <year> 1992. </year>
Reference-contexts: Here, Q represents the conserved variables with q = [ u v p] T denoting the primitive variables, and, F and G represent the inviscid fluxes. The problem domain is denoted by and ffi represents the boundary of the domain. For a detailed treatment of the Euler equations refer <ref> [10] </ref>. 3.1 Discretization of the Euler Equations For a given airfoil configuration, the shape of which is represented as a function of the design variables w, the analysis problem corresponds to the solution of the Euler equations of flow.
Reference: [11] <author> P. D. FRANK AND G. Y. SHUBIN, </author> <title> A comparison of optimizationbased approaches for a model computational aerodynamics design problem, </title> <journal> Journal of Computational Physics, </journal> <volume> 98 (1992), </volume> <pages> pp. 7489. </pages>
Reference-contexts: R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF relevant), then we can eliminate the flow variables q and formulate (2.1)(2.3) in the following reduced form: min b J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], <ref> [11] </ref> (also called the simultaneous analysis and design (SAND) approach [3], [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, <p> formulate (2.1)(2.3) in the following reduced form: min b J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], <ref> [11] </ref> (also called the simultaneous analysis and design (SAND) approach [3], [26]). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the relation between these two problems. <p> Finally, the Jacobian b G w (w) is equal to the matrix on the left hand side of (2.15) at q = q (w). Comparisons between the allatonce (SAND) approach and the blackbox (NAND, discipline feasible) approach can be found in, e.g., [7], <ref> [11] </ref>, [26]. The allatonce approach decouples state and design variables. An optimizer for (2.1)(2.3) can use this decoupling and is allowed to violate constraints during the iteration. This can result in substantial gains in performance. <p> An optimizer for (2.1)(2.3) can use this decoupling and is allowed to violate constraints during the iteration. This can result in substantial gains in performance. Significant reductions in solution times for problems related to the one considered in this paper are reported in <ref> [11] </ref>, [12]. However, the optimizer must achieve feasibility and optimality at the same time. This requires carefully designed optimization codes to maintain robustness. In the 6 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF computational experiments in [11] the (particular) implementation of the blackbox formulation always performed more robustly than <p> problems related to the one considered in this paper are reported in <ref> [11] </ref>, [12]. However, the optimizer must achieve feasibility and optimality at the same time. This requires carefully designed optimization codes to maintain robustness. In the 6 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF computational experiments in [11] the (particular) implementation of the blackbox formulation always performed more robustly than the implementation of the allatonce approach for a one dimensional duct design problem.
Reference: [12] <author> O. GHATTAS AND J.-H. BARK, </author> <title> Optimal control of two and threedimensional Navier Stokes flow, </title> <journal> Journal of Computational Physics, </journal> <note> (1997). To appear. </note>
Reference-contexts: An optimizer for (2.1)(2.3) can use this decoupling and is allowed to violate constraints during the iteration. This can result in substantial gains in performance. Significant reductions in solution times for problems related to the one considered in this paper are reported in [11], <ref> [12] </ref>. However, the optimizer must achieve feasibility and optimality at the same time. This requires carefully designed optimization codes to maintain robustness. In the 6 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M.
Reference: [13] <author> M. HEINKENSCHLOSS, </author> <title> Projected sequential quadratic programming methods, </title> <journal> SIAM J. Optimization, </journal> <volume> 6 (1996), </volume> <pages> pp. 373417. </pages>
Reference-contexts: These results are known and can be found in a similar form, e.g., in [9], <ref> [13] </ref>. Let be the Lagrangian corresponding to (2.1)(2.3). <p> If G does not depend on q and if the rows of G I (w) are linear independent, which is, e.g., the case if G (w) = w, then our assumption that R q (q; w) is invertible implies that LICQ is satisfied [9], <ref> [13] </ref>. The second order necessary [sufficient] optimality conditions are given by (2.8) and s w H (q; w; ; ) s q [&gt;] 1 Since we only have one discipline R (q; w) = 0 there is no distinction between the multidiscipline feasible and individual discipline feasible formulation in [7]. <p> In particular if n g is smaller than n w the adjoint equation based approach seems more attractive than the sensitivity equation approach. It is known, see, e.g., [9], <ref> [13] </ref>, that derivatives for the reduced problem (2.5), (2.6) are related to the reduced quantities of the problem (2.1)(2.3).
Reference: [14] <author> M. HEINKENSCHLOSS AND L. N. VICENTE, </author> <title> Analysis of inexact trustregion interiorpoint SQP algorithms, </title> <type> Tech. Rep. </type> <institution> TR9518, Department of Computational and Applied Mathematics, Rice University, </institution> <address> Houston, TX 770051892, </address> <year> 1995. </year> <title> [15] , TRICE: A package of trustregion interiorpoint algorithms for the solution of optimal control and engineering design problems. User's guide, </title> <type> tech. rep., </type> <institution> Department of Computational and Applied Mathematics, Rice University, </institution> <address> Houston, TX 770051892, </address> <year> 1996. </year> <note> Available electronically from the URL http://www.caam.rice.edu/~trice. </note>
Reference-contexts: First and second order convergence results are proven in [9] and the influence of inexact derivatives is analyzed in <ref> [14] </ref>. For the formulation of the airfoil design problem as an optimization problem, several other issues are of great importance. These are the issues of discretization, differentiability, and unique solvability of state equations and linearized state equations. We give a more detailed description below. <p> the above approximation of the trailing edge angle is fairly crude, it does yield a constraint that is easy to compute and achieves the desired effect. 5 Optimization Algorithm The optimization algorithm used for our computation is a version of the trust-region interior-point SQP methods called TRICE developed in [9], <ref> [14] </ref>, [15] for solving min J (q; w); (5.1) w min w w max : (5.3) 16 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF Clearly, (5.1)(5.3) is a particular case of (2.1)(2.3). In this section we give a brief description of the algorithm. <p> In this section we give a brief description of the algorithm. We leave out many technical details and focus on how the algorithm interfaces with the flow solver. For more details on the algorithm and its convergence we refer to the papers [9], <ref> [14] </ref>. An important aspect of the TRICE implementation [15] is that application specific subtasks in the optimization are separated from the optimizer TRICE and can be provided by the user. <p> n w fin w with diagonal elements = &gt; &lt; (w max w) 2 &lt; 0; 1 i if T (q; w) T rJ (q; w) i (5.4) then the first order optimality conditions (2.8) can be equivalently written as R (q; w) = 0; (5.5) The algorithms in [9], <ref> [14] </ref>, [15] generate a sequence of iterates (q k ; w k ), where w k is strictly feasible with respect to the bounds, i.e., w min &lt; w k &lt; w max (hence the term interiorpoint method). <p> The cost of computing the `reduced' gradient T T k (H k s n dominates the cost of solving (5.12). The main steps of the trustregion interiorpoint SQP scheme are outlined in algorithm 5.1. More general versions of these algorithms are possible. See [9], <ref> [14] </ref>, [15]. 18 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. <p> This depends on the update used. This and other algorithms are implemented in [15]. Global and local convergence results are proven in [9]. The influence of inexact derivatives is analyzed in <ref> [14] </ref>. The latter aspect is important in our application since we use a pseudotime marching (iterative) scheme to compute approximate solutions to linearized state equations and to the adjoint equations. Moreover, additional approximations, outlined in Section 3, are applied in these computations as well.
Reference: [16] <author> C. HIRSCH, </author> <title> Numerical Computation of Internal and External Flows, vol. 2: Computational Methods for Inviscid and Viscous Flows, </title> <publisher> John Wiley & Sons, </publisher> <address> West Sussex, </address> <year> 1991. </year> <title> [17] , Numerical Computation of Internal and External Flows, vol. 1: Fundamentals of Numerical Discretization, </title> <publisher> John Wiley & Sons, </publisher> <address> West Sussex, </address> <year> 1991. </year>
Reference-contexts: While other discretization schemes are available in ErICA, we selected these because of their better smoothness properties. See the discussion at the end of Section 2. A pseudotime marching scheme is used to compute solution to the steady state Euler equations. We use the boundary conditions in <ref> [16, Ch. 19] </ref> on the airfoil surface and the far-field boundary conditions proposed in [30]. We describe the main features of the flow solver which are needed in the subsequent discussion. For more details we refer to [29]. <p> We use the surface boundary conditions described in <ref> [16, Ch. 19] </ref> and [8] (flow tangency stipulation and requirements that the normal momentum be zero and entropy be conserved, curvature AIRFOIL DESIGN BY AN ALLATONCE METHOD 11 corrections described in [8] are neglected), along with the far-field boundary conditions proposed in [30]. <p> Thus, each subproblem in (3.11) requires a block tridiagonal matrix inversion, which involves a block LU factorization and a block matrix solve; the latter consists of forward and backward substitutions. For more details about the scheme, we refer to Hirsch <ref> [17, 16] </ref> or Shenoy [29]. An outline of the ErICA algorithm for the solution of the governing Euler flow equations, R (q; w) = 0 for given w, is given in Algorithm 3.1. 3.2 Airfoil Shape Parameterization We use an airfoil shape parameterization, formulated in [31].
Reference: [18] <author> A. IOLLO, G. KURUVILA, AND S. TA'ASAN, </author> <title> Pseudotime method for optimal shape de-sign using the Euler equations, </title> <type> Tech. Rep. 9559, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], <ref> [18] </ref>, [19], [20], [22], [23], [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. <p> These are only required to be satisfied at the solution. This makes the optimization problem less nonlinear and often results in fewer iterations. For example, Iollo et al. <ref> [18] </ref> report that their pseudo-time stepping implementation of the allatonce approach requires only three to four times as many iterations to solve the design problem as compared to the effort required for the solution of a single analysis problem. Our results indicate a factor of five or six. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], [20], [23], [27], [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in <ref> [18] </ref>, [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2). In [18] the optimality system is solved by applying a few pseudotime steps to the Euler equation and the adjoint equation to improve state and <p> For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in <ref> [18] </ref>, [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2). In [18] the optimality system is solved by applying a few pseudotime steps to the Euler equation and the adjoint equation to improve state and costate estimates and a gradientlike step to update the design variables.
Reference: [19] <author> A. IOLLO AND M. D. SALAS, </author> <title> Optimum transonic airfoils based on the Euler equations, </title> <type> Tech. Rep. 9676, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1996. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], <ref> [19] </ref>, [20], [22], [23], [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant <ref> [19] </ref>, [20], [23], [27], [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2).
Reference: [20] <author> A. IOLLO, M. D. SALAS, AND S. TA'ASAN, </author> <title> Shape optimization governed by the Euler equations using an adjoint method, </title> <type> Tech. Rep. 9378, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1993. </year> <note> 32 A. </note> <author> R. SHENOY, M. HEINKENSCHLOSS, AND E. M. </author> <note> CLIFF </note>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], <ref> [20] </ref>, [22], [23], [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], <ref> [20] </ref>, [23], [27], [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2).
Reference: [21] <author> A. JAMESON, </author> <title> Airfoils admitting non-unique solutions of the Euler equations, </title> <booktitle> in Proceedings of the AIAA 22nd Fluid Dynamics Plasmadynamics and Lasers Conference, AIAA Paper 91-1625, </booktitle> <address> Honolulu, HI, </address> <month> June 2426 </month> <year> 1991. </year> <title> [22] , Optimum aerodynamic design using CFD and control theory, </title> <booktitle> in Proceedings of the AIAA 12th Computational Fluid Dynamics Conference, AIAA Paper 95-1729, </booktitle> <address> San Diego, CA, </address> <month> June </month> <year> 1922 1995. </year>
Reference-contexts: If R (q; w) = 0 represents the (discretized) Euler equations, this assumption seems to be rather strong in view of the non-uniqueness result presented in <ref> [21] </ref> for discretized Euler equations. <p> The third group of reasons for difficulties in the solution process is somewhat related to the first one and concerns the airfoil design problem and its solution. Jameson <ref> [21] </ref> has shown the existence of cases where nonunique solutions of the discretized Euler equations can be obtained for certain airfoils. While the allatonce approach never requires the solution of the Euler equation, our implementation uses the solution to the linearized equations and adjoint equations.
Reference: [23] <author> A. JAMESON AND J. REUTHER, </author> <title> Control theory based airfoil design using the Euler equa-tions, </title> <booktitle> in Proceedings of the AIAA/USAF/NASA/ISSMO 5th Symposium on Multidisciplinary Analysis & Optimization, AIAA Paper 944272, </booktitle> <address> Panama City Beach, FL, </address> <month> September 79 </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], [20], [22], <ref> [23] </ref>, [26], [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. Most of the recent approaches, in fact all of the references above, combine optimization and optimal control techniques with computational fluid dynamics. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], [20], <ref> [23] </ref>, [27], [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2).
Reference: [24] <author> L. KANTOROVICH AND G. AKILOV, </author> <title> Functional Analysis in Normed Spaces, </title> <publisher> Pergamon Press, </publisher> <address> New York, </address> <year> 1964. </year>
Reference-contexts: In addition to the differentiability assumption, we make the assumption that R q (q; w) is invertible at all points (q; w) under consideration. Under the assumption of the implicit function theorem (see, e.g., <ref> [24] </ref>), the constraint (2.2) locally defines a function q : IR n w ! IR n q as the solution of R (q (w); w) = 0: (2.4) If the equation (2.2) has a unique solution q (w) for all w 2 IR n w under consideration (typically, (2.3) represents an
Reference: [25] <author> R. P. NARDUCCI, </author> <title> Selected Optimization Procedures for CFD-Based Shape Design involv-ing Shock Waves or Computational Noise, </title> <type> PhD thesis, </type> <institution> Aerospace and Ocean Engineering Department, Virgina Tech, Blacksburg, Virginia, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: The flow is simulated numerically using the solver ErICA (EuleR Inviscid Code for Aerodynamics) which was developed by Narducci <ref> [25] </ref>. Computational simulations were performed on a C-type grid, which is wrapped around the airfoil. We only sketch the grid generation to fix some notation. For the omitted details we refer to [29, Sec. 4.2.2]. <p> However, in a first attempt to apply the allatonce methodology to airfoil design, we preferred this simple grid because of the relative ease of generating the grid and because of its guaranteed smooth dependence on the design parameters (airfoil). Given the grid, the ErICA code <ref> [25] </ref> is used for the solution of the steady state Euler equations. 10 A. R. SHENOY, M. HEINKENSCHLOSS, AND E. M. CLIFF In our version of ErICA a finite volume discretization using an upwind scheme with Van Leer Flux Vector Splitting is applied to compute the residuals.
Reference: [26] <author> P. A. NEWMAN, G. J.-W. HOU, AND A. C. TAYLOR, III, </author> <title> Observations regarding use of advanced analysis, sensitivity analysis, and design codes in CFD, </title> <type> Tech. Rep. 9616, </type> <institution> ICASE, NASA Langley Research Center, </institution> <address> Hampton VA 236810001, </address> <year> 1996. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], [20], [22], [23], <ref> [26] </ref>, [27], [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. Most of the recent approaches, in fact all of the references above, combine optimization and optimal control techniques with computational fluid dynamics. <p> CLIFF relevant), then we can eliminate the flow variables q and formulate (2.1)(2.3) in the following reduced form: min b J (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], [11] (also called the simultaneous analysis and design (SAND) approach [3], <ref> [26] </ref>). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the relation <p> (w) = J (q (w); w); (2.5) The optimization formulation (2.1)(2.3) corresponds to the allatonce (AAO) approach [7], [11] (also called the simultaneous analysis and design (SAND) approach [3], <ref> [26] </ref>). The optimization formulation (2.5), (2.6) corresponds to the blackbox approach [11] (also called the nested analysis and design (NAND) [3], [26]) and it corresponds to the multidiscipline feasible and individual discipline feasible approach in [7]. 1 In the following, we present optimality conditions for (2.1)(2.3) and we discuss the relation between these two problems. These results are known and can be found in a similar form, e.g., in [9], [13]. <p> Finally, the Jacobian b G w (w) is equal to the matrix on the left hand side of (2.15) at q = q (w). Comparisons between the allatonce (SAND) approach and the blackbox (NAND, discipline feasible) approach can be found in, e.g., [7], [11], <ref> [26] </ref>. The allatonce approach decouples state and design variables. An optimizer for (2.1)(2.3) can use this decoupling and is allowed to violate constraints during the iteration. This can result in substantial gains in performance.
Reference: [27] <author> J. REUTHER, A. JAMESON, J. FARMER, L. MARTINELLI, AND D. SAUNDERS, </author> <title> Aerodynamic shape optimization of complex aircraft configurations via an adjoint formulation, </title> <booktitle> in Proceedings of the AIAA 34th Aerospace Sciences Meeting and Exhibit, AIAA Paper 96 0094, </booktitle> <address> Reno, NV, </address> <month> January 1518 </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], [20], [22], [23], [26], <ref> [27] </ref>, [33], [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. Most of the recent approaches, in fact all of the references above, combine optimization and optimal control techniques with computational fluid dynamics. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], [20], [23], <ref> [27] </ref>, [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2).
Reference: [28] <author> A. SHENOY, E. M. CLIFF, AND M. HEINKENSCHLOSS, </author> <title> Thermalfluid control via finite dimensional approximations, </title> <booktitle> in Proceedings of the AIAA 31st Thermophysics Conference, AIAA Paper 961910, </booktitle> <address> New Orleans, LA, </address> <month> June 1820 </month> <year> 1996. </year>
Reference-contexts: The discretizethenoptimize approach often neglects the fact that the infinite dimensional problem structure still influences the finite dimensional problem. If this influence is not incorporated properly, then the optimization problem typically becomes artificially illconditioned and one observes a severe degradation in performance and robustness of the optimizer, see [6], <ref> [28] </ref>. Derivatives of constraint functions and solutions q to the state equations are used in the formulation of optimality conditions and in efficient optimizers. See, for example, gradient computations using sensitivities or adjoint equations.
Reference: [29] <author> A. R. SHENOY, </author> <title> Optimization Techniques Exploiting Problem Structure: Applications to Aerodynamic Design, </title> <type> PhD thesis, </type> <institution> Aerospace and Ocean Engineering Department, Virgina Tech, Blacksburg, Virginia, </institution> <month> April </month> <year> 1997. </year>
Reference-contexts: Computational simulations were performed on a C-type grid, which is wrapped around the airfoil. We only sketch the grid generation to fix some notation. For the omitted details we refer to <ref> [29, Sec. 4.2.2] </ref>. The grid is generated algebraically, by the following procedure: We first distribute points on bottom boundary, corresponding to the airfoil surface and the trailing edge wake, and on the top boundary of the computational grid, corresponding to the far-field boundary. <p> We use the boundary conditions in [16, Ch. 19] on the airfoil surface and the far-field boundary conditions proposed in [30]. We describe the main features of the flow solver which are needed in the subsequent discussion. For more details we refer to <ref> [29] </ref>. As mentioned above, we use a cell-centered, finite volume formulation to rewrite the governing equations (3.1). <p> Thus, each subproblem in (3.11) requires a block tridiagonal matrix inversion, which involves a block LU factorization and a block matrix solve; the latter consists of forward and backward substitutions. For more details about the scheme, we refer to Hirsch [17, 16] or Shenoy <ref> [29] </ref>. An outline of the ErICA algorithm for the solution of the governing Euler flow equations, R (q; w) = 0 for given w, is given in Algorithm 3.1. 3.2 Airfoil Shape Parameterization We use an airfoil shape parameterization, formulated in [31]. See also [32, Sec. 10].
Reference: [30] <author> J. L. THOMAS AND M. D. SALAS, </author> <title> Farfield boundary conditions for transonic lifting solu-tions to the Euler equations, </title> <journal> AIAA Journal, </journal> <volume> 24 (1986), </volume> <pages> pp. 10741080. </pages>
Reference-contexts: See the discussion at the end of Section 2. A pseudotime marching scheme is used to compute solution to the steady state Euler equations. We use the boundary conditions in [16, Ch. 19] on the airfoil surface and the far-field boundary conditions proposed in <ref> [30] </ref>. We describe the main features of the flow solver which are needed in the subsequent discussion. For more details we refer to [29]. As mentioned above, we use a cell-centered, finite volume formulation to rewrite the governing equations (3.1). <p> We use the surface boundary conditions described in [16, Ch. 19] and [8] (flow tangency stipulation and requirements that the normal momentum be zero and entropy be conserved, curvature AIRFOIL DESIGN BY AN ALLATONCE METHOD 11 corrections described in [8] are neglected), along with the far-field boundary conditions proposed in <ref> [30] </ref>. These boundary conditions involve the creation of ghost cells. The steady state solution corresponding to the semi-discrete equations (3.3) is computed using a pseudotime marching scheme applied to (3.3).
Reference: [31] <author> G. N. VANDERPLAATS, </author> <title> Approximation Concepts for Numerical Airfoil Optimization, </title> <type> NASA TP 1370, </type> <institution> NASA Ames Research Center, </institution> <year> 1979. </year>
Reference-contexts: An outline of the ErICA algorithm for the solution of the governing Euler flow equations, R (q; w) = 0 for given w, is given in Algorithm 3.1. 3.2 Airfoil Shape Parameterization We use an airfoil shape parameterization, formulated in <ref> [31] </ref>. See also [32, Sec. 10]. The airfoil geometry is represented as the weighted combination of six shape functions y (x=c) = i=1 Four of the shape functions are pre-existing airfoils, namely, NACA 2412, NACA 64 1 -412, NACA 65 2 -415 and NACA 64 2 A215.
Reference: [32] <author> G. N. VANDERPLAATS, </author> <title> Numerical Optimization Techniques for Engineering Design with Applications, McGraw Hill Series in Mechanical Engineering, </title> <publisher> McGraw Hill, </publisher> <address> New York, St. Louis, San Francisco, </address> <year> 1984. </year> <title> AIRFOIL DESIGN BY AN ALLATONCE METHOD 33 </title>
Reference-contexts: For general airfoil design problems these issues are subject of current research. In our approach to the airfoil design problem we parameterize the airfoil using linear combinations of existing airfoils. This can be viewed as a reduced basis approach (see e.g., <ref> [32, Sec.7.3] </ref>) leading to a low dimensional (n w = 4) design space. Our grid generation scheme leads to grids which depend smoothly on the design parameters. Our application programs are based on the package ErICA for the simulation of flows over airfoils governed by the Euler equations. <p> An outline of the ErICA algorithm for the solution of the governing Euler flow equations, R (q; w) = 0 for given w, is given in Algorithm 3.1. 3.2 Airfoil Shape Parameterization We use an airfoil shape parameterization, formulated in [31]. See also <ref> [32, Sec. 10] </ref>. The airfoil geometry is represented as the weighted combination of six shape functions y (x=c) = i=1 Four of the shape functions are pre-existing airfoils, namely, NACA 2412, NACA 64 1 -412, NACA 65 2 -415 and NACA 64 2 A215.
Reference: [33] <author> D. P. YOUNG, W. P. HUFFMAN, M. B. BIETERMAN, R. G. MELVIN, F. T. JOHNSON, C. L. HILMES, AND A. R. DUSTO, </author> <title> Issues in design optimization methodology, </title> <type> Tech. Rep. BCSTECH94007 Rev. 1, </type> <institution> Boeing Computer Services, </institution> <address> P.O. Box 24346, M/S 7L-68, Seattle, WA 98124-0346, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], [20], [22], [23], [26], [27], <ref> [33] </ref>, [34]. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. Most of the recent approaches, in fact all of the references above, combine optimization and optimal control techniques with computational fluid dynamics. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], [20], [23], [27], <ref> [33] </ref>. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], [34]. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2). <p> Several issues have to be kept in mind. In the optimize thendiscretize approach the derivatives after discretization are usually not the derivatives of the discretized functions. Therefore optimization algorithms have to cope with inexact derivative information. See e.g., [5], <ref> [33] </ref>. The discretizethenoptimize approach often neglects the fact that the infinite dimensional problem structure still influences the finite dimensional problem.
Reference: [34] <author> D. P. YOUNG AND D. E. KEYES, </author> <title> Newton's method and design optimization, </title> <type> Tech. Rep. </type> <institution> ISSTECH96011, Boeing Information and Support Services, </institution> <address> P.O. Box 24346, M/S 7L-68, Seattle, WA 98124-0346, </address> <year> 1996. </year>
Reference-contexts: 1 Introduction Optimum airfoil design is an active area of research. See, e.g., the recent papers [2], [4], [18], [19], [20], [22], [23], [26], [27], [33], <ref> [34] </ref>. Abstractly, the optimum airfoil design problem can be formulated as a constrained optimization problem, and many techniques have been applied to its solution. Most of the recent approaches, in fact all of the references above, combine optimization and optimal control techniques with computational fluid dynamics. <p> In the context of airfoil design problems both formulations (2.1)(2.3) and (2.5), (2.6) have been used, however, currently the blackbox formulation (2.5), (2.6) seems to be dominant [19], [20], [23], [27], [33]. For airfoil design problems the allatonce formulation (2.1)(2.3) is considered in [18], <ref> [34] </ref>. In both cases only the equality constrained problem (2.1), (2.2) is considered. The optimization methods are derived from the optimality system for (2.1), (2.2). <p> In [18] the optimality system is solved by applying a few pseudotime steps to the Euler equation and the adjoint equation to improve state and costate estimates and a gradientlike step to update the design variables. The optimization methods in <ref> [34] </ref> are derived from the application of Newton's method to the optimality system; these are particular versions of sequential programming (SQP) methods. We use the allatonce formulation (2.1)(2.3). For our particular design problem the constraints G are simple constraints on the design variables. <p> This SQP method uses an interior point strategy to handle the inequality constraints and employs a trustregion strategy for globalization of convergence and to enhance robustness. See also Section 5. If only equality constraints are present, then the Newton based methods in <ref> [34] </ref> are related to the SQP methods in [9], [15].
References-found: 31

