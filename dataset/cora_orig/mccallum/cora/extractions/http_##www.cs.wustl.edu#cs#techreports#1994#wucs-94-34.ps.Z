URL: http://www.cs.wustl.edu/cs/techreports/1994/wucs-94-34.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: UNIVERSAL CONTINUOUS MEDIA I/O: DESIGN AND IMPLEMENTATION  
Author: Charles D. Cranor and Gurudatta M. Parulkar 
Note: This work supported by ARPA, NSF, Ascom Timeplex, BNR,  
Address: Campus Box 1045  One Brookings Drive St. Louis, MO 63130-4899  
Affiliation: Department of Computer Science  Washington University  Goldstar, NEC America, NTT, Southwestern Bell, SynOptics, and Tektronix.  
Date: December 19, 1994  
Pubnum: WUCS-94-34  
Abstract: The problem this paper addresses is how to modify an existing operating system's I/O subsystem to support new high-speed networks and high-bandwidth multimedia applications that will play an important role in future computing environments. The proposed I/O subsystem is called universal continuous media I/O (UCM I/O). This paper will cover the preliminary design of UCM I/O, some of the trade-offs and issues that need to be addressed in order to implement UCM I/O, and a a summary of work in progress. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Accetta, B., Golub, D., Rashid, R., Tevanian, A., and Young, M., </author> <title> Mach: A New Kernel Foundation for UNIX Development, </title> <booktitle> Proceedings of Summer 1986 USENIX Conf., </booktitle> <pages> pp. 93-112, </pages> <year> 1986. </year>
Reference: [2] <author> Bolduc, L., Culbert, J., Harada, T., Harward, J., and Schlusselberg, E. </author> <title> The AthenaMuse 2 Functional Specification, </title> <institution> AthenaMuse Software Consortium E40-300, Massachusetts Institute of Technology. </institution>
Reference-contexts: Some of these streams (typically video streams) have high bandwidth and stringent real-time QOS requirements. It is important to note that these target multimedia applications involve a varied amount of user interaction and may require not only high bandwidth but significant computing power as well <ref> [14, 15, 2] </ref>.
Reference: [3] <author> Cheriton, D., UIO: </author> <title> A Uniform I/O System Interface for Distributed Systems, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 5, No. 1, </volume> <pages> pp. 12-46, </pages> <year> 1987. </year>
Reference-contexts: However, Plan9 does not support a page remapping based I/O API or continuous media data streams. Uniform I/O Interfaces. One often cited work in the area of uniform I/O interfaces is the UIO interface of the V operating system <ref> [3] </ref>. The UIO work creates a framework into which all I/O is supposed to fit. However, the UIO effort focuses on providing support for a distributed environment based on remote procedure calls or message passing.
Reference: [4] <author> Chesson, G., et. al., </author> <title> XTP Protocol Definition, Revision 3.1, Protocol Engines, </title> <publisher> Inc., </publisher> <pages> PEI 88-13, </pages> <address> Santa Barbara, California, </address> <year> 1988. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [5] <author> Clark, D., Schenker, S., and Zhang, L., </author> <title> Supporting Real-Time Applications in an Integrated Packet Network: Architecture and Mechanism, </title> <booktitle> ACM SIGCOMM'92 Conference: Communications Architectures and Protocols, </booktitle> <volume> Vol. 22, No. 4, </volume> <pages> pp. 14-26, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [6] <author> Dittia, Z., Cox, J., and Parulkar, G., </author> <title> Washington University's Gigabit ATM Desk Area Network, </title> <booktitle> Proceedings of the Ninth Annual IEEE Workshop on Computer Communications, </booktitle> <pages> pp. 176-187, </pages> <month> October, </month> <year> 1994. </year>
Reference-contexts: On packet reception, if the buffer provided by the application is page aligned and its length is a multiple of the page size then that buffer is replaced by page remapping with the data. Newer ATM interfaces such as the APIC <ref> [6, 7] </ref> have been designed with advanced features such as on-board segmentation and re-assembly, and automatic separation of headers from data on packet delivery. This allows the OS to use the VM system to deliver data to the application. Packet Filter.
Reference: [7] <author> Dittia, Z., Cox, J., and Parulkar, G., </author> <title> A Gigabit ATM Desk Area Network: System Architecture Document for the ATM Port Interconnect Controller (APIC) Draft Version 1.0, </title> <month> August </month> <year> 1994. </year>
Reference-contexts: On packet reception, if the buffer provided by the application is page aligned and its length is a multiple of the page size then that buffer is replaced by page remapping with the data. Newer ATM interfaces such as the APIC <ref> [6, 7] </ref> have been designed with advanced features such as on-board segmentation and re-assembly, and automatic separation of headers from data on packet delivery. This allows the OS to use the VM system to deliver data to the application. Packet Filter.
Reference: [8] <author> Druschel, P., Fbufs: </author> <title> A High-Bandwidth Cross-Domain Transfer Facility, </title> <institution> University of Arizona Department of Computer Science, </institution> <type> Technical Report #TR93-05, </type> <year> 1993. </year>
Reference-contexts: Some of these systems, such as the device driver for the SGI FDDI card, rely on adding extra semantics to standard read/write system calls just for networking connections. Other systems such as FBUFS focus on data movement without specifically addressing the API issue <ref> [8] </ref>. 3.2.2. Interrupt and context switching overheads. An important part of the cost of I/O is the expense of interrupts and context switching. Often I/O bound applications enter a loop reading data from one I/O descriptor only to immediately write it back out to another I/O descriptor. <p> While the full details of these changes have not been worked out, it is clear that they will be non-trivial. FBufs. The FBUF system <ref> [8] </ref> is a data transport service which is part of the x-kernel. The x-kernel is built into the Mach 3.0 operating system and provides support for protocol composition in a microkernel based operating system.
Reference: [9] <author> Floyd, S., </author> <title> Issues in Flexible Resource Management for Datagram Networks, </title> <booktitle> Preliminary Proceedings of Third Annual Workshop on Very High Speed Networks, Baltimore, </booktitle> <pages> pp. 238-250, </pages> <month> March </month> <year> 1992. </year> <title> Universal Continuous Media I/O: </title> <booktitle> Design and Implementation 23 </booktitle>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [10] <author> Gingell, R., Moran, J., and Shannon, W., </author> <title> Virtual Memory Architecture in SunOS, </title> <booktitle> Proceedings of 1987 Summer Usenix, </booktitle> <pages> pp. 81-94. </pages>
Reference-contexts: VM Systems. Older Unix VM systems emulated the VAX hardware system so that they can use VAX memory management software. As VAX hardware became less popular the VM system became dated and inefficient. Two VM systems that have replaced the old VAX based systems are the SunOS VM system <ref> [10] </ref> and the Mach VM system [21]. The SunOS VM system steps away from the old VAX hardware and supports a machine-dependent/machine-independent layer system in a more portable way. It merges file and buffer cache memory management into one system and supports the BSD memory map (mmap) interface.
Reference: [11] <author> Gong, F. </author> <title> A Transport Solution for Pipelined Network Computing, </title> <type> Doctoral Dissertation, </type> <institution> Department of Computer Science, Sever Institute of Technology, Washington University, St. Louis, Missouri, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [12] <author> Gong, F., and Parulkar, G., </author> <title> Segment Streaming for Efficient Pipelined Televisualization, </title> <booktitle> Proceedings of IEEE Military Communications Conference, </booktitle> <address> MILCOMM'92. </address>
Reference-contexts: The Axon project [22] defined an I/O model based on shared memory segments. These memory segments are streamed between machines using an application-oriented lightweight transport protocol. The idea of segment streaming is a precursor to the idea of continuous media streams <ref> [12] </ref>. The current trend with new host network interfaces is to make them more intelligent. For example, the Silicon Graphics FDDI interface is a newer host network interface which takes advantage of virtual memory techniques without changing the API.
Reference: [13] <author> Gopalakrishnan, R., Parulkar, G.M., </author> <title> Efficient Quality-of-Service Support in Multimedia Computer Operating Systems, </title> <type> Technical Report WUCS-94-26, </type> <institution> Dept. of Computer Science, Washington University in St.Louis, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: Since the control buffer is wired down the polling overhead should be minimal because control buffer memory accesses will not cause page faults. UCM I/O does not provide any quality of service guarantees in the kernel, however, these guarantees may be provided by a scheduler <ref> [13] </ref>. 5.4. Super Calls UCM I/O also improves application performance by reducing the number of system calls by allowing them to be aggregated into super system calls or SuperCalls. This is useful for applications such as data transfer programs and daemons whose execution time is spent mostly in system calls.
Reference: [14] <author> Gove, R., Lee, W., Kim, Y., and Alexander, T., </author> <title> Image computing requirements for the 1990s: from multimedia to medicine, Medical Imaging V image capture, formatting, and display,, </title> <booktitle> SPIE, </booktitle> <volume> Vol. 1444, </volume> <pages> pp. 318-333, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Some of these streams (typically video streams) have high bandwidth and stringent real-time QOS requirements. It is important to note that these target multimedia applications involve a varied amount of user interaction and may require not only high bandwidth but significant computing power as well <ref> [14, 15, 2] </ref>.
Reference: [15] <author> Guttag, K., Gove, R., and Aken, V., </author> <title> A Single-Chip Multiprocessor for Multimedia: </title> <journal> The MVP, IEEE Computer Graphics and Applications, </journal> <pages> pp. 53-64, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Some of these streams (typically video streams) have high bandwidth and stringent real-time QOS requirements. It is important to note that these target multimedia applications involve a varied amount of user interaction and may require not only high bandwidth but significant computing power as well <ref> [14, 15, 2] </ref>.
Reference: [16] <author> Jacobson, V., </author> <title> query about TCP header on tcp-ip, </title> <journal> Message-ID &lt;9309080530.AA05271rx7.ee.lbl.gov&gt;, </journal> <note> E-Mail to Craig Partridge from TCP-IP mailing list. </note>
Reference-contexts: Efforts to address this problem in the networking field have focused on protocol processing overhead. This effort has been successful. Currently protocol processing costs on the order of one hundred instructions for the common case <ref> [16] </ref>. But it is important to note that the operating system overhead of context switching and interrupt handling is on the order of thousands of instructions. So, there is still room for improvement. 3.3.
Reference: [17] <author> Leffler, Samuel J., McKusick, Marshall K., Karels, Michael J., and Quarterman, John S., </author> <title> The Design and Implementation of the 4.3 BSD Unix Operating System, </title> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <address> Redding, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: In that case the data may not actually be remapped (but to the application the semantics of the I/O operation are the same as a remap). 7. Related work This section provides pointers to work related to this research. Historic Unix I/O and IPC API. The Unix I/O API <ref> [17] </ref> started off with just a few functions and the concept of everything is a file. These functions included open, close, read, write, and ioctl. For interprocess communications the pipe system call was provided. The BSD socket IPC system was added to Unix to support networking protocols such as TCP/IP.
Reference: [18] <author> Netravali, A., Roome, W., and Sabnani, K., </author> <title> Design and Implementation of a High-Speed Transport Protocol, </title> <journal> IEEE Trans. on Communications, </journal> <volume> Vol. 38, No. 11, </volume> <pages> pp. 2010-2024, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [19] <author> Mazraani, T., and Parulkar, G., </author> <title> Specification of a Multipoint Congram-Oriented High Performance Internet Protocol, </title> <publisher> INFOCOM'90, IEEE Computer Society, </publisher> <address> Washington D.C., </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [20] <author> McCanne, S., and Jacobson, V., </author> <title> The BSD Packet Filter: A New Architecture for User-level Packet Capture, </title> <booktitle> Proceedings of 1993 Winter Usenix, </booktitle> <pages> pp. 259-269. </pages>
Reference: [21] <author> Rashid, R., Tavanian, A., Young, M., Golub, D., Baron, R., Black, D., Bolosky, W., and Chew, J., </author> <title> Machine-Independent Virtual Memory Management for Paged Uniprocessor and Multiprocessor Architectuers, </title> <institution> Carnegie Mellon Department of Computer Science Technical Report # CMU-CS-87-140, </institution> <month> July, </month> <year> 1987. </year>
Reference-contexts: As VAX hardware became less popular the VM system became dated and inefficient. Two VM systems that have replaced the old VAX based systems are the SunOS VM system [10] and the Mach VM system <ref> [21] </ref>. The SunOS VM system steps away from the old VAX hardware and supports a machine-dependent/machine-independent layer system in a more portable way. It merges file and buffer cache memory management into one system and supports the BSD memory map (mmap) interface.
Reference: [22] <author> Sterbenz, J., and Parulkar, G., Axon: </author> <title> A Host-Network Interface Architecture for Gigabit Communication, </title> <type> Doctoral dissertation, </type> <institution> Department of Computer Science, Sever Institute of Technology, Washing-ton University, St. Louis, Missouri, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications. <p> SuperCalls). Also, the FBUF system is not very portable and has not yet been generalized to work with non-network based I/O. Network Interfaces. Previous work at Washington University in network interfaces focused on shared memory. The Axon project <ref> [22] </ref> defined an I/O model based on shared memory segments. These memory segments are streamed between machines using an application-oriented lightweight transport protocol. The idea of segment streaming is a precursor to the idea of continuous media streams [12].
Reference: [23] <author> Topolcic, C., </author> <title> Experimental Internet Stream Protocol: </title> <note> Version 2 (ST-II), RFC-1190, </note> <month> October </month> <year> 1990. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [24] <author> Zhang, L., </author> <title> A New Architecture for Packet Switching Network Protocols, </title> <type> Ph.D. thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <month> July </month> <year> 1989. </year>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
Reference: [25] <author> Zhang, L., Deering, S., Estrin, D., Shenker, S., and Zappala, D., </author> <title> A New Resource ReSerVation Protocol, (unpublished document). </title>
Reference-contexts: Because many research efforts (including our research group's work) are aimed at either creating new internet and transport protocols or extending existing ones to provide such services <ref> [5, 25, 9, 19, 23, 24, 18, 22, 11, 4] </ref>, our assumptions about the underlying protocols are realistic. Application Layer. The specific class of applications targeted in this research include point-to-point as well as multipoint multimedia applications.
References-found: 25

