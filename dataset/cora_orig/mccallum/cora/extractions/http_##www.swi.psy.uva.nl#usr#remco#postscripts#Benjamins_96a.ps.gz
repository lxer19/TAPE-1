URL: http://www.swi.psy.uva.nl/usr/remco/postscripts/Benjamins:96a.ps.gz
Refering-URL: http://www.swi.psy.uva.nl/usr/remco/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Assumptions of Problem-Solving Methods and their Role in Knowledge Engineering  
Author: Richard Benjamins and Dieter Fensel and Remco Straatman 
Abstract: A problem-solving method describes a reasoning process that efficiently achieves a goal by applying domain knowledge. However, a problem-solving method cannot directly be applied because of the existence of a gap between, on the one hand, a problem-solving method and the domain knowledge it uses, and, on the other hand, a problem-solving method and the goal that it is supposed to achieve. In this paper, we distinguish two types of assumptions based on an architecture of problem-solving methods, that are able to bridge the gap: one type of assumption is used to strengthen a problem-solving method, and the other to weaken the goal to be achieved. We also show how the effect of one assumption type can be substituted by the effect of the other type, and refer to this as the law of conservation of assumptions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. R. </author> <title> Benjamins, `Problem-solving methods for diagnosis and their role in knowledge acquisition', </title> <journal> International Journal of Expert Systems: Research and Applications, </journal> <volume> 8(2), </volume> <pages> 93-120, </pages> <year> (1995). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in <ref> [1, 2, 6, 18] </ref>. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11]. <p> For example, in diagnosis a particular PSM might only be able to find single faults. If the original task goal Section Title 2 V.R. Benjamins, D. Fensel and R. Straatman assumption name explanation Independence of hypotheses An individual hypothesis explains a set of observations regardless of the other hypothesis <ref> [1] </ref>. Non intermittency Observations do not change during diagnostic reasoning [1]. Fault models complete All possible faults are represented in fault models, which allows to derive that a component is correct if none of its fault models holds (GDE+ [23]). <p> If the original task goal Section Title 2 V.R. Benjamins, D. Fensel and R. Straatman assumption name explanation Independence of hypotheses An individual hypothesis explains a set of observations regardless of the other hypothesis <ref> [1] </ref>. Non intermittency Observations do not change during diagnostic reasoning [1]. Fault models complete All possible faults are represented in fault models, which allows to derive that a component is correct if none of its fault models holds (GDE+ [23]).
Reference: [2] <editor> CommonKADS Library for Expertise Modeling, eds., J. Breuker and W. van de Velde, </editor> <publisher> IOS Press, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in <ref> [1, 2, 6, 18] </ref>. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [3] <author> T. Bylander, </author> <title> `Complexity results for planning', </title> <booktitle> in International Joint Conference on Artificial Intelligence, </booktitle> <year> (1991). </year>
Reference-contexts: Most problems tackled with knowledge-based systems are inherently complex and intractable, that is, their time complexity is NP-hard <ref> [4, 3, 17] </ref>. PSMs make such hard problems practically feasible by making assumptions about the domain knowledge and the possible inputs, or about the precise definition of the functionality.
Reference: [4] <author> T. Bylander, D. Allemang, M. C. Tanner, and J. R. Josephson, </author> <title> `The computational complexity of abduction', </title> <journal> Artificial Intelligence, </journal> <volume> 49, </volume> <pages> 25-60, </pages> <year> (1991). </year>
Reference-contexts: Most problems tackled with knowledge-based systems are inherently complex and intractable, that is, their time complexity is NP-hard <ref> [4, 3, 17] </ref>. PSMs make such hard problems practically feasible by making assumptions about the domain knowledge and the possible inputs, or about the precise definition of the functionality. <p> Fault models complete All possible faults are represented in fault models, which allows to derive that a component is correct if none of its fault models holds (GDE+ [23]). Rule out knowledge Knowledge that reduces the number of individual hypotheses. <ref> [4] </ref> shows that an abduction problem becomes tractable if this number is reduced from n to log n. Unique effects A causal relation uniquely describes its effects (i.e. X causes Y1 or Y2 is not allowed) (hierarchical abduction [7]). <p> X causes Y1 or Y2 is not allowed) (hierarchical abduction [7]). Ordered monotonic abduction problem A composite hypothesis explains at least as much as its elements, each individual hypothesis has a different plausibility and there is a total ordering among plausibilities. This assumptions makes abduction tractable <ref> [4] </ref>. Belief in observations Observations can be trusted [22]. Design is correct The original design of the system to be diagnosed is correct [8]. Fixes do not interact The results of applying fixes do not cancel each other, so they can be applied in any order [10].
Reference: [5] <author> T. Bylander and B. Chandrasekaran, </author> <title> `Generic tasks in knowledge-based reasoning: The right level of abstraction for knowledge acquisition', in Knowledge Acquisition for Knowledge Based Systems, </title> <editor> eds., B. Gaines and J. Boose, </editor> <volume> volume 1, </volume> <pages> 65-77, </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> (1988). </year>
Reference-contexts: Making explicit the assumptions of a PSM about the domain knowledge is a way to deal with the interaction problem. The interaction problem <ref> [5] </ref> states that domain knowledge cannot be represented independently of how it will be used in reasoning. Vice versa, a PSM and its specific variants cannot be constructed independently of assumptions about the available domain knowledge.
Reference: [6] <author> B. Chandrasekaran, T. R. Johnson, and J. W. Smith, </author> <title> `Task-structure analysis for knowledge modeling', </title> <journal> Communications of the ACM, </journal> <volume> 35(9), </volume> <pages> 124-137, </pages> <year> (1992). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks <ref> [6] </ref>, Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11]. <p> 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in <ref> [1, 2, 6, 18] </ref>. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [7] <author> L. Console and D. Theseider Dupre, </author> <title> `Choices in abductive reasoning with abstraction axioms', </title> <booktitle> in Proc. of the workshop on foundations of knowledge representation, </booktitle> <editor> ed., G. Lakemeijer, </editor> <address> Vienna, </address> <month> (August </month> <year> 1992). </year> <month> ECCAI. </month>
Reference-contexts: Rule out knowledge Knowledge that reduces the number of individual hypotheses. [4] shows that an abduction problem becomes tractable if this number is reduced from n to log n. Unique effects A causal relation uniquely describes its effects (i.e. X causes Y1 or Y2 is not allowed) (hierarchical abduction <ref> [7] </ref>). Ordered monotonic abduction problem A composite hypothesis explains at least as much as its elements, each individual hypothesis has a different plausibility and there is a total ordering among plausibilities. This assumptions makes abduction tractable [4]. Belief in observations Observations can be trusted [22].
Reference: [8] <author> R. Davis, </author> <title> `Diagnostic reasoning based on structure and behavior', </title> <journal> Artificial Intelligence, </journal> <volume> 24, </volume> <pages> 347-410, </pages> <year> (1984). </year>
Reference-contexts: This assumptions makes abduction tractable [4]. Belief in observations Observations can be trusted [22]. Design is correct The original design of the system to be diagnosed is correct <ref> [8] </ref>. Fixes do not interact The results of applying fixes do not cancel each other, so they can be applied in any order [10]. <p> Some diagnostic problem-solving methods only work for problems with at most one fault. By employing this assumption they can reason more efficiently than methods which deal with multiple faults [9]. The single-fault assumption can also be viewed as a requirement on domain knowledge <ref> [8] </ref>. If each possible set of faults is represented as a single fault, a method which finds only single faults is still able to solve each diagnostic problem in the given application domain.
Reference: [9] <author> J.H. de Kleer and B.C. Williams, </author> <title> `Diagnosing multiple faults', </title> <journal> Artificial Intelligence, </journal> <volume> 32, </volume> <pages> 97-130, </pages> <year> (1987). </year>
Reference-contexts: Some diagnostic problem-solving methods only work for problems with at most one fault. By employing this assumption they can reason more efficiently than methods which deal with multiple faults <ref> [9] </ref>. The single-fault assumption can also be viewed as a requirement on domain knowledge [8]. If each possible set of faults is represented as a single fault, a method which finds only single faults is still able to solve each diagnostic problem in the given application domain.
Reference: [10] <author> D. Fensel, </author> <title> `Assumptions and limitations of a problem-solving method: A case study', </title> <booktitle> in Proceedings of the 8th Banff Knowledge Acquisition for Knowledge-Based Systems Workshop, </booktitle> <editor> eds., B. R. Gaines and M. A. Musen, </editor> <address> Alberta, Canada, </address> <year> (1995). </year> <institution> SRDG Publications, University of Calgary. </institution>
Reference-contexts: Requirements P SM req describes the domain knowledge needed by the PSM to achieve its functionality. Examples of such requirements in a parametric design task <ref> [10] </ref> include the availability of heuristics that link violated constraints to possible repair actions, the fact that a preference relation must describe a complete ordering, the existence of a causal relationship, etc. The requirements describe what a PSM expects in return for the functionality it provides. <p> For example, the availability of good propose knowledge for elevator design, enables better initial designs, and thus the revise step can be simplified <ref> [10] </ref>. Teleological assumptions embody a weakening of the goal that can be achieved, by introducing assumptions about the precise problem type. The desired functionality of the system is thus reduced and therefore also the complexity. For example, in diagnosis a particular PSM might only be able to find single faults. <p> Belief in observations Observations can be trusted [22]. Design is correct The original design of the system to be diagnosed is correct [8]. Fixes do not interact The results of applying fixes do not cancel each other, so they can be applied in any order <ref> [10] </ref>. Untangled concept hierarchy A concept should not be a subconcept of more than one superconcept and the hierarchy must be more or less balanced (hierarchical activation [13]). Table 1.
Reference: [11] <author> D. Fensel, R. Straatman, and F. van Harmelen, </author> <title> `The mincer metaphor for problem-solving methods: Making assumptions for reasons of efficiency', </title> <booktitle> in Proceedings of the Knowledge Engineering: Methods and Languages Workshop (KEML-96), </booktitle> <address> Paris-Orsay, </address> <month> (January 15-16 </month> <year> 1996). </year> <note> (to appear). </note>
Reference-contexts: Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge <ref> [11] </ref>. There are however two relations that need to be understood before PSMs can actually be used: from the PSM to the goal it is supposed to achieve, and from the PSM to the domain knowledge that it uses. <p> Moreover, if a PSM is not applicable due to unsatisfi-able ontological assumptions, another PSM can be selected from the library. PSM construction Formula 10 can also be used in the construction of P SM op for a given goal. For instance in <ref> [11] </ref>, we propose a process of method construction that starts with a weak problem-solving method (e.g. generate & test) and transforms this until an acceptable problem solver is constructed. Some of these transformation steps do not change the functionality, while others introduce new assumptions.
Reference: [12] <author> M. R. Genesereth, </author> <title> `The use of design descriptions in automated diagnosis', </title> <journal> Artificial Intelligence, </journal> <volume> 24, </volume> <pages> 411-436, </pages> <year> (1984). </year>
Reference-contexts: We refer to this as the law of conservation of assumptions. We illustrate the law with the single-fault assumption, which can be regarded as a typical example of a teleological assumption in diagnosis <ref> [12] </ref>. Some diagnostic problem-solving methods only work for problems with at most one fault. By employing this assumption they can reason more efficiently than methods which deal with multiple faults [9]. The single-fault assumption can also be viewed as a requirement on domain knowledge [8].
Reference: [13] <author> A. Goel, N. Soundarajan, and B. Chandrasekaran, </author> <title> `Complexity in classificatory reasoning', </title> <booktitle> in AAAI-87, </booktitle> <pages> pp. 421-425, </pages> <year> (1987). </year>
Reference-contexts: Fixes do not interact The results of applying fixes do not cancel each other, so they can be applied in any order [10]. Untangled concept hierarchy A concept should not be a subconcept of more than one superconcept and the hierarchy must be more or less balanced (hierarchical activation <ref> [13] </ref>). Table 1. Some examples of assumptions taken from the literature on PSMs. is to find any kind of fault (including multiple faults), then the PSM can achieve this goal under the single-fault assumption. Thus in fact the PSM achieves a weaker goal.
Reference: [14] <author> D. Kozen, </author> <title> `Logic of programs', </title> <booktitle> in Handbook of Theoretical Computer Science, </booktitle> <publisher> Elsevier Science Publ., B. V., </publisher> <address> Amsterdam, </address> <year> (1990). </year>
Reference-contexts: One has to ensure that, assuming that the knowledge requirements are satisfied, the operational description describes a way to achieve the functionality (is-realized-by in Figure 2). Because the description of the operational specification requires a logic over states, we use dynamic logic <ref> [14] </ref> to formalize this obligation 2 : j= P SM req ! (&lt; P SM op &gt; true ^ [P SM op ]P SM f un ): (1) This obligation states that, given that the requirements hold, the operational specification will terminate and its input-output behavior will be identical to the
Reference: [15] <institution> Automatic knowledge acquisition for expert systems, </institution> <note> ed., </note> <editor> S. Marcus, </editor> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods <ref> [15] </ref>, KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [16] <author> M. Musen, </author> <title> `Overcoming the limitations of role-limiting methods', </title> <journal> Knowledge Acquisition, </journal> <volume> 4(2), </volume> <pages> 165-170, </pages> <year> (1992). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach <ref> [16] </ref>, Components of Expertise [21], GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [17] <editor> B. Nebel, </editor> <booktitle> `Artificial intelligence', in Essentials in Knowledge Representation, </booktitle> <editor> ed., G. Brewka, </editor> <year> (1995). </year>
Reference-contexts: Most problems tackled with knowledge-based systems are inherently complex and intractable, that is, their time complexity is NP-hard <ref> [4, 3, 17] </ref>. PSMs make such hard problems practically feasible by making assumptions about the domain knowledge and the possible inputs, or about the precise definition of the functionality.
Reference: [18] <author> F. Puppe, </author> <title> Systematic Introduction to Expert Systems: Knowledge Representation and Problem-SolvingMethods, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in <ref> [1, 2, 6, 18] </ref>. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [19] <author> KADS: </author> <title> A Principled Approach to Knowledge-Based System Development, </title> <editor> eds., A. Th. Schreiber, B. J. Wielinga, and J. A. Breuker, </editor> <booktitle> volume 11 of Knowledge-Based Systems Book Series, </booktitle> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1993. </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS <ref> [19] </ref>, CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [20] <author> A. Th. Schreiber, B. J. Wielinga, R. de Hoog, J. M. Akkermans, and W. Van de Velde, `CommonKADS: </author> <title> A comprehensive methodology for KBS development', </title> <journal> IEEE Expert, </journal> <volume> 9(6), </volume> <pages> 28-37, </pages> <month> (December </month> <year> 1994). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS <ref> [20] </ref>, the Method-to-Task approach [16], Components of Expertise [21], GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [21] <author> L. Steels, </author> <title> `Components of expertise', </title> <journal> AI Magazine, </journal> <volume> 11(2), </volume> <pages> 28-49, </pages> <month> (Summer </month> <year> 1990). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise <ref> [21] </ref>, GDM [24]. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [22] <author> P. Struss, </author> <title> `Diagnosis as a process', in Readings in Model-based Diagnosis, </title> <editor> eds., L. Console, J.H. de Kleer, and W.C. Hamscher, </editor> <publisher> Morgan Kaufmann, </publisher> <year> (1992). </year>
Reference-contexts: Ordered monotonic abduction problem A composite hypothesis explains at least as much as its elements, each individual hypothesis has a different plausibility and there is a total ordering among plausibilities. This assumptions makes abduction tractable [4]. Belief in observations Observations can be trusted <ref> [22] </ref>. Design is correct The original design of the system to be diagnosed is correct [8]. Fixes do not interact The results of applying fixes do not cancel each other, so they can be applied in any order [10].
Reference: [23] <author> P. Struss and O. Dressler, </author> <title> `Physical negation integrating fault models into the general diagnostic engine', </title> <booktitle> in Proc 11th IJCAI, </booktitle> <pages> pp. 1318-1323, </pages> <address> Detroit, </address> <year> (1989). </year>
Reference-contexts: Non intermittency Observations do not change during diagnostic reasoning [1]. Fault models complete All possible faults are represented in fault models, which allows to derive that a component is correct if none of its fault models holds (GDE+ <ref> [23] </ref>). Rule out knowledge Knowledge that reduces the number of individual hypotheses. [4] shows that an abduction problem becomes tractable if this number is reduced from n to log n. Unique effects A causal relation uniquely describes its effects (i.e.
Reference: [24] <author> P. Terpstra, G. van Heijst, B. Wielinga, and N. Shadtbolt, </author> <title> `Knowledge acquisition support through generalised directive models', in Second Generation Expert Systems, </title> <editor> eds., Jean-Marc David, Jean-Paul Krivine, and Reid Simmons, </editor> <address> 428-455, </address> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg, Ger-many, </address> <year> (1993). </year>
Reference-contexts: 1 Introduction The notion of problem-solving method (PSM) is present in many current knowledge engineering frameworks such as Generic Tasks [6], Role-Limiting Methods [15], KADS [19], CommonKADS [20], the Method-to-Task approach [16], Components of Expertise [21], GDM <ref> [24] </ref>. Libraries of PSMs are described in [1, 2, 6, 18]. Problem-solving methods can be used to efficiently achieve goals of tasks through the application of domain knowledge [11].
Reference: [25] <author> G. van Heijst, </author> <title> The Role of Ontologies in Knowledge Engineering, </title> <type> Ph.D. dissertation, </type> <institution> University of Amsterdam, </institution> <month> May </month> <year> 1995. </year> <note> Section Title 5 V.R. Benjamins, </note> <author> D. Fensel and R. </author> <month> Straatman </month>
Reference-contexts: Each interface leads to the identification of an assumption type. Knowledge requirements: ontological assumptions In downward direction, a PSM has knowledge requirements, specifying the needed domain knowledge (satisfied-by in Figure 2). We will refer to them as ontological assumptions, because they are reminiscent of ontological commitments <ref> [25] </ref>. The domain knowledge has to imply the ontological assumptions: j= domain knowledge ! ontological assumptions (2) Functionality: teleological assumptions In upward direction, the relation between the PSM functionality and the goal to be achieved has to be established (matches in Figure 2).
References-found: 25

