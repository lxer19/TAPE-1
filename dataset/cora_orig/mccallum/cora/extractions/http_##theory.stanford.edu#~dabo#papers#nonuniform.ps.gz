URL: http://theory.stanford.edu/~dabo/papers/nonuniform.ps.gz
Refering-URL: http://theory.stanford.edu/~dabo/publications.html
Root-URL: 
Email: dabo@cs.princeton.edu  venkie@bellcore.com  
Title: Rounding in lattices and its cryptographic applications  
Author: Dan Boneh Ramarathnam Venkatesan 
Address: Princeton, NJ 08544  Room-1C341B, 445 South Street, Morristown NJ 07960  
Affiliation: Department of Computer Science Princeton University  Bellcore  
Abstract: We analyze a lattice rounding technique using a natural matrix norm. We present its application to proving in a non-uniform model the hardness of computing 2 log log p bits of the secret keys of Diffie-Hellman and related protocols from the public keys. Earlier in [2] it was shown that p bits are hard to compute.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Babai. </author> <title> On Lovasz' lattice reduction and the nearest lattice point problem. </title> <journal> Combinatorica, </journal> <volume> 6 </volume> <pages> 1-13, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction Lattice basis reduction techniques have proven to be very useful in diverse areas. Examples include cryptography, settling number theoretic conjectures, and diophantine approximation. Rounding a given vector to an approximately closest vector in a given lattice was first studied in this context by Babai <ref> [1] </ref>. Recently in [2] rounding in lattices was used to study the hardness of computing the most significant bits of secret keys obtained using the Diffie-Hellman protocol and related schemes. <p> We set Z = S X S . Then by pair wise independence we obtain E [Z] 2 k1 2 km+1 = 2 m2 and Var [Z] = S Chebyshev's inequality now gives: Pr <ref> [Z &lt; 1] </ref> Pr jZ E [Z]j &gt; 2 (m3)=2 Var (Z) &lt; 2 m3 Hence, Z 1 with probability at least 1 1 2 m3 . When Z 1 there exists at least one set S k satisfying the required condition. <p> This property of the u k enables one to write any integer x in the range <ref> [1; 2 k ] </ref> as x = P k1 i=1 x i u i where all x i = 0; 1; 2; 3.
Reference: [2] <author> D. Boneh, Venkatesan R., </author> <title> "Hardness of Computing the Most Significant Bits of Secret Keys in Diffie-Hellman and Related Schemes", </title> <booktitle> Proc. of Crypto, </booktitle> <year> 1996. </year>
Reference-contexts: 1 Introduction Lattice basis reduction techniques have proven to be very useful in diverse areas. Examples include cryptography, settling number theoretic conjectures, and diophantine approximation. Rounding a given vector to an approximately closest vector in a given lattice was first studied in this context by Babai [1]. Recently in <ref> [2] </ref> rounding in lattices was used to study the hardness of computing the most significant bits of secret keys obtained using the Diffie-Hellman protocol and related schemes. Motivated by this, we study a new lattice rounding technique which is used to improve on the results of [2] in a non-uniform model. <p> Recently in <ref> [2] </ref> rounding in lattices was used to study the hardness of computing the most significant bits of secret keys obtained using the Diffie-Hellman protocol and related schemes. Motivated by this, we study a new lattice rounding technique which is used to improve on the results of [2] in a non-uniform model. The Diffie-Hellman protocol [3] enables two parties Alice and Bob to exchange a secret. Alice and Bob choose private keys a and b respectively. <p> Hence it is important to know if the most significant bits (MSB) of g ab are secure from an adversary who knows both g a and g b . In <ref> [2] </ref> the authors showed that the p log p + log log p bits of the Diffie-Hellman secret are as hard to compute as the entire secret. This was done by studying an abstract problem known as the hidden number problem or HNP for short. <p> The hidden number problem is to find ff in polynomial time given an oracle for f . Clearly one wishes to 1 solve this problem with a small a value of k as possible. In <ref> [2] </ref> it was shown that the LLL algorithm enables one to solve HNP in polynomial time with k = log p + log log p. This fact was used to prove that computing the most significant bits of the Diffie-Hellman secret is as hard as computing the entire secret. <p> It is still an open problem whether the same results apply to Shamir's message passing scheme. To apply our results to the above schemes one must first derive several relations satisfied by the corresponding functions. These relations are stated in the following simple lemma taken from <ref> [2] </ref>. <p> However it can be applied to the Okamoto conference key sharing scheme and the modified ElGamal scheme described in Section 3.1. We obtain the following theorem which is much better than the results of <ref> [2] </ref> in terms of the number of bits needed. Theorem 3.2 Let p be a prime and g a generator of Z fl p . 1. <p> Unlike the results of the previous section this result is uniform. It provides a "real" algorithm for solving HNP. A similar theorem was presented in <ref> [2] </ref> however there the proof made use of a more refined oracle than an MSB oracle. Here we are able to prove a slightly weaker result, but we make use of the standard MSB oracle. <p> To do so one must construct a basis of L fl with low L 1;1 norm for a general g. The implications of Theorem 3.3 to the Diffie-Hellman protocol are discussed in <ref> [2] </ref>.
Reference: [3] <author> W. Diffie, </author> <title> Hellman E.M., "New directions in cryptography", </title> <journal> IEEE. Trans. Inform. Theory, IT-22, </journal> <volume> No. 6, </volume> <pages> pp 644-654. </pages> <month> (nov </month> <year> 1976) </year>
Reference-contexts: Motivated by this, we study a new lattice rounding technique which is used to improve on the results of [2] in a non-uniform model. The Diffie-Hellman protocol <ref> [3] </ref> enables two parties Alice and Bob to exchange a secret. Alice and Bob choose private keys a and b respectively. Then, they exchange the values g a and g b and compute their joint secret key g ab which they can both determine.
Reference: [4] <author> T. Elgamal, </author> <title> "A public-key cryptosystem and a signature scheme based on Discrete Logarithms", </title> <journal> IEEE Trans. on Info. Theory, </journal> <volume> IT-31, No 4, </volume> <pages> pp 469-472. </pages> <month> (july </month> <year> 1985). </year>
Reference-contexts: This fact was used to prove that computing the most significant bits of the Diffie-Hellman secret is as hard as computing the entire secret. This solution of HNP was sufficient to prove the same result for Okamoto's conference key sharing scheme [8], ElGamal's public key system <ref> [4] </ref> and Shamir's message passing scheme [6, pp. 96-97] all defined in the next section. In this paper we improve the number of bits needed to solve HNP to k = 2 log log p in a nonuniform model.
Reference: [5] <author> R. Impagliazzo, Naor M., </author> <title> "Efficient cryptographic schemes provably as secure as subset sum", </title> <booktitle> Proc. FOCS 1989, </booktitle> <pages> pp. 236-241. </pages>
Reference-contexts: This completes the proof of Theorem 2.1. fl We note that constructing a basis satisfying the conditions of Lemma 2.3 is likely to be hard. It requires one to solve certain instances of the modular subset sum problem. Impagliazzo and Naor <ref> [5] </ref> note that these instances are likely to be hard on average. 3 An application to Diffie-Hellman related schemes 3.1 Encryption schemes related to the Diffie-Hellman protocol Several encryption schemes related to the Diffie-Hellman protocol have been proposed in the literature. Here we describe three of these schemes.
Reference: [6] <author> N. Koblitz, </author> <title> "A course in Number Theory and Cryptography", </title> <publisher> Springer Verlag 1987. </publisher>
Reference-contexts: This solution of HNP was sufficient to prove the same result for Okamoto's conference key sharing scheme [8], ElGamal's public key system [4] and Shamir's message passing scheme <ref> [6, pp. 96-97] </ref> all defined in the next section. In this paper we improve the number of bits needed to solve HNP to k = 2 log log p in a nonuniform model.
Reference: [7] <author> U. Maurer, </author> <title> "Towards the equivalence of breaking the Diffie-Hellman protocol and computing discrete logarithms", </title> <booktitle> Proc. of Crypto, </booktitle> <year> 1994, </year> <pages> pp. 271-281. </pages>
Reference-contexts: The same result holds for the secret message in the ElGamal variant. Non-uniform reductions have been used previously to argue about the security of various encryption schemes (see e.g. Maurer <ref> [7] </ref>). 2 A Lattice Rounding Technique We show that there exist a polynomial time algorithm which given advice bits depending only on p and g can solve the hidden number problem using an oracle returning only k = 2 log log p bits.
Reference: [8] <author> T. Okamoto, </author> <title> "Encryption and Authentication Schemes Based on Public Key Systems, </title> <type> Ph. D Thesis, </type> <institution> The Univ. of Tokyo, </institution> <year> (1988). </year>
Reference-contexts: This fact was used to prove that computing the most significant bits of the Diffie-Hellman secret is as hard as computing the entire secret. This solution of HNP was sufficient to prove the same result for Okamoto's conference key sharing scheme <ref> [8] </ref>, ElGamal's public key system [4] and Shamir's message passing scheme [6, pp. 96-97] all defined in the next section. In this paper we improve the number of bits needed to solve HNP to k = 2 log log p in a nonuniform model.
Reference: [9] <author> K. Sakurai, Shizuya H, </author> <title> "Relationships among Computational powers of Breaking Discrete Log Cryptosystems", </title> <booktitle> Eurocrypt 95, </booktitle> <pages> pp 341-351. 9 </pages>
Reference-contexts: To break the scheme one has to compute the function EL 0 g (g x ; g xr ; mg r ) = m. The equivalence of computing the first three functions above to breaking Diffie-Hellman was studied in <ref> [9] </ref>. The methods of [9] can also be used to show that breaking the modified ElGamal public key system is equivalent to breaking the original ElGamal system. Our non-uniform results can be applied to the modified ElGamal public key system and Okamoto's conference key scheme. <p> To break the scheme one has to compute the function EL 0 g (g x ; g xr ; mg r ) = m. The equivalence of computing the first three functions above to breaking Diffie-Hellman was studied in <ref> [9] </ref>. The methods of [9] can also be used to show that breaking the modified ElGamal public key system is equivalent to breaking the original ElGamal system. Our non-uniform results can be applied to the modified ElGamal public key system and Okamoto's conference key scheme.
References-found: 9

