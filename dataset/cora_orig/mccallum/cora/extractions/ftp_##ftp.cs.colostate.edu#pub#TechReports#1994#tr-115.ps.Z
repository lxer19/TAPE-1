URL: ftp://ftp.cs.colostate.edu/pub/TechReports/1994/tr-115.ps.Z
Refering-URL: http://eksl-www.cs.umass.edu/~stamant/publications.html
Root-URL: 
Title: Integrating Statistical Methods for Characterizing Causal Influences on Planner Behavior over Time  
Affiliation: Department of Computer Science  Colorado State University  
Abstract: Adele E. Howe, Robert St. Amant and Paul R. Cohen Technical Report CS-94-115 June 27, 1994 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Bentler. </author> <title> Theory and Implementation of EQS: A Strutural Equations Program. BMDP Statistical Software, </title> <publisher> Inc., </publisher> <address> Los Angeles, </address> <year> 1985. </year>
Reference: [2] <author> Rodney A. Brooks. </author> <title> Intelligence without reason. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 569-595, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference: [3] <author> David Chapman. </author> <title> Penguins can make cake. </title> <journal> AI Magazine, </journal> <volume> 10(4) </volume> <pages> 45-50, </pages> <month> Winter </month> <year> 1989. </year>
Reference: [4] <author> Paul R. Cohen, Lisa Ballesteros, Dawn Gregory, and Robert St. Amant. </author> <title> Experiments with a regression-based causal induction algorithm. </title> <year> 1994. </year>
Reference-contexts: We have used our algorithm, called FBD, to estimate the causal influence of aspects of the Phoenix environment, such as wind speed and fire perimeter, on variables such as the time until the next plan failure. 7 FBD is described in detail in <ref> [4] </ref>; we will just sketch it here. Before analysis begins, we assume that our data are standardized to eliminate the effect of differences due to measurement scale. <p> The fourth test is more complex and is stated here without elaboration: FBD will select from the predictors that passed the first tests those that form the largest set of predictors such that none is conditionally independent of the performance variable given the others (see <ref> [4] </ref> for explanation). At every stage of the development of a model, the candidate predictors for a performance variable are all those but the original performance variable and the current one, but the candidates are quickly whittled down to a smaller set, typically less than five or six.
Reference: [5] <author> Paul R. Cohen, Adam Carlson, Lisa Ballesteros, and Robert St. Amant. </author> <title> Automating path analysis for building causal models from data. </title> <booktitle> In Proceedings of the Tenth International Conference on Machine Learning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference: [6] <author> Paul R. Cohen, Michael Greenberg, David M. Hart, and Adele E. Howe. </author> <title> Trial by fire: Understanding the design requirements for agents in complex environments. </title> <journal> AI Magazine, </journal> <volume> 10(3), </volume> <month> Fall </month> <year> 1989. </year>
Reference-contexts: Additionally, it compared favorably using conditional independence measures. 9 3 An Example with Phoenix The Phoenix fireboss planner coordinates the efforts of other agents to contain forest fires within a simulation of fires in Yellowstone National Park <ref> [6] </ref>. Within the simulation, fires burn somewhat unpredictably, and the weather can be controlled during experimentation to change at variable intervals and by variable amounts. The fireboss is forced to deal with challenging conditions: limited resources and a changing environment. As a consequence, the fireboss's plans often fail.
Reference: [7] <author> Oren Etzioni. </author> <title> Intelligence without robots: A reply to Brooks. </title> <journal> AI Magazine, </journal> <volume> 14(4) </volume> <pages> 7-13, </pages> <month> Winter </month> <year> 1993. </year>
Reference: [8] <author> Matthew L. Ginsberg. </author> <title> Universal planning: An (almost) universally bad idea. </title> <journal> AI Magazine, </journal> <volume> 10(4) </volume> <pages> 40-44, </pages> <month> Winter </month> <year> 1989. </year>
Reference: [9] <author> C. Glymour, R. Scheines, P. Spirtes, and K. Kelly. </author> <title> Discovering Causal Structure. </title> <publisher> Academic Press, </publisher> <year> 1987. </year>
Reference: [10] <author> David M. Hart and Paul R. Cohen. </author> <title> Predicting and explaining success and task duration in the Phoenix planner. </title> <editor> In J. Hendler, editor, </editor> <booktitle> Artificial Intelligence Planning Systems: Proceedings of the First International Conference (AIPS92), </booktitle> <address> San Mateo, CA, 1992. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference: [11] <author> Adele E. Howe. </author> <title> Accepting the Inevitable: The Role of Failure Recovery in the Design of Planners. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Department of Computer Science, </institution> <address> Amherst, MA, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: These four frequencies are arranged in a 2x2 contingency table: 1 While a PA model can be explanatory as well, in our combination of the methods, the explanatory model is developed by a knowledge based, as opposed to statistical, technique called Failure Recovery Analysis <ref> [11] </ref>. 5 T t T t P a 30 50 For this table, we see a strong dependence between the precursor, P a , and the target event, T t : 15 cases of T t following P a out of 25 cases of P a . <p> The interpretation of this output depends entirely on what events were being monitored. Dependency detection was designed to detect sources of plan failure in the Phoenix planner <ref> [11] </ref>. For that application, the events of interest are failures and recovery actions, and it discovers dependencies between particular failures, the recovery methods that repair them and the occurrence of other failures downstream.
Reference: [12] <author> Adele E. Howe and Paul R. Cohen. </author> <title> Isolating dependencies on failure by analyzing execution traces. </title> <booktitle> In Artificial Intelligence Planning Systems: Proceedings of the First International Conference, </booktitle> <address> College Park, MD, </address> <year> 1992. </year>
Reference-contexts: Both Dependency Detection and Path Analysis are techniques for examining combinations. Dependency Detection (DD) identifies relationships between discrete events in a time series, 3 execution traces of a planner operating in an environment <ref> [12] </ref>. DD tests whether the occurrence of one event depends on the occurrence of other events prior to it (i.e., whether one set of events appears to cause another event). For example, we have used DD to search for dependencies between combinations of actions of a planner and plan failure.
Reference: [13] <author> K. Joreskog and D. Sorbom. </author> <title> LISREL VI User's Guide. Scientific Software, </title> <publisher> Inc., </publisher> <address> Mooresville, IN, </address> <year> 1984. </year>
Reference: [14] <author> C.C. Li. </author> <title> Path Analysis A Primer. </title> <publisher> Boxwood Press, </publisher> <year> 1975. </year> <month> 15 </month>
Reference: [15] <author> Judea Pearl and T. S. Verma. </author> <title> A theory of inferred causation. </title> <editor> In J.A. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Second International Conference, </booktitle> <pages> pages 441-452, </pages> <address> San Mateo, CA, April 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Each of these predictors then becomes a performance variable and the process repeats until we run out of variables that need to be predicted. FBD has been thoroughly tested and its performance compared with Pearl and Verma's IC algorithm <ref> [15] </ref>. As expected, the algorithm performed well using measures such as R 2 and differences in estimated correlation.
Reference: [16] <author> M. J. Schoppers. </author> <title> In defense of reaction plans as caches. </title> <journal> AI Magazine, </journal> <volume> 10(4) </volume> <pages> 51-60, </pages> <month> Winter </month> <year> 1989. </year>
Reference: [17] <author> Robert R. Sokal and F. James Rohlf. Biometry: </author> <booktitle> The Principles and Practice of Statistics in Biological Research. W.H. </booktitle> <publisher> Freeman and Co., </publisher> <address> New York, </address> <note> second edition, </note> <year> 1981. </year>
Reference-contexts: But while P a leads most frequently to target event T t , precursors other than P a lead to T t relatively infrequently (30 instances in 80). A G-Test on this table will detect a dependency between the target event and its precursor <ref> [17] </ref>; in this case, G = 5:174; p &lt; :023, which means that the two events are unlikely to be independent and conclude that T t depends on P a (abbreviated as [P a ; T t ]). The precursors can be single events or combinations of events.
Reference: [18] <author> P.C. Suppes. </author> <title> A Probabilistic Theory of Causality. </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1970. </year>
Reference-contexts: These strengths complement each other naturally in the framework of building causal models. Three requirements are commonly posited for x to cause y <ref> [18] </ref>: x must precede y in time; x and y must covary; and causes of y other than x must be controlled. By finding influences between events, DD concentrates on precedence and control. Through application of regression, PA captures covariance and control.
Reference: [19] <author> Sewal Wright. </author> <title> Correlation and causation. </title> <journal> Journal of Agricultural Research, </journal> <volume> 20 </volume> <pages> 557-585, </pages> <year> 1921. </year>
References-found: 19

