URL: http://www.wearcam.org/fpga97tm2paper.ps.gz
Refering-URL: http://www.wearcam.org/
Root-URL: 
Title: Abstract  
Keyword: simple graphics acceleration applications.  
Web: some  
Note: The first Transmogrifier-2 boards have been manufactured and are functional. They have recently been used successfully in  
Abstract: This paper describes the Transmogrifier-2, a second generation multi-FPGA system. The largest version of the system will comprise 16 boards that each contain two Altera 10K50 FPGAs, four I-cube interconnect chips, and up to 8 Mbytes of memory. The inter-FPGA routing architecture of the TM-2 uses a novel interconnect structure, a non-uniform partial crossbar, that provides a constant delay between any two FPGAs in the system. The TM-2 architecture is modular and scalable, meaning that various sized systems can be constructed from the same board, while maintaining routability and the constant delay feature. Other features include a system-level programmable clock that allows single-cycle access to off-chip memory, and programmable clock waveforms with resolution to 10ns. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Butts, J. Batcheller, J. Varghese, </author> <title> An Efficient Logic Emulation System, </title> <booktitle> Proc. ICCD, </booktitle> <year> 1992, </year> <pages> pp. 138-141. </pages>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described <ref> [1] </ref> [2] [3] [4] [5] [6] [7], and can be roughly classified as emulation systems, or custom compute engines. <p> A full crossbar is not scalable or modular, as the amount of routing hardware grows as , so the size of each module grows as . The next simplest routing architecture is a partial crossbar, also related to a folded Clos network <ref> [1] </ref> [8]. A Clos network converts a 32 300 9600= 2 O n ( ) large crossbar into a collection of smaller crossbars, arranged as three stages of crossbars.
Reference: [2] <author> M. Slimane-Kadi, D. Brasen, G. Saucier, </author> <title> A Fast-FPGA Prototyping System That Uses Inexpensive High-Performance FPIC, </title> <booktitle> in Proc. 2nd Annual Workshop on FPGAs, </booktitle> <year> 1994 </year>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] <ref> [2] </ref> [3] [4] [5] [6] [7], and can be roughly classified as emulation systems, or custom compute engines.
Reference: [3] <author> R. Tessier, J. Babb, M. Dashl, S. Hanon, A. Agarwal, </author> <title> The Virtual Wires Emulation System: A Gate-Efficient ASIC Prototyping Environment, </title> <booktitle> Proc.2nd Annual Workshop on FPGAs, </booktitle> <year> 1994 </year>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] [2] <ref> [3] </ref> [4] [5] [6] [7], and can be roughly classified as emulation systems, or custom compute engines.
Reference: [4] <author> J. Vuillemin, P. Bertin, D. Roncin, M. Shand, H. Touati, P. Boucard, </author> <title> Programmable Active Memories: Reconfigurable Systems Come of Age, </title> <journal> Proc. IEEE Trans VLSI Systems, </journal> <month> March </month> <year> 1996, </year> <pages> pp. 56-69 </pages>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] [2] [3] <ref> [4] </ref> [5] [6] [7], and can be roughly classified as emulation systems, or custom compute engines.
Reference: [5] <author> J. Arnold, D. Buell, E. Davis, </author> <title> Splash 2, </title> <booktitle> in Proc. 4th Annual ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp 316-322, </pages> <year> 1992 </year>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] [2] [3] [4] <ref> [5] </ref> [6] [7], and can be roughly classified as emulation systems, or custom compute engines.
Reference: [6] <author> R. Amerson, R. Carter, W. Culbertson, P. Keukes, G. Snider, </author> <booktitle> Teremac - Configurable Custom Computing, in Proc. FPGA-95, </booktitle> <pages> pp 32-29 </pages>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] [2] [3] [4] [5] <ref> [6] </ref> [7], and can be roughly classified as emulation systems, or custom compute engines.
Reference: [7] <author> D. Galloway, D. Karchmer, D. Chow, D. Lewis, J. Rose, </author> <title> The Transmogrifier: The University of Toronto Field-Programmable System, </title> <booktitle> Second Canadian Workshop on Field-Programmable Devices, </booktitle> <address> Kingston, Ontario, </address> <month> June </month> <year> 1994. </year> <note> Also available as CSRI Technical Report 306 via anonymous ftp from ftp://ftp.csri.toronto.edu/csri-technical-reports/306/. </note>
Reference-contexts: Multi-FPGA field-programmable systems can be used not only to prototype these larger designs, but also as field-configurable compute accelerators. A moderate number of field-programmable systems have been described [1] [2] [3] [4] [5] [6] <ref> [7] </ref>, and can be roughly classified as emulation systems, or custom compute engines. <p> The primary motivation for the Transmogrifier-2 (or TM-2, for short) is a exible rapid prototyping system that offers high capacity, high clock rates, and is exible enough to implement a wide variety of systems. We have previously constructed a small-scale rapid prototyping system, the Transmogrifier-1 <ref> [7] </ref>. It contained only 40K FPGA gates and 128KB RAM, and was only capable of implementing small systems. Further, constructed from a standard rapid prototyping board plus other components and software, the TM-1 was difficult to use and required that the user be physically present to operate the machine.
Reference: [8] <author> P. Chan and M. Schlag, </author> <booktitle> Architectural Tradeoffs in Programmable-device-Based Computing Systems, in Proc. FPGAs for Custom Computing Machines, </booktitle> <year> 1993, </year> <pages> pp 152-161 </pages>
Reference-contexts: A full crossbar is not scalable or modular, as the amount of routing hardware grows as , so the size of each module grows as . The next simplest routing architecture is a partial crossbar, also related to a folded Clos network [1] <ref> [8] </ref>. A Clos network converts a 32 300 9600= 2 O n ( ) large crossbar into a collection of smaller crossbars, arranged as three stages of crossbars.
Reference: [9] <author> D. Galloway, </author> <title> The Transmogrifier C Hardware Description Language and Compiler for FPGAs, </title> <booktitle> IEEE Symposium on FPGAs for Custom Computing Machines, </booktitle> <volume> FCCM 95, </volume> <month> April </month> <year> 1995 </year>
Reference-contexts: Our most recent circuit is a triangle drawing circuit that rasterizes triangles into a frame buffer over a PCI bus and is displayed on a personal computer. This comprises about 700 lines of C code, compiled using the tmcc compiler <ref> [9] </ref>. We plan to perform minor hardware revisions and construct a full 1-M gate system within the next year. 7 Conclusions In this paper we have presented the architecture and design of the Transmogrifier-2, a next generation Field-Programmable rapid prototyping system.
Reference: [10] <author> M. Khalid and J. Rose, </author> <title> The Effect of Fixed I/O Pin Positioning on The Routability and Speed of FPGAs, </title> <booktitle> Proc. Canadian Workshop of Field-Programmable Devices, </booktitle> <volume> FPD 95, </volume> <pages> pp. 94-102. </pages>
Reference-contexts: the FPGAs, manufacturability concerns and usage of the system by users: We assume that the pin assignment on the FPGAs can be imposed by the software system - i.e. that both routability and speed of the individual FPGAs is maintained in the presence of arbitrary pin permutations, as studied in <ref> [10] </ref>. System I/O signals are assigned to specific pins as specified by the user. A single module contains both the FPGA on a board, and any programmable interconnect to support the FPGAs on the board in any sized system. (Here size refers to the number of modules).
References-found: 10

