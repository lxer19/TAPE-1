URL: ftp://arch.cs.ucdavis.edu/papers/multipath-vlsi92.ps.Z
Refering-URL: http://arch.cs.ucdavis.edu/~chong/pubs.html
Root-URL: http://www.cs.ucdavis.edu
Email: ftchong@ai.mit.edu, eran@ai.mit.edu, andre@ai.mit.edu  
Title: Fault Tolerance and Performance of Multipath Multistage Interconnection Networks  
Author: Thomas F. Knight, Jr. and John Savage, Frederic Chong, Eran Egozy, and Andre DeHon 
Address: 545 Technology Square Cambridge, MA 02139  
Affiliation: Artificial Intelligence Laboratory Massachusetts Institute of Technology  
Date: March 1992.  
Note: To appear in Advanced Research in VLSI and Parallel Systems 1992.  editors. MIT press,  
Abstract: In building a multiprocessor system, we can minimize the system's mean time to failure by providing an architecture resilient to component faults. We compare the fault tolerance and performance characteristics of various fault-tolerant multistage interconnection networks. We primarily focus on networks composed of dilated routing components. A dilated router features redundant outputs in each logical direction, and can thus be used to construct multipath networks. Multi-path networks have multiple paths from any input to any output. An interwired multipath network disperses its routers' redundant outputs to input ports of physically distinct components. We introduce a deterministic wiring scheme for routing interwired networks that maximizes the number of routing paths available for each endpoint. We compare the deterministically-wired network to both randomly-interwired networks and non-interwired multipath networks. We characterize fault tolerance by measuring the probability of a single endpoint disconnection as faults accumulate in the network. Our performance simulations are based on traffic from shared memory applications and include barrier synchronization to expose the effects of localized performance degradation. We find that at a minor performance cost, deterministically-interwired networks are more fault tolerant than randomly-interwired networks and non-interwired networks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. A. Bassalygo and M. S. Pinsker. </author> <title> Complexity of optimum nonblocking switching networks without reconnections. </title> <journal> Problems of Information Transmission, </journal> <volume> 9 </volume> <pages> 64-66, </pages> <year> 1974. </year>
Reference-contexts: We examine interwired and non-interwired multipath networks. An interwired network connects redundant outputs of each routing component to physically distinct components in the next stage of the network. Such interwiring was first used by Bassalygo and Pinsker <ref> [1] </ref>. Upfal [18] later used interwiring to form what he called multibutterflies. We introduce a deterministic algorithm for interwiring networks and compare it to the random interwiring methods presented by Leighton and Maggs [15]. <p> Bassalygo and Pinsker <ref> [1] </ref> used such interwiring to construct the first non-blocking networks of size O (N log N ) and depth O (log N ). Upfal [18] later used interwiring to form networks he called multibutterflies.
Reference: [2] <author> David Chaiken, Craig Fields, Kiyoshi Kurihara, and Anant Agarwal. </author> <title> Directory-Based Cache-Coherence in Large-Scale Multiprocessors. </title> <journal> IEEE Computer, </journal> <volume> 23(6) </volume> <pages> 41-58, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: To keep simulation time tractable, we use a variant of uniform traffic. Our simulation sends messages to random destinations in a uniform distribution. However, message lengths are randomly generated according to distributions derived from specific parallel applications. These application were taken from caching studies done in <ref> [2] </ref>. These studies simulate a shared memory architecture with coherent caches at each processing node. Cache-coherent shared memory systems utilize a small set of message types, each of a fixed length. The messages sent through the network read cache lines, write cache lines, and maintain cache coherency.
Reference: [3] <author> Chin Chi-Yuan and Kai Hwang. </author> <title> Connection principles for multipath packet switching networks. </title> <booktitle> In 10th Annual Symposium on Computer Architecture, </booktitle> <pages> pages 99-108, </pages> <year> 1984. </year>
Reference-contexts: Leighton and Maggs [15] suggest effective ways of wiring and using randomly-wired multibutterfly networks. An alternative approach to achieving fault-tolerant MINs is to construct extra-stage networks with more switching stages than are actually required to uniquely specify a destination ([13], <ref> [3] </ref> et. al.). The set of routing specifications that reach the same physical destination defines a class of equivalent paths. So long as one path of each such class remains intact in a faulty extra-stage network, any endpoint will be able to successfully route to its destination.
Reference: [4] <author> Andre DeHon, Thomas F. Knight Jr., and Henry Minsky. </author> <title> Fault-tolerant design for multistage routing networks. </title> <booktitle> In International Symposium on Shared Memory Multiprocessing. Information Processing Society of Japan, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: In such systems, other metrics such as the number of surviving processors after network disconnection are important as well. Fault tolerance becomes increasingly important as networks become large. The wiring techniques we have presented are applicable to a wider range of networks than traditional MINs. Fat-trees [16] <ref> [4] </ref> are an example of a highly scalable network which would benefit from the interwiring described here. As system size increases, a number of additional issues arise. We can use hybrid interwiring schemes which combine the high fault tolerance of deterministic wiring with the robust performance of random wiring.
Reference: [5] <author> Andre DeHon, Thomas F. Knight Jr., and Henry Minsky. RNP: </author> <title> Fault tolerant routing protocol. </title> <type> Transit Note 41, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: The routers perform source-responsible, pipelined, circuit-switched routing. Data are pipelined between routers in adjacent stages of the network to improve throughput and available bandwidth. The circuit-switched, source-responsible protocol is simple and can be implemented very efficiently in VLSI hardware. The routing protocol assumed is described in detail in <ref> [5] </ref>. We have used this routing protocol in the VLSI routing component RN1 [17].
Reference: [6] <author> Robert Grondalski. </author> <title> A VLSI chip set for massively parallel architecture. </title> <booktitle> In IEEE International Solid-State Circuits Conference, </booktitle> <pages> pages 198-199, </pages> <year> 1987. </year>
Reference-contexts: Much previous work has been done on this class of networks. Kruskal and Snir [10] suggest using multiple copies of a MIN to provide fault tolerance. They also describe a network with dilated routing components and Grondalski <ref> [6] </ref> implements such a network. The Kappa network [9] also uses dilated routers to achieve fault-tolerant interconnect. Leighton and Maggs [15] suggest effective ways of wiring and using randomly-wired multibutterfly networks. <p> This successive subdivision can be easily seen in the networks shown in Figures 1 through 5. 3.1 Dilated Non-Interwired Network The dilated networks described in [10] <ref> [6] </ref> connect all outputs in a given logical direction to the same physical routing component in the subsequent stage of the network. The topology is thus identical to the corresponding non-dilated bidelta network [11]. Such networks gain performance by having multiple paths.
Reference: [7] <author> Joseph Y. Hui. </author> <title> Switching and Traffic Theory for Integrated Broadband Networks. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1990. </year>
Reference-contexts: As long as each pair of endpoints is connected by a path in at least one of the networks, the replicated network will remain complete. Replicated networks are used in the telecommunications field to minimize contention and increase available bandwidth over single-path networks <ref> [7] </ref>. A replicated network, where each subnetwork is constructed from 2 fi 2 routing components, is shown in Figure 3. 3.3 Randomly-Interwired Network An interwired network takes advantage of the redundant outputs of dilated routing components and connects them to physically distinct components in the next stage of the network.
Reference: [8] <author> Nabil Kahale. </author> <title> Better expansion for Ramanujan graphs. </title> <booktitle> In 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 398-404. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1991. </year>
Reference-contexts: Good fault tolerance is an inherent property of high group expansion [15]. Deterministic construction of graphs with high group expansion is a difficult problem. Recent work <ref> [8] </ref> describes a deterministic algorithm based upon Ramanu-jan graphs which, unfortunately, does not provide as much expansion as random multibutterfly generation. A randomly generated multibutterfly has a high probability of possessing high group expansion.
Reference: [9] <author> S.C. Kothari, G.M. Prabhu, and R. Roberts. </author> <title> The kappa network with fault-tolerant destination tag algorithm. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(5) </volume> <pages> 612-617, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Much previous work has been done on this class of networks. Kruskal and Snir [10] suggest using multiple copies of a MIN to provide fault tolerance. They also describe a network with dilated routing components and Grondalski [6] implements such a network. The Kappa network <ref> [9] </ref> also uses dilated routers to achieve fault-tolerant interconnect. Leighton and Maggs [15] suggest effective ways of wiring and using randomly-wired multibutterfly networks.
Reference: [10] <author> Clyde P. Kruskal and Marc Snir. </author> <title> The performance of multistage interconnection networks for multiprocessors. </title> <journal> IEEE transactions on Computers, </journal> <volume> C-32(12):1091-1098, </volume> <month> December </month> <year> 1983. </year>
Reference-contexts: Figures 1 through 5 show MINs each of which has two connections from and to each endpoint. Much previous work has been done on this class of networks. Kruskal and Snir <ref> [10] </ref> suggest using multiple copies of a MIN to provide fault tolerance. They also describe a network with dilated routing components and Grondalski [6] implements such a network. The Kappa network [9] also uses dilated routers to achieve fault-tolerant interconnect. <p> This successive subdivision can be easily seen in the networks shown in Figures 1 through 5. 3.1 Dilated Non-Interwired Network The dilated networks described in <ref> [10] </ref> [6] connect all outputs in a given logical direction to the same physical routing component in the subsequent stage of the network. The topology is thus identical to the corresponding non-dilated bidelta network [11]. Such networks gain performance by having multiple paths. <p> Two non-dilated four-stage networks connecting 16 endpoints are attached together at the endpoints. Each component is a 2 fi 2, dilation-1 crossbar. 3.2 Replicated Network In a replicated network, such as the ones proposed by Kruskal and Snir <ref> [10] </ref>, multiple single-path networks are used to achieve fault tolerance. Each single-path network is a bidelta network using dilation-1 crossbar switches. Each endpoint gets one connection to and from each of the single-path networks. An endpoint chooses which network to use when it needs to make a connection.
Reference: [11] <author> Clyde P. Kruskal and Marc Snir. </author> <title> A unified theory of interconnection network structure. </title> <booktitle> In Theoretical Computer Science, </booktitle> <pages> pages 75-94, </pages> <year> 1986. </year>
Reference-contexts: In this section, we describe these strategies and show an example of each A dilated, non-interwired four-stage network connecting 16 endpoints. Each component is a 4 fi 2, dilation-2 crossbar. network. As with all bidelta <ref> [11] </ref> networks, each stage in these multipath networks routes by successively subdividing the set of possible destinations into a number of equivalence classes equal to the radix of the routing components. For example, consider a radix-4 network. When connections enter the network, any input can reach any destination. <p> The topology is thus identical to the corresponding non-dilated bidelta network <ref> [11] </ref>. Such networks gain performance by having multiple paths. These networks can also tolerate some faults in the wiring between components. Unfortunately, these networks are just as susceptible to component failures as non-multipath networks.
Reference: [12] <author> Vijay P. Kumar and Andrew L. Reibman. </author> <title> Failure dependent performance analysis of a fault-tolerant multistage interconnection network. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(12) </volume> <pages> 1703-1713, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: Any more traffic the network can handle will not result in any increase in useful work. Since we model an architecture in which memory is contained within each processing node, our I/O bandwidth metric is analogous to memory bandwidth metrics used by [14] and <ref> [12] </ref>. We also calculate average message latencies. Latencies are measured from time of message injection into the network until time of message completion, which includes acknowledgment from the receiver. Note that our latencies vary with the message lengths of each application. <p> It is important to eliminate simulation skew because it can mask the effects of localized network degradation. Analytic models suggest that faults and con gestion may severely affect the performance observed by specific destination nodes while leaving others largely unaffected <ref> [12] </ref>. Without synchronization, such localized degradation would be lost in the average I/O bandwidth utilization.
Reference: [13] <author> Duncan Lawrie and Krishnan Padmanabhan. </author> <title> A class of redundant path multistage interconnection networks. </title> <journal> IEEE Tr. on Computers, </journal> <volume> C-32(12):1099-1108, </volume> <month> December </month> <year> 1983. </year>
Reference: [14] <author> Tom Leighton, Derek Lisinski, and Bruce Maggs. </author> <title> Empirical evaluation of randomly-wired multistage networks. </title> <booktitle> In International Conference on Computer Design: VLSI in Computers and Processors. IEEE, </booktitle> <year> 1990. </year>
Reference-contexts: For randomly-wired multibutterflies, Leighton, Lisinski and Maggs <ref> [14] </ref> found promising results from simulating 1024 node networks under some simple models of network architecture and utilization. We investigate the empirical performance of several multipath networks under a specific architectural model. We attempt to derive efficient, yet realistic, simulations of network utilization by modeling several 64-processor, shared memory applications. <p> Any more traffic the network can handle will not result in any increase in useful work. Since we model an architecture in which memory is contained within each processing node, our I/O bandwidth metric is analogous to memory bandwidth metrics used by <ref> [14] </ref> and [12]. We also calculate average message latencies. Latencies are measured from time of message injection into the network until time of message completion, which includes acknowledgment from the receiver. Note that our latencies vary with the message lengths of each application. <p> Intuitively, the effects hot-spots are very similar to component failures. Patterns such as matrix transpose have been shown perform well on randomly-wired multibutterflies by <ref> [14] </ref>. Further investigation of non-uniform loading is merited. Additionally, our completeness metric assumes that a network is unusable when any input is disconnected from any output. This may not be true in the case of reconfigurable systems.
Reference: [15] <author> Tom Leighton and Bruce Maggs. </author> <title> Expanders might be practical: fast algorithms for routing around faults on multibutterflies. </title> <booktitle> In IEEE 30th Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1989. </year>
Reference-contexts: Such interwiring was first used by Bassalygo and Pinsker [1]. Upfal [18] later used interwiring to form what he called multibutterflies. We introduce a deterministic algorithm for interwiring networks and compare it to the random interwiring methods presented by Leighton and Maggs <ref> [15] </ref>. We also examine replicated networks where multiple single-path networks are attached together at the endpoints to form a multipath network. To measure fault tolerance, we use the simple fault metric of completeness cou-pled with random fault generation to probabilistically quantify the number of faults a given network can sustain. <p> Kruskal and Snir [10] suggest using multiple copies of a MIN to provide fault tolerance. They also describe a network with dilated routing components and Grondalski [6] implements such a network. The Kappa network [9] also uses dilated routers to achieve fault-tolerant interconnect. Leighton and Maggs <ref> [15] </ref> suggest effective ways of wiring and using randomly-wired multibutterfly networks. An alternative approach to achieving fault-tolerant MINs is to construct extra-stage networks with more switching stages than are actually required to uniquely specify a destination ([13], [3] et. al.). <p> Bassalygo and Pinsker [1] used such interwiring to construct the first non-blocking networks of size O (N log N ) and depth O (log N ). Upfal [18] later used interwiring to form networks he called multibutterflies. Leighton and Maggs <ref> [15] </ref> further analyzed the high group expansion (or ff-fi expansion) of these randomly-interwired networks. Group expansion is a description of the degree to which any subset of components in one stage will fan out into the next stage. <p> Good fault tolerance is an inherent property of high group expansion <ref> [15] </ref>. Deterministic construction of graphs with high group expansion is a difficult problem. Recent work [8] describes a deterministic algorithm based upon Ramanu-jan graphs which, unfortunately, does not provide as much expansion as random multibutterfly generation. A randomly generated multibutterfly has a high probability of possessing high group expansion. <p> Consequently, it is common practice to randomly generate multibutterfly networks until one is found with the desired group expansion. We use a heuristic algorithm based on the random interwiring ideas presented in <ref> [15] </ref>. Specifically, we constrain every router to send its redundant output paths to physically distinct components in the next stage, thus improving group expansion over a purely random interwiring scheme. Figure 4 shows the algorithm used to generate a randomly interwired network.
Reference: [16] <author> Charles E. Leiserson. Fat-trees: </author> <title> Universal networks for hardware efficient supercomputing. </title> <journal> IEEE transactions on Computers, </journal> <volume> C-34(10):892-901, </volume> <month> October </month> <year> 1985. </year>
Reference-contexts: In such systems, other metrics such as the number of surviving processors after network disconnection are important as well. Fault tolerance becomes increasingly important as networks become large. The wiring techniques we have presented are applicable to a wider range of networks than traditional MINs. Fat-trees <ref> [16] </ref> [4] are an example of a highly scalable network which would benefit from the interwiring described here. As system size increases, a number of additional issues arise. We can use hybrid interwiring schemes which combine the high fault tolerance of deterministic wiring with the robust performance of random wiring.
Reference: [17] <author> Henry Minsky, Andre DeHon, and Thomas F. Knight Jr. RN1: </author> <title> Low-latency, dilated, crossbar router. In Hot Chips Symposium III, </title> <year> 1991. </year>
Reference-contexts: The circuit-switched, source-responsible protocol is simple and can be implemented very efficiently in VLSI hardware. The routing protocol assumed is described in detail in [5]. We have used this routing protocol in the VLSI routing component RN1 <ref> [17] </ref>. An RN1 routing component can be configured to act as a single 8-input, radix-4, dilation-2 routing component or as a pair of independent 4-input, radix-4, dilation-1 routing components. 3 Network Wiring We consider four basic wiring strategies for building multipath multistage routing networks.
Reference: [18] <author> E. Upfal. </author> <title> An O(log N ) deterministic packet routing scheme. </title> <booktitle> In 21st Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 241-250. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: We examine interwired and non-interwired multipath networks. An interwired network connects redundant outputs of each routing component to physically distinct components in the next stage of the network. Such interwiring was first used by Bassalygo and Pinsker [1]. Upfal <ref> [18] </ref> later used interwiring to form what he called multibutterflies. We introduce a deterministic algorithm for interwiring networks and compare it to the random interwiring methods presented by Leighton and Maggs [15]. <p> Bassalygo and Pinsker [1] used such interwiring to construct the first non-blocking networks of size O (N log N ) and depth O (log N ). Upfal <ref> [18] </ref> later used interwiring to form networks he called multibutterflies. Leighton and Maggs [15] further analyzed the high group expansion (or ff-fi expansion) of these randomly-interwired networks.
References-found: 18

