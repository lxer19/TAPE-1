URL: http://theory.lcs.mit.edu/~madhu/papers/cgks.ps
Refering-URL: http://theory.lcs.mit.edu/~madhu/papers.html
Root-URL: 
Email: Email: eyalk@cs.technion.ac.il  Email: madhu@watson.ibm.com  
Phone: -IBM  
Title: Private Information Retrieval two database scheme with communication complexity of O(n 1=3 A scheme for
Author: Benny Chor Oded Goldreich Eyal Kushilevitz Madhu Sudan 
Web: http://www.cs.technion.ac.il/~eyalk  
Address: Israel.  P.O. Box 218, Yorktown Heights, NY 10598.  
Affiliation: Computer Science Dept., Technion, Haifa,  Research Division, T.J. Watson Research Center,  
Note: A  
Date: February 12, 1996  
Abstract: Publicly accessible databases are an indispensable resource for retrieving up to date information. But they also pose a significant risk to the privacy of the user, since a curious database operator can follow the user's queries and infer what the user is after. Indeed, in cases where the users' intentions are to be kept secret, users are often cautious about accessing the database. It can be shown that when accessing a single database, to completely guarantee the privacy of the user, the whole database should be downloaded , namely n bits should be communicated (where n is the number of bits in the database). In this work, we investigate whether by replicating the database, more efficient solutions to the private retrieval problem can be obtained. We describe schemes that enable a user to access k replicated copies of a database (k 2) and privately retrieve information stored in the database. This means that each individual database gets no information on the identity of the item retrieved by the user. Our schemes use the replication to gain substantial saving. In particular, we have 3 log 2 n databases with polylogarithmic (in n) communication complexity. fl A preliminary version of this paper appeared in Proc. of 36th IEEE Conference on the Foundations of Computer Science (FOCS), pp. 41-50, October 1995. y Computer Science Dept., Technion, Haifa, Israel. Email: benny@cs.technion.ac.il z Computer Science and Applied Math. Dept., Weizmann Institute of Science, Rehovot, Israel. Supported by grant No. 92-00226 from the Israel-US Binational Science Foundation (BSF), Jerusalem, Israel. Email: oded@wisdom.weizmann.ac.il 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abadi M., J. Feigenbaum, and J. Kilian. </author> <title> On Hiding Information from an Oracle. </title> <journal> JCSS, </journal> <volume> 39:1, </volume> <pages> pp. 21|50, </pages> <year> 1989. </year>
Reference-contexts: To conclude, using the results of [5] one can get much better private information retrieval schemes than those that can be obtained using [16], but still not as good as the schemes constructed in our paper. In <ref> [17, 1, 6, 7] </ref> the instance hiding problem is introduced and studied. In this problem, a computationally bounded player U that holds an instance i wishes to compute a known function f on input i.
Reference: [2] <author> N. Adam, and J. Wortmann. </author> <title> Security Control Methods for Statistical Databases: A Comparative Study. </title> <journal> ACM Computing Surveys, </journal> <volume> 21:4, </volume> <pages> pp. 515|555, </pages> <year> 1989. </year>
Reference-contexts: A lot of research was devoted to methods that protect the database against a "curious" user. For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., <ref> [2, 9, 10, 11, 18] </ref> and [19, Section 10.5]). It may seem surprising at first glance that there are no methods to protect the privacy of the user.
Reference: [3] <author> L. Babai, L. Fortnow, and C. Lund. </author> <title> Non-deterministic exponential time has two-prover interactive protocols. Computational Complexity, </title> <editor> v. </editor> <volume> 1, </volume> <pages> pp. 3-40, </pages> <year> 1991. </year>
Reference-contexts: The scheme is based on the method of low-degree polynomial interpolation, originating from [6] and extensively used thereafter (see for example <ref> [15, 3, 4, 12] </ref>). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2.
Reference: [4] <author> L. Babai, L. Fortnow, L. Levin, and M. Szegedy. </author> <title> Checking computations in polyloga-rithmic time. </title> <booktitle> STOC, </booktitle> <year> 1991. </year>
Reference-contexts: The scheme is based on the method of low-degree polynomial interpolation, originating from [6] and extensively used thereafter (see for example <ref> [15, 3, 4, 12] </ref>). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2.
Reference: [5] <author> L. Babai, P. Kimmel, and S. V. Lokam. </author> <title> Simultaneous Messages vs. Communication. </title> <booktitle> STACS, </booktitle> <year> 1995. </year>
Reference-contexts: He sends j to the first database, ` to the second and the three of them execute the protocol. This solves the problem with o (n) bits while maintaining privacy. Independently of our work, Babai, Kimmel, and Lokam <ref> [5] </ref> studied the following problem related to the one studied in [16] (where, again, the motivation comes from complexity theory). There are k + 1 players D 1 ; : : : ; D k and U . <p> He then sends to the j-th database all the indices but i j , and the databases execute the protocol. Babai et al. <ref> [5] </ref> obtain the following results: for 2 k &lt; log 2 n players the total communication is O (kn H 2 (1=(k+1)) ) (where H 2 () is the Binary Entropy Function), and for k log 2 n the total communication is 2 log 2 n. <p> For k = c log 2 n the communication is polylogarithmic (note however, that the transformation into a private information retrieval scheme will cost additional c 2 log 3 2 n bits in this case). To conclude, using the results of <ref> [5] </ref> one can get much better private information retrieval schemes than those that can be obtained using [16], but still not as good as the schemes constructed in our paper. In [17, 1, 6, 7] the instance hiding problem is introduced and studied.
Reference: [6] <author> D. Beaver and J. Feigenbaum. </author> <title> Hiding Instances in Multioracle Queries. </title> <booktitle> STACS, </booktitle> <year> 1990. </year> <month> 18 </month>
Reference-contexts: To conclude, using the results of [5] one can get much better private information retrieval schemes than those that can be obtained using [16], but still not as good as the schemes constructed in our paper. In <ref> [17, 1, 6, 7] </ref> the instance hiding problem is introduced and studied. In this problem, a computationally bounded player U that holds an instance i wishes to compute a known function f on input i. <p> In this sense the instance hiding model is related to the model of private information retrieval. Some of the techniques used in <ref> [6, 7] </ref> are relevant to our problem, especially the use of low degree polynomials, introduced by Beaver and Feigenbaum [6], and further developed by Beaver, Feigenbaum, Kilian and Rogaway [7]. <p> In this sense the instance hiding model is related to the model of private information retrieval. Some of the techniques used in [6, 7] are relevant to our problem, especially the use of low degree polynomials, introduced by Beaver and Feigenbaum <ref> [6] </ref>, and further developed by Beaver, Feigenbaum, Kilian and Rogaway [7]. In particular, the scheme of [6] for 1 + log 2 n databases is essentially the one we use as our starting point in Subsection 4.1. <p> Some of the techniques used in [6, 7] are relevant to our problem, especially the use of low degree polynomials, introduced by Beaver and Feigenbaum <ref> [6] </ref>, and further developed by Beaver, Feigenbaum, Kilian and Rogaway [7]. In particular, the scheme of [6] for 1 + log 2 n databases is essentially the one we use as our starting point in Subsection 4.1. <p> The scheme is based on the method of low-degree polynomial interpolation, originating from <ref> [6] </ref> and extensively used thereafter (see for example [15, 3, 4, 12]). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. <p> method of low-degree polynomial interpolation, originating from <ref> [6] </ref> and extensively used thereafter (see for example [15, 3, 4, 12]). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2.
Reference: [7] <author> D. Beaver, J. Feigenbaum, J. Kilian and P. Rogaway. </author> <title> Security with Low Communica--tion Overhead. </title> <booktitle> CRYPTO, </booktitle> <year> 1990. </year>
Reference-contexts: To conclude, using the results of [5] one can get much better private information retrieval schemes than those that can be obtained using [16], but still not as good as the schemes constructed in our paper. In <ref> [17, 1, 6, 7] </ref> the instance hiding problem is introduced and studied. In this problem, a computationally bounded player U that holds an instance i wishes to compute a known function f on input i. <p> In this sense the instance hiding model is related to the model of private information retrieval. Some of the techniques used in <ref> [6, 7] </ref> are relevant to our problem, especially the use of low degree polynomials, introduced by Beaver and Feigenbaum [6], and further developed by Beaver, Feigenbaum, Kilian and Rogaway [7]. <p> Some of the techniques used in [6, 7] are relevant to our problem, especially the use of low degree polynomials, introduced by Beaver and Feigenbaum [6], and further developed by Beaver, Feigenbaum, Kilian and Rogaway <ref> [7] </ref>. In particular, the scheme of [6] for 1 + log 2 n databases is essentially the one we use as our starting point in Subsection 4.1. From the construction in [7] it is possible to derive a private information retrieval scheme for k (constant) databases with O (n 1=(k1) ) <p> of low degree polynomials, introduced by Beaver and Feigenbaum [6], and further developed by Beaver, Feigenbaum, Kilian and Rogaway <ref> [7] </ref>. In particular, the scheme of [6] for 1 + log 2 n databases is essentially the one we use as our starting point in Subsection 4.1. From the construction in [7] it is possible to derive a private information retrieval scheme for k (constant) databases with O (n 1=(k1) ) communication (see Remark 5.2 in [7]). In fact the scheme shown here in Subsection 4.2 can be considered an improved variant of their construction. <p> From the construction in <ref> [7] </ref> it is possible to derive a private information retrieval scheme for k (constant) databases with O (n 1=(k1) ) communication (see Remark 5.2 in [7]). In fact the scheme shown here in Subsection 4.2 can be considered an improved variant of their construction. It should be emphasized that despite these similarities, there are substantial differences between the models and between the quality of the results. <p> This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2. This scheme is a variant of the one presented in <ref> [7] </ref>. 4.1 A Simple Scheme For log 2 n + 1 Databases Supposing that n = 2 s , we associate the set [n] f0; 1g s with the set of functions from [s] to f0; 1g. <p> We want the polynomial f i j (z) to be of degree k 1, with ffi j;i as its free term. To achieve this, we define f i Y f i 2 The scheme from <ref> [7] </ref> is also similar in spirit and can be thought of as using a representation of integers with s-bit long sequences which are divided into k 1 blocks of length s=(k 1) and any block having a single 1. 9 There are exactly k 1 indices with j (`) = 1.
Reference: [8] <author> S. Ceri and G. Pelagatti. </author> <title> Distributed Database Principles & Systems. </title> <publisher> McGraw Hill, </publisher> <year> 1984. </year>
Reference-contexts: Clearly, this is too much communication overhead, which makes it practically unacceptable. The rapid development of distributed databases (see <ref> [8] </ref>) and all kind of data-services ("information highways") results in many scenarios in which the same database is replicated in several sites. This raises hope to get around the difficulty of achieving privacy in the single database scenario.
Reference: [9] <author> F. Chin. </author> <title> Security Problems on Inference Control for SUM, MAX, and MIN Queries. </title> <journal> JACM, </journal> <volume> 33:3, </volume> <pages> pp. 451|464, </pages> <year> 1986. </year>
Reference-contexts: A lot of research was devoted to methods that protect the database against a "curious" user. For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., <ref> [2, 9, 10, 11, 18] </ref> and [19, Section 10.5]). It may seem surprising at first glance that there are no methods to protect the privacy of the user. <p> We also remark that some of our schemes are based on exclusive-or (linear summations, or sum) queries; this type of queries is very common and is actually implemented in several "real-world" databases (see <ref> [9, 11, 19] </ref>). 1.1 Related Work For the case of k = 2 (i.e., two databases), a first indication that something better than the user asking for a copy of x can be done is given by a recent result of Pudlak and Rodl [16].
Reference: [10] <author> D. Denning. </author> <title> Cryptography and Data Security. </title> <publisher> Addison-Wesley, </publisher> <year> 1982. </year>
Reference-contexts: A lot of research was devoted to methods that protect the database against a "curious" user. For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., <ref> [2, 9, 10, 11, 18] </ref> and [19, Section 10.5]). It may seem surprising at first glance that there are no methods to protect the privacy of the user.
Reference: [11] <author> D. Dobkin, A. K. Jones, and R. J. Lipton. </author> <title> Secure Databases: Protection Against User Influence. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 4:1, </volume> <pages> pp. 97|106, </pages> <year> 1979. </year>
Reference-contexts: A lot of research was devoted to methods that protect the database against a "curious" user. For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., <ref> [2, 9, 10, 11, 18] </ref> and [19, Section 10.5]). It may seem surprising at first glance that there are no methods to protect the privacy of the user. <p> We also remark that some of our schemes are based on exclusive-or (linear summations, or sum) queries; this type of queries is very common and is actually implemented in several "real-world" databases (see <ref> [9, 11, 19] </ref>). 1.1 Related Work For the case of k = 2 (i.e., two databases), a first indication that something better than the user asking for a copy of x can be done is given by a recent result of Pudlak and Rodl [16].
Reference: [12] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-Complete. </title> <booktitle> FOCS, </booktitle> <year> 1991. </year>
Reference-contexts: The scheme is based on the method of low-degree polynomial interpolation, originating from [6] and extensively used thereafter (see for example <ref> [15, 3, 4, 12] </ref>). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2.
Reference: [13] <author> R. G. Gallager. </author> <title> Information Theory and Reliable Communication. </title> <publisher> John-Wiley and Sons, </publisher> <address> New-York, </address> <year> 1968. </year>
Reference-contexts: On the other hand, since every radius 1 ball contains exactly d + 1 points in f0; 1g d , the number of codewords k satisfies k 2 d d+1 (this is the volume bound cf., <ref> [13] </ref>). This lower bound is not always attainable. The construction given above, for d = 3, uses the fact that f (0; 0; 0); (1; 1; 1)g is a covering code with radius 1 of f0; 1g 3 .
Reference: [14] <author> I. S. Honkala. </author> <title> Modified Bounds for Covering Codes. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37:2, </volume> <pages> pp. 351|365, </pages> <year> 1991. </year>
Reference-contexts: We note that all these covering codes are optimal (minimum size) <ref> [14] </ref>. For d = 3 and d = 7, these are Hamming Codes which are perfect codes (all balls are disjoint). <p> sets S (c j )'s so that S (c j ) B (c j ; 1), for every j = 1; :::; k. 6 word radius 2 covering code of f0; 1g d would yield communication complexity k d n 1=d +k d Reviewing the parameters of the best codes <ref> [14] </ref>, they turn out to be inferior for our purposes than the radius 1 codes. The results using the covering codes methods are most appealing for the cases of 2 and 4 databases. These cases are summarized in the next corollary to Theorem 1.
Reference: [15] <author> C. Lund, L. Fortnow, H. Karloff, and N. Nisan. </author> <title> Algebraic Methods for Interactive Proof Systems. </title> <booktitle> FOCS, </booktitle> <year> 1990. </year>
Reference-contexts: The scheme is based on the method of low-degree polynomial interpolation, originating from [6] and extensively used thereafter (see for example <ref> [15, 3, 4, 12] </ref>). We start by presenting a simple version for k = log 2 n + 1 databases. This version is essentially the one used for log 2 n + 1 oracles in [6]. An improved and more general scheme is developed in Subsection 4.2.
Reference: [16] <author> P. Pudl ak, and V. R odl. </author> <title> Modified Ranks of Tensors and the Size of Circuits. </title> <booktitle> STOC, </booktitle> <year> 1993. </year>
Reference-contexts: implemented in several "real-world" databases (see [9, 11, 19]). 1.1 Related Work For the case of k = 2 (i.e., two databases), a first indication that something better than the user asking for a copy of x can be done is given by a recent result of Pudlak and Rodl <ref> [16] </ref>. With a complexity-theory motivation in mind they studied the following question. There are three players: D 1 that holds a string x and an index j, D 2 that holds the same string x and an index `, and U that knows both j and `. <p> He sends j to the first database, ` to the second and the three of them execute the protocol. This solves the problem with o (n) bits while maintaining privacy. Independently of our work, Babai, Kimmel, and Lokam [5] studied the following problem related to the one studied in <ref> [16] </ref> (where, again, the motivation comes from complexity theory). There are k + 1 players D 1 ; : : : ; D k and U . The player U holds k indices i 1 ; : : :; i k (each is an ` bit string). <p> To conclude, using the results of [5] one can get much better private information retrieval schemes than those that can be obtained using <ref> [16] </ref>, but still not as good as the schemes constructed in our paper. In [17, 1, 6, 7] the instance hiding problem is introduced and studied. In this problem, a computationally bounded player U that holds an instance i wishes to compute a known function f on input i.
Reference: [17] <author> R.L. Rivest, L. Adleman, </author> <title> and M.L. Dertouzos. On Data Banks and Privacy Homomor-phisms, Foundations of Secure Computation (eds., </title> <editor> R. DeMillo, D. Dobkin, A. Jones, and R. Lipton). </editor> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: To conclude, using the results of [5] one can get much better private information retrieval schemes than those that can be obtained using [16], but still not as good as the schemes constructed in our paper. In <ref> [17, 1, 6, 7] </ref> the instance hiding problem is introduced and studied. In this problem, a computationally bounded player U that holds an instance i wishes to compute a known function f on input i.
Reference: [18] <author> P. Tendick, and N. Matloff. </author> <title> A Modified Random Perturbation Method for Database Security. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19:1, </volume> <pages> pp. 47|63, </pages> <year> 1994. </year>
Reference-contexts: A lot of research was devoted to methods that protect the database against a "curious" user. For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., <ref> [2, 9, 10, 11, 18] </ref> and [19, Section 10.5]). It may seem surprising at first glance that there are no methods to protect the privacy of the user.
Reference: [19] <author> J. D. Ullman. </author> <booktitle> Principles of Database Systems. Second edition, </booktitle> <year> 1982. </year>
Reference-contexts: For example, methods that do not allow a user to ask queries to a statistical database in a way that enables him to reconstruct the value of particular entities (e.g., [2, 9, 10, 11, 18] and <ref> [19, Section 10.5] </ref>). It may seem surprising at first glance that there are no methods to protect the privacy of the user. <p> We also remark that some of our schemes are based on exclusive-or (linear summations, or sum) queries; this type of queries is very common and is actually implemented in several "real-world" databases (see <ref> [9, 11, 19] </ref>). 1.1 Related Work For the case of k = 2 (i.e., two databases), a first indication that something better than the user asking for a copy of x can be done is given by a recent result of Pudlak and Rodl [16].
References-found: 19

