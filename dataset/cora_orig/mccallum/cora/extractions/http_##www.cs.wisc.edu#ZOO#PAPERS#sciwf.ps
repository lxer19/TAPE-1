URL: http://www.cs.wisc.edu/ZOO/PAPERS/sciwf.ps
Refering-URL: http://www.cs.wisc.edu/ZOO/papers.html
Root-URL: http://www.cs.wisc.edu
Email: fnatassa,yannis,mirong@cs.wisc.edu  
Title: Scientific Workflow Management by Database Management  
Author: Anastassia Ailamaki Yannis E. Ioannidis Miron Livny 
Address: Madison, WI 53706  
Affiliation: Department of Computer Sciences University of Wisconsin  
Abstract: In several working environments, production involves repeated executions of certain procedures. A workflow describes the individual tasks performed in these procedures and their interrelationships. Current Workflow Management Systems (WFMSs) use a Database Management System (DBMS) to store task descriptions, and implement all workflow functionality in modules that run on top of the DBMS. Motivated by scientific workflows, we propose a much more DBMS-centric architecture, in which conventional database technology provides much of the desired scientific WFMS functionality. A key element of our approach is viewing the workflow as a web of data objects interconnected with active links that carry process descriptions. The workflow is fully defined as a database schema, and its execution is the gradual buildup of an instance of this schema through the active object links. For our work, we use the modeling and querying tools of Horse, the object-oriented DBMS that we have developed in the context of the Zoo Desktop Experiment Management Environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Anderson, </author> <month> February </month> <year> 1997. </year> <institution> Soil Sciences Department, University of Wisconsin, </institution> <type> Madison (personal communication). </type>
Reference-contexts: Finally, in Section 8, we present a summary of our contributions and our future work plans. 2. A Workflow Example The example depicted in Figure 4 is an actual scientific workflow that captures the operation of an experimental study in the Soil Sciences Department of the Univ. of Wisconsin <ref> [1] </ref>. The objective of the experiment is to produce daily forecasts of near-surface temperatures in cranberry bogs in Wisconsin. These forecasts give cranberry farmers advance warning of over-night frost conditions 2 , so they can take action to protect their vines from frost damage. 1.
Reference: [2] <author> A. Bonner, A. Shrufi, and S. Rozen. LabFlow-1: </author> <title> a database benchmark for high-throughput workflow management. </title> <booktitle> In Proc. Fifth International Conference on Extending Database Technology, </booktitle> <pages> pages 463478, </pages> <address> Avignon, France, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: Scientific workflows have been explicitly addressed mainly by two projects: WASA [12] and LabFlow-1/LabBase <ref> [2] </ref>. But again, the goals and approach of these efforts have been different from ours. WASA uses a commercial WFMS on top of a DBMS extended by advanced features, and several user-interface, decision support, and analysis tools that offer a useful front-end to scientific work-flow management.
Reference: [3] <author> I. Chen and V. Markowitz. </author> <title> The Object-Protocol Model: Design, implementation, </title> <journal> and scientific applications. ACM Transactions on Information Systems, </journal> <volume> 20(5), </volume> <year> 1995. </year>
Reference-contexts: Finally, there are a few efforts in the scientific database area that have similarities with some aspects of our work, although they have not been directly addressing workflow issues. The OPM effort at LBNL is probably the closest to this effort <ref> [3] </ref>. OPM is prominent in the genome database community and is used to implement some of the most important international genome databases.
Reference: [4] <author> A.-N. </author> <title> Consortium. The active database management system manifesto. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 25(3), </volume> <month> September </month> <year> 1996. </year>
Reference-contexts: Thus, derivation rules in Moose are a rather restricted form of triggers <ref> [4] </ref>, in the sense that the only event that can trigger a rule is an insertion in a specific class.
Reference: [5] <author> J. Cushing, D. Maier, M. Rao, D. Abel, A. Feller, and M. De-Vaney. </author> <title> Computational proxies: Modeling scientific applications in object databases. </title> <booktitle> In Proc. Scientific and Statistical Database Management, </booktitle> <year> 1994. </year>
Reference-contexts: With respect to data models, the Extended Entity-Relationship (EER) model has also been enhanced with several features and used to model processes [10], again with no active features captured by the schema. Finally, with respect to invocations of external systems, computational proxies <ref> [5] </ref> have been proposed for interaction between a scientific DBMS and external chem 9 ical models. This is very similar to how the corresponding Zoo module operates to achieve the same goal.
Reference: [6] <author> D. Georgakopoulos, M. Hornick, and A. Sheth. </author> <title> An overview of workflow management: From process modeling to work-flow automation infrastructure. Distributed and Parallel Databases, </title> <address> 3:119153, </address> <year> 1995. </year>
Reference-contexts: We use this technology to design workflows and other workflow necessities as well, such as monitoring, VCR functionality, and dynamic evolution. The state-of-the-art in the workflow area is determined by commercial products <ref> [6] </ref>, whose goals, however, are very different from ours and include cooperative work, task routing, and data sharing in business environments.
Reference: [7] <author> D. Hollinsworth. </author> <title> The workflow reference model. </title> <type> Technical Report TC00-1003, Workflow Management Coalition, Avenue Marcel Thiry 204, </type> <address> 1200 Brussels, Belgium, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: Probably reacting to the predominant lack of commercial attention to issues like scalability, reliability, concurrency control, and recovery <ref> [7] </ref>, most research efforts have focused on interoperability, transaction management and high availability for business workflows, none of which is again among our interests. Characteristic is the fact that interoperability is the main goal of the Workflow Management Coalition [7], a standardization bureau that provides a generic reference model for workflows. <p> commercial attention to issues like scalability, reliability, concurrency control, and recovery <ref> [7] </ref>, most research efforts have focused on interoperability, transaction management and high availability for business workflows, none of which is again among our interests. Characteristic is the fact that interoperability is the main goal of the Workflow Management Coalition [7], a standardization bureau that provides a generic reference model for workflows. In general, existing commercial and research systems offer most of the functionality outlined in Section 3.
Reference: [8] <author> Y. Ioannidis, M. Livny, S. Gupta, and N. Ponnekanti. </author> <title> ZOO: A desktop experiment management environment. </title> <booktitle> In Proc. 22nd International VLDB Conference, </booktitle> <pages> pages 274285, </pages> <address> Bombay, India, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: As a proof of concept for the object view, we describe how workflows have been captured in the Horse object-oriented DBMS, which we have built as part of the Zoo Desktop Experiment Management Environment <ref> [8] </ref> 1 . <p> Horse is based on the Moose 3 object-oriented data model and the Fox 4 query language. Understanding the rest of the paper requires some familiarity with Moose and Fox, so their most important features are described below. More details about Moose and Fox can be found elsewhere <ref> [8, 14] </ref>. 4.1. Moose There are various kinds of object classes in Moose (tuple, collection or primitive). Objects from these classes are connected via binary relationships, three of which are relevant to this paper. <p> Clearly, our schema representation of a workflow makes auditing fall squarely into database technology. 6. System Status and Customized Installations Over the past few years, we have been implementing the Zoo system <ref> [8] </ref> , which has several features that are geared towards supporting the WFMS functionality discussed in Section 3. Currently, all aspects of specification, execution, and auditing are operational, including invoking external applications and status monitoring. Workflow evolution has been designed, but implementation has only just begun.
Reference: [9] <author> M. Livny et al. </author> <title> Devise: Integrated querying and visualization of large datasets. </title> <booktitle> In Proc. ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 301312, </pages> <address> Tus-con, AZ, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: With this feedback mechanism, the canopy-level forecast is updated continuously throughout the day. 5. Text files generated by CranEB are fed into the DEVise Visualization tool <ref> [9] </ref> that generate GIF plots of canopy temperature vs. time. These plots are then published on the Web, where they can be readily ac cessed by cranberry farmers throughout Wisconsin. In the sequel, we refer to this example as the cranberry workflow.
Reference: [10] <author> V. Markowitz. </author> <title> Representing processes in the extended entity-relationship model. </title> <booktitle> In Proc. IEEE International Conference on Data Engineering, </booktitle> <year> 1990. </year>
Reference-contexts: With respect to data models, the Extended Entity-Relationship (EER) model has also been enhanced with several features and used to model processes <ref> [10] </ref>, again with no active features captured by the schema. Finally, with respect to invocations of external systems, computational proxies [5] have been proposed for interaction between a scientific DBMS and external chem 9 ical models.
Reference: [11] <author> D. McCarthy and U. Dayal. </author> <title> The architecture of an active data base management system. </title> <booktitle> In ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 215224, </pages> <address> Portland, Oregon, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: To the contrary, we use the DBMS itself for all workflow activities, reaping the benefits of the database technology maturity and obtaining much of the desired functionality for free. A similar approach is taken by HiPAC <ref> [11] </ref>, an active DBMS that uses database rules to trigger database operations as well as external applications. HiPAC offers a more complete rule system than ZOO, which includes only rules that seem to be needed to run workflow tasks (as is the case with almost all of the active DBMSs).
Reference: [12] <author> C. Medeiros, G. Vossen, and M. Weske. WASA: </author> <title> A workflow-based architecture to support scientific database applications (extended abstract). </title> <editor> In N. Revell and A. Tjoa, editors, </editor> <booktitle> Proc. 6th DEXA Conference, </booktitle> <pages> pages 574583, </pages> <address> Lon-don, England, 1995. </address> <publisher> Springer LNCS 978. </publisher>
Reference-contexts: Scientific workflows have been explicitly addressed mainly by two projects: WASA <ref> [12] </ref> and LabFlow-1/LabBase [2]. But again, the goals and approach of these efforts have been different from ours. WASA uses a commercial WFMS on top of a DBMS extended by advanced features, and several user-interface, decision support, and analysis tools that offer a useful front-end to scientific work-flow management.
Reference: [13] <author> J. Meidanis, G. Vossen, and M. Weske. </author> <title> Using workflow management in DNA sequencing. </title> <booktitle> In Proc. 1st International Conference on Cooperative Information Systems (IFCIS), </booktitle> <pages> pages 114123, </pages> <address> Brussels, Belgium, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: WASA offers most of the functionality described in Section 3, although possibly restricted by the capabilities of the underlying WFMS <ref> [13] </ref>. LabBase is a DBMS specialized for use by genome laboratories, and LabFlow-1 is a database benchmark that tests the usability of storage managers to serve as a basis for WFMS development on top of them.
Reference: [14] <author> J. Wiener and Y. Ioannidis. </author> <title> A Moose and a Fox can aid scientists with data management problems. </title> <booktitle> In Proc. 4th International Workshop on Database Programming Languages, </booktitle> <pages> pages 376398, </pages> <address> New York, NY, </address> <month> August </month> <year> 1993. </year> <month> 10 </month>
Reference-contexts: Horse is based on the Moose 3 object-oriented data model and the Fox 4 query language. Understanding the rest of the paper requires some familiarity with Moose and Fox, so their most important features are described below. More details about Moose and Fox can be found elsewhere <ref> [8, 14] </ref>. 4.1. Moose There are various kinds of object classes in Moose (tuple, collection or primitive). Objects from these classes are connected via binary relationships, three of which are relevant to this paper.
References-found: 14

