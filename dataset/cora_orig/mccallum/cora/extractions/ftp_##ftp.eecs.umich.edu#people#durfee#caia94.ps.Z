URL: ftp://ftp.eecs.umich.edu/people/durfee/caia94.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/durfee/vita.html
Root-URL: http://www.cs.umich.edu
Email: sandip@kolkata.mcs.utulsa.edu durfee@engin.umich.edu  
Title: On the design of an adaptive meeting scheduler  
Author: Sandip Sen Edmund H. Durfee 
Address: 600 South College Avenue 1101 Beal Avenue Tulsa, OK 74104 Ann Arbor, MI 48109  
Affiliation: Dept of Mathematical Computer Sciences Department of EECS, University of Tulsa University of Michigan  
Abstract: We present design considerations for an automated meeting scheduling agent that processes meeting requests on behalf of its associated user. In our formulation of the meeting scheduling problem, distributed meeting scheduling agents, one per user, intelligently exchange information with each other to schedule meetings without compromising user-specified constraints. In this paper, we first enumerate various strategies we have investigated to focus distributed negotiation between scheduling agents. Next, we demonstrate the necessity for such a scheduler to be adaptive in its choice of options for the various strategy dimensions, so that it can perform effectively over time. In order to build an adaptive scheduler that can effectively choose from available strategy options, we develop quantitative performance estimates of these options using detailed probabilistic analysis. Results from these analyses are used to provide guidelines to choose the most appropriate strategy combination given current environmental conditions and local problem-solving states. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Bogart. </author> <title> Introductory Combinatorics. </title> <publisher> Pitman, </publisher> <address> Boston, MA, </address> <year> 1983. </year>
Reference-contexts: The probability that at least one of the events A 1 ; : : : ; A a (l;x) occurs can be calcu lated as follows. Algebraic counting techniques based on an inclusion-exclusion argument <ref> [1] </ref> can be used to show that, for n such events we have: P r (A 1 _ A 2 _ : : : _ A n ) P r (A 1 ^ A 2 ) P r (A i ^ A j ) . . . (2) We define p
Reference: [2] <author> S. E. Conry, R. A. Meyer, and V. R. Lesser. </author> <title> Multistage negotiation in distributed planning. </title> <editor> In A. H. Bond and L. Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 367-384. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1988. </year>
Reference-contexts: To facilitate information exchange, the agents need a common communication protocol for negotiating over meeting times. For our agents, we have chosen to adapt the multistage negotiation protocol <ref> [2] </ref>, which is a generalization of the contract net protocol [7]. In our protocol, each meeting has a particular agent who is responsible for it, called the host. The host contacts other attendees of the meeting (who are called invitees) to announce the meeting, and collects bids (availability information).
Reference: [3] <author> S. Sen. </author> <title> Predicting Tradeoffs in Contract-Based Distributed Scheduling. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: There are i multiplicative factors in the expression for P i . The jth factor in the expression, where j &gt; 1, is of the following form (see <ref> [3] </ref> for the proof) 2 : 1 P r (1ji; i 1; : : : ; i j + 2) P j1 y Q A n x y 1 Q A n x P j2 y Q A n x y 1 Q A n x : The denominator of the
Reference: [4] <author> S. Sen and E. H. Durfee. </author> <title> A formal study of distributed meeting scheduling: Preliminary results. </title> <booktitle> In Proceedings of the ACM Conference on Organizational Computing Systems '91, </booktitle> <pages> pages 55-68, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Our research involves developing automated software agents to handle some of the information processing needs of humans in organizations. In particular, we have been working on the design of an automated meeting scheduling agent that can schedule meetings on behalf of associated users <ref> [4, 6] </ref>. The agents preserve privacy requirements of users, and reveal only restricted amount of information about calendar states, as and when required, to schedule meetings with other users.
Reference: [5] <author> S. Sen and E. H. Durfee. </author> <title> A formal analysis of communication and commitment in distributed meeting scheduling. </title> <booktitle> In Working Papers of the 11th International Workshop on Distributed Artificial Intelligence, </booktitle> <pages> pages 333-342, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: is proposed by a host or invitee agent, that agent tentatively blocks it off on its calendar so no other meetings can be scheduled there) and noncommitted (times are not blocked off until full agreement on a meeting time is reached). 3 Adaptive scheduling Our analysis of various strategy options <ref> [5] </ref> show that no one strategy combination dominates another over all circumstances. Changing environmental factors like system load, organization size, etc., can produce a change in the strategy combination that will produce the best results on any given performance metric.
Reference: [6] <author> S. Sen and E. H. Durfee. </author> <title> The effects of search bias on flexibility in distributed scheduling. </title> <booktitle> In Working Papers of the 12th International Workshop on Distributed Artificial Intelligence, </booktitle> <pages> pages 321-334, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Our research involves developing automated software agents to handle some of the information processing needs of humans in organizations. In particular, we have been working on the design of an automated meeting scheduling agent that can schedule meetings on behalf of associated users <ref> [4, 6] </ref>. The agents preserve privacy requirements of users, and reveal only restricted amount of information about calendar states, as and when required, to schedule meetings with other users.
Reference: [7] <author> R. G. Smith. </author> <title> The contract net protocol: High-level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1104-1113, </volume> <month> Dec. </month> <year> 1980. </year>
Reference-contexts: To facilitate information exchange, the agents need a common communication protocol for negotiating over meeting times. For our agents, we have chosen to adapt the multistage negotiation protocol [2], which is a generalization of the contract net protocol <ref> [7] </ref>. In our protocol, each meeting has a particular agent who is responsible for it, called the host. The host contacts other attendees of the meeting (who are called invitees) to announce the meeting, and collects bids (availability information).
Reference: [8] <author> E. Taub. </author> <title> Sharing schedules. </title> <booktitle> MacUser, </booktitle> <pages> pages 155-162, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Our work promises to provide efficient automated meeting scheduling capabilities that are not available with the current top-of-the-line calendar management software <ref> [8] </ref>. 2 Distributed Meeting Scheduling The agents in a Distributed Meeting Scheduling (DMS) system exchange relevant information to build local schedules that fit into a globally consistent schedule. To facilitate information exchange, the agents need a common communication protocol for negotiating over meeting times.
References-found: 8

