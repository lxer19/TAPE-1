URL: http://www.cs.ucsd.edu/~mihir/papers/sym-enc.ps.gz
Refering-URL: http://www.cs.ucsd.edu/~mihir/papers/sym-enc.html
Root-URL: http://www.cs.ucsd.edu
Email: E-mail: rogaway@cs.ucdavis.edu.  
Title: Concrete Security Treatment of Symmetric Encryption: Analysis of the DES Modes of Operation  
Author: M. Bellare A. Desai E. Jokipii P. Rogaway 
Web: URL: http://wwwcsif.cs.ucdavis.edu/~rogaway.  
Address: CA 95616, USA.  
Affiliation: Dept. of Computer Science, Engineering II Bldg., University of California at Davis, Davis,  
Date: August 15, 1997  
Note: A  Supported in part by NSF CAREER Award CCR-9624560.  
Abstract: An extended abstract of this paper appears in Proceedings of the 38th Symposium on Foundations Abstract We study notions and schemes for symmetric (ie. private key) encryption in a concrete security framework. We give four different notions of security against chosen plaintext attack and analyze the concrete complexity of reductions among them, providing both upper and lower bounds, and obtaining tight relations. In this way we classify notions (even though polynomially reducible to each other) as stronger or weaker in terms of concrete security. Next we provide concrete security analyses of methods to encrypt using a block cipher, including the most popular encryption method, CBC. We establish tight bounds (meaning matching upper bounds and attacks) on the success of adversaries as a function of their resources. fl Dept. of Computer Science & Engineering, University of California at San Diego, 9500 Gilman Drive, La Jolla, CA 92093, USA. E-Mail: fmihir; adesai; ejg@cs.ucsd.edu. URL: http://www-cse.ucsd.edu/users/ fmihir; adesai; ejg. Supported in part by NSF CAREER Award CCR-9624439 and a 1996 Packard Foundation Fellowship in Science and Engineering. of Computer Science, IEEE, 1997. This is the full paper.
Abstract-found: 1
Intro-found: 1
Reference: [ACGS] <author> W. Alexi, B. Chor, O. Goldreich, C. Schnorr, </author> <title> "RSA and Rabin functions: Certain parts are as hard as the whole," </title> <journal> SIAM Journal on Computing Vol. </journal> <volume> 17, No. 2, </volume> <year> 1988, </year> <pages> pp. 194-209. </pages>
Reference-contexts: Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. <ref> [BG, ACGS, Y, GL, BR1] </ref>), based on various hard problems. Concrete security. <p> Also the flavor is different from us in that their concern is more the security you can get for a certain investment of randomness, and the treatment remains asymptotic. Curiously, some earlier works had a more concrete treatment: in the asymmetric encryption arena, Alexi et. al. <ref> [ACGS] </ref> were careful to specify the complexity of their reductions, a habit many later works unfortunately dropped. The construction of a pseudorandom generator from a one-way function [HILL] provides a solution for symmetric encryption starting from a one-way function.
Reference: [ANSI] <author> ANSI X3.106, </author> <title> "American National Standard for Information Systems Data Encryption Algorithm Modes of Operation," </title> <institution> American National Standards Institute, </institution> <year> 1983. </year>
Reference-contexts: A concrete security analysis of the CBC MAC is provided in [BKR]. (The CBC MAC should not be confused with CBC encryption: The former is a message authentication code.) We build on their techniques, but those techniques don't directly solve the problems here. CBC mode encryption is standardized in <ref> [ANSI, ISO, NBS] </ref>. 2 Notions of Encryption For all complexity measures fix some probabilistic RAM model. We adopt the convention that "time" refers to the actual running time plus the size of the code (relative to some fixed programming language). Oracle queries are answered in unit time.
Reference: [BCK] <author> M. Bellare, R. Canetti and H. </author> <title> Krawczyk "Psuedorandom functions revisited: The cascade construction and its concrete security," </title> <booktitle> Proceedings of the 37th Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1996. </year>
Reference-contexts: The approach 3 is non-asymptotic and applicable to functions with a finite domain. We will be concerned not only with proving security by exhibiting concrete bounds, but also with showing that these bounds are the best possible, which is done by exhibiting matching attacks. Again we follow works like <ref> [BGR, BCK] </ref>, who did this for certain message authentication schemes. <p> Although concrete security has been considered before in the context of scheme analysis <ref> [BKR, BGR, BCK, BR2] </ref>, this is the first work that considers it also for the purpose of relating different notions of security. That is, this is the first time notions are classified as weaker or stronger according to the complexity of the reductions between them.
Reference: [BGR] <author> M. Bellare, R. Gu erin and P. Rogaway, </author> <title> "XOR MACs: New methods for message authentication using finite pseudorandom functions," </title> <booktitle> Advances in Cryptology - Crypto 95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <editor> D. Coppersmith ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In particular, when reductions are not security-preserving it means that one must use a larger security parameter to be safe, reducing efficiency. Thus, in the end, one pays for inefficient reductions in either assurance or running time. Our approach for doing concrete security is that of <ref> [BKR, BGR] </ref>, wherein one parameterizes the resources involved and measures adversarial success by an explicit function on them. The approach 3 is non-asymptotic and applicable to functions with a finite domain. <p> The approach 3 is non-asymptotic and applicable to functions with a finite domain. We will be concerned not only with proving security by exhibiting concrete bounds, but also with showing that these bounds are the best possible, which is done by exhibiting matching attacks. Again we follow works like <ref> [BGR, BCK] </ref>, who did this for certain message authentication schemes. <p> Although concrete security has been considered before in the context of scheme analysis <ref> [BKR, BGR, BCK, BR2] </ref>, this is the first work that considers it also for the purpose of relating different notions of security. That is, this is the first time notions are classified as weaker or stronger according to the complexity of the reductions between them.
Reference: [BKR] <author> M. Bellare, J. Kilian and P. Rogaway, </author> <title> "The security of cipher block chaining," </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <editor> Y. Desmedt ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: In particular, when reductions are not security-preserving it means that one must use a larger security parameter to be safe, reducing efficiency. Thus, in the end, one pays for inefficient reductions in either assurance or running time. Our approach for doing concrete security is that of <ref> [BKR, BGR] </ref>, wherein one parameterizes the resources involved and measures adversarial success by an explicit function on them. The approach 3 is non-asymptotic and applicable to functions with a finite domain. <p> Although concrete security has been considered before in the context of scheme analysis <ref> [BKR, BGR, BCK, BR2] </ref>, this is the first work that considers it also for the purpose of relating different notions of security. That is, this is the first time notions are classified as weaker or stronger according to the complexity of the reductions between them. <p> We wish to see how the security of the encryption scheme depends on the assumed security of the PRF family. We define the concrete security of PRF and PRP families as in <ref> [BKR] </ref>, via parameterization of the time t 0 , number of oracle queries q 0 , and maximum advantage * 0 of the distinguisher. <p> In the current work existence is not the issue; we are interested in concrete security and the analysis of some particular schemes. A concrete security analysis of the CBC MAC is provided in <ref> [BKR] </ref>. (The CBC MAC should not be confused with CBC encryption: The former is a message authentication code.) We build on their techniques, but those techniques don't directly solve the problems here. <p> All these schemes are based on finite pseudorandom functions, a concrete security version of the original notion of pseudorandom functions [GGM] introduced by <ref> [BKR] </ref>. We thus begin with some necessary definitions, following the latter paper. Proofs of results given in this section are in Appendix B. 4.1 Finite PRFs and PRPs A function family is a multiset F of functions where all of the functions in F have the same domain and range. <p> The first is looking like a random function, the second is looking like a random permutation. Accordingly, we define Adv rf D (F ) = Dist D (F; R) Adv D (F ) = Dist D (F; P ) : Definition 5 [Concrete security of PRF/PRP families, <ref> [BKR] </ref>] Function family F is said to be a (t; q; *)-secure PRF (resp. PRP) family if for any distinguisher D who makes at most q oracle queries and runs in time at most t it is the case that Adv rf D (F ) * (resp.
Reference: [BR1] <author> M. Bellare and P. Rogaway, </author> <title> "Optimal asymmetric encryption How to encrypt with RSA," </title> <booktitle> Advances in Cryptology - Eurocrypt 95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 921, </volume> <editor> L. Guillou and J. Quisquater ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. <ref> [BG, ACGS, Y, GL, BR1] </ref>), based on various hard problems. Concrete security.
Reference: [BR2] <author> M. Bellare and P. Rogaway, </author> <title> "The exact security of digital signatures: How to sign with RSA and Rabin," </title> <booktitle> Advances in Cryptology - Eurocrypt 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1070, </volume> <editor> U. Maurer ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Although concrete security has been considered before in the context of scheme analysis <ref> [BKR, BGR, BCK, BR2] </ref>, this is the first work that considers it also for the purpose of relating different notions of security. That is, this is the first time notions are classified as weaker or stronger according to the complexity of the reductions between them.
Reference: [BG] <author> M. Blum and S. Goldwasser, </author> <title> "An efficient probabilistic public-key encryption scheme which hides all partial information," </title> <booktitle> Advances in Cryptology - Crypto 84 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 196, </volume> <editor> R. Blakely ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. <ref> [BG, ACGS, Y, GL, BR1] </ref>), based on various hard problems. Concrete security.
Reference: [DDN] <author> D. Dolev, C. Dwork and M. Naor, </author> <title> "Non-malleable cryptography," </title> <booktitle> Proceedings of the 23rd Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1991. </year>
Reference-contexts: We extend polynomial and semantic security by providing the adversary with an encryption oracle. Stronger notions of asymmetric encryption than those of [GM, MRS] have also appeared, including <ref> [NY, DDN] </ref>, but our concern here is restricted to preserving privacy under chosen-plaintext attack. Luby [L] defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt.
Reference: [Go1] <author> O. </author> <title> Goldreich "A uniform complexity treatment of encryption and zero-knowledge," </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 6, </volume> <year> 1993, </year> <pages> pp. 21-53. </pages>
Reference-contexts: Micali, Rackoff and Sloan [MRS] showed that (appropriate versions of) these notions were also equivalent to another notion, suggested by Yao [Y]. A uniform complexity treatment of notions of asymmetric encryption is given by Goldreich <ref> [Go1] </ref>. Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. <p> Since our results imply that the notions we consider are equivalent under polynomial time reductions, they can be viewed, at one level, as providing the analogue of [GM] for the symmetric case. In treating the asymmetric setting, <ref> [Go1] </ref> says that the symmetric case can be dealt with similarly. One ingredient missing in this view is that to model chosen-plaintext attack one must, in the symmetric setting, supply the adversary with some means to encrypt. <p> In any case, these theorems are most useful when the information function f is simple, like the XOR of all the bits. 11 In earlier work <ref> [GM, MRS, Go1] </ref> no restriction was made on the complexity of f ; it was even allowed to be uncomputable. Clearly semantic security against such very complex functions does not follow from Theorem 7 or Theorem 8. <p> Clearly semantic security against such very complex functions does not follow from Theorem 7 or Theorem 8. However it seems possible to do a different reduction by using the techniques of <ref> [Go1] </ref>. Here, the complexity of f would not enter (though the complexity of sampling M fl would still matter). The dependencies on other parameters would be increased.
Reference: [GILVZ] <author> O. Goldreich, R. Impagliazzo, L. Levin, R. Venkatesan and D. Zuckerman, </author> <title> "Security preserving amplification of hardness," </title> <booktitle> Proceedings of the 31st Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1990. </year>
Reference-contexts: Luby [L] defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt. Works like <ref> [L, GILVZ, HL] </ref> pay attention to concrete security to some extent but don't really go "all the way," in the sense that at some level their notions are still only caring about whether something is polynomial or not.
Reference: [GL] <author> O. Goldreich and L. Levin, </author> <title> "A hard-core predicate for all one-way functions," </title> <booktitle> Proceedings of the 21st Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1989. </year>
Reference-contexts: Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. <ref> [BG, ACGS, Y, GL, BR1] </ref>), based on various hard problems. Concrete security.
Reference: [GGM] <author> O. Goldreich, S. Goldwasser and S. Micali, </author> <title> "How to construct random functions," </title> <journal> Journal of the ACM, </journal> <volume> Vol. 33, No. 4, </volume> <year> 1986, </year> <pages> pp. 210-217. </pages>
Reference-contexts: All these schemes are based on finite pseudorandom functions, a concrete security version of the original notion of pseudorandom functions <ref> [GGM] </ref> introduced by [BKR]. We thus begin with some necessary definitions, following the latter paper.
Reference: [GM] <author> S. Goldwasser and S. Micali, </author> <title> "Probabilistic encryption," </title> <journal> J. of Computer and System Sciences, </journal> <volume> Vol. 28, </volume> <month> April </month> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: Once again the goal is to find tight bounds on the success probability of an adversary as a function of the resources she expends. This involves proving both an upper bound and a matching lower bound. 1.1 Background and Motivation The pioneering work of Goldwasser and Micali <ref> [GM] </ref> was the first to introduce formal notions of security for encryption. Specifically, they presented two notions of security for asymmetric encryption, "semantic security" and "polynomial security," and proved them equivalent with respect to polynomial-time reductions. <p> A uniform complexity treatment of notions of asymmetric encryption is given by Goldreich [Go1]. Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali <ref> [GM] </ref> also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. [BG, ACGS, Y, GL, BR1]), based on various hard problems. Concrete security. <p> The first notion, which we call "real-or-random indistinguishability" is new, and the second, "left-or-right indistinguishability" is a variant of it. The next two notions, "find-then-guess security" and "semantic security" are adaptations of the notions of <ref> [GM] </ref> to the symmetric setting. 1 Our goal, in all the notions, is to model chosen-plaintext attacks. As indicated above, our approach to concrete security is via parameterization of the resources of the adversary A. <p> A summary of the reductions is given in Figure 1. 1 In <ref> [GM] </ref> the term "polynomial security" is used for the notion analogous to what we call "find-then-guess security." 4 a security-preserving reduction from A to B A broken line indicates that the reduction is not security-preserving. <p> In all the above the security is in the sense of left-or-right indistinguishability. From what we said before this gives the other three notions with comparable bounds. 5 1.5 More history We have already mentioned the most important related work, namely <ref> [GM] </ref>. Here we provide some more detailed comparisons and histories and also discuss other work. Since our results imply that the notions we consider are equivalent under polynomial time reductions, they can be viewed, at one level, as providing the analogue of [GM] for the symmetric case. <p> already mentioned the most important related work, namely <ref> [GM] </ref>. Here we provide some more detailed comparisons and histories and also discuss other work. Since our results imply that the notions we consider are equivalent under polynomial time reductions, they can be viewed, at one level, as providing the analogue of [GM] for the symmetric case. In treating the asymmetric setting, [Go1] says that the symmetric case can be dealt with similarly. One ingredient missing in this view is that to model chosen-plaintext attack one must, in the symmetric setting, supply the adversary with some means to encrypt. <p> One ingredient missing in this view is that to model chosen-plaintext attack one must, in the symmetric setting, supply the adversary with some means to encrypt. We extend polynomial and semantic security by providing the adversary with an encryption oracle. Stronger notions of asymmetric encryption than those of <ref> [GM, MRS] </ref> have also appeared, including [NY, DDN], but our concern here is restricted to preserving privacy under chosen-plaintext attack. <p> The notation A E a ( right (;) ) indicates A with an oracle which, in response to query (x 1 ; x 2 ), returns y E a (x 2 ). Find-then-Guess. This is an adaptation of the notion of polynomial security as given in <ref> [GM, MRS] </ref>. We imagine an adversary A that runs in two stages. During the adversary's find stage she endeavors to come up with a pair of equal-length messages, x 0 and x 1 , whose encryptions she wants to try to tell apart. <p> The multiplication by 2 and subtraction by 1 are just scaling factors, to make a numeric value of 0 correspond to no advantage and a numeric value of 1 correspond to perfect advantage. Semantic. Goldwasser and Micali <ref> [GM] </ref> explain semantic security by saying that whatever can be efficiently computed about the plaintext given the ciphertext can also be computed in the 2 We define the length of an oracle query (x 1 ; x 2 ) to be jx 1 j = jx 2 j. 8 absence of <p> We adapt the formalizations of <ref> [GM, MRS] </ref> to the symmetric setting. Let f : Message-Space ! f0; 1g fl be some function of the plaintext x. The function represents the information about x that the adversary is trying to figure out. Endow Message-Space with a probability distribution. <p> Notice that for this only requires semantic security to hold for a particular and simple function, the identity function, and a particular and simple distribution over the message space. This theorem is implicit in <ref> [GM] </ref> for the asymmetric setting and their proof is easily adapted to the symmetric setting. Theorem 6 [Semantic implies find-then-guess] Let f be the identity function. <p> In any case, these theorems are most useful when the information function f is simple, like the XOR of all the bits. 11 In earlier work <ref> [GM, MRS, Go1] </ref> no restriction was made on the complexity of f ; it was even allowed to be uncomputable. Clearly semantic security against such very complex functions does not follow from Theorem 7 or Theorem 8.
Reference: [HL] <author> A. Herzberg and M. Luby, </author> <title> "Public randomness in cryptography," </title> <booktitle> Advances in Cryptology - Crypto 92 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 740, </volume> <editor> E. Brickell ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <month> 17 </month>
Reference-contexts: Luby [L] defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt. Works like <ref> [L, GILVZ, HL] </ref> pay attention to concrete security to some extent but don't really go "all the way," in the sense that at some level their notions are still only caring about whether something is polynomial or not.
Reference: [HILL] <author> J. H -astad, R. Impagliazzo, L. Levin and M. Luby, </author> <title> "Construction of a pseudo-random gen- erator from any one-way function," </title> <type> ICSI Technical Report, </type> <note> No. 91-068, submitted to SICOMP. </note>
Reference-contexts: Curiously, some earlier works had a more concrete treatment: in the asymmetric encryption arena, Alexi et. al. [ACGS] were careful to specify the complexity of their reductions, a habit many later works unfortunately dropped. The construction of a pseudorandom generator from a one-way function <ref> [HILL] </ref> provides a solution for symmetric encryption starting from a one-way function. In the current work existence is not the issue; we are interested in concrete security and the analysis of some particular schemes.
Reference: [ISO] <author> ISO 8372, </author> <title> "Information processing Modes of operation for a 64-bit block cipher algorithm," International Organization for Standardization, </title> <address> Geneva, Switzerland, </address> <year> 1987. </year>
Reference-contexts: A concrete security analysis of the CBC MAC is provided in [BKR]. (The CBC MAC should not be confused with CBC encryption: The former is a message authentication code.) We build on their techniques, but those techniques don't directly solve the problems here. CBC mode encryption is standardized in <ref> [ANSI, ISO, NBS] </ref>. 2 Notions of Encryption For all complexity measures fix some probabilistic RAM model. We adopt the convention that "time" refers to the actual running time plus the size of the code (relative to some fixed programming language). Oracle queries are answered in unit time.
Reference: [L] <author> M. Luby, </author> <title> Pseudorandomness and Cryptographic Applications, </title> <publisher> Princeton University Press, </publisher> <year> 1996. </year>
Reference-contexts: A uniform complexity treatment of notions of asymmetric encryption is given by Goldreich [Go1]. Some adaptations of these notions to the symmetric setting are presented by Luby in <ref> [L, Chapters 11-12] </ref>. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. [BG, ACGS, Y, GL, BR1]), based on various hard problems. Concrete security. <p> We extend polynomial and semantic security by providing the adversary with an encryption oracle. Stronger notions of asymmetric encryption than those of [GM, MRS] have also appeared, including [NY, DDN], but our concern here is restricted to preserving privacy under chosen-plaintext attack. Luby <ref> [L] </ref> defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt. <p> Luby [L] defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt. Works like <ref> [L, GILVZ, HL] </ref> pay attention to concrete security to some extent but don't really go "all the way," in the sense that at some level their notions are still only caring about whether something is polynomial or not.
Reference: [LR] <author> M. Luby and C. Rackoff, </author> <title> "How to construct pseudorandom permutations from pseudorandom functions," </title> <journal> SIAM J. Computation, </journal> <volume> Vol. 17, No. 2, </volume> <month> April </month> <year> 1988. </year>
Reference-contexts: PRP) family if for any distinguisher D who makes at most q oracle queries and runs in time at most t it is the case that Adv rf D (F ) * (resp. Adv rp Notice that unlike Luby and Rackoff <ref> [LR] </ref>, we measure the quality of a PRP family by the distance to the family of random permutations, not random functions.
Reference: [MRS] <author> S. Micali, C. Rackoff and R. Sloan, </author> <title> "The notion of security for probabilistic cryptosystems," </title> <journal> SIAM J. of Computing, </journal> <month> April </month> <year> 1988. </year>
Reference-contexts: Specifically, they presented two notions of security for asymmetric encryption, "semantic security" and "polynomial security," and proved them equivalent with respect to polynomial-time reductions. Micali, Rackoff and Sloan <ref> [MRS] </ref> showed that (appropriate versions of) these notions were also equivalent to another notion, suggested by Yao [Y]. A uniform complexity treatment of notions of asymmetric encryption is given by Goldreich [Go1]. Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. <p> One ingredient missing in this view is that to model chosen-plaintext attack one must, in the symmetric setting, supply the adversary with some means to encrypt. We extend polynomial and semantic security by providing the adversary with an encryption oracle. Stronger notions of asymmetric encryption than those of <ref> [GM, MRS] </ref> have also appeared, including [NY, DDN], but our concern here is restricted to preserving privacy under chosen-plaintext attack. <p> The notation A E a ( right (;) ) indicates A with an oracle which, in response to query (x 1 ; x 2 ), returns y E a (x 2 ). Find-then-Guess. This is an adaptation of the notion of polynomial security as given in <ref> [GM, MRS] </ref>. We imagine an adversary A that runs in two stages. During the adversary's find stage she endeavors to come up with a pair of equal-length messages, x 0 and x 1 , whose encryptions she wants to try to tell apart. <p> We adapt the formalizations of <ref> [GM, MRS] </ref> to the symmetric setting. Let f : Message-Space ! f0; 1g fl be some function of the plaintext x. The function represents the information about x that the adversary is trying to figure out. Endow Message-Space with a probability distribution. <p> In any case, these theorems are most useful when the information function f is simple, like the XOR of all the bits. 11 In earlier work <ref> [GM, MRS, Go1] </ref> no restriction was made on the complexity of f ; it was even allowed to be uncomputable. Clearly semantic security against such very complex functions does not follow from Theorem 7 or Theorem 8.
Reference: [NBS] <institution> National Bureau of Standards, </institution> <note> NBS FIPS PUB 81, </note> <institution> "DES modes of operation," U.S Department of Commerce, </institution> <year> 1980. </year>
Reference-contexts: A concrete security analysis of the CBC MAC is provided in [BKR]. (The CBC MAC should not be confused with CBC encryption: The former is a message authentication code.) We build on their techniques, but those techniques don't directly solve the problems here. CBC mode encryption is standardized in <ref> [ANSI, ISO, NBS] </ref>. 2 Notions of Encryption For all complexity measures fix some probabilistic RAM model. We adopt the convention that "time" refers to the actual running time plus the size of the code (relative to some fixed programming language). Oracle queries are answered in unit time.
Reference: [NY] <author> M. Naor and M. Yung, </author> <title> "Public-key cryptosystems provably secure against chosen ciphertext attacks," </title> <booktitle> Proceedings of the 22nd Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1990. </year>
Reference-contexts: We extend polynomial and semantic security by providing the adversary with an encryption oracle. Stronger notions of asymmetric encryption than those of [GM, MRS] have also appeared, including <ref> [NY, DDN] </ref>, but our concern here is restricted to preserving privacy under chosen-plaintext attack. Luby [L] defines what is essentially find-then-guess security for symmetric encryption, and he mentions encryption using a pseudorandom function whose output length is the number of bits you wish to encrypt.
Reference: [Y] <author> A. C. Yao, </author> <title> "Theory and applications of trapdoor functions," </title> <booktitle> Proceedings of the 23rd Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1982. </year>
Reference-contexts: Specifically, they presented two notions of security for asymmetric encryption, "semantic security" and "polynomial security," and proved them equivalent with respect to polynomial-time reductions. Micali, Rackoff and Sloan [MRS] showed that (appropriate versions of) these notions were also equivalent to another notion, suggested by Yao <ref> [Y] </ref>. A uniform complexity treatment of notions of asymmetric encryption is given by Goldreich [Go1]. Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. <p> Some adaptations of these notions to the symmetric setting are presented by Luby in [L, Chapters 11-12]. Goldwasser and Micali [GM] also specified an asymmetric encryption scheme whose security (in the senses above) is polynomial-time reducible from quadratic residuosity. Subsequently many other schemes have emerged (eg. <ref> [BG, ACGS, Y, GL, BR1] </ref>), based on various hard problems. Concrete security.
References-found: 23

