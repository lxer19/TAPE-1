URL: http://ptolemy.eecs.berkeley.edu/papers/shaThesis/shaThesis.ps.Z
Refering-URL: http://ptolemy.eecs.berkeley.edu/papers/shaThesis/
Root-URL: http://www.cs.berkeley.edu
Title: 172 message traffic reduction as shown by G. Sih [Sih91]. He compared his dynamic level
Abstract-found: 0
Intro-found: 1
Reference: <institution> 150 deterministic actors. </institution>
Reference: 3. <editor> The amount of non-determinism allowable in this scheme. </editor> <title> Another assumption in this technique is that a program has at most a small amount of non-determinism in its behavior. If the amount of non-determinism is too large, the proposed scheme may not be efficient compared with random assignment or other scheduling schemes. </title>
Reference: 4. <editor> Efficient code generation for run-time decisions. </editor> <title> For each dynamic construct, code that performs the run-time decision must be inserted before and after the execution of the construct. Resource management will be a crucial issue especially for a recursion construct. </title> <note> Since there has been no previous research, this will be a challenging task. </note>

Reference: 1. <editor> A scheduling technique that allows some actors to require more than one processor. </editor> <title> There is very little published research on this topic; one of the earliest is Blaze-wics et. al.s [Bla86]. But, their heuristic based on a linear programming formulation ignores the precedence relations among actors, and thus is not applicable in this context. Currently, we use a modified list scheduling technique. Future research is needed to assess this approach and to search for better techniques. </title>

Reference: 1. <author> Conditionals or Case construct. </author> <title> We generalize an if-then-else construct to a case construct to allow an N-way branching capability. </title>
Reference: 2. <author> Data-dependent iterations, </author> <title> such as For and DoWhile. We included the ability to overlap successive cycles of an iteration. </title>


Reference: 1. <author> Initially, </author> <title> take the maximum finish time of both branch schedules for each proces sor according to E. Lees method [Lee88]: that is . (4-39) The initial expected cost becomes . (4-40) </title>
Reference: 2. <institution> Define . Initially all . The variable represents the cost per processor when the profile is exceeded at run time because of branch i being selected, </institution> <note> as illustrated in equation (4-38). We define bot tle-neck processors of branch i as the processors -j- that satisfy the relation </note> . 


Reference: 1. <editor> Determine the profile of each dynamic construct. </editor> <title> The profile of a dynamic construct consists of the number of processors assigned to the construct and the assumed execution times of the construct on the assigned processors (local schedules). </title>
Reference: 2. <editor> Compute a schedule using a deterministic scheduling technique. </editor> <title> Even if we use a list scheduling scheme based on the original Hus level or the dynamic level scheduling algorithm by Gil Sih, other heuristics can be applied. </title>

References-found: 10

