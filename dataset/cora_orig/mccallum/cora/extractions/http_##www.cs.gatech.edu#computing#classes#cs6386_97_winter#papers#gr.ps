URL: http://www.cs.gatech.edu/computing/classes/cs6386_97_winter/papers/gr.ps
Refering-URL: http://www.cs.gatech.edu/computing/classes/cs6386_97_winter/readinglist.html
Root-URL: 
Title: A Fifty Gigabit Per Second IP Router  
Author: C. Partridge, P. Carvey, E. Burgess, I. Castineyra, T. Clarke, L. Graham, M. Hathaway, P. Herman, A. King, S. Kohlami, T. Ma, T. Mendez, W. Milliken, R. Osterlind, R. Pettyjohn, J. Rokosz, J. Seeger, M. Sollins, S. Storch, G. Troxel, D. Waitzman and S. Winterble 
Affiliation: BBN Corporation  
Abstract: Aggressive research on gigabit per second networks has led to dramatic improvements in network transmission speeds. One result of these improvements has been to put pressure on router technology to keep pace. This paper describes a new router, currently being built, which is more than fast enough to keep up with the latest transmission technologies. The router has a backplane speed of 50 Gb/s and can forward tens of millions of packets per second. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <institution> Alpha 21164 Microprocessor; Hardware Reference Manual, Digital Equipment Corporation, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: The focus in this section is on features that impact how the Alpha functions in the forwarding engine. A more detailed description of the 21164 and the Alpha architecture in general can be found in <ref> [1, 27] </ref>. The Alpha 21164 is a 64-bit, 32-register, superscalar RISC processor. There are two integer logic units called E0 and E1. (There are also two oating point units but our software does not use them). The two logic units are distinct.
Reference: 2. <author> Asthana, A., C. Delph, H.V. Jagadish, and P. Krzyzanowski, </author> <title> ``Tow ards a Gigabit IP Router,'' </title> <journal> Journal of High Speed Networks, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 281-288, </pages> <year> 1992. </year>
Reference-contexts: Furthermore this entity has to be able to replicate packets when multicasting. In the MGR we chose to adopt an approach taken in the Bell Labs router <ref> [2] </ref> in which the interfaces are made responsible for moving packets and the FE tells the interfaces what to do. Another challenge was processor bandwidth. The list of requirements placed on a FE continues to grow.
Reference: 3. <author> Baker, F., </author> <title> ``Requirements for IP Version 4 Routers; RFC-1812,'' Internet Request For Comments, </title> <journal> no. </journal> <volume> 1812, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: For IPv4, this set of standards is summarized in the Internet Router Requirements <ref> [3] </ref>. Our router achieves all three goals (but for one minor variance from the IPv4 router requirements, discussed below). <p> But that realization only pointed out a possibility. Making the high packet processing rates a reality required a number of small innovations. 3 As an illustration of the complexities, consider the fact that the Internet Engineering Task Force's Requirements for IP Ver sion 4 Routers <ref> [3] </ref> is 175 pages long and cites over one hundred related references and standards. 4 60 bytes is sufficient for an IPv4 header plus TCP or UDP header, an IPX header, or an IPv6 header alone. 5 See, for example, the Tiny Tera which is a 500 Gb/s switch core [19]. <p> Readers should observe that this code performs all the steps required by the Internet Router Requirements <ref> [3] </ref> except one, it doesn't check the IP header checksum. It just updates the header checksum [5, 18, 26]. The update algorithm is safe. If the checksum is bad, it will remain bad after the update.
Reference: 4. <author> Bennett, V., </author> <type> Personal Communication, </type> <month> 29 October </month> <year> 1995. </year> <note> See also http://alpha1.iadfw.net/~accelete/#niscroute </note>
Reference: 5. <editor> Braden, B., D. Borman, and C. Partridge, </editor> <title> ``Computing the Internet Checksum; RFC 1071,'' Internet Request for Comments, </title> <journal> no. </journal> <volume> 1071, </volume> <month> September </month> <year> 1988. </year>
Reference-contexts: Readers should observe that this code performs all the steps required by the Internet Router Requirements [3] except one, it doesn't check the IP header checksum. It just updates the header checksum <ref> [5, 18, 26] </ref>. The update algorithm is safe. If the checksum is bad, it will remain bad after the update.
Reference: 6. <author> Bradner, S., and A. Mankin, IPng: </author> <title> Internet Protocol Next Generation, </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference: 7. <author> Brodnik, A., S. Carlsson, and M. Degermark, </author> <title> Routing in the Internet (technical memorandum), </title> <publisher> Lulea University. </publisher>
Reference-contexts: We used the Patricia tree because it is a well-known algorithm and we could achieve sufficient speed with it. We hope to experiment with even faster route lookup algorithms, such as <ref> [7] </ref>. 8 We use a cache because it works. Traffic studies over many years suggest we will achieve an over 90% hit rate in the destination cache [12, 14, 16].
Reference: 8. <author> Chiappa, N., </author> <title> Data Packet Switch Using a Primary Processing Unit to Designate One of a Plurality of Data Stream Control Circuits to Selectively Handle the Header Processing of Incoming Packets in One Data Packet Stream (US Patent #5,249,292), </title> <month> 28 September </month> <year> 1993. </year>
Reference: 9. <author> Deering, S., and R. Hinden, </author> <title> ``Internet Protocol, Version 6 (IPv6); RFC-1883,'' Internet Requests for Comments, </title> <journal> no. </journal> <volume> 1883, </volume> <month> January </month> <year> 1996. </year>
Reference-contexts: That's a big penalty to pay for doing error checking for a rare error that can be caught end-to-end. (Indeed, for this reason, IPv6 <ref> [9] </ref> does not include a header checksum). Certain datagrams do not get through the fast path. These datagrams can be divided into four broad categories: Draft to be submitted to IEEE/ACM Trans. on Networking - 7 - 1. Headers whose destination misses in the LRU route cache.
Reference: 10. <author> Demers, A., S. Keshav, and S. Shenker, </author> <title> ``Analysis and Simulation of a Fair Queueing Algorithm,'' Internetwork: </title> <journal> Research and Experience, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 3-26, </pages> <publisher> John Wiley & Sons, </publisher> <month> September </month> <year> 1990. </year>
Reference: 11. <author> Fedor, M., </author> <title> ``Gated: A Multi-routing Protocol Daemon for UNIX,'' </title> <booktitle> Proc. 1988 Summer USENIX Conference, </booktitle> <pages> pp. 365-376, </pages> <address> San Francisco, CA, </address> <year> 1988. </year>
Reference-contexts: Second, we needed a BSD UNIX platform because we wanted to speed the development process by porting existing free software such as gated <ref> [11] </ref> to the MGR whenever possible and almost all this software is implemented for BSD UNIX. 7. Managing Routing Tables Routing tables in the MGR are managed jointly by the network processor and the forwarding engines.
Reference: 12. <author> Feldmeier, </author> <title> D.C., ``Improving Gateway Performance with a Routing-Table Cache,'' </title> <booktitle> Proc. IEEE INFOCOM '88, </booktitle> <pages> pp. 298-307, </pages> <address> New Orleans, </address> <month> March </month> <year> 1988. </year>
Reference-contexts: Since each route entry takes 96 bits, this gives us a maximum cache size of approximately 8,000 routes. Studies of locality in packet streams at routers suggest a cache this size should yield a hit rate well in excess of 90% <ref> [12, 16, 14] </ref>. Our own tests with a traffic trace from FIX West (a major interexchange point in the Internet) suggest a 8,000 entry cache will have a hit rate in excess of 95%. The tertiary cache (Bcache) is an external memory of several megabytes managed by the processor. <p> We hope to experiment with even faster route lookup algorithms, such as [7]. 8 We use a cache because it works. Traffic studies over many years suggest we will achieve an over 90% hit rate in the destination cache <ref> [12, 14, 16] </ref>.
Reference: 13. <author> Floyd, S., and V. Jacobson, </author> <title> ``Random Early Detection Gateways for Congestion Avoidance,'' </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The fourth event is a timer event, needed for certain scheduling algorithms. The scheduler can also initiate messages to the network processor. Some packet handling algorithms such as RED <ref> [13] </ref>, require the scheduler to notify the network processor when a packet is discarded. Any MAC-layer based scheduling (such as that required by ATM) is done separately by a MAC-layer scheduling, after that packet scheduler has passed the packet on for transmission. 6.
Reference: 14. <author> Heimlich, S.A., </author> <title> ``Traffic Characterization of the NSFNET National Backbone,'' </title> <booktitle> Proc. Winter 1990 USENIX Conference, </booktitle> <pages> pp. 207-227, </pages> <address> Washington DC, </address> <month> January </month> <year> 1990. </year>
Reference-contexts: Since each route entry takes 96 bits, this gives us a maximum cache size of approximately 8,000 routes. Studies of locality in packet streams at routers suggest a cache this size should yield a hit rate well in excess of 90% <ref> [12, 16, 14] </ref>. Our own tests with a traffic trace from FIX West (a major interexchange point in the Internet) suggest a 8,000 entry cache will have a hit rate in excess of 95%. The tertiary cache (Bcache) is an external memory of several megabytes managed by the processor. <p> We hope to experiment with even faster route lookup algorithms, such as [7]. 8 We use a cache because it works. Traffic studies over many years suggest we will achieve an over 90% hit rate in the destination cache <ref> [12, 14, 16] </ref>.
Reference: 15. <author> Jain, R., </author> <title> ``A Comparison of Hashing Schemes for Address Lookup in Computer Networks,'' </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 40, no. 10, </volume> <pages> pp. 1570-1573, </pages> <month> October </month> <year> 1992. </year>
Reference: 16. <author> Jain, R., and S. Routhier, </author> <title> ``Packet Trains: Measurements and a New Model for Computer Network Traffic,'' </title> <journal> IEEE Journal on Selected Areas of Communication, </journal> <volume> vol. 4, no. 6, </volume> <pages> pp. 986-995, </pages> <month> September </month> <year> 1986. </year>
Reference-contexts: Since each route entry takes 96 bits, this gives us a maximum cache size of approximately 8,000 routes. Studies of locality in packet streams at routers suggest a cache this size should yield a hit rate well in excess of 90% <ref> [12, 16, 14] </ref>. Our own tests with a traffic trace from FIX West (a major interexchange point in the Internet) suggest a 8,000 entry cache will have a hit rate in excess of 95%. The tertiary cache (Bcache) is an external memory of several megabytes managed by the processor. <p> We hope to experiment with even faster route lookup algorithms, such as [7]. 8 We use a cache because it works. Traffic studies over many years suggest we will achieve an over 90% hit rate in the destination cache <ref> [12, 14, 16] </ref>.
Reference: 17. <author> Lamaire, R.O, and D.N. Serpanos, </author> <title> ``Two Dimensional Round Robin Schedulers for Packet Switches with Multiple Input Queues,'' </title> <journal> IEEE/ACM Trans. on Networking, </journal> <pages> pp. 471-482., </pages> <note> October 94. </note> <author> Lewis, H.R., and L. Denenberg, </author> <note> Data Draft to be submitted to IEEE/ACM Trans. on Networking - 14 - Structures & Their Algorithms, </note> <author> p. Harper Collins, </author> <year> 1991. </year>
Reference-contexts: Similarly, on the next cycle, we can examine (3,1), (2,2) and (1,3), because none of them are in conict with each other. Their only potential conicts are with decisions already made about (1,1), (2,1) and (1,2). This technique is called Wav e Front Allocation <ref> [17, 28] </ref> and is illustrated in the middle of Figure 2. However, for a 1515 matrix, Wav e Front Allocation requires 29 steps, which is still too many. But one can refine the process slightly by grouping positions in the matrix, and doing wav efront allocations across the groups.
Reference: 18. <author> Mallory, T., and A. Kullberg, </author> <title> ``Incremental Updating of the Internet Checksum; RFC-1141,'' Internet Requests for Comments, </title> <journal> no. </journal> <volume> 1141, </volume> <month> January </month> <year> 1990. </year>
Reference-contexts: Readers should observe that this code performs all the steps required by the Internet Router Requirements [3] except one, it doesn't check the IP header checksum. It just updates the header checksum <ref> [5, 18, 26] </ref>. The update algorithm is safe. If the checksum is bad, it will remain bad after the update.
Reference: 19. <author> McKeown, N., M. Izzard, A. Mekkittikul, B. Ellersick, and M. Horowitz, </author> <title> ``The Tiny Tera: A Packet Switch Core,'' </title> <booktitle> IEEE Micro, </booktitle> <month> January </month> <year> 1997. </year>
Reference-contexts: [3] is 175 pages long and cites over one hundred related references and standards. 4 60 bytes is sufficient for an IPv4 header plus TCP or UDP header, an IPX header, or an IPv6 header alone. 5 See, for example, the Tiny Tera which is a 500 Gb/s switch core <ref> [19] </ref>. Draft to be submitted to IEEE/ACM Trans. on Networking - 3 - One major challenge was header bandwidth.
Reference: 20. <author> Prabhakar, B., N. McKeown, and R. Ahuja, </author> <title> ``Multicast Scheduling for Input-Queued Switches,'' </title> <journal> IEEE Journal on Selected Areas of Communications, </journal> <month> May </month> <year> 1997. </year>
Reference-contexts: For c &lt; n, which is almost always the case, nb/c &gt; b, or greater than the shared bus rate. For multipoint transfers, if c is small then nb/c is close to the switch bandwidth of nb. Of greater comfort to us is the discovery <ref> [20] </ref> that it may be more efficient for the switch to do multicast as a series of partial transfers than a single multiway transfer. Draft to be submitted to IEEE/ACM Trans. on Networking - 10 - setting a bit in the 15-bit mask formed by the 2 inhibit pins.
Reference: 21. <author> Newman, P., </author> <title> ``IP Switching and Gigabit Routers,'' </title> <journal> IEEE Communications Magazine, </journal> <month> February </month> <year> 1997. </year>
Reference: 22. <author> Partridge, C., </author> <title> ``How Slow Is One Gigabit Per Second?,'' </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 21, no. 1, </volume> <pages> pp. 44-53, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: A good rule of thumb, based on the Internet's average packet size of approximately 1,000 bits is that for every gigabit per second of bandwidth, a router needs a million packets per second (1 MPPS) of forwarding power <ref> [22] </ref>. 1 Third, the router needs to conform to a set of protocol standards. For IPv4, this set of standards is summarized in the Internet Router Requirements [3]. Our router achieves all three goals (but for one minor variance from the IPv4 router requirements, discussed below).
Reference: 23. <author> Partridge, C., </author> <title> Gigabit Networking, </title> <publisher> Addison Wesley Publishers, </publisher> <year> 1994. </year>
Reference-contexts: 1. Introduction Transmission link bandwidths keep improving, at a seemingly inexorable rate, as the result of research in transmission technology <ref> [23] </ref>. Simultaneously, expanding network usage is creating an ever-increasing demand that can only be served by these higher bandwidth links. Unfortunately, transmission links alone do not make a network.
Reference: 24. <author> Parulkar, G., D.C. Schmidt, and J. Turner, ``IP/ATM: </author> <title> A Strategy for Integrating IP with ATM,'' </title> <journal> Proc. of ACM SIG-COMM '95 (Special Issue of ACM Computer Communication Review), </journal> <volume> vol. 25, no. 4, </volume> <pages> pp. 49-59, </pages> <month> October </month> <year> 1995. </year>
Reference: 25. <author> Plummer, D., </author> <title> ``Ethernet Address Resolution Protocol: Or converting network protocol addresses to 48.bit Ethernet address for transmission on Ethernet hardware,'' Internet Request for Comments, </title> <journal> no. </journal> <volume> 826, </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: Many networks have dynamic schemes for mapping IP addresses to MAC-layer addresses. A good example is the Address Resolution Protocol, used for Ethernet <ref> [25] </ref>. If a router gets a datagram to an IP address whose Ethernet address it doesn't know, it is supposed to send an ARP message and hold the datagram until it gets an ARP reply with the necessary Ethernet address.
Reference: 26. <author> Rijsinghani, A., </author> <title> ``Computation of the Internet Checksum via Incremental Update; RFC-1624,'' Internet Request for Comments, </title> <journal> no. </journal> <volume> 1624, </volume> <month> May </month> <year> 1994. </year>
Reference-contexts: Readers should observe that this code performs all the steps required by the Internet Router Requirements [3] except one, it doesn't check the IP header checksum. It just updates the header checksum <ref> [5, 18, 26] </ref>. The update algorithm is safe. If the checksum is bad, it will remain bad after the update.
Reference: 27. <author> Sites, Richard L., </author> <title> Alpha Architecture Reference Manual, </title> <publisher> Digital Press, </publisher> <year> 1992. </year>
Reference-contexts: The focus in this section is on features that impact how the Alpha functions in the forwarding engine. A more detailed description of the 21164 and the Alpha architecture in general can be found in <ref> [1, 27] </ref>. The Alpha 21164 is a 64-bit, 32-register, superscalar RISC processor. There are two integer logic units called E0 and E1. (There are also two oating point units but our software does not use them). The two logic units are distinct.
Reference: 28. <author> Tamir, Y., and H.C. Chi, </author> <title> ``Symmetric Crossbar Arbiters for VLSI Communications Switches,'' </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 4, no. No. 1, </volume> <year> 1993. </year>
Reference-contexts: Similarly, on the next cycle, we can examine (3,1), (2,2) and (1,3), because none of them are in conict with each other. Their only potential conicts are with decisions already made about (1,1), (2,1) and (1,2). This technique is called Wav e Front Allocation <ref> [17, 28] </ref> and is illustrated in the middle of Figure 2. However, for a 1515 matrix, Wav e Front Allocation requires 29 steps, which is still too many. But one can refine the process slightly by grouping positions in the matrix, and doing wav efront allocations across the groups.
Reference: 29. <author> Tantawy, A., and M. Zitterbart, </author> <title> ``Multiprocessing in High-Performance IP Routers,'' Protocols for High-Speed Networks, </title> <booktitle> III (Proc. IFIP 6.1/6.4 Workshop), </booktitle> <publisher> Elsevier, </publisher> <address> Stockholm, </address> <month> 13-15 May </month> <year> 1992. </year> <note> Draft to be submitted to IEEE/ACM Trans. on Networking </note>
References-found: 29

