URL: ftp://ftp.csd.uu.se/pub/papers/reports/0151.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email: voronkov@csd.uu.se  
Keyword: Herbrand's theorem, automated reasoning and semantic tableaux  
Address: Box 311, S-751 05 Uppsala Sweden  
Affiliation: Computing Science Department Uppsala University  
Note: Andrei Voronkov  Supported by a TFR grant.  
Abstract: UPMAIL Technical Report No. 151 February 11, 1998 
Abstract-found: 1
Intro-found: 1
Reference: <author> Andrews, P. </author> <year> (1981), </year> <title> `Theorem proving via general matings', </title> <journal> Journal of the Association for Computing Machinery 28(2), </journal> <pages> 193-214. </pages>
Reference-contexts: When a result is new, it has no citations and is provided with a proof or a reference to the full text of the proof. By semantic tableaux and related methods we understand: 1. the tableau method (Fitting 1996); 2. the method of matings <ref> (Andrews 1981, Gallier 1986) </ref>, or the connection method (Bibel 1981, Bibel & Eder 1993); 3. model elimination (Loveland 1968, Loveland 1978). There is no unifying name for these kind of methods.
Reference: <author> Bachmair, L. & Ganzinger, H. </author> <year> (1994), </year> <title> Rewrite techniques for transitive relations, </title> <booktitle> in `Proc. IEEE Conference on Logic in Computer Science (LICS)', </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Automated deduction with respect to a particular theory is considered in a number of papers, for example in (Stickel 1985). As a particular example we can consider the theory of transitive relations that plays an important role in automated reasoning <ref> (Bachmair & Ganzinger 1994) </ref> in connection with axiomatization of orderings. First, we note a trivial but useful property of Formula Instantiation. Lemma 4.3 Let '(x) be a quantifier-free formula.
Reference: <author> Bachmair, L., Ganzinger, H. & Voronkov, A. </author> <year> (1998), </year> <title> Brand's transformation with ordering constraints, </title> <note> in `CADE'98'. To be submitted. </note>
Reference-contexts: combination of tableaux and resolution (Degtyarev & Voronkov 1995, Degtyarev & Voronkov 1996b). * A goal-oriented strategy for model elimination (Moser, Lynch & Steinbach 1995). * Incomplete but terminating procedures for Formula Instantiation (Plaisted 1995, Degtyarev & Voronkov 1998). * Optimized translations of logic with equality into logic without equality <ref> (Bachmair, Ganzinger & Voronkov 1998) </ref>. 4.3 Function symbols introduced by Skolemization Sometimes, formulas to be proved do not have function symbols, but function symbols are introduced by Skolemization. There are at least two approaches for getting around Theorem 4.6 in this case. Tableaux without Skolemization.
Reference: <author> Beckert, B. & Hahnle, R. </author> <year> (1992), </year> <title> An improved method for adding equality to free variable semantic tableaux, </title> <editor> in D. Kapur, ed., </editor> <booktitle> `11th International Conference on Automated Deduction (CADE)', Vol. 607 of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer Verlag, </publisher> <address> Saratoga Springs, NY, USA, </address> <pages> pp. 678-692. </pages>
Reference-contexts: If the complexity collapses (for example becomes 2 exponents), we should try to identify the reason for such a collapse. After identification, we may reconsider the standard approaches to tableau-like methods. Several authors proposed to use "universal variables" in tableaux in addition to the rigid ones <ref> (Beckert & Hahnle 1992) </ref>. Logically speaking, this means that instead of solving Formula Instan-tiation for quantifier-free formulas, we solve it for more general classes of formulas.
Reference: <author> Beltyukov, A. </author> <year> (1976), </year> <title> `Decidability of the universal theory of natural numbers with addition and divisibility (in Russian)', </title> <note> Zapiski Nauchnyh Seminarov LOMI 60, 15-28. English translation in: Journal of Soviet Mathematics. </note>
Reference: <author> Bibel, W. </author> <year> (1980), </year> <title> A theoretical basis for the systematic proof procedure, </title> <editor> in P. Dembinski, ed., </editor> <booktitle> `Proc. of 9th Symposium on Mathematical Foundations of Computer Science', Vol. 88 of Lecture Notes in Computer Science, Rydzzyna, Poland, </booktitle> <pages> pp. 154-167. </pages>
Reference-contexts: Section 6 Open problems It will be of a great importance for automated reasoning by tableau-like methods to find intelligent strategies for multiplicity. The problem of finding such strategies was noted as early as in <ref> (Bibel 1980) </ref>. Theorems 5.8 and 5.9 show that such intelligent strategies exist at least for some decidable classes of predicate logic. Theorem 5.6 shows that HI (S) is undecidable for every formula-independent strategy S. The following problem is open.
Reference: <author> Bibel, W. </author> <year> (1981), </year> <title> `On matrices with connections', </title> <journal> Journal of the Association for Computing Machinery 28(4), </journal> <pages> 633-645. </pages>
Reference-contexts: By semantic tableaux and related methods we understand: 1. the tableau method (Fitting 1996); 2. the method of matings (Andrews 1981, Gallier 1986), or the connection method <ref> (Bibel 1981, Bibel & Eder 1993) </ref>; 3. model elimination (Loveland 1968, Loveland 1978). There is no unifying name for these kind of methods. <p> There are at least two approaches for getting around Theorem 4.6 in this case. Tableaux without Skolemization. One possible approach was introduced in (Voronkov 1996) for intuitionistic logic, but it works for classical logic as well. A matrix characterization of validity based on similar ideas appeared already in <ref> (Lyaletski 1981, Bibel 1982b) </ref>. The idea is to augment Formula Instantiation with non-occurrence constraints. Any such constraint have the form "c does not occur in t", where c is a constant and t is an arbitrary term.
Reference: <author> Bibel, W. </author> <year> (1982a), </year> <title> `A comparative study of several proof procedures', </title> <booktitle> Artificial Intelligence 18(3), </booktitle> <pages> 269-293. </pages>
Reference-contexts: If we get some complexity results, it would be quite interesting to compare them with the complexity of known resolution-based decision procedures (Joyner jr 1976, Fermuller, Leitsch, Tammet & Zamov 1993, Leitsch 1997). Some comparison of resolution and tableau-like methods was done in <ref> (Bibel 1982a, Eder 1988, Eder 1991) </ref>. The aim of Problem 5 is to compare resolution and tableau-like methods in the cases when they can be compared. However, the ultimate goal of automated reasoning is to find "more efficient" Andrei Voronkov.
Reference: <author> Bibel, W. </author> <year> (1982b), </year> <title> Computationally improved versions of Herbrand's theorem, </title> <editor> in J. Stern, ed., </editor> <booktitle> `Proceedings of the Herbrand Symposium. Logic Colloquium'81', </booktitle> <publisher> North Holland, </publisher> <pages> pp. 11-28. </pages>
Reference: <author> Bibel, W. </author> <year> (1987), </year> <title> Automated theorem proving, </title> <publisher> Vieweg Verlag. 2nd edition. </publisher>
Reference-contexts: There is no unifying name for these kind of methods. They may be called matrix methods (Degtyarev & Voronkov 1995) due to Prawitz (Prawitz 1970), extension methods <ref> (Bibel 1987, Petermann 1993) </ref>, non-local methods (Maslov, Mints & Orevkov 1983) or rigid-variable methods (Voronkov 1997b). We shall call them tableau-like methods and use matings for illustration. Section 2 Preliminaries In this section we introduce some notation and terminology. We use boldface notation to denote sequences of symbols.
Reference: <author> Bibel, W. & Eder, E. </author> <year> (1993), </year> <title> Methods and calculi for deduction, </title> <editor> in D. Gabbay, C. Hogger & J. Robinson, eds, </editor> <booktitle> `Handbook of Logic in Artificial Intelligence and Logic Programming', </booktitle> <volume> Vol. 1, </volume> <publisher> Oxford University Press, </publisher> <pages> chapter 3, pp. 67-182. </pages>
Reference: <author> Borger, E., Gradel, E. & Gurevich, Y. </author> <year> (1997), </year> <title> The Classical Decision Problem, </title> <publisher> Springer Verlag. </publisher>
Reference-contexts: Design procedures for checking Formula Instantiation and returning the resulting substitutions. One particular classification of General Formula Instantiation may be in terms similar to those of the classical decision problem <ref> (Borger, Gradel & Gurevich 1997) </ref>. Open problem 8 Classify formulas, e.g. depending on a signature, quantifier prefix and the number of free variables, w.r.t. General Formula Instantiation (decidability, complexity, the number of solutions).
Reference: <author> Degtyarev, A., Gurevich, Y., Narendran, P., Veanes, M. & Voronkov, A. </author> <year> (1997), </year> <title> The decidability of simultaneous rigid E-unification with one variable, </title> <type> UPMAIL Technical Report 139, </type> <institution> Uppsala University, Computing Science Department. </institution> <note> To appear in Theoretical Computer Science. 24 BIBLIOGRAPHY Degtyarev, </note> <author> A., Gurevich, Y. & Voronkov, A. </author> <year> (1996), </year> <title> Herbrand's theorem and equational reasoning: Problems and solutions, </title> <journal> in `Bulletin of the European Association for Theoretical Computer Science', </journal> <volume> Vol. 60, </volume> <pages> pp. 78-95. </pages> <note> The "Logic in Computer Science" column. </note>
Reference-contexts: It is undecidable already for formulas with two variables (Veanes 1997). 2 As for the number of variables, this undecidability result is sharp, as the following theorem shows. Theorem 4.7 <ref> (Degtyarev, Gurevich, Narendran, Veanes & Voronkov 1997) </ref> FI ( ; ; ) is decidable for formulas with one variable. 2 (Degtyarev et al. 1997) prove that simultaneous rigid E-unification with one variable in the signature ( ; ; 1) is EXPTIME-complete. <p> Theorem 4.7 (Degtyarev, Gurevich, Narendran, Veanes & Voronkov 1997) FI ( ; ; ) is decidable for formulas with one variable. 2 <ref> (Degtyarev et al. 1997) </ref> prove that simultaneous rigid E-unification with one variable in the signature ( ; ; 1) is EXPTIME-complete. This gives the 2-NEXPTIME upper bound and EXPTIME lower bound on the complexity of FI ( ; ; 1) for formulas with one variable.
Reference: <author> Degtyarev, A., Matiyasevich, Y. & Voronkov, A. </author> <year> (1996), </year> <title> Simultaneous rigid E-unification and related algorithmic problems, </title> <booktitle> in `Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96)', </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> New Brunswick, NJ, </address> <pages> pp. 494-502. </pages>
Reference-contexts: For Monadic Formula Instantiation, i.e. Formula Instantiation with unary function symbols only, the decidability is an open problem. Some known results are the following. In the case of one unary function symbol, we have Theorem 4.8 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 1; 0) is decidable. 2 The decidability proof of this theorem essentially uses the decidability of the so-called Diophantine problem for addition and divisibility proved in (Beltyukov 1976, Mart'janov 1977, Lipshitz 1978), i.e. solving equations over natural numbers in the signature consisting of <p> Using a standard encoding of words on an arbitrary alphabet by words on a two-letter alphabet, one can easily prove Theorem 4.9 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 2; 0) is polynomial-time equivalent to FI ( ; 2; 0) . 2 Moreover, (Degtyarev, Matiyasevich & Voronkov 1996) noted that there is a polynomial-time reduction of word equations to FI ( ; 2; 0) . <p> Using a standard encoding of words on an arbitrary alphabet by words on a two-letter alphabet, one can easily prove Theorem 4.9 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 2; 0) is polynomial-time equivalent to FI ( ; 2; 0) . 2 Moreover, (Degtyarev, Matiyasevich & Voronkov 1996) noted that there is a polynomial-time reduction of word equations to FI ( ; 2; 0) . The complexity of word equations is between NP and 3-NEXPTIME (Koscielski & Pacholski 1996).
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1995), </year> <title> Equality elimination for the inverse method and extension procedures, </title> <editor> in C. Mellish, ed., </editor> <booktitle> `Proc. International Joint Conference on Artificial Intelligence (IJCAI)', </booktitle> <volume> Vol. 1, </volume> <pages> Montreal, pp. 342-347. </pages>
Reference-contexts: There is no unifying name for these kind of methods. They may be called matrix methods <ref> (Degtyarev & Voronkov 1995) </ref> due to Prawitz (Prawitz 1970), extension methods (Bibel 1987, Petermann 1993), non-local methods (Maslov, Mints & Orevkov 1983) or rigid-variable methods (Voronkov 1997b). We shall call them tableau-like methods and use matings for illustration. Section 2 Preliminaries In this section we introduce some notation and terminology. <p> After this theorem was proved, several papers with nonstandard approaches to equality appeared, for example * The equality elimination method: a combination of tableaux and resolution <ref> (Degtyarev & Voronkov 1995, Degtyarev & Voronkov 1996b) </ref>. * A goal-oriented strategy for model elimination (Moser, Lynch & Steinbach 1995). * Incomplete but terminating procedures for Formula Instantiation (Plaisted 1995, Degtyarev & Voronkov 1998). * Optimized translations of logic with equality into logic without equality (Bachmair, Ganzinger & Voronkov 1998). 4.3 <p> proved, several papers with nonstandard approaches to equality appeared, for example * The equality elimination method: a combination of tableaux and resolution (Degtyarev & Voronkov 1995, Degtyarev & Voronkov 1996b). * A goal-oriented strategy for model elimination (Moser, Lynch & Steinbach 1995). * Incomplete but terminating procedures for Formula Instantiation <ref> (Plaisted 1995, Degtyarev & Voronkov 1998) </ref>. * Optimized translations of logic with equality into logic without equality (Bachmair, Ganzinger & Voronkov 1998). 4.3 Function symbols introduced by Skolemization Sometimes, formulas to be proved do not have function symbols, but function symbols are introduced by Skolemization.
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1996a), </year> <title> Decidability problems for the prenex fragment of intuition-istic logic, </title> <booktitle> in `Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96)', </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> New Brunswick, NJ, </address> <pages> pp. 503-512. </pages>
Reference-contexts: Thus, we have Open problem 3 Is FI ( ; 2; 0) decidable? This problem is also related to the classification of decidable prenex fragments of intuitionistic logic depending on the signature and the quantifier prefix <ref> (Degtyarev & Voronkov 1996a, Degtyarev, Gurevich & Voronkov 1996) </ref>. As for Formula Instantiation with equality but no function symbols, we shall establish its complexity after proving some quite general results. Denote by R; S; T axioms of reflexivity, symmetry and transitivity, respectively, for some predicate.
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1996b), </year> <title> Equality elimination for the tableau method, </title> <editor> in J. Calmet & C. Limongelli, eds, </editor> <booktitle> `Design and Implementation of Symbolic Computation Systems. International Symposium, DISCO'96', Vol. 1128 of Lecture Notes in Computer Science, </booktitle> <address> Karlsruhe, Germany, </address> <pages> pp. 46-60. </pages>
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1996c), </year> <title> Simultaneous rigid E-unification is undecidable, </title> <editor> in H. Kleine Buning, ed., </editor> <booktitle> `Computer Science Logic. 9th International Workshop, CSL'95', Vol. 1092 of Lecture Notes in Computer Science, Paderborn, </booktitle> <address> Germany, </address> <month> September </month> <year> 1995, </year> <pages> pp. 178-190. </pages>
Reference-contexts: Most (un)decidability results cited below were proved about simultaneous rigid E-unification, we reformulate them for Formula Instantiation. Andrei Voronkov. Herbrand's theorem, automated reasoning and semantic tableaux 9 Theorem 4.6 <ref> (Degtyarev & Voronkov 1996c, Degtyarev & Voronkov 1996d) </ref> FI ( ; ; 1) is undecidable. It is undecidable already for formulas with two variables (Veanes 1997). 2 As for the number of variables, this undecidability result is sharp, as the following theorem shows.
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1996d), </year> <title> `The undecidability of simultaneous rigid E-unification', </title> <booktitle> Theoretical Computer Science 166(1-2), </booktitle> <pages> 291-300. </pages>
Reference: <author> Degtyarev, A. & Voronkov, A. </author> <year> (1998), </year> <title> `What you always wanted to know about rigid E-unification', </title> <journal> Journal of Automated Reasoning 20(1), </journal> <pages> 47-80. </pages>
Reference: <author> Dwork, C., Kanellakis, P. & Mitchell, J. </author> <year> (1984), </year> <title> `On the sequential nature of unification', </title> <journal> Journal of Logic Programming 1, </journal> <pages> 35-50. </pages>
Reference: <author> Dwork, C., Kanellakis, P. & Stockmeyer, L. </author> <year> (1988), </year> <title> `Parallel algorithms for term matching', </title> <journal> SIAM Journal of Computing 17(4), </journal> <pages> 711-731. </pages>
Reference: <author> Eder, E. </author> <year> (1988), </year> <title> A comparison of the resolution calculus and the connection method, and a new calculus generalizing both methods, </title> <editor> in E. Borger, G. Jager, H. Kleine Buning & M. Richter, eds, </editor> <booktitle> `CSL'88 (Proc. 2nd Workshop on Computer Science Logic)', Vol. 385 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag, </publisher> <pages> pp. 80-98. </pages>
Reference: <author> Eder, E. </author> <year> (1991), </year> <title> Consolution and its relation with resolution, </title> <booktitle> in `Proc. International Joint Conference on Artificial Intelligence (IJCAI)', </booktitle> <pages> pp. 132-136. </pages>
Reference: <author> Fermuller, C. & Leitsch, A. </author> <year> (1997), </year> <title> `Decision procedures and model building in equational clause logic', </title> <note> Journal of the IGPL . To appear. </note>
Reference-contexts: Theorem 5.8 shows that for a "simply decidable" fragment of predicate calculus we have to solve undecidable subproblems, when the traditional loop is used. Note that <ref> (Fermuller & Leitsch 1997) </ref> proved that the class of ground-negative formulas can be decided by traditional resolution-based methods, namely by positive hyperresolution with ordered paramodulation. The next question we address is the following.
Reference: <author> Fermuller, C., Leitsch, A., Tammet, T. & Zamov, N. </author> <year> (1993), </year> <title> Resolution Methods for the Decision Problem, </title> <booktitle> Vol. 679 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag. </publisher>
Reference: <author> Andrei Voronkov. </author> <title> Herbrand's theorem, automated reasoning and semantic tableaux 25 Fitting, </title> <editor> M. </editor> <year> (1996), </year> <title> First Order Logic and Automated Theorem Proving, </title> <publisher> Springer Verlag, </publisher> <address> New York. </address> <note> Second edition. </note>
Reference: <author> Gallier, J. </author> <year> (1986), </year> <title> Logic for Computer Science: Foundations of Automatic Theorem Proving, </title> <publisher> Harper and Row, </publisher> <address> New York. </address>
Reference-contexts: Usually, they are presented in the form of searching for a substitution making all paths in a matrix tautologies <ref> (Gallier 1986, Bibel & Eder 1993) </ref> or closing all branches in a tableau (Fitting 1996). The following theorem shows the complexity of Formula Instantiation for logic without equality. Andrei Voronkov. <p> Open problems Proof. p 2 -hardness follows from Theorem 4.4. To prove inclusion in p 2 , we introduce several notions in the style of <ref> (Gallier 1986) </ref> and prove several simple lemmas. A formula ' is called rectified if all free variables of ' are different from all bound variables of ' and each distinct occurrences of quantifiers in ' bind distinct variables.
Reference: <author> Gallier, J., Raatz, S. & Snyder, W. </author> <year> (1987), </year> <title> Theorem proving using rigid E-unification: Equational matings, </title> <booktitle> in `Proc. IEEE Conference on Logic in Computer Science (LICS)', </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 338-346. </pages>
Reference-contexts: Then, FI (1; 0; 0) is equivalent to the provability problem of propositional formulas. 2 4.2 Equality and other relations For logic with equality, Formula Instantiation is decidable for formulas of a signature if and only if simultaneous rigid E-unification <ref> (Gallier, Raatz & Snyder 1987) </ref> is decidable for formulas of this signature. Most (un)decidability results cited below were proved about simultaneous rigid E-unification, we reformulate them for Formula Instantiation. Andrei Voronkov.
Reference: <author> Gurevich, Y. & Veanes, M. </author> <year> (1997), </year> <title> Some undecidable problems related to the Herbrand theorem, </title> <type> UPMAIL Technical Report 138, </type> <institution> Uppsala University, Computing Science Department. </institution>
Reference-contexts: It is undecidable already for formulas with two variables (Veanes 1997). 2 As for the number of variables, this undecidability result is sharp, as the following theorem shows. Theorem 4.7 <ref> (Degtyarev, Gurevich, Narendran, Veanes & Voronkov 1997) </ref> FI ( ; ; ) is decidable for formulas with one variable. 2 (Degtyarev et al. 1997) prove that simultaneous rigid E-unification with one variable in the signature ( ; ; 1) is EXPTIME-complete. <p> Given a quantifier-free formula '(x), is there a substitution such that the formula is provable? Note that Formula Instantiation can be described as HS 1 (or HS 1 for formulas with equality). <ref> (Gurevich & Veanes 1997) </ref> also give a reduction of HS 1 to HS k . This reduction also works for many fragments of predicate calculus. (Voda & Komara 1995) prove that HS k is undecidable, for every k, for formulas with equality. <p> or without function symbols and with or without equality. 2 Theorem 5.8 (Voronkov 1997b) For all formula-independent strategies S, the problem HI (S) is undecidable for the class of ground-negative formulas. 2 This theorem is a consequence of Theorem 5.5 and the undecidability of all HS k for ground-negative formulas <ref> (Gurevich & Veanes 1997) </ref>. Theorem 5.8 shows that for a "simply decidable" fragment of predicate calculus we have to solve undecidable subproblems, when the traditional loop is used. <p> Design procedures for checking Formula Instantiation and returning the resulting substitutions. One particular classification of General Formula Instantiation may be in terms similar to those of the classical decision problem <ref> (Borger, Gradel & Gurevich 1997) </ref>. Open problem 8 Classify formulas, e.g. depending on a signature, quantifier prefix and the number of free variables, w.r.t. General Formula Instantiation (decidability, complexity, the number of solutions).
Reference: <author> Gurevich, Y. & Voronkov, A. </author> <year> (1997a), </year> <title> Monadic simultaneous rigid E-unification and related problems, </title> <type> UPMAIL Technical Report 137, </type> <institution> Uppsala University, Computing Science Department. </institution> <note> Revised June 20, 1997. To appear in Theoretical Computer Science. </note>
Reference-contexts: The complexity of word equations is between NP and 3-NEXPTIME (Koscielski & Pacholski 1996). A more precise correspondence between word equations is described in <ref> (Gurevich & Voronkov 1997a, Gurevich & Voronkov 1997b) </ref> and described below. Let A be any alphabet with more than one symbol. Denote by W the set of pairs of words on A. <p> A solution to a system of ideal membership equations is any word substitution that solves each equation in the system. The ideal membership problem is the decision problem of solvability of systems of ideal membership equations. Theorem 4.10 <ref> (Gurevich & Voronkov 1997a, Gurevich & Voronkov 1997b) </ref> The ideal membership equation is decidable if and only if FI ( ; 2; 0) is decidable. 2 It is known that the if ideal membership problem is decidable, then it is also decidable with regular constraints (every word variable ranges over a <p> 1997a, Gurevich & Voronkov 1997b) The ideal membership equation is decidable if and only if FI ( ; 2; 0) is decidable. 2 It is known that the if ideal membership problem is decidable, then it is also decidable with regular constraints (every word variable ranges over a regular set) <ref> (Gurevich & Voronkov 1997a) </ref>. However, this does not give the undecidability result for FI ( ; 2; 0) , since word equations with regular constraints are decidable (Schulz 1990).
Reference: <author> Gurevich, Y. & Voronkov, A. </author> <year> (1997b), </year> <title> Monadic simultaneous rigid E-unification and related problems, </title> <editor> in P. Degano, R. Corrieri & A. Marchetti-Spaccamella, eds, </editor> <booktitle> `Automata, Languages and Programming. 24th International Colloquium, ICALP'97', Vol. 1256 of Lecture Notes in Computer Science, Bologna, Italy, </booktitle> <pages> pp. 154-165. </pages>
Reference: <author> Herbrand, J. </author> <year> (1972), </year> <title> Logical Writings, </title> <publisher> Harvard University Press. </publisher>
Reference-contexts: The results of this paper can be reformulated for different notions of multiplicity and different characterizations of provability similar to Theorem 3.1. We choose one particular characterization and the corresponding representation-independent notion. This characterization is nothing but Herbrand's theorem. Theorem 3.2 <ref> (Herbrand 1972) </ref> A formula 9x'(x), where '(x) is quantifier-free, is provable iff there exists a positive integer and a substitution such that ('(x 1 ) _ : : : _ '(x )) is provable. The matrix characterization of provability of Theorem 3.1 is just a reformulation of Herbrand's theorem.
Reference: <author> Joyner jr, W. </author> <year> (1976), </year> <title> `Resolution strategies as decision procedures', </title> <journal> Journal of the Association for Computing Machinery 23, </journal> <pages> 398-417. </pages>
Reference-contexts: If we get some complexity results, it would be quite interesting to compare them with the complexity of known resolution-based decision procedures <ref> (Joyner jr 1976, Fermuller, Leitsch, Tammet & Zamov 1993, Leitsch 1997) </ref>. Some comparison of resolution and tableau-like methods was done in (Bibel 1982a, Eder 1988, Eder 1991). The aim of Problem 5 is to compare resolution and tableau-like methods in the cases when they can be compared.
Reference: <author> Koscielski, A. & Pacholski, L. </author> <year> (1996), </year> <title> `Complexity of Makanin's algorithm', </title> <journal> Journal of the Association for Computing Machinery 43(4), </journal> <pages> 670-684. </pages>
Reference-contexts: The complexity of word equations is between NP and 3-NEXPTIME <ref> (Koscielski & Pacholski 1996) </ref>. A more precise correspondence between word equations is described in (Gurevich & Voronkov 1997a, Gurevich & Voronkov 1997b) and described below. Let A be any alphabet with more than one symbol. Denote by W the set of pairs of words on A.
Reference: <author> Leitsch, A. </author> <year> (1997), </year> <title> The Resolution Calculus, </title> <publisher> Springer Verlag. </publisher>
Reference-contexts: Theorem 5.8 shows that for a "simply decidable" fragment of predicate calculus we have to solve undecidable subproblems, when the traditional loop is used. Note that <ref> (Fermuller & Leitsch 1997) </ref> proved that the class of ground-negative formulas can be decided by traditional resolution-based methods, namely by positive hyperresolution with ordered paramodulation. The next question we address is the following.
Reference: <author> Lipshitz, L. </author> <year> (1978), </year> <title> `The Diophantine problem for addition and divisibility', </title> <journal> Transactions of the American Mathematical Society 235, </journal> <pages> 271-283. </pages>
Reference: <author> Lipshitz, L. </author> <year> (1981), </year> <title> `Some remarks on the Diophantine problem for addition and divisibility', </title> <journal> Bull. Soc. Math. Belg. Ser. </journal> <volume> B 33(1), </volume> <pages> 41-52. </pages>
Reference-contexts: Establishing complexity of FI ( ; 1; 0) will most likely require a complexity result for the Diophantine problem for addition and divisibility. The complexity of the latter problem was investigated in <ref> (Lipshitz 1981) </ref>, but it is only known that the problem is NP-hard. Thus, we have Open problem 2 What is the complexity of FI ( ; 1; 0) ? For Monadic Formula Instantiation with more than one function symbol, the following results are known.
Reference: <author> Loveland, D. </author> <year> (1968), </year> <title> `Mechanical theorem proving by model elimination', </title> <journal> Journal of the Association for Computing Machinery 15, </journal> <pages> 236-251. </pages>
Reference-contexts: By semantic tableaux and related methods we understand: 1. the tableau method (Fitting 1996); 2. the method of matings (Andrews 1981, Gallier 1986), or the connection method (Bibel 1981, Bibel & Eder 1993); 3. model elimination <ref> (Loveland 1968, Loveland 1978) </ref>. There is no unifying name for these kind of methods. They may be called matrix methods (Degtyarev & Voronkov 1995) due to Prawitz (Prawitz 1970), extension methods (Bibel 1987, Petermann 1993), non-local methods (Maslov, Mints & Orevkov 1983) or rigid-variable methods (Voronkov 1997b).
Reference: <author> Loveland, D. </author> <year> (1978), </year> <title> Automated Theorem Proving: a Logical Basis, </title> <publisher> North Holland. </publisher>
Reference: <author> Lyaletski, A. </author> <year> (1981), </year> <title> `A variant of Herbrand's theorem for prenex formulas', </title> <booktitle> Cybernetics 17, </booktitle> <pages> 112-116. </pages>
Reference-contexts: There are at least two approaches for getting around Theorem 4.6 in this case. Tableaux without Skolemization. One possible approach was introduced in (Voronkov 1996) for intuitionistic logic, but it works for classical logic as well. A matrix characterization of validity based on similar ideas appeared already in <ref> (Lyaletski 1981, Bibel 1982b) </ref>. The idea is to augment Formula Instantiation with non-occurrence constraints. Any such constraint have the form "c does not occur in t", where c is a constant and t is an arbitrary term.
Reference: <author> Mart'janov, V. </author> <year> (1977), </year> <title> `Universal extended theories of integers', </title> <booktitle> Algebra i Logika 16(5), </booktitle> <pages> 588-602. </pages>
Reference: <author> Maslov, S., Mints, G. & Orevkov, V. </author> <year> (1983), </year> <title> Mechanical proof-search and the theory of logical deduction in the USSR, </title> <editor> in J.Siekmann & G.Wrightson, eds, </editor> <booktitle> `Automation of Reasoning (Classical papers on Computational Logic)', </booktitle> <volume> Vol. 1, </volume> <publisher> Springer Verlag, </publisher> <pages> pp. 29-38. </pages> <note> 26 BIBLIOGRAPHY Moser, </note> <author> M., Lynch, C. & Steinbach, J. </author> <year> (1995), </year> <title> Model elimination with basic ordered paramodula-tion, </title> <type> Technical Report AR-95-11, </type> <institution> Fakultat fur Informatik, Technische Universitat Munchen, Munchen. </institution>
Reference-contexts: There is no unifying name for these kind of methods. They may be called matrix methods (Degtyarev & Voronkov 1995) due to Prawitz (Prawitz 1970), extension methods (Bibel 1987, Petermann 1993), non-local methods <ref> (Maslov, Mints & Orevkov 1983) </ref> or rigid-variable methods (Voronkov 1997b). We shall call them tableau-like methods and use matings for illustration. Section 2 Preliminaries In this section we introduce some notation and terminology. We use boldface notation to denote sequences of symbols.
Reference: <author> Papadimitriou, C. </author> <year> (1994), </year> <title> Computational Complexity, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: We use reduction of the QBF 2 problem known to be p 2 -complete, see e.g. <ref> (Papadimitriou 1994) </ref>. This problem can be formulated as follows. Consider the algebra 2 with two elements 0; 1 in the signature with two constants 0; 1 representing these elements. Given a sentence of this signature 8 Section 4.2.
Reference: <author> Petermann, U. </author> <year> (1993), </year> <title> A framework for integrating equality reasoning into the extension procedure, </title> <editor> in D. Basin, R. Hahnle, B. Fronhofer, J. Posegga & C. Schwind, eds, </editor> <booktitle> `Proc. Workshop on Theorem Proving with Analytic Tableaux and Related Methods', </booktitle> <pages> pp. 195-207. </pages>
Reference: <author> Plaisted, D. </author> <year> (1995), </year> <title> Special cases and substitutes for rigid E-unification, </title> <type> Technical Report MPI-I-95-2-010, </type> <institution> Max-Planck-Institut fur Informatik. </institution>
Reference-contexts: proved, several papers with nonstandard approaches to equality appeared, for example * The equality elimination method: a combination of tableaux and resolution (Degtyarev & Voronkov 1995, Degtyarev & Voronkov 1996b). * A goal-oriented strategy for model elimination (Moser, Lynch & Steinbach 1995). * Incomplete but terminating procedures for Formula Instantiation <ref> (Plaisted 1995, Degtyarev & Voronkov 1998) </ref>. * Optimized translations of logic with equality into logic without equality (Bachmair, Ganzinger & Voronkov 1998). 4.3 Function symbols introduced by Skolemization Sometimes, formulas to be proved do not have function symbols, but function symbols are introduced by Skolemization.
Reference: <author> Prawitz, D. </author> <year> (1970), </year> <title> A proof procedure with matrix reduction, </title> <editor> in M. Laudet, L. Lacombe, L. Nolin & M. Schutzenberger, eds, </editor> <booktitle> `Symp. on Automatic Demonstration', Vol. 125 of Lecture Notes in Mathematics, </booktitle> <publisher> Springer Verlag, </publisher> <pages> pp. 207-213. </pages>
Reference-contexts: There is no unifying name for these kind of methods. They may be called matrix methods (Degtyarev & Voronkov 1995) due to Prawitz <ref> (Prawitz 1970) </ref>, extension methods (Bibel 1987, Petermann 1993), non-local methods (Maslov, Mints & Orevkov 1983) or rigid-variable methods (Voronkov 1997b). We shall call them tableau-like methods and use matings for illustration. Section 2 Preliminaries In this section we introduce some notation and terminology.
Reference: <author> Schulz, K. </author> <year> (1990), </year> <title> Makanin's algorithm: Two improvements and a generalization, </title> <editor> in K. Schulz, ed., </editor> <booktitle> `Proceedings of the First International Workshop on Word Equations and Related Topics, Tubingen', number 572 in `Lecture Notes in Computer Science'. </booktitle>
Reference-contexts: However, this does not give the undecidability result for FI ( ; 2; 0) , since word equations with regular constraints are decidable <ref> (Schulz 1990) </ref>. Thus, we have Open problem 3 Is FI ( ; 2; 0) decidable? This problem is also related to the classification of decidable prenex fragments of intuitionistic logic depending on the signature and the quantifier prefix (Degtyarev & Voronkov 1996a, Degtyarev, Gurevich & Voronkov 1996).
Reference: <author> Stickel, M. </author> <year> (1985), </year> <title> `Automated deduction by theory resolution', </title> <journal> Journal of Automated Reasoning 1, </journal> <pages> 333-355. </pages>
Reference-contexts: Herbrand's theorem takes place for theories axiomatized by universally quantified formulas. Automated deduction with respect to a particular theory is considered in a number of papers, for example in <ref> (Stickel 1985) </ref>. As a particular example we can consider the theory of transitive relations that plays an important role in automated reasoning (Bachmair & Ganzinger 1994) in connection with axiomatization of orderings. First, we note a trivial but useful property of Formula Instantiation.
Reference: <author> Veanes, M. </author> <year> (1997), </year> <title> The undecidability of simultaneous rigid E-unification with two variables, </title> <editor> in G. Gottlob, A. Leitsch & D. Mundici, eds, </editor> <booktitle> `Computational Logic and Proof Theory. 5th Kurt Godel Colloquium, KGC'97', Vol. 1289 of Lecture Notes in Computer Science, </booktitle> <address> Vienna, Austria, </address> <pages> pp. 305-318. </pages>
Reference-contexts: Andrei Voronkov. Herbrand's theorem, automated reasoning and semantic tableaux 9 Theorem 4.6 (Degtyarev & Voronkov 1996c, Degtyarev & Voronkov 1996d) FI ( ; ; 1) is undecidable. It is undecidable already for formulas with two variables <ref> (Veanes 1997) </ref>. 2 As for the number of variables, this undecidability result is sharp, as the following theorem shows. <p> It is undecidable already for formulas with two variables (Veanes 1997). 2 As for the number of variables, this undecidability result is sharp, as the following theorem shows. Theorem 4.7 <ref> (Degtyarev, Gurevich, Narendran, Veanes & Voronkov 1997) </ref> FI ( ; ; ) is decidable for formulas with one variable. 2 (Degtyarev et al. 1997) prove that simultaneous rigid E-unification with one variable in the signature ( ; ; 1) is EXPTIME-complete. <p> Given a quantifier-free formula '(x), is there a substitution such that the formula is provable? Note that Formula Instantiation can be described as HS 1 (or HS 1 for formulas with equality). <ref> (Gurevich & Veanes 1997) </ref> also give a reduction of HS 1 to HS k . This reduction also works for many fragments of predicate calculus. (Voda & Komara 1995) prove that HS k is undecidable, for every k, for formulas with equality. <p> or without function symbols and with or without equality. 2 Theorem 5.8 (Voronkov 1997b) For all formula-independent strategies S, the problem HI (S) is undecidable for the class of ground-negative formulas. 2 This theorem is a consequence of Theorem 5.5 and the undecidability of all HS k for ground-negative formulas <ref> (Gurevich & Veanes 1997) </ref>. Theorem 5.8 shows that for a "simply decidable" fragment of predicate calculus we have to solve undecidable subproblems, when the traditional loop is used.
Reference: <author> Voda, P. & Komara, J. </author> <year> (1995), </year> <title> On Herbrand skeletons, </title> <type> Technical report, </type> <institution> Institute of Informatics, Comenius University Bratislava. </institution>
Reference-contexts: Evidently, for every signature in which FI () is decidable, the problem HI (S) is also decidable. <ref> (Voda & Komara 1995) </ref> introduced a decision problem called Herbrand Skeleton. Definition 5.4 (Herbrand Skeleton) Let k be a positive integer. Herbrand Skeleton for multiplicity k, denoted HS k (and HS k for logic with equality), is the following decision problem. <p> This reduction also works for many fragments of predicate calculus. <ref> (Voda & Komara 1995) </ref> prove that HS k is undecidable, for every k, for formulas with equality. They note that the Herbrand Skeleton problem plays an important role in automated deduction in tableau-like methods.
Reference: <author> Voronkov, A. </author> <year> (1996), </year> <title> Proof search in intuitionistic logic based on constraint satisfaction, </title> <editor> in P. Migli-oli, U. Moscato, D. Mundici & M. Ornaghi, eds, </editor> <title> `Theorem Proving with Analytic Tableaux and Related Methods. </title> <booktitle> 5th International Workshop, TABLEAUX '96', Vol. 1071 of Lecture Notes in Artificial Intelligence, Terrasini, Palermo Italy, </booktitle> <pages> pp. 312-329. </pages>
Reference-contexts: For Monadic Formula Instantiation, i.e. Formula Instantiation with unary function symbols only, the decidability is an open problem. Some known results are the following. In the case of one unary function symbol, we have Theorem 4.8 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 1; 0) is decidable. 2 The decidability proof of this theorem essentially uses the decidability of the so-called Diophantine problem for addition and divisibility proved in (Beltyukov 1976, Mart'janov 1977, Lipshitz 1978), i.e. solving equations over natural numbers in the signature consisting of <p> Using a standard encoding of words on an arbitrary alphabet by words on a two-letter alphabet, one can easily prove Theorem 4.9 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 2; 0) is polynomial-time equivalent to FI ( ; 2; 0) . 2 Moreover, (Degtyarev, Matiyasevich & Voronkov 1996) noted that there is a polynomial-time reduction of word equations to FI ( ; 2; 0) . <p> Using a standard encoding of words on an arbitrary alphabet by words on a two-letter alphabet, one can easily prove Theorem 4.9 <ref> (Degtyarev, Matiyasevich & Voronkov 1996) </ref> FI ( ; 2; 0) is polynomial-time equivalent to FI ( ; 2; 0) . 2 Moreover, (Degtyarev, Matiyasevich & Voronkov 1996) noted that there is a polynomial-time reduction of word equations to FI ( ; 2; 0) . The complexity of word equations is between NP and 3-NEXPTIME (Koscielski & Pacholski 1996). <p> There are at least two approaches for getting around Theorem 4.6 in this case. Tableaux without Skolemization. One possible approach was introduced in <ref> (Voronkov 1996) </ref> for intuitionistic logic, but it works for classical logic as well. A matrix characterization of validity based on similar ideas appeared already in (Lyaletski 1981, Bibel 1982b). The idea is to augment Formula Instantiation with non-occurrence constraints.
Reference: <author> Voronkov, A. </author> <year> (1997a), </year> <title> The ground-negative fragment of first-order logic is p 2 -complete, </title> <type> UPMAIL Technical Report 144, </type> <institution> Uppsala University, Computing Science Department. </institution> <note> To appear in the Journal of Symbolic Logic. </note>
Reference-contexts: The complexity of word equations is between NP and 3-NEXPTIME (Koscielski & Pacholski 1996). A more precise correspondence between word equations is described in <ref> (Gurevich & Voronkov 1997a, Gurevich & Voronkov 1997b) </ref> and described below. Let A be any alphabet with more than one symbol. Denote by W the set of pairs of words on A. <p> A solution to a system of ideal membership equations is any word substitution that solves each equation in the system. The ideal membership problem is the decision problem of solvability of systems of ideal membership equations. Theorem 4.10 <ref> (Gurevich & Voronkov 1997a, Gurevich & Voronkov 1997b) </ref> The ideal membership equation is decidable if and only if FI ( ; 2; 0) is decidable. 2 It is known that the if ideal membership problem is decidable, then it is also decidable with regular constraints (every word variable ranges over a <p> 1997a, Gurevich & Voronkov 1997b) The ideal membership equation is decidable if and only if FI ( ; 2; 0) is decidable. 2 It is known that the if ideal membership problem is decidable, then it is also decidable with regular constraints (every word variable ranges over a regular set) <ref> (Gurevich & Voronkov 1997a) </ref>. However, this does not give the undecidability result for FI ( ; 2; 0) , since word equations with regular constraints are decidable (Schulz 1990). <p> The class of ground-negative formulas is decidable. 1 At the moment any reasonable definition of the size of a formula is enough for our purpose. Andrei Voronkov. Herbrand's theorem, automated reasoning and semantic tableaux 17 Theorem 5.7 <ref> (Voronkov 1997a) </ref> The provability problem for ground-negative formulas is decidable and p 2 -complete, with or without function symbols and with or without equality. 2 Theorem 5.8 (Voronkov 1997b) For all formula-independent strategies S, the problem HI (S) is undecidable for the class of ground-negative formulas. 2 This theorem is a
Reference: <author> Voronkov, A. </author> <year> (1997b), </year> <title> Strategies in rigid-variable methods, </title> <editor> in M. Pollack, ed., </editor> <booktitle> `Proc. of the Fifteenth International Joint Conference on Artificial Intelligence (IJCAI-97)', </booktitle> <volume> Vol. </volume> <pages> 1, </pages> <address> Nagoya, Japan, </address> <pages> pp. 114-119. </pages>
Reference-contexts: There is no unifying name for these kind of methods. They may be called matrix methods (Degtyarev & Voronkov 1995) due to Prawitz (Prawitz 1970), extension methods (Bibel 1987, Petermann 1993), non-local methods (Maslov, Mints & Orevkov 1983) or rigid-variable methods <ref> (Voronkov 1997b) </ref>. We shall call them tableau-like methods and use matings for illustration. Section 2 Preliminaries In this section we introduce some notation and terminology. We use boldface notation to denote sequences of symbols. <p> Let us now consider how Formula Instantiation and Herbrand Instantiation behave on a decidable class of so-called ground-negative formulas. A formula ' is ground-negative <ref> (Voronkov 1997b) </ref> if all negative atomic subformulas of ' are ground (i.e. variable-free). The class of ground-negative formulas is decidable. 1 At the moment any reasonable definition of the size of a formula is enough for our purpose. Andrei Voronkov. <p> Andrei Voronkov. Herbrand's theorem, automated reasoning and semantic tableaux 17 Theorem 5.7 (Voronkov 1997a) The provability problem for ground-negative formulas is decidable and p 2 -complete, with or without function symbols and with or without equality. 2 Theorem 5.8 <ref> (Voronkov 1997b) </ref> For all formula-independent strategies S, the problem HI (S) is undecidable for the class of ground-negative formulas. 2 This theorem is a consequence of Theorem 5.5 and the undecidability of all HS k for ground-negative formulas (Gurevich & Veanes 1997). <p> The next question we address is the following. Can formula-dependent strategies be better than formula-independent ones? We shall prove that this is the case for the ground-negative formulas. Theorem 5.9 <ref> (Voronkov 1997b) </ref> HI (2 j'j + n) is p 2 -complete for ground-negative formulas. Instead of 2 j'j + n we could take any strategy that chooses the initial multiplicity 2 p , where p is the number of negative atomic subformulas in '.
Reference: <author> Yasuura, H. </author> <year> (1984), </year> <title> On parallel computational complexity of unification, </title> <booktitle> in `Proc. of the Conference on Fifth Generation Computer Systems', ICOT, </booktitle> <pages> pp. 235-243. </pages>
References-found: 55

