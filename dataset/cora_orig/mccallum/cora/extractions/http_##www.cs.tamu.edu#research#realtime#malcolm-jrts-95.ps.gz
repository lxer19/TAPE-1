URL: http://www.cs.tamu.edu/research/realtime/malcolm-jrts-95.ps.gz
Refering-URL: http://www.cs.tamu.edu/research/realtime/new/main.html
Root-URL: http://www.cs.tamu.edu
Title: Real Time Systems,  Hard Real-Time Communication in Multiple-Access Networks  
Author: NICHOLAS MALCOLM AND WEI ZHAO Editor: John A. Stankovic 
Keyword: Media access control (MAC), multiple-access networks, real-time communication.  
Address: College Station TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Note: c 1995 Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Pubnum: 9,  
Email: fmalcolm,zhaog@cs.tamu.edu  
Date: 75-107 (1995)  
Abstract: With the increasing use of distributed hard real-time systems, the ability of computer networks to handle hard real-time message traffic is becoming more important. For traditional networks, maximizing the throughput or minimizing the average message delay is the most important performance criteria. In the hard real-time domain, however, concern focuses on satisfying the time constraints of individual messages. This paper examines recent developments in hard real-time communication in local area multiple-access networks. Two general strategies are used in hard real-time communication: the guarantee strategy and the best-effort strategy. In the former, messages are guaranteed to meet their deadlines during normal operation of the network. In the best-effort strategy, the network will attempt to send messages before their deadlines, but no guarantees are given. Real-time message traffic can be distinguished according to whether it is best suited for the guarantee strategy or the best-effort strategy. Although this paper concentrates on multiple-access networks, many of the concepts presented and lessons learned are also applicable to other types of networks. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawal, G., B. Chen, W. Zhao, and S. Davari. </author> <year> 1992. </year> <title> Guaranteeing synchronous message deadlines in high speed token ring networks with timed token protocol. </title> <booktitle> In Proceedings of the 12th IEEE International Conference on Distributed Computing Systems, </booktitle> <pages> pages 468-475. </pages>
Reference-contexts: This can also cause message deadlines to be missed. Guaranteeing synchronous message deadlines is thus dependent on an appropriate allocation of the synchronous bandwidth. 3.2.2. Allocating Synchronous Bandwidth Some of the synchronous bandwidth allocation schemes that have been studied <ref> (Agrawal et al. 1992, 1993) </ref> are listed below: 6 * The full length allocation scheme. <p> Some other synonymous terms that researchers use are bandwidth allocation (Ulm 1982), synchronous allocation (Jain 1991), synchronous bandwidth assignments (Johnson 1987), high priority token holding time (Pang and Tobagi 1989), and synchronous capacity <ref> (Agrawal et al. 1992, 1993) </ref>. We use the term synchronous bandwidth in order to be consistent with the current FDDI standard. 5. <p> This assumption involves no loss of generality, because a network in which several streams may originate at each node can be transformed into a logically equivalent network in which only a single stream originates at each node <ref> (Agrawal et al. 1992) </ref>. 7. If the system has advance knowledge about asynchronous messages, then the term "sporadic" is sometimes used in the literature instead of "asynchronous." ARTICLE TITLE 41 8. Another optimal policy is the earliest-deadline-first (EDF) policy. In this paper we concentrate on the MLF policy.
Reference: <author> Agrawal, G., B. Chen, and W. Zhao. </author> <year> 1993. </year> <title> Local synchronous capacity allocation schemes for guaranteeing message deadlines with the timed token protocol. </title> <booktitle> In Proceedings of INFOCOM '93, </booktitle> <pages> pages 186-193. </pages> <note> ANSI Standard X3T9.5/88-139, Rev 4.0. </note> <year> 1990. </year> <title> FDDI Media Access Control (MAC). ANSI/IEEE Standard 802.4-1985. 1985. Token-Passing Bus Access Method and Physical Layer Specifications. </title>
Reference-contexts: 3n (1ff) Normalized proportional H i = C i =T i U (TTRT t ) 1ff 3 Local H i = C i bT i =TTRT c1 1ff * W:C:A:U: is an abbreviation of `Worst Case Achievable Utilization.' * ff = t=T TRT . a period of length T i <ref> (Agrawal et al. 1993) </ref>. Thus the synchronous bandwidth is allocated as given below: H i = bT i =TTRT c 1 : (12) Table 1 shows the worst case achievable utilizations of the synchronous bandwidth allocation schemes introduced above.
Reference: <author> Arvind, K. </author> <year> 1989. </year> <title> A new probabilistic algorithm for clock synchronization. </title> <type> Technical Report 88-81, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst. </institution>
Reference: <author> Arvind, K., K. Ramamritham, and J. A. Stankovic. </author> <year> 1991a. </year> <title> Window MAC protocols for real-time communication services. </title> <type> Technical Report 90-127, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst. </institution>
Reference: <author> Arvind, K., K. Ramamritham, and J. A. Stankovic. </author> <year> 1991b. </year> <title> A local area network architecture for communication in distributed real-time systems. </title> <journal> Journal of Real-Time Systems, </journal> <volume> 3(2) </volume> <pages> 115-147. </pages>
Reference: <author> Arvind, K. </author> <year> 1991. </year> <title> Protocols for Distributed Real-Time Systems. </title> <type> PhD thesis, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst. </institution>
Reference: <author> Bhargava, A., J. F. Kurose, and D. Towsley. </author> <year> 1988. </year> <title> A hybrid media access protocol for high-speed ring networks. </title> <journal> IEEE Transactions on Selected Areas in Communications, </journal> <volume> 6(6) </volume> <pages> 924-933. </pages>
Reference: <author> Bially, T., B. Gold, and S. Seneff. </author> <year> 1980. </year> <title> A technique for adaptive voice flow control in integrated packet networks. </title> <journal> IEEE Transactions on Communications, COM-28(3):325-333. </journal>
Reference: <author> Chen, B., G. Agrawal, and W. Zhao. </author> <year> 1992. </year> <title> Optimal synchronous capacity allocation for hard real-time communications with the timed token protocol. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 198-207. </pages>
Reference-contexts: The synchronous bandwidth allocation schemes discussed above are not optimal. An optimal synchronous bandwidth allocation scheme is able to guarantee that the message deadlines will be met whenever it is possible to do so. An optimal synchronous bandwidth allocation scheme has been developed <ref> (Chen et al. 1992) </ref>, and is known to have a worst case achievable utilization between 33% to 40%. However, the optimal scheme is more complicated than the nonoptimal schemes discussed here, and might be difficult to implement.
Reference: <author> Chlamtac, I., and A. Ganz. </author> <year> 1988. </year> <title> A multibus train communication (AMTRAC) architecture for high-speed fiber optic networks. </title> <journal> IEEE Transactions on Selected Areas in Communications, </journal> <volume> 6(6) </volume> <pages> 903-912. </pages>
Reference: <author> Ciminiera, L., P. Montuschi, and A. Valenzano. </author> <year> 1989. </year> <title> Some properties of double-ring networks with real-time constraints. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 360-368. </pages>
Reference: <author> Clark, D. D., S. Shenker, and L. Zhang. </author> <year> 1992. </year> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 14-26. </pages>
Reference-contexts: Although this paper concentrates on multiple-access networks, many of the concepts presented and lessons learned are equally applicable to other types of networks. For example, the concept of providing both guaranteed and best-effort services for real-time message traffic has also been proposed for integrated services packet networks <ref> (Clark et al. 1992) </ref>. ARTICLE TITLE 3 One of the key lessons learned in designing real-time communication protocols for multiple-access networks is that network scheduling is fundamentally different from centralized processor scheduling. Much of the work on network scheduling has been based on existing centralized scheduling algorithms.
Reference: <author> Cristian, F. </author> <year> 1989. </year> <title> Probabilistic clock synchronization. </title> <journal> Distributed Computing, </journal> <volume> 3 </volume> <pages> 146-158. </pages> <editor> de Prycker, M. </editor> <year> 1991. </year> <title> Asynchronous Transfer Mode: Solution for Broadband ISDN. </title> <publisher> Ellis Horwood. </publisher>
Reference: <author> Dolev, D., J. Y. Halpern, and H. R. Strong. </author> <year> 1986. </year> <title> On the possibility and impossibility of achieving clock synchronization. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32 </volume> <pages> 230-250. </pages>
Reference: <author> Ferrari, D., and D. C. Verma. </author> <year> 1990. </year> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, SAC-8(3):368-379. </journal>
Reference: <author> Ghanbari, M. </author> <year> 1989. </year> <title> Two-layer coding of video signals for VBR networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 7(5) </volume> <month> 771-781. </month> <title> 42 AUTHOR NAME OR NAMES Green, </title> <editor> D. T., and D. T. Marlow. </editor> <year> 1989. </year> <title> SAFENET | a LAN for navy mission critical systems. </title> <booktitle> In Proceedings of the IEEE Conference on Local Computer Networks, </booktitle> <pages> pages 340-346. </pages>
Reference: <author> Grow, R. M. </author> <year> 1982. </year> <title> A timed token protocol for local area networks. In Proceedings of Electro/82, Token Access Protocols, </title> <type> paper 17/3. </type>
Reference-contexts: In particular, the transmission control process of the timed token protocol is examined to determine how to allocate the channel bandwidth among the nodes so that the synchronous messages are guaranteed. 3.2.1. The Timed Token Protocol The timed token protocol <ref> (Grow 1982) </ref> is a token passing protocol in which the amount of time that a node may hold the token is bounded.
Reference: <author> Hong, J., X. Tan, and D. Towsley. </author> <year> 1989. </year> <title> A performance analysis of minimum laxity and earliest deadline scheduling in a real-time system. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(12) </volume> <pages> 1736-1744. </pages>
Reference: <author> Hwang, R.-H., J. F. Kurose, and D. Towsley. </author> <year> 1992. </year> <title> The effect of processing delay and QOS requirements in high speed networks. </title> <booktitle> In Proceedings of IEEE Infocom'92, </booktitle> <pages> pages 160-169. </pages> <publisher> IEEE Standard 802.5-1989. </publisher> <year> 1989. </year> <title> Token Ring Access Method and Physical Layer Specifications. </title>
Reference: <author> Jain, R. </author> <year> 1991. </year> <title> Performance analysis of FDDI token ring networks: Effect of parameters and guidelines for setting TTRT. </title> <journal> IEEE LTS, </journal> <volume> 2(2) </volume> <pages> 16-22. </pages>
Reference-contexts: Note, however, that using a token ring protocol to provide priority arbitration in a bus network would be very inefficient, because of the overhead due to passing the token. 4. Some other synonymous terms that researchers use are bandwidth allocation (Ulm 1982), synchronous allocation <ref> (Jain 1991) </ref>, synchronous bandwidth assignments (Johnson 1987), high priority token holding time (Pang and Tobagi 1989), and synchronous capacity (Agrawal et al. 1992, 1993). We use the term synchronous bandwidth in order to be consistent with the current FDDI standard. 5.
Reference: <author> Jayasumana, A. P., and G. G. Jayasumana. </author> <year> 1989. </year> <title> On the use of the IEEE 802.4 token bus in distributed real-time control systems. </title> <journal> IEEE Transactions on Industrial Electronics, </journal> <volume> 36(3) </volume> <pages> 391-397. </pages>
Reference: <author> Johnson, M. J. </author> <year> 1987. </year> <title> Proof that timing requirements of the FDDI token ring protocols are satisfied. </title> <journal> IEEE Transactions on Communications, COM-35(6):620-625. </journal>
Reference-contexts: Note, however, that using a token ring protocol to provide priority arbitration in a bus network would be very inefficient, because of the overhead due to passing the token. 4. Some other synonymous terms that researchers use are bandwidth allocation (Ulm 1982), synchronous allocation (Jain 1991), synchronous bandwidth assignments <ref> (Johnson 1987) </ref>, high priority token holding time (Pang and Tobagi 1989), and synchronous capacity (Agrawal et al. 1992, 1993). We use the term synchronous bandwidth in order to be consistent with the current FDDI standard. 5.
Reference: <author> Kalmanek, C. R., H. Kanakia, and S. Keshav. </author> <year> 1990. </year> <title> Rate controlled servers for very high-speed networks. </title> <booktitle> In Proceedings of IEEE Global Telecommunications Conference, </booktitle> <pages> pages 300.3.1-300.3.9. </pages>
Reference: <author> Kamat, S., and W. Zhao. </author> <year> 1993. </year> <title> Real-time schedulability of two token ring protocols. </title> <booktitle> In Proceedings of the IEEE International Conference on Distributed Computing Systems, </booktitle> <pages> pages 347-354. </pages>
Reference-contexts: In addition to the worst case achievable utilization, the average breakdown utilization of the rate monotonic algorithm with priority driven protocols is also of interest <ref> (Kamat and Zhao 1993) </ref>. Figure 4 shows the average breakdown utilization. The figure shows that the average breakdown utilization varies as the network bandwidth changes. The average breakdown utilization can be quite high. For example, when the bandwidth is around 10 Mbits/s, the average breakdown utilization is around 70%. <p> This result is achieved without incurring the cost of global priority arbitration. Similarly to rate monotonic scheduling with priority driven protocols, the average breakdown utilization is also of interest for the timed token protocol <ref> (Kamat and Zhao 1993) </ref>. Figure 5 shows the average breakdown utilization for the timed token protocol using the local allocation scheme. The figure shows that for the network configuration examined, the average breakdown utilization increases with the network bandwidth.
Reference: <author> Kamat, S., G. Agrawal, and W. Zhao. </author> <year> 1994. </year> <title> On available bandwidth in FDDI-based reconfigurable networks. </title> <note> To appear in Proceedings of IEEE Infocom'94. </note>
Reference: <author> Kandlur, D. D., K. G. Shin, and D. Ferrari. </author> <year> 1991. </year> <title> Real-time communication in multi-hop networks. </title> <booktitle> In Proceedings of the 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 300-307. </pages>
Reference: <author> Karlsson, G., and M. Vetterli. </author> <year> 1989. </year> <title> Packet video and its integrationinto the network architecture. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 7(5) </volume> <pages> 739-751. </pages>
Reference: <author> Kim, B. G., and D. Towsley. </author> <year> 1986. </year> <title> Dynamic flow control protocols for packet-switching multiplexers serving real-time multipacket messagers. </title> <journal> IEEE Transactions on Communications, COM-34(4):348-356. </journal>
Reference: <author> Klein, M. H., J. P. Lehoczky, and R. Rajkumar. </author> <year> 1994. </year> <title> Rate-Monotonic Analysis for Real-Time Industrial Computing. </title> <journal> IEEE Computer, </journal> <volume> 27(1) </volume> <pages> 24-33. </pages>
Reference: <author> Kleinrock, L. </author> <year> 1985. </year> <title> Distributed systems. </title> <journal> Communications of the ACM, </journal> <volume> 28(11) </volume> <pages> 1200-1213. </pages>
Reference-contexts: Using Virtual Time Protocols Virtual time protocols are designed for use with CSMA/CD networks <ref> (Molle and Kleinrock 1985) </ref>. One of the key issues in implementing a global MLF policy is to determine the message with the minimum laxity in the system. To achieve this, some kind of communication among the nodes must occur.
Reference: <author> Kleinrock, L. </author> <year> 1992. </year> <title> The latency/bandwidth tradeoff in gigabit networks. </title> <journal> IEEE Communications Magazine, </journal> <volume> 30(4) </volume> <pages> 36-40. </pages>
Reference-contexts: Due to the mismatch in bandwidth, care must be taken when traffic is routed from a gigabit network to a slower network such as Ethernet. Further, on large gigabit networks, the network latency can play a larger role than the network bandwidth in determining the response time <ref> (Kleinrock 1992) </ref>. All of these factors provide additional challenges to the designers of network protocols, for example, in the area of high speed local area networks (Bhargava et al. 1988; Chlamtac and Ganz 1988; Scholl and Coden 1988; Tobagi et al. 1983; Zafirovic-Vukotic et al. 1988).
Reference: <author> Kopetz, H., and G. Grunsteidl. </author> <year> 1994. </year> <title> TTP | A Protocol for Fault-Tolerant Real-Time Systems. </title> <journal> IEEE Computer, </journal> <volume> 27(1) </volume> <pages> 14-23. </pages>
Reference-contexts: In addition to synchronous bandwidth allocation with the timed token protocol, another transmission control based approach to guaranteeing synchronous message deadlines is to use round robin scheduling among the synchronous message streams. For example, the TDMA protocol can be used with this technique <ref> (Kopetz and Grunsteidl 1994) </ref>. In the TDMA protocol, time is divided into frames and further into slots. Synchronous messages can be guaranteed by dedicating one or more slots in each frame to messages from a given stream.
Reference: <author> Kopetz, H., and W. Ochsenreiter. </author> <year> 1987. </year> <title> Clock synchronization in distributed real-time systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 36(8) </volume> <pages> 933-940. </pages>
Reference: <author> Krishna, C. M., and Y. H. Lee, editors. </author> <year> 1991. </year> <journal> Special issue on real-time systems. IEEE Computer, </journal> <volume> 24(5). </volume>
Reference: <author> Kung, H. T. </author> <year> 1992. </year> <title> Gigabit local area networks: A systems perspective. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 79-89. </pages>
Reference-contexts: The speed of future networks will be of the order of 1 gigabit per second (Gbits/s) or higher. Gigabit networks introduce additional problems that must be considered. Message traffic on gigabit networks is expected to be highly bursty because of the high rate at which messages can be transmitted <ref> (Kung 40 AUTHOR NAME OR NAMES 1992) </ref>. Due to the mismatch in bandwidth, care must be taken when traffic is routed from a gigabit network to a slower network such as Ethernet.
Reference: <author> Kurose, J. F., M. Schwartz, and Y. Yemini. </author> <year> 1984. </year> <title> Multiple-access protocols and time constrained communication. </title> <journal> Computing Surveys, </journal> <volume> 16(1) </volume> <pages> 43-70. </pages>
Reference-contexts: The most important design consideration is to ensure that message deadlines are met or that the number of missed deadlines is minimized. An excellent survey of earlier work can be found in <ref> (Kurose et al. 1984) </ref>. We concentrate mainly on results since the mid 1980s. Two main strategies are used in sending real-time messages. In the guarantee strategy, an attempt is made to guarantee ahead of transmission time that the real-time messages will meet their deadlines. <p> There are many other possible access arbitration processes beyond the simple one described above. For example, the access arbitration process in the IEEE 802.5 protocol (IEEE 1989) allows network-wide priority arbitration to be performed. Other access arbitration processes such as those studied in some sliding window protocols <ref> (Kurose 1984) </ref> use the past history of channel activity to decide which node should send a message next. The access arbitration process often has a distributed implementation, and is not necessarily physically resident on any one single node. <p> The same technique can be used with Expressnet (Tobagi et al. 1983). Expressnet implements round robin scheduling on an S-shaped bus, and is especially suited for use in the high bandwidth domain. The use of TDMA or round robin scheduling for real-time messages has been discussed extensively in <ref> (Kurose et al. 1984) </ref>. Due to space limitations, that material is not repeated here. Another transmission control based approach to guaranteeing synchronous messages involves using a slotted ring network, such as FDDI-II (Teener and Gvoz-danovic 1989) or Orwell (de Prycker 1991). <p> Traditionally, window protocols have been used to arbitrate access to the channel in a fair manner, for example, on a first-come-first-served basis. In this kind of window protocol, nodes in the network agree on a common interval or window, (low, up), on the time axis <ref> (Kurose et al. 1984) </ref>. A message is regarded as being in the window if the arrival time of the message lies in the interval (low, up). If only one node has a message in the window, then that message will be sent.
Reference: <author> Kurose, J. F., M. Schwartz, and Y. Yemini. </author> <year> 1988. </year> <title> Controlling window protocols for time-constrained communication in multiple access networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 36(1) </volume> <pages> 41-49. </pages>
Reference: <author> Kurose, J. F. </author> <year> 1984. </year> <title> Time-Constrained Communication in Multiple Access Networks. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Columbia University. </institution>
Reference-contexts: The most important design consideration is to ensure that message deadlines are met or that the number of missed deadlines is minimized. An excellent survey of earlier work can be found in <ref> (Kurose et al. 1984) </ref>. We concentrate mainly on results since the mid 1980s. Two main strategies are used in sending real-time messages. In the guarantee strategy, an attempt is made to guarantee ahead of transmission time that the real-time messages will meet their deadlines. <p> There are many other possible access arbitration processes beyond the simple one described above. For example, the access arbitration process in the IEEE 802.5 protocol (IEEE 1989) allows network-wide priority arbitration to be performed. Other access arbitration processes such as those studied in some sliding window protocols <ref> (Kurose 1984) </ref> use the past history of channel activity to decide which node should send a message next. The access arbitration process often has a distributed implementation, and is not necessarily physically resident on any one single node. <p> The same technique can be used with Expressnet (Tobagi et al. 1983). Expressnet implements round robin scheduling on an S-shaped bus, and is especially suited for use in the high bandwidth domain. The use of TDMA or round robin scheduling for real-time messages has been discussed extensively in <ref> (Kurose et al. 1984) </ref>. Due to space limitations, that material is not repeated here. Another transmission control based approach to guaranteeing synchronous messages involves using a slotted ring network, such as FDDI-II (Teener and Gvoz-danovic 1989) or Orwell (de Prycker 1991). <p> Traditionally, window protocols have been used to arbitrate access to the channel in a fair manner, for example, on a first-come-first-served basis. In this kind of window protocol, nodes in the network agree on a common interval or window, (low, up), on the time axis <ref> (Kurose et al. 1984) </ref>. A message is regarded as being in the window if the arrival time of the message lies in the interval (low, up). If only one node has a message in the window, then that message will be sent.
Reference: <author> Lamport, L., and P. M. Melliar-Smith. </author> <year> 1985. </year> <title> Synchronizing clocks in the presence of faults. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 32(1) </volume> <pages> 52-78. </pages>
Reference: <author> Lehoczky, J. P. </author> <year> 1990. </year> <title> Fixed priority scheduling of periodic task sets with arbitrary deadlines. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 201-209. </pages> <note> ARTICLE TITLE 43 Lehoczky, </note> <author> J. P., and L. Sha. </author> <year> 1986. </year> <title> Performance of real-time bus scheduling algorithms. </title> <journal> ACM Performance Evaluation Review, </journal> <volume> 14(1) </volume> <pages> 44-53. </pages>
Reference: <author> Lehoczky, J. P., L. Sha, and Y. Ding. </author> <year> 1989. </year> <title> The rate monotonic scheduling algorithm: Exact characterization and average case behavior. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 166-171. </pages>
Reference: <author> Leung, J. Y.-T., T. W. Tam, and G. H. Young. </author> <year> 1990. </year> <title> On-line routing of real-time messages. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 126-135. </pages>
Reference: <author> Lim, C.-C., L.-J. Yao, and W. Zhao. </author> <year> 1991. </year> <title> A comparative study of three token ring protocols for real-time communications. </title> <booktitle> In Proceedings of the 11th IEEE International Conference on Distributed Computing Systems, </booktitle> <pages> pages 308-317. </pages>
Reference-contexts: Further improvements have been proposed for the window protocol, resulting in faster collision resolution and implementation of the exact MLF policy (Znati 1991). Window protocols in token ring networks. In a token ring network, the upper and lower bounds of the window are stored in the token <ref> (Lim et al. 1991) </ref>. The token also has a counter field that records the number of nodes with messages in the window. When the token circulates around the ring, nodes with a message in the window will increment the counter. <p> The time taken to determine the message with the minimum laxity may be significant enough to result in message loss. In order to investigate these effects, the performance of three different token ring protocols has been analytically compared <ref> (Lim et al. 1991) </ref>. 9 The protocols compared were the token passing protocol, 10 a priority driven protocol, and the window protocol. Each of these protocols has a different amount of overhead. The token passing protocol has the lowest overhead, but does not follow the MLF policy.
Reference: <author> Lim, C.-C., L.-J. Yao, and W. Zhao. </author> <year> 1992. </year> <title> Transmitting time-dependent multimedia data in FDDI networks. </title> <booktitle> In Proceedings SPIE International Symposium, OE/FIBERS'92, </booktitle> <pages> pages 144-153. </pages>
Reference: <author> Liu, C. L., and J. W. Layland. </author> <year> 1973. </year> <title> Scheduling algorithms for multiprogramming in a hard-real-time environment. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 20(1) </volume> <pages> 46-61. </pages>
Reference: <author> Liu, J. W. S., K.-J. Lin, W.-K. Shih, A. C.-S. Yu, J.-Y. Chung, and W. Zhao. </author> <year> 1991. </year> <title> Algorithms for scheduling imprecise computations. </title> <journal> IEEE Computer, </journal> <volume> 24(5) </volume> <pages> 58-68. </pages>
Reference-contexts: Another transmission control based approach to guaranteeing synchronous messages involves using a slotted ring network, such as FDDI-II (Teener and Gvoz-danovic 1989) or Orwell (de Prycker 1991). In a slotted ring, the ring is divided into a number of fixed length slots, each capable of holding one packet <ref> (Ng and Liu 1991) </ref>. By dedicating one or more slots to a given stream, or by allowing a stream to use a certain number of slots over a given time interval, synchronous messages can be guaranteed to meet their deadlines (Mukherjee et al. 1993). 4. <p> Thus a version selection scheme that takes a long time to make a decision would add significantly to the overhead of a protocol. Using multiversion messages to reduce the number of missing deadlines is similar to imprecise computation <ref> (Liu et al. 1991) </ref>. In imprecise computation, tasks may be terminated by the scheduler before their completion if this is necessary in order to meet the task deadlines. However, tasks that are terminated before completion will deliver poorer quality results.
Reference: <author> Liu, M. T. </author> <year> 1978. </year> <title> Distributed loop computer networks. </title> <booktitle> Advances in Computers, </booktitle> <volume> 17 </volume> <pages> 163-221. </pages>
Reference-contexts: Note that in any such protocol, priority arbitration itself will require some time to complete. If new messages arriving during this time are not considered in the current round of priority arbitration, then the protocol will not implement the exact highest-priority-first policy. Ring Networks In a ring network <ref> (Liu 1978) </ref>, nodes are physically arranged in a ring. A special bit pattern called the token circulates among the nodes and is used to control access to the ring.
Reference: <author> Lundelius, J., and N. Lynch. </author> <year> 1984. </year> <title> An upper and lower bound for clock synchronization. </title> <journal> Information and Control, </journal> 62(2/3):190-204. 
Reference: <author> Malcolm, N., and W. Zhao. </author> <year> 1991. </year> <title> Version selection schemes for hard real-time communications. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 12-21. </pages>
Reference-contexts: Another way to estimate the real-time load is to use the deadlines of messages <ref> (Malcolm and Zhao 1991) </ref>. A shorter version of a message should be sent if there is insufficient time remaining to send the long version of the message. Though only using information local to the sending node, this approach is responsive to the network load. <p> Handling Real-Time Message Traffic Guarantee strategy Best-effort strategy Access Transmission Access Transmission arbitration control arbitration control based based based based Synchronous Section 3.1 Section 3.2 | | messages Asynchronous Section 4.1 Section 4.2 Section 4.3 messages ing a reasonable quality of service (information completeness), particularly when message laxities are larger <ref> (Malcolm and Zhao 1991) </ref>. 5. Final Remarks This paper has surveyed real-time communication in local area multiple-access networks. There are two general strategies that can be used in handling real-time message traffic: the guarantee strategy and the best-effort strategy.
Reference: <author> Malcolm, N., and W. Zhao. </author> <year> 1993. </year> <title> Guaranteeing synchronous messages with arbitrary deadline constraints in an FDDI network. </title> <booktitle> In Proceedings of the IEEE Conference on Local Computer Networks, </booktitle> <pages> pages 186-195. </pages>
Reference: <author> Malcolm, N., and W. Zhao. </author> <year> 1994. </year> <title> Hard real-time communication in local area networks. </title> <publisher> To be published by Kluwer Academic Publishers. </publisher>
Reference-contexts: We will also briefly discuss other examples of the access arbitration based and transmission control based approaches. A more in depth discussion can be found in <ref> (Malcolm and Zhao 1994) </ref>. Regardless of the approach taken, a protocol that can guarantee synchronous messages should exhibit the following properties: 1. Synchronous message utilization. A protocol has an achievable utilization U if it can guarantee all synchronous messages from streams whose total utilization is no more than U .
Reference: <author> Malcolm, N., W. Zhao, and C. Barter. </author> <year> 1990. </year> <title> Guarantee protocols for communication in distributed real-time systems. </title> <booktitle> In Proceedings of IEEE Infocom'90, </booktitle> <pages> pages 1078-1086. </pages>
Reference-contexts: Conservative estimation can be used in conjunction with any protocol with a bounded access time. For example, conservative estimation can be used with token passing protocols if the amount of time that a node can hold the token is bounded <ref> (Malcolm et al. 1990) </ref>. For CSMA/CD networks, Arvind (1991) has proposed a new window protocol that has a bounded access time. <p> If the control message cannot be sent by its deadline, then message M is not guaranteed. The dynamic reservation method has been adopted for use with both a CSMA/CD window protocol <ref> (Malcolm et al. 1990) </ref> and a token passing protocol (Malcolm et al. 1990). When the network load is relatively low, both protocols perform better than TDMA or token passing protocols using the conservative estimation strategy. <p> If the control message cannot be sent by its deadline, then message M is not guaranteed. The dynamic reservation method has been adopted for use with both a CSMA/CD window protocol <ref> (Malcolm et al. 1990) </ref> and a token passing protocol (Malcolm et al. 1990). When the network load is relatively low, both protocols perform better than TDMA or token passing protocols using the conservative estimation strategy.
Reference: <author> Mok, A. K., and S. A. Ward. </author> <year> 1979. </year> <title> Distributed broadcast channel access. </title> <journal> Computer Networks, </journal> <volume> 3(5) </volume> <pages> 327-335. </pages>
Reference: <author> Molle, M. L., and L. Kleinrock. </author> <year> 1985. </year> <title> Virtual time CSMA: Why two clocks are better than one. </title> <journal> IEEE Transactions on Communications, COM-33(9):919-933. </journal>
Reference-contexts: Using Virtual Time Protocols Virtual time protocols are designed for use with CSMA/CD networks <ref> (Molle and Kleinrock 1985) </ref>. One of the key issues in implementing a global MLF policy is to determine the message with the minimum laxity in the system. To achieve this, some kind of communication among the nodes must occur.
Reference: <author> Montuschi, P., L. Ciminiera, and A. Valenzano. </author> <year> 1992. </year> <title> Time characteristics of IEEE 802.4 token bus protocol. </title> <journal> IEE Proceedings-E, </journal> <volume> 139(1) </volume> <pages> 81-87. </pages>
Reference: <author> Mukherjee, S., D. Saha, M. C. Saksena, and S. K. Tripathi. </author> <year> 1993. </year> <title> A bandwidth allocation scheme for time constrained message transmission on a slotted ring LAN. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 44-53. </pages>
Reference-contexts: By dedicating one or more slots to a given stream, or by allowing a stream to use a certain number of slots over a given time interval, synchronous messages can be guaranteed to meet their deadlines <ref> (Mukherjee et al. 1993) </ref>. 4. Communication with Asynchronous Messages Asynchronous messages arrive randomly during runtime and must therefore be scheduled dynamically. This means that using the guarantee strategy can be more complicated for asynchronous messages than for synchronous messages.
Reference: <author> Ng, J. K. Y., and J. W. S. Liu. </author> <year> 1991. </year> <title> Performanceof local area network protocols for hard real-time applications. </title> <booktitle> In Proceedings of the 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 318-326. </pages>
Reference-contexts: Another transmission control based approach to guaranteeing synchronous messages involves using a slotted ring network, such as FDDI-II (Teener and Gvoz-danovic 1989) or Orwell (de Prycker 1991). In a slotted ring, the ring is divided into a number of fixed length slots, each capable of holding one packet <ref> (Ng and Liu 1991) </ref>. By dedicating one or more slots to a given stream, or by allowing a stream to use a certain number of slots over a given time interval, synchronous messages can be guaranteed to meet their deadlines (Mukherjee et al. 1993). 4.
Reference: <author> Niehaus, D., E. M. Nahum, J. A. Stankovic, and K. Ramamritham. </author> <year> 1992. </year> <title> Architecture and OS support for predictable real-time systems. </title> <type> Personal communication. </type>
Reference: <author> Paige, J. L. </author> <year> 1990. </year> <title> SAFENET | a navy approach to computer networking. </title> <booktitle> In Proceedings of the IEEE Conference on Local Computer Networks, </booktitle> <pages> pages 268-273. </pages>
Reference: <author> Pang, J., and F. A. Tobagi. </author> <year> 1989. </year> <title> Throughput analysis of a timer controlled token passing protocol under heavy load. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 37(7) </volume> <pages> 694-702. </pages>
Reference-contexts: Some other synonymous terms that researchers use are bandwidth allocation (Ulm 1982), synchronous allocation (Jain 1991), synchronous bandwidth assignments (Johnson 1987), high priority token holding time <ref> (Pang and Tobagi 1989) </ref>, and synchronous capacity (Agrawal et al. 1992, 1993). We use the term synchronous bandwidth in order to be consistent with the current FDDI standard. 5.
Reference: <author> Panwar, S. S., and D. Towsley. </author> <year> 1988. </year> <title> On the optimality of the STE rule for multiple server queues that serve customers with deadlines. </title> <type> Technical Report 88-81, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst. </institution>
Reference: <author> Panwar, S. S., D. Towsley, and J. K. Wolf. </author> <year> 1988. </year> <title> Optimal scheduling policies for a class of queues with customer deadlines to the beginning of service. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 35(4) </volume> <pages> 832-844. </pages>
Reference: <author> Pleinevaux, P. </author> <year> 1992. </year> <title> An improved hard real-time scheduling for the IEEE 802.5. </title> <journal> The Journal of Real-Time Systems, </journal> <volume> 4(2) </volume> <pages> 99-112. </pages>
Reference: <author> Pradhan, D. K., editor. </author> <year> 1986. </year> <title> Fault-Tolerant Computing: Theory and Techniques. Prentice-Hall, volume 1. 44 AUTHOR NAME OR NAMES Ramamritham, </title> <editor> K. </editor> <year> 1987. </year> <title> Channel characteristics in local-area hard real-time systems. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 13(1) </volume> <pages> 3-13. </pages>
Reference: <author> Ramanathan, P., D. D. Kandlur, and K. G. Shin. </author> <year> 1990a. </year> <title> Hardware-assisted software clock synchronization for homogeneous distributed systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(4) </volume> <pages> 514-524. </pages>
Reference: <author> Ramanathan, P., K. G. Shin, and R. W. Butler. </author> <year> 1990b. </year> <title> Fault-tolerant clock synchronization in distributed systems. </title> <journal> IEEE Computer, </journal> <volume> 23(10) </volume> <pages> 33-42. </pages>
Reference: <author> Scholl, F. W., and M. H. Coden. </author> <year> 1988. </year> <title> Passive optical star systems for fiber optic local area networks. </title> <journal> IEEE Transactions on Selected Areas in Communications, </journal> <volume> 6(6) </volume> <pages> 913-923. </pages>
Reference: <author> Schulzrinne, H., J. F. Kurose, and D. Towsley. </author> <year> 1990. </year> <title> Congestion control for real-time traffic in high-speed networks. </title> <booktitle> In Proceedings of IEEE Infocom'90, </booktitle> <pages> pages 543-550. </pages>
Reference-contexts: The goal has been to guarantee that all synchronous messages will meet their deadlines during error-free operation of the network. In some applications, it is acceptable for synchronous messages to miss their deadlines occasionally <ref> (Schulzrinne et al. 1990) </ref>. However, the design of multiple-access protocols to take advantage of this is still an open area of research. 10 AUTHOR NAME OR NAMES Recall that a MAC protocol consists of both an access arbitration and a transmission control process.
Reference: <author> Schwartz, M. </author> <year> 1987. </year> <title> Telecommunication Networks: Protocols, Modeling and Analysis. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> Sha, L., R. Rajkumar, and J. Lehoczky. </author> <year> 1990. </year> <title> Real-time scheduling support in Futurebus+. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 331-340. </pages> <editor> Sha, L, editor. </editor> <year> 1994. </year> <journal> Special issue on industrial computing. IEEE Computer, </journal> <volume> 27(1). </volume>
Reference-contexts: A set of wires is provided for data transfer, and another set of wires is provided to arbitrate access to the bus. For example, the Futurebus+ dedicates 8 pins for priority arbitration <ref> (Sha et al. 1990) </ref>. These pins allow priority arbitration to occur concurrently with data transfers. Hence, while the current data transfer is in progress, the next bus master may be elected by the arbitration process.
Reference: <author> Sha, L., S. S. Sathaye, and J. K. Strosnider. </author> <year> 1992. </year> <title> Scheduling real-time communication on dual-link networks. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 188-197. </pages>
Reference: <author> Shih, W. K., J. W. S. Liu, and C. L. Liu. </author> <year> 1993. </year> <title> Modified rate-monotonic algorithm for scheduling periodic jobs with deferred deadlines. </title> <journal> IEEE Transactions on Software Engineering, </journal> 19(12) 1171-1179. 
Reference: <author> Shin, K. G, </author> <title> editor. 1987. </title> <journal> Special issue on real-time systems. IEEE Transactions on Computers, </journal> <volume> 36(8). </volume>
Reference: <author> Shin, K. G., and C.-J. Hou. </author> <year> 1990. </year> <title> Analysis of three contention protocols in distributed real-time systems. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 136-145. </pages>
Reference-contexts: The basic idea is to assign message priorities based on message laxities; messages with a smaller laxity are assigned a higher priority. By assigning priorities appropriately and using global priority arbitration, protocols such as IEEE 802.5 can reduce the probability that messages will miss their deadlines <ref> (Shin and Hou 1990) </ref>. However, several problems inherent in this approach may impact on the network performance. * First, priority driven protocols only approximate the MLF policy. Priority ar bitration requires some time to complete.
Reference: <author> Shin, K. G., and Q. Zheng. </author> <year> 1993. </year> <title> Mixed time-constrained and non-time-constrained communications in local area networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 41(11) </volume> <pages> 1668-1676. </pages>
Reference: <author> Stallings, W. </author> <year> 1991. </year> <journal> Data and Computer Communications. </journal> <note> Macmillan, 3rd edition. </note>
Reference: <author> Stankovic, J. A. </author> <year> 1984. </year> <title> A perspective on distributed computer systems. </title> <journal> IEEE Transactions on Computers, C-33(12):1102-1115. </journal>
Reference: <author> Stankovic, J. A. </author> <year> 1988. </year> <title> Misconceptions about real-time computing: A serious problem for next generation systems. </title> <journal> IEEE Computer, </journal> <volume> 21(10) </volume> <pages> 10-19. </pages>
Reference: <author> Stankovic, J. A., D. Niehaus, and K. Ramamritham. </author> <year> 1991a. </year> <title> SpringNet: A scalable architecture for high performance, predictable, and distributed real-time computing. </title> <type> Technical Report 91-74, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst. </institution>
Reference-contexts: Other Networks and Protocols In this paper we focused on MAC protocols for local area networks. Several other networks and protocols that need to be investigated are listed below. Spring Net. SpringNet <ref> (Stankovic et al. 1991a, 1991b) </ref> is an architecture for a network of multiprocessors, each running the Spring Kernel (Niehaus et al. 1992; Stankovic and Ramamritham 1989). Each multiprocessor is composed of application processors, system processors, and an I/O subsystem.
Reference: <author> Stankovic, J. A., D. Niehaus, and K. Ramamritham. </author> <year> 1991b. </year> <title> SpringNet: A scalable architecture for high performance, predictable, </title> <booktitle> and distributed real-time computing. In Workshop on Architecture Supports for Real-Time Systems, </booktitle> <pages> pages 11-16. </pages>
Reference: <author> Stankovic, J. A., and K. Ramamritham, editors. </author> <year> 1988. </year> <title> Hard Real-Time Systems. </title> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Stankovic, J. A., and K. Ramamritham, </author> <title> editors. </title> <booktitle> 1993. Advances in Real-Time Systems. </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Stankovic, J. A., and K. Ramamritham. </author> <year> 1989. </year> <title> The Spring Kernel: A new paradigm for real-time operating systems. Special Issue on Real-Time Operating Systems, </title> <journal> ACM Operating System Review, </journal> <volume> 23(3) </volume> <pages> 54-71. </pages>
Reference: <author> Strosnider, J. K., and D. Katcher. </author> <year> 1991. </year> <title> Bridging the gap between scheduling theory and reality. Office of Naval Research, </title> <booktitle> Fourth Annual Review and Workshop, Foundations of Real-Time Computing. </booktitle>
Reference: <author> Strosnider, J. K., and T. E. Marchok. </author> <year> 1989. </year> <title> Responsive, deterministic IEEE 802.5 token ring scheduling. </title> <journal> Journal of Real-Time Systems, </journal> <volume> 1(2) </volume> <pages> 133-158. </pages>
Reference: <author> Strosnider, J. K., T. Marchok, and J. Lehoczky. </author> <year> 1988. </year> <title> Advanced real-time scheduling using the IEEE 802.5 token ring. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 42-52. </pages>
Reference-contexts: The Access Arbitration Based Approach We now consider the use of the access arbitration process in guaranteeing synchronous message deadlines. In particular, we will focus on using the access arbitration process to implement the rate monotonic scheduling algorithm <ref> (Strosnider et al. 1988, 1989) </ref>. An essential issue in the operation of an access arbitration process is deciding which node should use the channel next. This is especially critical in real-time systems, because a wrong choice can result in messages missing their deadlines. <p> However, by considering several factors, it is possible to find a lower bound on the worst case achievable utilization. After each interval of priority arbitration, a packet will be sent. We can account for the time required for priority arbitration by adding this time to the packet length <ref> (Strosnider et al. 1988) </ref>. The length of a message can then be viewed as the sum of the lengths of its constituent packets (including the time for priority arbitration). <p> Each server is guaranteed to have a certain amount of channel access during its period. This access time can then be used by the transmission control process to send any pending guaranteed asynchronous messages <ref> (Strosnider et al. 1988) </ref>. If the worst case behavior of asynchronous messages is known, then the periodic server approach can be used to guarantee asynchronous messages at design time.
Reference: <author> Strosnider, J. K. </author> <year> 1988. </year> <title> Highly Responsive Real-Time Token Rings. </title> <type> PhD thesis, </type> <institution> Department of Electrical and Computer Engineering, Carnegie Mellon University. </institution>
Reference-contexts: The Access Arbitration Based Approach We now consider the use of the access arbitration process in guaranteeing synchronous message deadlines. In particular, we will focus on using the access arbitration process to implement the rate monotonic scheduling algorithm <ref> (Strosnider et al. 1988, 1989) </ref>. An essential issue in the operation of an access arbitration process is deciding which node should use the channel next. This is especially critical in real-time systems, because a wrong choice can result in messages missing their deadlines. <p> However, by considering several factors, it is possible to find a lower bound on the worst case achievable utilization. After each interval of priority arbitration, a packet will be sent. We can account for the time required for priority arbitration by adding this time to the packet length <ref> (Strosnider et al. 1988) </ref>. The length of a message can then be viewed as the sum of the lengths of its constituent packets (including the time for priority arbitration). <p> Each server is guaranteed to have a certain amount of channel access during its period. This access time can then be used by the transmission control process to send any pending guaranteed asynchronous messages <ref> (Strosnider et al. 1988) </ref>. If the worst case behavior of asynchronous messages is known, then the periodic server approach can be used to guarantee asynchronous messages at design time.
Reference: <author> Tindell, K. </author> <year> 1993. </year> <title> Holistic schedulability analysis for distributed hard real-time systems. </title> <type> Technical Report YCS 197, </type> <institution> Department of Computer Science, University of York. </institution> <note> ARTICLE TITLE 45 Tanenbaum, </note> <author> A. S. </author> <year> 1988. </year> <title> Computer Networks. </title> <publisher> Prentice-Hall, Inc., 2nd edition. </publisher>
Reference: <author> Teener, M., and R. Gvozdanovic. </author> <year> 1989. </year> <title> FDDI-II operation and architecture. </title> <booktitle> In Proceedings of the IEEE Conference on Local Computer Networks, </booktitle> <pages> pages 49-61. </pages>
Reference-contexts: The use of TDMA or round robin scheduling for real-time messages has been discussed extensively in (Kurose et al. 1984). Due to space limitations, that material is not repeated here. Another transmission control based approach to guaranteeing synchronous messages involves using a slotted ring network, such as FDDI-II <ref> (Teener and Gvoz-danovic 1989) </ref> or Orwell (de Prycker 1991). In a slotted ring, the ring is divided into a number of fixed length slots, each capable of holding one packet (Ng and Liu 1991).
Reference: <author> Tobagi, F. A., F. Borgonovo, and L. Fratta. </author> <year> 1983. </year> <title> ExpressNet: A high performance integrated-services local area network. </title> <journal> IEEE Transactions on Selected Areas in Communications, SAC-1(5):898-913. </journal>
Reference-contexts: A stream that is allocated the ith 24 AUTHOR NAME OR NAMES slot of a frame will have exclusive access to the ith slot of every succeeding frame. The same technique can be used with Expressnet <ref> (Tobagi et al. 1983) </ref>. Expressnet implements round robin scheduling on an S-shaped bus, and is especially suited for use in the high bandwidth domain. The use of TDMA or round robin scheduling for real-time messages has been discussed extensively in (Kurose et al. 1984).
Reference: <author> Tokuda, H., C. W. Mercer, Y. Ishikawa, and T. E. Marchok. </author> <year> 1989. </year> <title> Priority inversions in real-time communication. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 348-359. </pages>
Reference-contexts: This can result in priority inversion, in which a 16 AUTHOR NAME OR NAMES message with a theoretically lower priority is transmitted while a message with a theoretically higher priority is waiting <ref> (Tokuda et al. 1989) </ref>. Lehoczky and Sha (1986) have shown how to allocate priorities so as to minimize the effect of priority inversion, but the problem cannot be completely eliminated. * Packet size.
Reference: <author> Trajkovic, L., and S. J. Golestani. </author> <year> 1992. </year> <title> Congestion control for multimedia services. </title> <journal> IEEE Network, </journal> <volume> 6(5) </volume> <pages> 20-26. </pages>
Reference: <author> Ulm, J. N. </author> <year> 1982. </year> <title> A timed token ring local area network and its performance characteristics. </title> <booktitle> In Proceedings of the IEEE Conference on Local Computer Networks, </booktitle> <pages> pages 50-56. </pages>
Reference-contexts: Note, however, that using a token ring protocol to provide priority arbitration in a bus network would be very inefficient, because of the overhead due to passing the token. 4. Some other synonymous terms that researchers use are bandwidth allocation <ref> (Ulm 1982) </ref>, synchronous allocation (Jain 1991), synchronous bandwidth assignments (Johnson 1987), high priority token holding time (Pang and Tobagi 1989), and synchronous capacity (Agrawal et al. 1992, 1993). We use the term synchronous bandwidth in order to be consistent with the current FDDI standard. 5.
Reference: <institution> U.S. Department of Defense. </institution> <year> 1994. </year> <title> Survivable Adaptable Fiber Optic Embedded Network (SAFENET). </title> <editor> MIL-STD-2204A. van Tilborg, A. M., and G. M. Koob. </editor> <year> 1991a. </year> <title> Foundations of Real-Time Computing: Formal Specifications and Methods. </title> <publisher> Kluwer Academic Publishers. </publisher> <editor> van Tilborg, A. M., and G. M. Koob. </editor> <year> 1991b. </year> <title> Foundations of Real-Time Computing: Scheduling and Resource Management. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference: <author> Vetterli, M., and M. W. Garrett. </author> <year> 1990. </year> <title> Joint source channel coding for real time packet services. </title> <booktitle> In Proceedings of the Australian Video Communications Workshop, </booktitle> <pages> pages 136-145. </pages>
Reference: <author> Volz, R. A., L. Sha, and D. Wilcox. </author> <year> 1991. </year> <title> Maintaining global time in Futurebus+. </title> <journal> The Journal of Real-Time Systems, </journal> <volume> 3(1) </volume> <pages> 5-17. </pages>
Reference: <author> Welch, J. L., and N. Lynch. </author> <year> 1988. </year> <title> A new fault-tolerant algorithm for clock synchronization. </title> <journal> Information and Computation, </journal> <volume> 77(1) </volume> <pages> 1-36. </pages>
Reference: <author> Wilkov, R. S. </author> <year> 1972. </year> <title> Analysis and Design of Reliable Computer Networks. </title> <journal> IEEE Transactions on Communications, COM-20(6):660-678. </journal>
Reference: <author> Yamamoto, Y., and K. Takahashi. </author> <year> 1989. </year> <title> ATM network performance design covering video communications. </title> <booktitle> In Proceedings of the 4th ATERB Fast Packet Switching Workshop. </booktitle>
Reference: <author> Yates, D., J. Kurose, D. Towsley, and M. G. Hluchyj. </author> <year> 1993. </year> <title> On per-session delay distributions and the call admission problem for real-time applications with QOS requirements. </title> <booktitle> In Proceedings of ACM SIGCOMM'93, </booktitle> <pages> pages 2-12. </pages>
Reference: <author> Yao, L.-J. </author> <year> 1994. </year> <title> Real-time communications in token ring networks. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Adelaide. </institution>
Reference-contexts: This result is independent of the number of priority levels and the priority assignment function. In the average case, however, priority driven protocols can perform close to the exact MLF policy when there are a sufficient number of priority levels and when a suitable priority assignment function is used <ref> (Yao 1994) </ref>. Using Virtual Time Protocols Virtual time protocols are designed for use with CSMA/CD networks (Molle and Kleinrock 1985). One of the key issues in implementing a global MLF policy is to determine the message with the minimum laxity in the system. <p> Implementing the token window protocol directly would require a lengthy token. However, a coding scheme has been designed that allows an eight-bit token to be used while still preserving the full functionality of the protocol <ref> (Yao 1994) </ref>. 4.2.3. Effect of Scheduling Overhead Although the theory of hard real-time scheduling shows that the MLF policy is optimal in the static and the dynamic cases, these results are obtained for an environment where there is no scheduling overhead.
Reference: <author> Yao, L.-J., and W. Zhao. </author> <year> 1991. </year> <title> Performance of an extended IEEE 802.5 protocol in hard real-time systems. </title> <booktitle> In Proceedings of IEEE Infocom'91, </booktitle> <pages> pages 469-478. </pages> <editor> Yau, S, editor. </editor> <year> 1989. </year> <journal> Special issue on distributed computer systems. IEEE Transactions on Computers, </journal> <volume> 38(8). </volume>
Reference-contexts: This can result in priority inversion, in which a message with a larger laxity is transmitted first. An occurrence of priority inversion can potentially cause another message to be lost <ref> (Yao and Zhao 1991) </ref>. The IEEE 802.5 protocol, for example, can send only 50% of the messages that would be transmitted by an exact implementation of the MLF policy in the worst case (Yao and Zhao 1991). <p> An occurrence of priority inversion can potentially cause another message to be lost <ref> (Yao and Zhao 1991) </ref>. The IEEE 802.5 protocol, for example, can send only 50% of the messages that would be transmitted by an exact implementation of the MLF policy in the worst case (Yao and Zhao 1991). This result is independent of the number of priority levels and the priority assignment function.
Reference: <author> Yemini, Y. </author> <year> 1983. </year> <title> A bang-bang principle for real-time transport protocols. </title> <booktitle> In Proceedings of ACM SIGCOMM'83, </booktitle> <pages> pages 262-268. </pages>
Reference: <author> Zafirovic-Vukotic, M., I. G. Niemegeers, and D. S. Valk. </author> <year> 1988. </year> <title> Performance analysis of slotted ring protocols in HSLAN'S. </title> <journal> IEEE Transactions on Selected Areas in Communications, </journal> <volume> 6(6) </volume> <pages> 1011-1024. </pages>
Reference: <author> Zhang, H., and D. Ferrari. </author> <year> 1993. </year> <title> Rate-controlled static priority queueing. </title> <booktitle> In Proceedings of IEEE Infocom'93, </booktitle> <pages> pages 227-236. </pages>
Reference: <author> Zhang, H., and S. Keshav. </author> <year> 1991. </year> <title> Comparison of rate-based service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pages 113-121. </pages>
Reference: <author> Zhang, L. </author> <year> 1990. </year> <title> Virtual clock: A new traffic control algorithm for packet switching networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'90, </booktitle> <pages> pages 19-29. </pages> <editor> Zhao, W, editor. </editor> <booktitle> 1989. Special issue on real-time operating systems. ACM Operating Systems Review, </booktitle> <pages> 23(3). </pages>
Reference: <author> Zhao, W., C. Barter, and N. Malcolm. </author> <year> 1989. </year> <title> Virtual time CSMA protocols with two version message model for real-time communications. </title> <booktitle> In Proceedings of the 1989 IEEE International Conference on Networks, </booktitle> <pages> pages 295-300. </pages>
Reference-contexts: One such measure is the number of messages that missed their deadline at the sending node over the preceding W time units (W is a system parameter) <ref> (Zhao et al. 1989) </ref>. This scheme can be used with any network topology. Another approach, that could be used in a CSMA/CD network, is to base the decision on the number of collisions that occurred in the preceding W time units (Zhao et al. 1989). <p> preceding W time units (W is a system parameter) <ref> (Zhao et al. 1989) </ref>. This scheme can be used with any network topology. Another approach, that could be used in a CSMA/CD network, is to base the decision on the number of collisions that occurred in the preceding W time units (Zhao et al. 1989). Both of these approaches are effective at trading off message loss for information completeness. However, because they are based on average values, they may be unresponsive when message arrivals are bursty. Another measure for the real-time load is the message density.
Reference: <author> Zhao, W., and K. Ramamritham. </author> <year> 1986. </year> <title> A virtual time CSMA protocol for hard real-time communications. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 120-127. </pages> <note> 46 AUTHOR NAME OR NAMES Zhao, </note> <author> W., and K. Ramamritham. </author> <year> 1987. </year> <title> Virtual time CSMA protocols for hard real-time communications. </title> <journal> IEEE Transactions on Software Engineering, SE-13(8):938-952. </journal>
Reference-contexts: Nodes involved in the collision either retransmit the message with probability p, or wait for an interval of time proportional to their laxity. The scheme outlined above is the basic approach taken by the virtual time protocol described in <ref> (Zhao and Ramamritham 1986, 1987) </ref>. The simulation data in (Zhao and Ramamritham 1986, 1987) show that the virtual time protocol can perform close to the exact MLF policy under a wide range of network load conditions. <p> Nodes involved in the collision either retransmit the message with probability p, or wait for an interval of time proportional to their laxity. The scheme outlined above is the basic approach taken by the virtual time protocol described in <ref> (Zhao and Ramamritham 1986, 1987) </ref>. The simulation data in (Zhao and Ramamritham 1986, 1987) show that the virtual time protocol can perform close to the exact MLF policy under a wide range of network load conditions. However, the proportionality constant used to determine the amount of waiting time must be chosen with care.
Reference: <author> Zhao, W., and J. A. Stankovic. </author> <year> 1989. </year> <title> Performance analysis of FCFS and improved FCFS scheduling algorithms for dynamic real-time computer systems. </title> <booktitle> In Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pages 156-165. </pages>
Reference-contexts: One such measure is the number of messages that missed their deadline at the sending node over the preceding W time units (W is a system parameter) <ref> (Zhao et al. 1989) </ref>. This scheme can be used with any network topology. Another approach, that could be used in a CSMA/CD network, is to base the decision on the number of collisions that occurred in the preceding W time units (Zhao et al. 1989). <p> preceding W time units (W is a system parameter) <ref> (Zhao et al. 1989) </ref>. This scheme can be used with any network topology. Another approach, that could be used in a CSMA/CD network, is to base the decision on the number of collisions that occurred in the preceding W time units (Zhao et al. 1989). Both of these approaches are effective at trading off message loss for information completeness. However, because they are based on average values, they may be unresponsive when message arrivals are bursty. Another measure for the real-time load is the message density.
Reference: <author> Zhao, W., J. A. Stankovic, and K. Ramamritham. </author> <year> 1988. </year> <title> A multi-access window protocol for time constrained communications. </title> <booktitle> In Proceedings of the 8th IEEE International Conference on Distributed Computing Systems, </booktitle> <pages> pages 384-392. </pages>
Reference-contexts: An advantage of window protocols as opposed to priority driven protocols is that window protocols are not limited by the number of available priority levels. Hence, they can reduce priority inversion. Window protocols are also often relatively insensitive to the initial window size chosen by the protocol <ref> (Zhao et al. 1988, 1990) </ref>. A disadvantage of window protocols is that the time and space required to maintain the window can incur substantial overhead. The key issue in designing a window protocol is to enable all nodes to maintain a consistent view of the window information. <p> In this protocol, all message are assumed to have the same (constant) laxity when they arrive in the system. This assumption can be relaxed to allow messages to have arbitrary laxities <ref> (Zhao et al. 32 AUTHOR NAME OR NAMES 1988, 1990) </ref>. Further improvements have been proposed for the window protocol, resulting in faster collision resolution and implementation of the exact MLF policy (Znati 1991). Window protocols in token ring networks.
Reference: <author> Zhao, W., J. A. Stankovic, and K. Ramamritham. </author> <year> 1990. </year> <title> A window protocol for transmission of time constrained messages. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(9) </volume> <pages> 1186-1203. </pages>
Reference: <author> Zheng, Q., and K. G. Shin. </author> <year> 1992. </year> <title> Fault-tolerant real-time communication in distributed computing systems. </title> <booktitle> In Digest of Papers, FTCS-22, </booktitle> <pages> pages 86-93. </pages>
Reference: <author> Zheng, Q., and K. G. Shin. </author> <title> On the ability of establishing real-time channels in point-to-point packet-switched networks. </title> <note> To appear in IEEE Transactions on Communications. </note>
Reference: <author> Zheng, Q., and K. G. Shin. </author> <year> 1993. </year> <title> Synchronous bandwidth allocation in FDDI networks. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <pages> pages 31-38. </pages>
Reference: <author> Ziegler, J. </author> <year> 1989. </year> <title> MIL-STD-1553 takes over serial data bus designs. </title> <booktitle> Computer Design, </booktitle> <volume> 28(17) </volume> <pages> 99-102. </pages>
Reference-contexts: Another possibility is to use a centralized access arbitration process that follows a preplanned schedule in granting access to the channel. This technique is used with the MIL-STD-1553 bus. The 1553 bus is widely used in embedded real-time systems, for example, in military aircraft such as the F-15 Eagle <ref> (Ziegler 1989) </ref>. In the 1553 bus, the access arbitration process is concentrated in a single bus master. All message traffic is initiated by the bus master. Nodes with a message to send wait passively until the bus master explicitly gives them permission to start sending the message.
Reference: <author> Zimmermann, H. </author> <year> 1981. </year> <title> OSI Reference Model | the ISO model of architecture for open systems interconnection. </title> <journal> IEEE Transactions on Communication, COM-28(4):425-432. </journal>
Reference-contexts: Models This paper concentrates on multiple-access networks. In a multiple-access network, nodes communicate via a single shared channel. Nodes in a multiple-access network usually have a layered communication architecture. Figure 1 shows the layered architecture of the ISO Reference Model for Open Systems Interconnection (OSI) <ref> (Zimmermann 1981) </ref>. Each layer has a different set of protocols responsible for carrying out the functions required of the layer. For example, the protocols in the data link layer are responsible for providing reliable transmission of data frames across a communication link.
Reference: <author> Znati, T. </author> <year> 1991. </year> <title> Deadline Driven Window Protocol for Transmission of Real-Time Traffic. </title> <booktitle> In Proceedings of the 10th IEEE International Conference on Computers and Communications, </booktitle> <pages> pages 667-673. </pages>
Reference-contexts: This assumption can be relaxed to allow messages to have arbitrary laxities (Zhao et al. 32 AUTHOR NAME OR NAMES 1988, 1990). Further improvements have been proposed for the window protocol, resulting in faster collision resolution and implementation of the exact MLF policy <ref> (Znati 1991) </ref>. Window protocols in token ring networks. In a token ring network, the upper and lower bounds of the window are stored in the token (Lim et al. 1991). The token also has a counter field that records the number of nodes with messages in the window.
References-found: 118

