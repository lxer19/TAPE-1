URL: http://www.cs.utexas.edu/users/plaxton/ps/1990/focs.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Title: A (fairly) Simple Circuit that (usually) Sorts  
Author: Tom Leighton ; C. Greg Plaxton 
Address: Cambridge, Massachusetts 02139  
Affiliation: 1 Laboratory for Computer Science and 2 Mathematics Department Massachusetts Institute of Technology  
Abstract: This paper provides an analysis of a natural k-round tournament over n = 2 k players, and demonstrates that the tournament possesses a surprisingly strong ranking property. The ranking property of this tournament is exploited by using it as a building block for efficient parallel sorting algorithms under a variety of different models of computation. Three important applications are provided. First, a sorting circuit of depth 7:44 log n is defined that sorts all but a superpolynomially small fraction of the n! possible input permutations. Second, a randomized sorting algorithm is given for the hypercube and related parallel computers (the butterfly, cube-connected cycles and shu*e-exchange) that runs in O(log n) word steps with very high probability. Third, a randomized algorithm is given for sorting n O(m)-bit records on an n log n node butterfly that runs in O(m + log n) bit steps with very high probability.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Aiello, F. T. Leighton, B. Maggs, and M. New-man. </author> <title> Fast algorithms for bit-serial routing on a hypercube. </title> <booktitle> In Proceedings of the 2nd Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 55-64, </pages> <year> 1990. </year>
Reference-contexts: The only previous result of this kind that does not rely on the AKS sorting circuit is the recent work of Aiello, Leighton, Maggs and Newman, which provides a randomized bit-serial routing algorithm that runs in optimal time with high probability on the hypercube <ref> [1] </ref>. That paper does not address either the combining or sorting problems, however, and does not apply to any of the bounded-degree variants of the hypercube. <p> Given an n-input comparator circuit, let g i (p) denote the probability that the ith output is a 0 when each input is independently set to 0 with probability p, and to 1 with probability 1 p. Here p is a real value in <ref> [0; 1] </ref>. It is easy to verify that the g i 's must satisfy the following properties: g i (0) = 0, g i (1) = 1, and g 0 i (p) &gt; 0, 0 p &lt; 1.
Reference: [2] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> An O(n log n) sorting network. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference: [3] <author> V. E. </author> <title> Benes. Optimal rearrangeable multistage connecting networks. </title> <journal> Bell System Technical Journal, </journal> <volume> 43 </volume> <pages> 1641-1656, </pages> <year> 1964. </year>
Reference-contexts: Note that an appropriate fixed permutation must be applied before the second step. Any fixed permutation can be routed in O (log n) time on cube-type networks by precomputing the Benes paths <ref> [3] </ref>. Next, recursively sort subcubes of O (n fl ) consecutive outputs. If these subcubes are sufficiently small, that is, if the subcube dimension is less than or equal to the square root of the original dimension, then the recursive sort is performed by applying bitonic sort.
Reference: [4] <author> H. Chernoff. </author> <title> A measure of asymptotic efficiency for tests of a hypothesis based on the sum of observations. </title> <journal> Annals of Mathematical Statistics, </journal> <volume> 23 </volume> <pages> 493-509, </pages> <year> 1952. </year>
Reference: [5] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> volume 3. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference-contexts: Furthermore, an efficient algorithm will be given for computing the subset Y and permutation mentioned in the theorem. The zero-one principle for sorting circuits states that an n-input (and hence, n-output) comparator circuit is a sorting circuit if and only if it correctly sorts all 2 n 0-1 inputs <ref> [5] </ref>. Our analysis of the butterfly tournament makes use of a simple probabilistic generalization of the zero-one principle.
Reference: [6] <author> F. T. Leighton, B. M. Maggs, A. G. Ranade, and S. B. Rao. </author> <title> Randomized routing and sorting on fixed-connection networks. </title> <type> Unpublished manuscript, </type> <month> October </month> <year> 1989. </year>
Reference-contexts: A similar result with constant size queues is described by Leighton, Maggs, Ranade and Rao <ref> [6] </ref>. Like Batcher's O (log 2 n) bitonic sorting algorithm, our sorting algorithm is non-adaptive in the sense that it can be described solely in terms of oblivious routing and compare-interchange operations; there is no queueing. <p> Also, the probability of success of our algorithm is very high, which represents an improvement over the high probability level achieved in <ref> [6] </ref> and [9]. Our third and final application is described in Section 5.4, where we give a randomized algorithm for sorting n O (m)-bit records on an n log n node butterfly that runs in O (m + log n) bit steps with very high probability.
Reference: [7] <author> M. S. Paterson. </author> <title> Improved sorting networks with O(log n) depth. </title> <journal> Algorithmica, </journal> <volume> 5 </volume> <pages> 75-92, </pages> <year> 1990. </year>
Reference: [8] <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms approximating packing integer programs. </title> <booktitle> In Proceedings of the 27th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 10-18, </pages> <year> 1986. </year>
Reference: [9] <author> J. H. Reif and L. G. Valiant. </author> <title> A logarithmic time sort for linear size networks. </title> <journal> JACM, </journal> <volume> 34 </volume> <pages> 60-76, </pages> <year> 1987. </year>
Reference-contexts: A number of previous randomized sorting algorithms exist for these networks. The Flashsort algorithm of Reif and Valiant <ref> [9] </ref>, defined for the cube-connected cycles, also achieves optimal O (log n) time, although the algorithm makes use of an O (log n)-sized priority queue at each processor. A similar result with constant size queues is described by Leighton, Maggs, Ranade and Rao [6]. <p> Also, the probability of success of our algorithm is very high, which represents an improvement over the high probability level achieved in [6] and <ref> [9] </ref>. Our third and final application is described in Section 5.4, where we give a randomized algorithm for sorting n O (m)-bit records on an n log n node butterfly that runs in O (m + log n) bit steps with very high probability.
References-found: 9

