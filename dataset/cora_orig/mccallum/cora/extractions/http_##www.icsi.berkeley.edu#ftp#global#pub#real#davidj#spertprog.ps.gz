URL: http://www.icsi.berkeley.edu/ftp/global/pub/real/davidj/spertprog.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/ftp/global/pub/real/davidj/
Root-URL: http://www.icsi.berkeley.edu
Title: The Programmer's Guide to SPERT  
Author: Krste Asanovic David Johnson 
Address: 1947 Center Street, Suite 600 Berkeley, California 94704  
Affiliation: The University of California at Berkeley Berkeley, California The International Computer Science Institute  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Asanovic, K., Johnson, D., </author> <title> "The Torrent Architecture Manual," </title> <type> ICSI Technical Report, </type> <note> in Print. </note>
Reference: [2] <author> Kane, G., Heinrich, J., </author> <title> "MIPS RISC Architecture", </title> <publisher> Prentice Hall, </publisher> <address> En-glewood, Cliffs, NJ, </address> <year> 1992. </year>
Reference: [3] <author> Stallman, R., </author> <title> "Using and Porting GNU CC", The Free Software Foundation, </title> <address> Boston, MA, </address> <year> 1995. </year>
Reference-contexts: To compile the C++ program hello2.cc to produce a relocatable object file hello2.o with maximum optimization and the NDEBUG symbol defined: 5 spert0-gcc -c -O2 -DNDEBUG hello2.cc For more details of command line options and compiler features see <ref> [3] </ref>. 3.4 Using the SPERT assembler Although the SPERT assembler, spert0-as, is available as a stand-alone executable, it is normally invoked via spert0-gcc.
Reference: [4] <author> Stallman, R., Pesch, R., </author> <title> "Debugging with gdb", The Free Software Foundation, </title> <address> Boston, MA, </address> <year> 1995. </year>
Reference-contexts: See <ref> [4] </ref> for more details on using gdb. 8.5 Debugging Using the ISA Simulator The ISA simulator can produce traces of SPERT program execution in various formats.
Reference: [5] <author> Pesch, R., Osier, J., </author> <title> Cygnus Support, "The GNU Binary Utilities", The Free Software Foundation, </title> <address> Boston, MA, </address> <year> 1995. </year> <title> [6] "IEEE Standard for Binary Floating-Point Arithmetic", </title> <publisher> IEEE, </publisher> <address> New York, </address> <year> 1985. </year> <month> 24 </month>
Reference-contexts: In the case of C++ programs, it is often useful to pass the output of spert0-objdump through the name C++ demangler, spert0-c++filt. E.g. to dissassemble an executable: spert0-objdump -d mlp | spert0-c++filt For more details see <ref> [5] </ref>. 7 Chapter 4 Running SPERT Programs There are two ways in which SPERT programs can be run either on a physical SPERT board or on a simulator. For production program runs, having access to SPERT hardware is essential, although for debugging a simulator may be adequate.
References-found: 5

