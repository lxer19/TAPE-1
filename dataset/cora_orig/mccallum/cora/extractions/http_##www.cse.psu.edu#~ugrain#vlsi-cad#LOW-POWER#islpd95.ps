URL: http://www.cse.psu.edu/~ugrain/vlsi-cad/LOW-POWER/islpd95.ps
Refering-URL: http://www.cse.psu.edu/~ugrain/publications.html
Root-URL: 
Email: permissions@acm.org.  
Address: 1515 Broadway, New York, NY 10036 USA  
Affiliation: Inc.  
Note: Copyright from Publications Dept, ACM  
Abstract: c fl1995 by the Association for Computing Machinery, Inc. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or direct commercial advantage and that copies show this notice on the first page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works whether directly or by incorporation via a link, requires prior specific permission and/or a fee. Permissions may be requested 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Avizienis. </author> <title> Signed-digit number representation for fast parallel arithmetic. </title> <journal> IRE Trans. on Electronic Computers, </journal> <pages> page 389, </pages> <year> 1961. </year>
Reference-contexts: Networks of carry-save adders, which postpone carry addition to a succeeding stage, are by far the most popular method because of their speed, simplicity and ease fl This work was partially supported by NSF Grant No. MIP-9408921. of implementation. Signed-digit encoding <ref> [1] </ref> is another way of limiting carry propagation by computing interim sums which are always in a range so as to absorb any incoming carry/borrow. Historically, signed-digit adders (SDA) have been considered to be logically more complicated than carry-save adders and are therefore not as popular. <p> In the conventional or ordinary SD number representation (OSD) defined by Avizenis <ref> [1] </ref>, ff equals fi and 1=2r &lt; ff &lt; r. The principal advantage of using SD's is the possibility of doing carry-free addition. In this paper, the digits are assumed to be encoded using TC representation, since it makes computa tion of digit sums and correction easier. <p> In the conventional or ordinary SD number representation (OSD) defined by Avizenis <ref> [1] </ref>, ff equals fi, 1=2r &lt; ff &lt; r, and r 3. In [6], Parhami provides more flexibility to the digit set by defining a generalized SD number system (GSD), where ff; fi 0, and ff + fi + 1 r. <p> We now describe three different ways of implementing an SDA-network. 4.1 OSD Addition Suppose we restrict the input and output SD's to the OSD digit set, fr + 1; ; r 1g. The conventional way of adding two OSD's <ref> [1] </ref> has been to add x (i) and y (i) to form a temporary sum digit p (i) = x (i) + y (i), then breaking up p (i) into an interim sum digit u (i) and a carry digit c (i + 1), such that ju (i)j r 2 and
Reference: [2] <author> T. P. Kelliher, R. M. Owens, M. J. Irwin, and T.-T. Hwang. </author> <title> ELM | A Fast Addition Algorithm Discovered by a Program. </title> <journal> IEEE Trans. on Computers, </journal> <volume> 41(9), </volume> <month> Sep </month> <year> 1992. </year>
Reference-contexts: The graphs in figure 9 compare the delay, power and power-delay product of a CLA-based network with those of an RCA-based network. We use the ELM adder <ref> [2] </ref>, since it is not only the fastest among two's complement adders, but also consumes the least power and hence has the lowest Fig. 7. (a) An SDA-network using ESD. (b) Truth table for FA'. (c) An optimized implementation. power-delay product [5].
Reference: [3] <author> Israel Koren. </author> <title> Computer Arithmetic Algorithms, chapter 5. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1993. </year>
Reference-contexts: In this paper, we show that this is a misconception. Networks of carry-save adders are structurally regular and combine three inputs at each step, generating a sum bit and a carry bit for every bit position <ref> [3] </ref>. This leads us to a natural generalization where instead of generating a carry bit for every sum bit, only one carry bit is generated for every group of k sum bits. Let us call this type of addition carry-sum addition and the corresponding adder a carry-sum adder (CSMA).
Reference: [4] <author> Meta-Software. </author> <note> HSPICE User's Manual version H92. </note> <editor> Campbell, </editor> <address> CA, 1992. Meta-Software, </address> <publisher> Inc., </publisher> <address> 1300 White Oaks Road, Campbell, CA 95008. </address>
Reference-contexts: Performance comparison of multi-operand ad-dition of 32-bit operands using a CSMA/SDA-network and a tree of ELM adders. was found by conducting experiments similar to those in [5], which involved detailed Hspice <ref> [4] </ref> simulations. The power consumed by the latches was included. The delay and power of larger CSMA/SDA-networks and ELM-trees was then predicted. As a consequence, two factors that affect both power and delay have not been taken into account in figure 10.
Reference: [5] <author> C. Nagendra, R. M. Owens, and M. J. Irwin. </author> <title> Low Power Tradeoffs in Signal Processing Hardware Primitives. </title> <booktitle> In IEEE Workshop on VLSI Signal Processing, </booktitle> <pages> pages 276-285, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: We use the ELM adder [2], since it is not only the fastest among two's complement adders, but also consumes the least power and hence has the lowest Fig. 7. (a) An SDA-network using ESD. (b) Truth table for FA'. (c) An optimized implementation. power-delay product <ref> [5] </ref>. The ELM adder belongs to the family of blocked carry-lookahead adders and reduction in delay and the number of interconnects is obtained by directly computing the sum bits in parallel. <p> The power and delay of a single stage of the CSMA/SDA-network as well a single 32-bit ELM adder Fig. 10. Performance comparison of multi-operand ad-dition of 32-bit operands using a CSMA/SDA-network and a tree of ELM adders. was found by conducting experiments similar to those in <ref> [5] </ref>, which involved detailed Hspice [4] simulations. The power consumed by the latches was included. The delay and power of larger CSMA/SDA-networks and ELM-trees was then predicted. As a consequence, two factors that affect both power and delay have not been taken into account in figure 10.
Reference: [6] <author> B. Parhami. </author> <title> Generalized Signed-Digit Number Systems: A Unifying Framework for Redundant Number Representations. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-39:89-98, </volume> <year> 1990. </year>
Reference-contexts: In the conventional or ordinary SD number representation (OSD) defined by Avizenis [1], ff equals fi, 1=2r &lt; ff &lt; r, and r 3. In <ref> [6] </ref>, Parhami provides more flexibility to the digit set by defining a generalized SD number system (GSD), where ff; fi 0, and ff + fi + 1 r. The second condition ensures that there is sufficient redundancy for carry-free addition to be possible.
References-found: 6

