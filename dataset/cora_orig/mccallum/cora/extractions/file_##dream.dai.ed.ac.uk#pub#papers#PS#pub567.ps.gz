URL: file://dream.dai.ed.ac.uk/pub/papers/PS/pub567.ps.gz
Refering-URL: http://www.dai.ed.ac.uk:80/staff/personal_pages/bundy/drafts/ripple-faq.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Rippling: A Heuristic for Guiding Inductive Proofs  
Author: Alan Bundy Andrew Stevens Frank van Harmelen Andrew Ireland Alan Smaill 
Affiliation: Department of Artificial Intelligence, University of Edinburgh.  
Abstract: We describe rippling: a tactic for the heuristic control of the key part of proofs by mathematical induction. This tactic significantly reduces the search for a proof of a wide variety of inductive theorems. We first present a basic version of rippling, followed by various extensions which are necessary to capture larger classes of inductive proofs. Finally, we present a general-ised form of rippling which embodies these extensions as special cases. We prove that generalised rippling always terminates, and we discuss the implementation of the tactic and its relation with other inductive proof search heuristics.
Abstract-found: 1
Intro-found: 1
Reference: [Aubin 75] <author> R. Aubin. </author> <title> Some generalization heuristics in proofs by induction. </title> <editor> In G. Huet and G. Kahn, editors, </editor> <booktitle> Actes du Colloque Construction: </booktitle> <institution> Amelioration et verification de Programmes. Institut de recherche d'informatique et d'automatique, </institution> <year> 1975. </year>
Reference: [Basin & Walsh 92] <author> D. Basin and T. Walsh. </author> <title> Difference matching. </title> <booktitle> In Kapur [Kapur 92], </booktitle> <pages> pages 295-309. </pages> <note> Published as Springer LNAI, number 607. 67 </note>
Reference: [Boyer & Moore 79] <author> R.S. Boyer and J.S. Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> 1979. </address> <publisher> ACM monograph series. </publisher>
Reference: [Bundy & Welham 81] <author> A. Bundy and B. Welham. </author> <title> Using meta-level inference for selective application of multiple rewrite rules in algebraic manipulation. </title> <journal> Artificial Intelligence, </journal> <volume> 16(2) </volume> <pages> 189-212, </pages> <year> 1981. </year> <note> Also available from Edinburgh as DAI Research Paper 121. </note>
Reference: [Bundy 88] <author> A. Bundy. </author> <title> The use of explicit plans to guide inductive proofs. </title> <editor> In R. Lusk and R. Overbeek, editors, </editor> <booktitle> 9th Conference on Automated Deduction, </booktitle> <pages> pages 111-120. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year> <note> Longer version available from Edinburgh as DAI Research Paper No. 349. </note>
Reference: [Bundy et al 89] <author> A. Bundy, F. van Harmelen, J. Hesketh, A. Smaill, and A. Stevens. </author> <title> A rational reconstruction and extension of recursion analysis. </title> <editor> In N.S. Sridharan, editor, </editor> <booktitle> Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 359-365. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year> <note> Also available from Edinburgh as DAI Research Paper 419. </note>
Reference: [Bundy et al 90a] <author> A. Bundy, A. Smaill, and J. Hesketh. </author> <title> Turning eureka steps into calculations in automatic program synthesis. </title> <editor> In S.L.H. Clarke, editor, </editor> <booktitle> Proceedings of UK IT 90, </booktitle> <pages> pages 221-6, </pages> <year> 1990. </year> <note> Also available from Edinburgh as DAI Research Paper 448. </note>
Reference: [Bundy et al 90b] <author> A. Bundy, F. van Harmelen, A. Smaill, and A. Ireland. </author> <title> Extensions to the rippling-out tactic for guiding inductive proofs. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> 10th International Conference on Automated Deduction, </booktitle> <pages> pages 132-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <note> Lecture Notes in Artificial Intelligence No. 449. Also available from Edinburgh as DAI Research Paper 459. </note>
Reference: [Bundy et al 91] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year> <note> Earlier version available from Edinburgh as DAI Research Paper No 413. </note>
Reference: [Burstall & Darlington 77] <author> R.M. Burstall and J. Darlington. </author> <title> A transformation system for developing recursive programs. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 24(1) </volume> <pages> 44-67, </pages> <year> 1977. </year>
Reference: [Constable et al 86] <editor> R.L. Constable, S.F. Allen, H.M. Bromley, et al. </editor> <title> Implementing Mathematics with the Nuprl Proof Development System. </title> <publisher> Prentice Hall, </publisher> <year> 1986. </year>
Reference: [Dershowitz & Manna 79] <author> N. Dershowitz and Z. Manna. </author> <title> Proving termination with multiset orderings. </title> <journal> Comms. ACM, </journal> <volume> 22(8) </volume> <pages> 465-476, </pages> <year> 1979. </year>
Reference-contexts: 1 = a 2 , o 1 = o 2 and i 1 i i 2 , * The order, &lt;, on the anti-wave sub-measure, is the standard less than order on the natural numbers. * The order, t fl , on the outwards sub-measure, is the nested multiset order, <ref> [Dershowitz & Manna 79] </ref>, based on the numeric, &lt;, order on the weights. * The order, i , on the inwards sub-measure, is a special a root/leaves lexicographic ordering. <p> and let d be their upper difference set (defined below), consisting of a list of pairs of multisets of weights. i 1 i i 2 iff d is non-empty and for each pair h 1 ; 2 i 2 d, 1 t 2 , where t is the multiset order, <ref> [Dershowitz & Manna 79] </ref>, based on the numeric &lt; order on the weights.. <p> Each of these constituent orders is well-founded. The well-foundedness of &lt; on the natural numbers and of lexicographic orderings on fixed length tuples are well known. The well-foundedness of t and t fl are both proved in <ref> [Dershowitz & Manna 79] </ref>. The well-foundedness of i on fixed shape trees follows by a similar argument for lexicographic orderings on fixed length tuples. So is well-founded. 64 A.4 Rippling Decreases the Sequent Measure We next show that our sequent measure is strictly decreased whenever a wave-rule is applied. <p> Each of its new elements is strictly smaller than kk " . * Firstly, w + jj t fl kk " , since w + jj is a member of a base set, which is always smaller than any proper multiset under the nested multiset ordering, <ref> [Dershowitz & Manna 79] </ref>. * Secondly, for 1 j k, k j k " t fl kk " , since each k j k " is just like kk " except that at least one of the nested multisets i it contains is replaced with a strictly smaller one, fw j~
Reference: [Hesketh 91] <author> J.T. Hesketh. </author> <title> Using Middle-Out Reasoning to Guide Inductive Theorem Proving. </title> <type> Unpublished PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1991. </year>
Reference: [Horn 88] <author> C. Horn. </author> <title> The Nurprl proof development system. </title> <type> Working paper 214, </type> <institution> Dept. of Artificial Intelligence, Edin-burgh, </institution> <year> 1988. </year> <note> The Edinburgh version of Nurprl has been renamed Oyster. </note>
Reference: [Hutter 90] <author> D. Hutter. </author> <title> Guiding inductive proofs. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> 10th International Conference on Automated Deduction, </booktitle> <pages> pages 147-161. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <booktitle> Lecture Notes in Artificial Intelligence No. </booktitle> <pages> 449. </pages>
Reference: [Kanamori & Fujita 86] <author> T. Kanamori and H. Fujita. </author> <title> Formulation of induction formulas in verification of Prolog programs. </title> <editor> In Joerg Siekmann, editor, </editor> <booktitle> 8th Conference on Automated Deduction, </booktitle> <pages> pages 281-299. </pages> <publisher> Springer-Verlag, </publisher> <year> 1986. </year> <note> Springer Lecture Notes in Computer Science No. 230. </note>
Reference: [Kapur 92] <editor> D. Kapur, editor. </editor> <booktitle> 11th Conference on Automated Deduction, </booktitle> <address> Saratoga Springs, NY, USA, </address> <month> June </month> <year> 1992. </year> <note> Published as Springer LNAI, number 607. </note>
Reference: [Knuth & Bendix 70] <author> D.E. Knuth and P.B. Bendix. </author> <title> Simple word problems in universal algebra. </title> <editor> In J. Leech, editor, </editor> <booktitle> Computational problems in abstract algebra, </booktitle> <pages> pages 263-297. </pages> <publisher> Pergamon Press, </publisher> <year> 1970. </year>
Reference: [van Harmelen 89] <author> F. van Harmelen. </author> <title> The CLAM proof planner, user manual and programmer manual. </title> <type> Technical Paper TP-4, </type> <institution> Dept. of Artificial Intelligence, Edinburgh, </institution> <year> 1989. </year> <month> 69 </month>
Reference: [Walsh et al 92] <author> T. Walsh, A. Nunes, and A. Bundy. </author> <title> The use of proof plans to sum series. </title> <booktitle> In Kapur [Kapur 92], </booktitle> <pages> pages 325-339. </pages> <note> Published as Springer LNAI, number 607. 70 </note>
References-found: 20

