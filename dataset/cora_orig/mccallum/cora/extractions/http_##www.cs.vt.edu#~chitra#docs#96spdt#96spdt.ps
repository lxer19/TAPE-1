URL: http://www.cs.vt.edu/~chitra/docs/96spdt/96spdt.ps
Refering-URL: http://www.cs.vt.edu/~chitra/PublicationList.html
Root-URL: http://www.cs.vt.edu
Email: fabrams,ribler,mathurg@cs.vt.edu  
Title: Two Performance Tool Design Issues and Chitra's Solutions 1 Two Performance Tool Design Issues and
Author: Marc Abrams, Randy Ribler, Anup Mathur 
Address: VA 24061-0106  
Affiliation: Department of Computer Science Virginia Tech, Blacksburg,  
Abstract: Two issues arising in the design of trace-file based performance analysis tools are discussed: handling categorical rather than just numeric data and correctly inferring system behavior from trace data by using not one but multiple trace files. The issues are illustrated using the problem of determining whether damaging oscillations occur in the all points shortest path algorithm when used for routing messages between processors. Solutions used by the Chitra trace analysis tool are discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abrams, N. Doraswamy, and A. Mathur. Chitra: </author> <title> Visual analysis of parallel and distributed programs in the time, event, and frequency domain. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 3(6) </volume> <pages> 672-685, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Chitra 1 is a tool to investigate trace data. Chitra is a general purpose tool designed to work with traces from any source. Thus Chitra is not specifically limited to analysis of traces from distributed and parallel programs, although that was its original motivation <ref> [1] </ref>. The purpose of the Chitra project is not to build the ultimate program performance analysis tool to diagnose program performance problems or to help users map data and algorithms to particular computer systems. <p> Specifically, we regard the points plotted in each histogram or other numerical graph as defining a function, and then compute the classical correlation coefficient for the two functions. The coefficient will lie in the interval <ref> [1; 1] </ref>. A value of zero indicates no correlation, a value of 1 indicates that both histograms are identical, and a value of -1 indicates that wherever mass is concentrated in one histogram it is absent in the other.
Reference: [2] <author> M. Abrams, T. Lee, H. Cadiz, and K. Ganugapati. </author> <title> Beyond software performance visualization. </title> <journal> Concurrency Practice and Experience, </journal> <volume> 7(8) </volume> <pages> 737-764, </pages> <month> Dec </month> <year> 1995. </year>
Reference-contexts: Chitra treats trace files as time series, and includes conventional and novel methods for time series analysis. Statistically test trace data: Tests for stationarity and homogeneity are included; one use is to partition ensembles into "similar" components. For example, analysis of ten parallel database program traces in <ref> [2] </ref> reveals four with one periodic behavior, and the remaining six with a second periodic behavior. <p> Formally Occurrences i = n X 0 otherwise: The application of the periodogram to the ASP trace is shown in Fig. 5. (The trace has been transformed to aggregate routes that account for less than 1% of the routes in the sequence; see <ref> [2] </ref> for details of aggregation.) Starting at the left of the x-axis, the power, or height of the bars, for successive period lengths alternates between a high and a low value.
Reference: [3] <author> T. E. Anderson and E. D. Lazowska. Quartz: </author> <title> A tool for tuning parallel program performance. </title> <booktitle> In Proc. SIG-METRICS, </booktitle> <pages> pages 115-124. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1990. </year>
Reference-contexts: Indeed, analysis of trace data is often not the best way to solve performance programs, when a judicious choice of performance metric (e.g., <ref> [3] </ref>) or selective program instrumentation (e.g., [10]) may be better suited. Instead, Chitra has the following goals. First, explore new techniques for trace analysis, with the belief that some of our methods will be incorporated into performance tools built by others.
Reference: [4] <author> R. A. Becker, J. M. Chambers, and A. R. Wilks. </author> <title> The New S-Language: A Programming Environment for Data Analysis and Graphics. </title> <publisher> Wadsworth & Brooks/- Cole Advanced Books & Software, </publisher> <address> Pacific Grove, Cali-fornia, </address> <year> 1988. </year>
Reference-contexts: However the available methods are designed for three or four generations | a lot for a sociologist | while computer trace files can contain millions of generations. The most flexible statistical packages, such as the S-Language <ref> [4] </ref>, represent categorical data as a primitive type, and time series data as a primitive type, but not the combination of the two.
Reference: [5] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <address> Pren-tice-Hall, London, 2nd edition, </address> <year> 1987. </year>
Reference-contexts: subsequent sections discuss the two issues, followed by conclusions in x5. 2 Example: Detecting Oscillations in Adaptive Shortest Path Routing The example used throughout this paper is an investigation of the dynamic behavior of an algorithm to route messages among processors in a distributed system: all points shortest path routing <ref> [5, 6] </ref>. Consider a set of processors interconnected by a datagram communication network with bidirectional links. <p> We can specify the route used by the Two Performance Tool Design Issues and Chitra's Solutions 2 to processor 0. Arrows show current message routing; arrow labels indicate aggregate arrival rate on link. (Figure is based on <ref> [5, p. 413] </ref>.) remaining 15 sending processors by a single number, the partition point, denoted P (where 1 P 16). Let processor 0 be the destination. <p> Therefore processor 9 switches to route messages clockwise. The new partition point is 10. Continuing in this manner, the sequence of routes selected are partition points 8, 10, 3, 16, 1, 16, 1, 16, : : : . (See <ref> [5, p. 413] </ref> for details.) Intuitively, if all processors route in one direction on the ring (e.g., partition point 16), then when ASP runs next, they all see a zero path length in the other direction round the ring, and thus all switch their routes to the opposite direction (e.g., partition
Reference: [6] <author> D. P. Bertsekas. </author> <title> Dynamic behavior of shortest path routing algorithms for communication networks. </title> <journal> IEEE Trans. on Automata Control, </journal> <volume> AC-27:60-74, </volume> <year> 1982. </year>
Reference-contexts: subsequent sections discuss the two issues, followed by conclusions in x5. 2 Example: Detecting Oscillations in Adaptive Shortest Path Routing The example used throughout this paper is an investigation of the dynamic behavior of an algorithm to route messages among processors in a distributed system: all points shortest path routing <ref> [5, 6] </ref>. Consider a set of processors interconnected by a datagram communication network with bidirectional links. <p> Today ASP routing is used in the OSI protocol suite in Intermediate System level routing. Aside from this practical application, we investigate ASP routing because an analytic solution to characterize dynamic behavior exists <ref> [6] </ref>, which we can use to validate the effectiveness of our trace analysis methods.
Reference: [7] <author> N. Gershon and S. G. Eick. </author> <title> Visualization's new tack: Making sense of information. </title> <journal> IEEE Spectrum, </journal> <volume> 32(11) </volume> <pages> 38-56, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: In contrast, categorical data lacks a total ordering, and thus the problem of visualization is more complex. There is little work in the literature to draw on, although a potentially useful field to draw on is the emerging area of "information visualization" <ref> [7] </ref>. In our case we interpreted categorical traces by developing categorical analogs to numerical time series methods. But this is only a start in bringing visualization and statistical analysis to non-numeric data.
Reference: [8] <author> A. D. Malony, D. H. Hammerslag, and D. J. Jablonowski. </author> <title> Traceview: A trace visualization tool. </title> <journal> IEEE Software, </journal> <volume> 8(5) </volume> <pages> 19-28, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: To address representativeness, Chitra uses not one but a collection, or ensemble of trace files. Chitra is similar to other trace analysis tools, such as Pablo [13] and TraceView <ref> [8] </ref>. In fact, Pablo's modular design to permit extension and self-describing data format influenced Chitra's design. However, Chitra is distinguished by its facilities for categorical data and ensemble analysis, and its ability to infer a descriptive model of traces.
Reference: [9] <author> R. S. Michalski, L. Kerschberg, K. A. Kaufman, and J. S. Ribeiro. </author> <title> Mining for knowledge in databases: The INLEN architecture, initial implementation and first results. </title> <booktitle> Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, </booktitle> 1992(1) 85-113, Aug. 1992. 
Reference-contexts: to represent multiple traces, rather than a single trace. (3) Move some of the function of interpreting data from human to machine (e.g., compare traces through statistical tests or visualization; devise methods to filter, transform, and reduce the volume of trace data, such as through statistics; use data mining methods <ref> [9] </ref> to discover relationships among trace data). 4.3 Chitra's Approach Chitra uses an approach that falls into the third category of interpreting data by machine. Chitra includes the four methods of Table 2 to analyze ensembles instead of exhaustively visualizing each trace in an ensemble. Each is illustrated below.
Reference: [10] <author> B. P. Miller and et al. </author> <title> The Paradyn parallel performance measurement tool. </title> <journal> IEEE Computer, </journal> <volume> 28(11) </volume> <pages> 37-46, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Indeed, analysis of trace data is often not the best way to solve performance programs, when a judicious choice of performance metric (e.g., [3]) or selective program instrumentation (e.g., <ref> [10] </ref>) may be better suited. Instead, Chitra has the following goals. First, explore new techniques for trace analysis, with the belief that some of our methods will be incorporated into performance tools built by others.
Reference: [11] <author> H. J. </author> <title> Newton. Graphics for time-series analysis. </title> <editor> In C. R. Rao, editor, </editor> <booktitle> Handbook of Statistics, </booktitle> <volume> volume 9. </volume> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1993. </year>
Reference-contexts: Therefore it is desirable to compare the two graphs, but while shifting one along the x-axis. This is the purpose of classical numerical cross-correlation <ref> [11, p. 821] </ref> 2 , the fourth row in Table 2. Fig.8 shows the cross-correlation graph of the two histograms in Fig. 7. The higher the value on the y-axis, the more correlated are the two histograms. <p> There are some statistical methods to help (e.g., a matrix of 2-way cross-correlation graphs <ref> [11, p. 820] </ref>). Ultimately, we would like a trace tool to automatically identify trace segments that represent outliers, or cluster traces that are similar. Perhaps the results of correlation analysis could be used to display to the user exactly what is similar and different between traces.
Reference: [12] <author> L. Ott. </author> <title> An Introduction to Statistical Methods and Data Analysis. </title> <address> PWS-Kent, Boston, </address> <note> 3rd edition, </note> <year> 1988. </year>
Reference-contexts: We will use two of Chitra's novel categorical visualizations in this section: correlograms and periodograms, to provide an analog of Figs. 2 and 3 for categorical data. Categorical Cross-Correlation: Numeric correlation is defined in terms of the strength of the relationship <ref> [12] </ref> between an independent and dependent variable. If the dependent variable increases when the independent variable increases, there is said to be a strong (and positive) correlation between the two values. If one value increases but the other decreases, there is a strong (and negative) correlation.
Reference: [13] <author> D. A. Reed and et al. </author> <title> Scalable performance analysis: The Pablo performance analysis environment. </title> <booktitle> In Proc. Scalable Parallel Libraries Conf., </booktitle> <pages> pages 104-113, </pages> <address> Los Alamitos, Calif., 1993. </address> <publisher> IEEE CS Press. Order No. </publisher> <pages> 4890. </pages>
Reference-contexts: To address representativeness, Chitra uses not one but a collection, or ensemble of trace files. Chitra is similar to other trace analysis tools, such as Pablo <ref> [13] </ref> and TraceView [8]. In fact, Pablo's modular design to permit extension and self-describing data format influenced Chitra's design. However, Chitra is distinguished by its facilities for categorical data and ensemble analysis, and its ability to infer a descriptive model of traces.
Reference: [14] <author> R. Ribler, A. Mathur, and M. Abrams. </author> <title> Visualizing and modeling categorical time series data. </title> <booktitle> In Symposium on Visualizing Time-varying Data, volume NASA Conference Publication 3321, </booktitle> <address> Williams-burg, VA, </address> <month> Jan. </month> <year> 1996. </year> <note> ICASE and NASA/LaRC. &lt;URL: http://www.cs.vt.edu/~chitra/docs/95vtvdRMA/- 95vtvdRMA.html&gt;. </note>
Reference-contexts: Table 1 contains the two correlation measures from Chi-tra used in this paper. (See <ref> [14] </ref> for definitions of other measures.) "In phase" correlation is the fraction of items in two sequences that match in both category and position. The "same alphabet" measure equals the number of events that match in category, regardless of position. <p> Intuitively, a categorical time series achieves a cycle when it returns to a previously encountered state. We define the period of this cycle to be the number of intervening events plus one. (An alternate definition, based on time, is also possible <ref> [14] </ref>, but is not used in this paper.) Consider a trace of length n consisting of event sequence e 1 , e 2 , : : : , e n . <p> This suggests a correlation of a route with routes occurring an even number of positions earlier and later in the trace file and is strong evidence of oscillations. Other Categorical Visualizations: Chitra contains several other visualizations for categorical data, which are discussed in <ref> [14] </ref>. 4 Issue 2: Inferring System Behavior from Traces The preceding section introduced categorical correlograms, autocorrelation, and periodograms, and used them to identify the presence of oscillator behavior in one particular trace Two Performance Tool Design Issues and Chitra's Solutions 7 file.
References-found: 14

