URL: ftp://gaia.cs.umass.edu/pub/ramjee/migr.ps.Z
Refering-URL: http://www.cs.umass.edu/~ramjee/papers.html
Root-URL: 
Title: 1 The Use of Network-Based Migrating User Agents for Personal Communication Services  
Author: R. Ramjee, T. F. La Porta, M. Veeraragahvan 
Affiliation: AT&T Bell Laboratories  
Abstract: In this paper we propose the use of a network-based agent that represents mobile users in a Personal Communication Services (PCS) environment. The agent, called a user process, performs all the complex signaling functions on behalf of the mobile terminal, thus reducing the amount of signaling traffic that must travel over the valuable air interface. To achieve low call establishment delays, we propose migrating the user process as the mobile terminal moves. We examine three process migration techniques and determine the one mechanism that is most suited to our needs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B.R. Badrinath, A. Bakre, T. Imielinski and R. Marantz, </author> <title> Handling Mobile Clients: A Case for Indirect Interaction, </title> <booktitle> in Proceedings of the 4th IEEE Workshop on Workstation Operating Systems, </booktitle> <pages> pp. 91-97, </pages> <year> 1993. </year>
Reference-contexts: In Section 4, we present three migration schemes for supporting user process mobility, and their performance. In Section 5, we compare the process migration mechanisms, and in Section 6 we present some conclusions. 2. User Agents In <ref> [1] </ref> the authors motivate the need to introduce indirect interaction between clients and servers when the two entities are directly connected to drastically different communication media, for example the wired and wireless media.
Reference: [2] <author> My T. Le, F. Brughardt, S. Seshan and Jan Rabaey, InfoNet: </author> <booktitle> The networking infrastructure of Infopad, Proceedings of Compcon, Calif., </booktitle> <month> Mar. </month> <year> 1995 </year>
Reference-contexts: The need for an agent inside the fixed network, acting on behalf of a mobile user, has been proposed in several research projects <ref> [2] </ref>[3][4][5][6][7]. The Berkeley Infopad project [2] has a pad server which manages and controls access to the mobile terminal. The pad server allocates and manages the bandwidth available to the applications running on the mobile terminal and keeps track of the location of the mobile terminal.
Reference: [3] <author> G.Y. Liu, G.Q. Maguire. Jr., </author> <title> Efficient Mobility management support for wireless data ser-vices, </title> <booktitle> to appear at the proc. of 45th IEEE Vehicular Technology Conference, </booktitle> <address> Chicago, Illinois, </address> <month> July </month> <year> 1995 </year>
Reference-contexts: When the mobile terminal moves to a different cell, the pad server ensures that the data sent to the mobile is routed accordingly. In <ref> [3] </ref>, the authors propose two types of agents, the Personal agent (P-agent), which is a representative of the user in the network, and a Mobile Floating agent (MF-agent). The P-agent contains all the service logic and service data related to the user, and controls the communication sessions.
Reference: [4] <author> B. Schilit and D. Duchamp, </author> <title> Adaptive Remote Paging for Mobile Computers,Tech Report TR CUCS-004-91, </title> <institution> Dept. of Computer Science, Columbia University. </institution>
Reference-contexts: Filtering messages helps reduce the amount of data transferred over the wireless link. The agent also has the ability to start/stop applications on the mobile computer on demand. This operation is particularly useful since the mobile computer has very limited computational resources. In <ref> [4] </ref>, data pages from the mobile terminal are remotely stored in the network to facilitate the use of the main memory on machines inside the fixed network. <p> In our case, the architecture is designed for supporting signaling over wide-area and a fixed agent would lead to unacceptably large setup delays. In <ref> [4] </ref>, pages are migrated as the users move so that the loading time of the pages is kept low. In [10], a prediction algorithm is incorporated to track the mobile users. Mobile 1.
Reference: [5] <author> A. Athan and D. Duchamp, </author> <title> Agent-Mediated Message Passing for Constrained Environments, </title> <booktitle> Usenix symposium on Mobile and Location-Independent Computing, </booktitle> <year> 1993. </year>
Reference-contexts: The Teleporting system [6] is another interesting application which adopts the notion of agents. It uses proxy servers, a special type of X server, for making application interfaces (X displays) mobile. These proxy servers are instantiated for each user. 3 In <ref> [5] </ref>, the agent is given the responsibility of storing and filtering messages. The ability to store messages is beneficial when the mobile computer is disconnected from the fixed network or operates in power-save mode. Filtering messages helps reduce the amount of data transferred over the wireless link. <p> Applications always communicate with the mobile terminal through the proxy. A distinction can be made among the agents depending on whether they affect the control information or the data sent/received by the mobile. For example, in <ref> [5] </ref> and [7], the agent processes the data owing to the mobile. The pad server in the Infopad project also performs multi <p>- plexing and demultiplexing operations on the data owing to/from the mobile user 1 .
Reference: [6] <author> T. Richardson, F. Bennett, G. Mapp and A. Harter, </author> <title> Teleporting in an X window system envi-ronment, </title> <journal> IEEE Personal Communications Magazine, Third Quarter, </journal> <year> 1994. </year>
Reference-contexts: The P-agent contains all the service logic and service data related to the user, and controls the communication sessions. The MF-agent is assigned by the P-agent at remote locations. The MF-agent becomes the acting P-agent and provides services to the user. The Teleporting system <ref> [6] </ref> is another interesting application which adopts the notion of agents. It uses proxy servers, a special type of X server, for making application interfaces (X displays) mobile. These proxy servers are instantiated for each user. 3 In [5], the agent is given the responsibility of storing and filtering messages.
Reference: [7] <author> N. Adams, R. Gold, B. Schilit, M.Tso and R.Want, </author> <title> An Infrared Network for Mobile Computers, </title> <booktitle> in Proceedings of the Usenix Mobile and Location-Independent Computing Symposium, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: Thus, remote memory is used as an extended disk to enable faster memory accesses as well as to circumvent problems due to lack of disk space in mobile computers. In ParcTab network <ref> [7] </ref>, the agent is responsible for delivering requests to its corresponding mobile user and tracking the location of the mobile as it moves from cell to cell. <p> Applications always communicate with the mobile terminal through the proxy. A distinction can be made among the agents depending on whether they affect the control information or the data sent/received by the mobile. For example, in [5] and <ref> [7] </ref>, the agent processes the data owing to the mobile. The pad server in the Infopad project also performs multi <p>- plexing and demultiplexing operations on the data owing to/from the mobile user 1 .
Reference: [8] <author> J. Ioannidis, D. Duchamp and G.Q.Maguire Jr., </author> <title> IP-Based protocols for Mobile InternetWorking, </title> <publisher> SIGCOMM91. </publisher>
Reference-contexts: In ParcTab network [7], the agent is responsible for delivering requests to its corresponding mobile user and tracking the location of the mobile as it moves from cell to cell. Thus, the agent can be seen as a Mobile Support Router of the Mobile IP scheme <ref> [8] </ref> which manages the routing for a specific mobile terminal. The framework developed in ParcTab is used in Wit [9], where the network proxy process provides connections, and acts as an application programmer interface. Applications always communicate with the mobile terminal through the proxy. <p> If we chose not to migrate the user process, we would have to anchor the user process in a well known location similar to the Home station of the mobile IP schemes [16] <ref> [8] </ref>. This may result in unacceptably large setup times, especially if messages traversed cross-country to be processed. 3.6.
Reference: [9] <author> T. Watson, </author> <title> Application design for wireless computing, </title> <booktitle> Workshop on Mobile Computing Systems and Applications, </booktitle> <month> December </month> <year> 1994. </year>
Reference-contexts: Thus, the agent can be seen as a Mobile Support Router of the Mobile IP scheme [8] which manages the routing for a specific mobile terminal. The framework developed in ParcTab is used in Wit <ref> [9] </ref>, where the network proxy process provides connections, and acts as an application programmer interface. Applications always communicate with the mobile terminal through the proxy. A distinction can be made among the agents depending on whether they affect the control information or the data sent/received by the mobile.
Reference: [10] <author> G.Y.Liu and G.Q.Maguire Jr., </author> <title> A Virtual distributed system architecture for supporting Global-Distributed mobile computing, </title> <type> Tech. Report, </type> <institution> Royal Institute of technology, TRITA-IT R 95 01. </institution>
Reference-contexts: In our case, the architecture is designed for supporting signaling over wide-area and a fixed agent would lead to unacceptably large setup delays. In [4], pages are migrated as the users move so that the loading time of the pages is kept low. In <ref> [10] </ref>, a prediction algorithm is incorporated to track the mobile users. Mobile 1.
Reference: [11] <author> T. F. La Porta, M. Veeraraghavan, P.A. Treventi, R. Ramjee, </author> <title> Distributed Call Processing for Personal Communications Services, </title> <journal> IEEE Communications Magazine, </journal> <note> to appear. </note>
Reference-contexts: We will not describe the Call and Connection Servers further as they are beyond the scope of this paper. The reader is referred to <ref> [11] </ref> for more details. Each network contains multiple Location Servers which are responsible for tracking the location of a mobile terminal within a network. The Location Servers are not associated with a cluster, but track the movement of mobile terminals across cluster boundaries. 3.2.
Reference: [12] <author> M. Veeraraghavan, T. F. La Porta, R. Ramjee, </author> <title> A Distributed Control Strategy for Wireless ATM Networks, </title> <note> Proc. of ICC 95, to appear. </note>
Reference: [13] <author> TIA/EIA IS-95, </author> <title> Mobile Station-Base Station Compatibility Standard for Dual-Mode Wideband Spread-Spectrum Cellular Systems, </title> <journal> Telecommunications Industry association, </journal> <month> July </month> <year> 1993. </year>
Reference-contexts: This registration includes a profile provided by the mobile terminal. This profile contains compatibility information of the mobile terminal, which applications are running, and any other user specific information that is required to create the user process. One example of User Profile data is the MOB_TERM parameter of IS-95 <ref> [13] </ref> which indicates whether the cellular user is willing to accept incoming calls. The reader is referred to [14] for more details on the requirements and management of User Profiles for future mobile telecommunications systems.
Reference: [14] <author> G.P. Eleftheriadis and M.E. Theologou, </author> <title> User Profile Identification in Future Mobile Telecommunications Systems, </title> <journal> IEEE Network, </journal> <month> Sep. </month> <year> 1994. </year>
Reference-contexts: One example of User Profile data is the MOB_TERM parameter of IS-95 [13] which indicates whether the cellular user is willing to accept incoming calls. The reader is referred to <ref> [14] </ref> for more details on the requirements and management of User Profiles for future mobile telecommunications systems. The Location Server is responsible for recording the current cluster of the mobile terminal, and instructing a User Signaling Server to instantiate a user process on behalf of the mobile terminal.
Reference: [15] <author> U. Madhow, </author> <title> M.L. Honig and K.Steiglitz, Optimization of Wireless Resources for Personal Communications Mobility Tracking, </title> <booktitle> Proc. of IEEE Infocom94. </booktitle> <pages> 18 </pages>
Reference-contexts: Thus the mobile is tracked to the granularity of a cluster when it is idle and its exact location determined at call setup time, optimizing on the trade-off between the number of registrations and the amount of paging required <ref> [15] </ref>. When the mobile terminal wishes to place a call, as shown in Figure 4, it signals to its user process and requests a call of a certain type.
Reference: [16] <author> C.E.Perkins and Pravin Bhagwat, </author> <title> A Mobile Networking System based on Internet Protocol, </title> <journal> IEEE Personal Communications, </journal> <volume> Vol 1., No. 1, </volume> <pages> pp 32 -41. </pages>
Reference-contexts: If we chose not to migrate the user process, we would have to anchor the user process in a well known location similar to the Home station of the mobile IP schemes <ref> [16] </ref> [8]. This may result in unacceptably large setup times, especially if messages traversed cross-country to be processed. 3.6.
Reference: [17] <author> S. Mohan and R. Jain, </author> <title> Two User Location Strategies for Personal Communications Services, </title> <journal> IEEE Personal Communications, Vol.1, </journal> <volume> No. 1, </volume> <pages> pp. 42-50. </pages>
Reference-contexts: These messages total to approximately 150 bytes. To estimate the overhead incurred in migration, we use common assumptions for characteristics of a PCS network <ref> [17] </ref>, summarized in Table 1.
Reference: [18] <author> R.Thomas, H. Gilbert and G.Mazziotto, </author> <title> Inuence of mobile station on the performance of a Radio Mobile cellular network, </title> <booktitle> Proc. of 3rd Nordic Sem., paper 9.4, </booktitle> <address> Copenhagen, Denmark, </address> <month> Sept. </month> <year> 1988 </year>
Reference-contexts: To estimate the overhead incurred in migration, we use common assumptions for characteristics of a PCS network [17], summarized in Table 1. Assuming that the direction of the movement of the terminals is uniformly distributed over [0, 2p], and using a uid ow mobility model <ref> [18] </ref>, the rate of mobiles crossing a cluster boundary is R=rvL/p Given the values of Table 1, a single cluster experiences 5.85 boundary crossings per second. Accounting for 128 clusters in the network, our proposal incurs 900 Kbps long distance signaling overhead network-wide.
Reference: [19] <author> Y. Artsy and R. Finkel, </author> <title> Designing a process migration facility: </title> <booktitle> The Charlotte experience. In IEEE computer, </booktitle> <pages> pages 47-56, </pages> <month> September </month> <year> 1989. </year>
Reference: [20] <author> M.L.Powell and B.P.Miller, </author> <title> Process migration in Demos/MP, </title> <booktitle> Proc. Ninth Symp. Operating Systems Principles in ACM Operating Systems Review, </booktitle> <volume> Vol. 17, No. 5, </volume> <year> 1983, </year> <pages> pp. 110-118. </pages>
Reference: [21] <author> M.Litzkow and M.Solomon, </author> <title> Supporting checkpointing and process migration outside the Unix Kernel, </title> <booktitle> in Usenix Winter Conference, </booktitle> <address> San Francisco, California, </address> <year> 1992. </year>
Reference: [22] <author> M.J.Litzkow,M.Livny and M.W.Mutka, </author> <title> Condor - A Hunter of Idle Workstations, </title> <booktitle> 8th International Conference on Distributed Computing Systems, </booktitle> <address> Jan Jose, Calif, </address> <month> June </month> <year> 1988. </year>
Reference: [23] <author> M. Kannan, </author> <title> TERN - migration mechanism and the communication layer, </title> <type> B.Tech project report, </type> <institution> Dep.t of Computer Science, IIT Madras, </institution> <year> 1992. </year>
Reference: [24] <author> K.G.Venkatasubramanian, </author> <title> Preprocessing and Run-Time System Call support for TERN, </title> <type> B.Tech project report, </type> <institution> Dept. of Computer Science, IIT Madras, </institution> <year> 1992. </year>
Reference: [25] <author> T. Ahmad, M. Clary, O. Densmore, S. Gadol, A. Keller and R. Pang, </author> <title> The DIANA approach to mobile computing, </title> <journal> Mobidata journal, </journal> <volume> Vol. 1, No. 1, </volume> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: Migration, in our case, is complicated by the fact that communication logic is strongly coupled with the processing logic of the application and thus, means must be provided for re-establishing the communication channels of the process after it has migrated. In <ref> [25] </ref>, a new application architecture is proposed which de-couples the communication logic from the processing logic of the application. This feature is particularly appealing as the migration mechanism will have to deal only with migrating the processing logic-specific components, not the communication logic.
Reference: [26] <author> H. Wadi et al., </author> <title> Mobile Computing Environment Based on Internet Packet Forwarding, </title> <booktitle> Proc. Winter Usenix, </booktitle> <address> San Diego, Calif., </address> <month> Jan </month> <year> 1993, </year> <pages> pp 503-517. </pages>
References-found: 26

