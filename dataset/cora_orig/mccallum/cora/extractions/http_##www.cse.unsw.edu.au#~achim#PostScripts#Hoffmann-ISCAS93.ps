URL: http://www.cse.unsw.edu.au/~achim/PostScripts/Hoffmann-ISCAS93.ps
Refering-URL: http://www.cse.unsw.edu.au/~achim/index.html
Root-URL: http://www.cse.unsw.edu.au
Title: A new strategy for library-independent layout design  
Author: Achim G. Hoffmann 
Address: P.O. Box 1, Kensington, Sydney, NSW 2033, Australia  
Affiliation: University of New South Wales School of Cumputer Science and Engineering  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> U. G. Baitinger, H. M. Lipp, D. A. Mlynski, and K. Reiss. </author> <title> The MEGA system for semi-custom design. </title> <editor> In G. D. Micheli, A. Sangiovanni-Vincentelli, and A. Antognetti, editors, </editor> <booktitle> Design Systems for VLSI Circuits, </booktitle> <pages> pages 527-537. </pages> <publisher> Martinus Nijhoff Publishers, </publisher> <year> 1987. </year>
Reference-contexts: However, for certain types of circuits, e.g. random logic, memory intensive circuits, etc. there are typical demands. From that the need for evaluating and comparing different master designs for certain classes of applications emerges. Furthermore, existing gate-array layout systems are either restricted to few master chips, e.g. <ref> [1, 6] </ref> or like TANGATE require the routings of elementary functions as NAND, NOR, etc. as input [4]. Thus, a layout system like GGADS that is capable of designing arbitrary gate arrays is desirable. A complete prototype of GGADS has been implemented at the Technische Universitat Berlin.
Reference: [2] <author> M. A. Breuer. </author> <title> Min-cut placement. Design Automation& Fault Tolerant Computing, </title> <booktitle> 4(1) </booktitle> <pages> 343-362, </pages> <month> October </month> <year> 1977. </year>
Reference-contexts: In figure 3 the modular structure of GGADS is shown. 2.1 Global placement and routing in GGADS The global placement determines a coarse placement using a refined Min-Cut <ref> [2] </ref> placement algorithm. The implemented Min-Cut procedure is based on partitioning a section into four consecutive subsections simultaneously [5] (figure 4). In a second step each of the four subsections is partitioned orthogonally into four sub-partitions (figure 4c).
Reference: [3] <author> A. E. Dunlop and B. W. Kernighan. </author> <title> A procedure forplacementof standard-cellVLSIcircuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 1(CAD-4):92-98, </volume> <month> January </month> <year> 1985. </year>
Reference: [4] <author> W. Haas. </author> <title> Untersuchung von Plazierungs- und Verdrahtungsprogrammen fur Sea-of-Gates Arrays. </title> <type> Technical report, </type> <institution> Institut fur Mikroelek-tronik Stuttgart, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: From that the need for evaluating and comparing different master designs for certain classes of applications emerges. Furthermore, existing gate-array layout systems are either restricted to few master chips, e.g. [1, 6] or like TANGATE require the routings of elementary functions as NAND, NOR, etc. as input <ref> [4] </ref>. Thus, a layout system like GGADS that is capable of designing arbitrary gate arrays is desirable. A complete prototype of GGADS has been implemented at the Technische Universitat Berlin.
Reference: [5] <author> A. G. Hoffmann. </author> <title> Towards optimizing global Min-Cut partitioning. </title> <booktitle> In Proceedings of the 2 nd Euro-pean Design Automation Conference, </booktitle> <pages> pages 167-171. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: In figure 3 the modular structure of GGADS is shown. 2.1 Global placement and routing in GGADS The global placement determines a coarse placement using a refined Min-Cut [2] placement algorithm. The implemented Min-Cut procedure is based on partitioning a section into four consecutive subsections simultaneously <ref> [5] </ref> (figure 4). In a second step each of the four subsections is partitioned orthogonally into four sub-partitions (figure 4c). <p> After that the same procedure is applied orthogonally leading to a partition into 4 fi 4 sections (c). SQP (Simultaneous QuadriPartitioning). By applying SQP a better global netlength minimization can be achieved. Moreover the routability of the resulting placement is improved <ref> [5] </ref>. While the SQP procedure partitions the initial circuit recursively, approximate steinertrees for estimating the global routing are generated and terminal propagation ([3]) is employed.
Reference: [6] <author> M. Igusa, M. Beardslee, and A. Sangiovanni-Vincentelli. </author> <title> ORCA A sea-of-gates place and route system. </title> <booktitle> InProceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 122-127, </pages> <year> 1989. </year>
Reference-contexts: However, for certain types of circuits, e.g. random logic, memory intensive circuits, etc. there are typical demands. From that the need for evaluating and comparing different master designs for certain classes of applications emerges. Furthermore, existing gate-array layout systems are either restricted to few master chips, e.g. <ref> [1, 6] </ref> or like TANGATE require the routings of elementary functions as NAND, NOR, etc. as input [4]. Thus, a layout system like GGADS that is capable of designing arbitrary gate arrays is desirable. A complete prototype of GGADS has been implemented at the Technische Universitat Berlin.
Reference: [7] <author> M. Okabe et. al. </author> <title> A CMOS sea-of-gates array with continuoustrackallocation. </title> <booktitle> In Proceedings of the International Solid-State Circuits Conference, </booktitle> <pages> pages 181-182, </pages> <year> 1989. </year>
Reference-contexts: TANGATE appears to be currently the most advanced and most powerful layoutsynthesis system for gatearrayson the market. Both systems TANGATE and GGADS had the task toproducealayoutforacircuitcontainingabout1000 functional cellsona gatearraymasterfromLSIwhich has been presented in <ref> [7] </ref>. TANGATE was given the same overall computing time of 1 hour as GGADS needed. The resulting chip areas of the layouts were comparable. Since GGADS has been implemented as a first prototype- in contrast to TANGATE the results appear very promising, although the chip area used by GGADSissomewhatgreaterthanthatofTANGATE.
References-found: 7

