URL: http://www.cs.ucsb.edu/conferences/java98/papers/ninflet.ps
Refering-URL: http://www.cs.ucsb.edu/conferences/java98/program.html
Root-URL: http://www.cs.ucsb.edu
Email: takagi@center.nitech.ac.jp  matsu@is.titech.ac.jp  nakada@etl.go.jp  sekiguti@etl.go.jp  msato@trc.rwcp.or.jp  umpei@is.ocha.ac.jp  
Title: Ninflet: a Migratable Parallel Objects Framework using Java  
Author: Hiromitsu Takagi Satoshi Matsuoka Hidemoto Nakada Satoshi Sekiguchi Mitsuhisa Satoh Umpei Nagashima 
Note: Real World Computing Partnership  
Affiliation: Nagoya Institute of Technology  Tokyo Institute of Technology  Electrotechnical Laboratory  Electrotechnical Laboratory  Ochanomizu University  
Abstract: Ninflet is a Java-based global computing system that builds on our experiences with the Ninf system which facilitated RPC-based computing of numerical tasks in a wide-area network. The goal of Ninflet is to become a new generation of concurrent object-oriented system which harness abundant idle computing powers, and also seamlessly integrate global as well as local network parallel computing. Ninflet is designed to make use of Java features to implement important features in global computing, such as resource allocation, inter-Ninflet communication, security, checkpointing, object migration, and easy server management via HTTP. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Sekiguchi, M. Sato, U. Nagashima. </author> - <title> Ninf - : Network based Information Library for High 8 Performance Computing, </title> <journal> SIGNote of Information Processing Society, number 94-HPC-52, </journal> <pages> pages 127-132, </pages> <year> 1994. </year> <title> in Japanese. </title>
Reference-contexts: Either way, much of their computational resources would often be idle (say, during non-office hours), and an computing environment which makes use of such idle clusters seamlessly would be highly desirable. We are conducting an ongoing research project on global computing called Ninf (Network Infrastructure for global computing). <ref> [1] </ref> [2] [3] Ninf is a client-server system makes available multiple remote computing and database servers on the network, allowing clients to semi-transparently call remote numerical applications and libraries from languages such as Fortran, C, and Java, and even DCOM objects.
Reference: [2] <author> S. Sekiguchi, M. Sato, H. Nakada, and U. Na-gashima. </author> - <title> Ninf -: Network Base Information Library for Globally High Performance Computing., </title> <booktitle> in Proceedings of Parallel Object-Oriented Methods and Applications (POOMA), </booktitle> <year> 1996. </year>
Reference-contexts: Either way, much of their computational resources would often be idle (say, during non-office hours), and an computing environment which makes use of such idle clusters seamlessly would be highly desirable. We are conducting an ongoing research project on global computing called Ninf (Network Infrastructure for global computing). [1] <ref> [2] </ref> [3] Ninf is a client-server system makes available multiple remote computing and database servers on the network, allowing clients to semi-transparently call remote numerical applications and libraries from languages such as Fortran, C, and Java, and even DCOM objects.
Reference: [3] <author> M. Sato, H. Nakada, S. Sekiguchi, S. Matsuoka, U. Nagashima, and H. Takagi. Ninf: </author> <title> A Network based Information Library for a Global WorldWide Computing Infrastructure, </title> <booktitle> Lecture Note in Computer Science, High-Performance Computing and Networking, </booktitle> <pages> pages 491-502, </pages> <year> 1997. </year>
Reference-contexts: We are conducting an ongoing research project on global computing called Ninf (Network Infrastructure for global computing). [1] [2] <ref> [3] </ref> Ninf is a client-server system makes available multiple remote computing and database servers on the network, allowing clients to semi-transparently call remote numerical applications and libraries from languages such as Fortran, C, and Java, and even DCOM objects.
Reference: [4] <author> A. Takefusa, S. Matsuoka, H. Ogawa, H. Nakada, H. Takagi, M. Sato, S. Sekiguchi, and U. Na-gashima. </author> <title> Multi-client LAN/WAN Performance Analysis of Ninf: a High-Performance Global Computing System, </title> <booktitle> in Proceedings of Supercomputing'97, </booktitle> <year> 1997. </year>
Reference-contexts: We have already made publically available the first version of the Ninf system 1 Hereafter, we use the term "cluster" to indicate both dedicated and non-dedicated locally-networked set of PCs and workstations. (http://ninf.etl.go.jp/), and conducted extensive benchmarking on real networks <ref> [4] </ref>, and also have built adaptors [5] to similar global computing systems such as Netsolve [6]. Ninf is intended to reuse existing libraries and applications under heterogeneous, multi-lingual setting in a coarse-grained manner. <p> As a future work, we are exploiting the following issues: * First, we are pursuing an effective resource scheduling algorithm for global computing. Although we have conducted extensive benchmarks in a physically networked environment <ref> [4] </ref>, we are now pursuing construction of simulation model and a simulator based on the model for global computing. * Second, we are designing libraries that implement different parallel programming styles on Ninflet.
Reference: [5] <author> H. Nakada, H. Takagi, S. Matsuoka, U. Na-gashima, M. Satoh, S. Sekiguchi. </author> <title> Utilizing the Metaserver Architecture in the Ninf Global Computing System, </title> <note> submitted to HPCN'98. </note>
Reference-contexts: We have already made publically available the first version of the Ninf system 1 Hereafter, we use the term "cluster" to indicate both dedicated and non-dedicated locally-networked set of PCs and workstations. (http://ninf.etl.go.jp/), and conducted extensive benchmarking on real networks [4], and also have built adaptors <ref> [5] </ref> to similar global computing systems such as Netsolve [6]. Ninf is intended to reuse existing libraries and applications under heterogeneous, multi-lingual setting in a coarse-grained manner.
Reference: [6] <author> H. Casanova, and J. Dongarra. Netsolve: </author> <title> A Network Server for Solving Computational Science Problems. </title> <booktitle> in Proceedings of Supercomputing'96, </booktitle> <year> 1996. </year>
Reference-contexts: available the first version of the Ninf system 1 Hereafter, we use the term "cluster" to indicate both dedicated and non-dedicated locally-networked set of PCs and workstations. (http://ninf.etl.go.jp/), and conducted extensive benchmarking on real networks [4], and also have built adaptors [5] to similar global computing systems such as Netsolve <ref> [6] </ref>. Ninf is intended to reuse existing libraries and applications under heterogeneous, multi-lingual setting in a coarse-grained manner. <p> More generally, there have been proposals for global computing using low-level communication systems such as PVM [13], MPI [14], Linda [15], etc., as well as higher-level, dedicated systems, including CONDOR [7], Netsolve <ref> [6] </ref>, Legion [16], and GLOBUS [17]. Although these systems offer heterogeneous collaboration of multiple systems in parallel, some of them in a Wide-area setting, they involve rather complex maintenance of different binary code, multiple execution environments, etc.
Reference: [7] <author> M. Lizkow, M. Livny, and M. W. </author> <title> Mutka. Condor </title>
Reference-contexts: Also, Ninf currently lacks security features as well as task migration, which make it difficult to place and appropriately control computing servers server on every node in a cluster. Although the latter feature could be implemented by taking a approach similar to Condor <ref> [7] </ref>, the migratory site has to be homogeneous for binary compatibility. In order to provide a more uniform, finer-grained object-based programming model, we decided to construct Ninflet, overcoming the limitations of Ninf. <p> More generally, there have been proposals for global computing using low-level communication systems such as PVM [13], MPI [14], Linda [15], etc., as well as higher-level, dedicated systems, including CONDOR <ref> [7] </ref>, Netsolve [6], Legion [16], and GLOBUS [17]. Although these systems offer heterogeneous collaboration of multiple systems in parallel, some of them in a Wide-area setting, they involve rather complex maintenance of different binary code, multiple execution environments, etc.
References-found: 7

