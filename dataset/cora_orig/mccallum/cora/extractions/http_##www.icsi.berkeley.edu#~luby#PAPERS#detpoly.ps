URL: http://www.icsi.berkeley.edu/~luby/PAPERS/detpoly.ps
Refering-URL: http://www.icsi.berkeley.edu/~luby/derand.html
Root-URL: http://www.icsi.berkeley.edu
Title: Deterministic Approximate Counting of Depth-2 Circuits  
Author: Michael Luby Boban Velickovic Avi Wigderson 
Abstract: We describe deterministic algorithms which for a given depth-2 circuit F approximate the probability that on a random input F outputs a specific value ff. Our approach gives an algorithm which for a given GF[2] multivariate polynomial p and given * &gt; 0 approximates the number of zeros of p within a multiplicative factor 1 + *. The algorithm runs in time exp(exp(O( p log(n=*)))), where n is the size of the circuit. We also obtain an algorithm which given a DNF formula F and * &gt; 0 approximates the number of satisfying assignments of F within a factor of 1 + * and runs in time exp(O((log(n=*)) 4 )).
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ajtai, M., Wigderson, A., </author> <title> "Deterministic simulation of constant depth circuits", Randomness and Computation, </title> <editor> eds. Preparata and Micali, </editor> <booktitle> Advances in Computing Research series (5), </booktitle> <publisher> JAI Press, </publisher> <year> 1989, </year> <pages> pp. 199-222. 10 </pages>
Reference-contexts: The problem of finding such approximation algorithms which are deterministic is central to understanding the power of randomness in restricted classes of algorithms. Ajtai and Wigderson <ref> [1] </ref> showed that every probabilistic AC 0 circuit can be deterministically approximated in time exp (exp ( p log (n=*))). Nisan [12] considerably strengthened this result, obtaining exp (log (n) O (1) ) running time for approximation algorithms for the same class of circuits.
Reference: [2] <author> Alon, N., Babai, L., Itai, A., </author> <title> "A Fast and Simple Randomized Parallel Algorithm for the Maximal Independent Set Problem", </title> <journal> Journal of Algorithms, </journal> <volume> 7, </volume> <pages> pp. 567-583, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction This paper deals with the problem of approximating the accepting probability of general depth-2 boolean circuits. Examples of boolean functions which can be computed by such circuits are DNF formulas, polynomials over GF <ref> [2] </ref>, polynomials over other small fields, threshold functions, etc. There are easy probabilistic algorithms which for a given circuit F and a real parameter * &gt; 0 approximate the probability that on a random input F evaluates to 0. <p> The probability that j Pr [F = 0] Y j * is at least 1 ffi. It is easy to see that 1 Y estimates the probability that F evaluates to 1. For the case of DNF formulas and polynomials over GF <ref> [2] </ref> it has been shown that these algorithms can be transformed to efficient probabilistic algorithms which approximate the accepting or rejecting probability of F in the relative sense, i.e. that produce a Y 0 such that the probability that j Pr [F = 0] Y 0 j * Pr [F = <p> While for circuits with Boolean gates (AC 0 ) the lower bounds hold even for approximating (parity, say) to within exponential error [5], the bounds for circuits with modular gates (say over GF <ref> [2] </ref>) of [14], [15] apply only for approximating (majority, say) to within a polynomial error. We provide the first subexponential simulation for probabilistic circuits with modular gates. We can approximate the accepting probability of any GF [2] polynomial of size n to within error * in deterministic time exp (exp ( <p> within exponential error [5], the bounds for circuits with modular gates (say over GF <ref> [2] </ref>) of [14], [15] apply only for approximating (majority, say) to within a polynomial error. We provide the first subexponential simulation for probabilistic circuits with modular gates. We can approximate the accepting probability of any GF [2] polynomial of size n to within error * in deterministic time exp (exp ( p log (n=*))). Our results can also be applied to approximate the accepting probability of a polynomial of size n over any finite field of size polynomial in n. <p> Note that in Lemma 1 we use only 2d-wise independence of the random variables. It will be crucial in our applications that there exist efficiently constructible 2d-wise independent probability distributions with small sample spaces (see [10], <ref> [2] </ref>). This allows us to convert these existence arguments into constructions by searching exhaustively all sample points. We state the result we shall need in the following proposition. <p> They can easily be converted to relative error approximation algorithms, i.e. algorithms that output Y such that j Pr [F = 0]Y j * Pr [F = 0], using the reduction techniques presented in [7], [8] for DNF formulas and in [9] for polynomials over GF <ref> [2] </ref>. We leave the details to the interested reader. 7 Acknowledgements We thank Oded Goldreich for carefully reading this paper and providing us with comments which improved the presentation.
Reference: [3] <author> Babai, L, Nisan, N., Szegedy, M., </author> <title> "Multiparty protocols and logspace-hard pseudorandom sequences", </title> <note> preliminary version in STOC, </note> <year> 1989, </year> <pages> pp. 1-11, </pages> <note> journal version in JCSS, Vol. 45, No. 2, </note> <month> October </month> <year> 1992, </year> <pages> pp. 204-232. </pages>
Reference-contexts: In [13] it was shown that the same generator can be applied for a variety of circuit families, provided appropriate lower bounds exist. Here we are able to apply this idea, and use the lower bounds on multiparty communication complexity of Babai, Nisan and Szegedy <ref> [3] </ref> (instead of the [14], [15] lower bounds). We in fact present our result in the general framework of symmetric circuits, and show that it also leads to an improved simulation time for DNF circuits, namely exp (log (n) 4 ). The paper is organized as follows. <p> In the case of modular or threshold circuits we use the generalized inner product function and a lower bound on the multiparty communication complexity of this function due to Babai, Nisan and Szegedy <ref> [3] </ref>. 3 Nearly disjoint sets Let I be a set of size l and S a family of n subsets of I each of size at least r. <p> Now given an input z each player simply broadcasts the number of gates assigned to him which evaluate to 1. As the top gate is symmetric, this information suffices to compute f . 5 We now define the generalized inner-product function g s;d considered in <ref> [3] </ref>. Suppose r = sd and let z i;j be doubly indexed boolean variables where i 2 [s] and j 2 [d]. <p> We shall use the following result of Babai, Nisan, and Szegedy <ref> [3] </ref>. Theorem 1 Let r = sd and let f be a boolean function on r variables such that c d (f ) t.
Reference: [4] <author> Chandra, A., Furst, M., and Lipton, R., </author> <title> "Multiparty protocols, </title> <booktitle> FOCS 1983, </booktitle> <pages> pp. 94-99. </pages>
Reference-contexts: all of our applications, the time to construct the sample space and exhaustively search it to find a good design is negligible compared to the running time of the rest of the construction. 4 General symmetric gates 4.1 Multiparty communication protocols Let us recall the definition of d-party communication protocols <ref> [4] </ref>. Suppose [r] = R 1 R 2 [ [ R d is a partition of [r] into d disjoint parts.
Reference: [5] <author> H-astad, J., </author> <title> "Computational limitations for small depth circuits", </title> <type> Ph.D. thesis, </type> <institution> MIT press, </institution> <year> 1986. </year>
Reference-contexts: The key difference is that in fact lower bound are needed on approximation rather than computation of the given function. While for circuits with Boolean gates (AC 0 ) the lower bounds hold even for approximating (parity, say) to within exponential error <ref> [5] </ref>, the bounds for circuits with modular gates (say over GF [2]) of [14], [15] apply only for approximating (majority, say) to within a polynomial error. We provide the first subexponential simulation for probabilistic circuits with modular gates. <p> It follows that we must have j -j *. In the case of DNF formulas g is, as in [12], XOR and we use the lower bounds of H-astad and Bopanna (see <ref> [5] </ref>). <p> Since the arguments in this case are very similar to the ones in [12] or in x4 we shall be sketchy in our description. As in [12] we use the following lower bound result of Boppana and H-astad <ref> [5, Chapter 8] </ref>. Theorem 3 Let F be any DNF formula on r boolean variables with clauses of size at most b. Let L r denote the XOR function on r variables.
Reference: [6] <author> H-astad, J., Goldmann, M., </author> <title> "On the power of small depth threshold circuits", </title> <booktitle> FOCS 1990, </booktitle> <pages> pp. 610-618. </pages>
Reference-contexts: Clearly c d (f ) depends on the particular partition of [r] used. We shall need the following observation of H-astad and Goldmann <ref> [6] </ref>. We sketch the proof for completeness. Lemma 4 Suppose a boolean function f can be computed by a depth-2 circuit in which the top gate is any symmetric function of m arbitrary gates with fan-in less than d each.
Reference: [7] <author> Karp, R., Luby, M., </author> <title> "Monte-Carlo algorithms for enumeration and reliability problems", </title> <booktitle> 24 th STOC, </booktitle> <year> 1983, </year> <pages> pp. 54-63. </pages>
Reference-contexts: Institute, research partially supported by the Wolfson Research Awards, administered by the Israeli Academy of Sciences and Humanities. 1 1 ffi and that produce Y 1 such that the probability that j Pr [F = 1] Y 1 j * Pr [F = 1] is at least 1 ffi (see <ref> [7] </ref>, [9] and [8]). The problem of finding such approximation algorithms which are deterministic is central to understanding the power of randomness in restricted classes of algorithms. Ajtai and Wigderson [1] showed that every probabilistic AC 0 circuit can be deterministically approximated in time exp (exp ( p log (n=*))). <p> They can easily be converted to relative error approximation algorithms, i.e. algorithms that output Y such that j Pr [F = 0]Y j * Pr [F = 0], using the reduction techniques presented in <ref> [7] </ref>, [8] for DNF formulas and in [9] for polynomials over GF [2]. We leave the details to the interested reader. 7 Acknowledgements We thank Oded Goldreich for carefully reading this paper and providing us with comments which improved the presentation.
Reference: [8] <author> Karp, R., Luby, M., Madras, N., </author> <title> "Monte-Carlo Approximation Algorithms for Enumeration Problems," </title> <journal> J. of Algorithms, </journal> <volume> Vol. 10, No. 3, </volume> <month> Sept. </month> <year> 1989, </year> <pages> pp. 429-448. </pages>
Reference-contexts: supported by the Wolfson Research Awards, administered by the Israeli Academy of Sciences and Humanities. 1 1 ffi and that produce Y 1 such that the probability that j Pr [F = 1] Y 1 j * Pr [F = 1] is at least 1 ffi (see [7], [9] and <ref> [8] </ref>). The problem of finding such approximation algorithms which are deterministic is central to understanding the power of randomness in restricted classes of algorithms. Ajtai and Wigderson [1] showed that every probabilistic AC 0 circuit can be deterministically approximated in time exp (exp ( p log (n=*))). <p> They can easily be converted to relative error approximation algorithms, i.e. algorithms that output Y such that j Pr [F = 0]Y j * Pr [F = 0], using the reduction techniques presented in [7], <ref> [8] </ref> for DNF formulas and in [9] for polynomials over GF [2]. We leave the details to the interested reader. 7 Acknowledgements We thank Oded Goldreich for carefully reading this paper and providing us with comments which improved the presentation.
Reference: [9] <author> Karpinski, M., Luby, M., </author> <title> "Approximating the Number of Solutions to a GF[2] Formula," preliminary version Proc. </title> <booktitle> Second Annual Symposium on Discrete Algorithms, </booktitle> <year> 1991, </year> <pages> pp. 300-303, </pages> <note> final version in Journal of Algorithms, Vol. 14, No. 2, </note> <month> March </month> <year> 1993, </year> <pages> pp. 280-287. </pages>
Reference-contexts: research partially supported by the Wolfson Research Awards, administered by the Israeli Academy of Sciences and Humanities. 1 1 ffi and that produce Y 1 such that the probability that j Pr [F = 1] Y 1 j * Pr [F = 1] is at least 1 ffi (see [7], <ref> [9] </ref> and [8]). The problem of finding such approximation algorithms which are deterministic is central to understanding the power of randomness in restricted classes of algorithms. Ajtai and Wigderson [1] showed that every probabilistic AC 0 circuit can be deterministically approximated in time exp (exp ( p log (n=*))). <p> They can easily be converted to relative error approximation algorithms, i.e. algorithms that output Y such that j Pr [F = 0]Y j * Pr [F = 0], using the reduction techniques presented in [7], [8] for DNF formulas and in <ref> [9] </ref> for polynomials over GF [2]. We leave the details to the interested reader. 7 Acknowledgements We thank Oded Goldreich for carefully reading this paper and providing us with comments which improved the presentation.
Reference: [10] <author> Luby, M., </author> <title> "A Simple Parallel Algorithm for the Maximal Independent Set Problem," </title> <booktitle> 17 th STOC, </booktitle> <month> May 6-8 </month> <year> 1985, </year> <pages> pp. 1-10, </pages> <note> SIAM J. on Computing, </note> <month> November </month> <year> 1986, </year> <journal> Volume 15, </journal> <volume> No. 4, </volume> <pages> pp. 1036-1053. </pages>
Reference-contexts: Note that in Lemma 1 we use only 2d-wise independence of the random variables. It will be crucial in our applications that there exist efficiently constructible 2d-wise independent probability distributions with small sample spaces (see <ref> [10] </ref>, [2]). This allows us to convert these existence arguments into constructions by searching exhaustively all sample points. We state the result we shall need in the following proposition.
Reference: [11] <author> Luby, M., Velickovic, B., </author> <title> "On Deterministic Approximation of DNF", </title> <booktitle> STOC 1991, </booktitle> <pages> pp. 430-438. </pages>
Reference-contexts: Nisan [12] considerably strengthened this result, obtaining exp (log (n) O (1) ) running time for approximation algorithms for the same class of circuits. The case of DNF formulas, which is a subclass of AC 0 circuits, was treated in <ref> [11] </ref> and more efficient approximation algorithms are described for this case. No nontrivial simulation of probabilistic constant depth circuits with modular gates was known. <p> The algorithm is a slight modification of the algorithm presented in [12] but uses our refined notion of (n; l; d; r)- design for a given (m; n; k)-system C. The running time is better than the running time of the algorithm presented in <ref> [11] </ref> for formulas which have unrestricted clause length. Since the arguments in this case are very similar to the ones in [12] or in x4 we shall be sketchy in our description. As in [12] we use the following lower bound result of Boppana and H-astad [5, Chapter 8].
Reference: [12] <author> Nisan, N., </author> <title> "Pseudo-random bits for constant depth circuits", </title> <type> Combinatorica 11 (1), </type> <year> 1991, </year> <pages> pp. 63-70. </pages>
Reference-contexts: The problem of finding such approximation algorithms which are deterministic is central to understanding the power of randomness in restricted classes of algorithms. Ajtai and Wigderson [1] showed that every probabilistic AC 0 circuit can be deterministically approximated in time exp (exp ( p log (n=*))). Nisan <ref> [12] </ref> considerably strengthened this result, obtaining exp (log (n) O (1) ) running time for approximation algorithms for the same class of circuits. The case of DNF formulas, which is a subclass of AC 0 circuits, was treated in [11] and more efficient approximation algorithms are described for this case. <p> Our results can also be applied to approximate the accepting probability of a polynomial of size n over any finite field of size polynomial in n. Our technique is strongly based on the pseudorandom generator Nisan <ref> [12] </ref> used for AC 0 circuits. In [13] it was shown that the same generator can be applied for a variety of circuit families, provided appropriate lower bounds exist. <p> In x4 we deal with multiparty communication protocols and present the approximation algorithm for general symmetric depth-2 circuits. In x5 we show that the algorithm from <ref> [12] </ref> in the case of DNF formulas can be modified to significantly improve its running time. <p> We arrange things so that the probability that F evaluates to 0 with these random variables as inputs is within * of . The idea of Nisan <ref> [12] </ref> is to choose n subsets of [l], say S 1 ; : : : ; S n , which are nearly disjoint in a certain technical sense and have size r and a simple function g on r variables which is hard to approximate in an appropriate model of computation. <p> This algorithm has special form and the choice of g is made such that there is no algorithm of such form which approximates it. It follows that we must have j -j *. In the case of DNF formulas g is, as in <ref> [12] </ref>, XOR and we use the lower bounds of H-astad and Bopanna (see [5]). <p> We also call such a family an (n; l; d; r)-design. The existence of (n; l; d; r)-designs for appropriate values of n; l; d and r was used by Nisan <ref> [12] </ref> in his approximation algorithm. We now refine this notion and use it to derive an improved algorithm. Suppose we are given in addition two integer parameters m and k and a family C of 3 m subsets of [n] each of size at most k. <p> From this we can conclude that ffi (F; G S ) &lt; *. The first part of the proof of the following lemma is based on a similar argument from <ref> [12] </ref>. Lemma 5 If ffi (F; G S ) * then there exists a boolean function h of r variables which can be computed by a d-party communication protocol for any partition of [r] into d disjoint sets in 2d log (m) rounds and such that Bias (h; g) *=n. <p> The running time of the algorithm is exp (O (log (n=*) 4 )) where n is the size of the formula. The algorithm is a slight modification of the algorithm presented in <ref> [12] </ref> but uses our refined notion of (n; l; d; r)- design for a given (m; n; k)-system C. The running time is better than the running time of the algorithm presented in [11] for formulas which have unrestricted clause length. <p> The running time is better than the running time of the algorithm presented in [11] for formulas which have unrestricted clause length. Since the arguments in this case are very similar to the ones in <ref> [12] </ref> or in x4 we shall be sketchy in our description. As in [12] we use the following lower bound result of Boppana and H-astad [5, Chapter 8]. Theorem 3 Let F be any DNF formula on r boolean variables with clauses of size at most b. <p> The running time is better than the running time of the algorithm presented in [11] for formulas which have unrestricted clause length. Since the arguments in this case are very similar to the ones in <ref> [12] </ref> or in x4 we shall be sketchy in our description. As in [12] we use the following lower bound result of Boppana and H-astad [5, Chapter 8]. Theorem 3 Let F be any DNF formula on r boolean variables with clauses of size at most b. Let L r denote the XOR function on r variables. <p> Then let: G (w; y) = ( r M (y S n (w) )): Again y S represents the projection of y to the first r coordinates of S if S has size at least r and otherwise equals 0 r . The analysis now proceeds as in <ref> [12] </ref> and uses Theorem 3 above. Corollary 7 There is a deterministic algorithm A which given integers n; m, and a real * &gt; 0, and F 2 D n;m outputs Y such that j Pr [F = 0] Y j *.
Reference: [13] <author> Nisan, N., Wigderson, A., </author> <title> "Hardness vs. Randomness", </title> <booktitle> FOCS 88, </booktitle> <pages> pp. 2-11. </pages>
Reference-contexts: Our results can also be applied to approximate the accepting probability of a polynomial of size n over any finite field of size polynomial in n. Our technique is strongly based on the pseudorandom generator Nisan [12] used for AC 0 circuits. In <ref> [13] </ref> it was shown that the same generator can be applied for a variety of circuit families, provided appropriate lower bounds exist.
Reference: [14] <author> Razborov, A., </author> <title> "Lower bounds on the size of bounded depth circuits in basis f&; ^; g, (in Russian), </title> <journal> Usp. Mat. Nauk, </journal> <volume> Vol. 41:4, </volume> <year> 1986, </year> <pages> pp. 219-220. </pages>
Reference-contexts: While for circuits with Boolean gates (AC 0 ) the lower bounds hold even for approximating (parity, say) to within exponential error [5], the bounds for circuits with modular gates (say over GF [2]) of <ref> [14] </ref>, [15] apply only for approximating (majority, say) to within a polynomial error. We provide the first subexponential simulation for probabilistic circuits with modular gates. <p> In [13] it was shown that the same generator can be applied for a variety of circuit families, provided appropriate lower bounds exist. Here we are able to apply this idea, and use the lower bounds on multiparty communication complexity of Babai, Nisan and Szegedy [3] (instead of the <ref> [14] </ref>, [15] lower bounds). We in fact present our result in the general framework of symmetric circuits, and show that it also leads to an improved simulation time for DNF circuits, namely exp (log (n) 4 ). The paper is organized as follows.
Reference: [15] <author> Smolensky, R., </author> <title> "Algebraic methods in the theory of lower bounds for boolean circuit complexity", </title> <booktitle> STOC 1987, </booktitle> <pages> pp. 77-82. 11 </pages>
Reference-contexts: While for circuits with Boolean gates (AC 0 ) the lower bounds hold even for approximating (parity, say) to within exponential error [5], the bounds for circuits with modular gates (say over GF [2]) of [14], <ref> [15] </ref> apply only for approximating (majority, say) to within a polynomial error. We provide the first subexponential simulation for probabilistic circuits with modular gates. <p> Here we are able to apply this idea, and use the lower bounds on multiparty communication complexity of Babai, Nisan and Szegedy [3] (instead of the [14], <ref> [15] </ref> lower bounds). We in fact present our result in the general framework of symmetric circuits, and show that it also leads to an improved simulation time for DNF circuits, namely exp (log (n) 4 ). The paper is organized as follows.
References-found: 15

