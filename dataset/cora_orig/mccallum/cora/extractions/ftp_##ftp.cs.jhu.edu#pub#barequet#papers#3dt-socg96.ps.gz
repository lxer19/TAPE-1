URL: ftp://ftp.cs.jhu.edu/pub/barequet/papers/3dt-socg96.ps.gz
Refering-URL: http://www.cs.jhu.edu/~barequet/papers.html
Root-URL: http://www.cs.jhu.edu
Title: On Triangulating Three-Dimensional Polygons  
Author: Gill Barequet Matthew Dickerson David Eppstein 
Keyword: three-dimensions, triangulation.  
Abstract: A three-dimensional polygon is triangulable if it has a non-self-intersecting triangulation which defines a simply-connected 2-manifold. We show that the problem of deciding whether a 3D polygon is triangulable is an N P-complete problem. We then establish some necessary conditions and some sufficient conditions for a polygon to be tri-angulable, providing special cases when the decision problem may be answered in polynomial time. We also discuss optimal triangulations of 3D polygons. 
Abstract-found: 1
Intro-found: 1
Reference: [Ad] <author> C.C. Adams, </author> <title> The Knot Book, W.H. </title> <publisher> Freeman, </publisher> <year> 1994. </year>
Reference-contexts: Hence the boundary of a non-self-intersecting surface can not be knotted. 2 Corollary 4 A knotted 3D polygon does not have a non-self-intersecting triangulation. 3.2 Unknotted Polygons A known result in knot theory states that all k-gons with k 5 are unknotted (see, e.g., <ref> [Ad, x1.6] </ref>). We prove a slightly stronger claim: Lemma 5 Every 3-dimensional triangle, quadrilateral, or pentagon, is triangulable. Proof. A triangle in 3D is the triangulation of itself.
Reference: [BE] <author> M. Bern and D. Eppstein, </author> <title> Mesh generation and optimal triangulation, </title> <booktitle> in: Computing in Eu-clidean Geometry (F.K. </booktitle> <editor> Hwang and D.-Z. Du, eds.), </editor> <publisher> World Scientific, </publisher> <year> 1992. </year>
Reference-contexts: In this paper we investigate the triangulability of 3-dimensional polygons as well as the problem of computing optimal triangulations of polygons. The triangulation of a planar polygon attracted considerable attention in the literature during the past decade. See, for example, papers by Edelsbrunner [Ed] or Bern and Eppstein <ref> [BE] </ref> for comprehensive reviews on this subject. The complexity of triangulating a planar polygon was an open problem in computational geometry until Chazelle [Ch] closed the issue by presenting an ingenious optimal O (n) algorithm.
Reference: [BS1] <author> G. Barequet and M. Sharir, </author> <title> Filling gaps in the boundary of a polyhedron, Computer-Aided Geometric Design, </title> <booktitle> 12 (1995), </booktitle> <pages> 207-229. </pages>
Reference-contexts: We are not aware of previous work on the triangulation of 3-dimensional polygons. However special cases of this problem naturally arise in various contexts, including in the reconstruction of three-dimensional objects from cross-sectional slices. In this application [BS2], as well in other applications (see, e.g., <ref> [BS1] </ref>), the problem is to compute an unknown (polyhedral) surface when only its (polygonal) boundary is known. <p> In this version we may apply a simple dynamic programming procedure, following the technique of Klincsek [Kl] for finding a polygon triangulation in the plane, which minimizes the total sum of edge lengths. Such procedure is already used in <ref> [BS1, BS2] </ref> for triangulating 3-dimensional polygons. As is well known, the dynamic programming technique requires O (n 3 ) time and O (n 2 ) space, where n is the number of edges of the triangulated polygon.
Reference: [BS2] <author> G. Barequet and M. Sharir, </author> <title> Piecewise-linear interpolation between polygonal slices, Computer Vision, Graphics and Image Processing: Image Understanding, </title> <note> 63 (1996), in press. </note>
Reference-contexts: We are not aware of previous work on the triangulation of 3-dimensional polygons. However special cases of this problem naturally arise in various contexts, including in the reconstruction of three-dimensional objects from cross-sectional slices. In this application <ref> [BS2] </ref>, as well in other applications (see, e.g., [BS1]), the problem is to compute an unknown (polyhedral) surface when only its (polygonal) boundary is known. <p> A biplanar polygon is a 3D polygon whose vertices lie in two parallel planes. The number of edges that connect ("jump") between the two planes is not limited. Computing a triangula tion of biplanar polygons appears, for example, in interpolation problems (see, e.g., <ref> [BS2] </ref> 1 ). Unfortunately, biplanarity (even of an unknotted polygon) is not a sufficient condition for trian-gulability. The hexagon shown in Figure 3 is an unknotted biplanar polygon which is not trian-gulable. Thus unknottedness is a necessary but not sufficient condition for triangulability. <p> The common aspect of all the presented conditions is the simplicity of some projection of the polygon. Unfortunately, it is fairly easy to show that none of them is a necessary condition. 3.3.1 Simple Orthogonal Projection 1 Note that the 3D polygons of <ref> [BS2] </ref>, so-called clefts, always have simple orthogonal projections, hence they are triangulable. 2 Snoeyink refers to unknotted polygons as "trivial knots". <p> In this version we may apply a simple dynamic programming procedure, following the technique of Klincsek [Kl] for finding a polygon triangulation in the plane, which minimizes the total sum of edge lengths. Such procedure is already used in <ref> [BS1, BS2] </ref> for triangulating 3-dimensional polygons. As is well known, the dynamic programming technique requires O (n 3 ) time and O (n 2 ) space, where n is the number of edges of the triangulated polygon.
Reference: [Ch] <author> B. Chazelle, </author> <title> Triangulating a simple polygon in linear time, Discrete Computational Geometry, </title> <booktitle> 6 (1991), </booktitle> <pages> 485-524. </pages>
Reference-contexts: See, for example, papers by Edelsbrunner [Ed] or Bern and Eppstein [BE] for comprehensive reviews on this subject. The complexity of triangulating a planar polygon was an open problem in computational geometry until Chazelle <ref> [Ch] </ref> closed the issue by presenting an ingenious optimal O (n) algorithm. The main tool used in this algorithm is the visibility map, which crucially depends on the planarity of the polygon.
Reference: [Ed] <author> H. Edelsbrunner, </author> <title> Triangulations, </title> <booktitle> Lecture Notes, </booktitle> <address> CS497, UIUC, </address> <month> Spring </month> <year> 1991. </year>
Reference-contexts: E-mail: epp-stein@ics.uci.edu. polygon has the same combinatorial structure as that of a planar polygon, with the additional requirement that no two triangles intersect in their interiors. In two dimensions, it is clear that every simple polygon has a triangulation (see, e.g., <ref> [Ed, p. 16] </ref>). A 3-dimensional polygon need not be planar, nor triangulable. In this paper we investigate the triangulability of 3-dimensional polygons as well as the problem of computing optimal triangulations of polygons. The triangulation of a planar polygon attracted considerable attention in the literature during the past decade. <p> In this paper we investigate the triangulability of 3-dimensional polygons as well as the problem of computing optimal triangulations of polygons. The triangulation of a planar polygon attracted considerable attention in the literature during the past decade. See, for example, papers by Edelsbrunner <ref> [Ed] </ref> or Bern and Eppstein [BE] for comprehensive reviews on this subject. The complexity of triangulating a planar polygon was an open problem in computational geometry until Chazelle [Ch] closed the issue by presenting an ingenious optimal O (n) algorithm. <p> A more general question is: if a 3-dimensional polygon is triangulable, how many triangulations are there? If we neglect the possible intersections between triangles in 3D, then the number of triangulations of an n-gon identifies with that of a planar convex polygon: 1 n1 n2 <ref> [Ed, p. 76] </ref>. This is, in fact, the (n 2)th Catalan number. In general, however, the number of valid triangulations of a 3-dimensional polygon is a non-trivial question. This leads to another interesting problem which is to compute an optimal triangulation for some measure of optimality. <p> Then P is triangulable. Proof. Denote the projection of P onto Q by P 0 . Every simple planar polygon has a triangulation <ref> [Ed, p. 76] </ref>. Triangulate P 0 within Q, and lift the triangulation back to the original vertices of P . Each 3-dimensional triangle is fully contained in a prism perpendicular to Q and bounded by the triangle itself and by the corresponding triangle within Q.
Reference: [EG] <author> H. Edelsbrunner and L. Guibas, </author> <title> Topologically sweeping an arrangement, </title> <journal> J. of Computer and Systems Science, </journal> <volume> 38 (1989), </volume> <pages> 165-194. </pages>
Reference-contexts: Splitting all the quadrilaterals and the target rectangle into two triangles each, we obtain the triangles-cover-triangle problem which belongs to the collection of the so-called 3SUM-hard (previously called n 2 -hard) problems [GO]. Constructing the entire arrangement can be done, for example, by using topological sweeping <ref> [EG] </ref>. The output of the algorithm may be an indication whether such point exists, or a description of the region (or regions) of depth 0. 4.1.4 Complexity Analysis We measure the complexity of the algorithm as a function of n, the number of edges of the 3-dimensional polygon P . <p> Hence we may have O (n 4 ) intersection points. A standard plane-sweep procedure will requires O (n 4 log n) time. However, constructing the whole arrangement of O (n 2 ) quadrilaterals can be done in O (n 4 ) time by using topological sweeping <ref> [EG] </ref>. We are not aware of a better algorithm for this purpose. To conclude, the whole algorithm runs in O (n 4 ) time in the worst case. 4.1.5 Remarks First, we note that the bottleneck of our algorithm is the topological sweeping of the arrangement.
Reference: [Fe] <author> Mike Fellows, </author> <title> Problem corner: 6. The complexity of knot triviality and the Arf invariant, in: Graphs and Algorithms: </title> <booktitle> Proc. AMS-IMS-SIAM Joint Summer Research Conf., Contemporary Mathematics, </booktitle> <volume> 89, </volume> <publisher> American Mathematical Society, </publisher> <year> 1989, </year> <pages> 189-190. </pages>
Reference-contexts: The hexagon shown in Figure 3 is an unknotted biplanar polygon which is not trian-gulable. Thus unknottedness is a necessary but not sufficient condition for triangulability. Furthermore, efficiently determining knottedness is itself a difficult open question. The question whether a 3D polygon is knotted is decidable <ref> [Fe] </ref>, but is not even known to belong to the class N P [Sn]. It is easy to verify that we may still triangulate every unknotted 3D polygon if we allow the addition of Steiner points in space.
Reference: [GO] <author> A. Gajentann and M.H. Overmars, </author> <title> On a class of O(n 2 ) problems in computational geometry, Computational Geometry: Theory and Applications, </title> <publisher> in press. </publisher>
Reference-contexts: Splitting all the quadrilaterals and the target rectangle into two triangles each, we obtain the triangles-cover-triangle problem which belongs to the collection of the so-called 3SUM-hard (previously called n 2 -hard) problems <ref> [GO] </ref>. Constructing the entire arrangement can be done, for example, by using topological sweeping [EG]. <p> We were not able to exploit the fact that the quadrilaterals are not independent. Considering this fact may speed up the sweeping step. As indicated in <ref> [GO] </ref>, finding a faster algorithm for the covering problem will speed up a lot of other 3SUM-hard problems. Secondly, the existence of a simple orthogonal projection of P implies only its triangulability.
Reference: [Kl] <author> G.T. Klincsek, </author> <title> Minimal triangulations of polygonal domains, </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 9 (1980), </volume> <pages> 121-123. </pages>
Reference-contexts: This problem becomes much simpler when (in contrast with our definition so far) we allow self-intersecting triangulations. In this version we may apply a simple dynamic programming procedure, following the technique of Klincsek <ref> [Kl] </ref> for finding a polygon triangulation in the plane, which minimizes the total sum of edge lengths. Such procedure is already used in [BS1, BS2] for triangulating 3-dimensional polygons.
Reference: [RS] <author> J. Ruppert and R. Seidel, </author> <title> On the difficulty of triangulating three-dimensional non-convex polyhedra, Discrete Computational Geometry, </title> <booktitle> 7 (1992), </booktitle> <pages> 227-253. </pages>
Reference-contexts: the following question: Given a 3D polygon, is it triangulable? In other words, does a given polygon have a non-self-intersecting triangulation? We first show that the problem of determining whether a three-dimensional polygon admits a triangulation is N P-complete. (Tetrahedral-ization of three-dimensional polyhedra is also known to be N P-complete <ref> [RS] </ref>.) We start with a somewhat simpler proof of a related hardness result.
Reference: [Sn] <author> J. Snoeyink, </author> <title> A trivial knot whose spanning disks have exponential size, </title> <booktitle> Proc. 6th ACM Symp. on Computational Geometry, </booktitle> <year> 1990, </year> <pages> 139-147. </pages>
Reference-contexts: It follows from the fact that a closed curve is unknotted if and only if it has a spanning disk. (A similar claim appears (in a different wording) as Lemma 1 in <ref> [Sn] </ref>.) Theorem 3 A simply-connected non-self-intersecting surface (2D manifold topologically equivalent to a disk) can not have a knotted boundary. Proof. Every non-self-intersecting surface can be deformed continuously into a planar disk without introducing intermediate self-intersections. <p> Thus unknottedness is a necessary but not sufficient condition for triangulability. Furthermore, efficiently determining knottedness is itself a difficult open question. The question whether a 3D polygon is knotted is decidable [Fe], but is not even known to belong to the class N P <ref> [Sn] </ref>. It is easy to verify that we may still triangulate every unknotted 3D polygon if we allow the addition of Steiner points in space. Snoeyink [Sn] shows that the number of such Steiner points may be in the worst case exponential in the complexity of the original polygon. 2 3.3 <p> The question whether a 3D polygon is knotted is decidable [Fe], but is not even known to belong to the class N P <ref> [Sn] </ref>. It is easy to verify that we may still triangulate every unknotted 3D polygon if we allow the addition of Steiner points in space. Snoeyink [Sn] shows that the number of such Steiner points may be in the worst case exponential in the complexity of the original polygon. 2 3.3 Sufficient Conditions for Tri angulability In this section we discuss few sufficient conditions for triangulability.
References-found: 12

