URL: http://www.ri.cmu.edu/afs/cs/usr/pstone/public/papers/97springer/simulator/simulator.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs/usr/pstone/mosaic/pstone-papers.html
Root-URL: 
Email: fpstone,velosog@cs.cmu.edu  
Title: The CMUnited-97 Simulator Team  
Author: Peter Stone and Manuela Veloso 
Web: http://www.cs.cmu.edu/f~pstone,~mmvg  
Address: Pittsburgh, PA 15213  
Affiliation: Computer Science Department Carnegie Mellon University  
Abstract: The Soccer Server system provides a rich and challenging multiagent, real-time domain. Agents must accurately perceive and act despite a quickly changing, largely hidden, noisy world. They must also act at several levels, ranging from individual skills to full-team collaborative and adversarial behaviors. This article presents the CMUnited-97 approaches to the above challenges which helped the team to the semi finals of the 29-team RoboCup-97 tournament.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Mike Bowling, Peter Stone, and Manuela Veloso. </author> <title> Predictive memory for an inaccessible environment. </title> <booktitle> In Proceedings of the IROS-96 Workshop on RoboCup, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: We conducted experiments to compare the effectiveness of this approach with a simpler approach, which ignored the inaccessible parts of the environment. The results obtained demonstrate that this predictive approach does generate an effective memory model, which outperforms a non-predictive model <ref> [1] </ref>. 4 Layered Learning Once the world model is successfully created, the agents must use it to respond effectively to the environment. As described in Section 2, internal behaviors update the internal state while external behaviors produce executable actuator commands.
Reference: 2. <author> Hiroaki Kitano, Yasuo Kuniyoshi, Itsuki Noda, Minoru Asada, Hitoshi Matsubara, and Eiichi Osawa. </author> <title> RoboCup: A challenge problem for AI. </title> <journal> AI Magazine, </journal> <volume> 18(1) </volume> <pages> 73-85, </pages> <month> Spring </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The Soccer Server system [5] used at RoboCup-97 <ref> [2] </ref> provides a rich and challenging multiagent, real-time domain. Sensing and acting is noisy, while inter-agent communication is unreliable and low-bandwidth.
Reference: 3. <author> Michael L. LaBlanc and Richard Henshaw. </author> <title> The World Encyclopedia of Soccer. </title> <publisher> Visible Ink Press, </publisher> <year> 1994. </year>
Reference-contexts: As a part of the locker-room agreement, the team can define multi-step multiagent 2 Soccer formations are typically described as goalie-defenders-midfielders-- forwards <ref> [3] </ref>. plans to be executed at appropriate times. Particularly if there are certain sit-uations that occur repeatedly, it makes sense for the team to devise plans for those situations. In the robotic soccer domain, certain situations occur repeatedly.
Reference: 4. <editor> Maja J. Mataric. </editor> <title> Interaction and intelligent behavior. </title> <type> MIT EECS PhD Thesis AITR-1495, </type> <institution> MIT AI Lab, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: The leaves of the DAGs are the behavior types' respective outputs: internal state changes for internal behaviors and action primitives for external behaviors. Fig. 2. Internal and external behaviors are organized in a directed acyclic graph. Our notion of behavior is consistent with that laid out in <ref> [4] </ref>. In particular, behaviors can be nested at different levels: selection among lower-level behaviors can be considered a higher-level behavior, with the overall agent behavior considered a single "do-the-task" behavior.
Reference: 5. <editor> Itsuki Noda and Hitoshi Matsubara. </editor> <booktitle> Soccer server and researches on multi-agent systems. In Proceedings of the IROS-96 Workshop on RoboCup, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The Soccer Server system <ref> [5] </ref> used at RoboCup-97 [2] provides a rich and challenging multiagent, real-time domain. Sensing and acting is noisy, while inter-agent communication is unreliable and low-bandwidth.
Reference: 6. <author> Peter Stone and Manuela Veloso. </author> <title> A layered approach to learning client behaviors in the RoboCup soccer server. </title> <note> To appear in Applied AI Journal, </note> <year> 1998. </year>
Reference-contexts: As described in Section 2, internal behaviors update the internal state while external behaviors produce executable actuator commands. Spanning both internal and external behaviors, layered learning <ref> [6] </ref> is our bottom-up hierarchical approach to client behaviors that allows for machine learning at the various levels (Figure 3). The key points of the layered learning technique are as follows: Fig. 3. An overview of the Layered Learning framework. <p> Higher level behaviors, such as strategic positioning and adaptation, are internal behaviors involving changes to the agent's internal state. The type of learning used at each level depends upon the task characteristics. We have used neural networks and decision trees to learn ball interception and passing respectively <ref> [6] </ref>. These offline approaches are appropriate for opponent-independent tasks that can be trained outside of game situations. We are using on-line reinforcement learning approaches for behaviors that depend on the opponents. Adversarial actions are clearly opponent-dependent.
Reference: 7. <author> Manuela Veloso, Peter Stone, Kwun Han, and Sorin Achim. CMUnited: </author> <title> A team of robotic soccer agents collaborating in an adversarial environment. </title> <editor> In H. Kitano, editor, RoboCup-97: </editor> <title> The First Robot World Cup Soccer Games and Conferences. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1998, </year> <title> in this volume. This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Section 4 lays out the agents' hierarchical behavior structure that allows for machine learning at all levels of behavior from individual to collaborative to adversarial. Our team's flexible teamwork structure, which was also used by the CMUnited-97 small-size robot team <ref> [7] </ref>, is presented in Section 5. Section 6 concludes. 2 Team Member Architecture Our new teamwork structure is situated within a team member architecture suitable for domains in which individual agents can capture locker-room agreements and respond to the environment, while acting autonomously.
References-found: 7

