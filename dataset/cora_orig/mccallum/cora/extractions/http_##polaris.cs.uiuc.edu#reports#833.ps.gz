URL: http://polaris.cs.uiuc.edu/reports/833.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Email: shirley@iuvax.cs.indiana.edu  tuchman@csrd.uiuc.edu  
Title: Volume Visualization Methods for Scientific Computing  
Author: Peter Shirley Allan Tuchman 
Note: Research supported by the U.S. Department of Energy under Grant No. DE-FG02-85-ER25001, National Science Foundation Grant No. NSF MIP-8410110, and the Air Force Office of Scientific Research Grants Nos. AFOSR-F49620-86-C-0136 and AFOSR-85-0211.  
Date: November 30, 1988  
Address: Bloomington, IN.  Urbana, IL, 61801  
Affiliation: Computer Science Department Indiana University  Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  
Abstract: As computers become faster and offer larger memories, scientific simulations have moved from 2 dimensions to 3 dimensions. Quite often the results that scientists and engineers obtain are described as fields of scalar values; e.g., pressure, computed or sampled on a 3-dimensional grid. The geometry of such data is reviewed. Computer graphics methods of displaying these 3 dimensional fields is discussed, focusing on the use of both contour surfaces and more direct techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [Aki78] <author> Hirosa Akima. </author> <title> A method of bivariate interpolation and smooth surface fitting for irregularly distributed data points. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 4(2) </volume> <pages> 148-159, </pages> <year> 1978. </year>
Reference: [DCH88] <author> Robert A. Drebin, Loren Carpenter, and Pat Hanrahan. </author> <title> Volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 65-74, </pages> <month> July </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference: [GW86] <author> B. Wyvill G. Wyvill, C. McPheeters. </author> <title> Data structures for soft objects. </title> <journal> The Visual Computer, </journal> <volume> 2 </volume> <pages> 227-234, </pages> <year> 1986. </year>
Reference-contexts: With data in the geometry of an even-volume, rectilinear-volume, or general-volume of data (those defined on a grid), an iso-valued surface can be found using a straightforward method. Currently a popular surface extraction algorithm is marching cubes ([LC87], <ref> [GW86] </ref>). This algorithm works by noting that there is a finite number of ways that an iso-surface can intersect a cube that has scalar values at the corners, and varies tri-linearly inside.
Reference: [HB86] <author> Donald Hearn and M. Pauline Baker. </author> <title> Computer Graphics. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliffs, N.J., </address> <year> 1986. </year>
Reference: [KH84] <author> James T. Kajiya and B. P. Von Herzen. </author> <title> Ray tracing volume densities. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle> <pages> 14 </pages>
Reference: [LC87] <author> William E. Lorensen and Harvey E. Cline. </author> <title> Marchine cubes: A high resolution 3d surface construction algorithm. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 163-169, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference: [Lev88] <author> Mark Levoy. </author> <title> Display of surfaces from volume data. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(3) </volume> <pages> 29-37, </pages> <year> 1988. </year>
Reference-contexts: Since they either totally block light or let it pass (unlike stained glass), the shadows should not be colored. Generating the pictures of these cloud-like volumes is more complex than with iso-surface rendering. There are two basic methods of producing such pictures, ray tracing ([KH84], <ref> [Lev88] </ref>, [UK88], [Sab88]), and object projection ([DCH88], [UK88]). The ray tracing method was used to generate figure 10.
Reference: [Sab88] <author> Paolo Sabella. </author> <title> A rendering algorithm for visualizing 3d scalar fields. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 51-58, </pages> <month> July </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: Since they either totally block light or let it pass (unlike stained glass), the shadows should not be colored. Generating the pictures of these cloud-like volumes is more complex than with iso-surface rendering. There are two basic methods of producing such pictures, ray tracing ([KH84], [Lev88], [UK88], <ref> [Sab88] </ref>), and object projection ([DCH88], [UK88]). The ray tracing method was used to generate figure 10. In ray tracing, a ray is traced from the viewer's eye through each point on the screen and if the volume is hit, it must be drawn at that point on the screen.
Reference: [UK88] <author> Craig Upson and Micheal Keeler. V-buffer: </author> <title> Visible volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 59-64, </pages> <month> July </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: Since they either totally block light or let it pass (unlike stained glass), the shadows should not be colored. Generating the pictures of these cloud-like volumes is more complex than with iso-surface rendering. There are two basic methods of producing such pictures, ray tracing ([KH84], [Lev88], <ref> [UK88] </ref>, [Sab88]), and object projection ([DCH88], [UK88]). The ray tracing method was used to generate figure 10. In ray tracing, a ray is traced from the viewer's eye through each point on the screen and if the volume is hit, it must be drawn at that point on the screen. <p> Generating the pictures of these cloud-like volumes is more complex than with iso-surface rendering. There are two basic methods of producing such pictures, ray tracing ([KH84], [Lev88], <ref> [UK88] </ref>, [Sab88]), and object projection ([DCH88], [UK88]). The ray tracing method was used to generate figure 10. In ray tracing, a ray is traced from the viewer's eye through each point on the screen and if the volume is hit, it must be drawn at that point on the screen.
Reference: [Ups86] <author> Craig Upson. </author> <title> The visual simulation of amorphous phenomena. </title> <journal> The Visual Computer, </journal> <volume> 2 </volume> <pages> 321-326, </pages> <year> 1986. </year>
Reference: [War88] <author> Colin Ware. </author> <title> Color sequences for univariate maps: Theory, experiments, and principles. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(5) </volume> <pages> 41-49, </pages> <year> 1988. </year> <month> 15 </month>
References-found: 11

