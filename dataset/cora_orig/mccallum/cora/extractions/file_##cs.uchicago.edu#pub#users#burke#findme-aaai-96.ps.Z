URL: file://cs.uchicago.edu/pub/users/burke/findme-aaai-96.ps.Z
Refering-URL: http://cs-www.uchicago.edu/~burke/writing.html
Root-URL: 
Email: bcy1g@cs.uchicago.edu  
Title: Knowledge-Based Navigation of Complex Information Spaces  
Author: Robin D. Burke, Kristian J. Hammond Benjamin C. Young fburke, kris, 
Address: 1100 E. 58th St., Chicago, IL 60637  
Affiliation: Artificial Intelligence Laboratory University of Chicago  
Abstract: While the explosion of on-line information has brought new opportunities for finding and using electronic data, it has also brought to the forefront the problem of isolating useful information and making sense of large multi-dimension information spaces. We have built several developed an approach to building data "tour guides," called FindMe systems. These programs know enough about an information space to be able to help a user navigate through it. The user not only comes away with items of useful information but also insights into the structure of the information space itself. In these systems, we have combined ideas of instance-based browsing, structuring retrieval around the critiquing of previously-retrieved examples, and retrieval strategies, knowledge-based heuristics for finding relevant information. We illustrate these techniques with several examples, concentrating especially on the RentMe system, a FindMe system for helping users find suitable rental apartments in the Chicago metropolitan area. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Burke, R., & Kass, A. </author> <year> 1995. </year> <title> Supporting Learning through Active Retrieval of Video Stories. </title> <journal> Journal of Expert Systems with Applications, </journal> <volume> 9(5). </volume>
Reference-contexts: For some tasks, such as case-based educational systems, where cases serve a variety of purposes, CBR systems use a variety of retrieval strategies that measure similarity in different ways <ref> (Burke & Kass, 1995) </ref>. Conclusion FindMe systems perform a needed function in a world of ever-expanding information resources. Each system is an expert on a particular kind of information, extracting information on demand as part of the user's exploration of a complex domain.
Reference: <author> Burke, R. (ed.) </author> <year> 1995. </year> <note> Working Notes from the AAAI Fall Symposium on AI Applications in Knowledge Navigation and Retrieval, AAAI Technical Report FS-95-03. </note>
Reference-contexts: For some tasks, such as case-based educational systems, where cases serve a variety of purposes, CBR systems use a variety of retrieval strategies that measure similarity in different ways <ref> (Burke & Kass, 1995) </ref>. Conclusion FindMe systems perform a needed function in a world of ever-expanding information resources. Each system is an expert on a particular kind of information, extracting information on demand as part of the user's exploration of a complex domain.
Reference: <author> Cutting, D. R.; Pederson, J. O.; Karger, D.; and Tukey, J. W. </author> <year> 1992. </year> <title> Scatter/Gather: A cluster-based approach to browsing large document collections. </title> <booktitle> In Proceedings of the 15th Annual International ACM/SIGIR Conference, </booktitle> <pages> 318-329. </pages>
Reference-contexts: The metrics by which information systems are measured do not typically take into account their convenience for browsing. The ability to tailor retrieval by obtaining user response to retrieved items has been implemented in some information retrieval systems through relevance feedback (Salton & McGill, 1983), and through retrieval clustering <ref> (Cutting, et al. 1992) </ref>. Our approach differs from relevance feedback approaches in both explicitness and flexibility. In Video Navigator, users see an explicit explanation of why each example was retrieved and can critique particular components of that explanation.
Reference: <author> Hammond, K. </author> <year> 1989. </year> <title> Case-based Planning: Viewing Planning as a Memory Task. </title> <publisher> Academic Press. Perspectives in AI Series, </publisher> <address> Boston, MA. </address>
Reference: <editor> Knoblock, C. & Levy, A. (eds.) </editor> <booktitle> 1995. Working Notes from the AAAI Spring Symposium on Information Gathering from Heterogeneous, Distributed Environments, </booktitle> <publisher> AAAI Technical Report SS-95-08. </publisher>
Reference: <author> Kolodner, J. </author> <year> 1993. </year> <title> Case-based reasoning. </title> <address> San Ma-teo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Osgood, R. E. </author> <year> 1994. </year> <title> The Conceptual Indexing of Conversational Hypertext. </title> <type> PhD Thesis, </type> <institution> Northwestern University. </institution> <note> Issued as Technical Report #52, Institute for the Learning Sciences. </note>
Reference-contexts: apartment, but it is easier to look at a description and come up with a response such as "I'd like something like this, but a little bigger and in a better neighborhood." An outline of the solution Each FindMe systems has two basic parts: * An initial query or "zooming" <ref> (Osgood, 1994) </ref> stage through which users state their starting point within the information space, and * An assisted browsing phase in which users traverse the information space. User interface is obviously an important part of any FindMe system, particularly in the zooming stage where users enter the system.
Reference: <author> Riesbeck, C., & Schank, R. C. </author> <year> 1989. </year> <title> Inside Case-Based Reasoning. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> Salton, G., & McGill, M. </author> <year> 1983. </year> <title> Introduction to modern information retrieval. </title> <address> New York: </address> <publisher> McGraw-Hill. </publisher>
Reference-contexts: The metrics by which information systems are measured do not typically take into account their convenience for browsing. The ability to tailor retrieval by obtaining user response to retrieved items has been implemented in some information retrieval systems through relevance feedback <ref> (Salton & McGill, 1983) </ref>, and through retrieval clustering (Cutting, et al. 1992). Our approach differs from relevance feedback approaches in both explicitness and flexibility. In Video Navigator, users see an explicit explanation of why each example was retrieved and can critique particular components of that explanation.
Reference: <editor> Schank, R.C., & Riesbeck, C. </editor> <year> 1981. </year> <title> Inside Computer Understanding: Five Programs with Miniatures. </title> <address> Hillsdale New Jersey: </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: There is an initial natural language processing step in which the properties of the apartments are extracted and entered as features in a large database. Then, when users connect to the system, these features are used in the retrieval that follows. Natural Language Processing RentMe uses an expectation-based parser <ref> (Schank & Riesbeck, 1981) </ref> to extract features from the very terse and often-agrammatical language of the classified ads. The system has a large lexicon of terms that are commonly used in ads: in fact, the vocabulary is controlled to a certain degree by the newspaper's style conventions.
Reference: <author> Schneiderman, B. </author> <year> 1994. </year> <title> Dynamic Queries: for visual information seeking. </title> <booktitle> IEEE Software 11(6): </booktitle> <pages> 70-77. </pages>
Reference-contexts: Like these systems, FindMe uses examples to help the user elaborate their queries, but it is unique in the use of knowledge-based reformulation to redirect search based on specific user goals. Another line of research aimed at improving human interaction with databases is the "direct query" approach <ref> (Schneiderman, 1994) </ref>. These system use two-dimensional graphical maps of a data space in which examples are typically represented by points. Queries are created by moving sliders that correspond to features, and the items retrieved by the query are shown as appropriately colored points in the space.
Reference: <author> Ullman, J. D. </author> <year> 1988. </year> <title> Principles of Database and Knowledge-Base Systems Vol 1. </title> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: The user does not say "Give me more items like this one," the aim of relevance feedback systems, but instead asks for items that are different in some particular way. Examples have been used as the basis for querying in databases since the development of Query-By-Example <ref> (Ullman, 1988) </ref>. Most full-feature database systems now offer the ability to construct queries in the form of a fictitious database record with certain features fixed and others variable.
Reference: <author> Wiener, T. </author> <title> 1993.The Book of Video Lists. </title> <address> Kansas City: Andrews & McMeel. </address>
Reference-contexts: Video Navigator We used our experience in building Car Navigator in the construction of a system for browsing the set of movie videos available for rental in a typical video store. This system, Video Navigator, draws on a database of 7500 movies from a popular video reference work <ref> (Wiener, 1993) </ref>. The system is organized as a sequence of shelves divided into a variety of categories. The user has several zooming tools that can be used to make an initial query into the shelves.
Reference: <author> Williams, M. D., Tou, F. N., Fikes, R. E., Hender-son, T., & Malone, T. </author> <year> 1982. </year> <title> RABBIT: </title> <booktitle> Cognitive, Science in Interface Design. In Fourth Annual Conference of the Cognitive Science Society. </booktitle> <address> Ann Arbor, MI: </address>
Reference-contexts: Examples have been used as the basis for querying in databases since the development of Query-By-Example (Ullman, 1988). Most full-feature database systems now offer the ability to construct queries in the form of a fictitious database record with certain features fixed and others variable. The RABBIT system <ref> (Williams, et al. 1982) </ref> took this capacity one step further and allowed retrieval by incremental reformulation, letting the user incorporate parts of retrieved items into the query, successively refining it.
References-found: 14

