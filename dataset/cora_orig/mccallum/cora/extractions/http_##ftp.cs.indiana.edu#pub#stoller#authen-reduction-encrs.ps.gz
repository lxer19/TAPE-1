URL: http://ftp.cs.indiana.edu/pub/stoller/authen-reduction-encrs.ps.gz
Refering-URL: http://www.cs.indiana.edu/hyplan/stoller.html
Root-URL: http://www.cs.indiana.edu
Title: Justifying Finite Resources for Adversaries in Automated Analysis of Authentication Protocols  
Author: Scott D. Stoller 
Date: February 13, 1999  
Address: Bloomington, IN 47405 USA  
Affiliation: Computer Science Dept., Indiana University,  
Abstract: Authentication protocols (including protocols that provide key establishment) are designed to work correctly in the presence of an adversary that can (1) perform an unbounded number of encryptions (and other operations) while fabricating messages, and (2) prompt honest principals to engage in an unbounded number of concurrent runs of the protocol. The amount of local state maintained by a single run of an authentication protocol is bounded. Intuitively, this suggests that there is a bound on the resources needed to attack the protocol. Such bounds clarify the nature of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. However, few such bounds are known. This paper defines a language for authentication protocols and establishes two bounds on the resources needed to attack protocols expressible in that language: an upper bound on the worst-case number of encryptions by the adversary, and an exponential lower bound on the worst-case number of concurrent runs of the protocol. The upper bound on encryptions is relative to an upper bound on the number of runs; on-going work on proving such a bound is briefly described. 
Abstract-found: 1
Intro-found: 1
Reference: [Aba97] <author> Martin Abadi. </author> <title> Explicit communication revisited: Two new attacks on authentication protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 23(3) </volume> <pages> 185-186, </pages> <month> March </month> <year> 1997. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [AJ98] <author> Parosh Aziz Abdulla and Bengt Jonsson. </author> <title> Verifying networks of timed processes. </title> <booktitle> In Proc. 4th Intl. Workshop on Tools and Algorithms for the Construction and Analysis of Systems (TACAS), Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: The second is to prove an upper bound on the number of runs. This is closely related to techniques for automated analysis of systems with unbounded numbers of similar processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, but those techniques are neither aimed at nor applicable to authentication protocols. Proving an exponential upper bound is of some theoretical interest but would be of little value for automated verification.
Reference: [AN95] <author> Ross Anderson and Roger Needham. </author> <title> Robustness principles for public key protocols. </title> <booktitle> In Proc. Int'l. Conference on Advances in Cryptology (CRYPTO 95), volume 963 of Lecture Notes in Computer Science, </booktitle> <pages> pages 236-247. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [AN96] <author> Martin Abadi and Roger Needham. </author> <title> Prudent engineering practice for cryptographic protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 22(1) </volume> <pages> 6-15, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [BAN90] <author> Michael Burrows, Martin Abadi, and Roger Needham. </author> <title> A logic of authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1) </volume> <pages> 18-36, </pages> <month> February </month> <year> 1990. </year> <note> An expanded version appeared as Res. Rep. 39, </note> <institution> Systems Research Center, Digital Equipment Corp., </institution> <address> Palo Alto, CA, </address> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> Dolev and Yao developed impressive analysis algorithms that directly verify secrecy requirements [DY83]; however, their algorithms do not consider correspondence properties and apply to a rather limited class of protocols, which excludes several well-known protocols, such as the Otway-Rees and Yahalom protocols <ref> [BAN90] </ref>, and is strictly included in the class of protocols we consider. Roscoe [Ros98] has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds). <p> However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom <ref> [BAN90] </ref>, and Kerberos (V5) [KN93] protocols. Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication [WL93a, WL93b]; that model also underlies [MCJ97, CMJ98]. <p> A pair hns; P i in P S means that local protocol P can be executed by any principal in ns. Note that each run of a local protocol has its own variable bindings. Example. In LAP, the Yahalom protocol <ref> [BAN90] </ref> is hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (1) where 4 P I : 0. NewValue (;; ni) 1. Send (p; ni) 2. Receive (fpk ninrg key (;S) x) 3. BeginInit 4. Send (p; xfnrg k ) 5. <p> Send (p; my) 6. Old (k) 7. EndRespond P S : 0. Receive (mir fxmirg key (i;) fymirg key (r;) ) 1. NewValue (fi; rg; k) 2. Send (r; m fxkg key (i;) fykg key (r;) ) Example. In LAP, the Needham-Schroeder shared-key protocol <ref> [BAN90] </ref>, slightly modified, is hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (3) where P I : 0. NewValue (;; ni) 1. Send (S; pni) 2. Receive (fnipkg key (;S) x) 3. Send (p; x) 4. Receive (fnrg k ) 5.
Reference: [Bol98] <author> Dominique Bolignano. </author> <title> Integrating proof-based and model-checking techniques for the formal verification of cryptographic protocols. </title> <editor> In Alan J. Hu and Moshe Y. Vardi, editors, </editor> <booktitle> Proc. Tenth Int'l. Conference on Computer-Aided Verification (CAV), volume 1427 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [CES86] <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic verification of finite-state Concurrent systems using temporal logic specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <year> 1986. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible.
Reference: [CGJ95] <author> Edmund M. Clarke, Orna Grumberg, and Somesh Jha. </author> <title> Verifying parameterized networks using abstractions and regular languages. </title> <booktitle> In Proc. Sixth Int'l. Conference on Concurrency Theory (CONCUR), </booktitle> <year> 1995. </year>
Reference-contexts: The second is to prove an upper bound on the number of runs. This is closely related to techniques for automated analysis of systems with unbounded numbers of similar processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, but those techniques are neither aimed at nor applicable to authentication protocols. Proving an exponential upper bound is of some theoretical interest but would be of little value for automated verification.
Reference: [CMJ98] <author> Edmund Clarke, Will Marrero, and Somesh Jha. </author> <title> A machine checkable logic of knowledge for specifying security properties of electronic commerce protocols. </title> <booktitle> In Proc. IFIP Working Conference on Programming Concepts and Methods (PROCOMET), </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication [WL93a, WL93b]; that model also underlies <ref> [MCJ97, CMJ98] </ref>. Section 3 characterizes encryptions by the adversary that are not useful, i.e., do not affect the behavior of the other principals in an execution. Section 4 shows that in executions in which the adversary performs many nested encryptions, some of those encryptions must be useless.
Reference: [CS96] <author> Rance Cleaveland and Steve Sims. </author> <title> The NCSU Concurrency Workbench. </title> <editor> In R. Alur and T. Hen-zinger, editors, </editor> <booktitle> Proc. 8th Int'l. Conference on Computer-Aided Verification (CAV), volume 1102 of Lecture Notes in Computer Science, </booktitle> <pages> pages 394-397. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible.
Reference: [DDHY92] <author> David L. Dill, Andreas J. Drexler, Alan J. Hu, and C. Han Yang. </author> <title> Protocol verification as a hardware design aid. </title> <booktitle> In IEEE International Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <pages> pages 522-525. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1992. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible.
Reference: [DK97] <author> Z. Dang and R. A. Kemmerer. </author> <title> Using the ASTRAL model checker for cryptographic protocol analysis. </title> <booktitle> In Proc. DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <month> September </month> <year> 1997. </year> <month> 11 </month>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [DS81] <author> D. E. Denning and G. M. Sacco. </author> <title> Timestamps in key distribution protocols. </title> <journal> Communications of the ACM, </journal> <volume> 24(8) </volume> <pages> 198-208, </pages> <year> 1981. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [DY83] <author> Danny Dolev and Andrew C. Yao. </author> <title> On the security of public key protocols. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-29(2):198-208, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: Few other reductions of this kind are known. Authentication protocols are a good first target for such reductions, because they have extremely simple control flow and a small repertoire of operations. Dolev and Yao developed impressive analysis algorithms that directly verify secrecy requirements <ref> [DY83] </ref>; however, their algorithms do not consider correspondence properties and apply to a rather limited class of protocols, which excludes several well-known protocols, such as the Otway-Rees and Yahalom protocols [BAN90], and is strictly included in the class of protocols we consider.
Reference: [EN96] <author> E. Allen Emerson and Kedar S. Namjoshi. </author> <title> Automated verification of parameterized synchronous systems. </title> <booktitle> In Proc. 8th Int'l. Conference on Computer-Aided Verification (CAV), </booktitle> <year> 1996. </year>
Reference-contexts: The second is to prove an upper bound on the number of runs. This is closely related to techniques for automated analysis of systems with unbounded numbers of similar processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, but those techniques are neither aimed at nor applicable to authentication protocols. Proving an exponential upper bound is of some theoretical interest but would be of little value for automated verification.
Reference: [FHG98] <author> F. Javier Thayer Fabrega, Jonathan C. Herzog, and Joshua D. Guttman. </author> <title> Honest ideals on strand spaces. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1998. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [GLR95] <author> Li Gong, Patrick Lincoln, and John Rushby. </author> <title> Byzantine agreement with authentication: Observations and applications in tolerating hybrid and link faults. </title> <booktitle> In Dependable Computing for Critical Applications|5, </booktitle> <pages> pages 79-90. </pages> <booktitle> IFIP WG 10.4, preliminary proceedings, </booktitle> <year> 1995. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement <ref> [GLR95] </ref>, secure reliable multicast [Rei96, MR97], authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [Hol91] <author> Gerard J. Holzmann. </author> <title> Design and Validation of Computer Protocols. </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible.
Reference: [HTWW96] <author> Nevin Heintze, J. D. Tygar, Jeannette Wing, and Hao-Chi Wong. </author> <title> Model checking electronic commerce protocols. </title> <booktitle> In Proc. of the USENIX 1996 Workshop on Electronic Commerce, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [KM95] <author> R. P. Kurshan and K. L. McMillan. </author> <title> A structural induction theorem for processes. </title> <journal> Information and Computation, </journal> <volume> 117(1), </volume> <year> 1995. </year>
Reference-contexts: The second is to prove an upper bound on the number of runs. This is closely related to techniques for automated analysis of systems with unbounded numbers of similar processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, but those techniques are neither aimed at nor applicable to authentication protocols. Proving an exponential upper bound is of some theoretical interest but would be of little value for automated verification.
Reference: [KN93] <author> J. Kohl and C. Neuman. </author> <title> The Kerberos Network Authentication Service (V5), Internet Request for Comments 1510, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos (V5) <ref> [KN93] </ref> protocols. Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication [WL93a, WL93b]; that model also underlies [MCJ97, CMJ98].
Reference: [Kur94] <author> Robert P. Kurshan. </author> <title> Computer-aided verification of coordinating processes: the automata-theoretic approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible.
Reference: [Low96] <author> Gavin Lowe. </author> <title> Breaking and fixing the Needham-Schroeder public-key protocol using FDR. </title> <editor> In Tiziana Margaria and Bernhard Steffen, editors, </editor> <booktitle> Proc. Workshop on Tools and Algorithms for The Construction and Analysis of Systems (TACAS), volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 147-166. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> Roscoe [Ros98] has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds). Lowe proved specific bounds for a corrected version of the Needham-Schroeder public-key protocol <ref> [Low96] </ref> and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used [Low98a, Low98b].
Reference: [Low98a] <author> Gavin Lowe. </author> <title> Towards a completeness result for model checking of security protocols. </title> <type> Technical Report 1998/6, </type> <institution> Dept. of Mathematics and Computer Science, University of Leicester, </institution> <year> 1998. </year>
Reference-contexts: Lowe proved specific bounds for a corrected version of the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used <ref> [Low98a, Low98b] </ref>. However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos (V5) [KN93] protocols. <p> However, that result does not extend to correspondence requirements <ref> [Low98a, p. 61] </ref> and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos (V5) [KN93] protocols. Section 2 defines our languages for authentication protocols and requirements. <p> However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered <ref> [Low98a, Sections 2.1 and 2.2] </ref> excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos (V5) [KN93] protocols. Section 2 defines our languages for authentication protocols and requirements.
Reference: [Low98b] <author> Gavin Lowe. </author> <title> Towards a completeness result for model checking of security protocols (extended abstract). </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1998. </year>
Reference-contexts: Lowe proved specific bounds for a corrected version of the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used <ref> [Low98a, Low98b] </ref>. However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees [OR87], Yahalom [BAN90], and Kerberos (V5) [KN93] protocols.
Reference: [LR97] <author> Gavin Lowe and Bill Roscoe. </author> <title> Using csp to detect errors in the tmn protocol. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 23(10), </volume> <year> 1997. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [MCF87] <author> J. Millen, S. Clark, and S. Freedman. </author> <title> The Interrogator: protocol security analysis. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-13(2), </volume> <month> February </month> <year> 1987. </year>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [MCJ97] <author> Will Marrero, Edmund Clarke, and Somesh Jha. </author> <title> A model checker for authentication protocols. </title> <booktitle> In Proc. DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <month> September </month> <year> 1997. </year> <note> Available via http://dimacs.rutgers.edu/Workshops/Security/program2/program.html. </note>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs. <p> Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication [WL93a, WL93b]; that model also underlies <ref> [MCJ97, CMJ98] </ref>. Section 3 characterizes encryptions by the adversary that are not useful, i.e., do not affect the behavior of the other principals in an execution. Section 4 shows that in executions in which the adversary performs many nested encryptions, some of those encryptions must be useless.
Reference: [MMS97] <author> John C. Mitchell, Mark Mitchell, and Ulrich Stern. </author> <title> Automated analysis of cryptographic protocols using MurOE. </title> <booktitle> In Proc. 18th IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 141-153. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [MR97] <author> Dahlia Malkhi and Michael Reiter. </author> <title> A high-throughput secure reliable multicast protocol. </title> <journal> The Journal of Computer Security, </journal> <volume> 5 </volume> <pages> 113-127, </pages> <year> 1997. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast <ref> [Rei96, MR97] </ref>, authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [MSS98] <author> John C. Mitchell, Vitaly Shmatikov, and Ulrich Stern. </author> <title> Finite-state analysis of SSL 3.0. </title> <booktitle> In Seventh USENIX Security Symposium, </booktitle> <pages> pages 201-216, </pages> <year> 1998. </year> <month> 12 </month>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [MvOV97] <author> Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. </author> <title> Handbook of applied cryptography. </title> <publisher> CRC Press, </publisher> <year> 1997. </year>
Reference-contexts: Section 6 presents an exponential lower bound on the number of runs. There are two main directions for future work. The first is to broaden the scope of our results by considering hash functions, timestamps, recency requirements, and key confirmation requirements <ref> [MvOV97, Ch. 12] </ref>. The second is to prove an upper bound on the number of runs. <p> Thus, the runs of P R corresponding to nodes of the tree must be concurrent. 6.1 Towards An Upper Bound on Number of Runs Finding a natural set of restrictions that prohibits protocols like h and allows useful authentication protocols (e.g., those in <ref> [MvOV97] </ref>) is an open problem.
Reference: [OPT97] <author> Donal O'Mahony, Michael Peirce, and Hitesh Tewari. </author> <title> Electronic Payment Systems. </title> <publisher> Artech House, </publisher> <address> Boston, </address> <year> 1997. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast [Rei96, MR97], authentication, and electronic payment <ref> [OPT97] </ref>. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [OR87] <author> Dave Otway and Owen Rees. </author> <title> Efficient and timely mutual authentication. </title> <journal> Operating Systems Review, </journal> <volume> 21(1) </volume> <pages> 8-10, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: However, that result does not extend to correspondence requirements [Low98a, p. 61] and does not consider known-key attacks, and the class of protocols considered [Low98a, Sections 2.1 and 2.2] excludes some well-known protocols, such as the Otway-Rees <ref> [OR87] </ref>, Yahalom [BAN90], and Kerberos (V5) [KN93] protocols. Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication [WL93a, WL93b]; that model also underlies [MCJ97, CMJ98]. <p> In LAP, the Otway-Rees protocol <ref> [OR87] </ref> is hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (2) where P I : 0. NewValue (;; m) 1. NewValue (;; n) 2. BeginInit 3. Send (r; mp fnmpg key (;S) ) 4. Receive (mfnkg key (;S) ) 5.
Reference: [Rei96] <author> Michael K. Reiter. </author> <title> A secure group membership protocol. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 22(1) </volume> <pages> 31-42, </pages> <year> 1996. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast <ref> [Rei96, MR97] </ref>, authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [Ros95] <author> A. W. Roscoe. </author> <title> Modelling and verifying key exchange protocols using CSP and FDR. </title> <booktitle> In Proc. 8th IEEE Computer Security Foundations Workshop, </booktitle> <pages> pages 98-107. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: Web: http://www.cs.indiana.edu/~stoller/ . 1 Systems containing adversaries of the kind described above have an unbounded number of reach-able states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and other similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of runs.
Reference: [Ros98] <author> A. W. Roscoe. </author> <title> Proving security protocols with model checkers by data independence techniques. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1998. </year>
Reference-contexts: Roscoe <ref> [Ros98] </ref> has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds).
Reference: [WL93a] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> A semantic model for authentication protocols. </title> <booktitle> In Proc. 14th IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 178-194. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year> <note> Available via http://www.cs.utexas.edu/users/lam/NRL/network security.html. </note>
Reference-contexts: Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication <ref> [WL93a, WL93b] </ref>; that model also underlies [MCJ97, CMJ98]. Section 3 characterizes encryptions by the adversary that are not useful, i.e., do not affect the behavior of the other principals in an execution. <p> that in executions 2 involving at most two protocol runs, those two runs interact in limited ways, and to prove that in arbitrary executions, runs still interact only in those same limited ways. 2 Model of Authentication Protocols Our model of authentication is based closely on Woo and Lam's model <ref> [WL93a] </ref>. We call the language LAP (Language for Authentication Protocols). Woo and Lam's model incorporates some common simplifying assumptions. It assumes that the symmetric and public-key cryptosystems are perfect (or ideal) [WL93a]; a reasonable approximation to this can be obtained by incorporating into the encryption and decryption functions an integrity check <p> limited ways. 2 Model of Authentication Protocols Our model of authentication is based closely on Woo and Lam's model <ref> [WL93a] </ref>. We call the language LAP (Language for Authentication Protocols). Woo and Lam's model incorporates some common simplifying assumptions. It assumes that the symmetric and public-key cryptosystems are perfect (or ideal) [WL93a]; a reasonable approximation to this can be obtained by incorporating into the encryption and decryption functions an integrity check based on a message digest. <p> ; t 2 ) j t 1 2 C ^ t 2 2 Cg [ fft 1 g K j t 1 2 C ^ K 2 C " (Key sym [ Key asym )g: (5) These definitions assume that the symmetric and public-key cryptosystems are perfect (sometimes called "ideal") <ref> [WL93a] </ref>. There are several minor differences between Woo and Lam's language and semantics and ours.
Reference: [WL93b] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> Verifying authentication protocols: Methodology and example. </title> <booktitle> In Proc. Int'l. Conference on Network Protocols, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: Section 2 defines our languages for authentication protocols and requirements. These languages are based closely on Woo and Lam's model of authentication <ref> [WL93a, WL93b] </ref>; that model also underlies [MCJ97, CMJ98]. Section 3 characterizes encryptions by the adversary that are not useful, i.e., do not affect the behavior of the other principals in an execution.
Reference: [WL94] <author> Thomas Y.C. Woo and Simon S. Lam. </author> <title> A lesson in authentication protocol design. </title> <journal> ACM Operating Systems Review, </journal> <volume> 28(3) </volume> <pages> 24-37, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Such bounds provide insight into the possible kinds of attacks on these protocols. They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
References-found: 40

