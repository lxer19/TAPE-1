URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1995/tr-95-011.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1995.html
Root-URL: http://www.icsi.berkeley.edu
Email: email: karger@lcs.mit.edu  
Title: Polynomial Time Approximation Schemes for Dense Instances of N P-Hard Problems  
Author: Sanjeev Arora David Karger Marek Karpinski 
Web: URL: http://theory.lcs.mit.edu/~karger  
Note: Work done at AT&T Bell Laboratories.  Research partially supported by the DFG Grant KA 673/4-1, and by the ESPRIT BR Grants 7097 and ECUS 030. Email:marek@cs.bonn.edu  
Affiliation: MIT Laboratory for Computer Science.  Dept. of Computer Science, University of Bonn, 53117 Bonn, and the International Computer Science Institute, Berkeley, California.  
Date: March 1995  
Pubnum: TR-95-011  
Abstract: We present a unified framework for designing polynomial time approximation schemes (PTASs) for "dense" instances of many N P-hard optimization problems, including maximum cut, graph bisection, graph separation, minimum k-way cut with and without specified sources, and maximum 3-satisfiability. Dense graphs for us are graphs with minimum degree fi(n), although some of our algorithms work so long as the graph is dense "on average". (Denseness for non-graph problems is defined similarly.) The unified framework begins with the idea of exhaustive sampling: picking a small random set of vertices, guessing where they go on the optimum solution, and then using their placement to determine the placement of everything else. The approach then develops into a PTAS for approximating certain smooth integer programs where the objective function is a "dense" polynomial of constant degree. fl Princeton University. arora@cs.princeton.edu
Abstract-found: 1
Intro-found: 1
Reference: [AFW94] <author> N. Alon, A. Frieze, and D. Welsh. </author> <title> Polynomial time randomized approximation schemes for the tutte polynomial of dense graphs. </title> <booktitle> In Proc. 35 th FOCS, </booktitle> <pages> pages 24-35. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> November </month> <year> 1994. </year>
Reference-contexts: In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network <ref> [AFW94] </ref>. Vega [dlV94] has independently developed a PTAS for everywhere-dense MAX-CUT using principles similar to ours; however, his algorithm does not appear to generalize to the other problems we have listed. Edwards [Edw86] shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time.
Reference: [ALM + 92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proc. 33 rd FOCS, </booktitle> <pages> pages 14-23. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: We know that unless P = N P, problems such as clique <ref> [FGL + 91, AS92, ALM + 92] </ref> and chromatic number [LY93] cannot be approximated even within a factor of n ffi in polynomial time. Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds. <p> definition of a PTAS allows the algorithm's running-time to depend arbitrarily on *.) However, recent results show that unless P = N P, PTASs do not exist for many N P-hard problems, including all MAX-SNP-hard problems such as vertex cover, maximum 3-satisfiability, maximum cut, metric TSP, and multiway cuts (see <ref> [ALM + 92, PY91] </ref>). Note that the inapproximability results mentioned above, like all N P-hardness results, rule out approximation only on worst case instances of the problem.
Reference: [AS92] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs: A new characterization of NP. </title> <booktitle> In Proc. 33rd FOCS, </booktitle> <pages> pages 2-13, </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: We know that unless P = N P, problems such as clique <ref> [FGL + 91, AS92, ALM + 92] </ref> and chromatic number [LY93] cannot be approximated even within a factor of n ffi in polynomial time. Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds.
Reference: [BCLS84] <author> T. Bui, S. Chaudhuri, T. Leighton, and M. Sipser. </author> <title> Graph bisection algorithms with good average case behavior. </title> <booktitle> In Proc. 25 th FOCS, </booktitle> <pages> pages 181-192. </pages> <publisher> IEEE, </publisher> <year> 1984. </year>
Reference-contexts: No good approximation algorithm exists that output the actual bisection. But some algorithms, including those using eigenvalues ([BH92]) or simulated annealing ([JS93]) do well on certain random graphs (see also <ref> [BCLS84] </ref>). SEPARATOR: Partition the vertices of a graph into two groups each with at least 1=3 of the 2 vertices so as to minimize the number of crossing edges. An algorithm in [LR88] achieves approximation ratio O (log n).
Reference: [BGG93] <author> M. Bellare, O. Goldreich, and S. Goldwasser. </author> <title> Randomness in interactive proofs. </title> <journal> Computational Complexity, </journal> <volume> 3 </volume> <pages> 319-354, </pages> <year> 1993. </year> <note> Abstract in FOCS 1990. </note>
Reference-contexts: Raghavan [R88] derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in [BR94] and <ref> [BGG93] </ref>. For example, instead of picking s = O (log n=* 2 ) vertices independently, it suffices to pick the vertices encountered on a random walk of length O (log n=* 2 ) on a constant degree expander [Gil93].
Reference: [BH92] <author> R.B. Boppana and M.M. Halldorsson. </author> <title> Approximating maximum independent sets by excluding subgraphs. </title> <journal> BIT, </journal> <volume> 32 </volume> <pages> 180-196, </pages> <year> 1992. </year>
Reference: [BR94] <author> M. Bellare and J. Rompel. </author> <title> Randomness-efficient oblivious sampling. </title> <booktitle> In Proc. 35 th FOCS, </booktitle> <pages> pages 276-287. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: Raghavan [R88] derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in <ref> [BR94] </ref> and [BGG93]. For example, instead of picking s = O (log n=* 2 ) vertices independently, it suffices to pick the vertices encountered on a random walk of length O (log n=* 2 ) on a constant degree expander [Gil93].
Reference: [DJP + 92] <author> E. Dahlhaus, D.S. Johnson, C.H. Papadimitriou, P.D. Seymour, and M. Yannakakis. </author> <title> The complexity of multiway cuts. </title> <booktitle> In Proc. 24 th ACM STOC, </booktitle> <pages> pages 241-251. </pages> <publisher> ACM Press, </publisher> <month> May </month> <year> 1992. </year>
Reference-contexts: MINk-CUT: Given an n-vertex graph with k source vertices, partition the graph vertices into k groups such that (i) each group contains one source and (ii) the number of edges with endpoints in different groups is minimized. A (2 1=k)-approximation is given in <ref> [DJP + 92] </ref>. DENSE-k-SUBGRAPH: Given a graph, find a subset of k vertices that induces a graph with the most possible edges.
Reference: [dlV94] <author> W.F. de la Vega. </author> <title> MAXCUT has a randomized approximation scheme in dense graphs. </title> <type> manuscript, </type> <month> October </month> <year> 1994. </year> <month> 13 </month>
Reference-contexts: In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94]. Vega <ref> [dlV94] </ref> has independently developed a PTAS for everywhere-dense MAX-CUT using principles similar to ours; however, his algorithm does not appear to generalize to the other problems we have listed. Edwards [Edw86] shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time. Our sampling approach gives an alternative algorithm.
Reference: [Edw86] <author> K. Edwards. </author> <title> The complexity of colouring problems on dense graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 43 </volume> <pages> 337-343, </pages> <year> 1986. </year>
Reference-contexts: Note: There are stronger forms of some of the above results that we omit from this abstract. To give an example, we can solve BISECTION and SEPARATOR on dense graphs exactly when the objective is O (n). We also note that the 3-COLORING result is not new|see <ref> [Edw86] </ref>. As mentioned earlier, the PTASs share common design principles, and are quite similar to the MAX-CUT algorithm outlined above. <p> Vega [dlV94] has independently developed a PTAS for everywhere-dense MAX-CUT using principles similar to ours; however, his algorithm does not appear to generalize to the other problems we have listed. Edwards <ref> [Edw86] </ref> shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time. Our sampling approach gives an alternative algorithm. The exhaustive sampling approach also appears, in a different context, in [KPa92]. 2 Approximating Smooth IPs This section describes the proof of Theorem 1.6.
Reference: [FG95] <author> U. Feige and M.X. Goemans, </author> <title> Approximating the value of 2-Prover proof systems, with applications to MAX-2SAT and MAX-DICUT. </title> <booktitle> In Proc. ISTCS95, </booktitle> <pages> pages 182-189. </pages>
Reference-contexts: A :878-approximation algorithm is given in [GW94]. MAX-DICUT: The directed version of the MAX-CUT problem. A :859-approximation algo rithm is given in <ref> [FG95] </ref> (improving [GW94]). MAX-HYPERCUT (d): A generalization of MAX-CUT to hypergraphs of dimension d; an edge is considered cut if it has at least one endpoint on each side.
Reference: [FGL + 91] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd FOCS, </booktitle> <pages> pages 2-12, </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: We know that unless P = N P, problems such as clique <ref> [FGL + 91, AS92, ALM + 92] </ref> and chromatic number [LY93] cannot be approximated even within a factor of n ffi in polynomial time. Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds.
Reference: [Gil93] <author> D. Gillman. </author> <title> A chernoff bound for random walks on expanders. </title> <booktitle> In Proc. 34 th FOCS, </booktitle> <pages> pages 680-691. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1993. </year>
Reference-contexts: Derandomizations of the Sampling Lemma appear in [BR94] and [BGG93]. For example, instead of picking s = O (log n=* 2 ) vertices independently, it suffices to pick the vertices encountered on a random walk of length O (log n=* 2 ) on a constant degree expander <ref> [Gil93] </ref>. The number of such walks is n O (1=* 2 ) , so our algorithm can deterministically go through all possible choices. 7 3 Applications In this section we use our theorem on approximating constant-degree smooth integer programs to construct PTASs for (dense instances of) many problems.
Reference: [GW94] <author> M.X. Goemans and D.P. Williamson. </author> <title> :878-approximation algorithms for MAX CUT and MAX 2SAT. </title> <booktitle> In Proc. 26 th STOC, </booktitle> <pages> pages 422-431. </pages> <publisher> ACM Press, </publisher> <month> May </month> <year> 1994. </year>
Reference-contexts: Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds. Still others, such as the maximum cut problem, can be approximated to within some fixed constant factor <ref> [GW94] </ref>. Only a few problems, such as bin packing [KK82] and knapsack problems [IK75], are known to have polynomial time approximation schemes (PTASs). A PTAS gives, for any fixed * &gt; 0, a polynomial time algorithm with approximation ratio 1+*. <p> Generalizations of these ideas work for dense instances of the following problems: MAX-CUT: Partition the vertices of an undirected graph into two groups so as to maximize the number of edges with exactly one endpoint in each group. A :878-approximation algorithm is given in <ref> [GW94] </ref>. MAX-DICUT: The directed version of the MAX-CUT problem. A :859-approximation algo rithm is given in [FG95] (improving [GW94]). MAX-HYPERCUT (d): A generalization of MAX-CUT to hypergraphs of dimension d; an edge is considered cut if it has at least one endpoint on each side. <p> A :878-approximation algorithm is given in <ref> [GW94] </ref>. MAX-DICUT: The directed version of the MAX-CUT problem. A :859-approximation algo rithm is given in [FG95] (improving [GW94]). MAX-HYPERCUT (d): A generalization of MAX-CUT to hypergraphs of dimension d; an edge is considered cut if it has at least one endpoint on each side.
Reference: [IK75] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> JACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference-contexts: Still others, such as the maximum cut problem, can be approximated to within some fixed constant factor [GW94]. Only a few problems, such as bin packing [KK82] and knapsack problems <ref> [IK75] </ref>, are known to have polynomial time approximation schemes (PTASs). A PTAS gives, for any fixed * &gt; 0, a polynomial time algorithm with approximation ratio 1+*.
Reference: [JS89] <author> M. Jerrum and A. Sinclair. </author> <title> Approximating the permanent. </title> <journal> SIAM J. Comput., </journal> <volume> 18(6), </volume> <year> 1989. </year>
Reference-contexts: For instance, in graphs with degree more than n=2, the following problems are solved: finding Hamiltonian cycles [Po76] and approximating the number of perfect matchings <ref> [JS89] </ref>. In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94].
Reference: [JS93] <author> M. Jerrum and G. B. Sorkin. </author> <title> Simulated annealing for graph bisection. </title> <booktitle> In Proc. 34 th FOCS, </booktitle> <pages> pages 94-103. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1993. </year>
Reference: [KK82] <author> N. Karmaker and R.M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packing problem. </title> <booktitle> In Proc. 23 rd FOCS, </booktitle> <pages> pages 312-320. </pages> <publisher> IEEE, </publisher> <year> 1982. </year>
Reference-contexts: Still others, such as the maximum cut problem, can be approximated to within some fixed constant factor [GW94]. Only a few problems, such as bin packing <ref> [KK82] </ref> and knapsack problems [IK75], are known to have polynomial time approximation schemes (PTASs). A PTAS gives, for any fixed * &gt; 0, a polynomial time algorithm with approximation ratio 1+*.
Reference: [KP93] <author> G. Kortsarz and D. Peleg. </author> <title> On choosing a dense subgraph. </title> <booktitle> In Proc. 34 th FOCS, </booktitle> <pages> pages 692-701. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1993. </year>
Reference-contexts: A (2 1=k)-approximation is given in [DJP + 92]. DENSE-k-SUBGRAPH: Given a graph, find a subset of k vertices that induces a graph with the most possible edges. This problem was studied in <ref> [KP93] </ref>, where an approximation algorithm with ratio n 2=5 was presented. 3-COLORING: Color the vertices of a graph with 3 colors such that no two adjacent vertices have the same color.
Reference: [KPa92] <author> E. Koutsoupias and C.H. Papadimitriou. </author> <title> On the greedy heuristic for satisfiability. </title> <journal> IPL, </journal> <pages> 43 pages 53-55, </pages> <year> 1992. </year>
Reference-contexts: Edwards [Edw86] shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time. Our sampling approach gives an alternative algorithm. The exhaustive sampling approach also appears, in a different context, in <ref> [KPa92] </ref>. 2 Approximating Smooth IPs This section describes the proof of Theorem 1.6. For simplicity, we describe the proof for the case of quadratic programs, and then merely outline a proof for the general case. The proof uses two lemmas.
Reference: [LR88] <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proc. 29 th FOCS, </booktitle> <pages> pages 422-431. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1988. </year>
Reference-contexts: We know that unless P = N P, problems such as clique [FGL + 91, AS92, ALM + 92] and chromatic number [LY93] cannot be approximated even within a factor of n ffi in polynomial time. Others problems, such as those related to graph separators <ref> [LR88] </ref>, have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds. Still others, such as the maximum cut problem, can be approximated to within some fixed constant factor [GW94]. <p> SEPARATOR: Partition the vertices of a graph into two groups each with at least 1=3 of the 2 vertices so as to minimize the number of crossing edges. An algorithm in <ref> [LR88] </ref> achieves approximation ratio O (log n). MAX-k-SAT: Given a k-CNF formula, find a true-false assignment to the variables making the maximum possible number of clauses true. An algorithm in [Yan92] approximates it within a factor 3=4. This has recently been improved to 0:758 ([GW94]).
Reference: [LY93] <author> C. Lund and M. Yannakakis. </author> <title> hardness of approximating minimization problems. </title> <booktitle> In Proc. 25 th STOC, </booktitle> <pages> pages 286-293. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: We know that unless P = N P, problems such as clique [FGL + 91, AS92, ALM + 92] and chromatic number <ref> [LY93] </ref> cannot be approximated even within a factor of n ffi in polynomial time. Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n) and no non-trivial lower bounds.
Reference: [Pap94] <author> C. H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: result holds for the problem without sources, where the goal is simply to find the best partition into k nonempty groups of vertices. 4.1 Dense MAX-SNP As pointed out in [PY91], problems such as MAX-CUT, MAX-k-SAT, MAX-HYPERCUT (d), etc. lie in a class called MAX-SNP (also called MAX-SNP 0 in <ref> [Pap94] </ref>). Owing to the model-theoretic nature of the definition of MAX-SNP, it is unclear how to define denseness for MAX-SNP problems. In fact, problems such as vertex cover are in MAX-SNP only if the degree of the graph is bounded. <p> The objective is to assign values to the variables so as to satisfy as many f i 's as possible. As is well-known (see <ref> [Pap94] </ref>, Theorem 13.8), a MAX-SNP problem can be viewed as a MAX-k-FUNCTION-SAT problem for some fixed integer k. We call an instance of a MAX-SNP problem dense if the instance of MAX-k-FUNCTION-SAT produced using it has (n k ) functions.
Reference: [PY91] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> JCSS, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Preliminary Version in Proc. ACM STOC, </note> <year> 1988. </year>
Reference-contexts: definition of a PTAS allows the algorithm's running-time to depend arbitrarily on *.) However, recent results show that unless P = N P, PTASs do not exist for many N P-hard problems, including all MAX-SNP-hard problems such as vertex cover, maximum 3-satisfiability, maximum cut, metric TSP, and multiway cuts (see <ref> [ALM + 92, PY91] </ref>). Note that the inapproximability results mentioned above, like all N P-hardness results, rule out approximation only on worst case instances of the problem. <p> Some, like maximum cut and maximum k-satisfiability, are MAX-SNP-complete. Thus they do not have PTASs in general, but they can all be approximated within some constant factor in polynomial time <ref> [PY91] </ref>. Others, like graph bisection and separation, are not known to be approximable within a factor better than O (log n), but also are not known to be hard to approximate. <p> Further, in Section 4.1, we will give a plausible definition of denseness for the class MAX-SNP defined in <ref> [PY91] </ref>. Our algorithm for approximating low-degree integer programs gives a PTAS for all dense MAX-SNP problems. <p> If k = o (n), this contradicts the fact that the minimum cut is at most kn. A similar result holds for the problem without sources, where the goal is simply to find the best partition into k nonempty groups of vertices. 4.1 Dense MAX-SNP As pointed out in <ref> [PY91] </ref>, problems such as MAX-CUT, MAX-k-SAT, MAX-HYPERCUT (d), etc. lie in a class called MAX-SNP (also called MAX-SNP 0 in [Pap94]). Owing to the model-theoretic nature of the definition of MAX-SNP, it is unclear how to define denseness for MAX-SNP problems.
Reference: [Po76] <author> L. Posa. </author> <title> Hamiltonian circuits in random graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 14 </volume> <pages> 359-364, </pages> <year> 1976. </year>
Reference-contexts: For instance, in graphs with degree more than n=2, the following problems are solved: finding Hamiltonian cycles <ref> [Po76] </ref> and approximating the number of perfect matchings [JS89]. In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94].
Reference: [R88] <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms: Approximate packing integer programs. </title> <journal> JCSS, </journal> <volume> 37(2) </volume> <pages> 130-43, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Just as we randomly reduced (in an approximate sense) a quadratic program to a linear program, we can reduce degree-d programs to degree-(d 1) programs. 2.1 Derandomization Derandomizing the algorithm in Theorem 2.3 involves derandomizing its components: randomized rounding and the Sampling Lemma. Raghavan <ref> [R88] </ref> derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in [BR94] and [BGG93].
Reference: [RT87] <author> P. Raghavan and C. Thompson. </author> <title> Randomized Rounding: a technique for provably good algorithms and algorithmic proofs Combinatorica, </title> <booktitle> 7 </booktitle> <pages> 365-374, </pages> <year> 1987. </year>
Reference-contexts: The collection of these estimates|one per vertex|allows us to turn the classical quadratic program for MAX-CUT into an integer linear program whose solution approximates the solution to the quadratic program. This lets us find an approximate solution using the randomized rounding techniques of Raghavan and Thompson <ref> [RT87] </ref>. Generalizations of these ideas work for dense instances of the following problems: MAX-CUT: Partition the vertices of an undirected graph into two groups so as to maximize the number of edges with exactly one endpoint in each group. A :878-approximation algorithm is given in [GW94]. <p> In other words, we can sample to estimate the sum to within an additive error of *n. The next lemma, due to Raghavan and Thompson <ref> [RT87] </ref> shows how to round approximate linear integer programs by solving the corresponding fractional program and then rounding the fractional solutions to integers.
Reference: [Shm94] <author> D. Shmoys. </author> <title> Computing near-optimal solutions to combinatorial optimization problems. </title> <note> To appear in Dimacs Series in Discrete Math and Theoretical Computer Science, </note> <year> 1994. </year>
Reference-contexts: of the value of the solution returned by the algorithm to the value of the optimum solution. (This definition is for minimization problems; for maximization problems the definition is inverted so that the ratio is always at least 1.) The approximation properties of different problems vary a great deal (see <ref> [Shm94] </ref> for a survey). We know that unless P = N P, problems such as clique [FGL + 91, AS92, ALM + 92] and chromatic number [LY93] cannot be approximated even within a factor of n ffi in polynomial time.
Reference: [Yan92] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <booktitle> In Proc. 3 rd SODA, </booktitle> <pages> pages 1-9. ACM-SIAM, </pages> <month> January </month> <year> 1992. </year> <month> 15 </month>
Reference-contexts: An algorithm in [LR88] achieves approximation ratio O (log n). MAX-k-SAT: Given a k-CNF formula, find a true-false assignment to the variables making the maximum possible number of clauses true. An algorithm in <ref> [Yan92] </ref> approximates it within a factor 3=4. This has recently been improved to 0:758 ([GW94]).
References-found: 29

