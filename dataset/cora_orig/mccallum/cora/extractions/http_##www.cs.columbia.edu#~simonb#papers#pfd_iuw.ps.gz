URL: http://www.cs.columbia.edu/~simonb/papers/pfd_iuw.ps.gz
Refering-URL: http://www.cs.columbia.edu/~simonb/pub.html
Root-URL: http://www.cs.columbia.edu
Title: Parametric Feature Detection  
Author: Simon Baker Shree K. Nayar and Hiroshi Murase 
Address: New York, USA  Japan  
Affiliation: Department of Computer Science, Columbia University,  NTT Basic Research Laboratory, Atsugi-shi, Kanagawa,  
Date: May, 1997  
Note: Appeared in the Proceedings of the 1997 DARPA Image Understanding Workshop,  
Abstract: We propose an algorithm to automatically construct feature detectors for arbitrary parametric features. In the algorithm, each feature is represented as a densely sampled parametric manifold in a low dimensional subspace of &lt; N . Detection is performed by projecting the brightness distribution around each image pixel into the sub-space. If the projection lies sufficiently close to the feature manifold, the feature is detected and the location of the closest point on the manifold is used to estimate the feature parameters. By applying the algorithm to appropriate feature models, detectors have been constructed for five parametric features, namely, step edge, roof edge, line, corner, and circular disc. 
Abstract-found: 1
Intro-found: 1
Reference: [ Baker and Nayar, 1996a ] <author> S. Baker and S.K. Na-yar. </author> <title> Algorithms for pattern rejection. In Proceedings of the IAPR Internation Conference (a) Original image (711 fi 661 pixels) (b) Grey-coded distance to step edge manifold (c) Grey-coded distance to corner manifold for a 711fi661 image of "Red and Blue," by Gerrit Rietveld, circa 1918. The raw (unthresholded) detector outputs in (b) and (c) reflect high accuracy in detection and localization. </title> <journal> on Pattern Recognition, </journal> <pages> pages 869-874, </pages> <year> 1996. </year>
Reference-contexts: Then, in a 10-D sub-space, the complete time to perform normalization, projection, and search is around 1ms per image window on a DEC Alpha 3600. For a 512 fi 480 image complete processing takes around 4 minutes. However, by applying rejection techniques such as <ref> [ Baker and Nayar, 1996a ] </ref> the overall time can be reduced to under 30secs. 5 Experimental Results 5.1 Feature Detection Rates We statistically compare our step edge detector with the Canny [ 1986 ] and Nalwa-Binford [ 1986 ] detectors, following the approach in [ Nalwa and Binford, 1986 ]
Reference: [ Baker and Nayar, 1996b ] <author> S. Baker and S.K. Nayar. </author> <title> Pattern rejection. </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 544-549, </pages> <year> 1996. </year>
Reference: [ Baker et al., 1998 ] <author> S. Baker, S.K. Nayar, and H. Murase. </author> <title> Parametric feature detection. </title> <journal> International Journal of Computer Vision, </journal> <note> 1998. (Accepted for publication). </note>
Reference-contexts: So long as we sample densely enough, this yields a sufficiently good estimate of the closest manifold point. We search using a heuristic coarse-to-fine search which takes advantage of the relatively smooth manifolds <ref> [ Baker et al., 1998 ] </ref> . As an example of the search complexity for the step edge model, if we sample every 1:6 ffi , every 0:088 pixel, and every 0:14 pixel, we have 46,368 sample points. <p> Nayar, 1996a ] the overall time can be reduced to under 30secs. 5 Experimental Results 5.1 Feature Detection Rates We statistically compare our step edge detector with the Canny [ 1986 ] and Nalwa-Binford [ 1986 ] detectors, following the approach in [ Nalwa and Binford, 1986 ] . (See <ref> [ Baker et al., 1998 ] </ref> for more details.) Since we took great care modeling both the features and the imaging system, we used our step edge model to generate ideal step edges. For fairness, however, we changed the details slightly. <p> It is immediate that the features detected are consistent with the original image. Thresholding on the distance to the feature manifold to finally detect features is straightforward as is demonstrated in <ref> [ Baker et al., 1998 ] </ref> where we superimpose thresholded feature maps on the original images. Acknowledgements We wish to thank Vic Nalwa for providing an implementation of the Nalwa-Binford edge detector, and Sergio Cuniolo, Michael Heath, Tony Lindenberg, Jose-Maria Montiel, and Geoff West for providing pointers to Canny edge detectors.
Reference: [ Barbe, 1980 ] <author> D.F. Barbe. Charge-Coupled Devices. Spring-Verlag, </author> <year> 1980. </year>
Reference: [ Born and Wolf, 1965 ] <author> M. Born and E. Wolf. </author> <title> Principles of Optics. </title> <publisher> Permagon Press, </publisher> <year> 1965. </year>
Reference: [ Canny, 1986 ] <author> J. Canny. </author> <title> A computational approach to edge detection. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8 </volume> <pages> 679-698, </pages> <year> 1986. </year>
Reference: [ Fukunaga, 1990 ] <author> K. Fukunaga. </author> <title> Introduction to Statistical Pattern Recognition. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: [ Hueckel, 1971 ] <author> M.H. Hueckel. </author> <title> An operator which locates edges in digitized pictures. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 18 </volume> <pages> 113-125, </pages> <year> 1971. </year>
Reference: [ Hummel, 1979 ] <author> R.A. Hummel. </author> <title> Feature detection using basis functions. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 9 </volume> <pages> 40-55, </pages> <year> 1979. </year>
Reference: [ Koenderink, 1984 ] <author> J.J. Koenderink. </author> <title> The structure of images. </title> <journal> Biological Cybernetics, </journal> <volume> 50 </volume> <pages> 363-370, </pages> <year> 1984. </year>
Reference: [ Lenz, 1987 ] <author> R. Lenz. </author> <title> Optimal filters for the detection of linear patterns in 2-D and higher dimensional images. </title> <journal> Pattern Recognition, </journal> <volume> 20 </volume> <pages> 163-172, </pages> <year> 1987. </year>
Reference: [ MOMA, 1984 ] <author> MOMA. </author> <title> The Museum of Modern Art New York: The History and the Collection. </title> <editor> Harry N. Abrams, </editor> <year> 1984. </year>
Reference-contexts: For lower noise levels, our detector marginally out-performs both of the other detectors. 5.3 Application to Images In Figures 4 (b) and (c) we present the results of applying our step edge and corner detectors to the image in Figure 4 (a). The original image is taken from <ref> [ MOMA, 1984 ] </ref> and was digitized using an Envisions 6600S scanner at 200dpi. We present the outputs of the detectors as grey-coded distance to the feature manifold (on a nonlinear scale) so that the structure of the object can be seen clearly.
Reference: [ Nalwa and Binford, 1986 ] <author> V.S. </author> <title> Nalwa and T.O. Binford. On detecting edges. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8 </volume> <pages> 699-714, </pages> <year> 1986. </year>
Reference-contexts: applying rejection techniques such as [ Baker and Nayar, 1996a ] the overall time can be reduced to under 30secs. 5 Experimental Results 5.1 Feature Detection Rates We statistically compare our step edge detector with the Canny [ 1986 ] and Nalwa-Binford [ 1986 ] detectors, following the approach in <ref> [ Nalwa and Binford, 1986 ] </ref> . (See [ Baker et al., 1998 ] for more details.) Since we took great care modeling both the features and the imaging system, we used our step edge model to generate ideal step edges. For fairness, however, we changed the details slightly. <p> Hence, we changed the window of our detector to be a square window containing 25 pixels, rather than the 49 pixel disc window used earlier. We generate "not edges" exactly as in <ref> [ Nalwa and Binford, 1986 ] </ref> , by taking a constant intensity window, and adding zero-mean Guassian noise. In Figure 2 we compare the detection performance of the three edge detectors. <p> The closer a curve lies to the origin in Figure 2, the better the performance. Hence, we can see that both the Canny detector and our detector do increasingly well as the S.N.R. increases. The results for the Nalwa-Binford detector are consistent 3 with those described in <ref> [ Nalwa and Binford, 1986 ] </ref> . Applied to real images, the Nalwa-Binford detector does not perform as poorly as Figure 2 might indicate. <p> The poor Nalwa-Binford results are probably due to thresholding on the step-size and may well be completely different if we fix the step-size threshold, and vary the tanh-fit threshold. 5.2 Parameter Estimation Accuracy Again following <ref> [ Nalwa and Binford, 1986 ] </ref> , we analyze parameter estimation accuracy by randomly generating a set of feature parameters, synthesizing a feature with these parameters, adding noise, applying the detector, and then measurings the accuracy of the estimated parameters. <p> In the figure, we plot the R.M.S. error in the estimate of the orientation against the S.N.R. We see that for low S.N.R. the perfor 3 We did not use step 2) 0 of the Nalwa-Binford algorithm, however the inclusion of this step does not radically alter the performance <ref> [ Nalwa and Binford, 1986 ] </ref> . added noise to them, and then applied the edge detectors. We plot the R.M.S. error of the orientation estimate against the S.N.R.
Reference: [ Nandy et al., 1996 ] <author> D. Nandy, Z. Wang, J. Ben-Arie, K.R. Rao, and N. Jojic. </author> <title> A generalized feature extractor using expansion matching and the Karhunen-Loeve transform. </title> <booktitle> In Proceedings of the ARPA Image Understanding Workshop, </booktitle> <pages> pages 969-972, </pages> <year> 1996. </year>
Reference: [ Nayar et al., 1996 ] <author> S.K. Nayar, S. Baker, and H. Murase. </author> <title> Parametric feature detection. </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 471-477, </pages> <year> 1996. </year>
Reference: [ Norton, 1982 ] <author> H.N. Norton. </author> <title> Sensor and Analyzer Handbook. </title> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
References-found: 16

