URL: http://simon.cs.vt.edu/~begolej/Papers/FlexibleCollaborationTransparency/FlexibleCollaborationTransparency.ps
Refering-URL: http://simon.cs.vt.edu/~begolej/Papers/FlexibleCollaborationTransparency/
Root-URL: http://www.cs.vt.edu
Email: fbegolej,shafferg@cs.vt.edu  
Title: Flexible Collaboration Transparency  
Author: James "Bo" Begole Clifford A. Shaffer 
Keyword: Computer-supported cooperative work, groupware, collaboration transparency, multi-user interface components, workspace awareness, Java.  
Address: VA 24061  
Affiliation: Department of Computer Science Virginia Tech Blacksburg,  
Abstract: This paper presents two distinct contributions: First, we present a critique of collaboration transparency as it is currently implemented in contrast to collaboration-aware implementations. We find conventional collaboration-transparency systems lacking in terms of efficient use of network resources and support for key group-ware principles: concurrent work, relaxed WYSIWIS, and group awareness. Second, we examine the causes of these deficiencies, and then present an alternative implementation approach based on an object-oriented replicated architecture where selected single-user interface objects are dynamically replaced by multi-user extensions. The replacement is transparent to the single-user application and its developer. As an instance of this approach, we described its incorporation into a Java-based collaboration-transparency system, called JAMM. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> H. Abdel-Wahab and M. Feit. XTV: </author> <title> A Framework for Sharing X Window Clients in Remote Synchronous Collaboration. </title> <booktitle> In Proceedings of IEEE TriComm, </booktitle> <pages> pages 159-167, </pages> <year> 1991. </year>
Reference-contexts: We illustrate the approach with examples of its incorporation in a replicated, collaboration-transparency system, called JAMM (Java Applets Made Multiuser) [2, 3]. CRITIQUE OF COLLABORATION TRANSPARENCY Several collaboration-transparency systems now exist, particularly for the X Window System. Examples include Old Dominion University's XTV <ref> [1] </ref>, Hewlett Pack-ard's SharedX [7] and Sun Microsystem's ShowMe Shar-edApp [26]. Recently, Microsoft has made NetMeeting, a collaboration-transparency system for the Windows platform, freely available [17]. Because of its free availability and widely-used platform, NetMeeting is helping popularize collaboration transparency among casual computer users.
Reference: 2. <author> J. B. Begole, C. A. Struble, and C. A. Shaffer. </author> <title> Leveraging Java Applets: Toward Collaboration Transparency in Java. </title> <journal> IEEE Internet Computing, </journal> <volume> 1(2) </volume> <pages> 57-64, </pages> <address> Mar./Apr. </address> <year> 1997. </year>
Reference-contexts: Transparency is maintained, because the original application source code is unmodified. We illustrate the approach with examples of its incorporation in a replicated, collaboration-transparency system, called JAMM (Java Applets Made Multiuser) <ref> [2, 3] </ref>. CRITIQUE OF COLLABORATION TRANSPARENCY Several collaboration-transparency systems now exist, particularly for the X Window System. Examples include Old Dominion University's XTV [1], Hewlett Pack-ard's SharedX [7] and Sun Microsystem's ShowMe Shar-edApp [26]. Recently, Microsoft has made NetMeeting, a collaboration-transparency system for the Windows platform, freely available [17].
Reference: 3. <author> J. B. Begole, C. A. Struble, C. A. Shaffer, and R. B. Smith. </author> <title> Transparent Sharing of Java Applets: A Replicated Approach. </title> <booktitle> In Proceedings of the ACM Symposium on User Interface Software and Technology (UIST-97), </booktitle> <pages> pages 55-64, </pages> <address> New York, Oct.14-17 1997. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Transparency is maintained, because the original application source code is unmodified. We illustrate the approach with examples of its incorporation in a replicated, collaboration-transparency system, called JAMM (Java Applets Made Multiuser) <ref> [2, 3] </ref>. CRITIQUE OF COLLABORATION TRANSPARENCY Several collaboration-transparency systems now exist, particularly for the X Window System. Examples include Old Dominion University's XTV [1], Hewlett Pack-ard's SharedX [7] and Sun Microsystem's ShowMe Shar-edApp [26]. Recently, Microsoft has made NetMeeting, a collaboration-transparency system for the Windows platform, freely available [17]. <p> This section describes the replicated architecture and object replacement technique and the advantages they afford. We illustrate the approach by describing its incorporation into an instance of a replicated-architecture collaboration-transparency system called JAMM (Java Applets Made Multiuser), described in prior work <ref> [3] </ref>. Replicated Architecture Our approach uses a replicated architecture, whereas conventional collaboration-transparency systems use centralized architectures. In prior work, we found that, current technology can support a replicated architecture for transparent sharing of many, though not all, single-user applications [3, 15]. <p> Replicated Architecture Our approach uses a replicated architecture, whereas conventional collaboration-transparency systems use centralized architectures. In prior work, we found that, current technology can support a replicated architecture for transparent sharing of many, though not all, single-user applications <ref> [3, 15] </ref>. In addition to allowing lower network bandwidth usage, replication is essential to provide support of concurrent work and relaxed WYSIWIS, as described later in this section. Dynamic Object Replacement Today, the user interface of an object-oriented application is typically constructed by combining graphical user interface (GUI) objects. <p> The remainder of this section describes our implementation of this approach and the use of semantic knowledge to realize these advantages. Flexible JAMM We have incorporated our approach into a replicated-architecture collaboration-transparency system, called JAMM <ref> [3] </ref>. Our current version of JAMM is implemented with the Java Development Kit 1.1.5. called Stylepad, which is included as a sample application in the Java Foundation Classes/Swing library [14]. This application contains a scrollable panel that in turn embeds a text editor.
Reference: 4. <author> P. Dewan and R. Choudhary. </author> <title> Flexible User Interface Coupling in a Collaborative System. </title> <booktitle> In Proceedings of ACM CHI'91 Conference on Human Factors in Computing Systems, Group Use of Computing, </booktitle> <pages> pages 41-48, </pages> <year> 1991. </year>
Reference-contexts: In all cases, however, only one collaborator at a time may actually use the application. The degree to which collaborators work closely together versus independently is referred to as tight versus loose coupling <ref> [4] </ref>. Floor control imposes a tightly-coupled mode of collaboration, because while one participant is in control, the others may only observe the work. However, group work is not always so tightly coupled and many researchers have cited this restriction as a serious problem with conventional collaboration transparency [18, 19, 22].
Reference: 5. <author> P. Dourish. </author> <title> Consistency Guarantees: Exploiting Application Semantics for Consistency Management in a Collaboration Toolkit. </title> <booktitle> In Proceedings of the ACM 1996 Conference on Computer Supported Work, </booktitle> <pages> pages 268-277, </pages> <address> New York, Nov.16-20 1996. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Developers of collaboration-aware applications, on the other hand, can take advantage of their knowledge of the application's semantics, transmitting only the information needed to maintain state consistency among the replicas and provide acceptable performance <ref> [5] </ref>. Summary: Awareness versus Transparency To summarize, there are at least four distinct dimensions along which transparency and awareness systems currently differ in their support for collaboration: con-currency, WYSIWIS, group awareness and network usage. Figure 2 illustrates where the two types of systems lie along these dimensions.
Reference: 6. <author> C. A. Ellis and S. J. Gibbs. </author> <title> Concurrency Control in Group Systems. </title> <booktitle> SIGMOD Record (ACM Special Interest Group on Management of Data), </booktitle> <volume> 18(2) </volume> <pages> 399-407, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: The algorithm JAMM uses is an optimistic transaction approach similar to that described by Ellis and Gibbs, using no locking yet avoiding conflicts between edits that occur as close as one character apart <ref> [6] </ref>. A replica updates its copy of the document by transforming an incoming remote edit to be consistent with its own set of local edits. Fast Local Response JAMM does not forward all user input events; some are applied only locally. <p> Many classes of the Swing library expose enough information to provide multi-user capabilities without replacing the object. For example, the text editing components notify registered listeners of each text insertion and deletion, making it possible to use the Ellis-Gibbs concurrent editing algorithm <ref> [6] </ref>. By attaching state-change listen-ers to target objects, we can provide multi-user capabilities without replacing the target objects, thus avoiding the cited drawbacks of object replacement.
Reference: 7. <author> D. Garfinkel, B. Welti, and T. Yip. </author> <title> HP SharedX: </title>
Reference-contexts: We illustrate the approach with examples of its incorporation in a replicated, collaboration-transparency system, called JAMM (Java Applets Made Multiuser) [2, 3]. CRITIQUE OF COLLABORATION TRANSPARENCY Several collaboration-transparency systems now exist, particularly for the X Window System. Examples include Old Dominion University's XTV [1], Hewlett Pack-ard's SharedX <ref> [7] </ref> and Sun Microsystem's ShowMe Shar-edApp [26]. Recently, Microsoft has made NetMeeting, a collaboration-transparency system for the Windows platform, freely available [17]. Because of its free availability and widely-used platform, NetMeeting is helping popularize collaboration transparency among casual computer users.
References-found: 7

