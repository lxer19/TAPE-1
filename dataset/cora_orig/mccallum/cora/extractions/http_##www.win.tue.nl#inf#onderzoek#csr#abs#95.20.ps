URL: http://www.win.tue.nl/inf/onderzoek/csr/abs/95.20.ps
Refering-URL: http://www.win.tue.nl/inf/onderzoek/publicaties.html
Root-URL: http://www.win.tue.nl
Email: femke@cwi.nl  severi@win.tue.nl  
Title: On Normalisation finite, 2. a certain rewrite strategy is perpetual, 3. a certain rewrite strategy
Author: Femke van Raamsdonk Paula Severi 
Note: 1. all developments and superdevelopments are  
Address: P.O. Box 94079, 1090 GB Amsterdam The Netherlands  P.O. Box 513, 5600 MB Eindhoven The Netherlands  
Affiliation: CWI  Department of Mathematics and Computing Science Eindhoven University of Technology  
Abstract: Using a characterisation of strongly normalising -terms, we give new and simple proofs of the following: AMS Subject Classification (1991): 03B40, 03D70. CR Subject Classification (1991): F.3.3, F.4.1. Keywords & Phrases: -calculus, normalisation, perpetual strategies. Note: The research of the first author is supported by NWO/SION project 612-316-606. This report is also available as Report CS-R9545, CWI, The Netherlands. 
Abstract-found: 1
Intro-found: 1
Reference: [Acz77] <author> Peter Aczel. </author> <title> An introduction to inductive definitions. </title> <editor> In Jon Barwise, editor, </editor> <booktitle> Handbook of Mathematical Logic, </booktitle> <pages> pages 739-782. </pages> <publisher> North-Holland, </publisher> <year> 1977. </year>
Reference-contexts: Inductive Definitions. We often describe a set by induction as the smallest set closed under some set of rules (see <ref> [Acz77] </ref> and [Ter94]). This is the way we define, for example, the class of theorems of a given system. And this is also the way we have defined the set SN in Definition 3.1. <p> M i OE xM 1 : : : M n for all i = 1; : : : ; n, 3. M [x := N ]P 1 : : : P n OE (x:M )N P 1 : : : P n , In <ref> [Acz77] </ref>, these three ways of giving a definition by induction, that is giving a set of deterministic rules or clauses, giving a monotone operator and giving an order are proved to be equivalent. 4.
Reference: [Bar84] <author> H.P. Barendregt. </author> <title> The Lambda Calculus, its Syntax and Semantics. </title> <publisher> North Holland, </publisher> <address> second edition, </address> <year> 1984. </year>
Reference-contexts: In this section we give a new and short proof of the fact that in -calculus all fi-developments terminate. Usually, fi-developments are defined via a set of underlined -terms and an underlined fi-reduction rule. We shortly recall these definitions, for a complete formal treatment see <ref> [Bar84] </ref>. Definition 4.1. The set of underlined -terms fl is the smallest set satisfying the following: 1. x 2 fl for every variable x, 2. if M 2 fl, then x:M 2 fl, 4. <p> Our proofs are simpler than the original ones and make in both cases use of the characterisation of strongly normalising terms. For the sake of self-containment we first give some definitions that can for instance be found in <ref> [Bar84] </ref>. Perpetual strategies. Definition 6.1. 1. A strategy for fi-reduction is a map F : fl ! fl such that for all M 2 fl, M !! fi F (M ). 2. <p> The merit of F 1 , however, is that it is decidable. We prove that F 1 is perpetual. Note that this proof is simpler than the proof in [BBKV76] or in <ref> [Bar84] </ref> (Chapter IV paragraph 4). Theorem 6.7. F 1 is a perpetual strategy. Proof. Suppose that M is not in normal form and F 1 (M ) is strongly normalising. Then F 1 (M ) 2 SN . <p> The definitions must have been given more or less simultaneously. Developments. The result that all fi-developments are finite is a classical result in -calculus and various proofs already exist. There is for instance a proof that can be found in <ref> [Bar84] </ref>, that makes use of a decreasing labelling. This proof is not related to ours. There is a short and elegant proof by de Vrijer [dV85], in which an exact bound for the length of a development is computed.
Reference: [BBKV76] <author> Henk Barendregt, Jan Bergstra, Jan Willem Klop, and Henri Volken. </author> <title> Degrees, reductions and representability in the lambda calculus. </title> <type> Technical report, </type> <institution> University Utrecht, </institution> <year> 1976. </year> <note> Preprint nr. 22. </note>
Reference-contexts: As a consequence of this we have that fi l is Church-Rosser. 6. Two Perpetual Strategies 16 6. Two Perpetual Strategies In this section we consider two rewrite strategies, F bk defined in [BK82] and F 1 introduced in <ref> [BBKV76] </ref>. Both strategies are perpetual, which means that they yield an infinite rewrite sequence whenever possible. We give for both strategies a new proof of the fact that they are perpetual. <p> We now consider the strategy F 1 that is defined in <ref> [BBKV76] </ref>. This strategy does not check whether the argument of the left-most redex is strongly normalising or not. Instead, it is checked whether the left-most redex is an I-redex. If it is, it is contracted. <p> The merit of F 1 , however, is that it is decidable. We prove that F 1 is perpetual. Note that this proof is simpler than the proof in <ref> [BBKV76] </ref> or in [Bar84] (Chapter IV paragraph 4). Theorem 6.7. F 1 is a perpetual strategy. Proof. Suppose that M is not in normal form and F 1 (M ) is strongly normalising. Then F 1 (M ) 2 SN .
Reference: [BK82] <author> Jan A. Bergstra and Jan Willem Klop. </author> <title> Strong normalization and perpetual reductions in the lambda calculus. </title> <journal> Journal of Information Processing and Cybernetics, </journal> <volume> 18 </volume> <pages> 403-417, </pages> <year> 1982. </year>
Reference-contexts: As a consequence of this we have that fi l is Church-Rosser. 6. Two Perpetual Strategies 16 6. Two Perpetual Strategies In this section we consider two rewrite strategies, F bk defined in <ref> [BK82] </ref> and F 1 introduced in [BBKV76]. Both strategies are perpetual, which means that they yield an infinite rewrite sequence whenever possible. We give for both strategies a new proof of the fact that they are perpetual. <p> Definition 6.3. Let F be a strategy for fi-reduction. An F -rewrite sequence of M is defined as possibly ending in the normal form of M . The strategy F bk . First we consider the strategy F bk as introduced in <ref> [BK82] </ref>. We give a simple proof that F bk is perpetual using Definition 3.1. Definition 6.4. Suppose that M 2 fl is not in normal form. Let M = C [(x:P )Q] where (x:P )Q is the leftmost redex of M . <p> In particular, a maximal strategy is perpetual. The converse is not necessarily true, as witnessed by the strategy F bk defined in <ref> [BK82] </ref>. Our proof that F 1 is a maximal strategy makes use of the characterisation of strongly normalising terms. We define a mapping h that computes the length of a F 1 -rewrite sequence of a term.
Reference: [dV85] <author> Roel de Vrijer. </author> <title> A direct proof of the finite developments theorem. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 50 </volume> <pages> 339-343, </pages> <year> 1985. </year>
Reference-contexts: There is for instance a proof that can be found in [Bar84], that makes use of a decreasing labelling. This proof is not related to ours. There is a short and elegant proof by de Vrijer <ref> [dV85] </ref>, in which an exact bound for the length of a development is computed. For proving that the bound is an exact bound, he makes in fact use of the strategy F 1 . Some small observations concerning developments coincide with some small observations we make use of.
Reference: [Gir72] <author> J.-Y. Girard. </author> <title> Interpretation fonctionelle et elimination des coupures de l'arithmetique d'ordre superieur. </title> <type> PhD thesis, </type> <institution> Universite Paris VII, </institution> <year> 1972. </year>
Reference-contexts: This is done by computing the length of the rewrite sequence to the normal form. In Section 8 we prove that simply typed -calculus is strongly normalising using our charac-terisation of the strongly normalising terms. The definition of SN clearly recalls the definition of saturation, see [Tai67] and <ref> [Gir72] </ref>. In Section 9 we consider -calculus with intersection types. The set of strongly normalising terms is the set of terms that are typable in ^.
Reference: [Kri93] <author> J.L. Krivine. </author> <title> Lambda-Calculus, Types and Models. </title> <publisher> Masson, </publisher> <year> 1993. </year>
Reference-contexts: We will make use of the following proposition that is proved in Chapter IV of <ref> [Kri93] </ref>. Proposition 9.1. Suppose ` M [x := N ] : ff and ` N : fi. Suppose x doesn't occur in . Then ; x : fi ` M : ff. Theorem 9.2. <p> In our proof, the set SN (; ff ! fi) is a subset of the set of strongly normalising terms by definition. But the equality SN (; ff ! fi) = SN (; ff) ! SN (; fi) needs to be proved. -calculus with Intersection Types. Krivine <ref> [Kri93] </ref> proved that the set of strongly normal-ising terms coincides with the set of terms that are typable in ^. For proving that a term that is typable in ^ is strongly normalising he makes use of saturated sets.
Reference: [Lev78] <author> Jean-Jacques Levy. </author> <title> Reductions correctes et optimales dans le lambda-calcul. </title> <type> PhD thesis, </type> <institution> Universite de Paris VII, </institution> <year> 1978. </year>
Reference-contexts: Superdevelopments form an extension of the notion of development. In a superdevelopment not only redexes that descend from the initial term may be contracted, but also some redexes that are created during reduction. There are three ways of creating new redexes (see <ref> [Lev78] </ref>): 1. ((x:y:M )N )P ! fi (y:M [x := N ])P 3. (x:C [xM ])(y:N ) ! fi C 0 [(y:N )M 0 ] where C 0 and M 0 are obtained from C and M by replacing all free occurrences of x by (y:N ).
Reference: [Loa95] <author> R. Loader. </author> <title> Normalisation by translation. Note distributed on the `types' mail-inglist, </title> <month> April </month> <year> 1995. </year>
Reference-contexts: So P 2 SN (; ff). 10. Related Work and Conclusions In this section we discuss the relation between our proofs and other proofs of the same results. The set SN . Ralph Loader defines the set SN in a note distributed on the types mailinglist <ref> [Loa95] </ref>, where he announces a proof of strong normalisation of system F . The definitions must have been given more or less simultaneously. Developments. The result that all fi-developments are finite is a classical result in -calculus and various proofs already exist.
Reference: [Oos94] <author> Vincent van Oostrom. </author> <title> Confluence for Abstract and Higher-Order Rewriting. </title> <type> PhD thesis, </type> <institution> Vrije Universiteit, </institution> <address> Amsterdam, </address> <month> March </month> <year> 1994. </year> <note> References 33 </note>
Reference-contexts: We now give a formal definition of a rewrite sequence in an indexed Abstract Rewriting System. It can be generalised to the case of Abstract Rewriting Systems, however, we don't need a so general definition in the present paper. See <ref> [Oos94] </ref> for a general definition of conversion. Definition 2.9. Let A = (A; I; f! i g i2I ) be an indexed Abstract Rewriting System.
Reference: [Raa93] <editor> F. van Raamsdonk. Confluence and superdevelopments. In C. Kirchner, editor, </editor> <booktitle> Proceedings of the 5th International Conference on Rewrite Techniques and Applications, </booktitle> <year> 1993. </year>
Reference-contexts: Superdevelopments In <ref> [Raa93] </ref>, superdevelopments were introduced and proved to be finite. Superdevelopments form an extension of the notion of development. In a superdevelopment not only redexes that descend from the initial term may be contracted, but also some redexes that are created during reduction.
Reference: [Reg94] <author> Laurent Regnier. </author> <title> Une equivalence sur les lambda-termes. </title> <journal> Theoretical Computer Science, </journal> <volume> 126 </volume> <pages> 281-292, </pages> <year> 1994. </year>
Reference-contexts: Proving F (M ) 2 SN ) M 2 SN and using the definition of SN make our proofs more perspicuous. A maximal strategy. The fact that F 1 is a maximal strategy has been proved by Regnier <ref> [Reg94] </ref> using a relation that permits to permute redexes. In fact, in the paper Regnier shows that some operational criteria do not permit to distinguish between terms that are equivalent up to some permutation of redexes.
Reference: [Sor94] <author> Morten Heine Sorensen. </author> <title> Effective longest reduction paths in untyped -calculus, 1994. </title> <type> Draft, </type> <institution> Katholieke Universiteit Nijmegen. </institution>
Reference: [Tai67] <author> W.W. Tait. </author> <title> Intensional interpretation of functionals of finite type I. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 32 </volume> <pages> 198-212, </pages> <year> 1967. </year>
Reference-contexts: This is done by computing the length of the rewrite sequence to the normal form. In Section 8 we prove that simply typed -calculus is strongly normalising using our charac-terisation of the strongly normalising terms. The definition of SN clearly recalls the definition of saturation, see <ref> [Tai67] </ref> and [Gir72]. In Section 9 we consider -calculus with intersection types. The set of strongly normalising terms is the set of terms that are typable in ^.
Reference: [Ter94] <author> Jan Terlouw. Inductieve definities. </author> <type> Technical report, </type> <institution> Rijksuniversiteit Groningen, </institution> <year> 1994. </year>
Reference-contexts: Inductive Definitions. We often describe a set by induction as the smallest set closed under some set of rules (see [Acz77] and <ref> [Ter94] </ref>). This is the way we define, for example, the class of theorems of a given system. And this is also the way we have defined the set SN in Definition 3.1.
References-found: 15

