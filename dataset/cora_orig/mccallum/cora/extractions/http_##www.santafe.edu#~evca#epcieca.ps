URL: http://www.santafe.edu/~evca/epcieca.ps
Refering-URL: http://www.santafe.edu/~evca/evabstracts.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Embedded-Particle Computation in Evolved Cellular Automata  
Author: Wim Hordijk James P. Crutchfield Melanie Mitchell 
Affiliation: Santa Fe Institute, Santa Fe, NM and Physics Department, University of California, Berkeley  
Note: To appear in the pre-proceedings of Physics and Computation '96  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Crutchfield, J. P., </author> <title> "The calculi of emergence: Computation, dynamics, and induction", </title> <journal> Physica D 75 (1994), </journal> <pages> 11-54. </pages>
Reference-contexts: Crutchfield and Hanson developed a method for detecting and analyzing the "intrinsic" computational components in the CA's space-time behavior in terms of regular domains, particles, and particle interactions [2, 6]. This method is part of their computational mechanics framework for understanding information processing embedded in physical systems <ref> [1] </ref>. Briefly, a regular domain is a homogeneous region of space-time in which the same "pattern" appears. More formally, the spatial patterns in a regular domain can be described by a regular language that is mapped onto itself by the CA rule .
Reference: [2] <author> Crutchfield, J. P., and J. E. Hanson, </author> <title> "Turbulent pattern bases for cellular automata", </title> <journal> Physica D 69 (1993), </journal> <pages> 279-301. </pages>
Reference-contexts: In this paper we focus on how these CAs implement the emergent computational strategies for performing a task. In particular, we develop a class of embedded-particle models to describe the computational strategies implemented by particular CAs. To do this, we use the computational mechanics framework of Crutch-field and Hanson <ref> [2, 6] </ref>, in which a CA's information processing is described in terms of regular domains, embedded particles, and their interactions. We then evaluate this class of models by comparing their computational performance to that of the CAs they model. <p> Crutchfield and Hanson developed a method for detecting and analyzing the "intrinsic" computational components in the CA's space-time behavior in terms of regular domains, particles, and particle interactions <ref> [2, 6] </ref>. This method is part of their computational mechanics framework for understanding information processing embedded in physical systems [1]. Briefly, a regular domain is a homogeneous region of space-time in which the same "pattern" appears.
Reference: [3] <author> Crutchfield, J. P., and M. Mitchell, </author> <title> "The evolution of emergent computation", </title> <booktitle> Proceedings of the National Academy of Sciences, USA 92 (23) (1995), </booktitle> <pages> 10742-10746. </pages>
Reference-contexts: The "evolving cellular automata" framework is an idealized means for studying how evolution (natural or computational) can create systems that perform emergent computation, in which the actions of simple components with local information and communication give rise to coordinated global information processing <ref> [3] </ref>. In previous work [4, 5], we analyzed the process by which a genetic algorithm designed CAs to perform particular tasks. In this paper we focus on how these CAs implement the emergent computational strategies for performing a task. <p> To date, we have used a genetic algorithm (GA) to evolve one-dimensional, binary-state r = 3 CAs to perform a density-classification task <ref> [3, 4] </ref> and a synchronization task [5]. For the density classification task, the goal is to find a CA that decides whether or not the IC contains a majority of 1s (i.e., has high density). More precisely, we call this task the " c = 1=2" task.
Reference: [4] <author> Das, R., M. Mitchell, and J. P. Crutchfield, </author> <title> "A genetic algorithm discovers particle-based computation in cellular automata", Parallel Problem Solving from Nature|PPSN III (Y. </title> <editor> Davidor, H.-P. Schwefel, and R. M anner, eds.) </editor> <year> (1994), </year> <pages> 244-353. </pages>
Reference-contexts: The "evolving cellular automata" framework is an idealized means for studying how evolution (natural or computational) can create systems that perform emergent computation, in which the actions of simple components with local information and communication give rise to coordinated global information processing [3]. In previous work <ref> [4, 5] </ref>, we analyzed the process by which a genetic algorithm designed CAs to perform particular tasks. In this paper we focus on how these CAs implement the emergent computational strategies for performing a task. <p> To date, we have used a genetic algorithm (GA) to evolve one-dimensional, binary-state r = 3 CAs to perform a density-classification task <ref> [3, 4] </ref> and a synchronization task [5]. For the density classification task, the goal is to find a CA that decides whether or not the IC contains a majority of 1s (i.e., has high density). More precisely, we call this task the " c = 1=2" task.
Reference: [5] <author> Das, R., J. P. Crutchfield, M. Mitchell, and J. E. Hanson, </author> <title> "Evolving globally synchronized cellular automata", </title> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <editor> (L. Eshelman ed.), </editor> <year> (1995), </year> <pages> 336-343. </pages>
Reference-contexts: The "evolving cellular automata" framework is an idealized means for studying how evolution (natural or computational) can create systems that perform emergent computation, in which the actions of simple components with local information and communication give rise to coordinated global information processing [3]. In previous work <ref> [4, 5] </ref>, we analyzed the process by which a genetic algorithm designed CAs to perform particular tasks. In this paper we focus on how these CAs implement the emergent computational strategies for performing a task. <p> To date, we have used a genetic algorithm (GA) to evolve one-dimensional, binary-state r = 3 CAs to perform a density-classification task [3, 4] and a synchronization task <ref> [5] </ref>. For the density classification task, the goal is to find a CA that decides whether or not the IC contains a majority of 1s (i.e., has high density). More precisely, we call this task the " c = 1=2" task. <p> A catalog of sync1 's observed particles and their properties (temporal periodicity and velocity), and all possible particle interactions, is given in Table 1. The temporal periodicity of a particle is the number of time steps after with measured performance 1.0 on the synchronization task. After <ref> [5] </ref>. Domains are mapped to white, particles to black. The different particle types are labeled with Greek letters. After [5]. which its spatial configuration repeats. The velocity of a particle is the number of sites it is shifted in space after exactly one temporal period, divided by the temporal periodicity. <p> The temporal periodicity of a particle is the number of time steps after with measured performance 1.0 on the synchronization task. After <ref> [5] </ref>. Domains are mapped to white, particles to black. The different particle types are labeled with Greek letters. After [5]. which its spatial configuration repeats. The velocity of a particle is the number of sites it is shifted in space after exactly one temporal period, divided by the temporal periodicity.
Reference: [6] <author> Hanson, J. E., and J. P. Crutchfield, </author> <title> "The attractor-basin portrait of a cellular automaton", </title> <journal> Journal of Statistical Physics 66 (5/6) (1992), </journal> <pages> 1415-1462. 6 </pages>
Reference-contexts: In this paper we focus on how these CAs implement the emergent computational strategies for performing a task. In particular, we develop a class of embedded-particle models to describe the computational strategies implemented by particular CAs. To do this, we use the computational mechanics framework of Crutch-field and Hanson <ref> [2, 6] </ref>, in which a CA's information processing is described in terms of regular domains, embedded particles, and their interactions. We then evaluate this class of models by comparing their computational performance to that of the CAs they model. <p> Crutchfield and Hanson developed a method for detecting and analyzing the "intrinsic" computational components in the CA's space-time behavior in terms of regular domains, particles, and particle interactions <ref> [2, 6] </ref>. This method is part of their computational mechanics framework for understanding information processing embedded in physical systems [1]. Briefly, a regular domain is a homogeneous region of space-time in which the same "pattern" appears.
References-found: 6

