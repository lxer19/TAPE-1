URL: http://www.cs.uni-bonn.de/~cully/PUBLICATIONS/Dissertation.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~cully/research1.html
Root-URL: http://cs.uni-bonn.de
Title: Weak Autoepistemic Reasoning A Study in Autoepistemic Reasoning from a Logic Programming Perspective Inauguraldissertation zur  
Author: Erlangung der Doktorwurde der der Rheinischen Friedrich-Wilhelms-Universitat Bonn vorgelegt von Jurgen Kalinski 
Date: 1994  
Affiliation: Mathematisch-Naturwissenschaftlichen Fakultat  Bonn  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Krzysztof Apt. </author> <title> Logic programming. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 493-574. </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference: [2] <author> Krzysztof Apt, Howard A. Blair, and Adrian Walker. </author> <title> Towards a theory of declarative knowledge. </title> <booktitle> In Minker [70], </booktitle> <pages> pages 89-148. </pages>
Reference: [3] <author> Chitta Baral and V. S. Subrahmanian. </author> <title> Dualities between alternative semantics for logic programming and nonmonotonic reasoning. </title> <booktitle> In LPNMR91 [62], </booktitle> <pages> pages 69-86. </pages>
Reference-contexts: Corollary 6.9 Let A be a set of normal rules and P the corresponding normal logic program. Then the atomic beliefs and disbeliefs of lfp (R A ) coincide with the true and false atoms of the well-founded model of P . Proof Baral and Subrahmanian (cf. <ref> [3] </ref>) as well as Van Gelder (cf. [105]) in a somewhat different notation have already proved that the well-founded model of P can be rephrased in terms of lfp (T + P ) and gfp (T + 2 ). The claim follows from their observation together with Theorem 6.7. 6.1. <p> Subrahmanian (cf. <ref> [3] </ref>) establish the result that the well-founded model corresponds to the pair consisting of the least and great est fixpoint of T + P , i.e. to the cycle of Figure 8.1. In the well-founded model both p and q are undefined, s is false and t true. <p> the well-founded semantics on normal programs. 8.6 Well-Founded Autoepistemic Reasoning It has already been mentioned in Corollary 6.9 that the definition of the well-founded model of a normal logic program in terms of lfp (T + P ) and gfp (T + 2 been given by Baral and Subrahmanian in <ref> [3] </ref>. Whereas their basic motivation is not too far from ours, their concepts are quite different. <p> They do not consider its generalization to disjunctive programs and do not realize that in this case a completely analogous formulation can be based on T _+ P . When Baral and Subrahmanian try to generalize their observation they introduce the notion of kernel expansion classes <ref> [3] </ref>. We already discussed the differences between this concept and weak autoepistemic reasoning in Chapter 4. Let G A (S) := Cn 0 (AnS). They show that a distinguished kernel expansion class is given by f lfp (G 2 A ); gfp (G 2 A ) g. <p> INTERPRETERS 163 Chapter 4 demonstrates that kernel expansion classes are not sound with respect to Autoepistemic Logic. Baral and Subrahmanian explicitly deny the existence of a sound well-founded generalization (cited from <ref> [3, p. 79] </ref>, their operator I A is our T A ): The above example can be easily extended to show that I 2 A is not monotonic. Hence, we cannot define well-founded semantics for au-toepistemic theories based on least and greatest fixpoints of I A .
Reference: [4] <author> Chitta R. Baral and V. S. Subrahmanian. </author> <title> Stable and extension class theory for logic programs and default logics. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 8 </volume> <pages> 345-366, </pages> <year> 1992. </year>
Reference-contexts: Whereas their basic motivation is not too far from ours, their concepts are quite different. In their study of normal logic programs in <ref> [4] </ref> they introduce the notion of a stable class of a normal logic program P which is a set S of interpretations such that S = f T + They state that f lfp (T + P ); gfp (T + 2 ) g is a stable class of P which
Reference: [5] <author> A. Baumewerd-Ahlmann, J. Kalinski, P. Jaschek, and H. Lehmkuhl. </author> <title> Embedding explanations into model-based knowledge engineering. </title> <booktitle> In Proc. of the 1st Int. Conf. on Knowledge Modeling and Expertise Transfer, </booktitle> <pages> pages 269-284. </pages> <publisher> IOS Press, </publisher> <year> 1991. </year>
Reference: [6] <author> A. Baumewerd-Ahlmann, J. Kalinski, P. Jaschek, and H. Lehmkuhl. </author> <title> Using KADS for generating explanations in environmental impact assessment. </title> <booktitle> In Proc. of the 4th Int. Conf. on Human-Computer Interaction, </booktitle> <pages> pages 866-870. </pages> <publisher> Elsevier, </publisher> <year> 1991. </year>
Reference: [7] <author> Annegret Baumewerd-Ahlmann and Jurgen Kalinski. </author> <title> Structuring techniques for knowledge-based planning systems in environmental impact assessment. </title> <booktitle> In Proc. of the 1st Int. Conf. on Expert Planning Systems, </booktitle> <pages> pages 257-261. </pages> <publisher> Institution of Electrical Engineers, </publisher> <year> 1990. </year>
Reference: [8] <author> Nuel D. Belnap. </author> <title> How a computer should think. </title> <editor> In Gilbert Ryle, editor, </editor> <booktitle> Contemporary Aspects of Philosophy, </booktitle> <pages> pages 30-56. </pages> <publisher> Oriel Press, </publisher> <year> 1976. </year>
Reference-contexts: Belnap (see <ref> [8] </ref>). 9 For appropriately modified notions of belief states see [56]. 138 CHAPTER 6.
Reference: [9] <author> Piero A. Bonatti. </author> <title> Beliefs as stable conjectures. </title> <booktitle> In LPNMR91 [62], </booktitle> <pages> pages 53-68. 172 BIBLIOGRAPHY </pages>
Reference-contexts: To the opposite, the former is a special case of the latter. Furthermore, Baral and Subrahmanian discuss stable classes of normal programs and kernel expansion classes as entirely distinct cases. They do not mention that for normal rules the latter is uniquely determined by the former. Bonatti's approach (cf. <ref> [9] </ref>) is based on cycles of non-monotonic progressions of theories. In a nutshell he states that for every belief state S iterative applications of T A starting from S end up in some cycle.
Reference: [10] <author> Piero A. Bonatti. </author> <title> A family of three-valued autoepistemic logics. </title> <editor> In E. Ardiz-zone, S. Gaglio, and F. Sorbello, editors, </editor> <booktitle> Trends in Artificial Intelligence, Proc. of the 2nd Congress of the Italian Association for Artificial Intelligence, </booktitle> <pages> pages 28-37. </pages> <booktitle> Springer, Lecture Notes in Artificial Intelligence 549, </booktitle> <year> 1991. </year>
Reference: [11] <author> Kenneth A. Bowen and Robert A. Kowalski. </author> <title> Amalgamating language and metalanguage in logic programming. </title> <editor> In K. L. Clark, editor, </editor> <booktitle> Logic Programming, </booktitle> <pages> pages 153-172. </pages> <publisher> Academic Press, </publisher> <year> 1982. </year>
Reference: [12] <author> Stefan Bra. </author> <title> Defaults in deduktiven Datenbanken. </title> <type> PhD thesis, </type> <institution> Universitat Hannover, </institution> <year> 1992. </year>
Reference-contexts: But from a conceptual viewpoint Default and Autoepis-temic Logic differ in that the former is based on the notions of inference rules and consistency and the latter on axioms and the belief state metaphor. Brass for example (cf. <ref> [12] </ref> and [13]) studies so-called supernormal defaults : fl in the realm of deductive databases (corresponding to : L :fl ! fl). His definition of maximal extensions (consistent sets of formulas which subsume a maximal number of default rules) is rather natural in the setting of Default Logic. <p> We thus infer flies (b3) which | together with the eighth clause | derives :ostrich (b3). It was one of our objectives to avoid the application of modus tollens. As a consequence our understanding of strong negation has to be non-classical and our results differ from <ref> [12] </ref>. In a nutshell, supernormal defaults : fl=fl do not impose any restrictions on fl but require that the justification and conclusion of the default rule are identical.
Reference: [13] <author> Stefan Bra. </author> <title> On the semantics of supernormal defaults. </title> <booktitle> In IJCAI93 [34], </booktitle> <pages> pages 578-583. </pages>
Reference-contexts: But from a conceptual viewpoint Default and Autoepis-temic Logic differ in that the former is based on the notions of inference rules and consistency and the latter on axioms and the belief state metaphor. Brass for example (cf. [12] and <ref> [13] </ref>) studies so-called supernormal defaults : fl in the realm of deductive databases (corresponding to : L :fl ! fl). His definition of maximal extensions (consistent sets of formulas which subsume a maximal number of default rules) is rather natural in the setting of Default Logic.
Reference: [14] <author> Brian F. Chellas. </author> <title> Modal Logic | An Introduction. </title> <publisher> Cambridge University Press, </publisher> <year> 1980. </year>
Reference: [15] <author> Weidong Chen, Terrance Swift, and David S. Warren. </author> <title> Efficient top-down computation of queries under the well-founded semantics. </title> <type> Technical Report 93-CSE-33, </type> <institution> Southern Methodist University, Department of Computer Science and Engineering, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: In fact in its current version it cannot be combined with alternative approximation procedures, as it is inherently based on OLDT-trees instead of proof trees. 3 In <ref> [15] </ref> Chen, Swift and War ren propose SLG-resolution which does not suffer from this weakness. Interestingly, the difference between OLDT-trees and proof trees also can be identified as the underlying culprit of an incorrectness in Van Gelder's tortoise-and-hare algorithm pointed out by Dimiter Skordev in [97].
Reference: [16] <author> K. L. Clark. </author> <title> Negation as failure. </title> <booktitle> In Gallaire and Minker [21], </booktitle> <pages> pages 293-322. </pages>
Reference: [17] <author> A.B. Cremers, U. Griefahn, and R. Hinze. </author> <title> Deduktive Datenbanken | Eine Einfuhrung aus der Sicht der Logischen Programmierung. </title> <publisher> Vieweg, </publisher> <year> 1994. </year>
Reference-contexts: The benefits of mixed evaluation techniques like the magic-sets method or tabling must be analyzed and compared in the context of real world applications. The implications of syntactic restrictions which are already well-known in the realm of deductive databases (e.g. allowedness, for a survey see <ref> [17] </ref>) will also have to be studied in more detail. Weak autoepistemic reasoning as presented in this dissertation is built on top of a rather simple representation language. For practical purposes it should certainly be extended by inheritance features.
Reference: [18] <author> B.A. Davey and H.A. Priestley. </author> <title> Introduction to Lattices and Order. </title> <publisher> Cam-bridge University Press, </publisher> <year> 1990. </year>
Reference: [19] <editor> J. Dix, K.P. Jantke, and P.H. Schmitt, editors. </editor> <booktitle> Proc. of the 1st Int. Workshop on Nonmonotonic and Inductive Logic. Springer, Lecture Notes in Artificial Intelligence 543, </booktitle> <year> 1991. </year>
Reference: [20] <author> Melvin Fitting. </author> <title> A Kripke-Kleene semantics for logic programs. </title> <journal> Journal of Logic Programming, </journal> <volume> 2 </volume> <pages> 295-312, </pages> <year> 1985. </year>
Reference: [21] <editor> H. Gallaire and J. Minker, editors. </editor> <title> Logic and Databases. </title> <publisher> Plenum Press, </publisher> <year> 1978. </year>
Reference: [22] <author> Michael Gelfond. </author> <title> On stratified autoepistemic theories. </title> <booktitle> In Proc. of the 6th National Conf. on Artificial Intelligence, </booktitle> <pages> pages 207-211, </pages> <year> 1987. </year>
Reference: [23] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> The stable model semantics for logic programming. </title> <booktitle> In ICLP88 [30], </booktitle> <pages> pages 1070-1080. BIBLIOGRAPHY 173 </pages>
Reference: [24] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Logic programs with classical negation. </title> <booktitle> In ICLP90 [31], </booktitle> <pages> pages 579-597. </pages>
Reference-contexts: But once the step is made, both concepts can be combined in a very natural way: Chapter 7 incorporates yet another approximation motivated by operational aspects. 8.5 Strong Negation Both <ref> [24] </ref> and [47] present extensions of logic programs by classical negation. Both approaches, however, are extensions of the stable model semantics. The 162 CHAPTER 8. RELATED WORK very same reasons which convinced us to dismiss the latter (cf. Chapter 4) can be used as counterarguments against these two approaches again.
Reference: [25] <author> G. Gottlob. </author> <title> The power of beliefs or translating default logic into standard autoepistemic logic. </title> <booktitle> In IJCAI93 [34], </booktitle> <pages> pages 570-575. </pages>
Reference: [26] <author> Joseph Y. Halpern and Yoram Moses. </author> <title> Towards a theory of knowledge and ignorance: Preliminary report. </title> <editor> In Krzysztof R. Apt, editor, </editor> <booktitle> Logics and Models of Concurrent Systems, </booktitle> <pages> pages 459-476. </pages> <publisher> Springer, </publisher> <year> 1985. </year>
Reference: [27] <author> Jaakko Hintikka. </author> <title> Knowledge and Belief. </title> <publisher> Cornell University Press, </publisher> <year> 1962. </year>
Reference: [28] <author> G. E. Hughes and M. J. Cresswell. </author> <title> An Introduction to Modal Logic. </title> <publisher> Methuen, </publisher> <year> 1968. </year>
Reference: [29] <author> G. E. Hughes and M. J. Cresswell. </author> <title> A Companion to Modal Logic. </title> <publisher> Methuen, </publisher> <year> 1984. </year>
Reference: [30] <editor> Proc. </editor> <booktitle> of the 5th Int. Conf. and Symp. on Logic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [31] <editor> Proc. </editor> <booktitle> of the 7th Int. Conf. on Logic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [32] <editor> Proc. </editor> <booktitle> of the 8th Int. Conf. on Logic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [33] <editor> Proc. </editor> <booktitle> of the 12th Int. Joint Conf. on Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference: [34] <editor> Proc. </editor> <booktitle> of the 13th Int. Joint Conf. on Artificial Intelligence, </booktitle> <year> 1993. </year>
Reference: [35] <author> Tomi Janhunen. </author> <title> Weakened negative introspection in autoepistemic reasoning. Technical Report Series A, No. </title> <type> 21, </type> <institution> Helsinki University of Technology, Digital Systems Laboratory, </institution> <month> February </month> <year> 1993. </year>
Reference: [36] <author> Tomi Janhunen and Ilkka Niemela. </author> <title> A scheme for weakened negative introspection in autoepistemic reasoning. </title> <editor> In G. Gottlob, A. Leitsch, and D. Mundici, editors, </editor> <booktitle> Computational Logic and Proof Theory, Proc. of the 3rd Kurt Godel Colloqium, </booktitle> <pages> pages 211-222. </pages> <booktitle> Springer, Lecture Notes in Artificial Intelligence 713, </booktitle> <year> 1993. </year>
Reference: [37] <author> Jurgen Kalinski. </author> <title> Autoepistemic expansions with incomplete belief introspection. </title> <editor> In Dix et al. </editor> <volume> [19], </volume> <pages> pages 223-232. </pages>
Reference: [38] <author> H. A. Kautz and B. Selman. </author> <title> Hard problems for simple default logics. </title> <booktitle> In KR89 [48], </booktitle> <pages> pages 189-197. </pages>
Reference: [39] <author> Henry Kautz and Bart Selman. </author> <title> A general framework for knowledge compilation. </title> <editor> In H. Boley and M.M. Richter, editors, </editor> <booktitle> Proc. of the Int. Workshop Processing Declarative Knowledge, </booktitle> <pages> pages 287-300. </pages> <booktitle> Springer, Lecture Notes in Artificial Intelligence 567, </booktitle> <year> 1991. </year> <note> 174 BIBLIOGRAPHY </note>
Reference-contexts: Then: 3 In <ref> [39] </ref> they shortly sketch the first-order case. 4 Caution: In order to remain consistent with our previous notation, we regard the logically weaker theory as a lower bound, whereas it is called an upper bound in Selman's and Kautz's model-theoretic perspective. 126 CHAPTER 6. QUERY EVALUATION 1. <p> Our approach is the only one where disjunctive rules and strong negation are treated in complete analogy to normal rules, i.e. by intertwining the corresponding immediate consequence operator with one and the same alternation procedure. 8.4 Knowledge Compilation Kautz and Selman confine their studies <ref> [39] </ref> and [96] to monotonic logics. To our knowledge our approach is the first which combines knowledge compilation with autoepistemic reasoning. In fact the idea of a constructive approximation of expansions seems to be an indispensable prerequisite for the application of further optimization and approximation techniques.
Reference: [40] <author> David B. Kemp, Divesh Srivastava, and Peter J. Stuckey. </author> <title> Magic sets and bottom-up evaluation of well-founded models. </title> <booktitle> In Proc. of the Int. Symp. on Logic Programming, </booktitle> <pages> pages 337-354, </pages> <address> San Diego, USA, 1991. </address> <publisher> MIT Press. </publisher>
Reference-contexts: And even for rules only two of the progressions are insightful, namely those starting with the smallest and the greatest belief state (Theorem 5.28). 8.7 Interpreters Kemp, Srivastava and Stuckey <ref> [40] </ref> present a bottom-up computation of the well-founded semantics in the spirit of the magic-set transformation. The major problem here is that the computation of gfp (T + P ) produces too big intermediate results. In [109] D.S.
Reference: [41] <author> Donald E. Knuth. </author> <booktitle> The Art of Computer Programming, volume 2: Seminu-merical Algorithms. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1969. </year>
Reference-contexts: For such predicates the handling of untight subgoals in max_solve will then be the same as in min_solve. 7.3.3 Tortoise-and-Hare Technique An alternative technique for the detection of untight subgoals can be based on Exercise 3.1.6 of Knuth's "Art of Computer Programming" (cf. <ref> [41, p. 7] </ref>). 4 4 Knuth mentions an application for loop-detection in random number generators. 152 CHAPTER 7.
Reference: [42] <author> Phokion G. Kolaitis. </author> <title> The expressive power of stratified logic programs. </title> <journal> Information and Computation, </journal> <volume> 90 </volume> <pages> 50-66, </pages> <year> 1991. </year>
Reference: [43] <author> Kurt Konolige. </author> <title> Hierarchic autoepistemic theories for nonmonotonic reasoning. </title> <booktitle> In Proc. of the 7th National Conf. on Artificial Intelligence, </booktitle> <pages> pages 439-443, </pages> <year> 1988. </year>
Reference: [44] <author> Kurt Konolige. </author> <title> On the relation between default and autoepistemic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 733-742, </pages> <year> 1988. </year>
Reference-contexts: INTERPRETERS Chapter 8 Related Work 8.1 Default Logic The relation between Default (cf. [92]) and Autoepistemic Logic has been analyzed by Konolige in <ref> [44] </ref> and Marek and Truszczynski in [64]. Their studies reveal under which conditions there is a simple translation of autoepistemic formulas into default rules and vice versa.
Reference: [45] <author> R. Kowalski. </author> <title> Algorithm = logic + control. </title> <journal> Communications of the ACM, </journal> <volume> 22 </volume> <pages> 424-436, </pages> <year> 1979. </year>
Reference: [46] <author> Robert A. Kowalski. </author> <title> Predicate logic as a programming language. </title> <booktitle> In Information Processing, </booktitle> <pages> pages 569-574. </pages> <publisher> North-Holland, </publisher> <year> 1974. </year>
Reference: [47] <author> Robert A. Kowalski and Fariba Sadri. </author> <title> Logic programs with exceptions. </title> <booktitle> In ICLP90 [31], </booktitle> <pages> pages 598-613. </pages>
Reference-contexts: But once the step is made, both concepts can be combined in a very natural way: Chapter 7 incorporates yet another approximation motivated by operational aspects. 8.5 Strong Negation Both [24] and <ref> [47] </ref> present extensions of logic programs by classical negation. Both approaches, however, are extensions of the stable model semantics. The 162 CHAPTER 8. RELATED WORK very same reasons which convinced us to dismiss the latter (cf. Chapter 4) can be used as counterarguments against these two approaches again.
Reference: [48] <editor> Proc. </editor> <booktitle> of the 1st Int. Conf. on Principles of Knowledge Representation and Reasoning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference: [49] <author> Saul Kripke. </author> <title> Outline of a theory of truth. </title> <journal> Journal of Philosophy, </journal> <volume> 72 </volume> <pages> 690-716, </pages> <year> 1975. </year>
Reference-contexts: of the anamnesis have been stored in a database together with data about other patients 3 : exhibits ('Pat',symptom1) sex ('Pat',male) exhibits ('Belle',symptom1) sex ('Belle',female) 1 By Section 6.6 every set of rules can be translated into a set of disjunctive rules. 2 Kripke's "Outline of a Theory of Truth" <ref> [49] </ref> must be mentioned as another source of inspiration. Interestingly, there exist a number of related problems and solutions between truth theories and logic program semantics. 3 Yes, Pat has forgotten to mention his allergy again. 170 CHAPTER 9.
Reference: [50] <author> Saul A. Kripke. </author> <title> Semantical analysis of modal logic i: Normal modal propositional calculi. </title> <journal> Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 9 </volume> <pages> 67-96, </pages> <year> 1963. </year>
Reference: [51] <author> Saul A. Kripke. </author> <title> Semantical considerations on modal logic. </title> <journal> Acta Philosoph-ica Fennica, </journal> <volume> 16 </volume> <pages> 83-94, </pages> <year> 1963. </year>
Reference: [52] <author> Kenneth Kunen. </author> <title> Negation in logic programming. </title> <journal> Journal of Logic Programming, </journal> <volume> 4 </volume> <pages> 289-308, </pages> <year> 1987. </year>
Reference: [53] <author> Kenneth Kunen. </author> <title> Some remarks on the completed database. </title> <booktitle> In ICLP88 [30], </booktitle> <pages> pages 979-992. </pages>
Reference: [54] <author> Kienchung Kuo. </author> <title> Programming in autoepistemic logic. </title> <booktitle> In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 884-889, </pages> <year> 1991. </year> <note> BIBLIOGRAPHY 175 </note>
Reference-contexts: If for some predicate symbol the knowledge representation system must never believe in both a ground instantiation of p and its negation, this can be ensured by a syntactic restriction which has been called conservativeness by Kuo (cf. <ref> [54] </ref> who concentrates on normal stratified theories). The objective is to block the derivation of :p, whenever p is already believed (and vice versa). <p> Both approaches, however, are extensions of the stable model semantics. The 162 CHAPTER 8. RELATED WORK very same reasons which convinced us to dismiss the latter (cf. Chapter 4) can be used as counterarguments against these two approaches again. Kuo's motivation in <ref> [54] </ref> appears to be quite close to ours, namely to combine the virtues of Autoepistemic Logic and logic programming. Our approach, however, is more general than his one which is restricted to stratified theories. The two notions of weak and strong negation have also been analyzed by Wagner.
Reference: [55] <author> Gerhard Lakemeyer. </author> <title> Multi-Agent Autoepistemic Reasoning. </title> <note> Habilitation Thesis (to be published), </note> <year> 1994. </year>
Reference: [56] <author> Gerhard Lakemeyer and Hector J. Levesque. </author> <title> A tractable knowledge representation service with full introspection. </title> <booktitle> In Proc. of the 2nd Conference on Theoretical Aspects of Reasoning about Knowledge, </booktitle> <pages> pages 145-159. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: Belnap (see [8]). 9 For appropriately modified notions of belief states see <ref> [56] </ref>. 138 CHAPTER 6.
Reference: [57] <author> J.-L. Lassez and M. J. Maher. </author> <title> Closures and fairness in the semantics of programming logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 29 </volume> <pages> 167-184, </pages> <year> 1984. </year>
Reference: [58] <author> Hector J. Levesque. </author> <title> Knowledge representation and reasoning. </title> <booktitle> Annual Review of Computer Science, </booktitle> <volume> 1 </volume> <pages> 255-287, </pages> <year> 1986. </year>
Reference: [59] <author> Hector J. Levesque. </author> <title> All I know: A study in autoepistemic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 263-309, </pages> <year> 1990. </year>
Reference-contexts: introduction of the expansion operator as an iterative approximation of the set of all expansions. 1 For a counterexample see <ref> [59] </ref>. 5.3. EXPANSIONS AND EXPANSION OPERATORS 91 Expansion Operator: Let T be a set of objective belief states.
Reference: [60] <author> John W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer, </publisher> <address> 2nd edition, </address> <year> 1987. </year>
Reference: [61] <author> Jorge Lobo, Jack Minker, and Arcot Rajasekar. </author> <title> Foundations of Disjunctive Logic Programming. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: As even positive disjunctive programs are still subject to current research, it should be clear that a standard semantics for non-positive rules has not yet been established. A diversity of alternative approaches can be found in Lobo, Minker and Rajasekar's book <ref> [61] </ref>). Baral, Lobo and Minker's generalized well-founded semantics for example treats p q somewhat equivalent to p _ q.
Reference: [62] <editor> Proc. </editor> <booktitle> of the 1st Int. Workshop on Logic Programming and Non-monotonic Reasoning. </booktitle> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [63] <author> Wiktor Marek, Grigori Schwarz, and Miroslaw Truszczynski. </author> <title> Ranges of strong modal nonmonotonic logics. </title> <editor> In Dix et al. </editor> <volume> [19], </volume> <pages> pages 85-99. </pages>
Reference: [64] <author> Wiktor Marek and Miroslaw Truszczynski. </author> <title> Relating autoepistemic and default logics. </title> <booktitle> In KR89 [48], </booktitle> <pages> pages 276-288. </pages>
Reference-contexts: The smallest weak expansion can thus be written as h lfp (T 2 A ); gfp (T 2 Autoepistemic Logic behaves rather the opposite. 2 Theorem 5.30 (Marek/Truszczynski <ref> [64] </ref>) The autoepistemic expansions of a set of rules form an anti-chain. In further contrast to Autoepistemic Logic, a weak expansion exists for every set of rules and by Corollary 5.19 all of its members are consistent. <p> INTERPRETERS Chapter 8 Related Work 8.1 Default Logic The relation between Default (cf. [92]) and Autoepistemic Logic has been analyzed by Konolige in [44] and Marek and Truszczynski in <ref> [64] </ref>. Their studies reveal under which conditions there is a simple translation of autoepistemic formulas into default rules and vice versa. <p> Theorem 8.1 (Marek/Truszczynski <ref> [64] </ref>) For a set of rules autoepistemic expansions and default extensions coincide. So, it would be possible to reconstruct weak reasoning on rules within the framework of Default Logic.
Reference: [65] <author> Wiktor Marek and Miroslaw Truszczynski. </author> <title> Autoepistemic logic. </title> <journal> Journal of the ACM, </journal> <volume> 38(3) </volume> <pages> 588-619, </pages> <year> 1991. </year>
Reference: [66] <author> Wiktor Marek and Miroslaw Truszczynski. </author> <title> Computing intersection of au-toepistemic expansions. </title> <booktitle> In LPNMR91 [62], </booktitle> <pages> pages 37-50. </pages>
Reference: [67] <author> J. McCarthy. </author> <title> Circumscription | a form of non-monotonic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 27-39, </pages> <year> 1980. </year>
Reference: [68] <author> D. McDermott and J. Doyle. </author> <title> Non-monotonic logic i. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 41-72, </pages> <year> 1980. </year>
Reference: [69] <author> J. Minker. </author> <title> On indefinite databases and the closed world assumption. </title> <booktitle> In Proc. of the 6th Conf. on Automated Deduction, </booktitle> <pages> pages 292-308. </pages> <address> Springer, </address> <note> Lecture Notes in Computer Science 138, 1982. 176 BIBLIOGRAPHY </note>
Reference-contexts: Minker's generalized closed world assumption infers :p if and only if p is false in all minimal models of P (see <ref> [69] </ref>). It thereby deduces less negative information than weak reasoning does. Example 8.3 From penguin (b1) _ ostrich (b1) the generalized closed world assumption does not infer :ostrich (b1), from penguin (b1) _ ostrich (b1) together with penguin (b1) it does.
Reference: [70] <editor> Jack Minker, editor. </editor> <booktitle> Foundations of deductive databases and logic program-mming. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference: [71] <author> Jack Minker and Arcot Rajasekar. </author> <title> A fixpoint semantics for disjunctive logic programs. </title> <journal> Journal of Logic Programming, </journal> <volume> 9 </volume> <pages> 45-74, </pages> <year> 1990. </year>
Reference-contexts: Thereby we do not have to care about different syntactic denotations of equivalent disjunctions. We might expect a consequence operator for positive disjunctive programs (i.e. without occurrences of `') to be of crucial importance in this case. 2 Definition 6.16 (Minker/Rajasekar <ref> [71] </ref>) For a positive disjunctive logic program P the Minker consequence operator is the function on sets of disjunctions of atoms defined by T _ P (I) = f ffi j ffi a disjunction of atoms; fi p 1 ^ : : : ^ p n 2 [[P ]]; p i <p> QUERY EVALUATION Theorem 6.17 (Minker/Rajasekar <ref> [71] </ref>) Let P be a positive disjunctive logic program and ffi a disjunction of atoms. Then the following are equivalent: 1. ffi is a logical consequence of P . 2. <p> So what concerns the `relevant' part of S, we can confine our attention to minimal sets of disjunctions of atoms which do not contain a subclause of any of their members. Definition 6.19 (Minker/Rajasekar <ref> [71] </ref>) The disjunctive canonical set of an objective belief state S is defined as: can _ (S) = f ffi j ffi 2 S is a disjunction of atoms and ffi 0 62 S for all proper subclauses ffi 0 ( ffi g 6.2.
Reference: [72] <author> Robert C. Moore. </author> <title> Semantical considerations on nonmonotonic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 25(4) </volume> <pages> 75-94, </pages> <year> 1985. </year>
Reference: [73] <author> Robert C. Moore. </author> <title> Autoepistemic logic. </title> <editor> In P. Smets, A. Mamdani, D. Dubois, and H. Prade, editors, </editor> <booktitle> Non-Standard Logics for Automated Reasoning, </booktitle> <pages> pages 105-136. </pages> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference: [74] <author> Robert C. Moore. </author> <title> Autoepistemic logic revisited. </title> <journal> Artificial Intelligence, </journal> <volume> 59 </volume> <pages> 27-30, </pages> <year> 1993. </year>
Reference: [75] <author> Ilkka Niemela. </author> <title> Constructive tightly grounded autoepistemic reasoning. </title> <booktitle> In IJCAI91 [33], </booktitle> <pages> pages 399-404. </pages>
Reference: [76] <author> Ilkka Niemela. </author> <title> A unifying framework for nonmonotonic reasoning. </title> <booktitle> In Proc. of the 10th European Conf. on Artificial Intelligence, </booktitle> <pages> pages 334-338. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference: [77] <author> Ilkka Niemela and Jussi Rintanen. </author> <title> On the impact of stratification on the complexity of nonmonotonic reasoning. </title> <booktitle> In Proc. of the 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 627-638. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Figure 6.13). This scheme is not a necessary condition for efficiency. Theorem 4.35 together with Niemela and Rintanen's analysis in <ref> [77] </ref> shows that weak autoepistemic reasoning is also tractable for stratified knowledge bases, although the main results 136 CHAPTER 6.
Reference: [78] <author> Nils J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Springer, </publisher> <year> 1982. </year>
Reference: [79] <author> David Pearce and Gerd Wagner. </author> <title> Reasoning with negative information I: Strong negation in logic programs. </title> <type> Technical Report 4/89, </type> <institution> Freie Universitat Berlin, Gruppe fur Logik, Wissenstheorie und Information, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: Our approach, however, is more general than his one which is restricted to stratified theories. The two notions of weak and strong negation have also been analyzed by Wagner. His work (see <ref> [79] </ref>, [107], [108]) is based on `vivid logic'.
Reference: [80] <author> L. M. Pereira, J. N. Aparicio, and J. J. Alferes. </author> <title> Non-monotonic reasoning with well founded semantics. </title> <booktitle> In ICLP91 [32], </booktitle> <pages> pages 475-489. </pages>
Reference: [81] <editor> Proc. </editor> <booktitle> of the 8th Symp. on Principles of Database Systems, </booktitle> <year> 1989. </year>
Reference: [82] <editor> Proc. </editor> <booktitle> of the 9th Symp. on Principles of Database Systems, </booktitle> <year> 1990. </year>
Reference: [83] <author> Teodor Przymusinski. </author> <title> Perfect model semantics. </title> <booktitle> In ICLP88 [30], </booktitle> <pages> pages 1081-1096. </pages>
Reference: [84] <author> Teodor Przymusinski. </author> <title> Well-founded completions of logic programs. </title> <booktitle> In ICLP91 [32], </booktitle> <pages> pages 726-741. BIBLIOGRAPHY 177 </pages>
Reference: [85] <author> Teodor C. Przymusinski. </author> <title> Every logic program has a natural stratification and an iterated least fixed point model. </title> <booktitle> In PODS89 [81], </booktitle> <pages> pages 11-21. </pages>
Reference: [86] <author> Teodor C. Przymusinski. </author> <title> On the declarative and procedural semantics of logic programs. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 167-205, </pages> <year> 1989. </year>
Reference: [87] <author> Teodor C. Przymusinski. </author> <title> Three-valued formalizations of non-monotonic reasoning and logic programming. </title> <booktitle> In KR89 [48], </booktitle> <pages> pages 341-348. </pages>
Reference: [88] <author> Teodor C. Przymusinski. </author> <title> Stationary semantics for disjunctive logic programs and deductive databases. </title> <booktitle> In Proc. of the 1990 North American Conf. on Logic Programming, </booktitle> <pages> pages 40-59. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Weak reasoning leaves the belief status of all three atoms undetermined. 2 Ross as well as Przymusinski propose extensions of the well-founded semantics. Przymusinski's stationary semantics is clearly model-based (cf. <ref> [88] </ref>): It is one of his objectives to let it coincide with the minimal model semantics for positive disjunctive programs.
Reference: [89] <author> Teodor C. Przymusinski. </author> <title> Autoepistemic logics of closed beliefs and logic programming. </title> <booktitle> In LPNMR91 [62], </booktitle> <pages> pages 3-20. </pages>
Reference: [90] <author> A. Rajasekar, J. Lobo, and J. Minker. </author> <title> Weak generalized closed world assumption. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 293-307, </pages> <year> 1989. </year>
Reference-contexts: Weak reasoning derives : L ostrich (b1) in both cases. Rajasekar, Lobo and Minker's weak generalized closed world assumption substitutes every disjunctive rule by all of its Horn strengthenings (see <ref> [90] </ref>). If p is not implied by the resulting program, they infer :p. This approach can be compared with weak reasoning in the presence of knowledge compilation. Note that P 160 CHAPTER 8.
Reference: [91] <author> Raymond Reiter. </author> <title> On closed world databases. </title> <booktitle> In Gallaire and Minker [21], </booktitle> <pages> pages 55-76. </pages>
Reference-contexts: Both are invariant with respect to T + P and both are situated between the least and greatest fixpoint of T + P . 8.3 Disjunctive Logic Programs Let us first confine our comparison to positive disjunctive programs P . The closed world assumption (cf. <ref> [91] </ref>) infers :p for every atom not implied by P . As already mentioned in Chapter 2 this may lead to inconsistencies. The autoepistemic perspective infers : L p for the very same atoms thus preserving consistency.
Reference: [92] <author> Raymond Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 81-132, </pages> <year> 1980. </year>
Reference-contexts: INTERPRETERS Chapter 8 Related Work 8.1 Default Logic The relation between Default (cf. <ref> [92] </ref>) and Autoepistemic Logic has been analyzed by Konolige in [44] and Marek and Truszczynski in [64]. Their studies reveal under which conditions there is a simple translation of autoepistemic formulas into default rules and vice versa.
Reference: [93] <author> Raymond Reiter. </author> <title> Towards a logical reconstruction of relational database theory. </title> <editor> In M. L. Brodie, J. Mylopoulos, and J. W. Schmidt, editors, </editor> <booktitle> On Conceptual Modelling: Perspectives from Artificial Intelligence, Databases and Programming Languages, </booktitle> <pages> pages 191-238. </pages> <publisher> Springer, </publisher> <year> 1984. </year>
Reference: [94] <author> Kenneth A. Ross. </author> <title> The well founded semantics for disjunctive logic programs. </title> <booktitle> In Proc. of the 1st Int. Conf. on Deductive and Object-Oriented Databases, </booktitle> <pages> pages 385-402. </pages> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: KNOWLEDGE COMPILATION 161 As non-flyer (b3) is not false in every minimal model, the stationary semantics will in contrast to weak reasoning not infer that b3 flies. Ross conjectures that there is no simple generalization to disjunctive programs of the bottom-up definition of the well-founded semantics (see <ref> [94] </ref>). He therefore proposes three top-down procedures. The next example illustrates the basic idea. Example 8.7 In the context of p _ q s q Ross argues that he expects p and q (and thereby r and s) to be undefined, as it is not known which of them holds.
Reference: [95] <author> John S. Schlipf. </author> <title> The expressive powers of the logic programming semantics | extended abstract. </title> <booktitle> In PODS90 [82], </booktitle> <pages> pages 196-204. </pages>
Reference: [96] <author> Bart Selman and Henry Kautz. </author> <title> Knowledge compilation using Horn approximations. </title> <booktitle> In Proc. of the 9th National Conf. on Artificial Intelligence, </booktitle> <pages> pages 904-909, </pages> <year> 1991. </year>
Reference-contexts: Hence, the whole weak objective expansion can be reconstructed from the knowledge of the canonical subsets as given in Theorem 6.25. 6.3 Knowledge Compilation In Selman's and Kautz's approach (see <ref> [96] </ref>) knowledge may be specified in the form of an arbitrary propositional theory which is then `compiled' into a logically weaker and a logically stronger Horn theory. Many queries can already be answered on the basis of these approximations, where satisfiability can be checked 6.3. <p> COMPILATION OF DISJUNCTIVE PROGRAMS 131 strengthening as an upper bound. 5 Likewise, A without its non-normal rules can be taken as a lower bound. 6 The major difference between Algorithm 2 and its origin in <ref> [96] </ref> consists in the last for-statement. It must be added in the non-propositional case, as it may happen that the while-loop creates a new rule which is non-normal but which has normal instantiations. <p> Our approach is the only one where disjunctive rules and strong negation are treated in complete analogy to normal rules, i.e. by intertwining the corresponding immediate consequence operator with one and the same alternation procedure. 8.4 Knowledge Compilation Kautz and Selman confine their studies [39] and <ref> [96] </ref> to monotonic logics. To our knowledge our approach is the first which combines knowledge compilation with autoepistemic reasoning. In fact the idea of a constructive approximation of expansions seems to be an indispensable prerequisite for the application of further optimization and approximation techniques.
Reference: [97] <author> Dimiter Skordev. </author> <title> Short note: On Van Gelder's loop detection algorithm. </title> <journal> Journal of Logic Programming, </journal> <volume> 14 </volume> <pages> 181-183, </pages> <year> 1992. </year>
Reference-contexts: Interestingly, the difference between OLDT-trees and proof trees also can be identified as the underlying culprit of an incorrectness in Van Gelder's tortoise-and-hare algorithm pointed out by Dimiter Skordev in <ref> [97] </ref>.
Reference: [98] <author> Hsiao Tamaki and Taisuke Sato. </author> <title> OLD resolution with tabulation. </title> <editor> In Ehud Shapiro, editor, </editor> <booktitle> Proc. of the 3rd Int. Conf. on Logic Programming, </booktitle> <pages> pages 84-98. </pages> <address> Springer, </address> <note> Lecture Notes in Computer Science 225, 1986. 178 BIBLIOGRAPHY </note>
Reference-contexts: INTERPRETERS OLDT-resolution as proposed by Tamaki and Sato in <ref> [98] </ref> solves exactly this problem. It can be used as a sound, complete and terminating procedure for definite Datalog programs. Such an interpreter will then only have to be duplicated as outlined in the propositional case in order to handle negative literals.
Reference: [99] <author> Alfred Tarski. </author> <title> A lattice-theoretical fixpoint theorem and its applications. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 5 </volume> <pages> 285-309, </pages> <year> 1955. </year>
Reference: [100] <author> Witold Lukaszewicz. </author> <title> Non-Monotonic Reasoning | Formalization of Com-mensense Reasoning. </title> <publisher> Ellis Horwood, </publisher> <year> 1990. </year>
Reference: [101] <author> M. H. van Emden and R. A. Kowalski. </author> <title> The semantics of predicate logic as a programming language. </title> <journal> Journal of the ACM, </journal> <volume> 23(4) </volume> <pages> 733-742, </pages> <year> 1976. </year>
Reference: [102] <author> A. Van Gelder, K. A. Ross, and J. S. Schlipf. </author> <title> The well-founded semantics for general logic programs. </title> <journal> Journal of the ACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year>
Reference-contexts: Corollary 6.13 Let A be a set of normal rules. The computation of the atomic beliefs and disbeliefs of the smallest weak expansion is quadratic in the size of A. Proof Follows from Corollary 6.9 and <ref> [102] </ref>. Example 6.14 Returning to Example 4.27 with A consisting of : L p ! q; : L p ! r; it is now possible to determine the smallest weak expansion. Let B P denote the collection of all three atomic propositions.
Reference: [103] <author> Allen Van Gelder. </author> <title> Efficient loop detection in Prolog using the tortoise-and-hare technique. </title> <journal> Journal of Logic Programming, </journal> <volume> 4 </volume> <pages> 23-32, </pages> <year> 1987. </year>
Reference-contexts: In solve2 it moves: The leading element is removed from the ancestor list, before it is passed to solve1. We will not go into details here, but only mention that this loop detection technique can also be combined with weak reasoning: Whenever 5 The terminology is borrowed from <ref> [103] </ref>. 154 CHAPTER 7. INTERPRETERS an untight subgoal is detected during the evaluation of A, min_solve returns the empty answer set and max_solve returns A.
Reference: [104] <author> Allen Van Gelder. </author> <title> Negation as failure using tight derivations for general logic programs. </title> <booktitle> In Minker [70], </booktitle> <pages> pages 149-176. </pages>
Reference-contexts: One might suppose that there is an equivalent query evaluation procedure where no subcomputation is done twice. Definition 7.1 (Van Gelder <ref> [104] </ref>) A proof tree is called tight if it is complete and no two nodes on a branch are labeled with the same atom. Obviously, every tight proof tree is finite and there are only finitely many tight proof trees for every atom.
Reference: [105] <author> Allen Van Gelder. </author> <title> The alternating fixpoint of logic programs with negation. </title> <booktitle> In PODS89 [81], </booktitle> <pages> pages 1-10. </pages>
Reference-contexts: Then the atomic beliefs and disbeliefs of lfp (R A ) coincide with the true and false atoms of the well-founded model of P . Proof Baral and Subrahmanian (cf. [3]) as well as Van Gelder (cf. <ref> [105] </ref>) in a somewhat different notation have already proved that the well-founded model of P can be rephrased in terms of lfp (T + P ) and gfp (T + 2 ). The claim follows from their observation together with Theorem 6.7. 6.1. <p> the literature can easily be seen to coincide with the above procedures for lfp (T + P ) and gfp (T + 2 consisting of : L s ! t : L q ! p the different procedures are depicted in Figure 8.1. * Van Gelder's alternating fixpoint procedure (cf. <ref> [105] </ref> 1 ) computes the great est fixpoint of T + P : His procedure starts in the upper left corner of Fig ure 8.1 and by applications of T + P ends up in the top element of the cycle on the right. <p> is a set S of interpretations such that S = f T + They state that f lfp (T + P ); gfp (T + 2 ) g is a stable class of P which characterizes the well-founded model of P and point out that Van Gelder's alternating fixpoint procedure <ref> [105] </ref> describes the same result in a different notation. All three, however, focus on the case of normal programs. Their formalisms are defined in terms of models instead of belief states.
Reference: [106] <author> Allen Van Gelder. </author> <title> Short note: Van Gelder's response. </title> <journal> Journal of Logic Programming, </journal> <volume> 14:185, </volume> <year> 1992. </year>
Reference-contexts: Our algorithm works correctly on Skordev's examples, thereby refuting his claim ([97, p. 182]) that : : : the main problem with the loop-detection method : : : is that only first subgoals are compared : : : and affirming Van Gelder's response (see <ref> [106] </ref>) that his basic idea has been correct. It has already been mentioned in Chapter 3 that there is no deep difference between the well-founded and the Fitting-Kunen semantics 4 , whereas both differ significantly from the stable model semantics.
Reference: [107] <author> Gerd Wagner. </author> <title> A database needs two kinds of negation. </title> <editor> In B. Thal-heim, J. Demetrovics, and H.-D. Gerhardt, editors, </editor> <booktitle> Proc. of the 3rd Symp. on Mathematical Fundamentals of Database and Knowledge Base Systems, </booktitle> <pages> pages 357-371. </pages> <booktitle> Springer, Lecture Notes in Computer Science 495, </booktitle> <year> 1991. </year>
Reference-contexts: Our approach, however, is more general than his one which is restricted to stratified theories. The two notions of weak and strong negation have also been analyzed by Wagner. His work (see [79], <ref> [107] </ref>, [108]) is based on `vivid logic'.
Reference: [108] <editor> Gerd Wagner. Ex contradictione nihil sequitur. </editor> <booktitle> In IJCAI91 [33], </booktitle> <pages> pages 538-543. </pages>
Reference-contexts: Our approach, however, is more general than his one which is restricted to stratified theories. The two notions of weak and strong negation have also been analyzed by Wagner. His work (see [79], [107], <ref> [108] </ref>) is based on `vivid logic'.
Reference: [109] <author> David Scott Warren. </author> <title> Computing the well-founded semantics of logic programs. </title> <type> Technical Report 91/12, </type> <institution> SUNY at Stony Brook, Computer Science Department, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: The major problem here is that the computation of gfp (T + P ) produces too big intermediate results. In <ref> [109] </ref> D.S. Warren describes a top-down interpreter which is different from ours in two aspects: 164 CHAPTER 8. RELATED WORK * His implementation is based on a three-valued formalization of the well-founded semantics. Our approach is essentially based in a duplicated standard interpreter.

References-found: 109

