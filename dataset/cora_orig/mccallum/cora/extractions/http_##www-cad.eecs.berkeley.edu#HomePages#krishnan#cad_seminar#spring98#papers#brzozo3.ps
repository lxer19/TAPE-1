URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/spring98/papers/brzozo3.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/spring98/abstract/brzozowski.html
Root-URL: http://www.cs.berkeley.edu
Title: A FORMALIZATION OF SHESTAKOV'S DECOMPOSITION  
Author: J. J. Lou and J. A. Brzozowski 
Address: Waterloo, Ontario Canada N2L 3G1  
Affiliation: Department of Computer Science University of Waterloo  
Abstract: Research Report CS-98-03 February 25, 1998 ABSTRACT We consider two methods for the decomposition of Boolean and multi-valued functions into functions with fewer arguments. Shestakov's method (which we call double decomposition) expresses a function f (x 1 ; : : : ; x n ) as a composite function h(g 1 (u 1 ; : : :; u r ); g 2 (v 1 ; : : : ; v s )), where the union of U = fu 1 ; : : : ; u r g and V = fv 1 ; : : : ; v s g is the set X = fx 1 ; : : :; x n g. The independently developed method of Luba and Selvaraj (which we call single decomposition) expresses a function f (x 1 ; : : : ; x n ) as a composite function h(u 1 ; : : :; u r ; g(v 1 ; : : :; v s )). The latter method has been formalized by Brzozowski and Luba using "blankets," which are generalizations of set systems. In this paper, we use the same blanket approach to formalize Shestakov's decomposition method. We compare the two methods, and verify that double decomposition is equivalent to two steps of single decomposition. Recently, Brzozowski and Lou extended the single decomposition methods to multi-valued functions. Using the same approach, we also extend Shestakov's method to the multi-valued case. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. L. Ashenhurst, </author> <title> The Decomposition of Switching Functions, </title> <booktitle> Proc. of International Symp. Theory of Switching Functions, </booktitle> <year> 1959. </year>
Reference: 2. <author> J. A. Brzozowski and J. J. Lou, </author> <title> Blanket algebra for multiple-valued function decomposition, </title> <institution> manuscript available at http://maveric0.uwaterloo.ca/publication.html, Department of Computer Science, University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <month> June </month> <year> 1997, </year> <note> to be published by World Scientific. </note>
Reference-contexts: The method of Luba and Selvaraj has been formalized by Brzozowski and Luba in [3], and extended to the multi-valued case by Brzozowski and Lou in <ref> [2] </ref>. In this paper, we formalize Shestakov's method using blanket algebra as it is described in [3], and also extend it to the multi-valued case. <p> In this paper, we formalize Shestakov's method using blanket algebra as it is described in [3], and also extend it to the multi-valued case. The reader is assumed to be familiar with the work in <ref> [2, 3] </ref>; here we give only a very brief summary of the main ideas in those papers. The following statements are given only informally; they are defined below. <p> The proof of this theorem is similar to the proof of the corresponding theorem in <ref> [2] </ref> and is omitted. Consider the set function f specified by Table 12.
Reference: 3. <author> J. A. Brzozowski and T. Luba, </author> <title> Decomposition of Boolean Functions Specified by Cubes, </title> <institution> Research Report CS-97-01, Department of Computer Science, University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: 1. Introduction Decomposition of Boolean and multi-valued functions has been studied by many authors since the 1950's [1-11]. For a more detailed discussion of this work and its applications see <ref> [3] </ref>. The present paper is concerned mainly with the methods of Luba and Selvaraj [7] and Shestakov [10, 11]. We use the following conventions. <p> The method of Luba and Selvaraj has been formalized by Brzozowski and Luba in <ref> [3] </ref>, and extended to the multi-valued case by Brzozowski and Lou in [2]. In this paper, we formalize Shestakov's method using blanket algebra as it is described in [3], and also extend it to the multi-valued case. <p> The method of Luba and Selvaraj has been formalized by Brzozowski and Luba in <ref> [3] </ref>, and extended to the multi-valued case by Brzozowski and Lou in [2]. In this paper, we formalize Shestakov's method using blanket algebra as it is described in [3], and also extend it to the multi-valued case. The reader is assumed to be familiar with the work in [2, 3]; here we give only a very brief summary of the main ideas in those papers. The following statements are given only informally; they are defined below. <p> In this paper, we formalize Shestakov's method using blanket algebra as it is described in [3], and also extend it to the multi-valued case. The reader is assumed to be familiar with the work in <ref> [2, 3] </ref>; here we give only a very brief summary of the main ideas in those papers. The following statements are given only informally; they are defined below. <p> By convention, to simplify matrix M we leave out any row which has (E; : : : ; E) (m Es) as its output. In the following, we briefly give the definitions and notation used in connection with blankets; for more details see <ref> [3] </ref>. A blanket on a set S is a collection fi = fB 1 ; : : : ; B k g of nonempty and distinct subsets of S, called blocks, whose union is S. <p> 1 (b U ) 2 p , g 2 (b V ) 2 q , the vector (g 1 (b U ); g 2 (b V )) is relevant to h, and f (b) h (g 1 (b U ); g 2 (b V )): (1) The separation described in <ref> [3] </ref> is a special case of the above separation where function g 1 is the identity function. Definition 3.2. Under the conditions stated above, let W be a subset of X with k elements. Let g be a Boolean function with k inputs. <p> Proof. Suppose fi g 1 and fi g 2 satisfying the conditions of the theorem are given. Following the method in <ref> [3] </ref>, we can construct g 1 and g 2 from fi g 1 and fi g 2 , respectively. See the examples in Section 4 for more details. Next we construct the truth table for a function h with p+q inputs and m outputs. <p> Thus we know that T t2B t " exists. Assign h (x) this value. The proof that the above construction is correct closely follows the proof in <ref> [3] </ref> and is omitted. The converse of the above theorem is also true if U and V are disjoint; the proof is again similar to the one in [3]. As we pointed out earlier, the separation in [3] is a special case of the separation described here. <p> Assign h (x) this value. The proof that the above construction is correct closely follows the proof in <ref> [3] </ref> and is omitted. The converse of the above theorem is also true if U and V are disjoint; the proof is again similar to the one in [3]. As we pointed out earlier, the separation in [3] is a special case of the separation described here. Thus the counterexample for the converse of the theorem in that paper also serves as a counterexample here when U and V are not disjoint. <p> The proof that the above construction is correct closely follows the proof in <ref> [3] </ref> and is omitted. The converse of the above theorem is also true if U and V are disjoint; the proof is again similar to the one in [3]. As we pointed out earlier, the separation in [3] is a special case of the separation described here. Thus the counterexample for the converse of the theorem in that paper also serves as a counterexample here when U and V are not disjoint. <p> Note this is equivalent to Luba and Selvaraj's method [7], where blocks are merged in fi U to get fi such that fi V fl fi fi Y . For some graph 10 theoretical methods to obtain fi, see <ref> [3] </ref>. Here we just use the brute force method of taking a block B i of fi U , trying to merge it with an existing block in fi B i and creating a new block for fi B i whenever B i is not compatible with any existing block.
Reference: 4. <author> H. A. Curtis, </author> <title> A New Approach to the Design of Switching Circuits, </title> <address> D. </address> <publisher> Van Nostrand Co. Inc., </publisher> <address> Princeton, NJ, </address> <year> 1962. </year>
Reference: 5. <author> S. Grygiel et al., </author> <title> Cube Diagram Bundles: A New Representation of Strongly Unspecified Multiple-Valued Functions and Relations, </title> <booktitle> Proc. IEEE International Symposium on Multiple-Valued Logic, </booktitle> <address> Antigonish, Nova Scotia, Canada, </address> <pages> pp. 287-292, </pages> <month> May </month> <year> 1997. </year>
Reference: 6. <author> T. Luba, </author> <title> Decomposition of Multiple-Valued Functions, </title> <booktitle> Proc. 25th International Symposium on Multiple-Valued Logic, </booktitle> <address> Bloomington, Indiana, </address> <pages> pp. 256-261, </pages> <month> May </month> <year> 1995. </year> <month> 18 </month>
Reference: 7. <author> T. Luba and H. Selvaraj, </author> <title> A General Approach to Boolean Function Decomposition and its Applications in FPGA-Based Synthesis, VLSI Design, </title> <type> Vol.3, Nos 3-4, </type> <institution> pp.289-300, </institution> <year> 1995. </year>
Reference-contexts: 1. Introduction Decomposition of Boolean and multi-valued functions has been studied by many authors since the 1950's [1-11]. For a more detailed discussion of this work and its applications see [3]. The present paper is concerned mainly with the methods of Luba and Selvaraj <ref> [7] </ref> and Shestakov [10, 11]. We use the following conventions. Ordered n-tuples are denoted by unsubscripted letters and their components by subscripted letters, for example, x = (x 1 ; : : : ; x n ). <p> OGP0000871 and a postgraduate scholarship. 1 Luba and Selvaraj developed an approach to Boolean function decomposition using set systems and their generalizations <ref> [7] </ref>. <p> We obtain a blanket fi on F by replacing each block with the union of its elements. We then use blanket fi as fi g 1 to obtain a single separation. Note this is equivalent to Luba and Selvaraj's method <ref> [7] </ref>, where blocks are merged in fi U to get fi such that fi V fl fi fi Y . For some graph 10 theoretical methods to obtain fi, see [3].
Reference: 8. <author> M. Perkowski et al., </author> <title> Decomposition of Multiple-Valued Relations, </title> <booktitle> Proc. IEEE International Symposium on Multiple-Valued Logic, </booktitle> <address> Antigonish, Nova Scotia, Canada, </address> <pages> pp. 13-18, </pages> <month> May </month> <year> 1997. </year>
Reference: 9. <author> J. P. Roth and R. M. Karp, </author> <title> Minimization over Boolean Graphs, </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 6, </volume> <pages> pp. 227-238, </pages> <month> April </month> <year> 1962. </year>
Reference: 10. <author> E. Shestakov, </author> <title> Decomposition of Systems of Completely Defined Boolean Functions by Argument Covering, </title> <journal> Automatic Control and Computer Sciences, </journal> <volume> Vol. 28, No. 1, </volume> <pages> pp. 12-20, </pages> <year> 1994. </year>
Reference-contexts: 1. Introduction Decomposition of Boolean and multi-valued functions has been studied by many authors since the 1950's [1-11]. For a more detailed discussion of this work and its applications see [3]. The present paper is concerned mainly with the methods of Luba and Selvaraj [7] and Shestakov <ref> [10, 11] </ref>. We use the following conventions. Ordered n-tuples are denoted by unsubscripted letters and their components by subscripted letters, for example, x = (x 1 ; : : : ; x n ).
Reference: 11. <author> E. Shestakov, </author> <title> Decomposition of Systems of Incompletely Defined Boolean Functions by Argument Cover, </title> <journal> Automatic Control and Computer Sciences, </journal> <volume> Vol. 28, No. 6, </volume> <pages> pp. 4-15, </pages> <year> 1994. </year>
Reference-contexts: 1. Introduction Decomposition of Boolean and multi-valued functions has been studied by many authors since the 1950's [1-11]. For a more detailed discussion of this work and its applications see [3]. The present paper is concerned mainly with the methods of Luba and Selvaraj [7] and Shestakov <ref> [10, 11] </ref>. We use the following conventions. Ordered n-tuples are denoted by unsubscripted letters and their components by subscripted letters, for example, x = (x 1 ; : : : ; x n ). <p> Very similar methods were discovered independently by Shestakov <ref> [11] </ref>, who expresses a Boolean function f (x) in the form h (g 1 (u); g 2 (v)), where u, v, and x are as above, U [ V = X, and g 1 and g 2 are Boolean functions. <p> Examples of Separations Let f be a Boolean function with five inputs and two outputs specified by the matrix in Table 1. Note that is a short hand for f0; 1g and the fg is omitted for all other entries. This example is taken from <ref> [11] </ref>. Table 1: Matrix defining f . Row x 1 x 2 x 3 x 4 x 5 y 1 y 2 2 0 1 1 1 1 4 1 1 0 1 6 0 0 1 0 0 8 1 0 1 1 1 Example 4.1. <p> Decomposition Method Using Tables We now describe Shestakov's method for finding the blankets fi g 1 and fi g 2 ; this is the "table reduction" method <ref> [11] </ref>. The relation between this method and the construction we used earlier will also be shown. This method can be used to do both single and double separations. We shall use it to derive a single separation first then proceed to derive a double separation.
References-found: 11

