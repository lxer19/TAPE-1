URL: http://www.cs.purdue.edu/homes/fudos/distribution/Erep/Erep4.ps
Refering-URL: http://www.cs.purdue.edu/people/fudos/
Root-URL: http://www.cs.purdue.edu
Email: fudos@cs.purdue.edu  cmh@cs.purdue.edu  
Title: CORRECTNESS PROOF OF A GEOMETRIC CONSTRAINT SOLVER  
Author: IOANNIS FUDOS and CHRISTOPH M. HOFFMANN 
Keyword: geometric constraint solving, computer aided design  
Date: Received December 12, 1993 Revised June 7, 1994  
Address: West Lafayette, Indiana 47907, USA  West Lafayette, Indiana 47907, USA  
Affiliation: Department of Computer Science, Purdue University  Department of Computer Science, Purdue University  
Abstract: We present a correctness proof of a graph-directed variational geometric constraint solver. First, we prove that the graph reduction that establishes the sequence in which to apply the construction steps defines a terminating confluent reduction system, in the case of well-constrained graphs. For overconstrained problems there may not be a unique normal form. Underconstrained problems, on the other hand, do have a unique normal form. Second, we prove that all geometric solutions found using simple root-selection rules must place certain triples of elements in the same topological order, no matter which graph reduction sequence they are based on. Moreover, we prove that this implies that the geometric solutions derived by different reduction sequences must be congruent. Again, this result does not apply to overconstrained problems. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W. Bouma, I. Fudos, C. Hoffmann, J. Cai, and R. Paige, </author> <title> "A geometric constraint solver", </title> <note> To appear in Computer Aided Design. Also available as CSD-TR-93-054, </note> <institution> Purdue University, Computer Science, </institution> <year> 1993. </year>
Reference-contexts: Constraints imposed on engineering drawings are intended to define a precise configuration of geometric elements in the plane. The importance and role of powerful, interactive constraint solvers in the new generation of CAD systems has been discussed in Refs. <ref> [1, 2, 3] </ref> and in the other papers collected in this issue. In Refs. [2, 1], we have described a variational constraint solver that is based on an elegant graph reduction strategy. <p> The importance and role of powerful, interactive constraint solvers in the new generation of CAD systems has been discussed in Refs. [1, 2, 3] and in the other papers collected in this issue. In Refs. <ref> [2, 1] </ref>, we have described a variational constraint solver that is based on an elegant graph reduction strategy. <p> For a thorough literature review on constraint solving see, e.g., Refs. <ref> [2, 1] </ref>. Note that there seems to be no other proof of correctness for constraint solvers that establishes geometric uniqueness of the solution. In the next section we recall the essential parts of the algorithm and define when a constraint graph is structurally well-, under-, or overconstrained. <p> This is an application-specific issue that has been considered by us in Refs. <ref> [2, 1, 5] </ref>. We assume that the geometric problem has been specified by a user-prepared sketch. The point-line distances, and the angles between oriented lines are assumed to be signed quantities. The correct sign is determined from the original input sketch.
Reference: 2. <author> I. Fudos, </author> <title> "Editable representations for 2D geometric design", </title> <type> Master's thesis, </type> <institution> Pur-due University, Dept. of Comp. Sci., </institution> <year> 1993. </year>
Reference-contexts: Constraints imposed on engineering drawings are intended to define a precise configuration of geometric elements in the plane. The importance and role of powerful, interactive constraint solvers in the new generation of CAD systems has been discussed in Refs. <ref> [1, 2, 3] </ref> and in the other papers collected in this issue. In Refs. [2, 1], we have described a variational constraint solver that is based on an elegant graph reduction strategy. <p> The importance and role of powerful, interactive constraint solvers in the new generation of CAD systems has been discussed in Refs. [1, 2, 3] and in the other papers collected in this issue. In Refs. <ref> [2, 1] </ref>, we have described a variational constraint solver that is based on an elegant graph reduction strategy. <p> For a thorough literature review on constraint solving see, e.g., Refs. <ref> [2, 1] </ref>. Note that there seems to be no other proof of correctness for constraint solvers that establishes geometric uniqueness of the solution. In the next section we recall the essential parts of the algorithm and define when a constraint graph is structurally well-, under-, or overconstrained. <p> This is an application-specific issue that has been considered by us in Refs. <ref> [2, 1, 5] </ref>. We assume that the geometric problem has been specified by a user-prepared sketch. The point-line distances, and the angles between oriented lines are assumed to be signed quantities. The correct sign is determined from the original input sketch.
Reference: 3. <author> C. M. Hoffmann, </author> <title> "Modeling the DARPA engine in pro/engineer", </title> <booktitle> DARPA Workshop Manufacturing, Engineering, Design, Automation, </booktitle> <address> Stanford, </address> <year> 1992, </year> <pages> pp. 631-639. </pages>
Reference-contexts: Constraints imposed on engineering drawings are intended to define a precise configuration of geometric elements in the plane. The importance and role of powerful, interactive constraint solvers in the new generation of CAD systems has been discussed in Refs. <ref> [1, 2, 3] </ref> and in the other papers collected in this issue. In Refs. [2, 1], we have described a variational constraint solver that is based on an elegant graph reduction strategy.
Reference: 4. <author> C. M. Hoffmann and R. Juan, "Erep, </author> <title> an editable, high-level representation for geometric design and analysis", </title> <editor> in P. Wilson, M. Wozny, and M. Pratt, editors, </editor> <booktitle> Geometric and Product Modeling, </booktitle> <pages> pp. 129-164, </pages> <publisher> North Holland, </publisher> <year> 1993. </year>
Reference: 5. <author> C. M. Hoffmann, </author> <title> "On the semantics of generative geometry representations", </title> <booktitle> Proc. 19th ASME Design Automation Conference, </booktitle> <volume> Vol. 2, </volume> <year> 1993, </year> <pages> pp. 411-420. </pages>
Reference-contexts: This is an application-specific issue that has been considered by us in Refs. <ref> [2, 1, 5] </ref>. We assume that the geometric problem has been specified by a user-prepared sketch. The point-line distances, and the angles between oriented lines are assumed to be signed quantities. The correct sign is determined from the original input sketch.
Reference: 6. <author> P. Todd, </author> <title> "A k-tree generalization that characterizes consistency of dimensioned engineering drawings", </title> <journal> SIAM J. Discrete Math., </journal> <volume> 2 </volume> <pages> 255-261, </pages> <year> 1989. </year>
Reference: 7. <author> J. Owen. </author> <title> "Algebraic solution for geometry from dimensional constraints", </title> <booktitle> in ACM Symp. Found. of Solid Modeling, </booktitle> <pages> pp. 397-407, </pages> <address> Austin, Tex, </address> <year> 1991. </year>
Reference: 8. <author> D. </author> <title> Hilbert, Grundlagen der Geometrie, </title> <editor> (B. G. </editor> <publisher> Teubner, Stuttgart, </publisher> <year> 1956). </year>
Reference: 9. <author> H. Imai, </author> <title> "On combinatorial structures of line drawings of polyhedra", </title> <journal> Discrete and Applied Mathematics, </journal> <volume> 10:79, </volume> <year> 1985. </year>
Reference-contexts: Definition 3. A graph is structurally well-constrained if it is not overcon-strained, and the number of edges is equal to 2n 3. For an algorithm to test whether a graph is structurally well-constrained see, e.g. Refs. <ref> [9, 10] </ref>. Note also that a structurally well-constrained graph can be over-constrained in a geometric sense, for example if there are three lines with pairwise angle constraints. 3. Correctness and Uniqueness 3.1.
Reference: 10. <author> K. Sugihara, </author> <title> "Detection of structural inconsistencies in systems of equations with degrees of freedom and its applications", </title> <journal> Discrete Applied Mathematics, </journal> <volume> 10 </volume> <pages> 297-312, </pages> <year> 1985. </year>
Reference-contexts: Definition 3. A graph is structurally well-constrained if it is not overcon-strained, and the number of edges is equal to 2n 3. For an algorithm to test whether a graph is structurally well-constrained see, e.g. Refs. <ref> [9, 10] </ref>. Note also that a structurally well-constrained graph can be over-constrained in a geometric sense, for example if there are three lines with pairwise angle constraints. 3. Correctness and Uniqueness 3.1.
Reference: 11. <author> B. Rosen, </author> <title> "Tree-manipulating systems and Church-Rosser theorems". </title> <journal> J. ACM, </journal> <volume> 20 </volume> <pages> 160-187, </pages> <year> 1973. </year>
References-found: 11

