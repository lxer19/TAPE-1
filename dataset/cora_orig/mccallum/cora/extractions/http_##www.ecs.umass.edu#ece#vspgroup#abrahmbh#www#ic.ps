URL: http://www.ecs.umass.edu/ece/vspgroup/abrahmbh/www/ic.ps
Refering-URL: http://www.ecs.umass.edu/ece/vspgroup/abrahmbh/www/publication.html
Root-URL: 
Email: abrahmbh@ecs.umass.edu  
Title: A VLSI ARCHITECTURE FOR REAL TIME CODE BOOK GENERATOR AND ENCODER OF A VECTOR QUANTIZER  
Author: Apurva Brahmbhatt 
Address: Amherst, MA-01003, U.S.A.  
Affiliation: University of Massachusetts Department of Electrical and Computer Engineering  
Abstract: The current Vector Quantizer (VQ) hardware employs static instead of dynamic code book generation as the latter demands intensive computation and corresponding expensive hardware, eventhough it offers better image quality. This paper proposes a VLSI architecture for a real-time code book generator and encoder of 512 fi 512 images at 30 frames/s. The resulting design consists of a single VQ processor and an image buffer memory chip, if implemented using 0.8 m CMOS technology. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Tsang and B. W. Y. Wei, </author> <title> "A VLSI Architecture for real-time code book generator and encoder of a vector quantizer",IEEE Trans. </title> <booktitle> on VLSI Syst,vol. </booktitle> <address> 2,no. 3,pp 360-364,Sept. </address> <year> 1994. </year>
Reference-contexts: However due to the full search requirement of these algorithms along with real-time video requirements, either demand extensive preprocessing or a system of more than 50 VLSI chips [2], [7]. An architecture was proposed by <ref> [1] </ref>, based on a tree of Self Organizing Maps (SOM's) for real-time code book generation and encoding of 512fi512 images.The resulting four chip design consisted of two VQ processors and two image buffer memory chips. <p> Fig. 1 describes the elements of the VQ processor. 3.1. VQ Processor The key processor components, as described by <ref> [1] </ref>, are the Euclidean winner determination circuit and neighborhood update circuit. The details of both of these components can be found in [1]. <p> Fig. 1 describes the elements of the VQ processor. 3.1. VQ Processor The key processor components, as described by <ref> [1] </ref>, are the Euclidean winner determination circuit and neighborhood update circuit. The details of both of these components can be found in [1]. <p> Four RB-to-B converters and three comparators (connected in tree fashion) are required to generate winner ID, by redundant binary to binary conversion and comparison. It takes 60 ns to identify the winner after the distance computation <ref> [1] </ref>. The neighborhood update circuit requires specification of neighbourhood function N k (t) and adaptation function c k (t,r j ). c k (t,r j ) consists of a decaying function K (t) and neighborhood scaling function (t) as given in (3). <p> These functions (4) and (5) are chosen such that they are amenable to hardware implementation [8]. A circuit implementing this functions is given in <ref> [1] </ref>. A modified circuit approximating the c k (t,1) is shown in fig 2. The approximated characteristics are shown in fig. 3. <p> The neighborhood update circuit is given in <ref> [1] </ref>, that consists of of multiplier/adder array with four pipe stages of 10ns per stage. The resulting time for the basic clustering of 16 K image vectors will be 2.62 ms (16384 fi 16 fi 12 ns) for each of the first three levels, as approximated in [1], due to continuous <p> is given in <ref> [1] </ref>, that consists of of multiplier/adder array with four pipe stages of 10ns per stage. The resulting time for the basic clustering of 16 K image vectors will be 2.62 ms (16384 fi 16 fi 12 ns) for each of the first three levels, as approximated in [1], due to continuous data flow throughout the pipe-line of the Euclidean winner determination circuit. In the fourth level, during one training pass, the Euclidean winner determination requires 240 ns (15 fi 10 + 30 + 60) and another 40 ns for neighborhood update. <p> Index Memory is thus of 12 kilobytes (16 K fi 6b). The basic memory organization for the Code book and Image buffer memory can be found in <ref> [1] </ref>. 4. SUMMARY AND CONCLUSION We have proposed a modified VLSI Architecture for an efficient trade-off between image quality and hardware requirements. The proposed architecture will require 19.66 ms, for codebook generation and encoding of 512fi 512 image with 8b/pixel, if implemented using similar components and technology proposed by [1] and <p> in <ref> [1] </ref>. 4. SUMMARY AND CONCLUSION We have proposed a modified VLSI Architecture for an efficient trade-off between image quality and hardware requirements. The proposed architecture will require 19.66 ms, for codebook generation and encoding of 512fi 512 image with 8b/pixel, if implemented using similar components and technology proposed by [1] and thus, will require a single VQ processor chip and an image buffer memory for real time code book generation and encoding of 512 X 512 images at 30 frames/s. A tree of static vectors is used for basic clustering of image vectors.
Reference: [2] <author> K. Dezhgosha, M. Jamali, and S. Kwatra, </author> <title> "A VLSI architecture for real-time image coding using a vector quantization based algorithm", </title> <journal> IEEE Trans. ASSP, </journal> <volume> vol 40, no. 1, </volume> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: The common schemes for codebook generations are K-means (or LBG) algorithm [3] and Kohonen Self Organizing Map (SOM)[5]. However due to the full search requirement of these algorithms along with real-time video requirements, either demand extensive preprocessing or a system of more than 50 VLSI chips <ref> [2] </ref>, [7]. An architecture was proposed by [1], based on a tree of Self Organizing Maps (SOM's) for real-time code book generation and encoding of 512fi512 images.The resulting four chip design consisted of two VQ processors and two image buffer memory chips.
Reference: [3] <author> A. Gersho and R. M. </author> <title> Gray,Vector Quantization and Signal Compression, </title> <address> New York: </address> <publisher> Kluwer Academic,1991. </publisher>
Reference-contexts: An adaptive code book produces much better picture quality than a static code book which is used in most existing VQ systems [9]. The common schemes for codebook generations are K-means (or LBG) algorithm <ref> [3] </ref> and Kohonen Self Organizing Map (SOM)[5]. However due to the full search requirement of these algorithms along with real-time video requirements, either demand extensive preprocessing or a system of more than 50 VLSI chips [2], [7].
Reference: [4] <author> X. Huang, W. Liu, and B. W. Y. Wei, </author> <title> "A High-performance CMOS redundant binary multiplication-and-accumulation (MAC) unit," </title> <journal> IEEE Trans. Circ. and Syst.-I: Fundamental Theory and Applicat., </journal> <volume> vol. 41, no. 1, </volume> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: Four MAC units are required for adding up 16 squared differences of one vector with four weight vectors. The pipelined design of a MAC in 0.8 m CMOS technology has a clock rate exceeding 100 MHz with 10 ns per pipe stage, as descibed in <ref> [4] </ref>. Four RB-to-B converters and three comparators (connected in tree fashion) are required to generate winner ID, by redundant binary to binary conversion and comparison. It takes 60 ns to identify the winner after the distance computation [1].
Reference: [5] <author> T. Kohonen, </author> <title> Self Organization and Associative Memory. </title> <address> New York: </address> <publisher> Springer-Verlag 1989, third ed. </publisher>
Reference: [6] <author> N. M. Nasrabadi and Y. Feng, </author> <title> "Vector Quantization of images based upon the Kohonen self-organizing feature maps," </title> <booktitle> IEEE 1st Int. Conf. Neural Net., </booktitle> <year> 1989. </year>
Reference: [7] <author> S. Panchanathan and M. Goldberg, </author> <title> "A content-addressable memory architecture for image coding using vector quantization," </title> <journal> IEEE Trans. ASSP, </journal> <volume> vol. 39, no. 9, </volume> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: The common schemes for codebook generations are K-means (or LBG) algorithm [3] and Kohonen Self Organizing Map (SOM)[5]. However due to the full search requirement of these algorithms along with real-time video requirements, either demand extensive preprocessing or a system of more than 50 VLSI chips [2], <ref> [7] </ref>. An architecture was proposed by [1], based on a tree of Self Organizing Maps (SOM's) for real-time code book generation and encoding of 512fi512 images.The resulting four chip design consisted of two VQ processors and two image buffer memory chips.
Reference: [8] <author> T. M. Parks, </author> <title> Vector Quantization Code Book Design Using Neural Networks, </title> <institution> ERL, UC Berkely, </institution> <note> Memorandum No. UCB/ERL M90/111, 3 Dec. </note> <year> 1990. </year>
Reference-contexts: These functions (4) and (5) are chosen such that they are amenable to hardware implementation <ref> [8] </ref>. A circuit implementing this functions is given in [1]. A modified circuit approximating the c k (t,1) is shown in fig 2. The approximated characteristics are shown in fig. 3.
Reference: [9] <author> R.Jain, A. Madissetti, and R. Baker, </author> <title> "An integrated circuit design for pruned tree-search vector quantization encoding with an off-chip controller," </title> <journal> IEEE Trans. Circ. and Syst. </journal> <note> for Video Technol.,pp. 147-158,June 1992. </note>
Reference-contexts: The code book generator of a vector quantizer is dynamic if it updates the code book on regular basis. An adaptive code book produces much better picture quality than a static code book which is used in most existing VQ systems <ref> [9] </ref>. The common schemes for codebook generations are K-means (or LBG) algorithm [3] and Kohonen Self Organizing Map (SOM)[5]. However due to the full search requirement of these algorithms along with real-time video requirements, either demand extensive preprocessing or a system of more than 50 VLSI chips [2], [7].
References-found: 9

