URL: http://www.cs.columbia.edu/~baz/ps/power.tr.mitl.ps
Refering-URL: http://www.cs.columbia.edu/~baz/publications.html
Root-URL: http://www.cs.columbia.edu
Title: POWER MEASUREMENTS OF TYPICAL NOTEBOOK COMPUTERS  
Author: Brian Marsh and Bruce Zenel MITL/Panasonic 
Note: Author's current address:  
Date: May 22, 1994  
Address: Way Princeton, NJ  Way Princeton, NJ 08540-6628 USA  
Affiliation: 2 Research  Matsushita Information Technology Laboratory Panasonic Technologies, Inc. Two Research  Computer Science Department, Columbia University.  
Pubnum: MITL-TR-110-94  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> F. Douglis, R. Caceres, B. Marsh, F. Kaashoek, and K. Li. </author> <title> Storage alternatives for mobile computers. </title> <booktitle> In ASPLOS VI, </booktitle> <year> 1994. </year> <note> Submitted for publication to ASPLOS VI. </note>
Reference-contexts: Our measurements include the CPU, the disk, and the display. Together these devices can consume from 44 to 61% of total system power between their highest and lowest powered states. We have addressed the power consumption of the disk in [2], [4], and <ref> [1] </ref>. To explore possible power savings for the CPU, we made several modifications to the Mach scheduler that lowers the CPU power consumption whenever there are not active threads to run. We report the measurements on the potential savings of these approaches. <p> When the next disk access occurs, there will be a delay while the platters are spun back up. Both papers found that extremely short thresholds, on the order of 5 to 10 seconds gave the best power consumption. Marsh et al [4] and Douglis et al <ref> [1] </ref> studied the use of flash memory in the storage system to reduce system power. Marsh et al used flash memory as a second-level, non-volatile buffer cache. This so-called "FlashCache" was able to reduce power and improve response time.
Reference: [2] <author> Fred Douglis, P. Krishnan, and Brian Marsh. </author> <title> Thwarting the Power Hungry Disk. </title> <booktitle> In Proceedings of 1994 Winter USENIX Conference, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Our goal is to understand where the power goes. Hopefully such an understanding will motivate the development of system-level solutions to augment efforts by hardware designers and battery producers. An example is recent work on disk management, done at our lab <ref> [2] </ref> and at UC Berkeley [3]. Our paper was motivated by an early set of measurements made for this document. Both disk management papers investigate algorithms for deciding when to spin down the disk. Spinning the disk down is an example of fine-grain control over power consumption. <p> Our measurements include the CPU, the disk, and the display. Together these devices can consume from 44 to 61% of total system power between their highest and lowest powered states. We have addressed the power consumption of the disk in <ref> [2] </ref>, [4], and [1]. To explore possible power savings for the CPU, we made several modifications to the Mach scheduler that lowers the CPU power consumption whenever there are not active threads to run. We report the measurements on the potential savings of these approaches. <p> First, some devices have long inter-state transition times. Spinning up a disk platter, for instance, can take several seconds. A disk management policy that aggressively spins down the disk whenever idle will probably have a negative impact on access 9 latency. In fact, trace-driven simulation of different management policies <ref> [2] </ref> corroborates this intuition. Depending on the workload, a simple threshold of 5 to 30 seconds significantly reduces power without dramatically increasing mean access latency. The second complication is that predicting the future is quite difficult. Device management policies can benefit from knowing when the next access will take place. <p> Depending on the workload, a simple threshold of 5 to 30 seconds significantly reduces power without dramatically increasing mean access latency. The second complication is that predicting the future is quite difficult. Device management policies can benefit from knowing when the next access will take place. The report <ref> [2] </ref> examines this issue in further detail. 5 CPU Power Saving Strategies To reduce CPU power we modified the Mach kernel to enter low-power mode whenever there were no threads ready to run. We did this by modifying the idle thread. <p> They show power consumption of these machines while applications are running. They do not evaluate different techniques for reducing power; the document focusses instead on the tradeoffs found in the two machines and the decisions made in their design. Douglis et al <ref> [2] </ref>, and Li et al [3] have published papers on disk management techniques that reduce the power consumed by the disk. They found that a Threshold-Demand policy can be quite effective.
Reference: [3] <author> Kester Li, Roger Kumpf, Paul Horton, and Thomas Anderson. </author> <title> A Quantitative Analysis of Disk Drive Power Management in Portable Computers. </title> <booktitle> In Proceedings of the 1994 Winter USENIX, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Our goal is to understand where the power goes. Hopefully such an understanding will motivate the development of system-level solutions to augment efforts by hardware designers and battery producers. An example is recent work on disk management, done at our lab [2] and at UC Berkeley <ref> [3] </ref>. Our paper was motivated by an early set of measurements made for this document. Both disk management papers investigate algorithms for deciding when to spin down the disk. Spinning the disk down is an example of fine-grain control over power consumption. <p> They show power consumption of these machines while applications are running. They do not evaluate different techniques for reducing power; the document focusses instead on the tradeoffs found in the two machines and the decisions made in their design. Douglis et al [2], and Li et al <ref> [3] </ref> have published papers on disk management techniques that reduce the power consumed by the disk. They found that a Threshold-Demand policy can be quite effective. In such a policy, the disk is spun down after it has been idle for a period of time exceeding a certain threshold.
Reference: [4] <author> Brian Marsh, Fred Douglis, and P. Krishnan. </author> <title> Flash memory file caching for mobile computers. </title> <type> Technical Report MITL-TR-59-93, </type> <institution> Matsushita Information Technology Laboratory, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Our measurements include the CPU, the disk, and the display. Together these devices can consume from 44 to 61% of total system power between their highest and lowest powered states. We have addressed the power consumption of the disk in [2], <ref> [4] </ref>, and [1]. To explore possible power savings for the CPU, we made several modifications to the Mach scheduler that lowers the CPU power consumption whenever there are not active threads to run. We report the measurements on the potential savings of these approaches. <p> When the next disk access occurs, there will be a delay while the platters are spun back up. Both papers found that extremely short thresholds, on the order of 5 to 10 seconds gave the best power consumption. Marsh et al <ref> [4] </ref> and Douglis et al [1] studied the use of flash memory in the storage system to reduce system power. Marsh et al used flash memory as a second-level, non-volatile buffer cache. This so-called "FlashCache" was able to reduce power and improve response time.
Reference: [5] <author> D. McCarron. </author> <title> The Rising Bar for Subnotebook PC Design: Lessons in Small Form Factor 386 System Design. </title> <type> Technical report, </type> <institution> MicroSystems Insider, </institution> <year> 1993. </year> <note> Unsolicited technical report. Contact through MicroDesign Resources, Sebastopol, CA. 707-824-4004. 13 </note>
Reference-contexts: The extra third may not justify the additional complexity of the SL design. 6 Related Work Sean McCarron, a senior editor for MicroSystems Insider, recently published a technical report containing an in-depth comparison of the Dell 320 SLi and the HP Omnibook 300 <ref> [5] </ref>. The report discusses many aspects of notebook design that are not covered in this document. They show power consumption of these machines while applications are running.
References-found: 5

