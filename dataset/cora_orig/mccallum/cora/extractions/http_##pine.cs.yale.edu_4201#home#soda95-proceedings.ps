URL: http://pine.cs.yale.edu:4201/home/soda95-proceedings.ps
Refering-URL: http://pine.cs.yale.edu:4201/home/soda95-abstract.html
Root-URL: http://www.cs.yale.edu
Title: Fairness in Scheduling (Extended Abstract)  
Author: Miklos Ajtai James Aspnes Moni Naor Yuval Rabani Leonard J. Schulman Orli Waarts k 
Abstract: On-line machine scheduling has been studied extensively, but the fundamental issue of fairness in scheduling is still mostly open. In this paper we explore the issue in settings where there are long living processes which should be repeatedly scheduled for various tasks throughout the lifetime of a system. For any such instance we develop a notion of desired load of a process, which is a function of the tasks it participates in. The unfairness of a system is the maximum, taken over all processes, of the difference between the desired load and the actual load. An example of such a setting is the carpool problem suggested by Fagin and Williams [17]. In this problem, a set of n people form a carpool. On each day a subset of the people arrive and one of them is designated as the driver. A scheduling rule is required so that the driver will be determined in a `fair' way. We investigate this problem under various assumptions on the input distribution. We also show that the carpool problems can capture several other problems of fairness in scheduling. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Aspnes, M. Naor, Y. Rabani, L. J. Schulman and O. Waarts. </author> <title> Fairness in Scheduling manuscript, available from the authors. </title>
Reference-contexts: involving non-colocated pairs. (This reduction has also been noted recently by Babu Narayanan.) A more general proof is given in this paper. 1.4 Organization Due to lack of space, we do not provide the details of many of the arguments; they are available in the full version of our paper <ref> [1] </ref>. In this extended abstract we describe in detail only the O (log n) analysis for the case of uniformly distributed requests on edges (Section 2), the general proof guaranteeing bounded unfairness (Section 3), and the reduction from the vector rounding problem to the edge orientation problem (Section 4). <p> Motivated by this observation, we examined the process more closely. The result was the tight asymptotic bounds of fi (log log n) on the expected maximum unfairness. The details of these bounds are given in the full version of the paper <ref> [1] </ref>. Here, we limit ourselves to an overview of the method used to obtain them. We obtain the O (log log n) upper bound through a sequence of tighter and tighter approximations.
Reference: [2] <author> R. Anderson, L. Lov asz, P. Shor, J. Spencer, E. Tardos and S. Winograd. </author> <title> Disks, balls, and walls: analysis of a combinatorial game. </title> <journal> American Mathematical Monthly 96, </journal> <year> 1989, </year> <pages> pp. 481-493. </pages>
Reference-contexts: If, instead, we would have analyzed the ratio between the fair-share = o*ine-load and the actual load, we would have obtained a 1 + o (1) com petitive ratio. 1.3 Background Our problem is related to a "chip game" analyzed in <ref> [2] </ref>. In that game chips are placed in stacks on the integers, and in each round, two chips which are in the same stack may be selected, and one of them moved one step to the right while the other is moved one step to the left. <p> While our game can continue ad infinitum, the game of <ref> [2] </ref> must terminate, and some of the principal results of that paper concern the terminating states. <p> One can obtain an upper bound of d (n 1)=2e on the maximum unfairness of the greedy algorithm for the edge orientation problem by a reduction to the case of the game of <ref> [2] </ref>. <p> Therefore, this process termi nates. We conclude from Fact 3.1 and Lemma 3.1 that Theorem 3.1. For any adversary %, the unfairness of global greedy is at most d n1 2 e. In comparison, we note that the results of <ref> [2] </ref> provide a lower bound on the performance of any deterministic algorithm.
Reference: [3] <author> T. E. Anderson, S. Owicki, J. B. Saxe and C. P. Thacker. </author> <title> High Speed Switch Scheduling for Local Area Networks. </title> <journal> ACM Trans. on Comm. Syst., </journal> <volume> 11(4), </volume> <year> 1993, </year> <pages> pp. 319-352. </pages>
Reference-contexts: problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. [4, 5, 6, 8, 15, 18, 15, 22]), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see <ref> [3, 13, 16, 19, 20] </ref>).
Reference: [4] <author> J. Aspnes, Y. Azar, A. Fiat, S. A. Plotkin, and O. Waarts. </author> <title> On-line load balancing with applications to machine scheduling and virtual circuit routing. </title> <booktitle> In Proc. of the 25th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 623-631, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [5] <author> Y. Azar, A. Broder, and A. Karlin, E. Upfal. </author> <title> Balanced allocations. </title> <booktitle> In Proc. of the 26th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 593-602, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [6] <author> Y. Azar, J. Naor, and R. </author> <title> Rom. The competitiveness of on-line assignment. </title> <booktitle> In Proc. of the 3rd Ann. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pages 203-210, </pages> <year> 1992. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [7] <author> Zs. Baranyai. </author> <title> On the factorization of the complete uniform hypergraph. In Infinite and finite sets, </title> <journal> Colloquia Mathematica Societatis Janos Bolyai, </journal> <year> 1973. </year>
Reference: [8] <author> Y. Bartal, A. Fiat, H. Karloff, and R. Vohra. </author> <title> New algorithms for an ancient scheduling problem. </title> <booktitle> In Proc. of the 24th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 51-58, </pages> <year> 1992. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [9] <author> J. Beck. </author> <title> Balanced two-colorings of finite sets in the cube. </title> <journal> Discrete Math, </journal> <volume> 73 </volume> <pages> 13-25, 1988-9. </pages>
Reference-contexts: Proof. The reduction is made by a "scaling" argument, similar in flavor to the bit-by-bit rounding of Beck and Fiala <ref> [10, 9] </ref>. The constructions of the deterministic and randomized algorithms for the vector rounding problem from the corresponding algorithms for the 2-person carpool problem are similar, only the analysis is a bit different. Consider the binary representation of the v i t 's.
Reference: [10] <author> J. Beck and T. </author> <title> Fiala Integer-making theorems. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 3 </volume> <pages> 1-8, </pages> <year> 1981. </year>
Reference-contexts: Proof. The reduction is made by a "scaling" argument, similar in flavor to the bit-by-bit rounding of Beck and Fiala <ref> [10, 9] </ref>. The constructions of the deterministic and randomized algorithms for the vector rounding problem from the corresponding algorithms for the 2-person carpool problem are similar, only the analysis is a bit different. Consider the binary representation of the v i t 's.
Reference: [11] <author> S. Ben-David, A. Borodin, R.M. Karp, G. Tar-dos, and A. Wigderson. </author> <title> On the power of randomization in online algorithms. </title> <booktitle> In Proc. of the 22nd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 379-386, </pages> <month> May </month> <year> 1990. </year>
Reference: [12] <author> A. Borodin, N. Linial, and M. Saks. </author> <title> An optimal on-line algorithm for metrical task systems. </title> <booktitle> In Proc. of the 19th Ann. ACM Symp on Theory of Computing, </booktitle> <pages> pages 373-382, </pages> <month> May </month> <year> 1987. </year>
Reference: [13] <author> A. Charny. </author> <title> An Algorithm for Rate Allocation in a Packet-Switching Network With Feedback MIT/LCS TR-601, </title> <year> 1994. </year>
Reference-contexts: problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. [4, 5, 6, 8, 15, 18, 15, 22]), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see <ref> [3, 13, 16, 19, 20] </ref>).
Reference: [14] <author> D. Coppersmith. </author> <title> Private Communication. </title>
Reference-contexts: In this setting they showed that the unfairness of this algorithm is bounded above by a number that is exponential in the number of people, but independent in the number of days, and mentioned that Coppersmith managed to reduce this upper bound to linear (however, this proof is lost <ref> [14] </ref>). Finally, in collaboration with Coppersmith they showed a linear lower bound on the unfairness in this setting. We view the carpool problem as a game played be Fairness in scheduling tween the carpool members and an adversary scheduler, which determines which people show up on each day.
Reference: [15] <author> E. Davis and J.M. Jaffe. </author> <title> Algorithms for scheduling tasks on unrelated processors. </title> <journal> JACM, </journal> <volume> 28 </volume> <pages> 712-736, </pages> <year> 1981. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [16] <author> A. Demers, S. Keshav and S. </author> <title> Shenkar Analysis and simulation of a fair queuing algorithm Proc. </title> <booktitle> ACM SIGCOMM 89, </booktitle> <pages> pp. 1-12. </pages>
Reference-contexts: problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. [4, 5, 6, 8, 15, 18, 15, 22]), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see <ref> [3, 13, 16, 19, 20] </ref>).
Reference: [17] <author> R. Fagin and J.H. Williams. </author> <title> A fair carpool scheduling algorithm. </title> <journal> In IBM Journal of Research and Development, </journal> <volume> 27(2) </volume> <pages> 133-139, </pages> <month> March </month> <year> 1983. </year>
Reference-contexts: We address the three flavors of the problem and obtain the following results: 1. The deterministic performance is n=2: there is a method (the greedy algorithm) that achieves this bound and for any deterministic rule there is a sequence where this difference will occur. (The lower bound is from <ref> [17] </ref>). 2. The expected difference of the greedy algorithm on the uniform distribution on the edges is fi (log log n) and we derive a complete description of the process Ajtai, Aspnes, Naor, Rabani, Schulman and Waarts in this case. This is the main technical contribution of the paper. <p> We elaborate here on two cases where fairness is desired and see the connections with the edge orientation problem mentioned above. The Carpool Problem The issue of fairness in scheduling was first isolated by Fagin and Williams <ref> [17] </ref>, who abstracted it to what they call the carpool problem. A rough quotation from [17]: "Suppose that n people, tired of spending their time and money in gasoline lines, decide to form a carpool. Each day a subset of these people will arrive and one of them should drive. <p> The Carpool Problem The issue of fairness in scheduling was first isolated by Fagin and Williams <ref> [17] </ref>, who abstracted it to what they call the carpool problem. A rough quotation from [17]: "Suppose that n people, tired of spending their time and money in gasoline lines, decide to form a carpool. Each day a subset of these people will arrive and one of them should drive. A scheduling algorithm is required for determining which person should drive on any given day. <p> When the driver is just one of the set of people that show up, this reasoning leads immediately to the following definition of fairness given in <ref> [17] </ref>: If on a certain day, d people show up, each of them owes the driver 1=d of a ride. <p> If two particles in the same position are requested, we flip an unbiased coin to determine which goes up and which goes down. Other positions remain the same. This is a randomized version of the global greedy strategy of <ref> [17] </ref>. We assume that the sequence generated is very long. <p> The deviations are then updated as follows. d j increases by 1 1=jrj. For all other elements i 2 r, i 6= j, d i decreases by 1=jrj. Other deviations remain the same. This strategy is the global greedy strategy of <ref> [17] </ref>. We show an upper bound on the unfairness resulting from the deterministic global greedy algorithm. The following fact is trivial. Fact 3.1.
Reference: [18] <author> R.L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Technical Journal, </journal> <volume> 45 </volume> <pages> 1563-1581, </pages> <year> 1966. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [19] <author> E. Hahne. </author> <title> Round-robin scheduling for maxmin fairness in data networks IEEE J. </title> <journal> on Selected areas in Communication, </journal> <volume> vol 9(7), </volume> <year> 1991. </year>
Reference-contexts: problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. [4, 5, 6, 8, 15, 18, 15, 22]), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see <ref> [3, 13, 16, 19, 20] </ref>).
Reference: [20] <author> K. Ramakrishnan and R. Jain. </author> <title> A binary feedback scheme for congestion avoidance in computer networks. </title> <journal> ACM Trans. on Comm. Syst., </journal> <volume> 8(2), </volume> <year> 1990, </year> <pages> pp. 158-181. </pages>
Reference-contexts: problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. [4, 5, 6, 8, 15, 18, 15, 22]), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see <ref> [3, 13, 16, 19, 20] </ref>).
Reference: [21] <author> D.D. Sleator and R.E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Communication of the ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: Comparison with competitive analysis A popular methodology for evaluating the performance of online algorithm is the the competitive analysis approach of Sleator and Tarjan <ref> [21] </ref>: the on-line algorithm is compared with a "hypothetical" optimal off-line and bounds on the competitive ratio are obtained (for an adaptive, oblivious or random adversary).
Reference: [22] <author> D. Shmoys, J. Wein, and D. P. Williamson. </author> <title> Scheduling parallel machines on-line. </title> <booktitle> In Proc. of the 32nd IEEE Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pages 131-140, </pages> <year> 1991. </year>
Reference-contexts: The transformation applies to both deterministic and randomized algorithms. As it turns out, problems in fairness of scheduling can be reduced to the vector rounding problem. 1.2 Motivation and Applications On-line machine scheduling has been studied extensively (see e.g. <ref> [4, 5, 6, 8, 15, 18, 15, 22] </ref>), but the issue of fairness in job allocation has usually not been considered quantitatively (however, see [3, 13, 16, 19, 20]).
Reference: [23] <author> R. </author> <title> Tijdeman. The chairman assignment problem. </title> <journal> Discerte Math, </journal> <volume> 32 </volume> <pages> 323-330, </pages> <year> 1980. </year>
Reference-contexts: Ajtai, Aspnes, Naor, Rabani, Schulman and Waarts As in the carpool problem, in the on-line version we consider deterministic algorithms as well as randomized algorithms against the oblivious adversary. Tijdeman <ref> [23] </ref> has considered the vector rounding problem and has shown that the off-line version has a solution of difference 1, i.e. for every sequence of real vectors (V 1 ; V 2 ; : : :) there exist integer (Z 1 ; Z 2 ; : : :) such that for
Reference: [24] <author> A.C. Yao. </author> <title> Probabilistic computation, towards a unified measure of complexity. </title> <booktitle> In Proc. of the 18th Ann. IEEE Symp. on Foundation of Computer Science, </booktitle> <pages> pages 222-227, </pages> <year> 1977. </year>
References-found: 24

