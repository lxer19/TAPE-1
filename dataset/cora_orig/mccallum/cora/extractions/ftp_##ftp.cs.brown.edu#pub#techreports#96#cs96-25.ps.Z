URL: ftp://ftp.cs.brown.edu/pub/techreports/96/cs96-25.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-96-25.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> T. Biedl and G. Kant. </author> <title> A better heuristic for orthogonal graph drawings. </title> <booktitle> In Algorithms (Proc. ESA '94), volume 855 of Lecture Notes in Computer Science, </booktitle> <pages> pages 24-35. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., <ref> [1, 12, 44] </ref>), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [2] <author> J. A. Bondy and U. S. R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1976. </year>
Reference-contexts: Conclusions are contained in Section 8. 2 Preliminaries In this section, we define basic concepts used in the paper, present preliminary results on output-sensitive 2-path queries, and overview previous results on canonical orderings. 2.1 Basic Definitions We assume familiarity with graph theory <ref> [2, 21] </ref>. We recall some basic definitions on connectivity. A separating k-set of a graph is a set of k vertices whose removal disconnects the graph; separating 1-sets and 2-sets are called cut-vertices and separation pairs, respectively.
Reference: [3] <author> G. Brightwell and W. T. Trotter. </author> <title> The order dimension of planar maps. </title> <type> Technical Report LSE-MPS-37, </type> <institution> Dept. of Statistical and Mathematical Sciences, London School of Economics and Political Science, </institution> <year> 1992. </year>
Reference-contexts: Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. Brightwell and Trotter <ref> [3, 4] </ref> define normal families of paths for a class of planar graphs that includes triconnected planar graphs. Normal families of paths are related to Schnyder's realizers. However, they do not analyze the time complexity of their construction. <p> Our O (n)-time construction of a realizer of triconnected planar graph G with n vertices has the following additional applications: We show how to compute a normal family of paths <ref> [3, 4] </ref> for G in O (n) time. Brightwell and Trotter [3, 4] previously showed the existence of such families, but did not study the time complexity of their construction. <p> Our O (n)-time construction of a realizer of triconnected planar graph G with n vertices has the following additional applications: We show how to compute a normal family of paths <ref> [3, 4] </ref> for G in O (n) time. Brightwell and Trotter [3, 4] previously showed the existence of such families, but did not study the time complexity of their construction.
Reference: [4] <author> G. Brightwell and W. T. Trotter. </author> <title> The order dimension of convex polytopes. </title> <journal> SIAM J. Discrete Math., </journal> <volume> 6(2) </volume> <pages> 230-245, </pages> <year> 1993. </year>
Reference-contexts: Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. Brightwell and Trotter <ref> [3, 4] </ref> define normal families of paths for a class of planar graphs that includes triconnected planar graphs. Normal families of paths are related to Schnyder's realizers. However, they do not analyze the time complexity of their construction. <p> Our O (n)-time construction of a realizer of triconnected planar graph G with n vertices has the following additional applications: We show how to compute a normal family of paths <ref> [3, 4] </ref> for G in O (n) time. Brightwell and Trotter [3, 4] previously showed the existence of such families, but did not study the time complexity of their construction. <p> Our O (n)-time construction of a realizer of triconnected planar graph G with n vertices has the following additional applications: We show how to compute a normal family of paths <ref> [3, 4] </ref> for G in O (n) time. Brightwell and Trotter [3, 4] previously showed the existence of such families, but did not study the time complexity of their construction. <p> Case 3. Analogous to Case 2. Case 4. By Lemma 7, p i (v; u) = p j (u; v), hence R k (u) = R k (v). Case 5. Analogous to Case 4. 2 The properties of a normal family of paths <ref> [4] </ref> for a plane graph and three distinguished external vertices, are similar to the properties of Lemmas 6, 8, and 10. Brightwell and Trotter [4] proved that each triconnected plane graph has a normal family of paths for any three external vertices. Using the terminology of [4], we can say that <p> Case 5. Analogous to Case 4. 2 The properties of a normal family of paths <ref> [4] </ref> for a plane graph and three distinguished external vertices, are similar to the properties of Lemmas 6, 8, and 10. Brightwell and Trotter [4] proved that each triconnected plane graph has a normal family of paths for any three external vertices. Using the terminology of [4], we can say that Lemmas 6, 8, and 10 show that the set fp i (v)ji 2 fb; g; rg; v 2 V g is a normal family <p> normal family of paths <ref> [4] </ref> for a plane graph and three distinguished external vertices, are similar to the properties of Lemmas 6, 8, and 10. Brightwell and Trotter [4] proved that each triconnected plane graph has a normal family of paths for any three external vertices. Using the terminology of [4], we can say that Lemmas 6, 8, and 10 show that the set fp i (v)ji 2 fb; g; rg; v 2 V g is a normal family of paths for the three vertices s b , s g , and s r .
Reference: [5] <author> J. Cheriyan and S. N. Maheshwari. </author> <title> Finding nonseparating induced cycles and independent spanning trees in 3-connected graphs. </title> <journal> J. Algorithms, </journal> <volume> 9 </volume> <pages> 507-537, </pages> <year> 1988. </year>
Reference-contexts: The conjecture has been proved for k = 2 by Itai and Rodeh [27], and for k = 3, independently, by Cheriyan and Maheshwari <ref> [5] </ref>, and Zehavi and Itai [54]. While the proof of Zehavi and Itai is existential, the proofs of Itai and Rodeh, and of Cheriyan and Maheshwari are constructive. <p> O (n) time a data structure for an n-vertex planar graph G (of arbitrary connectivity) that uses O (n) space and supports k-path queries, for k 3, in O (`) time, where ` is the total size of the paths reported. * By exploiting the result of Cheriyan and Maheshwari <ref> [5] </ref>, we show how to construct a linear-space data structure that supports output-sensitive 3-path queries on a triconnected graph. <p> O (`) time, where ` is the size of the reported paths. 5 General 3-Path Queries In this section we extend to general triconnected graphs the results on planar triconnected graphs of Section 4. 5.1 Preprocessing The realizer used for triconnected planar graphs is replaced by three independent spanning trees <ref> [5, 54] </ref>. For three independent spanning trees of a triconnected graph G, the following properties hold: 20 1. In each spanning tree, the edges of G are directed from children to parent. 2. The sinks (roots) of the spanning trees are three (possibly coincident) vertices of G. 3. <p> For each vertex v of G, the paths from v to the sinks along the three spanning trees have only vertex v in common. We briefly review the algorithm by Cheriyan and Maheshwari <ref> [5] </ref> for constructing three independent spanning trees of a triconnected graph G with n vertices. The main step of their algorithm is the computation of a nonseparating ear decomposition of the triconnected graph. <p> For each vertex v of G, we indicate with stn (v) the st-number of v. Note that the canonical ordering defined in Section 2.3 is a particular case of nonseparating ear decomposition for triconnected planar graphs. Lemma 15 <ref> [5] </ref> Let G be a triconnected graph with n vertices and m edges. Let (v 1 ; v 2 ) be an edge and v n 6= v 1 ; v 2 be a vertex of G.
Reference: [6] <author> N. Chiba, T. Nishizeki, S. Abe, and T. Ozawa. </author> <title> A linear algorithm for embedding planar graphs using PQ-trees. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 30(1) </volume> <pages> 54-76, </pages> <year> 1985. </year>
Reference-contexts: Here, we overview previous work related to our combinatorial results. Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., <ref> [6, 15, 42] </ref>), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [7] <author> M. Chrobak, M. T. Goodrich, and R. Tamassia. </author> <title> Convex drawings of graphs in two and three dimensions. </title> <booktitle> In Proc. 12th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 319-328, </pages> <year> 1996. </year>
Reference-contexts: He defines the canonical ordering for triconnected planar graphs recalled in Section 2.3 and the drawing is constructed assigning integer coordinates to the vertices according to this canonical ordering. Recent results on convex grid drawings in the plane and in 3D space are presented in <ref> [7] </ref>.
Reference: [8] <author> M. Chrobak and S. Nakano. </author> <title> Minimum-width grid drawings of plane graphs. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 104-110. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs. They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., <ref> [8, 11, 29] </ref>). Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20].
Reference: [9] <author> R. F. Cohen, G. Di Battista, A. Kanevsky, and R. Tamassia. </author> <title> Reinventing the wheel: an optimal data structure for connectivity queries. </title> <booktitle> In Proc. 25th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 194-200, </pages> <year> 1993. </year>
Reference-contexts: 4, or for (k 1)-connected graphs and fixed k &gt; 4, there are O (n)-space data structures that perform k-connectivity queries in O (1) time, but do not support output-sensitive k-path queries (see [42, 51] for k = 2, [14] for k = 3, [28] for k = 4, and <ref> [9] </ref> for k &gt; 4). Table 1 in Appendix A summarizes previous and new results on methods for k-path and k-connectivity queries. 1.2 Previous Results on Orientations and Orderings of Graphs Orientations and orderings are powerful combinatorial structures that have been successfully applied to solving various graph problems.
Reference: [10] <author> H. de Fraysseix, P. O. de Mendez, and P. Rosenstiehl. </author> <title> Bipolar orientations revisited. </title> <journal> Discrete Appl. Math., </journal> <volume> 56 </volume> <pages> 157-179, </pages> <year> 1995. </year>
Reference-contexts: One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See <ref> [10] </ref> for a recent comprehensive study of bipolar orientations. Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs. <p> Let G be an n-vertex graph with an edge (s; t). A bipolar orientation (also called st-orientation) <ref> [10, 33] </ref> of G with respect to an edge (s; t) is an orientation of the edges of G such that the resulting digraph D is acyclic, s is the unique source of D, and t is the unique sink of D.
Reference: [11] <author> H. de Fraysseix, J. Pach, and R. Pollack. </author> <title> How to draw a planar graph on a grid. </title> <journal> Combinatorica, </journal> <volume> 10 </volume> <pages> 41-51, </pages> <year> 1990. </year>
Reference-contexts: One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations. Canonical orderings were first defined by de Fraysseix, Pach and Pollack <ref> [11] </ref> for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs. They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., [8, 11, 29]). <p> Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs. They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., <ref> [8, 11, 29] </ref>). Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. <p> A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates. Independently, de Fraysseix, Pach, and Pollack <ref> [11] </ref> and Schnyder [37, 38] have shown that every planar graph with n vertices has a planar straight-line grid drawing with O (n 2 ) area.
Reference: [12] <author> H. de Fraysseix and P. Rosenstiehl. </author> <title> Structures combinatoires pour des traces automatiques de reseaux. </title> <booktitle> In Proc. 3rd European Conf. on CAD/CAM and Computer Graphics, </booktitle> <pages> pages 332-337. </pages> <address> Hermes, </address> <year> 1984. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., <ref> [1, 12, 44] </ref>), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [13] <author> G. Di Battista, P. Eades, R. Tamassia, and I. G. Tollis. </author> <title> Algorithms for drawing graphs: An annotated bibliography. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 4 </volume> <pages> 235-282, </pages> <year> 1994. </year>
Reference-contexts: A straight-line drawing is a drawing in which each edge is mapped to a straight-line segment. Planar straight-line drawings of planar graphs are a classical topic in graph drawing (a survey on graph drawing can be found in <ref> [13] </ref>). A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates.
Reference: [14] <author> G. Di Battista and R. Tamassia. </author> <title> On-line maintenance of triconnected components with SPQR-trees. </title> <journal> Algorithmica, </journal> <volume> 15(3) </volume> <pages> 302-318, </pages> <year> 1996. </year>
Reference-contexts: For general graphs and k 4, or for (k 1)-connected graphs and fixed k &gt; 4, there are O (n)-space data structures that perform k-connectivity queries in O (1) time, but do not support output-sensitive k-path queries (see [42, 51] for k = 2, <ref> [14] </ref> for k = 3, [28] for k = 4, and [9] for k &gt; 4). <p> We first consider biconnected (non-triconnected) graphs. We use a suitably augmented version of the SPQR-tree data structure for 3-connectivity queries <ref> [14] </ref>. A description of the SPQR-tree is contained in Appendix B for the reader's convenience. An example of SPQR-tree is shown in Fig. 9. Let G be a biconnected graph with n vertices and m edges, and let T be an SPQR-tree of G. <p> Computing the spanning subgraphs requires an O (m) total time. As usual, let u and v be the two vertices on which we want to perform a 3-paths query. We first perform a 3-connectivity query on u and v as shown in <ref> [14] </ref>. Lemma 21 [14] A 3-connectivity query on vertices u and v returns true if and only if there is a P-node or an R-node of T such that u and v are both allocated at . Node can be determined in O (1) time. <p> Computing the spanning subgraphs requires an O (m) total time. As usual, let u and v be the two vertices on which we want to perform a 3-paths query. We first perform a 3-connectivity query on u and v as shown in <ref> [14] </ref>. Lemma 21 [14] A 3-connectivity query on vertices u and v returns true if and only if there is a P-node or an R-node of T such that u and v are both allocated at . Node can be determined in O (1) time. <p> In the example of Fig. 9b, paths p are represented with the purple color. It remains to be proved that this recursive process requires (`) time. We need the following lemma. Lemma 22 <ref> [14] </ref> Two S-nodes cannot be adjacent in T . Two P-nodes cannot be adjacent in T . During the recursive process, each virtual edge e contained in one of the three paths is replaced with a path p - . <p> If, on the contrary, the 3-connectivity query on vertices u and v returns false, we can answer a 2-path query using the data structure of Theorem 1. We now consider connected (non-biconnected) graphs. We use a suitably augmented version of the BC-tree data structure for 3-connectivity queries <ref> [14] </ref>. A description of the BC-tree is contained in Appendix C for the reader's convenience. Let G be a connected graph and let T be a BC-tree of G. Each B-node of T is equipped with an augmented SPQR-tree described above. <p> Each B-node of T is equipped with an augmented SPQR-tree described above. Let again u and v be the two vertices on which we want to perform a 3-paths query. We first perform a 2-connectivity query on u and v as shown in <ref> [14] </ref>. Lemma 23 [14] A 2-connectivity query on vertices u and v returns true if and only if there is a B-node of T such that u and v are both allocated at . Node can be determined in O (1) time. <p> Each B-node of T is equipped with an augmented SPQR-tree described above. Let again u and v be the two vertices on which we want to perform a 3-paths query. We first perform a 2-connectivity query on u and v as shown in <ref> [14] </ref>. Lemma 23 [14] A 2-connectivity query on vertices u and v returns true if and only if there is a B-node of T such that u and v are both allocated at . Node can be determined in O (1) time.
Reference: [15] <author> G. Di Battista and R. Tamassia. </author> <title> On-line planarity testing. </title> <note> SIAM J. Comput., to appear. Preprint: Technical Report CS-92-39, </note> <institution> Comput. Sci. Dept., Brown Univ., </institution> <year> 1992. </year>
Reference-contexts: Here, we overview previous work related to our combinatorial results. Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., <ref> [6, 15, 42] </ref>), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [16] <editor> J. Edmonds. Edge-disjoint branchings. In R. Rustin, editor, </editor> <booktitle> Combinatorial Algorithms, </booktitle> <pages> pages 91-96. </pages> <publisher> Algorithmics Press, </publisher> <address> New York, </address> <year> 1972. </year> <month> 32 </month>
Reference-contexts: Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity [27, 32] and for directed graphs <ref> [16, 25, 46, 52] </ref>. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time.
Reference: [17] <author> S. Even and R. E. Tarjan. </author> <title> Network flow and testing graph connectivity. </title> <journal> SIAM J. Comput., </journal> <volume> 4 </volume> <pages> 507-518, </pages> <year> 1975. </year>
Reference-contexts: Ideally, we would like to achieve f (n) = O (1) with linear space. 1.1 Previous Results on Path and Connectivity Queries In this section, we overview previous results on k-path and k-connectivity queries. First, we consider algorithms that do not exploit preprocessing. Using network flow techniques <ref> [17] </ref>, a k-path query can be answered in O (m p n) time for arbitrary k, and in O (n + m) time for any fixed k. Regarding planar graphs, it has been recently shown that a k-path query can be performed in O (n) time for any k [49].
Reference: [18] <author> S. Even and R. E. Tarjan. </author> <title> Computing an st-numbering. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 2 </volume> <pages> 339-344, </pages> <year> 1976. </year>
Reference-contexts: Here, we overview previous work related to our combinatorial results. Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm <ref> [18, 33] </ref>, and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). <p> A biconnected graph admits a bipolar orientation with respect to any edge (s; t), which can be computed in linear time <ref> [18] </ref>. <p> Proof: The data structure simply stores rooted trees T s and T t with parent pointers. It is easy to see that this data structure can be constructed in time O (n + m) and requires O (n) space <ref> [18] </ref>.
Reference: [19] <author> I. Fary. </author> <title> On straight lines representation of planar graphs. </title> <journal> Acta Sci. Math. Szeged, </journal> <volume> 11 </volume> <pages> 229-233, </pages> <year> 1948. </year>
Reference-contexts: Planar straight-line drawings of planar graphs are a classical topic in graph drawing (a survey on graph drawing can be found in [13]). A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary <ref> [19] </ref>, and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates.
Reference: [20] <author> M. Furer, X. He, M.-Y. Kao, and B. Raghavachari. </author> <title> O(n log n)-work parallel algorithm for straight-line grid embedding of planar graphs. </title> <booktitle> In Proc. ACM Sympos. Parallel Algorithms Architect., </booktitle> <pages> pages 100-109, </pages> <year> 1992. </year>
Reference-contexts: Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized <ref> [20] </ref>. Brightwell and Trotter [3, 4] define normal families of paths for a class of planar graphs that includes triconnected planar graphs. Normal families of paths are related to Schnyder's realizers. However, they do not analyze the time complexity of their construction.
Reference: [21] <author> F. Harary. </author> <title> Graph Theory. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1969. </year>
Reference-contexts: Conclusions are contained in Section 8. 2 Preliminaries In this section, we define basic concepts used in the paper, present preliminary results on output-sensitive 2-path queries, and overview previous results on canonical orderings. 2.1 Basic Definitions We assume familiarity with graph theory <ref> [2, 21] </ref>. We recall some basic definitions on connectivity. A separating k-set of a graph is a set of k vertices whose removal disconnects the graph; separating 1-sets and 2-sets are called cut-vertices and separation pairs, respectively.
Reference: [22] <author> X. He and M.-Y. Kao. </author> <title> Regular edge labelings and drawings of planar graphs. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 96-103. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: However, they do not analyze the time complexity of their construction. Normal families of paths are important for the study of the order dimension of convex polytopes and planar maps. Graph drawing methods based on orientations, numberings and realizers are surveyed in <ref> [22] </ref>. 1.3 Previous Results on Independent Spanning Trees In recent years the problem of finding independent spanning trees of a given graph has received increasing attention.
Reference: [23] <author> J. Hopcroft and R. E. Tarjan. </author> <title> Dividing a graph into triconnected components. </title> <journal> SIAM J. Comput., </journal> <volume> 2 </volume> <pages> 135-158, </pages> <year> 1973. </year>
Reference: [24] <author> A. Huck. </author> <title> Independent trees in graphs. </title> <journal> Graphs Combin., </journal> <volume> 10(1) </volume> <pages> 29-45, </pages> <year> 1994. </year>
Reference-contexts: For general k-connected graphs with k 4 the conjecture is still open, but recently Huck has proved it for k-connected planar graphs with k = 4 <ref> [24] </ref> and k = 5 [26] (i.e., for all planar graphs, since 6-connected graphs are nonplanar).
Reference: [25] <author> A. Huck. </author> <title> Disproof of a conjecture about independent branchings in k-connected directed graphs. </title> <journal> J. Graph Theory, </journal> <volume> 20(2) </volume> <pages> 235-239, </pages> <year> 1995. </year>
Reference-contexts: Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity [27, 32] and for directed graphs <ref> [16, 25, 46, 52] </ref>. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time.
Reference: [26] <author> A. Huck. </author> <title> Independent trees in planar graphs, </title> <note> (submitted to Graphs Combin.). </note>
Reference-contexts: For general k-connected graphs with k 4 the conjecture is still open, but recently Huck has proved it for k-connected planar graphs with k = 4 [24] and k = 5 <ref> [26] </ref> (i.e., for all planar graphs, since 6-connected graphs are nonplanar).
Reference: [27] <author> A. Itai and M. Rodeh. </author> <title> The multi-tree approach to reliability in distributed networks. </title> <journal> Inform. and Comput., </journal> <volume> 79(1) </volume> <pages> 43-59, </pages> <year> 1988. </year>
Reference-contexts: An interesting conjecture about independent spanning trees is the following: for each k-connected graph G and each vertex r of G, there exist k independent spanning trees of G rooted at r. The conjecture has been proved for k = 2 by Itai and Rodeh <ref> [27] </ref>, and for k = 3, independently, by Cheriyan and Maheshwari [5], and Zehavi and Itai [54]. While the proof of Zehavi and Itai is existential, the proofs of Itai and Rodeh, and of Cheriyan and Maheshwari are constructive. <p> Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity <ref> [27, 32] </ref> and for directed graphs [16, 25, 46, 52]. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time. <p> Given a bipolar orientation of a biconnected graph G, we construct two spanning trees of G, T s and T t , rooted at s and t, respectively, as shown by Itai and Rodeh <ref> [27] </ref>. Tree T s is obtained by selecting an incoming edge for every vertex distinct from s (for vertex t an incoming edge distinct from (s; t)).
Reference: [28] <author> A. Kanevsky, R. Tamassia, G. Di Battista, and J. Chen. </author> <title> On-line maintenance of the four-connected components of a graph. </title> <booktitle> In Proc. Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 793-801, </pages> <year> 1991. </year>
Reference-contexts: For general graphs and k 4, or for (k 1)-connected graphs and fixed k &gt; 4, there are O (n)-space data structures that perform k-connectivity queries in O (1) time, but do not support output-sensitive k-path queries (see [42, 51] for k = 2, [14] for k = 3, <ref> [28] </ref> for k = 4, and [9] for k &gt; 4).
Reference: [29] <author> G. Kant. </author> <title> Drawing planar graphs using the canonical ordering. Algorithmica (Special Issue on Graph Drawing, </title> <editor> G. Di Battista and R. Tamassia, editors), </editor> <volume> 16(1) </volume> <pages> 4-32, </pages> <year> 1996. </year>
Reference-contexts: See [10] for a recent comprehensive study of bipolar orientations. Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant <ref> [29] </ref> to triconnected planar graphs. They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., [8, 11, 29]). <p> Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs. They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., <ref> [8, 11, 29] </ref>). Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. <p> with O (n 2 ) area. (A convex grid drawing is a planar straight-line drawing with faces drawn as convex polygons and vertices placed at integer coordinates.) This extends to triconnected planar graphs Schnyder's barycentric drawing method for maximal planar graphs [37], and gives an alternative proof of Kant's result <ref> [29] </ref>. 2 * Based on realizers, we show how to construct a linear-space data structure that supports output-sensitive 3-path queries on a triconnected planar graph. <p> technique and by the fact that the paths explored to compute lca s or lca t are reused for constructing one or two paths between u and v. 2 2.3 Canonical Orderings In this section we recall the definition of canonical orderings of triconnected plane graphs, as given by Kant <ref> [29] </ref>. Let G be a triconnected plane graph with n vertices, and u 0 , u 1 , u 2 be three consecutive external vertices of G. <p> fv 9 ; v 10 g, V 6 = fv 11 g, V 7 = fv 12 g, V 8 = fv 13 g, V 9 = fv 14 g, V 10 = fv 15 ; v 16 g, V 11 = fv 17 ; v 18 g, Lemma 2 <ref> [29] </ref> Each triconnected plane graph has a canonical ordering, which can be computed in linear time and space. 3 Realizers of Triconnected Planar Graphs 3.1 Definition A realizer of a triconnected plane graph G is a triplet of rooted directed spanning trees of G with the following properties (see Fig. 1.a-1.c): <p> Tutte [47, 48] has shown that for a triconnected planar graph a convex drawing can be constructed by solving a system of linear equations. More recently, Kant has presented an algorithm for constructing grid convex drawings with quadratic area <ref> [29] </ref>. His approach can be seen as the natural extension to triconnected planar graphs of the result by de Fraysseix, Pach, and Pollack for maximal planar graphs.
Reference: [30] <author> G. Kant and X. </author> <title> He. Two algorithms for finding rectangular duals of planar graphs. </title> <booktitle> In Graph-Theoretic Concepts in Computer Science (Proc. WG '93), volume 790 of Lecture Notes in Computer Science, </booktitle> <pages> pages 396-410. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., <ref> [30] </ref>). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [31] <author> D. Kelly and I. </author> <title> Rival. Planar lattices. </title> <journal> Canad. J. Math., </journal> <volume> 27(3) </volume> <pages> 636-665, </pages> <year> 1975. </year>
Reference-contexts: One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice <ref> [31] </ref> on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations. Canonical orderings were first defined by de Fraysseix, Pach and Pollack [11] for maximal planar graphs and later extended by Kant [29] to triconnected planar graphs.
Reference: [32] <author> S. Khuller and B. Schieber. </author> <title> On independent spanning trees. </title> <journal> Inform. Process. Lett., </journal> <volume> 42(6) </volume> <pages> 321-323, </pages> <year> 1992. </year>
Reference-contexts: Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity <ref> [27, 32] </ref> and for directed graphs [16, 25, 46, 52]. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time.
Reference: [33] <author> A. Lempel, S. Even, and I. Cederbaum. </author> <title> An algorithm for planarity testing of graphs. In Theory of Graphs: </title> <booktitle> Internat. Symposium, </booktitle> <pages> pages 215-232, </pages> <address> New York, 1967. </address> <publisher> Gordon and Breach. </publisher>
Reference-contexts: Here, we overview previous work related to our combinatorial results. Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm <ref> [18, 33] </ref>, and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). <p> Let G be an n-vertex graph with an edge (s; t). A bipolar orientation (also called st-orientation) <ref> [10, 33] </ref> of G with respect to an edge (s; t) is an orientation of the edges of G such that the resulting digraph D is acyclic, s is the unique source of D, and t is the unique sink of D.
Reference: [34] <author> H. Nagamochi and T. Ibaraki. </author> <title> A linear-time algorithm for finding a sparse k-connected spanning subgraph of a k-connected graph. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 583-596, </pages> <year> 1992. </year> <month> 33 </month>
Reference-contexts: If G has no vertex of degree three, we first apply the algorithm of Nagamochi and Ibaraki <ref> [34] </ref> to obtain a sparse triconnected spanning subgraph G 0 of G, which is guaranteed to have a vertex of degree three (see Lemma 2.6 of [34]). Otherwise, G 0 is identical to G. <p> If G has no vertex of degree three, we first apply the algorithm of Nagamochi and Ibaraki <ref> [34] </ref> to obtain a sparse triconnected spanning subgraph G 0 of G, which is guaranteed to have a vertex of degree three (see Lemma 2.6 of [34]). Otherwise, G 0 is identical to G. Then, a realizer of G 0 is computed, as shown in the proof of Lemma 3, with v 1 = s. A realizer of G 0 is also a realizer of G. <p> By Lemma 3 and by Theorem 2.1 of <ref> [34] </ref>, we assume that G has been embedded and a single-sink realizer T b , T g , T r of G has been constructed; this can be done in O (n) time. Trees T b , T g , and T r are implemented with parent pointers. <p> It can be computed in O (nm) time and O (m) space. The time complexity of the algorithm can be reduced from O (nm) to O (n 2 ) by computing a sparse triconnected spanning subgraph G 0 of G in O (m) time <ref> [34] </ref> and by then computing a nonseparating ear decomposition of G 0 . As noted in Section 4.1, G 0 is guaranteed to have a vertex of degree three. <p> By Lemma 15 and by Theorem 2.1 of <ref> [34] </ref>, we assume that G has been embedded and three independent spanning trees T b , T g , and T r of G with a common sink have been constructed; this can be done in O (n 2 ) time. <p> , instead of storing skeleton (), we store a sparse triconnected spanning subgraph of disjoint paths between vertices v 6 and v 14 of G. (c) The SPQR-tree of G with respect to reference edge (v 3 ; v 7 ) and the skeletons of its nodes. 25 skeleton () <ref> [34] </ref>; this reduces the space requirements to O (n). Computing the spanning subgraphs requires an O (m) total time. As usual, let u and v be the two vertices on which we want to perform a 3-paths query.
Reference: [35] <author> F. P. Preparata and R. Tamassia. </author> <title> Fully dynamic point location in a monotone subdivision. </title> <journal> SIAM J. Comput., </journal> <volume> 18 </volume> <pages> 811-830, </pages> <year> 1989. </year>
Reference-contexts: graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., <ref> [35, 45] </ref>), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [36] <author> P. Rosenstiehl and R. E. Tarjan. </author> <title> Rectilinear planar layouts and bipolar orientations of planar graphs. </title> <journal> Discrete Comput. Geom., </journal> <volume> 1(4) </volume> <pages> 343-353, </pages> <year> 1986. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., <ref> [36, 43, 53] </ref>), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [37] <author> W. Schnyder. </author> <title> Planar graphs and poset dimension. </title> <booktitle> Order, </booktitle> <volume> 5 </volume> <pages> 323-343, </pages> <year> 1989. </year>
Reference-contexts: They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., [8, 11, 29]). Schnyder <ref> [37] </ref> defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings [38]. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. <p> Our definition naturally extends the one by Schnyder <ref> [37] </ref> using a chromatic framework such that each edge of the graph has one or two colors from the set fblue, green, redg. Our realizers induce an orientation of a triconnected planar graph with properties closely related to those of bipolar orientations for biconnected planar graphs. <p> algorithm for constructing a convex grid drawing of G with O (n 2 ) area. (A convex grid drawing is a planar straight-line drawing with faces drawn as convex polygons and vertices placed at integer coordinates.) This extends to triconnected planar graphs Schnyder's barycentric drawing method for maximal planar graphs <ref> [37] </ref>, and gives an alternative proof of Kant's result [29]. 2 * Based on realizers, we show how to construct a linear-space data structure that supports output-sensitive 3-path queries on a triconnected planar graph. <p> A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates. Independently, de Fraysseix, Pach, and Pollack [11] and Schnyder <ref> [37, 38] </ref> have shown that every planar graph with n vertices has a planar straight-line grid drawing with O (n 2 ) area. <p> Recent results on convex grid drawings in the plane and in 3D space are presented in [7]. The realizers we have defined for triconnected planar graphs in Section 3 naturally extend those defined by Schnyder <ref> [37, 38] </ref> for maximal planar graphs, and can be used to devise a new algorithm for constructing grid convex drawings of triconnected planar graphs with quadratic area, as shown below. 27 We recall here the definition of weak barycentric representation of a graph given by Schnyder [37, 38]. <p> those defined by Schnyder <ref> [37, 38] </ref> for maximal planar graphs, and can be used to devise a new algorithm for constructing grid convex drawings of triconnected planar graphs with quadratic area, as shown below. 27 We recall here the definition of weak barycentric representation of a graph given by Schnyder [37, 38]. <p> Following Schnyder <ref> [37, 38] </ref>, we can obtain a weak barycentric representation of a triconnected planar graph by using a realizer to assign coordinates to the vertices; these coordinates have a purely combinatorial meaning. Lemma 24 Let G be a triconnected planar graph equipped with a realizer.
Reference: [38] <author> W. Schnyder. </author> <title> Embedding planar graphs on the grid. </title> <booktitle> In Proc. 1st ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 138-148, </pages> <year> 1990. </year>
Reference-contexts: They have been successfully applied to the construction of various types of planar drawings (straight-line, orthogonal, and polyline) (see, e.g., [8, 11, 29]). Schnyder [37] defines realizers of maximal planar graphs in his study of the order dimension of planar graphs, and shows their application to planar straight-line drawings <ref> [38] </ref>. The construction of 1 realizers of maximal planar graphs can also be efficiently parallelized [20]. Brightwell and Trotter [3, 4] define normal families of paths for a class of planar graphs that includes triconnected planar graphs. Normal families of paths are related to Schnyder's realizers. <p> A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates. Independently, de Fraysseix, Pach, and Pollack [11] and Schnyder <ref> [37, 38] </ref> have shown that every planar graph with n vertices has a planar straight-line grid drawing with O (n 2 ) area. <p> Recent results on convex grid drawings in the plane and in 3D space are presented in [7]. The realizers we have defined for triconnected planar graphs in Section 3 naturally extend those defined by Schnyder <ref> [37, 38] </ref> for maximal planar graphs, and can be used to devise a new algorithm for constructing grid convex drawings of triconnected planar graphs with quadratic area, as shown below. 27 We recall here the definition of weak barycentric representation of a graph given by Schnyder [37, 38]. <p> those defined by Schnyder <ref> [37, 38] </ref> for maximal planar graphs, and can be used to devise a new algorithm for constructing grid convex drawings of triconnected planar graphs with quadratic area, as shown below. 27 We recall here the definition of weak barycentric representation of a graph given by Schnyder [37, 38]. <p> Following Schnyder <ref> [37, 38] </ref>, we can obtain a weak barycentric representation of a triconnected planar graph by using a realizer to assign coordinates to the vertices; these coordinates have a purely combinatorial meaning. Lemma 24 Let G be a triconnected planar graph equipped with a realizer. <p> The planarity of follows from Lemma 2.1 in <ref> [38] </ref>. The convexity of can be proved as follows. Let v be an internal vertex of G.
Reference: [39] <author> W. Schnyder and W. Trotter. </author> <title> Convex embeddings of 3-connected plane graphs. </title> <booktitle> Abstracts AMS, </booktitle> <address> 13(5):502, </address> <year> 1992. </year>
Reference-contexts: It is easy to see that, after the visits of T i and T j , for each vertex v of G coordinate v k is equal to the number of faces in R k (v). 2 30 A similar result was claimed by Schnyder and Trotter <ref> [39] </ref>, but since then, to the best of our knowledge, no proof has been published.
Reference: [40] <author> S. K. Stein. </author> <title> Convex maps. </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> 2 </volume> <pages> 464-466, </pages> <year> 1951. </year>
Reference-contexts: Planar straight-line drawings of planar graphs are a classical topic in graph drawing (a survey on graph drawing can be found in [13]). A classical result independently established by Steinitz and Rademacher [41], Wagner [50], Fary [19], and Stein <ref> [40] </ref> shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates.
Reference: [41] <author> E. Steinitz and H. Rademacher. </author> <title> Vorlesungen uber die Theorie der Polyeder. </title> <publisher> Julius Springer, </publisher> <address> Berlin, Germany, </address> <year> 1934. </year>
Reference-contexts: A straight-line drawing is a drawing in which each edge is mapped to a straight-line segment. Planar straight-line drawings of planar graphs are a classical topic in graph drawing (a survey on graph drawing can be found in [13]). A classical result independently established by Steinitz and Rademacher <ref> [41] </ref>, Wagner [50], Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates.
Reference: [42] <author> R. Tamassia. </author> <title> A dynamic data structure for planar graph embedding. </title> <editor> In T. Lepisto and A. Salomaa, editors, </editor> <booktitle> Automata, Languages and Programming (Proc. ICALP '88), volume 317 of Lecture Notes in Computer Science, </booktitle> <pages> pages 576-590. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: For general graphs and k 4, or for (k 1)-connected graphs and fixed k &gt; 4, there are O (n)-space data structures that perform k-connectivity queries in O (1) time, but do not support output-sensitive k-path queries (see <ref> [42, 51] </ref> for k = 2, [14] for k = 3, [28] for k = 4, and [9] for k &gt; 4). <p> Here, we overview previous work related to our combinatorial results. Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., <ref> [6, 15, 42] </ref>), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [43] <author> R. Tamassia and I. G. Tollis. </author> <title> A unified approach to visibility representations of planar graphs. </title> <journal> Discrete Comput. Geom., </journal> <volume> 1(4) </volume> <pages> 321-341, </pages> <year> 1986. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., <ref> [36, 43, 53] </ref>), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [44] <author> R. Tamassia and I. G. Tollis. </author> <title> Planar grid embedding in linear time. </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <volume> CAS-36(9):1230-1234, </volume> <year> 1989. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., <ref> [1, 12, 44] </ref>), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [45] <author> R. Tamassia and J. S. Vitter. </author> <title> Parallel transitive closure and point location in planar structures. </title> <journal> SIAM J. Comput., </journal> <volume> 20(4) </volume> <pages> 708-725, </pages> <year> 1991. </year>
Reference-contexts: graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., [36, 43, 53]), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., <ref> [35, 45] </ref>), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph. See [10] for a recent comprehensive study of bipolar orientations.
Reference: [46] <author> P. Tong and E. Lawler. </author> <title> A faster algorithm for finding edge-disjoint branchings. </title> <journal> Inform. Process. Lett., </journal> <volume> 17(2) </volume> <pages> 73-76, </pages> <year> 1983. </year>
Reference-contexts: Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity [27, 32] and for directed graphs <ref> [16, 25, 46, 52] </ref>. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time.
Reference: [47] <author> W. T. Tutte. </author> <title> Convex representations of graphs. </title> <journal> Proc. London Math. Soc., </journal> <volume> 10 </volume> <pages> 304-320, </pages> <year> 1960. </year>
Reference-contexts: A drawing in the plane is then obtained by projection. Planar straight-line drawings have also been studied with the constraint that all faces be represented by convex polygons (convex drawings). Tutte <ref> [47, 48] </ref> has shown that for a triconnected planar graph a convex drawing can be constructed by solving a system of linear equations. More recently, Kant has presented an algorithm for constructing grid convex drawings with quadratic area [29].
Reference: [48] <author> W. T. Tutte. </author> <title> How to draw a graph. </title> <journal> Proc. London Math. Soc., </journal> <volume> 13 </volume> <pages> 743-768, </pages> <year> 1963. </year>
Reference-contexts: A drawing in the plane is then obtained by projection. Planar straight-line drawings have also been studied with the constraint that all faces be represented by convex polygons (convex drawings). Tutte <ref> [47, 48] </ref> has shown that for a triconnected planar graph a convex drawing can be constructed by solving a system of linear equations. More recently, Kant has presented an algorithm for constructing grid convex drawings with quadratic area [29].
Reference: [49] <author> D. Wagner and K. Weihe. </author> <title> A linear-time algorithm for edge-disjoint paths in planar graphs. </title> <booktitle> In Algorithms (Proc. ESA '93), volume 726 of Lecture Notes in Computer Science, </booktitle> <pages> pages 384-395. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Regarding planar graphs, it has been recently shown that a k-path query can be performed in O (n) time for any k <ref> [49] </ref>. Faster query time can be achieved if preprocessing is allowed. For k = 1, it is easy to see that a spanning forest allows one to perform 1-connectivity queries in O (1) time and 1-path queries in O (`) time.
Reference: [50] <author> K. Wagner. </author> <title> Bemerkungen zum vierfarbenproblem. </title> <journal> Jahresbericht der Deutschen Mathematiker-Vereinigung, </journal> <volume> 46 </volume> <pages> 26-32, </pages> <year> 1936. </year>
Reference-contexts: Planar straight-line drawings of planar graphs are a classical topic in graph drawing (a survey on graph drawing can be found in [13]). A classical result independently established by Steinitz and Rademacher [41], Wagner <ref> [50] </ref>, Fary [19], and Stein [40] shows that every planar graph has a planar straight-line drawing. A grid drawing is a drawing such that the vertices have integer coordinates.
Reference: [51] <author> J. Westbrook and R. E. Tarjan. </author> <title> Maintaining bridge-connected and biconnected components on-line. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 433-464, </pages> <year> 1992. </year>
Reference-contexts: For general graphs and k 4, or for (k 1)-connected graphs and fixed k &gt; 4, there are O (n)-space data structures that perform k-connectivity queries in O (1) time, but do not support output-sensitive k-path queries (see <ref> [42, 51] </ref> for k = 2, [14] for k = 3, [28] for k = 4, and [9] for k &gt; 4).
Reference: [52] <author> R. W. Whitty. </author> <title> Vertex-disjoint paths and egde-disjoint branchings in directed graphs. </title> <journal> J. Graph Theory, </journal> <volume> 11(3) </volume> <pages> 349-358, </pages> <year> 1987. </year>
Reference-contexts: Similar conjectures have been formulated considering edge-connectivity instead of vertex-connectivity [27, 32] and for directed graphs <ref> [16, 25, 46, 52] </ref>. 1.4 New Results Our new results are outlined as follows: * We define realizers of triconnected planar graphs, and show how to construct them in linear time.
Reference: [53] <author> S. K. Wismath. </author> <title> Characterizing bar line-of-sight graphs. </title> <booktitle> In Proc. 1st Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 147-152, </pages> <year> 1985. </year>
Reference-contexts: Bipolar orientations and st-numberings of biconnected graphs were first defined in conjunction with a planarity testing algorithm [18, 33], and were later used for a variety of topological and geometric graph problems, such as embedding (see, e.g., [6, 15, 42]), visibility (see, e.g., <ref> [36, 43, 53] </ref>), drawing (see, e.g., [1, 12, 44]), point location (see, e.g., [35, 45]), and floorplanning (see, e.g., [30]). One of the notable properties of planar bipolar orientations is that they induce a 2-dimensional lattice [31] on the vertices of the graph.
Reference: [54] <author> A. Zehavi and A. Itai. </author> <title> Three tree-paths. </title> <journal> J. Graph Theory, </journal> <volume> 13(2) </volume> <pages> 175-188, </pages> <year> 1989. </year> <month> 34 </month>
Reference-contexts: The conjecture has been proved for k = 2 by Itai and Rodeh [27], and for k = 3, independently, by Cheriyan and Maheshwari [5], and Zehavi and Itai <ref> [54] </ref>. While the proof of Zehavi and Itai is existential, the proofs of Itai and Rodeh, and of Cheriyan and Maheshwari are constructive. <p> O (`) time, where ` is the size of the reported paths. 5 General 3-Path Queries In this section we extend to general triconnected graphs the results on planar triconnected graphs of Section 4. 5.1 Preprocessing The realizer used for triconnected planar graphs is replaced by three independent spanning trees <ref> [5, 54] </ref>. For three independent spanning trees of a triconnected graph G, the following properties hold: 20 1. In each spanning tree, the edges of G are directed from children to parent. 2. The sinks (roots) of the spanning trees are three (possibly coincident) vertices of G. 3.
References-found: 54

