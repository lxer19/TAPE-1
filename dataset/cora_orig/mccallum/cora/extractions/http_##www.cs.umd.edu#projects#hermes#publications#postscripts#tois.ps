URL: http://www.cs.umd.edu/projects/hermes/publications/postscripts/tois.ps
Refering-URL: http://www.cs.concordia.ca/~faculty/grahne/courses/
Root-URL: 
Title: HERMES: A Heterogeneous Reasoning and Mediator System  
Author: V.S. Subrahmanian Sibel Adal Anne Brink Ross Emery James J. Lu Adil Rajput Timothy J. Rogers Robert Ross Charles Ward 
Note: This work was supported by the Army Research Office under Grant Nr. DAAL-03-92-G-0225 and by the Air Force Office of Scientific Research under Grant Nr. F49620-93-1-0065, and by ARPA/Rome Labs contract F30602-93-C-0241 (ARPA Order Nr. A716). Address Correspondence to V.S.Subrahmanian  
Abstract: Hybrid Knowledge Bases (HKB), due to Nerode and Subrahmanian, is a paradigm for integrating information from diverse sources. It forms a framework within which mediators, proposed by Wiederhold, may be formalized. HERMES is a system based on the HKB theory that has been under development over the past two years. It provides a general, declarative language for defining a mediator, which expresses semantic integration of information from diverse data sources and reasoning systems. The compiler for this language contains a facility that enables the incremental integration of new systems into an existing mediator system. Thus mediators are extensible. This paper describes the design and implementation of HERMES. Techniques for extending an existing mediator are described, illustrating how certain parts can be automated, while others may be interactively presented to a system integrator for his/her input. The system currently runs on Sun Sparc stations (under Unix), as well as on the IBM-PC platform under DOS/Windows 3.1. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Adal, </author> <title> V.S. Subrahmanian, Amalgamating Knowledge Bases, III: </title> <journal> Distributed Mediators, International Journal of Intelligent Cooperative Information Systems, </journal> <year> 1994. </year>
Reference-contexts: In HERMES, we have chosen a high-level, declarative, logic based language for constructing mediation code. The theory of this language has been investigated in considerable detail in <ref> [15, 22, 1] </ref>. The syntax of this language will be introduced in Section 2.2. HERMES provides a set of tools to assist the mediator author in the construction of mediators. Some of the tools are useful for domain integration, while others are used for semantic integration. <p> The formal semantics of these annotations has been studied in [9, 15]. We remark that the language for expressing uncertainty in annotations contains as constants, the real numbers between 0 and 1. The language also contains variables and functions interpreted over the interval <ref> [0; 1] </ref>. Likewise, the second component of each annotation is a term in a first order language for expressing temporal information. The constants in the language are sets of real numbers between 0 and 1. <p> P art; Quantity; F actory) retrieves any Supplier that lies within 50 units of distance from a given F actory, and the Supplier has enough of the component P art to satisfy F actory's request for a given Quantity of the component. query1 (Supplier; P art; Quantity; F actory) : <ref> [1; R] </ref> in (Supplier; PARADOX : project (select &gt; ( 0 db1 0 ; "qty"; Quantity); "name")) & in (Loc1; DBASE : project (select = ( 0 db2 0 ; "name"; Supplier); "location)) & in (Loc2; DBASE : project (select = ( 0 db2 0 ; "name"; F actory); "location)) & <p> A text database may be regarded as a domain whose set of values consists of characters and words. A simple example of a rules involving text database is as follows. news (W ord; Article) : <ref> [1; R] </ref> in (P; TEXTDB : headline ( 0 usatoday:idx 0 ; W ord)) & = (P:filename; Article): This rule defines a predicate that accesses a text database called textdb through the headline function, which has been implemented in textdb. <p> This may be expressed as follows: p (P erson; Rank; P icture) : <ref> [1; R] </ref> in ("GeorgeBush"; PICTUREDB : f eature (F ile)) & in (OtherP erson; PICTUREDB : f eature (F ile)) & in (Spouse; PARADOX : project (select = ( 0 spouse 0 ; Spouse1; OtherP erson); Spouse)) & news (Spouse; Article) : [1; R] & news ("taxes"; Article): 12 Note that <p> follows: p (P erson; Rank; P icture) : <ref> [1; R] </ref> in ("GeorgeBush"; PICTUREDB : f eature (F ile)) & in (OtherP erson; PICTUREDB : f eature (F ile)) & in (Spouse; PARADOX : project (select = ( 0 spouse 0 ; Spouse1; OtherP erson); Spouse)) & news (Spouse; Article) : [1; R] & news ("taxes"; Article): 12 Note that the mediator author need not be concerned with how the pre-defined function called f eature is implemented within the pictorial database a variety of implementation possibilities exist including by an image processing program, or a face recognition program, or it may have <p> It may turn out that a particular employee obtains money from both; in such cases, the mediator author may wish to write a rule of the form: salary (X; S) : <ref> [1; R] </ref> in (Sal1; PARADOX : project (select = ( 0 db1:emp comp1 0 ; "name"; X)"salary")) & in (Sal2; PARADOX : project (select = ( 0 db2:emp comp2 0 ; "nom"; X)"sal")) & Sal = Sal1 + Sal2: Note that the name (resp. salary) fields of the emp comp1 relation
Reference: [2] <author> Y. Arens, C.Y. Chee, C.-N. Hsu and C. Knoblock. </author> <title> (1993) Retrieving and Integrating Data From Multiple Information Sources, </title> <journal> International Journal of Intelligent Cooperative Information Systems, </journal> <volume> 2, 2, </volume> <pages> pps 127-158. </pages>
Reference-contexts: As such, the types of software packages and the kinds of reasoning performed in systems like HERMES are broader than those in multidatabases. Other recent efforts that are proceeding synchronously with ours, are the SIMS/LOOM effort at ISI <ref> [2] </ref> and efforts to develop a language called KQML [12]. SIMS is a system that uses an object-oriented language called LOOM to integrate information from multiple databases. Objects in the world are classified into classes and a set of relations that link objects and classes are also stored.
Reference: [3] <author> J. Benton, </author> <title> V.S. Subrahmanian, Using Hybrid Knowledge Bases for Missile Siting Problems, </title> <booktitle> Proceedings of the Conference on Artificial Intelligence Applications, IEEE Computer Society, </booktitle> <year> 1994. </year>
Reference-contexts: Access to such reasoning systems provides mediators with sophisticated abilities to extract and produce new information from existing data. As a simple example, consider the problem of terrain reasoning <ref> [3] </ref> used to analyze the terrain of a given region, which can be used to optimize the deployment of certain resources (e.g. defensive weapons systems, first aid centers, etc.) over the region. This region may be part of a "rogue" nation developing nuclear or chemical weapons. <p> This system integrates a path planning software developed at the US Army's Topographic and Engineering Center, with various relational and spatial databases describing aspects of the region covered by the terrain maps. Additional details can be found in <ref> [3] </ref>. * NIST: The National Institute of Standards and Technology is developing an application of our system for reasoning in mobile robotics. Here, the integration involves spatial data represented at multiple levels of resolution (occupancy grids to quadtrees) as well as relational data.
Reference: [4] <author> Y. Breitbart, H. Garcia-Molina, A. Silberschatz, </author> <title> Overview of Multidatabase Transaction Management, </title> <journal> Journal of Very Large Databases, </journal> <volume> 2, </volume> <pages> pp. 181-239, </pages> <year> 1992. </year>
Reference: [5] <author> M.W. Bright, A.R. Hurson, S. Pakzad, </author> <title> Automated Resolution of Semantic Heterogeneity in Multidatabases, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19, 2, </volume> <pages> pp. 212-253, </pages> <year> 1994. </year>
Reference-contexts: They show how data across multiple databases can be "linked" or "tied together" based on common attribute values (even though the attribute names may be different across different databases). Similarly, Bright et. al. <ref> [5] </ref> and Sciore et. al. [18] develop an array of methods to automatically resolve (using different techniques) semantic conflicts in multidatabases. Their work can be used to contribute to the conflict resolution toolkit that forms part of the HERMES architecture.
Reference: [6] <author> J. Grant, W. Litwin, N. Roussopoulos, T. Sellis, </author> <title> An Algebra and Calculus for Relational Multidatabase Systems, </title> <booktitle> Proceedings of the First International Workshop on Interoperability in Multidatabase Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 118 - 124, </pages> <year> 1991. </year>
Reference-contexts: Most of the works in this arena are used to integrate multiple relational databases (and in some cases, object oriented databases), identifying schema mismatches, and eliminating them as part of the query processing procedures. Some elegant pieces of work on multidatabases are those due to Litwin et. al. <ref> [13, 14, 6] </ref>. In addition, Krishnamurthy, Litwin and Kent [11] define criteria that a language that a language that integrates multiple databases must satisfy. They show how to handle schematic discrepancies.
Reference: [7] <author> J. Horst, E. Kent, H. Rifky, </author> <title> V.S. Subrahmanian, Hybrid Knowledge Bases for Real-Time Robotic Reasoning, </title> <booktitle> Proceedings of the International Workshop on Pattern Recognition in Practice, </booktitle> <editor> E. Gelsema, L. Kanal eds., </editor> <publisher> North Holland/Elsevier, </publisher> <year> 1994. </year>
Reference-contexts: Here, the integration involves spatial data represented at multiple levels of resolution (occupancy grids to quadtrees) as well as relational data. Details may be found in <ref> [7] </ref>. 2 The HERMES System The high-level architecture of the the Maryland Heterogeneous Reasoning and Mediator System (HERMES) is first described, after which the key components will be examined in more detail. 2.1 System Architecture in creating a mediator.
Reference: [8] <author> Kifer, M., Lozinskii, E., </author> <title> "A Logic for Reasoning with Inconsistency", </title> <journal> Journal of Automated Reasoning, </journal> <volume> 9, </volume> <pages> pp. 179 - 215, </pages> <year> 1992. </year>
Reference-contexts: The ability to identify and resolve conflicts in a simple and natural way is an important component of the HERMES mediating language. The idea is based partly on the recent work in annotated logics <ref> [9, 8] </ref>. On the other hand, there exists a collection of commonly used conflict resolution strategies, each corresponding to a frequently occuring conflict. These strategies have been gathered in the conflict resolving toolkit in HERMES.
Reference: [9] <author> M. Kifer, V. S. Subrahmanian, </author> <title> Theory of Generalized Annotated Logic Programming and its Applications, </title> <journal> Journal of Logic Programming, </journal> <volume> 12, 4, </volume> <pages> pp. 335-368, </pages> <year> 1992. </year>
Reference-contexts: The ability to identify and resolve conflicts in a simple and natural way is an important component of the HERMES mediating language. The idea is based partly on the recent work in annotated logics <ref> [9, 8] </ref>. On the other hand, there exists a collection of commonly used conflict resolution strategies, each corresponding to a frequently occuring conflict. These strategies have been gathered in the conflict resolving toolkit in HERMES. <p> Suppose in addition that each domain call atom holds in the body. Then conclude that A 0 is true with certainty at least 0 at all time points in t 0 . The formal semantics of these annotations has been studied in <ref> [9, 15] </ref>. We remark that the language for expressing uncertainty in annotations contains as constants, the real numbers between 0 and 1. The language also contains variables and functions interpreted over the interval [0; 1].
Reference: [10] <author> W. Kim, J. Seo, </author> <title> Classifying Schematic and Data Heterogeneity in Multidatabase Systems, </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1991. </year>
Reference: [11] <author> R. Krishnamurthy, W. Litwin, W. Kent, </author> <title> Language Features for Interoperability of Databases with Schematic Discrepancies, </title> <booktitle> Proceedings of ACM Conference on Management of Data, </booktitle> <year> 1991. </year>
Reference-contexts: Some elegant pieces of work on multidatabases are those due to Litwin et. al. [13, 14, 6]. In addition, Krishnamurthy, Litwin and Kent <ref> [11] </ref> define criteria that a language that a language that integrates multiple databases must satisfy. They show how to handle schematic discrepancies.
Reference: [12] <author> Y. Labrou and T. Finin. </author> <title> (1994) A Semantics Approach for KQML A General Purpose Communications Language for Software Agents, </title> <booktitle> Proc,. 1994 Intl. Conf. on Information and Knowledge Management, </booktitle> <address> pps 447-455. </address>
Reference-contexts: As such, the types of software packages and the kinds of reasoning performed in systems like HERMES are broader than those in multidatabases. Other recent efforts that are proceeding synchronously with ours, are the SIMS/LOOM effort at ISI [2] and efforts to develop a language called KQML <ref> [12] </ref>. SIMS is a system that uses an object-oriented language called LOOM to integrate information from multiple databases. Objects in the world are classified into classes and a set of relations that link objects and classes are also stored. Various types of inheritance properties can be expressed in LOOM.
Reference: [13] <author> W. Litwin, A. Abdellatif, </author> <title> Multidatabase Interoperability, </title> <journal> IEEE Computer, pp. </journal> <volume> 10 - 18, </volume> <month> December </month> <year> 1986. </year>
Reference-contexts: Most of the works in this arena are used to integrate multiple relational databases (and in some cases, object oriented databases), identifying schema mismatches, and eliminating them as part of the query processing procedures. Some elegant pieces of work on multidatabases are those due to Litwin et. al. <ref> [13, 14, 6] </ref>. In addition, Krishnamurthy, Litwin and Kent [11] define criteria that a language that a language that integrates multiple databases must satisfy. They show how to handle schematic discrepancies.
Reference: [14] <author> W. Litwin, A. Abdellatif, A. Zeroual, B. Nicolas, Ph. Vigier, MSQL: </author> <title> A Multidatabase Language, </title> <journal> Information Sciences, </journal> <volume> 49, </volume> <year> 1989. </year> <month> 29 </month>
Reference-contexts: Most of the works in this arena are used to integrate multiple relational databases (and in some cases, object oriented databases), identifying schema mismatches, and eliminating them as part of the query processing procedures. Some elegant pieces of work on multidatabases are those due to Litwin et. al. <ref> [13, 14, 6] </ref>. In addition, Krishnamurthy, Litwin and Kent [11] define criteria that a language that a language that integrates multiple databases must satisfy. They show how to handle schematic discrepancies.
Reference: [15] <author> J. Lu, A. Nerode, </author> <title> V.S. Subrahmanian, Hybrid Knowledge Bases, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <note> 1994. To appear. Available as technical report CS-TR-3037, </note> <institution> University of Maryland. </institution>
Reference-contexts: In HERMES, we have chosen a high-level, declarative, logic based language for constructing mediation code. The theory of this language has been investigated in considerable detail in <ref> [15, 22, 1] </ref>. The syntax of this language will be introduced in Section 2.2. HERMES provides a set of tools to assist the mediator author in the construction of mediators. Some of the tools are useful for domain integration, while others are used for semantic integration. <p> Suppose in addition that each domain call atom holds in the body. Then conclude that A 0 is true with certainty at least 0 at all time points in t 0 . The formal semantics of these annotations has been studied in <ref> [9, 15] </ref>. We remark that the language for expressing uncertainty in annotations contains as constants, the real numbers between 0 and 1. The language also contains variables and functions interpreted over the interval [0; 1].
Reference: [16] <author> S. Marcus, </author> <title> V.S. Subrahmanian, Multimedia Database Systems, </title> <note> 1994. Submitted for publication. </note>
Reference-contexts: Suppose a module existed for querying these databases to determine features present in a picture. A general architecture for such queries and a formal theoretical framework for it has been studied by Marcus and Subrahmanian in <ref> [16] </ref>. For instance, consider the predicate p (P erson; Rank; P icture) defined below which succeeds just in case P icture is one of George Bush, with the spouse of a person whose tax dealings have been reported in the newspaper.
Reference: [17] <author> W. Niblack, et. al., </author> <title> The QBIC Project: Querying Images by Content Using Color, Texture and Shape, </title> <institution> IBM Research Report, </institution> <month> Feb. </month> <year> 1993. </year>
Reference: [18] <author> E. Sciore, M. Siegel, A. </author> <title> Rosenthal Using Semantic Values to Facilitate Interoperability Among Heterogeneous Information Systems, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19, 2, </volume> <pages> pp. 254-290, </pages> <year> 1994. </year>
Reference-contexts: They show how data across multiple databases can be "linked" or "tied together" based on common attribute values (even though the attribute names may be different across different databases). Similarly, Bright et. al. [5] and Sciore et. al. <ref> [18] </ref> develop an array of methods to automatically resolve (using different techniques) semantic conflicts in multidatabases. Their work can be used to contribute to the conflict resolution toolkit that forms part of the HERMES architecture.
Reference: [19] <author> H. </author> <title> Samet The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference: [20] <author> A. Sheth, J. Larson, </author> <title> Federated Database Systems for Managing Distributed, Heterogeneous and Autonomous Databases, </title> <journal> ACM Computing Surveys, </journal> <volume> 22, 3, </volume> <pages> pp. 183-236, </pages> <year> 1990. </year>
Reference: [21] <author> S. Spaccapietra, C. Parent, </author> <title> View Integration: A Step Forward in Solving Structural Conflicts, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 6, 2, </volume> <pages> pp. 258-274, </pages> <year> 1994. </year>
Reference-contexts: They define a query language that takes such schematic mismatches into account when handling queries. In a similar vein, Spaccapietra and Parent <ref> [21] </ref> structural conflicts that arise when multiple databases contain similar, but structurally different data. They show how data across multiple databases can be "linked" or "tied together" based on common attribute values (even though the attribute names may be different across different databases).
Reference: [22] <author> V.S. Subrahmanian, </author> <title> Amalgamating Knowledge Bases, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19, 2, </volume> <pages> pp. 291-331, </pages> <year> 1994. </year>
Reference-contexts: In HERMES, we have chosen a high-level, declarative, logic based language for constructing mediation code. The theory of this language has been investigated in considerable detail in <ref> [15, 22, 1] </ref>. The syntax of this language will be introduced in Section 2.2. HERMES provides a set of tools to assist the mediator author in the construction of mediators. Some of the tools are useful for domain integration, while others are used for semantic integration.
Reference: [23] <author> W.K. Whang, S. B. Navathe, S. Chakravarthy, </author> <title> Logic-Based Approach for Realizing a Federated Information System, </title> <booktitle> Proceedings of the First International Workshop on Interoperability in Multidatabase Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 92-100, </pages> <year> 1991. </year>
Reference: [24] <author> G. Wiederhold, </author> <booktitle> Mediators in the Architecture of Future Information Systems, IEEE Computer, </booktitle> <pages> pp. 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Consequently, the different bodies of data have been organized in ways that best suited the task in question. In light of the ever increasing volume of data, Wiederhold <ref> [24, 25] </ref> has proposed the important concept of a mediator, which can be regarded as a framework for performing semantic integration over multiple data sources and reasoning systems. Integrating Heterogeneous Data Sources: Certain obvious advantages exist in being able to integrate information across multiple data sources. <p> The display of these files requires the use of the action module to "bring up" the files in the desired format. 26 3.4 Related Work Following Wiederhold's pioneering paper on mediators <ref> [24, 25] </ref>, there have been several efforts to develop general-purpose methods of integrating multiple databases. <p> More importantly, complex reasoning tasks require that we not only access multiple types of data, but that we access implementations of multiple reasoning paradigms (e.g. face recognition, pattern recognition, etc.). In this paper, we have used the notion of a "mediator," due to Wiederhold <ref> [24, 25] </ref> as the starting point for our work on integrating multiple databases and multiple software packages. Based on this idea, we have proposed a logic-based language for expressing these mediators in.
Reference: [25] <author> G. Wiederhold, </author> <title> Intelligent Integration of Information, </title> <booktitle> Proceedings of the ACM Conference on Management of Data, </booktitle> <pages> pp. 434-437, </pages> <year> 1993. </year>
Reference-contexts: Consequently, the different bodies of data have been organized in ways that best suited the task in question. In light of the ever increasing volume of data, Wiederhold <ref> [24, 25] </ref> has proposed the important concept of a mediator, which can be regarded as a framework for performing semantic integration over multiple data sources and reasoning systems. Integrating Heterogeneous Data Sources: Certain obvious advantages exist in being able to integrate information across multiple data sources. <p> The display of these files requires the use of the action module to "bring up" the files in the desired format. 26 3.4 Related Work Following Wiederhold's pioneering paper on mediators <ref> [24, 25] </ref>, there have been several efforts to develop general-purpose methods of integrating multiple databases. <p> More importantly, complex reasoning tasks require that we not only access multiple types of data, but that we access implementations of multiple reasoning paradigms (e.g. face recognition, pattern recognition, etc.). In this paper, we have used the notion of a "mediator," due to Wiederhold <ref> [24, 25] </ref> as the starting point for our work on integrating multiple databases and multiple software packages. Based on this idea, we have proposed a logic-based language for expressing these mediators in.
Reference: [26] <author> G Wiederhold, S. Jajodia, W. Litwin, </author> <title> Integrating Temporal Data in a Heterogeneous Environment, Temporal Databases, </title> <publisher> Benjamin Cummings, </publisher> <month> January </month> <year> 1993. </year> <pages> 30 31 32 33 </pages>
References-found: 26

