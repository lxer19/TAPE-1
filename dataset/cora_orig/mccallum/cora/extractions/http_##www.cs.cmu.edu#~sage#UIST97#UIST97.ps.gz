URL: http://www.cs.cmu.edu/~sage/UIST97/UIST97.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/misc/mosaic/common/omega/Web/Groups/sage/project/papers.html
Root-URL: 
Email: Email: -mad+, jake+, roth+-@cs.cmu.edu  
Title: An Interactive Visual Query Environment for Exploring Data  
Author: Mark Derthick, John Kolojejchick, Steven F. Roth 
Note: NOTE: Color versions of the figures are at, e.g., http://www.cs.cmu.edu/~sage/UIST97/figure1.gif  
Address: 5000 Forbes Avenue, Pittsburgh, PA 15213, USA  
Affiliation: Carnegie Mellon University Robotics Institute, School of Computer Science  
Abstract: Direct manipulation of visualizations is a powerful technique for performing exploratory data operations such as navigation, aggregation, and filtering. Its immediacy facilitates rapid, incremental, and reversible forays into the data. However it does not provide for reuse or modification of exploration sessions. This paper describes a visual query language, VQE, that adds these capabilities to a direct manipulation exploration environment called Visage. Queries and visualizations are dynamically linked: operations on either one immediately update the other, in contrast to the feedforward sequence of database query followed by visualization of results common in traditional systems. These features are supported by the architectural concept of threads, which represent a sequence of navigation steps on particular objects. Because they are tied to particular data objects, they can be directly manipulated. Because they represent operations, they can be generalized into queries. We expect this technique to apply to direct manipulation interfaces to any objectoriented system that represents both objects and the relationships among them. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Ahlberg, C. Williamson, and B. Shneiderman. </author> <title> Dynamic queries for information exploration: An implementation and evaluation. </title> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems (SIGCHI 92), </booktitle> <pages> pages 619-626. </pages> <publisher> ACM Press, </publisher> <year> 1992. </year>
Reference-contexts: This kind of coordination enables the user to see correlations among more variables than can be encoded in a single visualization. We can filter objects based on any numerical attribute with a Dynamic Query slider <ref> [1] </ref>. Graphical objects representing a data object whose attribute value falls outside the range selected by the slider are made invisible. The three direct manipulation operations, brushing, filtering, and drag and drop, are normally implemented under the assumption that there is a many-to-one mapping between graphical objects and data objects.
Reference: [2] <author> A. Alashqur, Stanley Su, and H. Lam: OQL: </author> <title> A Query Language for Manipulation Objectoriented Databases. </title> <booktitle> In Proceedings of the 15th International Conference on Very Large Data Bases, </booktitle> <year> 1989, </year> <pages> pages 433-442. </pages>
Reference-contexts: Objectoriented databases include path expressions [13] for describing navigation operations, but they depend on a host programming language to extract attributes of related objects. OQL query semantics are defined in terms of extensional patterns <ref> [2] </ref>, which are like threads, but are merely theoretical pedagogical concepts. Not providing threads as first class objects is most likely for efficiency reasons.
Reference: [3] <author> R. A. Becker and W. S. Cleveland. </author> <title> Brushing scatterplots. </title> <journal> Technometrics, </journal> <volume> 29(2), </volume> <year> 1987. </year>
Reference-contexts: For instance, we could aggregate the houses listed by John and look up their average size or recompose this set into sub-aggregates based on neighborhood or number of rooms (i.e. all Shadyside houses listed by John with 8 rooms). We can brush <ref> [3] </ref> graphical objects in a visualization to change their color, and have graphical objects in all visualizations representing the same data object also be colored. This kind of coordination enables the user to see correlations among more variables than can be encoded in a single visualization. <p> If graphical objects in multiple visualizations refer to the same data objects, these operations will affect all the visualizations in the same way, in which case they are said to be coordinated. Becker and Cleveland <ref> [3] </ref> originally conceived this architectural approach to coordination, and it represented a significant advance over earlier visualizations using ad hoc data structures. However their elegantly simple notion breaks down in the face of a database with multiple object types.
Reference: [4] <author> R. J. Brachman, P. G. Selfridge, L. G. Terveen, B. Altman, A. Borgida, F. Halper, T. Kirk, A. Lazar, D. L. McGuinness, and L. A. Resnick. </author> <title> Integrated support for data archaeology. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 159-185, </pages> <year> 1993. </year>
Reference-contexts: To complete the analogy with VQE, Butterfly would be able to modify queries by operations on query results. For instance, additional keywords associated with a citation might be dragged into the query. 5.5 IMACS IMACS <ref> [4] </ref> has very similar goals to Visage/VQE. It supports analysts iterative exploration and visualization of data, including query reuse. Its foundation is the knowledge representation system CLASSIC, which is much more sophisticated than the objectoriented database we use.
Reference: [5] <author> M. C. Chuah, S. F. Roth, J. Kolojejchick, J. Mattis, and O. Juarez. Sagebook: </author> <title> Searching data-graphics by content. </title> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems (SIGCHI '95), </booktitle> <pages> pages 338-345. </pages> <address> ACM/SIGCHI, </address> <year> 1995. </year>
Reference-contexts: We intend to extend the SageBook <ref> [5] </ref> interface to enable searching for queries based on characteristics of the visualizations or the query. 2.7 Different Input to the Query Later, the agent has been exploring pricing strategies.
Reference: [6] <editor> R. Cooper, editor. </editor> <booktitle> Proceedings of 1st International Workshop on Interfaces to Database Systems. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: There are many other conceptual level query interfaces from the database community, but all are less elegant than GQL, and none visualize results in an interesting or incremental way (see for instance many of the papers in <ref> [6] </ref>). 5.2 Exbase Exbase [7] is similar to this work in terms of motivation, in that it seeks to provide an intermediary between a database and a visualization system. However the emphasis is on explicitly representing the history of user interaction with the database and visualizations.
Reference: [7] <author> J. P. Lee and G. G Grinstein. </author> <title> Describing visual interactions to the database: closing the loop between user and data. </title> <booktitle> In Proceedings of Visual Data Exploration and Analysis III (SPIE 96), </booktitle> <year> 1996. </year>
Reference-contexts: There are many other conceptual level query interfaces from the database community, but all are less elegant than GQL, and none visualize results in an interesting or incremental way (see for instance many of the papers in [6]). 5.2 Exbase Exbase <ref> [7] </ref> is similar to this work in terms of motivation, in that it seeks to provide an intermediary between a database and a visualization system. However the emphasis is on explicitly representing the history of user interaction with the database and visualizations.
Reference: [8] <author> J. D. Mackinlay, R. Rao, and S. K. Card. </author> <title> An organic user interface for searching citation links. </title> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems (SIGCHI 95). </booktitle> <publisher> ACM Press, </publisher> <year> 1995. </year>
Reference-contexts: We have not yet addressed the question of maintaining histories, having chosen to focus on intuitive query languages and integration of querying and visualization - topics that Exbase, which uses SQL as a query language, has not yet addressed. 5.4 Butterfly Butterfly <ref> [8] </ref> is a citation searching and browsing application. Searching is done by selecting databases and attribute/value pairs. Browsing is done by following reference and citer links. Butterfly is able to hide the complex database queries from the user, largely because the class of queries can be anticipated.
Reference: [9] <author> A. Papantonakis and P. J. H. King. </author> <title> Syntax and semantics of GQL, a graphical query language. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 6 </volume> <pages> 3-25, </pages> <year> 1995. </year>
Reference-contexts: RELATED WORK 5.1 GQL GQL <ref> [9] </ref> is a fully visual conceptual level Graphical Query Language with the expressiveness of SQL. VQEs visual representation of the query graph is adapted from GQL, with some interface modifications such as using containment to show attributes rather than links. The plotted against the number of days on the market.
Reference: [10] <author> S. F. Roth, M. C. Chuah, S. Kerpedjiev, J. A. Kolojejchick, and P. Lucas. </author> <title> Towards an information visualization workspace: Combining multiple means of expression. Human-Computer Interaction, </title> <publisher> in press, </publisher> <year> 1997. </year>
Reference: [11] <author> S. F. Roth, P. Lucas, J. A. Senn, C. C. Gomberg, M. B. Burks, P. J. Stroffolino, J. A. Kolojejchick, and C. Dunmire. Visage: </author> <title> A user interface environment for exploring information. </title> <booktitle> In Proceedings of Information Visualization, </booktitle> <pages> pages 3-12. </pages> <publisher> IEEE, </publisher> <year> 1996. </year>
Reference: [12] <author> P. G. Selfridge, D. Srivastava, and L. O. Wilson. </author> <title> Idea: Interactive data exploration and analysis. </title> <booktitle> In Proceedings of SIGMOD 1996, </booktitle> <year> 1996. </year>
Reference-contexts: On the other hand, in later work the same group reverted to a simpler knowledge representation system to decrease the overhead and allow exploration of larger data sets <ref> [12] </ref>. IMACS visualizations do not support direct manipulation interaction, and it uses a textual query language. Queries are somewhat more expressive than VQEs. 6. SUMMARY VQE combines a GQL-style intentional visual query language with direct-manipulation data exploration capabilities as found in systems like Visage, IVEE, and the Influence Explorer.
Reference: [13] <author> Z.-H. Tang, G. Gardarin, and V. Smahi. </author> <title> Optimizing path expressions using navigational algebraic operators. </title> <booktitle> In Proceedings of Database and Expert Systems Applications, DEXA '96, </booktitle> <pages> pages 574-583, </pages> <year> 1996. </year>
Reference-contexts: Even within the objectoriented database community, there is no mention of first class objects that refer to structures of domain-level objects. Objectoriented databases include path expressions <ref> [13] </ref> for describing navigation operations, but they depend on a host programming language to extract attributes of related objects. OQL query semantics are defined in terms of extensional patterns [2], which are like threads, but are merely theoretical pedagogical concepts.
Reference: [14] <author> L. Tweedie, R. Spence, H. Dawkes, and H. Su. </author> <title> Externalising abstract mathematical models. </title> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems (SIGCHI '96), </booktitle> <pages> pages 406-412. </pages> <address> ACM/SIGCHI, </address> <year> 1996. </year>
Reference-contexts: Therefore each query node must maintain a count of the number of threads filtered out for each object. When this number crosses a threshold, the histogram is updated just as in the ordinary case <ref> [14] </ref>. Drag and Drop. Rather than storing the graph structure on every thread, it is stored as a separate template, and all threads with the same structure point to the same template. The template records the object type of each node, and the relationships between pairs of nodes.
References-found: 14

