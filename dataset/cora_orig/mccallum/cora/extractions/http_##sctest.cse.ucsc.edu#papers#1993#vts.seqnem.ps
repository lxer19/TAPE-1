URL: http://sctest.cse.ucsc.edu/papers/1993/vts.seqnem.ps
Refering-URL: http://www.cse.ucsc.edu/~larrabee/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Explorations of Sequential ATPG Using Boolean Satisfiability  
Author: Haluk Konuk Tracy Larrabee 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California, Santa Cruz  
Abstract: This paper presents a sequential test generation method based on Boolean satisfiability. The method produces near-minimal test sizes. We discuss the flexibility provided by Boolean satisfiability to extend the fault model to realistic faults. Experimental results using ISCAS-89 benchmark circuits and comparisons with previously published results are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abramovici, K.B. Rajan, and D.T. Miller. </author> <title> FREEZE!: A new approach for testing sequential circuits. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: Abramovici et al. presents a recent approach for sequential test generation to produce small test sets <ref> [1] </ref>, TG LT or Comb. Max TG FSim Eff. SU Abor- Red.
Reference: [2] <author> M. A. Breuer. </author> <title> A random and an algorithmic technique for fault detection test generation for sequential circuits. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 1364-1370, </pages> <month> November </month> <year> 1971. </year>
Reference-contexts: The near-minimal test size is obtained by using a forward time processing (FTP) technique similar to the S Algorithm by Breuer <ref> [2] </ref>.
Reference: [3] <author> F. Brglez, D. Bryan, and K. Kozminski. </author> <title> Combinational profiles of sequential benchmark circuits. </title> <booktitle> In Proceedings of International Symposium on Circuits and Systems, </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: Even though we did not aim at a sytem which produces sequential tests in less time than published results, our system performed favorably over STEED and STALLION in terms of CPU times for some examples from the ISCAS-89 sequential circuits <ref> [3] </ref> (mostly because we do not spend time preprocessing these sequentially shallow circuits for the purpose of functional learning, such as state transition graph extraction and ON-set OFF-set extraction).
Reference: [4] <author> Kwang-Ting Cheng. </author> <title> Recent advances in sequential test generation. </title> <booktitle> In Proceedings of IEEE VLSI Test Symposium, </booktitle> <month> April </month> <year> 1992. </year>
Reference-contexts: Our approach is on the structural end of the spectrum described by Cheng <ref> [4] </ref>.
Reference: [5] <author> H. Cho, G.D. Hachtel, and F. Somenzi. </author> <title> Fast sequential ATPG based on implicit state enumeration. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The purpose is to demonstrate the feasibility of Boolean satis-fiability in sequential test generation, and to produce near-minimal number of test vectors in order to show how much bigger test sizes are being produced by more mature test generation systems, such as VERITAS <ref> [5] </ref>, STEED [8], and STALLION [10]. The near-minimal test size is obtained by using a forward time processing (FTP) technique similar to the S Algorithm by Breuer [2]. <p> for test generation compared to STEED in the cases of s641, s713, s1196, and s1238, for which STEED CPU times are 8.5 h, 8.7 h, 3.4 h, and 3 h, respectively on a VAX 11/8800 which is about three times slower than a DECstation 5000 according to Cho et al. <ref> [5] </ref>.
Reference: [6] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test pattern generation for current testable faults in static CMOS circuits. </title> <booktitle> In Proceedings of IEEE VLSI Test Symposium, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: The Boolean satisfiability method can be easily extended to handle fault models other than single stuck-at, such as bridge faults and current testable faults <ref> [6] </ref>, [7]. Our intention is to eventually produce a sequential ATPG system for realistic faults. The sequential circuits covered in this paper are assumed to have the following properties. 1. The sequential circuit is synchronous with its com binational part described at the gate level. 2.
Reference: [7] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test pattern generation for realistic bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The Boolean satisfiability method can be easily extended to handle fault models other than single stuck-at, such as bridge faults and current testable faults [6], <ref> [7] </ref>. Our intention is to eventually produce a sequential ATPG system for realistic faults. The sequential circuits covered in this paper are assumed to have the following properties. 1. The sequential circuit is synchronous with its com binational part described at the gate level. 2.
Reference: [8] <author> A. Ghosh, S. Devadas, and A.R. </author> <title> Newton. Test generation and verification for highly sequential circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 652-667, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The purpose is to demonstrate the feasibility of Boolean satis-fiability in sequential test generation, and to produce near-minimal number of test vectors in order to show how much bigger test sizes are being produced by more mature test generation systems, such as VERITAS [5], STEED <ref> [8] </ref>, and STALLION [10]. The near-minimal test size is obtained by using a forward time processing (FTP) technique similar to the S Algorithm by Breuer [2].
Reference: [9] <author> Tracy Larrabee. </author> <title> Test pattern generation using Boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 6-22, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: 1 Introduction In this paper we present a sequential test generation method based on Boolean satisfiability <ref> [9] </ref>. The purpose is to demonstrate the feasibility of Boolean satis-fiability in sequential test generation, and to produce near-minimal number of test vectors in order to show how much bigger test sizes are being produced by more mature test generation systems, such as VERITAS [5], STEED [8], and STALLION [10]. <p> the exprerimental results, and finally Section 6 discusses the conclusions and future work. v1 v3 v4 stuck-at-1 v1 v3 v5 v5 f free circuits 2 The underlying combinational ATPG Nemesis The underlying combinational test generation algorithm is based on Boolean satisfiability used as part of the Nemesis combinational ATPG system <ref> [9] </ref>. Since the Boolean satisfiability method is a recent development, it deserves some explanation which we will do using a simple example. Consider the circuit shown in Assume that we want to generate a test for v4 stuck-at-1. <p> The second set of clauses added to the formula specifies the critical values for fault propagation that must be assigned to the lines that are not on any path from a fault site to a PO line. Larrabee provides detailed information on these clauses and on Nemesis in general <ref> [9] </ref>. 3 The test generation algorithm The basic test generation strategy used in this paper is based on the iterative array logic model of the sequential circuit.
Reference: [10] <author> H.T. Ma, S. Devadas, A.R. Newton, and A. S.- Vincentelli. </author> <title> Test generation for sequential circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 1081-1093, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: The purpose is to demonstrate the feasibility of Boolean satis-fiability in sequential test generation, and to produce near-minimal number of test vectors in order to show how much bigger test sizes are being produced by more mature test generation systems, such as VERITAS [5], STEED [8], and STALLION <ref> [10] </ref>. The near-minimal test size is obtained by using a forward time processing (FTP) technique similar to the S Algorithm by Breuer [2].
Reference: [11] <author> P. Muth. </author> <title> A nine-valued circuit model for test generation. </title> <journal> IEEE Transactionson Computers, </journal> <pages> pages 630-636, </pages> <month> June </month> <year> 1976. </year>
Reference-contexts: Since the Boolean satisfia-bility method is an implicitly 9-value algorithm, it can be safely used in sequential ATPG without a concern for the completeness problem pointed out by Muth <ref> [11] </ref>. 2. The Boolean satisfiability method can be easily extended to handle fault models other than single stuck-at, such as bridge faults and current testable faults [6], [7]. Our intention is to eventually produce a sequential ATPG system for realistic faults.
Reference: [12] <author> T. Nierman and J.H. Patel. HITEC: </author> <title> A test generation package for sequential circuits. </title> <booktitle> In Proceedings of Euro-pean Design Automation Conference, </booktitle> <month> February </month> <year> 1991. </year>
Reference-contexts: The reset state for a flip-flop is assumed to be logic 0. The (#FLTs) column in Table 1 gives the total number of single stuck-at faults after equivalence fault collapsing, which matches the numbers given by Nierman et al. <ref> [12] </ref>. The (TG Eff. (%)) column gives the test generation efficiency, which is the percentage of faults, for which tests are generated or which are proved to be untestable, over the total number of faults.
Reference: [13] <author> J. A. Waicukauski, E. B. Eichelberger, D. O. Forlenza, E. Lindbloom, and T. McCarthy. </author> <title> Fault simulation for structured VLSI. VLSI Systems Design, </title> <address> VI:20-32, </address> <year> 1985. </year>
Reference-contexts: Note that a given target fault repeats itself in every time frame, thus mapping the problem onto a multiple stuck-at combinational ATPG. A two-stage test generation is carried out as follows. (a) Random test patterns are applied to circuit C N , and Parallel Pattern Single Fault Propagation <ref> [13] </ref> is used to cover some of the remaining faults. Note that a test pattern that detects a fault is actually a test sequence with N vectors.
References-found: 13

