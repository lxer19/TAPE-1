URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-98-04.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: hopenwasser@acm.org  
Title: An Isotach Network Simulator  
Author: Lance S. Hopenwasser 
Date: March 11, 1998  
Address: Charlottesville, VA 22903-2442  
Affiliation: Department of Computer Science, University of Virginia,  
Pubnum: Technical Report CS-98-04  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> Avalanche scalable parallel processor project. </institution> <note> Avalanche project information is available from http://www.cs.utah.edu/projects/avalanche/avalanche-publications.html. </note>
Reference-contexts: The network layer part of the simulator is based on a simulator written by the Avalanche group <ref> [1] </ref> which models messages as they traverse the Myrinet network. See Appendix B for details concerning the actual structure and legacies of the original Myrinet simulator. The network, which uses wormhole routing, was originally modeled by a configurable topology of hosts, switches, and links.
Reference: [2] <author> Yitzhak Birk, Phillip B. Gibbons, Jorge L. C. Sanz, and Danny Soroker. </author> <title> A simple mechanism for efficient barrier synchronization in mimd machines. </title> <type> Research Report RJ 7078 (674141), </type> <institution> IBM Almaden Research Center, </institution> <address> 650 Harry Road, San Jose, CA 95120, </address> <month> October </month> <year> 1989. </year>
Reference: [3] <author> Nanette J. Boden, Danny Cohen, Robert E. Felderman, Alan E. Kulawik, Charles L. Seitz, Jakov N. Seizovic, and Wen-King Su. </author> <title> Myrinet | a gigabit-per-second local-area network. </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 29-36, </pages> <month> February </month> <year> 1995. </year> <note> This article is also available from http://www.myri.com/research/publications/Hot.ps. </note>
Reference-contexts: Introduction 1.1 Goals, Motivations, and Contributions The main contribution of this project is a simulator that models an Isotach [14] system running on a Myrinet network <ref> [3] </ref>. The simulator is intended to be useful for studying the performance of Isotach networks as well as providing a means for experimenting with alternative implementations of Isotach networks. <p> Examples of this form are: traceSections: [] specialSections: <ref> [0, 3, 27] </ref> In these examples there are no trace sections and three special sections. The three special sections are section 0, section 3, and section 27. The third form of a parameter entry is an indexed list of values.
Reference: [4] <author> Frank Brill. </author> <title> Myrinet simulation programmer's guide. Available in pre-Isotach simulator code release, </title> <year> 1996. </year>
Reference: [5] <author> Frank Brill. </author> <title> Myrinet simulation user's guide. Available in pre-Isotach simulator code release, </title> <year> 1996. </year>
Reference-contexts: Thus these parameters do not clutter up the individual simParms.txt files, which in turn reduces the number of typographic errors. An example of each of these files is included in the sampleDataFiles sub-directory in the release directory. A.3.1 Format of network.dat <ref> [5] </ref> This file specifies four types of information: the number of hosts (PEs) in the network, the number of switches in the network, the links among hosts and switches, and the routing table for PE to PE messages.
Reference: [6] <author> Eugene D. Brooks III. </author> <title> The butterfly barrier. </title> <journal> International Journal of Parallel Programming, </journal> <volume> 15(4) </volume> <pages> 295-307, </pages> <year> 1986. </year>
Reference: [7] <author> Debra Hensgen, Raphael Finkel, and Udi Manber. </author> <title> Two algorithms for barrier syncronization. </title> <journal> International Journal of Parallel Programming, </journal> <volume> 17(1) </volume> <pages> 1-17, </pages> <year> 1988. </year>
Reference: [8] <author> Rahmat S. Hyder and David A. Wood. </author> <title> Synchronization hardware for networks of workstations: Performance vs. cost. </title> <type> Technical report, </type> <institution> Computer Sciences Department, University of Wisconsin|Madison, </institution> <address> 1210 West Dayton Street, Madison, WI 53706, n.d. </address> <month> 73 </month>
Reference: [9] <author> Leslie Lamport. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Communi--cations of the ACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <month> July </month> <year> 1978. </year>
Reference-contexts: Isotach logical time is defined by an extension to the rules of logical time as described by Lamport in <ref> [9] </ref>. In general, logical times can be represented by lexicographically ordered n-tuples of integers. Isotach logical time is represented by a three-tuple in the format of (pulse, pid, rank ) where the pulse is the basic unit of logical time.
Reference: [10] <author> Kurt Mehlhorn and Stefan Naher. </author> <title> The LEDA platform of combinatorial and geometric computing. </title> <note> Chapter excerpt available from http://www.mpi-sb.mpg.de/~mehlhorn/LEDAbook.html, 1997. </note>
Reference-contexts: Finally, all random numbers used in the simulator are generated using LEDA (Library of Efficient Datatypes and Algorithms). The validity of the LEDA random number generators is discussed in <ref> [10] </ref>. Chapter 4 Conclusion In conclusion, we developed a simulator that usefully models Isotach systems. This development involved understanding and modifying inherited code from a previous simulation.
Reference: [11] <author> Lionel M. Ni and Philip K. McKinley. </author> <title> A survey of wormhole routing techniques in direct networks. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference: [12] <author> Dhabaleswar K. Panda. </author> <title> Fast barrier synchronization in wormhole k-ary n-cube networks with multidestination worms. </title> <journal> Journal of Future Computer Systems, </journal> <month> November </month> <year> 1995. </year>
Reference: [13] <author> John Regehr. </author> <title> An Isotach implementation for Myrinet. </title> <type> Technical Report CS-97-12, </type> <institution> Department of Computer Science, University of Virginia, </institution> <address> Charlottesville, VA 22903, </address> <month> May </month> <year> 1997. </year> <note> This report is also available from http://www.cs.virginia.edu/~isotach/pubs.html. </note>
Reference-contexts: There are currently two prototypes of the Isotach system in development: a completely commercial off-the-shelf (COTS) version, in which the Isotach guarantees are implemented in software, and an implementation that makes use of custom hardware components as well as COTS hardware. For more information about the software implementation, see <ref> [13] </ref>. This simulator models the second implementation, which we discuss in more detail in Sections 2.2 and 2.3. This simulator will be used for further studies on Isotach system behavior, including specifically some studies of the flex algorithm, an alternative algorithm for implementing Isotach systems.
Reference: [14] <author> Paul F. Reynolds, Craig Williams, and Raymond R. Wagner, Jr. </author> <title> Isotach networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 8(4), </volume> <month> April </month> <year> 1997. </year> <note> This article is also available from http://www.cs.virginia.edu/~isotach/pubs.html. </note>
Reference-contexts: Introduction 1.1 Goals, Motivations, and Contributions The main contribution of this project is a simulator that models an Isotach <ref> [14] </ref> system running on a Myrinet network [3]. The simulator is intended to be useful for studying the performance of Isotach networks as well as providing a means for experimenting with alternative implementations of Isotach networks. <p> a graphical representation of some of the predefined network topologies included in the code release is given in Appendix C. 8 Chapter 2 Background 2.1 What is Isotach Logical Time? The essence of Isotach networks is to provide an inexpensive method for creating a total ordering in a distributed system <ref> [14, 15] </ref>. Isotach logical time is defined by an extension to the rules of logical time as described by Lamport in [9]. In general, logical times can be represented by lexicographically ordered n-tuples of integers.
Reference: [15] <author> Craig Williams. </author> <title> Concurrency Control in Asynchronous Computations. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Virginia, </institution> <address> Charlottesville, VA 22903, </address> <month> January </month> <year> 1993. </year> <note> This dissertation is also available from http://www.cs.virginia.edu/~isotach/pubs.html. 74 </note>
Reference-contexts: a graphical representation of some of the predefined network topologies included in the code release is given in Appendix C. 8 Chapter 2 Background 2.1 What is Isotach Logical Time? The essence of Isotach networks is to provide an inexpensive method for creating a total ordering in a distributed system <ref> [14, 15] </ref>. Isotach logical time is defined by an extension to the rules of logical time as described by Lamport in [9]. In general, logical times can be represented by lexicographically ordered n-tuples of integers.
References-found: 15

