URL: http://www.win.tue.nl/cs/ipa/uitp/papers/Eastaughffe.ps.gz
Refering-URL: http://www.win.tue.nl/cs/ipa/uitp/proceedings.html
Root-URL: http://www.win.tue.nl
Email: Katherine.Eastaughffe@cl.cam.ac.uk  
Title: Support for Interactive Theorem Proving: Some Design Principles and Their Application  
Author: Katherine A. Eastaughffe 
Address: Pembroke Street, Cambridge CB2 3QG United Kingdom  
Affiliation: Computer Laboratory, Cambridge University  
Abstract: This paper proposes a set of guidelines for use in the design of automated support for theorem proving. In particular they are aimed at graphical user interfaces to existing interactive proof engines. The application of these guidelines to the design of a graphical user interface to Isabelle is described. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Aitken, J. S., Gray, P., Melham, T., Thomas, M., </author> <title> Interactive theorem proving: An empirical study of user activity, </title> <journal> Journal of Symbolic Computation 25, </journal> <note> 2 (February 1998), 263 - 284 </note>
Reference-contexts: Concerted effort should be made to compile a more complete list and investigate the validity of these guidelines by user experiments and other HCI techniques. Such a de facto standard could go a long way towards greater movement between proof tools of users, theorems and proofs. Aitken et al. <ref> [1] </ref> define three levels of abstraction for describing user interfaces: the logical level which describes a logical view of the theorem proving task, the abstract interaction level which describes the information presented to the user and the concrete interaction level which describes the physical aspects of the interaction.
Reference: 2. <author> Eastaughffe, K. A., Ozols, M. A., Cant, A., </author> <title> The visualisation of interactive proofs, </title> <booktitle> In Proceedings of the 20th Australasian Computer Science Conference (Sydney, </booktitle> <address> Australia, </address> <month> February </month> <year> 1997), </year> <title> vol. </title> <booktitle> 19 of Australian Computer Science Communications, </booktitle> <pages> pp. 297-306 </pages>
Reference-contexts: This level can be used to describe proof tools in which the user can reason about and guide a proof using actions and objects that are meaningful with respect to a specific domain <ref> [2] </ref>. Examples may include visual geometric reasoning tools and hardware design tools. Although this idea does not have the appeal of genericity it is perhaps the only hope for the integration of theorem proving into mainstream design tools and other tools to aid human reasoning.
Reference: 3. <author> Harrison, J. R., </author> <title> Proof style, </title> <type> Tech. Rep. 410, </type> <institution> Computer Laboratory, University of Cam-bridge, </institution> <month> Jan. </month> <year> 1997 </year>
Reference: 4. <author> Kolyang, Luth, C., Meier, T., Wolff, B., TAS and IsaWin: </author> <title> Generic interfaces for transformational program development and theorem proving, </title> <booktitle> In TAPSOFT '97: Theory and Practice of Software Development (1997), </booktitle> <editor> M. D. M. Bidoit, Ed., </editor> <publisher> LNCS 1214, Springer Verlag, </publisher> <pages> pp. 855-858 </pages>
Reference: 5. <author> Libes, D., </author> <title> Exploring Expect, </title> <publisher> O'Reilly & Associates, </publisher> <year> 1995 </year>
Reference: 6. <author> Mayhew, D. J., </author> <title> Principles and Guidelines in Software User Interface Design, </title> <publisher> Prentice Hall, </publisher> <address> Engelwood Cliffs, NJ, </address> <year> 1992 </year>
Reference: 7. <author> Merriam, N. A., Harrison, M. D., </author> <title> What is wrong with GUIs for theorem provers, In Proceedings of User Interfaces for Theorem Provers (1997) </title>
Reference: 8. <author> Ousterhout, J., </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison-Wesley, </publisher> <year> 1994 </year>
Reference: 9. <author> Ozols, M. A., Eastaughffe, K. A., Cant, A., XIsabelle: </author> <title> A system description, </title> <booktitle> In Proceedings of 14th International Conference on Automated Deduction (July 1997), </booktitle> <editor> W. McCune, Ed., </editor> <volume> vol. </volume> <publisher> 1249 of LNAI, Springer-Verlag, </publisher> <pages> pp. 366-389 </pages>
Reference: 10. <author> Paulson, L. C., </author> <title> Isabelle: A Generic Theorem Prover, </title> <publisher> Springer, </publisher> <year> 1994, </year> <note> LNCS 828 </note>
Reference: 11. <author> Rasmussen, J., </author> <title> Information Processing and Human Machine Interaction: An Approach to Cognitive Engineering, </title> <publisher> North-Holland, </publisher> <address> New York, </address> <year> 1986 </year>
Reference: 12. <author> Shneiderman, B., </author> <title> Designing the User Interface, 2 ed., </title> <publisher> Addison-Wesley, </publisher> <year> 1992 </year>
Reference: 13. <author> Smith, S. L., Mosier, J. N., </author> <title> Guidelines for designing user interface software, </title> <type> Tech. Rep. </type> <institution> ESD-TR-86-278, The MITRE Corporation, Bedford, Massachusetts, USA, </institution> <month> August </month> <year> 1986 </year>
Reference: 14. <author> Syme, D., </author> <title> A new interface for HOL ideas, </title> <booktitle> issues and implementation, In Proceedings of Conference on Theorem Proving and its Applications (1995) </booktitle>
References-found: 14

