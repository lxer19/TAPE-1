URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/papers/anarch.ps.gz
Refering-URL: http://www.cs.gatech.edu/fac/Ellen.Zegura/pubs.html
Root-URL: 
Email: email: fbobby,calvert,ewzg@cc.gatech.edu  
Title: An Architecture for Active Networking  
Author: Samrat Bhattacharjee, Kenneth L. Calvert, Ellen W. Zegura 
Keyword: active networks, congestion control, MPEG, early packet discard  
Address: Atlanta, GA 30332.  
Affiliation: Networking and Telecommunications Group College of Computing, Georgia Institute of Technology,  
Abstract: Active networking offers a change in the usual network paradigm: from passive carrier of bits to a more general computation engine. The implementation of such a change is likely to enable radical new applications that cannot be foreseen today. Large-scale deployment, however, involves significant challenges in interoperability, security, and scalability. In this paper we define an active networking architecture in which users control the invocation of pre-defined, network-based functions through control information in packet headers. After defining our active networking architecture, we consider a problem (namely, network congestion) that may benefit in the near-term from active networking, and thus may help justify migration to this new paradigm. Given an architecture allowing applications to exercise some control over network processing, the bandwidth allocated to each application's packets can be reduced in a manner that is tailored to the application, rather than being applied generically. Our results show that the ability to gracefully adapt to congestion makes a good case for active networking. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Armitage and K. Adans. </author> <title> Packet reassembly during cell loss. </title> <journal> IEEE Network Magazine, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: Such transformations will be application-specific and computationally complex (not to mention the significant issues they raise regarding interaction with end-to-end mechanisms such as error detection and sequence numbering). We therefore focus on the special case of intelligent discard of data. Using a natural extension of packet-level discard <ref> [1] </ref>, we allow applications to define units based on application semantics, with aim of discarding the entire unit if any portion must be discarded.
Reference: [2] <author> F. Bonomi and K. Fendick. </author> <title> The rate-based flow control framework for the available bit rate ATM service. </title> <journal> IEEE Network Magazine, </journal> <month> March/April </month> <year> 1995. </year>
Reference: [3] <author> E. Brinksma. </author> <title> An introduction to lotos. </title> <booktitle> In Proc. 7th IFIP WG 6.1 Workshop on Protocol Specification, Testing and Verification, </booktitle> <year> 1987. </year>
Reference-contexts: Ideally, function semantics would be given in a standard notation such as LOTOS <ref> [3] </ref>, SDL [4], or another notation developed specifically for the purpose. A standard environment, comprising support services such as private state storage and retrieval, access to shared state information (e.g. routing tables), message forwarding primitives, etc., would provide a foundation on which new AN functions services could be built.
Reference: [4] <author> CCITT. </author> <note> Recommendations z.101 to z.110. Blue Book, </note> <year> 1988. </year>
Reference-contexts: Ideally, function semantics would be given in a standard notation such as LOTOS [3], SDL <ref> [4] </ref>, or another notation developed specifically for the purpose. A standard environment, comprising support services such as private state storage and retrieval, access to shared state information (e.g. routing tables), message forwarding primitives, etc., would provide a foundation on which new AN functions services could be built.
Reference: [5] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In ACM SIGCOMM '88, </booktitle> <year> 1988. </year>
Reference: [6] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of TCP traffic over ATM networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> May </month> <year> 1995. </year>
Reference-contexts: In the first, we detect and respond to congestion only when data arrives that cannot fit in the output queue. All three mechanisms mentioned above use this trigger. We also consider an "early" trigger, following the Early Packet Discard of Romanow and Floyd <ref> [6] </ref>. This trigger detects and responds to congestion when the output queue occupancy exceeds a certain threshold. Our Early MPEG Discard mechanism combines the GOP Level Discard with an early congestion trigger. 4 EXPERIMENTAL METHODOLOGY 4.1 Topology and Data streams The experimental topology is shown in Figure 1.
Reference: [7] <author> D. L. Tennenhouse and D. J. Wetherall. </author> <title> Towards an active network architecture. </title> <booktitle> In Multimedia Computing and Networking '96, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: However, active networking also raises a number of issues, including security, interoperability and migration strategy. All of these are influenced in large part by the active networking architecture, fl In this paper we focus on packet- and cell-switched networks. We follow Tennenhouse and Wetherall <ref> [7] </ref> in adopting the term active networking; the differences between our approach and theirs are elucidated later. c flIFIP 1996. Published by Chapman & Hall which defines the interface between the users and the capabilities provided by the network. <p> This single function thus extends the set of functions computable at a node to include all computable functions. The "active capsule"approach of Wetherall and Tennenhouse <ref> [7] </ref> is based upon this idea. In this approach, the interface between the user and the active network is a programming language, with well-defined syntax and semantics. 2.3 An AN Implementation We have implemented several AN functions in an IP routing architecture.
References-found: 7

