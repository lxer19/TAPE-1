URL: http://www.cs.umn.edu/Users/dept/users/CS8199/amulet/CMU-CS-95-176.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/CS8199/amulet/
Root-URL: http://www.cs.umn.edu
Title: Amulet's Dynamic and Flexible Prototype-Instance Object and Constraint System in C++  
Author: Rich McDaniel and Brad A. Myers 
Web: http://www.cs.cmu.edu/~amulet  
Address: Pittsburgh, PA 15213  
Affiliation: School of Computer Science Carnegie Mellon University  
Date: July 1995  
Pubnum: CMU-CS-95-176  
Abstract: Also appears as Human-Computer Interaction Institute Technical Report CMU-HCII-95-104 Abstract In order to support rapid prototyping and efficient construction of user interface software, the Amulet user interface development environment uses a prototype-instance object model integrated with a constraint solver. The important innovations in the Amulet object and constraint systems are the automatic management of a part-owner hierarchy in addition to the prototype instance hierarchy, the support for multiple constraint solvers at the same time, control over slot inheritance, flexible demons, and a convenient integration of the models with C++ without requiring a pre-processor. This research was sponsored by NCCOSC under Contract No. N66001-94-C-6037, ARPA Order No. B326. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of NCCOSC or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [Avrahami 89] <editor> Gideon Avrahami and Kenneth P. Brooks and Marc H. </editor> <publisher> Brown. </publisher>
Reference-contexts: However, when interactor objects are added to a window, they cause different internal data structures to be set up. Some systems, such as FormsVBT <ref> [Avrahami 89] </ref> have hard-wired some slots to inherit from their prototypes and others to inherit from their owners.
References-found: 1

