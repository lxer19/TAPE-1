URL: http://www.cs.caltech.edu/~kiniry/projects/Modeling98/submissions/sadou.ps
Refering-URL: http://www.cs.caltech.edu/~kiniry/projects/Modeling98/submissions.html
Root-URL: http://www.cs.caltech.edu
Email: E-mail: sadou@iu-vannes.fr,Gautier.Koscielny@univ-ubs.fr  
Phone: Phone: 33 2 97 68 32 39 Fax: 33 2 97 68 32 33  
Title: Services group: an Environment Design Paradigm  
Author: Salah Sadou and Gautier Koscielny ORCADE-VALORIA, 
Address: Vannes, rue Yves Mainguy, Vannes, France.  
Affiliation: Universite de Bretagne Sud, IUP de  
Abstract: In this paper we introduce a paradigm allowing the modelization of services offered by a distributed objects system. This paradigm is concretized in the environment of execution by an entity called "services group". The services group is an intermediary between clients and servers. It gathers the services related to the same context of application. Each service is represented in the services group by a single definition and the servers objects provide him with the various ones for the implementation of this same service. The area of the possible services of a system is then synthesized by a set of hierarchically organized services groups. This approach has several advantages and among them the simplification of the writing of clients objects. Indeed, the client does not have to worry any more about the identity or the number of servers having to perform its request. Moreover, not knowing of the identity of the servers allows the evolution of the system without consequences for the client.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Workshop on compositional software architectures. </institution> <note> http://www.objs.com/workshops/ws9801/index.html, january 1998. </note> <institution> Monterey, California. </institution>
Reference-contexts: Having knowledge of the possible service whole bound to one even context, the services group can construct new services by composition of the existing ones. The services group is a paradigm unifying of solutions, existing otherwise, to problems of objects composition <ref> [1] </ref>, of fault-tolerance [6] and of dynamic reuse [?]. In the remaining part of this article we shall introduce the modelization of the services field through an example.
Reference: [2] <author> Kristensen B. B. </author> <title> Object-oriented modeling with roles. </title> <booktitle> In Proceedings of the 2nd International Conference on Object-Oriented Information Systems (OOIS'95), </booktitle> <address> Dublin, Ireland, </address> <year> 1995. </year>
Reference-contexts: For instance the lecturer L3 intervenes in two SG: one related to teaching and the other one to administration. It is obvious that Administration and Network SG do not need the same subset of the object L3 methods. This underlines the concept of role <ref> [2] </ref> where the same object is regarded as a teacher or an administrator according to what one asks him to do. In addition various lecturers can propose several services to the same SG. This characteristic opens multiple possibilities with SG.
Reference: [3] <author> D. Gelernter and N. Carriero. </author> <title> Coordination languages and their significance. </title> <journal> Communications of the ACM, </journal> <volume> 35(2) </volume> <pages> 97-107, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: The concept of services groups clearly makes for the separation between the expression of coordination between objecs and the expression of their 6 own behaviour <ref> [3] </ref>. This suggests the separation between the environment and applications modeling. We must initially model and implement the execution environment before even defining any application.
Reference: [4] <author> Object Management Group. </author> <title> CORBAservices : Common Object Services Specification, chapter Object Collection Specification. Object Management Group, </title> <publisher> Inc. Publications, </publisher> <month> november </month> <year> 1997. </year>
Reference-contexts: 1 Introduction Currently, the modelization of applications to distributed objects is highly influence by the client/server reuse mode, which is provided by most soft ware architecture designs (Rm-od-p [7], Corba <ref> [4] </ref>). The client objects fl This work is partially supported by the Brittany Regional Council and European Union, No. 691, Op. 1227896 1 calls servers objects which provide the required service. Those are generally accessed via a naming or trading [5]server.
Reference: [5] <author> Object Management Group. </author> <title> CORBAservices : Common Object Services Specification, chapter Trading Object Service Specification. Object Management Group, </title> <publisher> Inc. Publications, </publisher> <month> march </month> <year> 1997. </year> <month> 97-12-23. </month>
Reference: [6] <author> S. Maffeis. </author> <title> Adding group communication and fault-tolerance to CORBA. </title> <booktitle> In USENIX Association, editor, Proceedings of the USENIX Conference on Object-Oriented Technologies (COOTS): </booktitle> <address> June 26-29, 1995, Monterey, California, USA, </address> <pages> pages 135-146, </pages> <address> Berkeley, CA, USA, June 19951995. </address> <publisher> USENIX. </publisher>
Reference-contexts: Having knowledge of the possible service whole bound to one even context, the services group can construct new services by composition of the existing ones. The services group is a paradigm unifying of solutions, existing otherwise, to problems of objects composition [1], of fault-tolerance <ref> [6] </ref> and of dynamic reuse [?]. In the remaining part of this article we shall introduce the modelization of the services field through an example.
Reference: [7] <author> ODP. </author> <title> Open Distributed Processing. </title> <address> http://info.gte.com/ftp/doc/activities/x3h7/by model/ODP.html. </address>
Reference-contexts: 1 Introduction Currently, the modelization of applications to distributed objects is highly influence by the client/server reuse mode, which is provided by most soft ware architecture designs (Rm-od-p <ref> [7] </ref>, Corba [4]). The client objects fl This work is partially supported by the Brittany Regional Council and European Union, No. 691, Op. 1227896 1 calls servers objects which provide the required service. Those are generally accessed via a naming or trading [5]server.

References-found: 7

