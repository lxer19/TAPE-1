URL: ftp://ftp.cs.caltech.edu/tr/cs-tr-96-25.ps.Z
Refering-URL: ftp://ftp.cs.caltech.edu/tr/INDEX.html
Root-URL: http://www.cs.caltech.edu
Title: The Mesh Archetype  
Author: Berna L. Massingill 
Abstract: A parallel program archetype aids in the development of reliable, efficient parallel applications with common computation/communication structures by providing development methods and code libraries specific to the structure. This document presents an archetype for mesh computations. It describes the common structure captured by the archetype abstraction, discusses a parallelization strategy for such computations, documents our code library to support this parallelization strategy, and presents a collection of example application programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Argonne National Laboratory. The Fortran M programming language. </institution> <note> Available via http://www.mcs.anl.gov/fortran-m/FM.html. </note>
Reference-contexts: In general, the user-level specifications of all implementations are the same. Where they differ, we describe here the Fortran M 3D implementation. (Fortran M <ref> [2, 1] </ref> is a Fortran variant available via anonymous FTP from Argonne National Labs.) 2.1 Parameter definitions The application programmer supplies PARAMETER definitions for the following: * The dimensions of the (N -dimensional) grid. * The width of the ghost boundary. (This width cannot be larger than the size of a <p> It assumes that the Fortran M compiler (fm) <ref> [2, 1] </ref> is installed.
Reference: [2] <author> I. T. Foster and K. M. Chandy. </author> <title> FORTRAN M: A language for modular parallel programming. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 26(1) </volume> <pages> 24-35, </pages> <year> 1995. </year>
Reference-contexts: In general, the user-level specifications of all implementations are the same. Where they differ, we describe here the Fortran M 3D implementation. (Fortran M <ref> [2, 1] </ref> is a Fortran variant available via anonymous FTP from Argonne National Labs.) 2.1 Parameter definitions The application programmer supplies PARAMETER definitions for the following: * The dimensions of the (N -dimensional) grid. * The width of the ghost boundary. (This width cannot be larger than the size of a <p> It assumes that the Fortran M compiler (fm) <ref> [2, 1] </ref> is installed.
Reference: [3] <author> E. F. Van de Velde. </author> <title> Concurrent Scientific Computing. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year> <month> 35 </month>
Reference-contexts: i.e., by discretizing the problem domain and applying the following operation to all interior points until convergence is reached: 4u (i;j) = h 2 f i;j + u (i1;j) + u (i+1;j) + u (i;j1) + u (i;j+1) (This example is based on the discussion of the Poisson problem in <ref> [3] </ref>). A sequential program for this computation is straightforward. It maintains two copies of variable u, one for the current iteration (uk) and one for the next iteration (ukp1). At each iteration, it computes the values of ukp1 based on the values of uk.
References-found: 3

