URL: ftp://ftp.ics.hawaii.edu/pub/tr/ics-tr-96-05.ps.Z
Refering-URL: ftp://ftp.ics.hawaii.edu/pub/tr/INDEX.html
Root-URL: 
Email: johnson@hawaii.edu  
Phone: (808) 956-3489  
Title: State as an Organizing Principle for CSCW Architectures  
Author: Philip Johnson 
Address: Honolulu, Hawaii 96822  
Affiliation: Collaborative Software Development Laboratory Department of Information and Computer Sciences University of Hawaii  
Abstract: A useful way to gain insight into collaborative architectures is by analyzing how they collect, represent, store, analyze, and distribute state information. This paper presents state as an organizing principle for collaborative architectures. It uses a framework with eight dimensions to analyze four systems: WWW, GroupKit, Lotus Notes, and Egret. The analysis illuminates similarities and differences between these architectures, and yields two conjectures: that no single collaborative architecture can fully support both collaboration-in-the-small and collaboration-in-the-large, and that flexible and efficient support for state management requires architectural support for agents as first-class users. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Keith Andrews, Frank Kappe, and Hermann Maurer. </author> <title> Serving information to the web with Hyper-G. </title> <booktitle> In Proceedings of the Third International World-Wide Web Conference (WWW'95), Darmstadt, </booktitle> <address> Germany, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: These architectures were chosen because they form an interesting cross-section of design choices; analysis of the state properties of other CSCW architectures, such as Hyper-G <ref> [1] </ref>, would also be interesting and useful. The WWW needs no introduction for the CSCW community, of course. In this discussion, however, the architectural model of WWW is viewed in a somewhat narrow fashion.
Reference: 2. <author> Tim Berners-Lee, Robert Cailliau, Henrik Frystyk Nielsen, and Arthur Secret. </author> <title> The world-wide web. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 76-82, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: The WWW is unlike Egret, for example, which requires autonomous agents as part of its core implementation. Agents in WWW are incidental, not essential to its architecture. Most interestingly, the http protocol underlying the WWW is defined as stateless <ref> [2] </ref>. This design decision provides superb scalability, but greatly constrains the possibilities for state collection and manipulation. GroupKit is a groupware toolkit that lets developers build applications for synchronous and distributed computer-based conferencing [9]. <p> This also makes a stateless protocol appropriate, as it returns results based on the URI that are irrelevant of any previous operations performed by the client. <ref> [2] </ref> More colloquially speaking, the WWW architecture has no explicit representation of users who visit a single web site and surf through the artifacts provided by its server over the course of minutes or hours. Similarly, the WWW architecture does not represent or support conferences.
Reference: 3. <institution> Lotus Inc. </institution> <note> Lotus notes. </note>
Reference-contexts: GroupKit is a groupware toolkit that lets developers build applications for synchronous and distributed computer-based conferencing [9]. This CSCW architecture includes a run-time infrastructure for process management, groupware programming abstractions, user interface widgets, and session management mechanisms. Lotus Notes is a toolkit for building distributed, primarily asynchronous conferences <ref> [3] </ref>. In this architecture, developers build structured forms (or notes) which members of the collaborating group create, view, and modify. The database of notes can be fully replicated to remote sites, or accessed via a centralized server in a client-server architecture.
Reference: 4. <author> Philip M. Johnson. </author> <title> Supporting exploratory CSCW with the EGRET framework. </title> <booktitle> In Proceedings of the 1992 Conference on Computer Supported Cooperative Work, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: All of these environments were built using Egret <ref> [4] </ref>, an architecture and development environment for CSCW applications. As we built these systems, we accumulated general requirements for collaboration from these various domains that we pushed downward into the framework.
Reference: 5. <author> Philip M. Johnson and Carleton Moore. </author> <title> Investigating strong collaboration with the annotated egret navigator. </title> <booktitle> In Proceedings of the Fourth IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET-ICE '95), </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: INTRODUCTION Over the past five years, the Collaborative Software Development Laboratory at the University of Hawaii has designed, implemented, and evaluated a variety of CSCW systems. This work includes CLARE, a collaborative learning environment [10]; CSRS, a collaborative software review environment [6]; AEN, a collaborative hypertext authoring environment <ref> [5] </ref>, HI-TIME, a collaborative system for telecommunications policy planning; Shemacs, a collaborative editor [7]; and Flashmail, a collaborative messaging facility. All of these environments were built using Egret [4], an architecture and development environment for CSCW applications.
Reference: 6. <author> Philip M. Johnson and Danu Tjahjono. </author> <title> Improving software quality through computer supported collaborative review. </title> <booktitle> In Proceedings of the Third European Conference on Computer Supported Cooperative Work, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: INTRODUCTION Over the past five years, the Collaborative Software Development Laboratory at the University of Hawaii has designed, implemented, and evaluated a variety of CSCW systems. This work includes CLARE, a collaborative learning environment [10]; CSRS, a collaborative software review environment <ref> [6] </ref>; AEN, a collaborative hypertext authoring environment [5], HI-TIME, a collaborative system for telecommunications policy planning; Shemacs, a collaborative editor [7]; and Flashmail, a collaborative messaging facility. All of these environments were built using Egret [4], an architecture and development environment for CSCW applications.
Reference: 7. <author> Julio Polo. </author> <title> A quick guided tour of Shemacs. </title> <type> Technical report, </type> <institution> Department of Information and Computer Sciences, 2565 The Mall, University of Hawaii, </institution> <address> Honolulu, Hawaii 96822, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: This work includes CLARE, a collaborative learning environment [10]; CSRS, a collaborative software review environment [6]; AEN, a collaborative hypertext authoring environment [5], HI-TIME, a collaborative system for telecommunications policy planning; Shemacs, a collaborative editor <ref> [7] </ref>; and Flashmail, a collaborative messaging facility. All of these environments were built using Egret [4], an architecture and development environment for CSCW applications. As we built these systems, we accumulated general requirements for collaboration from these various domains that we pushed downward into the framework.
Reference: 8. <author> Mark Roseman. </author> <type> Personal communication, </type> <month> October </month> <year> 1995. </year>
Reference-contexts: However, users, artifacts, sessions, and conferences are ephemeral in GroupKit: nothing persists beyond or between conferences. The concept of users exists only within the current real-time conference session. No information is held about past users in a conference, nor any notion of a long term community <ref> [8] </ref>. The Egret architecture provides both representations and support for sessions, and support (such as chat tools) but no explicit representations for conferences of simultaneously connected, interacting users. State persists across sessions and conferences.
Reference: 9. <author> Mark Roseman and Saul Greenberg. </author> <title> Building Real Time Groupware with GroupKit, A Groupware Toolkit. </title> <type> Technical Report 95/560/12, </type> <institution> Department of Computer Science, University of Calgary, Calgary, Alberta, Canada, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: Most interestingly, the http protocol underlying the WWW is defined as stateless [2]. This design decision provides superb scalability, but greatly constrains the possibilities for state collection and manipulation. GroupKit is a groupware toolkit that lets developers build applications for synchronous and distributed computer-based conferencing <ref> [9] </ref>. This CSCW architecture includes a run-time infrastructure for process management, groupware programming abstractions, user interface widgets, and session management mechanisms. Lotus Notes is a toolkit for building distributed, primarily asynchronous conferences [3].
Reference: 10. <author> Dadong Wan and Philip M. Johnson. </author> <title> Computer-supported collaborative learning using CLARE: the approach and experimental findings. </title> <booktitle> In Proceedings of the 1994 ACM Conference on Computer Supported Cooperative Work, </booktitle> <address> Chapel Hill, North Carolina, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: INTRODUCTION Over the past five years, the Collaborative Software Development Laboratory at the University of Hawaii has designed, implemented, and evaluated a variety of CSCW systems. This work includes CLARE, a collaborative learning environment <ref> [10] </ref>; CSRS, a collaborative software review environment [6]; AEN, a collaborative hypertext authoring environment [5], HI-TIME, a collaborative system for telecommunications policy planning; Shemacs, a collaborative editor [7]; and Flashmail, a collaborative messaging facility.
References-found: 10

