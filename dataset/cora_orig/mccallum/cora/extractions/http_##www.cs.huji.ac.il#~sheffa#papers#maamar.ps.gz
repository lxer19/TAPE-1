URL: http://www.cs.huji.ac.il/~sheffa/papers/maamar.ps.gz
Refering-URL: http://www.cs.huji.ac.il/~sheffa/index.html
Root-URL: http://www.cs.huji.ac.il
Email: farir|sheffa|bercog@cs.huji.ac.il  
Title: Volume-Preserving Free-Form Solids  
Author: Ari Rappoport Alla Sheffer Michel Bercovier 
Note: Page 1  
Address: Jerusalem 91904, Israel.  
Affiliation: Institute of Computer Science, The Hebrew University of Jerusalem  
Abstract: Some important trends in geometric modeling are the reliance on solid models rather than surface-based models and the enhancement of the expressive power of models, by using freeform objects in addition to the usual geometric primitives and by incorporating physical principles. An additional trend is the emphasis on interactive performance. In this paper we integrate all of these requirements in a single geometric primitive by endowing the tri-variate tensor product free-form solid with several important physical properties, including volume and internal deformation energy. Volume preservation is of benefit in several application areas of geometric modeling, including computer animation, industrial design and mechanical engineering. However, previous physics-based methods, which usually have used some forms of `energy', have neglected the issue of volume (or area) preservation. We present a novel method for modeling an object composed of several tensor-product solids while preserving the desired volume of each primitive and ensuring high-order continuity constraints between the primitives. The method utilizes the Uzawa algorithm for non-linear optimization, with objective functions based on deformation energy or least squares. We show how the algorithm can be used in an interactive environment by relaxing exactness requirements while the user interactively manipulates free-form solid primitives. On current workstations, the algorithm runs in real-time for tri-quadratic volumes and close to real-time for tri cubic volumes. 
Abstract-found: 1
Intro-found: 1
Reference: [Arrow58] <author> Arrow, K., Hurwicz, L., Uzawa H., </author> <title> Studies in Linear and Nonlinear Programming, </title> <publisher> Stanford University Press, Stanford, </publisher> <address> CA, </address> <year> 1958. </year>
Reference-contexts: This approach was introduced in the finite element method for rubber type materials, but here we avoid the complexity of the penalty approach [Bercovier81] and use a duality argument to deal with the constraint, based on the Uzawa algorithm for non-linear programming <ref> [Arrow58, Ciarlet88] </ref>. Special measures were taken in order to endow the algorithm with real-time performance on current workstations.
Reference: [Aumann92] <author> Aumann, G., </author> <title> Two algorithms for volume-preserving approximations of surfaces of revolution, </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 24(12) </volume> <pages> 651-657, </pages> <year> 1992. </year>
Reference-contexts: We are not aware of any work using similar ideas for free-form solids. Other applications of physics-based modeling are in reconstruction and tracking [Fang92], motion control [Shapiro88], and modeling of flexible and rigid objects [Barzel88]. The only relevant reference we are aware of for volume preservation 1 is <ref> [Aumann92] </ref>, which gives an algorithm that approximates a surface of revolution by a surface which is not a surface of revolution while trying to preserve the original volume. Free-form solids are not discussed, and it seems that the algorithm is not suited for them at all.
Reference: [Barzel88] <author> Barzel, R., Barr, A.H., </author> <title> A modeling system based on dynamic constraints, </title> <booktitle> Computer Graphics 22(4) </booktitle> <pages> 179-188, </pages> <note> 1988 (SIGGRAPH 88). </note>
Reference-contexts: We are not aware of any work using similar ideas for free-form solids. Other applications of physics-based modeling are in reconstruction and tracking [Fang92], motion control [Shapiro88], and modeling of flexible and rigid objects <ref> [Barzel88] </ref>. The only relevant reference we are aware of for volume preservation 1 is [Aumann92], which gives an algorithm that approximates a surface of revolution by a surface which is not a surface of revolution while trying to preserve the original volume.
Reference: [Bercovier81] <author> Bercovier, M., Hasbani, Y., Gilon, Y., Bathe, K.J., </author> <title> A finite element procedure for nonlinear incompressible elasticity, invited paper, Symp. on Hybrid and Mixed Methods, </title> <editor> S. Atluri, (ed.), </editor> <publisher> Wiley, </publisher> <year> 1981. </year>
Reference-contexts: This approach was introduced in the finite element method for rubber type materials, but here we avoid the complexity of the penalty approach <ref> [Bercovier81] </ref> and use a duality argument to deal with the constraint, based on the Uzawa algorithm for non-linear programming [Arrow58, Ciarlet88]. Special measures were taken in order to endow the algorithm with real-time performance on current workstations.
Reference: [Bercovier93] <author> Bercovier, M., </author> <title> Yacoby A Minimization, constraints and composite Bezier curves. </title> <institution> Leibniz center for Research in Computer Science, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: Geometric continuity yields non-linear constraints which are difficult to express and solve, and therefore we do not use them in this work. For more details on geometric constraints see <ref> [Bercovier93] </ref>. 5.2 Other Constraints The following types of constraints can easily be handled in addition to continuity constraints: * Fixing a point at a given location, resulting in equations such as P r i c r where c r i is a constant. * Attaching two points together, resulting in equations
Reference: [Borrel91] <author> Borrel, P., Bechmann, D., </author> <title> Deformation of n-dimensional objects, </title> <journal> Intl. Journal of Computational Geometry and Applications, </journal> <volume> 1(4), </volume> <booktitle> 1991. Also in ACM Symposium on Solid Modeling, </booktitle> <address> Austin, </address> <month> June 5-7, </month> <year> 1991, </year> <pages> pp 351-370. </pages>
Reference-contexts: Naturally, other basis functions (such as NURBS) could be used as well [Griessmair89]. Sederberg suggested a user interface based on control point manipulation, with which is it rather difficult and tedious to obtain a desired deformation. Direct manipulation of object points instead of control point manipulation was suggested in <ref> [Borrel91, Hsu92] </ref>. <p> The control points configurations can either be given directly by the user through control point manipulation, or computed from point displacement constraints specified by direct solid manipulation as in <ref> [Borrel91, Hsu92] </ref>. The algorithm computes a control point configuration closest to the given one (in a deformation energy minimization or least square sense) such that the deformed primitives contain volume of the given sizes and obeying the linear constraints.
Reference: [Borrel94] <author> Borrel, P., Rappoport, A., </author> <title> Simple constrained deformations for geometric modeling and interactive design. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(2) </volume> <pages> 137-155, </pages> <year> 1994. </year>
Reference: [Celniker91] <author> Celniker, G., Gossard, D., </author> <title> Deformable curve and surface finite elements for free form shape design, </title> <booktitle> Computer Graphics 25(4) </booktitle> <pages> 257-266, </pages> <note> 1991 (SIGGRAPH 91). </note>
Reference-contexts: Neither of the above methods attaches any physical meaning of the deformation. Simple constrained deformations were described in [Bor-rel94]. Physics-based modeling is a successful research area in geometric modeling. Several papers <ref> [Terzopoulos94, Welch92, Kallay93, Moreton92, Celniker91, Greiner93] </ref> presented surface design schemes based on minimization of an energy functional subject to linear point constraints such as location and tangent vectors. We are not aware of any work using similar ideas for free-form solids.
Reference: [Chadwick89] <author> Chadwick, J.E., Haumann, D.R., Parent, R.E., </author> <title> Layered construction for de-formable animated characters, </title> <booktitle> Computer Graphics 23(3) </booktitle> <pages> 243-252, </pages> <note> 1989 (SIGGRAPH 89). </note>
Reference-contexts: The method utilizes the Uzawa algorithm for non-linear optimization, with an objective function based on deformation energy or least squares (LSQ). The algorithm is very useful for several applications. For example, hierarchical FFDs were used by <ref> [Chadwick89] </ref> for computer animation of muscles. A similar effect could be achieved by a combination of point displacement constraints and smooth modification of desired volume size. The algorithm is useful in industrial design, where basic functional requirements are automatically obeyed without imposing limitation on the creativity of the designer.
Reference: [Ciarlet88] <author> Ciarlet, P.G., </author> <title> Introduction to Numerical Linear Algebra and Optimization, </title> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: This approach was introduced in the finite element method for rubber type materials, but here we avoid the complexity of the penalty approach [Bercovier81] and use a duality argument to deal with the constraint, based on the Uzawa algorithm for non-linear programming <ref> [Arrow58, Ciarlet88] </ref>. Special measures were taken in order to endow the algorithm with real-time performance on current workstations. <p> As explained in <ref> [Ciarlet88] </ref>, the constrained minimization problem (M) can be reformulated as finding a solution to the unconstrained min-max problem (S) defined by (S) max min L (P; ; fl): A necessary condition for a triplet (P; ; fl) to be a solution of (S) is the vanishing of the partial derivatives: @L <p> We use a version of the Uzawa method tailored to our problem <ref> [Ciarlet88] </ref>. Uzawa's method is an iterative method allowing one to solve an inequality constrained minimization problem by replacing it with a sequence of unconstrained minimization problems. Since we do not have inequality constraints we can use a simpler version.
Reference: [Coquillart90] <author> Coquillart, S., </author> <title> Extended free form deformation: a sculpturing tool for 3D geometric modeling, </title> <booktitle> Computer Graphics 24(4) </booktitle> <pages> 187-193, </pages> <note> 1990 (SIGGRAPH 90). </note>
Reference: [Elber94] <author> Elber, G., </author> <title> Symbolic and numeric computation in curve interrogation. </title> <note> To appear, </note> <institution> Computer Graphics Forum. </institution>
Reference-contexts: Formulae for computing the area or volume en 1 [Sederberg86] refers to an unpublished report about volume preserving deformations, but such deformations cannot be everywhere locally satisfied with polynomial fields except for the simple case of pure shears. Page 2 closed by curves and surface patches were given in <ref> [Elber94, Liu87] </ref>. 1.2 Proposed Approach We use free-form solids as design primitives. In the context of solid model design in general and specifically of free-form solids, one of the most basic physical properties of a space cell is its volume size.
Reference: [Fang92] <author> Fang, L., Gossard, </author> <title> D.C., Reconstruction for smooth parametric surfaces from unorganized data points, </title> <booktitle> SPIE Vol. 1830, Curves and Surfaces in Computer Vision and Graphics III, </booktitle> <year> 1992, </year> <pages> pp. 226-236. </pages>
Reference-contexts: We are not aware of any work using similar ideas for free-form solids. Other applications of physics-based modeling are in reconstruction and tracking <ref> [Fang92] </ref>, motion control [Shapiro88], and modeling of flexible and rigid objects [Barzel88].
Reference: [Farin92] <author> Farin, G., </author> <title> Curves and Surfaces for Computer Aided Geometric Design, </title> <booktitle> 3rd. </booktitle> <address> edition, </address> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: entry in the first row and column of the Jacobian matrix is @F x = i j k du i (u)B n v k P x The derivative of a Bernstein polynomial of order n can be expressed by the scaled difference of two Bernstein polynomials of order n 1 <ref> [Farin92] </ref>: d B n i1 (u) B n1 with the convention that B a b (u) = 0 for b &lt; 0; a &lt; 0, or b &gt; a.
Reference: [Farouki85] <author> Farouki, R., Hinds, J., </author> <title> A hierarchy of geometric forms, </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 5(5) </volume> <pages> 51-78, </pages> <year> 1985. </year>
Reference-contexts: Such attributes are easier to consider when using parametric free-form solids instead of surfaces. The difference between the two is the dimension of the parameter space (two for surfaces and three for solids.) Some previous systems have used free-form solids (e.g. <ref> [Farouki85] </ref>.) However, parametric volumes are usually not used in the way that surfaces are used, for direct object design, but rather for design of separate deformation entities used for modification of existing objects.
Reference: [Gibson44] <author> Gibson, </author> <title> G.A., Advanced Calculus, </title> <publisher> Macmillan, </publisher> <address> London, </address> <year> 1944. </year>
Reference: [Greiner93] <author> Greiner, G., Seidel, H.-P., </author> <title> Curvature continuous blend surfaces. </title> <booktitle> IFIP Conference on Geometric Modeling in Computer Graphics, </booktitle> <address> Gen-ova, Italy, </address> <month> June </month> <year> 1993. </year> <note> Published in: </note> <editor> Falcidieno, B., Kunii T.L. (eds), </editor> <booktitle> Geometric Modeling in Computer Graphics, </booktitle> <pages> pp. 309-317, </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: Neither of the above methods attaches any physical meaning of the deformation. Simple constrained deformations were described in [Bor-rel94]. Physics-based modeling is a successful research area in geometric modeling. Several papers <ref> [Terzopoulos94, Welch92, Kallay93, Moreton92, Celniker91, Greiner93] </ref> presented surface design schemes based on minimization of an energy functional subject to linear point constraints such as location and tangent vectors. We are not aware of any work using similar ideas for free-form solids.
Reference: [Griessmair89] <author> Griessmair, J., Purgathofer, W., </author> <title> Deformation of solids with tri-variate B-splines, </title> <booktitle> Eu-rographics '89, </booktitle> <pages> 137-148, </pages> <year> 1989. </year>
Reference-contexts: To deform an object point, its local coordinates inside the unit cube are computed. Then the image of the point under the deformation is computed using the Bezier control points and basis functions. Naturally, other basis functions (such as NURBS) could be used as well <ref> [Griessmair89] </ref>. Sederberg suggested a user interface based on control point manipulation, with which is it rather difficult and tedious to obtain a desired deformation. Direct manipulation of object points instead of control point manipulation was suggested in [Borrel91, Hsu92].
Reference: [Hsu92] <author> Hsu, W.M., Hughes, J.F., Kaufman, H., </author> <title> Direct manipulation of free-form deformations, </title> <booktitle> Computer Graphics 26(2) </booktitle> <pages> 177-184, </pages> <year> 1992 </year> <month> (SIG-GRAPH 92). </month>
Reference-contexts: Naturally, other basis functions (such as NURBS) could be used as well [Griessmair89]. Sederberg suggested a user interface based on control point manipulation, with which is it rather difficult and tedious to obtain a desired deformation. Direct manipulation of object points instead of control point manipulation was suggested in <ref> [Borrel91, Hsu92] </ref>. <p> The control points configurations can either be given directly by the user through control point manipulation, or computed from point displacement constraints specified by direct solid manipulation as in <ref> [Borrel91, Hsu92] </ref>. The algorithm computes a control point configuration closest to the given one (in a deformation energy minimization or least square sense) such that the deformed primitives contain volume of the given sizes and obeying the linear constraints.
Reference: [Hughes87] <author> Hughes, T.J.R., </author> <title> The Finite Element Method, </title> <publisher> Prentice-Hall, </publisher> <address> Engelwood Cliffs, </address> <year> 1987. </year>
Reference-contexts: We are looking for the value of that pressure: the Uzawa outer step can be seen as augmenting or diminishing the hydrostatic pressure until convergence. This tuning is done with the parameter 1 . This observation relates our method to so-called mixed finite element methods for the Stokes problem <ref> [Hughes87] </ref>. In our case we have constant pressure for each small volume element. 8 Results The algorithm was implemented in C under Unix using SGI/GL for graphics and Motif for the user Page 10 interface.
Reference: [Joy91] <author> Joy, K., </author> <title> Utilizing parametric hyperpatch methods for modeling and display of free form solids, </title> <booktitle> ACM Symposium on Solid Modeling, </booktitle> <address> Austin, </address> <month> June 5-7, </month> <year> 1991, </year> <pages> pp. 245-254. </pages>
Reference-contexts: The user directly moves an object point, and the system automatically computes the control point configuration yielding the desired point displacement constraints. [Rap-poport94] extends this method to approximate (`probabilistic') point constraints with a non-isotropic shape parameter. <ref> [Joy91] </ref> gave methods to manipulate a group of control points in a single operation. A more general type of extension to FFD was presented in [Coquillart91], who defined an arbitrary volume and used numerical routines to compute local coordinates within this volume.
Reference: [Kallay93] <author> Kallay, M., </author> <title> Constrained optimization in surface design, </title> <editor> in: Falcidieno, B. and Kunii, T.L. (eds), </editor> <booktitle> Modeling in Computer Graphics, </booktitle> <pages> pp. 85-94, </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Neither of the above methods attaches any physical meaning of the deformation. Simple constrained deformations were described in [Bor-rel94]. Physics-based modeling is a successful research area in geometric modeling. Several papers <ref> [Terzopoulos94, Welch92, Kallay93, Moreton92, Celniker91, Greiner93] </ref> presented surface design schemes based on minimization of an energy functional subject to linear point constraints such as location and tangent vectors. We are not aware of any work using similar ideas for free-form solids.
Reference: [Liu87] <author> Liu, D., </author> <title> Algorithms for computing area and volume bounded by Bezier curves and surfaces, </title> <journal> Mathematica Numerica Sinica, </journal> <volume> 9 </volume> <pages> 327-336, </pages> <year> 1987. </year> <pages> Page 12 </pages>
Reference-contexts: Formulae for computing the area or volume en 1 [Sederberg86] refers to an unpublished report about volume preserving deformations, but such deformations cannot be everywhere locally satisfied with polynomial fields except for the simple case of pure shears. Page 2 closed by curves and surface patches were given in <ref> [Elber94, Liu87] </ref>. 1.2 Proposed Approach We use free-form solids as design primitives. In the context of solid model design in general and specifically of free-form solids, one of the most basic physical properties of a space cell is its volume size.
Reference: [Moreton92] <author> Moreton, H., Sequin, C., </author> <title> Functional optimization for fair surface design, </title> <booktitle> Computer Graphics 26(2) </booktitle> <pages> 167-176, </pages> <note> 1992 (SIGGRAPH '92). </note>
Reference-contexts: Neither of the above methods attaches any physical meaning of the deformation. Simple constrained deformations were described in [Bor-rel94]. Physics-based modeling is a successful research area in geometric modeling. Several papers <ref> [Terzopoulos94, Welch92, Kallay93, Moreton92, Celniker91, Greiner93] </ref> presented surface design schemes based on minimization of an energy functional subject to linear point constraints such as location and tangent vectors. We are not aware of any work using similar ideas for free-form solids.
Reference: [Press88] <author> Press, </author> <title> W.H., Flannery, B.P., Teukolsky, S.A., Vetterling, W.T., Numerical Recipes in C, </title> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: basis functions, hence can be computed once and for all for every practical order combination (the number of all practically useful order combinations is small.) Computing the elements of c via symbolic integration is very complicated even for relatively small Bezier orders, therefore we compute them using Gauss numerical integration <ref> [Press88] </ref>, which gives an exact result since the integrated functions are polynomials.
Reference: [Rappoport94] <author> Rappoport, A., Hel-Or, Y., Werman, M., </author> <title> Interactive design of smooth objects using probabilistic point constraints. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(2) </volume> <pages> 156-176, </pages> <year> 1994. </year>
Reference: [Sederberg86] <author> Sederberg, T.W., Parry, </author> <title> S.R., Freeform deformation of solid geometric models, </title> <booktitle> Computer Graphics 20(4) </booktitle> <pages> 151-160, </pages> <year> 1986 </year> <month> (SIG-GRAPH '86). </month>
Reference-contexts: This can be explained by the fact that if only the boundary of the object is of interest, there is no need to use free-form solids, which enable control over what happens `inside' the object. Free-form deformations (FFD) were introduced in <ref> [Sederberg86] </ref> as a technique for defining a smooth deformation on a space including the objects embedded within that space, regardless of their geometric representation. FFD utilizes a tri-variate tensor-product parametric Bezier solid defined by a lattice of control points. The defining parameter space is the unit cube. <p> Free-form solids are not discussed, and it seems that the algorithm is not suited for them at all. Formulae for computing the area or volume en 1 <ref> [Sederberg86] </ref> refers to an unpublished report about volume preserving deformations, but such deformations cannot be everywhere locally satisfied with polynomial fields except for the simple case of pure shears.
Reference: [Shapiro88] <author> Shapiro Brotman, L., Netravali, </author> <title> A.N., Motion interpolation by optimal control, </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 309-316, </pages> <year> 1988 </year> <month> (SIG-GRAPH 88). </month>
Reference-contexts: We are not aware of any work using similar ideas for free-form solids. Other applications of physics-based modeling are in reconstruction and tracking [Fang92], motion control <ref> [Shapiro88] </ref>, and modeling of flexible and rigid objects [Barzel88]. The only relevant reference we are aware of for volume preservation 1 is [Aumann92], which gives an algorithm that approximates a surface of revolution by a surface which is not a surface of revolution while trying to preserve the original volume.
Reference: [Terzopoulos94] <author> Terzopoulos, D., Qin, H., </author> <title> Dynamic NURBS with geometric constraints for interactive sculpting, </title> <journal> ACM Transactions On Graphics, </journal> <volume> 13(2) </volume> <pages> 103-136, </pages> <year> 1994. </year>
Reference-contexts: Neither of the above methods attaches any physical meaning of the deformation. Simple constrained deformations were described in [Bor-rel94]. Physics-based modeling is a successful research area in geometric modeling. Several papers <ref> [Terzopoulos94, Welch92, Kallay93, Moreton92, Celniker91, Greiner93] </ref> presented surface design schemes based on minimization of an energy functional subject to linear point constraints such as location and tangent vectors. We are not aware of any work using similar ideas for free-form solids.

References-found: 29

