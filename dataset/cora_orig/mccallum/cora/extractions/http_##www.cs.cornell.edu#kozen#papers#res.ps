URL: http://www.cs.cornell.edu/kozen/papers/res.ps
Refering-URL: http://www.cs.cornell.edu/kozen/papers/papers.html
Root-URL: 
Email: kozen@cs.cornell.edu  
Title: Efficient Resolution of Singularities of Plane Curves  
Author: Dexter Kozen 
Address: Ithaca, New York 14853, USA  
Affiliation: Computer Science Department Cornell University  
Abstract: We give a new algorithm for resolving singularities of plane curves. The algorithm is polynomial time in the bit complexity model, does not require factorization, and works over Q or finite fields.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> M. Ben-Or, D. Kozen, and J. Reif, </author> <title> The complexity of elementary algebra and geometry, </title> <institution> J. Comput. Syst. Sci., </institution> <month> 32 </month> <year> (1985), </year> <pages> pp. 251-264. </pages> <note> Invited special issue. </note>
Reference-contexts: The algebraic numbers involved are represented and manipulated symbolically, using the technique of passive factorization [5, 6, 13] in conjunction with the squarefree decomposition algorithm of <ref> [1] </ref>. All necessary calculations can be carried out with this implicit representation, thus avoiding factoring and the explicit construction of high-degree extensions. As an immediate corollary, we obtain an efficient algorithm for calculating the genus of a plane curve using the Hurwitz formula [10, 7]. <p> An efficient solution to this problem was given in <ref> [1] </ref>. 3 First Algorithm In this section, we describe the high-level structure of our algorithm. For this section only, we assume that K is algebraically closed, that arithmetic in K is unit-cost, and that we are provided with an efficient algorithm for factoring univariate polynomials over K. <p> We will use gcd heavily, but factorization is unnecessary. This technique is called passive factorization and has been used by Dicrescenzo and Duval [5, 6] and Teitelbaum [13]. We use this in conjunction with the squarefree decomposition algorithm of <ref> [1] </ref> to avoid intermediate coefficient swell when k = Q. 4.1 Overview Each of steps 3, 4, and 8 of the algorithm of x3 factored a polynomial q (y), producing roots a. <p> The reparametrization of f to obtain f t involved the algebraic number a. Here, instead of factoring q to obtain the algebraic numbers a, we will just do a squarefree decomposition of q using the algorithm of <ref> [1] </ref> to give finitely many pairwise relatively prime factors q t of q. We will create one new child t for each such factor q t and associate q t with t . <p> The key idea being exploited here is the same used in the BKR algorithm for the theory of real closed fields <ref> [1] </ref>, namely that we do not need to know the algebraic numbers a themselves to solve the resolution problem, but only the signs of certain polynomials in these algebraic numbers. This idea leads to an efficient implementation of the passive factorization method of [5, 6, 13].
Reference: 2. <author> G. A. Bliss, </author> <title> Algebraic Functions, </title> <journal> Amer. Math. Soc., </journal> <year> 1933. </year>
Reference-contexts: In this paper we describe a new algorithm for resolving singularities of irreducible plane curves. The algorithm runs in polynomial time in the bit complexity model, does not require polynomial factorization, and works over Q or any finite field. Classical algorithms for resolving singularities <ref> [2, 15, 7] </ref> use a combination of methods involving the Newton polygon, a polygon in Z 2 whose vertices are the exponents of terms in f; - Puiseux series, power series with fractional exponents. <p> There are only finitely many exceptional places of K (x). See <ref> [10, 7, 2, 3] </ref> for details. 2.1 Statement of the Problem The problem we consider in this paper is as follows. Given an irreducible plane curve f (x; y) = 0 with coefficients in some subfield k K, determine all the exceptional places p of K (x). <p> These strong assumptions are to simplify the high-level description. Once the algorithm is understood, we will describe in the next section how to remove these assumptions. Most of the techniques used here, such as the Newton polygon, are well known <ref> [2, 7, 15] </ref>. However, as mentioned in the introduction, one novel feature of our algorithm is that we do not extend to the field of Puiseux series to obtain local parameters, but reparametrize directly to obtain local parameters in the function field itself. <p> of the variety V (q). 5 Analysis The tree is of small depth, since at each vertex, either there are multiple children; or m &gt; 1, in which case we get ramification (the maximum is n, and they are multiplicative along edges); or the degree of the discriminant strictly decreases <ref> [2, Theorem 15.1] </ref>. The number of branches is bounded by n, since there are at most n places in all. There are at most as many q i at any vertex as the depth of the vertex.
Reference: 3. <author> C. </author> <title> Chevalley, Introduction to the Theory of Algebraic Functions of One Variable, </title> <publisher> American Mathematical Society, </publisher> <year> 1951. </year>
Reference-contexts: There are only finitely many exceptional places of K (x). See <ref> [10, 7, 2, 3] </ref> for details. 2.1 Statement of the Problem The problem we consider in this paper is as follows. Given an irreducible plane curve f (x; y) = 0 with coefficients in some subfield k K, determine all the exceptional places p of K (x).
Reference: 4. <author> A. L. Chistov, </author> <title> Polynomial complexity of the Newton-Puiseux algorithm, in Math. Found. </title> <journal> Comput. Sci., </journal> <volume> vol. </volume> <booktitle> 233 of Lect. Notes. </booktitle> <publisher> Comput. Sci., Springer, </publisher> <year> 1986, </year> <pages> pp. 247-255. </pages>
Reference-contexts: However, the algorithm is not analyzed for its bit complexity. The problem of intermediate coefficient swell is not often addressed in theoretical analyses, but is a serious consideration in practical implementations [14, 17]. Chistov <ref> [4] </ref> and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields.
Reference: 5. <author> C. Dicrescenzo and D. Duval, </author> <title> Computations on curves, </title> <booktitle> vol. 174 of Lect. Notes in Comput. </booktitle> <publisher> Sci., Springer, </publisher> <year> 1984, </year> <pages> pp. 100-107. </pages> <month> 6. </month> , <title> Algebraic computations on algebraic numbers, </title> <institution> in Informatique et Calcul, Wiley-Masson, </institution> <year> 1985, </year> <pages> pp. 54-61. </pages>
Reference-contexts: These are not Puiseux series as in the classical algorithms, but rational functions of x and y obtained by direct reparametrizations based on information obtained from the Newton polygon. The algebraic numbers involved are represented and manipulated symbolically, using the technique of passive factorization <ref> [5, 6, 13] </ref> in conjunction with the squarefree decomposition algorithm of [1]. All necessary calculations can be carried out with this implicit representation, thus avoiding factoring and the explicit construction of high-degree extensions. <p> We will use gcd heavily, but factorization is unnecessary. This technique is called passive factorization and has been used by Dicrescenzo and Duval <ref> [5, 6] </ref> and Teitelbaum [13]. We use this in conjunction with the squarefree decomposition algorithm of [1] to avoid intermediate coefficient swell when k = Q. 4.1 Overview Each of steps 3, 4, and 8 of the algorithm of x3 factored a polynomial q (y), producing roots a. <p> This idea leads to an efficient implementation of the passive factorization method of <ref> [5, 6, 13] </ref>. Coefficients remain small under these symbolic operations. For example, in step 7, we reparametrize f (x; y) = ij to obtain a new polynomial g (u; v).
Reference: 7. <author> W. Fulton, </author> <title> Algebraic Curves, </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: In this paper we describe a new algorithm for resolving singularities of irreducible plane curves. The algorithm runs in polynomial time in the bit complexity model, does not require polynomial factorization, and works over Q or any finite field. Classical algorithms for resolving singularities <ref> [2, 15, 7] </ref> use a combination of methods involving the Newton polygon, a polygon in Z 2 whose vertices are the exponents of terms in f; - Puiseux series, power series with fractional exponents. <p> All necessary calculations can be carried out with this implicit representation, thus avoiding factoring and the explicit construction of high-degree extensions. As an immediate corollary, we obtain an efficient algorithm for calculating the genus of a plane curve using the Hurwitz formula <ref> [10, 7] </ref>. Trager has recently given a polynomial-time algorithm for the genus problem using different techniques [14]. 2 Algebraic Preliminaries Let R be an algebraic function field over an algebraically closed field K, i.e., a finite extension of a purely transcendental extension K (x) of K. <p> There are only finitely many exceptional places of K (x). See <ref> [10, 7, 2, 3] </ref> for details. 2.1 Statement of the Problem The problem we consider in this paper is as follows. Given an irreducible plane curve f (x; y) = 0 with coefficients in some subfield k K, determine all the exceptional places p of K (x). <p> These strong assumptions are to simplify the high-level description. Once the algorithm is understood, we will describe in the next section how to remove these assumptions. Most of the techniques used here, such as the Newton polygon, are well known <ref> [2, 7, 15] </ref>. However, as mentioned in the introduction, one novel feature of our algorithm is that we do not extend to the field of Puiseux series to obtain local parameters, but reparametrize directly to obtain local parameters in the function field itself.
Reference: 8. <author> D. Ierardi and D. Kozen, </author> <title> Parallel resultant computation, in Synthesis of Parallel Algorithms, </title> <editor> J. Reif, ed., </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1993, </year> <pages> pp. 679-720. </pages>
Reference-contexts: These conditions are determined by signs (zero or nonzero) of various sub- resultants, which are minors of the Sylvester matrix <ref> [8] </ref>. These are polynomials p (a 0 ; a 1 ; : : : ; a i1 ) in the coefficients of q i .
Reference: 9. <author> S. Landau, </author> <title> Factoring polynomials over algebraic number fields, </title> <journal> SIAM J. Comput., </journal> <volume> 14 (1985), </volume> <pages> pp. 184-195. </pages>
Reference-contexts: Chistov [4] and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields. The best known algorithms for these problems <ref> [12, 11, 9] </ref> are theoretically polynomial time in the bit complexity model, but quite inefficient from a practical standpoint. There are currently no known deterministic fl Proc. 14th Conf.
Reference: 10. <author> S. Lang, </author> <title> Introduction to Algebraic and Abelian Functions, </title> <publisher> Springer-Verlag, </publisher> <editor> sec-ond ed., </editor> <year> 1972. </year>
Reference-contexts: All necessary calculations can be carried out with this implicit representation, thus avoiding factoring and the explicit construction of high-degree extensions. As an immediate corollary, we obtain an efficient algorithm for calculating the genus of a plane curve using the Hurwitz formula <ref> [10, 7] </ref>. Trager has recently given a polynomial-time algorithm for the genus problem using different techniques [14]. 2 Algebraic Preliminaries Let R be an algebraic function field over an algebraically closed field K, i.e., a finite extension of a purely transcendental extension K (x) of K. <p> There are only finitely many exceptional places of K (x). See <ref> [10, 7, 2, 3] </ref> for details. 2.1 Statement of the Problem The problem we consider in this paper is as follows. Given an irreducible plane curve f (x; y) = 0 with coefficients in some subfield k K, determine all the exceptional places p of K (x).
Reference: 11. <author> A. K. Lenstra, </author> <title> Factoring polynomials over algebraic number fields, </title> <booktitle> in Proc. EuroCal 1983, vol. 162 of Lect. Notes in Comput. </booktitle> <publisher> Sci., Springer, </publisher> <year> 1983, </year> <pages> pp. 245-254. </pages>
Reference-contexts: Chistov [4] and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields. The best known algorithms for these problems <ref> [12, 11, 9] </ref> are theoretically polynomial time in the bit complexity model, but quite inefficient from a practical standpoint. There are currently no known deterministic fl Proc. 14th Conf.
Reference: 12. <author> A. K. Lenstra, H. W. Lenstra, and L. Lov asz, </author> <title> Factoring polynomials with rational coefficients, </title> <journal> Math. Ann., </journal> <volume> 261 (1982), </volume> <pages> pp. 515-534. </pages>
Reference-contexts: Chistov [4] and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields. The best known algorithms for these problems <ref> [12, 11, 9] </ref> are theoretically polynomial time in the bit complexity model, but quite inefficient from a practical standpoint. There are currently no known deterministic fl Proc. 14th Conf.
Reference: 13. <author> J. Teitelbaum, </author> <title> The computational complexity of the resolution of plane curve singularities, </title> <journal> Math. Comp., </journal> <volume> 54 (1990), </volume> <pages> pp. 797-837. </pages>
Reference-contexts: These algorithms take polynomial time if we assume efficient factorization over algebraic extensions of the base field and unit-time arithmetic these extensions. Teitelbaum <ref> [13] </ref> establishes bounds on the degree of field extensions containing the Puiseux coefficients, leading to an algorithm that is polynomial in the number of base field operations. However, the algorithm is not analyzed for its bit complexity. <p> These are not Puiseux series as in the classical algorithms, but rational functions of x and y obtained by direct reparametrizations based on information obtained from the Newton polygon. The algebraic numbers involved are represented and manipulated symbolically, using the technique of passive factorization <ref> [5, 6, 13] </ref> in conjunction with the squarefree decomposition algorithm of [1]. All necessary calculations can be carried out with this implicit representation, thus avoiding factoring and the explicit construction of high-degree extensions. <p> We will use gcd heavily, but factorization is unnecessary. This technique is called passive factorization and has been used by Dicrescenzo and Duval [5, 6] and Teitelbaum <ref> [13] </ref>. We use this in conjunction with the squarefree decomposition algorithm of [1] to avoid intermediate coefficient swell when k = Q. 4.1 Overview Each of steps 3, 4, and 8 of the algorithm of x3 factored a polynomial q (y), producing roots a. <p> This idea leads to an efficient implementation of the passive factorization method of <ref> [5, 6, 13] </ref>. Coefficients remain small under these symbolic operations. For example, in step 7, we reparametrize f (x; y) = ij to obtain a new polynomial g (u; v).
Reference: 14. <author> B. M. Trager. </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: However, the algorithm is not analyzed for its bit complexity. The problem of intermediate coefficient swell is not often addressed in theoretical analyses, but is a serious consideration in practical implementations <ref> [14, 17] </ref>. Chistov [4] and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields. <p> As an immediate corollary, we obtain an efficient algorithm for calculating the genus of a plane curve using the Hurwitz formula [10, 7]. Trager has recently given a polynomial-time algorithm for the genus problem using different techniques <ref> [14] </ref>. 2 Algebraic Preliminaries Let R be an algebraic function field over an algebraically closed field K, i.e., a finite extension of a purely transcendental extension K (x) of K.
Reference: 15. <author> B. M. Trager, </author> <title> Integration of Algebraic Functions, </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA, </address> <month> September </month> <year> 1984. </year>
Reference-contexts: In this paper we describe a new algorithm for resolving singularities of irreducible plane curves. The algorithm runs in polynomial time in the bit complexity model, does not require polynomial factorization, and works over Q or any finite field. Classical algorithms for resolving singularities <ref> [2, 15, 7] </ref> use a combination of methods involving the Newton polygon, a polygon in Z 2 whose vertices are the exponents of terms in f; - Puiseux series, power series with fractional exponents. <p> These strong assumptions are to simplify the high-level description. Once the algorithm is understood, we will describe in the next section how to remove these assumptions. Most of the techniques used here, such as the Newton polygon, are well known <ref> [2, 7, 15] </ref>. However, as mentioned in the introduction, one novel feature of our algorithm is that we do not extend to the field of Puiseux series to obtain local parameters, but reparametrize directly to obtain local parameters in the function field itself.
Reference: 16. <author> P. G. Walsh, </author> <title> The Computation of Puiseux Expansions and a Quantitative Version of Runge's Theorem on Diophantine Equations, </title> <type> PhD thesis, </type> <institution> University of Waterloo, </institution> <year> 1994. </year>
Reference-contexts: However, the algorithm is not analyzed for its bit complexity. The problem of intermediate coefficient swell is not often addressed in theoretical analyses, but is a serious consideration in practical implementations [14, 17]. Chistov [4] and Walsh <ref> [16] </ref> give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields. The best known algorithms for these problems [12, 11, 9] are theoretically polynomial time in the bit complexity model, but quite inefficient from a practical standpoint.
Reference: 17. <author> R. </author> <title> Zippel. </title> <type> Personal communication, </type> <year> 1994. </year> <title> This article was processed using the L a T E X macro package with LLNCS style 11 </title>
Reference-contexts: However, the algorithm is not analyzed for its bit complexity. The problem of intermediate coefficient swell is not often addressed in theoretical analyses, but is a serious consideration in practical implementations <ref> [14, 17] </ref>. Chistov [4] and Walsh [16] give algorithms that are polynomial time in the bit complexity model, but require factorization of polynomials over Q and algebraic number fields.
References-found: 16

