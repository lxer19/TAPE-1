URL: http://www.cs.purdue.edu/homes/spa/papers/markov.ps
Refering-URL: http://www.cs.purdue.edu/homes/spa/current.html
Root-URL: http://www.cs.purdue.edu
Email: Philippe.Jacquet@inria.fr spa@cs.purdue.edu geneta@microsoft.com  
Title: AVERAGE PROFILE OF THE LEMPEL-ZIV PARSING SCHEME FOR A MARKOVIAN SOURCE September 7, 1998  
Author: Philippe Jacquet Wojciech Szpankowski Jing Tang 
Keyword: Index Terms: Lempel-Ziv scheme, Markov source, digital search trees, data compression, phrase length, depth in a tree, Poisson transform, Mellin transform, analytic depoissonization, stochastic comparisons.  
Note: This work was partially supported by NSF Grants NCR-9415491 and NCR-9804760, and NATO Collaborative Grant CRG.950060.  
Address: One Microsoft Way, 1/2061 78153 Le Chesnay Cedex W. Lafayette, IN 47907 Redmond, WA 98052 France U.S.A. U.S.A.  
Affiliation: INRIA Dept. of Computer Science Microsoft Corporation Rocquencourt Purdue University  
Abstract: For a Markovian source, we analyze the Lempel-Ziv parsing scheme that partitions sequences into phrases such that a new phrase is the shortest phrase not seen in the past. We consider three models: In the Markov Independent model, several sequences are generated independently by Markovian sources, and the ith phrase is the shortest prefix of the ith sequence that was not seen before as a phrase (i.e., a prefix of previous (i 1) sequences). In the other two models, only a single sequence is generated by a Markovian source. In the second model, for which we coin the name Gilbert-Kadota model, a fixed number of phrases is generated according to the Lempel-Ziv algorithm, thus producing a sequence of a variable (random) length. In the last model, known also as the Lempel-Ziv model, a string of fixed length is partitioned into a variable (random) number of phrases. These three models can be efficiently represented and analyzed by digital search trees that are of interest to other algorithms such as sorting, searching and pattern matching. In this paper, we concentrate on analyzing the average profile (i.e., the average number of phrases of a given length), the typical phrase length, and the length of the last phrase. We obtain asymptotic expansions for the mean and the variance of the phrase length, and we prove that appropriately normalized phrase length in all three models tends to the standard normal distribution which lead to bounds on the average redundancy of the Lempel-Ziv code. For Markov Independent model, this finding is established by analytic methods (i.e., generating functions, Mellin transform and depoissonization), while for the other two models we use a combination of analytic and probabilistic analyses. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Bradley, </author> <title> Basic Properties of Strong Mixing Conditions, in Dependence in Probability and Statistics (Eds. </title> <editor> E. Eberlein and M. </editor> <booktitle> Taqqu), </booktitle> <pages> 165-192, </pages> <year> 1986. </year>
Reference-contexts: Furthermore, fi := [det Q 00 (s)]j s=1 ; _ x (2) := i=1 Q 1 (2) Q 1 (i)(Q 1 (s)) 0 j s=i1 Q 1 (i 2) K; where K := i=0 ! 1 = <ref> [1; 1; ; 1] </ref> T V fi1 is the column vector consisting of all 1s. <p> We shall use the fact that a Markov process over a finite space is a -mixing process with exponentially decreasing mixing coefficient (cf. <ref> [1] </ref>). More precisely, let for some d and ` two events, say A and B, be defined on the sigma-algebras F d 1 and F 1 d+` , respectively (i.e., there is a gap of ` symbols between the events).
Reference: [2] <author> Julien Clement, Philippe Flajolet, Brigitte Vallee, </author> <title> The Analysis of Hybrid Trie Structures, </title> <booktitle> Proc. Ninth ACM-SIAM Symposium on Discrete Algorithms (SODA'98), </booktitle> <address> San Francisco, </address> <month> January </month> <year> 1998. </year>
Reference-contexts: Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. [10, 7, 11, 13, 14, 17, 20]). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. <ref> [2, 6] </ref>). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis.
Reference: [3] <author> P. Flajolet, X. Gourdon, P. Dumas, </author> <title> Mellin Transforms and Asymptotics: Harmonic Sums, </title> <journal> Theoretical Computer Science, </journal> <volume> 144, </volume> <pages> 3-58, </pages> <year> 1995. </year>
Reference-contexts: These differential-functional equations are reduced to a simple matrix functional equations of the Mellin transform B fl i (s) with respect to z of e B i (z; u) (cf. <ref> [3, 21] </ref>). <p> To accomplish this, we shall derive a functional-differential equations on the Poisson transforms e B i (z; u), which seem to have a simpler, or at least more compact, form. These functional-differential equations are next changed into a simple matrix recurrence in terms of the Mellin transform (cf. <ref> [3, 14, 21] </ref>). After solving this matrix equation (in fact, for the asymptotic analysis we do not even need to solve it explicitly), we apply the inverse Mellin transform 9 to recover the Poisson transform B i (z; u) for z ! 1 in a cone around the real axis. <p> It is well known that equations like these are amiable to attack by the Mellin transform (cf. <ref> [3] </ref>). <p> + + C fl 1V ]; (s 1)C fl V (s) = 2 [B fl V 1 + + B fl V V ] + [C fl V 1 + + C fl V V ]: In the above, we used the following two properties of the Mellin transform (cf. <ref> [3] </ref>): M [f (ax); s] = a s F fl (s); Unfortunately, the above systems of Mellin transforms do not have simple explicit solutions.
Reference: [4] <author> E. Gilbert and T. Kadota, </author> <title> The Lempel-Ziv Algorithm and Message Complexity, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 38, </volume> <pages> 1839-1842, </pages> <year> 1992. </year>
Reference-contexts: We present here a second order analysis of the (typical) phrase length for the Lempel-Ziv parsing scheme in a Markovian setting. One can still wonder why do we need a second order analysis or a second order approximation of information systems. Gilbert and Kadota in <ref> [4] </ref> and J. Ziv in his 1997 Shannon Lecture provided some convincing arguments for the need of such investigations. In fact, J. <p> Some of their results were analytically recovered in [7, 11] where second order asymptotics were obtained for the quantities studied in <ref> [4] </ref>. In [4, 7, 11] only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. In this paper, we shall analyze three models of the Lempel-Ziv scheme in the Marko-vian settings. <p> Some of their results were analytically recovered in [7, 11] where second order asymptotics were obtained for the quantities studied in [4]. In <ref> [4, 7, 11] </ref> only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. In this paper, we shall analyze three models of the Lempel-Ziv scheme in the Marko-vian settings. <p> For example, for X = 11001010001000100 : : : we can construct m = 5 phrases as follows: (*)(1)(10)(0)(101)(00). Such a model was also considered by Gilbert and Kadota <ref> [4] </ref>, so we call it the Gilbert-Kadota model or shortly GK model. As before, we will be interested in the typical phrase length D m and the last phrase length I m .
Reference: [5] <author> Y. Hershkovits and J. Ziv, </author> <title> On Sliding-Window Universal Data Compression with Limited memory, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 44, </volume> <pages> 66-78, </pages> <year> 1997. </year>
Reference: [6] <author> P. Jacquet and W. Szpankowski, </author> <title> Analysis of Digital Tries with Markovian Dependency, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 37, </volume> <pages> 1470-1475, </pages> <year> 1991. </year>
Reference-contexts: Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. [10, 7, 11, 13, 14, 17, 20]). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. <ref> [2, 6] </ref>). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis. <p> As in <ref> [6] </ref> we obtain, after some algebra, s 0 (t) = 1 h v 2 t 2 + O (t 3 ); 1 + O (t); h + O (1); p (s 0 (t)) = + O (t): To derive the above, we just observe that the expansion of s 0 (t) <p> s 0 (t)s k (t) + O log m A t 2 0 0 X (s k (t) 1)p (s k (t))R k a (s k (e t ) 1; u) A A : In the above, we use the fact that &lt;(s 0 (t)) &lt;(s k (t)) proved in <ref> [6] </ref> which allows to bound jm s 0 (t)s k (t) j 1. To complete the proof, it suffices to show that the sum appearing above is O (1).
Reference: [7] <author> P. Jacquet and W. Szpankowski, </author> <title> Asymptotic Behavior of the Lempel-Ziv Parsing Scheme and Digital Search Trees, </title> <journal> Theoretical Computer Science, </journal> <volume> 144, </volume> <pages> 161-197, </pages> <year> 1995. </year>
Reference-contexts: In the past, mostly first order analysis of these parameters were available with the exception of <ref> [7, 11, 12, 18] </ref> where largely memoryless sources were analyzed. The first order analysis provides the first order asymptotics (e.g., is the redundancy of a code o (n)?). <p> On the other hand, Kadota and Gilbert used a numerical evaluation (instead of a crude first order asymptotic) to obtain qualitative insights into the behavior of the Lempel-Ziv algorithm. Some of their results were analytically recovered in <ref> [7, 11] </ref> where second order asymptotics were obtained for the quantities studied in [4]. In [4, 7, 11] only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. <p> Some of their results were analytically recovered in [7, 11] where second order asymptotics were obtained for the quantities studied in [4]. In <ref> [4, 7, 11] </ref> only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. In this paper, we shall analyze three models of the Lempel-Ziv scheme in the Marko-vian settings. <p> (u; z) + e B i (z; u) = u e B 1 (u; p i;1 z) + + e B V (u; p i;V z) + a (z; u); i = 1; 2; : : : ; V; where e B i (z; u) is the Poisson transform (cf. <ref> [7, 21] </ref>) of the average profile when all strings start with symbol i 2 A = f1; 2; : : : ; V g, a (z; u) is a given function, and P = fp ij g V i;j=1 is the underlying Markov chain. <p> The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in <ref> [7, 11, 12] </ref>, while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis. <p> This suffices, since by analytic depoissonization (cf. <ref> [7, 9] </ref>) we can extract asymptotic expression for the average profile B i m for m ! 1, which further leads to our final results. Before we present out findings, we must introduce some more notation. <p> It is known (cf. <ref> [7] </ref>) that as long as arg (z) belongs to some cone around the real axis, the Mellin transform F (s) of a function f (x) of a real argument and its corresponding function of a complex argument is the same. <p> Part (ii) is proved. Part (iii) can be inferred from the above proof. Observe that for the memoryless case, that is, when p ji = i , condition (66) becomes ln i ln j 2 Q for all i; j. This agrees with previous known results (cf. <ref> [7] </ref>). Finally, as a simple consequence of the above, we prove the convergence of the infinite product that appears (62). Lemma 4 The product 1 Y Q 1 (s i) converges for &lt;(s) &lt; 1, and it can be differentiated with respect to s term by term. Proof. <p> This lemma basically says that mE [D m ] ~ e B ( u (m; 1) and mE [D m (D m 1)] ~ e B uu (m; 1) under some weak conditions that will be easy to verify in our case. The reader is referred to <ref> [7, 8, 9] </ref> for more details about depoissonization lemma. For completeness, however, we review some depoissonization results that are useful for our problem. <p> How can we infer asymptotics of g n from e G (z)? An answer is given in the depoissonization lemma below (cf. <ref> [7, 8, 9] </ref>): Lemma 6 (Depoissonization Lemma) (i) Let e G (z) be the Poisson transform of a sequence g n that is assumed to be an entire function of z.
Reference: [8] <author> P. Jacquet and W. Szpankowski, </author> <title> Entropy Computation Via Analytic Depoissonization, </title> <institution> Purdue University, CSD-TR-96-085, </institution> <year> 1996. </year>
Reference-contexts: The moments can be also recovered from the following formula recently proved in <ref> [8] </ref> (interestingly, analytic depoissonization was used to derive it, too) m X k r k (1 r) mk ln k = ln (mr) 2mr X a i where the coefficients a k are explicitly computable. 2.2 Fixed Number of Phrases Model | Gilbert-Kadota Model In this subsection, we present our main <p> This lemma basically says that mE [D m ] ~ e B ( u (m; 1) and mE [D m (D m 1)] ~ e B uu (m; 1) under some weak conditions that will be easy to verify in our case. The reader is referred to <ref> [7, 8, 9] </ref> for more details about depoissonization lemma. For completeness, however, we review some depoissonization results that are useful for our problem. <p> How can we infer asymptotics of g n from e G (z)? An answer is given in the depoissonization lemma below (cf. <ref> [7, 8, 9] </ref>): Lemma 6 (Depoissonization Lemma) (i) Let e G (z) be the Poisson transform of a sequence g n that is assumed to be an entire function of z.
Reference: [9] <author> P. Jacquet and W. Szpankowski, </author> <title> Analytical Depoissonization Lemma and Its Applications, </title> <journal> Theoretical Computer Science, </journal> <volume> 199, </volume> <year> 1998. </year> <month> 46 </month>
Reference-contexts: We need to translate it into the asymptotics of the original generating function B i m (u). This process is called depoissonization, and we shall use recent results of Jacquet and Szpankowski <ref> [9] </ref> on analytic depoissonization. <p> This suffices, since by analytic depoissonization (cf. <ref> [7, 9] </ref>) we can extract asymptotic expression for the average profile B i m for m ! 1, which further leads to our final results. Before we present out findings, we must introduce some more notation. <p> This lemma basically says that mE [D m ] ~ e B ( u (m; 1) and mE [D m (D m 1)] ~ e B uu (m; 1) under some weak conditions that will be easy to verify in our case. The reader is referred to <ref> [7, 8, 9] </ref> for more details about depoissonization lemma. For completeness, however, we review some depoissonization results that are useful for our problem. <p> How can we infer asymptotics of g n from e G (z)? An answer is given in the depoissonization lemma below (cf. <ref> [7, 8, 9] </ref>): Lemma 6 (Depoissonization Lemma) (i) Let e G (z) be the Poisson transform of a sequence g n that is assumed to be an entire function of z.
Reference: [10] <author> D. Knuth, </author> <title> The Art of Computer Programming. Sorting and Searching. </title> <note> Vol. 3., Addison--Wesley 1973. </note>
Reference-contexts: In the example above, 12 = 1 5 The above three models can be efficiently analyzed and uniformly represented by a digital search tree, a data structure that have been studied by its own right for more than thirty years (cf. <ref> [10, 14] </ref>). <p> In fact, digital trees appear in a variety of computer and communications applications including searching, sorting, dynamic hashing, codes, conflict resolution protocols for multiaccess communications, and data compression (cf, <ref> [10, 14] </ref>) Thus, better understanding of their behavior is desirable and could lead to some algorithmic improvements. <p> The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> Observe that B k 0 = 0 for There are simple relationships between just defined parameters. First of all, we notice that (cf. <ref> [10, 11, 20] </ref>) PrfD m = kg = B k m This, and the definition of the typical depth, immediately imply PrfI m+1 = kg = B k m+1 B k 7 with PrfI 0 = 0g = 1 and PrfI 0 = kg = 0 for all k 1. <p> A few words of discussion about the fluctuating function ffi (x) is in order. The amplitude of this function is very small, however, it increases with V . For example, for the unbiased memoryless source jffi 1 (x)j 10 6 for V = 2 (cf. <ref> [10, 14] </ref>). While this value may be savely ignored in the first order analysis, it is of prime interest to second order analysis. For example, the fluctuating function ffi 1 (x) determines the behavior of the Lempel-Ziv redundancy (cf. [12]). <p> In particular, e B u (z; 1) = 2i 2 +i1 2 i1 e B uu (z; 1) = 2i 2 +i1 2 i1 The evaluation of the above integrals is quite standard (e.g., see <ref> [10, 14] </ref>): We extend the line of integration to a big rectangle right to the integration line, and observe that bottom and top lines contribute negligibly because the gamma function decreases exponentially with the increase in the magnitude of the imaginary part.
Reference: [11] <author> G. Louchard and W. Szpankowski, </author> <title> Average Profile and Limiting Distribution for a Phrase Size in the Lempel-Ziv Parsing Algorithm, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 41, </volume> <pages> 478-488, </pages> <year> 1995. </year>
Reference-contexts: In the past, mostly first order analysis of these parameters were available with the exception of <ref> [7, 11, 12, 18] </ref> where largely memoryless sources were analyzed. The first order analysis provides the first order asymptotics (e.g., is the redundancy of a code o (n)?). <p> On the other hand, Kadota and Gilbert used a numerical evaluation (instead of a crude first order asymptotic) to obtain qualitative insights into the behavior of the Lempel-Ziv algorithm. Some of their results were analytically recovered in <ref> [7, 11] </ref> where second order asymptotics were obtained for the quantities studied in [4]. In [4, 7, 11] only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. <p> Some of their results were analytically recovered in [7, 11] where second order asymptotics were obtained for the quantities studied in [4]. In <ref> [4, 7, 11] </ref> only memoryless sources were analyzed, and in this paper we extend the analysis to Markovian 2 sources. In this paper, we shall analyze three models of the Lempel-Ziv scheme in the Marko-vian settings. <p> Then, an edge and a new node are added to the 4 tree. Phrases created in such a way are stored directly in nodes of the tree (cf. <ref> [11] </ref>). This is illustrated in Figure 1. As mentioned before, in this paper we present second order analysis of the above three models of the Lempel-Ziv algorithm for a Markovian source. <p> The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in <ref> [7, 11, 12] </ref>, while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis. <p> Observe that B k 0 = 0 for There are simple relationships between just defined parameters. First of all, we notice that (cf. <ref> [10, 11, 20] </ref>) PrfD m = kg = B k m This, and the definition of the typical depth, immediately imply PrfI m+1 = kg = B k m+1 B k 7 with PrfI 0 = 0g = 1 and PrfI 0 = kg = 0 for all k 1. <p> One must say, however, that the above recurrence equations are not easy to solve. Even, if in principle, one can write an explicit solution (cf. <ref> [11, 20] </ref> for memoryless sources), it is too complicated to gain any insights. Therefore, we must retreat to the asymptotic analysis. <p> Let us compare the findings of Theorem 1 to those obtained for a memoryless source (cf. <ref> [11, 20] </ref>). The Markov source becomes a memoryless source if we assume p ji = i for i; j = 1; 2; : : : ; V . <p> Prf n = kg = m=M min m i=1 PrfI i = k & M n = mg (42) 18 where M min = O ( p n) is the minimum number of phrases and M max = O (n= log 2 n) is the maximum number of phrases (cf. <ref> [11] </ref>). In passing, we should observe that there is a relationship between the phrase length I i and the number of phrases M n .
Reference: [12] <author> G. Louchard and W. Szpankowski, </author> <title> On the Average Redundancy Rate of the Lempel-Ziv Code, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 43, </volume> <pages> 2-8, </pages> <year> 1997. </year>
Reference-contexts: In the past, mostly first order analysis of these parameters were available with the exception of <ref> [7, 11, 12, 18] </ref> where largely memoryless sources were analyzed. The first order analysis provides the first order asymptotics (e.g., is the redundancy of a code o (n)?). <p> Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in <ref> [7, 11, 12] </ref>, while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis. <p> While this value may be savely ignored in the first order analysis, it is of prime interest to second order analysis. For example, the fluctuating function ffi 1 (x) determines the behavior of the Lempel-Ziv redundancy (cf. <ref> [12] </ref>). In view of this, one may ask for which Markov sources condition (10) holds. <p> Then, the redundancy rate is defined as R n = n We denote by R n = E [R n ] the average redundancy rate. Using the approach recently pro posed in Louchard and Szpankowski <ref> [12] </ref>, we obtain from Theorem 2 the following bounds 2 ln r fl + h r + fi ln n R n 2!h + # ffi 2 (ln n) (1 + o (1)) where r = P a2A min i fp ia g and r is a vector of size V
Reference: [13] <author> G. Louchard, W. Szpankowski and J. Tang, </author> <title> Average Profile of Generalized Digital Search Trees and the Generalized Lempel-Ziv Algorithm, </title> <journal> SIAM J. Computing, </journal> <year> 1998. </year>
Reference-contexts: The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> In addition, x i (2) = 1; x (2) = 1; 22 Proof. The proof is quite standard and replies on the Lemma 2 from <ref> [13] </ref>. We leave the details to the interested reader. Now, we are ready to compute the Mellin transforms of B i u (z; 1), B i (53), respectively) with respect to z. <p> In addition, Z fl i (u; 2) = u 1, A fl Proof. By the same argument as in Lemma 2 of <ref> [13] </ref>. We proceed along the same lines as before, thus leaving out detailed explanations.
Reference: [14] <author> H. Mahmoud, </author> <title> Evolution of Random Search Trees, </title> <publisher> John Wiley & Sons, </publisher> <address> New York 1992. </address>
Reference-contexts: In the example above, 12 = 1 5 The above three models can be efficiently analyzed and uniformly represented by a digital search tree, a data structure that have been studied by its own right for more than thirty years (cf. <ref> [10, 14] </ref>). <p> In fact, digital trees appear in a variety of computer and communications applications including searching, sorting, dynamic hashing, codes, conflict resolution protocols for multiaccess communications, and data compression (cf, <ref> [10, 14] </ref>) Thus, better understanding of their behavior is desirable and could lead to some algorithmic improvements. <p> The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> To accomplish this, we shall derive a functional-differential equations on the Poisson transforms e B i (z; u), which seem to have a simpler, or at least more compact, form. These functional-differential equations are next changed into a simple matrix recurrence in terms of the Mellin transform (cf. <ref> [3, 14, 21] </ref>). After solving this matrix equation (in fact, for the asymptotic analysis we do not even need to solve it explicitly), we apply the inverse Mellin transform 9 to recover the Poisson transform B i (z; u) for z ! 1 in a cone around the real axis. <p> A few words of discussion about the fluctuating function ffi (x) is in order. The amplitude of this function is very small, however, it increases with V . For example, for the unbiased memoryless source jffi 1 (x)j 10 6 for V = 2 (cf. <ref> [10, 14] </ref>). While this value may be savely ignored in the first order analysis, it is of prime interest to second order analysis. For example, the fluctuating function ffi 1 (x) determines the behavior of the Lempel-Ziv redundancy (cf. [12]). <p> In particular, e B u (z; 1) = 2i 2 +i1 2 i1 e B uu (z; 1) = 2i 2 +i1 2 i1 The evaluation of the above integrals is quite standard (e.g., see <ref> [10, 14] </ref>): We extend the line of integration to a big rectangle right to the integration line, and observe that bottom and top lines contribute negligibly because the gamma function decreases exponentially with the increase in the magnitude of the imaginary part.
Reference: [15] <author> N. Merhav, </author> <title> Universal Coding with Minimum Probability of Codeword Length Overflow, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 37, </volume> <pages> 556-563, </pages> <year> 1991. </year>
Reference-contexts: For the convergence in moments we need ffi n = O (e ffn ) for some ff &gt; 0, which is assumed to hold. Remark. Merhav's result <ref> [15] </ref> allows to conclude that for Markov sources PrfM n (n)(1 + "))g (1 + o (1))e ffn for a constant ff &gt; 0 and " = O (1= p log n).
Reference: [16] <author> B. Noble and J. Daniel, </author> <title> Applied Linear Algebra, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1988. </year>
Reference-contexts: fl (s) = adj [Q (s)] be the adjoint matrix of Q (s), that is, Q fl (s) = (1) i+j fQ j;i (s)g i;j2A where Q j;i (s) is the (j; i) cofactor of Q (s) defined as Q 1 (s) = Q fl (s)= det Q (s) (cf. <ref> [16] </ref>).
Reference: [17] <author> B. Pittel, </author> <title> Asymptotic Growth of a Class of random Trees, </title> <journal> Ann. Probab., </journal> <volume> 13, </volume> <pages> 414-427, </pages> <year> 1985. </year>
Reference-contexts: The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing.
Reference: [18] <author> S. Savari, </author> <title> Redundancy of the Lempel-Ziv Incremental Parsing Rule, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 43, </volume> <pages> 9-21, </pages> <year> 1997. </year>
Reference-contexts: In the past, mostly first order analysis of these parameters were available with the exception of <ref> [7, 11, 12, 18] </ref> where largely memoryless sources were analyzed. The first order analysis provides the first order asymptotics (e.g., is the redundancy of a code o (n)?). <p> Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. Savari <ref> [18] </ref> proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis.
Reference: [19] <author> D. </author> <title> Stoyan, Comparison methods for Queues and Other Stochastic Models, </title> <publisher> John Wiley & Sons, </publisher> <address> Chichester 1983. </address>
Reference-contexts: Thus, we shall rely on another approach, namely stochastic dominance in which the independence assumption plays a central role. Let us fix a given string w. By the pathwise stochastic dominance theorem <ref> [19] </ref>, there exists a probabilistic space on which a pair of DST trees ( e T 1 m 1 ; e T 2 m 2 ) satisfies * For i = 1; 2 the tree-path distribution of e C i m i (w) on e T i m i , is
Reference: [20] <author> W. Szpankowski, </author> <title> A Characterization of Digital search Trees From the Successful Search Viewpoint, </title> <journal> Theoretical Computer Science, </journal> <volume> 85, </volume> <pages> 117-134, </pages> <year> 1991. </year>
Reference-contexts: The average profile of the MI model is the same as the average number of nodes at a given level in the associated digital tree. Digital trees (which include tries, PATRICIA tries and digital search trees) have been studied extensively in the past for memoryless source (cf. <ref> [10, 7, 11, 13, 14, 17, 20] </ref>). Extension to Markovian sources are scarce, and to the best of our knowledge only tries were analyzed (cf. [2, 6]). Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. <p> Observe that B k 0 = 0 for There are simple relationships between just defined parameters. First of all, we notice that (cf. <ref> [10, 11, 20] </ref>) PrfD m = kg = B k m This, and the definition of the typical depth, immediately imply PrfI m+1 = kg = B k m+1 B k 7 with PrfI 0 = 0g = 1 and PrfI 0 = kg = 0 for all k 1. <p> One must say, however, that the above recurrence equations are not easy to solve. Even, if in principle, one can write an explicit solution (cf. <ref> [11, 20] </ref> for memoryless sources), it is too complicated to gain any insights. Therefore, we must retreat to the asymptotic analysis. <p> Let us compare the findings of Theorem 1 to those obtained for a memoryless source (cf. <ref> [11, 20] </ref>). The Markov source becomes a memoryless source if we assume p ji = i for i; j = 1; 2; : : : ; V . <p> As a result, we find _ x (2) = i=2 1 X _ Q 1 (i)(1 p (i) ) 1 X p 0 (i) ; and finally # = _ x (2) = k=1 i=1 k+1 1 i=1 k+1 ; which coincides with the findings of <ref> [20] </ref>. In summary, our results for the Markovian source reduce to those of [20] when the source becomes memoryless. (iii) Fluctuating Function ffi (x). A few words of discussion about the fluctuating function ffi (x) is in order. <p> i=2 1 X _ Q 1 (i)(1 p (i) ) 1 X p 0 (i) ; and finally # = _ x (2) = k=1 i=1 k+1 1 i=1 k+1 ; which coincides with the findings of <ref> [20] </ref>. In summary, our results for the Markovian source reduce to those of [20] when the source becomes memoryless. (iii) Fluctuating Function ffi (x). A few words of discussion about the fluctuating function ffi (x) is in order. The amplitude of this function is very small, however, it increases with V .
Reference: [21] <author> W. Szpankowski, </author> <title> Average Case Analysis of Algorithms, in Handbook on Algorithms and Theory of Computation (Ed. </title> <editor> M. Atallah), </editor> <publisher> CRC 1998. </publisher>
Reference-contexts: (u; z) + e B i (z; u) = u e B 1 (u; p i;1 z) + + e B V (u; p i;V z) + a (z; u); i = 1; 2; : : : ; V; where e B i (z; u) is the Poisson transform (cf. <ref> [7, 21] </ref>) of the average profile when all strings start with symbol i 2 A = f1; 2; : : : ; V g, a (z; u) is a given function, and P = fp ij g V i;j=1 is the underlying Markov chain. <p> These differential-functional equations are reduced to a simple matrix functional equations of the Mellin transform B fl i (s) with respect to z of e B i (z; u) (cf. <ref> [3, 21] </ref>). <p> To accomplish this, we shall derive a functional-differential equations on the Poisson transforms e B i (z; u), which seem to have a simpler, or at least more compact, form. These functional-differential equations are next changed into a simple matrix recurrence in terms of the Mellin transform (cf. <ref> [3, 14, 21] </ref>). After solving this matrix equation (in fact, for the asymptotic analysis we do not even need to solve it explicitly), we apply the inverse Mellin transform 9 to recover the Poisson transform B i (z; u) for z ! 1 in a cone around the real axis.
Reference: [22] <author> J. Tang, </author> <title> Probabilistic Analysis of Digital Search Trees, </title> <type> Ph.D. Thesis, </type> <institution> Purdue University 1996. </institution>
Reference-contexts: To derive explicit expressions for the vectors a 1 ; a 2 ; f 1 and f 2 we need the following lemma which proof is standard and is omitted (detailed proof can be found in <ref> [22] </ref>). Lemma 5 Let us define = 6 6 6 4 1 2 ::: V . . . . . . 3 7 7 7 = and let Q fl = fq fl i;j=1 be the adjoint matrix of Q (s)j s=1 .
Reference: [23] <author> A. J. Wyner, </author> <title> The Redundancy and Distribution of the Phrase Lengths of the Fixed-Database Lempel-Ziv Algorithm, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 43, </volume> <pages> 1439-1465, </pages> <year> 1997. </year>
Reference-contexts: Lempel-Ziv model for memoryless sources was discussed in [7, 11, 12], while second order analysis for Markovian sources are basically non-existing. Savari [18] proposed the redundancy analysis of the LZ code for Markovian sources, but redundancy analysis requires rather a minor extension of the first order analysis. Wyner <ref> [23] </ref> derived the limiting distribution of the phrase length in the other Lempel-Ziv scheme (i.e., LZ'77) which is known to be considerable simpler for analysis. This paper is organized as follows. In the next section we present our main results for all three models, and discuss some of their consequences.
Reference: [24] <author> J. Ziv and A. Lempel, </author> <title> Compression of Individual Sequences via Variable-Rate Coding, </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 24, </volume> <pages> 530-536, </pages> <year> 1978. </year>
Reference-contexts: 1 Introduction The heart of many lossless data compression schemes is the incremental parsing algorithm due to Lempel and Ziv <ref> [24] </ref>. It partitions a sequence into variable phrases such that a new phrase is the shortest substring not seen in the past as a phrase. <p> to prove that for any " &gt; 0 and for all set of integers B lim sup max Prf n 2 Bg PrfD b (1+")(n)c 2 Bg and n!1 B PrfD b (1")(n)c 2 Bg Prf n 2 Bg First of all, observe that for any " &gt; 0 (cf. <ref> [24] </ref>) lim PrfM n =2 ((1 ")(n); (1 + ")(n))g = 0: We rewrite (42) as Prf n 2 Bg = m=1 m `=1 PrfI GK ` 2 B & M n = mg for any set of integers B.
References-found: 24

