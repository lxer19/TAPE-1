URL: http://www.win.tue.nl/math/dw/personalpages/ruudp/paper/33.ps.gz
Refering-URL: http://www.win.tue.nl/math/dw/personalpages/ruudp/index.html
Root-URL: http://www.win.tue.nl
Title: Grobner bases for error-correcting codes and their decoding Some tapas of computer algebra Chap. 11,
Author: Mario de Boer and Ruud Pellikaan (A.M. Cohen, H. Cuypers and H. Sterk eds.), 
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands.  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of Technology,  
Date: September 27-30, 1995, Eindhoven.  
Note: Appeared in  Chap. 10, Grobner bases for codes, pp. 237-259,  pp. 260-275, Project 7, The Golay codes, pp. 338-347, Springer, Berlin 1999, after the EIDMA/Galois minicourse on Computer Algebra,  1 Both authors are from the  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> D. Augot, </author> <title> "Description of minimum weight codewords of cyclic codes by algebraic systems," Un. </title> <type> de Sherbrooke, preprint Aug. </type> <year> 1994. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [2] <author> D. Augot, </author> <title> "Algebraic characterization of minimum codewords of cyclic codes," </title> <booktitle> Proc. IEEE ISIT'94, </booktitle> <address> Trondheim, Norway, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [3] <author> D. Augot, </author> <title> "Newton's identities for minimum codewords of a family of alternant codes," </title> <note> preprint 1995. </note>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [4] <author> D. Augot, P. Charpin and N. Sendrier, </author> <title> "Weights of some binary cyclic codewords throughout Newton's identities," Eurocode '90, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin 1990. </address>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [5] <author> D. Augot, P. Charpin and N. Sendrier, </author> <title> "Studying the locator polynomial of minimum weight codewords of BCH codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -38, </volume> <pages> pp. 960-973, </pages> <year> 1992. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [6] <author> R. Baart, J. Cramwinckel and E. Roijackers, "GUAVA, </author> <title> a coding theory package," Delft Un. </title> <type> Techn., </type> <month> June </month> <year> 1994. </year>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA <ref> [6, 37] </ref>. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10].
Reference: [7] <author> A. Barg, </author> <title> "Complexity issues in coding theory," to appear in Handbook of Coding Theory, (V.S. </title> <editor> Pless, W.C. Huffman and R.A. Brualdi eds.), </editor> <publisher> Elsevier. </publisher>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. For questions concerning complexity issues in coding theory we refer to <ref> [7] </ref>. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here.
Reference: [8] <author> A. Barg and I. Dumer, </author> <title> "on computing the weight spectrum of cyclic codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 38, </volume> <pages> pp. 1382-1386, </pages> <year> 1992. </year>
Reference-contexts: For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm <ref> [8] </ref> to compute the weight enumerator that is much faster than the methods presented here. See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4.
Reference: [9] <author> T. Becker and V. Weispfenning, </author> <title> Grobner basis; a computational approach to commutative algebra, </title> <publisher> Springer, </publisher> <address> Berlin 1993. </address>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [10] <author> M. Beckker and J. Cramwinckel, </author> <title> "Implementation of an algorithm for the weight distribution of block codes," Modelleringcolloquium, Eindhoven Un. </title> <type> Techn., </type> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by <ref> [10] </ref>. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24].
Reference: [11] <author> E.R. Berlekamp, R.J. McEliece and H.C.A. van Tilborg, </author> <title> "On the inherent intractibility of certain coding problems," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -24, </volume> <pages> pp. 384-386, </pages> <year> 1978. </year>
Reference-contexts: For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in <ref> [11] </ref>. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here. See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4.
Reference: [12] <author> A.E. Brouwer, </author> <note> http://www.win.tue.nl/win/math.dw.voorlincod.html 27 28 BIBLIOGRAPHY </note>
Reference-contexts: See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4. There is an online connection to the latest state of the table <ref> [12] </ref> which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40].
Reference: [13] <author> A.E. Brouwer and T. Verhoeff, </author> <title> "An updated table of minimum-distance bounds for binary linear codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -39, </volume> <pages> pp. 662-677, </pages> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here. See <ref> [13] </ref> for the tables of optimal q-ary codes for q = 2, 3 and 4. There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord.
Reference: [14] <author> A.M. Cohen, </author> <title> "Grobner bases, an introduction," this volume. </title>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [15] <author> D. Cox, J. Little and D. O'Shea, </author> <title> Ideals, varieties and algorithms; an introduction to computational algebraic geometry and commutative algebra, </title> <publisher> Springer, </publisher> <address> Berlin 1992. </address>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [16] <author> H. Cuypers and H. Sterk, </author> <title> "Working with permutation groups," this volume. </title>
Reference-contexts: The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See <ref> [16] </ref> and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. For questions concerning complexity issues in coding theory we refer to [7].
Reference: [17] <author> G.-L. Feng and T.R.N. Rao, </author> <title> "A simple approach for construction of algebraic-geometric codes from affine plane curves," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -40, </volume> <pages> pp. 1003-1012, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [18] <author> G.-L. Feng and T.R.N. Rao, </author> <title> "Improved geometric Goppa codes Part I, Basic Theory," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -41, </volume> <pages> pp. 1678-1693, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [19] <author> G.-L. Feng, V. Wei, T.R.N. Rao and K.K. Tzeng, </author> <title> "Simplified understanding and efficient decoding of a class of algebraic-geometric codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. -40, </volume> <pages> pp. 981-1002, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [20] <author> GAP: </author> <title> Group algorithms and programming, </title> <institution> Math. Dept. RWTH Aachen, gap-forummath.rwth.aachen </institution>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP <ref> [20] </ref> and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [21] <author> V.D. Goppa, </author> <title> "Codes associated with divisors," Probl. </title> <journal> Peredachi Inform. </journal> <volume> vol. 13 (1), </volume> <pages> pp. 33-39, </pages> <year> 1977. </year> <title> Translation: Probl. </title> <journal> Inform. Transmission, </journal> <volume> vol. 13, </volume> <pages> pp. 22-26, </pages> <year> 1977. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [22] <author> V.D. Goppa, </author> <title> "Codes on algebraic curves," </title> <journal> Dokl. Akad. Nauk SSSR, </journal> <volume> vol. 259, </volume> <pages> pp. 1289-1290, </pages> <year> 1981. </year> <title> Translation: </title> <journal> Soviet Math. Dokl., </journal> <volume> vol. 24, </volume> <pages> pp. 170-172, </pages> <year> 1981. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [23] <author> V.D. Goppa, </author> <title> "Algebraico-geometric codes," </title> <journal> Izv. Akad. Nauk SSSR, </journal> <volume> vol. 46, </volume> <year> 1982. </year> <title> Translation: </title> <journal> Math. USSR Izvestija, </journal> <volume> vol. 21, </volume> <pages> pp. 75-91, </pages> <year> 1983. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [24] <author> V.D. Goppa, </author> <title> "Codes and information," </title> <journal> Russian Math. Surveys, </journal> <volume> vol. 39, </volume> <pages> pp. 87-141, </pages> <year> 1984. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [25] <author> V.D. Goppa, </author> <title> Geometry and codes, </title> <journal> Mathematics and its Applications, </journal> <volume> vol. 24, </volume> <publisher> Kluwer Acad. Publ., </publisher> <address> Dordrecht 1991. </address>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [26] <author> P. Heijnen and R. Pellikaan, </author> <title> "Geneneralized Hamming weights of q-ary Reed-Muller codes," </title> <note> to appear in IEEE Trans. Inform. Theory. </note>
Reference-contexts: Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in <ref> [26, 36] </ref>. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from <ref> [26, 35] </ref>. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [27] <author> J.W.P. Hirschfeld and J.A. Thas, </author> <title> General Galois geometries, </title> <publisher> Oxford University Press, </publisher> <address> Oxford 1991. BIBLIOGRAPHY 29 </address>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to <ref> [27, 40] </ref>. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34].
Reference: [28] <author> T. Hoholdt, J.H. van Lint and R. Pellikaan, </author> <title> "Algebraic geometry codes," to appear in Handbook of Coding Theory, (V.S. </title> <editor> Pless, W.C. Huffman and R.A. Brualdi eds.), </editor> <publisher> Elsevier. </publisher>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31].
Reference: [29] <author> R.D. Jenks and R.S. Sutor, </author> <title> Axiom. The scientific computation system, </title> <publisher> Springer-Verlag, </publisher> <address> New York 1992. </address>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom <ref> [29] </ref>, GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [30] <author> G.L. Katsman and M.A. Tsfasman, </author> <title> "Spectra of algebraic-geometric codes," Probl. </title> <journal> Peredachi Inform, </journal> <volume> vol. 23 (4), </volume> <pages> pp. 19-34, </pages> <year> 1987. </year> <title> Translation: Probl. </title> <journal> Inform. Transmission, </journal> <volume> vol. 23, </volume> <pages> pp. 262-275, </pages> <year> 1987. </year>
Reference-contexts: The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from <ref> [30, 40] </ref> and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6].
Reference: [31] <author> C. Kirfel and R. Pellikaan, </author> <title> "The minimum distance of codes in an array coming from telescopic semigroups," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 41, </volume> <pages> pp. 1720-1732, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup <ref> [31] </ref>. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [32] <author> J. Leon, </author> <title> "Computing the automorphism groups of error-correcting codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 28, </volume> <pages> pp. 496-511, </pages> <year> 1982. </year>
Reference-contexts: NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to <ref> [32] </ref>. For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11].
Reference: [33] <author> J.H. van Lint, </author> <title> Introduction to coding theory, Graduate Texts in Math. 86, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin 1982. </address>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. <p> We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. <p> For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in <ref> [33, 34] </ref>. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from <ref> [33, Chap 6] </ref> or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)].
Reference: [34] <author> F.J. MacWilliams and N.J.A. Sloane, </author> <title> The theory of error-correcting codes, </title> <publisher> North-Holland Math. </publisher> <address> Library vol. 16, </address> <publisher> North-Holland, </publisher> <address> Amsterdam 1977. </address>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. <p> We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. <p> For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in <ref> [33, 34] </ref>. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or <ref> [34, Chap 8 x6] </ref>. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from <ref> [34, Chap 8 x6 Theorem 24] </ref>. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. <p> The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in <ref> [34, Chap 8 x6 (52)] </ref>. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter.
Reference: [35] <author> R. Pellikaan, </author> <title> "The shift bound for cyclic, Reed-Muller and geometric Goppa codes," </title> <booktitle> Proceedings AGCT-4, </booktitle> <address> Luminy 1993, </address> <publisher> Walter de Gruyter, </publisher> <address> Berlin 1996, </address> <pages> pp. 155-175. </pages>
Reference-contexts: The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from <ref> [26, 35] </ref>. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [36] <author> R. Pellikaan, </author> <title> "On the existence of order functions," </title> <booktitle> submitted to the proceedings of the Second Shanghai Conference on Designs, Codes and Finte Geometry, </booktitle> <year> 1996. </year>
Reference-contexts: The asymptotically good codes require the knowledge of modular curves. Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases <ref> [36] </ref>. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. <p> Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in <ref> [26, 36] </ref>. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases <ref> [36] </ref>. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35].
Reference: [37] <author> J. Simonis, "GUAVA: </author> <title> A computer algebra package for coding theory," </title> <booktitle> Proc Fourth Int. Workshop Algebraic Combinatorial Coding Theory, </booktitle> <address> Nov-gorod, Russia, </address> <month> Sept. </month> <pages> 11-17, </pages> <year> 1994, </year> <pages> pp. 165-166. </pages>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA <ref> [6, 37] </ref>. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10].
Reference: [38] <author> Ma. Stillman, Mi. Stillman and D. Bayer, </author> <title> Macaulay user manual. </title>
Reference-contexts: The computer algebra packages Axiom [29], GAP [20] and Macaulay <ref> [38] </ref> are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [39] <author> H. Stichtenoth, </author> <title> Algebraic function fields and codes, </title> <publisher> Universitext, Springer-Verlag, </publisher> <address> Berlin 1993. </address>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable <ref> [39] </ref>, in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. <p> The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in <ref> [39, 40] </ref>. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [40] <author> M.A. Tsfasman and S.G. Vladut, </author> <title> Algebraic-geometric codes, Mathematics and its Application vol. 58, </title> <publisher> Kluwer Acad. Publ., </publisher> <address> Dordrecht 1991. </address>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to <ref> [27, 40] </ref>. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. <p> The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from <ref> [30, 40] </ref> and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. <p> Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound <ref> [40] </ref>. The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. <p> The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in <ref> [39, 40] </ref>. 26 CHAPTER 1. GR OBNER BASES FOR CODES

Reference: [1] <author> S. Arimoto, </author> <title> "Encoding and decoding of p-ary group codes and the correction system," (in Japanese) Inform. </title> <booktitle> Processing in Japan, </booktitle> <volume> vol. 2, </volume> <pages> pp. 320-325, </pages> <month> Nov. </month> <year> 1961. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [2] <author> A. Barg, </author> <title> "At the dawn of the theory of codes," </title> <journal> Math. Intelligencer, </journal> <volume> vol. 15, No. 1, </volume> <pages> pp. 20-27, </pages> <year> 1993. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [3] <author> A. Barg, </author> <title> "Complexity issues in coding theory," to appear in Handbook of Coding Theory, (V.S. </title> <editor> Pless, W.C. Huffman and R.A. Brualdi eds.), </editor> <publisher> Elsevier. </publisher>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [4] <author> E.R. Berlekamp, </author> <title> Algebraic coding theory, </title> <publisher> Aegon Park Press, </publisher> <address> Laguna Hills CA, </address> <year> 1984. </year>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [5] <author> E.R. Berlekamp, R.J. McEliece and H.C.A. van Tilborg, </author> <title> "On the inherent intractibility of certain coding problems," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-24, </volume> <pages> pp. 384-386, </pages> <year> 1978. </year>
Reference-contexts: The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from <ref> [1, 2, 3, 4, 5] </ref>. This can be generalized to all linear codes as will be explained in the next chapter. Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes.
Reference: [6] <author> R.E. Blahut, </author> <title> Theory and practice of error control codes, </title> <publisher> Addison-Wesley, </publisher> <address> Reading 1983. </address>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA <ref> [6, 37] </ref>. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10].
Reference: [7] <author> R.E. Blahut, </author> <title> Fast algorithms for digital signal processing, </title> <publisher> Addison-Wesley, </publisher> <address> Reading 1985. </address>
Reference-contexts: Show that C ? has dimension n k. Let H be a generator matrix for C ? . Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The <ref> [7; 4; 3] </ref> Hamming code has generator matrix G and its dual, the [7; 3; 4] Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 <p> Prove that C = fc 2 F n q j Hc T = 0g. Therefore H is called a parity check matrix for C. Example 1.2.3 The [7; 4; 3] Hamming code has generator matrix G and its dual, the <ref> [7; 3; 4] </ref> Simplex code has generator matrix H, where G = B @ 0 1 0 0 1 1 0 0 0 0 1 0 1 1 C A ; H = @ 1 1 0 1 0 1 0 1 Exercise 1.2.4 Let (I k jP ) be a <p> A code of length n is called cyclic if the cyclic permutation of coordinates oe (i) = i 1 modulo n leaves the code invariant. See Section 1.4. Exercise 1.2.8 Show that the <ref> [7; 4; 3] </ref> Hamming code, as defined in Example 1.2.3, is not cyclic, but that it is equivalent to a cyclic code. 1.3 Determining the minimum distance Given a generator matrix of a code, the problem is to determine the minimum distance of the code. <p> Example 1.3.6 The 7 columns of the <ref> [7; 3; 4] </ref> Simplex code, viewed as homogeneous coordinates of points in P G (2; 2), give the seven points of the Fano plane. All lines contain three points, so indeed the minimum distance is 7 3 = 4. <p> = 0 ff 1 = 0 ff 3 = fi 4 = 7 ff 5 = fi 2 3fi 3 + 6fi 4 = 0 ff 7 = fi 0 fi 1 + fi 2 fi 3 + fi 4 = 1 Exercise 1.3.18 Compute the weight enumerator of the <ref> [7; 3; 4] </ref> Simplex code and verify MacWilliam's identity. Exercise 1.3.19 Compute the weight enumerator of the code on the Klein quartic of Exercise 1.3.8. Exercise 1.3.20 Let C be an [n; k; n k + 1] code. Show that l (J) = n #J for all J . <p> See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. For questions concerning complexity issues in coding theory we refer to <ref> [7] </ref>. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here.
Reference: [8] <author> R.E. Blahut, </author> <title> Introduction to algebraic coding, </title> <note> book in prepartation. </note>
Reference-contexts: For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm <ref> [8] </ref> to compute the weight enumerator that is much faster than the methods presented here. See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4.
Reference: [9] <author> A. Brinton Cooper III, </author> <title> "Direct solution of BCH decoding equations," Communication, Control and Signal Processing, </title> <publisher> Elsevier Sc. Publ., </publisher> <pages> pp. 281-286, </pages> <year> 1990. </year>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [10] <author> A. Brinton Cooper III, </author> <title> "Finding BCH error locator polynomials in one step," </title> <journal> Electronic Letters, </journal> <volume> vol. </volume> <pages> 27 ,pp. 2090-2091, </pages> <year> 1991. </year>
Reference-contexts: For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by <ref> [10] </ref>. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24].
Reference: [11] <author> X. Chen, I.S. Reed, T. </author> <title> Helleseth and T.K. Truong, "Algebraic decoding of cyclic codes: a polynomial point of view," </title> <journal> Contemporary Math. </journal> <volume> vol. 168, </volume> <pages> pp. 15-22, </pages> <year> 1994. </year> <note> 48 BIBLIOGRAPHY </note>
Reference-contexts: For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in <ref> [11] </ref>. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here. See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4.
Reference: [12] <author> X. Chen, I.S. Reed, T. </author> <title> Helleseth and T.K. Truong, "Use of Grobner bases to decode binary cyclic codes up to the true minimum distance," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-40, </volume> <pages> pp. 1654-1661, </pages> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: See [13] for the tables of optimal q-ary codes for q = 2, 3 and 4. There is an online connection to the latest state of the table <ref> [12] </ref> which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40].
Reference: [13] <author> X. Chen, I.S. Reed, T. </author> <title> Helleseth and T.K. Truong, "General principles for the algebraic decoding of cyclic codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-40, </volume> <pages> pp. 1661-1663, </pages> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11]. For cyclic codes there is an algorithm [8] to compute the weight enumerator that is much faster than the methods presented here. See <ref> [13] </ref> for the tables of optimal q-ary codes for q = 2, 3 and 4. There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord.
Reference: [14] <author> J.L. Dornstetter, </author> <title> "On the equivalence of Berlekamp's and Euclid's algorithm," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-33, </volume> <pages> pp. 428-431, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [15] <author> J.C. Faugere, P. Gianni, D. Lazard and T. Mora, </author> <title> "Efficient computation of zero-dimensional Grobner bases by a change of ordering," </title> <journal> Journ. Symb. Comp., </journal> <volume> vol. 16, </volume> <pages> pp. 329-344, </pages> <year> 1993. </year>
Reference-contexts: Write r + 1 = ae (q 1) + with ae; 2 N 0 such that &lt; q 1. Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use <ref> [9, 14, 15] </ref> as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34].
Reference: [16] <author> G.-L. Feng and T.R.N. Rao, </author> <title> "Decoding of algebraic geometric codes up to the designed minimum distance," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-39, </volume> <pages> pp. 37-45, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See <ref> [16] </ref> and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. For questions concerning complexity issues in coding theory we refer to [7].
Reference: [17] <author> J. Fitzgerald, </author> <title> Applications of Grobner bases to linear codes, </title> <type> Ph.D. Thesis, </type> <institution> Louisiana State Un., </institution> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [18] <author> J. Fitzgerald and R.F. Lax, </author> <title> "Decoding affine variety codes using Grobner bases," to appear in Designs, Codes and Cryptography. </title>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [19] <author> G.D. Forney Jr., </author> <title> "On decoding BCH codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 11, </volume> <pages> pp. 549-557, </pages> <year> 1965. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36].
Reference: [20] <author> D.C. Gorenstein and N. Zierler, </author> <title> "A class of error-correcting codes in p m symbols," </title> <journal> Journ. SIAM, </journal> <volume> vol. 9, </volume> <pages> pp. 207-214, </pages> <year> 1961. </year>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP <ref> [20] </ref> and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [21] <author> T. Hoholdt, J.H. van Lint and R. Pellikaan, </author> <title> "Algebraic geometry codes," to appear in Handbook of Coding Theory, (V.S. </title> <editor> Pless, W.C. Huffman and R.A. Brualdi eds.), </editor> <publisher> Elsevier. </publisher>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [22] <author> T. Hoholdt and R. Pellikaan, </author> <title> "On decoding algebraic-geometric codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 41, </volume> <pages> pp. 1589-1614, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [23] <author> J. Justesen, K.J. Larsen, H. Elbrond Jensen, A. Havemose and T. Hoholdt, </author> <title> "Construction and decoding of a class of algebraic geometric codes," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-35, </volume> <pages> pp. 811-821, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [24] <author> T. Klove and V.I. Korzhik, </author> <title> Error detecting codes, </title> <publisher> Kluwer Acad. Publ. </publisher> , <address> Dordrecht 1995. </address>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [25] <author> P. Loustaunau and E.V. York, </author> <title> "On the decoding of cyclic codes using Grobner bases," </title> <type> preprint # 249, </type> <institution> Dept. Math., Univ. of Notre Dame, </institution> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter. Goppa <ref> [21, 22, 23, 24, 25] </ref> used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound [40]. The mathematics is quite deep and abstract.
Reference: [26] <author> F.J. MacWilliams and N.J.A. Sloane, </author> <title> The theory of error-correcting codes, </title> <publisher> North-Holland Math. </publisher> <address> Library vol. 16, </address> <publisher> North-Holland, </publisher> <address> Amsterdam 1977. BIBLIOGRAPHY 49 </address>
Reference-contexts: Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in <ref> [26, 36] </ref>. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from <ref> [26, 35] </ref>. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [27] <author> J.L. Massey, </author> <title> "Shift-register synthesis and BCH decoding," </title> <journal> IEEE Trans. Inform. Theory vol. IT-15, </journal> <volume> pp.122-127, </volume> <month> January </month> <year> 1969. </year>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to <ref> [27, 40] </ref>. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34].
Reference: [28] <author> J. Maucher and R. Kotter, </author> <title> "Decoding constacyclic codes in Lee- and Mannheim metric by the use of Grobner bases," </title> <type> preprint, </type> <month> August </month> <year> 1996. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31].
Reference: [29] <author> R. Pellikaan, </author> <title> "On the efficient decoding of algebraic-geometric codes," </title> <booktitle> Proceedings of Eurocode 92, CISM Courses and Lectures, </booktitle> <volume> vol. 339, </volume> <pages> pp. 231-253, </pages> <publisher> Springer-Verlag, </publisher> <address> Wien-New York, </address> <year> 1993. </year>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and [33, 34] for the theory of error-correcting codes. The computer algebra packages Axiom <ref> [29] </ref>, GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [30] <author> W.T. Penzhorn, </author> <title> "On the fast decoding of binary BCH codes," </title> <booktitle> Proc. IEEE Int. Symp. Inform. Theory, </booktitle> <address> San Antonio, </address> <pages> pp. 103, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from <ref> [30, 40] </ref> and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6].
Reference: [31] <author> W.W. Peterson, </author> <title> "Encoding and error-correction procedures for the Bose-Chauduri codes," </title> <journal> IRE Trans. Inform. Theory, </journal> <volume> vol. IT-6, pp.459-470, </volume> <year> 1960. </year>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors <ref> [17, 18, 19, 28, 31] </ref> have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup <ref> [31] </ref>. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [32] <author> W.W. Peterson and E.J. Weldon, </author> <title> Error-correcting codes, </title> <publisher> MIT Pres, </publisher> <month> Cam-bridge </month> <year> 1977. </year>
Reference-contexts: NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to <ref> [32] </ref>. For questions concerning complexity issues in coding theory we refer to [7]. The recent proof of the NP completeness of finding the minimum distance of a linear code is in [41]. This answers a problem posed in [11].
Reference: [33] <author> K. Saints and C. Heegard, </author> <title> "Algebraic-geometric codes and multidimensional cyclic codes: A unified theory and algorithms for decoding using Grobner bases," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. 41, </volume> <pages> pp. 1733-1751, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. <p> We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. <p> For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in <ref> [33, 34] </ref>. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from <ref> [33, Chap 6] </ref> or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)].
Reference: [34] <author> S. Sakata, </author> <title> "On determining the independent point set for doubly periodic arrays and encoding two-dimensional cyclic codes and their duals," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> vol. IT-27, </volume> <pages> pp. 556-565, </pages> <year> 1981. </year>
Reference-contexts: Prove that d (C (l)) = d ORD;P (l) = ( + 1)q ae . 1.6 Notes We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. <p> We use [9, 14, 15] as a reference for the theory of Grobner bases, and <ref> [33, 34] </ref> for the theory of error-correcting codes. The computer algebra packages Axiom [29], GAP [20] and Macaulay [38] are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs. For an algorithm to compute the automorphism group of a code we refer to [32]. <p> For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in <ref> [33, 34] </ref>. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or <ref> [34, Chap 8 x6] </ref>. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. <p> The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from <ref> [34, Chap 8 x6 Theorem 24] </ref>. The relation with the ordinary Newton identies is explained in [34, Chap 8 x6 (52)]. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. <p> The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. The proof of Proposition 1.4.9 is from [34, Chap 8 x6 Theorem 24]. The relation with the ordinary Newton identies is explained in <ref> [34, Chap 8 x6 (52)] </ref>. The method in Section 1.4.2 to get the minimal codewords of cyclic codes is from [1, 2, 3, 4, 5]. This can be generalized to all linear codes as will be explained in the next chapter.
Reference: [35] <author> S. Sakata, </author> <title> "Finding a minimal set of linear recurring relations capable of generating a given finite two-dimensional array," </title> <journal> Journal of Symbolic Computation, </journal> <volume> vol. 5, </volume> <pages> pp. 321-337, </pages> <year> 1988. </year>
Reference-contexts: The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from <ref> [26, 35] </ref>. A classical treatment of algebraic geometry codes is given in [39, 40]. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [36] <author> S. Sakata, </author> <title> "Extension of the Berlekamp-Massey algorithm to N dimensions," </title> <journal> Information and Computation, </journal> <volume> vol. 84, </volume> <pages> pp. 207-239, </pages> <year> 1990. </year>
Reference-contexts: The asymptotically good codes require the knowledge of modular curves. Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases <ref> [36] </ref>. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. <p> Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. The notion of order order and weight functions and its relation with coding theory is developped in <ref> [26, 36] </ref>. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from <ref> [28, 31, 36] </ref>. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. <p> a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases <ref> [36] </ref>. The notion of order order and weight functions and its relation with coding theory is developped in [26, 36]. Section 1.5 is from [28, 31, 36]. Theorem 1.5.9 is from [36]. The values of a order function form a semigroup in case of a weight function. The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35].
Reference: [37] <author> Y. Sugiyama, M. Kasahara, S. Hirasawa and T. Namekawa, </author> <title> "A method for solving the key equation for decoding Goppa codes," </title> <journal> Information and Control, </journal> <volume> vol. 27, </volume> <pages> pp. 87-99, </pages> <year> 1975. </year>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA <ref> [6, 37] </ref>. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10].
Reference: [38] <author> H.-J. Weber, </author> <title> Algebraische Algorithmen zur Decodierung zyklischer Codes, </title> <type> Master's Thesis, </type> <institution> Univ. Dortmund, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: The computer algebra packages Axiom [29], GAP [20] and Macaulay <ref> [38] </ref> are used for the computations. 1.6. NOTES 25 The weightenumerator and MacWilliams identity is treated in [33, 34]. See [16] and the project on Golay codes in this book for more about automorphism groups of codes and its connection with designs.
Reference: [39] <author> D-J. Xin, </author> <title> "New approach to decoding Reed-Solomon codes based on generalized rational interpolation," </title> <booktitle> in Proc. Sixth Swedish-Russian International Workshop Inform. Trans. </booktitle> <month> August </month> <year> 1993, </year> <pages> pp. 219-223. </pages>
Reference-contexts: The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable <ref> [39] </ref>, in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. Several authors [17, 18, 19, 28, 31] have proposed a more elementary approach to algebraic geometry codes and this new method has much to do with Grobner bases [36]. <p> The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in <ref> [39, 40] </ref>. 26 CHAPTER 1. GR OBNER BASES FOR CODES
Reference: [40] <author> D-J. Xin, </author> <title> "Homogeneous interpolation problem and key equation for decoding Reed-Solomon codes," </title> <booktitle> Science in China (Series A), </booktitle> <volume> vol. 37 No. 11, </volume> <month> Nov. </month> <year> 1994. </year> <note> 50 BIBLIOGRAPHY </note>
Reference-contexts: There is an online connection to the latest state of the table [12] which can also be used to propose a new worldrecord. The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to <ref> [27, 40] </ref>. The treatment of the weight enumerator in Section 1.3.4 is from [30, 40] and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. <p> The algorithm of Brouwer is incorporated in the coding theory package GUAVA [6, 37]. For finite geometry and projective system we refer to [27, 40]. The treatment of the weight enumerator in Section 1.3.4 is from <ref> [30, 40] </ref> and this way of computing the weight distribution has been implemented by [10]. The treatment of the Mattson-Solomon polynomial can be found in [33, 34]. The proof of Proposition 1.4.7 is from [33, Chap 6] or [34, Chap 8 x6]. <p> Goppa [21, 22, 23, 24, 25] used algebraic curves to construct codes. These codes are called nowadays geometric Goppa codes or algebraic geometry codes, and give asymptotically good codes, even better than the Gilbert-Varshamov bound <ref> [40] </ref>. The mathematics is quite deep and abstract. For the construction and the parameters of these codes one needs the theory of algebraic curves or algebraic function fields of one variable [39], in particular the Theorem of Riemann-Roch. The asymptotically good codes require the knowledge of modular curves. <p> The order bound is called the Feng-Rao bound and is computed in terms of the properties of the semigroup [31]. The way Reed-Muller codes are treated in Exercise 1.5.21 is from [26, 35]. A classical treatment of algebraic geometry codes is given in <ref> [39, 40] </ref>. 26 CHAPTER 1. GR OBNER BASES FOR CODES

References-found: 80

