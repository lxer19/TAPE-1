URL: http://www.ai.univie.ac.at/~paolo/conf/em98/emcsr_chantemargue.ps.gz
Refering-URL: http://www.ai.univie.ac.at/~paolo/conf/em98.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Autonomous Agents: from Concepts to Implementation  
Author: F. Chantemargue, O. Krone, M. Schumacher, T. Dagaeff, B. Hirsbrunner 
Web: http://www-iiuf.unifr.ch/pai  
Address: Perolles 3, CH-1700 Fribourg, Switzerland  
Affiliation: Computer Science Department, PAI group, University of Fribourg  
Abstract: A model for autonomy-based multi-agent systems aimed at exhibiting emerging properties is proposed. Then, the prerequisites for a distributed implementation are discussed. A preliminary distributed implementation, illustrated by an application to a robotics simulation, is consequently sketched with a strong emphasis on STL, our coordination model, whose aim is to provide powerful coordination mechanisms that do not alter the model's conceptual prescriptions.
Abstract-found: 1
Intro-found: 1
Reference: [ Agha et al., 1993 ] <author> G. Agha, S. Folund WooYoung, and Kim Rajendra Panwar. </author> <title> Abstraction and Modularity Mechanisms for Concurrent Computing. </title> <journal> IEEE Parallel & Distributed Technology, </journal> <volume> 1(2) </volume> <pages> 3-14, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Carriero and D. Gelernter, 1992 ] . The research in this area has led to the definition of several coordination models and corresponding coordination languages, whose most prominent representative is Linda [ Gelernter, 1985 ] . Other models and languages are based on message passing paradigms <ref> [ Agha et al., 1993 ] </ref> , object-oriented techniques [ Kiel-mann, 1996 ] , multi-set rewriting schemes [ Ban^atre and Metayer, 1993 ] or control-driven models [ Arbab et al., 1993 ] .
Reference: [ Arbab et al., 1993 ] <author> F. Arbab, I. Herman, and P. </author> <title> Spilling. An Overview of Manifold and its Implementation. </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 5(1) </volume> <pages> 23-70, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Other models and languages are based on message passing paradigms [ Agha et al., 1993 ] , object-oriented techniques [ Kiel-mann, 1996 ] , multi-set rewriting schemes [ Ban^atre and Metayer, 1993 ] or control-driven models <ref> [ Arbab et al., 1993 ] </ref> . Our Coordination Model: STL The coordination model of STL (Figure 2) shares few characteristics with the IWIM [ Arbab, 1996 ] model of coordination.
Reference: [ Arbab, 1996 ] <author> Farhad Arbab. </author> <title> The IWIM Model for Coordination of Concurrent Activities. </title> <editor> In Paolo Ciancarini and Chris Hankin, editors, </editor> <booktitle> Proceedings of the First International Conference on Coordination Models, Languages and Applications, number 1061 in LNCS. </booktitle> <publisher> Springer Verlag, </publisher> <month> April </month> <year> 1996. </year>
Reference-contexts: Our Coordination Model: STL The coordination model of STL (Figure 2) shares few characteristics with the IWIM <ref> [ Arbab, 1996 ] </ref> model of coordination. It comprehends five building blocks (details in [ Krone et al., 1998 ] ): * Blops, as an abstraction and modularization mechanism for processes and ports. It serves as a separate name space as well as an encapsulation mechanism for events.
Reference: [ Ban^atre and Metayer, 1993 ] <author> J.P. Ban^atre and D. Le Metayer. </author> <title> Programming by Multiset Transformation. </title> <journal> Communications of the ACM, </journal> <volume> 36(1) </volume> <pages> 98-111, </pages> <year> 1993. </year>
Reference-contexts: Other models and languages are based on message passing paradigms [ Agha et al., 1993 ] , object-oriented techniques [ Kiel-mann, 1996 ] , multi-set rewriting schemes <ref> [ Ban^atre and Metayer, 1993 ] </ref> or control-driven models [ Arbab et al., 1993 ] . Our Coordination Model: STL The coordination model of STL (Figure 2) shares few characteristics with the IWIM [ Arbab, 1996 ] model of coordination.
Reference: [ Brooks, 1991 ] <author> R.A. Brooks. </author> <title> Intelligence without Reason. </title> <booktitle> In Proceedings of IJCAI-91, </booktitle> <address> Sydney, Aus-tralia, </address> <year> 1991. </year>
Reference-contexts: Our aim is not to go through all of them in depth, but rather to briefly introduce the necessary notions with which our work is related. Autonomous agents are by definition considered to be embodied systems (for the different forms of embodiment, see for instance <ref> [ Brooks, 1991 ] </ref> , [ P. Lerena and M. Courant, 1996 ] , [ Robert et al., ] and [ Nwana, 1996 ] ).
Reference: [ Dagaeff et al., 1997 ] <author> T. Dagaeff, F. Chantemargue, and B. Hirsbrunner. </author> <title> Emergence-based Cooperation in a Multi-Agent System. </title> <booktitle> In Proceedings of the Second European Conference on Cognitive Science (ECCS'97), </booktitle> <pages> pages 91-96, </pages> <address> Manchester, U.K., </address> <month> April 9-11 </month> <year> 1997. </year>
Reference-contexts: In such an ex-periment, the location of the stack containing the objects at the end of the run is the result of the agents' interactions. Details on the implementation and results can be found in [ F. Chantemargue et al., 1996 ] and <ref> [ Dagaeff et al., 1997 ] </ref> . A preliminary implementation of this simulation in a real world involving real mobile robots (kheperas) exhibited the emergence of cooperation.
Reference: [ F. Chantemargue et al., 1996 ] <author> F. Chantemargue, T. Dagaeff, M. Schumacher, and B. Hirsbrunner. </author> <title> Cooperation implicite et performance. </title> <booktitle> In Proceedings of the Sixth symposium on Cognitive Sciences (ARC), </booktitle> <address> Villeneuve d'Ascq, France, </address> <month> December 10-12 </month> <year> 1996. </year>
Reference-contexts: In such an ex-periment, the location of the stack containing the objects at the end of the run is the result of the agents' interactions. Details on the implementation and results can be found in <ref> [ F. Chantemargue et al., 1996 ] </ref> and [ Dagaeff et al., 1997 ] . A preliminary implementation of this simulation in a real world involving real mobile robots (kheperas) exhibited the emergence of cooperation.
Reference: [ Franklin, 1995 ] <author> S. Franklin. </author> <title> Artificial Minds. </title> <publisher> Brad-ford Books/MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction Artificial Intelligence (AI) aims at synthesizing intelligence in artefacts. However two families of approaches exist disagreeing in their notion of what intelligence actually means [ Ziemke, 1997 ] , <ref> [ Franklin, 1995 ] </ref> . On the one hand, Top-Down AI considers intelligence as the capacity to form and manipulate internal representational models of the world.
Reference: [ Gelernter, 1985 ] <author> D. Gelernter. </author> <title> Generative Communication in Linda. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 7(1) </volume> <pages> 80-112, </pages> <year> 1985. </year>
Reference-contexts: Carriero and D. Gelernter, 1992 ] . The research in this area has led to the definition of several coordination models and corresponding coordination languages, whose most prominent representative is Linda <ref> [ Gelernter, 1985 ] </ref> . Other models and languages are based on message passing paradigms [ Agha et al., 1993 ] , object-oriented techniques [ Kiel-mann, 1996 ] , multi-set rewriting schemes [ Ban^atre and Metayer, 1993 ] or control-driven models [ Arbab et al., 1993 ] .
Reference: [ Kielmann, 1996 ] <author> T. Kielmann. </author> <title> Designing a Coordination Model for Open Systems. </title> <editor> In Paolo Cian-carini and Chris Hankin, editors, </editor> <booktitle> Proceedings of the First International Conference on Coordination Models, Languages and Applications, number 1061 in LNCS. </booktitle> <publisher> Springer Verlag, </publisher> <month> April </month> <year> 1996. </year>
Reference: [ Krone et al., 1996 ] <author> O. Krone, B. Hirsbrunner, and V. Sunderam. PT-PVM+: </author> <title> A Portable Platform for Multithreaded Coordination Languages. </title> <journal> Calcu-lateurs Paralleles, </journal> <volume> 8(2) </volume> <pages> 167-182, </pages> <year> 1996. </year>
Reference-contexts: STL materializes the separation of concern as it uses a separate language exclusively reserved for coordination purposes and provides primitives which are used in the computation language to interact with the entities to be coordinated. As far as the implementation of these primitives is concerned, we use Pt-pvm <ref> [ Krone et al., 1996 ] </ref> a software platform for programming multi-threaded applications on a cluster of workstations as the underlying communication and process management platform. 3.3 Application of STL The Framework Our model is used for a simulation in the framework of mobile robotics and more specifically collective robotics. <p> We built a coordination platform based on STL's coordination model on top of the existing Pt-pvm platform <ref> [ Krone et al., 1996 ] </ref> . We sketched a preliminary STL-based distributed implementation of our multi-agent model applied to a collective robotics simulation.
Reference: [ Krone et al., 1998 ] <author> O. Krone, F. Chantemargue, T. Dagaeff, M. Schumacher, and B. Hirsbrunner. </author> <title> Coordinating Autonomous Entities. </title> <booktitle> In Proceedings of the ACM Symposium on Applied Computing (SAC'98). Special Track on Coordination, Languages and Applications, </booktitle> <address> Atlanta, Georgia, USA, </address> <month> February 27 March 1 </month> <year> 1998. </year> <note> To appear. </note>
Reference-contexts: Our Coordination Model: STL The coordination model of STL (Figure 2) shares few characteristics with the IWIM [ Arbab, 1996 ] model of coordination. It comprehends five building blocks (details in <ref> [ Krone et al., 1998 ] </ref> ): * Blops, as an abstraction and modularization mechanism for processes and ports. It serves as a separate name space as well as an encapsulation mechanism for events. Blops have the same interface as processes, i.e., a name and a set of ports. <p> To match, pairs of ports must have compatible signatures, thus introducing a sub-typing relation on port signatures <ref> [ Krone et al., 1998 ] </ref> . * Events, as a mechanism to dynamically react to state changes within a blop. They can be triggered using a condition operation on a port. STL provides some conditions such as unbound, isfull or accessed. * Connections, as a representation of connected ports.
Reference: [ Krone, 1997 ] <author> Oliver Krone. </author> <title> STL and Pt-PVM: Concepts and Tools for Coordination of Multi-threaded Applications. </title> <type> PhD thesis, </type> <institution> University of Fribourg, </institution> <year> 1997. </year>
Reference-contexts: The latter attribute relates to the communication paradigms that can be chosen: blackboard, group or stream. Several port types exist: the BB type (which has a tuple space semantics a la Linda), the Group type and P2P type (point to point) <ref> [ Krone, 1997 ] </ref> . Variants of these types can be defined by the user.
Reference: [ Langton et al., 1996 ] <author> C. Langton, N. Minar, and R. Burkhart. </author> <title> The Swarm simulation System: a toolkit for building Multi-agent simulations. </title> <type> Technical report, </type> <institution> Santa Fe Institute, </institution> <year> 1996. </year>
Reference-contexts: Therefore, there is not in the system any type of master responsible for supervising the agents, nor any type of cooperation protocol, thus allowing the system to be more flexible and fault tolerant. We implemented a serial version of this simulation in the Swarm Simulation System <ref> [ Langton et al., 1996 ] </ref> , stressing on the measurement of quantitative results and on the realization of appropriate visualization tools to follow in real-time the run of an experiment.
Reference: [ Malone and Crowston, 1994 ] <author> T. W. Malone and K. Crowston. </author> <title> The Interdisciplinary Study of Coordination. </title> <journal> ACM Computing Surveys, </journal> <volume> 26(1) </volume> <pages> 87-119, </pages> <month> March </month> <year> 1994. </year>
Reference: [ Maturana and Varela, 1980 ] <author> H. Maturana and F.J. Varela. </author> <title> Autopoiesis and Cognition: the realization of the living. </title> <publisher> Reidel, </publisher> <address> Boston, MA, </address> <year> 1980. </year>
Reference-contexts: On the one hand, Top-Down AI considers intelligence as the capacity to form and manipulate internal representational models of the world. On the other hand, Bottom-Up AI (or Autonomous Agents) considers intelligence as a biological feature <ref> [ Maturana and Varela, 1980 ] </ref> ; this notion is often referred to as Enac-tivism. There is a vast number of papers dealing with Autonomous Agents.
Reference: [ N. Carriero and D. Gelernter, 1992 ] <author> N. Carriero and D. Gelernter. </author> <title> Coordination Languages and Their Significance. </title> <journal> Communications of the ACM, </journal> <volume> 35(2) </volume> <pages> 97-107, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: The key issue of coordination is managing dependencies among activities. To formalize and better describe these interdependencies it is necessary to separate the computation and the coordination of a parallel application <ref> [ N. Carriero and D. Gelernter, 1992 ] </ref> . The research in this area has led to the definition of several coordination models and corresponding coordination languages, whose most prominent representative is Linda [ Gelernter, 1985 ] .
Reference: [ Nwana, 1996 ] <author> H. S. Nwana. </author> <title> Software Agents: an Overview. </title> <journal> Knowledge Engineering Review, </journal> <volume> 11(3) </volume> <pages> 205-244, </pages> <year> 1996. </year>
Reference-contexts: Autonomous agents are by definition considered to be embodied systems (for the different forms of embodiment, see for instance [ Brooks, 1991 ] , [ P. Lerena and M. Courant, 1996 ] , [ Robert et al., ] and <ref> [ Nwana, 1996 ] </ref> ). They are designed to fulfill internal or external goals by their own actions in continuous long-term interaction with the environment (possibly unpredictable and dynamical) in which they are situated.
Reference: [ P. Lerena and M. Courant, 1996 ] <author> P. Lerena and M. </author> <title> Courant. </title> <booktitle> Bio-machines. In Proceedings of Artificial Life, volume V, </booktitle> <address> Nara, Japan, </address> <year> 1996. </year>
Reference-contexts: Autonomous agents are by definition considered to be embodied systems (for the different forms of embodiment, see for instance [ Brooks, 1991 ] , <ref> [ P. Lerena and M. Courant, 1996 ] </ref> , [ Robert et al., ] and [ Nwana, 1996 ] ). They are designed to fulfill internal or external goals by their own actions in continuous long-term interaction with the environment (possibly unpredictable and dynamical) in which they are situated.
Reference: [ Robert et al., ] <author> A. Robert, F. Chantemargue, and M. Courant. Emuds: </author> <title> Virtual worlds for artificial agents. </title> <note> Submitted to ECAI'98. </note>
Reference-contexts: Autonomous agents are by definition considered to be embodied systems (for the different forms of embodiment, see for instance [ Brooks, 1991 ] , [ P. Lerena and M. Courant, 1996 ] , <ref> [ Robert et al., ] </ref> and [ Nwana, 1996 ] ). They are designed to fulfill internal or external goals by their own actions in continuous long-term interaction with the environment (possibly unpredictable and dynamical) in which they are situated.
Reference: [ Ziemke, 1997 ] <author> T. Ziemke. </author> <title> Adaptive Behavior in autonomous agents. To appear in Autonomous Agents, Adaptive Behaviors and Distributed Simulations' journal, </title> <year> 1997. </year>
Reference-contexts: 1 Introduction Artificial Intelligence (AI) aims at synthesizing intelligence in artefacts. However two families of approaches exist disagreeing in their notion of what intelligence actually means <ref> [ Ziemke, 1997 ] </ref> , [ Franklin, 1995 ] . On the one hand, Top-Down AI considers intelligence as the capacity to form and manipulate internal representational models of the world. <p> The architecture of an agent is displayed on figure 1. An agent possesses some sensors to perceive the world within which it moves, and some effectors to act in this world, so that it complies with the prescriptions of physically embodied agents and simulated embodied agents <ref> [ Ziemke, 1997 ] </ref> . The implementation of the different modules presented on Figure 1, namely Perception, State, Actions and Control Algorithm depends on the application and is the user's responsibility. <p> The Control Algorithm module is particularly important because it defines the type of autonomy of the agent: it is precisely inside this module that the designer decides whether to implement an operational autonomy or a behavioral autonomy <ref> [ Ziemke, 1997 ] </ref> . Operational autonomy is defined as the capacity to operate without human intervention, without being remotely controlled.
References-found: 21

