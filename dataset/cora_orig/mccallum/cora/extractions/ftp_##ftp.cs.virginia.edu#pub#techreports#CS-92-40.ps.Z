URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-92-40.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Toward a Steiner Engine: Enhanced Serial and Parallel Implementations of the Iterated 1-Steiner MRST Heuristic  
Author: Tim Barrera, Jeff Griffith, Sally A. McKee,, Gabriel Robins, Tongtong Zhang 
Abstract: Technical Report No. CS-92-40 December 01, 1992 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Beguelin, J. J. Dongarra, G. A. Geist, R. Manchek, and V. S. Sunderam, </author> <title> A User's Guide to PVM: Parallel Virtual Machine, </title> <type> Tech. Rep. </type> <institution> ORNL/TR-11826, Oak Ridge National Laboratory, </institution> <year> 1991. </year>
Reference-contexts: In our implementation, all processors send their best candidate to a master processor, which selects the best of these candidates for inclusion into the pointset. This procedure is iterated until no improving candidates can be found. The B1S algorithm parallelizes similarly. The Parallel Virtual Machine (PVM) system <ref> [1] </ref> [23] is used to control remote processors. 6 PVM is a software package that allows a heterogeneous network of parallel and serial computers to be used as a single computational resource.
Reference: [2] <author> P. Berman and V. Ramaiyer, </author> <title> Improved Approximations for the Steiner Tree Problem, </title> <booktitle> in Proc. ACM/SIAM Simposium on Discrete Algorithms, </booktitle> <address> San Francisco, CA, </address> <month> January </month> <year> 1992, </year> <pages> pp. 325-334. </pages>
Reference-contexts: The Iterated 1-Steiner method (I1S) is the first known MRST heuristic which always performs better than 3 2 times optimal [20], and for which a uniform performance ratio of 11 8 has been shown <ref> [2] </ref> using the methods of [25].
Reference: [3] <author> G. N. Fredrickson, </author> <title> Data Structures for On-Line Updating of Minimum Spanning Trees, </title> <journal> SIAM J. Comput., </journal> <volume> 14 (1985), </volume> <pages> pp. </pages> <month> 781-798. </month> <title> 10 both the naive MST implementation and our new incremental MST maintenance scheme. </title>
Reference-contexts: An example of this method is given in Figure 5, while Figure 6 describes it formally. Note 5 that dynamic MST maintenance may be achieved in sub-linear time <ref> [3] </ref>, but such methods seem impractical due to their complexity and large hidden constants. connecting the point to its closest neighbor in each octant, and deleting the longest edge on each resulting cycle (the Euclidean metric has been used for clarity in this example).
Reference: [4] <author> M. Garey and D. S. Johnson, </author> <title> The Rectilinear Steiner Problem is NP-Complete, </title> <journal> SIAM J. Applied Math., </journal> <volume> 32 (1977), </volume> <pages> pp. 826-834. </pages>
Reference-contexts: Unfortunately, a second major result established that despite this restriction on the solution space, the MRST problem remains NP-complete <ref> [4] </ref>. This has prompted a large number of heuristics for the MRST problem, as surveyed in [12]. In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal.
Reference: [5] <author> G. Georgakopoulos and C. H. Papadimitriou, </author> <title> The 1-Steiner Tree Problem, </title> <journal> J. Algorithms, </journal> <volume> 8 (1987), </volume> <pages> pp. 122-130. </pages>
Reference-contexts: 2 T with maximum M ST (P; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) Although a 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry <ref> [5] </ref> [13] [18], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement.
Reference: [6] <author> E. N. Gilbert and H. O. Pollak, </author> <title> Steiner Minimal Trees, </title> <journal> SIAM J. Applied Math., </journal> <volume> 16 (1968), </volume> <pages> pp. 1-29. </pages>
Reference-contexts: The cost of the MST over P [ S will decrease with each added point, and the construction 3 terminates when there is no x with M ST (P [ S; fxg) &gt; 0. Although a Steiner tree may contain at most n 2 Steiner points <ref> [6] </ref>, I1S may add n 1 Steiner points or more; thus we eliminate any extraneous Steiner points having degree 2 or less in the MST.
Reference: [7] <author> M. Hanan, </author> <title> On Steiner's Problem With Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 14 (1966), </volume> <pages> pp. 255-265. </pages>
Reference-contexts: Figure 1 shows an MST and an MRST for the same four-pin net. 1 Several fundamental results have guided research on the MRST problem. First, Hanan <ref> [7] </ref> has shown that there always exists an MRST with Steiner points chosen from the intersection of all the horizontal and vertical lines passing through each point in P ; indeed, this result generalizes to higher dimensions [22].
Reference: [8] <author> N. Hasan, G. Vijayan, and C. K. Wong, </author> <title> A Neighborhood Improvement Algorithm for Rectilinear Steiner Trees, </title> <booktitle> in Proc. IEEE Intl. Symp. on Circuits and Systems, </booktitle> <address> New Orleans, LA, </address> <year> 1990. </year>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods <ref> [8] </ref> [9] [11] [15] [16], all of which produce trees having average cost 7% to 9% smaller than MST cost [19] [24].
Reference: [9] <author> J.-M. Ho, G. Vijayan, and C. K. Wong, </author> <title> New Algorithms for the Rectilinear Steiner Tree Problem, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 9 (1990), </volume> <pages> pp. 185-193. </pages>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods [8] <ref> [9] </ref> [11] [15] [16], all of which produce trees having average cost 7% to 9% smaller than MST cost [19] [24].
Reference: [10] <author> F. K. Hwang, </author> <title> On Steiner Minimal Trees with Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 30 (1976), </volume> <pages> pp. </pages> <month> 104-114. </month> <title> 11 dots). The Steiner points produced by our algorithm are denoted by dark solid dots. [11] , An O(n log n) Algorithm for Rectilinear Minimal Spanning Trees, </title> <journal> J. ACM, </journal> <volume> 26 (1979), </volume> <pages> pp. 177-182. </pages>
Reference-contexts: In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal. Thus, a third important result established that the rectilinear MST is a fairly good approximation to the MRST, with a worst-case performance ratio of cost (MST) cost (MRST ) 3 2 <ref> [10] </ref>, implying that any MST-based strategy which improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 .
Reference: [12] <author> F. K. Hwang, D. S. Richards, and P. Winter, </author> <title> The Steiner Tree Problem, </title> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: Unfortunately, a second major result established that despite this restriction on the solution space, the MRST problem remains NP-complete [4]. This has prompted a large number of heuristics for the MRST problem, as surveyed in <ref> [12] </ref>. In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal. <p> The instances were generated randomly by choosing x and y coordinates from a uniform distribution in the 1000 fi 1000 grid; such instances are statistically similar to the pin locations of actual VLSI nets, and are the standard testbed for Steiner tree heuristics [13] <ref> [12] </ref>. Performance results are summarized in Tables 1 and 2 in the Appendix, and are illustrated in Figures 7 through 9. Both I1S and B1S yield Steiner trees with cost averaging about 11% smaller than the MST cost; this is within 0:5% of the average optimal Steiner tree cost [21].
Reference: [13] <author> A. B. Kahng and G. Robins, </author> <title> A New Class of Iterative Steiner Tree Heuristics With Good Performance, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. </pages> <month> 893-902. </month> <title> [14] , On Performance Bounds for a Class of Rectilinear Steiner Tree Heuristics in Arbitrary Dimension, </title> <journal> IEEE Trans. </journal> <note> on Computer-Aided Design (to appear), </note> <year> (1992). </year>
Reference-contexts: This negative result has motivated research into alternate schemes for MRST approximation, among which the one with best performance is the recently proposed Iterated 1-Steiner algorithm <ref> [13] </ref>. The Iterated 1-Steiner method (I1S) is the first known MRST heuristic which always performs better than 3 2 times optimal [20], and for which a uniform performance ratio of 11 8 has been shown [2] using the methods of [25]. <p> Section 4 discusses the parallel implementation, and Section 5 presents simulation results regarding performance, running times and parallel speedups. We conclude in Section 6 with directions for further research. 2 Overview of the Iterated 1-Steiner Approach We begin with a review of the 1-Steiner method of <ref> [13] </ref>. For two pointsets P and S we define the MST savings M ST (P; S) = cost (M ST (P )) cost (M ST (P [ S)). We use H (P) to denote the set of Hanan Steiner point candidates. <p> T with maximum M ST (P; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) Although a 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry [5] <ref> [13] </ref> [18], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. <p> The instances were generated randomly by choosing x and y coordinates from a uniform distribution in the 1000 fi 1000 grid; such instances are statistically similar to the pin locations of actual VLSI nets, and are the standard testbed for Steiner tree heuristics <ref> [13] </ref> [12]. Performance results are summarized in Tables 1 and 2 in the Appendix, and are illustrated in Figures 7 through 9. <p> We timed the execution of the serial and parallel versions of I1S and B1S, using both the naive O (r n 4 log n) implementation <ref> [13] </ref> and our new implementation which incorporates the efficient, dynamic MST maintenance as described in Section 3. The parallel implementation uses 9 SUN 4/40 (IPC) workstations, with a SUN 4/75 (Sparc2) as the master processor. <p> The speedup of course increases with the pointset cardinality. The parallel speedup we achieve also increases with the problem size, reaching about 7:2 for n = 250 on 10 processors. 6 Conclusion We have proposed an enhanced implementation of the Iterated 1-Steiner and Batched 1-Steiner heuristics of <ref> [13] </ref>, and have achieved execution speeds about 250 times faster than previous 8 implementations.
Reference: [15] <author> J. H. Lee, N. K. Bose, and F. K. Hwang, </author> <title> Use of Steiner's Problem in Sub-Optimal Routing in Rectilinear Metric, </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <volume> 23 (1976), </volume> <pages> pp. 470-476. </pages>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods [8] [9] [11] <ref> [15] </ref> [16], all of which produce trees having average cost 7% to 9% smaller than MST cost [19] [24].
Reference: [16] <author> K. W. Lee and C. Sechen, </author> <title> A New Global Router for Row-Based Layout, </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 180-183. </pages>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods [8] [9] [11] [15] <ref> [16] </ref>, all of which produce trees having average cost 7% to 9% smaller than MST cost [19] [24].
Reference: [17] <author> B. T. Preas and M. J. Lorenzetti, </author> <title> Physical Design Automation of VLSI Systems, </title> <address> Benjamin/Cummings, Menlo Park, CA, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction The minimum rectilinear Steiner tree problem is central to VLSI physical design phases such as global routing and wiring estimation, where we seek low-cost topologies to interconnect the pins of signal nets <ref> [17] </ref>: The Minimum Rectilinear Steiner Tree (MRST) problem: Given a planar set P of n points, find a set S of Steiner points such that the minimum spanning tree (MST) over P [ S has minimum cost.
Reference: [18] <author> F. P. Preparata and M. I. Shamos, </author> <title> Computational Geometry: An Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: with maximum M ST (P; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) Although a 1-Steiner point may be found in O (n 2 ) time using complicated techniques from computational geometry [5] [13] <ref> [18] </ref>, such methods suffer from large constants in their time complexities, and are notoriously difficult to implement.
Reference: [19] <author> D. Richards, </author> <title> Fast Heuristic Algorithms for Rectilinear Steiner Trees, </title> <journal> Algorithmica, </journal> <volume> 4 (1989), </volume> <pages> pp. 191-207. </pages>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods [8] [9] [11] [15] [16], all of which produce trees having average cost 7% to 9% smaller than MST cost <ref> [19] </ref> [24]. However, Kahng and Robins [14] recently characterized the limitations of MST-based MRST heuristics by giving a class of examples on which the 3 2 bound is tight, i.e. the MST can be unimprovable.
Reference: [20] <author> G. Robins, </author> <title> On Optimal Interconnections, </title> <type> Ph.D. dissertation, </type> <institution> Department of Computer Science, UCLA, </institution> <year> 1992. </year>
Reference-contexts: This negative result has motivated research into alternate schemes for MRST approximation, among which the one with best performance is the recently proposed Iterated 1-Steiner algorithm [13]. The Iterated 1-Steiner method (I1S) is the first known MRST heuristic which always performs better than 3 2 times optimal <ref> [20] </ref>, and for which a uniform performance ratio of 11 8 has been shown [2] using the methods of [25].
Reference: [21] <author> J. S. Salowe, </author> <title> On Exact Algorithms for Rectilinear Steiner Minimal Trees. </title> <type> manuscript, </type> <month> November </month> <year> 1992. </year>
Reference-contexts: I1S also performs very well in practice, achieving 11% average improvement over MST cost, which is within 0:5% of the average optimal cost <ref> [21] </ref>. 2 This performance success was achieved at the expense of a high time complexity, and although a variant of I1S can be implemented to run within time O (r n 2 log n), the computational geometric methods employed to achieve this time bound hide large constants and are difficult to <p> Performance results are summarized in Tables 1 and 2 in the Appendix, and are illustrated in Figures 7 through 9. Both I1S and B1S yield Steiner trees with cost averaging about 11% smaller than the MST cost; this is within 0:5% of the average optimal Steiner tree cost <ref> [21] </ref>. We timed the execution of the serial and parallel versions of I1S and B1S, using both the naive O (r n 4 log n) implementation [13] and our new implementation which incorporates the efficient, dynamic MST maintenance as described in Section 3.
Reference: [22] <author> T. L. Snyder, </author> <title> On the Exact Location of Steiner Points in General Dimension, </title> <journal> SIAM J. Comput., </journal> <volume> 21 (1992), </volume> <pages> pp. 163-180. </pages>
Reference-contexts: First, Hanan [7] has shown that there always exists an MRST with Steiner points chosen from the intersection of all the horizontal and vertical lines passing through each point in P ; indeed, this result generalizes to higher dimensions <ref> [22] </ref>. Unfortunately, a second major result established that despite this restriction on the solution space, the MRST problem remains NP-complete [4]. This has prompted a large number of heuristics for the MRST problem, as surveyed in [12].
Reference: [23] <author> V. S. Sunderam, </author> <title> PVM: A Framework for Parallel Distributed Computing, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 2 (1990), </volume> <pages> pp. 315-339. </pages>
Reference-contexts: In our implementation, all processors send their best candidate to a master processor, which selects the best of these candidates for inclusion into the pointset. This procedure is iterated until no improving candidates can be found. The B1S algorithm parallelizes similarly. The Parallel Virtual Machine (PVM) system [1] <ref> [23] </ref> is used to control remote processors. 6 PVM is a software package that allows a heterogeneous network of parallel and serial computers to be used as a single computational resource.
Reference: [24] <author> P. Winter, </author> <title> Steiner Problem in Networks: A Survey, Networks, </title> <booktitle> 17 (1987), </booktitle> <pages> pp. 129-167. </pages>
Reference-contexts: This encouraged the development of a number of Steiner tree heuristics which resemble classic MST construction methods [8] [9] [11] [15] [16], all of which produce trees having average cost 7% to 9% smaller than MST cost [19] <ref> [24] </ref>. However, Kahng and Robins [14] recently characterized the limitations of MST-based MRST heuristics by giving a class of examples on which the 3 2 bound is tight, i.e. the MST can be unimprovable.

References-found: 22

