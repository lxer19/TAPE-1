URL: http://www.isi.edu/netstation/ip-for-naps.ps
Refering-URL: http://www.isi.edu/div7/netstation/
Root-URL: http://www.isi.edu
Email: fhotz,rdv,finng@isi.edu  
Phone: tel +1-310-822-1511  
Title: Internet Protocols for Network-Attached Peripherals  
Author: Steve Hotz, Rodney Van Meter, and Gregory Finn 
Address: Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute University of Southern California  
Web: http://www.isi.edu/netstation/ip-for-naps.ps  
Note: Proc. Sixth NASA Goddard Conference on Mass Storage Systems and Technologies in conjunction with 15th IEEE Symposium on Mass Storage Systems March, 1998  
Abstract: This paper presents our thesis that the advantages of the internet protocol framework make it the best choice for communications protocols to, and between, network-attached peripherals (NAPs). Moreover, the IP suite is more appropriate than the specialized protocol stacks being developed for commercial NAPs. The benefits of using IP include support for heterogeneous network media, wide-area connectivity, and reduced research and development effort. We examine the issues for use of the internet protocols (TCP/UDP/IP) for NAPs, address commonly held concerns regarding its performance, and describe the Netstation project's prototype implementations of IP peripherals.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. F. Adam, H. H. Houh, M. Ismert, and D. L. </author> <title> Tennenhouse. </title> <journal> Media-intensive data communications in a desk-area network. IEEE Communications, </journal> <pages> pages 6067, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: CMU's Network Attached Secure Disk [13] does use IP for its higher level protocols which are derived from NFS, however, they provide a network object store rather than a 1 block-level NAP. The two projects most closely related to Netstation are MIT's ViewSta--tion <ref> [1] </ref> and Cambridge's Desk Area Network [14], both of which use ATM to interconnect multimedia peripherals. The main reason cited for choosing a specialized protocol rather than the media-independent TCP/IP approach is the latter's perceived lack of performance, or the expense to achieve the required performance.
Reference: [2] <author> M. L. Bailey, M. A. Pagels, and L. L. Peterson. </author> <title> The x-chip: An experiment in hardware demultiplexing. </title> <booktitle> In Proceedings of the IEEE Workshop on High Performance Communications Subsystems, </booktitle> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Providing for application-specific delivery or disposition of data is also an important area of research <ref> [9, 16, 2, 27] </ref>. 8 4 Implementation and System Issues Many of TCP/IP's known performance problems come from outdated implementations or restrictions imposed from outside. In this section, we address some of those concerns in the context of implementing TCP/IP inside a network attached peripheral.
Reference: [3] <author> R. Braden. </author> <title> Requirements for internet hosts application and support. </title> <type> Internet Draft RFC 1123, </type> <institution> USC/ISI, </institution> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: code) ICMP 90 184 ARP 570 2804 TCP 2700 12636 shared code 390 1248 user lib 630 3908 TCP/IP Total 5590 27224 Reference pts: OS Primitives 3400 7708 OS Libraries 2300 3860 Table 1: TCP/IP Code Size An actual IP host will have additional functionality, per the Host Requirements RFCs <ref> [4, 3] </ref>, however, we believe IP NAPs would have a similar, but reduced, set of requirements.
Reference: [4] <author> R. Braden. </author> <title> Requirements for internet hosts communication layers. </title> <type> Internet Draft RFC 1122, </type> <institution> USC/ISI, </institution> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: code) ICMP 90 184 ARP 570 2804 TCP 2700 12636 shared code 390 1248 user lib 630 3908 TCP/IP Total 5590 27224 Reference pts: OS Primitives 3400 7708 OS Libraries 2300 3860 Table 1: TCP/IP Code Size An actual IP host will have additional functionality, per the Host Requirements RFCs <ref> [4, 3] </ref>, however, we believe IP NAPs would have a similar, but reduced, set of requirements.
Reference: [5] <author> T. Braun, C. Diot, A. Hoglander, and V. Roca. </author> <title> An experimental user level implementation of TCP. </title> <type> Technical Report RR-2650, </type> <institution> INRIA, </institution> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: We believe these five components represent the minimal stack needed to communicate in a TCP/IP environment, and that this is a reasonable amount of functionality to include in a NAP. The IP, ARP, and ICMP protocols were implemented from scratch. Our TCP implementation is based on INRIA's user-level TCP <ref> [5] </ref>, which in turn is based on BSD TCP. Note that our TCP implementation does not run as part of the user task, rather we take advantage of the low-overhead kernel primitives and manage TCP as a separate task.
Reference: [6] <author> D. D. Clark, V. Jacobson, J. Romkey, and H. Salwen. </author> <title> An analysis of TCP processing overhead. </title> <journal> IEEE Communications, </journal> <volume> 27(6):2329, </volume> <month> June </month> <year> 1989. </year>
Reference-contexts: Further, the overhead for portions of IP not required by NAPs can be minimized by fast-path, common-case implementations. The transport (TCP) and network (IP) processing of common-case incoming packets has already been optimized to approximately 200 machine instructions. This number was observed in <ref> [6] </ref>, and is confirmed by analysis of our TCP/IP implementation for the Netstation display. This would allow a baseline 250,000 packets/sec on a relatively humble 50MIPS 5 embedded NAP processor.
Reference: [7] <author> D. Cohen. </author> <title> On holy wars and a plea for peace. </title> <booktitle> IEEE Computer, </booktitle> <month> Oct. </month> <year> 1981. </year>
Reference-contexts: Although the header checksum itself is not a prohibitive cost, data checksumming incurs considerable overhead; we address data checksumming in Section 3.2. Byte-swapping is necessary only for little-endian machines, where byte order does not match network standard byte order <ref> [7] </ref>. However, it is an operation that may affect all network communications, thus this discussion applies to transport layer processing as well. Moreover, this implies that even in a non-IP NAP, this function is required to support heterogeneous hosts.
Reference: [8] <author> P. Druschel and L. L. Peterson. Fbufs: </author> <title> A high-bandwidth cross-domain transfer facility. </title> <booktitle> In Proc. Fourteenth ACM Symposium on Operating Systems Principles. ACM, </booktitle> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: Data may be shared directly between the application (the SCSI command processor/disk drive track buffer manager, in the case of a disk drive) and the networking stack <ref> [8] </ref>. Fast demultiplexing of received data can also be used. The overhead of the checksum can be eliminated in several ways.
Reference: [9] <author> D. R. Engler and M. F. Kaashoek. DPF: </author> <title> Fast, flexible message demultiplexing using dynamic code generation. </title> <booktitle> In Proc. SIGCOMM '96, </booktitle> <volume> volume 26, </volume> <pages> pages 5359. </pages> <publisher> ACM, </publisher> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Providing for application-specific delivery or disposition of data is also an important area of research <ref> [9, 16, 2, 27] </ref>. 8 4 Implementation and System Issues Many of TCP/IP's known performance problems come from outdated implementations or restrictions imposed from outside. In this section, we address some of those concerns in the context of implementing TCP/IP inside a network attached peripheral.
Reference: [10] <author> G. Finn. </author> <title> An integration of network communication with workstation architecture. </title> <journal> ACM Computer Communication Review, </journal> <month> Oct. </month> <year> 1991. </year> <note> Available online at http://www.isi.edu/netstation/. </note>
Reference-contexts: 1 Introduction Netstation is a research system architecture based on a switched gigabit network as a system backplane <ref> [10] </ref>; all of the major subsystems are network attached peripherals (NAPs). A network-attached display has been prototyped, and a software-emulated network-attached disk has been implemented. A camera NAP is also under development, based on the same motherboard as the display. <p> The remainder of this section provides a summary of the Netstation Project, and describes our IP NAP implementations with a focus on the IP stack performance and overhead. 5.1 Netstation Overview Netstation <ref> [10, 12] </ref> is a heterogeneous distributed system composed of processor nodes and peripherals (NAPs) attached to a high-speed LAN which provides high aggregate bandwidth; currently we use both a 640 Mbps Myrinet network and a 100 Mbps ethernet.
Reference: [11] <author> G. Finn, S. Hotz, and R. Van Meter. </author> <title> The impact of a zero-scan internet checksumming mechanism. </title> <journal> ACM Computer Communication Review, </journal> <volume> 26(5):2739, </volume> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: The checksum can also be calculated on any data movement, such as the reception from the network or from the disk platter into buffer memory, with simple hardware modifications <ref> [11, 23] </ref>. It is possible to store the TCP checksum on disk with the data by reformatting the disk with a larger sector size. Because the checksum is additive, storing it with each sector allows quick calculation regardless of the packet boundaries used for transmission.
Reference: [12] <author> G. G. Finn and P. Mockapetris. </author> <title> Netstation architecture: Multi-gigabit workstation network fabric. </title> <booktitle> In Proc. NetWorld+InterOp Engineer Conference, </booktitle> <year> 1994. </year> <month> 14 </month>
Reference-contexts: The remainder of this section provides a summary of the Netstation Project, and describes our IP NAP implementations with a focus on the IP stack performance and overhead. 5.1 Netstation Overview Netstation <ref> [10, 12] </ref> is a heterogeneous distributed system composed of processor nodes and peripherals (NAPs) attached to a high-speed LAN which provides high aggregate bandwidth; currently we use both a 640 Mbps Myrinet network and a 100 Mbps ethernet.
Reference: [13] <author> G. Gibson et al. </author> <title> A case for network-attached secure disks. </title> <type> Technical Report CMU--CS-96-142, CMU, </type> <month> June </month> <year> 1996. </year>
Reference-contexts: Among research systems, the most similar effort is the High Performance Storage System NAP at Lawrence Livermore [26]. Digital's Petal [18] uses UDP/IP over ATM as part of a large distributed virtual disk system implemented in general-purpose hosts. CMU's Network Attached Secure Disk <ref> [13] </ref> does use IP for its higher level protocols which are derived from NFS, however, they provide a network object store rather than a 1 block-level NAP.
Reference: [14] <author> M. Hayter and D. McAuley. </author> <title> The desk area network. </title> <journal> ACM Operating Systems Review, </journal> <volume> 25(4):1421, </volume> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: CMU's Network Attached Secure Disk [13] does use IP for its higher level protocols which are derived from NFS, however, they provide a network object store rather than a 1 block-level NAP. The two projects most closely related to Netstation are MIT's ViewSta--tion [1] and Cambridge's Desk Area Network <ref> [14] </ref>, both of which use ATM to interconnect multimedia peripherals. The main reason cited for choosing a specialized protocol rather than the media-independent TCP/IP approach is the latter's perceived lack of performance, or the expense to achieve the required performance.
Reference: [15] <author> R. W. Horst and D. Garcia. </author> <title> ServerNet SAN I/O architecture. </title> <editor> In R. Rettberg and W. Dally, editors, </editor> <booktitle> Hot Interconnects Symposium V. IEEE Computer Society, </booktitle> <year> 1997. </year>
Reference-contexts: To provide maximal ubiquity and independence from specific media technologies, Netstation component communication is based on the TCP/IP protocol suite. This design choice is controversial, in that most commercial NAP efforts (e.g., Tandem's ServerNet <ref> [15] </ref>, Fibre Channel and HiPPI disks and disk arrays) and some research projects (e.g., Minnesota's GFS [21]) use special purpose protocol stacks optimized for performance on specific media. Among research systems, the most similar effort is the High Performance Storage System NAP at Lawrence Livermore [26].
Reference: [16] <author> J. S. Kay. </author> <title> Path IDs: A Mechanism for Reducing Network Software Latency. </title> <type> PhD thesis, UCSD, </type> <year> 1995. </year>
Reference-contexts: Providing for application-specific delivery or disposition of data is also an important area of research <ref> [9, 16, 2, 27] </ref>. 8 4 Implementation and System Issues Many of TCP/IP's known performance problems come from outdated implementations or restrictions imposed from outside. In this section, we address some of those concerns in the context of implementing TCP/IP inside a network attached peripheral.
Reference: [17] <editor> B. Kobler, editor. </editor> <booktitle> Fifth NASA Goddard Conference on Mass Storage Systems and Technologies, </booktitle> <month> Sept. </month> <year> 1996. </year>
Reference: [18] <author> E. K. Lee and C. A. Thekkath. </author> <title> Petal: Distributed virtual disks. </title> <booktitle> In Proc. ACM Seventh International Conference on Architectural Support for Programming Languages and Operating Systems. ACM, </booktitle> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Among research systems, the most similar effort is the High Performance Storage System NAP at Lawrence Livermore [26]. Digital's Petal <ref> [18] </ref> uses UDP/IP over ATM as part of a large distributed virtual disk system implemented in general-purpose hosts. CMU's Network Attached Secure Disk [13] does use IP for its higher level protocols which are derived from NFS, however, they provide a network object store rather than a 1 block-level NAP.
Reference: [19] <author> J. Mogul and S. Deering. </author> <title> Path MTU discovery. RFC 1191, Internet Request For Comments, </title> <year> 1990. </year>
Reference-contexts: Fortunately, we can virtually eliminate this processing by sending appropriately sized transport layer segments. Sending such segments should be straightforward for common-case NAP applications on a single local area network (LAN) where the maximum frame size is known. Mechanisms such as MTU discovery <ref> [19] </ref> can provide the analogous information across a WAN. For both cases, higher layer communication protocols can avoid packet fragmentation by negotiating the segment size; this is specifically supported by TCP's Maximum Segment Size option. 3.2 Transport Layer Transport layer functionality is more complex than that of the network layer.
Reference: [20] <author> C. Partridge and S. Pink. </author> <title> A faster UDP. </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> 1(4):429 440, </volume> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: The simplest but least desirable option is to eliminate it and depend on the LAN checksum to protect the data; this is common today for UDP, but does not protect data end-to-end or across network boundaries. Alternatively, the CPU can calculate the checksum in conjunction with a data copy <ref> [20] </ref>. This can generally be done for zero cost on RISC processors by putting the adds in the delay slots of loads and stores.
Reference: [21] <author> S. R. Soltis, T. M. Ruwart, and M. T. O'Keefe. </author> <title> The global file system. </title> <booktitle> In Kobler [17], </booktitle> <pages> pages 319342. </pages>
Reference-contexts: This design choice is controversial, in that most commercial NAP efforts (e.g., Tandem's ServerNet [15], Fibre Channel and HiPPI disks and disk arrays) and some research projects (e.g., Minnesota's GFS <ref> [21] </ref>) use special purpose protocol stacks optimized for performance on specific media. Among research systems, the most similar effort is the High Performance Storage System NAP at Lawrence Livermore [26]. Digital's Petal [18] uses UDP/IP over ATM as part of a large distributed virtual disk system implemented in general-purpose hosts.
Reference: [22] <author> Sun Microsystems Inc. NFS: </author> <title> Network file system protocol specification. </title> <type> Technical Report RFC 1094, </type> <institution> Internet Request For Comments, </institution> <year> 1989. </year>
Reference-contexts: Assuming that NAPs will be commonly accessed within a local environment, the general-purpose functionality provided by TCP may not be needed. UDP provides a very simple protocol that provides for connection demultiplexing and checksumming. Both our Netstation VISA protocol (Section 5.2) and the common NFS protocol <ref> [22] </ref> implement their own simple reliability for LAN communications on top of UDP. * Fast-path TCP is already reasonably efficient.
Reference: [23] <author> J. Touch and B. Parham. </author> <title> Implementing the internet checksum in hardware. </title> <type> Technical Report Internet RFC 1936, ISI, </type> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: The checksum can also be calculated on any data movement, such as the reception from the network or from the disk platter into buffer memory, with simple hardware modifications <ref> [11, 23] </ref>. It is possible to store the TCP checksum on disk with the data by reformatting the disk with a larger sector size. Because the checksum is additive, storing it with each sector allows quick calculation regardless of the packet boundaries used for transmission.
Reference: [24] <author> R. Van Meter, G. Finn, and S. Hotz. VISA: </author> <title> Netstation's virtual internet SCSI adapter. </title> <note> in preparation. </note>
Reference-contexts: We feel this performance is acceptable, and that this supports our premise that the advantages of IP outweigh the performance concerns. A more detailed description of VISA and its performance can be found in <ref> [24] </ref>. 5.3 Netstation Display The Netstation display hardware is a custom motherboard centered around TI's 40MHz TMS-320c80 MVP chip, selected primarily for its high performance video and data transfer controllers.
Reference: [25] <author> R. Van Meter, S. Hotz, and G. Finn. </author> <title> Derived virtual devices: A secure distributed file system mechanism. </title> <note> In Kobler [17]. </note>
Reference-contexts: Because the devices are attached to an open network with both trusted and untrusted nodes on the net, safe shared access and security at the NAPs are critical. Netstation has developed an abstraction we refer to as the derived virtual device, or DVD <ref> [25] </ref>, that provides the mechanisms for safe shared device access. DVDs provide a protected execution context at the device, allowing direct use of the devices by untrusted clients, such as user applications.
Reference: [26] <author> D. Wiltzius and K. Minuzzo. </author> <note> Network-attached peripherals (NAP) for HPSS/SIOF. web page, </note> <month> Oct. </month> <year> 1995. </year> <note> http://www.llnl.gov/liv comp/siof/siof nap.html. </note>
Reference-contexts: Among research systems, the most similar effort is the High Performance Storage System NAP at Lawrence Livermore <ref> [26] </ref>. Digital's Petal [18] uses UDP/IP over ATM as part of a large distributed virtual disk system implemented in general-purpose hosts.
Reference: [27] <author> M. Yuhara, B. N. Bershad, C. Maeda, and J. E. B. Moss. </author> <title> Efficient packet demulti-plexing for multiple endpoints and large messages. </title> <booktitle> In Proc. USENIX Winter 1994 Technical Conference, </booktitle> <month> Jan. </month> <year> 1994. </year> <month> 15 </month>
Reference-contexts: Providing for application-specific delivery or disposition of data is also an important area of research <ref> [9, 16, 2, 27] </ref>. 8 4 Implementation and System Issues Many of TCP/IP's known performance problems come from outdated implementations or restrictions imposed from outside. In this section, we address some of those concerns in the context of implementing TCP/IP inside a network attached peripheral.
References-found: 27

