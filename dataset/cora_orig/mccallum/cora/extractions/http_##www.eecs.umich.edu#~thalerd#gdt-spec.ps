URL: http://www.eecs.umich.edu/~thalerd/gdt-spec.ps
Refering-URL: http://www.eecs.umich.edu/~thalerd/gdt.html
Root-URL: http://www.cs.umich.edu
Title: Internet Engineering Task Force Globally-Distributed Troubleshooting (GDT): Protocol Specification Status of Internet-Drafts. Internet-Drafts are draft
Author: D. Thaler 
Web: ftp.is.co.za (Africa), nic.nordu.net (Europe), munnari.oz.au  
Note: this Memo This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as  and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress." To learn the current status of any Internet-Draft, please check the "1id-abstracts.txt" listing contained in the Internet-Drafts Shadow Directories on  (Pacific Rim), ds.internic.net (US East Coast), or ftp.isi.edu (US West Coast).  
Date: draft-thaler-gdt-spec-00.ps September 22, 1997 Expires: September, 1997  
Affiliation: INTERNET-DRAFT U. Michigan  
Abstract: This document describes a protocol for "globally-distributed troubleshooting" (GDT). GDT automates, where possible, the process of problem reporting and referral between customers and Internet Service Providers (ISPs), as well as between ISPs. GDT also provides an automatic mechanism for periodic status reports, and allows an ISP to make information (such as expected time to repair) on a current problem readily accessible to those directly affected by it, without requiring human intervention. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David Thaler and Chinya V. Ravishankar. </author> <title> Distributed top-down hierarchy construction, </title> <year> 1997. </year>
Reference-contexts: An analysis of this scheme can be found in <ref> [1] </ref>. To locate an initial server, an agent SHOULD first attempt to locate a nearby server using an expanding-ring multicast search over a well-known group address to which all experts listen.
Reference: [2] <author> David Thaler. </author> <title> GDT element naming, </title> <month> October </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: When a problem is observed, the agent identifies the network element experiencing a problem (element naming is discussed in a separate document <ref> [2] </ref>), and checks its hypothesis table for an existing hypothesis entry. If an existing entry is found: 1. <p> To choose among multiple equivalent experts, the following algorithm is employed (an analysis of which can be found in [3]): (a) Compute the CRC-32 checksum (X) of the network element identifier (as discussed in <ref> [2] </ref>). (b) For each possible expert address E i , compute a value: V alue (X; E i ) = (1103515245 ((1103515245 E i + 12345) XOR X) + 12345) mod 2 31 (c) The expert with the highest resulting value is then chosen as the destination expert.
Reference: [3] <author> David Thaler and Chinya V. Ravishankar. </author> <title> A name-based mapping scheme for rendezvous. </title> <type> Technical Report CSE-TR-316-96, </type> <institution> University of Michigan, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: If all experts found had diagnosis-only capability, a Hypothesis message is reliably sent to one of them. To choose among multiple equivalent experts, the following algorithm is employed (an analysis of which can be found in <ref> [3] </ref>): (a) Compute the CRC-32 checksum (X) of the network element identifier (as discussed in [2]). (b) For each possible expert address E i , compute a value: V alue (X; E i ) = (1103515245 ((1103515245 E i + 12345) XOR X) + 12345) mod 2 31 (c) The expert

References-found: 3

