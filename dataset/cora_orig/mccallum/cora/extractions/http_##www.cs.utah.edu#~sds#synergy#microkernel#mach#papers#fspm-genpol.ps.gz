URL: http://www.cs.utah.edu/~sds/synergy/microkernel/mach/papers/fspm-genpol.ps.gz
Refering-URL: http://www.cs.utah.edu/~sds/synergy/microkernel/mach/papers.html
Root-URL: 
Email: Email: fine@sctc.com, olawsky@sctc.com, schneidr@sctc.com, spencer@sctc.com  
Title: Developing and Using a Policy Neutral Access Control Policy  
Author: Todd Fine, Duane Olawsky, Edward A. Schneider and Ray Spencer 
Date: 13 March 1996  
Address: 2675 Long Lake Road, Roseville, Minnesota 55113-2536  
Affiliation: Secure Computing Corporation  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Mart n Abadi and Leslie Lamport. </author> <title> Composing Specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 15(1) </volume> <pages> 73-132, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Section 4 presents two examples of the use of the architecture to implement a high-level policy (MLS and Clark-Wilson), and Section 5 discusses the range of policy flexibility supported by DTOS. Section 6 describes the use of composability analysis <ref> [1] </ref> to deduce properties of the system. Finally, Section 7 summarizes results and open issues. 2 An Architecture for Policy Flexibility The DTOS security architecture [8], depicted in Figure 1, supports policy flexibility by separating the making of policy decisions from the enforcement of those decisions. <p> We are using composability theory <ref> [1, 11] </ref> to 15 The problem is that Mach caches protections in the page table, and removing permissions from the access vector cache has no effect on the page table.
Reference: [2] <author> W. E. Boebert and R. Y. Kain. </author> <title> A practical alternative to hierarchical integrity policies. </title> <booktitle> In Proceedings 8th National Computer Security Conference, </booktitle> <pages> pages 18-27, </pages> <address> Gaithersburg, MD, </address> <month> October </month> <year> 1985. </year>
Reference-contexts: A site managing medical records needs to protect the records both from unauthorized disclosure and inappropriate modification. While access control policies are appropriate for each of these examples, a different type of access control policy might be desired for each. Policies such as Type Enforcement <ref> [2] </ref> and Clark-Wilson [4] can be used to address integrity concerns. Other policies such as MLS, Chinese-Wall [3], and ORCON [6] can be used to address confidentiality concerns. However, no single policy is appropriate for all cases. <p> The Security Server defines a one-to-one mapping between SIDs and security contexts. This mapping defines the meaning of each SID. In the case of an MLS policy, a security context might consist of simply a security level. In the case of a Type Enforcement <ref> [2] </ref> policy, the security context associated with a subject SID might contain only a domain while the security context associated with an object SID might contain only a type. 6 The level of indirection provided by SIDs allows the same manager to be used regardless of how the Security Server interprets
Reference: [3] <author> David F. C. Brewer and Michael J. Nash. </author> <title> The Chinese wall security policy. </title> <booktitle> In IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 206-214, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: While access control policies are appropriate for each of these examples, a different type of access control policy might be desired for each. Policies such as Type Enforcement [2] and Clark-Wilson [4] can be used to address integrity concerns. Other policies such as MLS, Chinese-Wall <ref> [3] </ref>, and ORCON [6] can be used to address confidentiality concerns. However, no single policy is appropriate for all cases. A second reason for supporting a wide range of policies is that the set of threats against which each site must protect is constantly evolving.
Reference: [4] <author> David D. Clark and David R. Wilson. </author> <title> A comparison of commercial and military computer security policies. </title> <booktitle> In IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 184-194, </pages> <address> Oakland, CA, </address> <month> April </month> <year> 1987. </year>
Reference-contexts: A site managing medical records needs to protect the records both from unauthorized disclosure and inappropriate modification. While access control policies are appropriate for each of these examples, a different type of access control policy might be desired for each. Policies such as Type Enforcement [2] and Clark-Wilson <ref> [4] </ref> can be used to address integrity concerns. Other policies such as MLS, Chinese-Wall [3], and ORCON [6] can be used to address confidentiality concerns. However, no single policy is appropriate for all cases. <p> In this section we give a brief sketch of two decision policies for DTOS. When combined with the DTOS kernel, the first example implements a high-level policy consisting of MLS with Type Enforcement, and the second implements the Clark-Wilson integrity policy <ref> [4] </ref>. We have also investigated the ORCON policy [6]. 4.1 MLS with Type Enforcement The only security server currently being used with the DTOS prototype is one that performs level-based and type enforcement security checks [5]. <p> DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 Policy Neutral Access Control 11 4.2 Clark-Wilson The Clark-Wilson integrity policy <ref> [4] </ref> is concerned with the correctness of data and the prevention of fraud rather than the prevention of disclosure. The data items that are to be protected are called constrained data items (CDIs).
Reference: [5] <author> Todd Fine and Spencer E. Minear. </author> <title> Assuring Distributed Trusted Mach. </title> <booktitle> In Proceedings IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 206-218, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: We have also investigated the ORCON policy [6]. 4.1 MLS with Type Enforcement The only security server currently being used with the DTOS prototype is one that performs level-based and type enforcement security checks <ref> [5] </ref>. This security server maps each subject SID to a level-domain pair, maps each object SID to a level-type pair, and makes security decisions based on the levels, domains, and types associated with the SIDs provided by the kernel according to the usual dominance and type enforcement conventions.
Reference: [6] <author> Catherine Jensen McCollum, Judith R. Messing, and LouAnna Notargiacomo. </author> <title> Beyond the pale of MAC and DAC defining new forms of access control. </title> <booktitle> In IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 190-200, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: While access control policies are appropriate for each of these examples, a different type of access control policy might be desired for each. Policies such as Type Enforcement [2] and Clark-Wilson [4] can be used to address integrity concerns. Other policies such as MLS, Chinese-Wall [3], and ORCON <ref> [6] </ref> can be used to address confidentiality concerns. However, no single policy is appropriate for all cases. A second reason for supporting a wide range of policies is that the set of threats against which each site must protect is constantly evolving. <p> In this section we give a brief sketch of two decision policies for DTOS. When combined with the DTOS kernel, the first example implements a high-level policy consisting of MLS with Type Enforcement, and the second implements the Clark-Wilson integrity policy [4]. We have also investigated the ORCON policy <ref> [6] </ref>. 4.1 MLS with Type Enforcement The only security server currently being used with the DTOS prototype is one that performs level-based and type enforcement security checks [5].
Reference: [7] <author> John McLean. </author> <title> A general theory of composition for trace sets closed under selective interleaving functions. </title> <booktitle> In Proceedings IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In assuring this new system policy we do not need to redo analysis that has already been performed upon the manager for the assurance of other policies. 16 It has been suggested that composability theory cannot be used to show non-interference <ref> [7] </ref>. We are currently examining whether this is correct and, if so, how non-interference analysis can be performed on a system with this architecture. DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 14 Conclusions
Reference: [8] <author> Spencer E. Minear. </author> <title> Providing Policy Control Over Object Operations in a Mach Based System. </title> <booktitle> In Proceedings of the Fifth USENIX UNIX Security Symposium, </booktitle> <pages> pages 141-156, </pages> <address> Salt Lake City, Utah, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Section 6 describes the use of composability analysis [1] to deduce properties of the system. Finally, Section 7 summarizes results and open issues. 2 An Architecture for Policy Flexibility The DTOS security architecture <ref> [8] </ref>, depicted in Figure 1, supports policy flexibility by separating the making of policy decisions from the enforcement of those decisions. The policy decisions are made by security servers. <p> The security-enhanced microkernel and the prototype Security Server have been released to a number of sites for use in research on secure systems. Additional information on the implementation of both the kernel and the Security Server can be found in <ref> [8] </ref>. Although the work described here deals with enhancing Mach to function as a policy-neutral object manager, this is merely an example. <p> Further testing using more operational scenarios is required before firm conclusions can be made. At this early stage, the performance test results are encouraging and confirm our opinion that very fine grained security control can be done, in many application areas, with a minimum performance impact. See <ref> [8] </ref> for more information on the implementation and the performance tests. 4 Example Security Servers A security server has complete freedom to make each security decision in whatever manner it wants.
Reference: [9] <author> NCSC. </author> <title> Trusted Computer Systems Evaluation Criteria. Standard, </title> <institution> DOD 5200.28-STD, US National Computer Security Center, Fort George G. Meade, Maryland 20755-6000, </institution> <month> December </month> <year> 1985. </year>
Reference-contexts: 1 Introduction One of the goals of the Distributed Trusted Operating System (DTOS) program is to investigate an approach for developing an operating system microkernel that supports a wide range of security policies. Rather than simply following the guidelines in the Trusted Computer Security Evaluation Criteria (TCSEC) <ref> [9] </ref> and implementing Discretionary Access Control (DAC) and Multilevel Security (MLS), the DTOS microkernel must provide a framework that encompasses these policies as well as others. The DTOS program is exploring this framework through prototyping and study efforts. <p> The first approach, the threat-based approach is to identify the system threats that are of concern and develop requirements that address the threats. The second approach, the criteria-based approach is to interpret a set of requirements specified by an evaluation criteria document (such as <ref> [9] </ref>) for the target system. The relation between the two approaches is that in the second approach it is assumed that the developers of the evaluation criteria have already identified all of the relevant threats. <p> Thus, the DTOS policy development is threat-based. However, the threats identified are of a different nature than those traditionally identified. When developing the policy for a system that is intended to enforce a single policy, the identified threats typically are specific to that policy. For example, while covert channels <ref> [9] </ref> are a threat with respect to MLS policies, they are typically not a threat with respect to integrity policies. Since the DTOS policy is intended to provide a framework that supports a wide variety of policies, the threats identified for DTOS must be policy independent.
Reference: [10] <author> Secure Computing Corporation. </author> <title> DTOS Generalized Security Policy Specification. </title> <type> Technical report, </type> <institution> Secure Computing Corporation, </institution> <address> 2675 Long Lake Road, Roseville, Minnesota 55113-2536, </address> <month> January </month> <year> 1995. </year> <note> DTOS CDRL A019. </note>
Reference-contexts: Relate each kernel service to one or more access decisions that must be obtained for the service to be performed. 3.2.1 Identifying Services To perform the first step we determine the following information about the system: 8 See the DTOS Generalized Security Policy Specification <ref> [10] </ref> for more on supporting multiple policies. DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 6 Developing the DTOS Kernel Enforcement Policy the kernel data structures, and the requests that clients may make to access those structures. <p> This can be achieved by writing a security server that monitors the system clock and alters 13 For brevity, we have omitted some of the requirements of Clark-Wilson. These requirements are considered in <ref> [10] </ref>. 14 The current version of DTOS does not adequately support this one-to-one relationship between subjects and SIDs. An enhancement to provide better support for this is being considered. DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 12 Composability its method of making decisions at the appropriate times.
Reference: [11] <author> N. Shankar. </author> <title> A lazy approach to compositional verification. </title> <type> Technical Report TSL-93-08, </type> <institution> SRI International, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: We are using composability theory <ref> [1, 11] </ref> to 15 The problem is that Mach caches protections in the page table, and removing permissions from the access vector cache has no effect on the page table.
Reference: [12] <author> J.M. Spivey. </author> <title> The Z Notation: A Reference Manual. </title> <publisher> Prentice Hall International, </publisher> <year> 1992. </year>
Reference-contexts: The DTOS enforcement policy is stated in two different forms. To provide a clear, precise statement, the policy is formalized in the Z specification language <ref> [12] </ref>. This requires formalizing the system state and the transformation services. Then the enforcement policy can be formalized as a relation between the services, the permissions and the SIDs.
Reference: [13] <author> Bruce J. Walker, Richard A. Kemmerer, and Gerald J. Popek. </author> <title> Specification and Verification of the UCLA Unix Security Kernel. </title> <journal> Communications of the ACM, </journal> <volume> 23(2) </volume> <pages> 118-131, </pages> <month> February </month> <year> 1980. </year> <note> DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 </note>
Reference-contexts: to enforce a single security policy will 1 This work was supported in part by the Maryland Procurement Office, contract MDA904-93-C-4209 and was performed in cooperation with researchers at the Information Security Computer Science Research Division of the Department of Defense. 2 The Data Secure Unix system described in reference <ref> [13] </ref> is an exception. DTOS-FSPM-GSPS-Paper:1.2 (Draft) 13 March 1996 2 An Architecture for Policy Flexibility have much more trouble adapting to the evolving set of threats than a system supporting a flexible security architecture. This is especially true when high assurance is a goal.
References-found: 13

