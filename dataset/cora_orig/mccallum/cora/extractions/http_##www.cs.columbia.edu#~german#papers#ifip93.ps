URL: http://www.cs.columbia.edu/~german/papers/ifip93.ps
Refering-URL: http://www.cs.columbia.edu/~german/mbd.html
Root-URL: http://www.cs.columbia.edu
Title: Evaluating Management Decisions via Delegation  
Author: German Goldszmidt and Yechiam Yemini 
Date: April 1993)  
Note: (Published on Proceedings of IFIP International Symposium on Network Management,  
Address: New York, NY 10027, USA  
Affiliation: Distributed Computing and Communications Lab., Computer Science Department, Columbia University,  
Abstract: A central problem of network management is compressing vast amounts of real-time operational data to accomplish management decisions. A health function provides such efficient compression by combining managed data linearly into a single index of network state. This paper describes a computational theory of network behaviors, their observations, and threshold-decisions via health functions. The model is used to examine feasibility of various methods for computing health functions. Health functions cannot be included as part of a static MIB design, as they may vary from site to site and over time. Nor can they be usefully computed at centralized management platforms, since this can result in excessive polling rates, lead to errors due to perturbation introduced by polling, and miss the very goal of compressing data maximally at its source. Instead, we propose the use of the management by delegation paradigm to support flexible and effective evaluation of health functions and linear threshold decisions at devices. fl Research supported by NSF contract # NCR-91-06127.
Abstract-found: 1
Intro-found: 1
Reference: [AG92] <author> Cristina Aurrecoechea and German Goldszmidt. </author> <title> Evaluating the Health of a Distributed Environment. </title> <type> Unpublished Report, </type> <institution> Columbia University, </institution> <year> 1992. </year>
Reference-contexts: By maintaining health indicators locally, vast amounts of real-time data can be significantly compressed. To study the application of management by delegation to evaluate management decisions, a simple health application for an Ethernet has been pro-totyped <ref> [AG92] </ref>. Figure 2 depicts the relationships between the components of the application. It consists of manager processes, a health process, and a collection of observers. Manager processes can dynamically reconfigure the distributed application. They receive evaluation reports and present them on a graphical user interface to the operator.
Reference: [CFSD90] <author> Jeffrey D. Case, Mark S. Fedor, Martin L. Schoffstall, and James R. Davin. </author> <title> A Simple Network Management Protocol (SNMP). </title> <type> RFC 1157, </type> <month> May </month> <year> 1990. </year> <institution> DDN Network Information Center, SRI International. </institution>
Reference-contexts: Such indexing typically utilizes linear aggregation of a large number of variables, each providing a different microscopic measure of state. We call such a linear weighted function of managed variables a health function. In the context of SNMP <ref> [CFSD90] </ref>, observations of operational variables are typically accomplished via counters and gauges. A counter represents a cumulative (integral) of an operational variable. Typically, however, only the change in the counter versus its value provides useful indication of the network state. <p> For example, when a MIB is implemented by a proxy agent which must poll remote devices to observe managed entities. Also, if T is applied too infrequently, some of the changes in the sample behavior X may be lost. Management protocols (e.g. SNMP <ref> [CFSD90] </ref>) support a polling operator P to bring observed data from the MIB to management applications at remote platforms. Therefore, MIB data access by management applications can be described as the composition of the respective operators, fPT ff X ff g.
Reference: [DAR88] <author> DARPA. </author> <title> Neural Network Study. </title> <publisher> AFCEA International Press, </publisher> <address> Fairfax, Virginia, </address> <month> November </month> <year> 1988. </year>
Reference-contexts: The single layer perceptron model is appropriate when computing linearly separable regions. However, a more complex structure is required when decision regions can not be separated by a hyperplane <ref> [DAR88] </ref>. In a more general scenario, multiple health functions may be simultaneously employed, each providing indications of different possible problems. Threshold decisions for these functions can be combined using multi-layer perceptrons.
Reference: [DH73] <author> R. O. Duda and P.E. Hart. </author> <title> Pattern Classification And Scene Analysis. </title> <publisher> John-Wiley & Sons, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: Health functions need, therefore, to be properly established to reflect these differences. To define a health function requires computing the linear weights ~w used in threshold decisions. This is essentially the problem of perceptron training <ref> [DH73] </ref>. A number of algorithms may be used to train such a linear health function. The Least Mean Square (LMS) algorithm, for example, adapts the weights after every trial based on the difference between the actual and desired output.
Reference: [GY91] <author> German Goldszmidt and Yechiam Yemini. </author> <title> The Design of a Management Delegation Engine. </title> <booktitle> In Proceedings of the IFIP/IEEE 14 International Workshop on Distributed Systems: Operations and Management, </booktitle> <address> Santa Barbara, CA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: It permits local evaluation of health functions and decisions by device agents, when management platforms have difficulties in accessing devices (during critical stress times). A prototype implementation of a health function application over a delegation platform, MAD <ref> [GY91] </ref>, is described. The rest of this paper is organized as follows. In Section 2 we introduce a notation to describe the behavior of managed objects, their observations by manager applications, and management decisions. <p> The generic health object performs a scalar product using a vector of weights ~w and a vector of observation functions f i (~x). Fine tuning ~w and the f i is an interactive process that takes advantage of the dynamic reconfiguration capability of MAD <ref> [GY91] </ref>. Health may report its evaluated index to managers, by answering an explicit request, via setting a private MIB variable, or as event reports. Delegation enables managers to replace the code of any object, to instantiate and kill processes instances, and to configure their communication.
Reference: [ISO91] <author> International Standards Organization - ISO. </author> <title> Information Processing Open System Interconnection Systems Management Part 11: Workload Monitoring Function. </title> <address> Sydney, Australia, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: Intermittent health problems may similarly be detected. 11 Standard network management approaches require a priori knowledge of what algorithms are mapped into statically defined objects. For example, the OSI Workload Monitoring Function <ref> [ISO91] </ref> specifies metric objects for determining resource performance and utilization. The parameters that define what constitutes a healthy network depend on the particular installation configuration, usage, and administrative policies. These parameters vary among different networks, and during different times within the same network.
Reference: [LF93] <author> Allan Leinwand and Karen Fang. </author> <title> Network Management A Practical Perspective. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: For example, security management applications use MIB variables to monitor and report to which foreign systems a device has allowed connections. To track which remote systems access resources via TCP, for instance, tcpConnTable can be used <ref> [LF93] </ref>. An intruder, however, may need only a brief connection to gather information. If polling does not occur within this period, the record of the intrusion may be lost, and management actions will not be taken.
Reference: [MKB91] <editor> B.N. Meandzija, K.W. Kappel, and P.J. Brusil. </editor> <booktitle> Integrated Network Management and The International Symposia. In The Second International Symposium on Integrated Network Management, </booktitle> <address> Washington, DC, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: Often, much of the compression needed to evaluate management decision is accomplished through manual processes. Most network management systems are passive and offer little more than interfaces to raw or partly aggregated and/or correlated data in MIBs <ref> [MKB91] </ref>. Developing effective technologies to support compression of management information is a central problem of network management. Given the increasing plethora of manageable resources, the explosion of standard and vendor-specific private MIBs and managed information, and the increasing scale of networks, this task is extremely difficult.
Reference: [MR91] <author> K. McCloghrie and M. Rose. </author> <title> Management Information Base for Network Management of TCP/IP-based internets: </title> <journal> MIB-II. </journal> <volume> RFC 1213, </volume> <month> March </month> <year> 1991. </year>
Reference-contexts: In the context of SNMP [CFSD90], observations of operational variables are typically accomplished via counters and gauges. A counter represents a cumulative (integral) of an operational variable. Typically, however, only the change in the counter versus its value provides useful indication of the network state. For example, the MIB-II <ref> [MR91] </ref> counter representing ifInOctets accounts for the total number of bytes received by an interface since device initialization. Only the rate at which this counter changes contributes an indication of the network state. Health functions will, typically, utilize a linear combination of such rates at which status indicators vary. <p> A counter of X may be defined as C [X t ; t] = P jn x (t) x (j). The MIB-II variable ipInUnknown Protos, for instance, counts (modulo 2 32 ) "the number of locally-addressed datagrams received successfully but discarded because of an unknown or unsupported protocol" <ref> [MR91] </ref>.
Reference: [Ros91] <author> Marshall T. Rose. </author> <title> The Simple Book, An introduction to Management of TCP/IP-based Internets. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: For example, R (IfInErrors) measures the input error rate. The last two observations are not managed objects computed in MIB-II, since they are derivable from other MIB objects by arithmetic means <ref> [Ros91] </ref>. In general, SNMP MIBs do not include such temporal observations. Only by polling the managed object sysUptime 0 a manager can obtain an approximate clue on event arrival times. Thus, temporal observations may only be approximated.
Reference: [Wal91] <author> S. Waldbusser. </author> <title> Remote Network Monitoring Management Information Base. </title> <type> RFC 1271, </type> <month> November </month> <year> 1991. </year>
Reference-contexts: If polling does not occur within this period, the record of the intrusion may be lost, and management actions will not be taken. The limitations of static observations were partially addressed by dynamic control of observations in the design of RMON <ref> [Wal91] </ref>. Observations may be invoked and terminated, in RMON, through side-effects of setting 8 appropriate MIB entries. This enables applications to control the allocation of probe resources to observation tasks. However, the observation operators are statically defined. An application cannot compose observation operators and establish new observations. <p> For example, when operational mechanisms provide temporary relief from sustained problems, intermittent problem indications may arise. To avoid spurious alerts, threshold excess must be sustained over a sufficiently long time window. For example, a hysteresis mechanism should be implemented to limit the generation of alarms <ref> [Wal91] </ref>. If the observed behavior fluctuates, an alert should not be generated. These problem indicators may be captured by appropriate observation operators applied to the output of the H observation.
Reference: [YGY91] <author> Yechiam Yemini, German Goldszmidt, and Shaula Yemini. </author> <title> Network Management by Delegation. </title> <booktitle> In The Second International Symposium on Integrated Network Management, </booktitle> <address> Washington, DC, </address> <month> April </month> <year> 1991. </year> <month> 15 </month>
Reference-contexts: Third, polling through the network introduces random perturbations in approximating temporal derivatives of managed variables, leading to errors and potential hazards in decisions. To resolve the difficulty, this paper proposes the use of the management by delegation paradigm <ref> [YGY91] </ref> to compute health functions. Delegating health functions to distributed agents enables compression of data at the source. It permits flexible changes in health functions to reflect specific network behaviors at different sites and times. <p> Centralized, platform-based management, is unsuitable to compute health functions due to its performance limitations and the inaccuracies introduced by polling. Thus, the evaluation of health functions must be distributed. Consequently, we propose the use of the management by delegation paradigm <ref> [YGY91] </ref> to compute health functions. The application of this paradigm for the definition and evaluation of health functions is described in the following section. 5 Health of a network Delegating health functions to distributed agents enables direct observation of network behaviors at sufficient precision.
References-found: 12

