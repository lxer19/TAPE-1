URL: http://hal.cs.vt.edu/~jpv/epcyc.ps
Refering-URL: http://hal.cs.vt.edu/~jpv/papers.html
Root-URL: http://www.cs.vt.edu
Title: EDGE-PACKING PLANAR GRAPHS BY CYCLIC GRAPHS  
Author: Lenwood S. Heath and John Paul C. Vergara 
Date: November 26, 1996  
Address: 24061-0106  
Affiliation: Department of Computer Science Virginia Polytechnic Institute and State University Blacksburg, Virginia  
Abstract: Submitted to Discrete Applied Mathematics. November 26, 1996 Maximum G Edge-Packing is the problem of finding the maximum number of edge-disjoint isomorphic copies of a fixed guest graph G in a host graph H. This paper considers the cases where G and H are planar and G is cyclic. Recent work on the general problem is surveyed, inadequacies and limitations in these results are identified, and NP-completeness proofs for key cases are presented.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1974. </year>
Reference-contexts: A cutpoint in G is a vertex v 2 V G whose removal disconnects G. The cutpoints determine a unique decomposition of G into its biconnected components. An algorithm to decompose a graph into biconnected components is discussed in Aho, Hopcroft and Ullman <ref> [1] </ref>. Figure 6 illustrates an example of such 7 a decomposition. Notice that some components are just single edges; we call these trivial biconnected components. Hence, nontrivial biconnected components are ones with at least three edges. When G is cyclic, at least one of its biconnected components is non-trivial. <p> The gadget is a set of 2n (recall that n represents the number of clauses) cascaded copies of G. Figure 11 shows what G fl v i looks like if n = 3. We label the o edges of the gadget: o v i <ref> [1] </ref>, o v i [1], o v i [2], o v i [2], : : : , o v i [n], o v i [n]. Some of these edges will be identified with the o edges of clause gadgets as we discuss later. <p> The gadget is a set of 2n (recall that n represents the number of clauses) cascaded copies of G. Figure 11 shows what G fl v i looks like if n = 3. We label the o edges of the gadget: o v i <ref> [1] </ref>, o v i [1], o v i [2], o v i [2], : : : , o v i [n], o v i [n]. Some of these edges will be identified with the o edges of clause gadgets as we discuss later. <p> If jc j j = 3, G fl c j = G fl (9), that is, nine cascaded copies of G. We label the nine o edges: o c j [i], where 1 i 9. Three of these edges, o c j <ref> [1] </ref>, o c j [4], and o c j [7], are identified with edges from corresponding variable gadgets. Suppose c j = (v 1 + v 2 + v 3 ). Figure 13 illustrates the gadget G fl c j . <p> Suppose c j = (v 1 + v 2 + v 3 ). Figure 13 illustrates the gadget G fl c j . Note that the following edges are identified: o c j <ref> [1] </ref> with o v 1 [j 1 ], o c j [4] with o v 2 [j 2 ], and o c j [7] with o v 3 [j 3 ]. j 1 , j 2 and j 3 refer to the actual index appropriate for the clause c j for <p> When jc j j = 1 or jc j j = 2, similar constructions apply. For jc j = 1j, we eliminate edges o c j [4] and o c j [7] from the gadget, so that 4 copies may be packed only if the edge o c j <ref> [1] </ref> is made 15 available by the corresponding variable gadget. We eliminate the edge o c j [7] when jc j j = 2 for the same reason. There are n copies of G that can be packed in each of the m variable gadgets.
Reference: [2] <author> E. Cohen and M. Tarsi, </author> <title> NP-completeness of graph decomposition problems, </title> <journal> Journal of Complexity, </journal> <volume> 7 (1991), </volume> <pages> pp. 200-212. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Figure 11 shows what G fl v i looks like if n = 3. We label the o edges of the gadget: o v i [1], o v i [1], o v i <ref> [2] </ref>, o v i [2], : : : , o v i [n], o v i [n]. Some of these edges will be identified with the o edges of clause gadgets as we discuss later. <p> Figure 11 shows what G fl v i looks like if n = 3. We label the o edges of the gadget: o v i [1], o v i [1], o v i <ref> [2] </ref>, o v i [2], : : : , o v i [n], o v i [n]. Some of these edges will be identified with the o edges of clause gadgets as we discuss later. From Corollary 1, at most n copies of G may be edge-packed in a variable gadget.
Reference: [3] <author> C. J. Colbourn, </author> <title> The complexity of completing partial Latin squares, </title> <journal> Discrete Applied Mathematics, </journal> <volume> 8 (1984), </volume> <pages> pp. 25-30. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13].
Reference: [4] <author> D. G. Corneil, S. Masuyama, and S. L. Hakimi, </author> <title> Edge-disjoint packings of graphs, </title> <journal> Discrete Applied Mathematics, </journal> <volume> 50 (1994), </volume> <pages> pp. 135-148. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Dor and Tarsi [5] provide complexity results that cover most of the previous work, that is, that EP art G (and thus EP ack G ) is NP-complete for connected guest graphs with at least three edges. Corneil, Masuyama, and Hakimi <ref> [4] </ref> address EP ack G for all connected guests and achieve similar results. <p> Conjecture 1 EP ack G (planar), where G is a connected graph with at least 3 edges, is NP-complete. The paper is structured as follows. Section 2 considers the technique of cascading guest graphs to form a gadget for NP-completeness reductions, a technique used in previous work <ref> [4, 7, 13] </ref>. In Section 3, we discuss a proof presented in CMH and identify some inadequacies in the proof. Section 4 discusses a classification for a cyclic guest graph G by decomposing G into triconnected components. <p> This construction technique has been used in previous work by us [7, 13] and by CMH <ref> [4] </ref> when proving NP-completeness for EP ack G for cyclic G. We discuss the CMH proof in the next section. 5 3 The CMH Proof CMH [4] present NP-completeness reductions from EXACT 3-COVER: EXACT 3-COVER (X3C) INSTANCE: A set X with 3q elements and a collection C of 3-element subsets of <p> This construction technique has been used in previous work by us [7, 13] and by CMH <ref> [4] </ref> when proving NP-completeness for EP ack G for cyclic G. We discuss the CMH proof in the next section. 5 3 The CMH Proof CMH [4] present NP-completeness reductions from EXACT 3-COVER: EXACT 3-COVER (X3C) INSTANCE: A set X with 3q elements and a collection C of 3-element subsets of X. <p> If jc j j = 3, G fl c j = G fl (9), that is, nine cascaded copies of G. We label the nine o edges: o c j [i], where 1 i 9. Three of these edges, o c j [1], o c j <ref> [4] </ref>, and o c j [7], are identified with edges from corresponding variable gadgets. Suppose c j = (v 1 + v 2 + v 3 ). Figure 13 illustrates the gadget G fl c j . <p> Suppose c j = (v 1 + v 2 + v 3 ). Figure 13 illustrates the gadget G fl c j . Note that the following edges are identified: o c j [1] with o v 1 [j 1 ], o c j <ref> [4] </ref> with o v 2 [j 2 ], and o c j [7] with o v 3 [j 3 ]. j 1 , j 2 and j 3 refer to the actual index appropriate for the clause c j for each of the variable gadgets. <p> When jc j j = 1 or jc j j = 2, similar constructions apply. For jc j = 1j, we eliminate edges o c j <ref> [4] </ref> and o c j [7] from the gadget, so that 4 copies may be packed only if the edge o c j [1] is made 15 available by the corresponding variable gadget.
Reference: [5] <author> D. Dor and M. Tarsi, </author> <title> Graph decomposition is NPC | a complete proof of Holyer's conjecture, </title> <booktitle> in Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1992, </year> <pages> pp. 252-263. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Several results have already been obtained for EP ack G and EP art G [2, 3, 4, 5, 6, 7, 8, 12, 13]. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. Dor and Tarsi <ref> [5] </ref> provide complexity results that cover most of the previous work, that is, that EP art G (and thus EP ack G ) is NP-complete for connected guest graphs with at least three edges.
Reference: [6] <author> M. E. Dyer and A. M. Frieze, </author> <title> On the complexity of partitioning graphs into connected subgraphs, </title> <journal> Discrete Applied Mathematics, </journal> <volume> 10 (1985), </volume> <pages> pp. 139-153. 20 </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> G edge-packing and G edge-partition, where the host graph is restricted to some class or property, have also been studied. Masuyama and Ibaraki [12] show that EP ack G (tree) is solvable in linear time when G is a path. Dyer and Frieze <ref> [6] </ref> show that EP art G (planar) is NP-complete when G is a path or a 3-star (a star with three edges) but solvable in polynomial time when G is a triangle (a 3-cycle).
Reference: [7] <author> L. S. Heath and J. P. C. Vergara, </author> <title> Edge packing in planar graphs. </title> <note> Submitted to Mathematical Systems Theory, </note> <year> 1995. </year>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Dyer and Frieze [6] show that EP art G (planar) is NP-complete when G is a path or a 3-star (a star with three edges) but solvable in polynomial time when G is a triangle (a 3-cycle). In a separate paper, we <ref> [7, 13] </ref> show some generalized results on EP ack G (tree) and EP ack G (planar): 2 * EP ack G (tree) is solvable in polynomial time for any connected G and in linear time when G is a path or a star. * EP ack G (planar) is NP-complete when <p> Conjecture 1 EP ack G (planar), where G is a connected graph with at least 3 edges, is NP-complete. The paper is structured as follows. Section 2 considers the technique of cascading guest graphs to form a gadget for NP-completeness reductions, a technique used in previous work <ref> [4, 7, 13] </ref>. In Section 3, we discuss a proof presented in CMH and identify some inadequacies in the proof. Section 4 discusses a classification for a cyclic guest graph G by decomposing G into triconnected components. <p> This construction technique has been used in previous work by us <ref> [7, 13] </ref> and by CMH [4] when proving NP-completeness for EP ack G for cyclic G. <p> We label the nine o edges: o c j [i], where 1 i 9. Three of these edges, o c j [1], o c j [4], and o c j <ref> [7] </ref>, are identified with edges from corresponding variable gadgets. Suppose c j = (v 1 + v 2 + v 3 ). Figure 13 illustrates the gadget G fl c j . <p> Figure 13 illustrates the gadget G fl c j . Note that the following edges are identified: o c j [1] with o v 1 [j 1 ], o c j [4] with o v 2 [j 2 ], and o c j <ref> [7] </ref> with o v 3 [j 3 ]. j 1 , j 2 and j 3 refer to the actual index appropriate for the clause c j for each of the variable gadgets. <p> When jc j j = 1 or jc j j = 2, similar constructions apply. For jc j = 1j, we eliminate edges o c j [4] and o c j <ref> [7] </ref> from the gadget, so that 4 copies may be packed only if the edge o c j [1] is made 15 available by the corresponding variable gadget. We eliminate the edge o c j [7] when jc j j = 2 for the same reason. <p> jc j = 1j, we eliminate edges o c j [4] and o c j <ref> [7] </ref> from the gadget, so that 4 copies may be packed only if the edge o c j [1] is made 15 available by the corresponding variable gadget. We eliminate the edge o c j [7] when jc j j = 2 for the same reason. There are n copies of G that can be packed in each of the m variable gadgets.
Reference: [8] <author> I. Holyer, </author> <title> The NP-completeness of some edge-partition problems, </title> <journal> SIAM Journal on Computing, </journal> <volume> 10 (1981), </volume> <pages> pp. 713-717. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13].
Reference: [9] <author> J. E. Hopcroft and R. E. Tarjan, </author> <title> Dividing a graph into triconnected components, </title> <journal> SIAM Journal on Computing, </journal> <volume> 2 (1973), </volume> <pages> pp. 135-157. </pages>
Reference-contexts: Hence, nontrivial biconnected components are ones with at least three edges. When G is cyclic, at least one of its biconnected components is non-trivial. A bicon-nected graph can be further decomposed into triconnected components through separating pairs. MacLane [11] discusses this decomposition process for planar graphs. Hopcroft and Tarjan <ref> [9] </ref> describes this process algorithmically. A separating pair in a biconnected graph is a pair of vertices whose removal disconnects the graph.
Reference: [10] <author> D. Lichtenstein, </author> <title> Planar formulae and their uses, </title> <journal> SIAM Journal on Computing, </journal> <volume> 11 (1982), </volume> <pages> pp. 329-343. </pages>
Reference-contexts: Proof: It is clear that EP ack G (planar) is in NP. To show NP-hardness, we reduce from PLANAR 3-SAT (Lichtenstein <ref> [10] </ref>). PLANAR 3-SAT is a variant of the problem 3-SAT (3-SATISFIABILITY) that involves boolean variables and clauses over the variables. A literal is a variable (positive literal) or the negation of a variable (negative literal). In a 3-SAT instance, a clause is a set containing at most three literals.
Reference: [11] <author> S. MacLane, </author> <title> A structural characterization of planar combinatorial graphs, </title> <journal> Duke Math Journal, </journal> <volume> 3 (1937), </volume> <pages> pp. 460-472. </pages>
Reference-contexts: Hence, nontrivial biconnected components are ones with at least three edges. When G is cyclic, at least one of its biconnected components is non-trivial. A bicon-nected graph can be further decomposed into triconnected components through separating pairs. MacLane <ref> [11] </ref> discusses this decomposition process for planar graphs. Hopcroft and Tarjan [9] describes this process algorithmically. A separating pair in a biconnected graph is a pair of vertices whose removal disconnects the graph.
Reference: [12] <author> S. Masuyama and T. Ibaraki, </author> <title> Chain packing in graphs, </title> <journal> Algorithmica, </journal> <volume> 6 (1991), </volume> <pages> pp. 826-839. </pages>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Several results have already been obtained for EP ack G and EP art G [2, 3, 4, 5, 6, 7, 8, 12, 13]. EP ack G is solvable in polynomial time when G is a path of length 2 <ref> [12, 13] </ref>. Dor and Tarsi [5] provide complexity results that cover most of the previous work, that is, that EP art G (and thus EP ack G ) is NP-complete for connected guest graphs with at least three edges. <p> We also identify some deficiencies in the CMH paper and adopt a modified strategy. G edge-packing and G edge-partition, where the host graph is restricted to some class or property, have also been studied. Masuyama and Ibaraki <ref> [12] </ref> show that EP ack G (tree) is solvable in linear time when G is a path.
Reference: [13] <author> J. P. C. Vergara and L. S. Heath, </author> <title> Edge-packing by isomorphic subgraphs, </title> <type> Tech. Rep. TR 91-3, </type> <institution> Department of Computer Science, Virginia Polytechnic Institute and State University, </institution> <year> 1991. </year>
Reference-contexts: As in EP ack G , we use the notation EP art G (P ) to restrict the host graph to a particular class of graphs. Several results have already been obtained for EP ack G and EP art G <ref> [2, 3, 4, 5, 6, 7, 8, 12, 13] </ref>. EP ack G is solvable in polynomial time when G is a path of length 2 [12, 13]. <p> Several results have already been obtained for EP ack G and EP art G [2, 3, 4, 5, 6, 7, 8, 12, 13]. EP ack G is solvable in polynomial time when G is a path of length 2 <ref> [12, 13] </ref>. Dor and Tarsi [5] provide complexity results that cover most of the previous work, that is, that EP art G (and thus EP ack G ) is NP-complete for connected guest graphs with at least three edges. <p> Dyer and Frieze [6] show that EP art G (planar) is NP-complete when G is a path or a 3-star (a star with three edges) but solvable in polynomial time when G is a triangle (a 3-cycle). In a separate paper, we <ref> [7, 13] </ref> show some generalized results on EP ack G (tree) and EP ack G (planar): 2 * EP ack G (tree) is solvable in polynomial time for any connected G and in linear time when G is a path or a star. * EP ack G (planar) is NP-complete when <p> Conjecture 1 EP ack G (planar), where G is a connected graph with at least 3 edges, is NP-complete. The paper is structured as follows. Section 2 considers the technique of cascading guest graphs to form a gadget for NP-completeness reductions, a technique used in previous work <ref> [4, 7, 13] </ref>. In Section 3, we discuss a proof presented in CMH and identify some inadequacies in the proof. Section 4 discusses a classification for a cyclic guest graph G by decomposing G into triconnected components. <p> This construction technique has been used in previous work by us <ref> [7, 13] </ref> and by CMH [4] when proving NP-completeness for EP ack G for cyclic G.
Reference: [14] <author> H. Whitney, </author> <title> Congruent graphs and the connectivity of graphs, </title> <journal> American Journal of Mathematics, </journal> <volume> 54 (1932), </volume> <pages> pp. 150-168. 21 </pages>
Reference-contexts: We call the edges that join adjacent separating pairs cutedges (CMH use this term). In Figure 7, a biconnected graph is split into triconnected components; the dashed edges indicate non-adjacent separating pairs|we call these virtual edges. Triconnected planar graphs have a unique planar embedding <ref> [14] </ref>. Given a triconnected component, the edges on its outer face may be cutedges or virtual edges; edges on the outer face that are neither virtual edges nor cutedges are called side edges.
References-found: 14

