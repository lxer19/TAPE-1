URL: http://www.cs.umn.edu/Research/shashi-group/paper_ps/tkde.ps
Refering-URL: http://www.cs.umn.edu/Research/shashi-group/paper_list.html
Root-URL: http://www.cs.umn.edu
Email: [shekharjchawlajsivajf ettererjxliujctlu]@cs.umn.edu  
Title: Spatial Databases: Accomplishments and Research Needs  
Author: S. Shekhar, S. Chawla, S. Ravada A. Fetterer, X. Liu, C.T. Lu 
Keyword: Spatial Databases, Multi-Dimensional, Object-Relational, Databases, Geographic Information Systems  
Web: http://www.cs.umn.edu/research/shashi-group/  
Address: EE/CS 4-192, 200 Union St. SE., Minneapolis, MN 55455  
Affiliation: Computer Science Department, University of Minnesota  
Abstract: Spatial databases have been an active area of research for over two decades, addressing the growing data management and analysis needs of spatial applications such as Geographic Information Systems. This research has produced a taxonomy of models for space, spatial data types and operators, spatial query languages and processing strategies, as well as spatial indexes and clustering techniques. However, more research is needed to improve support for network and field data, as well as query processing (e.g. cost models, bulk load). Another important need is to apply the spatial data management accomplishments to newer applications such as data warehouses and multimedia information systems. The objective of this paper is to identify recent accomplishments and the research needs in the near term. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Adam and A. Gangopadhyay. </author> <title> Database issues in Geographical Information Systems. </title> <publisher> Kluwer Academics, </publisher> <year> 1997. </year>
Reference-contexts: The performance needs of emerging applications require not only the management of large data-sets, but also new processing strategies for spatial set-operations, field operations (e.g. slope), and network analysis (e.g. shortest-path, route-evaluation). 1 1.2 Related Work and Our Contributions Recent reports <ref> [11, 15, 35, 1] </ref> have described the accomplishments of spatial database research and have prioritized research needs. A broad survey of spatial database requirements and an overview of research results is provided by [35, 11, 1]. <p> A broad survey of spatial database requirements and an overview of research results is provided by <ref> [35, 11, 1] </ref>. Basic modeling requirements for spatial objects such as points, lines, and polygons are given in terms of their geometry, topology and object relationships (topological, directional, metric, network). Requirements are given for other user-level issues such as graphical input and output and query language support.
Reference: [2] <author> T. Asano, D. Ranjan, T. Roos, E. Wiezl, and P. Widmayer. </author> <title> Space filling curves and their use in the design of geometric data structures. </title> <journal> Theoretical Computer Science, </journal> <volume> 181(1) </volume> <pages> 3-15, </pages> <month> July </month> <year> 1996. </year>
Reference-contexts: is needed is a mapping from a higher dimensional space to a one-dimensional space which is distance-preserving: so that elements that are close in space are mapped onto nearby points on the line, and one-one: no two points in the space are mapped onto the same point on the line <ref> [2] </ref>. Several mappings, none of them ideal, have been proposed to accomplish this. The most prominent ones include row-order, z-order and the Hilbert-curve (Figure 5). Metric clustering techniques use the notion of distance to group nearest neighbors together in a metric space.
Reference: [3] <author> P. Baumann. </author> <title> Management of multidimensional discrete data. </title> <journal> VLDB Journal, Special issue on Spatial Database Systems, </journal> <volume> 3(4) </volume> <pages> 401-444, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Other interesting classes of operations are network, direction, dynamic and the field operations of focal, local and zonal (see Table 2). While standards for field based raster data types are still emerging, Map Algebra [33], specifically designed for cartographic modeling and RaSQL, based on Image Algebra <ref> [3] </ref>, for general multi-dimensional discrete objects (satellite images, X-rays, etc.), are important milestones. 2.3 Spatial Query Processing The efficient processing of spatial queries requires both efficient representation and efficient algorithms.
Reference: [4] <author> A. Belussi and C. Faloutsos. </author> <title> Estimating the Selectivity of Spatial Queries Using the 'Correlation' Fractal Dimension. </title> <booktitle> In Proceedings of 21st International Conference on Very Large Data Bases(VLDB'95), </booktitle> <pages> pages 299-310, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: Cost models are needed to estimate the selectivity of spatial search and join operations towards comparison of execution-costs of alternative processing strategies for spatial operations during query optimization. Preliminary work in the context of the R-tree, tree-matching join, and fractal-models is promising <ref> [4, 36] </ref> , but more work is needed. Similarly, common strategies employed in traditional databases for the logical transformation step in query optimization may not be always applicable in the context of spatial databases. 11 For example consider the query (see Figure 2 (a)) first introduced in Section 2.
Reference: [5] <author> Thomas Brinkhoff, Hans-Peter Kriegel, and Bernhard Seeger. </author> <title> Efficient processing of spatial joins using R-trees. </title> <booktitle> In Proceedings of the 1993 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 237-246, </pages> <address> Washington D.C., </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Exact geometry is then used for the remaining spatial objects to complete the processing. Strategies for range-queries include a scan and index-search in conjunction with the plane-sweep algorithm <ref> [5] </ref>. Strategies for the spatial-join include the nested loop, tree matching [5] when indices are present on all participating relations, and space partitioning [22] in the absence of indices. <p> Exact geometry is then used for the remaining spatial objects to complete the processing. Strategies for range-queries include a scan and index-search in conjunction with the plane-sweep algorithm <ref> [5] </ref>. Strategies for the spatial-join include the nested loop, tree matching [5] when indices are present on all participating relations, and space partitioning [22] in the absence of indices. To speed up computation for large spatial objects (it is common for polygons to have 1000 or more edges), object indices are used in extended filtering.
Reference: [6] <author> D. Chamberlin. </author> <title> Using the New DB2: IBM's Object Relational System. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year>
Reference-contexts: The spatial types and operations may be made a part of a query language such as SQL, which allows spatial querying when combined with an object-relational database management system <ref> [6, 32] </ref>. The performance enhancement provided by these systems includes a multi-dimensional spatial index and algorithms for spatial access methods, spatial range queries and spatial joins. Spatial indexing with concurrency control may be implemented in the object-relational server for performance reasons. <p> In this paper, we focus the discussion of spatial databases in the context of the object-relational <ref> [6, 32, 31] </ref> databases, which provide extensibility to many components of traditional databases to support new application domains. These and other important issues including architectural options, Raster DBMS and Network spaces are covered in detail in our forthcoming book [24].
Reference: [7] <author> N. Chrisman. </author> <title> Exploring Geographic Information Systems. </title> <publisher> John Wiley and Sons, </publisher> <year> 1997. </year>
Reference-contexts: The spaghetti-ring and DCEL focus on the topological concepts. The representation of the field data model includes a regular tessellation (triangular, square, hexagonal grid), as well as triangular irregular networks (TIN). The spatial queries <ref> [7] </ref> shown in Table 3 are often processed using filter and refine techniques. Approximate geometry such as the minimal orthogonal bounding rectangle of an extended spatial object is first used to filter out many irrelevant objects quickly.
Reference: [8] <author> E. Clemintini and P. Di Felice. </author> <title> Topological invariants for lines. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 10(1) </volume> <pages> 38-54, </pages> <year> 1998. </year>
Reference-contexts: Further work is needed on a framework to formalize the discretization process, its associated errors, and on interpolation. 3.2 Spatial Data Model Spatial data models have been developed for topological, metric and coordinatized euclidean space. The OGIS specification alluded to in Section 2.2 is confined to topological operators <ref> [8] </ref> and more work is needed to incorporate relationships which involve directional [29] and metric properties (see Table 2 for examples).
Reference: [9] <author> David J. DeWitt, Navin Kabra, Jun Luo, Jignesh M. Patel, and Jie-Bing Yu. </author> <title> Client-Server Paradise. </title> <booktitle> In Proceedings of the 20th International Conference on Very Large Data Bases,(VLDB'94), </booktitle> <pages> pages 558-569, </pages> <address> Santiago de Chile, Chile, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Commercial examples of spatial database management include Informix's spatial data-blades (i.e. 2D, 3D, Geodetic), Oracle's Universal server with either Spatial Data Option or Spatial Data Cartridge and ESRI's Spatial Data Engine (SDE). Research prototype examples of spatial database management systems include spatial datablades with Postgres [30], GeO2, and Paradise <ref> [9] </ref>. The functionalities provided by these systems include a set of spatial data types such as a point, line-segment and polygon, and a set of spatial operations such as inside, intersection, and distance. <p> The Sequoia 2000 [30] benchmark characterizes the data and queries in Earth Science applications. The performance of loading data, raster queries, spatial selection, spatial joins, and recursion is addressed in 11 benchmark queries. A few more are provided in the Paradise system <ref> [9] </ref>. Similar benchmarks are needed to characterize the spatial data management needs of other applications such as GIS, DWH, and transportation. The work-flow in some spatial applications such as GIS is based on manipulating layers to produce new, derived layers.
Reference: [10] <author> M. Egenhofer. </author> <title> Spatial SQL: A Query and Presentation Language. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 6(1) </volume> <pages> 86-95, </pages> <year> 1994. </year>
Reference-contexts: Figure 3, which illustrates this spatial data-type hierarchy consists of Point, Curve and Polygon classes and a parallel class of Geometry Collection. The basic operations operative on all datatypes are shown in Table 1. The topological operations are based on the ubiquitous 9-intersection model <ref> [10] </ref>. Using the OGIS specification, common spatial queries can be intutively posed in SQL. For example, the query Find all lakes which have an area greater than 5 sq. km. and are within 20 km. from the campgrounds can be posed as shown in Figure 2 (a).
Reference: [11] <author> R.H. Guting. </author> <title> An Introduction to Spatial Database Systems. </title> <journal> VLDB Journal, Special issue on Spatial Database Systems, </journal> <volume> 3(4) </volume> <pages> 357-399, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction 1.1 Spatial Databases A spatial database <ref> [11, 15, 35] </ref> management system aims at the effective and efficient management of data related to a space such as the physical world (geography, urban planning, astronomy); parts of living organisms (anatomy of the human body); engineering design (very large scale integrated circuits, the design of an automobile or the molecular <p> The performance needs of emerging applications require not only the management of large data-sets, but also new processing strategies for spatial set-operations, field operations (e.g. slope), and network analysis (e.g. shortest-path, route-evaluation). 1 1.2 Related Work and Our Contributions Recent reports <ref> [11, 15, 35, 1] </ref> have described the accomplishments of spatial database research and have prioritized research needs. A broad survey of spatial database requirements and an overview of research results is provided by [35, 11, 1]. <p> A broad survey of spatial database requirements and an overview of research results is provided by <ref> [35, 11, 1] </ref>. Basic modeling requirements for spatial objects such as points, lines, and polygons are given in terms of their geometry, topology and object relationships (topological, directional, metric, network). Requirements are given for other user-level issues such as graphical input and output and query language support. <p> A sequence of operations on discretized data can lead to growing errors similar to the ones introduced by finite-precision arithmetic on numbers. There are preliminary results <ref> [11] </ref> on the use of discrete basis and bounding errors with peg-board semantics. Another related problem concerns interpolation to estimate the continuous field from a discretization. Negative spatial auto-correlation makes interpolation error-prone.
Reference: [12] <author> R. Guttman. R-tree: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference, Annual Meeting, </booktitle> <pages> pages 47-57, </pages> <address> Boston, MA., </address> <year> 1984. </year>
Reference-contexts: Requirements are given for other user-level issues such as graphical input and output and query language support. Spatial clustering and indexing techniques [23] such as Grid-files, Z-order, Quad-tree, Kd-trees, R-trees <ref> [12] </ref> and associated join strategies are described. Finally, an architecture for spatial databases is given in terms of the object-relational model. Research needed to improve the performance of spatial databases in the context of object-relational databases was listed in [15]. <p> Representative indices for extended objects include the R-tree family, the Field tree, Cell tree, BSP tree, and Balanced and Nested grid files. One of the first access methods created to handle extended objects was Guttman's R-tree structure <ref> [12] </ref>. The R-tree is a height balanced natural extension of the B+ tree for higher dimensions. Objects are represented in the R-tree by their minimum bounding rectangles (MBRs).
Reference: [13] <author> J.M. Hellerstein and M. Stonebraker. </author> <title> Predicate Migration:Optimizing Queries with Expensive Predicates. </title> <booktitle> In Proceedings of the ACM-SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 267-276, </pages> <address> Washington, D.C, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: In the spatial situation the relative cost per tuple of Area () and Distance () is an important factor in deciding the order of the operations <ref> [13] </ref>. Depending upon the implementation of these two functions the optimal strategy may be to process the join before the select operation (see Figure 7 (b)). Many processing strategies using the overlap predicate have been developed for range queries and spatial join queries.
Reference: [14] <author> N. Jing, Y. Huang, and E. Rundensteiner. </author> <title> Hierarchical encoded path views for path query processing: An optimal model and its performance evaluation. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 10(3) </volume> <pages> 409-432, </pages> <year> 1998. </year>
Reference-contexts: Other interesting developments include hierarchical algorithms for shortest path computation <ref> [14] </ref> and view materialization [26]. 3 Research Needs Spatial databases are being used for an increasing number of new applications, such as Intelligent Transportation Systems, NASA's Earth Observation System, Multimedia Information Systems (MMIS) and Data Warehouses.
Reference: [15] <author> W. Kim, J. Garza, and A. Kesin. </author> <title> Spatial Data Management in Database Systems. </title> <booktitle> In Advances in Spatial Databases, 3rd International Symposium, SSD'93 Proceedings , Lecture notes in Computer Science, </booktitle> <volume> Vol. 692, </volume> <publisher> Springer, ISBN 3-540-56869-7, </publisher> <pages> pages 1-13, </pages> <address> Singapore, </address> <year> 1993. </year> <month> 15 </month>
Reference-contexts: 1 Introduction 1.1 Spatial Databases A spatial database <ref> [11, 15, 35] </ref> management system aims at the effective and efficient management of data related to a space such as the physical world (geography, urban planning, astronomy); parts of living organisms (anatomy of the human body); engineering design (very large scale integrated circuits, the design of an automobile or the molecular <p> The performance needs of emerging applications require not only the management of large data-sets, but also new processing strategies for spatial set-operations, field operations (e.g. slope), and network analysis (e.g. shortest-path, route-evaluation). 1 1.2 Related Work and Our Contributions Recent reports <ref> [11, 15, 35, 1] </ref> have described the accomplishments of spatial database research and have prioritized research needs. A broad survey of spatial database requirements and an overview of research results is provided by [35, 11, 1]. <p> Finally, an architecture for spatial databases is given in terms of the object-relational model. Research needed to improve the performance of spatial databases in the context of object-relational databases was listed in <ref> [15] </ref>. The primary research needs identified were concurrency control techniques for spatial indexing methods, the development of cost models for query strategies, and the development of new spatial join algorithms beyond nested-loop and tree matching. Many of the research needs identified in [15] have since been addressed. <p> the context of object-relational databases was listed in <ref> [15] </ref>. The primary research needs identified were concurrency control techniques for spatial indexing methods, the development of cost models for query strategies, and the development of new spatial join algorithms beyond nested-loop and tree matching. Many of the research needs identified in [15] have since been addressed. For example, concurrency control techniques for R-trees have been studied in the context of R-link [16] trees. Also, new spatial join strategies using space partitioning [22] have been explored.
Reference: [16] <author> M. Kornacker and D. </author> <title> Banks. High-Concurrency Locking in R-Trees. </title> <booktitle> In Proceedings of 21st International Conference on Very Large Data Bases(VLDB'95), </booktitle> <pages> pages 134-145, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: Many of the research needs identified in [15] have since been addressed. For example, concurrency control techniques for R-trees have been studied in the context of R-link <ref> [16] </ref> trees. Also, new spatial join strategies using space partitioning [22] have been explored. <p> Many variations of the R-tree structure exist whose main emphasis is on discovering new strategies to maintain the balance of the tree, in case of a split, and to minimize the overlap of the MBRs in order to improve the search time. Concurrency control for spatial access methods <ref> [16] </ref> is provided by the R-link tree, which is a variant of the R-tree with additional sibling pointers that allow the tracking of modifications. Concurrency is provided during operations such as search, insert, and delete. The R-link tree is also recoverable in a write-ahead logging environment. <p> The R-link tree <ref> [16] </ref> is among the few approaches available for concurrency control on the R-tree. New approaches for concurrency-control techniques are needed for other spatial indices. The data volume of emerging spatial applications such as NASA's EOS is among the highest of any database application.
Reference: [17] <author> R. Laurini and D. Thompson. </author> <title> Fundamentals of Spatial Information Systems. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Common representations of spatial data in an object model include spaghetti, the node-arc-area (NAA) model, the doubly-connected-edge-list (DCEL), and boundary representation <ref> [17] </ref>, some of which are shown in Figure 4 using entity-relationship diagrams. The NAA 5 Basic Functions SpatialReference () Returns the Reference System of the geometry Envelope () The minimum bounding rectangle of the geometry Export () Convert the geometry into a different representation.
Reference: [18] <author> J. Lee, Y. Lee, K. Whang, and I. Song. </author> <title> A physical database design method for multidimensional file organization. </title> <journal> Information Sciences, </journal> <volume> 120(1) </volume> <pages> 31-65, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: A large number of spatial indices [23] have been explored for multi-dimensional euclidean space. Representative indices for point objects include Grid files, multi-dimensional grid files 7 <ref> [18] </ref>, Point-Quad-Trees, and Kd-trees. Representative indices for extended objects include the R-tree family, the Field tree, Cell tree, BSP tree, and Balanced and Nested grid files. One of the first access methods created to handle extended objects was Guttman's R-tree structure [12].
Reference: [19] <author> D-R. Liu and S. Shekhar. </author> <title> A Similarity Graph-Based Approach to Declustering Problems and Its Application Toward Parallelizing Grid Files. </title> <booktitle> In Proceedings of the 11th International Conference on Data Engineering, </booktitle> <pages> pages 373-381, </pages> <address> Taipei, Taiwan, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Representative results include those from the Sequoia 2000 project [30]. High-performance spatial applications such as flight simulators with geographic accuracy have triggered the development of new parallel formalizations for the range query and the spatial join query, including declustering methods and dynamic-load balancing techniques for multi-dimensional spatial data <ref> [28, 19] </ref>. Other interesting developments include hierarchical algorithms for shortest path computation [14] and view materialization [26]. 3 Research Needs Spatial databases are being used for an increasing number of new applications, such as Intelligent Transportation Systems, NASA's Earth Observation System, Multimedia Information Systems (MMIS) and Data Warehouses.
Reference: [20] <institution> US Army Corps of Engineers. Topographic engineering center. </institution> <note> http://www.tec.army.mil/gis-internet2.html. </note>
Reference-contexts: The acceptance of GIS as an important tool in government decision-making is also documented [34] and military planners have embraced GIS technology at all levels of tactical, operational and strategic planning, including battlefied visualization and terrain analysis <ref> [20] </ref>. Commercial examples of spatial database management include Informix's spatial data-blades (i.e. 2D, 3D, Geodetic), Oracle's Universal server with either Spatial Data Option or Spatial Data Cartridge and ESRI's Spatial Data Engine (SDE).
Reference: [21] <author> Open GIS Consortium, Inc., </author> <title> http://www.opengis.org/public/abstract.html. OpenGIS Simple Features Specification For SQL, </title> <year> 1998. </year>
Reference-contexts: Much work has been done over the last decade on the design of spatial Abstract Data Types (ADTs) and their embedding in a query language. Consensus is slowly emerging via standardization efforts, and 4 recently the OGIS consortium <ref> [21] </ref> has proposed a specification for incorporating 2D geospatial ADTs in SQL. Figure 3, which illustrates this spatial data-type hierarchy consists of Point, Curve and Polygon classes and a parallel class of Geometry Collection. The basic operations operative on all datatypes are shown in Table 1. <p> or equal to the specified distance ConvexHull Returns the convex hull of the geometry Intersection Returns the intersection of two geometries Union Returns the union of two geometries Difference Returns the difference of two geometries SymDiff Returns the symmetric difference of two geometries Table 1: Representative functions specified by OGIS <ref> [21] </ref> model differentiates between the topological concepts (node, arc, areas) and the embedding space (points, lines, areas). The spaghetti-ring and DCEL focus on the topological concepts. The representation of the field data model includes a regular tessellation (triangular, square, hexagonal grid), as well as triangular irregular networks (TIN).
Reference: [22] <author> Jignesh M. Patel and David J. DeWitt. </author> <title> Partition Based Spatial-Merge Join. </title> <booktitle> In Proceedings of the 1996 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 259-270, </pages> <address> Montreal, Quebec, CA., </address> <year> 1996. </year>
Reference-contexts: Many of the research needs identified in [15] have since been addressed. For example, concurrency control techniques for R-trees have been studied in the context of R-link [16] trees. Also, new spatial join strategies using space partitioning <ref> [22] </ref> have been explored. <p> Strategies for range-queries include a scan and index-search in conjunction with the plane-sweep algorithm [5]. Strategies for the spatial-join include the nested loop, tree matching [5] when indices are present on all participating relations, and space partitioning <ref> [22] </ref> in the absence of indices. To speed up computation for large spatial objects (it is common for polygons to have 1000 or more edges), object indices are used in extended filtering.
Reference: [23] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Basic modeling requirements for spatial objects such as points, lines, and polygons are given in terms of their geometry, topology and object relationships (topological, directional, metric, network). Requirements are given for other user-level issues such as graphical input and output and query language support. Spatial clustering and indexing techniques <ref> [23] </ref> such as Grid-files, Z-order, Quad-tree, Kd-trees, R-trees [12] and associated join strategies are described. Finally, an architecture for spatial databases is given in terms of the object-relational model. Research needed to improve the performance of spatial databases in the context of object-relational databases was listed in [15]. <p> Classical one-dimensional indices such as the B + tree can be used for spatial data by linearizing a multi-dimensional space using a space-filling curve such as the Z-order (see Figure 5). A large number of spatial indices <ref> [23] </ref> have been explored for multi-dimensional euclidean space. Representative indices for point objects include Grid files, multi-dimensional grid files 7 [18], Point-Quad-Trees, and Kd-trees. Representative indices for extended objects include the R-tree family, the Field tree, Cell tree, BSP tree, and Balanced and Nested grid files.
Reference: [24] <author> S. Shekhar and S. Chawla. </author> <title> Spatial Databases: Concepts, Implementation and Trends. </title> <note> First draft, http://www.cs.umn.edu/Research/shashi-group/Book/index.html, 1998. </note>
Reference-contexts: These and other important issues including architectural options, Raster DBMS and Network spaces are covered in detail in our forthcoming book <ref> [24] </ref>. Spatial databases have been one of the most common applications of object-relational databases and have influenced their design a great deal. Object-relational databases allow the inclusion of spatial data-types, spatial operations, and multi-dimensional indexing systems.
Reference: [25] <author> S. Shekhar, M. Coyle, D-R. Liu, B. Goyal, and S. Sarkar. </author> <title> Data Models in Geographic Information Systems. </title> <journal> Communication of the ACM, </journal> <volume> 40(4) </volume> <pages> 103-111, </pages> <year> 1997. </year>
Reference-contexts: Metric spaces formalize the distance relationships using positive symmetric functions that obey the triangle inequality. Many multidimensional applications use euclidean coordinatized space with metrics such as distance. 2.2 Spatial Data Model and Query Language A spatial data model <ref> [25, 35] </ref> is a type of data-abstraction that hides the details of data-storage. There are two common models of spatial information: field-based and object-based. The field-based model treats spatial information such as altitude, rainfall and temperature as a collection of spatial functions transforming a space-partition to an attribute domain.
Reference: [26] <author> S. Shekhar, Andrew Fetterer, and Brajesh Goyal. </author> <title> Materialization Trade-Offs in Hierarchical Shortest Path Algorithms. </title> <booktitle> In Advances in Spatial Databases, 5th International Symposium, SSD'97, Proceedings. Lecture Notes in Computer Science, </booktitle> <volume> Vol. 1262, </volume> <publisher> Springer, ISBN 3-540-632238-7, </publisher> <pages> pages 94-111, </pages> <year> 1997. </year>
Reference-contexts: Other interesting developments include hierarchical algorithms for shortest path computation [14] and view materialization <ref> [26] </ref>. 3 Research Needs Spatial databases are being used for an increasing number of new applications, such as Intelligent Transportation Systems, NASA's Earth Observation System, Multimedia Information Systems (MMIS) and Data Warehouses.
Reference: [27] <author> S. Shekhar and D-R. Liu. </author> <title> A Connectivity-Clustered Access Method for Networks and Network Computation. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 9(1) </volume> <pages> 102-119, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: Several mappings, none of them ideal, have been proposed to accomplish this. The most prominent ones include row-order, z-order and the Hilbert-curve (Figure 5). Metric clustering techniques use the notion of distance to group nearest neighbors together in a metric space. Topological clustering methods like connectivity-clustered access methods <ref> [27] </ref> use the min-cut partitioning of a graph representation to efficiently support graph traversal operations. The physical organization of files can be supplemented with indices, which are data-structures to improve the performance of search operations.
Reference: [28] <author> S. Shekhar, S. Ravada, V. Kumar, D. Chubb, and G. Turner. </author> <title> Parallelizing a GIS on a Shared Address Space Architecture. </title> <journal> IEEE Computer, </journal> <volume> 29(12), </volume> <month> December </month> <year> 1996. </year>
Reference-contexts: Representative results include those from the Sequoia 2000 project [30]. High-performance spatial applications such as flight simulators with geographic accuracy have triggered the development of new parallel formalizations for the range query and the spatial join query, including declustering methods and dynamic-load balancing techniques for multi-dimensional spatial data <ref> [28, 19] </ref>. Other interesting developments include hierarchical algorithms for shortest path computation [14] and view materialization [26]. 3 Research Needs Spatial databases are being used for an increasing number of new applications, such as Intelligent Transportation Systems, NASA's Earth Observation System, Multimedia Information Systems (MMIS) and Data Warehouses.
Reference: [29] <author> Shashi Shekhar and X. Liu. </author> <title> Direction as a spatial object. </title> <booktitle> In ACM GIS Workshop[Accepted], </booktitle> <address> Maryland, </address> <month> November </month> <year> 1998. </year> <note> Also available at http://www.cs.umn.edu/Research/shashi-group/paper list.html. </note>
Reference-contexts: The OGIS specification alluded to in Section 2.2 is confined to topological operators [8] and more work is needed to incorporate relationships which involve directional <ref> [29] </ref> and metric properties (see Table 2 for examples).
Reference: [30] <author> M. Stonebraker, J. Frew, and J. Dozier. </author> <title> The Sequouia 2000 Storage Benchmark. </title> <booktitle> In Proceedings of ACM SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 2-11, </pages> <address> Washington D.C., </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Commercial examples of spatial database management include Informix's spatial data-blades (i.e. 2D, 3D, Geodetic), Oracle's Universal server with either Spatial Data Option or Spatial Data Cartridge and ESRI's Spatial Data Engine (SDE). Research prototype examples of spatial database management systems include spatial datablades with Postgres <ref> [30] </ref>, GeO2, and Paradise [9]. The functionalities provided by these systems include a set of spatial data types such as a point, line-segment and polygon, and a set of spatial operations such as inside, intersection, and distance. <p> This has prompted new research in database-file design for storage on tertiary storage devices such as juke-boxes. Representative results include those from the Sequoia 2000 project <ref> [30] </ref>. High-performance spatial applications such as flight simulators with geographic accuracy have triggered the development of new parallel formalizations for the range query and the spatial join query, including declustering methods and dynamic-load balancing techniques for multi-dimensional spatial data [28, 19]. <p> The R-link tree [16] is among the few approaches available for concurrency control on the R-tree. New approaches for concurrency-control techniques are needed for other spatial indices. The data volume of emerging spatial applications such as NASA's EOS is among the highest of any database application. Sequoia 2000 <ref> [30] </ref> provides an approach towards tertiary storage files and indices. Other approaches for managing databases on tertiary storage need to be investigated. 3.5 Other Other research needs include benchmarking, work-flow modeling, and the visual presentation of results. The Sequoia 2000 [30] benchmark characterizes the data and queries in Earth Science applications. <p> Sequoia 2000 <ref> [30] </ref> provides an approach towards tertiary storage files and indices. Other approaches for managing databases on tertiary storage need to be investigated. 3.5 Other Other research needs include benchmarking, work-flow modeling, and the visual presentation of results. The Sequoia 2000 [30] benchmark characterizes the data and queries in Earth Science applications. The performance of loading data, raster queries, spatial selection, spatial joins, and recursion is addressed in 11 benchmark queries. A few more are provided in the Paradise system [9].
Reference: [31] <author> M. Stonebraker and G. Kennitz. </author> <title> POSTGRES Next-Generation Database Management System. </title> <journal> Communication of the ACM, </journal> <volume> 34(10) </volume> <pages> 78-92, </pages> <year> 1993. </year>
Reference-contexts: In this paper, we focus the discussion of spatial databases in the context of the object-relational <ref> [6, 32, 31] </ref> databases, which provide extensibility to many components of traditional databases to support new application domains. These and other important issues including architectural options, Raster DBMS and Network spaces are covered in detail in our forthcoming book [24].
Reference: [32] <author> M. Stonebreaker and D. Moore. </author> <title> Object Relational DBMSs: The Next Great Wave. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year>
Reference-contexts: The spatial types and operations may be made a part of a query language such as SQL, which allows spatial querying when combined with an object-relational database management system <ref> [6, 32] </ref>. The performance enhancement provided by these systems includes a multi-dimensional spatial index and algorithms for spatial access methods, spatial range queries and spatial joins. Spatial indexing with concurrency control may be implemented in the object-relational server for performance reasons. <p> In this paper, we focus the discussion of spatial databases in the context of the object-relational <ref> [6, 32, 31] </ref> databases, which provide extensibility to many components of traditional databases to support new application domains. These and other important issues including architectural options, Raster DBMS and Network spaces are covered in detail in our forthcoming book [24].
Reference: [33] <author> C.D. Tomlin. </author> <title> Geographic Information systems and Cartographic Modeling. </title> <address> Englewood Cliffs, NJ:Prentice-Hall, </address> <year> 1990. </year>
Reference-contexts: The OGIS specification is confined to topological and metric operations on vector data types. Other interesting classes of operations are network, direction, dynamic and the field operations of focal, local and zonal (see Table 2). While standards for field based raster data types are still emerging, Map Algebra <ref> [33] </ref>, specifically designed for cartographic modeling and RaSQL, based on Image Algebra [3], for general multi-dimensional discrete objects (satellite images, X-rays, etc.), are important milestones. 2.3 Spatial Query Processing The efficient processing of spatial queries requires both efficient representation and efficient algorithms. <p> Similarly, there is a need for developing the field data model <ref> [33] </ref> towards a field-based query language.
Reference: [34] <author> UCGIS. </author> <note> Ucgis congressional breakfast. http://urban.rutgers.edu/ucgis, 1998. </note>
Reference-contexts: The acceptance of GIS as an important tool in government decision-making is also documented <ref> [34] </ref> and military planners have embraced GIS technology at all levels of tactical, operational and strategic planning, including battlefied visualization and terrain analysis [20].
Reference: [35] <author> M.F. Worboys. </author> <title> Geographic Information Systems: A Computing Perspective. </title> <editor> Taylor and Francis, </editor> <year> 1995. </year>
Reference-contexts: 1 Introduction 1.1 Spatial Databases A spatial database <ref> [11, 15, 35] </ref> management system aims at the effective and efficient management of data related to a space such as the physical world (geography, urban planning, astronomy); parts of living organisms (anatomy of the human body); engineering design (very large scale integrated circuits, the design of an automobile or the molecular <p> The performance needs of emerging applications require not only the management of large data-sets, but also new processing strategies for spatial set-operations, field operations (e.g. slope), and network analysis (e.g. shortest-path, route-evaluation). 1 1.2 Related Work and Our Contributions Recent reports <ref> [11, 15, 35, 1] </ref> have described the accomplishments of spatial database research and have prioritized research needs. A broad survey of spatial database requirements and an overview of research results is provided by [35, 11, 1]. <p> A broad survey of spatial database requirements and an overview of research results is provided by <ref> [35, 11, 1] </ref>. Basic modeling requirements for spatial objects such as points, lines, and polygons are given in terms of their geometry, topology and object relationships (topological, directional, metric, network). Requirements are given for other user-level issues such as graphical input and output and query language support. <p> Depending on the relationships of interest, different models of space such as set-based space, topological space, euclidean space, metric space and network space can be used <ref> [35] </ref>. Set-based space uses the basic notion of elements, element-equality, sets and membership to formalize the set relationships such as set-equality, subset, union, cardinality, relation, function, and convexity. Relational and object-relational databases use this model of space. <p> Metric spaces formalize the distance relationships using positive symmetric functions that obey the triangle inequality. Many multidimensional applications use euclidean coordinatized space with metrics such as distance. 2.2 Spatial Data Model and Query Language A spatial data model <ref> [25, 35] </ref> is a type of data-abstraction that hides the details of data-storage. There are two common models of spatial information: field-based and object-based. The field-based model treats spatial information such as altitude, rainfall and temperature as a collection of spatial functions transforming a space-partition to an attribute domain.
Reference: [36] <author> Y.Theodoridis, E. Stefanakis, and T. Sellis. </author> <title> Cost models for join queries in spatial databases. </title> <booktitle> In Proceedings of the 14th International Conference on Data Engineering, </booktitle> <pages> pages 476-483, </pages> <address> Orlando, Florida, </address> <month> Feb </month> <year> 1998. </year> <month> 16 </month>
Reference-contexts: Cost models are needed to estimate the selectivity of spatial search and join operations towards comparison of execution-costs of alternative processing strategies for spatial operations during query optimization. Preliminary work in the context of the R-tree, tree-matching join, and fractal-models is promising <ref> [4, 36] </ref> , but more work is needed. Similarly, common strategies employed in traditional databases for the logical transformation step in query optimization may not be always applicable in the context of spatial databases. 11 For example consider the query (see Figure 2 (a)) first introduced in Section 2.
References-found: 36

