URL: file://ftp.cs.ucla.edu/pub/ficus/sans2.ps.gz
Refering-URL: http://ficus-www.cs.ucla.edu/project-members/reiher/available_papers.html
Root-URL: http://www.cs.ucla.edu
Title: Truffles Secure File Sharing With Minimal System Administrator Intervention  
Author: Peter Reiher Thomas Page, Jr. Gerald Popek Jeff Cook Stephen Crocker 
Address: Los Angeles, CA  Los Angeles, CA  Glenwood, MD  
Affiliation: UCLA  Trusted Information Systems  Trusted Information Systems  
Abstract: The Truffles file system supports file sharing between arbitrary users at arbitrary sites connected by a network. Truffles is an interesting example of a service of the future that will automatically allow users to collaborate with other users anywhere in the world in ways not currently possible. These services, and Truffles in particular, have the potential of greatly increasing the workload of system administrators, if the services are not designed properly. This paper describes how Truffles approaches solving its problems without unduly burdening system administrators. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Satyanarayanan, M. </author> <title> A Survey of Distributed File Systems, </title> <booktitle> Annual Review of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: In many cases, todays software requires system administrators to take explicit actions whenever such remote access is required. For instance, if a user wishes to mount another sites file system using NFS <ref> [1] </ref>, the system administrator must take a number of nontrivial actions to permit the mount. Clearly, if these services of the future are to achieve their goal of permitting instantaneously customizable user environments, the system administrator must be removed from the loop.
Reference: 2. <author> Guy, R., Heidemann, J., Mak, W., Page, T., Popek, G., andRothmeier, D., </author> <booktitle> Implementation of the Ficus Replicated File System,Proceedings of the Summer USENIX Conference, </booktitle> <year> 1990. </year>
Reference-contexts: UCLA could not use Truffles to examine any other TIS files, and TIS could not use Truffles to examine any other UCLA files. Constructing Truffles Truffles is built from two existing pieces of software. TheFicus file system provides file sharing and replication <ref> [2] </ref>. TheTIS implementation of Privacy Enhanced Mail (TIS/PEM) provides a securechannel for the setup traffic and distributes the keys used for authentication and encryption [3]. <p> THE FICUS FILE SYSTEM Ficus is a distributed file system designed to run on networks of Unixsystems, ranging from portable units and workstations to large fileservers <ref> [2] </ref>. Ficus provides high availability for read and update, utilizingan optimistic one copy availability policy. One copy availability permits access to a file even if a majority, quorum, or token are unavailable, as long as a single copy can be accessed.
Reference: 3. <author> Galvin, J. and Balenson, D. </author> <title> Security Aspects of a UNIX PEM Implementation, </title> <booktitle> Proceedings of the UNIX Security Symposium III, </booktitle> <year> 1992. </year>
Reference-contexts: Constructing Truffles Truffles is built from two existing pieces of software. TheFicus file system provides file sharing and replication [2]. TheTIS implementation of Privacy Enhanced Mail (TIS/PEM) provides a securechannel for the setup traffic and distributes the keys used for authentication and encryption <ref> [3] </ref>. <p> More complete description of the Truffles architecture requires furtherunderstanding of its major components, TIS/PEM and the Ficus file system. PEM AND TIS/PEM Privacy enhanced mail (PEM) is an Internet standard that adds certain simple security services (like message authentication, sender authentication, and message confidentiality) to regular electronic mail. (See <ref> [3] </ref>, [4], [5], [6], and [7] for details of PEMs design.) PEM authentication is done with RSA public key cryptography. A hash of themessage to be sent is encrypted with the senders private key.
Reference: 4. <author> Linn, J. </author> <title> Privacy Enhancement for Internet Electronic Mail: Part I Message Encryption and Authentication, </title> <type> DEC Technical Report, </type> <year> 1992. </year>
Reference-contexts: PEM AND TIS/PEM Privacy enhanced mail (PEM) is an Internet standard that adds certain simple security services (like message authentication, sender authentication, and message confidentiality) to regular electronic mail. (See [3], <ref> [4] </ref>, [5], [6], and [7] for details of PEMs design.) PEM authentication is done with RSA public key cryptography. A hash of themessage to be sent is encrypted with the senders private key.
Reference: 5. <author> Kent, S. </author> <title> Privacy Enhancement for Internet Electronic Mail: Part II Certificate-Based Key Management, </title> <type> BBN Communications Technical Report, </type> <year> 1992. </year>
Reference-contexts: PEM AND TIS/PEM Privacy enhanced mail (PEM) is an Internet standard that adds certain simple security services (like message authentication, sender authentication, and message confidentiality) to regular electronic mail. (See [3], [4], <ref> [5] </ref>, [6], and [7] for details of PEMs design.) PEM authentication is done with RSA public key cryptography. A hash of themessage to be sent is encrypted with the senders private key. <p> The Internet Policy Registration Authority (IPRA) is at the highest level of this hierarchy. This authority willbe managed by the Internet Society. TIS/PEM is a reference implementation of the PEM standard ([4], <ref> [5] </ref>, [6], [7]), developed by Trusted Information Systems. It isUNIX based, and runs on a variety of platforms. Figure 4 showsan architectural view of TIS/PEM. The PEM library serves as the primary entry pointto the system by electronic mail or other services.
Reference: 6. <author> Balenson, D. </author> <title> Privacy Enhancement for Internet Electronic Mail: Part III Algorithms, Modes, and Identifiers, </title> <note> Trusted Information Systems Technical Report, </note> <year> 1992. </year>
Reference-contexts: PEM AND TIS/PEM Privacy enhanced mail (PEM) is an Internet standard that adds certain simple security services (like message authentication, sender authentication, and message confidentiality) to regular electronic mail. (See [3], [4], [5], <ref> [6] </ref>, and [7] for details of PEMs design.) PEM authentication is done with RSA public key cryptography. A hash of themessage to be sent is encrypted with the senders private key. <p> The Internet Policy Registration Authority (IPRA) is at the highest level of this hierarchy. This authority willbe managed by the Internet Society. TIS/PEM is a reference implementation of the PEM standard ([4], [5], <ref> [6] </ref>, [7]), developed by Trusted Information Systems. It isUNIX based, and runs on a variety of platforms. Figure 4 showsan architectural view of TIS/PEM. The PEM library serves as the primary entry pointto the system by electronic mail or other services.
Reference: 7. <author> Kaliski, B. </author> <title> Privacy Enhancement for Internet Electronic Mail: Part IV Key Certification and Related Services, RSA Data Security, Inc. </title> <type> Technical Report, </type> <year> 1992. </year>
Reference-contexts: PEM AND TIS/PEM Privacy enhanced mail (PEM) is an Internet standard that adds certain simple security services (like message authentication, sender authentication, and message confidentiality) to regular electronic mail. (See [3], [4], [5], [6], and <ref> [7] </ref> for details of PEMs design.) PEM authentication is done with RSA public key cryptography. A hash of themessage to be sent is encrypted with the senders private key. <p> The Internet Policy Registration Authority (IPRA) is at the highest level of this hierarchy. This authority willbe managed by the Internet Society. TIS/PEM is a reference implementation of the PEM standard ([4], [5], [6], <ref> [7] </ref>), developed by Trusted Information Systems. It isUNIX based, and runs on a variety of platforms. Figure 4 showsan architectural view of TIS/PEM. The PEM library serves as the primary entry pointto the system by electronic mail or other services.
Reference: 8. <author> Page, T., Popek, G., and Guy, R., </author> <title> Stackable Layers: An ObjectOriented Approach to Distributed File System Architecture,IEEE Workshop on Object Orientation in Operating Systems, </title> <year> 1990. </year>
Reference-contexts: This modular architecture permits replication toco-exist with other independently implemented extended filing features. In addition to running on top of stackable file systems, Ficus is built using stackable layers <ref> [8] </ref>. The stackable layers approach to file system design permits adding functionality to an existing file system merely by writing the new functionality intoa new layer of code. This code is placed on top of the existing layers,providing a compatible interface to users, while simultaneously makingthe new functionality available.
Reference: 9. <author> Reiher, P., Page, T., Popek, G., Cook, J., and Crocker, S., </author> <title> Truffles A Secure Service For Widespread File Sharing, </title> <booktitle> Proceedings of the PSRG Workshop, </booktitle> <month> February, </month> <year> 1993. </year>
Reference-contexts: Even those Trojan horse programs, however, will not be given root privileges when they are run, limiting the damage that they can do. A somewhat more detailed description of how Truffles handles some security issues can be found in <ref> [9] </ref>. System Administrator Control of Truffles System administrators need to maintain control of file sharing on the sites they handle.
Reference: 10. <author> Rifkin, A., Forbes, M., Hamilton, R., Sabrio, M., Suryakanta, S. andYueh, K. </author> <title> RFS Architectural Overview, </title> <booktitle> Proceedings of the Summer USENIXConference, </booktitle> <year> 1986. </year>
Reference-contexts: There is a similar problem when the system maps from a UID to a login name, as itdoes when a user wants to display the ownership of a file. This problem has been recognized before in other distributed file services,such as RFS <ref> [10] </ref>. Their solution was to map UIDs from remote machinesto UIDs on local machines.
Reference: 11. <author> Sandberg, R., Goldberg, D., Kleiman, S., Walsh, D., and Lyon, </author> <title> B.,Design and Implementation of the Sun Network Filesystem, </title> <booktitle> UsenixConference Proceedings, </booktitle> <month> Summer </month> <year> 1985. </year>
Reference-contexts: Truffles will not maintain logs of all activity in a shared volume, however. RELATED WORK Truffles is basically a system for sharing files across machine boundaries.The primary related work is other file services with the same goal.One obvious effort is NFS <ref> [11] </ref>. In fact, Trufflesuses a modified version of NFS as a transport layer. However, NFS has certain limitationsthat Truffles does not have. Setting up an NFS relationship is a heavyweightoperation, requiring substantial system administrator intervention on bothsides.
Reference: 12. <author> Callaghan, B. and Lyon, T. </author> <booktitle> The Automounter, Proceedings ofthe Winter Usenix Conference, </booktitle> <year> 1989. </year>
Reference-contexts: Also, NFS currently provides little security (though its securitywill be improved in the near future). In its original version, NFS did not provide any form of replication service. A subsequent version has provideda form of replication through automounting, but this replication methoddoes not automatically propagate updates <ref> [12] </ref>, making it more suitable forread-only files (like manual pages) than general file usage. NFS lacks a protocol for automatically setting up the sharing relationship, as well. Other related systems include the Andrew File System and RFS.
Reference: 13. <author> Satyanarayanan, M., </author> <title> Integrating Security In a Large DistributedSystem, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 7, No. 3, </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: NFS lacks a protocol for automatically setting up the sharing relationship, as well. Other related systems include the Andrew File System and RFS. The AndrewFile System <ref> [13] </ref> is meant to work in a rather different environment than Truffles. The Andrew File System consists of a distributed collection of servers (known as Vice) servicing a much larger numbers of workstations, each of which runs software known as Virtue.
Reference: 14. <author> Popek, G. and Walker, B., </author> <title> The LOCUS Distributed SystemArchitecture, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1985. </year>
Reference-contexts: The Locus Operating System supported replicated files with automaticupdate and recovery mechanisms <ref> [14] </ref>. However, Locus ran in a single administrative domain, with all sites in close cooperation. While possible for a relatively small set of machines, this solution cannot apply to the broader case of sharing files with arbitrary users at other sites.
Reference: 15. <author> Steiner, J., Neuman, C., and Schiller, J., </author> <title> Kerberos: An AuthenticationService for Open Network Systems, </title> <booktitle> Usenix Conference Proceedings, </booktitle> <address> Winter1988. </address>
Reference-contexts: Also, since Locus typically ran within a local area network, rather than across long haul lines, and since a single administrative authority controlled the entire system, the security issues that Truffles deals with were not considerations in the Locus system. Kerberos <ref> [15] </ref> offers an authentication service that has some overlap withTIS/PEM. Kerberos is specifically designed to authenticate variousentities to each other securely. In a Kerberos system, a Kerberos serverstores a database of authentication information.
Reference: 16. <author> Champine, G., Geer, D., and Ruh, W. </author> <title> Project Athena as a Distributed Computer System,IEEE Computer, </title> <month> Sept. </month> <year> 1990. </year>
References-found: 16

