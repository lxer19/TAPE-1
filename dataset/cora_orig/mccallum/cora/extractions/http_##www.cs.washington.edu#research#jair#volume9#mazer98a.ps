URL: http://www.cs.washington.edu/research/jair/volume9/mazer98a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/contents/v9.html
Root-URL: http://www.cs.washington.edu
Email: Emmanuel.Mazer@imag.fr  jmal@mail.udlap.mx  Pierre.Bessiere@imag.fr  
Title: The Ariadne's Clew Algorithm  
Author: Emmanuel Mazer Juan Manuel Ahuactzin Pierre Bessiere 
Address: 665 Avenue de L'Europe 38330 Montbonnot, France  72820, Mexico  46 Avenue Felix Viallet 38000 Grenoble, France  
Affiliation: Laboratoire GRAVIR, INRIA  Depto. de Ing. en Sistemas Computationales Unversidad de las Americas Puebla, Cholula, Puebla  Laboratoire LEIBNIZ,  
Note: Journal of Artificial Intelligence Research 9 (1998) 295-316 Submitted 9/97; published 11/98  
Abstract: We present a new approach to path planning, called the "Ariadne's clew algorithm". It is designed to find paths in high-dimensional continuous spaces and applies to robots with many degrees of freedom in static, as well as dynamic environments | ones where obstacles may move. The Ariadne's clew algorithm comprises two sub-algorithms, called search and explore, applied in an interleaved manner. explore builds a representation of the accessible space while search looks for the target. Both are posed as optimization problems. We describe a real implementation of the algorithm to plan paths for a six degrees of freedom arm in a dynamic environment where another six degrees of freedom arm is used as a moving obstacle. Experimental results show that a path is found in about one second without any pre-processing. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ahuactzin, J., Gupta, K., & Mazer, E. </author> <year> (1998). </year> <title> Manipulation Planning for Redundant Robots: A Practical Approach. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 17 (7), </volume> <pages> 731-747. </pages>
Reference-contexts: Several planners have been implemented in this way: a fine motion planner (De la Rosa, Laugier, & Najera, 1996), two motion planners for holonomic and non-holonomic mobile robots (Scheuer & Fraichard, 1997), a reorientation planner for an articulated hand (Gupta, 1995), a planner for grasping and regrasping <ref> (Ahuactzin, Gupta, & Mazer, 1998) </ref>, and a planner for a robotic arm placed in the steam generator of a nuclear plant (McLean & Mazon, 1996). Adapting the algorithm to a new application is, therefore, clearly a very easy task.
Reference: <author> Ahuactzin, J., Mazer, E., Bessiere, P., & Talbi, E. </author> <year> (1992). </year> <title> Using Genetic Algorithms for Robot Motion Planning. </title> <booktitle> In Proceedings of the 1992 European Conference on Artificial Intelligence, </booktitle> <pages> pp. 671-675. </pages> <note> 314 The Ariadne's clew algorithm Barraquand, </note> <author> J., & Latombe, J. </author> <year> (1990). </year> <title> A Monte Carlo Algorithm for Path Planning with Many Degrees of Freedom. </title> <booktitle> In Proceedings of the 1990 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 1712-1717. </pages>
Reference-contexts: As in the previous sections, it is also possible to design simple deceptive environments that will make this kind of algorithm slower than a pure random approach. The work of Lin, Xiao, and Michalewicz (1994) is similar to our approach. As in an early version of our algorithm <ref> (Ahuactzin, Mazer, Bessiere, & Talbi, 1992) </ref>, genetic algorithms are used to carry out optimization in the trajectory space. Trajectories are parameterized using the coordinates of intermediary via-points. An evolutionary algorithm is used to optimize a cost function based on the length of the trajectory and the forbidden region crossed.
Reference: <author> Bessiere, P., Talbi, E., Ahuactzin, J., & Mazer, E. </author> <year> (1996). </year> <title> Un Algorithme Genetique Parallelle pour l'Optimisation. </title> <journal> Technique et Science Informatique, </journal> <volume> 15 (8), </volume> <pages> 1105-1130. </pages>
Reference-contexts: This is exactly the case here. The trajectory space is huge but there are, barring exceptional cases, numerous acceptable paths going from ^q ffi to ^q * without collision. 306 The Ariadne's clew algorithm 2. Genetic algorithms, unlike a number of the other optimization techniques <ref> (Bessiere, Talbi, Ahuactzin, & Mazer, 1996) </ref>, are very easy to implement on parallel architectures. <p> We have previously developed a parallel genetic algorithm (pga) and we have already had significant experience using it (Talbi, 1993). 3. pga, unlike most parallel programs, shows linear speed-up (when you double the number of processors you reduce the computation time by half) and even super-linear speed-up under certain circumstances <ref> (Talbi & Bessiere, 1996) </ref>. 4.1 Parallel Genetic Algorithm Genetic algorithms are stochastic optimization techniques introduced by Holland (1975) twenty years ago.
Reference: <author> Brooks, R. </author> <year> (1983). </year> <title> Solving the Find-Path Problem by Good Representation of the Free Space. </title> <journal> IEEE Transactions on System, Man and Cybernetics, </journal> <volume> 13 (4), </volume> <pages> 190-197. </pages>
Reference-contexts: Given an initial and a final position of the robot arm, the problem is to find a set of motions that will lead the robot to move between the two positions without colliding with the obstacles. To drive the robot amidst the obstacles, early methods <ref> (Brooks, 1983) </ref> directly used the 3d cad models of the robot and of the obstacles to find a solution, i.e., they considered the "operational 3d space". In this space, the path planning problem consists of finding the movements of a complex 3d structure (the robot) in a cluttered 3d space.
Reference: <author> Canny, J. </author> <year> (1988). </year> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press. </publisher>
Reference-contexts: A simple version of the problem, that of planning the motion of a point robot among 3-dimensional polyhedral obstacles, has been proved to be np-complete <ref> (Canny, 1988) </ref>. Generally speaking, the complexity of the problem is exponential in the number of degrees of freedom (dof) of the robot, and polynomial in the number of obstacles in the environment. <p> Unfortunately, computing the retraction or the decomposition graph is an np-complete problem: the complexity of this task grows exponentially as the number of dof increases <ref> (Canny, 1988) </ref>. Consequently, these planners are used only for robots having a limited number (three or four) of dof.
Reference: <author> Davidor, Y. </author> <year> (1989). </year> <title> Analogous Crossover. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <pages> pp. 98-103. </pages>
Reference-contexts: Select a pair of elements randomly according to this probability distribution. 3. Reproduction: Produce a new element from each pair using "genetic" operators. 4. Replacement: Replace the elements of the starting population by better new ele ments produced in step 3. Many genetic operators <ref> (Davidor, 1989) </ref> are available. However, the more commonly used are the mutation and the cross-over operators. The mutation operator consists of randomly flipping some bits of an element of the population.
Reference: <author> De la Rosa, F., Laugier, C., & Najera, J. </author> <year> (1996). </year> <title> Robust Path Planning in the Plane. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 12 (3), </volume> <pages> 347-352. </pages>
Reference-contexts: Basically, the main thing that needs to be changed in the algorithm is the distance d used in the evaluation functions of the two optimization problems. Several planners have been implemented in this way: a fine motion planner <ref> (De la Rosa, Laugier, & Najera, 1996) </ref>, two motion planners for holonomic and non-holonomic mobile robots (Scheuer & Fraichard, 1997), a reorientation planner for an articulated hand (Gupta, 1995), a planner for grasping and regrasping (Ahuactzin, Gupta, & Mazer, 1998), and a planner for a robotic arm placed in the steam
Reference: <author> Falkenauer, E., & Bouffouix, S. </author> <year> (1991). </year> <title> A Genetic Algorithm for Job Shop. </title> <booktitle> In Proceedings of the 1991 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 824-829. </pages>
Reference: <author> Falkenauer, E., & Delchambre, A. </author> <year> (1992). </year> <title> A Genetic Algorithm for Bin Packing and Line Balancing. </title> <booktitle> In Proceedings of the 1992 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 1186-1192. </pages>
Reference: <author> Faverjon, B., & Tournassoud, P. </author> <year> (1987). </year> <title> A Local Based Approach for Path Planning of Manipulators with a High Number of Degrees of Freedom. </title> <booktitle> In Proceedings of the 1987 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 1152-1159. </pages>
Reference-contexts: To do this, the local planners are guided by the gradient of a cost function (usually the Euclidean distance to the goal) and take into account the constraints introduced by the obstacles to avoid them <ref> (Faverjon & Tournassoud, 1987) </ref>. Since the path planning problem is np-complete, knowing the cost function, it is always possible to design a deceptive environment where the method will get trapped in a local minimum. <p> However, it was possible to follow two research tracks in combination. First, we could use collision checking methods that allow access to the pairs in collision in a logarithmic 313 Mazer, Ahuactzin, & Bessi ere time <ref> (Faverjon & Tournassoud, 1987) </ref>. Second, we could preserve part of the landmark graph when the environment is changing (McLean & Mazon, 1996). 5.2 Generality The Ariadne's clew algorithm is general in the sense that it may be used for numerous and very different applications in robotics.
Reference: <author> Ferbach, P. </author> <year> (1996). </year> <institution> Contribution a la Planification de Trajectoires. Rapport de Recherche EDF-DER HP-28/96/026, Direction des Etudes et Recherches EDF. </institution>
Reference-contexts: This curve is one solution to this particular path planning problem. A recent trend in the field is to consider the "trajectory space" <ref> (Ferbach, 1996) </ref> where a whole path is represented by a single point. The coordinates of this point are the values of the parameters defining the successive movements of the robot. For instance, the list of successive commands sent to the robot controller indeed encode an entire path of the robot.
Reference: <author> Gupta, K. </author> <year> (1995). </year> <title> Motion Planning for Re-Orientation Using Finger Tracking: </title> <booktitle> Landmarks in SO(3) fi !. In Proceedings of the 1995 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 446-451. </pages>
Reference-contexts: Several planners have been implemented in this way: a fine motion planner (De la Rosa, Laugier, & Najera, 1996), two motion planners for holonomic and non-holonomic mobile robots (Scheuer & Fraichard, 1997), a reorientation planner for an articulated hand <ref> (Gupta, 1995) </ref>, a planner for grasping and regrasping (Ahuactzin, Gupta, & Mazer, 1998), and a planner for a robotic arm placed in the steam generator of a nuclear plant (McLean & Mazon, 1996). Adapting the algorithm to a new application is, therefore, clearly a very easy task.
Reference: <author> Hayward, V., Daneshmend, L., & Hayati, S. </author> <year> (1988). </year> <title> An Overview of KALI: A System to Program and Control Cooperative Manipulators. </title> <booktitle> In Proceedings of the Fourth International Conference on Advanced Robotics, </booktitle> <pages> pp. 236-240. </pages>
Reference-contexts: Figure 11 represents our parallel implementation of the Ariadne's clew algorithm and Figure 12 shows how we have embedded this architecture into our experimental setup. A cad system (act) is used to model the scene with the two robots. The robots are under the control of kali <ref> (Hayward, Daneshmend, & Hayati, 1988) </ref>. First, a simplified geometric model of the scene is downloaded into the memory of the transputers. Then, a Silicon Graphics workstation works as a global controller and loops over the following steps: 1. Generate and execute a legal random motion for robot B. 2.
Reference: <author> Holland, J. </author> <year> (1975). </year> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michigan Press. </publisher>
Reference: <author> Hwang, Y., & Ahuja, N. </author> <year> (1992). </year> <title> Gross Motion Planning: A Survey. </title> <journal> ACM Computing Surveys, </journal> <volume> 24 (3). </volume>
Reference: <author> Kavraki, L., Svestka, P., Latombe, J., & Overmars, M. </author> <year> (1996). </year> <title> Probabilistic Roadmaps for Path Planning in High-Dimensional Configuration Spaces. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 14 (4), </volume> <pages> 566-580. </pages>
Reference-contexts: We are not aware of any other methods capable of such performance. To the best of our knowledge, currently implemented planners would take a number of seconds (ten) to place a set of landmarks on a 2d example for a robot with five dof <ref> (Kavraki et al., 1996) </ref>. Despite the fact that finding a general purpose planning technique for real industrial application is a very difficult problem, we believe that the Ariadne's clew algorithm provides an effective approach to such problems.
Reference: <author> Lawrence, D. (Ed.). </author> <year> (1991). </year> <title> Handbook of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold. </publisher> <address> 315 Mazer, </address> <note> Ahuactzin, </note> & <author> Bessi ere Lin, H., Xiao, J., & Michalewicz, Z. </author> <year> (1994). </year> <title> Evolutionary Navigator for a Mobile Robot. </title> <booktitle> In Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 2199-2004. </pages>
Reference: <author> Lozano-Perez, T. </author> <year> (1987). </year> <title> A Simple Motion-Planning Algorithm for General Robot Manipulators. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 3 (3), </volume> <pages> 224-238. </pages>
Reference: <author> McLean, A., & Mazon, T. </author> <year> (1996). </year> <title> Incremental Roadmaps and Global Path Planning in Evolving Industrial Environments. </title> <booktitle> In Proceedings of the 1996 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pp. 101-106. </pages>
Reference-contexts: First, we could use collision checking methods that allow access to the pairs in collision in a logarithmic 313 Mazer, Ahuactzin, & Bessi ere time (Faverjon & Tournassoud, 1987). Second, we could preserve part of the landmark graph when the environment is changing <ref> (McLean & Mazon, 1996) </ref>. 5.2 Generality The Ariadne's clew algorithm is general in the sense that it may be used for numerous and very different applications in robotics. <p> 1996), two motion planners for holonomic and non-holonomic mobile robots (Scheuer & Fraichard, 1997), a reorientation planner for an articulated hand (Gupta, 1995), a planner for grasping and regrasping (Ahuactzin, Gupta, & Mazer, 1998), and a planner for a robotic arm placed in the steam generator of a nuclear plant <ref> (McLean & Mazon, 1996) </ref>. Adapting the algorithm to a new application is, therefore, clearly a very easy task. For instance, the application to path planning for the non-holonomic trailer was developed in three days.
Reference: <author> Meygret, A., & Levine, M. </author> <year> (1992). </year> <title> Extraction de Primitives Geometriques: Utilisation d'un Algorithme Genetique. </title> <institution> Rapport Annuel, Center for Intelligent Machines, McGill University, Montreal. </institution>
Reference: <author> Overmars, M. </author> <year> (1992). </year> <title> A Random Approach to Motion Planning. </title> <type> Technical Report RUU-CS-92-32, </type> <institution> Department of Computer Science, Utrecht University. </institution>
Reference: <author> Robertson, G. </author> <year> (1987). </year> <title> Parallel Implementation of Genetic Algorithms in a Classifier System. </title>
Reference: <editor> In Davis, L. (Ed.), </editor> <title> Genetic Algorithms and Simulated Annealing. </title> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference: <author> Scheuer, A., & Fraichard, T. </author> <year> (1997). </year> <title> Continuous-Curvature Path Planning for Car-Like Vehicles. </title> <booktitle> In Proceedings of the IEEE/RSJ International Conference on Intelligent Robots and Systems, </booktitle> <pages> pp. 997-1003. </pages>
Reference-contexts: Several planners have been implemented in this way: a fine motion planner (De la Rosa, Laugier, & Najera, 1996), two motion planners for holonomic and non-holonomic mobile robots <ref> (Scheuer & Fraichard, 1997) </ref>, a reorientation planner for an articulated hand (Gupta, 1995), a planner for grasping and regrasping (Ahuactzin, Gupta, & Mazer, 1998), and a planner for a robotic arm placed in the steam generator of a nuclear plant (McLean & Mazon, 1996).
Reference: <author> Talbi, E. </author> <year> (1993). </year> <title> Allocation de Processus sur les Architectures Paralleles a Memoir Dis-tribuee. </title> <type> Ph.D. thesis, </type> <institution> Institut National Polytechnique de Grenoble France. </institution>
Reference-contexts: Genetic algorithms, unlike a number of the other optimization techniques (Bessiere, Talbi, Ahuactzin, & Mazer, 1996), are very easy to implement on parallel architectures. We have previously developed a parallel genetic algorithm (pga) and we have already had significant experience using it <ref> (Talbi, 1993) </ref>. 3. pga, unlike most parallel programs, shows linear speed-up (when you double the number of processors you reduce the computation time by half) and even super-linear speed-up under certain circumstances (Talbi & Bessiere, 1996). 4.1 Parallel Genetic Algorithm Genetic algorithms are stochastic optimization techniques introduced by Holland (1975) twenty <p> intermediate string to get the final string. 307 Mazer, Ahuactzin, & Bessi ere k PARENTS Cross-over NEW ELEMENTS 4.1.2 Principle of the Parallel Genetic Algorithm (pga) There are many parallel versions of genetic algorithms: the standard parallel version (Robert-son, 1987), the decomposition version (Tanese, 1987) and the massively parallel version <ref> (Talbi, 1993) </ref>. We chose this last method. The main idea is to allocate one element of the population for each processor so that steps 1, 3, and 4 can be executed in parallel.
Reference: <author> Talbi, E., & Bessiere, P. </author> <year> (1996). </year> <title> A Parallel Genetic Algorithm Applied to the Mapping Problem. </title> <editor> In Astfalk, G. (Ed.), </editor> <booktitle> Applications on Advanced Architecture Computers. </booktitle> <publisher> SIAM. </publisher>
Reference-contexts: This is exactly the case here. The trajectory space is huge but there are, barring exceptional cases, numerous acceptable paths going from ^q ffi to ^q * without collision. 306 The Ariadne's clew algorithm 2. Genetic algorithms, unlike a number of the other optimization techniques <ref> (Bessiere, Talbi, Ahuactzin, & Mazer, 1996) </ref>, are very easy to implement on parallel architectures. <p> We have previously developed a parallel genetic algorithm (pga) and we have already had significant experience using it (Talbi, 1993). 3. pga, unlike most parallel programs, shows linear speed-up (when you double the number of processors you reduce the computation time by half) and even super-linear speed-up under certain circumstances <ref> (Talbi & Bessiere, 1996) </ref>. 4.1 Parallel Genetic Algorithm Genetic algorithms are stochastic optimization techniques introduced by Holland (1975) twenty years ago.
Reference: <author> Tanese, R. </author> <year> (1987). </year> <title> Parallel Genetic Algorithm for a Hypercube. </title> <booktitle> In Proceedings of the Second International Conference on Genetic Algorithms, </booktitle> <pages> pp. 177-183. </pages>
Reference-contexts: the mutation operator is used on this intermediate string to get the final string. 307 Mazer, Ahuactzin, & Bessi ere k PARENTS Cross-over NEW ELEMENTS 4.1.2 Principle of the Parallel Genetic Algorithm (pga) There are many parallel versions of genetic algorithms: the standard parallel version (Robert-son, 1987), the decomposition version <ref> (Tanese, 1987) </ref> and the massively parallel version (Talbi, 1993). We chose this last method. The main idea is to allocate one element of the population for each processor so that steps 1, 3, and 4 can be executed in parallel.
Reference: <author> Xiao, J., Michalewicz, Z., & Zhang, L. </author> <year> (1996). </year> <title> Evolutionary Planner/Navigator: Operator Performance and Self-Tuning. </title> <booktitle> In Proceedings of 1996 IEEE International Conference on Evolutionary Computation, </booktitle> <pages> pp. 336-371. 316 </pages>
Reference-contexts: An evolutionary algorithm is used to optimize a cost function based on the length of the trajectory and the forbidden region crossed. The standard operators of the genetic algorithms have been modified and later extended to produce a large variety of paths <ref> (Xiao, Michalewicz, & Zhang, 1996) </ref>. The number of intermediary via-points is fixed and chosen using an heuristic. Given this number, nothing prevents to design a deceptive problem which solution will require more intermediary points, leading the algorithm to fail while one solution exists. 3.
References-found: 28

