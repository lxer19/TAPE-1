URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1996/tr-96-039.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1996.html
Root-URL: http://www.icsi.berkeley.edu
Title: System Design by Constraint Adaptation and Differential Evolution  
Author: by Rainer Storn ) 
Note: On leave from Siemens AG, ZFE T SN 2, Otto-Hahn-Ring 6, D-81739  
Address: 1947 Center Street, Berkeley, CA 94704-1198, Suite 600,  Germany.  
Affiliation: 1) International Computer Science Institute,  Muenchen,  
Pubnum: TR-96-039  
Email: Email: storn@icsi.berkeley.edu.  Email:rainer.storn@zfe.siemens.de.  
Phone: Fax: 510-643-7684.  Fax: 01149-636-44577,  
Date: November 1996  
Abstract: A simple optimization procedure for constraint based problems which works without an objective function is described. The absence of an objective function makes the problem formulation particularly simple. The new method lends itself to parallel computation and is well suited for tasks where a family of solutions is required, tradeoff situations have to be dealt with or the design center has to be found. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> 16 </institution>
Reference: [1] <author> Storn, R. and Price, K., </author> <title> Differential Evolution - a simple and efficient adaptive scheme for global optimization over continuous spaces, </title> <type> Technical Report TR-95-012, ICSI. </type>
Reference-contexts: The goal in design centering is to choose the parameters such that maximum jitter is allowed and hence production yield is maximized. c) the design problem is heavily constraint based, especially if the constraints are nonlinear. Objective function approaches have to incorporate constraints via weighted penalty terms <ref> [1] </ref> which pose additional difficulties for the designers. A design approach via an objective function might also be inappropriate if a family of solutions is required. In tradeoff situations the system designers often want to have several options to choose from. <p> Constraint Adaptation by Differential Evolution (CADE) A new variant of constraint adaptation which is based on Differential Evolution (DE) <ref> [1] </ref> , [7], [8], [9], [10] provides a solution to the problems a) through c) above. <p> For the following generation G+1, new vectors are generated according to v p F p p ( ) = + - 1 2 for i = 1, 2, ... , NP with r 1 , r 2 <ref> [1, NP] </ref>, integer and mutually different as well as F real and &gt; 0. The integers r 1 and r 2 are chosen randomly and should be different from the running index i.
Reference: [2] <author> Storn, R., </author> <title> Constrained Optimization, </title> <journal> Dr. Dobb's Journal, </journal> <month> May </month> <year> 1995, </year> <pages> pp. 119 - 123. </pages>
Reference-contexts: In tradeoff situations the system designers often want to have several options to choose from. An objective function based approach, however, generally yields only one solution. 2. Constraint Adaptation An alternative approach to the design via objective functions is constraint adaptation <ref> [2] </ref>, [3] which is illustrated in Fig. 3. Instead of devising an objective function, the specifications of the design problem, in our example f 1 (x) and f 2 (x), are relaxed at the start of the design process. <p> Eventually the ROA and correspondingly the relaxed specifications are tightened such that the new nominal vector lies on the rim of the new ROA etc.. There have been several modifications and improvements to this procedure <ref> [2] </ref>, [3], yet there are still several problems inherent in the strategy described so far: a) The mean value is an inappropriate choice for the new nominal vector if it lies outside the ROA.
Reference: [3] <author> Lueder, E., </author> <title> Optimization of Circuits With a Large Number of Parameters, </title> <journal> Archiv fuer Elektr. und Uebertr., </journal> <volume> Vol. 44, Issue 2, </volume> <year> 1990, </year> <pages> pp. 131 - 138. </pages>
Reference-contexts: In tradeoff situations the system designers often want to have several options to choose from. An objective function based approach, however, generally yields only one solution. 2. Constraint Adaptation An alternative approach to the design via objective functions is constraint adaptation [2], <ref> [3] </ref> which is illustrated in Fig. 3. Instead of devising an objective function, the specifications of the design problem, in our example f 1 (x) and f 2 (x), are relaxed at the start of the design process. <p> Must-constraints have to satisfy certain values, otherwise the design task is not successful. May-constraints, however, are improved on a best effort basis only. Design techniques which make use of constraint adaptation have been around for quite some time, especially in the circuit design community, <ref> [3] </ref> ... [6]. <p> Eventually the ROA and correspondingly the relaxed specifications are tightened such that the new nominal vector lies on the rim of the new ROA etc.. There have been several modifications and improvements to this procedure [2], <ref> [3] </ref>, yet there are still several problems inherent in the strategy described so far: a) The mean value is an inappropriate choice for the new nominal vector if it lies outside the ROA. <p> CADE lends itself perfectly to parallel computation which becomes increasingly important the more expensive a single sytem evaluation gets. In circuit design, a system evaluation is often done via a SPICE simulation <ref> [3] </ref>, which can require a significant amount of computer time. Several properties of CADE are worth elaborating upon.
Reference: [4] <author> Brayton, R., Hachtel, G. and Sangiovanni-Vincentelli, A., </author> <title> A Survey of Optimization Techniques for Integrated Circuit Design, </title> <booktitle> Proc. of the IEEE 69, </booktitle> <year> 1981, </year> <pages> pp. 1334 - 1362. </pages>
Reference: [5] <author> Eckstein, T. and Lueder, E., </author> <title> Design Centering by Improved Monte Carlo Analysis of the Region Of Acceptability, </title> <booktitle> Proc. </booktitle> <address> ISCAS, San Jose, </address> <year> 1986, </year> <pages> pp. 951 - 954. </pages>
Reference: [6] <author> Moebus, D. and Lueder, E., </author> <title> Optimization of Circuits Using a Combination of Deterministic and Statistical Search, </title> <booktitle> Proc. </booktitle> <address> ISCAS, </address> <year> 1987. </year>
Reference-contexts: Must-constraints have to satisfy certain values, otherwise the design task is not successful. May-constraints, however, are improved on a best effort basis only. Design techniques which make use of constraint adaptation have been around for quite some time, especially in the circuit design community, [3] ... <ref> [6] </ref>.
Reference: [7] <author> Storn, </author> <title> Differential Evolution Design of an IIR-Filter with Requirements of Magnitude and Group Delay, </title> <booktitle> IEEE Int. Conf. Evol. Comp., ICEC'96, </booktitle> <pages> pp. 268 - 273. </pages>
Reference-contexts: Constraint Adaptation by Differential Evolution (CADE) A new variant of constraint adaptation which is based on Differential Evolution (DE) [1] , <ref> [7] </ref>, [8], [9], [10] provides a solution to the problems a) through c) above. <p> Fig. 5 shows an example of the vectors which play a part in the vector generation process. In order to increase the diversity of the new parameter vectors, crossover is introduced an example of which is depicted in fig. 6. There are several variants of crossover <ref> [7] </ref>, [8], [9], [10], one of them is to form the vector u u u u T ( , ,..., ) = (7) with u v for j n n n L p otherwise ji G ji G , , ,..., + = % K K 1 1 1 1 where
Reference: [8] <author> Storn, R. and Price, K., </author> <title> Minimizing the Real Functions of the ICEC'96 Contest by Differential Evolution, </title> <booktitle> IEEE Int. Conf. Evol. Comp., ICEC'96, </booktitle> <pages> pp. 842 - 844. </pages>
Reference-contexts: Constraint Adaptation by Differential Evolution (CADE) A new variant of constraint adaptation which is based on Differential Evolution (DE) [1] , [7], <ref> [8] </ref>, [9], [10] provides a solution to the problems a) through c) above. <p> Fig. 5 shows an example of the vectors which play a part in the vector generation process. In order to increase the diversity of the new parameter vectors, crossover is introduced an example of which is depicted in fig. 6. There are several variants of crossover [7], <ref> [8] </ref>, [9], [10], one of them is to form the vector u u u u T ( , ,..., ) = (7) with u v for j n n n L p otherwise ji G ji G , , ,..., + = % K K 1 1 1 1 where the
Reference: [9] <author> Storn, R., </author> <title> On the Usage of Differential Evolution for Function Optimization, </title> <booktitle> NAFIPS 1996, Berkeley, </booktitle> <pages> pp. 519 - 523. </pages>
Reference-contexts: Constraint Adaptation by Differential Evolution (CADE) A new variant of constraint adaptation which is based on Differential Evolution (DE) [1] , [7], [8], <ref> [9] </ref>, [10] provides a solution to the problems a) through c) above. <p> Fig. 5 shows an example of the vectors which play a part in the vector generation process. In order to increase the diversity of the new parameter vectors, crossover is introduced an example of which is depicted in fig. 6. There are several variants of crossover [7], [8], <ref> [9] </ref>, [10], one of them is to form the vector u u u u T ( , ,..., ) = (7) with u v for j n n n L p otherwise ji G ji G , , ,..., + = % K K 1 1 1 1 where the acute
Reference: [10] <author> Price, K., </author> <title> Differential Evolution: A Fast and Simple Numerical Optimizer, </title> <booktitle> NAFIPS 1996, Berkeley, </booktitle> <pages> pp. 524 - 527. </pages>
Reference-contexts: Constraint Adaptation by Differential Evolution (CADE) A new variant of constraint adaptation which is based on Differential Evolution (DE) [1] , [7], [8], [9], <ref> [10] </ref> provides a solution to the problems a) through c) above. <p> Fig. 5 shows an example of the vectors which play a part in the vector generation process. In order to increase the diversity of the new parameter vectors, crossover is introduced an example of which is depicted in fig. 6. There are several variants of crossover [7], [8], [9], <ref> [10] </ref>, one of them is to form the vector u u u u T ( , ,..., ) = (7) with u v for j n n n L p otherwise ji G ji G , , ,..., + = % K K 1 1 1 1 where the acute brackets
Reference: [11] <institution> Storn, R., Entwurfszentrierung und Aufbau einer Schaltung mit geschalteten Kondensatoren, Semesterarbeit am Institut f. Netzwerk- und Systemtheorie der Univ. Stuttgart, </institution> <year> 1982. </year>
Reference-contexts: An example of a PCM-Lowpass is shown in fig. 10. Fig. 10: Block diagram of the PCM-Lowpass filter. The transfer function of the SC-PCM lowpass in Fig. 10 can be written as <ref> [11] </ref> H f Vout Vin with w j f a p and j = -1 . (11) Frequency f a is the sampling frequency in use. For H2 (w) we choose f a =f a1 =128kHz and for H3 (w) f a =f a2 =32kHz. <p> For H2 (w) we choose f a =f a1 =128kHz and for H3 (w) f a =f a2 =32kHz. For the analog RC-lowpass prefilter we get H f 1 1 2 0 0 1 1 + + p In <ref> [11] </ref> it has been derived that the other partial transfer functions may be written as H w w v v v v w v v v v 12 32 12 32 132 1 2 ( ) = + + + + - + 1 6 1 6 (13) H w w <p> The design procedure fits the function into the tolerance scheme with upper constraints -1.0, 1.0292, 1.0, 0.031623- at frequencies -0,200,3600,4600- in Hz and the lower constraints -0.0, 0.97162, 0.94951, 0.90157, 0.0- at frequencies -0,300,2400,3000,3400- in Hz. If parasitic capacitances are taken into account, it can be shown <ref> [11] </ref> that, after some simplifying assumptions, the transfer functions H2 (w) and H3 (w) change into H w w v v v v w v v v v 32 12 1 132 1 32 132 12 1 1 1 32 532 12 1 132 1 32 532 132 12 1 1
References-found: 12

