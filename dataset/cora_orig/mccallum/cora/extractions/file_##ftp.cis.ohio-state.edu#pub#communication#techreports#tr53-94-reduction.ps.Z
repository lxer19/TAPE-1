URL: file://ftp.cis.ohio-state.edu/pub/communication/techreports/tr53-94-reduction.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/wormhole_pub.html
Root-URL: 
Title: Global Reduction in Wormhole k-ary n-cube Networks with Multidestination Exchange Worms  
Note: Manuscript has been submitted to International Parallel Processing Symposium (IPPS '95).  
Abstract: Dhabaleswar K. Panda Technical Report OSU-CISRC-8/94-TR53 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Barnett, S. Gupta, D. G. Payne, L. Shuler, R. van de Geijn, and J. Watts. </author> <title> Interprocessor Collective Communication Library (Intercom). </title> <booktitle> In Scalable High Performance Computing Conference, </booktitle> <pages> pages 357-364, </pages> <year> 1994. </year>
Reference-contexts: For example, with 5.0 4 microseconds communication start-up time, it will take at least 100.0 microseconds (ignoring data propagation and computation time) to perform reduction operation on 1K processors in a 32 fi 32 system. Recently it has been reported by Barnett <ref> [1] </ref> that reduction operation on 8 bytes of data on 16x32 Intel Paragon takes around 7600 microseconds using their new InterCom library. This raises question whether efficient mechanisms are possible to implement fast reduction operation.
Reference: [2] <author> M. Barnett, R. Littlefield, D. G. Payne, and R. Van de Geijn. </author> <title> Global Combine on Mesh Architectures with Wormhole Routing. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pages 156-162, </pages> <year> 1993. </year>
Reference-contexts: Hence, in this paper, without loss of generality, we identify both reduction and barrier synchronization as a single class of reduction operation. Many software schemes have been recently proposed in the literature to efficiently implement reduction <ref> [2, 9] </ref> and barrier synchronization [26] operations on wormhole-routed systems. All these schemes use multiple phases of point-to-point unicast message passing and encounter long latency due to multiple communication start-ups. Systems like Cray T3D and CM-5 use dedicated tree-based networks to provide fast global reduction and barrier synchronization.
Reference: [3] <author> R. V. Boppana, S. Chalasani, and C. S. Raghavendra. </author> <title> On Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Symposium on Parallel and Distributed Processing, </booktitle> <year> 1994. </year> <note> to appear. </note>
Reference-contexts: Hence, this model is quite general and can be used by any routing scheme. A similar but restricted method of using only row-path and column-path in e-cube meshes has also been independently proposed by Boppana, Chalasani, and Raghavendra <ref> [3] </ref>.
Reference: [4] <author> C.-M. Chiang and L. M. Ni. </author> <title> Multi-Address Encoding for Multicast. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <year> 1994. </year> <note> to appear. </note>
Reference-contexts: In this paper we use only single-dimensional paths, which always conform to e-cube, planar-adaptive [5], or fully-adaptive [10] schemes. These worms use a special bit-string encoding of multidestination addresses as proposed by Chiang and Ni in <ref> [4] </ref> to reduce the header length. <p> For a multidestination message, the header consists of multiple destinations and can span multiple flits. The sender node creates the list of destinations as an ordered list, depending on their intended order of traversal, and incorporate it into the header. There are different ways to encode these addresses <ref> [4] </ref> and these worms can have different functionality. To illustrate the concept, in this section, we use all-destination encoding format with broadcast/multicast functionality. Later on, we explain about bit-string encoding. In the next section, we introduce alternative multidestination worm types like gather and exchange. <p> As the number of destination increases, such encoding makes the header quite long and increases the message size. Hence, it defeats the advantage of multidestination message passing. To alleviate this problem a bit-string encoding scheme has been proposed by Chiang and Ni <ref> [4] </ref>. For example, a message by P0 to cover processors P1, P2, and P5 in a 6-processor linear array system can have an address as 100110. As the message moves ahead, the appropriate bits are turned off by the intermediate routers.
Reference: [5] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-Adaptive Routing: Low-Cost Adaptive Networks for Multiprocessors. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: The multidestination wormhole mechanism, introduced by us recently in [23] for efficient broadcasting and multicasting support, allows a message to propagate through paths conforming to the base-routing of a system. In this paper we use only single-dimensional paths, which always conform to e-cube, planar-adaptive <ref> [5] </ref>, or fully-adaptive [10] schemes. These worms use a special bit-string encoding of multidestination addresses as proposed by Chiang and Ni in [4] to reduce the header length.
Reference: [6] <author> Cray Research, Inc. </author> <title> Cray T3D System Architecture Overview, </title> <year> 1993. </year>
Reference-contexts: The component t s is the communication startup time, t p is the propagation time per hop, and d is the distance between the source and destination processors in the communication phase, and l is the data size. Since t s t p under the current technology <ref> [6, 15, 25] </ref>, the cost of each phase is dominated by t s and the overall cost is / to the number of communication phases. This makes the global reduction cost quite high. <p> After reaching R4, this message is not consumed by processor P4 because the bit-string is still non-zero. It is stored into a buffer at the router interface R4. Similar to the concept of buffers/registers in a control network <ref> [6] </ref>, each router interface consists of a set of buffers.
Reference: [7] <author> W. J. Dally. </author> <title> Virtual Channel Flow Control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pages 194-205, </pages> <month> Mar </month> <year> 1992. </year>
Reference-contexts: With a closer look, it can be seen that the above two-step procedure has remain unchanged since the first generation of multicomputers were developed using packet-switched interconnection. As the switching technology has advanced towards the third generation wormhole-routed switching with virtual channels and virtual cut-through flow control <ref> [7] </ref>, the challenge leads to whether any intelligent mechanism blending well with the switching technique can be devised to provide fast global reduction through message-passing. The communication start-up time in current generation systems is also gradually reducing.
Reference: [8] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is becoming the trend in building future parallel systems due to its inherent advantages like low-latency communication and reduced communication hardware overhead <ref> [8, 19] </ref>. Intel Paragon, Cray T3D, Ncube, J-Machine, and Stanford DASH are representative systems falling into this category. Such systems with direct interconnections are being used for supporting either distributed-memory or distributed-shared memory programming paradigms.
Reference: [9] <author> R. A. Van de Geijn. </author> <title> On Global Combine Operations. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 22 </volume> <pages> 324-328, </pages> <year> 1994. </year>
Reference-contexts: Hence, in this paper, without loss of generality, we identify both reduction and barrier synchronization as a single class of reduction operation. Many software schemes have been recently proposed in the literature to efficiently implement reduction <ref> [2, 9] </ref> and barrier synchronization [26] operations on wormhole-routed systems. All these schemes use multiple phases of point-to-point unicast message passing and encounter long latency due to multiple communication start-ups. Systems like Cray T3D and CM-5 use dedicated tree-based networks to provide fast global reduction and barrier synchronization.
Reference: [10] <author> J. Duato. </author> <title> A New Theory of Deadlock-Free Adaptive Routing in Wormhole Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(12) </volume> <pages> 1320-1331, </pages> <year> 1993. </year>
Reference-contexts: The multidestination wormhole mechanism, introduced by us recently in [23] for efficient broadcasting and multicasting support, allows a message to propagate through paths conforming to the base-routing of a system. In this paper we use only single-dimensional paths, which always conform to e-cube, planar-adaptive [5], or fully-adaptive <ref> [10] </ref> schemes. These worms use a special bit-string encoding of multidestination addresses as proposed by Chiang and Ni in [4] to reduce the header length.
Reference: [11] <author> A. Feldmann, T. Gross, D. O'Hallaron, and T. Stricker. </author> <title> Subset Barrier Synchronization on a Private Memory Parallel System. </title> <booktitle> In Proceedings of the Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 209-218, </pages> <year> 1992. </year>
Reference-contexts: As defined by the standard, the results may be available to only one member of the group or all the members. The operations can be carried on either scalar or vector data. Barrier synchronization <ref> [11, 12, 20, 24] </ref> is a special case of this class of operation where there is no data (just an event) and the result is available to all members of the group.
Reference: [12] <author> K. Ghose and D.-C. Cheng. </author> <title> A High Performance Barrier Synchronizer and Its Novel Applications in Highly Parallel Systems. </title> <booktitle> In Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 616-619, </pages> <year> 1991. </year>
Reference-contexts: As defined by the standard, the results may be available to only one member of the group or all the members. The operations can be carried on either scalar or vector data. Barrier synchronization <ref> [11, 12, 20, 24] </ref> is a special case of this class of operation where there is no data (just an event) and the result is available to all members of the group.
Reference: [13] <author> S. K. S. Gupta and D. K. Panda. </author> <title> Barrier Synchronization in Distributed-Memory Multiprocessors using Rendezvous Primitives. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pages 501-506, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Then we compare the models to derive performance of both schemes. 3.3 Design Considerations The inherent benefits of the proposed scheme comes from the use of multidestination exchange worms. Such path-based implementations are prone to deadlock if careful consideration is not taken into account. In our earlier work <ref> [13] </ref>, we had proposed rendezvous and multirendezvous primitives to achieve fast barrier synchronization for circuit-switched systems and wormhole-routed systems implementing Hamiltonian-path-based routing, respectively. The problem of deadlock for multiple concurrent barrier synchronization was pointed out in this work.
Reference: [14] <author> J. L. Hennessy and D. Patterson. </author> <title> Computer Architecture: A Quantitative Approach. </title> <publisher> Mor-gan Kaufmann, </publisher> <year> 1990. </year> <month> 19 </month>
Reference-contexts: A typical router interface organization with s such buffers is shown in Fig. 3c. These buffers can be accessed by the associated processor by memory-mapped I/O reference <ref> [14] </ref>. The worm, after arriving at router interface R4, waits for the flag sa to be `on (1)'. If this flag is on, it indicates that the processor also has arrived at its gather execution point and has 9 supplied data in the buffer sdata.
Reference: [15] <author> Intel Corporation. </author> <title> Paragon XP/S Product Overview, </title> <year> 1991. </year>
Reference-contexts: The component t s is the communication startup time, t p is the propagation time per hop, and d is the distance between the source and destination processors in the communication phase, and l is the data size. Since t s t p under the current technology <ref> [6, 15, 25] </ref>, the cost of each phase is dominated by t s and the overall cost is / to the number of communication phases. This makes the global reduction cost quite high.
Reference: [16] <author> S. Lennart Johnsson. </author> <title> Issues in High Performance Computer Networks. </title> <journal> Special Issue of IEEE TCCA Newsletter on Interconnection Networks for High Performance Computing Systems, </journal> <month> Fall </month> <year> 1994. </year>
Reference-contexts: Such systems with direct interconnections are being used for supporting either distributed-memory or distributed-shared memory programming paradigms. In order to support these paradigms, the systems need fast communication and synchronization support from the underlying network <ref> [16] </ref>. The Message Passing Standard [18] has recently defined the importance of collective communication [17]. One important category in this class is global reduction (sum, max, min, or user-defined functions) where there is involvement from all processes of an user-defined group.
Reference: [17] <author> P. K. Mckinley, Y.-J. Tsai, and D. F. Robinson. </author> <title> A Survey of Collective Communication in Wormhole-Routed Massively Parallel Computers. </title> <type> Technical Report MSU-CPS-94-35, </type> <institution> Dept. of Computer Science, Michigan State University, </institution> <year> 1994. </year>
Reference-contexts: Such systems with direct interconnections are being used for supporting either distributed-memory or distributed-shared memory programming paradigms. In order to support these paradigms, the systems need fast communication and synchronization support from the underlying network [16]. The Message Passing Standard [18] has recently defined the importance of collective communication <ref> [17] </ref>. One important category in this class is global reduction (sum, max, min, or user-defined functions) where there is involvement from all processes of an user-defined group. As defined by the standard, the results may be available to only one member of the group or all the members.
Reference: [18] <author> Message Passing Interface Forum. </author> <title> MPI: A Message-Passing Interface Standard, </title> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Such systems with direct interconnections are being used for supporting either distributed-memory or distributed-shared memory programming paradigms. In order to support these paradigms, the systems need fast communication and synchronization support from the underlying network [16]. The Message Passing Standard <ref> [18] </ref> has recently defined the importance of collective communication [17]. One important category in this class is global reduction (sum, max, min, or user-defined functions) where there is involvement from all processes of an user-defined group. <p> The gather operation can be any associative and commutative function (sum, max, min, or user-defined) <ref> [18] </ref>. Figure 3a illustrates a gather worm initiated by processor P5 with a bit-encoded address of 111111. A typical format of such a worm is shown in Fig. 3b.
Reference: [19] <author> L. Ni and P. K. McKinley. </author> <title> A Survey of Wormhole Routing Techniques in Direct Networks. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 62-76, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is becoming the trend in building future parallel systems due to its inherent advantages like low-latency communication and reduced communication hardware overhead <ref> [8, 19] </ref>. Intel Paragon, Cray T3D, Ncube, J-Machine, and Stanford DASH are representative systems falling into this category. Such systems with direct interconnections are being used for supporting either distributed-memory or distributed-shared memory programming paradigms. <p> This will alleviate the need for a separate control network and can provide easy scalability as the system size grows. Traditionally, the wormhole-routed systems have supported only point-to-point (unicast) message passing mechanism <ref> [19] </ref>. This mechanism allows a message to have only a single destination. Using unicast-based send and receive message passing primitives, reduction and barrier synchronization operations can easily be achieved using a two-step procedure: gather and broadcast. During the gather step, data/information is gathered through phases of upward tree communication.
Reference: [20] <author> M. T. O'Keefe and H. G. Dietz. </author> <title> Hardware Barrier Synchronization: Static Barrier MIMD (SBM). </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages I: 35-42, </pages> <month> Aug </month> <year> 1990. </year>
Reference-contexts: As defined by the standard, the results may be available to only one member of the group or all the members. The operations can be carried on either scalar or vector data. Barrier synchronization <ref> [11, 12, 20, 24] </ref> is a special case of this class of operation where there is no data (just an event) and the result is available to all members of the group.
Reference: [21] <author> D. K. Panda. </author> <title> Optimal Phase Barrier Synchronization in k-ary n-cube Wormhole-routed Systems using Multirendezvous Primitives. </title> <booktitle> In Workshop on Fine-Grain Massively Parallel Coordination, </booktitle> <pages> pages 24-26, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: If some end processors do not participate then the structure of the problem (participating processors) becomes assymetric and it becomes difficult to carry out result from one phase to another phase. Such deficiency of path-based schemes has been analyzed in <ref> [21] </ref> while considering barrier synchronization on wormhole-routed systems using Hamiltonian path-based routing. Under these circumstances, one can use a two-phase method where the first phase involves single-directional gather worms to gather information along a dimension.
Reference: [22] <author> D. K. Panda. </author> <title> Fast Barrier Synchronization in Wormhole k-ary n-cube Networks with Multidestination Worms. </title> <booktitle> In International Symposium on High Performance Comuter Architecture, </booktitle> <year> 1994. </year> <note> submitted. </note>
Reference-contexts: Based on the required architectural modifications and supports, we present algorithms for complete (all processors participating) global reduction. Reduction with arbitrary number of participating processors can be done with multidestination gather and broadcast worms, similar to the schemes outlined in <ref> [22] </ref> for barrier synchronization. Hence we only emphasize on complete global reduction in this paper. Using exchange worms, it is demonstrated that the operations can be implemented with n communication start-up for k-ary n-cube systems when the data size is smaller than the individual buffer size available at a router. <p> Under these circumstances, one can use a two-phase method where the first phase involves single-directional gather worms to gather information along a dimension. After the final result is available at a processor, the second phase involves multicast operation using base-routing-conformed broadcast/multicast worms [23]. In <ref> [22] </ref> we have shown how to implement barrier synchronization for arbitrary set of processors using this two-phase scheme and hence, they are not repeated here. 5 Performance Analysis In this section, first we develop cost complexity of both models for k-ary n-cube systems.
Reference: [23] <author> D. K. Panda, S. Singal, and P. Prabhakaran. </author> <title> Multidestination Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop,, </booktitle> <year> 1994. </year>
Reference-contexts: In this paper, we take such a challenge in proposing a new approach to implement global reduction in k-ary n-cube wormhole networks. Instead of using single-destination unicast worm, we propose using a new type of multidestination exchange worms. The multidestination wormhole mechanism, introduced by us recently in <ref> [23] </ref> for efficient broadcasting and multicasting support, allows a message to propagate through paths conforming to the base-routing of a system. In this paper we use only single-dimensional paths, which always conform to e-cube, planar-adaptive [5], or fully-adaptive [10] schemes. <p> Analytical modeling 5 of cost complexity are developed and evaluated in section 5. Finally, we conclude the paper with future research directions. 2 Multidestination Wormhole Routing In this section, first we summarize wormhole message passing mechanism with multiple destinations <ref> [23] </ref>. Then we show how multidestination messages can be effectively routed in a wormhole network using available paths conforming to the base routing. Intrinsic benefits of multidesti-nation mechanism over unicast message passing are demonstrated. <p> with only one destination. 6 of multidestination worm with all destination encoding, (b) snapshot of the system when flit A of the worm has reached the router of node d3 and (c) snapshot one clock cycle later. 2.2 Paths Conforming to Base Routing (BRCP) model, as proposed by us in <ref> [23] </ref>. For example, in an ecube system (assuming messages are routed first along row and then along column), a multidestination worm can cover a set of destinations in row/column/row-column order. <p> Under these circumstances, one can use a two-phase method where the first phase involves single-directional gather worms to gather information along a dimension. After the final result is available at a processor, the second phase involves multicast operation using base-routing-conformed broadcast/multicast worms <ref> [23] </ref>. In [22] we have shown how to implement barrier synchronization for arbitrary set of processors using this two-phase scheme and hence, they are not repeated here. 5 Performance Analysis In this section, first we develop cost complexity of both models for k-ary n-cube systems.
Reference: [24] <author> J. A. Solworth and J. Stamatopoulos. </author> <title> Integrated Network Barriers for D-dimensional Meshes. In Proceedings of the Working Conference on Architectures and Compilation Techniques for Fine and Medium Grain Parallelism, </title> <year> 1992. </year>
Reference-contexts: As defined by the standard, the results may be available to only one member of the group or all the members. The operations can be carried on either scalar or vector data. Barrier synchronization <ref> [11, 12, 20, 24] </ref> is a special case of this class of operation where there is no data (just an event) and the result is available to all members of the group.
Reference: [25] <author> Craig Stunkel, D. Shea, D. G. Grice, P. H. Hochschild, and M. Tsao. </author> <title> The SP1 High Performance Switch. </title> <booktitle> In Scalable High Performance Computing Conference, </booktitle> <pages> pages 150-157, </pages> <year> 1994. </year>
Reference-contexts: The component t s is the communication startup time, t p is the propagation time per hop, and d is the distance between the source and destination processors in the communication phase, and l is the data size. Since t s t p under the current technology <ref> [6, 15, 25] </ref>, the cost of each phase is dominated by t s and the overall cost is / to the number of communication phases. This makes the global reduction cost quite high. <p> Even for large systems like 64x64 mesh, the above Lemma indicates that 32 buffers for each router are sufficient. The current generation system like IBM SP1/SP2 <ref> [25] </ref> already provides 1K bytes of buffer space at each router switch as central queue. Hence, our proposed exchange-worm based scheme is technically feasible in the current generation systems.
Reference: [26] <author> H. Xu, P. K. McKinley, and L. Ni. </author> <title> Efficient Implementation of Barrier Synchronization in Wormhole-routed Hypercube Multicomputers. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 16 </volume> <pages> 172-184, </pages> <year> 1992. </year> <month> 20 </month>
Reference-contexts: Hence, in this paper, without loss of generality, we identify both reduction and barrier synchronization as a single class of reduction operation. Many software schemes have been recently proposed in the literature to efficiently implement reduction [2, 9] and barrier synchronization <ref> [26] </ref> operations on wormhole-routed systems. All these schemes use multiple phases of point-to-point unicast message passing and encounter long latency due to multiple communication start-ups. Systems like Cray T3D and CM-5 use dedicated tree-based networks to provide fast global reduction and barrier synchronization. However, these schemes are not physically scalable.
References-found: 26

