URL: ftp://ftp.cs.washington.edu/pub/ai/hanks-weld-spa-jair.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/weld/pubs.html
Root-URL: 
Email: hanks@cs.washington.edu  weld@cs.washington.edu  
Title: A Domain-Independent Algorithm for Plan Adaptation  
Author: Steve Hanks Daniel S. Weld 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering University of Washington  
Note: Journal of Artificial Intelligence Research 2 (1995) 319-360 Submitted 6/94; published 1/95  
Abstract: all involve a process known as plan adaptation | modifying or repairing an old plan so it solves a new problem. In this paper we provide a domain-independent algorithm for plan adaptation, demonstrate that it is sound, complete, and systematic, and compare it to other adaptation algorithms in the literature. Our approach is based on a view of planning as searching a graph of partial plans. Generative planning starts at the graph's root and moves from node to node using plan refinement operators. In planning by adaptation, a library plan|an arbitrary node in the plan graph|is the starting point for the search, and the plan-adaptation algorithm can apply both the same refinement operators available to a generative planner and can also retract constraints and steps from the plan. Our algorithm's completeness ensures that the adaptation algorithm will eventually search the entire graph and its systematicity ensures that it will do so without redundantly searching any parts of the graph. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Allen, J., Hendler, J., & Tate, A. (Eds.). </editor> <year> (1990). </year> <title> Readings in Planning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference: <author> Alterman, R. </author> <year> (1988). </year> <title> Adaptive planning. </title> <journal> Cognitive Science, </journal> <volume> 12, </volume> <pages> 393-421. </pages>
Reference-contexts: Our spa system primarily addresses the adaptation problem, and in Section 7 we use our framework to analyze chef's modification strategies in some detail. The plexus system <ref> (Alterman, 1988) </ref> confronts the problem of "adaptive planning," but also addresses the problem of run-time adaptation to plan failure. plexus approaches plan adaptation with a combination of tactical control and situation matching. <p> However, we consider it interesting that nine of these transformations can be encoded simply as either one or two chained spa primitives. Section 2 also discussed plexus <ref> (Alterman, 1988) </ref> and NoLimit (Veloso & Carbonell, 1993). Veloso (1992) also describes a mechanism by which case memory is extended during problem solving, including learning techniques for improving the similarity metric used in 355 Hanks & Weld library retrieval.
Reference: <author> Barrett, A., & Weld, D. </author> <year> (1994a). </year> <title> Partial order planning: Evaluating possible efficiency gains. </title> <journal> Artificial Intelligence, </journal> <volume> 67 (1), </volume> <pages> 71-112. </pages>
Reference: <author> Barrett, A., & Weld, D. </author> <year> (1994b). </year> <note> Task-decomposition via plan parsing. In Proc. 12th Nat. Conf. on A.I. Available via FTP from pub/ai/ at ftp.cs.washington.edu. </note>
Reference-contexts: Unfortunately, it is nearly impossible to assess the correspondence between the two forms of domain knowledge, but preliminary experiments, for example in <ref> (Barrett & Weld, 1994b) </ref>, show that task-reduction schemata can provide planner speedup that is just as significant as that obtained by spa's ranking functions. 11.
Reference: <author> Carbonell, J. </author> <year> (1983). </year> <title> Derivational analogy in problem solving and knowledge acquistion. </title>
Reference: <editor> In Michalski, R. (Ed.), </editor> <booktitle> Proceeding of the First International Machine Learning Workshop. </booktitle> <institution> University of Illinois at Urbana-Champaign. </institution>
Reference: <author> Chapman, D. </author> <year> (1987). </year> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32 (3), </volume> <pages> 333-377. </pages>
Reference-contexts: For each possible repair chef runs a test to see if the repair is applicable, using the result of this test to instantiate the repair. For example, the test for an abstract repair corresponding to insertion of a "white knight" <ref> (Chapman, 1987) </ref> would determine which steps could reassert the desired proposition. Finally, chef uses a set of heuristic rules to rank the various instantiated repairs, chooses the best, and applies it.
Reference: <author> Charniak, E., & McDermott, D. </author> <year> (1984). </year> <title> Introduction to Artificial Intelligence. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA. </address>
Reference-contexts: In priar's case the domain specific knowledge took the form of a set of task-reduction schemata <ref> (Charniak & McDermott, 1984) </ref> rather than ranking functions, but both systems use heuristic control knowledge.
Reference: <author> Gentner, D. </author> <year> (1982). </year> <title> A structure mapping approach to analogy and metaphor. </title> <booktitle> In Proceedings of the International Conference on Cybernetics and Society. IEEE. </booktitle>
Reference-contexts: Kambhampati and Hendler call this the mapping problem|it is well known in the literature, and is discussed in (Schank & Abelson, 1977), (Schank, 1982), and <ref> (Gentner, 1982) </ref> for example. 352 A Domain-Independent Algorithm for Plan Adaptation Problem Proc. time (msec) Speedup pctg. spa priar spa priar 3BS!4BS1 1.7 2.4 59% 40% 4BS!5BS1 2.9 3.2 64% 62% 5BS!7BS1 11.2 11.1 58% 71% 4BS!8BS1 21.3 15.4 49% 81% 6BS!9BS1 30.2 18.1 53% 90% 4BS!10BS1 61.7 52.9 40% 87%
Reference: <author> Golden, K., Etzioni, O., & Weld, D. </author> <year> (1994). </year> <title> Omnipotence without omniscience: Sensor management in planning. </title> <booktitle> In Proc. 12th Nat. Conf. on A.I. </booktitle>
Reference-contexts: The xii planner <ref> (Golden, Etzioni, & Weld, 1994) </ref> uses a planning framework similar to spa's, developing a representation and algorithm for generative planning in the presence of incomplete information; the xii planner still assumes what partial information it has is correct, however.
Reference: <author> Hammond, K. </author> <year> (1989). </year> <title> Case-Based Planning: Viewing Planning as a Memory Task. </title> <publisher> Academic Press. </publisher>
Reference-contexts: Sections 7 and 8.2 discuss the chef <ref> (Hammond, 1989) </ref> and priar (Kambhampati & Hendler, 1992) systems using our framework, and Section 6.1 characterizes precisely the potential benefits of plan adaptation versus plan generation. This paper presents an algorithm, spa (the "systematic plan adaptor") for plan adaptation that is sound, complete, and systematic.
Reference: <author> Hammond, K. </author> <year> (1990). </year> <title> Explaining and repairing plans that fail. </title> <journal> Artificial Intelligence, </journal> <volume> 45, </volume> <pages> 173-228. </pages>
Reference-contexts: The chef system <ref> (Hammond, 1990) </ref> is a case-based planner that solves problems in the domain of Szechwan cooking. <p> We can nonetheless use the spa framework to analyze the adaptation component of other systems. The repair strategies included in the chef system <ref> (Hammond, 1990) </ref>, for example, specify transformations that can be decomposed into sequences of spa refine and retract primitives. Our analysis proves useful in two different ways: 1. It shows how chef's indexing and repair strategies could be exploited in the spa framework by providing heuristic search-control information. 2. <p> The work on adaptation for case-based planning has mainly been concerned with finding good strategies for applying adaptations. In Section 7 we discussed chef <ref> (Hammond, 1990) </ref> in detail, analyzing it in terms of spa's adaptation primitives. Since spa uses the strips representation and cannot represent simultaneous actions or actions with temporal extent, we were only able to consider ten of chef's seventeen repair strategies.
References-found: 12

