URL: ftp://ftp.cs.ohiou.edu/tech-reports/cs19971.ps.gz
Refering-URL: http://www.cs.ohiou.edu/research/tech-reports.html
Root-URL: 
Email: fmallman,ostermanng@cs.ohiou.edu  
Title: Multiple Data Connection FTP Extensions  
Author: Mark Allman, Shawn Ostermann 
Note: This work sponsored in part by NASA Lewis Research Center.  
Date: February 13, 1997  
Address: TR-19971  
Affiliation: School of Electrical Engineering and Computer Science Ohio University  
Abstract-found: 0
Intro-found: 1
Reference: [AKO96] <author> Mark Allman, Hans Kruse, and Shawn Ostermann. </author> <title> An Application-Level Solution to TCP's Inefficiencies. </title> <booktitle> In Proceedings of the First International Workshop on Satellite-based Information Services (WOSBIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: We have modified the FTP protocol to use multiple data connections. This allows FTP to better utilize high DBP channels and can provide valuable insights into transport protocol modifications that will help all applications over long-delay channels. Results and insights gained from using this tool are published elsewhere ([AOK95], <ref> [AKO96] </ref>). This paper is a specification of the modifications made to the FTP protocol.
Reference: [AO96] <author> Mark Allman and Shawn Ostermann. </author> <title> FTP Extensions for Variable Protocol Specification, November 1996. </title> <booktitle> I-D draft-allman-ftp-variable-03.txt (work in progress). </booktitle>
Reference-contexts: For example: 16 data connections available. 1 2.2 MPRT The MPRT command MUST be used instead of the PORT command when multiple data connections are to be employed. The syntax of the MPRT command is an extension of the EPRT command, as defined by <ref> [AO96] </ref>. The syntax of the MPRT command is: MPRT &lt;SPACE&gt; &lt;net-prot&gt;|<trans-prot>|<net-addr&gt;|&lt;trans-addr (s)&gt; &lt;CRLF&gt; All fields except the last are unchanged from the definitions given in [AO96], with one exception: if the &lt;trans-prot&gt; field is TCP, the &lt;trans-addr (s)&gt; can contain any number of TCP port numbers, separated by commas (","). <p> The syntax of the MPRT command is an extension of the EPRT command, as defined by <ref> [AO96] </ref>. The syntax of the MPRT command is: MPRT &lt;SPACE&gt; &lt;net-prot&gt;|<trans-prot>|<net-addr&gt;|&lt;trans-addr (s)&gt; &lt;CRLF&gt; All fields except the last are unchanged from the definitions given in [AO96], with one exception: if the &lt;trans-prot&gt; field is TCP, the &lt;trans-addr (s)&gt; can contain any number of TCP port numbers, separated by commas (","). <p> The MPSV command is issued with no arguments. The text response to the MPSV command is similar to the response to EPSV defined in <ref> [AO96] </ref>. The response MUST be: (&lt;net-prot&gt;|<trans-prot>|&lt;net-addr&gt;|&lt;trans-addr (s)&gt;) " &lt;text indicating server is entering passive mode&gt; All fields within the parenthesis are unchanged from the response to EPSV defined in in [AO96] except the &lt;trans-addr (s)&gt; field. <p> The text response to the MPSV command is similar to the response to EPSV defined in <ref> [AO96] </ref>. The response MUST be: (&lt;net-prot&gt;|<trans-prot>|&lt;net-addr&gt;|&lt;trans-addr (s)&gt;) " &lt;text indicating server is entering passive mode&gt; All fields within the parenthesis are unchanged from the response to EPSV defined in in [AO96] except the &lt;trans-addr (s)&gt; field. If the transport protocol is TCP, the &lt;trans-addr (s)&gt; field can contain any number of TCP port number separated by commas (","). For example: (IP4|TCP|132.235.34.34|3434,7865,9934) Entering passive mode.
Reference: [AOK95] <author> Mark Allman, Shawn Ostermann, and Hans Kruse. </author> <title> Data Transfer Efficiency Over Satellite Circuits Using a Multi-Socket Extension to the File Transfer Protocol (FTP). </title> <booktitle> In Proceedings of the ACTS Results Conference. </booktitle> <institution> NASA Lewis Research Center, </institution> <month> September </month> <year> 1995. </year>
Reference: [JBB92] <editor> Van Jacobson, Robert Braden, and David Borman. </editor> <title> TCP Extensions for High Performance, </title> <month> May </month> <year> 1992. </year> <note> RFC 1323. </note>
Reference-contexts: 1 Introduction Experiments with standard TCP [Pos81] over networks with a high DBP have shown the protocol to be ineffective in utilizing the available bandwidth [Kru95]. TCP is evolving in an effort to better utilize such networks with mechanisms such as large windows <ref> [JBB92] </ref> and selective acknowledgments [MMFR96]. While these extensions help long-delay networks, further investigation is needed. We have modified the FTP protocol to use multiple data connections.
Reference: [Kru95] <author> Hans Kruse. </author> <title> Performance Of Common Data Communications Protocols Over Long Delay Links: An Experimental Examination. </title> <booktitle> In 3rd International Conference on Telecommunication Systems Modeling and Design, </booktitle> <year> 1995. </year>
Reference-contexts: 1 Introduction Experiments with standard TCP [Pos81] over networks with a high DBP have shown the protocol to be ineffective in utilizing the available bandwidth <ref> [Kru95] </ref>. TCP is evolving in an effort to better utilize such networks with mechanisms such as large windows [JBB92] and selective acknowledgments [MMFR96]. While these extensions help long-delay networks, further investigation is needed. We have modified the FTP protocol to use multiple data connections.
Reference: [MMFR96] <author> Matthew Mathis, Jamshid Mahdavi, Sally Floyd, and Allyn Romanow. </author> <title> TCP Selective Acknowledgement Options, </title> <month> October </month> <year> 1996. </year> <note> RFC 2018. </note>
Reference-contexts: 1 Introduction Experiments with standard TCP [Pos81] over networks with a high DBP have shown the protocol to be ineffective in utilizing the available bandwidth [Kru95]. TCP is evolving in an effort to better utilize such networks with mechanisms such as large windows [JBB92] and selective acknowledgments <ref> [MMFR96] </ref>. While these extensions help long-delay networks, further investigation is needed. We have modified the FTP protocol to use multiple data connections. This allows FTP to better utilize high DBP channels and can provide valuable insights into transport protocol modifications that will help all applications over long-delay channels.
Reference: [Pos81] <author> Jon Postel. </author> <title> Transmission Control Protocol, </title> <month> September </month> <year> 1981. </year> <note> RFC 793. </note>
Reference-contexts: 1 Introduction Experiments with standard TCP <ref> [Pos81] </ref> over networks with a high DBP have shown the protocol to be ineffective in utilizing the available bandwidth [Kru95]. TCP is evolving in an effort to better utilize such networks with mechanisms such as large windows [JBB92] and selective acknowledgments [MMFR96].
Reference: [PR85] <author> Jon Postel and Joyce Reynolds. </author> <note> File Tranfer Protocol (FTP), October 1985. RFC 959. 4 </note>
Reference-contexts: This command has no arguments. If arguments are given, the server MUST return an error code of 500 ("command not understood", as defined by <ref> [PR85] </ref>). If the server does not implement multiple connections, it will not understand the MULT command and therefore must return an error code of 500 ("command not understood") according to [PR85]. If the server can accept multiple data connections, it MUST respond with a return code of 200 ("Command OK"). <p> If arguments are given, the server MUST return an error code of 500 ("command not understood", as defined by <ref> [PR85] </ref>). If the server does not implement multiple connections, it will not understand the MULT command and therefore must return an error code of 500 ("command not understood") according to [PR85]. If the server can accept multiple data connections, it MUST respond with a return code of 200 ("Command OK"). The string portion of the response SHOULD contain the maximum number of connections the server supports. If used, the format of the response string is: X data connections available.
References-found: 8

