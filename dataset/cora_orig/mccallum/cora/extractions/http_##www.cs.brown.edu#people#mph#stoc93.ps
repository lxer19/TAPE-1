URL: http://www.cs.brown.edu/people/mph/stoc93.ps
Refering-URL: http://www.cs.brown.edu/people/mph/stoc93.html
Root-URL: http://www.cs.brown.edu/
Email: herlihy@crl.dec.com  shanir@math.tau.ac.il  
Title: The Asynchronous Computability Theorem for t-Resilient Tasks (Preliminary Version)  
Author: Maurice Herlihy Nir Shavit 
Address: Tel-Aviv University  
Affiliation: Digital Equipment Corporation Cambridge Research Laboratory  Computer Science Department  
Abstract: We give necessary and sufficient combinatorial conditions characterizing the computational tasks that can be solved by N asynchronous processes, up to t of which can fail by halting. The range of possible input and output values for an asynchronous task can be associated with a high-dimensional geometric structure called a simplicial complex. Our main theorem characterizes computability in terms of the topological properties of this complex. Most notably, a given task is computable only if it can be associated with a complex that is simply connected with trivial homology groups. In other words, the complex has "no holes!" Applications of this characterization include the first impossibility results for several long-standing open problems in distributed computing, such as the "renaming" problem of Attiya et. al., the "k-set agreement" problem of Chaudhuri, and a generalization of the approximate agreement problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Afek, H. Attiya, D. Dolev, E. Gafni, M. Merritt, and N. Shavit. </author> <title> Atomic snapshots. </title> <booktitle> Ninth ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1990. </year>
Reference-contexts: i , replacing all or part of the contents of s i with a new value, or a scan operation on s, returning an "instantaneous" view of the contents of all segments of s. (More precise specifications and implementations of snapshot objects from single-reader/single-writer atomic registers can be found elsewhere <ref> [1, 2, 17, 20] </ref>.) A vertex v is a pair consisting of a value, value (v), and a process identifier, id (v). An n-dimensional simplex (or n-simplex) is a set of n + 1 vertexes labeled with distinct process identifiers.
Reference: [2] <author> J. Anderson. </author> <title> Composite registers. </title> <booktitle> In Proceedings of the 9th ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 15-30, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: i , replacing all or part of the contents of s i with a new value, or a scan operation on s, returning an "instantaneous" view of the contents of all segments of s. (More precise specifications and implementations of snapshot objects from single-reader/single-writer atomic registers can be found elsewhere <ref> [1, 2, 17, 20] </ref>.) A vertex v is a pair consisting of a value, value (v), and a process identifier, id (v). An n-dimensional simplex (or n-simplex) is a set of n + 1 vertexes labeled with distinct process identifiers.
Reference: [3] <author> H. Attiya, A. Bar-Noy, and D. Dolev. </author> <title> Sharing memory robustly in message-passing systems. </title> <booktitle> In Proceedings of the 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 377-408, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: In a message-passing system, processors communicate by sending and receiving asynchronous messages. A simulation of a message passing algorithm with t &lt; n=2 faults in shared memory with t &lt; n=2 faults is an elementary exercise. Conversely, At-tiya, Bar-Noy, and Dolev <ref> [3, Th. 9] </ref> have shown how to translate any wait-free shared-memory algorithm into a message-passing algorithm with t &lt; n=2 faults. Consequently, the Asynchronous Computability Theorem holds for message-passing systems when t &lt; n=2. 4 Topological Properties We new derive some basic topological properties of t-resilient protocols.
Reference: [4] <author> H. Attiya, A. Bar-Noy, D. Dolev, D. Koller, D. Peleg, and R. Reischuk. </author> <title> Achievable cases in an asynchronous environment. </title> <booktitle> In Proceedings of the 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 337-346, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. <ref> [4] </ref>. We also consider a generalization of the approximate agreement problem [5, 9, 10, 15, 22] to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> Note that vertexes with the same labels are the same and should be mentally "glued together." They are drawn as distinct only for legibility. Figure 2 shows a three-process renaming task <ref> [4] </ref> using four names. (This output complex is topologically equivalent to a torus.) A protocol solves a decision task hI n ; O n ; i in an execution if the following conditions hold. <p> Corollary 5.3 An object's computational power is not completely characterized by its consensus num ber. 5.2 Renaming Another open problem that has attracted considerable attention is the renaming problem of Attiya et al. <ref> [4] </ref>. Each process is given a unique input name taken from a range 0 : : : N where N n. Each process then chooses a unique output name taken from a smaller range 0 : : : K. <p> For n + 1 processes, it is known that the renaming task has a t-resilient solution for n + t + 1 or more output names, and none for n + 2 or fewer <ref> [4] </ref>. We now close this gap by showing that there is no solution for n + t or fewer output names.
Reference: [5] <author> H. Attiya, N. Lynch, and N. Shavit. </author> <booktitle> Are wait-free algorithms fast? In Proceedings of the 31st Annual Symposium on the Foundations of Computer Science, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem <ref> [5, 9, 10, 15, 22] </ref> to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> This problem has been studied in the special case where K = R in the Byzantine [9, 10, 22] and fail-stop models <ref> [5, 15] </ref>. Here we consider only the wait-free case. Definition 5.2 K has a hole of radius r around point x if x is in hull (K), and that no point of K Page 9 lies within distance r of x.
Reference: [6] <author> O. Biran, S. Moran, and S. Zaks. </author> <title> A combinatorial characterization of the distributed tasks which are solvable in the presence of one faulty processor. </title> <booktitle> In Proceedings of the 7th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 263-275, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The first step toward a systematic characterization of the asynchronously computable tasks was taken in 1988, when in a pioneering paper, Biran, Moran, and Zaks <ref> [6] </ref> gave a graph-theoretic characterization of the tasks that could be solved by a message-passing system in the presence of a single failure. Although the problem has received considerable attention since then, no one has succeeded in extending their approach to encompass more than a single failure. <p> Of course, if all complexes are finite, one can always find a decision map (if one exists) by enumeration and testing. Notice that the sufficient condition of Biran, Moran and Zaks <ref> [6] </ref> for 1-resilient tasks is similar in nature: a task is 1-solvable if and only if an associated graph satisfies certain properties, but there is no general method for determining whether an arbitrary graph Page 5 satisfies those properties. <p> Our notion of a span is essentially a generalization of the spanning trees of Biran, Moran, and Zaks <ref> [6] </ref> when t = 1. A span is a pseudomanifold: every (n1) simplex is a subsimplex of either one or two n-simplexes. The subcomplex ~ A n of A n generated by the (n 1)-simplexes contained in exactly one n-simplex is called the boundary subcomplex.
Reference: [7] <author> E. Borowsky and E. Gafni. </author> <title> Generalized flp impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Using different techniques than those introduced here, Saks and Zaharoglou [23] have independently proved the impossibility of K-set agreement in the wait-free case where K = t = N 1, and Borowsky and Gafni <ref> [7] </ref> have independently proved impossibility results for both renaming and K-set agreement. 2 Model Informally, our model of computation consists of a collection of sequential threads of control called processes that communicate by reading and writing variables in shared memory.
Reference: [8] <author> S. Chaudhuri. </author> <title> Agreement is harder than consensus: set consensus problems in totally asynchronous systems. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symosium on Principles of Distributed Computing, </booktitle> <pages> pages 311-234, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Page 1 question. For any input/output problem, in shared memory or message passing, we give a necessary and sufficient condition for an algorithm to exist. Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri <ref> [8] </ref>, and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem [5, 9, 10, 15, 22] to arbitrary point-sets. <p> In every t-resilient execution the output values must satisfy the following conditions: Validity: every output value is some process's input value, and Con sistency: the set of output values has cardinality at most K. This problem was first proposed by Chaudhuri <ref> [8] </ref> in 1989, along with a conjecture that it has no t-resilient solution for K t. We now show that this conjecture is correct.
Reference: [9] <author> D. Dolev, N.A. Lynch, S.S. Pinter, </author> <title> E.W. Stark, and W.E. Weihl. Reaching approximate agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <volume> 33(3) </volume> <pages> 499-516, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem <ref> [5, 9, 10, 15, 22] </ref> to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> This problem has been studied in the special case where K = R in the Byzantine <ref> [9, 10, 22] </ref> and fail-stop models [5, 15]. Here we consider only the wait-free case. Definition 5.2 K has a hole of radius r around point x if x is in hull (K), and that no point of K Page 9 lies within distance r of x.
Reference: [10] <author> A. Fekete. </author> <title> Asymptotically optimal algorithms for approximate agreement. </title> <booktitle> In Proceedings of the 5th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1986. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem <ref> [5, 9, 10, 15, 22] </ref> to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> This problem has been studied in the special case where K = R in the Byzantine <ref> [9, 10, 22] </ref> and fail-stop models [5, 15]. Here we consider only the wait-free case. Definition 5.2 K has a hole of radius r around point x if x is in hull (K), and that no point of K Page 9 lies within distance r of x.
Reference: [11] <author> M. Fischer, N.A. Lynch, </author> <title> and M.S. Paterson. Impossibility of distributed commit with one faulty process. </title> <journal> Journal of the ACM, </journal> <volume> 32(2), </volume> <month> April </month> <year> 1985. </year>
Reference-contexts: 1 Introduction A decision task is an input/output problem where N asynchronous processes start with input values, communicate either by shared memory or by message-passing, and halt with output values. In a fundamental paper in 1985, Fischer, Lynch, and Paterson <ref> [11] </ref> showed that there exists a simple Turing-computable task that is not computable This is a revised version of a paper that appeared in Proceedings of the Symposium on Theory of Computing, San Diego, May 1993. in a message-passing system if even one process may fail by halting (or may be <p> We also consider a generalization of the approximate agreement problem [5, 9, 10, 15, 22] to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task <ref> [11] </ref> by applying operations to that object. <p> Intuitively, (S m ) for m &lt; n is the set of possible outputs of solo executions by the processes in ids (S m ). Page 2 Perhaps the simplest decision task is consensus <ref> [11] </ref>. Each process starts with a binary input value and chooses a binary output value. All output values must agree, and the output value must have been someone's input. <p> Our proof strategy is the following. Since the reachable complex eventually shrinks to a single simplex, it eventually henceforth satisfies -. We run the protocol to a maximal critical state for -, and we derive a contradiction in the style of Fischer, Lynch, and Paterson <ref> [11] </ref>, using an analysis of the possible interactions among the pending update and scan operations to show that the reachable complex could not have violated to begin with. More formally, let S q be an input simplex and - any simplicial property.
Reference: [12] <author> G.N. Frederickson and N.A. Lynch. </author> <title> Electing a leader in a synchronous ring. </title> <journal> Journal of the ACM, </journal> <volume> 34(1) </volume> <pages> 98-115, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Full-information protocols have a regular structure that makes them easier to analyze than arbitrary protocols. Definition 3.1 Following Frederickson and Lynch <ref> [12] </ref>, an S-expression is either the symbol ?, an input value v, or a list (v 0 : : : v n ) where each v i is an S-expression. We use s [i] to denote the i-th component of a compound S-expression s.
Reference: [13] <author> P.J. Giblin. </author> <title> Graphs, Surfaces, and Homology. </title> <publisher> Chapman and Hill, </publisher> <address> London and New York, </address> <year> 1981. </year> <note> Second edition. </note>
Reference-contexts: Many complexes of interest have a simple but important topological property: they have no "holes". We now introduce the formal machinery needed to make this notion precise. A more complete discussion may be found in any standard text on algebraic topology (e.g., <ref> [13, 14, 19, 24] </ref>). An orientation for a simplex is a collection of or-derings for the vertexes, consisting of one particular ordering and all even permutations of it. An oriented n-simplex is an n-simplex S n together with an orientation.
Reference: [14] <author> M.J. Greenberg and J.R. Harper. </author> <title> Algebraic Topology: A First Course. </title> <booktitle> Mathematics Lecture Notes Series. </booktitle> <publisher> The Benjamin/Cummings Publishing Company, </publisher> <address> Reading MA, </address> <year> 1981. </year>
Reference-contexts: Many complexes of interest have a simple but important topological property: they have no "holes". We now introduce the formal machinery needed to make this notion precise. A more complete discussion may be found in any standard text on algebraic topology (e.g., <ref> [13, 14, 19, 24] </ref>). An orientation for a simplex is a collection of or-derings for the vertexes, consisting of one particular ordering and all even permutations of it. An oriented n-simplex is an n-simplex S n together with an orientation. <p> If a complex is simply connected, then its fundamental group is trivial. It is a standard result that any simply-connected complex has trivial first homology ([19, Th. 18.1] or <ref> [14, Ch. 12] </ref>) (The converse, however, is false [14, p.150].) Let A n and B n be complexes. <p> If a complex is simply connected, then its fundamental group is trivial. It is a standard result that any simply-connected complex has trivial first homology ([19, Th. 18.1] or [14, Ch. 12]) (The converse, however, is false <ref> [14, p.150] </ref>.) Let A n and B n be complexes. A simplicial map : A n ! B n carries vertexes of A n to vertexes of B n such that every simplex of A n maps to a simplex of B n (possibly of lesser dimension). <p> Being simply connected is a simplicial property (from the Seifert/Van Kampen Theorem <ref> [14, 4.12] </ref>), as is having trivial homology (from the Mayer-Vietoris sequence). For the remainder of this section, let n t q n. We will now show that for every input simplex S q , and any simplicial property -, (S q ) satisfies -.
Reference: [15] <author> M.P. Herlihy. </author> <title> Impossibility results for asynchronous PRAM. </title> <booktitle> In Proceedings of the 2nd Annual Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem <ref> [5, 9, 10, 15, 22] </ref> to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> This problem has been studied in the special case where K = R in the Byzantine [9, 10, 22] and fail-stop models <ref> [5, 15] </ref>. Here we consider only the wait-free case. Definition 5.2 K has a hole of radius r around point x if x is in hull (K), and that no point of K Page 9 lies within distance r of x.
Reference: [16] <author> M.P. Herlihy. </author> <title> Wait-free synchronization. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 13(1) </volume> <pages> 123-149, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: We also consider a generalization of the approximate agreement problem [5, 9, 10, 15, 22] to arbitrary point-sets. Every data object can be assigned a consensus number <ref> [16] </ref>, which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object.
Reference: [17] <author> A. Israeli and M. Li. </author> <title> Bounded time-stamps. </title> <booktitle> In Proceedings of the 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 371-382, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: i , replacing all or part of the contents of s i with a new value, or a scan operation on s, returning an "instantaneous" view of the contents of all segments of s. (More precise specifications and implementations of snapshot objects from single-reader/single-writer atomic registers can be found elsewhere <ref> [1, 2, 17, 20] </ref>.) A vertex v is a pair consisting of a value, value (v), and a process identifier, id (v). An n-dimensional simplex (or n-simplex) is a set of n + 1 vertexes labeled with distinct process identifiers.
Reference: [18] <author> P. Jayanti and S. Toueg. </author> <title> Some results on the universality, impossiblity, and decidability of consensus. </title> <booktitle> In Proceedings of WDAG 92, </booktitle> <year> 1992. </year>
Reference-contexts: The theorem also gives a sufficient condition for solvability. The condition is existential, in the sense that one cannot take an arbitrary task specification and construct a matching implementation. Indeed, by adapting a theorem of Toueg and Jayanti <ref> [18] </ref>, one can show that the problem of deciding whether an arbitrary decision task has a t-resilient implementation is undecidable. Of course, if all complexes are finite, one can always find a decision map (if one exists) by enumeration and testing.
Reference: [19] <author> S. Lefschetz. </author> <title> Introduction to Topology. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, New Jersey, </address> <year> 1949. </year>
Reference-contexts: Many complexes of interest have a simple but important topological property: they have no "holes". We now introduce the formal machinery needed to make this notion precise. A more complete discussion may be found in any standard text on algebraic topology (e.g., <ref> [13, 14, 19, 24] </ref>). An orientation for a simplex is a collection of or-derings for the vertexes, consisting of one particular ordering and all even permutations of it. An oriented n-simplex is an n-simplex S n together with an orientation. <p> The subcomplex ~ A n of A n generated by the (n 1)-simplexes contained in exactly one n-simplex is called the boundary subcomplex. Once we prove that spans exist, then we can exploit the many theorems of algebraic topology (such as Sperner's Lemma <ref> [19, Lemma 5.5] </ref>) that apply to pseudomanifolds. Definition 4.3 The barycentric subdivision bary (S n ) of input simplex S n is the complex whose vertexes are the subsimplexes in S n . <p> Lemma 4.10 If S ` is an input simplex with no ids from T , then S ` has a span. Proof: (Sketch.) We make use of the following classical theorems of algebraic topology. (1) Any complex has a "realization" as a point set in Eu-clidian space <ref> [19, Th. 14.2] </ref>. (2) The Hurewicz Iso-morphism Theorem ([19, Th. 23.1]) implies that if a complex A n is simply connected with trivial homology, then any continuous map from the `-sphere to A n can be extended to a continuous map of the (` + 1)-disk to A n . (3)
Reference: [20] <author> M. Li, J. Tromp, </author> <title> and P.M. Vitanyi. How to share concurrent wait-free variables. </title> <type> Technical Report CT-91-02, </type> <institution> University of Amsterdam, </institution> <address> Amsterdam, Netherlands, </address> <month> March </month> <year> 1991. </year>
Reference-contexts: i , replacing all or part of the contents of s i with a new value, or a scan operation on s, returning an "instantaneous" view of the contents of all segments of s. (More precise specifications and implementations of snapshot objects from single-reader/single-writer atomic registers can be found elsewhere <ref> [1, 2, 17, 20] </ref>.) A vertex v is a pair consisting of a value, value (v), and a process identifier, id (v). An n-dimensional simplex (or n-simplex) is a set of n + 1 vertexes labeled with distinct process identifiers.
Reference: [21] <author> N.A. Lynch and M.R. Tuttle. </author> <title> An introduction to input/output automata. </title> <type> Technical Report MIT/LCS/TM-373, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> November </month> <year> 1988. </year>
Reference-contexts: A process can halt, or display arbitrary variations in speed. In particular, one process cannot tell whether another has halted or is just running very slowly. Formally, we model objects and processes as automata, using a simplified form of the I/O automata formalism of Lynch and Tuttle <ref> [21] </ref>. The details are omitted here for lack of space. The shared memory consists of an array of single-reader/single-writer registers providing atomic read and write operations with the obvious semantics. From this single-reader/single-writer read/write memory, one can construct an atomic snapshot memory.
Reference: [22] <author> S. Mahaney and F.B. Schneider. </author> <title> Inexact agreement: Accuracy, precision, and graceful degredation. </title> <booktitle> In Proceedings of the 4th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1985. </year>
Reference-contexts: Applications of this theorem include the first impossibility results for the K-set agreement problem of Chaudhuri [8], and a new, nearly-tight bound on the renaming problem of Attiya et. al. [4]. We also consider a generalization of the approximate agreement problem <ref> [5, 9, 10, 15, 22] </ref> to arbitrary point-sets. Every data object can be assigned a consensus number [16], which is the maximum number of processes that can solve the consensus task [11] by applying operations to that object. <p> This problem has been studied in the special case where K = R in the Byzantine <ref> [9, 10, 22] </ref> and fail-stop models [5, 15]. Here we consider only the wait-free case. Definition 5.2 K has a hole of radius r around point x if x is in hull (K), and that no point of K Page 9 lies within distance r of x.
Reference: [23] <author> M. Saks and F. Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: We show here for the first time that the answer is no. In particular, the set agreement task lies "between" read/write memory (consensus number one) and any object with consensus number two. Using different techniques than those introduced here, Saks and Zaharoglou <ref> [23] </ref> have independently proved the impossibility of K-set agreement in the wait-free case where K = t = N 1, and Borowsky and Gafni [7] have independently proved impossibility results for both renaming and K-set agreement. 2 Model Informally, our model of computation consists of a collection of sequential threads of
Reference: [24] <author> E.H. Spanier. </author> <title> Algebraic Topology. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1966. </year> <pages> Page 10 </pages>
Reference-contexts: Many complexes of interest have a simple but important topological property: they have no "holes". We now introduce the formal machinery needed to make this notion precise. A more complete discussion may be found in any standard text on algebraic topology (e.g., <ref> [13, 14, 19, 24] </ref>). An orientation for a simplex is a collection of or-derings for the vertexes, consisting of one particular ordering and all even permutations of it. An oriented n-simplex is an n-simplex S n together with an orientation. <p> Define the degree of at S n to be # + (S n ) # (S n ). The following is a standard result <ref> [24, 4.F.1] </ref>. Lemma 5.5 The map : A n ! B n has the same degree at every simplex. Let : U n ! R n be a decision map for a renaming protocol. We use to construct a map between n-spheres.
References-found: 24

