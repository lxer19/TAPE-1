URL: http://robotics.stanford.edu/~ramkumar/papers/outerface.ps.gz
Refering-URL: http://robotics.stanford.edu/~ramkumar/publications.html
Root-URL: http://www.cs.stanford.edu
Email: E-mail:ramkumar@cs.stanford.edu  
Title: An Algorithm to Compute the Minkowski Sum Outer-face of Two Simple Polygons  
Author: G.D. Ramkumar 
Note: Supported by NSF Grant #s NSF-CCR-921-5219, NSF-IRI-930-6544  
Address: Stanford, CA 94305, USA.  
Affiliation: Department of Computer Science Stanford University  
Abstract: We use the concept of the convolution of two polygons as a tool for computing the outer-face of their Minkowski sum. Our method consists of traversing each cycle of the convolution, detecting self-intersections, and snipping-off the loops thus created. In order to detect self-intersections, we adapt the geodesic triangulation ray-shooting data structure to answer ray-shooting queries on a dynamic polygonal line of size n, in O(log 2 n) amortized time. We find the outer-face of the Minkowski sum of two simple polygons of size m and n respectively in time O((k+(m+n) l) log 2 (m+n)) where k is the size of the convolution and l is the number of cycles in the convolution. Although k can be O(mn) in the worst case, it is much less for realistic input instances. If one of the polygons is convex, then the convolution has only one cycle, and the algorithm runs in O(k log 2 (m + n)) time. Existing methods to find the Minkowski sum outer-face rely on general algorithms to compute a single face in an arrangement of k line segments which take O(k log kff(k)) time. Our algorithm exploits a new insight into the relationship between convolution and Minkowski sum and, though asymptotically slower, has practical ad vantages for realistic polygon data.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Basch, L.J. Guibas, G.D. Ramkumar, and L. Ramshaw. </author> <title> Polyhedral tracings and their convolution. </title> <note> Submitted. </note>
Reference-contexts: Another problem raised is whether ray-shooting queries against a dynamic polygonal line of length k can be performed in O (log k) time. A theory of polyhedral tracings and their convolution is introduced in <ref> [1] </ref>. An interesting question there is whether the relationship between the convolution and the Minkowski sum explored in this paper can be extended to three dimensions, and whether a similar algorithm can be formulated to compute the outer-face of the Minkowski sum.
Reference: [2] <author> B. Chazelle, H. Edelsbrunner, M. Grigni, L. Guibas, J. Hershberger, M. Sharir, and J. Snoeyink. </author> <title> Ray shooting in polygons using geodesic triangulations. </title> <booktitle> In Proc. 18th Internat. Colloq. Automata Lang. Program., volume 510 of Lecture Notes in Computer Science, </booktitle> <pages> pages 661-673. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The key idea is to detect self-intersections and excise the loops thus formed in the convolution. To detect self-intersections, we provide a novel scheme for performing ray-shooting against a dynamic polygonal line, using the geodesic triangulation structure of <ref> [2] </ref>. Our scheme relies on dividing the polygonal line into blocks of contiguous segments and storing a geodesic triangulation for each block. Ray-shooting queries are answered in amortized time O (log 2 k), where k is the size of the polygonal line. <p> We describe the algorithm in more detail below and show that it correctly computes the outer boundary of a cycle. We then show how the geodesic triangulation data structure of <ref> [2] </ref> can be adapted for efficient dynamic ray-shooting towards a growing simple polygonal chain. 3.1 Description of the algorithm The algorithms works as follows: Start from an outer vertex and grow the chain one edge at a time. <p> This is the only case which is of relevance to robotics. 3.3 Dynamic ray-shooting structure A geodesic triangulation based ray-shooting data structure for a simple polygon in the plane was presented in <ref> [2] </ref>. The data structure is computed in linear time and supports ray-shooting queries in O (log k) time where k is the size of the polygon.
Reference: [3] <author> B. Chazelle, H. Edelsbrunner, L. Guibas, M. Sharir, and J. Snoeyink. </author> <title> Computing a face in an arrangement of line segments and related problems. </title> <journal> SIAM J. Comput., </journal> <volume> 22 </volume> <pages> 1286-1302, </pages> <year> 1993. </year>
Reference-contexts: We use an algorithm presented in [6] to compute the convolution of planar polygonal tracings in optimal time O (m + n + k). The 1 outer-face of the Minkowski sum can be computed by applying the general algorithm of <ref> [3] </ref> to compute a single face in an arrangement of k line segments in time O (kff (k) log k). It is shown in [7] that the complexity of a single face in the Minkowski sum can in fact be fi (mnff (mn)) in the worst case.
Reference: [4] <author> M. T. Goodrich and R. Tamassia. </author> <title> Dynamic ray shooting and shortest paths via balanced geodesic triangulations. </title> <booktitle> In Proc. 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 318-327, </pages> <year> 1993. </year>
Reference-contexts: Ray-shooting queries are answered in amortized time O (log 2 k), where k is the size of the polygonal line. The problem of dynamic ray-shooting has been studied in a more general setting in <ref> [4] </ref>, where the authors obtain a worst-case time bound of O (log 2 (n)) for ray-shooting against a dynamic planar subdivision of size n. Our technique only works for polygonal lines, but it is simpler and sufficient for our needs.
Reference: [5] <author> L. J. Guibas, L. Ramshaw, and J. Stolfi. </author> <title> A kinetic framework for computational geometry. </title> <booktitle> In Proc. 24th Annu. IEEE Sympos. Found. Com-put. Sci., </booktitle> <pages> pages 100-111, </pages> <year> 1983. </year>
Reference-contexts: Section 5 concludes the paper. 2 Convolution and Minkowski sum We recall briefly some terms introduced in the kinetic framework <ref> [5] </ref>. A state is a pair consisting of a position _s in the plane and a direction ~s. A move is a set of states with constant direction and position varying along a line segment parallel to the direc tion. <p> The winding number of a point with respect to a tracing has the traditional meaning. Given a simple polygon P we denote as ^ P the tracing corresponding to a counterclockwise traversal of its boundary with the car always moving forward (for details, see <ref> [5] </ref>). Let P; Q be two simple polygons with corresponding tracings ^ P and ^ Q. The convolution of ^ P and ^ Q is defined as follows. <p> The Minkowski sum P Q of polygons P and Q consists of pair-wise vector sums of all interior or boundary points of P and Q. Note that this includes all pairs used in the definition of the con 2 volution. From the fundamental theorem on con-volutions <ref> [5] </ref>, it follows that the winding number of a point x with respect to ^ P fl ^ Q is the number of connected components in the intersection of P N translated by x and Q. <p> We recall below an alternative way to find the traversal order using signs assigned to turns. 3 In the kinetic framework of <ref> [5] </ref> it is shown how to assign signs to moves and turns of tracings so that the convolution derives consistent signs for its moves and turns (positive moves are forward and positive turns are to the left).
Reference: [6] <author> L. J. Guibas and R. Seidel. </author> <title> Computing convolutions by reciprocal search. </title> <journal> Discrete Comput. Geom., </journal> <volume> 2 </volume> <pages> 175-193, </pages> <year> 1987. </year>
Reference-contexts: Planar tracings and their convolutions were introduced as generalizations of ordinary polygons by Guibas, Ramshaw, and Stolfi <ref> [6] </ref> as part of the kinetic framework for computational geometry. One of the consequences of that framework is that convolution and Minkowski sum are closely related. <p> Note that the convolution is always of size O (mn), while the Minkowski sum can be of size fi (m 2 n 2 ). We use an algorithm presented in <ref> [6] </ref> to compute the convolution of planar polygonal tracings in optimal time O (m + n + k). <p> Thus any two states on the convolution can be connected and therefore there can be only one cycle. 2.2 Computing the convolution Guibas and Seidel <ref> [6] </ref> show how to compute the convolution of two simple polygonal tracings ^ P and ^ Q in optimal time O (m + n + k), where m; n; and k are the sizes of ^ P ; ^ Q; and ^ P fl ^ Q respectively.
Reference: [7] <author> Sariel Har-Peled, Timothy M. Chan, Boris Aronov, Dan Halperin, and Jack Snoeyink. </author> <title> The complexity of a single face of a Minkowski sum. </title> <booktitle> In Proc. 7th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 91-96, </pages> <year> 1995. </year>
Reference-contexts: The 1 outer-face of the Minkowski sum can be computed by applying the general algorithm of [3] to compute a single face in an arrangement of k line segments in time O (kff (k) log k). It is shown in <ref> [7] </ref> that the complexity of a single face in the Minkowski sum can in fact be fi (mnff (mn)) in the worst case.
Reference: [8] <author> A. Kaul, M. A. O'Connor, and V. Srinivasan. </author> <title> Computing Minkowski sums of regular polygons. </title> <booktitle> In Proc. 3rd Canad. Conf. Comput. Geom., </booktitle> <pages> pages 74-77, </pages> <year> 1991. </year>
Reference-contexts: The Minkowski sum, on the other hand, can be combinatorially much larger, since intersections of different convolution edges that are on the Minkowski sum boundary must be explicitly stored. A worst-case example of a Minkowski sum with complexity fi (m 2 n 2 ) is provided in <ref> [8] </ref>. P Q ^ P fl ^ Q the fiber product (the fiber product is scaled to fit within the page). 2.1 Cycles of the convolution The convolution consists of a number of closed polygonal trips that we call cycles. They may overlap in the plane, producing intersections.
Reference: [9] <author> T. Lozano-Perez. </author> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-32:108-120, </volume> <year> 1983. </year>
Reference-contexts: 1 Introduction Minkowski sums arise commonly in robotics under the name of configuration space obstacles <ref> [9] </ref>, when the robot motion is restricted to translation. The Minkowski sum Q N P of a Robot Q reflected through the origin with obstacle P is the the set of placements of Q with respect to P which cause the two polygons to intersect.
References-found: 9

