URL: http://www.cs.berkeley.edu/~jmh/miscpapers/ngits97.ps
Refering-URL: http://www.cs.berkeley.edu/~jmh/papers.html
Root-URL: 
Email: jmh@cs.berkeley.edu  
Title: Towards a Crystal Ball for Data Retrieval  
Author: Joseph M. Hellerstein 
Address: 387 Soda Hall #1776 Berkeley, CA, USA 94720-1776  
Affiliation: U.C. Berkeley  
Abstract: Information Systems both databases and text-search programs are typically architected as "black boxes": a user submits a request, the system performs an unknown sequences of operations, and after some time an answer set is returned. Two trends are conspiring to make such architectures undesirable. First, users of these systems are often quite naive, and unsure of what they are doing. Second, the queries submitted to these systems are taking increasing amounts of time to complete. These trends together lead to a frustrating experience for users: they are unsure if their inputs are appropriate, and the cost of an inappropriate input is often a long wait followed by a useless or misleading result. In this paper we propose changing the black-box model to one of a "crystal ball", in which users are given feedback on their queries as they run, so that they can predict the utility of their query results, control the behavior of the queries on the fly, and better understand the operation of the system. We highlight some initial work in this vein, and describe opportunities for similar efforts in new applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rakesh Agrawal. </author> <type> Personal correspondence, </type> <month> Febru-ary </month> <year> 1997. </year>
Reference-contexts: The user simply says "Go", and the system produces what it believes to be useful answers. While this has some interesting applications, the idea of Data Mining is fundamentally crippled by having the crudest possible black-box interface. Moreover, data mining algorithms typically run for hours in production environments <ref> [1] </ref>. Interesting "mining" applications in the future will merge Data Mining with Decision-Support or "OLAP" queries, mixing the AI and DB approaches of system-driven and user-driven discovery.
Reference: [2] <author> Joseph M. Hellerstein, Peter J. Haas, and He-len J. Wang. </author> <title> Online Aggregation. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <address> Tucson, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Crystal-ball systems can allow users to predict their query results before they complete, control the query processing on the fly, and better understand the operation of the system. Such architectures have been proposed for relational aggregation queries <ref> [2] </ref>, and we believe will be increasingly useful for other relational queries, as well as for information retrieval and data mining. 2 DBMS vs. IR: Motivation from the Distinction Databases and Information Retrieval systems are philosophically very different. <p> In addition, controls are provided to stop processing on a group, or to speed up or slow down the group relative to others. These interfaces are supported by significant modifications to a relational DBMS, as described in <ref> [2] </ref>. Key system themes in this work include a focus on non-blocking algorithms and new striding access methods to support round-robin fetching from different value groups.
Reference: [3] <author> Navin Kabra and David J. DeWitt. </author> <title> Opt++ An Object Oriented Implementation for Extensible Database Query Optimization. </title> <note> Submitted for publication. See also: http://www.cs.wisc.edu/ navin/research/opt++.ps, </note> <year> 1996. </year>
Reference-contexts: Some optimizers now allow user "hints" to provide a limited form of control, but typically they do not explain the logic that led to the need for the hints. Newer academic systems (e.g. Wisconsin's Minibase-view [6] and Opt++ <ref> [3] </ref> projects) provide more feedback and control, displaying portions of the plan-space traversed, allowing pruning of the space followed by differential retraversal, and providing a choice of search strategies.
Reference: [4] <author> B. A. Myers. </author> <title> The Importance of Percent-Done Progress Indicators for Computer-Human Interfaces. </title> <booktitle> In Proceedings SIGCHI '85: Human Factors in Computing Systems, </booktitle> <pages> pages 11-17, </pages> <month> April </month> <year> 1985. </year>
Reference-contexts: For example, in the Online Aggregation system the user is not presented with the status of the hash-table used for grouping, but instead statistical estimators and status bars. It has been noted that status bars alone improve a user's perception of the speed of a system <ref> [4] </ref>, so this is clearly a generic tool that can be used in many crystal-ball applications. Statistical estimators of final outcomes are a similar class of relatively generic tools. Other such tools are clearly needed.
Reference: [5] <author> Frank Olken. </author> <title> Random Sampling from Databases. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: This is somewhat related to ideas from multiple query optimization [7] and sample views <ref> [5] </ref>, but unifies and extends both ideas. 4.2 Directed Data Mining "Data Mining" is the inevitable conclusion of the AI approach to querying. In Data Mining applications, not only does the system define the semantics, it actually defines the queries.
Reference: [6] <author> Raghu Ramakrishnan. </author> <note> The Minbase Home Page, 1996. http://www.cs.wisc.edu/coral/minibase/minibase.html. </note>
Reference-contexts: Some optimizers now allow user "hints" to provide a limited form of control, but typically they do not explain the logic that led to the need for the hints. Newer academic systems (e.g. Wisconsin's Minibase-view <ref> [6] </ref> and Opt++ [3] projects) provide more feedback and control, displaying portions of the plan-space traversed, allowing pruning of the space followed by differential retraversal, and providing a choice of search strategies.
Reference: [7] <author> Timos Sellis. </author> <title> Multiple Query Optimization. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 13(1) </volume> <pages> 23-52, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: This is somewhat related to ideas from multiple query optimization <ref> [7] </ref> and sample views [5], but unifies and extends both ideas. 4.2 Directed Data Mining "Data Mining" is the inevitable conclusion of the AI approach to querying. In Data Mining applications, not only does the system define the semantics, it actually defines the queries.
References-found: 7

