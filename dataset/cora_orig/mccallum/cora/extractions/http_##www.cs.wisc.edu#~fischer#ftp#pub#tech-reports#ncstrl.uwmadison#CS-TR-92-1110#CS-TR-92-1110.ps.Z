URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-92-1110/CS-TR-92-1110.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-92-1110/
Root-URL: http://www.cs.wisc.edu
Title: Transaction Scheduling in Multiclass Real-Time Database Systems  
Author: HweeHwa Pang Miron Livny Michael J. Carey 
Affiliation: Computer Sciences Department University of Wisconsin Madison  
Abstract: In real-time database systems (RTDBS), the policy used for assigning priorities to transactions may lead to a biased treatment of different transaction classes. Such bias is not necessarily a reflection of differences in the tightness of the time constraints of these classes. Instead, it may be due to discrimination in the allocation of system resources. While bias due to differences in time constraint tightness is arguably reasonable, discrimination based on other class features (e.g., mean transaction size) may be unacceptable in many real-time applications. In this study, we focus on firm RTDBSs with multiclass workloads where classes are distinguished by their transaction sizes. Our results reveal that the Earliest Deadline scheduling principle, upon which a number of existing priority assignment policies are based, discriminates significantly against longer transactions. This observation has motivated the development of a new dynamic priority assignment scheme that improves the chances for long transactions to meet their time constraints, thereby providing a fairer mechanism for use in multiclass RTDBS transaction scheduling. A slightly abridged version of this paper that will appear in the proceedings of the 13th Real-Time Systems Symposium, December 1992. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
Abstract-found: 1
Intro-found: 1
Reference: [Abbo88] <author> R. Abbott, H. Garcia-Molina, </author> <title> "Scheduling Real-Time Transactions: A Performance Evaluation", </title> <booktitle> Proc. of the 14th Int. Conf. on Very Large Data Bases, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91]. <p> The most important conclusion from this experiment is that, when data contention dominates resource contention, the use of priorities alone is not enough to overcome the bias caused by the concurrency control algorithm. We also ran experiments with other concurrency control algorithms, including 2PL [Eswa76, Gray79], 2PL-High Priority <ref> [Abbo88] </ref>, OPT-WAIT [Hari90b], and WAIT50 [Hari90b]; these experiments revealed the same bias against longer transactions.
Reference: [Abbo89] <author> R. Abbott, H. Garcia-Molina, </author> <title> "Scheduling Real-Time Transactions with Disk Resident Data", </title> <booktitle> Proc. of the 15th Int. Conf. on Very Large Data Bases, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: 1. INTRODUCTION In real-time database systems (RTDBS), priorities are used to translate time constraints into scheduling decisions. Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies <ref> [e.g., Abbo89, Huan91, Hari91] </ref>. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then [Dert74, Mok78, Jens85, Panw88]. <p> This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91].
Reference: [Care90] <author> M. Carey, S. Krishnamurthi, M. Livny, </author> <title> "Load Control for Locking: The 'Half-and-Half' Approach", </title> <booktitle> Proc. of the 1990 ACM PODS Symposium, </booktitle> <month> April </month> <year> 1990. </year>
Reference-contexts: Note that the choice of Normalized Miss Ratio over average miss ratio in multiclass RTDBSs is similar to the preference for page throughput over transaction throughput in conventional multiclass database systems <ref> [Care90] </ref>. The second performance metric is the bias factor, denoted by BF, which captures the linear correlation between miss ratio and transaction size. The BF metric was introduced in Section 3. 5.2.
Reference: [Dert74] <author> M. Dertouzos, </author> <title> "Control Robotics: the procedural control of physical processes", </title> <booktitle> Proc. of IFIP Congress, </booktitle> <year> 1974. </year>
Reference-contexts: Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies [e.g., Abbo89, Huan91, Hari91]. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then <ref> [Dert74, Mok78, Jens85, Panw88] </ref>. The results of these studies have shown that ED generates schedules that miss very few deadlines, if any, when the system is operating in a region where it should theoretically be able to meet all or most of the time constraints.
Reference: [Eswa76] <author> K. Eswaran, et al, </author> <title> "The Notions of Consistency and Predicate Locks in a Database System", </title> <journal> Communications of ACM, </journal> <month> November </month> <year> 1976. </year> <month> - 23 </month> - 
Reference-contexts: The most important conclusion from this experiment is that, when data contention dominates resource contention, the use of priorities alone is not enough to overcome the bias caused by the concurrency control algorithm. We also ran experiments with other concurrency control algorithms, including 2PL <ref> [Eswa76, Gray79] </ref>, 2PL-High Priority [Abbo88], OPT-WAIT [Hari90b], and WAIT50 [Hari90b]; these experiments revealed the same bias against longer transactions.
Reference: [Gray79] <author> J. Gray, </author> <title> "Notes on Database Operating Systems", in Operating Systems: An Advanced Course, </title> <editor> R. Bayer, R.Graham, G. Seegmuller, eds., </editor> <publisher> Springer-Verlag, </publisher> <year> 1979. </year>
Reference-contexts: The most important conclusion from this experiment is that, when data contention dominates resource contention, the use of priorities alone is not enough to overcome the bias caused by the concurrency control algorithm. We also ran experiments with other concurrency control algorithms, including 2PL <ref> [Eswa76, Gray79] </ref>, 2PL-High Priority [Abbo88], OPT-WAIT [Hari90b], and WAIT50 [Hari90b]; these experiments revealed the same bias against longer transactions.
Reference: [Hari90a] <author> J. Haritsa, M. Carey, M. Livny, </author> <title> "On Being Optimistic about Real-Time Constraints", </title> <booktitle> Proc. of the 1990 ACM PODS Symposium, </booktitle> <month> April </month> <year> 1990. </year>
Reference-contexts: This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91]. <p> Note that if a = 1.00, every transaction receives only one virtual deadline, and EVD degenerates to ED. 4. REAL-TIME DATABASE SYSTEM MODEL The RTDBS performance model used in this study is essentially the same as that in <ref> [Hari90a] </ref>. We summarize the model here for completeness and to aid the reader in interpreting the results. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 2 a is initialized to 0.5 at system startup time. 3 By definition, a has to be greater than 0.00 and is at most equal to 1.00.
Reference: [Hari90b] <author> J. Haritsa, M. Carey, M. Livny, </author> <title> "Dynamic Real-Time Optimistic Concurrency Control", </title> <booktitle> Proc. of the 1990 IEEE 11th Real-Time Systems Symposium (RTSS). </booktitle>
Reference-contexts: Due to space limitations, we will only present results obtained for one concurrency control algorithm. Since previous studies have shown that optimistic algorithms outperform locking algorithms in firm RTDBSs under high data contention <ref> [Hari90b] </ref>, we will use an optimistic concurrency control mechanism. The chosen algorithm is briefly described below. In classical optimistic concurrency control (OPT) [Kung81], transactions are allowed to execute unhindered until they are ready to commit, at which time they are validated. <p> This method detects conflicts earlier than the OPT algorithm, and results in earlier restarts and less wasted resources. Performance studies have shown that OPT-BC produces low miss ratios in firm RTDBS under heavy loads <ref> [Hari90b] </ref>. We therefore choose this algorithm for our experiment. Figures 19 and 20 present the performance results for this experiment as a function of the transaction arrival rate. ratios produced by AEVD are the least sensitive to transaction size. <p> We also ran experiments with other concurrency control algorithms, including 2PL [Eswa76, Gray79], 2PL-High Priority [Abbo88], OPT-WAIT <ref> [Hari90b] </ref>, and WAIT50 [Hari90b]; these experiments revealed the same bias against longer transactions. <p> We also ran experiments with other concurrency control algorithms, including 2PL [Eswa76, Gray79], 2PL-High Priority [Abbo88], OPT-WAIT <ref> [Hari90b] </ref>, and WAIT50 [Hari90b]; these experiments revealed the same bias against longer transactions.
Reference: [Hari91] <author> J. Haritsa, M. Livny, M. Carey, </author> <title> "Earliest Deadline Scheduling for Real-Time Database Systems", </title> <booktitle> Proc. of the 1991 IEEE 12th Real-Time Systems Symposium (RTSS). </booktitle>
Reference-contexts: 1. INTRODUCTION In real-time database systems (RTDBS), priorities are used to translate time constraints into scheduling decisions. Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies <ref> [e.g., Abbo89, Huan91, Hari91] </ref>. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then [Dert74, Mok78, Jens85, Panw88]. <p> However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in <ref> [Hari91] </ref>. The AED algorithm augments the Earliest Deadline principle with a process that randomly predicts the destiny of a transaction when it arrives at the system. <p> In addition, C T = D T AT is used to denote the time constraint of T. These notations are summarized in Table 2, together with some notations which we will introduce later. AEVD is based on the Adaptive Earliest Deadline (AED) algorithm <ref> [Hari91] </ref>. Before AEVD is introduced, we review the main features of AED. In AED, all of the transactions that are currently active are divided into a "hit" group and a "miss" group. Upon arrival, each transaction is randomly assigned a unique key, I T . <p> At high arrival rates, however, a majority of the transactions get assigned to the "miss" group where Random Priority is used. Random Priority treats transactions of all sizes fairly, and produces low miss ratios under heavy loads <ref> [Hari91] </ref>. This is why AED's BF curve levels off. By combining the low-load characteristics of ED and the high-load behavior of RP, AED produces consistently low Normalized Miss Ratios. We now turn our attention to AEVD.
Reference: [Huan89] <author> J. Huang, J.A. Stankovic, D. Towsley, K. Ramamritham, </author> <title> "Experimental Evaluation of Real-Time Transaction Processing", </title> <booktitle> Proc. of the 1989 IEEE 10th Real-Time Systems Symposium (RTSS). </booktitle>
Reference-contexts: This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91].
Reference: [Huan91] <author> J. Huang, J.A. Stankovic, D. Towsley, </author> <title> "Experimental Evaluation of Real-Time Optimistic Concurrency Control Schemes", </title> <booktitle> Proc. of the 17th Int. Conf. on Very Large Data Bases, </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: 1. INTRODUCTION In real-time database systems (RTDBS), priorities are used to translate time constraints into scheduling decisions. Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies <ref> [e.g., Abbo89, Huan91, Hari91] </ref>. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then [Dert74, Mok78, Jens85, Panw88]. <p> The only other studies that we are aware of that have addressed the issue of fairness in the context of real-time systems are presented in [Zhao87] and <ref> [Huan91] </ref>. Zhao and Ramamritham showed in [Zhao87] that, in the context of hard real-time communication, ED achieves a small ratio of message loss by biasing towards short messages. They used a workload in which messages of all sizes had the same average slack time. <p> This could conceivably have been responsible for the bias observed there. The results of our study will show that even if messages of all sizes were given equally tight deadlines, a similar biased behavior would still have been observed, hence confirming that ED is biased. In <ref> [Huan91] </ref>, Huang et al briefly examined fair real-time scheduling issues from a concurrency control perspective. A two-class workload was used to show that, as in conventional database systems, optimistic concurrency control in an RTDBS discriminates against classes that contain longer transactions. <p> This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91]. <p> Interestingly, at low arrival rates where data contention dominates resource contention, longer transactions are discriminated against even in the case of AEVD. In this situation, performance is primarily determined by the concurrency control algorithm, and OPT-BC is known to favor shorter transactions <ref> [Huan91] </ref>. At high loads, AEVD reduces the effect of the bias caused by OPT-BC by giving longer transactions higher priorities at the CPUs and disks. Both AEVD and AED have comparable Normalized Miss Ratios, while ED performs badly at high loads as expected.
Reference: [Jens85] <author> E. Jensen, C. Locke, H. Tokuda, </author> <title> "A Time-Driven Scheduling Model for Real-Time Operating Systems", </title> <booktitle> Proc. of the 1985 IEEE 6th Real-Time Systems Symposium (RTSS). </booktitle>
Reference-contexts: Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies [e.g., Abbo89, Huan91, Hari91]. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then <ref> [Dert74, Mok78, Jens85, Panw88] </ref>. The results of these studies have shown that ED generates schedules that miss very few deadlines, if any, when the system is operating in a region where it should theoretically be able to meet all or most of the time constraints.
Reference: [Kim91] <author> W. Kim, J. Srivastava, </author> <title> "Enhancing Real-Time DBMS Performance with Multiversion Data and Priority Based Disk Scheduling", </title> <booktitle> Proc. of the 1991 IEEE 12th Real-Time Systems Symposium (RTSS). </booktitle>
Reference-contexts: This property of the ED algorithm makes it a very attractive candidate for real-time database systems where the resource requirements of transactions are unlikely to be known in advance. ED has been shown to produce, for a wide range of RTDBSs, high success rates under light load conditions <ref> [Abbo88, Abbo89, Hari90a, Huan89, Huan91, Kim91] </ref>. However, the performance of ED deteriorates rapidly when the system is overloaded and cannot meet the deadlines of a significant fraction of the transactions. An Adaptive Earliest Deadline (AED) algorithm that stabilizes the overload performance of ED was introduced in [Hari91].
Reference: [Klei76] <author> L. Kleinrock, </author> <title> Queueing Systems, </title> <booktitle> Volume II: Computer Applications, </booktitle> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1976, </year> <pages> pp. 166-170. </pages>
Reference-contexts: In the context of general-purpose timesharing systems, the processor-sharing (PS) scheduling policy is generally viewed as treating jobs in a fair manner. In particular, the PS policy ensures that the expected waiting time per unit of service requested will be the same for all job classes <ref> [Klei76] </ref>. Based on similar reasoning, it can be argued that the probability of a transaction meeting its deadline should be a function only of the tightness of its time constraint, and not of other class attributes.
Reference: [Kung81] <author> H. Kung, J. Robinson, </author> <title> "On Optimistic Methods for Concurrency Control", </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 6,2, </volume> <month> June </month> <year> 1981. </year>
Reference-contexts: Since previous studies have shown that optimistic algorithms outperform locking algorithms in firm RTDBSs under high data contention [Hari90b], we will use an optimistic concurrency control mechanism. The chosen algorithm is briefly described below. In classical optimistic concurrency control (OPT) <ref> [Kung81] </ref>, transactions are allowed to execute unhindered until they are ready to commit, at which time they are validated. A transaction is restarted if it fails its validation test, which checks that there is no conflict between the validating transaction and transactions that committed after it began execution.
Reference: [Liu73] <author> C. Liu, J. Layland, </author> <title> "Scheduling Algorithms for Multiprogramming in a Hard Real-Time Environment", </title> <journal> Journal of ACM, </journal> <month> January </month> <year> 1973. </year>
Reference-contexts: Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies [e.g., Abbo89, Huan91, Hari91]. The ED principle was first introduced by Liu and Layland in <ref> [Liu73] </ref> and has been extensively analyzed and evaluated since then [Dert74, Mok78, Jens85, Panw88].
Reference: [Livn90] <author> M. Livny, </author> <note> "DeNet User's Guide, Version 1.5", </note> <institution> Computer Sciences Department, University of Wisconsin - Madison, </institution> <year> 1990. </year>
Reference-contexts: The BF metric was introduced in Section 3. 5.2. Overview of Experiments A simulator based on the RTDBS model described in Section 4 is used to evaluate the performance of the priority assignment algorithms. The simulator is written in DeNet <ref> [Livn90] </ref>, a simulation language based on Modula-2. In the simulator, the mean CPU time to process a page is set to 10 milliseconds, while the mean disk access time is set to 20 milliseconds. The number of CPUs and disks are set to 8 and 16, respectively.
Reference: [Mena82] <author> D. Menasce, T. Nakanishi, </author> <title> "Optimistic versus Pessimistic Concurrency Control Mechanisms in Database Management Systems", </title> <journal> Information Systems, </journal> <volume> Vol. 7,1, </volume> <year> 1982. </year>
Reference-contexts: A transaction is restarted if it fails its validation test, which checks that there is no conflict between the validating transaction and transactions that committed after it began execution. In the Broadcast Commit variant (OPT-BC) <ref> [Mena82, Robi82] </ref>, a committing transaction notifies other currently - 20 - running transactions that conflict with it so that these conflicting transactions can restart immediately. This method detects conflicts earlier than the OPT algorithm, and results in earlier restarts and less wasted resources.
Reference: [Mok78] <author> A. Mok, M. Dertouzos, </author> <title> "Multi-processor Scheduling in a Hard Real-Time Environment", </title> <booktitle> Proc. of the 7th Texas Conf. on Computing Systems, </booktitle> <month> October </month> <year> 1978. </year>
Reference-contexts: Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies [e.g., Abbo89, Huan91, Hari91]. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then <ref> [Dert74, Mok78, Jens85, Panw88] </ref>. The results of these studies have shown that ED generates schedules that miss very few deadlines, if any, when the system is operating in a region where it should theoretically be able to meet all or most of the time constraints.
Reference: [Panw88] <author> S. Panwar, D. Towsley, </author> <title> "On the Optimality of the STE Rule for Multiple Server Queues that Serve Customers with Deadlines", </title> <type> COINS Technical Report 88-81, </type> <institution> University of Massachusetts, Amherst, </institution> <month> July </month> <year> 1988. </year>
Reference-contexts: Most researchers who have studied RTDBS algorithms have adopted the Earliest Deadline (ED) principle for priority assignment in their performance studies [e.g., Abbo89, Huan91, Hari91]. The ED principle was first introduced by Liu and Layland in [Liu73] and has been extensively analyzed and evaluated since then <ref> [Dert74, Mok78, Jens85, Panw88] </ref>. The results of these studies have shown that ED generates schedules that miss very few deadlines, if any, when the system is operating in a region where it should theoretically be able to meet all or most of the time constraints.
Reference: [Robi82] <author> J. Robinson, </author> <title> "Design of Concurrency Controls for Transaction Processing Systems", </title> <type> Ph.D. Thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1982. </year>
Reference-contexts: A transaction is restarted if it fails its validation test, which checks that there is no conflict between the validating transaction and transactions that committed after it began execution. In the Broadcast Commit variant (OPT-BC) <ref> [Mena82, Robi82] </ref>, a committing transaction notifies other currently - 20 - running transactions that conflict with it so that these conflicting transactions can restart immediately. This method detects conflicts earlier than the OPT algorithm, and results in earlier restarts and less wasted resources.
Reference: [Triv82] <author> K. Trivedi, </author> <title> "Probability & Statistics with Reliability, Queuing, </title> <booktitle> and Computer Science Applications", </booktitle> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ 07632, </address> <year> 1982, </year> <note> Chapter 11. </note>
Reference-contexts: The EVD algorithm uses a feedback mechanism to monitor the performance of the system, and then adjusts the value of a accordingly 2 . The feedback is in the form of a bias factor, denoted by BF, that measures the linear correlation <ref> [Triv82] </ref> between miss ratio and transaction size. BF is equal to the slope of the regression line that best fits the miss ratios expressed as a function of transaction size. Thus BF captures the bias of the underlying priority assignment algorithm.
Reference: [Zhao87] <author> W. Zhao, K. Ramamritham, </author> <title> "Virtual Time CSMA Protocols for Hard Real-Time Communication", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-13(8), </volume> <month> August </month> <year> 1987. </year> <month> - 24 </month> - 
Reference-contexts: The only other studies that we are aware of that have addressed the issue of fairness in the context of real-time systems are presented in <ref> [Zhao87] </ref> and [Huan91]. Zhao and Ramamritham showed in [Zhao87] that, in the context of hard real-time communication, ED achieves a small ratio of message loss by biasing towards short messages. They used a workload in which messages of all sizes had the same average slack time. <p> The only other studies that we are aware of that have addressed the issue of fairness in the context of real-time systems are presented in <ref> [Zhao87] </ref> and [Huan91]. Zhao and Ramamritham showed in [Zhao87] that, in the context of hard real-time communication, ED achieves a small ratio of message loss by biasing towards short messages. They used a workload in which messages of all sizes had the same average slack time. Thus long messages had relatively tighter deadlines than short messages.
References-found: 23

