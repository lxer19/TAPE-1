URL: ftp://garovix.ijs.si/pub/papers/bz/idamap96.ps.gz
Refering-URL: http://www-ai.ijs.si/BlazZupan/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Qualitative Model Approach to Computer Assisted Reasoning in Physiology  
Author: Blaz Zupan John A. Halter Marko Bohanec 
Abstract: Developing practical tools to aid in understanding physiological systems is a formidable undertaking. This paper presents a method that uses a property structure for the domain being investigated. Furthermore, it employs realistic models to present examples of the behavior of the system. From these examples the principles that relate the properties are inferred through the use of machine learning. To allow prediction of property values in quantitative domain, interval logic and fuzzy logic based methods for qualitative model interpretation are proposed. The principles are expressed as qualitative rules that derive the values of the properties. The structured approach and the qualitative representation of principles provide a simplified means to reason about the roles of properties and meaning of principles of the physiological systems being investigated. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. W. Biermann, J. Fairfield, and T. Beres. </author> <title> Signature table systems and learning. </title> <journal> IEEE Trans. Syst. Man Cybern., </journal> <volume> 12(5) </volume> <pages> 635-648, </pages> <year> 1982. </year>
Reference-contexts: DECMAK provides an extensive support for option evaluation, comparison and ranking. Its successor DEX [3] has been used in over 50 complex decision-making problems. A similar tree-based hierarchical approach called "signature table schema" is presented by Biermann et al. <ref> [1] </ref>. The problem representation is again a tree of attributes, this time restricting the attributes to two-valued (boolean) domains. <p> Similar representation techniques to those used in DECMAK and signature table schemas are used to represent functions of multivalued variables in [11]. Both Biermann et al. <ref> [1] </ref> and Perkowski [11] present methods that derive structures based on automatic function decomposition. Although the complexity of such decomposition process is high and good heuristics only partially known, this seems a very promising approach. DECMAK, signature table schema, and function decomposition in [11] deal with qualitative attributes only. <p> This, besides the simplicity, was also the main reason why interval logic was chosen to be used for quantitative interpretation. We illustrate the use of interval logic with an example. Suppose x 1 ; x 2 ; x 3 ; x 5 2 <ref> [0; 1] </ref> and the intervals are given in Fig. 3. Suppose we have given x 1 = 0:25, x 2 = 0:8, and x 3 = 0:7. <p> For rule table decomposition, we have adopted the techniques described in <ref> [1, 11] </ref>. Here we describe the decomposition algorithm through an example.
Reference: [2] <author> M. Bohanec, I. Bratko, and V. Rajkovic. </author> <title> An expert system for decision making. </title> <editor> In H. G. Sol, editor, </editor> <title> Processes and Tools for Decision Support. </title> <publisher> North-Holland, </publisher> <year> 1983. </year>
Reference-contexts: An example of using these methods to derive the principles for the model from the domain of computational neuroscience is given in Sec. 5. Sec. 6 concludes the paper. 2 Related Work The approach presented in this paper is based on a qualitative multi-attribute decision making method DECMAK <ref> [2] </ref>. DEC-MAK uses decomposition of a decision problem into smaller, less complex problems. The representational structure of the problem is a tree of finite-valued qualitative attributes. The tree hierarchically orders the attributes from inputs (tree leaves) to a single output (the root of the tree). <p> The rules can either be viewed textually or graphically, or can be transformed to a decision tree. All of these and other rule inspection methods have been introduced in DEX and DECMAK <ref> [3, 2] </ref>. * Structure exploration: once the rules for specific structure are known, this structure can be changed to a different one by removal of existing and/or by introduction of new intermediate properties. <p> For fuzzy interpretation of qualitative model, a degree of belief for each property's descriptor is given (input properties) or computed (intermediate and output properties). Derivation of intermediate and output properties then uses known fuzzy reasoning. The method has been described in <ref> [2] </ref>, and here we give only an example. Suppose x 2 =lo/0.5,hi/0.5 (degree of belief for x 2 to be lo is 0.5 and to be hi is 0.5), x 1 =hi/1 (implying the degree for x 1 to be lo is 0) and x 3 =lo/0.4, hi/0.6.
Reference: [3] <author> M. Bohanec and V. Rajkovic. DEX: </author> <title> An expert system shell for decision support. </title> <journal> Sistemica, </journal> <volume> 1(1) </volume> <pages> 145-157, </pages> <year> 1990. </year>
Reference-contexts: The overall utility of the option (output attribute) is then derived in a bottom-up fashion from the input attributes. DECMAK provides an extensive support for option evaluation, comparison and ranking. Its successor DEX <ref> [3] </ref> has been used in over 50 complex decision-making problems. A similar tree-based hierarchical approach called "signature table schema" is presented by Biermann et al. [1]. The problem representation is again a tree of attributes, this time restricting the attributes to two-valued (boolean) domains. <p> These rule sets are complete, i.e., for any combination of qualitative values of x 1 and x 2 a value for x 4 is known. This may in general not be the case and interpolation algorithms might be used to approximate unknown rules <ref> [3] </ref>. We use a crisp qualitative interpretation of the proposed model. For this, each input property can take only one single value from its set of descriptors. Then, an output property is derived using bottom-up derivation process using given qualitative rules. <p> The rules can either be viewed textually or graphically, or can be transformed to a decision tree. All of these and other rule inspection methods have been introduced in DEX and DECMAK <ref> [3, 2] </ref>. * Structure exploration: once the rules for specific structure are known, this structure can be changed to a different one by removal of existing and/or by introduction of new intermediate properties.
Reference: [4] <author> J. Dougherty, R. Kohavi, and M. Sahami. </author> <title> Supervised and unsupervised discretization of continuous features. </title> <booktitle> In Proc. of the Twelfth International Conference on Machine Learning, </booktitle> <pages> pages 194-202, </pages> <address> Tahoe City, California, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: Within machine learning, there has been substantial effort to still use qualitative (or discrete) models but to be able to predict quantitative results. First, quantitative input properties have to be converted to qualitative ones. Dougherty et al. <ref> [4] </ref> gives a survey of discretization methods. Then, a qualitative model has to be used to find a qualitative value of output properties. Finally, these output qualitative properties are then transformed to quantitative ones. A well known approach uses a combination of model-based and instance based reasoning [13, 14]. <p> Derivation of intervals The above learning algorithm assumes to be given intervals that map every qualitative value of input/output properties to the range of quantitative values. Intervals might be directly derived from learning examples (for a survey of discretization methods see <ref> [4] </ref>) or can be given explicitly. The selection of intervals influences the error the model makes when predicting output properties from their corresponding input properties. To minimize this error, we propose to couple the learning algorithm with the genetic algorithm.
Reference: [5] <author> K. D. Forbus. </author> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference-contexts: The constraints that we are testing for are simple mono-tonicity and local minima/maxima constraints of types defined in <ref> [5] </ref>. The structured approach reduces the complexity of constraint testing.
Reference: [6] <author> J. A. Halter, J. S. Carp, and J. W. Wolpaw. </author> <title> Operantly conditioned motoneuron plasticity: possible role of sodium channels. </title> <journal> J. Neurophysiology, </journal> <volume> 73(2) </volume> <pages> 867-871, </pages> <year> 1995. </year>
Reference-contexts: In this example, a realistic nerve fiber model is used. The sophisticated distributed parameter model was developed at Baylor College of Medicine in Houston and is used to predict the functional implications of neuronal structural and biophysical properties <ref> [6] </ref>. The model is given in the form of a system of multiple cross-coupled parabolic partial differential equations that are solved by an implicit numerical integration method. <p> Because of the mono-tonical dependence of ina from nach, ina increases with iv and decreases with av. This discovered principles qualitatively match with a known physiological effect of activation and in activation voltage on the peak sodium current <ref> [6] </ref>.
Reference: [7] <author> J. A. Halter and J. W. Clark. </author> <title> A distributed-parameter model of the myelinated nerve fiber. </title> <journal> J. Theo. Biol., </journal> <volume> 148 </volume> <pages> 345-382, </pages> <year> 1991. </year>
Reference-contexts: For example, a realistic computational neuronal model <ref> [8, 7] </ref> may describe the properties of sodium channels, but sole inspection of the model equations does not reveal how changes in the sodium channel activation voltage alters the sodium ion concentration dynamics, and moreover, how these dynamics influence the conduction of the action potential. <p> To derive these principles, 100 examples of the form (naperm, iv, av) were presented to the system. Input properties were expressed as the offsets to corresponding parameters of normal mammalian myelinated nerve fiber (for the values and units see <ref> [7] </ref>). For each example they were selected arbitrary from ranges [0.5,1.5] for naperm, [-10,10] for av, and [-20,20] for iv. The experimental results show that there is high non-linearity because of two different states of the neuron: firing and non-firing.
Reference: [8] <author> C. Koch and I. Segev, </author> <title> editors. Methods in neuronal modeling. </title> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: For example, a realistic computational neuronal model <ref> [8, 7] </ref> may describe the properties of sodium channels, but sole inspection of the model equations does not reveal how changes in the sodium channel activation voltage alters the sodium ion concentration dynamics, and moreover, how these dynamics influence the conduction of the action potential.
Reference: [9] <author> D. Levine. </author> <title> User's guide to PGAPack parallel genetic algorithm library. </title> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, IL, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: The method uses a standard genetic algorithm with the mutation and crossover operators as provided in PGApack genetic algorithm library <ref> [9] </ref>. Utilization of qualitative model Some of the different ways for utilization of qualitative models as presented in this paper are: * The discovery of principles: the principles that relate the properties can be revealed by the inspection of qualitative rules. <p> Such predictions can be orders of magnitude faster than the ones that require simulation. Implementation The system described in this section was implemented in a C programming language under HP and SGI UNIX workstations. The system uses a PGApack genetic algorithm library <ref> [9] </ref> and employs Geomview 3D visualization tool [12] for graphical display of rules. Graphic interface was implemented using XForms library [15]. 4 A Fuzzy Approach to Model Interpretation Fuzzy logic can be used instead of crisp interpretation of the qualitative model and interval logic for estimation of quantitative values.
Reference: [10] <author> R. J. Machado and A. F. de Rocha. </author> <title> A hybrid architecture for fuzzy connectionist expert systems. </title> <editor> In A. Kandel and G. Langholz, editors, </editor> <title> Hybrid architectures for intelligent systems. </title> <publisher> CRC Press, </publisher> <year> 1992. </year>
Reference-contexts: A well known approach uses a combination of model-based and instance based reasoning [13, 14]. Recently, methods that use fuzzy logic have been used for approximation and reasoning in domains with quantitative data. For example, Machado and de Rocha <ref> [10] </ref> describe a hybrid approach that combines both hierarchical structure and fuzzy reasoning. Similarly, as in DECMAK, attributes can be fuzzy variables and can be described by descriptors and corresponding degrees of belief. <p> Common to all of the methods mentioned above is the attempt not only to approximate the decision process or some function being modeled, but to reveal its hierarchical components and their interrelation. The major differences between DECMAK and signature tables schema and the approach by Machado and de Rocha <ref> [10] </ref> is in the complexity and expressional power of utility functions. We might observe that the approach that uses neural networks might be more accurate in predicting the value of output attribute, while within DEC-MAK and signature tables it might be easier to explain why such a value was derived.
Reference: [11] <author> M. A. Perkowski. </author> <title> A survey of literature on function decomposition. Final Report for Summer Faculty Research Program, </title> <institution> Wright Laboratories, Ohio OH, </institution> <year> 1994. </year>
Reference-contexts: Similar representation techniques to those used in DECMAK and signature table schemas are used to represent functions of multivalued variables in <ref> [11] </ref>. Both Biermann et al. [1] and Perkowski [11] present methods that derive structures based on automatic function decomposition. Although the complexity of such decomposition process is high and good heuristics only partially known, this seems a very promising approach. DECMAK, signature table schema, and function decomposition in [11] deal with <p> Similar representation techniques to those used in DECMAK and signature table schemas are used to represent functions of multivalued variables in <ref> [11] </ref>. Both Biermann et al. [1] and Perkowski [11] present methods that derive structures based on automatic function decomposition. Although the complexity of such decomposition process is high and good heuristics only partially known, this seems a very promising approach. DECMAK, signature table schema, and function decomposition in [11] deal with qualitative attributes only. <p> variables in <ref> [11] </ref>. Both Biermann et al. [1] and Perkowski [11] present methods that derive structures based on automatic function decomposition. Although the complexity of such decomposition process is high and good heuristics only partially known, this seems a very promising approach. DECMAK, signature table schema, and function decomposition in [11] deal with qualitative attributes only. Within machine learning, there has been substantial effort to still use qualitative (or discrete) models but to be able to predict quantitative results. First, quantitative input properties have to be converted to qualitative ones. Dougherty et al. [4] gives a survey of discretization methods. <p> For rule table decomposition, we have adopted the techniques described in <ref> [1, 11] </ref>. Here we describe the decomposition algorithm through an example.
Reference: [12] <author> M. Phillips. </author> <title> Geomview manual. The Geometry Center, </title> <institution> University of Minnesota, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: Such predictions can be orders of magnitude faster than the ones that require simulation. Implementation The system described in this section was implemented in a C programming language under HP and SGI UNIX workstations. The system uses a PGApack genetic algorithm library [9] and employs Geomview 3D visualization tool <ref> [12] </ref> for graphical display of rules. Graphic interface was implemented using XForms library [15]. 4 A Fuzzy Approach to Model Interpretation Fuzzy logic can be used instead of crisp interpretation of the qualitative model and interval logic for estimation of quantitative values.
Reference: [13] <author> J. R. Quinlan. </author> <title> Combining instance-based and model-based learning. </title> <booktitle> In Proc. of Tenth International Machine Learning Conference, </booktitle> <address> Amherst, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Then, a qualitative model has to be used to find a qualitative value of output properties. Finally, these output qualitative properties are then transformed to quantitative ones. A well known approach uses a combination of model-based and instance based reasoning <ref> [13, 14] </ref>. Recently, methods that use fuzzy logic have been used for approximation and reasoning in domains with quantitative data. For example, Machado and de Rocha [10] describe a hybrid approach that combines both hierarchical structure and fuzzy reasoning.
Reference: [14] <author> S. M. Weiss and N. Indurkhya. </author> <title> Rule-based machine learning methods for functional prediction. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 3 </volume> <pages> 383-403, </pages> <year> 1995. </year>
Reference-contexts: Then, a qualitative model has to be used to find a qualitative value of output properties. Finally, these output qualitative properties are then transformed to quantitative ones. A well known approach uses a combination of model-based and instance based reasoning <ref> [13, 14] </ref>. Recently, methods that use fuzzy logic have been used for approximation and reasoning in domains with quantitative data. For example, Machado and de Rocha [10] describe a hybrid approach that combines both hierarchical structure and fuzzy reasoning.
Reference: [15] <author> T. C. Zhao and M. Overmars. </author> <title> Forms Library: A Graphical User Interface Toolkit for X. </title> <institution> Department of Physics, University of Wisconsin-Milwaukee and Department of Computer Science, Utrecht University, </institution> <year> 1995. </year>
Reference-contexts: Implementation The system described in this section was implemented in a C programming language under HP and SGI UNIX workstations. The system uses a PGApack genetic algorithm library [9] and employs Geomview 3D visualization tool [12] for graphical display of rules. Graphic interface was implemented using XForms library <ref> [15] </ref>. 4 A Fuzzy Approach to Model Interpretation Fuzzy logic can be used instead of crisp interpretation of the qualitative model and interval logic for estimation of quantitative values.
Reference: [16] <author> B. Zupan, J. A. Halter, and M. Bohanec. </author> <title> Computer-assisted reasoning on principles and properties of medical physiology. </title> <booktitle> In Proc. of Workshop on Computer-Aided Data Analysis in Medicine, CADAM-95, </booktitle> <pages> pages 258-271, </pages> <address> Bled, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: Here, the chromosomes encode the intervals' bounds, and the fitness of each chromosome (each set of intervals) is determined by using the learning algorithm and then estimating the estimation error the qualitative model would make. As proposed in <ref> [16] </ref> we define this error as: e norm = X fi fi MAX (o i ; o 0 MIN (o i ; o 0 fi fi where o i denotes a quantitative value of output property o for i-th learning example as derived using realistic computational model, and o 0 i <p> Finally, defuzzification is used to map fuzzy qualitative output property to its quantitative representation. The fuzzy logic approach to qualitative model interpretation is described in more detail by Zupan et al. <ref> [16] </ref>. <p> In this case, we had to define the descriptors for nach in advance. We have used nach2 flo,med,hig. The approximation error depended on the parameters of genetic algorithm and was usually around 10. The derivation process and results are described in more detail in <ref> [16] </ref>.
References-found: 16

