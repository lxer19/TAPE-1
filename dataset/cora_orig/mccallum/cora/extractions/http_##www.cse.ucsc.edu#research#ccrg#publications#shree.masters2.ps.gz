URL: http://www.cse.ucsc.edu/research/ccrg/publications/shree.masters2.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Design and Analysis of Distributed Routing Algorithms  
Author: Shree N. Murthy Prof. J. J. Garcia-Luna-Aceves Prof. Anujan Varma Prof. Darrell D. E. Long Dean 
Degree: A thesis submitted in partial satisfaction of the requirements for the degree of Master of Science in Computer Engineering by  The thesis of Shree N. Murthy is approved:  
Date: June 1994  
Affiliation: University of California Santa Cruz  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [BG92] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year> <note> Second Edition. </note>
Reference-contexts: In this thesis, we concentrate on distance-vector algorithms for updating routing information maintained at each router (node). Routing in today's computer networks is accomplished by distributed shortest-path routing algorithms. The routing algorithms based on Distributed Bellman-Ford (DBF) algorithm <ref> [BG92] </ref> are susceptible to the formation of temporary loops. Looping problems can be avoided in one of the three ways. OSPF [Moy91] relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with any topology broadcast algorithm. <p> Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm <ref> [BG92] </ref> to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF [Moy91]. <p> All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation <ref> [BG92] </ref>. The primary disadvantage of DBF 1 we use `router' and `node' interchangeably 7 are routing-table loops and counting-to-infinity [GLA89].
Reference: [Ceg75] <author> T. Cegrell. </author> <title> A Routing Procedure for the TIDAS Message Switching Network. </title> <journal> IEEE Trans. Commun., </journal> (23(6)):575-585, 1975. 
Reference-contexts: Many approaches have been proposed in the past to solve, at least in part, the looping problems of DVAs. A widely known proposal is the split-horizon technique, which avoids ping-pong looping, whereby two nodes choose each other as the successor to a destination <ref> [Ceg75, Sch86] </ref>. Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem [GLA89]. Some other solutions have also been proposed to overcome this problem [GLA89].
Reference: [CKGLA92] <author> C. Cheng, S. Kumar, and J.J. Garcia-Luna-Aceves. </author> <title> An Efficient Loop-Free Algorithm. </title> <note> submitted for publication, </note> <year> 1992. </year>
Reference-contexts: Link or node failures, recoveries, and link-cost changes are handled similarly (Steps (5), (6) and (7)). In contrast to PFA, which makes node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, CKGLA92, RF91, Hum91] </ref> check the consistency of predecessor only for the neighbor associated with the input event.
Reference: [CRKGLA89] <author> C. Cheng, R. Reley, S.P.R. Kumar, and J.J. Garcia-Luna-Aceves. </author> <title> A Loop-Free Extended Bellman-Ford Routing Protocol without Bouncing Effect. </title> <journal> In Computer Communications Review, </journal> <pages> pages 224-236. </pages> <publisher> ACM, </publisher> <month> 19 (4) </month> <year> 1989. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL [GLA93] Recently, a number of distributed shortest-path routing algorithms have been proposed <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. We refer to these algorithms as path-finding algorithms. <p> Any router can traverse the path specified by a predecessor from any destination back to its neighbor router to determine whether by using that neighbor as its successor would create a path that contains a loop (i.e, involves the router itself). Unlike earlier path-finding algorithms <ref> [CRKGLA89, Hum91] </ref>, in PFA and LPA, upon receiving an update message from its neighbor k, node i also determines if a path to destination j through any of its other neighbors (6= k) includes node k itself. If so, such a path is not selected. <p> Link or node failures, recoveries, and link-cost changes are handled similarly (Steps (5), (6) and (7)). In contrast to PFA, which makes node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, CKGLA92, RF91, Hum91] </ref> check the consistency of predecessor only for the neighbor associated with the input event. <p> Q.E.D. 3.4 Comparison with Humblet's Algorithm Humblet [Hum91] has presented a path-finding algorithm in which a breadth-first-search on the nodal distance tables is done to construct the routing tables. He has also pointed out how other previous path findings algorithms <ref> [RF91, CRKGLA89] </ref> compare with his. 25 The comparison of the algorithms are done based on cost of the links. We illustrate the differences between this algorithm and PFA using Figure 3.4, 3.5, 3.6.
Reference: [GLA86] <author> J.J. Garcia-Luna-Aceves. </author> <title> A Fail-Safe Routing Algorithm for Multihop Packet-Radio Networks. </title> <booktitle> In INFOCOM. IEEE, </booktitle> <address> Miami, Florida, </address> <month> April </month> <year> 1986. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL [GLA93] Recently, a number of distributed shortest-path routing algorithms have been proposed <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. We refer to these algorithms as path-finding algorithms.
Reference: [GLA89] <author> J.J. Garcia-Luna-Aceves. </author> <title> A Minimum-Hop Routing Algorithm based on Distributed Information. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> (Vol. </volume> 16):367-382, 1989. 
Reference-contexts: All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The primary disadvantage of DBF 1 we use `router' and `node' interchangeably 7 are routing-table loops and counting-to-infinity <ref> [GLA89] </ref>. A routing-table loop is a path specified in the routers' routing tables at a particular point in time, such that the path visits the same router more than once before reaching the intended destination. <p> Because of the poor performance of DVAs implemented using DBF, DVAs were not considered to be a viable approach to supporting routing in large networks or internets. Recently, however, a number of efficient distance-vector algorithms have been proposed to eliminate the counting-to-infinity problem and routing-table loops <ref> [JM82, GLA92, GLA89] </ref>. In this thesis, we focus on the distance-vector algorithms which achieve loop freedom by making use of predecessor information. 2.1 Evolution of Distance-Vector Algorithms One of the earliest implementations of DVA was the routing protocol implemented in the ARPANET in the early 1970s. <p> Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem <ref> [GLA89] </ref>. Some other solutions have also been proposed to overcome this problem [GLA89]. The routing algorithms discussed in this thesis eliminate 8 the counting-to-infinity problem by maintaining the information about the second-to-last-hop (or predecessor) node as a part of the path information to each destination. <p> Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem <ref> [GLA89] </ref>. Some other solutions have also been proposed to overcome this problem [GLA89]. The routing algorithms discussed in this thesis eliminate 8 the counting-to-infinity problem by maintaining the information about the second-to-last-hop (or predecessor) node as a part of the path information to each destination.
Reference: [GLA92] <author> J.J. Garcia-Luna-Aceves. </author> <title> Distributed Routing with Labeled Distances. </title> <booktitle> In INFOCOM, </booktitle> <volume> volume 2, </volume> <pages> pages 633-643. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: Because of the poor performance of DVAs implemented using DBF, DVAs were not considered to be a viable approach to supporting routing in large networks or internets. Recently, however, a number of efficient distance-vector algorithms have been proposed to eliminate the counting-to-infinity problem and routing-table loops <ref> [JM82, GLA92, GLA89] </ref>. In this thesis, we focus on the distance-vector algorithms which achieve loop freedom by making use of predecessor information. 2.1 Evolution of Distance-Vector Algorithms One of the earliest implementations of DVA was the routing protocol implemented in the ARPANET in the early 1970s. <p> LPA is built on two basic mechanisms using predecessor information to eliminate counting-to-infinity and blocking temporary routing loops using an inter-neighbor synchronization method similar to the one proposed in <ref> [GLA92] </ref>. Using the predecessor information, each router can infer if the path corresponding to a distance-table or routing-table entry includes the router itself, i.e., if there is a loop in the path offered by a neighbor. This feature eliminates the counting-to-infinity problem present in DBF. <p> In contrast to many prior loop-free routing algorithms <ref> [GLA92, GLA93, JM82] </ref>, queries propagate only one hop in LPA. Furthermore, updates and routing table entries in LPA require a single node identifier as path information rather than a variable number of node identifiers as in prior algorithms [GLA92]. The rest of the chapter is organized as follows. <p> In contrast to many prior loop-free routing algorithms [GLA92, GLA93, JM82], queries propagate only one hop in LPA. Furthermore, updates and routing table entries in LPA require a single node identifier as path information rather than a variable number of node identifiers as in prior algorithms <ref> [GLA92] </ref>. The rest of the chapter is organized as follows. <p> The following theorem shows that this is the case, i.e., that LPA is free of loops at every instant. The proof is by contradiction and is essentially the same as the one presented in <ref> [GLA92] </ref> for another algorithm. Proposition 1: If a loop is formed in the successor graph S j (G) for the first time at time t, then some router i in that loop must choose an upstream router as its successor at time t. <p> Because all routers in C j (t) must have a successor at time t, all of them must be passive at that time. If all routers in C j (t) have always been passive before time t, it follows from Theorem 1 in <ref> [GLA92] </ref> that router i cannot create C j (t); the proof of that theorem is based on the fact that F D i j can only decrease as long as router i is passive. <p> DBF has a worst-case time complexity of O (jN j) and worst-case communication complexity of O (jN 2 j), where jN j is the number of routers in the network G <ref> [GLA92] </ref>. <p> On the other hand, DUAL has T C = O (x) and CC = O (x), where x is the number of routers affected by the single topology change <ref> [GLA92] </ref>. The following theorem shows that LPA has T C = O (x); using a similar argument, LPA can be shown to have a worst-case communication complexity of O (x) after a single resource failure.
Reference: [GLA93] <author> J.J. Garcia-Luna-Aceves. </author> <title> Loop-Free Routing using Diffusing Computations. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 1(1) </volume> <pages> 130-141, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL <ref> [GLA93] </ref> Recently, a number of distributed shortest-path routing algorithms have been proposed [CRKGLA89, GLA86, Hag83, Hum91, RF91] have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. <p> In contrast to many prior loop-free routing algorithms <ref> [GLA92, GLA93, JM82] </ref>, queries propagate only one hop in LPA. Furthermore, updates and routing table entries in LPA require a single node identifier as path information rather than a variable number of node identifiers as in prior algorithms [GLA92]. The rest of the chapter is organized as follows. <p> The performance of these two algorithms is compared with that of DUAL <ref> [GLA93] </ref> and an ideal link state (ILS) algorithm. DUAL and ILS were chosen, because they represent the state-of-the-art in internet routing protocols. The rest of the Chapter is organized as follows. The next section gives a brief introduction about the simulator that has been used in our simulation experiments.
Reference: [Hag83] <author> J. Hagouel. </author> <title> Issues in Routing for Large and Dynamic Networks. </title> <type> Technical Report RC 9942 (No. 44055), </type> <institution> IBM Research Report, </institution> <month> April </month> <year> 1983. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL [GLA93] Recently, a number of distributed shortest-path routing algorithms have been proposed <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. We refer to these algorithms as path-finding algorithms.
Reference: [Hed88] <author> C. Hedrick. </author> <title> Routing Information Protocol. </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: The algorithms can be made adaptive to the network load by choosing a proper cost-metric for updating routing information at each node. The results presented here can be used to develop a new implementation of the Routing Information Protocol (RIP) <ref> [Hed88] </ref> that eliminates all of its performance problems. The rest of this thesis is organized as follows. Chapter 2 gives a brief overview about the development of routing algorithms and the state of the art of routing protocols. <p> Well-known examples of routing protocols based on distance-vector algorithms, which we call distance vector algorithms (DVA), are the routing information protocol (RIP) <ref> [Hed88] </ref>, the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old ARPANET routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92].
Reference: [HS82] <author> R. Hinden and A. Sheltzer. </author> <title> DARPA Internet Gateway. </title> <type> RFC 823, </type> <institution> Network Information Center, SRI International, </institution> <month> September </month> <year> 1982. </year>
Reference-contexts: Well-known examples of routing protocols based on distance-vector algorithms, which we call distance vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) <ref> [HS82] </ref>, the exterior gateway protocol (EGP) [Mil83b] and the old ARPANET routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The primary disadvantage of DBF 1 we use `router' and `node' interchangeably 7 are routing-table loops and counting-to-infinity [GLA89].
Reference: [Hum91] <author> P.A. Humblet. </author> <title> Another Adaptive Shortest-Path Algorithm. </title> <journal> IEEE Trans. Commun., (Vol.39, </journal> <volume> No.6):995-1003, </volume> <month> June </month> <year> 1991. </year> <month> 62 </month>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL [GLA93] Recently, a number of distributed shortest-path routing algorithms have been proposed <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. We refer to these algorithms as path-finding algorithms. <p> Any router can traverse the path specified by a predecessor from any destination back to its neighbor router to determine whether by using that neighbor as its successor would create a path that contains a loop (i.e, involves the router itself). Unlike earlier path-finding algorithms <ref> [CRKGLA89, Hum91] </ref>, in PFA and LPA, upon receiving an update message from its neighbor k, node i also determines if a path to destination j through any of its other neighbors (6= k) includes node k itself. If so, such a path is not selected. <p> Link or node failures, recoveries, and link-cost changes are handled similarly (Steps (5), (6) and (7)). In contrast to PFA, which makes node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, CKGLA92, RF91, Hum91] </ref> check the consistency of predecessor only for the neighbor associated with the input event. <p> Therefore, in the worst case, the number of steps required for a node to converge to its correct distance is O (h). Q.E.D. 3.4 Comparison with Humblet's Algorithm Humblet <ref> [Hum91] </ref> has presented a path-finding algorithm in which a breadth-first-search on the nodal distance tables is done to construct the routing tables.
Reference: [JM82] <author> J.M. Jaffe and F.M. Moss. </author> <title> A Responsive Routing Algorithm for Computer Networks. </title> <journal> IEEE Trans. Commun., </journal> <volume> (Vol. </volume> 30):1758-1762, July 1982. 
Reference-contexts: Because of the poor performance of DVAs implemented using DBF, DVAs were not considered to be a viable approach to supporting routing in large networks or internets. Recently, however, a number of efficient distance-vector algorithms have been proposed to eliminate the counting-to-infinity problem and routing-table loops <ref> [JM82, GLA92, GLA89] </ref>. In this thesis, we focus on the distance-vector algorithms which achieve loop freedom by making use of predecessor information. 2.1 Evolution of Distance-Vector Algorithms One of the earliest implementations of DVA was the routing protocol implemented in the ARPANET in the early 1970s. <p> In contrast to many prior loop-free routing algorithms <ref> [GLA92, GLA93, JM82] </ref>, queries propagate only one hop in LPA. Furthermore, updates and routing table entries in LPA require a single node identifier as path information rather than a variable number of node identifiers as in prior algorithms [GLA92]. The rest of the chapter is organized as follows.
Reference: [McQ74] <author> J. McQuillan. </author> <title> Adaptive Routing algorithms for Distributed Computer Networks. </title> <type> Technical report, </type> <institution> Bolt Beranek and Newman, BBN, Report.2831, </institution> <year> 1974. </year>
Reference-contexts: This inconsistent view of the network can lead to the formation of loops, which are temporary and disappear in the time it takes for all routers to have the same topological information. Shortest Path First (SPF) <ref> [McQ74] </ref> is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF [Moy91]. <p> Well-known examples of routing protocols based on distance-vector algorithms, which we call distance vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old ARPANET routing protocol <ref> [McQ74] </ref>. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The primary disadvantage of DBF 1 we use `router' and `node' interchangeably 7 are routing-table loops and counting-to-infinity [GLA89].
Reference: [Mil83a] <author> D. Mills. </author> <title> DCN Local Network Protocols. </title> <type> RFC 891, </type> <institution> Network Information Center, SRI International, </institution> <month> December, </month> <year> 1983. </year>
Reference-contexts: Well-known examples of routing protocols based on distance-vector algorithms, which we call distance vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol <ref> [Mil83a] </ref>, the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old ARPANET routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92].
Reference: [Mil83b] <author> D. Mills. </author> <title> Exterior Gateway Protocol. </title> <type> RFC 904, </type> <institution> Network Information Center, SRI International, </institution> <month> December </month> <year> 1983. </year>
Reference-contexts: Well-known examples of routing protocols based on distance-vector algorithms, which we call distance vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) <ref> [Mil83b] </ref> and the old ARPANET routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The primary disadvantage of DBF 1 we use `router' and `node' interchangeably 7 are routing-table loops and counting-to-infinity [GLA89].
Reference: [Moy91] <author> J. Moy. </author> <note> OSPF Version 2. RFC 1247, </note> <month> August </month> <year> 1991. </year>
Reference-contexts: Routing in today's computer networks is accomplished by distributed shortest-path routing algorithms. The routing algorithms based on Distributed Bellman-Ford (DBF) algorithm [BG92] are susceptible to the formation of temporary loops. Looping problems can be avoided in one of the three ways. OSPF <ref> [Moy91] </ref> relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with any topology broadcast algorithm. BGP [RL94] exchanges distance vectors that specify complete paths to destinations. <p> Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF <ref> [Moy91] </ref>. Distance-Vector Algorithms: In a distance-vector algorithm, a router knows the length of the shortest-path (distance) from each of its neighbors to every destination in the network, and uses this information to compute its own distance and next router (successor) to each destination.
Reference: [Ora90] <author> D. Oran. </author> <title> OSI IS-IS Intra-domain routing protocol. </title> <type> RFC 1142, </type> <month> February </month> <year> 1990. </year>
Reference-contexts: Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS <ref> [Ora90, Per91] </ref>, and OSPF [Moy91]. Distance-Vector Algorithms: In a distance-vector algorithm, a router knows the length of the shortest-path (distance) from each of its neighbors to every destination in the network, and uses this information to compute its own distance and next router (successor) to each destination.
Reference: [Per91] <author> Radia Perlman. </author> <title> A comparison between two routing protocols: </title> <journal> OSPF and IS-IS. IEEE Network, </journal> <volume> (Vol. 5, No. </volume> 5):18-24, Sept. 1991. 
Reference-contexts: Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS <ref> [Ora90, Per91] </ref>, and OSPF [Moy91]. Distance-Vector Algorithms: In a distance-vector algorithm, a router knows the length of the shortest-path (distance) from each of its neighbors to every destination in the network, and uses this information to compute its own distance and next router (successor) to each destination.
Reference: [RF91] <author> B. Rajagopalan and M. Faiman. </author> <title> A Responsive Distributed Shortest-Path Routing Algorithm within Autonomous Systems. Internetworking: </title> <journal> Research and Experience, </journal> <volume> (Vol. 2, No. </volume> 1):51-69, March 1991. 
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. Cisco's EIGRP uses a loop-free routing algorithm based on internodal coordination called DUAL [GLA93] Recently, a number of distributed shortest-path routing algorithms have been proposed <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> have proposed distributed shortest-path algorithms that utilize information regarding the length and the second-to-last hop (predecessor) of the shortest-path to each destination to eliminate the counting-to-infinity problem. We refer to these algorithms as path-finding algorithms. <p> Link or node failures, recoveries, and link-cost changes are handled similarly (Steps (5), (6) and (7)). In contrast to PFA, which makes node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, CKGLA92, RF91, Hum91] </ref> check the consistency of predecessor only for the neighbor associated with the input event. <p> Q.E.D. 3.4 Comparison with Humblet's Algorithm Humblet [Hum91] has presented a path-finding algorithm in which a breadth-first-search on the nodal distance tables is done to construct the routing tables. He has also pointed out how other previous path findings algorithms <ref> [RF91, CRKGLA89] </ref> compare with his. 25 The comparison of the algorithms are done based on cost of the links. We illustrate the differences between this algorithm and PFA using Figure 3.4, 3.5, 3.6.
Reference: [RL94] <author> Y. Rekhter and T. Li. </author> <title> Border Gateway Protocol 4 (BGP-4). Network Working Group Internet Draft, </title> <month> January </month> <year> 1994. </year>
Reference-contexts: Looping problems can be avoided in one of the three ways. OSPF [Moy91] relies on broadcasting complete topology information among routers, and organizes an internet hierarchically to cope with the overhead incurred with any topology broadcast algorithm. BGP <ref> [RL94] </ref> exchanges distance vectors that specify complete paths to destinations. <p> This unique feature of PFA accounts for its fast convergence after a single link-cost change, as illustrated in Section 5, because it eliminates more temporary looping situations than previous path-finding algorithms or even BGP <ref> [RL94] </ref> could. The following example helps illustrate this. Consider the four-node network shown in the same propagation delays. The costs of the links are as indicated in the figure; links have the same cost in both directions.
Reference: [Sch86] <author> M. Schwartz. </author> <title> Telecommunications Networks: Protocols, Modeling and Analysis. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Menlo Park, California, </address> <year> 1986. </year> <note> Chapter 6. </note>
Reference-contexts: Finally, Chapter 6 concludes with a brief summary and an insight into future work. 5 Chapter 2 Overview Routing techniques for packet-switched networks can be broadly classified into static and adaptive routing policies <ref> [Sch86] </ref>. In static routing, routing tables are set up at a certain time before the data are being transmitted and the routing table is not changed thereafter. In adaptive routing, network conditions are continuously monitored and the routing tables are changed dynamically to adapt to the changing network conditions. <p> Many approaches have been proposed in the past to solve, at least in part, the looping problems of DVAs. A widely known proposal is the split-horizon technique, which avoids ping-pong looping, whereby two nodes choose each other as the successor to a destination <ref> [Ceg75, Sch86] </ref>. Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem [GLA89]. Some other solutions have also been proposed to overcome this problem [GLA89].
Reference: [Zau91] <author> W.T. Zaumen. </author> <title> Simulations in Drama. Network Information System Center, </title> <booktitle> SRI International, </booktitle> <month> January </month> <year> 1991. </year>
Reference-contexts: Section 5.3 list the parameters used in measuring the performance and the instrumentation part of the simulations. Section 5.4 describes the results of the simulations. Finally, Section 5.5 summarizes the chapter. 5.1 Simulations in Drama We have developed our simulations using an actor-based, discrete-event simulation language called Drama <ref> [Zau91] </ref> together with a network simulation library. Drama is a C-based simulation language that supports an actor-based computational model, in which actors are independent activities that communicate by passing messages in the context of a discrete-event simulation. This makes it convenient for modeling communication networks.
References-found: 23

