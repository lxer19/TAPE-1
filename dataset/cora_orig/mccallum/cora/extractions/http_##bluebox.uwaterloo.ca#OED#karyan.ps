URL: http://bluebox.uwaterloo.ca/OED/karyan.ps
Refering-URL: http://bluebox.uwaterloo.ca/OED/trdbms.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: kyng@watsol.uwaterloo.ca  
Title: The Use of a Combined Text/Relational Database System to Support Document Management  
Author: Kar Yan Ng 
Address: Waterloo, Ontario, Canada  
Affiliation: Department of Computer Science University of Waterloo  
Date: January 1996  
Pubnum: CS-96-07  
Abstract: fl This is the thesis which embodies the results of my research done in partial fulfilment of the requirements for the degree of Master of Mathematics in Computer Science at the Department of Computer Science, University of Waterloo 
Abstract-found: 1
Intro-found: 1
Reference: [App94] <institution> Apple Computer, Inc. "OpenDoc: Shaping Tommorow's Software", White Paper, </institution> <year> 1994. </year>
Reference: [App95] <institution> Apple Computer, Inc. </institution> <type> OpenDoc Technical Summary, </type> <month> April 14 </month> <year> 1995. </year> <note> ftp://ftp.cil.org/pub/cilabs/tech/opendoc/OD-TechSummary 940414/ OD-TechSummary 940414.ps. </note>
Reference-contexts: On a conceptual level, by explicitly representing documents as objects, the object-oriented data model lends itself more directly and is naturally compatible with such object-based or object-oriented document management approaches as OLE2 [Mic94c] and Opendoc <ref> [App95] </ref>. On 94 the negative side however, an explicit schema needs to be pre-defined and documents need to be broken down into components before they can be put into the database. Therefore, the object-oriented approach shares many common limitations with their relational counterparts as discussed above.
Reference: [Ass94] <institution> Association for Computers and the Humanities (ACH) and Association for Computational Linguistics (ACL) and Association for Literacy and Linguistic Computing (ALLC). Guidelines for Electronic Text Encoding and Interchange, </institution> <month> April 8 </month> <year> 1994. </year>
Reference: [AT92] <author> P. Angerstein and Texcel. </author> <title> SGML Sample Queries. </title> <month> 28 October </month> <year> 1992. </year>
Reference-contexts: Even without an explicit grammar, the document structure of a piece of text is implicit in the relative positions of the tags. As pointed 5 extracted and adapted from the SGML92 report <ref> [AT92] </ref> and section 5.2 below 45 &lt;report&gt; &lt;title&gt;Getting started with SGML&lt;/title&gt; &lt;chapter shorttitle="challenge"&gt; &lt;title&gt;The business challenge&lt;/title&gt; &lt;intro&gt; &lt;para&gt;With the ever-changing and growing global market, companies and large organizations are searching for ways to become more viable and competitive. Downsizing and other cost-cutting measures demand more efficient use of corporate resources. <p> Moreover, in the course of doing so, we also demonstrate the extent of completeness of the our operation set as indicated by its capability to support the execution of the document management tasks in the various data models. 5.2 A Data Placement Evaluation Example 5.2.1 What is SGML92 ? SGML92 <ref> [AT92] </ref> is a simple report which is marked with SGML tags [Int86]. We select it for use as our demonstration example for its relative simplicity while it contains many of the main document representation features of SGML.
Reference: [BA94] <author> Klemens Bohm and Karl Aberer. </author> <title> Storing HyTime Documents in an Object-Oriented Database. </title> <address> GMD-IPSI, Dolivostrafie, 15, 64293 Darmstadt, Germany. ftp://ftp.darmstadt.gmd.de/pub/dimsys/reports, </address> <year> 1994. </year>
Reference-contexts: For instance, the join operation in Oracle may operate on the actual tuples instead of just their location sets (see Analytical work may be extended to cover the use of object-oriented data models for document management. In an object-oriented data model (e.g. [CAS94] and <ref> [BA94] </ref>), each document or each of its components is stored as an object with its own attributes.
Reference: [BCD + 95] <author> G.E. Blake, M. P. Consens, I. J. Davis, P. Kilpelainen, E. Kuikka, P. A Larson, T. Snider, and F. W. Tompa. </author> <title> Text/Relational Database Management Systems: Overview and Proposed SQL Extensions. </title> <type> Technical Report CS-95-25, </type> <institution> UW Centre for the New Oxford English Dictionary and Text Research, University of Waterloo, </institution> <address> Ontario, Canada, </address> <month> June </month> <year> 1995. </year> <month> ftp://cs-archive.uwaterloo.ca/cs-archive/CS-95-25/CS-95-25.ps.Z. </month>
Reference-contexts: 1 Introduction 1.1 The Research Problem and its Context The research reported in this thesis operates within the context of an ongoing project <ref> [BCD + 95] </ref> at the Centre for the New Oxford English Dictionary and Text Research of the University of Waterloo (hereinafter referred to as the Centre) to study various issues related to the design and use of text databases. <p> Specifically, in this section we examine some major issues in determining the appropriate data placement in a federated database environment that contains both text and relational sub-systems. Following the terminology used in <ref> [BCD + 95] </ref>, in this thesis we call this particular type of federated database managements the combined text/relational database management systems. Data Granularization Many document entities are related hierarchically within some logical structures. <p> Moreover, no standard has yet been accepted by either the industrial or academic community. 8 or non First Normal Form, since multivalued and composite attributes are allowed 54 4.7 The Grammar-independent Relational Model In a previous version of <ref> [BCD + 95] </ref> published in the Proceedings of the Advanced Database Conference 1994, a type of relational model was described in which the schema is independent of the structure of the documents to be represented. <p> An example of such a hybrid system has been proposed by <ref> [BCD + 95] </ref>, with the architecture shown in Figure 10. To handle data effectively in the form of structured text requires capability that is not provided by current relational database management systems. <p> However, no attempt has been made to measure the performance of these operations experimentally against any commercial database management system. Based on our use of the PAT [Ope93], Oracle [Ora92b], and the Hybrid Query Processor <ref> [BCD + 95] </ref> as design references, we expect such experimental work would serve to validate the usefulness of our set of primitive operation.
Reference: [BDM + 94] <author> C. Mic Bowman, Peter. B. Danzig, Udi Manber, Dar-ren R. Hardy, and Michael F. Schwartz. </author> <title> A Scalable, Customizable, Discovery and Access System. </title> <booktitle> In Electronic Proceedings of the Second World Wide Web Conference '94: Mosaic and the Web, </booktitle> <month> September 18-19 </month> <year> 1994. </year> <note> http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/Searching/ schwartz.harvest/schwartz.harvest.html. </note>
Reference-contexts: Search for Document In document searches, we look for target documents that match our requirements as expressed in some querying languages. Some popular examples of retrieval systems that support document searches include Wais [Lin92], Open Text [Ope95], Lycos [ML94], and Harvest <ref> [BDM + 94] </ref>. <p> As a common example, the addresses may be in the form of Uniform Resource Locators (the URLs 1 ) in an HTML document. Alongside the document addresses, the document retrieval system may display some short descriptions summarizing the contents of the documents <ref> [BDM + 94] </ref>. Based on such information, the users can traverse the links and arrive at the source documents which may contain links for further traversals.
Reference: [Ber93] <author> Tim Berners-Lee. </author> <title> Hypertext Markup Language : A Representation of Textual Information and Metainfor-mation for Retrieval and Interchange, </title> <month> July 13 </month> <year> 1993. </year> <note> 115 ftp://ftp.w3.org/pub/www/doc/html-spec.txt.Z. Draft HTML Version 3.0 Specification currently available on-line at http://www.w3.org/hypertext/WWW/MarkUp/. </note>
Reference-contexts: Such a collection may exist in some permanent forms, e.g. being stored as a file or files on a disk, or be generated at run-time from a collection of components that exist in some permanent forms. With the advent of hypertext [Nel87] and World Wide Web <ref> [Ber93] </ref> technologies, the boundary of what comprises a document becomes open. In a sense, it can be said that all the information currently represented in electronic format is contained in one `global document'. A document may no longer be a static and bounded entity. <p> Various mechanisms of link resolution have been proposed, typically falling into two main categories : static and dynamic resolution. In static resolution, the addresses of the link targets are hard-coded in the page (typically in HTML <ref> [Ber93] </ref> format) facing the users.
Reference: [BG92] <author> David Bell and Jane Grimson. </author> <title> Distributed Database Systems. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1992. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], [YMW + 85], [MIMH85], [CP87], [NCWD84], <ref> [BG92] </ref>, and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [BTR93] <author> G. Elizabeth Blake, F. W. Tompa, and Darrel R. Ray-mond. </author> <title> Hypertext by Link-Resolving Components. </title> <booktitle> In Hypertext '93 Proceedings, </booktitle> <pages> pages 118-30, </pages> <address> Seattle, Washington, U.S.A., </address> <month> November 14-18 </month> <year> 1993. </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: Such mechanisms could be some keywords or a predefined query which the document management system could interpret and invoke the appropriate document retrieval operations accordingly. Some examples of such dynamic link resolution are found in the use of CGI (the Common Gateway Interface) scripts, [Hea92], [Car94], and <ref> [BTR93] </ref>. In the case of CGI scripts used in HTML documents, the clicking of a link triggers the execution of some pre-written scripts which, based on some predefined keywords associated with the link anchors, then execute the necessary information retrieval operations either locally or in some remote sites. <p> Based on the target addresses returned from the link base, the target documents may then be fetched. On the other hand, a dynamic resolution prototype has been built to operate on the OED (short for the Oxford English Dictionary [SW89]) database at the University of Waterloo <ref> [BTR93] </ref>. Link traversal involves searching for some keywords in the OED database and returning the appropriate targets as results to be displayed to the users. In addition, [BTR93] demonstrates another advantage of dynamic resolution. <p> resolution prototype has been built to operate on the OED (short for the Oxford English Dictionary [SW89]) database at the University of Waterloo <ref> [BTR93] </ref>. Link traversal involves searching for some keywords in the OED database and returning the appropriate targets as results to be displayed to the users. In addition, [BTR93] demonstrates another advantage of dynamic resolution.
Reference: [Car94] <author> L.A. Carr. </author> <title> Structure and Hypertext. </title> <type> PhD thesis, </type> <institution> Department of Electronics and Computer Science, Faculty of Engineering and Applied Sciene, University of Southampton, </institution> <address> United Kingdom, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Such mechanisms could be some keywords or a predefined query which the document management system could interpret and invoke the appropriate document retrieval operations accordingly. Some examples of such dynamic link resolution are found in the use of CGI (the Common Gateway Interface) scripts, [Hea92], <ref> [Car94] </ref>, and [BTR93]. In the case of CGI scripts used in HTML documents, the clicking of a link triggers the execution of some pre-written scripts which, based on some predefined keywords associated with the link anchors, then execute the necessary information retrieval operations either locally or in some remote sites. <p> In the project Microcosm (see [Hea92] and <ref> [Car94] </ref>) at the University of Southampton, researchers place all link information (such as the target addresses and the identifier of the links) in a link base separated from the document database. Only the link identifiers are kept in the documents.
Reference: [CAS94] <author> V. Christophides, S. Abiteboul, and M. Scholl. </author> <title> From Structured Documents to Novel Query Facilities. </title> <booktitle> In SIGMOD 94, 78153, </booktitle> <address> Le Chesnay, Cedex, France, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: For instance, the join operation in Oracle may operate on the actual tuples instead of just their location sets (see Analytical work may be extended to cover the use of object-oriented data models for document management. In an object-oriented data model (e.g. <ref> [CAS94] </ref> and [BA94]), each document or each of its components is stored as an object with its own attributes.
Reference: [CCB95] <author> Charles L. A. Clarke, G. Y. Cormack, and F. J. Burkowski. </author> <title> An Algebra for Structured Text Search and a Framework for its Implementation. </title> <journal> Computer Journal, </journal> <volume> 38(1) </volume> <pages> 43-56, </pages> <year> 1995. </year>
Reference-contexts: To facilitate access to the structured text, indexing may be performed in which the positions and extents of each document com ponent, the words, and even the characters are recorded in some data structures ([ST93] and <ref> [CCB95] </ref>). The Pure Relational Model Alternatively, the document skele ton could be stored in a traditional database, for example, one based on the relational model. In this case, one representation could be as 10 receiver sender date body Prof. F. <p> The textual contents lying between a pair of start and end tags (e.g. &lt;para&gt; and &lt;/para&gt;) is called a region. Whereas we have defined regions, by explicitly placing tags around the text which they contain, in some text indexing implementations (e.g. [Ope93] and <ref> [CCB95] </ref>), we may instead define regions based on some user-specified patterns without explicit tag insertion.
Reference: [CDY95] <author> Surajit Chaudhuri, Umeshwar Dayal, and Tak W. Yan. </author> <title> Join Queries with External Text Sources : Execution and Optimization Techniques. </title> <booktitle> In SIGMOD 95, </booktitle> <address> San Jose, CA, USA, </address> <year> 1995. </year>
Reference: [Chu92] <author> Pai-cheng Chu. </author> <title> A Transaction-oriented Approach to Attribute Partitioning. </title> <journal> Information Systems, </journal> <volume> 17(4) </volume> <pages> 329-42, </pages> <year> 1992. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], <ref> [Chu92] </ref>, [CMVN92], [ OV91], [YMW + 85], [MIMH85], [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [CMVN92] <author> Sharma Chakravarthy, Jaykumar Muthuraj, Ravi Varadarajan, and Shamkant B. Navathe. </author> <title> An Objective Function For Vertically Partitioning Relations in Distributed Databases and its Analysis. </title> <type> Technical Report UF-CIS-TR-92-045, </type> <institution> Department of Computer and Information Sciences, University of Florida, </institution> <year> 1992. </year> <month> ftp://ftp.cis.ufl.edu/pub/tech-reports/tr92-045.ps.Z. </month>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], <ref> [CMVN92] </ref>, [ OV91], [YMW + 85], [MIMH85], [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [CP84] <author> Stefano Ceri and Giuseppe Pelagatti. </author> <title> Distributed Databases Principles and Systems. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1984. </year> <month> 116 </month>
Reference-contexts: Our literature survey ([CDY95], <ref> [CP84] </ref>, [Chu92], [CMVN92], [ OV91], [YMW + 85], [MIMH85], [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [CP87] <author> Douglas Cornell and Yu Philip. </author> <title> A Vertical Partitioning Al--gorithm for Relational Databases. </title> <booktitle> In Proceedings of the Third International Conference on Data Engineering, </booktitle> <pages> pages 30-35, </pages> <month> February </month> <year> 1987. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], [YMW + 85], [MIMH85], <ref> [CP87] </ref>, [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [DD94] <author> Steven J. DeRose and David G. Durand. </author> <title> Making Hypermedia Work, A User's Guide to HyTime. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994. </year>
Reference: [DDSS95] <author> Samuel DeFazio, Amjad Daoud, Lisa Ann Smith, and Ja-gannathan Srinivasan. </author> <title> Integrating IR and RDBMS Using Cooperative Indexing. </title> <booktitle> In SIGIR 95, </booktitle> <address> Seattle, WA, USA, </address> <month> June </month> <year> 1995. </year>
Reference: [EN89] <author> Ramez Elmasri and Shamkant B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <publisher> The Benjamin/Cummings Publishing Company, Inc., </publisher> <year> 1989. </year>
Reference-contexts: goal of achieving better efficiency in data manipulation. 1.2 Data Placement in Federated Databases A federated database management system is a type of distributed database management system in which each constituent database management system is an independent and autonomous centralized system that has its own local users, transactions and administration <ref> [EN89] </ref>. Specifically, in this section we examine some major issues in determining the appropriate data placement in a federated database environment that contains both text and relational sub-systems. <p> With this approach, we may use the total execution time for a query containing the operation as the dependent variable. The steps for executing the query, accessing the data, and storing the intermediate results are set out in an execution plan <ref> [EN89] </ref>. We use the execution plans supplied by the database management systems to identify the query processing operations that have been performed and the sizes of inputs to each of them. Suppose for simplicity we use a linear regression model. <p> ex tractComp operation 42 It is noted that using such a time measurement approach does require a good correspondence between our basic operations and the operations reported in the execution plans of the database manage ment system being studied. 43 4 Data Models for Document Databases 4.1 Overview According to <ref> [EN89] </ref>, a data model is a set of concepts that can be used to describe the structure of a database. Furthermore, [EN89] classifies data models as follows : High-level or Conceptual data models provide concepts that are close to the way many users perceive data, whereas Low-level or Physical data models <p> basic operations and the operations reported in the execution plans of the database manage ment system being studied. 43 4 Data Models for Document Databases 4.1 Overview According to <ref> [EN89] </ref>, a data model is a set of concepts that can be used to describe the structure of a database. Furthermore, [EN89] classifies data models as follows : High-level or Conceptual data models provide concepts that are close to the way many users perceive data, whereas Low-level or Physical data models provide concepts that describe the details of how data is stored in the computer.
Reference: [Fur89] <author> Richard Furuta. </author> <title> Concepts and Models for Structured Documents. </title> <editor> In J. Andre, R. Furuta, and V. Quint, editors, </editor> <booktitle> Structured Documents, </booktitle> <pages> pages 7-38. </pages> <publisher> Cambridge University Press, IRIA, </publisher> <year> 1989. </year>
Reference: [FX93] <author> Peter Fankhauser and Yi Xu. </author> <title> Mark-it Up | An Incremental Approach to Document Recognition. </title> <address> GMD-IPSI, Dolivostr, 15, D-64293 Darmstadt, Germany. E-mail : ffankhaus, </address> <month> xuyig@darmstadt.gmd.de ftp.darmstadt.gmd.de. </month> <title> They are located in the subdirectories of pub/dimsys/reports named by the year, and are all compressed, postscript files., </title> <month> December </month> <year> 1993. </year>
Reference-contexts: this model to represent an SGML document, we show how the following DTD may be represented by the Entity-Relationships diagram in Figure 9 which may then be repre sented as Tables 4 and 5. 6 either manually or through some automatic document recognition mechanisms as dis cussed in, for example, <ref> [FX93] </ref> and [Mar92]. 50 sectid shorttitle title intro Table 4: section-title-intro sect id seq # topic Table 5: section-topic &lt;!ELEMENT section - o (title, intro?, topic*)&gt; &lt;!ATTLIST section shorttitle CDATA #IMPLIED sectid ID #IMPLIED&gt; Database managers have the discretion over how the document components should be distributed among the tables.
Reference: [Gol90] <author> C.F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1990. </year>
Reference: [Hea92] <author> Ian Heath. </author> <title> An Open Model for Hypermedia : Abstracting Links from Documents. </title> <type> PhD thesis, </type> <institution> Department of Electronics and Computer Science, Faculty of Engineering and Applied Sciene, University of Southampton, </institution> <address> United Kingdom, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: Such mechanisms could be some keywords or a predefined query which the document management system could interpret and invoke the appropriate document retrieval operations accordingly. Some examples of such dynamic link resolution are found in the use of CGI (the Common Gateway Interface) scripts, <ref> [Hea92] </ref>, [Car94], and [BTR93]. <p> In the project Microcosm (see <ref> [Hea92] </ref> and [Car94]) at the University of Southampton, researchers place all link information (such as the target addresses and the identifier of the links) in a link base separated from the document database. Only the link identifiers are kept in the documents.
Reference: [HHR94] <author> Anja Haake, Christoph Huser, and Klaus Reichenberger. </author> <title> The Individualized Electronic Newspaper : An Example of an Active Publication. </title> <publisher> Electronic Publishing, </publisher> <pages> 7(2) 89-111, </pages> <month> June </month> <year> 1994. </year>
Reference: [IES94] <institution> IESC Electronic Document Management Sub-Committee, Data Administration Standards Communications and Information Systems Engineering Branch, Department of Defence, </institution> <month> Australia. </month> <title> Implementing Effective Procedures for the Management of Electronic Documents in the Australian Public Service. </title> <journal> Journal of the American Society for Information Science, </journal> <month> August 1 </month> <year> 1994. </year> <month> ftp://archie.au/ACS/implguid.html. </month>
Reference-contexts: According to <ref> [IES94] </ref>, Security in relation to electronic documents means maintaining their availability, integrity and confidentiality by minimizing the risk of loss, corruption, and unauthorized access.
Reference: [Int86] <author> International Organization for Standardization. </author> <title> Information Processing Text and Office Information Systms Standard Generalized Mark-up Language. </title> <type> ISO 8879. </type> <institution> ISO Committee, </institution> <year> 1986. </year>
Reference-contexts: In this form, it is difficult to provide efficient ac cess without better management of its structure. Therefore, several researchers have proposed the use of SGML <ref> [Int86] </ref> to represent the logical structures contained in the texts. Structural tags are embed ded within the text to delimit individual document components. For instance, the above messages could be represented using structural tags as shown in Figure 1. <p> If its structure is to be explicitly represented, we may do so by marking up the corresponding document components by some structural tags. In these regards, the Standard Generalized Markup Language (SGML) <ref> [Int86] </ref> has been designed to provide a standard way of representing text documents marked up by structural tags. An SGML document typically contains a DTD (or the document type definition) which contains the grammar to which the text must conform and the text which is tagged according to the DTD. <p> extent of completeness of the our operation set as indicated by its capability to support the execution of the document management tasks in the various data models. 5.2 A Data Placement Evaluation Example 5.2.1 What is SGML92 ? SGML92 [AT92] is a simple report which is marked with SGML tags <ref> [Int86] </ref>. We select it for use as our demonstration example for its relative simplicity while it contains many of the main document representation features of SGML.
Reference: [Int92] <institution> International Organization for Standardization. Hypermedia/Time-based Structuring Language : HyTime. ISO/IEC 10744. ISO Committee, </institution> <year> 1992. </year>
Reference: [Jai92] <author> Raj Jain. </author> <title> The Art of Computing Systems Performance Analysis : Techniques for Experimental Design, Measurement, Simulation, and Modeling. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1992. </year>
Reference-contexts: For instance, for the join operation, queries with and without it may use different data structures and access paths. In such situations, we propose the use of regression analysis techniques <ref> [Jai92] </ref> to identify the impact of individual operations. With this approach, we may use the total execution time for a query containing the operation as the dependent variable. The steps for executing the query, accessing the data, and storing the intermediate results are set out in an execution plan [EN89].
Reference: [Kil92] <author> Pekka Kilpelainen. </author> <title> Tree Matching Problems with Applications to Structured Text Databases. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Helsinki, Finland, </institution> <month> Novem-ber </month> <year> 1992. </year>
Reference-contexts: For example, a combined system requires facilities for converting repeated text components into relations, and for handling text matching involving path specifications whether in terms of direct or indirect containment <ref> [Kil92] </ref>. Therefore, not only is full text capability required, but it is also necessary to extend the SQL standards to include functions that handle the structured text data type specifically.
Reference: [Lam85] <author> Leslie Lamport. </author> <title> L A T E X: A Document Preparation System, </title> <year> 1985. </year>
Reference-contexts: Some document processing systems have facilities to allow their users to specify how a 25 document is to be composed at run-time. One example would be the include 3 facility of L A T E X <ref> [Lam85] </ref>. One major shortcoming of this approach is that it severely restricts the reusability and sharability of a document. It makes configuration management of the document very inefficient. Versioning can only take place at the level of entire documents.
Reference: [Lin92] <author> Barbara Lincoln. </author> <title> Wide Area Information Servers (WAIS) Bibliography. </title> <address> gopher://watserv2.uwaterloo.ca/00/servers/guides/wais/ bibliography.txt, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: Search for Document In document searches, we look for target documents that match our requirements as expressed in some querying languages. Some popular examples of retrieval systems that support document searches include Wais <ref> [Lin92] </ref>, Open Text [Ope95], Lycos [ML94], and Harvest [BDM + 94].
Reference: [Mar92] <author> Nenad Marovac. </author> <title> Document Recognition | Concepts and Implementation. </title> <institution> Department of Mathematical Sciences, San Diego State University, E-mail : nenad@math.sdsu.edu, </institution> <month> August </month> <year> 1992. </year>
Reference-contexts: to represent an SGML document, we show how the following DTD may be represented by the Entity-Relationships diagram in Figure 9 which may then be repre sented as Tables 4 and 5. 6 either manually or through some automatic document recognition mechanisms as dis cussed in, for example, [FX93] and <ref> [Mar92] </ref>. 50 sectid shorttitle title intro Table 4: section-title-intro sect id seq # topic Table 5: section-topic &lt;!ELEMENT section - o (title, intro?, topic*)&gt; &lt;!ATTLIST section shorttitle CDATA #IMPLIED sectid ID #IMPLIED&gt; Database managers have the discretion over how the document components should be distributed among the tables.
Reference: [Mic94a] <institution> Microsoft Corporation. </institution> <note> Microsoft Word User's Manual Version 6.0, </note> <month> October </month> <year> 1994. </year>
Reference-contexts: the necessary modification to the data and indicies. 2.6 Document Control 2.6.1 Document Sharing and Reuse Traditionally (and even with the prevalence of WWW and hypertext), most documents are stored at their local sites as single files in many major document processing formats such as WordPerfect [Wor90] and Microsoft Word <ref> [Mic94a] </ref>. It has been the users' responsibility to break their documents into components if they so wish. Some document processing systems have facilities to allow their users to specify how a 25 document is to be composed at run-time.
Reference: [Mic94b] <institution> Microsoft Corporation. </institution> <note> "Object Linking and Embedding : Version 2.0", </note> <institution> Microsoft Technical Backgrounder, </institution> <month> June </month> <year> 1994. </year> <month> 118 </month>
Reference: [Mic94c] <author> Microsoft Corporation. </author> <title> "OLE Integration Technologies", </title> <type> Technical Overview, </type> <month> October </month> <year> 1994. </year>
Reference-contexts: On a conceptual level, by explicitly representing documents as objects, the object-oriented data model lends itself more directly and is naturally compatible with such object-based or object-oriented document management approaches as OLE2 <ref> [Mic94c] </ref> and Opendoc [App95]. On 94 the negative side however, an explicit schema needs to be pre-defined and documents need to be broken down into components before they can be put into the database. Therefore, the object-oriented approach shares many common limitations with their relational counterparts as discussed above.
Reference: [MIMH85] <author> Shojiro Muro, Toshihide Ibaraki, Hidehiro Miyajima, and Toshiharu Hasegawa. </author> <title> Evaluation of the File Redundancy in Distributed Database Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-11(2), </volume> <month> February </month> <year> 1985. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], [YMW + 85], <ref> [MIMH85] </ref>, [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [ML94] <author> Michael L. Mauldin and John R. R. Leavitt. </author> <title> Web Agent Related Research at the Center for Machine Translation. </title> <booktitle> In SIGNIDR, </booktitle> <month> August </month> <year> 1994. </year> <note> http://fuzine.mt.cs.cmu.edu/mlm/signidr94.html. </note>
Reference-contexts: Search for Document In document searches, we look for target documents that match our requirements as expressed in some querying languages. Some popular examples of retrieval systems that support document searches include Wais [Lin92], Open Text [Ope95], Lycos <ref> [ML94] </ref>, and Harvest [BDM + 94].
Reference: [NCWD84] <author> Shamkant Navathe, Stefano Ceri, Gio Wiederhold, and Jinglie Dou. </author> <title> Vertical Partitioning Algorithms for Database Design. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(4), </volume> <month> De-cember </month> <year> 1984. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], [YMW + 85], [MIMH85], [CP87], <ref> [NCWD84] </ref>, [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [Nel87] <author> Nelson, T. </author> <title> Literary Machines. </title> <address> ISBN 0-89347-056-2, </address> <year> 1987. </year>
Reference-contexts: Such a collection may exist in some permanent forms, e.g. being stored as a file or files on a disk, or be generated at run-time from a collection of components that exist in some permanent forms. With the advent of hypertext <ref> [Nel87] </ref> and World Wide Web [Ber93] technologies, the boundary of what comprises a document becomes open. In a sense, it can be said that all the information currently represented in electronic format is contained in one `global document'. A document may no longer be a static and bounded entity.
Reference: [NM89] <author> Shamkant Navathe and Ra Minyoung. </author> <title> Vertical Partitioning Algorithms for Database Design : A Graphical Algorithm. </title> <booktitle> In SIGMOD 89, </booktitle> <address> Portland, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], [YMW + 85], [MIMH85], [CP87], [NCWD84], [BG92], and <ref> [NM89] </ref>) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [Nov95] <author> Inc. </author> <title> Novell. Open Document Management API Version 1.0, </title> <month> January 3 </month> <year> 1995. </year>
Reference: [Ope95] <author> Open Text Corporation. </author> <title> The Web Index Overview, </title> <note> 1995. http://opentext.uunet.ca:8080/intro.html. </note>
Reference-contexts: Search for Document In document searches, we look for target documents that match our requirements as expressed in some querying languages. Some popular examples of retrieval systems that support document searches include Wais [Lin92], Open Text <ref> [Ope95] </ref>, Lycos [ML94], and Harvest [BDM + 94].
Reference: [Ope93] <author> Open Text Corporation. </author> <title> PAT Reference Manual and Tutorial, </title> <type> 1989-93. </type>
Reference-contexts: The textual contents lying between a pair of start and end tags (e.g. &lt;para&gt; and &lt;/para&gt;) is called a region. Whereas we have defined regions, by explicitly placing tags around the text which they contain, in some text indexing implementations (e.g. <ref> [Ope93] </ref> and [CCB95]), we may instead define regions based on some user-specified patterns without explicit tag insertion. <p> However, no attempt has been made to measure the performance of these operations experimentally against any commercial database management system. Based on our use of the PAT <ref> [Ope93] </ref>, Oracle [Ora92b], and the Hybrid Query Processor [BCD + 95] as design references, we expect such experimental work would serve to validate the usefulness of our set of primitive operation.
Reference: [Ora88] <author> Oracle Corporation. </author> <title> SQL Language Reference Manual Version 6.0, </title> <year> 1988. </year>
Reference-contexts: Another, more practical, limitation of this approach is that many database systems have placed restrictions on the maximum length of texts that can be held within one table entry. For ORACLE7 Server Release 7.0.15.4.0, there is a limit of 2 gigabytes <ref> [Ora88] </ref> for both binary and ASCII data. In addition, as pointed out by [SAZ94], One of the primary functions of a database schema is that of validating the data in the database.
Reference: [Ora92a] <author> Oracle Corporation. </author> <title> Oracle7 Server Administrator's Guide, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: As a general remark however, the precision and the reliability of all time measurements are limited by the precision of the timing statistics available from the database management system being studied. The timing statistics provided by Oracle 7 <ref> [Ora92a] </ref> for example are only accurate up the nearest 1 100 seconds. Moreover, process timing is also significantly influenced by the workloads of the operating systems, hardware, and communication links at the time of measurement.
Reference: [Ora92b] <author> Oracle Corporation. </author> <title> Oracle7 Server Appolication Developer's Guide, </title> <month> December </month> <year> 1992. </year>
Reference-contexts: According to <ref> [Ora92b] </ref>, the execution plan is interpreted as follows : 1. NESTED LOOPS is an operation that accepts two sets of rows, an outer set and an inner set. <p> However, no attempt has been made to measure the performance of these operations experimentally against any commercial database management system. Based on our use of the PAT [Ope93], Oracle <ref> [Ora92b] </ref>, and the Hybrid Query Processor [BCD + 95] as design references, we expect such experimental work would serve to validate the usefulness of our set of primitive operation.
Reference: [Ora92c] <author> Oracle Corporation. </author> <title> Oracle7 Server Concepts Manual, </title> <month> De-cember </month> <year> 1992. </year>
Reference-contexts: Accordingly, this corresponds to the join operation in our basic operations set. 2. TABLE ACCESS (BY ROWID) is a retrieval of rows from a table based on its ROWID 4 This example has been adapted from an example in page 13-56 of <ref> [Ora92c] </ref>. 41 This corresponds to an extractComp operation. 3. INDEX (UNIQUE SCAN) is a retrieval of a single ROWIDs from an index. This corresponds to an locateComp operation. According to 13-57 of [Ora92c], Oracle performs the following steps to execute the example query : 1. step 2 accesses the outer table <p> table based on its ROWID 4 This example has been adapted from an example in page 13-56 of <ref> [Ora92c] </ref>. 41 This corresponds to an extractComp operation. 3. INDEX (UNIQUE SCAN) is a retrieval of a single ROWIDs from an index. This corresponds to an locateComp operation. According to 13-57 of [Ora92c], Oracle performs the following steps to execute the example query : 1. step 2 accesses the outer table (emp) with a full table scan. 2. for each row returned by step 2, step 4 uses the emp.deptno value to perform a unique scan on the index of dept.deptno 3. step
Reference: [ OV91] <author> M. Tamer Ozsu and Patrick Valduriez. </author> <title> Distributed Database Systems : Where Are We Now ? IEEE Computer, </title> <type> 24(8), </type> <month> August </month> <year> 1991. </year> <month> 119 </month>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], <ref> [ OV91] </ref>, [YMW + 85], [MIMH85], [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
Reference: [QV94] <author> Vincent Quint and Irene Vatton. </author> <title> Making Structured Docu--ments Active. </title> <publisher> Electronic Publishing, </publisher> <pages> 7(2) 55-74, </pages> <month> June </month> <year> 1994. </year>
Reference: [Ray92] <author> Darrel R. Raymond. </author> <title> Flexible Text Display with Lector. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 49-60, </pages> <month> August </month> <year> 1992. </year>
Reference: [RSB + 87] <author> K. Ramamohanarao, J. Shepherd, I. Balbin, G. Port, L. Naish, J. Thom, J. Zobel, and P. </author> <title> Dart. The NU-Prolog Deductive Database System. </title> <journal> IEEE Data Engineering, </journal> <volume> 10(4) </volume> <pages> 10-19, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: Probably we need modelling apparatus which has been specially developed for modelling at such a level of abstraction. One possibility could be first and second order logics used in deductive databases (e.g. see <ref> [RSB + 87] </ref>). Therefore, for the purpose of our thesis, we concentrate on the logical structure.
Reference: [RSMA91] <author> Jonathan Rosenberg, Mark Sherman, Ann Marks, and Jaap Akkerhuis. </author> <title> Multi-media Document Translation, ODA and the EXPRESS Project. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference: [RTW93] <author> Darrel R. Raymond, F. Wm. Tompa, and Derick Wood. </author> <title> Markup Reconsidered. </title> <type> Technical Report OED-93-01, </type> <institution> UW Centre for the New Oxford English Dictionary and Text Research, University of Waterloo, </institution> <address> Ontario, Canada, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: A paragraph is clearly marked by white space, but where a particular argument or viewpoint starts or begins is much harder to ascertain. In fact, we severely doubt whether a hierachical model is the right tool to capture the semantic structures of a document <ref> [RTW93] </ref>. Probably we need modelling apparatus which has been specially developed for modelling at such a level of abstraction. One possibility could be first and second order logics used in deductive databases (e.g. see [RSB + 87]). Therefore, for the purpose of our thesis, we concentrate on the logical structure.
Reference: [RTW95] <author> Darrel R. Raymond, F. Wm. Tompa, and Derick Wood. </author> <title> From Data Representation to Data Model : Meta-Semantic Issues in the Evolution of SGML. </title> <type> Technical Report CS-95-17, </type> <institution> UW Centre for the New Oxford English Dictionary and Text Research, University of Waterloo, </institution> <address> Ontario, Canada, </address> <month> April </month> <year> 1995. </year> <note> This paper has been accepted for publication in the July 1995 issue of Computer Standards and Interfaces. </note>
Reference: [RV93] <author> Cecile Roisin and Irene Vatton. </author> <title> Merging logical and physical structures in documents. </title> <journal> In Electronic Publishing, </journal> <volume> volume 6(4), </volume> <pages> pages 327-337, </pages> <month> November 14-18 </month> <year> 1993. </year>
Reference: [SAZ94] <author> Ron Sacks-Davis, Timothy Arnold-Moore, and Justin Zobel. </author> <title> Database Systems for Structured Documents. </title> <booktitle> In International Symposium on Advanced Database Technologies and Their Integration ADTI '94, </booktitle> <address> Nara, Japan, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: For ORACLE7 Server Release 7.0.15.4.0, there is a limit of 2 gigabytes [Ora88] for both binary and ASCII data. In addition, as pointed out by <ref> [SAZ94] </ref>, One of the primary functions of a database schema is that of validating the data in the database. Without any knowledge of the structure of a document being stored, it is impossible for the database management system to handle this task.
Reference: [ST93] <author> Airi Salminen and F. Wm. Tompa. </author> <title> PAT Expressions : An Algebra for Text Search. </title> <journal> Acta Linguistica Hungarica, </journal> <volume> 41(1-4):277-306, </volume> <pages> 1992-93. </pages>
Reference-contexts: For example, PAT's operators fby, near, including, and within <ref> [ST93] </ref> could be suitable operators for this purpose. The execution time attributed to this operation includes time spent in performing any index lookup and text searching, pattern matching, and returning the locations of tuples, text components, or parts thereof, for which the conditions of selection are satisfied. <p> In addition, we extend the measure of completeness for our set of basic operators to cover some of the text manipulation functionalites provided by PAT <ref> [ST93] </ref>. Demonstration of Relational Completeness Ullman [Ull82] lists five basic operations that define relational algebra and we can simulate each one as follows : 1. Set Union and Difference We may achieve these by using our set operations union and difference respectively. 2.
Reference: [SW89] <author> J.A. Simpson and E.S.C Weiner, </author> <title> editors. The Oxford English Dictionary. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1989. </year>
Reference-contexts: In addition, we propose some possible directions for future re- search. 17 2 Document Management : Tasks and Requirements 2.1 What are Documents ? The Oxford English Dictionary <ref> [SW89] </ref> defines a document as follows : Something written, inscribed, etc. which furnishes evidence or information upon any subject, as a manuscript, title deed, tombstone, coin, picture, etc. In the field of computing and data processing, we may take the term document to mean a collection of recorded information. <p> Based on the target addresses returned from the link base, the target documents may then be fetched. On the other hand, a dynamic resolution prototype has been built to operate on the OED (short for the Oxford English Dictionary <ref> [SW89] </ref>) database at the University of Waterloo [BTR93]. Link traversal involves searching for some keywords in the OED database and returning the appropriate targets as results to be displayed to the users. In addition, [BTR93] demonstrates another advantage of dynamic resolution.
Reference: [Tho93] <author> James Allan Thom. </author> <title> Design of a Document Database System. </title> <type> PhD thesis, </type> <institution> RMIT, University of Melbourne, Australia, </institution> <month> December </month> <year> 1993. </year> <note> CITRI-TR-93-16. 120 </note>
Reference-contexts: extent that such contents cannot be properly placed under some nested components) as well 51 SGML92 Report 52 4.6 Storing Document Components as Nested Relations To redress the above-mentioned shortcomings of storing documents in separate tables only to join them back when queries arise, researchers proposed a nested relational model <ref> [Tho93] </ref>. This model has the additional advantage of giving a more natural and intuitive representation of a document structure and as such make query formulation easier. <p> Morever, for each nested component there are inverse pointers pointing back to their nesting components so that for each entity we can find its immediate ancestors more efficiently. In the words of <ref> [Tho93] </ref>, The idea of the nested relational model was developed around the need to extend the relational model to support complex objects as well as atomic attributes.
Reference: [Tom89] <author> F. W. Tompa. </author> <title> What is (tagged) text ? In Dictionaries in the Electronic Age, </title> <booktitle> Fifth Annual Conference of the UW Centre for the New Oxford English Dictionary and Text Research, </booktitle> <pages> pages 81-93, </pages> <address> St. Catherine's College, Oxford, Eng-land, </address> <month> September 18-19 </month> <year> 1989. </year> <title> UW Centre for the New Oxford English Dictionary and Text Research. </title>
Reference-contexts: This report describes how one such standard, the Standard Generalized Markup Language (SGML), works as part of an overall information management strategy. without End Tags out by <ref> [Tom89] </ref>, in the absence of updates a grammar is superfluous under the assumption that start and end tags appears in the text as pairs conforming to a proper nesting as shown in the above example. <p> On the other hand, a grammar may have a prescriptive (as opposed to merely being descriptive of the existing structural state of a text) role as well <ref> [Tom89] </ref>. It tells its users what should be in addition to what is in a text. Without a grammar explicitly specified, no data validation can be performed when deletion, addition and other modifications actions are performed on a text.
Reference: [Ull82] <author> Ullman, Jeffrey D. </author> <title> Principles of Database Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1982. </year>
Reference-contexts: our operation set by demonstrating that it is relationally complete and, by way of example tasks in Chapter 5, that the typical document management tasks as described in Chapter 2 may be simulated by our basic operations in the various data models being studied. 36 Definition of Relational Completeness Ullman <ref> [Ull82] </ref> de- fines a language to be relational completeness if it : can (at least) simulate tuple calculus, or equivalently, rela tional algebra, or domain calculus. <p> In addition, we extend the measure of completeness for our set of basic operators to cover some of the text manipulation functionalites provided by PAT [ST93]. Demonstration of Relational Completeness Ullman <ref> [Ull82] </ref> lists five basic operations that define relational algebra and we can simulate each one as follows : 1. Set Union and Difference We may achieve these by using our set operations union and difference respectively. 2. <p> The input location set would be formed from pairs containing the required attribute names and the identifiers of the tuples. 4. Selection The selection operation in relational algebra is defined as follows <ref> [Ull82] </ref> : Let F be a formula involving (a) operands that are constants or component numbers (b) arithmetic comparison operators &lt;, =, &gt;, , 6=, and (c) logical operators ^, _, and : Then F (R) is the set of tuples t in R such that when, for all i, we
Reference: [WLL85] <author> C.C. Woo, F.H. Lochovsky, and A. Lee. </author> <title> Document Management Systems. </title> <editor> In Dionysios C. Tsichritzis, editor, </editor> <booktitle> Office Automation, chapter 2, </booktitle> <pages> pages 21-40. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1985. </year>
Reference-contexts: Therefore, for the purpose of our thesis, we concentrate on the logical structure. In fact, in many places we implicitly assume that it coincides with the semantic structures of the document under investigation. 20 2.3 What is Document Management ? <ref> [WLL85] </ref> defines document management to be : the document preparation, communication, and manage ment aspects of office systems. We have found no formal and exact delineation of such aspects.
Reference: [Wor90] <author> WordPerfect Corporation. </author> <note> WordPerfect Reference Manual Version 5.1, </note> <year> 1990. </year>
Reference-contexts: modification action would cause the necessary modification to the data and indicies. 2.6 Document Control 2.6.1 Document Sharing and Reuse Traditionally (and even with the prevalence of WWW and hypertext), most documents are stored at their local sites as single files in many major document processing formats such as WordPerfect <ref> [Wor90] </ref> and Microsoft Word [Mic94a]. It has been the users' responsibility to break their documents into components if they so wish. Some document processing systems have facilities to allow their users to specify how a 25 document is to be composed at run-time.
Reference: [YMW + 85] <author> Makoto Yoshida, Kyoko Mizumachi, Atsushi Wakino, Ikuo Oyake, and Yutaka Matsushita. </author> <title> Time and Cost Evaluation Schemes of Multiple Copies of Data in Distributed Database Systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-11(9), </volume> <month> September </month> <year> 1985. </year> <month> 121 </month>
Reference-contexts: Our literature survey ([CDY95], [CP84], [Chu92], [CMVN92], [ OV91], <ref> [YMW + 85] </ref>, [MIMH85], [CP87], [NCWD84], [BG92], and [NM89]) reveals the following main considerations for deciding on the appropriate data partitioning for a given federated database. The overriding objective is to minimize the inter-site communication time and maximize the proportion of local data accesses. 1.
References-found: 66

