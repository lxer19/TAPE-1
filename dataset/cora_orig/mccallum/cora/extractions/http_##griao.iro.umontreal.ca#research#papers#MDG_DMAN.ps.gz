URL: http://griao.iro.umontreal.ca/research/papers/MDG_DMAN.ps.gz
Refering-URL: http://griao.iro.umontreal.ca/research/index_eng.html
Root-URL: http://www.iro.umontreal.ca
Email: mdgverif@iro.umontreal.ca  anon@iro.umontreal.ca  bouleric@iro.umontreal.ca  cerny@iro.umontreal.ca  fcorella@hprpcd.rose.hp.com  langevin@gmd.de  song@iro.umontreal.ca Sofiene Tahar: tahar@iro.umontreal.ca  xu@iro.umontreal.ca  zhouz@iro.umontreal.ca  
Title: MDG Tools (V1.0) Developers Manual  MDG Tools (V1.0) Developers Manual  Members in the group  
Author: Zijian Zhou Koty Dominique Anon: Nancy Boulerice: Eduard Cerny: Michel Langevin: Xiaoyu Song: Ying Xu: Zijian Zhou: 
Address: Francisco Corella:  
Web: http://www.iro.umontreal.ca/labs/lasso/research/mdgverif/mdgverif"_eng.html"  
Note: support:  
Date: June 1996 Page 1  
Pubnum: 25  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> F. Corella, Z. Zhouz, X. Song, M. Langevin and E. Cerny. </author> <title> Multiway decision graphs for automated hardware verification. </title> <note> To appear in the journal Formal Methods in System Design. Available as IBM technical report RC19676. T.J. </note> <institution> Watson research center, IBM Research division, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: 1. Introduction Multiway Decision Graphs (MDGs) <ref> [1] </ref> have been proposed as a new kind of decision graphs to represent Register-Transfer (RT) level hardware designs. MDG-based verification techniques have been developed for combinational and sequential designs. <p> The subsections marked * are implementation details that are only for interested readers. Font. The Prolog predicates and examples will be given in 11 points Helvetica font. Further references. This manual is not self-contained. Readers should refer to the references, especially <ref> [1] </ref> and [7] for terminology and techniques about Multiway Decision Graphs. Readers are supposed to have basic Prolog knowledge. For those who only want to use the existing applications in MDG tools, they are recommended to read MDG Tools (V1.0) Users Manual. 2.
Reference: [2] <author> F. Corella, M. Langevin, E. Cerny, Z. Zhouz and X. Song. </author> <title> State enumeration with abstract descriptions of state machines. </title> <booktitle> In Proceedings of IFIP Advanced Research Working Conference on Correct Hardware Design and Verification Methods (CHARME95). </booktitle> <address> Frankfurt, Ger-many, </address> <month> October, </month> <year> 1995. </year>
Reference: [3] <author> Z. Zhouz, X. Song, F. Corella, E. Cerny and M. Langevin. </author> <title> Partitioning transition relation automatically and efficiently. </title> <booktitle> In IEEE Proceedings of Fifth Great Lakes Symposium on VLSI (GLSVLSI95), </booktitle> <address> Buffalo, USA, </address> <month> March, </month> <year> 1995. </year>
Reference-contexts: Module is the module name where necessary data can be found. Epsilon is a ag which may be 0/1 indicating the success or failure of the reachability analysis. A partitioned relation <ref> [3] </ref> ( Rt_MUs, Ro_MUs, Drv_MUs or Mux_MUs) is a list of pairs ( Ms, Us), where Us is a list of symbol orders and Ms is a list of MDGs. Each pair represents a partition group. Ms is a list of individual relations without recombining.
Reference: [4] <author> Z. Zhouz, X. Song, F. Corella, E. Cerny and M. Langevin. </author> <title> Description and verification of RTL designs using Multiway Decision Graphs. </title> <booktitle> In Proceedings of the Conference on Computer Hardware Description Languages and their applications (CHDL95). Chiba, </booktitle> <address> Japan, </address> <month> August, </month> <year> 1995. </year>
Reference: [5] <author> Z. Zhou and N. Boulerice. </author> <title> MDG Tools (V1.0) Users Manual. </title> <month> December, </month> <year> 1995. </year> <note> MDG Tools (V1.0) Developers Manual 25 June 1996 Page 24 </note>
Reference-contexts: The FileName cannot be !pp, !no_pp or !interactive. 5.2 Printing predicates 5.2.1 Printing a graph: pp (Name, P). Mode: pp (+, +). Arguments: Name will be printed as the reference to the MDGt. P is an MDG. Function: It prints a graph in a format as explained in <ref> [5] </ref>. 5.2.2 Printing a list of graphs: pps (Name, Ps). Mode: pps (+, +). Arguments: Name will be printed as the reference to the MDGs. Ps is a list of MDGs. Function: It prints a list of MDGs. 5.2.3 Printing a linear graph: ppl (P). Mode: ppl (+). <p> Arguments: Refer to section 4.1 for the definition of these arguments. File: homeMDG/programs/applications/utilities/util_parser1.pl. 7.2.3 Invariant compilation: compile_cond (Cond_mdg, G1, E1, G, E). Mode: compile_cond (+, +, +, -, -). Function: Build an MDG for an invariant. The invariant is expressed as a combinational circuit (see <ref> [5] </ref>) in the invariant specification file. MDG Tools (V1.0) Developers Manual 25 June 1996 Page 21 Arguments: Cond_mdg is the result MDG. 7.2.4 Relations compilation: compile_main (Nxst_MUs ,Outp_MUs ,Drv_MUs ,Mux_MUs ,G1, E1,G,E). Function: Build the transition and output relation MDGs for the circuit.
References-found: 5

