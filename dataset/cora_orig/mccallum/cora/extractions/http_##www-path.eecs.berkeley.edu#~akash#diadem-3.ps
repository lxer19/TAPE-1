URL: http://www-path.eecs.berkeley.edu/~akash/diadem-3.ps
Refering-URL: http://www-path.eecs.berkeley.edu/~akash/akash.html
Root-URL: http://www.cs.berkeley.edu
Email: akash@path.berkeley.edu, sergio@path.berkeley.edu  
Title: The DIADEM-KRONOS Connection: Bridging the Gap between Implementation and Verification of Hybrid Systems  
Author: Akash Deshpande and Sergio Yovine 
Date: April 24, 1997  
Address: Richmond Field Station Bldg. 452 1301 S. 46th St., Richmond CA 94804  
Affiliation: California PATH University of California at Berkeley  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. Alur, C. Courcoubetis, N. Halbwachs, T. Henzinger, P. Ho, X. Nicollin, A. Olivero, J. Sifakis, and S. Yovine. </author> <title> The algorithmic analysis of hybrid systems. </title> <journal> Theoretical Computer Science, </journal> <volume> 138 </volume> <pages> 3-34, </pages> <year> 1995. </year>
Reference-contexts: We use the diadem system [5] as the platform for control system implementation. We use the kronos tool [3, 2, 4], as the platform for verification. Both systems are based on variations of the hybrid automaton model <ref> [1] </ref>. diadem is an object-oriented framework for implementing real-time, event-driven, distributed multi-agent control systems.
Reference: [2] <author> C. Daws, A. Olivero, S. Tripakis, and S. Yovine. </author> <title> The tool kronos. In Hybrid Systems III, </title> <booktitle> Verification and Control, </booktitle> <pages> pages 208-219. </pages> <booktitle> Lecture Notes in Computer Science 1066, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: We propose a such a design framework and expose the associated tools and methods. We illustrate the use of our approach by applying it to a practical problem. We use the diadem system [5] as the platform for control system implementation. We use the kronos tool <ref> [3, 2, 4] </ref>, as the platform for verification. Both systems are based on variations of the hybrid automaton model [1]. diadem is an object-oriented framework for implementing real-time, event-driven, distributed multi-agent control systems. <p> The model implemented by us is taken from <ref> [2] </ref>. We consider a system composed of N identical stations and a ring network on which the stations send high and low priority messages. The diadem model of a station is shown in Figure 1. The station is sub-classed from diadem's Component class.
Reference: [3] <author> C. Daws and S. Yovine. </author> <title> Two examples of verification of multirate timed automata with kronos. </title> <booktitle> In Proc. 1995 IEEE Real-Time Systems Symposium, </booktitle> <address> RTSS'95, Pisa, Italy, December 1995. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: We propose a such a design framework and expose the associated tools and methods. We illustrate the use of our approach by applying it to a practical problem. We use the diadem system [5] as the platform for control system implementation. We use the kronos tool <ref> [3, 2, 4] </ref>, as the platform for verification. Both systems are based on variations of the hybrid automaton model [1]. diadem is an object-oriented framework for implementing real-time, event-driven, distributed multi-agent control systems.
Reference: [4] <author> C. Daws and S. Yovine. </author> <title> Reducing the number of clock variables of timed automata. </title> <booktitle> In Proc. 1996 IEEE Real-Time Systems Symposium, </booktitle> <address> RTSS'96, Washington, DC, USA, December 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: We propose a such a design framework and expose the associated tools and methods. We illustrate the use of our approach by applying it to a practical problem. We use the diadem system [5] as the platform for control system implementation. We use the kronos tool <ref> [3, 2, 4] </ref>, as the platform for verification. Both systems are based on variations of the hybrid automaton model [1]. diadem is an object-oriented framework for implementing real-time, event-driven, distributed multi-agent control systems.
Reference: [5] <author> A. Deshpande. </author> <title> The diadem System for Real-Time Operations Management. Submitted to the Journal of Formal Methods in System Design. </title>
Reference-contexts: We propose a such a design framework and expose the associated tools and methods. We illustrate the use of our approach by applying it to a practical problem. We use the diadem system <ref> [5] </ref> as the platform for control system implementation. We use the kronos tool [3, 2, 4], as the platform for verification. Both systems are based on variations of the hybrid automaton model [1]. diadem is an object-oriented framework for implementing real-time, event-driven, distributed multi-agent control systems.
Reference: [6] <author> A. Deshpande. </author> <title> diadem's Fine-grained Computation Approach to Real-time Event Scheduling. </title> <booktitle> Submitted to the 18th IEEE Real Time Systems Symposium. </booktitle>
Reference-contexts: At its heart, diadem consists of a sophisticated, high-performance real-time event scheduling algorithm based on the fine computation granularity approach <ref> [6] </ref>. diadem provides a graphical modeling environment which automatically generates C++ code to be linked with diadem's real-time scheduling system to obtain the implementation.
Reference: [7] <author> R. Jain. </author> <title> FDDI handbook: high-speed networking using fiber and other media. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: the diadem model: (1) dynamic creation of components is not allowed, (2) continuous variables may have any rates different from zero, and (3) guards are described by linear inequalities. 2 Case Study We illustrate our approach by implementing and verifying the fddi data link protocol. fddi (Fiber Distributed Data Interface) <ref> [7] </ref> is a high performance fiber optic token ring Local Area Network. The model implemented by us is taken from [2]. We consider a system composed of N identical stations and a ring network on which the stations send high and low priority messages.
Reference: [8] <author> A. Puri, V. Borkar and P. Varaiya. </author> <title> *-Approximation of Differential Inclusions. </title> <booktitle> In Proceedings of the 34th IEEE Conference on Decision and Control (CDC 95). </booktitle> <pages> 5 </pages>
Reference-contexts: Mismatch between the modeling frameworks used for control (linear or nonlinear systems) and required for verification (finite state machines) 2. Undecidability of the verification problem for the more general modeling frameworks While theoretical results exist for approximating arbitrary nonlinear systems by finite state machines <ref> [8] </ref>, no practical approaches have yet emerged. In practice, control engineers use design tools such as matlab and implement the systems in programming languages such as c or c++. This approach is entrenched due to substantial investment in existing code libraries, tools support and training.
References-found: 8

