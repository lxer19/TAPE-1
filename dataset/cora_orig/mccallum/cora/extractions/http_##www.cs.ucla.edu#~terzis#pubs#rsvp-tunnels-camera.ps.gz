URL: http://www.cs.ucla.edu/~terzis/pubs/rsvp-tunnels-camera.ps.gz
Refering-URL: http://www.cs.ucla.edu/~terzis/
Root-URL: http://www.cs.ucla.edu
Title: Reservations for Aggregate Traffic: Experiences from an RSVP Tunnels Implementation  
Author: Andreas Terzis, Lixia Zhang Ellen L. Hahne 
Address: Los Angeles, CA  Holmdel, NJ  
Affiliation: University of California,  Bell Laboratories,  
Abstract: Among its various uses, IP-in-IP tunneling is a simple way to aggregate the data flows from multiple sources to multiple destinations into one flow, to cross part of the Internet. In this paper we report our design and implementation of RSVP support for resource reservations over IP-in-IP tunnels, and our experience from this effort that revealed a number of issues related to making resource reservations for aggregate data flows. First, aggregation and de-aggregation go in pairs, thus the exit point of the tunnel must have adequate information to be able to de-multiplex the aggregate tunnel reservation back to reservations for individual flows. Second, if multiple reserved sessions exist over one tunnel, the two tunnel end points need mechanisms to synchronize on which end-to-end reservation is bound to which tunnel reservation; on the other hand mapping all reservations of the same traffic class into one tunnel session can substantially simplify the protocol. Furthermore, one must also properly map error reports from the aggregate reservation back to the ends of individual flows. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Berson and S. Vincent. </author> <title> Aggregation of Internet Integrated Services State. Internet-Draft, </title> <booktitle> work in progress, </booktitle> <month> November </month> <year> 1997. </year>
Reference-contexts: This can be burdensome, especially for backbone routers that connect to high speed links and may carry hundreds of thousands of flows simultaneously. Some recent works [4], <ref> [1] </ref>, [2] have identified this problem and suggested some possible solutions. In the rest of this section, we discuss the scaling properties of RSVP reservation over tunnels.
Reference: [2] <author> J. Boyle. </author> <title> RSVP extensions for CIDR aggregated data flows. Internet-Draft, </title> <booktitle> work in progress, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: This can be burdensome, especially for backbone routers that connect to high speed links and may carry hundreds of thousands of flows simultaneously. Some recent works [4], [1], <ref> [2] </ref> have identified this problem and suggested some possible solutions. In the rest of this section, we discuss the scaling properties of RSVP reservation over tunnels.
Reference: [3] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin. </author> <title> Resource ReSerVation Protocol (RSVP), Version 1 Functional Specification. </title> <type> RFC 2205, </type> <month> September </month> <year> 1997. </year>
Reference-contexts: When the encapsu lated packet reaches the tunnel exit point, the outer header is thrown away and the packet is further routed towards its final destination. VPNs seem a prime environment for the deployment of QoS support (such as Integrated Services and RSVP <ref> [3] </ref>) since they support business critical applications and are replacing a more controllable environment (the private network created by leased lines). Using the current IP-in-IP encapsulation model, RSVP reservations are not possible.
Reference: [4] <editor> R. Guerin, S. Blake, and S. Herzog. Aggregating RSVP-based QoS Requests. Internet-Draft, </editor> <booktitle> work in progress, </booktitle> <month> November </month> <year> 1997. </year>
Reference-contexts: This can be burdensome, especially for backbone routers that connect to high speed links and may carry hundreds of thousands of flows simultaneously. Some recent works <ref> [4] </ref>, [1], [2] have identified this problem and suggested some possible solutions. In the rest of this section, we discuss the scaling properties of RSVP reservation over tunnels.
Reference: [5] <author> L. Zhang, J. Wroclawski, J. Krawczyk, and A. Terzis. </author> <title> RSVP Operation Over IP Tunnels. Internet-Draft, </title> <booktitle> work in progress, </booktitle> <month> February </month> <year> 1998. </year>
Reference-contexts: the usual RSVP filters cannot be used, since data packets are also encapsulated with an outer IP header, making the original IP (and UDP or TCP) header (s) invisible to intermediate routes between the two tunnel end points. 1.2 Mechanism Description The proposal of providing RSVP support over IP-in-IP Tunnels <ref> [5] </ref> was born from the need to support resource reservations over IP-in-IP tunnels. Fig. 1 shows a simple tunnel topology, where the senders and receivers of an RSVP session are connected through a tunnel between R entry and R exit . <p> The Tspec in the tunnel PATH message is equivalent to the sum of Tspecs of all the senders belonging to end-to-end sessions mapped to the specific tunnel session. According to <ref> [5] </ref>, end-to-end RESV messages will trigger an immedidate tunnel RESV message only if they represent changes from the originally reserved value, which presumbly do not happen very often.
References-found: 5

