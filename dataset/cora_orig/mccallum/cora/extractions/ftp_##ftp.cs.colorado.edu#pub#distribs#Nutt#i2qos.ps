URL: ftp://ftp.cs.colorado.edu/pub/distribs/Nutt/i2qos.ps
Refering-URL: http://www.cs.colorado.edu/~nutt/Home.html
Root-URL: http://www.cs.colorado.edu
Title: A Discrete and Dynamic Approach to Application/Operating System QoS Resource Management  
Author: Scott Brandt, Gary Nutt, and Ken Klingenstein 
Address: Boulder  
Affiliation: University of Colorado at  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. Brandt, G. Nutt, T. Berk, and M. Humphrey. </author> <title> Soft Real-Time Application Execution with Dynamic Quality of Service Assurance. </title> <booktitle> Proceedings of the Sixth IEEE/IFIP International Workshop on Quality of Service, </booktitle> <pages> pp. 154-163, </pages> <month> May </month> <year> 1998. </year>
Reference: [2] <author> S. Brandt, G. Nutt, T. Berk, and J. Mankovich. </author> <title> A Dynamic Quality of Service Middleware Agent for Mediating Application Resource Usage. </title> <note> Submitted for publication, </note> <month> May </month> <year> 1998. </year>
Reference-contexts: In continuing our research in this area, we have extended the DQM in several ways that bring it significantly closer to our goal of having a viable middleware QoS resource management agent <ref> [2] </ref>. In our earlier work we used synthetic programs to experiment with the DQM, though now our tests are driven using working applications (two MPEG players). We have also expanded the adaptive capabilities of the DQM with a technique called dynamic estimate refinement.
Reference: [3] <author> C. Fan. </author> <title> Realizing a Soft Real-Time Framework for Supporting Distributed Multimedia Applications. </title> <booktitle> Proceedings of the 5th IEEE Workshop on the Future Trends of Distributed Computing Systems, </booktitle> <pages> pp. 128-134, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: variety of interfaces for determining the amount of resources that will be allocated to an application, allowing a process to a) negotiate with the operating system for a specific amount of resources as in RT Mach [7] and Rialto [5][6]; b) specify a range of resource allocations as in MMOSS <ref> [3] </ref>; or c) specify a measure of application importance that can be used to compute a fair resource allocation as in SMART [8][9]. These systems all provide a mechanism that can be used to dynamically reduce the resource allotment granted to the running applications.
Reference: [4] <author> M. Humphrey, T. Berk, S. Brandt, G. Nutt. </author> <title> The DQM Architecture: Middleware for Application-centered QoS Resource Management. </title> <booktitle> IEEE Workshop on Middleware for Distributed Real-Time Systems and Services, </booktitle> <month> December </month> <year> 1997, </year> <pages> pp. 97-104. </pages>
Reference: [5] <author> M. Jones, J. Barbera III, and A. Forin. </author> <title> An Overview of the Rialto Real-Time Architecture. </title> <booktitle> Proceedings of the Seventh ACM SIGOPS European Workshop, </booktitle> <pages> pp. 249-256, </pages> <month> September </month> <year> 1996. </year>
Reference: [6] <author> M. Jones, D. Rosu, M. Rosu. </author> <title> CPU Reservations & Time Constraints: Efficient Predictable Scheduling of Independent Activities. </title> <booktitle> Proceedings of the 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1997. </year>
Reference: [7] <author> C. Mercer, S. Savage and H. Tokuda. </author> <title> Processor Capacity Reserves: Operating System Support for Multimedia Applications. </title> <booktitle> Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <pages> pp. 90-99, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: These mechanisms provide a variety of interfaces for determining the amount of resources that will be allocated to an application, allowing a process to a) negotiate with the operating system for a specific amount of resources as in RT Mach <ref> [7] </ref> and Rialto [5][6]; b) specify a range of resource allocations as in MMOSS [3]; or c) specify a measure of application importance that can be used to compute a fair resource allocation as in SMART [8][9].
Reference: [8] <author> J. Nieh and M. Lam. </author> <title> The Design, Implementation and Evaluation of SMART: </title> <booktitle> A Scheduler for Multimedia Applications.Proceedings of the 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1997. </year> <month> 5 </month>
Reference: [9] <author> J. Nieh and M. Lam. </author> <title> Integrated Processor Scheduling for Multimedia. </title> <booktitle> Proceedings of the Fifth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1995. </year>
Reference: [10] <author> G. Nutt, T. Berk, S. Brandt, M. Humphrey, and S. Siewert. </author> <title> Resource Management of a Virtual Planning Room. </title> <booktitle> Proceedings of the Third International Workshop on Multimedia Information Systems, </booktitle> <month> September </month> <year> 1997. </year>
Reference: [11] <author> G. Nutt, S. Brandt, A. Griff, S. Siewert, M. Humphrey, and T. </author> <title> Berk. Dynamically Negotiated Resource Management for Data Intensive Application Suites. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <note> to appear. </note>
References-found: 11

