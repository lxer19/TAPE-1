URL: ftp://ftp.cs.brown.edu/pub/techreports/93/cs93-07.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-93-07.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [Eade91] <author> Peter Eades, Wei Lai, Kazuo Misue and Kozo Sugiyama. </author> <title> Preserving the mental map of a diagram. </title> <institution> Research Report IIAS-RR-91-16E, International Institute for Advanced Study of Social Information Science, Fujitsu Laboratories Limited, </institution> <month> August, </month> <year> 1991. </year>
Reference-contexts: Obviously if the size of the nodes could be toggled on and off a smooth animation between the multi-sized layout and the mono-sized layout should be applied in the hopes of maintaining the user's visual mental map <ref> [Eade91] </ref>. Moreover, some would argue that scaling nodes relative to each other destroys the focus created by the perspective view. While this argument may have some merit, using shadows partially compensates for this.
Reference: [Furn86] <author> George W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 16-23, </pages> <year> 1986. </year>
Reference-contexts: The display combines a detailed view of the strip with two distorted views, where items on either side of the detailed view are squashed horizontally into narrow vertical strips. In an '86 paper, Furnas introduced the concept of the Fisheye Lens <ref> [Furn86] </ref>. The lens distorts a display such that regions close to the focus appear large and in detail, while more remote regions appear in successively less detail. Sarkar and Brown extended this notion in a CHI '92 paper with a prototype Fisheye Lens browser for large graphs [Sark92a].
Reference: [Hern92] <author> Kenneth P. Herndon, Robert C. Zeleznik, Daniel C. Robbins, D. Brookshire Conner, Scott S. Snibbe and Andries van Dam. </author> <title> Interactive Shadows. </title> <booktitle> Proc. ACM SIGGRAPH and SIGCHI Symp. on User Interface Software and Technology, accepted for publication 1992. </booktitle>
Reference-contexts: We have not, however completely given up the notion that shadows could be used as more than a depth cue <ref> [Hern92] </ref>. If, for example, the only objects whose shadows appeared on the floor would be parents with children (in our case only directories), and the shadows were labeled as above, selection of nodes by their shadows might become practical. Indeed, it might even become more efficient.
Reference: [Hubb91] <author> Phillip M. Hubbard, Matthias M. Wloka, and Robert C. Zeleznik. UGA: </author> <title> A Unified Graphics Architecture. </title> <type> Technical Report CS-91-30, </type> <institution> Department of Computer Science, Brown University, Providence, RI, </institution> <year> 1991. </year>
Reference-contexts: We could argue that the future user will be completely at ease in a three dimensional world, especially with the advent of new three dimensional screens and input devices. In this paper, we describe an implementation of the Xerox Parc cone trees under the Brown University UGA graphics system <ref> [Hubb91] </ref>, which allows for rapid pro-totyping of 3D widgets through the FLESH language. The Flesh language offers a powerful architecture-independent, object oriented interface to this system. Our implementation takes advantage of the human mind's abilities to interpret large data sets rapidly.
Reference: [John92] <author> Brian Johnson. TreeViz: </author> <title> Treemap Visualization of Hierarchically Structured Information. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 369-370, </pages> <year> 1992. </year>
Reference-contexts: Too many nodes both slow down the speed of animation, and add visual clutter to an already complex three dimensional model. If we know that we will be dealing with a large data set, we might be better off using a system such as <ref> [John92] </ref> (the author claims up he can clearly display up to 1000 nodes may be displayed on a 13" monitor with his system), which lays out hierarchical data as a Venn diagram (see Figure 7).
Reference: [Mack91] <author> Jock D. Mackinlay, George G. Robertson and Stuart K. Card. </author> <title> The perspective wall: Detail and context smoothly integrated. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 173-179, </pages> <year> 1991. </year>
Reference-contexts: Sarkar and Brown extended this notion in a CHI '92 paper with a prototype Fisheye Lens browser for large graphs [Sark92a]. Previously, at CHI '91, Mackinlay, Robertson and Card invented a technique which uses 3D interactive animation to visualizing linear information <ref> [Mack91] </ref>, such as time data. Called the Perspective Wall, this widget boasts a detailed center panel and two side panels receding into the distance. The use of a perspective projection results in the side panels' diminishing degree of detail.
Reference: [Mill92] <author> Michael Mills, Jonathan Cohen and Yin Yin Wong. </author> <title> A magnifier tool for video data. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 93-98, </pages> <year> 1992. </year>
Reference: [Robe91] <author> George G. Robertson, Jock D. Mackinlay, and Stuart K. Card. </author> <title> Cone Trees: Animated 3D visualizations of hierarchical information. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 189-194, </pages> <year> 1991. </year>
Reference-contexts: The previous techniques to create a focus apply to all sorts of varied data sets. With the exception of the perspective wall, the techniques do not attempt to take advantage of the special characteristics of a particular class of data sets. Robertson, Mackinlay and Card <ref> [Robe91] </ref> realized there were specific types of in-formation sets which might lend themselves to specialized techniques. Hierarchical information sets (such as CSG data or Unix file hierarchies), they realized could be visualized in three dimensions without much difficulty. <p> Shadows are used for reference purposes, and animation is used to rotate selected nodes to the fore. Searches, such as those described in <ref> [Robe91] </ref> are not yet implemented. A simple working version with no bells and whistles was implemented in a matter of hours by Robert Zeleznik. The final version took Scott Snibbe about a week to complete.
Reference: [Sark92a] <author> Manojit Sarkar and Marc H. Brown. </author> <title> Graphical Fisheye Views of Graphs. </title> <booktitle> Proc. ACM SIGCHI Conf. on Human Factors in Computing Systems, </booktitle> <pages> pp. 83-91, </pages> <year> 1992. </year>
Reference-contexts: The lens distorts a display such that regions close to the focus appear large and in detail, while more remote regions appear in successively less detail. Sarkar and Brown extended this notion in a CHI '92 paper with a prototype Fisheye Lens browser for large graphs <ref> [Sark92a] </ref>. Previously, at CHI '91, Mackinlay, Robertson and Card invented a technique which uses 3D interactive animation to visualizing linear information [Mack91], such as time data. Called the Perspective Wall, this widget boasts a detailed center panel and two side panels receding into the distance.
Reference: [Sark92b] <author> Manojit Sarkar and Steven P. Reiss. </author> <title> Manipulating Screen Space with StretchTools: Visualizing Large Structure on Small Screen. </title> <type> Technical Report CS-92-42, </type> <institution> Department of Computer Science, Brown University, Providence, RI, </institution> <year> 1992. </year>
Reference-contexts: Called the Perspective Wall, this widget boasts a detailed center panel and two side panels receding into the distance. The use of a perspective projection results in the side panels' diminishing degree of detail. Finally, in 1992, Sarkar and Reiss <ref> [Sark92b] </ref> developed a system which allows a user to interactively stretch or shrink rectangular regions of graphs, much as stretching a rubber sheet. The previous techniques to create a focus apply to all sorts of varied data sets. <p> In Section 1, we spoke of the how visualization methods often seek to create a focus. Some of the techniques discussed even allow for multiple focal points (see <ref> [Sark92b] </ref>). Because of the perspective projection however, we cannot do this. Under the current cone tree implementation we are restricted to an ordering of children that is determined by the directory reading algorithm. We cannot place two subdirectories near each other in order to better compare them. <p> Or, we might resort to the conventional two dimensional tree representation (see Figure 8) and the use one of the aformentioned algorithms for generating a focus. (Side Note: it might be possible to do a Stretchtools <ref> [Sark92b] </ref> style scaling in three dimensions coupled with an orthogonal view and a three dimensional screen to obtain multiple foci. It might also be possible to accomplish this with volume warping).
Reference: [Spen82] <author> Robert Spence and Mark Apperley. </author> <title> Database navigation: An office environment for the professional. </title> <journal> Behavior and Information Technology , vol. </journal> <volume> 1, no. 1, </volume> <pages> pp. 43-54, </pages> <year> 1982. </year>
Reference-contexts: This notion, called a focus, has been implemented in several systems. In 1982, Spence and Appreley pioneered a technique they dubbed the Bifocal Display. Used for visualizing office information <ref> [Spen82] </ref>, their system, featured the workspace as a set of information items positioned in a horizontal strip. The display combines a detailed view of the strip with two distorted views, where items on either side of the detailed view are squashed horizontally into narrow vertical strips.
References-found: 11

