URL: http://calcutta.cs.uiuc.edu:1024/~maharri/conscomb.ps.gz
Refering-URL: http://calcutta.cs.uiuc.edu:1024/~maharri/
Root-URL: http://www.cs.uiuc.edu
Title: ORDERED CONSTRUCTION OF COMBINATORIAL OBJECTS  
Author: MITCH HARRIS AND NACHUM DERSHOWITZ 
Keyword: Key words. enumeration, construction, unranking, species, generating functions, semiring  
Note: AMS subject classifications. 05A15, 68Q50, 16Y60  
Abstract: The generating function method for counting species of combinatorial objects is applied to the construction of the objects in order. The species considered are those described using context-free grammars with additional group-invariant operators. Some species constructible with this method are integer partitions, rooted trees of specified or unbounded degree including binary and ordered trees, and derivations of words in a context free language. Bijections, algorithms, and decidability results are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Alonso and R. Schott. </author> <title> Random generation of trees. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1995. </year> <title> Random generators in computer science. </title>
Reference-contexts: This will provide us with a correspondence between words (derivations) and objects on the one hand, and languages and species on the other. Flajolet and Zimmermann develop similar techniques [5, 15] but without Polya enumeration. Related research includes: Alonso and Schott <ref> [1] </ref> who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation.
Reference: [2] <author> T. Becker and V. Weispfenning. </author> <title> Grobner bases, volume 141 of Graduate Texts in Mathematics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year> <title> A computational approach to commutative algebra, In cooperation with Heinz Kredel. </title>
Reference-contexts: Grobner basis calculation (via Buch-berger's algorithm, see Becker and Weispfenning <ref> [2] </ref>) can eliminate as many variables as possible. This calculation can reduce the set of polynomials (corresponding to the grammar) but it is not guaranteed to solve the system and itself is quite a costly operation (doubly exponential).
Reference: [3] <author> F. Bergeron, G. Labelle, and P. Leroux. </author> <title> Combinatorial Species and Tree-like Structures, volume 67 of Encyclopedia of Mathematics and its Applications. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1998. </year>
Reference-contexts: Flajolet and Zimmermann develop similar techniques [5, 15] but without Polya enumeration. Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. <ref> [3] </ref> who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation. Hickey and Cohen [7] and Mairson [11] give algorithms for constructing words from unambiguous context-free grammars.
Reference: [4] <author> N. Chomsky and M. Schutzenberger. </author> <title> The algebraic theory of context-free languages. </title> <editor> In P. Braf-fort and D. Hirschberg, editors, </editor> <booktitle> Computer Programming and Formal Languages, </booktitle> <pages> pages 118-161. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1963. </year>
Reference-contexts: The correspondence between polynomials and languages goes back to Schutzenberger and Chomsky <ref> [4] </ref>. We make explicit here the use of polynomial operations to create a bijection between the generating function and combinatorial constructions and also to use that bijection to construct words from the language (unranking) and uniquely identify words (ranking). 3. The Correspondence.
Reference: [5] <author> P. Flajolet, P. Zimmermann, and B. V. Cutsem. </author> <title> A calculus for the random generation of labelled combinatorial structures. </title> <journal> Theoretical Computer Science, </journal> <volume> 132(1) </volume> <pages> 1-35, </pages> <month> Sep </month> <year> 1994. </year>
Reference-contexts: This will provide us with a correspondence between words (derivations) and objects on the one hand, and languages and species on the other. Flajolet and Zimmermann develop similar techniques <ref> [5, 15] </ref> but without Polya enumeration. Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation.
Reference: [6] <author> F. Harary and E. M. Palmer. </author> <title> Graphical Enumeration. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: The enumerating generating functions for these come from a straightforward application of Polya enumeration for the groups S n the symmetric group (of all permutations), and A n S n the group of one-to-one functions, and then summing over all n (see Harary <ref> [6, Chap. 2] </ref> for details). Notice that in this framework, a sequence of products of length n, i.e. an n-tuple, corresponds to the operator from the trivial permutation group on n, and that fl () is the set of all finite such tuples.
Reference: [7] <author> T. Hickey and J. Cohen. </author> <title> Uniform random generation of strings in a context-free language. </title> <journal> SIAM J. Comput., </journal> <volume> 12(4) </volume> <pages> 645-655, </pages> <year> 1983. </year>
Reference-contexts: Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation. Hickey and Cohen <ref> [7] </ref> and Mairson [11] give algorithms for constructing words from unambiguous context-free grammars. The concerns here are for giving an efficient, constructive, bijective method (ranking/unranking) for a general class of species. The plan of the paper is as follows.
Reference: [8] <author> M. R. Jerrum, L. G. Valiant, and V. V. Vazirani. </author> <title> Random generation of combinatorial structures from a uniform distribution. </title> <type> Theoret. </type> <institution> Comput. Sci., 43(2-3):169-188, </institution> <year> 1986. </year>
Reference-contexts: Flajolet and Zimmermann develop similar techniques [5, 15] but without Polya enumeration. Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant <ref> [8] </ref> who give an abstract analysis of the complexity of generation. Hickey and Cohen [7] and Mairson [11] give algorithms for constructing words from unambiguous context-free grammars. The concerns here are for giving an efficient, constructive, bijective method (ranking/unranking) for a general class of species.
Reference: [9] <editor> W. Kuich and A. Salomaa. Semirings, </editor> <booktitle> Automata, Languages, volume 5 of EATCS Monographs in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference-contexts: Both semirings allow a closure operation, a fl , satisfying the identity a fl = 1 + a a fl for a 6= 1 (see Lehmann [10] and Kuich and Salomaa <ref> [9] </ref>) which for languages is Kleene closure and for polynomials is (1 a) 1 . The correspondence between polynomials and languages goes back to Schutzenberger and Chomsky [4].
Reference: [10] <author> D. J. Lehmann. </author> <title> Algebraic structures for transitive closure. </title> <journal> Theoretical Computer Science, </journal> <volume> 4 </volume> <pages> 59-76, </pages> <year> 1977. </year>
Reference-contexts: Both semirings allow a closure operation, a fl , satisfying the identity a fl = 1 + a a fl for a 6= 1 (see Lehmann <ref> [10] </ref> and Kuich and Salomaa [9]) which for languages is Kleene closure and for polynomials is (1 a) 1 . The correspondence between polynomials and languages goes back to Schutzenberger and Chomsky [4]. <p> left, and recursion, this is a linear system of equations which is be solved completely as: x = a + Ax ! x = aA fl ORDERED COMBINATORIAL CONSTRUCTION 9 where A fl is the Kleene closure of the matrix computed by the Floyd-Warshall-Kleene algorithm which operates over closed semirings <ref> [10] </ref>.
Reference: [11] <author> H. G. Mairson. </author> <title> Generating words in a context-free language uniformly at random. </title> <journal> Inform. Process. Lett., </journal> <volume> 49(2) </volume> <pages> 95-99, </pages> <year> 1994. </year>
Reference-contexts: Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation. Hickey and Cohen [7] and Mairson <ref> [11] </ref> give algorithms for constructing words from unambiguous context-free grammars. The concerns here are for giving an efficient, constructive, bijective method (ranking/unranking) for a general class of species. The plan of the paper is as follows.
Reference: [12] <author> A. Nijenhuis and H. S. Wilf. </author> <title> Combinatorial Algorithms. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: This is done as follows. Since we can calculate sums and products, and we can iterate over integer partitions using a constant time `next' function (Nijenhuis and Wilf ORDERED COMBINATORIAL CONSTRUCTION 7 <ref> [12] </ref>), all that is needed is to find a bijection for the `choose' operator. To do this we use Pascal's identity r = n 1 r , and the identities r = r n 1 r = n r n 1 . <p> For tuples of length d with no invariants, the easy correspondence with enumeration does not hold because the calculation uses division (see Wilf <ref> [12, chap. 21] </ref>). Repeated squaring gives an O (n 2 log n) preprocessing time for construction though. Table 4 summarize the above computations; compare with Table 4. <p> Code to compute and construct such examples is available at http://www.uiuc.edu/ph/www/maharri/co.tar.gz. 12 M. HARRIS AND N. DERSHOWITZ 9. Conclusions. An efficient bijection between the natural numbers and a combinatorial species also gives solutions to other combinatorial algorithms. Nijenhuis and Wilf <ref> [12] </ref> describe four general operations on species: ranking, unranking, random selection and next in sequence. The method above is an unranking procedure; given a natural number, we can create a particular object of a species. Ranking returns the number for the object, this is the inverse operation or unranking.
Reference: [13] <author> C. Savage. </author> <title> A survey of combinatorial gray codes. </title> <journal> SIAM Review, </journal> <volume> 39(4) </volume> <pages> 605-629, </pages> <month> Dec. </month> <year> 1997. </year>
Reference-contexts: Also, because of the generality of the procedure, this method is unlikely to be the most efficient for constructing many species, in that there may be sequencing operations that have better amortized complexity (see Savage's survey <ref> [13] </ref>).
Reference: [14] <author> N. J. A. Sloane and S. Plouffe. </author> <title> The Encyclopedia of Integer Sequences. </title> <publisher> Academic Press Inc., </publisher> <address> San Diego, CA, </address> <year> 1995. </year>
Reference-contexts: This is sequence A004111/M0796 in the Encyclopedia of Integer Sequences <ref> [14] </ref>. The twelve rooted unordered identity trees up to size 7 are shown in Table 8.1. The last two trees of size 50 with the given ordering are shown in Table 8.2. Code to compute and construct such examples is available at http://www.uiuc.edu/ph/www/maharri/co.tar.gz. 12 M. HARRIS AND N. DERSHOWITZ 9.
Reference: [15] <author> P. Zimmermann. Gaa: </author> <title> A package for the random generation of combinatorial structures. </title> <journal> MapleTech, </journal> <volume> 1(1) </volume> <pages> 38-46, </pages> <year> 1994. </year>
Reference-contexts: This will provide us with a correspondence between words (derivations) and objects on the one hand, and languages and species on the other. Flajolet and Zimmermann develop similar techniques <ref> [5, 15] </ref> but without Polya enumeration. Related research includes: Alonso and Schott [1] who consider fast random generation techniques, Bergeron et al. [3] who give an extensive algebraic treatment of species, and Jerrum, Vazirani, and Valiant [8] who give an abstract analysis of the complexity of generation. <p> Some species can be described using invariance under transformation, that is an object in the species is an equivalence class (or really an example from that class) generated by some transformation. The transformation we consider are actions by some permutation group on tuples of objects. Zimmerman <ref> [15] </ref> introduced the concept of operators that enumerate construct classes within which objects are invariant under permutations. These operator also construct canonical examples from these classes, those objects nonisomorphic under the transformation.
References-found: 15

