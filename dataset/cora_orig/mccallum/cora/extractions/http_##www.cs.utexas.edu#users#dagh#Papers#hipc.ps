URL: http://www.cs.utexas.edu/users/dagh/Papers/hipc.ps
Refering-URL: http://www.cs.utexas.edu/users/dagh/papers.html
Root-URL: 
Email: fparashar, browneg@cs.utexas.edu  
Title: Distributed Dynamic Data-Structures for Parallel Adaptive Mesh-Refinement  
Author: Manish Parashar and James C. Browne 
Date: December, 1995)  
Note: (To be presented at HiPC,  
Address: Austin  
Affiliation: Department of Computer Sciences University of Texas at  
Abstract: This paper presents the design and implementation of dynamic distributed data-structures to support parallel adaptive (multigrid) finite difference codes based on hierarchical adaptive mesh-refinement (AMR) techniques for the solution of partial differential equations. The abstraction provided by the data-structures is a dynamic hierarchical grid where operations on the grid are independent of its distribution across processors in a parallel execution environment, and of the number of levels in the grid hierarchy. The distributed dynamic data-structures have been implemented as part of a computational toolkit for the Binary Black-Hole NSF Grand Challenge project. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Giuseppe Peano, </author> <title> "Sur une courbe, qui remplit toute une aire plane", </title> <journal> Mathematische Annalen, </journal> <volume> 36 </volume> <pages> 157-160, 1890. </pages>
Reference-contexts: The design of these data-structures uses a linear representation of the hierarchical, multi-dimensional grid structure which is generated using space-filling mappings <ref> [1, 2] </ref>. Operations on the grid hierarchy such as grid creation, grid refinement or coarsening, grid partitioning and dynamic re-partitioning, are efficiently defined on this one-dimensional representation. The self-similar nature of space-filling curves is exploited to maintain locality across levels of the grid hierarchy. <p> The resulting grid structure is a dynamic adaptive grid hierarchy. 3 Distributed Data-Structures for Hi erarchical AMR 3.1 Data-structure Representation The SDDG/DAGH data-structure design is based on a linear representation of the hierarchical, multidimensional grid structure. This representation is generated using space-filling curves <ref> [1, 2, 5] </ref> which are a class of locality preserving mappings from d-dimensional space to 1-dimensional space, i.e. N d ! N 1 , such that each point in N d is mapped to a 1 Message Passing Interface unique point or index in N 1 .
Reference: [2] <author> Hanan Samet, </author> <title> The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison - Wesley Publishing Company, </publisher> <year> 1989. </year>
Reference-contexts: The design of these data-structures uses a linear representation of the hierarchical, multi-dimensional grid structure which is generated using space-filling mappings <ref> [1, 2] </ref>. Operations on the grid hierarchy such as grid creation, grid refinement or coarsening, grid partitioning and dynamic re-partitioning, are efficiently defined on this one-dimensional representation. The self-similar nature of space-filling curves is exploited to maintain locality across levels of the grid hierarchy. <p> The resulting grid structure is a dynamic adaptive grid hierarchy. 3 Distributed Data-Structures for Hi erarchical AMR 3.1 Data-structure Representation The SDDG/DAGH data-structure design is based on a linear representation of the hierarchical, multidimensional grid structure. This representation is generated using space-filling curves <ref> [1, 2, 5] </ref> which are a class of locality preserving mappings from d-dimensional space to 1-dimensional space, i.e. N d ! N 1 , such that each point in N d is mapped to a 1 Message Passing Interface unique point or index in N 1 .
Reference: [3] <author> R. Fagin, </author> <title> "Extendible Hashing A Fast Access Mechanism for Dynamic Files", </title> <journal> ACM TODS, </journal> <volume> 4 </volume> <pages> 315-344, </pages> <year> 1979. </year>
Reference-contexts: The self-similar nature of space-filling curves is exploited to maintain locality across levels of the grid hierarchy. Computational data associated with the grids in the hierarchy is maintained as a scalable distributed dynamic array (SDDA) that is based on extendible hashing <ref> [3] </ref> and guarantees preservation of locality under expan-sion and contraction. Space-filling indices used in the DAGH/SDDG representation serve as keys for indexing into the SDDA. The data-structures have been implemented as a C++ class library on top of the MPI 1 [4] communication system. <p> This overhead is small compared to the storage required for the grid data itself. 3.2.2 Data Storage The data storage component of the storage scheme is implemented as a "Scalable Distributed Dynamic Array" (SDDA) and uses extendable hashing techniques <ref> [3] </ref> to provide a dynamically extendable, globally indexed storage. The SDDA is a hierarchical structure and is capable dynamically expanding and contracting. Entries into the SDDA correspond to DAGH blocks and the array is indexed using DAGH block keys.
Reference: [4] <author> Message Passing Interface Forum, </author> <title> "MPI: A Message-Passing Interface Standard", </title> <type> Technical Report CS-94-230, </type> <institution> Computer Science Department, University of Tennessee, Knoxville, TN, </institution> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: Space-filling indices used in the DAGH/SDDG representation serve as keys for indexing into the SDDA. The data-structures have been implemented as a C++ class library on top of the MPI 1 <ref> [4] </ref> communication system. Architectures currently supported include the IBM SP2, Cray T3D, and clusters of networked workstations (IBM RS6000, SGI, SUN). The rest of this paper is organized as follows: Section 2 describes the grid structure defined by hierarchical adaptive mesh-refinement techniques.
Reference: [5] <author> Hans Sagan, </author> <title> Space-Filling Curves, </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The resulting grid structure is a dynamic adaptive grid hierarchy. 3 Distributed Data-Structures for Hi erarchical AMR 3.1 Data-structure Representation The SDDG/DAGH data-structure design is based on a linear representation of the hierarchical, multidimensional grid structure. This representation is generated using space-filling curves <ref> [1, 2, 5] </ref> which are a class of locality preserving mappings from d-dimensional space to 1-dimensional space, i.e. N d ! N 1 , such that each point in N d is mapped to a 1 Message Passing Interface unique point or index in N 1 .
Reference: [6] <author> J. Masso and C. Bona, </author> <title> "Hyperbolic System for Numerical Relativity", </title> <journal> Physics Review Letters, </journal> <volume> 68(1097), </volume> <year> 1992. </year>
Reference-contexts: H3expresso is a "concentrated" version of the full H version 3.3 code that solves the general relativistic Einstein's Equations in a variety of physical scenarios <ref> [6] </ref>. The original H3expresso code is non-adaptive and is implemented in Fortran 90.
References-found: 6

