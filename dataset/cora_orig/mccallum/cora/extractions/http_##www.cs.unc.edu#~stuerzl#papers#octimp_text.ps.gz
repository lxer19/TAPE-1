URL: http://www.cs.unc.edu/~stuerzl/papers/octimp_text.ps.gz
Refering-URL: http://www.cs.unc.edu/~stuerzl/publications.html
Root-URL: http://www.cs.unc.edu
Note: of usual polygonal rendering even though the impostors were also updated for the part of the scene not cur-rently in the users field of view. 6 Conclusions and future work References  
Abstract: This paper presented the three dimensional image cache, a hierarchical data structure to speed up any kind of rasterized rendering on a graphics workstation which supports texture mapping in hardware. The 3d image cache uses dynamically generated impostors to store image data for the primitives contained in the nodes of a k-d-tree. During rendering these impostors are reused for several frames and are updated only if the differences to the image of the original primitives would exceed a pre-specified threshold (i.e. one pixel). Impostor updates for leaves of the k-d-tree involve drawing the primitives. The impostors for intermediate nodes are refreshed from the image data stored in their subnodes. If levels of details are available for the objects in the scene, a static level of detail selection algorithm can be employed to bound the amount of rendering load per node content. In this case the hierarchical caching of image data need not be used resulting in less texture memory requirements. As the system has been implemented using the portable graphics library OpenGL future work will be to tune the system to a graphics platform supporting the required operations in hardware. Such platforms include the Pixel Flow system developed at the University of North Carolina and the SGI Reality Engine system. In the future the system will be employed in a large environment navigation tool which pages in the environment portions around the user from secondary storage automatically. Moreover the 3d image cache will be incorporated into an existing animation system based on ray tracing as the presented algorithm is independent of the method used to render primitives. Considerable speed up should be possible for this kind of rendering as well. [1] Chen, Shenchang Eric and Lance Williams, View Interpolation for Image Synthesis, Computer Graphics (SIGGRAPH `93 Proceedings) (Aug. 1993) pp 279-288. [2] Chen, Shenchang Eric, Quicktime VR - An Image-Based Approach to Virtual Environment Navigation, Computer Graphics (SIGGRAPH `95 Proceedings) (Aug. 1995) pp 29-38. [3] Clark, James H., Hierarchical Geometric Models for Visible Surface Algorithms, Communications of the ACM 19 10 (Oct. 1976) pp 547-554. [4] Funkhouser, Thomas A. and Carlo H. Squin, Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex Virtual Environments, Computer Graphics (SIGGRAPH `93 Proceedings) 17 (Aug. 1993) pp 247-254. [5] Heckbert, Paul and Michael Garland, Multi-Resolution Modeling for Fast Rendering, Proceedings of Graphics Interface `94 (May 1994) pp 43-50. [6] Helman, James L., Designing Virtual Reality Systems to Meet Physio- and Psychological Requirements, Applied Virtual Reality Course (ACM SIGGRAPH `93) (Aug. 1993) pp 115-1 - 5-20. [7] Maciel, Paulo W. and Peter Shirley, Visual Navigation of Large Environments Using Textured Clusters, Symposium on Interactive 3D Graphics (April 1995) pp 95-102. [8] Regan, Matthew and Ronald Post, Priority Rendering with a Virtual Reality Address Recalculation Pipeline, Computer Graphics (SIGGRAPH `94 Proceedings) (July 1994) pp 155-162. [9] Schauer, Gernot, Dynamically Generated Impostors, MVD95 Workshop (Nov. 95) pp 129-136. [10] Schauer, Gernot and Wolfgang Strzlinger. Generating Multiple Levels of Detail for Polygonal Geometry Models, 2nd Eurographics Workshop on Virtual Environments 95 (Jan. 1995) pp 53-62. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chen, Shenchang Eric and Lance Williams, </author> <title> View Interpolation for Image Synthesis, </title> <booktitle> Computer Graphics (SIGGRAPH `93 Proceedings) (Aug. </booktitle> <pages> 1993) pp 279-288. </pages>
Reference: [2] <author> Chen, Shenchang Eric, </author> <title> Quicktime VR - An Image-Based Approach to Virtual Environment Navigation, </title> <booktitle> Computer Graphics (SIGGRAPH `95 Proceedings) (Aug. </booktitle> <pages> 1995) pp 29-38. </pages>
Reference: [3] <author> Clark, James H., </author> <title> Hierarchical Geometric Models for Visible Surface Algorithms, </title> <booktitle> Communications of the ACM 19 10 (Oct. </booktitle> <pages> 1976) pp 547-554. </pages>
Reference: [4] <author> Funkhouser, Thomas A. and Carlo H. Squin, </author> <title> Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex Virtual Environments, </title> <booktitle> Computer Graphics (SIGGRAPH `93 Proceedings) 17 (Aug. </booktitle> <pages> 1993) pp 247-254. </pages>
Reference: [5] <author> Heckbert, Paul and Michael Garland, </author> <title> Multi-Resolution Modeling for Fast Rendering, </title> <note> Proceedings of Graphics Interface `94 (May 1994) pp 43-50. </note>
Reference: [6] <author> Helman, James L., </author> <title> Designing Virtual Reality Systems to Meet Physio- and Psychological Requirements, </title> <booktitle> Applied Virtual Reality Course (ACM SIGGRAPH `93) (Aug. </booktitle> <pages> 1993) pp 115-1 - 5-20. </pages>
Reference: [7] <author> Maciel, Paulo W. and Peter Shirley, </author> <title> Visual Navigation of Large Environments Using Textured Clusters, Symposium on Interactive 3D Graphics (April 1995) pp 95-102. </title>
Reference: [8] <author> Regan, Matthew and Ronald Post, </author> <title> Priority Rendering with a Virtual Reality Address Recalculation Pipeline, </title> <note> Computer Graphics (SIGGRAPH `94 Proceedings) (July 1994) pp 155-162. </note>
Reference: [9] <author> Schauer, Gernot, </author> <title> Dynamically Generated Impostors, </title> <booktitle> MVD95 Workshop (Nov. </booktitle> <pages> 95) pp 129-136. </pages>

References-found: 9

