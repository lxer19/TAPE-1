URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-96-7-2.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-96-7-2.html
Root-URL: http://www.cs.man.ac.uk
Title: The Semantics of Temporal Prepositions and Related Adverbials in English  
Author: Ian Pratt 
Affiliation: Computer Science University of Manchester  
Pubnum: ISSN 1361 6161  
Abstract: Department of Computer Science University of Manchester Technical Report Series UMCS-96-7-2 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, James F.: </author> <title> Towards a general theory of action and time. </title> <booktitle> Artificial Intelligence 23, </booktitle> <year> 1984, </year> <pages> pp. 123-154. </pages>
Reference-contexts: Allen <ref> [1] </ref>). 14 This claim is not entirely proper, since it is plausible to take the existence of a unique Monday in the interval of interest to be presupposed rather than asserted. However, in order to simplify TL, we shall take a small liberty here and ignore the difference. <p> This phenomenon of aspectual class coercion applies to our distinction between events and states just as much to any other treatment of aspectual class; we have nothing to add to what has already been said on this topic. 20 19 For example, in Allen <ref> [1] </ref>. 20 See, e.g. Moens and Steedman [25] for a fuller discussion of aspectual class coercion. 17 We mention one additional complication here. Truth-conditions (79) have it that Ridley is working in his laboratory at every instant of the interval in question. <p> An alternative scheme, proposed by Allen <ref> [1] </ref>, takes states to hold at all sub-intervals of any interval at which they hold.
Reference: [2] <author> Allen, James F and P.J. Hayes: </author> <title> "Moments and points in an interval-based temporal logic", </title> <booktitle> Computational Intelligence 5, </booktitle> <year> 1989, </year> <pages> pp. 225-238. </pages>
Reference-contexts: Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes <ref> [2] </ref>, Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay <p> We propose the following interpretation rules for every and at: (131) every 7! <ref> [2; X; O] </ref> where O 2 f; *; *!; *g. (132) at 7! [*; X; O] where O 2 f; *; *!; *g. <p> These rules map the sentence-structures (129) and (130) to the following lists of operator tuples (using the obvious substitutions for O): (133) <ref> [2; hMondayi; ] </ref>; [; hGunner visit Ridleyi]; (134) [*; hMondayi; ]; [; hGunner visit Ridleyi]; whence the procedure (126) generates the truth-conditions: (135) 2 (hMondayi; (hGunner visit Ridleyi)) 24 (136) *(hMondayi; (hGunner visit Ridleyi)). <p> These truth-conditions can be generated via the process used for sentence (118), by means of the interpretation rule: (144) until 7! <ref> [*!; X; 2] </ref> and by mapping the state-reporting tenseless sentence as follows: (145) hRidley work in his laboratoryi 7! [2; point; hRidley work in his laboratoryi]. Notice the difference from the corresponding mapping in (124). <p> These truth-conditions can be generated via the process used for sentence (118), by means of the interpretation rule: (144) until 7! [*!; X; 2] and by mapping the state-reporting tenseless sentence as follows: (145) hRidley work in his laboratoryi 7! <ref> [2; point; hRidley work in his laboratoryi] </ref>. Notice the difference from the corresponding mapping in (124). This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. <p> Notice the difference from the corresponding mapping in (124). This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. Mapping the components of (142) thus results in the tuples: (146) <ref> [*!; h5 o'clocki; 2] </ref>; [2; point; hRidley work in his laboratoryi]. which combine in the normal way to produce the formula in (143). State-reporting tenseless sentences should not always be mapped to operator-tuples beginning with 2. <p> This difference is motivated by the aspectual classes of the tenseless sentences in question: Gunner shoot Ridley reports an event, whilst Ridley work in his laboratory reports a state. Mapping the components of (142) thus results in the tuples: (146) [*!; h5 o'clocki; 2]; <ref> [2; point; hRidley work in his laboratoryi] </ref>. which combine in the normal way to produce the formula in (143). State-reporting tenseless sentences should not always be mapped to operator-tuples beginning with 2. <p> Thus, the rules we adopt for mapping tenseless sentences are: (150) X 7! [; X] where X is an event-reporting tenseless sentence. (151) X 7! [; point; X] where X is a state-reporting tenseless sentence. (152) X 7! <ref> [2; point; X] </ref> where X is a state-reporting tenseless sentence. In other words: state-reporting tenseless sentences can take either or 2 operators, but event-reporting tenseless sentences can take only -operators. The reason for the alternative rules (151) and (152) will become clear below. <p> The reason for the alternative rules (151) and (152) will become clear below. Notice that rule (150) prevents processing of the sentence: (153) * Ridley died until 6 o'clock since the operator-tuples generated, namely: (154) <ref> [*!; h6 o'clocki; 2] </ref>; [; hRidley diei], cannot be made to match up. (Remember the constraint that the last operator of the first tuple must be the same as the first operator of the second tuple.) 26 . <p> Compare the sentences: (185) Ridley worked in his laboratory every day for eight hours (186) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (187) <ref> [; h8 hoursi; 2] </ref>; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (188) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> Compare the sentences: (185) Ridley worked in his laboratory every day for eight hours (186) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (187) [; h8 hoursi; 2]; <ref> [2; hdayi; ] </ref>; [; point; hRidley work in his laboratoryi] (188) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> Compare the sentences: (185) Ridley worked in his laboratory every day for eight hours (186) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (187) [; h8 hoursi; 2]; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (188) <ref> [; h8 monthsi; 2] </ref>; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> sentences: (185) Ridley worked in his laboratory every day for eight hours (186) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (187) [; h8 hoursi; 2]; <ref> [2; hdayi; ] </ref>; [; point; hRidley work in his laboratoryi] (188) [; h8 monthsi; 2]; [2; hdayi; ]; [2; point; hRidley work in his laboratoryi]. <p> worked in his laboratory every day for eight hours (186) Ridley worked in his laboratory every day for eight months which yield the lists of operator tuples (187) [; h8 hoursi; 2]; [2; hdayi; ]; [; point; hRidley work in his laboratoryi] (188) [; h8 monthsi; 2]; [2; hdayi; ]; <ref> [2; point; hRidley work in his laboratoryi] </ref>. <p> Thus, sentence (199) is successfully processed on our approach, which is incorrect. Sometimes, temporal adverbials are omitted if rendered obvious by other temporal adverbials. For example, the sentence (200) Gunner arrived at work by 7 a.m. for 3 months generates the following list of operator tuples: (201) <ref> [; h3 monthsi; 2] </ref>; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which cannot combine in that order (the only calendrically sensible one) because of the clashing operators 2 and *!. <p> But sentence (200) is arguably elliptical for (202) Gunner arrived at work by 7 a.m. every working day for 3 months. Processing sentence (202) gives us the operator tuples: (203) <ref> [; h3 monthsi; 2] </ref>; [2; hworking dayi; ]; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which, according to the procedure outlined above, re-assemble themselves into the correct truth-conditions: (204) (h3 monthsi; 2 (hworking dayi; *! (h7 a.m.i; (hGunner arrive at worki)))). as required. <p> But sentence (200) is arguably elliptical for (202) Gunner arrived at work by 7 a.m. every working day for 3 months. Processing sentence (202) gives us the operator tuples: (203) [; h3 monthsi; 2]; <ref> [2; hworking dayi; ] </ref>; [*!; h7 a.m.i; ]; [; Gunner arrive at worki]; which, according to the procedure outlined above, re-assemble themselves into the correct truth-conditions: (204) (h3 monthsi; 2 (hworking dayi; *! (h7 a.m.i; (hGunner arrive at worki)))). as required. <p> Consider, for example, the sentences: (207) * Gunner visited Ridley one day until the 24th January (208) * Gunner visited Ridley one day for three months These sentences generate the following lists of tuples (ordered in the only sensible way): (209) <ref> [*!; h24th Januaryi; 2] </ref>; [; hdayi; ]; [; hGunner visit Ridleyi] (210) [; h3 monthsi; 2]; [; hdayi; ]; [; hGunner visit Ridleyi] Just as with sentence (205), these lists of tuples refuse to combine because of non-matching operators. <p> the sentences: (207) * Gunner visited Ridley one day until the 24th January (208) * Gunner visited Ridley one day for three months These sentences generate the following lists of tuples (ordered in the only sensible way): (209) [*!; h24th Januaryi; 2]; [; hdayi; ]; [; hGunner visit Ridleyi] (210) <ref> [; h3 monthsi; 2] </ref>; [; hdayi; ]; [; hGunner visit Ridleyi] Just as with sentence (205), these lists of tuples refuse to combine because of non-matching operators. <p> Otherwise, the process of transforming sentence-structures into formulae proceeds exactly as before. Thus, sentence-structure (221) produces the operator triples: (226) [*!; [hWednesdayi; h5 o'clocki]; 2]; <ref> [2; point; hRidley be working in his laboratoryi] </ref>. 33 which combine in the normal way to produce truth-conditions (219). Notice that this account only covers those cases of left-insertion where (i) the inserted functors are all at, and (ii) there is no right-insertion within a left-inserted structure. <p> The lists of operator triples generated are: (265) [*; hRidley enter the drawing roomi + h0.083i; ]; [; hGunner fire the shotsi] (266) <ref> [*!; hRidley enter the drawing roomi + h0.083i; 2] </ref>; [2; point; hGunner waiti], which fuse in the normal way to give the formulae: (267) *(hRidley enter the drawing roomi + h0.083i; (hGunner fire the shotsi)) (268) *! (hRidley enter the drawing roomi + h0.083i; 2 (point; hGunner waiti)). 30 There may <p> The lists of operator triples generated are: (265) [*; hRidley enter the drawing roomi + h0.083i; ]; [; hGunner fire the shotsi] (266) [*!; hRidley enter the drawing roomi + h0.083i; 2]; <ref> [2; point; hGunner waiti] </ref>, which fuse in the normal way to give the formulae: (267) *(hRidley enter the drawing roomi + h0.083i; (hGunner fire the shotsi)) (268) *! (hRidley enter the drawing roomi + h0.083i; 2 (point; hGunner waiti)). 30 There may be a way of formulating our procedure so that <p> been ignored, apart from one observation on the interaction between the perfective and for. 1. at 7! [*; X; O] where O is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! <ref> [ *; X; 2] </ref> 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main <p> the interaction between the perfective and for. 1. at 7! [*; X; O] where O is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! <ref> [2; X; O] </ref> where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; <p> is in f; 2; *; *!; *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! <ref> [; X; 2] </ref> 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g <p> *g 2. by 7! [*!; X; ] 3. during 7! [*; X; O] where O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! <ref> [*!; tor + X; 2] </ref> (if verb in main clause non-perfective) 8. for 7! [ *; tor X; 2] (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] <p> O is in f; 2g 4. esince 7! [ *; X; 2] 5. every 7! [2; X; O] where O is in f; 2; *; *!; *g 6. for 7! [; X; 2] 7. for 7! [*!; tor + X; 2] (if verb in main clause non-perfective) 8. for 7! <ref> [ *; tor X; 2] </ref> (if verb in main clause perfective) 9. in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; <p> in 7! [; X; ] 11. in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; X; O] where O is in f; 2g 14. throughout 7! <ref> [*; X; 2] </ref> 15. until 7! [*!; X; 2] Offset-prepositions generate left-embedded functors that yield temporal restrictions involving the +- and -operators. <p> in 7! [*; tor + X; O] where O is in f; 2g 12. one 7! [; X; O] where O is in f; 2; *; *!; *g 13. since 7! [ *; X; O] where O is in f; 2g 14. throughout 7! [*; X; 2] 15. until 7! <ref> [*!; X; 2] </ref> Offset-prepositions generate left-embedded functors that yield temporal restrictions involving the +- and -operators.
Reference: [3] <author> Alshawi, H. (ed.) </author> <title> The Core Language Engine, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi <ref> [3] </ref>. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and <p> That is: (59) (hMondayi; (hGunner shoot Ridleyi)). 12 Such intermediate representations are quite standard in implemented systems of formal semantics for natural language. See, for example, Alshawi <ref> [3] </ref>. 13 Formula (59) is the translation into TL of the sentence (56), and thus, once the interval of interest is specified, gives its truth-conditions. (We take it as read, in giving the semantics of English sentences, that the formulae into which we translate them are supposed to be true at
Reference: [4] <author> Amsili, P. M. Borillo, L. Vieu (eds.) </author> <title> Time, Space and Motion: </title> <booktitle> proceedings of the fifth international workshop. </booktitle> <address> Toulouse, France, </address> <year> 1995. </year>
Reference: [5] <author> Bree, </author> <title> D.S. "Words for Time" in Macar, </title> <note> Pouthas and Friedman [21] </note>
Reference: [6] <editor> Bree, D.S., R.A. Smit and J.P. </editor> <title> van Werkhoven "Translating Temporal Prepositions between Dutch and English", </title> <journal> Journal of Semantics 7 pp. </journal> <pages> 1-51. </pages>
Reference: [7] <author> Bree, D.S. Allel Feddag and Ian Pratt: </author> <title> "A formalization of the semantics of temporal relations", </title> <publisher> (forthcoming). </publisher>
Reference: [8] <author> Crouch, </author> <title> R.S. and S.G. Pullman (1993) "Time and modality in a natural language planning system", </title> <booktitle> Artificial Intelligence 63, </booktitle> <pages> pp. 265-304. </pages>
Reference-contexts: See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman <ref> [8] </ref> describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [13]. 2 somewhat simplified, in order to keep the formal apparatus introduced in later sections manageable. 8 We say that a P (P-double-bar or preposition-phrase) consists of
Reference: [9] <author> Davidson, </author> <title> Donald "The Individuation of Events" in Essays on Actions and Events, </title> <publisher> Oxford: Claren-don Press, </publisher> <year> 1980. </year>
Reference: [10] <author> Dowty, David, R. </author> <title> Word Meaning and Montague Grammar, </title> <address> Dordrecht:Reidel, </address> <year> 1979. </year>
Reference-contexts: Although not everything in this section is uncontroversial, most of it will be familiar to readers versed in formal semantics. We warn the reader at this stage that our account in this section is 1 See, for example, Dowty <ref> [10] </ref>, Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example,
Reference: [11] <author> Dowty, David, R. </author> <title> "The effects of Aspectual Class on the Temporal Structure of Discourse: Semantics or Pragmatics?", </title> <journal> Linguistics and Philosophy, </journal> <volume> 9(1), </volume> <year> 1989, </year> <pages> pp. 37-61. </pages>
Reference-contexts: We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty <ref> [11] </ref>, Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For
Reference: [12] <author> Fantechi, A., S. Gnesi, G. Ristori, M. Carenini, M. Vanocchi and P. </author> <title> Moreschini "Assisting requirement formalization by means of natural language translation" Formal Methods in System Design 4, </title> <booktitle> 1994, </booktitle> <pages> pp. 243-263. </pages>
Reference-contexts: Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. <ref> [12] </ref> address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [13]. 2 somewhat simplified, in order to keep the formal
Reference: [13] <author> Gabbay, Dov M., Ian Hodkinson and Mark Reynolds. </author> <title> Temporal Logic: </title> <journal> Mathematical Foundations and Computational Aspects vol. </journal> <volume> 1. </volume> <publisher> Oxford: Clarendon Press, </publisher> <year> 1994. </year>
Reference-contexts: and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. <ref> [13] </ref>. 2 somewhat simplified, in order to keep the formal apparatus introduced in later sections manageable. 8 We say that a P (P-double-bar or preposition-phrase) consists of a specifier followed by a P (P-bar); and a P consists in turn of a P (preposition) followed by a complement. (Actually, the term
Reference: [14] <author> Herweg, </author> <title> Michael "A Critical Examination of Two Classical Approaches to Aspect" Journal of Semantics 8, </title> <booktitle> 1991, </booktitle> <pages> pp. 363-402. </pages>
Reference-contexts: [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg <ref> [14] </ref>, Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of <p> Consider the sentences: (91) Ridley entered the drawing room 5 minutes before Gunner fired the shots (92) Gunner returned to the scene of the crime 4 hours after Ridley was killed. 21 Our approach to the state/event distinction follows that proposed by Herweg <ref> [14] </ref>, in taking states to hold at time points and events to occur over (non-instantaneous) time intervals. An alternative scheme, proposed by Allen [1], takes states to hold at all sub-intervals of any interval at which they hold.
Reference: [15] <author> Hinrichs, </author> <title> Erhard "Temporal Anaphora in Discourses of English", </title> <journal> Linguistics and Philosophy, </journal> <volume> 9(1), </volume> <year> 1989, </year> <pages> pp. 63-82. </pages>
Reference-contexts: We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs <ref> [15] </ref>, Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi
Reference: [16] <author> Krifka, Manfred: </author> <title> Nominalreferenz und Zeitkonstitution. Zur Semantik von Massentermen, </title> <address> Munich: Fink, </address> <year> 1989. </year>
Reference-contexts: example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka <ref> [16] </ref>. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al. [13]. 2 somewhat
Reference: [17] <author> Lakoff, G. Women, </author> <title> Fire and Dangerous Things, </title> <publisher> Chicago: Chicago University Press 1987. </publisher>
Reference-contexts: our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff <ref> [17] </ref>, Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language
Reference: [18] <author> Lascarides, </author> <title> Alex "The progressive and the imperfective paradox", </title> <type> Synthese 87(3), </type> <year> 1991, </year> <pages> pp. 401-448. 46 </pages>
Reference-contexts: Although not everything in this section is uncontroversial, most of it will be familiar to readers versed in formal semantics. We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides <ref> [18] </ref> and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and <p> The basic problem is that we wish to regard the preposition phrase as operating on an underlying sentence when, syntactically, it attaches to a V. Thus, formally, the assignment to the preposition at should be, not (24), but maybe 9 See, for example, Parsons [26], Lascarides <ref> [18] </ref> and Mittwoch [24]. 7 (27) at ] x [w [y [z [at (x; y (z))]]]] .
Reference: [19] <author> Lascarides, Alex and Nicholas Asher: </author> <title> "Temporal intepretation, discourse relations and commonsense entailment", </title> <journal> Linguistics and Philosophy, </journal> <volume> 16, </volume> <year> 1993, </year> <pages> pp. 437-493. </pages>
Reference-contexts: We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher <ref> [19] </ref> and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address
Reference: [20] <author> Lewis, David: </author> <title> "Scorekeeping in a Language Game", </title> <journal> in Journal of Philosphical Logic, </journal> <volume> 8, </volume> <year> 1979, </year> <pages> pp. 339-359. </pages>
Reference-contexts: A discussion of these dynamics, however, is more general than the subject of temporal adverbials, and would take us beyond the scope of the present paper. For a classic (if rather general) discussion of these issues, see Lewis <ref> [20] </ref> . 16 assumptions about temporal ontology should constitute no undue restriction for most of the states and events that normally get talked about.
Reference: [21] <author> Macar, F., V. Pouthas and W. J. </author> <title> Friedman Time, Action and Cognition: Towards Bridging the Gap, </title> <booktitle> NATO ASI Series D, </booktitle> <volume> vol. 66, </volume> <publisher> Dordrecht: Kluwer, </publisher> <year> 1992. </year>
Reference: [22] <author> May, </author> <title> Robert Logical Form: its Structure and Derivation, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1985. </year> <title> [23] ter Meulen, Alice G.B. Representing Time in Natural Language, </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1995 </year>
Reference: [24] <author> Mittwoch, </author> <title> Anita "Aspects of English aspect: on the interaction of perfect, progressive and durational phrases", </title> <journal> Linguistics and Philosophy, </journal> <volume> 11(2), </volume> <pages> 1988 pp. 203-254. </pages>
Reference-contexts: Although not everything in this section is uncontroversial, most of it will be familiar to readers versed in formal semantics. We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch <ref> [24] </ref>. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl <p> The basic problem is that we wish to regard the preposition phrase as operating on an underlying sentence when, syntactically, it attaches to a V. Thus, formally, the assignment to the preposition at should be, not (24), but maybe 9 See, for example, Parsons [26], Lascarides [18] and Mittwoch <ref> [24] </ref>. 7 (27) at ] x [w [y [z [at (x; y (z))]]]] .
Reference: [25] <author> Moens, Marc and Mark Steedman: </author> <title> "Temporal Ontology and Temporal Reference" Computational Linguistics 14(2), </title> <booktitle> 1988, </booktitle> <pages> pp. 15-28. </pages>
Reference-contexts: Moens and Steedman <ref> [25] </ref> for a fuller discussion of aspectual class coercion. 17 We mention one additional complication here. Truth-conditions (79) have it that Ridley is working in his laboratory at every instant of the interval in question. <p> equation in 10 minutes (163) Ridley worked in his laboratory for 4 hours, namely: (164) (h4 hoursi; (hRidley solve the equationi)). 26 It is widely, though not universally, accepted that tenseless-sentences reporting events can be coerced into state-interpretations if a temporal adverbial such as for demands it (Moens and Steedman <ref> [25] </ref>). 26 (165) (h4 hoursi; 2 (point; hRidley work in his laboratoryi)). The interpretation rule (161) prevents the processing of (166) * Ridley solved the equation for 10 minutes. The reasons are exactly parallel to those for sentence (153). We shall encounter more examples of this phenomenon below.
Reference: [26] <author> Parsons, </author> <title> Terence "The progressive in English", </title> <journal> Linguistics and Philosophy, </journal> <volume> 12(2), </volume> <year> 1989, </year> <pages> pp. 213-241. </pages>
Reference-contexts: Although not everything in this section is uncontroversial, most of it will be familiar to readers versed in formal semantics. We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons <ref> [26] </ref>, Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], <p> The basic problem is that we wish to regard the preposition phrase as operating on an underlying sentence when, syntactically, it attaches to a V. Thus, formally, the assignment to the preposition at should be, not (24), but maybe 9 See, for example, Parsons <ref> [26] </ref>, Lascarides [18] and Mittwoch [24]. 7 (27) at ] x [w [y [z [at (x; y (z))]]]] .
Reference: [27] <author> Parsons, </author> <title> Terence (1990) Events in the Semantics of English: A Study in Subatomic Semantics, </title> <publisher> MIT Press. </publisher>
Reference: [28] <author> Pratt, Ian and D.S. Bree: </author> <title> "How to translate some English temporal constructions into temporal logic" in Amsili et al. </title> <type> [4], </type> <year> 1995. </year>
Reference: [29] <author> Pratt, Ian and D.S. Bree: </author> <title> "An approach to the semantics of some English temporal constructions" in Proceedings of the Seventeenth Annual Conference of the Cognitive Science Society. </title> <address> Hillsdale, N.J. </address> <publisher> Lawrence Erlbaum, </publisher> <year> 1995, </year> <pages> pp. 118-123. </pages>
Reference: [30] <author> Quirk, Randolph, Sidney Greenbaum, Geoffrey Leech and Jan Svartvik: </author> <title> A Comprehensive Grammar of the English Language, </title> <publisher> London: Longman, </publisher> <year> 1985. </year>
Reference-contexts: See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. <ref> [30] </ref>. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For
Reference: [31] <author> Radford, Andrew: </author> <title> Transformational Grammar: a First Course, </title> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: Letting hGunner shoot Ridleyi and h5 o' clocki stand for these components, we we take (8) to exhibit the sentence-structure: (18) at (h5 o' clocki; hGunner shoot Ridleyi). 8 For a very approachable introduction to the syntax assumed in this paper, see Radford <ref> [31] </ref>.
Reference: [32] <author> Rice, Sally, </author> <title> A: "Polysemy and Lexical Representation: the case of three English Prepositions", </title> <booktitle> Proceedings of the fourteenth annual conference of the cognitive science society, </booktitle> <address> Hillsdale, NJ: </address> <publisher> Lawrence Earlbaum, </publisher> <year> 1992. </year>
Reference-contexts: in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice <ref> [32] </ref> and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for
Reference: [33] <author> Richards, Barry, Inge Bethke, </author> <title> Jaap van der Does and John Oberlander Temporal representation and inference, </title> <publisher> London: Academic Press, </publisher> <year> 1989. </year> <title> [34] van Riemsdijk, H.: A Case Study in Syntactic Markedness: the Binding Nature of Prepositional Phrases, </title> <publisher> Dordrecht: Foris, </publisher> <year> 1978. </year>
Reference-contexts: We warn the reader at this stage that our account in this section is 1 See, for example, Dowty [10], Parsons [26], Lascarides [18] and Mittwoch [24]. 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. <ref> [33] </ref>, Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl [35] and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and
Reference: [35] <author> Verkuyl, Henk: </author> <title> A Theory of Aspectuality: the Interaction between Temporal and Atemporal Structure, </title> <booktitle> Cambridge Studies in Linguistics, </booktitle> <volume> vol. </volume> <pages> 64, </pages> <address> Cambridge: </address> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: 2 See, for example, Dowty [11], Hinrichs [15], Lascarides and Asher [19] and ter Meulen [23]. 3 See, for example, Richards et al. [33], Alshawi [3]. 4 See, for example, Lakoff [17], Rice [32] and Quirk et al. [30]. 5 See, for example, Herweg [14], Allen and Hayes [2], Verkuyl <ref> [35] </ref> and Krifka [16]. 6 For example, Fantechi et al. [12] address the problem of automatically generating computer code from natural language specification; and Crouch and Pullman [8] describe a natural language front-end for a planning program. 7 For a useful survey of systems of temporal logic, see Gabbay et al.
Reference: [36] <institution> Vendler, Zeno Linguistics and Philosophy, Ithaca: Cornell University Press, </institution> <year> 1967 </year> <month> 47 </month>
References-found: 34

