URL: ftp://ftp.gvu.gatech.edu/pub/gvu/tr/1997/97-11.ps.Z
Refering-URL: http://www.cs.gatech.edu/fce/cyberdesk/index.html
Root-URL: 
Email: fabowd, anind, rjo, brothertg@cc.gatech.edu  
Title: Context-awareness in wearable and ubiquitous computing  
Author: Gregory D. Abowd, Anind Dey, Robert Orr Jason Brotherton 
Keyword: Keyword: Context-aware computing, ubiquitous computing, consumer applications, personal information management, tourism, voice-only interaction, positioning systems.  
Address: Atlanta, GA USA 30332-0280  
Affiliation: GVU Center College of Computing Georgia Institute of Technology  
Abstract: A common focus shared by researchers in mobile, ubiquitous and wearable computing is the attempt to break away from the traditional desktop computing paradigm. Computational services need to become as mobile as their users. Whether that service mobility is achieved by equipping the user with computational power or by instrumenting the environment, all services need to be extended to take advantage of the constantly changing context in which they are accessed. This paper will report on work done in the Future Computing Environments Group at Georgia Tech to provide infrastructure for context-aware computing. We will describe some of the fundamental issues involved in context-aware computing, solutions we have generated to provide a flexible infrastructure and several applications that take advantage of context-awareness to allow freedom from traditional desktop computing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. D. Abowd. </author> <title> Ubiquitous computing: Research themes and open issues from an applications perspective. </title> <type> Technical Report GIT-GVU 96-24, </type> <institution> GVU Center, Georgia Institute of Technology, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: After enough experience has been gained through rapidly prototyping novel applications, general themes and mechanisms can be generated. In our work in FCE, we have generated three general themes, of which context-aware computing is one (the others are the capture, integration and access problem [2] and ubiquitous software services <ref> [18, 1] </ref>). The general mechanism for context-aware computing is summarized in the following steps: 1. Collect information on the user's physical, infor mational or emotional state. 2.
Reference: [2] <author> G. D. Abowd, C. G. Atkeson, A. Feinstein, C. Hmelo, R. Kooper, S. Long, N. Sawhney, and M. Tan. </author> <title> Teaching and learning as multimedia authoring: The classroom 2000 project. </title> <booktitle> In Pro--ceedings of the ACM Conference on Multimedia | Multimedia'96, </booktitle> <year> 1996. </year>
Reference-contexts: After enough experience has been gained through rapidly prototyping novel applications, general themes and mechanisms can be generated. In our work in FCE, we have generated three general themes, of which context-aware computing is one (the others are the capture, integration and access problem <ref> [2] </ref> and ubiquitous software services [18, 1]). The general mechanism for context-aware computing is summarized in the following steps: 1. Collect information on the user's physical, infor mational or emotional state. 2. <p> We are actively engaged in a project, Classroom 2000, which is attempting to augment both teacher and learner in a lecture-room environment <ref> [2] </ref>. Much of our lives are spent engaged in active discussions with other people. How many times have we been stuck trying to recall the one important message from a meeting only to have that memory elude us? A similar situation arises in some forms of classroom education as well.
Reference: [3] <author> G. D. Abowd, C. G. Atkeson, J. Hong, S. Long, R. Kooper, and M. Pinkerton. Cyberguide: </author> <title> A mobile context-aware tour guide. </title> <booktitle> ACM Wireless Networks, </booktitle> <year> 1997. </year> <note> To appear. </note> <institution> [4] . Apple Research Laboratories. Apple data detectors homepage. </institution> <note> Available at http://www.research.apple.com/research /tech/AppleDataDetectors/, </note> <year> 1997. </year>
Reference-contexts: The one thing a book does not know, however, is where the tourist is located when they want information. Position information augmenting an electronic guidebook could address that problem. We initiated the Cyberguide project to experiment with location as a context cue <ref> [10, 11, 3] </ref>.
Reference: [5] <author> A. Asthana, M. Cravatts, and P. Krzyzanouski. </author> <title> An indoor wireless system for personalized shopping assistance. </title> <editor> In L.-F. Cabrera and M. Sattya-narayanan, editors, </editor> <booktitle> Workshop on Mobile Computing Systems and Applications, </booktitle> <pages> pages 69-74. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> December </month> <year> 1994. </year>
Reference-contexts: In thinking about and developing our own location-aware application, we were greatly influenced by work such as the PARCTab at Xerox PARC [16], the InfoPad project at Berkeley [12], the Olivetti Active Badge system [16] and the Personal Shopping Assistant proposed at AT&T <ref> [5] </ref>. A more general programming framework for describing location-aware objects was the subject of Schilit's thesis and reflected a lot of the work done at PARC [15]. There has been some interesting work recently directly related to context-aware computing.
Reference: [6] <author> A. Dey, G. D. Abowd, M. Pinkerton, and A. Wood. Cyberdesk: </author> <title> A framework for providing self-integrating ubiquitous software services. </title> <type> Technical Report GIT-GVU-97-10, </type> <institution> GVU Center, Georgia Institute of Technology, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: In this second example, the CyberDesk project <ref> [18, 6] </ref>, we use informational context to aid in the integration of desktop and network services. Informational context refers to any artifact (e.g., words on a screen or a picture at a museum) that the user is attending to. <p> The type converters provide more powerful integrating behavior by converting given events into other events, allowing for a greater number of matches. These five components are discussed in greater detail elsewhere <ref> [6] </ref>. The CyberDesk framework was designed to be easily extensible, and we have so far been able to incorporate over 50 different desktop and network services, including ones that involve mobile PDAs connected over a wireless network.
Reference: [7] <author> A. K. Dey, L. D. Catledge, G. D. Abowd, and C. Potts. </author> <title> Developing voice-only applications in the absence of speech recognition technology. </title> <type> Technical Report GIT-GVU-97-06, </type> <institution> GVU Center, Georgia Institute of Technology, </institution> <month> March </month> <year> 1997. </year> <note> Submitted to DIS'97. </note>
Reference-contexts: and results, in order to rank suggestions for the user. 5 Using physical and informational context to support more effective voice-only interaction 5.1 Describing the application In the Savoir (Somewhat assisted voice-only interaction research) project, we are exploring a number of issues related to context awareness and voice-only computer interactions <ref> [7] </ref>. As computing and communication devices become smaller, lighter, and more powerful, voice will become a primary medium of interaction. Our work examines voice-only interactions and aims to develop a prototype application that demonstrates useful voice-only functions and well designed voice-only interfaces.
Reference: [8] <author> I. Essa and A. Pentland. </author> <title> A vision system for observing and extracting facial action parameters. </title> <booktitle> In Proceedings of the Computer Vision and Pattern Recognition Conference, </booktitle> <pages> pages 76-83. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1994. </year>
Reference-contexts: There has been some interesting work recently directly related to context-aware computing. Essa and Pentland have used computational perception techniques in an attempt to match actual facial expressions with some prescribed expressions indicating the state of the human (e.g., smiling, frowning, surprised, etc.) <ref> [8, 9] </ref>. Though this work does not claim to be a way to predict human emotions, there is a clear suggestion of how this and related perception research can improve the quality of contextual information that can be gathered.
Reference: [9] <author> I. Essa and A. Pentland. </author> <title> Facial expression recognition using a dynamic model and motion energy. </title> <booktitle> In Proceedings of the International Conference on Computer Vision, </booktitle> <pages> pages 360-367. </pages> <publisher> IEEE Computer Society, </publisher> <address> Cambridge, MA, </address> <year> 1995. </year>
Reference-contexts: There has been some interesting work recently directly related to context-aware computing. Essa and Pentland have used computational perception techniques in an attempt to match actual facial expressions with some prescribed expressions indicating the state of the human (e.g., smiling, frowning, surprised, etc.) <ref> [8, 9] </ref>. Though this work does not claim to be a way to predict human emotions, there is a clear suggestion of how this and related perception research can improve the quality of contextual information that can be gathered.
Reference: [10] <author> S. Long, D. Aust, G. D. Abowd, and C. G. Atkeson. </author> <title> Rapid prototyping of mobile context-aware applications: The cyberguide case study. </title> <booktitle> In Proceedings of the 1996 conference on Human Factors in Computing Systems | CHI'96, </booktitle> <year> 1996. </year> <note> Short paper. </note>
Reference-contexts: The one thing a book does not know, however, is where the tourist is located when they want information. Position information augmenting an electronic guidebook could address that problem. We initiated the Cyberguide project to experiment with location as a context cue <ref> [10, 11, 3] </ref>.
Reference: [11] <author> S. Long, R. Kooper, G. D. Abowd, and C. G. Atkeson. </author> <title> Rapid prototyping of mobile context-aware applications: The cyberguide case study. </title> <booktitle> In Proceedings of the 2nd Annual International Conference on Mobile Computing and Networking, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: The one thing a book does not know, however, is where the tourist is located when they want information. Position information augmenting an electronic guidebook could address that problem. We initiated the Cyberguide project to experiment with location as a context cue <ref> [10, 11, 3] </ref>.
Reference: [12] <author> A. C. Long, Jr., S. Narayanaswamy, A. Burstein, R. Han, K. Lutz, B. Richards, S. Sheng, R. W. Brodersen, and J. Rabaey. </author> <title> A prototype user interface for a mobile multimedia terminal. </title> <booktitle> In Proceedings of the 1995 conference on Human Factors in Computing Systems | CHI'95, </booktitle> <year> 1995. </year> <title> Interactive experience demonstration. </title>
Reference-contexts: In thinking about and developing our own location-aware application, we were greatly influenced by work such as the PARCTab at Xerox PARC [16], the InfoPad project at Berkeley <ref> [12] </ref>, the Olivetti Active Badge system [16] and the Personal Shopping Assistant proposed at AT&T [5]. A more general programming framework for describing location-aware objects was the subject of Schilit's thesis and reflected a lot of the work done at PARC [15].
Reference: [13] <author> M. Pandit and S. Kalbag. </author> <title> The selection recognition agent: Instant access to relevant information and operations. </title> <booktitle> In Proceedings of Intelligent User Interfaces '97. </booktitle> <publisher> ACM Press, </publisher> <year> 1997. </year>
Reference-contexts: Informational context, defined below in Section 4, has been the subject of work done at Apple (Data Detectors [4]) and Intel (Pandit and Kalbag's Selection Recognition Agent <ref> [13] </ref>). 3 Cyberguide: Using location to pro vide context There are a number of PDAs available today, yet there are not many people who are devoted to using them, for a wide variety of reasons.
Reference: [14] <author> R. </author> <title> Picard. Affective computing. </title> <type> Technical Report 321, </type> <institution> MIT Media Lab, Perceptual Computing, </institution> <month> November </month> <year> 1995. </year> <note> Available as MIT Media Lab Perceptual Computing Techreport # 362 from http://vismod.www.media.mit.edu/vismod/. </note>
Reference-contexts: Though this work does not claim to be a way to predict human emotions, there is a clear suggestion of how this and related perception research can improve the quality of contextual information that can be gathered. Picard's work on affective computing <ref> [14] </ref> suggests a similar objective, only through the use of bio-electric signals, coupled with theories on emotion and cognition.
Reference: [15] <author> W. N. Schilit. </author> <title> System architecture for context-aware mobile computing. </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1995. </year>
Reference-contexts: A more general programming framework for describing location-aware objects was the subject of Schilit's thesis and reflected a lot of the work done at PARC <ref> [15] </ref>. There has been some interesting work recently directly related to context-aware computing. Essa and Pentland have used computational perception techniques in an attempt to match actual facial expressions with some prescribed expressions indicating the state of the human (e.g., smiling, frowning, surprised, etc.) [8, 9].
Reference: [16] <author> R. Want, A. Hopper, V. Falcao, and J. Gibbons. </author> <title> The active badge location system. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 91-102, </pages> <month> Jan-uary </month> <year> 1992. </year>
Reference-contexts: The majority of context-aware computing to date has been restricted to location-aware computing for mobile applications, and our own work started out that way as well. In thinking about and developing our own location-aware application, we were greatly influenced by work such as the PARCTab at Xerox PARC <ref> [16] </ref>, the InfoPad project at Berkeley [12], the Olivetti Active Badge system [16] and the Personal Shopping Assistant proposed at AT&T [5]. A more general programming framework for describing location-aware objects was the subject of Schilit's thesis and reflected a lot of the work done at PARC [15]. <p> In thinking about and developing our own location-aware application, we were greatly influenced by work such as the PARCTab at Xerox PARC <ref> [16] </ref>, the InfoPad project at Berkeley [12], the Olivetti Active Badge system [16] and the Personal Shopping Assistant proposed at AT&T [5]. A more general programming framework for describing location-aware objects was the subject of Schilit's thesis and reflected a lot of the work done at PARC [15]. There has been some interesting work recently directly related to context-aware computing.
Reference: [17] <author> M. Weiser. </author> <title> Some computer science issues in ubiquitous computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(7) </volume> <pages> 75-84, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: We have also raised some issues to direct further research in context-aware computing. Our experimental research method is very heavily biased in favor of an applications focus. We argue, along with Weiser <ref> [17] </ref>, that the primary purpose for mobile, ubiquitous and wearable computing is the applications that are enabled. Though research on infrastructure is also essential, the current balance of research is weighted too much in favor of infrastructure at the expense of applications.
Reference: [18] <author> A. Wood, A. Dey, and G. D. Abowd. Cyberdesk: </author> <title> Automated integration of desktop and network services. </title> <booktitle> In Proceedings of the 1997 conference on Human Factors in Computing Systems | CHI'97, </booktitle> <pages> pages 552-553, </pages> <year> 1997. </year> <note> Technical note. </note>
Reference-contexts: After enough experience has been gained through rapidly prototyping novel applications, general themes and mechanisms can be generated. In our work in FCE, we have generated three general themes, of which context-aware computing is one (the others are the capture, integration and access problem [2] and ubiquitous software services <ref> [18, 1] </ref>). The general mechanism for context-aware computing is summarized in the following steps: 1. Collect information on the user's physical, infor mational or emotional state. 2. <p> In this second example, the CyberDesk project <ref> [18, 6] </ref>, we use informational context to aid in the integration of desktop and network services. Informational context refers to any artifact (e.g., words on a screen or a picture at a museum) that the user is attending to.
References-found: 17

