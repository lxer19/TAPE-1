URL: http://polaris.cs.uiuc.edu/reports/1495.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/polaris/rep2.html
Root-URL: http://www.cs.uiuc.edu
Title: A Data Dependence Graph in Polaris  
Author: Yunheung Paek Paul Petersen 
Address: Urbana, Illinois 61801  
Affiliation: Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  
Date: July 17, 1996  
Abstract: Data dependence analysis has become one of the most important constituents of loop-level parallelizing compilers. The information gathered from the analysis is needed to determine both the potential concurrency of loop nests and the legality of loop transformations concerning loop parallelization. The analysis is based on data dependence tests such as the constant test and the GCD test. Once the analysis is complete, the dependence information for the input program is stored for later demand. Since this dependence information is stored in memory, recalculation of the information in following passes is unnecessary, reducing the whole parallelizing compiler execution time. However because this information often requires so much memory space, sometimes up to thousands of Mbytes without strict memory management, it can run out of heap storage, and cause another problem: how do we store the information efficiently? Besides memory space, the time to fetch the necessary information is also another criterion of concern because faster access generally requires more memory space. In this paper, we design an efficient method of dealing with data dependence information in Polaris in terms of memory space and access time. In this method, we use a compromise between the two criteria to get better performance.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Wolfe M. and Banerjee U., </author> <title> Data Dependence and its Application to Parallel processing, </title> <journal> International Journal of Parallel Programming, </journal> <volume> 16(2), </volume> <pages> pp. 137-178, </pages> <month> Apr. </month> <year> 1987. </year>
Reference: [2] <author> Wolfe M., </author> <title> Optimizing Supercompilers for Supercomputers, </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year> <month> 8 </month>
Reference: [3] <author> Zima H. and Chapman B., </author> <title> Supercompilers for Parallel and Vector Computers, </title> <publisher> ACM Press, </publisher> <address> New York, NY, </address> <year> 1990. </year>
Reference: [4] <author> Huson C., </author> <title> An In-Line Subroutine Expander for Parafras, M.S. </title> <type> thesis 351, </type> <institution> Univ. of Illinois at Urbana-Champaign, Dept. of Computer Sci., </institution> <month> Dec., </month> <year> 1982. </year>
Reference: [5] <editor> Padua D. et al, </editor> <title> Polaris: the next Generation in Parallelizing Compilers, </title> <booktitle> Seventh Annual Workshop on Languages and Compilers for Parallel Computing, </booktitle> <institution> Cornell Univ., </institution> <address> Ithaca, NY, </address> <pages> pp. </pages> <address> 10.1-10.18, </address> <month> Aug. </month> <pages> 8-10. </pages>
Reference: [6] <author> Blume W. and Eigenmann R., </author> <title> The Range Test: A Dependence Test for Symbolic, Non-linear Expressions. </title> <type> Technical Report 1345, </type> <institution> Univ. of Illinois at Urbana-Champaign, Cntr. for Supercomputing Res. & De., </institution> <month> Apr. </month> <year> 1994. </year>
Reference: [7] <author> Rauchwerger L. and Padua D., </author> <title> The PRIVATIZING DOALL Test: A Run-Time Techniques for DOALL Loop Identification and Array Privatization. </title> <type> Technical Report 1329, </type> <institution> Univ. of Illinois at Urbana-Champaign, Cntr. for Supercomputing Res. & De., </institution> <month> Jan. </month> <year> 1994. </year>
Reference: [8] <author> Tu P. and Padua D., </author> <title> Automatic Array Privatization, </title> <booktitle> Sixth Annual Workshop on Languages and Compilers for Parallel Computing, </booktitle> <address> Portland, OR, </address> <pages> pp. 500-521, </pages> <month> Aug. </month> <year> 1993. </year>
Reference: [9] <author> Pugh W., </author> <title> The Omega Test: A Fast and Practical Integer Programming Algorithm for Dependence Analysis, </title> <booktitle> Supercomputing '91, </booktitle> <year> 1991 </year>
Reference: [10] <author> Li Z., Yew P. and Zhu C., </author> <title> An Efficient Data Dependence Analysis for Parallelizing Compilers, </title> <journal> IEEE Trans. Parallel and Distrib. Syst., </journal> <volume> 1(1), </volume> <pages> pp. 26-34, </pages> <year> 1990. </year>
Reference: [11] <author> Wolfe W. and Tseng C., </author> <title> The Power Test for Data Depedence, </title> <journal> IEEE Trans. on Parallel and Distrib. Syst., </journal> <volume> 3, </volume> <pages> pp. 591-601, </pages> <month> Sep. </month> <year> 1992. </year>
Reference: [12] <author> Goff G., Kennedy K. and Tseng C., </author> <title> Practical Dependence Testing, </title> <journal> SIGPLAN Notices, </journal> <volume> 26, </volume> <pages> pp. 15-29, </pages> <month> June </month> <year> 1991. </year>
Reference: [13] <author> Kuck D. et al, </author> <title> The Perfect Benchmarks: Effective Performance Evaluation of Supercomputers, </title> <journal> International Journal of Supercomputer Applications, </journal> <volume> 3(3), </volume> <pages> pp. 5-40, </pages> <month> Fall </month> <year> 1989. </year>
Reference: [14] <editor> Padua D. et al, </editor> <title> The Polaris Internal Representation. </title> <type> Technical Report 1317. </type> <institution> Univ. of Illinois at Urbana-Champaign, Cntr. for Supercomputing Res. & De., </institution> <month> Oct. </month> <year> 1993. </year> <month> 9 </month>
References-found: 14

