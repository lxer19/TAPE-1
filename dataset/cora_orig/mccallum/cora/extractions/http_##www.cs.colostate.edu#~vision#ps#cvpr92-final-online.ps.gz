URL: http://www.cs.colostate.edu/~vision/ps/cvpr92-final-online.ps.gz
Refering-URL: http://www.cs.colostate.edu/~vision/html/publications.html
Root-URL: 
Title: Hybrid Weak-Perspective and Full-Perspective Matching.  
Author: J. Ross Beveridge E. M. Riseman 
Address: Amherst, MA. 01003  
Affiliation: Computer and Information Science Department University of Massachusetts at Amherst  
Abstract: Full-perspective mappings between 3D objects and 2D images are more complicated than weak-perspective mappings, which consider only rotation, translation and scaling. Therefore, in 3D model-based robot navigation, it is important to understand how and when full-perspective must be taken into account. In this paper we use a probabilistic combinatorial optimization algorithm to search for an optimal match between 3D landmark and 2D image features. Three variations are considered: a weak-perspective algorithm rotates, translates and scales an initial 2D projection of the 3D landmark. A full-perspective algorithm always recomputes the robot's pose and repro-jects the landmark when testing alternative matches. Finally, a hybrid algorithm uses weak-perspective to select a most promising alternative, but then updates the pose and reprojects the landmark. The hybrid algorithm appears to combine the best attributes of the other two. Like the full-perspective algorithm, it reliably recovers the true pose of the robot, and like the weak-perspective algorithm, it runs 5 to 10 faster than the full-perspective algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [Bur86] <author> J. B. Burns, A. R. Hanson, and E. M. </author> <title> Rise man. Extracting straight lines. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-8(4):425 - 456, </volume> <month> July </month> <year> 1986. </year>
Reference-contexts: Landmark recognition involves matching prominent landmark features with features extracted from images (for example Figures 1 and 2). Image features used in this paper are 2D line segments produced by the Burns algorithm <ref> [Bur86] </ref>. How and when during matching should full-perspective projection be taken into account? Three alternatives are: Weak-perspective: Match projected landmark fea tures to image features subject to rotation, trans lation and scaling in the image plane.
Reference: [Bev92] <author> J. Ross Beveridge and Edward M. Riseman. </author> <title> Can too much perspective spoil the view? a case study in 2d affine versus 3d perspective model matching. </title> <booktitle> In Proceedings: Image Understanding Workshop, </booktitle> <pages> pages 665 - 663, </pages> <address> San Mateo, CA, </address> <month> January </month> <year> 1992. </year> <note> Morgan Kauf-mann. </note>
Reference-contexts: Results for the weak-perspective and full-perspective algorithms have previously been reported in <ref> [Bev92] </ref>. The hybrid-perspective algorithm is presented here for the first time. 2 Landmark Matching The problem of matching landmark features is cast in terms of combinatorial optimization. <p> For weak-perspective a steepest-descent strategy is used: E match is computed for each neighbor and the one yielding the greatest improvement is picked. For full-perspective, where testing neighbors involves comparatively expensive 3D pose determination, a caching strategy named inertial-descent is used <ref> [Bev92] </ref>. All neighbors better than the current correspondence are stored in order of relative improvement. They are then sequentially tested and adopted if improvement still holds. The hybrid-perspective algorithm is similar to the steepest-descent strategy used with weak-perspective.
Reference: [Bev90] <author> J. Ross Beveridge, Rich Weiss, and Ed ward M. Riseman. </author> <title> Combinatorial optimization applied to variable scale 2d model matching. </title> <booktitle> In Proceedings of the IEEE International Conference on Pattern Recognition 1990, </booktitle> <address> At-lantic City, </address> <pages> pages 18 - 23. </pages> <publisher> IEEE, </publisher> <month> June </month> <year> 1990. </year>
Reference-contexts: Clearly the size of the correspondence space C is staggering. 2.2 Optimality By defining a match error over the space C the goal is an optimal match c fl . E match (c fl ) E match (c) 8c 2 C (3) As in <ref> [Bev90] </ref> E match combines two terms. E match (c) = E fit (c) + E om (c) (4) E fit is a residual squared error obtained by first fitting the model to the corresponding data. E om penalizes matches which omit portions of the model. <p> Regularization with MPSD resolves otherwise under-constrained cases. This term is given little weight: t = 10 4 . Fitting for weak-perspective is closed form. A quadratic method of obtaining the best fit rotation, translation and scale is presented in <ref> [Bev90] </ref>. This is the principle reason why weak-perspective is compu-tationally much faster than the full-perspective fitting described next. Full-perspective Fitting: E fit (c) is a function of residual 3D squared point-to-plane (SPPD) distance [Kum89, Kum90]. The points are the endpoints of the 3D model segments. <p> Omission Error: E om (c) is essentially identical for the weak-perspective, full-perspective and hybrid algorithms. It is a function of the fraction of 2D model line segments not covered by data line segments <ref> [Bev90] </ref>. A point on a model line segment is covered when a point on a data segment projects perpendicularly onto it. E om (c) = m2M L m e ffp m 1 p m is the fraction of model segment m not covered by data. <p> L m is the sum of the lengths of all the model segments. 2.3 Search Local search algorithms specifically adapted to model matching <ref> [Bev90] </ref> are used to search the correspondence space C for an optimal correspondence c fl . In general, a local search algorithm moves from an initial solution, via transformations, to one that is locally optimal [Ker72, Lin73, Pap82]. It may not find the globally optimal match.
Reference: [Fen90] <author> Claude Fennema, Allen Hanson, Edward Riseman, J. R. Beveridge, and R. Ku-mar. </author> <title> Model-directed mobile robot navigation. </title> <journal> IEEE Trans. on Syst., Man, Cybern., </journal> <volume> 20(6):1352 - 1369, </volume> <month> November/December </month> <year> 1990. </year>
Reference: [Kum89] <author> Rakesh Kumar and Allen Hanson. </author> <title> Robust estimation of camera location and orientation from noisy data having outliers. </title> <booktitle> In Proc. of IEEE Workshop on Interpretation of 3D Scenes, </booktitle> <pages> pages 52 - 60, </pages> <address> Austin, TX, 1989. </address> <publisher> IEEE. </publisher>
Reference-contexts: Use weak-perspective to rank alternatives correspondences. Use full-perspective to update pose and reproject the landmark after selecting an alternative, improved, correspondence. In all three cases, the resultant match is used to estimate the robot's true pose using an algorithm developed by R. Kumar <ref> [Kum89, Kum90] </ref>. This same algorithm is also employed by the full-perspective and hybrid algorithms to update pose during matching. 2 Each of these three algorithms will be evaluated on: 1) how well the true pose is recovered, and 2) how much computation is required. <p> A quadratic method of obtaining the best fit rotation, translation and scale is presented in [Bev90]. This is the principle reason why weak-perspective is compu-tationally much faster than the full-perspective fitting described next. Full-perspective Fitting: E fit (c) is a function of residual 3D squared point-to-plane (SPPD) distance <ref> [Kum89, Kum90] </ref>. The points are the endpoints of the 3D model segments. The planes are defined by the two endpoints of data line segments and the focal point of the camera.
Reference: [Kum90] <author> Rakesh Kumar and Allen Hanson. </author> <title> Analysis of different robust methods for pose refinement. </title> <booktitle> In Proc. of IEEE Workshop on Robust Methods in Computer Vision, </booktitle> <pages> pages 161 - 182, </pages> <address> Seattle, WA, 1990. </address> <publisher> IEEE. </publisher>
Reference-contexts: Use weak-perspective to rank alternatives correspondences. Use full-perspective to update pose and reproject the landmark after selecting an alternative, improved, correspondence. In all three cases, the resultant match is used to estimate the robot's true pose using an algorithm developed by R. Kumar <ref> [Kum89, Kum90] </ref>. This same algorithm is also employed by the full-perspective and hybrid algorithms to update pose during matching. 2 Each of these three algorithms will be evaluated on: 1) how well the true pose is recovered, and 2) how much computation is required. <p> A quadratic method of obtaining the best fit rotation, translation and scale is presented in [Bev90]. This is the principle reason why weak-perspective is compu-tationally much faster than the full-perspective fitting described next. Full-perspective Fitting: E fit (c) is a function of residual 3D squared point-to-plane (SPPD) distance <ref> [Kum89, Kum90] </ref>. The points are the endpoints of the 3D model segments. The planes are defined by the two endpoints of data line segments and the focal point of the camera. <p> E fit (c) = s2c L d 2 (SPPD (s) + t SPRD (s)) (6) Squared point-to-ray distance, SPRD, plays a role analogous to that of the MPSD term for weak-perspective. SPPD is sensitive to the relative distance of a segment from the camera <ref> [Kum90] </ref> and the choice of world units (feet versus inches). The weight w compensates such that SPPD (S) approximates perpendicular distance in the image plane measured in pixels. <p> Both the full-perspective and hybrid algorithms recovered the true pose. For a total of 18 problems, 9 poses and directed/undirected segments, both algo-5 rithms reliably found exactly the same optimal correspondence, and hence recovered the robot's true pose to within the accuracy bounds of our pose algorithm <ref> [Kum90] </ref>. The weak-perspective algorithm did equally well for initial pose estimates 4, 5 and 6 where perspective has little effect.
Reference: [Ker72] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell Systems Tech. Journal, </journal> <volume> 49:291 - 307, </volume> <year> 1972. </year>
Reference-contexts: In general, a local search algorithm moves from an initial solution, via transformations, to one that is locally optimal <ref> [Ker72, Lin73, Pap82] </ref>. It may not find the globally optimal match. However, using multiple trials of local search initiated from independently chosen random starting points the probability of missing the optimum can, in principle, be made arbitrarily small. The notion of neighborhood is basic to local search.
Reference: [Lin73] <author> S. Lin and B. Kernighan. </author> <title> An effective heuris tic algorithm for the traveling salesman problem. </title> <journal> Operations Research, </journal> <volume> 21:498 - 516, </volume> <year> 1973. </year>
Reference-contexts: In general, a local search algorithm moves from an initial solution, via transformations, to one that is locally optimal <ref> [Ker72, Lin73, Pap82] </ref>. It may not find the globally optimal match. However, using multiple trials of local search initiated from independently chosen random starting points the probability of missing the optimum can, in principle, be made arbitrarily small. The notion of neighborhood is basic to local search.
Reference: [Low91] <author> David G. Lowe. </author> <title> Fitting parameterized three dimensional models to images. </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence, </journal> <volume> 13(5):441 - 450, </volume> <month> May </month> <year> 1991. </year>
Reference-contexts: Solving for the 3D pose of the object which best fits the model to the data by equation 6 requires the use of an iterative method. The Levenberg-Marquardt method suggested by David Lowe <ref> [Low91] </ref> is used to insure convergence for difficult cases. To save computation, Kumar's algorithm has been reformulated in terms of state variables associated with each model-data pair s 2 S. The sum of these state variables for all pairs s in a particular correspondence c determines the pose.
Reference: [Pap82] <author> Christos H. Papadimitriou and Kenneth Stei glitz. </author> <title> Combinatorial Optimization: Algorithms and Complexity, chapter Local Search, </title> <booktitle> pages 454 - 480. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1982. </year> <month> 7 </month>
Reference-contexts: In general, a local search algorithm moves from an initial solution, via transformations, to one that is locally optimal <ref> [Ker72, Lin73, Pap82] </ref>. It may not find the globally optimal match. However, using multiple trials of local search initiated from independently chosen random starting points the probability of missing the optimum can, in principle, be made arbitrarily small. The notion of neighborhood is basic to local search. <p> However, when the new match becomes the current match model pose is recomputed and the model is repro-jected. This can lead to cases where E match is better before reprojection but worse afterwards. To prevent premature termination in such cases, a variant of variable-depth <ref> [Pap82] </ref> search is used. Here, if the state being left is better, then it is remembered for some fixed number of additional moves.
References-found: 10

