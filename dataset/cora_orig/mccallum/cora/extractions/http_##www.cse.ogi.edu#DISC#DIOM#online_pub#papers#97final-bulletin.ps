URL: http://www.cse.ogi.edu/DISC/DIOM/online_pub/papers/97final-bulletin.ps
Refering-URL: http://www.cse.ogi.edu/~lingliu/CQ/publication.html
Root-URL: http://www.cse.ogi.edu
Email: lingliu@cs.ualberta.ca  calton@cse.ogi.edu  
Title: Dynamic Query Processing in DIOM  
Author: Ling Liu Calton Pu 
Address: Alberta  
Affiliation: Department of Computing Science University of  Dept. of Computer Science and Engineering Oregon Graduate Institute  
Abstract: In an open environment such as the Internet, query responsiveness involves both the capability of responding to a query within a reasonable time frame and the capability of dynamically incorporating the new information sources and the up to date information of existing data sources into the answer of a query. In this paper we present the dynamic distributed query processing framework, developed in the DIOM project, to demonstrate the feasibility and the benefit of improving responsiveness of querying across heterogeneous information sources, without relying on an integrated global view schema pre-defined over all the participating information sources. Then we discuss several issues with respect to improving query responsiveness in the context of DIOM, including how the information consumers' queries are dynamically processed and linked to the relevant information sources, and how the query scheduling framework scales up in an environment where information sources accessible to users are constantly and rapidly changing, in their content, numbers, identity, and connectivity.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Amsaleg, M. J. Franklin, A. Tomasic, and T.Urhan. </author> <title> Scrambling query plans to cope with unexpected delays. </title> <booktitle> In Proceedings of the International Conference on Parallel and Distributed Information Systems, </booktitle> <address> Miami Beach, Florida, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: the number of data sources that are available to a specific query varies from time to time not only due to the dynamic arrival of new information sources but also due to the vulnerability of data servers and communication links to the congestion on networks and the contention at sources <ref> [1] </ref>. <p> producers [6], thus allowing seamless incorporation of changes in content, numbers, identity, and connectivity of information sources into the planning and processing of queries, and (3) to consolidate run-time query plan modification techniques in the presence of delay and slow delivery of data or unexpected unavailability of information sources (see <ref> [1, 3, 4] </ref> or the papers appearing in this special issue). Our work in DIOM [6, 4] has primarily targeted on the issues of source identification and dynamic interconnection. <p> We are also interested in exploring possibilities to adapt and incorporate the state of art research results in improving query responsiveness with the DIOM system, such as the query scrambling approach for dynamic query plan modification <ref> [1] </ref> and the online aggregation for fast delivery of aggregate queries by continuous sampling [3]. For additional information, including access to the demo and the more detailed technical reports and references about DIOM cited in this paper, the interested readers are invited to browse our WWW page: http://www.cs.ualberta.ca/ diom.
Reference: [2] <author> L. Haas, D. Kossmann, E. Wimmers, and J. Yan. </author> <title> Optimizing queries across diverse data sources. </title> <booktitle> In The International Conference on Very Large Data Bases, </booktitle> <year> 1997. </year>
Reference-contexts: The most interesting features that distinguish the dynamic query processing in DIOM from other approaches, such as Carnot, Garlic <ref> [2] </ref>, TSIMMIS [8], are summarized as follows: First, we allow users to pose queries on the fly, without relying on a pre-defined view that integrates all available information sources. Second, we identify the importance of query routing step in building efficient query scheduling framework for distributed open environments.
Reference: [3] <author> J. Hellerstein, P. Haas, and H. Wang. </author> <title> Online aggregation. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <address> Tucson, Arizona, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: producers [6], thus allowing seamless incorporation of changes in content, numbers, identity, and connectivity of information sources into the planning and processing of queries, and (3) to consolidate run-time query plan modification techniques in the presence of delay and slow delivery of data or unexpected unavailability of information sources (see <ref> [1, 3, 4] </ref> or the papers appearing in this special issue). Our work in DIOM [6, 4] has primarily targeted on the issues of source identification and dynamic interconnection. <p> We are also interested in exploring possibilities to adapt and incorporate the state of art research results in improving query responsiveness with the DIOM system, such as the query scrambling approach for dynamic query plan modification [1] and the online aggregation for fast delivery of aggregate queries by continuous sampling <ref> [3] </ref>. For additional information, including access to the demo and the more detailed technical reports and references about DIOM cited in this paper, the interested readers are invited to browse our WWW page: http://www.cs.ualberta.ca/ diom.
Reference: [4] <author> L. Liu. </author> <title> Query routing in structured open environments. </title> <type> Technical report, </type> <institution> TR97-10, Department of Computing Science, University of Alberta, Edmonton, Alberta, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: We have identified three key steps in the optimization of query performance and responsiveness in open distributed data delivery systems: (1) to identify relevant information sources that can contribute to a specific query <ref> [4] </ref> based on both compile-time analysis and run-time information, thus minimizing the number of information sources accessed to answer a query, (2) to provide adequate support for establishing a dynamic interconnection between information consumers and information producers [6], thus allowing seamless incorporation of changes in content, numbers, identity, and connectivity of <p> producers [6], thus allowing seamless incorporation of changes in content, numbers, identity, and connectivity of information sources into the planning and processing of queries, and (3) to consolidate run-time query plan modification techniques in the presence of delay and slow delivery of data or unexpected unavailability of information sources (see <ref> [1, 3, 4] </ref> or the papers appearing in this special issue). Our work in DIOM [6, 4] has primarily targeted on the issues of source identification and dynamic interconnection. <p> Our work in DIOM <ref> [6, 4] </ref> has primarily targeted on the issues of source identification and dynamic interconnection.
Reference: [5] <author> L. Liu and C. Pu. </author> <title> An adaptive object-oriented approach to integration and access of heterogeneous information sources. DISTRIBUTED AND PARALLEL DATABASES: </title> <journal> An International Journal, </journal> <volume> 5(2), </volume> <year> 1997. </year>
Reference-contexts: The main features that distinguish DIOM from other mediator-based approaches is the systematic development of a dynamic query mediation framework and the collection of dynamic query processing techniques for scalable data delivery <ref> [6, 5] </ref>. In what follows, we first give a brief overview of the system architecture and the dynamic query processing framework currently being implemented in the DIOM project. <p> We conclude the paper with a summary and a brief report on our ongoing research and development. 2 2 Dynamic Query Processing: System Architecture The DIOM system architecture <ref> [5] </ref> is a two-tier architecture offering services at both the mediator level and the wrapper level as shown in Figure 1. A mediator is a software component which provides services to facilitate the integration and access of heterogeneous information. <p> A mediator is a software component which provides services to facilitate the integration and access of heterogeneous information. DIOM mediators are application-specific, consisting of a consumer's query profile and many information producer's source profiles, described in terms of the DIOM interface definition language (DIOM IDL) <ref> [5] </ref>. The consumer's query profile captures the querying interests of the consumer and the preferred query result representation. The producer's source profiles describe the content and query capabilities of individual information sources. A wrapper is a software module providing an appropriate interface for a component data repository. <p> Currently DIOM also provides access to unstructured data (e.g., technical reports) through external WWW keyword based browsers such as Altavista, Infoseek, Yahoo. A DIOM mediator may access multiple and remote information sources through communication with their corresponding DIOM-to-source wrappers <ref> [5] </ref>. The DIOM dynamic query scheduling manager coordinates the communication and distribution of 3 the processing of information consumer's query requests using the user query profiles and the description of the content and query capabilities of information sources. <p> A user may submit his/her query on-the-fly, using WWW fill-out forms. The query interface manager in turn generates a user query profile which consists of (1) a form query in terms of the DIOM interface query language (DIOM IQL) <ref> [5] </ref>, (2) virtual interface classes, described in terms of the DIOM interface definition language (DIOM IDL) [5], which are used as template holders for receiving and representing the resulting objects of the query; and (3) user query annotation (optional), which uses an interactive interface program to allow the user to annotate <p> The query interface manager in turn generates a user query profile which consists of (1) a form query in terms of the DIOM interface query language (DIOM IQL) <ref> [5] </ref>, (2) virtual interface classes, described in terms of the DIOM interface definition language (DIOM IDL) [5], which are used as template holders for receiving and representing the resulting objects of the query; and (3) user query annotation (optional), which uses an interactive interface program to allow the user to annotate the scope and context of what are to be expected in a specific query, including the <p> The semantic attachment operations and the consumers' query profiles are the main techniques that we use for resolving semantic heterogeneity implied in the query results <ref> [5] </ref>. 3 Dynamic Query Routing Query routing is the first step that constrains the search space for a query in open environments, in preparation for query planning.
Reference: [6] <author> L. Liu and C. Pu. </author> <title> A dynamic query scheduling framework for distributed and evolving information systems. </title> <booktitle> In IEEE Proceedings of the 16th International Conference on Distributed Computing Systems, </booktitle> <address> Baltimore, </address> <month> May 27-30 </month> <year> 1997. </year>
Reference-contexts: (1) to identify relevant information sources that can contribute to a specific query [4] based on both compile-time analysis and run-time information, thus minimizing the number of information sources accessed to answer a query, (2) to provide adequate support for establishing a dynamic interconnection between information consumers and information producers <ref> [6] </ref>, thus allowing seamless incorporation of changes in content, numbers, identity, and connectivity of information sources into the planning and processing of queries, and (3) to consolidate run-time query plan modification techniques in the presence of delay and slow delivery of data or unexpected unavailability of information sources (see [1, 3, <p> Our work in DIOM <ref> [6, 4] </ref> has primarily targeted on the issues of source identification and dynamic interconnection. <p> The main features that distinguish DIOM from other mediator-based approaches is the systematic development of a dynamic query mediation framework and the collection of dynamic query processing techniques for scalable data delivery <ref> [6, 5] </ref>. In what follows, we first give a brief overview of the system architecture and the dynamic query processing framework currently being implemented in the DIOM project.
Reference: [7] <author> K. Richine. </author> <title> Distributed query scheduling in the context of diom: An experiment. MSc. </title> <type> Thesis, </type> <institution> TR97-03, Department of Computer Science, University of Alberta. </institution>
Reference-contexts: For detailed algorithms in heuristic-based optimization or cost-dirven optimization refer to <ref> [7] </ref>. To cater to the needs of various database users, in DIOM we provide a flexible framework for dynamic query planning, which allows the plug-in of query optimization components on demand, thereby providing user-driven and customizable query optimization.
Reference: [8] <author> Y. Papakonstantinou, S. Abiteboul, and H. Garcia-Molina. </author> <title> Object Fusion in Mediator Systems. </title> <booktitle> In VLDB 96, </booktitle> <address> Bombay, India, </address> <month> Sept. </month> <year> 1996. </year> <month> 8 </month>
Reference-contexts: The most interesting features that distinguish the dynamic query processing in DIOM from other approaches, such as Carnot, Garlic [2], TSIMMIS <ref> [8] </ref>, are summarized as follows: First, we allow users to pose queries on the fly, without relying on a pre-defined view that integrates all available information sources. Second, we identify the importance of query routing step in building efficient query scheduling framework for distributed open environments.
References-found: 8

