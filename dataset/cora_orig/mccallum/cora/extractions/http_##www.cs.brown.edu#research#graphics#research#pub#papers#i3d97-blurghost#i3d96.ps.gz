URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/i3d97-blurghost/i3d96.ps.gz
Refering-URL: http://www.cs.brown.edu/research/graphics/research/pub/papers/i3d97-blurghost/
Root-URL: http://www.cs.brown.edu/
Email: conner@sonyusa.com  lsh@cs.brown.edu  
Title: Providing A Low Latency User Experience In A High Latency Application  
Author: Brook Conner Loring Holden 
Keyword: CR Categories and Subject Descriptors: I.3.6 [Computer Graphics]: Methodology and Techniques Interaction Techniques; I.3.2 [Computer Graphics]: Graphics Systems Distributed/network graphics Additional Keywords: motion blur, temporal aliasing, virtual environments  
Address: 550 Madison Avenue, 5th floor New York, New York, 10028 brook  Providence, RI 02912  
Affiliation: Sony Corporation of America  Brown University site of the NSF Science and Technology Center for Computer Graphics and Scientific Visualization  
Abstract: Through the use of particular visual effects, we provide a low latency user experience, even when extremely large latencies occur in an application. We demonstrate these effects in a wide-area distributed virtual reality application. These effects include the use of motion blur, transparency, and defocusing. While the effects incur a performance penalty, the penalty is predictable, unlike the lag induced by network delays. Thus, we provide immediate feedback to each participant, even when the network prevents information more useful than the fact that delays are occurring. When updates are finally received, we use the same effects to provide coherent updates to the user's information, without the jarring discontinuities that otherwise would confuse a participant's understanding of the environment. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Ronald Azuma and Gary Bishop. </author> <title> A Frequency-Domain analysis of head-motion prediction. </title> <editor> In Robert Cook, editor, </editor> <booktitle> SIGGRAPH 95 Conference Proceedings, Annual Conference Series, </booktitle> <pages> pages 401408. </pages> <publisher> ACM SIGGRAPH, Addison Wesley, </publisher> <month> August </month> <year> 1995. </year> <institution> held in Los Angeles, California, </institution> <month> 06-11 August </month> <year> 1995. </year>
Reference-contexts: This can clearly introduce errors when the dead reckoning system uses a derivative whose own derivative is non-zero (such as the derivatives of objects under user control). More advanced dead reckoning systems use a Kalman filter <ref> [1] </ref> to attempt to predict where an object will be in the future. This technique also introduces errors, especially when the model of the object's motion used by the Kalman filter is a poor one.
Reference: 2. <author> Bay-Wei Chang and David Ungar. </author> <title> Animation: From cartoons to the user interface. </title> <booktitle> UIST Proceedings, </booktitle> <pages> pages 4555, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. Others have attempted to increase a user's understanding of a complex scene through the use of visual effects, such as motion blur and cartoon idioms such as squash and stretch <ref> [2, 3] </ref>. In contrast, our work uses visual effects to increase the user's understanding of latency as it occurs, thereby mitigating the effects of that latency. Before examining our own techniques, let's consider both the system-based techniques addressing latency and the visual effects addressing complexity. <p> The work of Brenda Laurel [4] focuses on this approach. Other work, such as John Lasseter [3], demonstrates the use of traditional animation techniques in order to explain a scene as clearly as possible. This has been applied in a programming environment by the Self Project <ref> [2] </ref>. Objects in the Self environment draw attention to themselves with animated wiggles and expressive paths. When they move fast, they motion-blur to indicate a continuous motion, not a discrete change of location.
Reference: 3. <author> John Lasseter. </author> <title> Principles of traditional animation applied to 3d computer animation. </title> <booktitle> Computer Graphics (SIGGRAPH '87 Proceedings), </booktitle> <address> 21(4):3544, </address> <month> July </month> <year> 1987. </year>
Reference-contexts: Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. Others have attempted to increase a user's understanding of a complex scene through the use of visual effects, such as motion blur and cartoon idioms such as squash and stretch <ref> [2, 3] </ref>. In contrast, our work uses visual effects to increase the user's understanding of latency as it occurs, thereby mitigating the effects of that latency. Before examining our own techniques, let's consider both the system-based techniques addressing latency and the visual effects addressing complexity. <p> By demonstrating visually that something complex is happening, a user can have a greater understanding of the scene. The work of Brenda Laurel [4] focuses on this approach. Other work, such as John Lasseter <ref> [3] </ref>, demonstrates the use of traditional animation techniques in order to explain a scene as clearly as possible. This has been applied in a programming environment by the Self Project [2]. Objects in the Self environment draw attention to themselves with animated wiggles and expressive paths.
Reference: 4. <author> Brenda Laurel. </author> <title> Computers as Theatre. </title> <publisher> Addison Wesley, </publisher> <year> 1991. </year>
Reference-contexts: By demonstrating visually that something complex is happening, a user can have a greater understanding of the scene. The work of Brenda Laurel <ref> [4] </ref> focuses on this approach. Other work, such as John Lasseter [3], demonstrates the use of traditional animation techniques in order to explain a scene as clearly as possible. This has been applied in a programming environment by the Self Project [2].
Reference: 5. <author> M. R. Macedonia, D. P. Brutzmann, M. J. Zyda, D. R. Pratt, P. T. Barham, J. Falby, and J. Locke. NPSNET: </author> <title> A multi-player 3D virtual environment over the internet. </title> <editor> In Pat Hanrahan and Jim Winget, editors, </editor> <booktitle> 1995 Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 9394. </pages> <publisher> ACM SIGGRAPH, </publisher> <month> April </month> <year> 1995. </year> <note> ISBN 0-89791-736-7. </note>
Reference-contexts: High latency can induce a number of unpleasant effects, such as simulator sickness or a loss of feeling of control (as when an environment responds to a user's actions sluggishly). Increasingly virtual reality applications are becoming net-worked over general-purpose LANs <ref> [5, 7] </ref> making the conflicting constraints of networks and virtual reality a growing problem. Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. <p> Increasingly virtual reality applications are becoming net-worked over general-purpose LANs <ref> [5, 7] </ref> making the conflicting constraints of networks and virtual reality a growing problem. Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. Others have attempted to increase a user's understanding of a complex scene through the use of visual effects, such as motion blur and cartoon idioms such as squash and stretch [2, 3]. <p> Dead reckoning addresses late arrival of motion information. By using derivatives of earlier motion or derivative information provided by an object itself, the dead reckoning system calculates the position of an object locally, without needing to wait for the arrival of the actual information <ref> [5] </ref>. This can clearly introduce errors when the dead reckoning system uses a derivative whose own derivative is non-zero (such as the derivatives of objects under user control). More advanced dead reckoning systems use a Kalman filter [1] to attempt to predict where an object will be in the future.
Reference: 6. <author> Toshikazu Ohshima, Hiroyuki Yamamoto, and Hideyuki Tamura. </author> <title> Gaze-directed adaptive rendering for interacting with virtual space. </title> <booktitle> In Virtual Reality Annual International Symposium, </booktitle> <pages> pages 103110, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Objects in the Self environment draw attention to themselves with animated wiggles and expressive paths. When they move fast, they motion-blur to indicate a continuous motion, not a discrete change of location. Other work has developed techniques for producing the effects of motion blur [11] and defocusing <ref> [6] </ref> in a fully three-dimensional, real-time environment, such as virtual reality. This work showed that rich visual effects could be achieved with relatively little cost in computation time or rendering performance. We use the effects and the concepts developed by these researchers to address a new problem, high latency.
Reference: 7. <author> Chris Shaw, Jiandong Liang, Mark Green, and Yunqi Sun. </author> <title> The decoupled simulation model for virtual reality systems. </title> <booktitle> Proceedings of CHI'92, </booktitle> <pages> pages 321328, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: High latency can induce a number of unpleasant effects, such as simulator sickness or a loss of feeling of control (as when an environment responds to a user's actions sluggishly). Increasingly virtual reality applications are becoming net-worked over general-purpose LANs <ref> [5, 7] </ref> making the conflicting constraints of networks and virtual reality a growing problem. Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. <p> Increasingly virtual reality applications are becoming net-worked over general-purpose LANs <ref> [5, 7] </ref> making the conflicting constraints of networks and virtual reality a growing problem. Prior Work Some researchers have attempted to address latency in distributed VR at a system level [5, 7]. Others have attempted to increase a user's understanding of a complex scene through the use of visual effects, such as motion blur and cartoon idioms such as squash and stretch [2, 3]. <p> This technique also introduces errors, especially when the model of the object's motion used by the Kalman filter is a poor one. Decoupling in VR systems is the process of making the system multi-threaded, with certain threads assigned to tasks most in need of low latency <ref> [7] </ref>. Typically, these threads are Unix processes provided with dedicated hardware resources to guarantee a minimum level of performance. Non-critical tasks are serviced as resources become available.
Reference: 8. <author> P. Strauss and R. Carey. </author> <title> An object-oriented 3D graphics toolkit. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <address> 26(2):341349, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: We feel that using motion blur to suggest continuous motion, the "taffy" effect for manipulating objects, and defocusing when delays occur is a particularly good example of this kind of visual language. Implementation Notes These effects were implemented using Open GL and Open Inventor <ref> [8] </ref> on both an SGI Reality Engine and an Ultra SPARC with a Creator 3D graphics accelerator. The effects are constructed as new Open Inventor node types [9] using Open GL directly to render the effects.
Reference: 9. <author> Josie Wernecke. </author> <title> The Inventor Toolmaker. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Implementation Notes These effects were implemented using Open GL and Open Inventor [8] on both an SGI Reality Engine and an Ultra SPARC with a Creator 3D graphics accelerator. The effects are constructed as new Open Inventor node types <ref> [9] </ref> using Open GL directly to render the effects. This lets these effects be used in a wide variety of applications, while providing extremely good performance. We tested the nodes in an Inventor-based application called vrapp.
Reference: 10. <author> G. Williams. </author> <title> The apple macintosh computer. </title> <journal> Byte, </journal> <volume> 9(2):709 718, </volume> <year> 1984. </year>
Reference-contexts: Although all of these effects take more time to render, usually requiring multiple rendering passes, they can still be done by standard 3D graphics libraries and accelerators quickly enough to maintain the frame rate required by a VR application. In the Macintosh Finder <ref> [10] </ref> the user clicks on an icon, and as she drags the icon across the screen, an outline of the icon (or a transparent copy in more recent versions) follows the pointer. When the user "drops" the icon, the transparent version becomes opaque and the old opaque version disappears.
Reference: 11. <author> Matthias Wloka and Robert C. Zeleznik. </author> <title> Interactive real-time motion blur. </title> <booktitle> Visual Computer, </booktitle> <pages> pages 273 295, </pages> <year> 1996. </year>
Reference-contexts: Objects in the Self environment draw attention to themselves with animated wiggles and expressive paths. When they move fast, they motion-blur to indicate a continuous motion, not a discrete change of location. Other work has developed techniques for producing the effects of motion blur <ref> [11] </ref> and defocusing [6] in a fully three-dimensional, real-time environment, such as virtual reality. This work showed that rich visual effects could be achieved with relatively little cost in computation time or rendering performance.
References-found: 11

