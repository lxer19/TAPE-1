URL: http://iamwww.unibe.ch/~rvswww/Publikationen/Grabowski/GI-ITG-1995/GI-ITG-1995.ps.gz
Refering-URL: http://iamwww.unibe.ch/~rvswww/Publikationen/index.html
Root-URL: 
Email: e-mail: walter@tik.ethz.ch  e-mail: grabowsk@iam.unibe.ch  
Title: Towards the new Test Specification and Implementation Language 'TelCom TSL'  
Author: Thomas Walter a and Jens Grabowski b 
Keyword: TelCom TSL.  
Address: Zurich/Gebaude ETZ, 8092 Zurich, Schweiz,  Neubruckstrasse 10, 3012 Bern, Schweiz,  
Affiliation: a Eidgenossische Technische Hochschule Zurich, Institut fur Technische Informatik und Kommu-nikationsnetze, ETH  b Universitat Bern, Institut fur Informatik und angewandte Mathematik,  
Abstract: The development of multi-media and real-time applications requires the assessment of new functional and non-functional properties by conformance tests. The Tree and Tabular Combined Notation (TTCN) is not adequate for this purpose since test cases cannot be specified for most of the new requirements. For this reason, in 1994 we started to develop TelCom TSL 1 , a new test specification and implementation language for advanced telecommunications applications. TelCom TSL provides facilities for the specification of tests for non-functional properties like timing constraints, quality of service (QoS) aspects, or synchronization of multi-media data streams. In this paper we describe the requirements for QoS testing and present some ideas for the design of 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Bolognesi, E. Brinksma. </author> <title> Introduction to the ISO Specification Language LOTOS, </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> Vol. 14, </volume> <year> 1987. </year>
Reference-contexts: The behavior of entities is defined in terms of labeled transition systems [16]. Since execution of e.g., a T-DATA request on a real system requires a finite amount of time, we dropped the assumption that actions are instantaneous "without consuming time" <ref> [1] </ref>. Similarly, we assume that the delay introduced by link processes is finite and known, i.e., the time to transmit an amount of information between test components and the processing overhead is predictable.
Reference: [2] <author> CCITT/ITU, </author> <title> Data Communication Networks Open Systems Interconnection (OSI) Model and Notation, Service Definition, </title> <address> X.200 - X.219, </address> <year> 1988. </year>
Reference-contexts: In this paper we focus on requirements for QoS testing and present some ideas for the design of TelCom TSL. 2 QoS semantics Quality-of-Service (QoS) refers to a set of parameters that characterize a connection between communication entities across a network. Typical QoS parameters are <ref> [2, 3] </ref>: throughput, delay, jitter (performance related parameters), or residual error rates, connection establishment failure probability (reliability related properties), or presentation coding and security requirements (miscellaneous properties). The negotiation of QoS parameters takes place between calling and called service users and service provider.
Reference: [3] <author> A. Danthine, Y. Baguette, G. Leduc, Leonard, </author> <title> The OSI 95 Connection-Mode Transport Service The Enhanced QoS, </title> <editor> A. Dantine, O. Spaniol (Editors), </editor> <booktitle> High Performance Networking, IFIP, </booktitle> <year> 1992. </year>
Reference-contexts: In this paper we focus on requirements for QoS testing and present some ideas for the design of TelCom TSL. 2 QoS semantics Quality-of-Service (QoS) refers to a set of parameters that characterize a connection between communication entities across a network. Typical QoS parameters are <ref> [2, 3] </ref>: throughput, delay, jitter (performance related parameters), or residual error rates, connection establishment failure probability (reliability related properties), or presentation coding and security requirements (miscellaneous properties). The negotiation of QoS parameters takes place between calling and called service users and service provider. <p> This may imply that further connection requests are rejected since the newly requested QoS values may interfere with the QoS values of already established connections. One can think of levels of QoS support in between best-effort and guaranteed QoS. These are compulsory and threshold QoS semantics <ref> [3, 4] </ref>. * Compulsory QoS values. The value for a QoS parameter to be negotiated may only be strengthened by the service provider and the called service user. <p> We assume that we test a transport service provider. QoS parameter throughput is defined "as the ratio of the size of a submitted TSDU to the time elapsed until the occurrence of the next T-DATA request on the same transport connection" <ref> [3] </ref>. From the negotiated throughput QoS value we can compute at what time interval T-DATA requests are expected by the service provider (cf. Figure 1). So, delaying the third T-DATA request in a sequence of T-DATA requests (t1, t1+tr, t1+2tr+delay) should cause aborting the transport connection.
Reference: [4] <author> A. Danthine, O. Bonaventure. </author> <title> From Best Effort to Enhanced QoS, </title> <booktitle> CIO Deliverable R2060/ULg/CIO/DS/P/004/b1, </booktitle> <year> 1993. </year>
Reference-contexts: This may imply that further connection requests are rejected since the newly requested QoS values may interfere with the QoS values of already established connections. One can think of levels of QoS support in between best-effort and guaranteed QoS. These are compulsory and threshold QoS semantics <ref> [3, 4] </ref>. * Compulsory QoS values. The value for a QoS parameter to be negotiated may only be strengthened by the service provider and the called service user.
Reference: [5] <author> ISO/ITU-T. </author> <title> Formal Methods in Conformance Testing, ITU-T TS SG10 Q8 and ISO SC21 WG1 P54 Southampton output, </title> <booktitle> 1994. 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', </booktitle> <month> June </month> <year> 1995 </year> <month> 10 </month>
Reference: [6] <author> J. Grabowski, D. Hogrefe, R. Nahm. </author> <title> Test Case Generation with Test Purpose Specification by MSCs. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects. </title> <publisher> North-Holland, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [6, 7, 8, 9] </ref>. TelCom TSL should meet two requirements. First, a test case specifier should define the functional behavior of a test case indepen 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 7 dently of any timing constraints that may apply.
Reference: [7] <author> J. Grabowski, D. Hogrefe, R. Nahm, A. Spichiger. </author> <title> Die SaMsTaG Methode und ihre Rolle im Konformitatstesten. In Praxis der Informationsverarbeitung und Kommunikation (PIK) Nr. 4/94, </title> <publisher> K.G. Saur Verlag, </publisher> <address> Munchen, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [6, 7, 8, 9] </ref>. TelCom TSL should meet two requirements. First, a test case specifier should define the functional behavior of a test case indepen 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 7 dently of any timing constraints that may apply.
Reference: [8] <author> J. Grabowski, D. Hogrefe, I. Nussbaumer, A. Spichiger. </author> <title> Improving the Quality of Test Suites for Conformance Tests by using Message Sequence Charts. </title> <booktitle> In Proceedings of the 'Fourth European Conference on Software Quality' in Basel (Switzerland), </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [6, 7, 8, 9] </ref>. TelCom TSL should meet two requirements. First, a test case specifier should define the functional behavior of a test case indepen 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 7 dently of any timing constraints that may apply.
Reference: [9] <author> J. Grabowski, D. Hogrefe, I. Nussbaumer, A. Spichiger. </author> <title> Combining MSCs and Data Descriptions in order to Generate Executable Test Cases for ISDN Systems. </title> <booktitle> In Proceeding of the XV International Switching Symposium (ISS'95) World Telecommunications Congress, </booktitle> <address> Berlin, </address> <month> April 95. </month>
Reference-contexts: or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [6, 7, 8, 9] </ref>. TelCom TSL should meet two requirements. First, a test case specifier should define the functional behavior of a test case indepen 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 7 dently of any timing constraints that may apply.
Reference: [10] <author> D. </author> <title> Hogrefe Conformance Testing Based on Formal Methods, FORTE 90, </title> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: Parts of such a support are a QoS testing architecture and a test specification language. These aspects are discussed in the following sections. 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 5 4 QoS Testing Architecture QoS testing extends protocol conformance testing approaches <ref> [12, 10] </ref> in several directions. 1. We have to deal with distributed IUTs which are controlled by several test components running in parallel. Multiple closely related data streams (e.g. voice, video, audio, graphical animation) have to be controlled. <p> Therefore, in our case the IUT comprises all those entities which are in OSI terminology referred to as service provider. 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 6 * Similar to other testing architectures <ref> [12, 10] </ref> we assume that an IUT may be a small part of a bigger software system. But unlike to existing conformance testing architectures we presuppose that the IUT is driven only via service access points.
Reference: [11] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 1: General Concepts, </title> <address> ISO/IEC 9646-1, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction and Motivation For the past decade research and developments in conformance testing and test specification languages have been focussed on TTCN [13] and, but only recently, on concurrent TTCN [14]. TTCN is a test notation which is standardized for the purpose of conformance testing <ref> [11] </ref>. Conformance testing as understood by ISO and ITU-T is functional black-box testing of OSI protocol implementations, i.e., an implementation under test (IUT) is meant to be a black box and its observable behavior is compared with the observable behavior of a protocol specification. <p> We do not consider the negotiation of QoS values since negotiation of QoS values is a functional property of a protocol specification which can be tested using methods developed for OSI conformance testing <ref> [11] </ref>. Furthermore, we exclude best-effort 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 4 QoS semantics from our consideration since no particular constraints on the behavior of a service provider are imposed by this semantics. We argue that OSI conformance testing suffice in this case. <p> The OSI conformance testing methodology does not support the test of distributed IUTs. It only supports the definition of multi party testing architectures <ref> [11, 12] </ref>, i.e., test architectures with several test components running in parallel. TTCN, the test specification language for OSI conformance testing [13, 14], does not deal with timing constraints of test components, underlying network, or communication infrastructure.
Reference: [12] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 2: Abstract Test Suite Specification, </title> <address> ISO/IEC 9646-2, </address> <year> 1994. </year>
Reference-contexts: Parts of such a support are a QoS testing architecture and a test specification language. These aspects are discussed in the following sections. 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 5 4 QoS Testing Architecture QoS testing extends protocol conformance testing approaches <ref> [12, 10] </ref> in several directions. 1. We have to deal with distributed IUTs which are controlled by several test components running in parallel. Multiple closely related data streams (e.g. voice, video, audio, graphical animation) have to be controlled. <p> The OSI conformance testing methodology does not support the test of distributed IUTs. It only supports the definition of multi party testing architectures <ref> [11, 12] </ref>, i.e., test architectures with several test components running in parallel. TTCN, the test specification language for OSI conformance testing [13, 14], does not deal with timing constraints of test components, underlying network, or communication infrastructure. <p> Therefore, in our case the IUT comprises all those entities which are in OSI terminology referred to as service provider. 5.th GI/ITG meeting on 'Formal Description Techniques for Distributed Systems', June 1995 6 * Similar to other testing architectures <ref> [12, 10] </ref> we assume that an IUT may be a small part of a bigger software system. But unlike to existing conformance testing architectures we presuppose that the IUT is driven only via service access points.
Reference: [13] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 3: The Tree and Tabular Combined Notation (TTCN), </title> <address> ISO/IEC 9646-3, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction and Motivation For the past decade research and developments in conformance testing and test specification languages have been focussed on TTCN <ref> [13] </ref> and, but only recently, on concurrent TTCN [14]. TTCN is a test notation which is standardized for the purpose of conformance testing [11]. <p> The OSI conformance testing methodology does not support the test of distributed IUTs. It only supports the definition of multi party testing architectures [11, 12], i.e., test architectures with several test components running in parallel. TTCN, the test specification language for OSI conformance testing <ref> [13, 14] </ref>, does not deal with timing constraints of test components, underlying network, or communication infrastructure. To a limited extend TTCN timers can be used to specify some time constraints, but this does not suffice in QoS testing.
Reference: [14] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 3: The Tree and Tabular Combined Notation (TTCN): Amendment 1: TTCN Extensions, </title> <type> ISO/IEC 9646-3 DAM 1, </type> <year> 1993. </year>
Reference-contexts: 1 Introduction and Motivation For the past decade research and developments in conformance testing and test specification languages have been focussed on TTCN [13] and, but only recently, on concurrent TTCN <ref> [14] </ref>. TTCN is a test notation which is standardized for the purpose of conformance testing [11]. <p> The OSI conformance testing methodology does not support the test of distributed IUTs. It only supports the definition of multi party testing architectures [11, 12], i.e., test architectures with several test components running in parallel. TTCN, the test specification language for OSI conformance testing <ref> [13, 14] </ref>, does not deal with timing constraints of test components, underlying network, or communication infrastructure. To a limited extend TTCN timers can be used to specify some time constraints, but this does not suffice in QoS testing.
Reference: [15] <author> H. Leopold, A. Cambell, D. Hutchinson, N. Singer. </author> <title> Towards an Integrated Quality of Service Architecture (QoS-A) for Distributed Multimedia Communications, </title> <editor> A. Dantine, O. Spaniol (Editors), </editor> <booktitle> High Performance Networking, IFIP, </booktitle> <year> 1992. </year>
Reference: [16] <author> G. Plotkin. </author> <title> A Structural Approach to Operational Semantics, </title> <institution> Aarhus University, Computer Science Department, </institution> <year> 1981. </year>
Reference-contexts: This constraint stems from the requirements that QoS testing imposes stringent timing constraints and therefore a certain knowledge of the timing behavior of system components is needed. The behavior of entities is defined in terms of labeled transition systems <ref> [16] </ref>. Since execution of e.g., a T-DATA request on a real system requires a finite amount of time, we dropped the assumption that actions are instantaneous "without consuming time" [1].
Reference: [17] <author> T. Plagemann, B. Plattner, M. Vogt, T. Walter. </author> <title> A Model for Dynamic Configuration of LightWeight Protocols, </title> <booktitle> Proceedings IEEE Third Workshop on Future Trends of Distributed Computing Systems, IEEE, </booktitle> <year> 1992. </year>
Reference-contexts: This enables us to change traffic characteristics like error rates or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification <ref> [18, 17] </ref>, and the specification and generation of TTCN test cases based on SDL and MSC [6, 7, 8, 9]. TelCom TSL should meet two requirements.
Reference: [18] <author> J. Montiel, E. Rudolph, J. </author> <title> Burmeister (Editors), Methods for QoS Verification and Protocol Conformance Testing in IBC Application Guidelines -, TOPIC, </title> <year> 1993. </year>
Reference-contexts: This enables us to change traffic characteristics like error rates or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [19, 20], QoS specification and verification <ref> [18, 17] </ref>, and the specification and generation of TTCN test cases based on SDL and MSC [6, 7, 8, 9]. TelCom TSL should meet two requirements.
Reference: [19] <author> T. Walter, J. Ellsberger, F. Kristoffersen, P.v.D. Merkhof. </author> <title> A Common Semantics Representation for SDL and TTCN, </title> <booktitle> Proceedings PSTV XII, </booktitle> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: This enables us to change traffic characteristics like error rates or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN <ref> [19, 20] </ref>, QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC [6, 7, 8, 9]. TelCom TSL should meet two requirements.
Reference: [20] <author> T. Walter, B. Plattner. </author> <title> An Operational Semantics for Concurrent TTCN, </title> <booktitle> Proceedings PTS V, </booktitle> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: This enables us to change traffic characteristics like error rates or delays. 5 On the design of TelCom TSL The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN <ref> [19, 20] </ref>, QoS specification and verification [18, 17], and the specification and generation of TTCN test cases based on SDL and MSC [6, 7, 8, 9]. TelCom TSL should meet two requirements.
References-found: 20

