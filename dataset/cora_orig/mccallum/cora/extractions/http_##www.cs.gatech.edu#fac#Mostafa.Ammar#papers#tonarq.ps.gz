URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/papers/tonarq.ps.gz
Refering-URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/MCAST.html
Root-URL: 
Email: e-mail: ammar@cc.gatech.edu  
Phone: (404)894-3292  
Title: Improving the Throughput of Point-to-Multipoint ARQ Protocols through Destination Set Splitting  
Author: Mostafa H. Ammar Li-Ran Wu 
Date: June 1992 Revised: March 1995  
Address: Atlanta, GA 30332  Atlanta, GA 30332  
Affiliation: College of Computing Georgia Institute of Technology  School of Electrical Engineering Georgia Institute of Technology  
Abstract: Point-to-Multipoint ARQ protocols are required to guarantee the correct delivery and proper sequencing of messages being sent from one source to multiple destinations. A source of inefficiency for such protocols is that the transmitter requires acknowledgements from all receivers before it considers that a message has been correctly received. To address this inefficiency, we propose a scheme in which the set of destinations is split into disjoint groups. The transmitter carries a separate conversation with each group. The conversations are time multiplexed over a single channel, which leads to a tradeoff between the increased throughput as a result of the destination set splitting and the wasted bandwidth required for the multiplexing. We consider memoryless, limited-memory and full-memory versions of the Go-Back-N protocol. We evaluate the maximum throughput achievable with our protocols, and address the issue of selecting the grouping of the destinations that maximizes this throughput. Our approach is beneficial when there are a large number of receivers or when a large timeout threshold is required (e.g., for high speed networks or satellite channels). It is also particularly useful when the set of receivers has dissimilar capabilities. The benefits of our approach are demonstrated through a set of numerical examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Gifford, </author> <title> "Polychannel systems for mass digital communication," </title> <journal> Communications of the ACM, </journal> <volume> vol. 33, </volume> <pages> pp. 141-151, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Point-to-multipoint communication has been receiving increasing attention in current research. This reflects the growing importance of applications that rely on multi-destination communication, such as information distribution via broadcast <ref> [1, 2] </ref>, teleconferencing systems, and distributed and/or replicated database systems [3, 4]. Of particular importance in such systems is the correctness and timeliness of the delivered information. <p> We define protocol (P; T o ; g) as the solution of @ 2 @m 2 F protocol (m fl 1 ) = 0. It can be shown that @ 2 1 F protocol (m fl 1 ) is monotonically increasing in the range <ref> [1; protocol (P; T o ; g)] </ref>.
Reference: [2] <author> J. W. Wong and M. H. Ammar, </author> <title> "Analysis of broadcast delivery in a videotex system," </title> <journal> IEEE Transactions on Computer, </journal> <volume> vol. 34, </volume> <pages> pp. 863-866, </pages> <month> September </month> <year> 1985. </year>
Reference-contexts: 1 Introduction Point-to-multipoint communication has been receiving increasing attention in current research. This reflects the growing importance of applications that rely on multi-destination communication, such as information distribution via broadcast <ref> [1, 2] </ref>, teleconferencing systems, and distributed and/or replicated database systems [3, 4]. Of particular importance in such systems is the correctness and timeliness of the delivered information.
Reference: [3] <author> D. Gifford, </author> <title> "Weighted voting for replicated data," </title> <booktitle> in Proceedings of 7th Symposium on Operating Systems, </booktitle> <pages> pp. 150-162, </pages> <publisher> ACM, </publisher> <year> 1979. </year>
Reference-contexts: 1 Introduction Point-to-multipoint communication has been receiving increasing attention in current research. This reflects the growing importance of applications that rely on multi-destination communication, such as information distribution via broadcast [1, 2], teleconferencing systems, and distributed and/or replicated database systems <ref> [3, 4] </ref>. Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed [5, 6, 7, 8, 9].
Reference: [4] <author> M. Ahamad and M. H. Ammar, </author> <title> "Performance characterization of quorum-consensus algorithms for replicated data," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. 15, </volume> <pages> pp. 492-496, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Point-to-multipoint communication has been receiving increasing attention in current research. This reflects the growing importance of applications that rely on multi-destination communication, such as information distribution via broadcast [1, 2], teleconferencing systems, and distributed and/or replicated database systems <ref> [3, 4] </ref>. Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed [5, 6, 7, 8, 9].
Reference: [5] <author> J. L. Wang and J. A. Silvester, </author> <title> "Optimal adaptive ARQ protocols for point-to-multipoint communication," </title> <booktitle> in Proceedings of INFOCOM '88, </booktitle> <pages> pp. 704-713, </pages> <publisher> IEEE Computer Society, </publisher> <year> 1988. </year>
Reference-contexts: Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed <ref> [5, 6, 7, 8, 9] </ref>. These protocols insure that the data sent from the transmitter to the multiple receivers is received correctly and, in some cases, in the same sequence in which it is transmitted. <p> The effect of full, limited and no memory on the efficiency of point-to-multipoint ARQ protocols has been studied in [7]. A second approach to improve the performance of point-to-multipoint ARQ protocols is the Multiple Copy scheme proposed and analyzed in <ref> [5] </ref>. In that work the transmitter sends multiple copies of the same message all destined to the set of all receivers. This approach is based on similar work for single destination ARQ protocols (see for example [12]). <p> It is perhaps important to contrast our approach with the Multiple Copy approach proposed in <ref> [5] </ref>. In that work, the transmitter sends multiple copies of the same message, all destined to the same set of receivers. In the approach we investigate in this paper, the transmitter also sends multiple copies of the same message. <p> In the approach we investigate in this paper, the transmitter also sends multiple copies of the same message. However, each copy is destined to a different subset of the set of receivers. It is possible to generalize our protocols in the direction proposed in <ref> [5] </ref> by having the transmitter send multiple copies to each different receiver group. In section 2 we describe our assumptions about the network environment and formally describe the operation of the ARQ protocols we are proposing. <p> Examples 1 and 2 with and without Destination Set Splitting using Full-Memory Go-Back-N, T o = 10; 100, and P S = 1:0 for all groups. 7 Comparison with the Multiple Copy Scheme We now undertake a comparison of the destination set splitting (DSS) scheme with the Multiple Copy (MC) <ref> [5, 12] </ref> scheme. Recall that in the Multiple Copy scheme the source sends multiple copies of each message with each copy destined to the entire destination group. There are two main points of comparison: 1) the number of returned acknowledgements per message and 2) the maximum achievable throughput.
Reference: [6] <author> J. S. J. Daka and A. G. Waters, </author> <title> "A high performance broadcast file protocol," </title> <booktitle> in Proceedings of SIGCOMM '88 Synposium, </booktitle> <pages> pp. 274-281, </pages> <publisher> ACM, </publisher> <year> 1988. </year>
Reference-contexts: Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed <ref> [5, 6, 7, 8, 9] </ref>. These protocols insure that the data sent from the transmitter to the multiple receivers is received correctly and, in some cases, in the same sequence in which it is transmitted.
Reference: [7] <author> I. S. Gopal and J. M. Jaffe, </author> <title> "Point-to-multipoint communication over broadcast," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 32, </volume> <pages> pp. 1034-1044, </pages> <month> September </month> <year> 1984. </year>
Reference-contexts: Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed <ref> [5, 6, 7, 8, 9] </ref>. These protocols insure that the data sent from the transmitter to the multiple receivers is received correctly and, in some cases, in the same sequence in which it is transmitted. <p> This memory requirement can become extensive in a continuous ARQ protocol which might allow several messages to be outstanding simultaneously. The effect of full, limited and no memory on the efficiency of point-to-multipoint ARQ protocols has been studied in <ref> [7] </ref>. A second approach to improve the performance of point-to-multipoint ARQ protocols is the Multiple Copy scheme proposed and analyzed in [5]. In that work the transmitter sends multiple copies of the same message all destined to the set of all receivers. <p> In the full-memory protocol, all ack-outstanding-list's of the messages that were in the retrans-q (X) are not reset. An example of the operation of our Memoryless Go-Back-N protocol is shown in Figure 4. 2 This is the same as the First Outstanding Message (FOM) in <ref> [7] </ref>. 4 5 3 Performance Evaluation In this section we investigate the performance of our proposed protocol. Our model and analysis extend the results derived in [7] for our versions of the memoryless and limited-memory ARQ protocols. 3.1 Model As stated previously, we consider a single transmitter sending messages to K <p> the operation of our Memoryless Go-Back-N protocol is shown in Figure 4. 2 This is the same as the First Outstanding Message (FOM) in <ref> [7] </ref>. 4 5 3 Performance Evaluation In this section we investigate the performance of our proposed protocol. Our model and analysis extend the results derived in [7] for our versions of the memoryless and limited-memory ARQ protocols. 3.1 Model As stated previously, we consider a single transmitter sending messages to K receivers. We assume all messages require the same packet transmission time which we use as our time unit. <p> Note that, although the protocols are defined such that different timeout thresholds may be used for different groups, we assume that the timeout thresholds are the same for all groups. We also assume, as in <ref> [7] </ref>, that acknowledgements are returned the instant prior to the expiry of the timeout counter. Acknowledgements not returned before a timeout counter expires will never be returned. The set of receivers is subdivided into g groups and we define the vector G = (G 1 ; :::; G g ). <p> fl mgbn (G) = g X m i g e ( 1 Q P j (1) 3.3 Throughput of the Limited-Memory Go-Back-N Protocol Here the average number of times a message has to be transmitted before it is received at least once by all receivers in group G i is <ref> [7] </ref> 1 1 X (1 j2G i Using similar arguments to those used in the derivation of (1), we can show that fl lgbn (G) = g X m i g e + d T o P S;i P 1 Q (3) 4 Optimization A question that arises in the design <p> The REFINE procedure is described in Figure 5. 5 The Ideal Selective Repeat Protocol We consider the effect of destination set splitting on the performance of the ideal selective repeat (i-sr) point-to-multipoint ARQ protocols. This protocol is the one considered in <ref> [7, 13] </ref>. In this idealized protocol, the transmitter only retransmits messages in error and retains full-memory of acknowledgements received for all messages. Infinite buffer space is required at the receivers to handle packet resequencing.
Reference: [8] <author> D. Towsley, </author> <title> "An analysis of a point-to-multipoint channel using a go-back-n error control protocol," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 33, </volume> <pages> pp. 282-285, </pages> <month> March </month> <year> 1985. </year>
Reference-contexts: Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed <ref> [5, 6, 7, 8, 9] </ref>. These protocols insure that the data sent from the transmitter to the multiple receivers is received correctly and, in some cases, in the same sequence in which it is transmitted.
Reference: [9] <author> S. B. Calo and M. C. Easton, </author> <title> "A broadcast protocol for file transfers to multiple sites," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 29, </volume> <pages> pp. 1701-1707, </pages> <month> November </month> <year> 1981. </year>
Reference-contexts: Of particular importance in such systems is the correctness and timeliness of the delivered information. To achieve the first objective, i.e., correctness, several point-to-multipoint automatic repeat request protocols (ARQ) have been proposed and analyzed <ref> [5, 6, 7, 8, 9] </ref>. These protocols insure that the data sent from the transmitter to the multiple receivers is received correctly and, in some cases, in the same sequence in which it is transmitted.
Reference: [10] <author> A. Tannenbaum, </author> <title> Computer Networks, 2nd Ed., </title> <publisher> Addison Wesley, </publisher> <year> 1988. </year>
Reference-contexts: Of additional concern in the design of these ARQ protocols is the efficiency of the data delivery, typically measured by the ARQ protocol's throughput. ARQ protocols are typically at the heart of reliable transport protocols such as TCP <ref> [10] </ref>. Point-to-multipoint ARQ protocols are also components of many reliable multicast transport protocols (see for example [11]). A feature common to all point-to-multipoint ARQ protocols is that a message is not considered to have been received correctly, unless the transmitter has collected acknowledgments from all destinations 1 .
Reference: [11] <author> J. Crowcroft and K. Paliwoda, </author> <title> "A multicast transport protocol," </title> <booktitle> Proceedings of ACM SIG-COMM, </booktitle> <pages> pp. 247-256, </pages> <year> 1988. </year>
Reference-contexts: ARQ protocols are typically at the heart of reliable transport protocols such as TCP [10]. Point-to-multipoint ARQ protocols are also components of many reliable multicast transport protocols (see for example <ref> [11] </ref>). A feature common to all point-to-multipoint ARQ protocols is that a message is not considered to have been received correctly, unless the transmitter has collected acknowledgments from all destinations 1 . It is this requirement that makes for potential inefficiencies in the operation of point-to-multipoint ARQ protocols.
Reference: [12] <author> Y. T. Yukuo Hayashida, Shumji Fujii, </author> <title> "Delay performance of a continuous ARQ system with copy-transmissions," </title> <booktitle> in Proceedings of INFOCOM '88, </booktitle> <pages> pp. 714-721, </pages> <publisher> IEEE Computer Society, </publisher> <year> 1988. </year>
Reference-contexts: In that work the transmitter sends multiple copies of the same message all destined to the set of all receivers. This approach is based on similar work for single destination ARQ protocols (see for example <ref> [12] </ref>). In this paper we consider a third approach that can best be motivated by considering the case where a particular destination is unusually slow or is experiencing above average error rates in the messages it is receiving or the acknowledgements it is sending. <p> Examples 1 and 2 with and without Destination Set Splitting using Full-Memory Go-Back-N, T o = 10; 100, and P S = 1:0 for all groups. 7 Comparison with the Multiple Copy Scheme We now undertake a comparison of the destination set splitting (DSS) scheme with the Multiple Copy (MC) <ref> [5, 12] </ref> scheme. Recall that in the Multiple Copy scheme the source sends multiple copies of each message with each copy destined to the entire destination group. There are two main points of comparison: 1) the number of returned acknowledgements per message and 2) the maximum achievable throughput.
Reference: [13] <author> K. K. Sabnani, </author> <title> Multidestination Protocols for Satellite Broadcast Channels. </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1982. </year>
Reference-contexts: The REFINE procedure is described in Figure 5. 5 The Ideal Selective Repeat Protocol We consider the effect of destination set splitting on the performance of the ideal selective repeat (i-sr) point-to-multipoint ARQ protocols. This protocol is the one considered in <ref> [7, 13] </ref>. In this idealized protocol, the transmitter only retransmits messages in error and retains full-memory of acknowledgements received for all messages. Infinite buffer space is required at the receivers to handle packet resequencing.
Reference: [14] <author> D. G. Luenberger, </author> <title> Linear and NonLinear Programming. </title> <publisher> Addison-Wesley, 2nd edition ed., </publisher> <year> 1984. </year>
Reference-contexts: )) + r ( g X m fl For such a point to be a maximum of fl protocol (m), it is sufficient that the matrix L (m fl ) = r 2 (fl protocol (m fl )) + r 2 ( g X m fl be positive definite (see <ref> [14, p307] </ref>).
Reference: [15] <author> S. Y. Cheung and M. H. Ammar, </author> <title> "Using destination set grouping to improve the performance of window-controlled multipoint connections," </title> <institution> College of Computing, Georgia Institute of Technology, </institution> <type> Technical Report GIT-CC-94-32, </type> <month> August </month> <year> 1994. </year> <month> 21 </month>
Reference-contexts: Our splitting scheme can also result in higher maximum throughput either in its pure form or when combined with the Multiple Copy scheme. We have recently investigated the use of the destination set splitting technique to improve the performance of window-based congestion control in a multipoint conversation <ref> [15] </ref>.
References-found: 15

