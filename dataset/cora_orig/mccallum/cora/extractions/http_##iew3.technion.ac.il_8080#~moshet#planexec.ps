URL: http://iew3.technion.ac.il:8080/~moshet/planexec.ps
Refering-URL: http://iew3.technion.ac.il:8080/~moshet/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: moshet@ie.technion.ac.il  
Phone: phone: (972-4)-294419 fax: (972-4)-235194  
Title: On Planning while Executing in Stationary Environments  
Author: Moshe Tennenholtz 
Note: Short Title: "On Planning while Executing".  
Address: Haifa 32000 Israel  
Affiliation: Faculty of Industrial Engineering and Management Technion Israel Institute of Technology  
Abstract-found: 0
Intro-found: 1
Reference: [AHU74] <author> A. V. Aho, J. V. Hopcroft, and J.D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1974. </year>
Reference-contexts: This is obtained by the following lemmas: Lemma 5.1: Given a semi-moderate Planning while Executing system, the generation of plans with complete information by PwE can be implemented in polynomial time. Proof: Planning with complete information in this case is a graph search, which is known to be linear <ref> [AHU74] </ref>. Lemma 5.2: Given a simple semi-moderate Planning while Executing system, the selection of a new assignment to I by the PwE procedure can be implemented in polynomial time. 14 Proof: Consider step 5 of the PwE procedure.
Reference: [AIS88] <author> J.A. Ambros-Ingerson and S. Steel. </author> <title> Interleaving Planning, Execution and Monitoring. </title> <booktitle> In Proc. of AAAI-88, </booktitle> <pages> pages 83-88, </pages> <year> 1988. </year>
Reference-contexts: This is a general representation of conditional plans. 3 Planning while Executing It is commonly agreed that the interleaving of planning with execution is a basic approach to planning with incomplete information <ref> [AIS88] </ref>. By ignoring some possible behaviors of the environment, one can make the task of planning much easier. This is also the idea when one adopts a computational approach to default reasoning [Gin91]. <p> A mechanism for interleaving planning with execution is discussed in <ref> [AIS88] </ref>. Our work does not concentrate on specific mechanisms for the interleaving of planning with execution; Rather, it concentrates on general computational aspects of the interleaving of planning with execution. This makes our work complementary to some of the above-mentioned work.
Reference: [BT94] <author> R. Brafman and M. Tennenholtz. </author> <title> Belief Ascription and Mental Level Modeling. </title> <booktitle> In Proc. of the 4th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 87-98, </pages> <year> 1994. </year>
Reference-contexts: We will say that the width of a belief structure is k if for any subset of the environment behaviors, the corresponding belief set consists of no more than k elements. The above definition is consistent with models of belief revision ([Gar88, KM91, FH94]). Moreover, in <ref> [BT94] </ref> Brafman and Tennenholtz show that given certain basic assumptions an agent can be always modeled as a "goal-achiever" with a fixed belief structure. An agent will start by generating a plan which guarantees goal achievement for any behavior in its belief set.
Reference: [Byl92] <author> T. Bylander. </author> <title> Complexity Results for Serial Decomposability. </title> <booktitle> In Proc. of AAAI-92, </booktitle> <pages> pages 729-734, </pages> <year> 1992. </year>
Reference-contexts: Section 6 can be considered as a first step in this direction. Our work is also related to work on the tractability of different types of planning <ref> [ENS92, Byl92] </ref>. However, these works concentrate on planning with complete information. Our work is complementary to previous work on the complexity of conditional planning [ST94].
Reference: [DW91] <author> Thomas L. Dean and Michael P. Wellman. </author> <title> Planning and Control. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1991. </year>
Reference-contexts: This definition is also consistent with the definition of protocols and knowledge in distributed systems [HM84]. This makes our work complementary to work concerning knowledge and action (e.g., [Moo80, Hal88]), dealing with issues like knowledge precondition for actions and reasoning about knowledge (see <ref> [DW91] </ref> for a general discussion on related subjects). Our work is mostly related to work on conditional planning. Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., [Moo80, Hal88, Mor87]), and to the logical formulation of conditional plans [Ros81].
Reference: [EHW + 92] <author> O. Etzioni, S. Hanks, D. Weld, D. Draper, N. Lesh, and M. Williamson. </author> <title> An Approach to Planning with Incomplete Information. </title> <booktitle> In Proceedings of the 3rd Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 115-125, </pages> <year> 1992. </year>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable. <p> Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90]. These works as well as the more classical work on conditional plans (e.g. [War76]) and works that followed and extended it in various directions <ref> [PS92, EHW + 92] </ref> have not concentrated on general computational aspects of planning with incomplete information. A mechanism for interleaving planning with execution is discussed in [AIS88].
Reference: [EIS76] <author> S. Even, A. Itai, and A. Shamir. </author> <title> On the complexity of timetable and multicommodity flow problems. </title> <journal> Siam Journal of Computing, </journal> <volume> 5 </volume> <pages> 691-703, </pages> <year> 1976. </year>
Reference-contexts: This implies that C is a 2-CNF formula. Given that the number of conjuncts in C is polynomially bounded (since the system is structured; see the proof of the general case), and since there exists a polynomial algorithm for finding a satisfying assignment to a 2-CNF formula <ref> [EIS76] </ref>, we get the desired result. Combining the above lemmas we get: Theorem 5.3: Given a simple semi-moderate Planning while Executing system, the PwE procedure yields a polynomial procedure for planning with incomplete information in stationary environments.
Reference: [ENS92] <author> K. Erol, </author> <title> D.S. Nau, and V.S. Subrahmanian. On the Complexity of Domain-Independent Planning. </title> <booktitle> In Proc. of AAAI-92, </booktitle> <pages> pages 381-386, </pages> <year> 1992. </year>
Reference-contexts: Section 6 can be considered as a first step in this direction. Our work is also related to work on the tractability of different types of planning <ref> [ENS92, Byl92] </ref>. However, these works concentrate on planning with complete information. Our work is complementary to previous work on the complexity of conditional planning [ST94].
Reference: [FH94] <author> N. Friedman and J.Y. Halpern. </author> <title> A Knowledge-Based Framework for Belief Change, Part II: Revision and Update. </title> <booktitle> In The 4th international conference on principles of knowledge representation and reasoning, </booktitle> <pages> pages 190-201, </pages> <year> 1994. </year>
Reference: [Gar88] <author> P. Gardenfors. </author> <title> Knowledge is Flux. </title> <publisher> The MIT Press, </publisher> <year> 1988. </year>
Reference: [Gin91] <author> M. L. Ginsberg. </author> <title> The Computational Value of Nonmonotonic Reasoning. </title> <booktitle> In Proc. of the 2nd International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 262-268, </pages> <year> 1991. </year>
Reference-contexts: This approach is quite common-sensical for planning in stationary environments. The roots of this approach go back to early work on planning and acting [Mcd78], to work on planning routes through uncertain territory [MD84], as well as to work on the computational value of defaults and assumptions <ref> [Gin91] </ref>. Our aim in this paper is to initiate a computational study of Planning while Executing and of its use as a scheme for planning with incomplete information in stationary environments. <p> By ignoring some possible behaviors of the environment, one can make the task of planning much easier. This is also the idea when one adopts a computational approach to default reasoning <ref> [Gin91] </ref>. Given a set of defaults about the environment behavior, the same methods as in planning with complete information can be used, by adopting the defaults as assumptions. <p> Our work can also be considered as related to work on the computational value of nonmonotonic reasoning <ref> [Gin91] </ref>.
Reference: [GN93] <author> M.R. Genesereth and I. R. Nourbakhsh. </author> <title> Time Saving Tips for Problem Solving with Incomplete Information. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <year> 1993. </year>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable.
Reference: [Hal88] <author> J. Y. Halpern. </author> <title> Reasoning about knowledge: An overview. </title> <booktitle> In Theoretical Aspects of Reasoning About Knowledge: Proceedings of the 1988 conference, </booktitle> <pages> pages 1-17, </pages> <year> 1988. </year> <month> 22 </month>
Reference-contexts: This is captured by defining plans as functions from histories to actions. This definition is also consistent with the definition of protocols and knowledge in distributed systems [HM84]. This makes our work complementary to work concerning knowledge and action (e.g., <ref> [Moo80, Hal88] </ref>), dealing with issues like knowledge precondition for actions and reasoning about knowledge (see [DW91] for a general discussion on related subjects). Our work is mostly related to work on conditional planning. <p> Our work is mostly related to work on conditional planning. Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., <ref> [Moo80, Hal88, Mor87] </ref>), and to the logical formulation of conditional plans [Ros81]. Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90].
Reference: [HM84] <author> J. Halpern and Y. Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <type> Technical Report RJ 4421, </type> <institution> IBM, </institution> <year> 1984. </year>
Reference-contexts: This is captured by defining plans as functions from histories to actions. This definition is also consistent with the definition of protocols and knowledge in distributed systems <ref> [HM84] </ref>. This makes our work complementary to work concerning knowledge and action (e.g., [Moo80, Hal88]), dealing with issues like knowledge precondition for actions and reasoning about knowledge (see [DW91] for a general discussion on related subjects). Our work is mostly related to work on conditional planning.
Reference: [KM91] <author> H. Katsuno and A. Mendelzon. </author> <title> Propositional knowledge base revision and minimal change. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 263-294, </pages> <year> 1991. </year>
Reference: [Mcd78] <author> D. Mcdermott. </author> <title> Planning and Acting. </title> <journal> Cognitive Science, </journal> <volume> 2(2), </volume> <year> 1978. </year>
Reference-contexts: We call this approach: Planning while Executing. This approach is quite common-sensical for planning in stationary environments. The roots of this approach go back to early work on planning and acting <ref> [Mcd78] </ref>, to work on planning routes through uncertain territory [MD84], as well as to work on the computational value of defaults and assumptions [Gin91].
Reference: [MD84] <author> D. Mcdermott and E. Davis. </author> <title> Planning Routes Through Uncertain Territory. </title> <journal> Artificial Intelligence, </journal> <volume> 22, </volume> <year> 1984. </year>
Reference-contexts: We call this approach: Planning while Executing. This approach is quite common-sensical for planning in stationary environments. The roots of this approach go back to early work on planning and acting [Mcd78], to work on planning routes through uncertain territory <ref> [MD84] </ref>, as well as to work on the computational value of defaults and assumptions [Gin91]. Our aim in this paper is to initiate a computational study of Planning while Executing and of its use as a scheme for planning with incomplete information in stationary environments.
Reference: [Moo80] <author> R. C. Moore. </author> <title> Reasoning about Knowledge and Action. </title> <type> Technical Report 191, </type> <institution> SRI International, </institution> <year> 1980. </year>
Reference-contexts: This is captured by defining plans as functions from histories to actions. This definition is also consistent with the definition of protocols and knowledge in distributed systems [HM84]. This makes our work complementary to work concerning knowledge and action (e.g., <ref> [Moo80, Hal88] </ref>), dealing with issues like knowledge precondition for actions and reasoning about knowledge (see [DW91] for a general discussion on related subjects). Our work is mostly related to work on conditional planning. <p> Our work is mostly related to work on conditional planning. Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., <ref> [Moo80, Hal88, Mor87] </ref>), and to the logical formulation of conditional plans [Ros81]. Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90].
Reference: [Mor87] <author> L. Morgenstern. </author> <title> Knowledge Preconditions for Actions and Plans. </title> <booktitle> In Proc. 10th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 867-874, </pages> <year> 1987. </year>
Reference-contexts: Our work is mostly related to work on conditional planning. Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., <ref> [Moo80, Hal88, Mor87] </ref>), and to the logical formulation of conditional plans [Ros81]. Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90].
Reference: [Pea84] <author> Judea Pearl. </author> <title> Heuristics: intelligent search strategies for computer problem solving. </title> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference-contexts: Roughly speaking, we say that Planning while Executing is polynomial 2 if the corresponding planning with incomplete information problem can be reduced to a polynomial number of interleavings of planning with complete information and constraint satisfaction. These are problems for which powerful heuristics already exist (e.g., heuristic search <ref> [Pea84] </ref> and GSAT [SLM92]). We introduce several basic results regarding the tractability of Planning while Executing.
Reference: [PS92] <author> M. A. Peot and D.E. Smith. </author> <title> Conditional Nonlinear Planning. </title> <booktitle> In Proceedings of the 1st International Conference on AI Planning Systems, </booktitle> <pages> pages 189-197, </pages> <year> 1992. </year>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable. <p> Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90]. These works as well as the more classical work on conditional plans (e.g. [War76]) and works that followed and extended it in various directions <ref> [PS92, EHW + 92] </ref> have not concentrated on general computational aspects of planning with incomplete information. A mechanism for interleaving planning with execution is discussed in [AIS88].
Reference: [Ros81] <author> S.J. Rosenschein. </author> <title> Plan Synthesis: A logical Perspective. </title> <booktitle> In Proc. 7th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1981. </year>
Reference-contexts: Our work is mostly related to work on conditional planning. Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., [Moo80, Hal88, Mor87]), and to the logical formulation of conditional plans <ref> [Ros81] </ref>. Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90].
Reference: [Ros85] <author> S. J. Rosenschein. </author> <title> Formal Theories of Knowledge in AI and Robotics. </title> <journal> New Generation Computing, </journal> <volume> 3(3) </volume> <pages> 345-357, </pages> <year> 1985. </year>
Reference-contexts: Notice that this robot can still be quite sophisticated, since it may have additional memory and computational state which are not represented explicitly (this is the situated automata idea <ref> [Ros85] </ref>). A simple semi-moderate system is an instance of a structured semi-moderate system. For this kind of systems we are able to show that PwE is a polynomial procedure. <p> As far as the model we use is concerned, the most similar model of knowledge representation in AI is the situated automata <ref> [Ros85] </ref>. We use the idea that the actual local state need not be represented explicitly, in order to have a succinct model where planning while executing can be discussed. This is captured by defining plans as functions from histories to actions.
Reference: [RS87] <author> R. L. Rivest and R. E. Schapire. </author> <title> Diversity-Based Inference of Finite Automata. </title> <booktitle> In Proc. 28th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 78-87, </pages> <year> 1987. </year> <month> 23 </month>
Reference-contexts: In order to address the requirement about the persistence of attainable goals, we will assume that the state-space is fully connected, i.e. there is a path between any pair of observable states given any transition function in E. This assumption is a common-practice in the learning literature <ref> [RS87] </ref>. Hence, we assume that an agent is able to reach from any observable state to any other observable state, but the question remains whether it can devise an appropriate plan, and whether it can do so efficiently. Our results do hold under other assumptions as well.
Reference: [RW89] <author> P.G. Ramadge and W.M. Wonham. </author> <title> The Control of Discrete Event Systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1) </volume> <pages> 81-98, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: In this case, we may need to rely on other techniques, as discussed in [ST94]. We start by defining a basic model in which planning with incomplete information in stationary environments can be studied. We use the model discussed in [ST94], which is a typical discrete-event system [DES] model <ref> [RW89] </ref>. The details of this model which are relevant to this paper, are presented in the following sections in a self-contained fashion.
Reference: [SLM92] <author> B. Selman, H. Levesque, and D. Mitchell. </author> <title> A New Method for Solving Hard Satisfiability Problems. </title> <booktitle> In Proc. of AAAI-92, </booktitle> <pages> pages 440-446, </pages> <year> 1992. </year>
Reference-contexts: These are problems for which powerful heuristics already exist (e.g., heuristic search [Pea84] and GSAT <ref> [SLM92] </ref>). We introduce several basic results regarding the tractability of Planning while Executing.
Reference: [ST94] <author> S. Safra and M. Tennenholtz. </author> <title> On Planning while Learning. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 111-129, </pages> <year> 1994. </year>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable. <p> Although Planning while Executing may be appropriate when the environment is not stationary, it might be insufficient for such environments. In this case, we may need to rely on other techniques, as discussed in <ref> [ST94] </ref>. We start by defining a basic model in which planning with incomplete information in stationary environments can be studied. We use the model discussed in [ST94], which is a typical discrete-event system [DES] model [RW89]. <p> In this case, we may need to rely on other techniques, as discussed in <ref> [ST94] </ref>. We start by defining a basic model in which planning with incomplete information in stationary environments can be studied. We use the model discussed in [ST94], which is a typical discrete-event system [DES] model [RW89]. The details of this model which are relevant to this paper, are presented in the following sections in a self-contained fashion. <p> further restriction on our setting under which Planning while Executing yields a polynomial procedure for planning with incomplete information. 3 In addition, we present belief-based conditional planning; this kind of planning lies in between Planning while Executing and general Planning while Learning (i.e., conditional planning in stationary and non-stationary environments) <ref> [ST94] </ref>. We show specific conditions under which belief-based conditional planning is polynomial. Our basic computational framework is presented in Sections 2-3 while our results are presented in Sections 4-6. In Section 7 we discuss the contribution of this work, and put our work in the perspective of related work. <p> A semi-moderate Planning while Executing system is simple if each condition in the representation is the conjunction of at most two literals. In a semi-moderate system, if the agent would have known the environment behavior then planning would have been polynomial. However, as shown in <ref> [ST94] </ref>, planning with incomplete information in stationary environments is NP-hard even in semi-moderate systems. This implies that semi-moderate systems are non-trivial structures, for which useful planning techniques should be carefully devised. <p> Formally, we have: Theorem 5.4: Given a semi-moderate structured Planning while Executing system, where each condition is represented by a 2-DNF formula, PwE yields a polynomial procedure for planning with incomplete information. 6 Belief-Based Conditional Planning In previous work <ref> [ST94] </ref> Safra and Tennenholtz introduced the framework of Planning while Learning. Planning while Learning is concerned with the 15 general case of an agent which needs to achieve a desired goal in a system whose (perhaps dynamic) state is only partially known to the agent. <p> A moderate system is a system where the number of both observable states and environment behaviors is polynomial in the actual representation size. Although this may seem as a trivial setting, in <ref> [ST94] </ref> the authors show that it is completely nontrivial; In particular, finding a satisfactory plan (i.e., a plan which achieves the agent's goal regardless of the actual environment behavior) in moderate systems is NP-hard. <p> As Safra and Tennenholtz have shown <ref> [ST94] </ref> the related computational problem in this case is NP-hard. Fortunately, we are able to show that if the width of the belief structure is logarithmic, then belief-based conditional planning in moderate systems is polynomial. <p> Our work is also related to work on the tractability of different types of planning [ENS92, Byl92]. However, these works concentrate on planning with complete information. Our work is complementary to previous work on the complexity of conditional planning <ref> [ST94] </ref>. The latter work discusses the generation of conditional plans as an approach to planning with incomplete information, while our work discusses the interleaving of planning with execution as an approach to planning with incomplete information.
Reference: [TM89] <author> M. Tennenholtz and Yoram Moses. </author> <title> On Cooperation in a Multi-Entity Model. </title> <booktitle> In Proc. 11th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference-contexts: This kind of representation has been shown <ref> [TM89] </ref> to be expressive and powerful. In this section and in Section 5 we will consider Planning while Executing in settings represented in the above general syntactic form. Given a Planning with Incomplete Information setting, we are interested in whether the corresponding Planning while Executing system is polynomial.
Reference: [War76] <author> D. H. D. Warren. </author> <title> Generating Conditional Plans and Programs. </title> <booktitle> In Proceedings of the Summer Conference on AI and Simulation of Behavior, </booktitle> <address> Edinburgh, </address> <year> 1976. </year>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable. <p> Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well [Wel90]. These works as well as the more classical work on conditional plans (e.g. <ref> [War76] </ref>) and works that followed and extended it in various directions [PS92, EHW + 92] have not concentrated on general computational aspects of planning with incomplete information. A mechanism for interleaving planning with execution is discussed in [AIS88].
Reference: [Wel90] <author> Michael P. Wellman. </author> <title> Formulation of Tradeoffs in Planning Under Uncertainty. </title> <publisher> Pitman, </publisher> <address> London, </address> <year> 1990. </year> <month> 24 </month>
Reference-contexts: The above setting resembles situations of planning with incomplete information (e.g., <ref> [War76, PS92, EHW + 92, Wel90, GN93, ST94] </ref>) and will be better defined in the following sections. In the most general case an agent's action may change the environment behavior and may cause a potentially achievable goal to become no longer achievable. <p> Theoretical work on this issue is mainly devoted to aspects of reasoning about knowledge and action (e.g., [Moo80, Hal88, Mor87]), and to the logical formulation of conditional plans [Ros81]. Specific mechanisms to construct conditional plans, in which observable events and tests are explicitly declared are discussed as well <ref> [Wel90] </ref>. These works as well as the more classical work on conditional plans (e.g. [War76]) and works that followed and extended it in various directions [PS92, EHW + 92] have not concentrated on general computational aspects of planning with incomplete information.
References-found: 30

