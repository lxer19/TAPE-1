URL: ftp://gaia.cs.umass.edu/pub/Dey97:Playback.ps.gz
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Title: Playback restart in interactive streaming video applications  
Author: Jayanta K. Dey Subhabrata Sen James F. Kurose Don Towsley James D. Salehi 
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: Low latency is crucial in networked multimedia applications such as on-demand streaming audio and video. In this paper, we consider the problem of restarting or resuming playback following an interactive operation such as fast forward, rewind, or indexed jump in stored on-demand video. We present two approaches to restart playback after an interactive operation, and develop algorithms to compute the latencies incurred in restarting playback. Using long MPEG-1 traces, with an optimal smoothing technique [22] to transmit data for regular playback, we demonstrate that the latencies incurred under our approaches are very small. We next examine the latencies incurred when restarting playback in a video server under two policies for sharing its bandwidth: (a) one in which only regular playback bandwidth is available to restart playback, and (b) one in which additional free server bandwidth (if any) is accessible. We find playback restart latencies to be similarly low under both policies, suggesting that the simpler approach (a) is sufficient.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ALLES, A. </author> <title> ATM internetworking. </title> <note> available as http://www.cisco.com/warp/public/614/12.html. May 1995. </note>
Reference-contexts: The transmission schedule A is defined by fa (1); a (2); : : : ; a (N )g: Let A (t) represent the cumulative amount of data transmitted by the server during time interval <ref> [1; t] </ref> : A (t) = P t 3 b : Client buffer capacity for storing undisplayed frames. N : Number of frames in a video. d (t) : Amount of data consumed by the client in time slot t (size of the t th frame). <p> N : Number of frames in a video. d (t) : Amount of data consumed by the client in time slot t (size of the t th frame). D (t) : Cumulative data consumed by the client over <ref> [1; t] </ref> : P t a (t) : Amount of data sent by server in time slot t. A (t) : Cumulative data sent by the server during the interval [1; t] : P t R (t) : Amount of data present in client buffer in time slot t: A (t) <p> D (t) : Cumulative data consumed by the client over <ref> [1; t] </ref> : P t a (t) : Amount of data sent by server in time slot t. A (t) : Cumulative data sent by the server during the interval [1; t] : P t R (t) : Amount of data present in client buffer in time slot t: A (t) D (t). B (t) : Maximum cumulative data that can be received by the client during time interval [1; t], without buffer overflow: B (t) = minfD (t 1) + <p> (t) : Cumulative data sent by the server during the interval <ref> [1; t] </ref> : P t R (t) : Amount of data present in client buffer in time slot t: A (t) D (t). B (t) : Maximum cumulative data that can be received by the client during time interval [1; t], without buffer overflow: B (t) = minfD (t 1) + b; D (N )g for t = 2; : : : ; N; B (1) = b; B (0) = 0. Table 1: Summary of notation used in this paper. <p> We note that d (t) is determined solely by the manner in which the video has been encoded; that is, once a video has been encoded, its display schedule is invariant. D (t) represents the cumulative amount of data displayed by the client during time interval <ref> [1; t] </ref> : D (t) = i=1 d (i): Therefore R (t) = A (t) D (t), represents the amount of data present in the client buffer during time slot t. Finally, the client buffer size is denoted by b. <p> Finally, the client buffer size is denoted by b. B (t) denotes the maximum cumulative amount of data that can be received by the client over <ref> [1; t] </ref> without buffer overflow. For a client with fixed buffer size b, B (t) = minfD (t 1) + b; D (N )g for t = 2; : : : ; N , with B (1) = b, and B (0) = 0. <p> Formally, any transmission schedule A = [a (1); : : : ; a (N )] is a feasible video transmission schedule over <ref> [1; N ] </ref>, if the client buffer does not starve or overflow during video playback over the time period, i.e., if D (t) A (t) B (t), 8t = 1; : : : ; N: Table 1 summarizes this notation. 2.2 Interactive Operations and restarting Playback Let us now examine the <p> Also, it is difficult to map this model onto a network service model. A possible match for a network service model is the (Available Bit Rate) ABR model under ATM <ref> [1, 13, 14, 25] </ref>.
Reference: [2] <author> BUDDHIKOT, M., AND PARULKAR, G. </author> <title> Distributed data layout, scheduling and playout control in a large scale storage server. </title> <booktitle> In Proceedings of the Sixth International Workshop on Packet Video (Portland, </booktitle> <address> OR, </address> <year> 1994). </year>
Reference-contexts: Researchers have also considered mechanisms to provide fast forward and rewind service using approximately the same bandwidth as in playback <ref> [2, 3, 4, 24] </ref>. This is accomplished either by sending a smaller number of frames during this operation, or by transmitting an alternate encoding of the video with a coarser granularity and a lower resolution.
Reference: [3] <author> BUDDHIKOT, M., PARULKAR, G., AND COX, J. R. J. </author> <title> Design of a large scale multimedia storage server. </title> <journal> Journal of Computer Networks and ISDN Systems (1995), </journal> <pages> 504-517. </pages>
Reference-contexts: Researchers have also considered mechanisms to provide fast forward and rewind service using approximately the same bandwidth as in playback <ref> [2, 3, 4, 24] </ref>. This is accomplished either by sending a smaller number of frames during this operation, or by transmitting an alternate encoding of the video with a coarser granularity and a lower resolution.
Reference: [4] <author> CHEN, M.-S., KANDLUR, D., AND YU, P. </author> <title> Support for fully interactive playout in disk-array-based video server. </title> <booktitle> In Proceedings of ACM International Conference on Multimedia (San Fransisco, </booktitle> <address> CA, </address> <month> Oct. </month> <year> 1994), </year> <booktitle> ACM, </booktitle> <pages> pp. 391-398. </pages>
Reference-contexts: Researchers have also considered mechanisms to provide fast forward and rewind service using approximately the same bandwidth as in playback <ref> [2, 3, 4, 24] </ref>. This is accomplished either by sending a smaller number of frames during this operation, or by transmitting an alternate encoding of the video with a coarser granularity and a lower resolution.
Reference: [5] <author> DEY-SIRCAR, J. K., SALEHI, J., KUROSE, J. F., AND TOWSLEY, D. </author> <title> Providing VCR Capabilities in Large-Scale Video Servers. </title> <booktitle> In Proceedings of ACM International Conference on Multimedia (San Fransisco, </booktitle> <address> CA, </address> <month> Oct. </month> <year> 1994), </year> <booktitle> ACM, </booktitle> <pages> pp. 25-32. </pages>
Reference-contexts: More recently, there has been increased emphasis on supporting additional streaming video applications (such as WWW-based video, distance learning, training) and on supporting interactive operations such as fast forward, rewind, pausing and indexed jumps within the media <ref> [5, 6] </ref>. <p> Given the ubiquity of fast forward and rewind operations on videotape systems, surprisingly few researchers have considered the problem of supporting these interactive operations with video on demand. An early work on supporting fast forward and rewind service is <ref> [5] </ref>, which assumed that these operations required the server to transmit the video stream at a higher rate. The focus of that work was on evaluating the number of clients that could be admitted and be provided with statistical quality of service guarantees 4 in such a system.
Reference: [6] <author> FENG, W.-C., JAHANIAN, F., AND SECHREST, S. </author> <title> Providing VCR functionality in a constant quality video-on demand transportation service. </title> <booktitle> In IEEE Multimedia (Hiroshima, </booktitle> <address> Japan, </address> <month> June </month> <year> 1996), </year> <note> IEEE. </note>
Reference-contexts: More recently, there has been increased emphasis on supporting additional streaming video applications (such as WWW-based video, distance learning, training) and on supporting interactive operations such as fast forward, rewind, pausing and indexed jumps within the media <ref> [5, 6] </ref>. <p> A third mechanism of providing this functionality is by sending only key frames [27], which are representative frames for consecutive video segments. Use of key frames, which are pre-extracted for every video, achieves this functionality with very low bandwidth requirements. Feng et al. <ref> [6] </ref> evaluate a fast forward and rewind service that is limited to data present within the client buffer, for client buffer sizes of 25 MB or more.
Reference: [7] <author> FENG, W.-C., AND REXFORD, J. </author> <title> A comparison of bandwidth smoothing techniques for the transmission of prerecorded compresses video. </title> <booktitle> In Proceedings of the Conference on Computer Communications (IEEE Infocom) (Kobe,Japan, </booktitle> <month> Apr. </month> <year> 1997), </year> <note> IEEE. </note>
Reference-contexts: Because it optimally reduces the peak rate of a video, we use this algorithm as the playback transmission technique throughout this paper. For a discussion on these various smoothing algorithms, see [28] and <ref> [7] </ref>. We note that although our numerical results are for video traces which are transmitted according to this specific smoothed playback algorithm, the playback restart algorithms and the computational approaches for evaluating these restart algorithms are completely general. This paper is organized as follows.
Reference: [8] <author> FENG, W.-C., AND SECHREST, S. </author> <title> Smoothing and buffering for delivery of prerecorded compressed video. </title> <booktitle> In IS&T/SPIE Multimedia Computing and Networking (San Jose, </booktitle> <address> CA, </address> <month> Feb. </month> <year> 1995), </year> <month> IS&T/SPIE, </month> <pages> pp. 234-242. </pages>
Reference-contexts: For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size. <p> The maximum latency is experienced by a client at a frame position where the value of R equals the client buffer size. We expect to see this behavior when most other reasonable smoothing algorithms are used for playback transmission, e.g. <ref> [8] </ref>, as they attempt to take advantage of the client buffer to smooth the variability of a VBR video. initiation latency. The peak rate of the smoothed schedules for each of the 4 client buffer sizes, caused by the size of the first frame [22], is 0.083 Mb/frame.
Reference: [9] <author> GARRETT, M., AND WILLINGER, W. </author> <title> Analysis, modeling and generation of self-similar VBR traffic. </title> <booktitle> In SIGCOMM Symposium on Communications Architectures and Protocols (London, </booktitle> <address> UK, </address> <month> Aug. </month> <year> 1994), </year> <booktitle> ACM, </booktitle> <pages> pp. 269-280. </pages>
Reference-contexts: The effect of this is demonstrated in Section 4. 4 Empirical evaluation We have evaluated the restart delays seen under Algorithms 1 and 2 using VBR MPEG-1 traces of Beauty and the Beast [15], Jurassic Park [21], Advertisements [15], Wizard of Oz [16] and Star Wars <ref> [9] </ref>. In this section we describe the restart delay seen under the two algorithms, on two representative traces.
Reference: [10] <author> GEMMELL, D. J., VIN, H., KANDLUR, D., AND RANGAN, P. V. </author> <title> Multimedia storage servers: A tutorial. </title> <booktitle> IEEE Computer 28, </booktitle> <month> 5 (May </month> <year> 1995). </year>
Reference-contexts: 1 Introduction Until recently, a majority of research in the area of video on demand has focussed on providing continuous delivery of stored video from a server to a client through a network (see <ref> [10, 23] </ref> for surveys). More recently, there has been increased emphasis on supporting additional streaming video applications (such as WWW-based video, distance learning, training) and on supporting interactive operations such as fast forward, rewind, pausing and indexed jumps within the media [5, 6].
Reference: [11] <author> GROSSGLAUSER, M., KESHAV, S., AND TSE, D. RCBR: </author> <title> A simple and efficient service for multiple time-sclae traffic. </title> <booktitle> In SIGCOMM Symposium on Communications Architectures and Protocols (Boston, </booktitle> <address> MA, </address> <month> Aug. </month> <year> 1995), </year> <booktitle> ACM, </booktitle> <pages> pp. 219-230. </pages>
Reference-contexts: The advantage of this method is that the resources required to deliver this video do not change at the server or the network. * An alternative approach, usable in a variable bit rate (VBR) or Renegotiated Constant Bit Rate (RCBR <ref> [12, 11] </ref>) network service setting, would be to re-calculate a smoothed transmission schedule for the video from the frame position at which playback is to restart. An advantage of this scheme is that the client's playback resume latency can be explicitly controlled in the computation of the new schedule.
Reference: [12] <author> GROSSGLAUSER, M., KESHAV, S., AND TSE, D. </author> <title> The case against variable bit rate services. </title> <booktitle> In Proc. 5 th Workshop on Network and Operating Systems Support for Digital Audio and Video (Durham, </booktitle> <address> NH, </address> <month> Apr. </month> <year> 1995). </year>
Reference-contexts: The advantage of this method is that the resources required to deliver this video do not change at the server or the network. * An alternative approach, usable in a variable bit rate (VBR) or Renegotiated Constant Bit Rate (RCBR <ref> [12, 11] </ref>) network service setting, would be to re-calculate a smoothed transmission schedule for the video from the frame position at which playback is to restart. An advantage of this scheme is that the client's playback resume latency can be explicitly controlled in the computation of the new schedule.
Reference: [13] <author> JAIN, R., KALYANARAMAN, S., GOYAL, R., AND FAHMY, S. </author> <title> Source behavior for ATM ABR traffic management: An explanation. </title> <journal> IEEE Communications Magazine (Nov. </journal> <year> 1996). </year>
Reference-contexts: Also, it is difficult to map this model onto a network service model. A possible match for a network service model is the (Available Bit Rate) ABR model under ATM <ref> [1, 13, 14, 25] </ref>.
Reference: [14] <author> KALYANARAMAN, S., JAIN, R., GOYAL, R., FAHMY, S., AND JIANG, J. </author> <title> Performance of TCP over ABR on ATM backbone and with various VBR traffic patterns. </title> <note> In Submitted to ICC 1997 (Montreal, </note> <institution> Canada, </institution> <month> June </month> <year> 1997), </year> <note> IEEE. </note>
Reference-contexts: Also, it is difficult to map this model onto a network service model. A possible match for a network service model is the (Available Bit Rate) ABR model under ATM <ref> [1, 13, 14, 25] </ref>.
Reference: [15] <author> KNIGHTLY, E., WREGE, D., LIEBEHERR, J., AND ZHANG, H. </author> <title> Fundamental limits and tradeoffs of providing deterministic guarantees to VBR video traffic. </title> <booktitle> In Proceedings of the ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems (Ottawa, </booktitle> <address> Canada, </address> <month> May </month> <year> 1995), </year> <booktitle> ACM, </booktitle> <pages> pp. 98-107. </pages>
Reference-contexts: The effect of this is demonstrated in Section 4. 4 Empirical evaluation We have evaluated the restart delays seen under Algorithms 1 and 2 using VBR MPEG-1 traces of Beauty and the Beast <ref> [15] </ref>, Jurassic Park [21], Advertisements [15], Wizard of Oz [16] and Star Wars [9]. In this section we describe the restart delay seen under the two algorithms, on two representative traces. <p> The effect of this is demonstrated in Section 4. 4 Empirical evaluation We have evaluated the restart delays seen under Algorithms 1 and 2 using VBR MPEG-1 traces of Beauty and the Beast <ref> [15] </ref>, Jurassic Park [21], Advertisements [15], Wizard of Oz [16] and Star Wars [9]. In this section we describe the restart delay seen under the two algorithms, on two representative traces.
Reference: [16] <author> KRUNZ, M., AND HUGHES, H. </author> <title> A traffic model for MPEG-coded VBR streams. </title> <booktitle> In Proceedings of the ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems (Ottawa, </booktitle> <address> Canada, </address> <month> May </month> <year> 1995), </year> <booktitle> ACM, </booktitle> <pages> pp. 47-55. 29 </pages>
Reference-contexts: The effect of this is demonstrated in Section 4. 4 Empirical evaluation We have evaluated the restart delays seen under Algorithms 1 and 2 using VBR MPEG-1 traces of Beauty and the Beast [15], Jurassic Park [21], Advertisements [15], Wizard of Oz <ref> [16] </ref> and Star Wars [9]. In this section we describe the restart delay seen under the two algorithms, on two representative traces.
Reference: [17] <author> MCMANUS, J. M., AND ROSS, K. W. </author> <title> Prerecorded VBR sources in ATM networks: Piecewise-constant-rate transmission and transport. </title> <type> Tech. rep., Manuscript, </type> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size.
Reference: [18] <author> MCMANUS, J. M., AND ROSS, K. W. </author> <title> Video-on-demand over ATM: Constant rate transmission and transport. </title> <journal> IEEE Journal on Selected Areas in Communication 14, </journal> <month> 6 (August </month> <year> 1996), </year> <pages> 1087-1098. </pages>
Reference-contexts: For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size.
Reference: [19] <author> REIBMAN, A. R., AND BERGER, A. </author> <title> On VBR videoconferencing over ATM networks. </title> <booktitle> In Proc. IEEE GLOBECOMM (1992), IEEE, </booktitle> <pages> pp. 314-319. </pages>
Reference-contexts: For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size.
Reference: [20] <author> REIBMAN, A. R., AND BERGER, A. </author> <title> Traffic descriptors for VBR video teleconferencing over ATM networks. </title> <journal> IEEE/ACM Transactions on Networking 3, </journal> <month> 3 (June </month> <year> 1997), </year> <pages> 329-339. </pages>
Reference-contexts: For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size.
Reference: [21] <author> ROSE, O. </author> <title> Statistical properties of mpeg video traffic and their impact on traffic modeling in atm systems. </title> <type> Tech. Rep. 101, </type> <institution> University of Witzburg Institute of Computer Science, </institution> <month> Feb </month> <year> 1995. </year>
Reference-contexts: The effect of this is demonstrated in Section 4. 4 Empirical evaluation We have evaluated the restart delays seen under Algorithms 1 and 2 using VBR MPEG-1 traces of Beauty and the Beast [15], Jurassic Park <ref> [21] </ref>, Advertisements [15], Wizard of Oz [16] and Star Wars [9]. In this section we describe the restart delay seen under the two algorithms, on two representative traces.
Reference: [22] <author> SALEHI, J., ZHANG, Z., KUROSE, J., AND TOWSLEY, D. </author> <title> Supporting stored video: Reducing rate variablity and end-to-end resource requirements through optimal smoothing. </title> <booktitle> In Proceedings of the ACM Sigmetrics Conference on Measurement and Modeling of Computer Systems (Philadelphia, </booktitle> <address> PA, </address> <month> May </month> <year> 1996), </year> <note> ACM. </note>
Reference-contexts: We also assess how resource considerations such as client buffer sizes and network bandwidth for playback affect the performance of these two approaches. Our evaluations indicate that our approaches result in low playback restart latencies. For example, when playback transmission is smoothed <ref> [22] </ref> to a client with 1 MB client buffer, the average delay in restarting playback is of the order of 1 second. We also find that the restart latencies can be decreased significantly when the bandwidth available for restarting playback is increased only slightly. <p> For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos <ref> [8, 17, 18, 19, 20, 22] </ref>. In particular, the algorithm developed in [22] produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size. <p> For video playback, a number of researchers have developed transmission techniques that exploit client buffering capabilities to reduce the peak bandwidth requirements of VBR compressed videos [8, 17, 18, 19, 20, 22]. In particular, the algorithm developed in <ref> [22] </ref> produces a transmission schedule that minimizes the peak rate as well the rate variability of any video, for a given client buffer size. Because it optimally reduces the peak rate of a video, we use this algorithm as the playback transmission technique throughout this paper. <p> Increasing the client buffer size b can increase the maximum possible value of A (i) as computed for the original playback schedule (e.g., under the optimal smoothing approach <ref> [22] </ref>). This in turn, increases R (i) as well as the restart latency given the same rate r. Similarly, decreasing the rate r increases the latency when the client buffer needs to be filled to the same level. <p> To investigate the performance under the algorithms, we assume that the videos are transmitted using the optimal smoothing algorithm <ref> [22] </ref>, since it minimizes the peak rate as well as the rate variability. We study the effects when the bandwidth available to the algorithms for playback restart is the peak rate of the corresponding smoothed playback transmission schedule. <p> Thus this playback initiation latency enables smoothing or amortizing the transmission of the first frame over s frame periods, reducing the transmission rate of the initial segment which can otherwise be quite large <ref> [22] </ref>. <p> The peak rate of the smoothed schedules for each of the 4 client buffer sizes, caused by the size of the first frame <ref> [22] </ref>, is 0.083 Mb/frame. First, we note that the restart latencies experienced by the clients are vastly different from each other and are roughly proportional to the size of the client buffer. <p> Owing to the size of the first I frame of Starwars, the optimal smoothed schedule for a playback initiation latency of 0 produces the same peak rate for all the client buffer sizes <ref> [22] </ref>. As per the discussion in Section 3.1, the differences between the four latency curves in figure 9 (a) is primarily owing to the difference in the buffer sizes, resulting in their similar contours 3 . <p> A playback initiation latency of 10 frame periods (417 ms for 24 fps Star Wars) smoothes out the effects of the first frame. Thus, with increasing client buffers, the optimal schedules become smoother and the peak rates smaller <ref> [22] </ref> as illustrated in Figure 9 (b). The peak rate for the 4 MB-smoothed schedule is only 0.021 Mb/frame period, whereas it is 0.057 Mb/frame for the 64 KB-smoothed schedule. Low bit rates are clearly desirable for video playback both by the server and the network. <p> Users resuming playback from the corresponding frames will find these latencies unacceptably high. The marginal reduction in the peak rate of the smoothed video decreases with increasing buffer size <ref> [22] </ref>. In Figure 9 (b), the peak rate of the 1 MB-smoothed stream is 0.023 Mb/frame compared to 0.021 Mb/frame peak rate for the 4 MB-smoothed stream. <p> Hence algorithm 2 and algorithm 1 perform identically in this region. In the optimal smoothed schedule, the peak rate segment starts when the client buffer is full (maximum latency point), and ends when the client buffer is empty (zero latency point) <ref> [22] </ref>. This explains the similarity of the downward sloping section following frame number 148459. A 10 frame period playback initiation latency reduces the peak smoothed bandwidth for client buffer sizes of 1 MB and 4 MB in Figure 10 (d). <p> We consider a server that has the capacity to support simultaneous playback of at most n independent video sessions. As before, the playback transmission schedule is determined by the optimal smoothing algorithm <ref> [22] </ref>. A user, in our simulation, spends an exponentially distributed amount of time in playback mode before requesting an index operation. Immediately after the index operation, the user requests playback resumption. The index operation is in the forward or the reverse direction with probability 0.5 each.
Reference: [23] <author> SHENOY, P., GOYAL, P., AND VIN, H. M. </author> <title> Issues in multimedia server design. </title> <journal> ACM Computing Surveys (Special Issue: </journal> <note> Symposium on Multimedia Systems (Dec. </note> <year> 1995). </year>
Reference-contexts: 1 Introduction Until recently, a majority of research in the area of video on demand has focussed on providing continuous delivery of stored video from a server to a client through a network (see <ref> [10, 23] </ref> for surveys). More recently, there has been increased emphasis on supporting additional streaming video applications (such as WWW-based video, distance learning, training) and on supporting interactive operations such as fast forward, rewind, pausing and indexed jumps within the media [5, 6].
Reference: [24] <author> SHENOY, P., AND VIN, H. M. </author> <title> Efficient support for scan operations in video servers. </title> <booktitle> In ACM Conference on Multimedia (San Francisco, </booktitle> <address> CA, </address> <month> Nov. </month> <year> 1996), </year> <note> ACM. </note>
Reference-contexts: Researchers have also considered mechanisms to provide fast forward and rewind service using approximately the same bandwidth as in playback <ref> [2, 3, 4, 24] </ref>. This is accomplished either by sending a smaller number of frames during this operation, or by transmitting an alternate encoding of the video with a coarser granularity and a lower resolution.
Reference: [25] <author> SIU, K.-S., AND JAIN, R. </author> <title> A brief overview of ATM: Protocol layers, LAN emulation, and Traffic Management. </title> <booktitle> In SIGCOMM Symposium on Communications Architectures and Protocols (Boston, </booktitle> <address> MA, </address> <month> Apr. </month> <year> 1995), </year> <note> ACM. </note>
Reference-contexts: Also, it is difficult to map this model onto a network service model. A possible match for a network service model is the (Available Bit Rate) ABR model under ATM <ref> [1, 13, 14, 25] </ref>.
Reference: [26] <institution> WEBTV NETWORKS, INC. </institution> <note> WebTV technical specifications. http://www.webtv.net/HTML/home.specs.html, 1996. </note>
Reference-contexts: It is unclear whether their approach will be adequate for smaller client buffer sizes, e.g., WebTV with a buffer size of 2 MB <ref> [26] </ref>. Regardless of the manner in which interactive operations such as fast forward, rewind, or indexed-jumps are implemented, the result of each of these operations is the identification of a new position in the playback video stream from which normal playout should resume.
Reference: [27] <author> ZHANG, H., LOW, C., SMOLIAR, S., AND WU, J. H. </author> <title> Video parsing, retrieval and browsing: An integrated and content-based solution. </title> <booktitle> In Proceedings of ACM International Conference on Multimedia (San Francisco, </booktitle> <address> CA, </address> <month> Nov. </month> <year> 1995), </year> <booktitle> ACM, </booktitle> <pages> pp. 15-23. </pages>
Reference-contexts: This is accomplished either by sending a smaller number of frames during this operation, or by transmitting an alternate encoding of the video with a coarser granularity and a lower resolution. A third mechanism of providing this functionality is by sending only key frames <ref> [27] </ref>, which are representative frames for consecutive video segments. Use of key frames, which are pre-extracted for every video, achieves this functionality with very low bandwidth requirements.
Reference: [28] <author> ZHANG, Z.-L., KUROSE, J., SALEHI, J., AND TOWSLEY, D. </author> <title> Smoothing, statistical multiplexing and call admission control for stored video. </title> <journal> IEEE Journal of Selected Areas in Communications Special Issue on Real-Time Video Services in Multimedia Networks (To appear). </journal> <volume> 30 </volume>
Reference-contexts: Because it optimally reduces the peak rate of a video, we use this algorithm as the playback transmission technique throughout this paper. For a discussion on these various smoothing algorithms, see <ref> [28] </ref> and [7]. We note that although our numerical results are for video traces which are transmitted according to this specific smoothed playback algorithm, the playback restart algorithms and the computational approaches for evaluating these restart algorithms are completely general. This paper is organized as follows.
References-found: 28

