URL: http://www.cs.ucsb.edu/~sunilp/pub/acmsac.ps
Refering-URL: http://www.cs.ucsb.edu/~sunilp/pub.html
Root-URL: http://www.cs.ucsb.edu
Email: ambujg@cs.ucsb.edu  
Title: A BRIEF SURVEY OF TERTIARY STORAGE SYSTEMS AND RESEARCH  
Author: S. Prabhakar D. Agrawal A. El Abbadi A. Singh fsunilp, agrawal, amr, 
Keyword: Tapes, Digital Libraries, Mass Storage  
Address: Santa Barbara, CA 93106.  
Affiliation: Department of Computer Science University of California  
Abstract: This report summarizes current state of the art in tertiary storage systems. We also summarize the current technologies and research efforts to integrate tertiary storage in operating systems, databases and advanced applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. T. Chen, R. Drach, M. Keating, S. Louise, D. Rotem, and A. Shoshani. </author> <title> Efficient organization and access of multi-dimensional datasets on tertiary storage systems. </title> <booktitle> In Information Systems, </booktitle> <volume> volume 20, </volume> <pages> pages 155-83. </pages> <publisher> Elsevier Science, </publisher> <year> 1995. </year>
Reference-contexts: Researchers working on such applications have focused on performance improvements tailored for the applications where data are accessed in small multidimensional blocks which require retrieval from widely separated locations in storage resulting in large seeks and media switches. Two independent studies <ref> [12, 1] </ref> have suggested that such data should be stored in a manner that facilitates retrieval for specific access patterns.
Reference: [2] <author> A. L. Drapeau and R. H. Katz. </author> <title> Striping in large tape libraries. </title> <booktitle> In Proc. of Supercomputing, </booktitle> <pages> pages 378-387, </pages> <address> Portland, Oregon, 1993. </address> <publisher> ACM. </publisher>
Reference-contexts: More recently, log structured file systems have been developed that take advantage of the append-only and sequential limitations of tapes [6, 3]. Drapeau and Katz have studied striping in the context of large tape libraries in the presence of concurrent random I/O <ref> [2] </ref>. They show that in order for striping to be effective in a concurrent environment, it is necessary to have an adequate number of readers.
Reference: [3] <author> D. A. Ford and J. Myllymaki. </author> <title> A log-structured organization for tertiary storage. </title> <booktitle> In Proceedings of the Twelfth International Conference on Data Engineering, </booktitle> <pages> pages 20-7, </pages> <address> New Orleans, Louisiana, </address> <year> 1996. </year>
Reference-contexts: At the file level, several file systems for managing tertiary storage have been proposed, based upon file-level access through FTP [7]. More recently, log structured file systems have been developed that take advantage of the append-only and sequential limitations of tapes <ref> [6, 3] </ref>. Drapeau and Katz have studied striping in the context of large tape libraries in the presence of concurrent random I/O [2]. They show that in order for striping to be effective in a concurrent environment, it is necessary to have an adequate number of readers.
Reference: [4] <author> L. Golubchik and R. Muntz. </author> <title> Analysis of striping techniques in robotic storage libraries. </title> <booktitle> In Proceedings of the Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 225-38, </pages> <address> Monterey, CA, </address> <year> 1995. </year>
Reference-contexts: Drapeau and Katz have studied striping in the context of large tape libraries in the presence of concurrent random I/O [2]. They show that in order for striping to be effective in a concurrent environment, it is necessary to have an adequate number of readers. Golubchik and Muntz <ref> [4] </ref> have studied striping using a more general open system model with multiple sizes of requests within a single run and various stripe widths. Commercial database systems are optimized for performance with primary and secondary memory.
Reference: [5] <author> B. K. Hillyer and A. Silberschatz. </author> <title> Random I/O scheduling in online tertiary storage. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <address> Canada, </address> <year> 1996. </year>
Reference-contexts: Hillyer and Silberschatz have developed various strategies for reordering batched I/O requests for single serpentine tapes <ref> [5] </ref>. At the file level, several file systems for managing tertiary storage have been proposed, based upon file-level access through FTP [7]. More recently, log structured file systems have been developed that take advantage of the append-only and sequential limitations of tapes [6, 3].
Reference: [6] <author> J. Kohl, M. Stonebraker, and C. Staelin. HighLight: </author> <title> a file system for tertiary storage. </title> <booktitle> In Proceedings of the Twelfth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 157-61, </pages> <address> Monetery, CA, </address> <year> 1993. </year>
Reference-contexts: At the file level, several file systems for managing tertiary storage have been proposed, based upon file-level access through FTP [7]. More recently, log structured file systems have been developed that take advantage of the append-only and sequential limitations of tapes <ref> [6, 3] </ref>. Drapeau and Katz have studied striping in the context of large tape libraries in the presence of concurrent random I/O [2]. They show that in order for striping to be effective in a concurrent environment, it is necessary to have an adequate number of readers.
Reference: [7] <author> F. McClain. DataTree and UniTree: </author> <title> Software for file and storage management. </title> <booktitle> In IEEE, </booktitle> <pages> pages 126-8, </pages> <year> 1990. </year>
Reference-contexts: Hillyer and Silberschatz have developed various strategies for reordering batched I/O requests for single serpentine tapes [5]. At the file level, several file systems for managing tertiary storage have been proposed, based upon file-level access through FTP <ref> [7] </ref>. More recently, log structured file systems have been developed that take advantage of the append-only and sequential limitations of tapes [6, 3]. Drapeau and Katz have studied striping in the context of large tape libraries in the presence of concurrent random I/O [2].
Reference: [8] <author> J. Myllymaki and M. Livny. </author> <title> Disk-tape joins: Synchronizing disk and tape access. </title> <booktitle> In Joint International Conference on Measurement and Modeling of ComputerSystems. SIGMETRICS '95/PERFORMANCE '95, </booktitle> <pages> pages 279-90, </pages> <address> Ottawa, Canada, </address> <year> 1995. </year>
Reference-contexts: These techniques result in about two orders of magnitude savings in the number of switches and fetches. Myllymaki and Livny have studied join operations where one relation resides on secondary storage and the other on tertiary storage <ref> [8] </ref>. The benefits of executing disk and tape I/O in parallel have been investigated. The authors observe that the operations of disk and tape access can be overlapped to reduce the total execution time.
Reference: [9] <author> S. Prabhakar, D. Agrawal, A. El Abbadi, and A. Singh. </author> <title> Tertiary storage: Current status and future trends. </title> <type> Technical Report TRCS96-21, </type> <institution> Dept. of Computer Science, Univ. of Calilfornia, Santa Barbara, </institution> <year> 1996. </year>
Reference-contexts: These include scientific applications that manipulate terabytes of multidimensional array data and digital libraries. We summarize the initial experience from all these efforts in this paper. Due to space limitations, detailed descriptions have been omitted in this report. A more detailed version of the paper is available in <ref> [9] </ref>. 2 Tertiary Devices Current Technology The most common tertiary storage devices are magnetic tapes, optical disks and magneto-optical disks. Tapes have been the traditional devices for archiving large amounts of data whereas optical devices such as CD-ROM and WORM are more recent tertiary devices.
Reference: [10] <author> S. Sarawagi. </author> <title> Query processing in tertiary memory databases. </title> <booktitle> In Proc. of the 21st Int. Conf. on Very Large Data Bases, </booktitle> <pages> pages 585-596, </pages> <address> San Francisco, California, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The authors observe that the operations of disk and tape access can be overlapped to reduce the total execution time. Sarawagi and Stonebraker have also investigated the architecture of database management systems that incorporate tertiary devices directly <ref> [10] </ref>. The authors argue in favor of a central Scheduler that has knowledge of the currently pending queries, the contents (and semantics) of the disk cache and the state of the tertiary memory. Applications with very large data storage requirements need to use tertiary storage to hold active data.
Reference: [11] <author> S. Sarawagi and M. Stonebraker. </author> <title> Single query opimization for tertiary memory. </title> <type> Technical Report s2k-94-45, </type> <institution> Computer Science Div. U.C. Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Commercial database systems are optimized for performance with primary and secondary memory. However, relational database operations such as joins can perform poorly if data is stored on tertiary storage <ref> [11] </ref>. Sarawagi and Stonebraker have investigated optimizations of 2-way joins of relations which are both tape resident [11]. Techniques for reordering the data access to reduce the amount of switching are described. These techniques result in about two orders of magnitude savings in the number of switches and fetches. <p> Commercial database systems are optimized for performance with primary and secondary memory. However, relational database operations such as joins can perform poorly if data is stored on tertiary storage <ref> [11] </ref>. Sarawagi and Stonebraker have investigated optimizations of 2-way joins of relations which are both tape resident [11]. Techniques for reordering the data access to reduce the amount of switching are described. These techniques result in about two orders of magnitude savings in the number of switches and fetches.
Reference: [12] <author> S. Sarawagi and M. Stonebraker. </author> <title> Efficient organization of large multidimensional arrays. </title> <booktitle> In IEEE Int. Conf. on Data Engineering, </booktitle> <pages> pages 328-336, </pages> <address> Houston, TX, USA, Feb. 1994. </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: Researchers working on such applications have focused on performance improvements tailored for the applications where data are accessed in small multidimensional blocks which require retrieval from widely separated locations in storage resulting in large seeks and media switches. Two independent studies <ref> [12, 1] </ref> have suggested that such data should be stored in a manner that facilitates retrieval for specific access patterns.
References-found: 12

