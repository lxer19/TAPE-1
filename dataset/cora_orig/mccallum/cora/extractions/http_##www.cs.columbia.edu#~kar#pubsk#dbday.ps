URL: http://www.cs.columbia.edu/~kar/pubsk/dbday.ps
Refering-URL: http://www.cs.columbia.edu/~kar/pubsk/pubsk.html
Root-URL: http://www.cs.columbia.edu
Email: mumick@research.att.com  kar@cs.columbia.edu  sudarsha@research.att.com  
Title: Design and Implementation of the SWORD Declarative Object-Oriented Database System  
Author: Inderpal Singh Mumick Kenneth A. Ross S. Sudarshan 
Date: September 1993  
Affiliation: AT&T Bell Laboratories  AT&T Bell Laboratories  AT&T Bell Laboratories  
Abstract: SWORD is a declarative object-oriented database being built at AT&T Bell Laboratories. SWORD provides both procedural and declarative data manipulation languages. SWORD is integrated with the O++ language (an extension of C++) of the ODE database system. The data definition and procedural data manipulation in SWORD are done in the O++ sublanguage. In addition, SWORD provides a declarative sublanguage to express queries. Declarativeness yields benefits in reduced programming time and automatic optimization in response to changing database characteristics. The declarative sublanguage is based on the Noodle language of [MR93], modified for integration with C++/O++ to avoid the impedance mismatch problem. The declarative sublanguage models object-identity, classes, relations, views, inheritance, complex objects, and methods, in addition to logical rules. In this paper we discuss the design and implementation of the declarative sublanguage of SWORD. Our work bridges the gap between deductive and object-oriented databases. SWORD will permit a wide range of object-oriented queries to be expressed in a declarative way.
Abstract-found: 1
Intro-found: 1
Reference: [Abi89] <author> S. Abiteboul. </author> <title> Towards a deductive object-oriented database language. </title> <booktitle> In Proceedings of the First International Conference on Deductive and Object-Oriented Databases, </booktitle> <pages> pages 419-438, </pages> <year> 1989. </year>
Reference-contexts: We take the philosophy that queries must be recompiled after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress <ref> [Abi89, Bee89] </ref>, COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD
Reference: [AG88] <author> Serge Abiteboul and S. Grumbach. Col: </author> <title> a logic-based language for complex objects. </title> <booktitle> In Proceedings of the International Conference on Extending Data Base Technology, </booktitle> <pages> pages 271-293, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. Recursive query languages have also been developed: COL <ref> [AG88] </ref>, IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. Though reservations about mixing object-orientedness with declarativeness continue [Ull91], we feel that the bridge between the two styles of programming is getting stronger. <p> We take the philosophy that queries must be recompiled after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL <ref> [AG88] </ref>, Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++
Reference: [AG89] <author> Rakesh Agrawal and Narain Gehani. </author> <title> Ode (object database and environment): the language and the data model. </title> <booktitle> In Proceedings of ACM SIGMOD 1989 International Conference on Management of Data, </booktitle> <pages> pages 36-45, </pages> <address> Portland, OR, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. <p> The declarative language is based on the Noodle language of [MR93], modified for better integration with the O++ procedural language of the ODE database system <ref> [AG89] </ref>. We describe the design and implementation of SWORD. Outline The SWORD declarative language borrows from deductive and object-oriented technology. Our language has recursion and is rule based. Relations are supported as objects with object identifiers, but individual tuples of a relation do not have object identifiers.
Reference: [AK89] <author> Serge Abiteboul and Paris C. Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proceedings of ACM SIGMOD 1989 International Conference on Management of Data, </booktitle> <pages> pages 159-173, </pages> <address> Portland, OR, </address> <month> May </month> <year> 1989. </year> <month> 19 </month>
Reference-contexts: Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. Recursive query languages have also been developed: COL [AG88], IQL <ref> [AK89] </ref>, Logres [CCCR + 90], and CDOL [KU93]. Though reservations about mixing object-orientedness with declarativeness continue [Ull91], we feel that the bridge between the two styles of programming is getting stronger. <p> We take the philosophy that queries must be recompiled after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL <ref> [AK89] </ref>, the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93].
Reference: [BDK92] <author> Francois Bancilhon, Claude Delobel, and Paris Kanellakis. </author> <title> Building an Object-Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> Washington D.C., </address> <year> 1992. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90].
Reference: [Bee89] <author> Catriel Beeri. </author> <title> Formal models for object-oriented databases. </title> <booktitle> In Proceedings of the DOOD89, </booktitle> <pages> pages 370-395, </pages> <address> Kyoto, Japan, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: We take the philosophy that queries must be recompiled after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress <ref> [Abi89, Bee89] </ref>, COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD
Reference: [Bla93] <author> Jose A. Blakeley. ZQL[C++]: </author> <title> Integrating the C++ language and an object query capability. </title> <editor> In Inder-pal Singh Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 138-144, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] <ref> [Bla93] </ref>, Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems.
Reference: [Cat91] <author> R. C. G. Cattell. </author> <title> Object Data Management. </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90].
Reference: [CCCR + 90] <author> F. Cacace, Stefano Ceri, S. Crespi-Reghizi, Letizia Tanca, and Roberto Zicari. </author> <title> Integrating object-oriented data modeling with a rule-based programming paradigm. </title> <booktitle> In Proceedings of ACM SIGMOD 1990 International Conference on Management of Data, </booktitle> <pages> pages 225-236, </pages> <address> Atlantic City, NJ, </address> <month> May 23-25 </month> <year> 1990. </year>
Reference-contexts: Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres <ref> [CCCR + 90] </ref>, and CDOL [KU93]. Though reservations about mixing object-orientedness with declarativeness continue [Ull91], we feel that the bridge between the two styles of programming is getting stronger. <p> changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres <ref> [CCCR + 90] </ref>, F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle.
Reference: [CDLR89] <author> Sophie Cluet, Claude Delobel, Christophe Lecluse, and Philippe Richard. Reloop, </author> <title> an algebra-based query language for O 2 . In Proceedings of the DOOD89, </title> <address> Kyoto, Japan, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop <ref> [CDLR89] </ref> and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. <p> We take the philosophy that queries must be recompiled after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop <ref> [CDLR89] </ref>, IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and
Reference: [CKW92] <author> Weidong Chen, Michael Kifer, and David S. Warren. HiLog: </author> <title> A foundation for higher order logic programming. </title> <journal> Journal of Logic Programming, </journal> <year> 1992. </year>
Reference-contexts: Outline The SWORD declarative language borrows from deductive and object-oriented technology. Our language has recursion and is rule based. Relations are supported as objects with object identifiers, but individual tuples of a relation do not have object identifiers. Complex objects (functional and set valued) are supported using HiLog-like constructs <ref> [CKW92] </ref>. Attributes of objects are referenced by name rather than position. There are several novel features in our system: (1) Variables can range over all classes, relations, attributes, and objects, in a manner similar to Hilog [CKW92]. <p> Complex objects (functional and set valued) are supported using HiLog-like constructs <ref> [CKW92] </ref>. Attributes of objects are referenced by name rather than position. There are several novel features in our system: (1) Variables can range over all classes, relations, attributes, and objects, in a manner similar to Hilog [CKW92]. This permits queries that are not possible in SQL extensions and other object-oriented proposals. (2) Classes, relations, methods, and objects are referenced in a uniform manner. (3) The declarative language is integrated into O++. <p> Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog <ref> [CKW92] </ref>, Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle.
Reference: [DGJ92] <author> Shaul Dar, Narain Gehani, and H. V. Jagadish. CQL++: </author> <title> A SQL for the Ode object-oriented DBMS. </title> <booktitle> In Proceedings of the Third International Conference on Extending Data Base Technology, </booktitle> <pages> pages 201-216, </pages> <address> Vienna, Austria, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE <ref> [DGJ92] </ref>, Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. <p> declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ <ref> [DGJ92] </ref>, ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems.
Reference: [GLR92] <author> Sergio Greco, N. Leone, and P. Rullo. </author> <title> Complex: An object-oriented logic programming system. </title> <journal> ACM Transactions on Knowledge and Data Engineering, </journal> <volume> 4(4) </volume> <pages> 344-359, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex <ref> [GLR92] </ref>, XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle.
Reference: [GMS93] <author> Ashish Gupta, Inderpal Singh Mumick, and V. S. Subrahmanian. </author> <title> Maintaining views incrementally. </title> <booktitle> In Proceedings of ACM SIGMOD 1993 International Conference on Management of Data, </booktitle> <address> Washington, DC, </address> <month> May 26-28 </month> <year> 1993. </year>
Reference-contexts: How efficiently can such object identifiers be supported? View Maintenance We would like to maintain views in response to changes to stored data. The algorithms of <ref> [GMS93] </ref> can be used to maintain view multisets, and some restricted cases of view classes. View Updates The procedural language should be able to update stored objects through views by defining update methods for the views. The update methods can be written by the user in the procedural language.
Reference: [JL93] <author> M. Hasan Jamil and Laks V. S. Lakshmanan. </author> <title> Realizing Orlog in LDL. </title> <editor> In Inderpal Singh Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 45-59, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog <ref> [JL93] </ref>, 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems.
Reference: [KKS92] <author> Michael Kifer, Won Kim, and Yehoshua Sagiv. </author> <title> Querying object-oriented databases. </title> <booktitle> In Proceedings of the Eleventh Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 393-402, </pages> <address> San Diego, CA, </address> <month> June 2-4 </month> <year> 1992. </year>
Reference-contexts: Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL <ref> [KKS92] </ref>. Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. Though reservations about mixing object-orientedness with declarativeness continue [Ull91], we feel that the bridge between the two styles of programming is getting stronger. <p> to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL <ref> [KKS92] </ref>, CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems.
Reference: [KLW90] <author> Michael Kifer., Georg Lausen, and James Wu. </author> <title> Logical foundations of object-oriented and frame-based languages. </title> <type> Technical Report 90/14 (second revision), </type> <institution> SUNY at Stony Brook, </institution> <year> 1990. </year> <note> to appear in Journal of the ACM. </note>
Reference-contexts: There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92]. Logics of objects have been proposed: O-Logic [KW89] and F-Logic <ref> [KLW90] </ref>. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. <p> queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic <ref> [KLW90] </ref>, HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle.
Reference: [KU93] <author> A. Karadimce and Susan Urban. CDOL: </author> <title> A declarative platform for developing OODB applications. </title> <booktitle> In Proceedings of the International Phoenix Conference on Computers and Communications, </booktitle> <pages> pages 224-230, </pages> <address> Tempe, AZ, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL <ref> [KU93] </ref>. Though reservations about mixing object-orientedness with declarativeness continue [Ull91], we feel that the bridge between the two styles of programming is getting stronger. <p> in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL <ref> [KU93] </ref>, A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
Reference: [KW89] <author> Michael Kifer and James Wu. </author> <title> A logic for object-oriented logic programming (Maier's O-logic revisited). </title> <booktitle> In Proceedings of the Eighth Symposium on Principles of Database Systems (PODS), </booktitle> <address> Philadelphia, PA, </address> <year> 1989. </year>
Reference-contexts: There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92]. Logics of objects have been proposed: O-Logic <ref> [KW89] </ref> and F-Logic [KLW90]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS [WLH90], CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92].
Reference: [LVZ92] <author> Rosana S. G. Lanzelotte, Patrick Valduriez, and Mohamed Zat. </author> <title> Optimization of object-oriented recursive queries using cost-controlled strategies. </title> <booktitle> In Proceedings of ACM SIGMOD 1992 International Conference on Management of Data, </booktitle> <pages> pages 256-265, </pages> <address> San Diego, CA, </address> <month> June 2-5 </month> <year> 1992. </year>
Reference-contexts: we must assume simply that all external collection references can be treated as if they were extensional database lookups. (A similar assumption is made by the CORAL system [RSS92].) 6 A Composer Example We illustrate several of the features of SWORD using an example of a composer database originally from <ref> [LVZ92] </ref>. The database has four classes, namely person, composer, composition, and instrument , related as shown in The notation "set&lt;composition*&gt; works" means that the type of attribute works is a set of pointers to objects of class composition.
Reference: [MPR90] <author> Inderpal Singh Mumick, Hamid Pirahesh, and Raghu Ramakrishnan. </author> <title> The magic of duplicates and aggregates. </title> <booktitle> In Proceedings of the Sixteenth International Conference on Very Large Databases (VLDB), </booktitle> <pages> pages 264-277, </pages> <address> Brisbane, Australia, </address> <month> August 13-16 </month> <year> 1990. </year>
Reference-contexts: The term avgSal AVG (S) in the select clause then computes the average S value amongst all the tuples in each group. 2 The syntax of the groupby clause is borrowed from SQL. The SWORD language will permit monotonic aggregation <ref> [MPR90] </ref> and modularly stratified aggregation [Ros90]. Composition of Views and Negation A view can be used to define other views. <p> We allow mutually recursive views to be defined within the one source file. The semantics of the view is defined as the least fixpoint of an operator corresponding to the well-founded semantics [VGRS91] extended to handle multirelations. We allow monotonic aggregation <ref> [MPR90] </ref>, modularly stratified aggregation, and modularly stratified negation [Ros90]. Views in one source file may refer to views defined in another file.
Reference: [MR93] <author> Inderpal Singh Mumick and Kenneth A. Ross. Noodle: </author> <title> A language for declarative querying in an object-oriented database. </title> <booktitle> In Proceedings of the DOOD93, </booktitle> <address> Phoenix, AZ, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: We further strengthen this bridge between declarative and object-oriented databases by developing a declarative query language for object-oriented databases, and shifting the burden of optimizing access for queries expressed in the declarative language to the database system. The declarative language is based on the Noodle language of <ref> [MR93] </ref>, modified for better integration with the O++ procedural language of the ODE database system [AG89]. We describe the design and implementation of SWORD. Outline The SWORD declarative language borrows from deductive and object-oriented technology. Our language has recursion and is rule based. <p> We give a walk-through, without attempting to give a complete description. The language is based on the language Noodle described in <ref> [MR93] </ref>, but with syntactic modifications to make it more compatible with C++/O++. The declarative sublanguage should be thought of as a declarative query language. <p> [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle <ref> [MR93] </ref>. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
Reference: [MR93] <author> Inderpal Singh Mumick and Kenneth A. Ross. Noodle: </author> <title> A language for declarative querying in an object-oriented database. </title> <booktitle> In Proceedings of the DOOD93, </booktitle> <address> Phoenix, AZ, </address> <month> December </month> <year> 1993. </year> <month> 20 </month>
Reference-contexts: We further strengthen this bridge between declarative and object-oriented databases by developing a declarative query language for object-oriented databases, and shifting the burden of optimizing access for queries expressed in the declarative language to the database system. The declarative language is based on the Noodle language of <ref> [MR93] </ref>, modified for better integration with the O++ procedural language of the ODE database system [AG89]. We describe the design and implementation of SWORD. Outline The SWORD declarative language borrows from deductive and object-oriented technology. Our language has recursion and is rule based. <p> We give a walk-through, without attempting to give a complete description. The language is based on the language Noodle described in <ref> [MR93] </ref>, but with syntactic modifications to make it more compatible with C++/O++. The declarative sublanguage should be thought of as a declarative query language. <p> [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle <ref> [MR93] </ref>. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
Reference: [MSOP86] <author> David Maier, J. Stein, A. Otis, and A. Purdy. </author> <title> Development of an object-oriented DBMS. </title> <booktitle> In OOPSLA 1986 Proceedings, </booktitle> <pages> pages 472-482, </pages> <year> 1986. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90].
Reference: [OHMS92] <author> Jack Orenstein, Sam Haradhvala, Benson Margulies, and Don Sakahara. </author> <title> Query processing in the objectstore database system. </title> <booktitle> In Proceedings of ACM SIGMOD 1992 International Conference on Management of Data, </booktitle> <pages> pages 403-412, </pages> <address> San Diego, CA, </address> <month> June 2-5 </month> <year> 1992. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90].
Reference: [PDR91] <author> Geoff Phipps, Marcia Derr, and Kenneth A. Ross. </author> <title> Glue-Nail: A deductive database system. </title> <booktitle> In Proceedings of ACM SIGMOD 1991 International Conference on Management of Data, </booktitle> <pages> pages 308-317, </pages> <address> Denver, CO, </address> <month> May 29-31 </month> <year> 1991. </year>
Reference: [Ros90] <author> Kenneth A. Ross. </author> <title> Modular stratification and magic sets for datalog programs with negation. </title> <booktitle> In Proceedings of the Ninth Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 161-171, </pages> <address> Nashville, TN, </address> <month> April 2-4 </month> <year> 1990. </year>
Reference-contexts: The term avgSal AVG (S) in the select clause then computes the average S value amongst all the tuples in each group. 2 The syntax of the groupby clause is borrowed from SQL. The SWORD language will permit monotonic aggregation [MPR90] and modularly stratified aggregation <ref> [Ros90] </ref>. Composition of Views and Negation A view can be used to define other views. <p> It succeeds if W is not a member of the collection employee. The SWORD language permits modularly stratified negation <ref> [Ros90] </ref>. C++ Functions EXAMPLE 3.3 Continuing with the employee example, let manager be a subclass of employees, defined as: persistent class manager : public manager f string mgmt level; g; We define a view relation of senior employees. <p> We allow mutually recursive views to be defined within the one source file. The semantics of the view is defined as the least fixpoint of an operator corresponding to the well-founded semantics [VGRS91] extended to handle multirelations. We allow monotonic aggregation [MPR90], modularly stratified aggregation, and modularly stratified negation <ref> [Ros90] </ref>. Views in one source file may refer to views defined in another file. However, if mutual recursion occurs between two or more different source files, then we do not guarantee that the well-founded semantics of the union of the source files will be computed.
Reference: [Ros92] <author> Kenneth A. Ross. </author> <title> Relations with relation names as arguments: Algebra and calculus. </title> <booktitle> In Proceedings of the Eleventh Symposium on Principles of Database Systems (PODS), </booktitle> <pages> pages 346-353, </pages> <address> San Diego, CA, </address> <month> June 2-4 </month> <year> 1992. </year>
Reference-contexts: composition gives an identifier for a set of instruments used in the composition. persistent class person f //person is a subclass of individual string name; date birthdate; g; 1 Strictly speaking, if we allow variables as names of objects and collections, then we need to use the ff operator of <ref> [Ros92] </ref> in addition to joins. 14 persistent class composer : public person f //composer is a subclass of person persistent composer* master ; set&lt;composition*&gt; works; g; persistent class composition f string title; persistent composer* author ; set&lt;instrument *&gt; instruments; g; persistent class instrument f string name; string family; g; assuming primitive
Reference: [RSS92] <author> Raghu Ramakrishnan, Divesh Srivastava, and S. Sudarshan. </author> <title> CORAL: Control, relations and logic. </title> <booktitle> In Proceedings of the Eighteenth International Conference on Very Large Databases (VLDB), </booktitle> <pages> pages 238-250, </pages> <address> Vancouver, Canada, </address> <month> August 23-27 </month> <year> 1992. </year>
Reference-contexts: In order to be able to perform separate compilation, we must assume simply that all external collection references can be treated as if they were extensional database lookups. (A similar assumption is made by the CORAL system <ref> [RSS92] </ref>.) 6 A Composer Example We illustrate several of the features of SWORD using an example of a composer database originally from [LVZ92].
Reference: [SRSS93] <author> Divesh Srivastava, Raghu Ramakrishnan, Praveen Seshadri, and S. Sudarshan. </author> <title> Coral++: Adding object-orientation to a logic database language. </title> <booktitle> In Proceedings of the Nineteenth International Conference on Very Large Databases (VLDB), </booktitle> <address> Dublin, Ireland, </address> <month> August 24-27 </month> <year> 1993. </year>
Reference-contexts: Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ <ref> [SRSS93] </ref>, and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
Reference: [Str91] <author> Bjarne Stroustrup. </author> <title> The C + + Programming Language (Second Edition). </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mas-sachusetts, USA, </address> <year> 1991. </year>
Reference-contexts: When 16 a view v1 is referenced inside another view definition v2, we also have the option of in-lining v1 to optimize computation of v2. The exact choice depends upon the optimizer. The C ++ <ref> [Str91] </ref> data model, on which the ODE data model is based, does not view classes as objects. However, ODE stores a catalog of all classes, along with attributes of interest for the class.
Reference: [UD93] <author> Susan D. Urban and Suzanne W. Dietrich. </author> <title> A deductive, object-oriented model as a formal framework for active database environments. </title> <editor> In Inderpal Singh Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 101-110, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year>
Reference-contexts: COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch <ref> [UD93] </ref>, Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
Reference: [Ull88] <author> Jeffrey D. Ullman. </author> <booktitle> Principles of Database and Knowledge-Base Systems, </booktitle> <volume> Volume 1. </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: Object-oriented databases developed in parallel, offering significantly increased data modeling capabilities, but moved back to a procedural query language, and shifted the access optimization problem back to the user <ref> [Ull88] </ref>. Writing queries in a declarative query language is easier and faster than writing queries in a procedural query language. When using a declarative query language, the amount of code and the time to write the code is significantly reduced.
Reference: [Ull91] <author> Jeffrey D. Ullman. </author> <title> A comparison between deductive and object-oriented database systems. </title> <booktitle> In Proceedings of the DOOD91, </booktitle> <pages> pages 263-277, </pages> <address> Germany, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. Though reservations about mixing object-orientedness with declarativeness continue <ref> [Ull91] </ref>, we feel that the bridge between the two styles of programming is getting stronger. <p> XSQL also uses the SQL dot notation for path expressions, but the expressions are in F-logic, and the system can interpret the expressions. Ullman <ref> [Ull91] </ref> presents two problems in adding declarativeness to an object-oriented database: (1) Duplicate elimination in presence of object identifiers is tricky. Duplicate elimination is often value-based, not object-based. If every derived object is given a new object identifier, duplicate elimination is not feasible.
Reference: [VGRS91] <author> A. Van Gelder, K. A. Ross, and J. S. Schlipf. </author> <title> Unfounded sets and well-founded semantics for general logic programs. </title> <journal> JACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year>
Reference-contexts: We allow mutually recursive views to be defined within the one source file. The semantics of the view is defined as the least fixpoint of an operator corresponding to the well-founded semantics <ref> [VGRS91] </ref> extended to handle multirelations. We allow monotonic aggregation [MPR90], modularly stratified aggregation, and modularly stratified negation [Ros90]. Views in one source file may refer to views defined in another file.
Reference: [WLH90] <author> Kevin Wilkinson, Peter Lyngbaek, and Waqar Hasan. </author> <title> The Iris architecture and implementation. </title> <journal> ACM Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1) </volume> <pages> 63-75, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: Thus, there is a real need for combining declarative and procedural styles of programming in an object-oriented database system. There has been a lot of work done on object-oriented databases, and several systems have reached the marketplace <ref> [MSOP86, WLH90, AG89, Cat91, BDK92, OHMS92] </ref>. Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. <p> Logics of objects have been proposed: O-Logic [KW89] and F-Logic [KLW90]. Many of the object-oriented systems provide a declarative SQL like query language: OSQL in IRIS <ref> [WLH90] </ref>, CQL++ in ODE [DGJ92], Reloop [CDLR89] and the O 2 query language ([BDK92],Chapter 11) in O 2 , and XSQL in UniSQL [KKS92]. Recursive query languages have also been developed: COL [AG88], IQL [AK89], Logres [CCCR + 90], and CDOL [KU93]. <p> after schema changes that affect the queries. 8 Related Work Several efforts to integrate declarative querying in object-oriented database system have been made, and several others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system <ref> [WLH90] </ref>, Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E [YTM93], CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle.
Reference: [YTM93] <author> Kazumasa Yokota, Hiroshi Tsuda, and Yukihiro Morita. </author> <title> Specific features of a deductive object-oriented database language QU IX OT E. </title> <editor> In Inderpal Singh Mumick, editor, </editor> <booktitle> Proceedings of the Workshop on Combining Declarative and Object-Oriented Databases, </booktitle> <pages> pages 89-99, </pages> <address> Washington, DC, </address> <month> May 29 </month> <year> 1993. </year> <month> 21 </month>
Reference-contexts: others are in progress [Abi89, Bee89], COL [AG88], Reloop [CDLR89], IQL [AK89], the O 2 query language ([BDK92], Chapter 11), OSQL in the IRIS system [WLH90], Logres [CCCR + 90], F-Logic [KLW90], HiLog [CKW92], Complex [GLR92], XSQL [KKS92], CQL++ [DGJ92], ZQL [C++] [Bla93], Orlog [JL93], 17 QU IX OT E <ref> [YTM93] </ref>, CDOL [KU93], A DOOD Ranch [UD93], Coral++ [SRSS93], and Noodle [MR93]. The declarative sublanguage of SWORD is based on Noodle. In this section, we compare the salient features of SWORD with several of the above systems. SWORD supports relations with tuples that do not have object identifiers.
References-found: 37

