URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/birkedal/pub/proposal.a4.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/project/fox/mosaic/people/birkedal/ltc/
Root-URL: http://www.cs.cmu.edu
Title: Developing Theories of Types and Computability  
Author: Lars Birkedal Committee Members: D.S. Scott, S. Brookes, J.C. Reynolds, G. Rosolini, 
Degree: Thesis Proposal  
Address: Genova, Italy  
Date: April 21, 1998  
Affiliation: School of Computer Science Carnegie Mellon University  Carnegie Mellon University S. Awodey, Carnegie Mellon University  Carnegie Mellon University  Carnegie Mellon University  Universita di  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Abadi and G.D. Plotkin. </author> <title> A per model of polymorphism and recursive types. </title> <booktitle> In 5th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 355-365. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1990. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin <ref> [1] </ref>, among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986.
Reference: [2] <author> S. Abramsky and A. Jung. </author> <title> Domain theory. </title> <editor> In S. Abramsky, Dov M. Gabbay, and T.S.E. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> volume 3, </volume> <pages> pages 1-168. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: Scott's domain theory, (and the many variations proposed and studied; see <ref> [2] </ref> and [75] for recent introductions with references) has been especially successful in allowing for recursive definitions of types (i.e., solutions to domain equations) but at the expense of introducing a complex structure of "partial elements" in order to have solutions to fixed-point equations in the domains. <p> First steps in the direction of such a synthetic theory of domains were taken by McCarty [42] who in 1984 showed that the 1 For recent comprehensive treatments of domain theory we refer the reader to <ref> [2] </ref> and [75].
Reference: [3] <author> R. Amadio, K.B. Bruce, and G. Longo. </author> <title> The finitary projection model for second order lambda calculus and solutions to higher order domain equations. </title> <booktitle> In Proceedings Symposium on Logic in Computer Science, </booktitle> <pages> pages 122-130, </pages> <address> Cambridge, Massachusetts, </address> <year> 1986. </year>
Reference-contexts: Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo <ref> [3] </ref> devised a model using fini-tary projections in 1986.
Reference: [4] <author> A. Bagchi and C. Wells. </author> <title> Graph-based logic and sketches i: The general framework. </title> <type> Manuscript, </type> <month> April </month> <year> 1997. </year>
Reference-contexts: But for more general classes of algebras, e.g., the essentially algebraic ones, where equations may be only partially defined (on totally equationally defined subspaces), the answer is not so immediate. Sketches are a very general tool to specify algebras and there are some recent proposals <ref> [39, 4, 5] </ref> for reasoning calculi (a proof theory) for sketches which may be relevant to get a general formal framework for specifying and reasoning about algebras. Questions include: 1. What is an appropriate calculus of sketches for our applications? 2.
Reference: [5] <author> A. Bagchi and C. Wells. </author> <title> Graph-based logic and sketches ii: Finite product categories and equational logic. </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: But for more general classes of algebras, e.g., the essentially algebraic ones, where equations may be only partially defined (on totally equationally defined subspaces), the answer is not so immediate. Sketches are a very general tool to specify algebras and there are some recent proposals <ref> [39, 4, 5] </ref> for reasoning calculi (a proof theory) for sketches which may be relevant to get a general formal framework for specifying and reasoning about algebras. Questions include: 1. What is an appropriate calculus of sketches for our applications? 2.
Reference: [6] <author> H.P. Barendregt. </author> <title> The Lambda Calculus. Its Syntax and Semantics, </title> <booktitle> volume 103 of Studies in Logic and the Foundations of Mathematics. </booktitle> <pages> North-Holland, </pages> <note> revised edition, second printing edition, </note> <year> 1985. </year>
Reference-contexts: We refer to this PCA as K 1 , or Kleene's first model. 5 Example 3.2. Let fl denote the set of terms of the untyped lambda calculus over a countably infinite set of variables. Let fl=fi be its quotient modulo fi-equality (see, e.g., <ref> [6] </ref>) with the induced application. This defines a total combinatory algebra: for K and S we may take the equivalence classes of the lambda terms x; y:x and x; y; z:xz (yz). Example 3.3. <p> Example 3.3. Let fl denote the set of terms of the untyped lambda calculus over a countably infinite set of variables and let fl 0 fl be the set of closed terms. Recall from <ref> [6, Definition 8.3.9] </ref> that a term M 2 fl is in head normal form (hnf) if M is of the form M x 1 ; : : : ; x n : xM 1 M m with n; m 0. The head variable of this M is x.
Reference: [7] <author> A. Bauer. </author> <title> Topology and computability. </title> <type> Thesis Proposal, </type> <month> April </month> <year> 1998. </year>
Reference-contexts: By employing this modal logic, one will be able to reason about familiar types and their constructs, 2 e.g., products and function spaces, as well as their effective counterparts. Aspects of this program in topology and analysis are going to be the focus of the thesis of Andrej Bauer <ref> [7] </ref>. The remainder of this proposal is organized as follows. First we give a brief historical overview in Section 2 and then in Section 3 we recall the notion of a partial combinatory algebra. <p> For instance, for symmetry, we have to show that there exists a realizer in P which, for all [x 1 ] and [x 2 ] in I, realizes the formula [x 1 ] I [x 2 ] [x 2 ] I [x 1 ]: 9 See <ref> [7] </ref> for a host of examples. 10 Categorically speaking there is a full and faithful embedding of the category PER (P) into the topos RT (P N) 18 But surely the identity x:x is such a realizer.
Reference: [8] <author> M.J. Beeson. </author> <title> Foundations of Constructive Mathematics. Number 6 in Ergebnisse der Mathematik and ihrer Grenzgebiete. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: enumerated sets is a full subcategory of the category of partial equivalence relations and that the effectively given domains are characterized by Ershov as a full subcategory of the category of enumerated sets. 4 More detailed treatments of partial combinatory algebras can for example be found in [35] or in <ref> [8] </ref>. Combinatory completeness is then obtained by taking a = x 1 x n :M . <p> What are the connections between our ]-modality and Moggi's com putational lambda calculus [45, 46]? 14 Actually, we have not given an entirely formal axiomatic description of PCA's but it is well-known how to do so <ref> [42, 8] </ref>. 21 Recursive Domain Equations I plan to investigate how to solve recur-sive domain equations on PER (A) for general PCA's A and in particular for the PCA P. Questions include: 1.
Reference: [9] <author> L. Birkedal, A. Carboni, G. Rosolini, and D.S. Scott. </author> <title> Type theory via exact categories. </title> <booktitle> In Proceedings of the 13th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <year> 1998. </year> <title> To Appear. 16 The free exact category of which the category of partial equivalence relations is a reflective subcategory. </title> <type> 26 </type>
Reference-contexts: What is an appropriate calculus of sketches for our applications? 2. How can such a calculus be combined with our logic to get a smooth workable formal theory? In particular, how can we specify and reason about algebras in context? PER's versus Exact Categories In a recent paper <ref> [9] </ref> we have shown that categories of partial equivalence relations may be understood as reflective subcategories of so-called free exact categories.
Reference: [10] <author> L. Birkedal and R. Harper. </author> <title> Constructing interpretations of recursive types in an operational setting (summary). </title> <booktitle> In Theoretical Aspects of Computer Science, </booktitle> <year> 1997. </year>
Reference-contexts: For specific partial combinatory algebras such as the graph model and term models, how does the abstract notion of domain relate to other studied notions of domains (like the pointed, complete partial equiva lence relations)? 3. In <ref> [10] </ref> Harper and I studied operational notions of equivalence for an ML-like language with recursive types. Crucial use was made of pointed complete partial equivalence relations over the operational semantics, using an operational notion of approximation relation. <p> Crucial use was made of pointed complete partial equivalence relations over the operational semantics, using an operational notion of approximation relation. Now an obvious question is whether we can construct a PCA such that the category of PER's over it includes the PER's studied in <ref> [10] </ref> and such that the general notion of domain in the category of PER's coincide with the pointed complete PER's used in [10]. 4. How does the operational ordering relate to the natural ordering for well-complete objects? 23 5. <p> Now an obvious question is whether we can construct a PCA such that the category of PER's over it includes the PER's studied in <ref> [10] </ref> and such that the general notion of domain in the category of PER's coincide with the pointed complete PER's used in [10]. 4. How does the operational ordering relate to the natural ordering for well-complete objects? 23 5. What is the relation between recursive domain equations in the cate- gory of well-complete objects and the interpretation given in [10]? 6. <p> in the category of PER's coincide with the pointed complete PER's used in <ref> [10] </ref>. 4. How does the operational ordering relate to the natural ordering for well-complete objects? 23 5. What is the relation between recursive domain equations in the cate- gory of well-complete objects and the interpretation given in [10]? 6. What does the abstract reasoning principles express in terms of the operational semantics? Answering these questions will give a more abstract account of [10] and more generally, it will allow the force of an ambient topos to be brought to work on models based on operational semantics. <p> What is the relation between recursive domain equations in the cate- gory of well-complete objects and the interpretation given in <ref> [10] </ref>? 6. What does the abstract reasoning principles express in terms of the operational semantics? Answering these questions will give a more abstract account of [10] and more generally, it will allow the force of an ambient topos to be brought to work on models based on operational semantics.
Reference: [11] <author> V. Breazu-Tannen and T. Coquand. </author> <title> Extensional models for polymor-phism. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 59(1-2):85-114, </address> <month> July </month> <year> 1988. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand <ref> [11] </ref>, Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986.
Reference: [12] <author> G.L. Cattani, M. P. Fiore, and G. Winskel. </author> <title> A theory of recursive domain equations with applications to concurrency. </title> <booktitle> BRICS Report Series RS-97-35, BRICS, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations. Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations <ref> [12] </ref>. A later method from 1976, the method of retracts, also due to Scott [68], expressed the solution of a domain equation as the set of fixed points of an idempotent function on a "universal" domain.
Reference: [13] <author> T. Coquand, C.A. Gunter, and G. Winskel. </author> <title> Domain theoretic models of polymorphism. </title> <journal> Information and Computation, </journal> <volume> 81 </volume> <pages> 123-167, </pages> <year> 1989. </year>
Reference-contexts: Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986. Also in 1986, Girard used qualitative domains and stable functions [24], and in 1989 Coquand, Gunter and Winskel considered models based on Scott domains <ref> [13] </ref>. 2 In 1987, Seely [72] gave an abstract categorical definition of what constitutes a model of the polymorphic lambda calculus, as did Ma and Reynolds [38] in 1992. Ma and Reynolds also gave an abstract definition of what constitutes a relationally parametric model.
Reference: [14] <author> M. Fiore. </author> <title> Axiomatic Domain Theory in Categories of Partial Maps. </title> <booktitle> Distinguished Dissertations in Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1996. </year>
Reference-contexts: The success of this program was only qualified, however, as the verification of properties of subcategories of Eff proved much harder than expected. An alternative "axiomatic domain theory" was then proposed, see, e.g. <ref> [19, 14] </ref>, but its model theory has also faced some technical difficulties and it does not combine domains with more general types. <p> For the axiomatic theory of domains, the already mentioned work by Freyd [19, 18, 20] on algebraically compact categories has been crucial. Simpson [73] generalized this work further in 1992 and Fiore <ref> [14] </ref> gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. The work of Fiore, Plotkin and Power on complete cuboidal sets in one of the most recent (1997) works on axiomatic domain theory [16] and more references can be found therein.
Reference: [15] <author> M. Fiore, A. Jung, E. Moggi, P. O'Hearn, J. Riecke, G. Rosolini, and I. Stark. </author> <title> Domains and denotational semantics: History, accomplishments and open problems. </title> <journal> Bulletin of the EATCS, </journal> <volume> 59 </volume> <pages> 227-256, </pages> <month> jun </month> <year> 1996. </year> <note> Also published as Technical Report CSR-96-2, </note> <institution> University of Birm-ingham School of Computer Science. </institution>
Reference-contexts: Also the notes of Plotkin are recommended [51, 52] as is the overview article <ref> [15] </ref>. 2 For a further selection of more recent work, see [29] and the handbook article by Gunter [26]. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini [62] who gave an abstract logical definition of domain, the so-called -sets.
Reference: [16] <author> M. Fiore, G. Plotkin, and J. </author> <title> Power. Complete cuboidal sets in axiomatic domain theory. </title> <booktitle> In Proceedings of the 12th Annual IEEE Symposium on Logic in Computer Science. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: Simpson [73] generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. The work of Fiore, Plotkin and Power on complete cuboidal sets in one of the most recent (1997) works on axiomatic domain theory <ref> [16] </ref> and more references can be found therein. At the end of the seventies, Scott promoted the idea of models of intu-itionistic higher-order logic in which all functions are continuous and in 1982 Hyland [30] presented the effective topos as one such model.
Reference: [17] <author> M. Fiore and G. Rosolini. </author> <title> The category of cpos from a synthetic viewpoint. </title> <editor> In S. Brookes and M. Mislove, editors, </editor> <booktitle> Electronic Notes in Theoretical Computer Science. Mathematical Foundations of Programming Semantics. Thirteenth Annual Conference, </booktitle> <year> 1997. </year>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley [35], Rosolini [63], Reus [53], Longley and Simpson [36], Fiore and Rosolini <ref> [17] </ref>, Reus and Streicher [54]. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A fi A ! A such that there exists two distinct elements K;
Reference: [18] <author> P.J. Freyd. </author> <title> Algebraically complete categories. </title> <editor> In A. Carboni, M. C. Pedicchio, and G. Rosolini, editors, </editor> <booktitle> Category Theory. Proceedings, Como 1990, volume 1488 of Lecture Notes in Mathematics, </booktitle> <pages> pages 95-104. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd <ref> [19, 18, 20] </ref> abstracted this work further to give an axiomatic categorical account of recursive domain equations. Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations [12]. <p> All this is also described in the language of fibred category theory in a forthcoming book by Jacobs [34]. For the axiomatic theory of domains, the already mentioned work by Freyd <ref> [19, 18, 20] </ref> on algebraically compact categories has been crucial. Simpson [73] generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. <p> Longley and Simpson give a suggestion for how to proceed at the end of [36]. Briefly, Longley and Simpson's proposal is to view the well-complete objects as a suitably complete internal category in the realizability topos and then use the theory of Freyd concerning algebraically compact categories <ref> [19, 18, 20] </ref> to reduce the solution of mixed variance domain equations to covariant domain equations. 4.
Reference: [19] <author> P.J. Freyd. </author> <title> Recursive types reduced to inductive types. </title> <booktitle> In Proceedings of the fifth IEEE Conference on Logic in Computer Science, </booktitle> <pages> pages 498-507, </pages> <year> 1990. </year>
Reference-contexts: The success of this program was only qualified, however, as the verification of properties of subcategories of Eff proved much harder than expected. An alternative "axiomatic domain theory" was then proposed, see, e.g. <ref> [19, 14] </ref>, but its model theory has also faced some technical difficulties and it does not combine domains with more general types. <p> The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd <ref> [19, 18, 20] </ref> abstracted this work further to give an axiomatic categorical account of recursive domain equations. Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations [12]. <p> All this is also described in the language of fibred category theory in a forthcoming book by Jacobs [34]. For the axiomatic theory of domains, the already mentioned work by Freyd <ref> [19, 18, 20] </ref> on algebraically compact categories has been crucial. Simpson [73] generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. <p> Longley and Simpson give a suggestion for how to proceed at the end of [36]. Briefly, Longley and Simpson's proposal is to view the well-complete objects as a suitably complete internal category in the realizability topos and then use the theory of Freyd concerning algebraically compact categories <ref> [19, 18, 20] </ref> to reduce the solution of mixed variance domain equations to covariant domain equations. 4.
Reference: [20] <author> P.J. Freyd. </author> <title> Remarks on algebraically compact categories. </title> <editor> In M. P. Fourman, P.T. Johnstone, and A. M. Pitts, editors, </editor> <booktitle> Applications of Categories in Computer Science. Proceedings of the LMS Symposium, Durham 1991, volume 177 of London Mathematical Society Lecture Note Series, </booktitle> <pages> pages 95-106. </pages> <publisher> Cambridge University Press, </publisher> <year> 1991. </year>
Reference-contexts: The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd <ref> [19, 18, 20] </ref> abstracted this work further to give an axiomatic categorical account of recursive domain equations. Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations [12]. <p> All this is also described in the language of fibred category theory in a forthcoming book by Jacobs [34]. For the axiomatic theory of domains, the already mentioned work by Freyd <ref> [19, 18, 20] </ref> on algebraically compact categories has been crucial. Simpson [73] generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. <p> Longley and Simpson give a suggestion for how to proceed at the end of [36]. Briefly, Longley and Simpson's proposal is to view the well-complete objects as a suitably complete internal category in the realizability topos and then use the theory of Freyd concerning algebraically compact categories <ref> [19, 18, 20] </ref> to reduce the solution of mixed variance domain equations to covariant domain equations. 4.
Reference: [21] <author> P.J. Freyd, E.P. Robinson, and G. Rosolini. </author> <title> Dinaturality for free. </title> <editor> In M. P. Fourman, P.T. Johnstone, and A. M. Pitts, editors, </editor> <booktitle> Applications of Categories in Computer Science. Proceedings of the LMS Symposium, Durham 1991, volume 177 of London Mathematical Society Lecture Note Series, </booktitle> <pages> pages 107-118. </pages> <publisher> Cambridge University Press, </publisher> <year> 1991. </year>
Reference-contexts: These exact categories have some better categorical properties than the corresponding category of PER's but we need a better understanding of how this may be applied to for example programming language semantics. Thus I plan to investigate the following questions: in <ref> [21] </ref>, where it was shown that under certain conditions, satisfied in the case of Kleene realizability, the above shown type does give an initial algebra. These results can possibly be generalized to other PCA's. 25 1.
Reference: [22] <author> P.J. Freyd and A. Scedrov. </author> <title> Some semantic aspects of polymorphic lambda calculus. </title> <booktitle> In Proceedings Symposium on Logic in Computer Science, </booktitle> <pages> pages 315-319, </pages> <address> Ithaca, New York, </address> <year> 1987. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov <ref> [22] </ref>, Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain.
Reference: [23] <author> J.-Y. Girard. </author> <title> Interpretation fonctionelle et elimination des coupures de l'arithmetique d'ordre superieur. </title> <institution> These d'Etat, Universite Paris VII, </institution> <year> 1972. </year>
Reference-contexts: 1 Introduction Domain Theory, type theory (both in the style of Martin-Lof [40, 41] and in the polymorphic style of Girard/Reynolds <ref> [23, 56] </ref>), and topos theory (both in the topological/sheaf-theoretic treatments and in the realizabil-ity approach going back to the early work of Kleene) have attempted to improve on set theory by providing a large suite of closure conditions on domains/types/objects as well as a far-reaching logic of properties emphasizing the computable/constructive <p> In 1984, Winskel and Larsen [82] developed a method using Scott's information systems [70]. This 3 approach is also described in recent textbook by Winskel [81]. 1 Going back to suggestions of Kreisel, partial equivalence relations have been used to give models of polymorphic types by Girard in 1972 <ref> [23] </ref>; Troel-stra in 1973 [78] and Scott also emphasized the importance of PER's in 1976 [68].
Reference: [24] <author> J.-Y. Girard. </author> <title> The system F of variable types, fifteen years later. </title> <journal> Theoretical Computer Science, </journal> <volume> 45(2) </volume> <pages> 159-192, </pages> <year> 1986. </year>
Reference-contexts: Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986. Also in 1986, Girard used qualitative domains and stable functions <ref> [24] </ref>, and in 1989 Coquand, Gunter and Winskel considered models based on Scott domains [13]. 2 In 1987, Seely [72] gave an abstract categorical definition of what constitutes a model of the polymorphic lambda calculus, as did Ma and Reynolds [38] in 1992.
Reference: [25] <author> C.A. Gunter. </author> <title> Semantics of Programming Languages. Structures and Techniques. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: This method comes in three flavors, depending upon whether one uses arbitrary idempotent functions (called retractions), or restricts to projections or closures. It is also described in a recent textbook by Gunter <ref> [25] </ref>. In 1984, Winskel and Larsen [82] developed a method using Scott's information systems [70].
Reference: [26] <author> C.A. Gunter. </author> <title> The semantics of types in programming languages. </title> <editor> In S. Abramsky, Dov M. Gabbay, and T.S.E. Maibaum, editors, </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> volume 3, </volume> <pages> pages 395-475. </pages> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: Also the notes of Plotkin are recommended [51, 52] as is the overview article [15]. 2 For a further selection of more recent work, see [29] and the handbook article by Gunter <ref> [26] </ref>. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini [62] who gave an abstract logical definition of domain, the so-called -sets.
Reference: [27] <author> C. Hermida and B. Jacobs. </author> <title> An algebraic view of structural induction. </title> <editor> In L. Pacholski and J. Tiuryn, editors, </editor> <booktitle> Proceedings of Computer Science Logic 1994, number 933 in LNCS, </booktitle> <pages> pages 412-426, </pages> <year> 1994. </year>
Reference: [28] <author> C. Hermida and B. Jacobs. </author> <title> Structural induction and coinduction in a fi-brational setting. </title> <type> Unpublished Manuscript, </type> <note> full version of [27], Septem-ber 1996. </note>
Reference-contexts: The investigation will be based on some mixed induction and coinduction principles for recursively defined domains developed by Pitts [50] and reinterpreted by Hermida and Jacobs <ref> [28] </ref> in a categorical logical setting, with a particular emphasis on allowing reasoning with parameters (in context). One goal is to give a model of FPC (a meta-language of Plotkin with recursive types) with a good logic of computable functions.
Reference: [29] <editor> G. Huet, editor. </editor> <booktitle> Logical Foundations of Functional Programming. University of Texas at Austin Year of Programming. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1990. </year> <month> 28 </month>
Reference-contexts: Also the notes of Plotkin are recommended [51, 52] as is the overview article [15]. 2 For a further selection of more recent work, see <ref> [29] </ref> and the handbook article by Gunter [26]. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini [62] who gave an abstract logical definition of domain, the so-called -sets.
Reference: [30] <author> J.M.E. Hyland. </author> <title> The effective topos. In A.S. </title> <editor> Troelstra and D. van Dalen, editors, </editor> <booktitle> The L.E.J. Brouwer Centenary Symposium, volume 110 of Studies in Logic and The Foundations of Mathematics, </booktitle> <pages> pages 165-216, </pages> <address> Amsterdam, 1982. </address> <publisher> North-Holland. </publisher>
Reference-contexts: After a complex history, topos theory proved to be (from one point of view) a version of higher-order intuitionistic logic. Then after the introduction of the so-called effective topos, Eff , by Hyland, Johnstone and Pitts <ref> [33, 30] </ref> (building on previous work on realizability), several categories of effectively presented domains were shown to be full and faithful subcategories of Eff [42]. The use of Eff to model type theory was also extensively studied. <p> At the end of the seventies, Scott promoted the idea of models of intu-itionistic higher-order logic in which all functions are continuous and in 1982 Hyland <ref> [30] </ref> presented the effective topos as one such model. Scott's idea was to use such models to give a simple description of domains as certain kinds of constructive sets. <p> To prove this one uses Schonfinkels abstraction rules to define functional abstraction: x:x = I = SKK x:M = KM if x is not free in M x:M N = S (x:M )(x:N ): 3 Rosolini pointed out to me that this was already clear from the work of Hyland <ref> [30] </ref> who showed that the category of partial equivalence relations is fully embedded in the effective topos, using that Ershov's category of enumerated sets is a full subcategory of the category of partial equivalence relations and that the effectively given domains are characterized by Ershov as a full subcategory of the
Reference: [31] <author> J.M.E. Hyland. </author> <title> A small complete category. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 40(2) </volume> <pages> 135-165, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland <ref> [31] </ref>, Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. <p> Questions include: 1. Do all polynomial functors have initial algebras and final coalgebras? The answer here is yes using the adjoint functor theorem <ref> [31] </ref>. But is there a difference between doing this in RT (A) and RT (A ] )? To understand this we need to have a better understanding of how the solutions obtained by adjoint functor theorem are constructed. <p> Initial algebras can thus be obtained by constructing the small (internal) category of algebras for the monad and then use the internal adjoint functor theorem to get the existence of initial algebras. This approach is mentioned in <ref> [31] </ref>. But for more general classes of algebras, e.g., the essentially algebraic ones, where equations may be only partially defined (on totally equationally defined subspaces), the answer is not so immediate.
Reference: [32] <author> J.M.E. Hyland. </author> <title> First steps in synthetic domain theory. </title> <editor> In A. Car-boni, M.C. Pedicchio, and G. Rosolini, editors, </editor> <booktitle> Proceedings of the 1990 Como Category Theory Conference, volume 1488 of Lecture Notes in Mathematics, </booktitle> <pages> pages 131-156. </pages> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: This work was followed by work of Hyland <ref> [32] </ref> and Taylor [77], who both gave axioms for domain theory, and by Phoa [47].
Reference: [33] <author> J.M.E. Hyland, P.T. Johnstone, and A.M. Pitts. </author> <title> Tripos theory. </title> <booktitle> Mathematical Proceedings of the Cambridge Philosophical Society 88, </booktitle> <year> 1980. </year>
Reference-contexts: After a complex history, topos theory proved to be (from one point of view) a version of higher-order intuitionistic logic. Then after the introduction of the so-called effective topos, Eff , by Hyland, Johnstone and Pitts <ref> [33, 30] </ref> (building on previous work on realizability), several categories of effectively presented domains were shown to be full and faithful subcategories of Eff [42]. The use of Eff to model type theory was also extensively studied. <p> We now outline how this idea can be lifted to give a realizability interpretation of many-typed (= many-sorted) higher-order intuitionistic logic, essentially following <ref> [33] </ref>. In Section 4.1 and 4.2 types are just sets, later on, in Sections 4.3 and 4.4, the notion of type is extended to cover certain quotients of subobjects of sets. <p> In fact, we will show how to use the modal intuitionistic higher-order logic to define three toposes of interest for semantics, called RT (A), RT (A ] ) and CT (A; A ] ). For RT (A) our construction is the one of Hyland, Johnstone, and Pitts <ref> [33] </ref> but for the other two we make crucial use of the new ] connective. 4.3 The Standard Realizability Toposes over A and A ] The realizability topos RT (A) is a model of extensional many-typed intu-itionistic higher-order logic.
Reference: [34] <author> B. Jacobs. </author> <title> Categorical Logic and Type Theory. </title> <note> 1998. Draft book. </note>
Reference-contexts: Ma and Reynolds phrased their definitions using indexed category theory; in 1994 Robinson and Rosolini [60] gave another formulation based on internal categories. All this is also described in the language of fibred category theory in a forthcoming book by Jacobs <ref> [34] </ref>. For the axiomatic theory of domains, the already mentioned work by Freyd [19, 18, 20] on algebraically compact categories has been crucial. Simpson [73] generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996. <p> Sometimes this phenomenon is referred to as "very strong equality" <ref> [34, Page 188] </ref>. We should mention that also the axiom of choice 8i : I:9j : J:'(i; j) 9f : J I :8i : I:'(i; f (i)) is easily seen to be valid.
Reference: [35] <author> J.R. Longley. </author> <title> Realizability Toposes and Language Semantics. </title> <type> PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1994. </year>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley <ref> [35] </ref>, Rosolini [63], Reus [53], Longley and Simpson [36], Fiore and Rosolini [17], Reus and Streicher [54]. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A <p> Ershov's category of enumerated sets is a full subcategory of the category of partial equivalence relations and that the effectively given domains are characterized by Ershov as a full subcategory of the category of enumerated sets. 4 More detailed treatments of partial combinatory algebras can for example be found in <ref> [35] </ref> or in [8]. Combinatory completeness is then obtained by taking a = x 1 x n :M . <p> There have been several suggestions for more general notions of domains in realizability toposes. For our purposes, the work of Longley and Simpson <ref> [35, 36] </ref> is particularly relevant as they are exactly concerned with domains in realizability toposes over arbitrary partial combinatory algebras. We give a very rough sketch of the general idea. <p> Different Partial Combinatory Algebras Different PCA's give different corresponding categories of partial equivalence relations and different corresponding realizability toposes and, as shown by the work of Longley <ref> [35] </ref> and Phoa [47], different PCA's give categories with different properties. 1. Is there a way to say whether one PCA is in some sense better than another? 2.
Reference: [36] <author> J.R. Longley and A.K. Simpson. </author> <title> A uniform approach to domain theory in realizability models. </title> <journal> Math. Struct. in Comp. Science, </journal> <volume> 11, </volume> <year> 1996. </year>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley [35], Rosolini [63], Reus [53], Longley and Simpson <ref> [36] </ref>, Fiore and Rosolini [17], Reus and Streicher [54]. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A fi A ! A such that there exists <p> There have been several suggestions for more general notions of domains in realizability toposes. For our purposes, the work of Longley and Simpson <ref> [35, 36] </ref> is particularly relevant as they are exactly concerned with domains in realizability toposes over arbitrary partial combinatory algebras. We give a very rough sketch of the general idea. <p> Consider then the subcategory of well-complete objects. One finds that this category of well-complete objects is a suitable category of predomains which has finite limits, finite coproducts, a natural numbers object, and which forms an exponential ideal of the category of PER's. Thus for any PCA, Longley and Simpson <ref> [36] </ref> have developed a general suitable notion of domain which allows for the basic constructions of domain theory. One of our goals mentioned below is to extend this work to cover recursive domain equations. 5 Proposed Thesis Work In this section I give an overview of my proposed thesis work. <p> Questions include: 13 ZKx ' ZpcaK so ZK may be thought of as a diverging computation. In fact, one may extend this definition to obtain a lifting monad on the category of partial equivalence relations, see, e.g., <ref> [36] </ref>. 20 1. <p> Longley and Simpson give a suggestion for how to proceed at the end of <ref> [36] </ref>. Briefly, Longley and Simpson's proposal is to view the well-complete objects as a suitably complete internal category in the realizability topos and then use the theory of Freyd concerning algebraically compact categories [19, 18, 20] to reduce the solution of mixed variance domain equations to covariant domain equations. 4. <p> Recursion and Polymorphism The well-complete objects are internally complete enough to interpret a kind of polymorphism <ref> [36] </ref> but this notion of polymorphism has not been investigated properly yet. Briefly, the collection of all well-complete objects form a type, call it Type, in the topos RT (A).
Reference: [37] <author> G. Longo and E. Moggi. </author> <title> Constructive natural deduction and its `!- set' interpretation. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 1(2) </volume> <pages> 215-254, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi <ref> [37] </ref>, Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain.
Reference: [38] <author> Q. Ma and J.C. Reynolds. </author> <title> Types, abstraction, and parametric poly-morphism, part 2. </title> <editor> In S. Brookes, M. Main, A. Melton, M. Mislove, and D. Schmidt, editors, </editor> <booktitle> Mathematical Foundations of Programming Semantics, volume 598 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-40. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Also in 1986, Girard used qualitative domains and stable functions [24], and in 1989 Coquand, Gunter and Winskel considered models based on Scott domains [13]. 2 In 1987, Seely [72] gave an abstract categorical definition of what constitutes a model of the polymorphic lambda calculus, as did Ma and Reynolds <ref> [38] </ref> in 1992. Ma and Reynolds also gave an abstract definition of what constitutes a relationally parametric model. Ma and Reynolds phrased their definitions using indexed category theory; in 1994 Robinson and Rosolini [60] gave another formulation based on internal categories. <p> For this notion of polymorphism we shall be interested in the following questions: 1. Can we obtain a parametric model in the sense of Ma and Reynolds <ref> [38, 60] </ref>? Making use of the fact that the well-complete objects form an internal category in an ambient category with good closure properties we may be able to use the approach of Robinson and Rosolini [60] to get a parametric model.
Reference: [39] <author> M. </author> <title> Makkai. Generalized sketches as a framework for completeness theorems. </title> <journal> Journal of Pure and Applied Algebra, </journal> <volume> 115 </volume> <pages> 49-79, 179-212, 241-274, </pages> <year> 1997. </year>
Reference-contexts: But for more general classes of algebras, e.g., the essentially algebraic ones, where equations may be only partially defined (on totally equationally defined subspaces), the answer is not so immediate. Sketches are a very general tool to specify algebras and there are some recent proposals <ref> [39, 4, 5] </ref> for reasoning calculi (a proof theory) for sketches which may be relevant to get a general formal framework for specifying and reasoning about algebras. Questions include: 1. What is an appropriate calculus of sketches for our applications? 2.
Reference: [40] <author> P. Martin-Lof. </author> <title> An intuitionistic theory of types: Predicative part. In H.E. </title> <editor> Rose and J.C. Shepherdson, editors, </editor> <booktitle> Logic Colloquium, </booktitle> <pages> pages 73-118, </pages> <address> Amsterdam, 1973. </address> <publisher> North-Holland. </publisher>
Reference-contexts: 1 Introduction Domain Theory, type theory (both in the style of Martin-Lof <ref> [40, 41] </ref> and in the polymorphic style of Girard/Reynolds [23, 56]), and topos theory (both in the topological/sheaf-theoretic treatments and in the realizabil-ity approach going back to the early work of Kleene) have attempted to improve on set theory by providing a large suite of closure conditions on domains/types/objects as well
Reference: [41] <author> P. Martin-Lof. </author> <title> Intuitionistic Type Theory. </title> <type> Bibliopolis, </type> <institution> Napoli, </institution> <year> 1984. </year> <month> 29 </month>
Reference-contexts: 1 Introduction Domain Theory, type theory (both in the style of Martin-Lof <ref> [40, 41] </ref> and in the polymorphic style of Girard/Reynolds [23, 56]), and topos theory (both in the topological/sheaf-theoretic treatments and in the realizabil-ity approach going back to the early work of Kleene) have attempted to improve on set theory by providing a large suite of closure conditions on domains/types/objects as well
Reference: [42] <institution> D.C. McCarty. Realizability and Recursive Mathematics. Cmu-cs-84--131, School of Computer Science, Carnegie Mellon University, </institution> <year> 1984. </year>
Reference-contexts: Then after the introduction of the so-called effective topos, Eff , by Hyland, Johnstone and Pitts [33, 30] (building on previous work on realizability), several categories of effectively presented domains were shown to be full and faithful subcategories of Eff <ref> [42] </ref>. The use of Eff to model type theory was also extensively studied. Scott proposed a "synthetic domain theory" to be modelled in Eff in the hopes of bringing domain theory and type theory together. <p> Scott's idea was to use such models to give a simple description of domains as certain kinds of constructive sets. First steps in the direction of such a synthetic theory of domains were taken by McCarty <ref> [42] </ref> who in 1984 showed that the 1 For recent comprehensive treatments of domain theory we refer the reader to [2] and [75]. <p> What are the connections between our ]-modality and Moggi's com putational lambda calculus [45, 46]? 14 Actually, we have not given an entirely formal axiomatic description of PCA's but it is well-known how to do so <ref> [42, 8] </ref>. 21 Recursive Domain Equations I plan to investigate how to solve recur-sive domain equations on PER (A) for general PCA's A and in particular for the PCA P. Questions include: 1.
Reference: [43] <author> N. </author> <title> McCracken. An Investigation of a Programming Language with a Polymorphic Type Structure. </title> <type> PhD thesis, </type> <institution> Syracuse University, </institution> <year> 1979. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken <ref> [43] </ref> devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986.
Reference: [44] <author> J.C. Mitchell. </author> <title> A type-inference approach to reduction properties and semantics of polymorphic expressions (summary). </title> <booktitle> In Proceedings of the 1986 ACM Conference on Lisp and Functional Programming, </booktitle> <pages> pages 308-319, </pages> <address> Cambridge, Massachusetts, </address> <year> 1986. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell <ref> [44] </ref>, and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain. Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986.
Reference: [45] <author> E. Moggi. </author> <title> Computational lambda-calculus and monads. </title> <booktitle> In Proceedings of the 4th Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 14-23, </pages> <address> Asiloomar, CA, 1989. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: But are there more perspicuous comparisons phrased in terms of the internal logics of the toposes? 6. What are the connections between our ]-modality and Moggi's com putational lambda calculus <ref> [45, 46] </ref>? 14 Actually, we have not given an entirely formal axiomatic description of PCA's but it is well-known how to do so [42, 8]. 21 Recursive Domain Equations I plan to investigate how to solve recur-sive domain equations on PER (A) for general PCA's A and in particular for the
Reference: [46] <author> E. Moggi. </author> <title> Notions of computation and monads. </title> <journal> Information and Computation, </journal> <volume> 93 </volume> <pages> 55-92, </pages> <year> 1991. </year>
Reference-contexts: But are there more perspicuous comparisons phrased in terms of the internal logics of the toposes? 6. What are the connections between our ]-modality and Moggi's com putational lambda calculus <ref> [45, 46] </ref>? 14 Actually, we have not given an entirely formal axiomatic description of PCA's but it is well-known how to do so [42, 8]. 21 Recursive Domain Equations I plan to investigate how to solve recur-sive domain equations on PER (A) for general PCA's A and in particular for the
Reference: [47] <author> W. Phoa. </author> <title> Domain Theory in Realizability Toposes. </title> <institution> Cst-82-91, Trinity College, </institution> <address> Cambridge, </address> <year> 1991. </year> <note> Available as Technical Report ECS-LFCS-91-171, </note> <institution> The University of Edinburgh. </institution>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa <ref> [47] </ref>. <p> Different Partial Combinatory Algebras Different PCA's give different corresponding categories of partial equivalence relations and different corresponding realizability toposes and, as shown by the work of Longley [35] and Phoa <ref> [47] </ref>, different PCA's give categories with different properties. 1. Is there a way to say whether one PCA is in some sense better than another? 2.
Reference: [48] <author> W. Phoa. </author> <title> An introduction to fibrations, topos theory, the effective topos and modest sets. </title> <type> Technical report, </type> <institution> University of Edinburgh, </institution> <year> 1993. </year>
Reference-contexts: a fixed-point combinator satisfying Zx # and Zxy ' x (Zx)y (such an element 11 Note that the realizers for symmetry and transitivity are in fact members of the subalgebra RE so we have actually shown that (I; I ) is also a type of CT (P;RE). 12 See, e.g., <ref> [48, Pages 109-110] </ref> for more details. In fact, this defines a full and faithful embedding of the category of PER's into the category RT (A). 19 Z may be defined using untyped lambda calculus).
Reference: [49] <author> A.M. Pitts. </author> <title> Polymorphism is set theoretic, </title> <editor> constructively. In D. H. Pitt, A. Poigne, and D. E. Rydeheard, editors, </editor> <booktitle> Category Theory and Computer Science, Proc. Edinburgh 1987, volume 283 of Lecture Notes in Computer Science, </booktitle> <pages> pages 12-39. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts <ref> [49] </ref>, Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others. Following a suggestion of Scott, in 1979 McCracken [43] devised models for polymorphism based on domains using closures and retractions of a universal domain.
Reference: [50] <author> A.M. Pitts. </author> <title> Relational properties of domains. </title> <journal> Information and Computation, </journal> <note> 1995. To Appear. </note>
Reference-contexts: The investigation will be based on some mixed induction and coinduction principles for recursively defined domains developed by Pitts <ref> [50] </ref> and reinterpreted by Hermida and Jacobs [28] in a categorical logical setting, with a particular emphasis on allowing reasoning with parameters (in context). One goal is to give a model of FPC (a meta-language of Plotkin with recursive types) with a good logic of computable functions.
Reference: [51] <author> G.D. Plotkin. </author> <title> Domains. </title> <institution> Department of Computer Science. University of Edinburgh, </institution> <year> 1983. </year>
Reference-contexts: First steps in the direction of such a synthetic theory of domains were taken by McCarty [42] who in 1984 showed that the 1 For recent comprehensive treatments of domain theory we refer the reader to [2] and [75]. Also the notes of Plotkin are recommended <ref> [51, 52] </ref> as is the overview article [15]. 2 For a further selection of more recent work, see [29] and the handbook article by Gunter [26]. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini [62] who gave an abstract logical definition of domain, the
Reference: [52] <author> G.D. Plotkin. </author> <title> Lectures on predomains and partial functions. Notes for a course given at the Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <year> 1985. </year>
Reference-contexts: First steps in the direction of such a synthetic theory of domains were taken by McCarty [42] who in 1984 showed that the 1 For recent comprehensive treatments of domain theory we refer the reader to [2] and [75]. Also the notes of Plotkin are recommended <ref> [51, 52] </ref> as is the overview article [15]. 2 For a further selection of more recent work, see [29] and the handbook article by Gunter [26]. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini [62] who gave an abstract logical definition of domain, the
Reference: [53] <author> B. Reus. </author> <title> Program Verification in Synthetic Domain Theory. </title> <type> PhD thesis, </type> <institution> Ludwig-Maximilians-Universitat Munchen, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley [35], Rosolini [63], Reus <ref> [53] </ref>, Longley and Simpson [36], Fiore and Rosolini [17], Reus and Streicher [54]. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A fi A ! A
Reference: [54] <author> B. Reus and T. Streicher. </author> <title> General synthetic domain theory | a logical approach. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <year> 1998. </year> <month> 30 </month>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley [35], Rosolini [63], Reus [53], Longley and Simpson [36], Fiore and Rosolini [17], Reus and Streicher <ref> [54] </ref>. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A fi A ! A such that there exists two distinct elements K; S 2 A satisfying,
Reference: [55] <author> J.C. Reynolds. </author> <title> Notes on a lattice-theoretic approach to the theory of computation. </title> <type> Technical report, </type> <institution> Syracuse University, </institution> <month> October </month> <year> 1972. </year> <month> Revised March </month> <year> 1979. </year>
Reference-contexts: There are a variety of approaches to solving domain equations. The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 <ref> [55] </ref>, and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations.
Reference: [56] <author> J.C. Reynolds. </author> <title> On the relation between direct and continuation semantics. </title> <editor> In J. Loeckx, editor, </editor> <booktitle> Proceedings of the Second Colloquium on Automata, Languages and Programming, Saarbrucken, volume 174 of Lecture Notes in Computer Science, </booktitle> <pages> pages 141-156. </pages> <publisher> Springer-Verlag, </publisher> <year> 1974. </year>
Reference-contexts: 1 Introduction Domain Theory, type theory (both in the style of Martin-Lof [40, 41] and in the polymorphic style of Girard/Reynolds <ref> [23, 56] </ref>), and topos theory (both in the topological/sheaf-theoretic treatments and in the realizabil-ity approach going back to the early work of Kleene) have attempted to improve on set theory by providing a large suite of closure conditions on domains/types/objects as well as a far-reaching logic of properties emphasizing the computable/constructive
Reference: [57] <author> J.C. Reynolds and G.D. Plotkin. </author> <title> On functors expressible in the polymorphic typed lambda calculus. </title> <editor> In Gerard Huet, editor, </editor> <booktitle> Logical Foundations of Functional Programming, chapter 7, </booktitle> <pages> pages 127-151. </pages> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: be obtained by polymorphism? For example, for a covariant functor F , is Q T : Type: (F (T ) ! T ) ! T ) an initial algebra? 15 15 It is known that it is weakly initial and that the initial algebra can be obtained by taking quotients <ref> [57] </ref>.
Reference: [58] <author> E.P. Robinson. </author> <title> Variations on algebra: Monadicity and generalisations of equational theories. </title> <type> Manuscript, </type> <year> 1994. </year>
Reference-contexts: What happens when we allow equations? For what classes of algebras can we show existence of initial algebras and final coalgebras? For finitary algebraic theories (finitary means that each basic operation has a finite arity) there is a correspondence with monads <ref> [58] </ref>. Initial algebras can thus be obtained by constructing the small (internal) category of algebras for the monad and then use the internal adjoint functor theorem to get the existence of initial algebras. This approach is mentioned in [31].
Reference: [59] <author> E.P. Robinson and G. Rosolini. </author> <title> Colimit completions and the effective topos. </title> <journal> Journ. Symb. Logic, </journal> <volume> 55 </volume> <pages> 678-699, </pages> <year> 1990. </year>
Reference-contexts: Similarly for transitivity. One way to think of a type I = (jIj; I ) is as a quotient of a subset of the set jIj <ref> [59] </ref>; the subset is the set of all i's in jIj for which i I i is valid, that is, a non-empty set of P A, and the quotient comes about because we make i 1 and i 2 equivalent if i 1 I i 2 is non-empty (realized). Notation.
Reference: [60] <author> E.P. Robinson and G. Rosolini. </author> <title> Reflexive graphs and parametric poly-morphism. </title> <editor> In S. Abramsky, editor, </editor> <booktitle> Proc. 9th Symposium in Logic in Computer Science, </booktitle> <pages> pages 364-371, </pages> <address> Paris, 1994. </address> <publisher> I.E.E.E. Computer Society. </publisher>
Reference-contexts: Ma and Reynolds also gave an abstract definition of what constitutes a relationally parametric model. Ma and Reynolds phrased their definitions using indexed category theory; in 1994 Robinson and Rosolini <ref> [60] </ref> gave another formulation based on internal categories. All this is also described in the language of fibred category theory in a forthcoming book by Jacobs [34]. For the axiomatic theory of domains, the already mentioned work by Freyd [19, 18, 20] on algebraically compact categories has been crucial. <p> For this notion of polymorphism we shall be interested in the following questions: 1. Can we obtain a parametric model in the sense of Ma and Reynolds <ref> [38, 60] </ref>? Making use of the fact that the well-complete objects form an internal category in an ambient category with good closure properties we may be able to use the approach of Robinson and Rosolini [60] to get a parametric model. <p> Can we obtain a parametric model in the sense of Ma and Reynolds [38, 60]? Making use of the fact that the well-complete objects form an internal category in an ambient category with good closure properties we may be able to use the approach of Robinson and Rosolini <ref> [60] </ref> to get a parametric model. This will be very useful for programming language semantics, particularly so if we can obtain an explicit description of the model. 2.
Reference: [61] <author> J.M.E. Hyland E.M. Robinson and G. Rosolini. </author> <title> Algebraic types in PER models. </title> <editor> In M. Main, A. Melton, M. Mislove, and D. Schmidt, editors, </editor> <booktitle> Mathematical Foundations of Programming Semantics. 5th In-terational Conference, volume 442 of Lecture Notes in Computer Science, </booktitle> <pages> pages 333-350, </pages> <institution> Tulane University, </institution> <address> New Orleans, Louisiana, USA, March/April 1989. </address> <publisher> Spinger-Verlag. </publisher>
Reference-contexts: For the case of the Kleene PCA and the PCA over the untyped lambda calculus, it is known <ref> [61] </ref> that any algebraic type corresponding to a many-sorted algebraic signature is modelled by the initial algebra corresponding to | but these results depend crucially on the exact partial combinatory algebra and do not cover all polynomial functors as coproducts are not included.
Reference: [62] <author> G. Rosolini. </author> <title> Continuity and Effectiveness in Topoi. </title> <type> PhD thesis, </type> <institution> University of Oxford, </institution> <year> 1986. </year>
Reference-contexts: Also the notes of Plotkin are recommended [51, 52] as is the overview article [15]. 2 For a further selection of more recent work, see [29] and the handbook article by Gunter [26]. 4 effective Scott-domains can be fully embedded in the effective topos 3 and by Rosolini <ref> [62] </ref> who gave an abstract logical definition of domain, the so-called -sets. This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47].
Reference: [63] <author> G. Rosolini. </author> <title> Notes on synthetic domain theory. </title> <type> Draft, </type> <year> 1995. </year>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor [77], who both gave axioms for domain theory, and by Phoa [47]. More recent work in this direction includes work by Longley [35], Rosolini <ref> [63] </ref>, Reus [53], Longley and Simpson [36], Fiore and Rosolini [17], Reus and Streicher [54]. 3 Partial Combinatory Algebras We shall recall here the notion of a partial combinatory algebra. 4 A partial combinatory algebra (PCA) consists of a set A together with a partial application function : A fi A
Reference: [64] <author> D.S. Scott. </author> <title> A type-theoretical alternative to ISWIM, CUCH, OWHY. </title> <type> Manuscript. </type> <institution> University of Oxford. </institution> <note> Also in [71], </note> <year> 1969. </year>
Reference-contexts: Moreover, the topological and effective versions of domain theory remained two rather separated studies. Worse, Scott's logic of computable functions (LCF) <ref> [64] </ref> was too limited in its means of expression to become popular for program specification and verification. 1 The various formulations of type theory have been most useful in show-ing the difference between predicative and impredicative reasoning, but the needed connections between partial and total functions have been hard to pin
Reference: [65] <author> D.S. Scott. </author> <title> Outline of a mathematical theory of computation. </title> <booktitle> In 4th Annual Princeton Conference on Information Sciences and Systems, </booktitle> <pages> pages 169-176, </pages> <year> 1970. </year> <month> 31 </month>
Reference-contexts: In Section 5 we give an overview of the proposed thesis work. 2 A Brief Chronology Domain theory was founded in 1969 by Scott <ref> [65, 66, 67] </ref>, who originally defined a domain to be a complete, continuous, countably based lattice and used it to give a model of the untyped lambda calculus. There are a variety of approaches to solving domain equations.
Reference: [66] <author> D.S. Scott. </author> <title> The lattice of flow diagrams. </title> <editor> In E. Engeler, editor, </editor> <booktitle> Sym--posium on Semantics of Algorithmic Languages, volume 188 of Lecture Notes in Mathematics, </booktitle> <pages> pages 311-366. </pages> <publisher> Springer-Verlag, </publisher> <year> 1971. </year>
Reference-contexts: In Section 5 we give an overview of the proposed thesis work. 2 A Brief Chronology Domain theory was founded in 1969 by Scott <ref> [65, 66, 67] </ref>, who originally defined a domain to be a complete, continuous, countably based lattice and used it to give a model of the untyped lambda calculus. There are a variety of approaches to solving domain equations.
Reference: [67] <author> D.S. Scott. </author> <title> Continuous lattices. </title> <editor> In F.W. Lawvere, editor, </editor> <booktitle> Toposes, Algebraic Geometry and Logic, volume 274 of Lecture Notes in Mathematics, </booktitle> <pages> pages 97-136. </pages> <publisher> Springer-Verlag, </publisher> <year> 1972. </year>
Reference-contexts: In Section 5 we give an overview of the proposed thesis work. 2 A Brief Chronology Domain theory was founded in 1969 by Scott <ref> [65, 66, 67] </ref>, who originally defined a domain to be a complete, continuous, countably based lattice and used it to give a model of the untyped lambda calculus. There are a variety of approaches to solving domain equations. <p> There are a variety of approaches to solving domain equations. The earliest was the inverse limit construction, which was originally devised by Scott <ref> [67] </ref>, generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations.
Reference: [68] <author> D.S. Scott. </author> <title> Data types as lattices. </title> <journal> SIAM Journal of Computing, </journal> <volume> 5(3) </volume> <pages> 522-587, </pages> <year> 1976. </year>
Reference-contexts: Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations [12]. A later method from 1976, the method of retracts, also due to Scott <ref> [68] </ref>, expressed the solution of a domain equation as the set of fixed points of an idempotent function on a "universal" domain. This method comes in three flavors, depending upon whether one uses arbitrary idempotent functions (called retractions), or restricts to projections or closures. <p> This 3 approach is also described in recent textbook by Winskel [81]. 1 Going back to suggestions of Kreisel, partial equivalence relations have been used to give models of polymorphic types by Girard in 1972 [23]; Troel-stra in 1973 [78] and Scott also emphasized the importance of PER's in 1976 <ref> [68] </ref>. In the period from 1987 to 1990, PER's were used for modelling expressive type theories by Pitts [49], Freyd and Scedrov [22], Longo and Moggi [37], Hyland [31], Breazu-Tannen and Coquand [11], Mitchell [44], and Abadi and Plotkin [1], among others.
Reference: [69] <author> D.S. Scott. </author> <title> Identity and existence in intuitionistic logic. In Application of Sheaves, </title> <booktitle> volume 753 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer, </publisher> <year> 1979. </year>
Reference-contexts: Then we define 8i : I:' = i2jIj 9i : I:' = i2jIj The point is that quantification is quantification over objects that exist, hence the use of the existence predicate E I ( ) (see Scott <ref> [69] </ref> for further details on identity and existence in intuitionistic logic). Note that we have 8i : I:i I i, as expected.
Reference: [70] <author> D.S. Scott. </author> <title> Domains for denotational semantics. </title> <editor> In M. Nielsen and E. M. Schmidt, editors, </editor> <booktitle> Proceedings of the 9th International Colloquium on Automata, Languages and Programming, volume 140 of Lecture Notes in Computer Science, </booktitle> <pages> pages 577-613. </pages> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: This method comes in three flavors, depending upon whether one uses arbitrary idempotent functions (called retractions), or restricts to projections or closures. It is also described in a recent textbook by Gunter [25]. In 1984, Winskel and Larsen [82] developed a method using Scott's information systems <ref> [70] </ref>.
Reference: [71] <author> D.S. Scott. </author> <title> A type-theoretical alternative to iswim, </title> <journal> cuch, owhy. Theoretical Computer Science, </journal> <volume> 121 </volume> <pages> 411-440, </pages> <year> 1993. </year> <note> Reprint of Manuscript from 1969. </note>
Reference: [72] <author> R.A.G. Seely. </author> <title> Categorical semantics of higher-order polymorphic lambda calculus. </title> <journal> The Journal of Symbolic Logic, </journal> <volume> 52(4) </volume> <pages> 969-989, </pages> <month> De-cember </month> <year> 1987. </year>
Reference-contexts: Amadio, Bruce, and Longo [3] devised a model using fini-tary projections in 1986. Also in 1986, Girard used qualitative domains and stable functions [24], and in 1989 Coquand, Gunter and Winskel considered models based on Scott domains [13]. 2 In 1987, Seely <ref> [72] </ref> gave an abstract categorical definition of what constitutes a model of the polymorphic lambda calculus, as did Ma and Reynolds [38] in 1992. Ma and Reynolds also gave an abstract definition of what constitutes a relationally parametric model.
Reference: [73] <author> A.K. Simpson. </author> <title> Recursive types in kleisli categories. </title> <type> Unpublished manuscript, </type> <month> August </month> <year> 1992. </year>
Reference-contexts: All this is also described in the language of fibred category theory in a forthcoming book by Jacobs [34]. For the axiomatic theory of domains, the already mentioned work by Freyd [19, 18, 20] on algebraically compact categories has been crucial. Simpson <ref> [73] </ref> generalized this work further in 1992 and Fiore [14] gave a comprehensive treatment of axiomatic domain theory in categories of partial maps in 1996.
Reference: [74] <author> M.B. Smyth and G.D. Plotkin. </author> <title> The category-theoretic solution of recursive domain equations. </title> <journal> SIAM Journal of Computing, </journal> <volume> 11(4) </volume> <pages> 761-783, </pages> <year> 1982. </year>
Reference-contexts: The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 [79, 80] and by Smyth and Plotkin in 1982 <ref> [74] </ref>. Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations. Also, recently in 1997, Cattani, Fiore, and Winskel gave a very general account of the limit-colimit coincidence for recursive domain equations [12].
Reference: [75] <author> V. Stoltenberg-Hansen, I. Lindstrom, and E.R. Griffor. </author> <title> Mathematical Theory of Domains. </title> <booktitle> Number 22 in Cambridge Tracts in Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: Scott's domain theory, (and the many variations proposed and studied; see [2] and <ref> [75] </ref> for recent introductions with references) has been especially successful in allowing for recursive definitions of types (i.e., solutions to domain equations) but at the expense of introducing a complex structure of "partial elements" in order to have solutions to fixed-point equations in the domains. <p> First steps in the direction of such a synthetic theory of domains were taken by McCarty [42] who in 1984 showed that the 1 For recent comprehensive treatments of domain theory we refer the reader to [2] and <ref> [75] </ref>.
Reference: [76] <author> T. Streicher. </author> <title> A topos for computable analysis. </title> <type> Unpublished Manuscript, </type> <year> 1998. </year>
Reference-contexts: That is, validity is required of the formula ] and two such relations f and f 0 are equivalent if and only if ] is valid. This topos CT (A; A ] ) was recently suggested by Thomas Streicher <ref> [76] </ref>. However, he defined it using a different underlying logic than the one stan-dardly used to define RT (A) or RT (A ] ); what we have shown here is that more generally we can use the same underlying logic, IHOL ] , to define all three toposes.
Reference: [77] <author> P. Taylor. </author> <title> The fixed point property in synthetic domain theory. </title> <booktitle> In 6th Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 152-160, </pages> <address> Washington, 1991. </address> <publisher> IEEE Computer Society Press. </publisher> <pages> 32 </pages>
Reference-contexts: This work was followed by work of Hyland [32] and Taylor <ref> [77] </ref>, who both gave axioms for domain theory, and by Phoa [47].
Reference: [78] <author> A.S. Troelstra, </author> <title> editor. Metamathematical Investigation of Intuitionistic Arithmetic and Analysis, </title> <booktitle> volume 344 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1973. </year>
Reference-contexts: This 3 approach is also described in recent textbook by Winskel [81]. 1 Going back to suggestions of Kreisel, partial equivalence relations have been used to give models of polymorphic types by Girard in 1972 [23]; Troel-stra in 1973 <ref> [78] </ref> and Scott also emphasized the importance of PER's in 1976 [68].
Reference: [79] <author> M. Wand. </author> <title> On the recursive specification of data types. </title> <editor> In Ernest G. Manes, editor, </editor> <title> Category Theory Applied to Computation and Control, </title> <booktitle> volume 25 of Lecture Notes in Computer Science, </booktitle> <pages> pages 222-225, </pages> <address> Berlin, 1975. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: There are a variety of approaches to solving domain equations. The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 <ref> [79, 80] </ref> and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations.
Reference: [80] <author> M. Wand. </author> <title> Fixed-point constructions in order-enriched categories. </title> <journal> Theoretical Computer Science, </journal> <volume> 8 </volume> <pages> 13-30, </pages> <year> 1979. </year>
Reference-contexts: There are a variety of approaches to solving domain equations. The earliest was the inverse limit construction, which was originally devised by Scott [67], generalized by Reynolds in 1972 [55], and eventually abstracted much further by Wand in 1974 and 1979 <ref> [79, 80] </ref> and by Smyth and Plotkin in 1982 [74]. Finally, in 1990-91 Freyd [19, 18, 20] abstracted this work further to give an axiomatic categorical account of recursive domain equations.
Reference: [81] <author> G. Winskel. </author> <title> The Formal Semantics of Programming Languages. An Introduction. </title> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: It is also described in a recent textbook by Gunter [25]. In 1984, Winskel and Larsen [82] developed a method using Scott's information systems [70]. This 3 approach is also described in recent textbook by Winskel <ref> [81] </ref>. 1 Going back to suggestions of Kreisel, partial equivalence relations have been used to give models of polymorphic types by Girard in 1972 [23]; Troel-stra in 1973 [78] and Scott also emphasized the importance of PER's in 1976 [68].
Reference: [82] <author> G. Winskel and K.G. Larsen. </author> <title> Using information systems to solve recursive domain equations effectively. </title> <editor> In G. Kahn et. al., editor, </editor> <booktitle> Semantics of Data Types, volume 173 of Lecture Notes in Computer Science, </booktitle> <pages> pages 109-130. </pages> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: This method comes in three flavors, depending upon whether one uses arbitrary idempotent functions (called retractions), or restricts to projections or closures. It is also described in a recent textbook by Gunter [25]. In 1984, Winskel and Larsen <ref> [82] </ref> developed a method using Scott's information systems [70].
Reference: [83] <author> M. Wirsing. </author> <title> Algebraic specification. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, chapter 13, </booktitle> <pages> pages 675-788. </pages> <publisher> El-sevier Science Publishers B.V., </publisher> <year> 1990. </year> <month> 33 </month>
Reference-contexts: These results were further extended 24 Algebra For computer science, in particular for applications to the area of algebraic specifications, we are interested in the existence of initial and final algebras and coalgebras for structures specified using some sort of equations, see e.g. <ref> [83] </ref> for a survey of the theory of algebraic specifications. Note that solving recursive domains equations, such as the one for lists of natural numbers X = 1 + N fi X, can be thought of as showing the existence of free algebras for structures specified without any equations.
References-found: 83

