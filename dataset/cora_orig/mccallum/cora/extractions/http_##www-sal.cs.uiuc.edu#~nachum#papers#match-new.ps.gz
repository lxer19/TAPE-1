URL: http://www-sal.cs.uiuc.edu/~nachum/papers/match-new.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Email: fnachum, mitrag@cs.uiuc.edu  siva@cse.iitb.ernet.in  
Title: Decidable Matching for Convergent Systems  
Author: Nachum Dershowitz, Subrata Mitra G. Sivakumar 
Address: Urbana, IL 61801, U.S.A.  Bombay, 400076, India  
Affiliation: Department of Computer Science University of Illinois  Department of Computer Science Indian Institute of Technology  
Abstract: We describe decision procedures for certain classes of semantic matching problems, where the equational theory with respect to which the semantic matching is performed has a convergent rewrite system. We give counterexamples to show that semantic matching becomes undecidable (as it generally is) when the conditions we give are weakened. 
Abstract-found: 1
Intro-found: 1
Reference: [Bo87] <author> Alexander Bockmayr. </author> <title> A Note on a Canonical Theory with Undecidable Unification and Matching Problem. </title> <journal> In Journal of Automated Reasoning, </journal> <volume> Vol 3, </volume> <pages> pages 379-381, </pages> <year> 1987. </year>
Reference-contexts: It is well-known that any strategy for finding a complete set of unifiers (or matchings) for two terms, with respect to a given theory, may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules <ref> [HH87, Bo87] </ref>. But, for some special classes of theories|associativity and commutativity, for instance|semantic unification is decidable. It is, therefore, of interest to find suitable cases for which a particular equation-solving procedure is provably terminating, thus implying that the semantic unification or semantic matching problems in the corresponding theories are decidable.
Reference: [DS87] <author> Nachum Dershowitz and G. Sivakumar. </author> <title> Solving Goals in Equational Languages. </title> <booktitle> In Proceedings of the First International Workshop Conditional Term Rewriting System, </booktitle> <address> Orsay, France, </address> <month> July </month> <year> 1987. </year> <journal> Vol. </journal> <volume> 308, </volume> <pages> pages 45-55, </pages> <booktitle> of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag (1987). </publisher>
Reference-contexts: In this paper, we consider only equational theories for which there is a finite convergent rewrite system. We specialize the unification procedure given in <ref> [DS87, Mit90, JK91] </ref> and study the effect of some syntactic and semantic restrictions on the rewrite system presenting a theory, which result in decidability. In the remainder of this section, we briefly review the relevant basic notions, terminology and results for equational theories and rewrite systems. <p> This is a simplified version of the generally complete system for unification appearing in <ref> [DS87, Mit90, JK91] </ref>, which is a refinement of narrowing, as studied in [?, Hul80, NRS89, Ret87], and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems. <p> Let R be a rewrite system in which every right hand side is a subterm of the corresponding left hand side. Then, the unification problem is decidable for R. Proof. The basic idea is that, since the full set of transformation rules [Mit90] simulates innermost rewriting in reverse (see <ref> [DS87, Mit90] </ref> for details), at any stage the right hand side t of a goal of the form s ! ? t must be irreducible for a solution to be feasible.
Reference: [DJ90] <author> Nachum Dershowitz and Jean-Pierre Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, chapter 6, </booktitle> <pages> pages 243-320, </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: In the remainder of this section, we briefly review the relevant basic notions, terminology and results for equational theories and rewrite systems. For surveys of this area, see <ref> [DJ90] </ref> and [JK91]. Terms are constructed from a given set of function symbols and variables. We normally use l, r, s, and t for arbitrary terms, and x, y, and z for variables. A ground term is one containing fl This research was supported in part by the U. S.
Reference: [Fay79] <author> M. Fay. </author> <title> First-order unification in an equational theory. </title> <booktitle> In Proceedings of the Fourth Workshop on Automated Deduction, </booktitle> <pages> pages 161-167, </pages> <address> Austin, TX, </address> <month> February </month> <year> 1979. </year>
Reference: [Hul80] <author> Jean-Marie Hullot. </author> <title> Canonical forms and unification. </title> <editor> In R. Kowalski, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Automated Deduction, </booktitle> <pages> pages 318-334, </pages> <address> Les Arcs, France, </address> <month> July </month> <year> 1980. </year> <title> Vol. </title> <booktitle> 87 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: This is a simplified version of the generally complete system for unification appearing in [DS87, Mit90, JK91], which is a refinement of narrowing, as studied in <ref> [?, Hul80, NRS89, Ret87] </ref>, and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems. <p> x sort (nil) ! nil sort (cons (x; y)) ! insert (x; sort (y)) insert (x; nil) ! cons (x; nil) insert (x; cons (y; z)) ! cons (min (x; y); insert (max (x; y); z)) 5 Related Results Some results similar to those given here have been reported in <ref> [Hul80, KN87] </ref>, where they are interested in the more general problem of semantic unification. Hullot [Hul80] shows that the narrowing procedure terminates when all right hand sides are either variables or ground terms. <p> Hullot <ref> [Hul80] </ref> shows that the narrowing procedure terminates when all right hand sides are either variables or ground terms.
Reference: [HH87] <author> Stephan Heilbrunner and Steffen Holldobler. </author> <title> The Undecidability of the Unification and Matching Problem for Canonical Theories. </title> <journal> In Acta Informatica, </journal> <volume> Vol 24, </volume> <pages> pages 157-171, </pages> <year> 1987. </year>
Reference-contexts: It is well-known that any strategy for finding a complete set of unifiers (or matchings) for two terms, with respect to a given theory, may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules <ref> [HH87, Bo87] </ref>. But, for some special classes of theories|associativity and commutativity, for instance|semantic unification is decidable. It is, therefore, of interest to find suitable cases for which a particular equation-solving procedure is provably terminating, thus implying that the semantic unification or semantic matching problems in the corresponding theories are decidable. <p> Example 3.1. By this result, the following system has a decidable semantic matching problem. app (nil; x) ! x app (cons (a; x); y) ! cons (a; app (x; y)) In <ref> [HH87] </ref>, there is an example of a system with a single defined function in every right hand side, which has an undecidable semantic matching problem. There, the defined function on the right hand side of rules does not appear below a constructor, but it obeys the other restrictions. <p> Lemma 3.4. It is undecidable if a function symbol is depth non-decreasing. Proof. Consider g (x) ! h (f (S 1 ffi $; S 2 ffi $; x); x) where f is as detailed in <ref> [HH87] </ref>.
Reference: [JK91] <author> Jean-Pierre Jouannaud and Claude Kirchner. </author> <title> Solving Equations in Abstract Algebras: A Rule-Based Survey of Unification. </title> <editor> In J.-L. Lassez and G. Plotkin, editors, </editor> <booktitle> Computational Logic: Essays in Honor of Alan Robinson, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: In this paper, we consider only equational theories for which there is a finite convergent rewrite system. We specialize the unification procedure given in <ref> [DS87, Mit90, JK91] </ref> and study the effect of some syntactic and semantic restrictions on the rewrite system presenting a theory, which result in decidability. In the remainder of this section, we briefly review the relevant basic notions, terminology and results for equational theories and rewrite systems. <p> In the remainder of this section, we briefly review the relevant basic notions, terminology and results for equational theories and rewrite systems. For surveys of this area, see [DJ90] and <ref> [JK91] </ref>. Terms are constructed from a given set of function symbols and variables. We normally use l, r, s, and t for arbitrary terms, and x, y, and z for variables. A ground term is one containing fl This research was supported in part by the U. S. <p> This is a simplified version of the generally complete system for unification appearing in <ref> [DS87, Mit90, JK91] </ref>, which is a refinement of narrowing, as studied in [?, Hul80, NRS89, Ret87], and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems.
Reference: [KN87] <author> Deepak Kapur and Paliath Narendran. </author> <title> Matching, Unification and Complexity. </title> <journal> In ACM SIGSAM Bulletin, </journal> <volume> (1987) Vol. 21, Number 4, </volume> <pages> pages 6-9. </pages>
Reference-contexts: x sort (nil) ! nil sort (cons (x; y)) ! insert (x; sort (y)) insert (x; nil) ! cons (x; nil) insert (x; cons (y; z)) ! cons (min (x; y); insert (max (x; y); z)) 5 Related Results Some results similar to those given here have been reported in <ref> [Hul80, KN87] </ref>, where they are interested in the more general problem of semantic unification. Hullot [Hul80] shows that the narrowing procedure terminates when all right hand sides are either variables or ground terms. <p> Hullot [Hul80] shows that the narrowing procedure terminates when all right hand sides are either variables or ground terms. Furthermore, it has been demonstrated by Kapur and Narendran <ref> [KN87] </ref> that if each right hand side is either ground or a subterm of the left hand side, the unification problem for the corresponding theory is NP-complete. <p> In the constructor case, r is free of defined functions, and r ! ? t has a solution only if r and t can be syntactically unified. However, we can prove the following theorem from <ref> [KN87] </ref>: Theorem 5.2. Let R be a rewrite system in which every right hand side is a subterm of the corresponding left hand side. Then, the unification problem is decidable for R. Proof.
Reference: [Mit90] <author> Subrata Mitra. </author> <title> Top-Down Equation Solving and Extensions to Associative and Commutative Theories. </title> <type> Master's thesis, </type> <institution> Department of Computer and Information Sciences, University of Delaware, Newark, DE, </institution> <year> 1990. </year>
Reference-contexts: In this paper, we consider only equational theories for which there is a finite convergent rewrite system. We specialize the unification procedure given in <ref> [DS87, Mit90, JK91] </ref> and study the effect of some syntactic and semantic restrictions on the rewrite system presenting a theory, which result in decidability. In the remainder of this section, we briefly review the relevant basic notions, terminology and results for equational theories and rewrite systems. <p> This is a simplified version of the generally complete system for unification appearing in <ref> [DS87, Mit90, JK91] </ref>, which is a refinement of narrowing, as studied in [?, Hul80, NRS89, Ret87], and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems. <p> Using techniques similar to those in this paper, and the full set of transformation rules in <ref> [Mit90] </ref>, it is not hard to show that there is a strategy which is terminating for Hullot's case. The full system essentially gives additional decomposition rules necessary to handle cases when the right hand side of a goal s ! ? x happens to be a variable. <p> Let R be a rewrite system in which every right hand side is a subterm of the corresponding left hand side. Then, the unification problem is decidable for R. Proof. The basic idea is that, since the full set of transformation rules <ref> [Mit90] </ref> simulates innermost rewriting in reverse (see [DS87, Mit90] for details), at any stage the right hand side t of a goal of the form s ! ? t must be irreducible for a solution to be feasible. <p> Let R be a rewrite system in which every right hand side is a subterm of the corresponding left hand side. Then, the unification problem is decidable for R. Proof. The basic idea is that, since the full set of transformation rules [Mit90] simulates innermost rewriting in reverse (see <ref> [DS87, Mit90] </ref> for details), at any stage the right hand side t of a goal of the form s ! ? t must be irreducible for a solution to be feasible.
Reference: [NRS89] <author> Werner Nutt, Pierre Rety and Gert Smolka. </author> <title> Basic Narrowing Revisited. </title> <journal> In J. of Symbolic Computation, </journal> <volume> (1989) Vol. 7, </volume> <pages> pages 295-317. </pages>
Reference-contexts: This is a simplified version of the generally complete system for unification appearing in [DS87, Mit90, JK91], which is a refinement of narrowing, as studied in <ref> [?, Hul80, NRS89, Ret87] </ref>, and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems.
Reference: [Ret87] <author> Pierre Rety. </author> <title> Improving basic narrowing techniques. </title> <editor> In P. Lescanne, editor, </editor> <booktitle> Proceedings of the Second International Conference on Rewriting Techniques and Applications, </booktitle> <pages> pages 228-241, </pages> <address> Bordeaux, France, </address> <month> May </month> <year> 1987. </year> <title> Vol. </title> <booktitle> 256 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: This is a simplified version of the generally complete system for unification appearing in [DS87, Mit90, JK91], which is a refinement of narrowing, as studied in <ref> [?, Hul80, NRS89, Ret87] </ref>, and others. We consider equational theories that are given as finite convergent rewrite systems. Convergent systems allow one to ignore reducible solutions to semantic unification and matching problems.
References-found: 11

