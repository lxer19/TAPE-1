URL: http://www.cs.washington.edu/homes/dci/chaos.exper.ps
Refering-URL: http://www.cs.washington.edu/homes/dci/publications.html
Root-URL: 
Title: The Performance of Adaptive Routers on Worst Case Permutations  
Author: Donald D. Chinn 
Address: Seattle, WA 98195 USA  
Affiliation: Department of Computer Science and Engineering University of Washington  
Abstract: Chaotic routing [4, 13, 14] is a randomized, nonminimal adaptive routing algorithm for multicomputers. An adaptive routing algorithm is one in which the path a packet takes from its source to its destination may depend on other packets it encounters. Such algorithms potentially avoid network bottlenecks by routing packets around "hot spots." Minimal adaptive routing algorithms have the additional advantage that the path each packet takes is a shortest one. Chinn, Leighton, and Tompa [6] provide a lower bound for permutation routing problems on the n fi n mesh for a large class of deterministic minimal adaptive algorithms. Specifically, they prove that for any such routing algorithm, there exists a permutation that requires (n 2 =k 2 ) steps to route all the packets in the permutation, where k is the number of packets a node can contain. We present experimental results showing the performance of the Chaos router on permutations for which a deterministic minimal adaptive version of the Chaos router performs poorly. The results show that on these worst case permutations, the time the Chaos router takes to deliver all packets in the permutation closely fits a polynomial in n whose degree is 3=2. From these experiments, we conjecture that no practical router for the n fi n mesh can route arbitrary permutations in time proportional to n, even though the mesh topology has the bandwidth to do so.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Bar-Noy, P. Raghavan, B. Schieber, and H. Tamaki. </author> <title> Fast deflection routing for packets and worms. </title> <booktitle> In Proceedings of the Twelfth Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 75-86, </pages> <year> 1993. </year>
Reference-contexts: Given that assumption, then only when congestion is heavy can a nonminimal algorithm behave differently from a minimal algorithm. But by then, it perhaps is too late to try to relieve the congestion. Hot potato or deflection routing <ref> [1, 2, 9, 10, 12] </ref>, where a node must send on the next step any packets it receives in the current step, offers the possibility of simple logic and simple algorithms.
Reference: 2. <author> A. Ben-Dor, S. Halevi, and A. Schuster. </author> <title> On greedy hot-potatoe routing. </title> <type> Technical Report PCL Report #9204, </type> <institution> CS Department, Technion, </institution> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: Given that assumption, then only when congestion is heavy can a nonminimal algorithm behave differently from a minimal algorithm. But by then, it perhaps is too late to try to relieve the congestion. Hot potato or deflection routing <ref> [1, 2, 9, 10, 12] </ref>, where a node must send on the next step any packets it receives in the current step, offers the possibility of simple logic and simple algorithms. <p> Because nodes in hot potato routing do not use extra buffer space, congestion does not have a chance to build as it does in networks where nodes do have extra buffer space. Greedy hot potato routing <ref> [2] </ref>, where packets use profitable outlinks whenever they are available, might be a nonminimal adaptive solution to route arbitrary permutations in time linear in n on the n fi n mesh.
Reference: 3. <author> K. Bolding. </author> <title> Chaotic Routing: Design and Implementation of an Adaptive Multi-computer Network Router. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <address> Seattle, WA, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: The remainder of the paper is organized as follows. Section 2 briefly describes the Chaos algorithm. Section 3 describes and gives the results of two experiments that follow the above method. Section 4 gives conclusions. 2. The Chaos Router description of its operation can be found elsewhere <ref> [3, 13] </ref>, but we briefly describe it here. A node consists of four input frames and four output frames, one for each of the four neighbors of a node. Each frame can hold exactly as many flits as there are in one packet. <p> However, the Chaos algorithm is probabilistically livelock-free: the probability that a packet has not been delivered after T time tends to zero as T tends to infinity. (A proof of this can be found in [13] for the hypercube; the proof for the mesh is almost identical <ref> [3] </ref>.) The Chaos router has a mechanism called virtual cut-through, which allows the head of a packet to move from frame to frame (either the input frames, the output frames, or the central queue) without waiting for the tail to arrive in the same buffer space.
Reference: 4. <author> K. Bolding, M. Fulgham, and L. Snyder. </author> <title> The case for chaotic adaptive routing. </title> <type> Technical Report TR 94-02-04, </type> <institution> University of Washington Department of Computer Science and Engineering, </institution> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: Nonminimal routing allows the most flexibility in packet paths, but at a cost of more complex logic to avoid livelock, the situation in which a packet never reaches its destination because it is derouted frequently. Examples of adaptive routers include the Chaos router <ref> [4, 13, 14] </ref> and the Ngai and Seitz router [16, 17]. One of the simplest benchmarks for a router's performance is how it performs in the worst case on static one-to-one (or partial permutation) routing problems, where each processor sends at most one message and receives at most one message. <p> We can now explore the difference between minimal adaptive algorithms and nonminimal adaptive algorithms by running the permutation constructed in the lower bound (hereafter called the CLT permutation) on a nonminimal adaptive algorithm. Chaotic routing <ref> [4, 13, 14] </ref> is a randomized, nonminimal adaptive algorithm that is competitive with state-of-the-art oblivious routers. In the Chaos algorithm, a node deroutes packets when it becomes congested, randomly picking which packet to deroute among the packets it contains. Thus, areas of local congestion dissipate via this diffusion mechanism.
Reference: 5. <author> A. Chien and J. H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proceedings of the 19th International Symposium on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: In minimal adaptive routing, the path a packet takes is a shortest one. An example of a minimal adaptive algorithm is the one of Cypher and Gravano [7] or of Chien and Kim <ref> [5] </ref>. In nonminimal adaptive routing, a packet may take any path between its source and its destination, possibly making moves in the network that place it farther from its destination than before the move. When a packet makes such a move, the packet is said to have been derouted.
Reference: 6. <author> D. D. Chinn, T. Leighton, and M. Tompa. </author> <title> Minimal adaptive routing on the mesh with bounded queue size. </title> <booktitle> In Proceedings of the 1994 ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <address> Cape May, NJ, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: On the n fi n mesh, there theoretically is enough bandwidth to deliver all packets in any permutation in time proportional to n. At the very least, a good routing algorithm should be able to route permutations efficiently (i.e., in O (n) time). Chinn, Leighton, and Tompa <ref> [6] </ref> (hereafter referred to as CLT) show that for any algorithm in a large class of deterministic minimal adaptive algorithms for the n fi n mesh, there exists a permutation for that algorithm such that it takes (n 2 =k 2 ) steps to route all packets in the permutation, where
Reference: 7. <author> R. Cypher and L. Gravano. </author> <title> Adaptive, deadlock-free packet routing in torus networks with minimal storage. </title> <booktitle> In 1992 International Conference on Parallel Processing, </booktitle> <pages> pages 204-211, </pages> <year> 1992. </year>
Reference-contexts: Intuitively, adaptive routers potentially can use the available bandwidth to relieve the congestion or to route around faults. In minimal adaptive routing, the path a packet takes is a shortest one. An example of a minimal adaptive algorithm is the one of Cypher and Gravano <ref> [7] </ref> or of Chien and Kim [5]. In nonminimal adaptive routing, a packet may take any path between its source and its destination, possibly making moves in the network that place it farther from its destination than before the move. <p> Minimal Chaos is, in a sense, an ideal minimal adaptive algorithm, since it has no mechanism to prevent deadlock. Mechanisms to prevent deadlock, such as virtual channels [8] or that of Cypher and Gravano <ref> [7] </ref>, complicate the logic needed to implement the algorithm. 3. The Experiments We now describe the experiments we performed on the minimal Chaos and Chaos routers. Table 1 in the Appendix gives all of the data of the experiments. 3.1.
Reference: 8. <author> W. Dally and H. Aoki. </author> <title> Deadlock-free adaptive routing in multicomputer networks using virtual channels. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(4) </volume> <pages> 466-75, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Thus, no cyclic dependencies for resources can exist, and so the network never gets into a deadlocked situation. Minimal Chaos is, in a sense, an ideal minimal adaptive algorithm, since it has no mechanism to prevent deadlock. Mechanisms to prevent deadlock, such as virtual channels <ref> [8] </ref> or that of Cypher and Gravano [7], complicate the logic needed to implement the algorithm. 3. The Experiments We now describe the experiments we performed on the minimal Chaos and Chaos routers. Table 1 in the Appendix gives all of the data of the experiments. 3.1.
Reference: 9. <author> U. Feige and P. Raghavan. </author> <title> Exact analysis of hot-potato routing. </title> <booktitle> In Proceedings 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 553-562, </pages> <address> Pittsburgh, PA, </address> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Given that assumption, then only when congestion is heavy can a nonminimal algorithm behave differently from a minimal algorithm. But by then, it perhaps is too late to try to relieve the congestion. Hot potato or deflection routing <ref> [1, 2, 9, 10, 12] </ref>, where a node must send on the next step any packets it receives in the current step, offers the possibility of simple logic and simple algorithms.
Reference: 10. <author> B. Hajek. </author> <title> Bounds for evacuation time for deflection routing. </title> <journal> Distributed Computing, </journal> <volume> 5 </volume> <pages> 1-6, </pages> <year> 1991. </year>
Reference-contexts: Given that assumption, then only when congestion is heavy can a nonminimal algorithm behave differently from a minimal algorithm. But by then, it perhaps is too late to try to relieve the congestion. Hot potato or deflection routing <ref> [1, 2, 9, 10, 12] </ref>, where a node must send on the next step any packets it receives in the current step, offers the possibility of simple logic and simple algorithms.
Reference: 11. <author> Intel. </author> <title> A Touchstone DELTA system description. </title> <type> Technical report, </type> <institution> Intel, </institution> <address> Portland, OR, </address> <year> 1991. </year>
Reference-contexts: However, oblivious routing performance degrades quickly in the pres-ence of congestion and/or faults, because the algorithm is not flexible enough to use the available bandwidth effectively. Machines that use oblivious algorithms include the Intel Touchstone <ref> [11] </ref> and Paragon, the MIT J-machine [18], and the Mosaic from Cal Tech [19]. Adaptive routing is an alternative to oblivious routing. In adaptive algorithms, the path a message takes from its source to its destination may depend on packets it encounters.
Reference: 12. <author> C. Kaklamanis, D. Krizanc, and S. Rao. </author> <title> Hot-potato routing on processor arrays. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 273-282, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Given that assumption, then only when congestion is heavy can a nonminimal algorithm behave differently from a minimal algorithm. But by then, it perhaps is too late to try to relieve the congestion. Hot potato or deflection routing <ref> [1, 2, 9, 10, 12] </ref>, where a node must send on the next step any packets it receives in the current step, offers the possibility of simple logic and simple algorithms.
Reference: 13. <author> S. Konstantinidou and L. Snyder. </author> <title> The chaos router: A practical application of randomization in network routing. </title> <booktitle> In Proceedings of the 1990 ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 21-30, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Nonminimal routing allows the most flexibility in packet paths, but at a cost of more complex logic to avoid livelock, the situation in which a packet never reaches its destination because it is derouted frequently. Examples of adaptive routers include the Chaos router <ref> [4, 13, 14] </ref> and the Ngai and Seitz router [16, 17]. One of the simplest benchmarks for a router's performance is how it performs in the worst case on static one-to-one (or partial permutation) routing problems, where each processor sends at most one message and receives at most one message. <p> We can now explore the difference between minimal adaptive algorithms and nonminimal adaptive algorithms by running the permutation constructed in the lower bound (hereafter called the CLT permutation) on a nonminimal adaptive algorithm. Chaotic routing <ref> [4, 13, 14] </ref> is a randomized, nonminimal adaptive algorithm that is competitive with state-of-the-art oblivious routers. In the Chaos algorithm, a node deroutes packets when it becomes congested, randomly picking which packet to deroute among the packets it contains. Thus, areas of local congestion dissipate via this diffusion mechanism. <p> The remainder of the paper is organized as follows. Section 2 briefly describes the Chaos algorithm. Section 3 describes and gives the results of two experiments that follow the above method. Section 4 gives conclusions. 2. The Chaos Router description of its operation can be found elsewhere <ref> [3, 13] </ref>, but we briefly describe it here. A node consists of four input frames and four output frames, one for each of the four neighbors of a node. Each frame can hold exactly as many flits as there are in one packet. <p> However, the Chaos algorithm is probabilistically livelock-free: the probability that a packet has not been delivered after T time tends to zero as T tends to infinity. (A proof of this can be found in <ref> [13] </ref> for the hypercube; the proof for the mesh is almost identical [3].) The Chaos router has a mechanism called virtual cut-through, which allows the head of a packet to move from frame to frame (either the input frames, the output frames, or the central queue) without waiting for the tail
Reference: 14. <author> S. Konstantinidou and L. Snyder. </author> <title> Chaos router: Architecture and performance. </title> <booktitle> In Proceedings of the 18th International Symposium on Computer Architecture, </booktitle> <pages> pages 212-221, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Nonminimal routing allows the most flexibility in packet paths, but at a cost of more complex logic to avoid livelock, the situation in which a packet never reaches its destination because it is derouted frequently. Examples of adaptive routers include the Chaos router <ref> [4, 13, 14] </ref> and the Ngai and Seitz router [16, 17]. One of the simplest benchmarks for a router's performance is how it performs in the worst case on static one-to-one (or partial permutation) routing problems, where each processor sends at most one message and receives at most one message. <p> We can now explore the difference between minimal adaptive algorithms and nonminimal adaptive algorithms by running the permutation constructed in the lower bound (hereafter called the CLT permutation) on a nonminimal adaptive algorithm. Chaotic routing <ref> [4, 13, 14] </ref> is a randomized, nonminimal adaptive algorithm that is competitive with state-of-the-art oblivious routers. In the Chaos algorithm, a node deroutes packets when it becomes congested, randomly picking which packet to deroute among the packets it contains. Thus, areas of local congestion dissipate via this diffusion mechanism.
Reference: 15. <author> F. Makedon and A. Symvonis. </author> <title> An efficient hueristic for permutation on meshes with low buffer requirements. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(3) </volume> <pages> 270-6, </pages> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: Greedy hot potato routing [2], where packets use profitable outlinks whenever they are available, might be a nonminimal adaptive solution to route arbitrary permutations in time linear in n on the n fi n mesh. Makedon and Symvonis <ref> [15] </ref> give an algorithm that is based on odd-even transposition and behaves much like a hot potato algorithm. Their algorithm uses a small amount of buffer space and is simple. Future work includes examining and comparing the behavior of other minimal and nonminimal algorithms on worst case permutations.
Reference: 16. <author> J. Y. Ngai and C. L. Seitz. </author> <title> A framework for adaptive routing in multicomputer networks. </title> <booktitle> In Proceedings of the Symposium of Parallel Algorithms and Architectures, </booktitle> <pages> pages 1-9. </pages> <publisher> ACM, </publisher> <year> 1989. </year>
Reference-contexts: Examples of adaptive routers include the Chaos router [4, 13, 14] and the Ngai and Seitz router <ref> [16, 17] </ref>. One of the simplest benchmarks for a router's performance is how it performs in the worst case on static one-to-one (or partial permutation) routing problems, where each processor sends at most one message and receives at most one message.
Reference: 17. <author> J. Y. Ngai and C. L. Seitz. </author> <title> A framework for adaptive routing in multicomputer networks. </title> <journal> Computer Architecture News, </journal> <volume> 19(1) </volume> <pages> 6-14, </pages> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: Examples of adaptive routers include the Chaos router [4, 13, 14] and the Ngai and Seitz router <ref> [16, 17] </ref>. One of the simplest benchmarks for a router's performance is how it performs in the worst case on static one-to-one (or partial permutation) routing problems, where each processor sends at most one message and receives at most one message.
Reference: 18. <author> M. Noakes and W. Dally. </author> <title> System design of the J-Machine. </title> <booktitle> In Proceedings of the 6th MIT Conference on Advanced Research in VLSI, </booktitle> <pages> pages 179-194, </pages> <year> 1990. </year>
Reference-contexts: However, oblivious routing performance degrades quickly in the pres-ence of congestion and/or faults, because the algorithm is not flexible enough to use the available bandwidth effectively. Machines that use oblivious algorithms include the Intel Touchstone [11] and Paragon, the MIT J-machine <ref> [18] </ref>, and the Mosaic from Cal Tech [19]. Adaptive routing is an alternative to oblivious routing. In adaptive algorithms, the path a message takes from its source to its destination may depend on packets it encounters.
Reference: 19. <author> C. Sietz, N. Boden, J. Seizovic, and W. Su. </author> <title> The design of the Caltech Mosaic C multicomputer. </title> <booktitle> In Proceedings of the Symposium on Integrated Systems, </booktitle> <pages> pages 1-22, </pages> <year> 1993. </year>
Reference-contexts: However, oblivious routing performance degrades quickly in the pres-ence of congestion and/or faults, because the algorithm is not flexible enough to use the available bandwidth effectively. Machines that use oblivious algorithms include the Intel Touchstone [11] and Paragon, the MIT J-machine [18], and the Mosaic from Cal Tech <ref> [19] </ref>. Adaptive routing is an alternative to oblivious routing. In adaptive algorithms, the path a message takes from its source to its destination may depend on packets it encounters. Intuitively, adaptive routers potentially can use the available bandwidth to relieve the congestion or to route around faults.
References-found: 19

