URL: ftp://ftp.cs.columbia.edu/reports/reports-1993/cucs-027-93.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1993.html
Root-URL: http://www.cs.columbia.edu
Title: Terminological Constraint Network Reasoning and its Application to Plan Recognition  
Degree: (Thesis Proposal) Robert Weida  
Date: September 2, 1993  
Abstract: Columbia University Department of Computer Science Technical Report CUCS-027-93 
Abstract-found: 1
Intro-found: 1
Reference: [ Allen and Perrault, 1980 ] <author> J. F. Allen and C. R. Perrault. </author> <title> Analyzing intention in utterances. </title> <journal> Artificial Intelligence, </journal> <volume> 15(3) </volume> <pages> 143-178, </pages> <year> 1980. </year>
Reference: [ Allen, 1983 ] <author> J. F. Allen. </author> <title> Maintaining knowledge about temporal intervals. </title> <journal> Communications of the ACM, </journal> <volume> 26(11) </volume> <pages> 832-843, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: Plans are central to many areas of AI. We propose a knowledge representation system that computes subsumption among plans represented as collections of temporally related actions. In particular, we employ a plan representation which builds on temporal constraint networks in the style of <ref> [ Allen, 1983 ] </ref> . We show how to extend the ideas of structural subsumption and classification found in TKR systems to automatically organize these plans into a definitional taxonomy which constitutes a "terminological" plan library. <p> is reinforced by the normal case results of [ Yen, 1990 ] as mentioned in Section 5.1.3. 3.2 Temporal Constraints Allen, in his influential work on maintaining knowledge about temporal intervals, enumerated a total of seven primitive relationships, plus their inverses, that might hold between any ordered pair of intervals <ref> [ Allen, 1983 ] </ref> . These primitives are illustrated in Figure 2. A temporal constraint records the possible relationships between a particular pair of intervals as a disjunctive subset of these primitive relationships. For example, the constraint fbefore, afterg mandates temporal disjointness. <p> As a result, we are faced with several standard alternatives: 7 1. Adopt an approximation algorithm such as Allen's, and live with the possible consequence that some plan subsumption relationships will remain undetected. Allen contends that his algorithm's inferences correspond to those which humans find natural <ref> [ Allen, 1983 ] </ref> . There is a family of variations on Allen's algorithm which produce successively better approximations, but only at increasingly ex orbitant cost [ van Beek, 1989 ] . 2. Use an exact, presumably exponential, algorithm and simply accept the amount of time it takes to finish. <p> K-Rep also represents instantiated action concepts, or action instances. When there is no ambiguity, we may simply refer to action concepts and action instances as actions. Each temporal constraint is an arbitrary disjunction of Allen's exhaustive set of 13 primitive temporal relationships between intervals <ref> [ Allen, 1983 ] </ref> (see Figure 2). A plan network is a temporal constraint network [ Allen, 1983 ] whose nodes correspond to time intervals when the steps of the plan's body occur. Hence, an action concept is associated with each node. <p> Each temporal constraint is an arbitrary disjunction of Allen's exhaustive set of 13 primitive temporal relationships between intervals <ref> [ Allen, 1983 ] </ref> (see Figure 2). A plan network is a temporal constraint network [ Allen, 1983 ] whose nodes correspond to time intervals when the steps of the plan's body occur. Hence, an action concept is associated with each node. Plans may be embedded as macro actions within other plans (but not within themselves). <p> Plans may be embedded as macro actions within other plans (but not within themselves). Any temporal constraint on a step with a macro action can be propagated to each substep within that macro by appropriate use of a constraint propagation algorithm such as in <ref> [ Allen, 1983 ] </ref> . Song and Cohen have show how to do this [ Song, 1991, Song and Cohen, 1991 ] . Following precedent, e.g., [ Kautz, 1991, Song, 1991, Song and Cohen, 1991, van Beek and Cohen, 1991 ] , we draw examples from the cooking domain.
Reference: [ Allen, 1991 ] <author> J. F. Allen. </author> <title> Planning as temporal reasoning. </title> <booktitle> In Second International Conference on Principles of Knowledge Representation and Reasoning (KR'91), </booktitle> <pages> pages 3-14, </pages> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: Instead, conditions can overlap and interleave with actions in arbitrary ways. The problem becomes far more complicated if we similarly associate conditions with actions. As in <ref> [ Allen, 1991 ] </ref> , each action might have a set of associated conditions related to it by some temporal structure. In the terminological framework, these actions could be represented by temporal concepts similar to those of [ Schmiedel, 1990 ] . <p> For a temporal planner such as Allen's <ref> [ Allen, 1991 ] </ref> , it would seem obviously useful to classify a library of plans which serve as macro operators. Can we accomplish something more ambitious? Following is an extremely speculative abstract for hypothetical future work. It suggests a combination of Allen's temporal planner [ Allen, 1991 ] and Wellman's <p> temporal planner such as Allen's <ref> [ Allen, 1991 ] </ref> , it would seem obviously useful to classify a library of plans which serve as macro operators. Can we accomplish something more ambitious? Following is an extremely speculative abstract for hypothetical future work. It suggests a combination of Allen's temporal planner [ Allen, 1991 ] and Wellman's dominance-proving planner [ Wellman, 1990 ] which uses subsumption to organize a search space of atemporal plans. We call this vaporware system T-SYN, for Terminological Plan Synthesizer.
Reference: [ Apte et al., 1992 ] <author> C. Apte, R. Dionne, J. Griesmer, M. Karnaugh, J. Kastner, M. Laker, and E. Mays. </author> <title> An experiment in constructing an open expert system using a knowledge substrate. </title> <journal> IBM Journal of Research and Development, </journal> <year> 1992 1992. </year>
Reference-contexts: 1 Introduction Terminological systems in the tradition of KL-ONE and NIKL [ Brachman and Schmolze, 1985, Woods and Schmolze, 1992 ] are widely used to represent and reason with conceptual knowledge required by "intelligent" software applications. Examples include database querying [ Beck and Gala, 1989 ] , financial marketing <ref> [ Apte et al., 1992 ] </ref> , software information systems [ Devanbu et al., 1991 ] , and multimedia explanation of repair and maintenance procedures [ Feiner and McKeown, 1990 ] . However, contemporary terminological systems are limited by their inability to handle complex compositions of concepts. <p> Potential subsumption can recognize spatial configurations of objects described by library entries from partial observations recorded in orthogonal observation networks. 7 Potential Applications As one concrete application for our work, we have been considering use of T-REX to enhance the capabilities of the FAME expert system <ref> [ Apte et al., 1992 ] </ref> . FAME supports financial marketing of IBM mainframe computer systems. Its principle problem solvers are a mainframe equipment planner (MEP) and a financial analyzer.
Reference: [ Baader and Hollunder, 1991 ] <author> F. Baader and B. Hollunder. Kris: </author> <title> Knowledge representation and inference system. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 8-14, </pages> <month> June </month> <year> 1991. </year> <title> Special Issue on Implemented Knowledge Representation and Reasoning Systems. </title>
Reference-contexts: One limitation of current terminological systems, e.g., BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS <ref> [ Baader and Hollunder, 1991 ] </ref> and LOOM [ MacGregor and Bates, 1987 ] , is their inability to represent and reason with complex compositions of concepts such as constraint networks where each node is described by a concept. Plans are central to many areas of AI. <p> Contemporary systems include BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS <ref> [ Baader and Hollunder, 1991 ] </ref> , and LOOM [ MacGregor and Bates, 1987 ] . Terminological systems share several distinguishing characteristics relevant to our discussion: 1. They are intended to support the definition of conceptual terms comprising a "terminology" and to facilitate reasoning about those terms.
Reference: [ Beck and Gala, 1989 ] <author> H. W. Beck and S. B. Gala, S. K.and Navathe. </author> <title> Classification as a query processing technique in the candide semantic data model. </title> <booktitle> In Proc. Fifth International Conference on Data Engineering, </booktitle> <pages> pages 572-581, </pages> <address> Los Angeles, CA, </address> <year> 1989. </year>
Reference-contexts: 1 Introduction Terminological systems in the tradition of KL-ONE and NIKL [ Brachman and Schmolze, 1985, Woods and Schmolze, 1992 ] are widely used to represent and reason with conceptual knowledge required by "intelligent" software applications. Examples include database querying <ref> [ Beck and Gala, 1989 ] </ref> , financial marketing [ Apte et al., 1992 ] , software information systems [ Devanbu et al., 1991 ] , and multimedia explanation of repair and maintenance procedures [ Feiner and McKeown, 1990 ] .
Reference: [ Borgida et al., 1989 ] <author> A. Borgida, R. J. Brachman, D. L. McGuinness, and L. A. Resnick. </author> <title> Classic: A structural data model for objects. </title> <booktitle> In Proc. 1989 ACM SIGMOD International Conference on the Management of Data, </booktitle> <pages> pages 58-67, </pages> <address> Portland, OR, </address> <year> 1989. </year>
Reference-contexts: A critique of contemporary TKR which argues for greater expressiveness is [ Doyle and Patil, 1991 ] . One limitation of current terminological systems, e.g., BACK [ von Luck et al., 1987 ] , CLASSIC <ref> [ Borgida et al., 1989 ] </ref> , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] and LOOM [ MacGregor and Bates, 1987 ] , is their inability to represent and reason with complex compositions of concepts such as constraint networks where each node is <p> Contemporary systems include BACK [ von Luck et al., 1987 ] , CLASSIC <ref> [ Borgida et al., 1989 ] </ref> , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] , and LOOM [ MacGregor and Bates, 1987 ] . Terminological systems share several distinguishing characteristics relevant to our discussion: 1. <p> This section goes on to examine further inferences. 6.4.1 Forward Chaining T-REX could support forward-chaining inference rules similar to those of CLASSIC <ref> [ Borgida et al., 1989 ] </ref> . For instance, it is perhaps reasonable to declare that spaghetti is always boiled. Then, recognition of a trivial plan description consisting solely of a c-make-spaghetti action could trigger a rule that immediately adds a subsequent instance of c-boil to the observation network.
Reference: [ Borgida, 1992 ] <author> A. Borgida. </author> <title> Towards the systematic development of terminological reasoners: Clasp reconstructed. </title> <booktitle> In Third International Conference on Principles of Knowledge Representation and Reasoning (KR'92), </booktitle> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: Finally, T-REX plan networks can be composed nicely from binary constraints, making for a compact and facile notation. Regular expressions are comparatively unwieldy monolithic structures. On the other hand, CLASP models preconditions and effects of actions and plans, and it fully supports disjunction and looping. Recently, PROTODL <ref> [ Borgida, 1992 ] </ref> introduced a framework for extending terminological systems with customized language constructs. This methodology was demonstrated by reconstructing CLASP in PROTODL.
Reference: [ Brachman and Levesque, 1984 ] <author> R. J. Brachman and H. J. Levesque. </author> <title> The tractability of subsumption in frame-based description languages. </title> <booktitle> In Proceedings of AAAI-84, </booktitle> <pages> pages 34-37, </pages> <address> Austin, Texas, </address> <year> 1984. </year> <journal> American Association of Artificial Intelligence. </journal>
Reference-contexts: Brachman and Levesque focus their analysis on one such "crossover point" in the computation of subsumption relationships <ref> [ Brachman and Levesque, 1984 ] </ref> 2 . They examine a typical language for which subsumption can be computed in O (n 2 ) time. Next, they show that an apparently simple variant of that language is co-NP-complete.
Reference: [ Brachman and Schmolze, 1985 ] <author> R. J. Brachman and J. G. Schmolze. </author> <title> An overview of the kl-one knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction Terminological systems in the tradition of KL-ONE and NIKL <ref> [ Brachman and Schmolze, 1985, Woods and Schmolze, 1992 ] </ref> are widely used to represent and reason with conceptual knowledge required by "intelligent" software applications. <p> The system we propose will build upon such a knowledge representation system and extend its capabilities to reason with structured plan descriptions. 3.1.1 Concept Languages and their Semantics Terminological knowledge representation, which originated with KL-ONE <ref> [ Brachman and Schmolze, 1985 ] </ref> , is an object-centered approach in the tradition of semantic networks and frames.
Reference: [ Brachman et al., 1983 ] <author> R. J. Brachman, R. E. Fikes, and H. J. Levesque. </author> <title> Krypton: Integrating terminology and assertion. </title> <booktitle> In Proceedings of AAAI-83, </booktitle> <pages> pages 31-35, </pages> <address> Washington, D.C., </address> <year> 1983. </year> <journal> American Association of Artificial Intelligence. </journal> <volume> 68 </volume>
Reference: [ Brownston et al., 1985 ] <author> L. Brownston, R. Farrell, E. Kant, and N. Martin. </author> <title> Program--ming Expert Systems in OPS5. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1985. </year>
Reference-contexts: Besides being valuable from a knowledge engineering perspective, the rule taxonomy provides a principled basis for selecting rules to fire under the commonly used specificity criterion. This compares favorably with ad-hoc specificity measures used in production systems such as OPS5 <ref> [ Brownston et al., 1985 ] </ref> . We observe that the subsumption task we face is rather like the one described in [ Yen et al., 1991 ] . The antecedents of CLASP rules are composed of unary predicates (corresponding to concepts) and binary predicates (corresponding to roles).
Reference: [ Carberry, 1990 ] <author> S. Carberry. </author> <title> Plan Recognition in Natural Language Dialogue. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference: [ Cohen and Levesque, 1990 ] <author> P. R. Cohen and H. J. Levesque. </author> <title> Rational interaction as the basis for communication. </title> <editor> In P. R. Cohen, J. Morgan, and M. E. Pollack, editors, </editor> <booktitle> Intentions in Communication, </booktitle> <pages> pages 221-255. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference: [ Dechter et al., 1991 ] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: Linear inequalities can also express durations as the difference between two time points, e.g.: * time-point5 - time-point4 &lt; 2001 * 2010 &lt;= time-point7 - time-point6 &lt;= 2010 Sets of metric constraints form metric constraint networks. Determining the consistency of a metric constraint network is NP-hard <ref> [ Dechter et al., 1991 ] </ref> . Kautz and Ladkin designed a constraint reasoner which integrates reasoning over an Allen-style constraint network for intervals and a metric constraint network for the starting and ending points of those intervals [ Kautz and Ladkin, 1991 ] .
Reference: [ Devanbu and Litman, 1991 ] <author> P. T. Devanbu and D. J. Litman. </author> <title> Plan-based terminological reasoning. </title> <booktitle> In Second International Conference on Principles of Knowledge Representation and Reasoning (KR'91), </booktitle> <pages> pages 128-138, </pages> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference-contexts: The advantages obtained from representing knowledge in standard terminological systems are achieved here as well. Our approach is similar in spirit to previous work on plan subsumption <ref> [ Devanbu and Litman, 1991, Wellman, 1990 ] </ref> , but provides a much richer temporal representation language. We also use our notion of constraint network subsumption to develop a new, terminological approach to plan recognition. <p> We also use our notion of constraint network subsumption to develop a new, terminological approach to plan recognition. While terminological plan systems have been applied in the areas of plan synthesis [ Wellman, 1990 ] and plan retrieval <ref> [ Devanbu and Litman, 1991 ] </ref> , the application of terminological reasoning to the area of plan recognition has previously been unexplored. The definitional plan taxonomy provides a natural basis to guide plan recognition. <p> We now summarize each of them. 5.1.1 Plans Previous work on plan subsumption allowed plans that were either atemporal and used for plan synthesis [ Wellman, 1990 ] or restricted to the relationship of temporal sequence and used for information retrieval <ref> [ Devanbu and Litman, 1991 ] </ref> . There is also contemporaneous work on state-based reasoning with plans limited to simple 35 sequences [ Heinsohn et al., 1992 ] . After considering each of these systems in turn, we summarize their comparability in Table 1. <p> Wellman's plans are composed of actions represented in a terminological hierarchy, but his plans are entirely atemporal. We outline some ideas for integrating Wellman's work with temporal planning in Appendix B. CLASP T-REX's plan subsumption is similar in spirit to CLASP <ref> [ Devanbu and Litman, 1991 ] </ref> , which described plans as action sequences by means of regular expressions. However, by using Allen's temporal logic, T-REX supports simultaneous actions. T-REX also captures finer sequential relations than CLASP, which, for example, makes no distinction between before and meets. <p> spirit to CLASP <ref> [ Devanbu and Litman, 1991 ] </ref> , which described plans as action sequences by means of regular expressions. However, by using Allen's temporal logic, T-REX supports simultaneous actions. T-REX also captures finer sequential relations than CLASP, which, for example, makes no distinction between before and meets. In [ Devanbu and Litman, 1991 ] , a plan instance with n steps can only be subsumed by plans with exactly n steps. Our system has no such restriction. CLASP has no coreference constraints between actions. <p> Kautz's landmark work produced a formal theory of plan recognition based on 7 Not to be confused with the homonymous CLASP system of <ref> [ Devanbu and Litman, 1991 ] </ref> . 38 circumscription, along with more practical algorithms that approximate his theory. A major contribution was his logical characterization of the completeness assumptions. In contrast, we have not focused on formalizing our own view of plan recognition. <p> This remains an unexplored idea at present. 6.3 Plan Language Extensions 6.3.1 Integration of CLASP Operators As pointed out in Section 5.1.1, T-REX's ability to express temporal relations among actions compares favorably with CLASP in some ways, but unfavorably in others. To 45 our knowledge, CLASP <ref> [ Devanbu and Litman, 1991 ] </ref> is the only plan subsumption system whose plan language can express temporal information that T-REX cannot. We now consider the prospects for bridging this gap. CLASP composes actions via regular expressions, so it supports arbitrary disjunction and looping (recursively). <p> For instance, the following observation network instantiates the above make-noodles* plan: * obs-10: make-fettucini14 fbeforeg make-spaghetti15 fmeetsg make-ziti16 Sequencing, Repetition, and Conditional Action There are several constructs in CLASP <ref> [ Devanbu and Litman, 1991 ] </ref> which can easily be added to the T-REX plan language as syntactic sugar via macros, e.g., sequence and repeat. <p> In general, this would render the subsumption problem undecidable, for reasons similar to those in [ Schmidt-Schauss, 1989 ] , but attribute chains would be fine. 47 6.3.3 Preconditions, Goals and States Plan networks serve to describe the "bodies" of plans. As proposed in <ref> [ Devanbu and Litman, 1991 ] </ref> , we might separately classify plans according to concepts describing their circumstances and/or purpose. These plan classifications and the plan classification via plan bodies we have discussed heretofore are orthogonal to one another.
Reference: [ Devanbu et al., 1991 ] <author> P. Devanbu, R. J. Brachman, B. W. Ballard, and P. E. Self-ridge. </author> <title> Lassie: A knowledge-based software information system. </title> <journal> Communications of the ACM, </journal> <volume> 34(5), </volume> <month> May </month> <year> 1991. </year>
Reference-contexts: Examples include database querying [ Beck and Gala, 1989 ] , financial marketing [ Apte et al., 1992 ] , software information systems <ref> [ Devanbu et al., 1991 ] </ref> , and multimedia explanation of repair and maintenance procedures [ Feiner and McKeown, 1990 ] . However, contemporary terminological systems are limited by their inability to handle complex compositions of concepts.
Reference: [ Doyle and Patil, 1991 ] <author> J. Doyle and R. Patil. </author> <title> Two theses of knowledge representation: Language restrictions, taxonomic classification, and the utility of representation services. </title> <journal> Artificial Intelligence, </journal> <volume> 48(3) </volume> <pages> 261-297, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: While terminological systems are widely used in many application areas, to date they have focused on representing structured conceptual descriptions, or concepts. A critique of contemporary TKR which argues for greater expressiveness is <ref> [ Doyle and Patil, 1991 ] </ref> . <p> The full proof appears in Appendix C. 4.2.3 Practical Subsumption Performance We share the view of Doyle and Patil, who argue against the restricted language thesis that KR systems should limit their expressiveness to achieve polynomial worst-case response times <ref> [ Doyle and Patil, 1991 ] </ref> . It is important to observe that in our 18 instantiation of the subgraph isomorphism problem, both the nodes and the arcs are "labeled," so powerful heuristics can be brought to bear. <p> We now briefly outline that work to suggest its relevance here. The recent wave of discouraging tractability results, combined with feedback from users <ref> [ Doyle and Patil, 1991 ] </ref> , suggests renewed focus on terminological algorithms which perform well in practice. Eric Mays and I are working on an empirical study of classification methods.
Reference: [ Feiner and McKeown, 1990 ] <author> S. Feiner and K.R. McKeown. </author> <title> Coordinating text and graphics in explanation generation. </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <pages> pages 442-449, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: Examples include database querying [ Beck and Gala, 1989 ] , financial marketing [ Apte et al., 1992 ] , software information systems [ Devanbu et al., 1991 ] , and multimedia explanation of repair and maintenance procedures <ref> [ Feiner and McKeown, 1990 ] </ref> . However, contemporary terminological systems are limited by their inability to handle complex compositions of concepts. Therefore, we propose to extend their scope and utility via terminological constraint networks, whose nodes are described by associated concepts.
Reference: [ Garey and Johnson, 1979 ] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of Incompleteness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Fran-cisco, CA, </address> <year> 1979. </year>
Reference-contexts: It is also trivial to check that no two nodes in the subsumer are mapped to the same node in the subsumee. There is a polynomial time transformation from directed subgraph isomorphism, which is NP-complete <ref> [ Garey and Johnson, 1979 ] </ref> , to subsumption mapping between terminological constraint networks.
Reference: [ Heinsohn et al., 1992 ] <author> J. Heinsohn, D. Kudenko, B. Nebel, and H. J. Profitlich. Rat: </author> <title> Representation of actions using terminological logics. </title> <publisher> DFKI, </publisher> <year> 1992. </year>
Reference-contexts: There is also contemporaneous work on state-based reasoning with plans limited to simple 35 sequences <ref> [ Heinsohn et al., 1992 ] </ref> . After considering each of these systems in turn, we summarize their comparability in Table 1. Proposed but unimplemented features of T-REX are parenthesized. SUDO-PLANNER Wellman studied the formulation of tradeoffs in the context of medical therapy [ Wellman, 1990 ] . <p> Recently, PROTODL [ Borgida, 1992 ] introduced a framework for extending terminological systems with customized language constructs. This methodology was demonstrated by reconstructing CLASP in PROTODL. RAT The RAT system <ref> [ Heinsohn et al., 1992 ] </ref> is used in the WIP project at the German Research Center for Artificial Intelligence (DFKI) to represent plans for assembling, using, maintaining or repairing a physical device, namely an espresso machine. Plans in RAT are restricted to simple sequences of atomic actions. <p> As in [ Allen, 1991 ] , each action might have a set of associated conditions related to it by some temporal structure. In the terminological framework, these actions could be represented by temporal concepts similar to those of [ Schmiedel, 1990 ] . Like RAT <ref> [ Heinsohn et al., 1992 ] </ref> , we should reconcile the sets of conditions associated with all the actions comprising a plan with one another, and with the conditions of the plan itself. RAT addressed plans which are simple sequences of actions having preconditions and postconditions.
Reference: [ Kautz and Ladkin, 1991 ] <author> H. A. Kautz and P. B. Ladkin. </author> <title> Integrating metric and qualitative temporal reasoning. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> pages 241-246, </pages> <address> Ana-heim, CA, </address> <year> 1991. </year>
Reference-contexts: T-REX integrates and builds upon existing systems for TKR and temporal reasoning. It represents and reasons about actions and their constituents using K-Rep [ Mays et al., 1991a ] and temporal relationships using MATS <ref> [ Kautz and Ladkin, 1991 ] </ref> . A system diagram appears in Figure 1. When a plan is defined, T-REX checks its syntactic correctness, normalizes the definition by deriving implicit information, and classifies it in the plan library by means of subsumption tests against previously defined plans. <p> Determining the consistency of a metric constraint network is NP-hard [ Dechter et al., 1991 ] . Kautz and Ladkin designed a constraint reasoner which integrates reasoning over an Allen-style constraint network for intervals and a metric constraint network for the starting and ending points of those intervals <ref> [ Kautz and Ladkin, 1991 ] </ref> . Thus, metric constraints convey durations of intervals, gaps between intervals, and so on. These ideas were implemented by Kautz in the MATS system which we are using in our research. <p> We use K-Rep to handle actions and their constituents; we will also use it for preconditions and effects of actions and plans. Our interest in handling a rich variety of temporal information led us to integrate the full temporal expressiveness of MATS <ref> [ Kautz and Ladkin, 1991 ] </ref> into our plan language. To our knowledge, no other plan reasoning system can handle such expressive temporal constraints. 4.1.1 Basic Temporal Networks Plan descriptions typically include preconditions, effects, a body composed of steps to carry out the plan, and some constraints. <p> When possible, we write networks as a sequence of nodes separated by constraints. The following might be an instance of the plan in Figure 4, since it satisfies its terminological and temporal constraints (after closure). * make-chicken12 fbeforeg make-marinara54 fbeforeg put-together-cm27 4.1.3 Metric Temporal Constraints MATS <ref> [ Kautz and Ladkin, 1991 ] </ref> allows us to specify both Allen-style qualitative constraints on intervals and metric constraints on their starting and ending points. 12 Metric information accounts for durations of intervals and gaps between intervals, along with absolute times (which can be useful in the case of observations processed <p> MATS alternates between Allen and Metric constraint propagation phases, passing results back and forth until nothing further can be concluded. Kautz and Ladkin prove that information loss is minimized in their metric-to-Allen and Allen-to-metric translation schemes <ref> [ Kautz and Ladkin, 1991 ] </ref> . T-REX stores the final metric and Allen temporal constraints in the plan's internal representation. 4.1.4 Coreference Constraints A T-REX plan description may include coreference constraints on roles of its constituent action concepts.
Reference: [ Kautz, 1991 ] <author> H. A. Kautz. </author> <title> A formal theory of plan recognition and its implementation. </title> <editor> In J. Allen, H. Kautz, R. Pelavin, and J. Tenenberg, editors, </editor> <booktitle> Reasoning About Plans, </booktitle> <pages> pages 69-125. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year> <month> 69 </month>
Reference-contexts: To our knowledge, no other plan reasoning system can handle such expressive temporal constraints. 4.1.1 Basic Temporal Networks Plan descriptions typically include preconditions, effects, a body composed of steps to carry out the plan, and some constraints. Following <ref> [ Kautz, 1991 ] </ref> , we will concentrate on plan recognition via plan bodies and their relationship via abstraction. We define a plan body as a collection of steps along with some temporal constraints between pairs of steps. <p> Following <ref> [ Kautz, 1991 ] </ref> , we call this subset of our plan library entries end plans 5 . <p> Defined plans are taken to be end plans by default, including all the plans defined in Appendix A. 5 Whereas Kautz represents end as a plan in his plan abstraction hierarchy which other plans may explicitly specialize <ref> [ Kautz, 1991 ] </ref> , we feel it is more appropriately modeled as a boolean attribute associated with each plan. 15 4.2 Terminological Reasoning with Constraint Networks This section and Section 4.3 present terminological reasoning with constraint networks and terminological plan recognition, respectively, in a fairly formal manner. <p> Both assumptions are common in the field of plan recognition. The latter is the most restricted version of Kautz's minimum cardi-nality assumption, which always prefers to account for observations with the smallest number of plans <ref> [ Kautz, 1991 ] </ref> . It is often reasonable to suppose that observed actions 21 are related. Terminological plan recognition is based on potential subsumption relationships between the observations and plans in the plan library. <p> T-REX (conceptually) places the nodes from several plans into 31 one plan network, preserving the original constraints on those nodes. Relationships between nodes taken from different plans are unconstrained. Thus, a multiple plan network allows its constituent plans to be interleaved in any way. As in <ref> [ Kautz, 1991 ] </ref> , observed actions can be shared among plans. A set of plans accounts for all observed actions iff there is a compatibility mapping from the observation network to their multiple plan network. T-REX also needs a way to explore the set of possible plan combinations. <p> Kautz's minimum cardinality assumption addresses this problem. His implementation simply considers plans pairwise when a single plan does not suffice to explain the observations, and failing that, three at a time and so on, ad infinitum <ref> [ Kautz, 1991 ] </ref> . As a first cut at improvement, T-REX only considers those multiple plan networks that have a compatible action for every observed action. <p> Thus they can be viewed as constraint networks. We are encouraged by Yen's analysis which found their algorithm's complexity to be polynomial in "normal" cases [ Yen, 1990 ] . 5.2 Plan Recognition 5.2.1 Kautz Our plan recognition work is most closely related to that of Kautz <ref> [ Kautz, 1991 ] </ref> . Our plan recognition technique, like Kautz's, is deductive, and incorporates the use of a plan abstraction taxonomy (as well as the traditional hierarchy decomposing plans into constituent actions). <p> We also use an underlying TKR system, K-Rep, to represent and reason with the actions and objects that are the building blocks of plans, whereas atomic actions and objects in <ref> [ Kautz, 1991 ] </ref> and many other approaches lack defined semantics. Thus our approach allows the plan recognition system to share the advantages of existing terminological ontologies. We permit observation of actions at an abstract level, as well as revision of prior observations. <p> This body of work emphasizes plan inference using state information as well as action decomposition. It is more comprehensive, but less formal than our work or that of <ref> [ Kautz, 1991 ] </ref> and [ Song, 1991 ] . For reference, discussions of intention-based plan recognition are contained in [ Kautz, 1991 ] and [ Song, 1991 ] . 6 Future Directions This section presents some important avenues for continuing our work. <p> This body of work emphasizes plan inference using state information as well as action decomposition. It is more comprehensive, but less formal than our work or that of <ref> [ Kautz, 1991 ] </ref> and [ Song, 1991 ] . For reference, discussions of intention-based plan recognition are contained in [ Kautz, 1991 ] and [ Song, 1991 ] . 6 Future Directions This section presents some important avenues for continuing our work. <p> This could be compared with the work of Kautz <ref> [ Kautz, 1991 ] </ref> . In terms of performance, we conjecture that our terminological plan inferences can be computed with acceptable speed. Obviously, a successful application would go a 10 Thanks to Eric Siegel for mentioning this application. 55 long way towards justifying this claim.
Reference: [ Koomen, 1989 ] <author> J. Koomen. </author> <title> Localizing temporal constraint propagation. </title> <booktitle> In First In--ternational Conference on Principles of Knowledge Representation and Reasoning (KR'89), </booktitle> <pages> pages 198-202, </pages> <address> Toronto, Ontario, Canada, </address> <year> 1989. </year>
Reference-contexts: The practical performance of Allen-style constraint propagation can be enhanced by introducing a hierarchy of reference intervals to partition the space of temporal intervals, thereby limiting the scope of propagation. In fact, effective algorithms exist for automatic construction of reference interval hierarchies <ref> [ Koomen, 1989 ] </ref> . Allen's constraint propagation algorithm is sound, but unfortunately not complete [ Vilain et al., 1989 ] . This is important because in practice, we cannot expect that all temporal relations will be made explicit in plan definitions.
Reference: [ Kumar, 1992 ] <author> V. Kumar. </author> <title> Algorithms for constraint-satisfaction problems: A survey. </title> <journal> AI Magazine, </journal> <volume> 13(1) </volume> <pages> 32-41, </pages> <year> 1992. </year>
Reference-contexts: Many other powerful CSP methods such as those based on arc consistency are available [ Mackworth, 1977 ] . Choosing the optimal mix is domain-dependent and largely still a black art <ref> [ Kumar, 1992 ] </ref> . 4.2.4 Plan Instantiation We are also concerned with discovering when a plan instance instantiates a particular plan, sometimes referred to in the literature as plan realization. <p> might perform a service for the user of a software system, e.g., to prefetch a large file over the network when it is recognized that the user will act on it. 6.7 Orthogonal Constraint Networks The constraint satisfaction problem characterizes many important problems in AI and computer science at large <ref> [ Kumar, 1992 ] </ref> . Often it is formulated in terms of constraint networks. Our methods apply whenever it is useful to reason about structural sub-sumption between constraint networks or to recognize partial instances of constraint networks via potential subsumption. We now sketch an application to descriptions of spatial configurations.
Reference: [ Levesque and Brachman, 1985 ] <author> H. J. Levesque and R. J. Brachman. </author> <title> A fundamental tradeoff in knowledge representation and reasoning. </title> <booktitle> In Readings in Knowledge Representation, </booktitle> <pages> pages 42-70. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1985. </year>
Reference-contexts: Since our terminological reasoning with plans is founded on subsumption relations among their constituent concepts, these results have impact on our work. However, this impact is attenuated by the fact that in our work, we can 2 Much of which is included in <ref> [ Levesque and Brachman, 1985 ] </ref> . 6 generally classify the underlying concepts in advance. While intractability results for the concept subsumption problem are sobering, it must be emphasized that they are worst-case analyses.
Reference: [ Litman and Allen, 1987 ] <author> D. J. Litman and J. F. Allen. </author> <title> A plan recognition model for subdialogues in conversation. </title> <journal> Cognitive Science, </journal> <volume> 11 </volume> <pages> 163-200, </pages> <year> 1987. </year>
Reference: [ MacGregor and Bates, 1987 ] <author> R. MacGregor and R. Bates. </author> <title> The loom knowledge representation language. </title> <type> Technical Report ISI/RS-87-188, </type> <institution> USC/Information Sciences Institute, Marina del Ray, </institution> <address> CA, </address> <year> 1987. </year>
Reference-contexts: One limitation of current terminological systems, e.g., BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] and LOOM <ref> [ MacGregor and Bates, 1987 ] </ref> , is their inability to represent and reason with complex compositions of concepts such as constraint networks where each node is described by a concept. Plans are central to many areas of AI. <p> Contemporary systems include BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] , and LOOM <ref> [ MacGregor and Bates, 1987 ] </ref> . Terminological systems share several distinguishing characteristics relevant to our discussion: 1. They are intended to support the definition of conceptual terms comprising a "terminology" and to facilitate reasoning about those terms.
Reference: [ MacGregor, 1988 ] <author> R. MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of AAAI-88, </booktitle> <pages> pages 403-408, </pages> <address> Saint Paul, MN, </address> <year> 1988. </year> <journal> American Association of Artificial Intelligence. </journal>
Reference-contexts: The classification process can be automated with reasonable efficiency. Schmolze and Lipkis formally specify the classification algorithm in KL-ONE [ Schmolze and Lipkis, 1983 ] . NIKL's classifier is described in [ Robins, 1986 ] and LOOM's is presented in <ref> [ MacGregor, 1988 ] </ref> . Automatic classification is useful for incremental construction of a taxonomy, enforcing semantics, type checking, and pattern matching. 3.1.3 Computational Complexity A seemingly insignificant extension to the expressiveness of a representation language may drastically compromise its worst case tractability.
Reference: [ MacGregor, 1991 ] <author> R. MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In J. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 385-400. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year>
Reference: [ Mackworth, 1977 ] <author> A. K. Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8(1) </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: Allen proposed a simple polynomial-time constraint propagation algorithm to close (or normalize) a temporal network by computing the implicit consequences of explicitly stated temporal constraints, i.e., a transitive closure. Allen's algorithm is an instantiation of the path consistency algorithm for constraint satisfaction <ref> [ Mon-tanari, 1974, Mackworth, 1977 ] </ref> . The practical performance of Allen-style constraint propagation can be enhanced by introducing a hierarchy of reference intervals to partition the space of temporal intervals, thereby limiting the scope of propagation. <p> CSP has been widely studied, and improvements are possible. The 19 preliminary analysis that restricts a node's image to be one of its potential subsumees is an example of the node consistency technique. Many other powerful CSP methods such as those based on arc consistency are available <ref> [ Mackworth, 1977 ] </ref> . Choosing the optimal mix is domain-dependent and largely still a black art [ Kumar, 1992 ] . 4.2.4 Plan Instantiation We are also concerned with discovering when a plan instance instantiates a particular plan, sometimes referred to in the literature as plan realization.
Reference: [ Malik and Binford, 1983 ] <author> J. Malik and T. O. Binford. </author> <title> Reasoning in time and space. </title> <booktitle> In Proceedings of AAAI-83, </booktitle> <pages> pages 343-345, </pages> <address> Washington, D.C., </address> <year> 1983. </year> <journal> American Association of Artificial Intelligence. </journal>
Reference: [ Mark, 1981 ] <author> W. Mark. </author> <title> Representation and inference in the consul system. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 375-381, </pages> <address> Vancouver, BC, </address> <year> 1981. </year>
Reference-contexts: The process of classifying an individual concept, i.e., determining the most specific set of generic concepts which describe it, has sometimes been referred to distinctly as realization <ref> [ Mark, 1981 ] </ref> . The classification process can be automated with reasonable efficiency. Schmolze and Lipkis formally specify the classification algorithm in KL-ONE [ Schmolze and Lipkis, 1983 ] . NIKL's classifier is described in [ Robins, 1986 ] and LOOM's is presented in [ MacGregor, 1988 ] .
Reference: [ Mays et al., 1991a ] <author> E. Mays, R. Dionne, and R. Weida. </author> <title> K-rep system overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 93-97, </pages> <month> June </month> <year> 1991. </year> <title> Special Issue on Implemented Knowledge Representation and Reasoning Systems. </title>
Reference-contexts: T-REX integrates and builds upon existing systems for TKR and temporal reasoning. It represents and reasons about actions and their constituents using K-Rep <ref> [ Mays et al., 1991a ] </ref> and temporal relationships using MATS [ Kautz and Ladkin, 1991 ] . A system diagram appears in Figure 1. <p> We define a plan body as a collection of steps along with some temporal constraints between pairs of steps. Each step has a label and a type of action associated with it. Action types are represented by generic concepts in K-Rep <ref> [ Mays et al., 1991a ] </ref> , which we shall call action concepts. Together, these concepts constitute an action taxonomy. Action types can be thought of as atomic plans. We assume that the taxonomy includes every type of action which appears in a plan or is observed during plan recognition.
Reference: [ Mays et al., 1991b ] <author> E. Mays, S. Lanka, B. Dionne, and R. Weida. </author> <title> A persistent store for large shared knowledge bases. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 3(1) </volume> <pages> 33-41, </pages> <month> March </month> <year> 1991. </year> <month> 70 </month>
Reference-contexts: A critique of contemporary TKR which argues for greater expressiveness is [ Doyle and Patil, 1991 ] . One limitation of current terminological systems, e.g., BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep <ref> [ Mays et al., 1991b ] </ref> , KRIS [ Baader and Hollunder, 1991 ] and LOOM [ MacGregor and Bates, 1987 ] , is their inability to represent and reason with complex compositions of concepts such as constraint networks where each node is described by a concept. <p> Contemporary systems include BACK [ von Luck et al., 1987 ] , CLASSIC [ Borgida et al., 1989 ] , K-Rep <ref> [ Mays et al., 1991b ] </ref> , KRIS [ Baader and Hollunder, 1991 ] , and LOOM [ MacGregor and Bates, 1987 ] . Terminological systems share several distinguishing characteristics relevant to our discussion: 1. <p> Also, since most present day plan libraries are organized by hand, the clerical demands placed on the plan librarian may become burdensome. Our experience with knowledge engineering shows that when confronted with large quantities of information, the enforced semantics of the terminological approach offers significant advantages <ref> [ Mays et al., 1991b ] </ref> . 20 4.3 Terminological Plan Recognition We now exploit the plan library's terminological nature to guide plan recognition.
Reference: [ McCarthy and Hayes, 1968 ] <author> J. McCarthy and P. J. Hayes. </author> <booktitle> Some Philosophical Prob--lems from the Standpoint of Artificial Intelligence, </booktitle> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <address> England, </address> <year> 1968. </year>
Reference-contexts: For example, two sequential cooking plans may require a freshly cleaned frying pan. The pan need only be removed from the cabinet once, but it will still need to be cleaned twice. This is a very difficult problem in general, since it entails solution of the notorious frame problem <ref> [ McCarthy and Hayes, 1968 ] </ref> .
Reference: [ Montanari, 1974 ] <author> U. Montanari. </author> <title> Networks of constraints: Fundamental properties and applications to picture processing. </title> <journal> Information Science, </journal> <volume> 7 </volume> <pages> 95-132, </pages> <year> 1974. </year>
Reference: [ Mukerjee and Joe, 1990 ] <author> A. Mukerjee and G. Joe. </author> <title> A qualitative model for space. </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <pages> pages 721-727, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: We now sketch an application to descriptions of spatial configurations. Disjunctions of Allen's 13 primitives capture all possible relationships between intervals along a single dimension. While Allen's scheme was designed for the temporal domain, it is equally appropriate for one-dimensional space. Moreover, as pointed out in <ref> [ Mukerjee and Joe, 1990 ] </ref> , arbitrary relationships in N-dimensional space can be modeled by n-tuples of Allen's constraints. <p> As a first approximation to spatial relationships, we associate objects and locations with rectilinear bounding boxes aligned to the axes, i.e., we consider the projections onto the axes as intervals, and then use Allen's relations on them. The alignment can in fact be varied <ref> [ Mukerjee and Joe, 1990 ] </ref> . The following constraint network specifies a c-square whose bounding box is disjoint from that of a c-rectangle in 2-dimensional space: * c-square (fbefore, afterg, fbefore, afterg) c-rectangle Orthogonal constraint networks maintain relationships along each axis.
Reference: [ Nebel, 1988 ] <author> B. Nebel. </author> <title> Computational complexity of terminological reasoning in back. </title> <journal> Artificial Intelligence, </journal> <volume> 34(3) </volume> <pages> 371-383, </pages> <year> 1988. </year>
Reference-contexts: The result of Brachman and Levesque has practical significance because their co-NP-complete language is a subset of the terminological languages employed by such systems as KL-ONE. Nebel later showed that for another subset of the languages used in such systems as KL-ONE and BACK, subsumption is NP-hard <ref> [ Nebel, 1988 ] </ref> . Patel-Schneider demonstrated that subsumption in NIKL and similar systems is undecidable as well [ Patel-Schneider, 1989 ] .
Reference: [ Nebel, 1990 ] <author> B. Nebel. </author> <title> Terminological reasoning is inherently intractable. </title> <journal> Artificial Intelligence, </journal> <volume> 43 </volume> <pages> 235-249, </pages> <year> 1990. </year>
Reference-contexts: Recently, Nebel showed that subsumption in terminologies, which permit definitions to reference previously defined concepts, is inherently intractable (co-NP-complete) <ref> [ Nebel, 1990 ] </ref> . Since our terminological reasoning with plans is founded on subsumption relations among their constituent concepts, these results have impact on our work. <p> This effort now appears to have been a noble failure <ref> [ Nebel, 1990 ] </ref> . Nonetheless, it seems worthwhile to consider restrictions on our plan representation language to see when and if performance advantages might accrue.
Reference: [ Patel-Schneider, 1984 ] <author> P. F. Patel-Schneider. </author> <title> Small can be beautiful in knowledge representation. </title> <booktitle> In Proceedings of the IEEE Workshop on Principles of Knowledge-Based Systems, </booktitle> <pages> pages 11-16, </pages> <address> Denver, CO, </address> <year> 1984. </year>
Reference-contexts: Otherwise it is set partitioning. Integer programming techniques are applicable and should be considered in this context. 6.2.5 Restricted Plan Languages For years, workers in the field of terminological knowledge representation endeavored to identify a terminological language that was both useful and tractable, e.g., <ref> [ Brach-man et al., 1983, Patel-Schneider, 1984 ] </ref> . This effort now appears to have been a noble failure [ Nebel, 1990 ] . Nonetheless, it seems worthwhile to consider restrictions on our plan representation language to see when and if performance advantages might accrue.
Reference: [ Patel-Schneider, 1989 ] <author> P. F. Patel-Schneider. </author> <title> Undecidability of subsumption in nikl. </title> <journal> Artificial Intelligence, </journal> <volume> 39(2) </volume> <pages> 263-272, </pages> <year> 1989. </year>
Reference-contexts: Nebel later showed that for another subset of the languages used in such systems as KL-ONE and BACK, subsumption is NP-hard [ Nebel, 1988 ] . Patel-Schneider demonstrated that subsumption in NIKL and similar systems is undecidable as well <ref> [ Patel-Schneider, 1989 ] </ref> . By showing that no complete algorithm for such languages is possible, his result underscored the trend towards sound but consciously incomplete subsumption and classification algorithms that was instigated by the intractability of subsumption in these languages.
Reference: [ Pollack, 1990 ] <author> M. E. Pollack. </author> <title> Plans as complex mental attitudes. </title> <editor> In P. R. Cohen, J. Morgan, and M. E. Pollack, editors, </editor> <booktitle> Intentions in Communication, </booktitle> <pages> pages 77-104. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1990. </year>
Reference: [ Reiter, 1978 ] <author> R. Reiter. </author> <title> On reasoning by default. </title> <booktitle> In Proceedings of Theoretical Issues in Natural Language Processing-2, </booktitle> <pages> pages 210-218. </pages> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1978. </year> <note> reprinted in Readings in Knowledge Representation. </note>
Reference-contexts: More generally, observations can be retracted or generalized. We make a complete library assumption that each observed action is directed towards fulfilling a plan or plans in the plan library. This is a closed-world assumption <ref> [ Reiter, 1978 ] </ref> . Consequently, at least one plan is possible at all times and at least one plan will eventually prove necessary. As mentioned in Section 4.1.1, we assume that the taxonomy includes every type of action which appears in a plan, or is observed during plan recognition.
Reference: [ Robins, 1986 ] <author> G. Robins. </author> <title> The nikl manual. </title> <type> Technical report, </type> <institution> USC/Information Sciences Institute, Marina del Ray, </institution> <address> CA, </address> <year> 1986. </year>
Reference-contexts: The classification process can be automated with reasonable efficiency. Schmolze and Lipkis formally specify the classification algorithm in KL-ONE [ Schmolze and Lipkis, 1983 ] . NIKL's classifier is described in <ref> [ Robins, 1986 ] </ref> and LOOM's is presented in [ MacGregor, 1988 ] .
Reference: [ Schmidt-Schauss, 1989 ] <author> M. Schmidt-Schauss. </author> <title> Subsumption in kl-one is undecidable. </title> <booktitle> In First International Conference on Principles of Knowledge Representation and Reasoning (KR'89), </booktitle> <pages> pages 421-431, </pages> <address> Toronto, Ontario, Canada, </address> <year> 1989. </year>
Reference-contexts: Schmidt-Schauss proved that a very simple concept language limited to conjunction of concepts, restrictions on values of roles, and role value maps with an equality operator is undecidable <ref> [ Schmidt-Schauss, 1989 ] </ref> (however there is no problem when the chains are restricted to attributes). Recently, Nebel showed that subsumption in terminologies, which permit definitions to reference previously defined concepts, is inherently intractable (co-NP-complete) [ Nebel, 1990 ] . <p> We do not allow role composition in our operand specifiers, thus avoiding a potential source of undecidability when computing subsumption <ref> [ Schmidt-Schauss, 1989 ] </ref> . The two coreference constraints in the following definition state that for any instantiation of the solo-boil-spaghetti plan, the agents of the two steps must be the same, 3 Alternatives include inequality, subset and proper subset operators. 13 as must their objects. <p> We might also extend the role portion of coreference operand specifiers to permit role chains (compositions of role relations). In general, this would render the subsumption problem undecidable, for reasons similar to those in <ref> [ Schmidt-Schauss, 1989 ] </ref> , but attribute chains would be fine. 47 6.3.3 Preconditions, Goals and States Plan networks serve to describe the "bodies" of plans. As proposed in [ Devanbu and Litman, 1991 ] , we might separately classify plans according to concepts describing their circumstances and/or purpose.
Reference: [ Schmiedel, 1990 ] <author> A. Schmiedel. </author> <title> A temporal terminological logic. </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <pages> pages 640-645, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: action) Repetition no no loop (arbitrary, single action) Subplans no no yes yes Coreference no equality, no equality Constraints inequality (inequality) Plan no no number of actions unrestricted Instances must agree w/ plan States no yes yes no Table 1: Comparison of Terminological Plan Systems 37 5.1.2 Temporal Concepts Schmiedel <ref> [ Schmiedel, 1990 ] </ref> has described an ambitious attempt to extend terminological logic with temporal semantics by integrating both Allen's temporal logic and Shoham's [ Shoham, 1987 ] . Unlike T-REX, his representation supports concepts such as "former car owner". <p> As in [ Allen, 1991 ] , each action might have a set of associated conditions related to it by some temporal structure. In the terminological framework, these actions could be represented by temporal concepts similar to those of <ref> [ Schmiedel, 1990 ] </ref> . Like RAT [ Heinsohn et al., 1992 ] , we should reconcile the sets of conditions associated with all the actions comprising a plan with one another, and with the conditions of the plan itself.
Reference: [ Schmolze and Lipkis, 1983 ] <author> J. G. Schmolze and T. A. Lipkis. </author> <title> Classification in the kl-one knowledge representation system. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 330-332, </pages> <address> Karlsruhe, West Germany, </address> <year> 1983. </year>
Reference-contexts: The classification process can be automated with reasonable efficiency. Schmolze and Lipkis formally specify the classification algorithm in KL-ONE <ref> [ Schmolze and Lipkis, 1983 ] </ref> . NIKL's classifier is described in [ Robins, 1986 ] and LOOM's is presented in [ MacGregor, 1988 ] .
Reference: [ Selker, 1989 ] <author> T. Selker. </author> <title> Cognitive adaptive computer help (coach). </title> <booktitle> In Proceedings of the International Conference on Artificial Intelligence, </booktitle> <pages> pages 25-34. </pages> <publisher> IOS, </publisher> <year> 1989. </year>
Reference-contexts: Unfortunately, while redesign of FAME's interaction paradigm is interesting in its own right, it could well be beyond the scope of this work. Alternative applications to be considered include (1) clinical information systems, (2) travel consultation, (3) interactive, adaptive computer help systems <ref> [ Selker, 1989 ] </ref> , and (3) equipment maintenance and repair. We are also aware that corporations are increasingly interested in rigorous analysis of business processes. T-REX can model processes just as it models plans.
Reference: [ Shoham, 1987 ] <author> Y. Shoham. </author> <title> Temporal logics in ai: Semantical and ontological considerations. </title> <journal> Artificial Intelligence, </journal> <volume> 33(1) </volume> <pages> 89-104, </pages> <year> 1987. </year>
Reference-contexts: number of actions unrestricted Instances must agree w/ plan States no yes yes no Table 1: Comparison of Terminological Plan Systems 37 5.1.2 Temporal Concepts Schmiedel [ Schmiedel, 1990 ] has described an ambitious attempt to extend terminological logic with temporal semantics by integrating both Allen's temporal logic and Shoham's <ref> [ Shoham, 1987 ] </ref> . Unlike T-REX, his representation supports concepts such as "former car owner". His temporal concept definitions include a set of temporal variables, along with temporal constraints among the variables.
Reference: [ Sidner, 1985 ] <author> C. L. Sidner. </author> <title> Plan parsing for intended response recognition in discourse. </title> <journal> Computational Intelligence, </journal> <volume> 1(1) </volume> <pages> 1-10, </pages> <month> Feb </month> <year> 1985. </year>
Reference: [ Song and Cohen, 1991 ] <author> F. Song and R. Cohen. </author> <title> Temporal reasoning during plan recognition. </title> <booktitle> In Proceedings of AAAI-91, </booktitle> <pages> pages 247-252, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference-contexts: Any temporal constraint on a step with a macro action can be propagated to each substep within that macro by appropriate use of a constraint propagation algorithm such as in [ Allen, 1983 ] . Song and Cohen have show how to do this <ref> [ Song, 1991, Song and Cohen, 1991 ] </ref> . Following precedent, e.g., [ Kautz, 1991, Song, 1991, Song and Cohen, 1991, van Beek and Cohen, 1991 ] , we draw examples from the cooking domain. By convention, 10 generic concept names are prefixed by c-.
Reference: [ Song, 1991 ] <author> F. Song. </author> <title> A processing model for temporal analysis and its application to plan recognition. </title> <type> Technical Report CS-91-15, </type> <institution> Department of Computer Science, University of Waterloo, Waterloo, </institution> <address> Ontario, </address> <year> 1991. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: Any temporal constraint on a step with a macro action can be propagated to each substep within that macro by appropriate use of a constraint propagation algorithm such as in [ Allen, 1983 ] . Song and Cohen have show how to do this <ref> [ Song, 1991, Song and Cohen, 1991 ] </ref> . Following precedent, e.g., [ Kautz, 1991, Song, 1991, Song and Cohen, 1991, van Beek and Cohen, 1991 ] , we draw examples from the cooking domain. By convention, 10 generic concept names are prefixed by c-. <p> We then determine possible consequences from the observation network as a whole, on a context-dependent basis. 5.2.2 Song and Cohen Song and Cohen have considered how to extract the intended temporal relations among situations described in natural language discourse <ref> [ Song, 1991, Song and Co-hen, 1991 ] </ref> . They called this the temporal analysis problem. Song and Cohen were motivated by the idea of a natural language interface to a plan recognition system. <p> This body of work emphasizes plan inference using state information as well as action decomposition. It is more comprehensive, but less formal than our work or that of [ Kautz, 1991 ] and <ref> [ Song, 1991 ] </ref> . For reference, discussions of intention-based plan recognition are contained in [ Kautz, 1991 ] and [ Song, 1991 ] . 6 Future Directions This section presents some important avenues for continuing our work. <p> It is more comprehensive, but less formal than our work or that of [ Kautz, 1991 ] and <ref> [ Song, 1991 ] </ref> . For reference, discussions of intention-based plan recognition are contained in [ Kautz, 1991 ] and [ Song, 1991 ] . 6 Future Directions This section presents some important avenues for continuing our work.
Reference: [ Valdes-Perez, 1986 ] <author> R. E. Valdes-Perez. </author> <title> Spatio-temporal reasoning and linear inequalities. </title> <type> Technical Report AI Memo No. 875, </type> <institution> MIT/Artificial Intelligence Laboratory, </institution> <address> Cambridge, MA, </address> <year> 1986. </year>
Reference-contexts: Use an exact, presumably exponential, algorithm and simply accept the amount of time it takes to finish. One such algorithm is proposed in <ref> [ Valdes-Perez, 1986 ] </ref> . This may be a reasonable option for relatively small problems. 3. Restrict the expressiveness of the temporal constraints so that exact solutions can be obtained tractably.
Reference: [ van Beek and Cohen, 1991 ] <author> P. van Beek and R. Cohen. </author> <title> Resolving plan ambiguity for cooperative response generation. </title> <booktitle> In IJCAI 91, </booktitle> <pages> pages 938-944, </pages> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference: [ van Beek, 1989 ] <author> P. van Beek. </author> <title> Approximation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1291-1296, </pages> <address> Detroit, </address> <year> 1989. </year>
Reference-contexts: The incompleteness of Allen's algorithm stems from the expressive power of the temporal constraints. Specifically, his algorithm is only guaranteed to produce correct results with respect to subgraphs of three vertices or less <ref> [ van Beek, 1989 ] </ref> . Sound and complete closure is NP-hard [ Vilain and Kautz, 1986 ] . As a result, we are faced with several standard alternatives: 7 1. <p> Allen contends that his algorithm's inferences correspond to those which humans find natural [ Allen, 1983 ] . There is a family of variations on Allen's algorithm which produce successively better approximations, but only at increasingly ex orbitant cost <ref> [ van Beek, 1989 ] </ref> . 2. Use an exact, presumably exponential, algorithm and simply accept the amount of time it takes to finish. One such algorithm is proposed in [ Valdes-Perez, 1986 ] . This may be a reasonable option for relatively small problems. 3.
Reference: [ Vilain and Kautz, 1986 ] <author> M. Vilain and H. Kautz. </author> <title> Constraint-propagation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of AAAI-86, </booktitle> <pages> pages 377-382, </pages> <address> Philadelphia, PA, </address> <year> 1986. </year> <journal> American Association of Artificial Intelligence. </journal>
Reference-contexts: The incompleteness of Allen's algorithm stems from the expressive power of the temporal constraints. Specifically, his algorithm is only guaranteed to produce correct results with respect to subgraphs of three vertices or less [ van Beek, 1989 ] . Sound and complete closure is NP-hard <ref> [ Vilain and Kautz, 1986 ] </ref> . As a result, we are faced with several standard alternatives: 7 1. Adopt an approximation algorithm such as Allen's, and live with the possible consequence that some plan subsumption relationships will remain undetected.
Reference: [ Vilain et al., 1989 ] <author> M. Vilain, H. Kautz, and P. van Beek. </author> <title> Constraint propagation algorithms for temporal reasoning: a revised report. </title> <editor> In J. deKleer and D. Weld, editors, </editor> <title> Readings in Qualitative Reasoning About Physical Systems. </title> <publisher> Morgan Kauf-mann, </publisher> <address> Los Altos, CA, </address> <year> 1989. </year>
Reference-contexts: In fact, effective algorithms exist for automatic construction of reference interval hierarchies [ Koomen, 1989 ] . Allen's constraint propagation algorithm is sound, but unfortunately not complete <ref> [ Vilain et al., 1989 ] </ref> . This is important because in practice, we cannot expect that all temporal relations will be made explicit in plan definitions. <p> One such algorithm is proposed in [ Valdes-Perez, 1986 ] . This may be a reasonable option for relatively small problems. 3. Restrict the expressiveness of the temporal constraints so that exact solutions can be obtained tractably. For example, Vilain, Kautz and van Beek <ref> [ Vilain et al., 1989 ] </ref> identified a subset of Allen's interval calculus derived from a point-based representation which admits complete polynomial-time constraint prop 8 agation. T-REX currently exercises the first option. We expect that practical experience will educate us as to the best choice.
Reference: [ von Luck et al., 1987 ] <author> K. von Luck, B. Nebel, C. Pelatson, and A. Schmiedel. </author> <title> The anatomy of the back system. </title> <type> Technical Report KIT- Report 41, </type> <institution> Technische Uni-versitat Berlin, </institution> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: While terminological systems are widely used in many application areas, to date they have focused on representing structured conceptual descriptions, or concepts. A critique of contemporary TKR which argues for greater expressiveness is [ Doyle and Patil, 1991 ] . One limitation of current terminological systems, e.g., BACK <ref> [ von Luck et al., 1987 ] </ref> , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] and LOOM [ MacGregor and Bates, 1987 ] , is their inability to represent and reason with complex compositions of <p> Contemporary systems include BACK <ref> [ von Luck et al., 1987 ] </ref> , CLASSIC [ Borgida et al., 1989 ] , K-Rep [ Mays et al., 1991b ] , KRIS [ Baader and Hollunder, 1991 ] , and LOOM [ MacGregor and Bates, 1987 ] .
Reference: [ Weida and Litman, 1992 ] <author> R. Weida and D. J. Litman. </author> <title> Terminological reasoning with constraint networks and an application to plan recognition. </title> <booktitle> In Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <pages> pages 282-293, </pages> <address> Cambridge, MA, </address> <year> 1992. </year> <month> 72 </month>
Reference-contexts: These ideas were implemented by Kautz in the MATS system which we are using in our research. We will have more to say about MATS in Section 4.1.3. 4 Results to Date This section summarizes the present state of our work, some of which was reported in <ref> [ Weida and Litman, 1992 ] </ref> . First, we introduce our plan representation language based on constraint networks. Next, we discuss our results in terminological reasoning with constraint networks, e.g., our plans. Then we present our new, terminological approach to plan recognition.
Reference: [ Weida, 1991 ] <author> R. A. Weida. </author> <title> Object-centered knowledge representation and reasoning with definitional taxonomies. </title> <type> Technical Report CUCS-047-91, </type> <institution> Columbia University Department of Computer Science, </institution> <year> 1991. </year>
Reference: [ Wellman, 1990 ] <author> M. P. Wellman. </author> <title> Formulation of Tradeoffs in Planning Under Uncertainty. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: The advantages obtained from representing knowledge in standard terminological systems are achieved here as well. Our approach is similar in spirit to previous work on plan subsumption <ref> [ Devanbu and Litman, 1991, Wellman, 1990 ] </ref> , but provides a much richer temporal representation language. We also use our notion of constraint network subsumption to develop a new, terminological approach to plan recognition. <p> We also use our notion of constraint network subsumption to develop a new, terminological approach to plan recognition. While terminological plan systems have been applied in the areas of plan synthesis <ref> [ Wellman, 1990 ] </ref> and plan retrieval [ Devanbu and Litman, 1991 ] , the application of terminological reasoning to the area of plan recognition has previously been unexplored. The definitional plan taxonomy provides a natural basis to guide plan recognition. <p> We now summarize each of them. 5.1.1 Plans Previous work on plan subsumption allowed plans that were either atemporal and used for plan synthesis <ref> [ Wellman, 1990 ] </ref> or restricted to the relationship of temporal sequence and used for information retrieval [ Devanbu and Litman, 1991 ] . There is also contemporaneous work on state-based reasoning with plans limited to simple 35 sequences [ Heinsohn et al., 1992 ] . <p> After considering each of these systems in turn, we summarize their comparability in Table 1. Proposed but unimplemented features of T-REX are parenthesized. SUDO-PLANNER Wellman studied the formulation of tradeoffs in the context of medical therapy <ref> [ Wellman, 1990 ] </ref> . He proposed an architecture for a constraint-posting planner which classifies a terminology of partial plan descriptions representing the explored portion of the search space. <p> Can we accomplish something more ambitious? Following is an extremely speculative abstract for hypothetical future work. It suggests a combination of Allen's temporal planner [ Allen, 1991 ] and Wellman's dominance-proving planner <ref> [ Wellman, 1990 ] </ref> which uses subsumption to organize a search space of atemporal plans. We call this vaporware system T-SYN, for Terminological Plan Synthesizer.
Reference: [ Woods and Schmolze, 1992 ] <author> W. A. Woods and J. G. Schmolze. </author> <title> The kl-one family. </title> <journal> Computers and Mathematics with Applications, </journal> <pages> 74(2-5), </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Terminological systems in the tradition of KL-ONE and NIKL <ref> [ Brachman and Schmolze, 1985, Woods and Schmolze, 1992 ] </ref> are widely used to represent and reason with conceptual knowledge required by "intelligent" software applications.
Reference: [ Woods, 1986 ] <author> W. A. Woods. </author> <title> Important issues in knowledge representation. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 74(10) </volume> <pages> 1322-1334, </pages> <year> 1986. </year>
Reference: [ Woods, 1991 ] <author> W. A. Woods. </author> <title> Understanding subsumption and taxonomy: A framework for progress. </title> <editor> In J. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge, </booktitle> <pages> pages 45-94. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year> <note> First appeared as: Harvard University/Center for Research in Computing Technology, Technical Report no. TR-19-90. </note>
Reference-contexts: Under a set of reasonable assumptions, e.g., that concepts are composed from previously classified concepts, it can be argued that the cost of classifying a new concept is typically logarithmic in the size of the concept taxonomy <ref> [ Woods, 1991 ] </ref> . We are hopeful that similar analysis may yield similar results for classification in our plan language.
Reference: [ Yen et al., 1991 ] <author> J. Yen, R. Neches, and R. MacGregor. Clasp: </author> <title> Integrating term subsumption systems and production systems. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 3(1) </volume> <pages> 25-31, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: If the backtracking process is exhausted without finding a suitable mapping, return false. T-REX currently implements this algorithm, which is sound, and complete to the extent that constraint propagation on T2 is complete. Similar to an existing algorithm for production rule subsumption <ref> [ Yen et al., 1991 ] </ref> , it employs well-known CSP techniques. CSP has been widely studied, and improvements are possible. The 19 preliminary analysis that restricts a node's image to be one of its potential subsumees is an example of the node consistency technique. <p> His work did not consider temporal constraint networks as first class entities to be reasoned with in their own right, nor did he address either recognition or the notion of potential subsumption. 5.1.3 Production Rules The CLASP system of <ref> [ Yen et al., 1991 ] </ref> 7 is concerned in part with computing sub-sumption relationships among the antecedents of a set of production rules and classifying the rules accordingly. <p> This compares favorably with ad-hoc specificity measures used in production systems such as OPS5 [ Brownston et al., 1985 ] . We observe that the subsumption task we face is rather like the one described in <ref> [ Yen et al., 1991 ] </ref> . The antecedents of CLASP rules are composed of unary predicates (corresponding to concepts) and binary predicates (corresponding to roles). Thus they can be viewed as constraint networks.
Reference: [ Yen, 1990 ] <author> J. Yen. </author> <title> A principled approach to reasoning about the specificity of rules. </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <pages> pages 701-707, </pages> <address> Boston, MA, </address> <year> 1990. </year> <journal> American Association of Artificial Intelligence. </journal> <volume> 73 </volume>
Reference-contexts: We are hopeful that similar analysis may yield similar results for classification in our plan language. In particular, our optimism is reinforced by the normal case results of <ref> [ Yen, 1990 ] </ref> as mentioned in Section 5.1.3. 3.2 Temporal Constraints Allen, in his influential work on maintaining knowledge about temporal intervals, enumerated a total of seven primitive relationships, plus their inverses, that might hold between any ordered pair of intervals [ Allen, 1983 ] . <p> The antecedents of CLASP rules are composed of unary predicates (corresponding to concepts) and binary predicates (corresponding to roles). Thus they can be viewed as constraint networks. We are encouraged by Yen's analysis which found their algorithm's complexity to be polynomial in "normal" cases <ref> [ Yen, 1990 ] </ref> . 5.2 Plan Recognition 5.2.1 Kautz Our plan recognition work is most closely related to that of Kautz [ Kautz, 1991 ] .
References-found: 67

