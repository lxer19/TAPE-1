URL: ftp://ftp.isi.edu/isi-pubs/rr-97-453.ps.Z
Refering-URL: http://www.isi.edu/isi-technical-reports.html
Root-URL: http://www.isi.edu
Email: gil@isi.edu, tallis@isi.edu  
Title: A Script-Based Approach to Modifying Knowledge Bases  
Author: Yolanda Gil and Marcelo Tallis 
Note: In the Proceedings of the Fourteenth National Conference on Artificial Intelligence (AAAI-97), July 1997,  
Address: 4676 Admiralty Way Marina del Rey, CA 90292  Providence, Rhode Island.  
Affiliation: USC/Information Sciences Institute  
Pubnum: ISI Technical Report ISI/RR-97-453  
Abstract: Our goal is to build knowledge acquisition tools that support users in modifying knowledge-based systems. These modifications may require several individual changes to various components of the knowledge base, which need to be carefully coordinated to prevent users from leaving the knowledge-based system in an unusable state. This paper describes an approach to building knowledge acquisition tools which capture knowledge about commonly occurring modification sequences and support users in completing the modifications they start. These sequences, which we call KA Scripts, relate individual changes and the effects that they have on the knowledge base. We discuss our experience in designing and compiling a library of KA Scripts. We also describe the implementation of a tool that uses them and our preliminary evaluations that demonstrate their usability. 
Abstract-found: 1
Intro-found: 1
Reference: [ Eriksson et al., 1995 ] <author> Eriksson, H.; Shahar, Y.; Tu, S. W.; Puerta, A. R.; and Musen, M. A. </author> <year> 1995. </year> <title> Task modeling with reusable problem-solving methods. </title> <booktitle> Artificial Intelligence 79(1995) </booktitle> <pages> 293-326. </pages>
Reference-contexts: Other frameworks lack this kind of explicit representation, either because they use first-order logic representations that blur important distinctions among different types of knowledge, or because they hard-code some parts of the knowledge-based system reasoning, such as problem-solving knowledge <ref> [ Eriksson et al., 1995 ] </ref> . Another advantage of EXPECT is that it can analyze how generic goals (representative of the types of tasks that the knowledge-based system is built for) are achieved.
Reference: [ Gil & Melz, 1996 ] <author> Gil, Y., and Melz, E. </author> <year> 1996. </year> <title> Explicit representations of problem-solving strategies to support knowledge acquisition. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence. </booktitle>
Reference: [ Gil & Paris, 1994 ] <author> Gil, Y., and Paris, C. </author> <year> 1994. </year> <title> Towards method-independent knowledge acquisition. </title> <journal> Knowledge acquisition 6(2) </journal> <pages> 163-178. </pages>
Reference: [ Gil, 1994 ] <author> Gil, Y. </author> <year> 1994. </year> <title> Knowledge refinement in a reflective architecture. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence. </booktitle>
Reference: [ Langley & Simon, 1995 ] <author> Langley, P., and Simon, H. A. </author> <year> 1995. </year> <title> Applications of machine learning and rule induction. </title> <journal> Communications of the ACM 38(11). </journal>
Reference: [ MacGregor, 1991 ] <author> MacGregor, R. </author> <year> 1991. </year> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In Sowa, J., ed., </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: EXPECT's knowledge bases contain factual domain knowledge and problem solving knowledge. The factual domain knowledge represents concepts, instances, relations, and the constraints among them. It is represented in Loom <ref> [ MacGregor, 1991 ] </ref> , a knowledge representation system of the KL-ONE family. Problem solving methods are procedural descriptions for achieving goals.
Reference: [ Marcus and McDermott, 1989 ] <author> Marcus, S., and McDermott, J. </author> <year> 1989. </year> <title> SALT: A knowledge acquisition language for propose-and-revise systems. </title> <journal> Artificial Intelligence, </journal> <volume> 39(1) </volume> <pages> 1-37. </pages>
Reference: [ Murray, 1996 ] <author> Murray, K. S. </author> <year> 1996. </year> <title> KI: A tool for knowledge integration. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence. </booktitle>
Reference-contexts: More automated approaches for building knowledge-based systems use machine learning and theory revision techniques [ Langley & Simon, 1995, Pazzani & Brunk, 1991, Ourston & Mooney, 1994 ] . However, they can only be used for some types of problems (e.g., classification tasks). Other systems <ref> [ Murray, 1996 ] </ref> can assist users in fixing the inconsistencies caused by the addition of the new knowledge to a knowledge base, but without a problem-solving context in which the knowledge is used.
Reference: [ Ourston & Mooney, 1994 ] <author> Ourston, D., and Mooney, R. J. </author> <year> 1994. </year> <title> Theory refinement combining analytical and empirical methods. </title> <booktitle> Artificial Intelligence 66 </booktitle> <pages> 311-344. </pages>
Reference: [ Pazzani & Brunk, 1991 ] <author> Pazzani, M. J., and Brunk, C. A. </author> <year> 1991. </year> <title> Detecting and correcting errors in rule-based expert systems: an integration of empirical and explanation-based learning. </title> <journal> Knowledge acquisition 3(2) </journal> <pages> 157-173. </pages>
Reference: [ Puerta et al., 1992 ] <author> Puerta, A. R.; Egar, J. W.; Tu, S. W.; and Musen, M. A. </author> <year> 1992. </year> <title> A multiple-method knowledge-acquisition shell for the automatic generation of knowledge-acquisition tools. </title> <journal> Knowledge Acquisition 4(2) </journal> <pages> 171-196. </pages>
Reference: [ Runkel & Birmingham, 1993 ] <author> Runkel, J. T., and Birmingham, W. P. </author> <year> 1993. </year> <title> Knowledge acquisition in the small: Building knowledge-acquisition tools from pieces. </title> <journal> Knowledge acquisition 5(2) </journal> <pages> 221-243. </pages>
Reference: [ Swartout & Gil, 1995 ] <author> Swartout, B., and Gil, Y. </author> <year> 1995. </year> <title> EXPECT: Explicit Representations for Flexible Acquisition. </title> <booktitle> In Proceedings of the Ninth Knowledge-Acquisition for Knowledge-Based Systems Workshop. </booktitle>
Reference: [ Waters, 1985 ] <author> Waters, R. </author> <year> 1985. </year> <title> The programmer`s apprentice: A session with kbemacs. </title> <journal> IEEE Transactions on Software Engineering 11(11) </journal> <pages> 1296-1320. 12 </pages>
Reference-contexts: In fact, three of our four subjects made the comment that they would like help in figuring out where to start the modification. 10 These initiation scripts are similar to the programming cliches in the KBEmacs program editor <ref> [ Waters, 1985 ] </ref> , which represent generic algorithmic fragments that programmers use in writing code. Our initial implementation and preliminary evaluations with users show promising results. We expect the benefits of KA Scripts to be greater for domain experts with no previous exposure to EXPECT or the domain implementation.
References-found: 14

