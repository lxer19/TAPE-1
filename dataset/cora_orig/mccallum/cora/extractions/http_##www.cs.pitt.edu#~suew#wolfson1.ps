URL: http://www.cs.pitt.edu/~suew/wolfson1.ps
Refering-URL: http://www.cs.pitt.edu/~suew/dbwshop2.html
Root-URL: 
Title: Cost and Imprecision in Modeling the Position of Moving Objects  
Author: Ouri Wolfson Sam Chamberlain Son Dao Liqin Jiang Gisela Mendez k 
Abstract: Consider a database that represents the location of moving objects, such as taxi-cabs (typical query: retrieve the cabs that are currently within 1 mile of 33 Michigan Ave., Chicago), or objects in a battle-field. Existing database management systems (DBMS's) are not well equipped to handle continuously changing data, such as the position of moving objects, since data is assumed to be constant unless it is explicitly modified. In this paper we address position-update policies and imprecision. Namely, assuming that the actual position of a moving object m deviates from the position computed by the DBMS, when should m update its position in the database in order to eliminate the deviation? Furthermore, how can the DBMS provide a bound on the error (i.e. the deviation) when it replies to a query: what is the current position of m? We propose a cost based approach to update policies that answers both questions. We develop several update policies and analyze them theoretically and experimentally. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul, R. Hull, V. Vianu, </author> <title> Foundations of Databases, </title> <publisher> Addison Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Furthermore, the paper does not seem to fit neatly into an established field of research. Nevertheless, some research areas are relevant to the present work. One relevant research area is uncertainty in databases (see <ref> [3, 1] </ref> for surveys). However, as far as we know this area has so far addressed different issues than the ones in this paper. Existing works are concerned with management and reasoning with uncertainty, after such uncertainty is introduced in the database.
Reference: [2] <author> P. Kanellakis, </author> <title> Constraint programming and database languages, </title> <booktitle> ACM Symposium on Principles of Database Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: For example, temporal and spatial query languages can be adapted to express queries such as: where will the helicopters be in 10 minutes. In this paper we addressed the questions how and when to update the position attributes. Another relevant area is constraint databases (see <ref> [2] </ref> for a survey). In this sense, our position attributes can be viewed as a constraint, or a generalized tuple, such that the tuples satisfying the constraint are con-sidered in the database. Constraint databases have been separately applied to the temporal domain, and to the spatial domain.
Reference: [3] <author> A. Motro, P. Smets, </author> <title> Uncertainty Management Information Systems, From Needs to Solutions, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1997. </year>
Reference-contexts: Furthermore, the paper does not seem to fit neatly into an established field of research. Nevertheless, some research areas are relevant to the present work. One relevant research area is uncertainty in databases (see <ref> [3, 1] </ref> for surveys). However, as far as we know this area has so far addressed different issues than the ones in this paper. Existing works are concerned with management and reasoning with uncertainty, after such uncertainty is introduced in the database.
Reference: [4] <author> R. Snodgrass and I. Ahn, </author> <title> The temporal databases, </title> <booktitle> IEEE Computer, </booktitle> <month> Sept. </month> <year> 1986. </year>
Reference: [5] <author> H. Samet, </author> <title> The design and analysis of spatial data structures, </title> <publisher> Addison Wesley, </publisher> <year> 1990. </year>
Reference-contexts: When the geographic area and the time span are determined, we use a 3-dimensional spatial index, e.g. an R + -tree (see <ref> [5] </ref> for a survey of spatial access indexes). Spatial indexes use a hierarchical recursive decomposition of space, usually into rectangles. The index is updated whenever a position-update is received from a moving object o. Assuming that the update is received at time t, the update is processed as follows.
Reference: [6] <author> H. Samet, </author> <title> W.G. Aref, Spatial Data Models and Query Processing, In Modern Database Systems, </title> <editor> Won Kim ed., </editor> <publisher> Addison Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Existing works are concerned with management and reasoning with uncertainty, after such uncertainty is introduced in the database. Our current paper addresses the question: what uncertainty/deviation to initially associate with the location of each moving object? Other relevant research areas are temporal databases ([10]), and spatial databases (see <ref> [6] </ref> for a survey). Research in these areas can be used to develop languages to query the position attributes. For example, temporal and spatial query languages can be adapted to express queries such as: where will the helicopters be in 10 minutes.
Reference: [7] <author> S.D. Silvey, </author> <title> Statistical Inference, </title> <publisher> Chapman and Hall, </publisher> <year> 1975. </year>
Reference-contexts: Then the position update policy takes the total cost between t 1 and t 2 to be: COST (t 1 ; t 2 ) = C + COST d (t 1 ; t 2 ) (2) The estimator function (see <ref> [7] </ref>) is a "well-behaved" function f (t) by which we approximate the current deviation, i.e. the deviation at any time unit since the last update; we restrict f (0) = 0 because the update includes the current position of the moving object, and therefore, zero time units after the update the
Reference: [8] <author> P. Sistla, O. Wolfson, S. Chamberlain, S. Dao, </author> <title> Modeling and Querying Moving Objects, to appear, </title> <booktitle> Proceedings of the Thirteenth International Conference on Data Engineering (ICDE13), </booktitle> <address> Birming-ham, UK, Apr.97. </address>
Reference-contexts: Also the indexing method we introduced in this paper is designed to handle imprecision, and is different from the method in <ref> [8] </ref>. Furthermore, using dynamic attributes for moving objects necessitates representing the x coordinate of an object as one dynamic attribute, and the y coordinate as another. However, this may be unsatisfactory if the object is moving along a winding route.
Reference: [9] <author> R. Snodgrass and I. Ahn, </author> <title> The temporal databases, </title> <booktitle> IEEE Computer, </booktitle> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: We assume that whenever a moving object updates its P attribute it updates the P:x:startposition and P:y:startposition subattributes; thus P:starttime is also the time of the last position-update. We assume in this paper that the database updates are instantaneous, i.e. valid- and transaction- times (see <ref> [9] </ref>) are equal. Therefore, P:starttime is the time at which the update occurred in the real world system being modeled, and the time when the database installed the update.
Reference: [10] <author> A. Tansel, J. Clifford, S. Gadia, S. Jajo-dia, A. Segev,R. Snodgrass,editors, </author> <title> Temporal Databases: Theory, design, and Implementation, </title> <address> Benjamin/Cummings, </address> <year> 1993. </year>
References-found: 10

