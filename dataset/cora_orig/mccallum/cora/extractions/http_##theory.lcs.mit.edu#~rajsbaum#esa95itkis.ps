URL: http://theory.lcs.mit.edu/~rajsbaum/esa95itkis.ps
Refering-URL: http://theory.lcs.mit.edu/~rajsbaum/
Root-URL: 
Phone: 2  
Title: On Mixed Connectivity Certificates (Extended Abstract)  
Author: Shimon Even ? Gene Itkis ?? Sergio Rajsbaum ??? 
Address: Israel 32000  U.N.A.M., Ciudad Universitaria, D.F. 04510, Mexico  
Affiliation: 1 Department of Computer Science, Technion, Haifa,  Instituto de Matematicas,  
Abstract: Vertex and edge connectivity are special cases of mixed connectivity, in which all edges and a specified set of vertices play a similar role. Certificates of k-connectivity for a graph are obtained by removing a subset of its edges, while preserving its connectivity up to k. We unify the previous work on connectivity certificates and extend it to handle mixed connectivity and multigraphs. Our treatment contributes a new insight of the pertinent structures, yielding more general results and simpler proofs. Also, we present a communication-optimal distributed algorithm for finding mixed connectivity certificates.
Abstract-found: 1
Intro-found: 1
Reference: [AP90] <author> B. Awerbuch and D. Peleg, </author> <title> "Network synchronization with polylogarithmic overhead", </title> <booktitle> in FOCS, </booktitle> <year> 1990, </year> <pages> pp. 514-522. </pages>
Reference-contexts: They show that for simple graphs, constructing F i in a scan-first-search manner (see Section 4.3) is sufficient to produce certificates of vertex k-connectivity. Their distributed algorithm uses the synchronizers of <ref> [AP90] </ref> and runs in time O (kjV j log 3 jV j) using O (kjEj + kjV j log 3 jV j) messages. Every certificate obtained by the algorithm of [NI92] can be obtained using the scan-first-search; but as we show in the sequel, the converse does not hold.
Reference: [CM88] <author> J. Cheriyan and S. N. Maheshwari, </author> <title> "Finding nonseparating induced cycles and independent spanning trees in 3-connected graphs", </title> <journal> J. Algorithms, </journal> <volume> 9, </volume> <year> 1988, </year> <pages> pp. 507-537. </pages>
Reference-contexts: For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity [NI92, CKT93, G91]; to improve the running time for finding three independent spanning trees <ref> [CM88] </ref>; to design efficient fault tolerant protocols for distributed computer networks [IR88], dynamic and distributed algorithms [EGIN92]. Sparse certificates are of special utility for the distributed model of computation. This model consists of a graph G with the vertices representing processors and the edges representing bidirectional communication links.
Reference: [CKT93] <author> J. Cheriyan, M.-Y. Kao, R. Thurimella, </author> <title> "Scan-first search and sparse certificates: an improved parallel algorithm for k-vertex connectivity", </title> <journal> SIAM J. of Computing, </journal> <volume> 22(1), </volume> <year> 1993, </year> <pages> pp. 157-174. </pages>
Reference-contexts: One may perform a preprocessing step to find a sparse certificate, and then run the algorithms on the certificate. For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity <ref> [NI92, CKT93, G91] </ref>; to improve the running time for finding three independent spanning trees [CM88]; to design efficient fault tolerant protocols for distributed computer networks [IR88], dynamic and distributed algorithms [EGIN92]. Sparse certificates are of special utility for the distributed model of computation. <p> Graph G is called S-simple if it has no parallel edges incident to vertices of S. Frank, Ibaraki and Nagamochi [FIN93] show that for all S V the algorithm of [NI92] applied to S-simple graphs produces certificates of S-mixed connectivity. Cheriyan, Kao and Thurimella <ref> [CKT93] </ref> introduce a more flexible way of constructing certificates of vertex connectivity of size &lt; kjV j, and use it in their distributed and parallel algorithms. They show that for simple graphs, constructing F i in a scan-first-search manner (see Section 4.3) is sufficient to produce certificates of vertex k-connectivity. <p> Every certificate obtained by the algorithm of [NI92] can be obtained using the scan-first-search; but as we show in the sequel, the converse does not hold. Thus, the results of [FIN93] do not apply to the certificates of <ref> [CKT93] </ref>. A new distributed algorithm by Thurimella [T95] for computing O (kjV j) size certificates has time complexity O (k (D + jV j 0:614 )), where D is the diameter of the network. The communication complexity of the algorithm was not analyzed. <p> It consists of an optimum reduction from general graphs, allowing parallel edges, to S-simple graphs, and a scheme to generate certificates of size &lt; kjV j for S-simple graphs. 3 This scheme includes as special cases the results of <ref> [CKT93, NI92, FIN93] </ref> and has a simpler correctness proof. We believe that the generality of this scheme as well as the simplicity of the proof contribute towards a better understanding of connectivity certificates. 3 Note that an optimum reduction may not produce an optimum certificate. <p> When S = V , this algorithm is called by Cheriyan et al. scan-first-search <ref> [CKT93] </ref>. They prove that the union of these forests constitutes a certificate of vertex k-connectivity (of size &lt; kjV j). This is a special case of our Theorem 3. Nagamochi and Ibaraki [NI92] describe an algorithm, which we call N I-search. <p> N I-search is the only previously published sequential algorithm we know of, to build greedy forests in linear time. Our generic strategy, as presented in sec. 4.1, is more general and provides greater flexibility for other implementations. A case in point is the method used in <ref> [CKT93] </ref> to design efficient parallel and distributed algorithms that produce vertex connectivity certificates. We describe N I-search, and prove that it generates S-greedy forests. This is done in detail for self-containment and since our distributed algorithm can be viewed as an implementation of N I-search.
Reference: [DF56] <author> G. B. Dantzig and D. R. Fulkerson, </author> <title> "On the Max-Flow Min-Cut Theorem of networks", Linear Inequalities and Related Systems, </title> <journal> Annals of Math. Study, </journal> <volume> 38, </volume> <publisher> Princeton University Press, </publisher> <year> 1956, </year> <month> pp.215-221. </month>
Reference-contexts: If ; 6= A 0 A; ; 6= B 0 B then the cut C = (Z; E (A; B)) separates A 0 and B 0 . The size of C is defined to be jCj def = jZj + jE (A; B)j. As was observed in [FIN93], following <ref> [DF56] </ref>, using the max-flow min-cut theorem, it is easy to derive the following version of Menger's theorem. Theorem 1 For any a; b 2 V , the minimum size of an S-mixed cut separating a; b is S (a; b; G).
Reference: [EGIN92] <author> D. Eppstein, Z. Galil, G. F. Italiano, A. Nissenzweig, </author> <title> "Sparsification | a technique for speeding up dynamic algorithms", </title> <booktitle> FOCS, </booktitle> <year> 1992, </year> <pages> pp. 60-69. </pages>
Reference-contexts: For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity [NI92, CKT93, G91]; to improve the running time for finding three independent spanning trees [CM88]; to design efficient fault tolerant protocols for distributed computer networks [IR88], dynamic and distributed algorithms <ref> [EGIN92] </ref>. Sparse certificates are of special utility for the distributed model of computation. This model consists of a graph G with the vertices representing processors and the edges representing bidirectional communication links. There is no common memory and all communication is through messages sent along the links.
Reference: [FIN93] <author> A. Frank, T. Ibaraki, H. Nagamochi, </author> <title> "On sparse subgraphs preserving connectivity properties", </title> <journal> J. of Graph Theory, </journal> <volume> 17(3), </volume> <year> 1993, </year> <pages> pp. 275-281. </pages>
Reference-contexts: Part of this research was conducted in Boston University. E-mail: itkis@cs.technion.ac.il ??? Part of this research was conducted while visiting the MIT Laboratory for Computer Science, and CRL Digital Equipment Corporation. Partly supported by DGAPA Projects, U.N.A.M. E-mail: rajsbaum@theory.lcs.mit.edu Following <ref> [FIN93] </ref>, we consider a generalization of these two particular types of connectivity. Let S V . <p> Moreover, if G is simple and the forests are grown according to a certain rule (see Section 4), then G k is a vertex k-connectivity certificate as well. Graph G is called S-simple if it has no parallel edges incident to vertices of S. Frank, Ibaraki and Nagamochi <ref> [FIN93] </ref> show that for all S V the algorithm of [NI92] applied to S-simple graphs produces certificates of S-mixed connectivity. Cheriyan, Kao and Thurimella [CKT93] introduce a more flexible way of constructing certificates of vertex connectivity of size &lt; kjV j, and use it in their distributed and parallel algorithms. <p> Every certificate obtained by the algorithm of [NI92] can be obtained using the scan-first-search; but as we show in the sequel, the converse does not hold. Thus, the results of <ref> [FIN93] </ref> do not apply to the certificates of [CKT93]. A new distributed algorithm by Thurimella [T95] for computing O (kjV j) size certificates has time complexity O (k (D + jV j 0:614 )), where D is the diameter of the network. <p> It consists of an optimum reduction from general graphs, allowing parallel edges, to S-simple graphs, and a scheme to generate certificates of size &lt; kjV j for S-simple graphs. 3 This scheme includes as special cases the results of <ref> [CKT93, NI92, FIN93] </ref> and has a simpler correctness proof. We believe that the generality of this scheme as well as the simplicity of the proof contribute towards a better understanding of connectivity certificates. 3 Note that an optimum reduction may not produce an optimum certificate. <p> G (v) def = V (E (v))fvg is the set of neighbors of v in G. Following the definitions in <ref> [FIN93] </ref>, let fZ; A; Bg be a partition of V such that Z S, A 6= ; and B 6= ;. We say that the pair C = (Z; E (A; B)) is an S-mixed cut. <p> If ; 6= A 0 A; ; 6= B 0 B then the cut C = (Z; E (A; B)) separates A 0 and B 0 . The size of C is defined to be jCj def = jZj + jE (A; B)j. As was observed in <ref> [FIN93] </ref>, following [DF56], using the max-flow min-cut theorem, it is easy to derive the following version of Menger's theorem. Theorem 1 For any a; b 2 V , the minimum size of an S-mixed cut separating a; b is S (a; b; G). <p> Theorem 3 below is a generalization of the main theorem of <ref> [FIN93] </ref>, where it has been stated for a specific subclass of S-greedy forests. Theorem 3 (Mixed Connectivity Certificate) S (a; b; G k ) minfk; S (a; b; G)g, for all a; b 2 V . We need a couple of lemmas before proving the theorem. <p> Frank et al. show that if G is S-simple, then the resulting G k is a certificate of local S-mixed k-connectivity <ref> [FIN93] </ref>. As we shall see, each F i produced by N I-search is V -greedy in (V; E i1 ), and therefore these results are subsumed by our Theorem 3. <p> However, there are certificates composed of S-greedy forests that cannot be produced by N I-search (e.g. see Figure 1, where S = V ). Hence, results of Fig. 1. A certificate made of V -greedy forests which cannot be obtained by N I-search. <ref> [FIN93] </ref> do not imply that in general S-greedy forests (and in particular scan-first forests) yield mixed connectivity certificates. N I-search is the only previously published sequential algorithm we know of, to build greedy forests in linear time.
Reference: [G91] <author> H. Gabow, </author> <title> "A matroid approach to finding edge connectivity and packing arborescences", </title> <booktitle> STOC, </booktitle> <year> 1991, </year> <pages> pp. 112-132. </pages>
Reference-contexts: One may perform a preprocessing step to find a sparse certificate, and then run the algorithms on the certificate. For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity <ref> [NI92, CKT93, G91] </ref>; to improve the running time for finding three independent spanning trees [CM88]; to design efficient fault tolerant protocols for distributed computer networks [IR88], dynamic and distributed algorithms [EGIN92]. Sparse certificates are of special utility for the distributed model of computation.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and intractability, a guide to the theory of NP-completeness, </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979, </year> <note> p. 198. </note>
Reference: [IR88] <author> A. Itai and M. Rodeh, </author> <title> "The Multi-Tree Approach to Reliability in Distributed Networks", </title> <journal> Information and Computation, </journal> <volume> 79(1), </volume> <year> 1988, </year> <pages> pp. 3-59. </pages>
Reference-contexts: For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity [NI92, CKT93, G91]; to improve the running time for finding three independent spanning trees [CM88]; to design efficient fault tolerant protocols for distributed computer networks <ref> [IR88] </ref>, dynamic and distributed algorithms [EGIN92]. Sparse certificates are of special utility for the distributed model of computation. This model consists of a graph G with the vertices representing processors and the edges representing bidirectional communication links.
Reference: [M72] <author> W. Mader, </author> " <title> Uber minimal n-fach zusammenhangende, unendliche Graphen und ein Extremalproblem," </title> <journal> Arch. Mat., </journal> <volume> Vol. </volume> <pages> XXIII, </pages> <year> 1972, </year> <pages> pp. 553-560. </pages>
Reference: [M73] <author> W. Mader, </author> <title> "Grad und lokaler Zusammenhang in endlichen Graphen," </title> <journal> Math. Ann., </journal> <volume> Vol. 205, </volume> <year> 1973, </year> <pages> pp. 9-11. </pages>
Reference-contexts: For a k-connected G there is a trivial lower bound of kjV j=2 on the size of a certificate of k-connectivity, because the degree of every vertex in a k-connected graph is at least k. Results of Mader ([M72], <ref> [M73] </ref>, [M79]) imply that every edge k-connected graph G contains an edge k-connected subgraph with O (kjV j) edges. Also, Mader's results imply a similar result for vertex connectivity of simple graphs.
Reference: [M79] <author> W. Mader, </author> <title> "Connectivity and edge-connectivity in finite graphs," in Surveys on Combinatorics, (B. Bollobas, ed.), </title> <journal> London Math. Soc. Lecture Note Series, </journal> <volume> Vol. 38, </volume> <year> 1979, </year> <pages> pp. 293-309. </pages>
Reference-contexts: For a k-connected G there is a trivial lower bound of kjV j=2 on the size of a certificate of k-connectivity, because the degree of every vertex in a k-connected graph is at least k. Results of Mader ([M72], [M73], <ref> [M79] </ref>) imply that every edge k-connected graph G contains an edge k-connected subgraph with O (kjV j) edges. Also, Mader's results imply a similar result for vertex connectivity of simple graphs.
Reference: [NI92] <author> H. Nagamochi and T. Ibaraki, </author> <title> "A Linear-time algorithm for finding a sparse k-connected spanning subgraph of a k-conneceted graph," </title> <journal> Algorithmica, </journal> <volume> 7, </volume> <year> 1992, </year> <pages> pp. 583-596. </pages>
Reference-contexts: One may perform a preprocessing step to find a sparse certificate, and then run the algorithms on the certificate. For example, this method has been used to improve the sequential time complexity of testing simple undirected graphs for k-connectivity <ref> [NI92, CKT93, G91] </ref>; to improve the running time for finding three independent spanning trees [CM88]; to design efficient fault tolerant protocols for distributed computer networks [IR88], dynamic and distributed algorithms [EGIN92]. Sparse certificates are of special utility for the distributed model of computation. <p> Chung and R. Graham). Indeed, for k = 2 the reduction from the Hamiltonian Cycle problem is trivial. However, finding good approximations is possible for all k: Nagamochi and Ibaraki <ref> [NI92] </ref> find, in time O (jEj), edge and vertex connectivity certificates of size &lt; kjV j (which is within a factor of 2 from the trivial lower bound described in Section 1.1). <p> Graph G is called S-simple if it has no parallel edges incident to vertices of S. Frank, Ibaraki and Nagamochi [FIN93] show that for all S V the algorithm of <ref> [NI92] </ref> applied to S-simple graphs produces certificates of S-mixed connectivity. Cheriyan, Kao and Thurimella [CKT93] introduce a more flexible way of constructing certificates of vertex connectivity of size &lt; kjV j, and use it in their distributed and parallel algorithms. <p> Their distributed algorithm uses the synchronizers of [AP90] and runs in time O (kjV j log 3 jV j) using O (kjEj + kjV j log 3 jV j) messages. Every certificate obtained by the algorithm of <ref> [NI92] </ref> can be obtained using the scan-first-search; but as we show in the sequel, the converse does not hold. Thus, the results of [FIN93] do not apply to the certificates of [CKT93]. <p> It consists of an optimum reduction from general graphs, allowing parallel edges, to S-simple graphs, and a scheme to generate certificates of size &lt; kjV j for S-simple graphs. 3 This scheme includes as special cases the results of <ref> [CKT93, NI92, FIN93] </ref> and has a simpler correctness proof. We believe that the generality of this scheme as well as the simplicity of the proof contribute towards a better understanding of connectivity certificates. 3 Note that an optimum reduction may not produce an optimum certificate. <p> For every i 1, let F i be a maximal forest in (V; E i1 ). Then each forest F i consists of a set of spanning trees, one for each connected component of (V; E i1 ). The next lemma follows directly from the maximality of the forests <ref> [NI92] </ref>. Lemma 4 If u and v are connected in F j , then for each i, 1 i &lt; j, u and v are connected in F i . <p> When S = V , this algorithm is called by Cheriyan et al. scan-first-search [CKT93]. They prove that the union of these forests constitutes a certificate of vertex k-connectivity (of size &lt; kjV j). This is a special case of our Theorem 3. Nagamochi and Ibaraki <ref> [NI92] </ref> describe an algorithm, which we call N I-search. This algorithm produces a partition of E into (S-greedy) forests F 1 ; F 2 ; : : : in a single search of the graph, thus reducing the complexity to O (jV j + jEj).
Reference: [T95] <author> R. Thurimella, </author> <title> "Sub-linear Distributed Algorithms for sparse certificates and Biconnected Components," </title> <booktitle> to appear in Proc. of the 14th ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Every certificate obtained by the algorithm of [NI92] can be obtained using the scan-first-search; but as we show in the sequel, the converse does not hold. Thus, the results of [FIN93] do not apply to the certificates of [CKT93]. A new distributed algorithm by Thurimella <ref> [T95] </ref> for computing O (kjV j) size certificates has time complexity O (k (D + jV j 0:614 )), where D is the diameter of the network. The communication complexity of the algorithm was not analyzed.
Reference: [Z69] <author> A. A. Zykov, </author> <title> Theory of Finite Graphs,, (in Russian), </title> <publisher> Nauka, </publisher> <address> Novosibirsk, </address> <year> 1969, </year> <note> see pp. </note> <month> 104-105. </month> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Namely, an edge k-connected graph has a certificate of global edge k-connectivity of size O (kjV j), and a simple graph, which is vertex k-connected, has a certificate of global vertex k-connectivity of size O (kjV j). However, as is shown below, if one following Zykov's point of view <ref> [Z69] </ref>, as we do, if parallel edges are allowed, the statement does not hold for vertex connectivity. Example. Let G = (V; E) be a complete graph, each pair of vertices connected by p parallel edges.
References-found: 15

