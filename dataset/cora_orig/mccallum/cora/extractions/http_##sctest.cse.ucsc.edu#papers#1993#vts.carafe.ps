URL: http://sctest.cse.ucsc.edu/papers/1993/vts.carafe.ps
Refering-URL: http://www.cse.ucsc.edu/~fjf/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Carafe: An Inductive Fault Analysis Tool for CMOS VLSI Circuits  
Author: Alvin Jee and F. Joel Ferguson 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California, Santa Cruz  
Abstract: Traditional fault models for testing CMOS VLSI circuits do not take into account the actual mechanisms that precipitate faults in CMOS circuits. As a result, tests based on traditional fault models may not detect the actual faults in the circuit. This paper discusses the Carafe software package which determines which faults are likely to occur in a circuit based on the circuit's physical design, defect parameters, and fabrication technology. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. M. Acken. </author> <title> Testing for bridging faults (shorts) in CMOS circuits. </title> <booktitle> Proceedings of the Design Automation Conference, </booktitle> <pages> pages 717-718, </pages> <year> 1983. </year>
Reference-contexts: These faults may cause increased propagation delays or excess quiescent power supply current <ref> [8, 1] </ref>. The last column in the table lists the percentage of bridge faults that either changed the truth table of the cell to a non-stuck-at fault or caused the cell to output intermediate voltages that were not easily translated to logic values.
Reference: [2] <author> F. Brglez and H. Fujiwara. </author> <title> A neutral netlist of 10 combinational benchmark circuits and a target translator in FORTRAN. </title> <booktitle> In Proceedings of the IEEE International Symposium on Circuits and Systems, </booktitle> <pages> pages 662-698, </pages> <month> May </month> <year> 1985. </year>
Reference-contexts: The circuits used were MCNC's standard cells and their standard cell implementations of the ISCAS'85 ATPG benchmark circuits <ref> [2] </ref>. For these experiments, the minimum feature size was 2 microns and a single defect radius of 2.5 microns was used. The defects were assumed to be equally likely on all layers of material.
Reference: [3] <author> F. Joel Ferguson. </author> <title> Inductive Fault Analysis of VLSI Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, Department of Electrical and Computer Engineering, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: It would be better to first locate the circuit faults that can occur in the circuit, determine the behavior of those circuit faults, and then test for those behavioral faults. Inductive Fault Analysis (IFA) <ref> [3] </ref> is a procedure that provides the list of circuit faults that can occur in a given circuit layout. IFA determines the effect of spot defects on the physical circuit.
Reference: [4] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test pattern generation for realistic bridging faults in CMOS ICs. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 492-499. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: The amount of time required to extract the faults as well as the large size of the fault lists that would be generated may make the analysis of large circuit infeasible. To address this problem, large circuits have been analyzed by partitioning the circuit into cells and interconnect wires <ref> [4] </ref>. The paper in [4] showed how this partitioning of the circuit allows the faults in the interconnects to be extracted by Carafe, fault simulated, and have test generated to detect them. Standard cell based designs lend themselves to this partitioning very easily. <p> To address this problem, large circuits have been analyzed by partitioning the circuit into cells and interconnect wires <ref> [4] </ref>. The paper in [4] showed how this partitioning of the circuit allows the faults in the interconnects to be extracted by Carafe, fault simulated, and have test generated to detect them. Standard cell based designs lend themselves to this partitioning very easily. <p> Standard cell based designs lend themselves to this partitioning very easily. For those experiments, a slightly modified version of Carafe was used to analyze just the interconnect wires of the circuit. 3.2 Standard cells In <ref> [4] </ref>, faults involving the interconnections between cells are extracted, fault simulated, and test generated for them. The next step in the analysis is to characterize each individual standard cell using Carafe. The next experiments analyzed the behavior of some standard cells with bridge faults. <p> Now that the fault list can be obtained, we can begin generating tests that target these types of faults directly. Work has already been done on generating I DDQ tests for the bridge faults that occur in the in terconnection wires of a circuit <ref> [4] </ref>. The next step is to develop methods to generate tests for the faults that occur within a cell or logic gate. Another area that Carafe is currently being used in is the area of physical design for testability.
Reference: [5] <author> F. Joel Ferguson and John P. Shen. </author> <title> A CMOS fault extractor for inductive fault analysis. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 7(11) </volume> <pages> 1181-1194, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: The defect simulations in IFA showed that over 99% of all the defects in a group of CMOS circuits caused circuit faults that were either bridge or break faults <ref> [5] </ref>. 2 Carafe The IFA process was shown feasible by the FXT software [5]. However, FXT was primarily a research tool and was not intended to be used as general purpose IFA software. <p> The defect simulations in IFA showed that over 99% of all the defects in a group of CMOS circuits caused circuit faults that were either bridge or break faults <ref> [5] </ref>. 2 Carafe The IFA process was shown feasible by the FXT software [5]. However, FXT was primarily a research tool and was not intended to be used as general purpose IFA software.
Reference: [6] <author> J. Galiay, Y. Crouzet, and M. Vergniault. </author> <title> Physical versus logical fault models in MOS LSI circuits: Impact on their testability. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(6):283-287, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: This is not always the case for CMOS ICs <ref> [6, 11] </ref>. The problem is that the stuck-at fault model does not take into account the actual circuit fault and thus often cannot model the resulting behavior of many circuit faults.
Reference: [7] <author> Alvin Jee. </author> <title> Carafe user's manual. </title> <type> Technical Report UCSC-CRL-90-61, </type> <institution> University of California at Santa Cruz, </institution> <year> 1990. </year>
Reference-contexts: Carafe has been implemented using about 35000 lines of C code. Carafe has been designed to be tech nology independent and can thus be used for a variety of CMOS fabrication technologies <ref> [7] </ref>. Provisions are made to accommodate any discrete defect distribution functions by layer and defect size. Carafe has been run on several different machines including: HP 700, IBM RS/6000, NCR UNIX machines, NeXT cube, Sun SPARCstation, and Sun 386i.
Reference: [8] <author> Y.K. Malaiya and S.Y.H. Su. </author> <title> A new fault model and testing technique for CMOS devices. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 25-34. </pages> <publisher> IEEE, </publisher> <year> 1982. </year>
Reference-contexts: These faults may cause increased propagation delays or excess quiescent power supply current <ref> [8, 1] </ref>. The last column in the table lists the percentage of bridge faults that either changed the truth table of the cell to a non-stuck-at fault or caused the cell to output intermediate voltages that were not easily translated to logic values.
Reference: [9] <author> Peter C. Maxwell, Robert C. Aitken, Vic Jo-hansen, and Inshen Chiang. </author> <title> The effectiveness of I DDQ , functional and scan tests: How many fault coverages do we need? In Proceedings of the International Test Conference, </title> <address> pages 168-177. </address> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: For a test to pass only a few defective parts per million (DPM), the test must be able to detect a very high percentage of the circuit's defects <ref> [9, 12] </ref>. Unfortunately, many of the defects that may occur during the fabrication of CMOS ICs do not exhibit traditional fault behavior.
Reference: [10] <author> E.J. McCluskey and F. Buelow. </author> <title> IC quality and test transparency. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 295-301. </pages> <publisher> IEEE, </publisher> <year> 1988. </year>
Reference-contexts: The quality level can then computed from the defect coverage using the formulas in <ref> [12, 10] </ref>. 2.4 Implementation details Carafe has two modes of operation: batch and interactive mode. The batch mode allows Carafe to be used for multiple analyses of the same circuit using different defect parameters.
Reference: [11] <author> J.P. Shen, W. Maly, and F.J. Ferguson. </author> <title> Inductive fault analysis of MOS integrated circuits. </title> <journal> IEEE Design and Test of Computers, </journal> <volume> 2(6) </volume> <pages> 13-26, </pages> <month> De-cember </month> <year> 1985. </year>
Reference-contexts: This is not always the case for CMOS ICs <ref> [6, 11] </ref>. The problem is that the stuck-at fault model does not take into account the actual circuit fault and thus often cannot model the resulting behavior of many circuit faults.
Reference: [12] <author> Thomas W. Williams and N. C. Brown. </author> <title> Defect level as a function of fault coverage. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(12):987-988, </volume> <month> Decem-ber </month> <year> 1981. </year>
Reference-contexts: For a test to pass only a few defective parts per million (DPM), the test must be able to detect a very high percentage of the circuit's defects <ref> [9, 12] </ref>. Unfortunately, many of the defects that may occur during the fabrication of CMOS ICs do not exhibit traditional fault behavior. <p> The quality level can then computed from the defect coverage using the formulas in <ref> [12, 10] </ref>. 2.4 Implementation details Carafe has two modes of operation: batch and interactive mode. The batch mode allows Carafe to be used for multiple analyses of the same circuit using different defect parameters.
References-found: 12

