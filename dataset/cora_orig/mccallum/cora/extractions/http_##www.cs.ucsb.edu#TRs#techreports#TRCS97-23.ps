URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS97-23.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: teo@cs.ucsb.edu  
Title: Improved Approximation Algorithms for Embedding Hypergraphs in a Cycle  
Author: Teofilo F. Gonzalez 
Date: Revised: June 98 June 29, 1998  
Address: Santa Barbara, CA, 93106  
Affiliation: Department of Computer Science University of California,  
Pubnum: UCSB TR 97-23  
Abstract: Approximation algorithms embedding hypergraphs in a cycle so as to minimize the maximum congestion are presented. Our algorithms generate an embedding by transforming the problem into another problem that can be solved in polynomial time. One transforms it to a Linear Programming (LP) problem, and the other one (LP-Free) to the problem of embedding a graph in a cycle. Both algorithms generate an embedding with congestion at most twice of that in an optimal solution, and we give problem instances for which the solutions generated by both of these algorithms is about twice of optimal. Our problem has applications in CAD and parallel computation. Keywords: Approximation Algorithms, parallel computation, CAD, linear time algo rithms, minimize congestion.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Baker, B. S., and R. Y. </author> <title> Pinter "An Algorithm for the Optimal Placement and Routing of a Circuit within a Ring of PADS," </title> <journal> IEEE FOCS, pp. </journal> <volume> 360 - 370, </volume> <month> Oct. </month> <year> 1983. </year>
Reference-contexts: Note that if the c-path P i consists of all its m i a-paths, then one of the a-paths may be deleted without affecting feasibility. For each a-path p i;j we define the variable a i;j which holds a real value in the interval <ref> [0; 1] </ref>. We define the inequalities m i X a i;j = m i 1 0 i m 0 a i;j 1: 8 i and j Any solution to (1) must satisfy that at least m i 1 of the a i; 's have value at least 1=2.
Reference: [2] <author> Frank, A., T. Nishizeki, N. Saito, H. Suzuki, and E. Tardos, </author> <title> "Algorithms for Routing Around a Rectangle," </title> <journal> Discrete Applied Mathematics, </journal> <volume> Vol. 40, No. 3, </volume> <year> 1992, </year> <pages> pp. 363 - 378. </pages>
Reference-contexts: of finding c-paths P i , for 1 i m, such that the congestion which is measured by max e2C jfi such that e 2 P i gj is least possible. 1 When the hypergraph is a graph (all hyperedges contain exactly two vertices), Frank, Nishizeki, Saito, Suzuki, and Tardos <ref> [2] </ref> developed a linear time algorithm to solve this problem. Ganley and Cohoon [3] showed that the problem is NP-hard in general, and that it can be solved in polynomial time when there is an embedding with congestion at most k, for any fixed value k. <p> Later on we show how to solve the general case. We solve this problem by transforming it to an instance of the EHCMC problem in which all the hyperedges have exactly two vertices which we know can be solved in linear time by the algorithm in <ref> [2] </ref>. Then from the solution to that problem we solve our EHCMC problem. The transformation is as follows: Each hyperedge h i with m i points is transformed into m i edges (i.e., hyperedges with two vertices). <p> Once we have constructed the instance of the EHCMC problem in which all the hyperedges have exactly two vertices we solve it with the linear time algorithm given in <ref> [2] </ref>. Now we transform back such solution to the original problem and remove duplicate connections, or delete an a-path from a c-path that includes all its a-paths. <p> The solution has congestion ^ f I 2f fl I simply because an optimal solution to the original problem can be transformed into a feasible solution to the transformed problem with 7 congestion 2f fl I and the algorithm in <ref> [2] </ref> gives the best possible solution to the transformed problem. FE DCBA Lemma 3.1 The procedure described above generates for every instance of the EHCMC a solution with congestion ^ f I 2f fl I . <p> In general, a vertex may be in more than one hyperedge. The LP algorithm adapts to this problem without any major change, and the LP-free algorithm can also handle this case because the algorithm for embedding a graph into a cycle <ref> [2] </ref> also works for this type of problems.
Reference: [3] <author> Ganley, J. L., and J. P. Cohoon, </author> <title> "Minimum-Congestion Hypergraph Embedding in a Cycle," </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 46, No. 5, </volume> <pages> pp. 600 - 602, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) <ref> [3] </ref> has applications in design automation (routing nets around a rectangle ([5] [6], [7], [10]), and moat routing ([1], [4], [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]). <p> 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) <ref> [3] </ref> has applications in design automation (routing nets around a rectangle ([5] [6], [7], [10]), and moat routing ([1], [4], [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]). <p> Ganley and Cohoon <ref> [3] </ref> showed that the problem is NP-hard in general, and that it can be solved in polynomial time when there is an embedding with congestion at most k, for any fixed value k. Ganley and Cohoon [3] also developed an approximation algorithm that generates embedding with congestion at most three times <p> Ganley and Cohoon <ref> [3] </ref> showed that the problem is NP-hard in general, and that it can be solved in polynomial time when there is an embedding with congestion at most k, for any fixed value k. Ganley and Cohoon [3] also developed an approximation algorithm that generates embedding with congestion at most three times the congestion of an optimal solution, i.e., ^ f I 3f fl I , where I is an instance of the EHCMC problem, ^ f I is the congestion of the solution generated by the algorithm
Reference: [4] <author> Ganley, J. L., and J. P. Cohoon, </author> <title> "A Provably Good Moat Routing Algorithm," </title> <booktitle> Proceedings of The Sixth Great Lakes Symposium on VLSI, </booktitle> <pages> pp. 86 - 91, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] [6], [7], [10]), and moat routing ([1], <ref> [4] </ref>, [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]).
Reference: [5] <author> Gonzalez, T., and S. L. Lee, </author> <title> "A Linear Time Algorithm for Optimal Wiring Around a Rectangle," </title> <journal> JACM, </journal> <volume> Vol. 35, No. 4, </volume> <pages> pp. 810 - 832, </pages> <month> Oct. </month> <year> 1988. </year>
Reference: [6] <author> Gonzalez, T., and S. L. Lee, </author> <title> "A 1.60 Approximation Algorithm for Routing Multiterminal Nets Around a Rectangle," </title> <journal> SIAM J. Computing, </journal> <volume> Vol. 16, No. 4, </volume> <pages> pp. 669 - 704, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] <ref> [6] </ref>, [7], [10]), and moat routing ([1], [4], [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]).
Reference: [7] <author> LaPaugh, A. S., </author> <title> "A Polynomial Time Algorithm for Optimal Routing Around a Rectangle", </title> <booktitle> Proceedings of the 21st IEEE FOCS, </booktitle> <pages> pp. 282 - 293, </pages> <year> 1980. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] [6], <ref> [7] </ref>, [10]), and moat routing ([1], [4], [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]).
Reference: [8] <author> McGehee, R. K., </author> <title> "A practical Moat Router," </title> <booktitle> Proceedings of The Twenty-Fourth Design Automation Conference, </booktitle> <pages> pp. 216 - 222, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] [6], [7], [10]), and moat routing ([1], [4], <ref> [8] </ref>, [12])), and in parallel computing (mapping data structures onto a ring network [3]).
Reference: [9] <author> Okamura, H. and P. D. Seymour, </author> <title> "Multicommodity Flows in Planar Graphs," </title> <journal> Journal of Combinatorial Theory, Series B, </journal> <volume> Vol. 31, </volume> <pages> pp. 75 - 81, </pages> <year> 1981. </year>
Reference: [10] <author> Sarrafzadeh M. and F. P. Preparata, </author> <title> "A Bottom-Up Layout Technique Based on Two-Rectangle Routing," INTEGRATION: </title> <journal> the VLSI journal, </journal> <volume> Vol. 5, </volume> <pages> pp. 231 - 246, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] [6], [7], <ref> [10] </ref>), and moat routing ([1], [4], [8], [12])), and in parallel computing (mapping data structures onto a ring network [3]).
Reference: [11] <author> Suzuki, H., T, Nishizeki, and N. Saito, </author> <title> "Variable Priority Queue and Doughnut Routing," </title> <journal> Journal of Algorithms, </journal> <volume> Vol 13, </volume> <pages> pp. 606 - 635, </pages> <year> 1992. </year>
Reference: [12] <author> Tsai, C. C., and Chen, S. J., </author> <title> "A Linear Time Algorithm for Planar Moat Routing," </title> <journal> Journal of Information Science and Engineering, </journal> <volume> Vol. 10, No. 1, </volume> <pages> pp. 111 - 128, </pages> <year> 1994. </year> <month> 9 </month>
Reference-contexts: 1 Introduction The problem of Embedding Hypergraphs in a Cycle so a to Minimize Congestion (EHCMC) [3] has applications in design automation (routing nets around a rectangle ([5] [6], [7], [10]), and moat routing ([1], [4], [8], <ref> [12] </ref>)), and in parallel computing (mapping data structures onto a ring network [3]).
References-found: 12

