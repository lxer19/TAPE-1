URL: http://www.cs.umn.edu/Users/dept/users/yjwon/abcr.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/yjwon/
Root-URL: http://www.cs.umn.edu
Email: fyjwonjsrivastag@cs.umn.edu  
Title: Adaptive Batching of Client Requests for Continuous Media Playback  
Author: Youjip Won and Jaideep Srivastava 
Keyword: Key Words: multimedia, playback, disk scheduling, data retrieval, memory buffer  
Address: Minneapolis, MN 55455  
Affiliation: Department of Computer Science, University of Minnesota  
Abstract: In this paper, we investigate the buffer requirement to support a set of continuous media playbacks and develop an algorithm which dynamically changes the service mode of the playback to minimize the total buffer requirement. A certain amount of memory buffer is required in continuous media playback to synchronize the asynchronous disk I/O and synchronous playback operation. The most serious problem is the rate of increase in buffer requirement as disk utilization reaches 100%. We argue that in a large scale VOD server, where user access pattern is skewed, a certain playback can use the data blocks loaded by the preceding playback for the same file, and thus achieving less buffer requirement. We have developed an efficient algorithm to determine the service mode of each request. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. P. Anderson, Y. Osawa, and R. Govindan. </author> <title> A File System for Continuous Media. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 10(4):311337, </volume> <month> Nov </month> <year> 1992. </year>
Reference-contexts: In this paper, we develop an algorithm to determine the service mode of the requests achieving minimum amount of buffer requirement. Recent years have seen a number of studies discussing the issues in multimedia server design <ref> [1, 4, 7, 9, 10] </ref>. These literatures have principally addressed the scheduling issues in multimedia file systems, and further focused largely on the disk scheduling problem. A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data.
Reference: [2] <author> Antine Mourad. </author> <title> Issues in the design of a storage server for video-on-demand. Multimedia Systems, </title> <address> 1996(4):7086, </address> <year> 1996. </year>
Reference-contexts: A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data. The disk scheduling algorithms focused on supporting maximum number of streams without violating the timing constraints of the continuous streams. <ref> [8, 2] </ref> expand the disk scheduling algorithm to disk arrays. These studies have focused on the stream flow from the disk subsystem. A. Dan et al [5] investigate the problem of re-using the data blocks loaded from the preceding playback for the subsequesnt ones, interval caching.
Reference: [3] <author> D. W. Brubeck and L. A. Rowe. </author> <title> Hierarchical storage management in a distributed VOD system. </title> <journal> IEEE Multimedia Magazine, </journal> <volume> 3(3):3747, </volume> <month> Fall </month> <year> 1996. </year>
Reference-contexts: Hence, 3 95% of the I/O time has been spent on head positioning operation. Making the block size larger is often proposed as a solution to increase the disk utilization <ref> [3] </ref> especially in bandwidth intensive continuous media applications. We can partition Eq. 2 into two parts, namely data transfer which is P n bn i B max and positioning overhead,S (s) which is P n i=1 ffi i . Time for positioning overhead is governed by disk scheduling policy.
Reference: [4] <author> M.-S. Chen, D. D. Kandlur, and P. S. Yu. </author> <title> Optimization of the grouped sweeping scheduling(gss) with heterogeneous multimedia streams. </title> <booktitle> In ACM Multimedia '93, </booktitle> <pages> pages 235 242, </pages> <year> 1993. </year>
Reference-contexts: In this paper, we develop an algorithm to determine the service mode of the requests achieving minimum amount of buffer requirement. Recent years have seen a number of studies discussing the issues in multimedia server design <ref> [1, 4, 7, 9, 10] </ref>. These literatures have principally addressed the scheduling issues in multimedia file systems, and further focused largely on the disk scheduling problem. A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data. <p> It makes only one sweep of the disk platter, though topping many times. Upper bound on O (s) can be formulated as follows given that C n1 c [7]. [7] O SCAN (s) = (n 1)(a 1 + b 1 r n 1 In Group Sweep Scheduling <ref> [4] </ref>, namely GSS [4], the set of playback streams are partitioned into a number of groups, say g. SCAN scheduling is used within a group and FIFO scheduling is used between the groups. The 4 positioning overhead can be formulated as in Eq. 7. <p> Upper bound on O (s) can be formulated as follows given that C n1 c [7]. [7] O SCAN (s) = (n 1)(a 1 + b 1 r n 1 In Group Sweep Scheduling <ref> [4] </ref>, namely GSS [4], the set of playback streams are partitioned into a number of groups, say g. SCAN scheduling is used within a group and FIFO scheduling is used between the groups. The 4 positioning overhead can be formulated as in Eq. 7.
Reference: [5] <author> A. Dan and D. Sitaram. </author> <title> Buffer Management Policy for an On-Demand Video Server. </title> <type> Technical Report IBM Research Report RC 19347, </type> <institution> IBM Research Division, T.J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <year> 1993. </year>
Reference-contexts: The disk scheduling algorithms focused on supporting maximum number of streams without violating the timing constraints of the continuous streams. [8, 2] expand the disk scheduling algorithm to disk arrays. These studies have focused on the stream flow from the disk subsystem. A. Dan et al <ref> [5] </ref> investigate the problem of re-using the data blocks loaded from the preceding playback for the subsequesnt ones, interval caching. In determining the source of data blocks for playback, disk or memory, the availability of the playbacks information enables the scheduler to achieve smaller buffer requirement.
Reference: [6] <author> J. L. Hennessy and D. A. Patterson. </author> <title> Computer Architecture: A Quantitative Approach, </title> <note> chapter 6. MORGAN KAUF-MANN, 2nd edition. </note>
Reference-contexts: Bandwidth of the system bus is at a less premium compared with the other system resources, e.g. disk bandwidth or main memory. Table 1 illustrates the actual system bus capacity available in the market <ref> [6] </ref>. We analyze the general scheduling constraints in disk scheduling for continuous media playback. Let Peak Bandwidth HP Summit 960 MB/sec SGI Challenge 1200 MB/sec Sun XDBus 1056 MB/sec Table 1.
Reference: [7] <author> D. Kenchaman-Hosekote. </author> <title> A Model for Incremental Retrieval for Continuous Media. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <year> 1996. </year>
Reference-contexts: In this paper, we develop an algorithm to determine the service mode of the requests achieving minimum amount of buffer requirement. Recent years have seen a number of studies discussing the issues in multimedia server design <ref> [1, 4, 7, 9, 10] </ref>. These literatures have principally addressed the scheduling issues in multimedia file systems, and further focused largely on the disk scheduling problem. A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data. <p> Using O ((s)), we can reformulate the continuity constraints of Eq. 1 as follows. Let n be the vector n 1 ; : : : ; n n of buffer requirements for s. This linear algebraic representation of continuity constraints was introduced in <ref> [7] </ref>. n P n b P n (3) As can be observed in Eq. 3, n can be used as an asymptotic measure for buffer requirement. As O (s) increases or as i=1 r i approaches to B max , n increases. <p> It makes only one sweep of the disk platter, though topping many times. Upper bound on O (s) can be formulated as follows given that C n1 c <ref> [7] </ref>. [7] O SCAN (s) = (n 1)(a 1 + b 1 r n 1 In Group Sweep Scheduling [4], namely GSS [4], the set of playback streams are partitioned into a number of groups, say g. <p> It makes only one sweep of the disk platter, though topping many times. Upper bound on O (s) can be formulated as follows given that C n1 c <ref> [7] </ref>. [7] O SCAN (s) = (n 1)(a 1 + b 1 r n 1 In Group Sweep Scheduling [4], namely GSS [4], the set of playback streams are partitioned into a number of groups, say g. <p> As can be seen, the buffer requirement increases very fast as it reaches the upper bound. For example, buffer requirement for n concurrent stream is 2O (s) i=1 r i P s v i r i in BSCAN algorithm <ref> [7] </ref>. 2.2 Window Management In practical situation of the video-on-demand, it is not unreasonable to assume that the requests for the playback are timely interleaved and they can be grouped with respect to the requested file. <p> Assume that playback for s k i reads data from the disk and a certain amount of memory buffer has been allocated. In supporting playback for s k+1 i , it can possibly use the 1 This theorem is a generalization of the schedulability condition in <ref> [7] </ref> 6 7 data blocks read from the disk to be used by s k i instead of reading the blocks from the disk.
Reference: [8] <author> L. P. and S. D. </author> <title> The design of a storage server for continuous media. </title> <journal> The Computer Journal, </journal> <volume> 36(1):3242, </volume> <year> 1993. </year>
Reference-contexts: A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data. The disk scheduling algorithms focused on supporting maximum number of streams without violating the timing constraints of the continuous streams. <ref> [8, 2] </ref> expand the disk scheduling algorithm to disk arrays. These studies have focused on the stream flow from the disk subsystem. A. Dan et al [5] investigate the problem of re-using the data blocks loaded from the preceding playback for the subsequesnt ones, interval caching.
Reference: [9] <author> P. Rangan, H. Vin, and S. Ramanathan. </author> <title> Designing an on-demand multimedia service. </title> <journal> IEEE Communication Magazine, </journal> <volume> 30(7):5665, </volume> <month> July </month> <year> 1992. </year>
Reference-contexts: In this paper, we develop an algorithm to determine the service mode of the requests achieving minimum amount of buffer requirement. Recent years have seen a number of studies discussing the issues in multimedia server design <ref> [1, 4, 7, 9, 10] </ref>. These literatures have principally addressed the scheduling issues in multimedia file systems, and further focused largely on the disk scheduling problem. A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data. <p> We analyze O (s) in reading the data blocks for s with respect to a number of different disk scheduling policy. Let C be the number of cylinders in the disk. When FIFO scheduling <ref> [9] </ref> is used, the disk head makes a full sweep of the disk platter n 1 times in the worst case. O (s) can be formulated as in Eq. 5.
Reference: [10] <author> A. L. N. Reddy and J. Wyllie. </author> <title> Disk Scheduling in a Multimedia I/O system. </title> <booktitle> In Proc. ACM Multimedia Conf., </booktitle> <pages> pages 225233. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: In this paper, we develop an algorithm to determine the service mode of the requests achieving minimum amount of buffer requirement. Recent years have seen a number of studies discussing the issues in multimedia server design <ref> [1, 4, 7, 9, 10] </ref>. These literatures have principally addressed the scheduling issues in multimedia file systems, and further focused largely on the disk scheduling problem. A multimedia stream requires guaranteed disk bandwidth to meet its requirement of timely flow of data.
Reference: [11] <author> C. Ruemmler and J. Wilkes. </author> <title> An Introduction to Disk Drive Modeling. </title> <journal> IEEE Computer, </journal> <volume> 27(3):1729, </volume> <month> March </month> <year> 1994. </year>
Reference-contexts: Before analyzing the buffer requirement for different disk scheduling policies in continuous media, we first need to model the seek time behavior of disk head movement. A number of experimental measurement have proposed the following form of the seek time behavior <ref> [11, 15] </ref>. T seek = 8 : p a 2 + b 2 x Otherwise (4) x and c denote the seek distance and threshold value, respectively, in terms of number of cylinders. <p> In HP 97560 disk, a 1 ; b 1 ; a 2 and b 2 are 3.24, 0.4, 8.0 and 0.008 ms and c is 383 cylinders <ref> [11] </ref>. We analyze O (s) in reading the data blocks for s with respect to a number of different disk scheduling policy. Let C be the number of cylinders in the disk. <p> We consider playback of MPEG-1 streams at 1.5 Mbps (187KBps). The disk spins at 7200 RPM, and one revolution takes 8.3ms. It has 1964 cylinder and its seek time is modeled after HP97560 disk <ref> [11] </ref>. Disk is formatted with 4 KB block and it takes 0.2ms to read one block, which is equivalent to 20MBps. Theoretically, the disk can support upto 106, i.e. b 20000 187 c, streams.
Reference: [12] <author> Video Store Magazine, </author> <month> December 13 </month> <year> 1992. </year>
Reference-contexts: Considering the user access pattern in commercial video rental pattern in the entertainment market, it is not unreasonable to assume that most of the requests are for a small number of hot files, while rest of the files are rarely accessed <ref> [12] </ref>. Each time a new request arrives at the server, appropriate amount of memory buffer is allocated to the request for disk operation.
Reference: [13] <author> Y. Won and J. Srivastava. </author> <title> Distributed Service Paradigm of Remote Video Retrieval Request. </title> <booktitle> In To appear on Proceedings of 6th IEEE International Symposium of High Performance Distributed Computing, </booktitle> <address> Portland, Oregon, </address> <month> Aug </month> <year> 1997. </year>
Reference-contexts: In determining the source of data blocks for playback, disk or memory, the availability of the playbacks information enables the scheduler to achieve smaller buffer requirement. Youjip Won et al <ref> [13, 14] </ref> developed a service model for Video-On-Reservation and proposed a strategy for replicating the contents to distributed environment. The rest of the paper is organized as follows: Section 2 describes the buffer requirement to maintain a set of concurrent playbacks from the disk.
Reference: [14] <author> Y. Won and J. Srivastava. </author> <title> Strategic Replication of Video Files in a Distributed Environment. International Journal of Multimedia Tools and Application, </title> <note> To Appear. </note>
Reference-contexts: In determining the source of data blocks for playback, disk or memory, the availability of the playbacks information enables the scheduler to achieve smaller buffer requirement. Youjip Won et al <ref> [13, 14] </ref> developed a service model for Video-On-Reservation and proposed a strategy for replicating the contents to distributed environment. The rest of the paper is organized as follows: Section 2 describes the buffer requirement to maintain a set of concurrent playbacks from the disk.
Reference: [15] <author> B. Worthington, G. Ganger, and Y. Patt. </author> <title> Scheduling Algorithms for Modern Disk Drives. </title> <booktitle> In Proc. of ACM SIGMetircs, </booktitle> <month> May </month> <year> 1994. </year> <month> 21 </month>
Reference-contexts: Before analyzing the buffer requirement for different disk scheduling policies in continuous media, we first need to model the seek time behavior of disk head movement. A number of experimental measurement have proposed the following form of the seek time behavior <ref> [11, 15] </ref>. T seek = 8 : p a 2 + b 2 x Otherwise (4) x and c denote the seek distance and threshold value, respectively, in terms of number of cylinders.
References-found: 15

