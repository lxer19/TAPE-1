URL: http://diva.eecs.berkeley.edu/~sitea/KUHSGROUP/POSTSCRIPT/DAC92.ps
Refering-URL: http://diva.eecs.berkeley.edu/~sitea/KUHSGROUP/publications.html
Root-URL: 
Title: Performance-Driven System Partitioning on Multi-Chip Modules  
Author: Minshine Shih, Ernest S. Kuh Ren-Song Tsay 
Address: UC Berkeley P.O. Box 218 Berkeley, CA94720 Yorktown Heights, NY 10598  
Affiliation: Department of EECS IBM T.J. Watson Research Center  
Abstract: In this paper we propose an efficient and effective algorithm for system partitioning under timing and capacity constraints. We consider the problem of assigning functional blocks into slots on Multi-Chip Modules in high level design in order to have fast feedback on impact of high level design decisions. We use a clustering step to ensure timing correctness, followed by packing and K&L algorithm to satisfy capacity constraints while minimizing net crossings. Our method is unique in that we minimize net crossings while satisfying timing and capacity constraints. Test results showed that our method eliminated timing violations and obtained comparable number of net crossings to that of Fiduc-cia&Mattheyses algorithm with similar run time. Our method can be extended to use partitioning algorithms other than Fiduccia&Mattheyses'. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B.W. Kernighan and S. Lin, </author> <title> "An Efficient Heuristic Procedure for Partitioning Graphs," </title> <journal> The Bell System Technical Journal, </journal> <volume> 49(2). </volume> <month> Feb. </month> <year> 1970. </year> <pages> pp. 291-307 </pages>
Reference-contexts: Kernighan and Lin proposed a well-known heuris tic for improving graph partitioning <ref> [1] </ref>. Fiduccia and Mattheyses proposed an efficient data structure to achieve linear run time with respect to the total num ber of pins [2]. Recently Wei and Cheng proposed ratio cut approach in order to extract "natural clusters" in the original network [3].
Reference: [2] <author> C.M. Fiduccia and R.M. Mattheyses, </author> <title> "An Linear Time Heuristic for Improving Network Partitions," </title> <booktitle> Design Automation Conference, </booktitle> <year> 1982, </year> <pages> pp. 175-181 </pages>
Reference-contexts: Kernighan and Lin proposed a well-known heuris tic for improving graph partitioning [1]. Fiduccia and Mattheyses proposed an efficient data structure to achieve linear run time with respect to the total num ber of pins <ref> [2] </ref>. Recently Wei and Cheng proposed ratio cut approach in order to extract "natural clusters" in the original network [3]. They further apply Fiduccia Mattheyses algorithm to the contracted network (from ratio cut) to obtain better and more stable results [4].
Reference: [3] <author> Y. Wei and C. Cheng, </author> <title> "Toward Efficient Hierarchical Designs by Ratio Cut Partitioning," </title> <booktitle> Proc. IEEE Int. Conf. on Computer-Aided Design, </booktitle> <year> 1989, </year> <pages> pp. 298-301 </pages>
Reference-contexts: Fiduccia and Mattheyses proposed an efficient data structure to achieve linear run time with respect to the total num ber of pins [2]. Recently Wei and Cheng proposed ratio cut approach in order to extract "natural clusters" in the original network <ref> [3] </ref>. They further apply Fiduccia Mattheyses algorithm to the contracted network (from ratio cut) to obtain better and more stable results [4]. All these previous approaches address only the number of cuts (i.e. nets crossing partitions) together with size constraints. The timing constraints are not taken into account.
Reference: [4] <author> Y. Wei and C. Cheng, </author> <title> "A Two-Level Two-Way Partitioning Algorithm," </title> <booktitle> Proc. IEEE Int. Conf. on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 516-519 </pages>
Reference-contexts: Recently Wei and Cheng proposed ratio cut approach in order to extract "natural clusters" in the original network [3]. They further apply Fiduccia Mattheyses algorithm to the contracted network (from ratio cut) to obtain better and more stable results <ref> [4] </ref>. All these previous approaches address only the number of cuts (i.e. nets crossing partitions) together with size constraints. The timing constraints are not taken into account.
Reference: [5] <author> R. Tarjan, </author> <title> "Data Structures and Network Algorithms," </title> <institution> Society for Industrial and Applied Mathematics, </institution> <year> 1983 </year>
Reference-contexts: Notice that this is a necessary and sufficient condition for satisfying timing constraint. 6 Implementation and Test Results The Super-Node merging is implemented using UNION-FIND algorithm with path compression <ref> [5] </ref>. It is known to have effectively linear run time for all practical cases. Since each Super-Node has K 1 gain entries it requires more sophisticated gain updating method to obtain efficiency. All 6 test cases are part of real designs from industry. We compare test results among three approaches.
Reference: [6] <author> R.R. Tummala and E.J. Rymaszewski, </author> <title> "Microelectronics Packaging Handbook, </title> <publisher> Chap. 16" Van Nostrand Reinhold, </publisher> <year> 1989 </year>
Reference: [7] <author> M. Shih, E.S. Kuh and R. Tsay, </author> <title> "Performance-Driven System Parti tioning On Multi-Chip Modules," </title> <booktitle> submitted to 29th Design Automation Conference, </booktitle> <year> 1992 </year>
Reference-contexts: It can be extended to cover Transmission Line Delay Model, which is described in a separate paper <ref> [7] </ref>.
References-found: 7

