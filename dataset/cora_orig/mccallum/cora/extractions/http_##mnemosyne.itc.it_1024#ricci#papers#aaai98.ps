URL: http://mnemosyne.itc.it:1024/ricci/papers/aaai98.ps
Refering-URL: http://mnemosyne.itc.it:1024/ricci/conference-papers-list.html
Root-URL: 
Email: e.mail: fperinig@irst.itc.it  
Phone: Phone ++39+461-314330 Fax ++39+461-302040  
Title: The Twofold Integration of CBR in Decision Support Systems  
Author: Paolo Avesani, Anna Perini and Francesco Ricci 
Address: 38050 Povo (TN) Italy  
Affiliation: I.R.S.T.  
Abstract: This short paper presents our experience in facing different levels of integration of CBR techniques with other system components and techniques inside decision support systems for controlling environmental emergencies. The integration requirement at the level of system components is distinguished from the integration requirements at the level of specific steps in the CBR problem solving cycle. We describe how these aspects have been dealt inside two systems, CHARADE and CAR-ICA, and point out the influence of this work on our current activity. keywords: interactive planning, constraint satisfaction problem, feature weighting.
Abstract-found: 1
Intro-found: 1
Reference: <author> Aamodt, A., and Plaza, E. </author> <year> 1994. </year> <title> Case-based reasoning: foundational issues, methodological variations, and system approaches. </title> <journal> AI Communications 7(1) </journal> <pages> 39-59. </pages>
Reference-contexts: We shall call that type of integration "collaboration". Second, the CBR technology itself can include other techniques to address some of the steps in the CBR problem solving cycle <ref> (Aamodt & Plaza 1994) </ref>. For example in the "reuse" step is becoming more and more common to use constraint satisfaction techniques to adapt the candidate solution (Purvis & Pu 1995; Wilke, Smith, & Cunningham 1998).
Reference: <author> Avesani, P.; Perini, A.; and Ricci, F. </author> <year> 1997. </year> <title> Cbet: a case base exploration tool. </title> <editor> In Springer-Verlag., ed., </editor> <booktitle> Fifth Congress of the Italian Association for Artificial Intelligence (AI*IA 97). </booktitle>
Reference-contexts: These functions have been developed and tested inside two demonstrators: CHARADE, a system aimed at supporting the user in the whole process of fire fighting including both situation assessment and planning activities (Ricci et al. 1994), and CARICA <ref> (Avesani, Terral, & Martin 1997) </ref>, a system that supports training for intervention planning. In this paper we shall explain how we dealt with the different types of CBR integrations defined above, in the framework of these two projects. <p> These considerations motivate our current work in developing a CBR C++ library, called CBET <ref> (Avesani, Perini, & Ricci 1997) </ref>. Collaboration This section discusses the integration of CBR with other system components inside the CHARADE and CAR-ICA systems. <p> This experience stimulated a current project aimed at recasting the techniques described in this paper in a C++ library, called CBET, allowing a flexible multilevel integration of CBR components into different, spe cific real applications <ref> (Avesani, Perini, & Ricci 1997) </ref>.
Reference: <author> Avesani, P.; Terral, S.; and Martin, E. </author> <year> 1997. </year> <note> Final report. carica deliverable d11. Technical report, IRST. </note>
Reference-contexts: These functions have been developed and tested inside two demonstrators: CHARADE, a system aimed at supporting the user in the whole process of fire fighting including both situation assessment and planning activities (Ricci et al. 1994), and CARICA <ref> (Avesani, Terral, & Martin 1997) </ref>, a system that supports training for intervention planning. In this paper we shall explain how we dealt with the different types of CBR integrations defined above, in the framework of these two projects. <p> These considerations motivate our current work in developing a CBR C++ library, called CBET <ref> (Avesani, Perini, & Ricci 1997) </ref>. Collaboration This section discusses the integration of CBR with other system components inside the CHARADE and CAR-ICA systems. <p> This experience stimulated a current project aimed at recasting the techniques described in this paper in a C++ library, called CBET, allowing a flexible multilevel integration of CBR components into different, spe cific real applications <ref> (Avesani, Perini, & Ricci 1997) </ref>.
Reference: <author> Boddy, M. </author> <year> 1991. </year> <title> Anytime problem solving using dynamic programming. </title> <booktitle> In Proceedings of the Nineth National Conference on Artificial Intelligence, </booktitle> <pages> 738-743. </pages>
Reference-contexts: We also provide a learning procedure for adapting the local weights to the input space. This procedure is a typical feedback feature weighting method (Wettschereck, Mohri, & Aha 1997). Our model basically implements an anytime algorithm <ref> (Boddy 1991) </ref> that updates the distance between an input case c and its neighbors depending on the role of the neighbors in solving c.
Reference: <author> Chambers, J. M., and Cleveland, W. S. </author> <year> 1983. </year> <title> Graphical methods for data analysis. </title> <publisher> Wadsworth. </publisher>
Reference-contexts: In a second application, when the user asks the system for a graphical plot of a given feature the system weights those features that explain better the variation of the input feature in the dataset <ref> (Chambers & Cleveland 1983) </ref>. For these purposes we have implemented in CARICA weighting methods based on Information Theory.
Reference: <author> Dechter, R.; Meiri, I.; and Pearl, J. </author> <year> 1991. </year> <title> Temporal constraint networks. </title> <booktitle> Artificial Intelligence 49. </booktitle>
Reference-contexts: These constraints can be modeled in terms of bounded difference between the time points corresponding to the actions start and end times. This defines a CSP problem on variables with continuous domains according to the formalization given in <ref> (Dechter, Meiri, & Pearl 1991) </ref>, the so called Temporal CSP (TCSP). The variables represent the actions start and end times. The constraints are those representing the minimum duration of actions and those representing the temporal relations between the actions.
Reference: <author> Gerevini, A.; Perini, A.; and Ricci, F. </author> <year> 1996. </year> <title> Incremental algorithms for managing temporal constraints. </title> <booktitle> In Proceedings of the Eighth IEEE International Conference on Tools with Artificial Intelligence, </booktitle> <address> TOULOUSE, France, </address> <month> November 16-19. </month>
Reference-contexts: This analysis motivated our research on efficient algorithms for the incremental updating of constraint networks <ref> (Gerevini, Perini, & Ricci 1996) </ref>. Feature weighting for case retrieval Feature weighting is a technique, which originates from pattern recognition and machine learning, that has become popular in many CBR systems.
Reference: <author> Gervasio, M.; Iba, W.; and Langley, P. </author> <year> 1998. </year> <title> Case-based seeding for an interactive crisis response assistant. </title> <booktitle> In Proceeding AAAI-98 Workshop on Case-Based Reasoning Integrations. </booktitle>
Reference-contexts: The effectiveness of using CBR techniques for quickly providing a draft solution to be adapted to the current situation has been pointed out also in other studies concerning crisis response planning <ref> (Gervasio, Iba, & Langley 1998) </ref>. In order to develop effective functions we integrate CBR with different specialized techniques such as temporal reasoning techniques, machine learning and data visualization techniques.
Reference: <author> Leake, D.; Kinney, A.; and Wilson, D. </author> <year> 1996. </year> <title> Acquiring case adaptation knowledge: A hybrid approach. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA. </address>
Reference: <author> Perini, A., and Ricci, F. </author> <year> 1995. </year> <title> An interactive planning architecture. </title> <booktitle> In Third European workshop on Planning, </booktitle> <address> Assisi, Italy September 27-29. </address> <booktitle> T"New Directions in AI Planning", </booktitle> <publisher> IOS Press. </publisher>
Reference-contexts: to the analysis of how the different temporal reasoning computations that can be performed on a STP (determining the network consistency, computing the feasible times for the variables of the network, computing the minimal network representation) can be better implemented and used in order to efficiently support the interactive process <ref> (Perini & Ricci 1995) </ref>. This analysis motivated our research on efficient algorithms for the incremental updating of constraint networks (Gerevini, Perini, & Ricci 1996). Feature weighting for case retrieval Feature weighting is a technique, which originates from pattern recognition and machine learning, that has become popular in many CBR systems.
Reference: <author> Purvis, L., and Pu, P. </author> <year> 1995. </year> <title> Adaptation using constraint satisfaction techniques. </title> <booktitle> In International Conference on Case-Based Reasoning (ICCBR-95), </booktitle> <address> Ses-imbra, Portugal, </address> <month> Oct. </month> <pages> 23-26. </pages> <publisher> Spinger Verlag. </publisher>
Reference: <author> Ricci, F., and Avesani, P. </author> <year> 1995. </year> <title> Learning a local similarity metric for case-based reasoning. </title> <booktitle> In International Conference on Case-Based Reasoning (ICCBR-95), </booktitle> <address> Sesimbra, Portugal, </address> <month> Oct. </month> <pages> 23-26. </pages>
Reference-contexts: to the analysis of how the different temporal reasoning computations that can be performed on a STP (determining the network consistency, computing the feasible times for the variables of the network, computing the minimal network representation) can be better implemented and used in order to efficiently support the interactive process <ref> (Perini & Ricci 1995) </ref>. This analysis motivated our research on efficient algorithms for the incremental updating of constraint networks (Gerevini, Perini, & Ricci 1996). Feature weighting for case retrieval Feature weighting is a technique, which originates from pattern recognition and machine learning, that has become popular in many CBR systems. <p> For instance the icon labeled CCFM indicates the action of water spraying with a medium tank truck, at the fire head. niques were fully evaluated through a set of experiments on popular datasets, as described in <ref> (Ricci & Avesani 1995) </ref>. Concerning the fire fighting domain the validation activity performed by the final user focused mainly on the higher level functions of the system so that the effectiveness of these retrieval techniques for the specific domain was only partially tested.
Reference: <author> Ricci, F., and Avesani, P. </author> <year> 1996. </year> <title> Exact learning and data compression with a local asymmetrically weighted metric. </title> <booktitle> In ICML-96 Workshop on Learning in Context-Sensitive Domains, </booktitle> <address> Bari, </address> <month> July 3rd,. </month>
Reference-contexts: This analysis motivated our research on efficient algorithms for the incremental updating of constraint networks <ref> (Gerevini, Perini, & Ricci 1996) </ref>. Feature weighting for case retrieval Feature weighting is a technique, which originates from pattern recognition and machine learning, that has become popular in many CBR systems. <p> The retrieval function in the CHARADE planner exploits a novel approach to compute nearest neighbor based on a local metric that we called LASM (local asymmetric similarity metric) <ref> (Ricci & Avesani 1996) </ref>. This approach rests on two basic assumptions. The first one (locality) states that the metric is defined locally: the space around a trial case is measured using the metric attached to that case.
Reference: <author> Ricci, F.; Mam, S.; Marti, P.; Normand, V.; and Olmo, P. </author> <year> 1994. </year> <title> CHARADE: a platform for emergencies management systems. </title> <type> Technical Report 9404-07, IRST. </type>
Reference-contexts: These functions have been developed and tested inside two demonstrators: CHARADE, a system aimed at supporting the user in the whole process of fire fighting including both situation assessment and planning activities <ref> (Ricci et al. 1994) </ref>, and CARICA (Avesani, Terral, & Martin 1997), a system that supports training for intervention planning. In this paper we shall explain how we dealt with the different types of CBR integrations defined above, in the framework of these two projects.
Reference: <author> Veloso, M. M.; Munoz-Avila, H.; and Bergmann, R. </author> <year> 1996. </year> <title> General-purpose case-based planning: Methods and systems. </title> <journal> AI Communications. </journal>
Reference: <author> Weiss, S. M., and Kulikowski, C. A. </author> <year> 1991. </year> <title> Computer Systems that Learn. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: We hypothesize that the features that maximize the "purity" objective functions, which are used for top down induction of decision trees (TDIDT) <ref> (Weiss & Kulikowski 1991) </ref>, can be exploited. Conclusions This short paper describes our experience in dealing with different integration levels of CBR techniques inside DSSs designed for supporting emergency management tasks, such as planning the first intervention (CHARADE) and training for intervention planning (CARICA).
Reference: <author> Wettschereck, D.; Mohri, T.; and Aha, D. W. </author> <year> 1997. </year> <title> A review and comparative evaluation of feature weighting methods for lazy learning algorithms. </title> <journal> AI Review Journal 11 </journal> <pages> 273-314. </pages>
Reference-contexts: In fact we use two different weights for the "left" and the "right" directions. We also provide a learning procedure for adapting the local weights to the input space. This procedure is a typical feedback feature weighting method <ref> (Wettschereck, Mohri, & Aha 1997) </ref>. Our model basically implements an anytime algorithm (Boddy 1991) that updates the distance between an input case c and its neighbors depending on the role of the neighbors in solving c.

References-found: 17

