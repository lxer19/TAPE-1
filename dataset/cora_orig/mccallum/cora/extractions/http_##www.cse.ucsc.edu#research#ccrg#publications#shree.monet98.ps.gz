URL: http://www.cse.ucsc.edu/research/ccrg/publications/shree.monet98.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Email: Email: shree@eng.sun.com jj@cse.ucsc.edu  
Phone: Phone: (650) 688-9449 (408) 459-4153  
Title: Baltzer Journals A Routing Architecture for Mobile Integrated Services Networks  
Author: Shree Murthy J.J. Garcia-Luna-Aceves 
Keyword: multipath routing, congestion control, quality of service, performance guarantee  
Note: This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) under contracts DAAB07-95-C-D157 and F19628-96-C-0038.  
Address: 901 San Antonio Rd.  Palo Alto, CA 94303 Santa Cruz, CA 95064  
Affiliation: Sun Microsystems, Inc. University of California  Computer Engineering  
Abstract: A drawback of the conventional Internet routing architecture is that its route computation and packet forwarding mechanisms are poorly integrated with congestion control mechanisms. Any datagram offered to the network is accepted; routers forward packets on a best-effort basis and react to congestion only after the network resources have already been wasted. A number of proposals improve on this to support multimedia applications; a promising example is the Integrated Services Packet Network (ISPN) architecture. However, these proposals are oriented to networks with fairly static topologies and rely on the same conventional Internet routing protocols to operate. This paper presents a routing architecture for mobile integrated services networks in which network nodes (routers) can move constantly while providing end-to-end performance guarantees. In the proposed connectionless routing architecture, packets are individually routed towards their destinations on a hop by hop basis. A packet intended for a given destination is allowed to enter the network if and only if there is at least one path of routers with enough resources to ensure its delivery within a finite time. Once a packet is accepted into the network, it is delivered to its destination, unless resource failures prevent it. Each router reserves resources for each active destination, rather than for each source-destination session, and forwards a received packet along one of multiple loop-free paths towards the destination. The resources and available paths for each destination are updated to adapt to congestion and topology changes. This mechanism could be extended to aggregate dissimilar flows as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bertsekas. </author> <title> Dynamic behavior of shortest path routing algorithms for communication networks. </title> <journal> IEEE Trans. Automat. Control, </journal> <volume> AC-27:60-74, </volume> <year> 1982. </year>
Reference-contexts: Even in theory, a routing protocol based on single-path routing is ill-suited to cope with congestion. This is because the only thing a single path routing protocol can do to react to congestion is to change the route used to reach a destination. As has been documented by Bertsekas <ref> [1] </ref>, allowing a single-path routing algorithm to react to congestion can lead to unstable oscillatory behavior. This paper introduces a new routing architecture for mobile integrated services networks that provide performance guarantees while the network topology can change continuously.
Reference: [2] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall Inc, </publisher> <address> 2nd edition, </address> <year> 1992. </year> <editor> S. Murthy and J.J. </editor> <address> Garcia-Luna 32 </address>
Reference: [3] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin. </author> <title> Resource reservation protocol (RSVP) version 1 functional specification. </title> <type> RFC 2205, </type> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: All of today's popular approaches for supporting quality of service in IP or ATM internetworks are based on establishing connections <ref> [7, 4, 3] </ref>. However, supporting real-time multimedia applications in a wireless mobile infrastructure in which all nodes can be mobile and where nodal connectivity changes constantly is difficult to accomplish, because the constituency of the paths supporting connections from sources to destinations cannot be guaranteed. <p> Explicit credit requests are associated with a sequence number. The identifier of the COLB source that initiated an explicit credit request and the corresponding sequence number is recorded at the time of credit request. (These messages are analogous to PATH messages in RSVP <ref> [3] </ref>). Explicit Credit Response: This message is sent in response to an explicit credit request message and indicates the credits available for data transmission and the sequence number of the request. <p> This enables the downstream nodes to respond immediately without having to wait till they hear from their destinations about the credit availability. This scheme is similar to the one-pass reservation mechanism of RSVP <ref> [3] </ref>. Sources send explicit credit requests to a destination requesting credits for data transmission. On receiving these requests, credits are allocated for that session and source; all the nodes along the way are informed about this. Each node maintains soft-state information about the network state.
Reference: [4] <author> D.D. Clark, S. Shenker, and L. Zhang, </author> <title> Supporting Real-Time Applications in an Integrated Services Packet network: Architecture and Mechanisms, </title> <booktitle> Proc. ACM SIGCOMM 92, </booktitle> <month> August </month> <year> 1992. </year>
Reference-contexts: All of today's popular approaches for supporting quality of service in IP or ATM internetworks are based on establishing connections <ref> [7, 4, 3] </ref>. However, supporting real-time multimedia applications in a wireless mobile infrastructure in which all nodes can be mobile and where nodal connectivity changes constantly is difficult to accomplish, because the constituency of the paths supporting connections from sources to destinations cannot be guaranteed. <p> This paper introduces a new routing architecture for mobile integrated services networks that provide performance guarantees while the network topology can change continuously. This work was motivated by the conjecture that architectural elements similar to those used in a connection-oriented architecture (e.g., the Integrated Services Packet Network (ISPN) architecture <ref> [4] </ref>) to allow the network to enforce performance guarantees can be used in a connectionless routing architecture to integrate routing and congestion control and to provide performance guarantees for the delivery of those datagrams accepted in the network.
Reference: [5] <author> R.L. Cruz. </author> <title> A calculus for network delay, part II: Network analysis. </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 37 </volume> <pages> 132-141, </pages> <year> 1991. </year>
Reference-contexts: At each node, traffic to destination j is constrained by a permit bucket filter. The worst-case delay and backlog is bounded above by an additive scheme due to Cruz <ref> [5] </ref>. The rate at which the packets are serviced at each node depends on the permit bucket or leaky bucket parameters i j and i j for a given destination j.
Reference: [6] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <booktitle> In ACM SIGCOMM, </booktitle> <pages> pages 1-12, </pages> <year> 1989. </year>
Reference-contexts: This will be discussed further in the following sections. A weighted fair queueing mechanism is used to ensure that all traffic streams receive a fair amount of resources <ref> [6] </ref>. Each flow type has a separate destination-oriented permit bucket for data transfer.
Reference: [7] <author> D. Ferrari, A. Banerjea, and H. Zhang, </author> <title> Network Support for Multimedia|A Discussion of The Tenet Approach, </title> <journal> Computer Networks and ISDN Syst. </journal> <volume> Vol. 26, No. 10, </volume> <pages> pp 1167-1180, </pages> <year> 1994. </year>
Reference-contexts: All of today's popular approaches for supporting quality of service in IP or ATM internetworks are based on establishing connections <ref> [7, 4, 3] </ref>. However, supporting real-time multimedia applications in a wireless mobile infrastructure in which all nodes can be mobile and where nodal connectivity changes constantly is difficult to accomplish, because the constituency of the paths supporting connections from sources to destinations cannot be guaranteed.
Reference: [8] <author> S. Floyd and V. Jacobson. </author> <title> The synchronization of periodic routing messages. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 2(2) </volume> <pages> 122-136, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Periodic Updates Credit (resource reservation) information is updated periodically. The allocated resources are reclaimed after a certain time if the state information is not refreshed. The timer value for updating the state information is set at each hop independently. Floyd and Jacobson <ref> [8] </ref> have shown that periodic updates generated by independent network nodes can become synchronized. This can lead to disruption in network services as the periodic messages contend with other network traffic for link and forwarding resources.
Reference: [9] <author> J.J. Garcia-Luna-Aceves. </author> <title> Loop-Free Routing using Diffusing Computations. </title> <journal> In IEEE/ACM Trans. Networking, </journal> <pages> pp 130-141, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Figure 9 gives a graphical representation of how MAD is updated. The point at which a new computation for finding a feasible successor starts is a synchronization point <ref> [9] </ref>. It can be noted that between two synchronization points the value of MAD can only decrease or remain the same and can never increase. Every time the MAD S. Murthy and J.J.
Reference: [10] <author> J.J. Garcia-Luna-Aceves and S. Murthy, </author> <title> A Path Finding Algorithm for Loop-Free Routing, </title> <journal> IEEE/ACM Trans. Networking, </journal> <month> February </month> <year> 1997. </year>
Reference-contexts: Routing is done on a per destination basis over multiple paths. To establish multiple loop-free paths, we extend prior results on loop-free, single-path routing algorithms introduced in <ref> [11, 16, 10] </ref>. This results in a congestion-oriented multipath routing architecture that uses a short-term metric based on hop-by-hop credits to reduce congestion over a given link, and a long-term metric based on end-to-end path delay to reduce delay from source to destination. <p> Therefore, D i 1 j (t) k2F M i [W CR i jk (t)] (10) Multiple loop-free paths from each node to a destination are maintained by means of a feasible multipath routing algorithm (FMRA), which is based on our prior work on path-finding algorithms <ref> [11, 16, 10] </ref>. Any change in cost trigger update messages. A marker tag i j is used to update the routing table. <p> Procedure Update Timer updates the periodic update timer and updates the credit information. Procedures DT Update and RT Update updates the cost and the routing tables, respectively; details of how these procedures work are provided in <ref> [16, 10] </ref> and omitted here for brevity. For any destination j, a router i can be in one of the two states, active or passive, at any given time. <p> When nodes choose their successors from the feasible successor set, the path from source to destination obtained as a result of this is loop free at every instant. 4 Correctness The proof of correctness and loop-freedom of FMRA is basically the same as that provided in <ref> [10] </ref> for LPA. In this section we prove that the scheduling policy which we have used to map connection-oriented sessions to destination-based flows and the credit-based mechanism are both correct and live. For this purpose, we assume that all sources are well-behaved. S. Murthy and J.J.
Reference: [11] <author> J.J. Garcia-Luna-Aceves and S. Murthy. </author> <title> A loop-free path-finding algorithm: Specification, verification and complexity. </title> <booktitle> In INFOCOM, </booktitle> <address> Boston, </address> <month> April </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: Routing is done on a per destination basis over multiple paths. To establish multiple loop-free paths, we extend prior results on loop-free, single-path routing algorithms introduced in <ref> [11, 16, 10] </ref>. This results in a congestion-oriented multipath routing architecture that uses a short-term metric based on hop-by-hop credits to reduce congestion over a given link, and a long-term metric based on end-to-end path delay to reduce delay from source to destination. <p> Therefore, D i 1 j (t) k2F M i [W CR i jk (t)] (10) Multiple loop-free paths from each node to a destination are maintained by means of a feasible multipath routing algorithm (FMRA), which is based on our prior work on path-finding algorithms <ref> [11, 16, 10] </ref>. Any change in cost trigger update messages. A marker tag i j is used to update the routing table. <p> Then, S i j (t t ) (15) We assume that variation in the size of the packet does not contribute significantly to the delay component. A delay bound for the case in which packet size is not negligible is presented by Murthy and Garcia-Luna-Aceves <ref> [11] </ref>. The total number of arrivals at each node i is the sum of the arrivals at all the upstream nodes for destination j and the traffic originated at node i itself.
Reference: [12] <author> H.T Kung, Blackwell. T, and Chapman. A. </author> <title> Credit-based flow control for ATM networks: credit update protocol, adaptive credit allocation, and statistical multiplexing. </title> <booktitle> In ACM SIGCOMM, volume 24 of CCR, </booktitle> <pages> pp 101-14, </pages> <address> London, UK, Aug/Sept 1994. </address> <publisher> ACM. </publisher>
Reference-contexts: This can be done either by estimating the credits available as in <ref> [12] </ref> or by explicitly sending a marker. We use a estimation mechanism. Credits are sent to the upstream neighbor, i.e., they propagate only one hop. The update period used for updating routing information is one round-trip delay by a data packet.
Reference: [13] <author> C. Ozveren, R. Simcoe, and G. Varghese. </author> <title> Reliable and efficient hop-by-hop flow control. </title> <booktitle> In SIGCOMM, </booktitle> <pages> pp 89-110, </pages> <address> London, Aug/Sept. </address> <year> 1994. </year>
Reference-contexts: This proves theorem 1. 2 4.2 - Credit-based Scheme The correctness of the credit based mechanism (i.e., showing that it has no deadlocks and that packets are not dropped) can be proven similarly as for virtual-circuit connections <ref> [13] </ref>.
Reference: [14] <author> A.K. Parekh and R.G. Gallager. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: The Single-Node Case. </title> <journal> IEEE/ACM Trans. Networking, </journal> (1(3)):344-357, June 1993. 
Reference-contexts: Generalized processor sharing (GPS) is an ideal scheduling mechanism which ensures fairness among all the competing flows and also provides traffic isolation among these flows. i.e., one misbehaved flow will not affect the characteristics of other well-behaved flows. Packet-by-packet generalized processor sharing (PGPS) <ref> [14] </ref> is the packetized version of GPS which achieves the abovementioned properties. PGPS provides fairness among competing flows and also provides flow isolation. In this paper, we assume a PGPS server at each router for scheduling of packet transmissions; more practical scheduling approaches can be integrated in the future. <p> This definition is much the same given in <ref> [14] </ref>, the only difference being that here we maintain leaky-bucket parameters for each active destination rather than for each session. Credits sent by downstream nodes are aggregated at each hop for a given destination along the path from destination to source and are redistributed among its upstream neighbors.
Reference: [15] <author> A.K. Parekh and R.G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: The multiple node case. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 2(2) </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: All nodes along any path from source to destination can contribute to the flow. This requires traffic scheduling to be done at each hop to regulate the incoming traffic, instead of having intermediate nodes as just forwarding nodes, as in a connection-oriented architecture <ref> [15] </ref>. We use a PGPS server to regulate the incoming traffic. As mentioned before, the protocol uses two routing metrics, a short-term metric and a long-term metric to transmit packets to a given destination. <p> Path delay can also be interpreted as the time it would take for a destination j backlog at i to clear. S. Murthy and J.J. Garcia-Luna 25 Parekh and Gallager have analyzed worst-case session delay in a connection-oriented network architecture <ref> [15] </ref>. We adopt a similar approach for each destination in a connectionless architecture. To do this, we assume a stable topology in which all routers have finite cost paths to each other. <p> Murthy and J.J. Garcia-Luna 27 at node i at t and the tokens received in the interval (t t ). At every node, each destination is constrained independently by a permit bucket scheme. Following Parekh and Gallager's approximation <ref> [15] </ref>, we assume the links to be of infinite capacity. The results for the infinite capacity case supply a upper bound for the finite capacity case. The arrival and the service functions at each router depend on the maximum path delay and the link flows.
Reference: [16] <author> S. Murthy and J.J. Garcia-Luna-Aceves, </author> <title> An Efficient Routing Protocol for Wireless Networks, </title> <journal> ACM Mobile Networks and Applications Journal, </journal> <volume> Vol. 1, No. 2, </volume> <year> 1996. </year>
Reference-contexts: Routing is done on a per destination basis over multiple paths. To establish multiple loop-free paths, we extend prior results on loop-free, single-path routing algorithms introduced in <ref> [11, 16, 10] </ref>. This results in a congestion-oriented multipath routing architecture that uses a short-term metric based on hop-by-hop credits to reduce congestion over a given link, and a long-term metric based on end-to-end path delay to reduce delay from source to destination. <p> Therefore, D i 1 j (t) k2F M i [W CR i jk (t)] (10) Multiple loop-free paths from each node to a destination are maintained by means of a feasible multipath routing algorithm (FMRA), which is based on our prior work on path-finding algorithms <ref> [11, 16, 10] </ref>. Any change in cost trigger update messages. A marker tag i j is used to update the routing table. <p> Procedure Update Timer updates the periodic update timer and updates the credit information. Procedures DT Update and RT Update updates the cost and the routing tables, respectively; details of how these procedures work are provided in <ref> [16, 10] </ref> and omitted here for brevity. For any destination j, a router i can be in one of the two states, active or passive, at any given time. <p> It sets M AD i j equal to the smaller of the updated value of D i j and the present value of M AD i j . In addition, it updates its cost, predecessor, and successor making sure that only simple paths (paths that are loop-free) are used <ref> [16] </ref>. Router i then prepares an update message to its neighbors if its routing table entry changes. Alternatively, if router i finds no feasible successor, then it sets M AD i j (t) = 1 and updates its cost and predecessor to reflect the information reported by its successor.
Reference: [17] <author> Z. Wang and J. Crowcroft. </author> <title> QoS routing for supporting resource reservation. </title> <note> http://boom.cs.ucl.ac.uk/staff/zwang/pub.htm, 1996. </note>
References-found: 17

