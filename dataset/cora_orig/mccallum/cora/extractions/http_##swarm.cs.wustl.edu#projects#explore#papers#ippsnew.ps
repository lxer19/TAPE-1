URL: http://swarm.cs.wustl.edu/projects/explore/papers/ippsnew.ps
Refering-URL: http://swarm.cs.wustl.edu/~hart/papers/papers.html
Root-URL: http://www.cs.wustl.edu
Title: Interactive Visual Exploration of Distributed Computations  
Author: Delbert Hart, Eileen Kraemer, and Gruia-Catalin Roman 
Address: in Saint Louis  
Affiliation: Department of Computer Science Washington University  
Abstract: Program understanding is central to the development of distributed computations, from the initial coding phase, through testing and debugging, to maintenance and support. Our goal is to support programmers unfamiliar with a particular distributed computation in developing a reasonable understanding of the workings of a program, without requiring that they examine the details of the code itself. Toward, this goal, we propose query-based visualization, a novel exploratory approach to understanding distributed computations. The k e y features of the approach are the use of queries as a device for searching the state space, visual presentation techniques adapted from program animation, and the ability to navigate through the state space using visual interactions. All views correspond to globally consistent snapshots of the computation. A working prototype demonstrates the technical feasibility of the approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. M. Chandy and L. Lamport, </author> <title> Distributed Snapshots: Determining Global States of Distributed Systems, </title> <journal> ACM Transactions on Computing Systems , vol. </journal> <volume> 3, no. 1, </volume> <pages> pp. 63-75, </pages> <year> 1985. </year>
Reference-contexts: introduction to the global snapshot problem can be found in <ref> [1] </ref> and an overview of algorithms for dealing with the snapshot problem under different levels of delivery guarantees is found in [6]. 6. Conclusions This paper presents a new program visualization paradigm called query-based visualization.
Reference: [2] <author> W. Gu, G. Eisenhauer, E. Kraemer, J. Stasko, J. Vetter, and N. Mallavurupu, </author> <title> Falcon: Online Monitoring and Steering of Lar ge-Scale Parallel Programs, </title> <booktitle> Fifth Symposium on the Frontiers of Massively Parallel Computation, McClean, VA, </booktitle> <pages> pp. 422-429, </pages> <year> 1995. </year>
Reference: [3] <author> D. Hart, G.-C. Roman, and E. Kraemer, </author> <title> Query Based Visualization, </title> <address> WUCS-96-23, </address> <year> 1996. </year>
Reference: [4] <author> J. A. Kohl and G. A. Geist, </author> <title> The PVM 3.4 Tracing Facility and XPVM 1.1, </title> <institution> Oak Ridge National Laboratory 1995. </institution>
Reference: [5] <author> E. Kraemer and J. T. Stasko, </author> <title> Toward Flexible Control of the Temporal Mapping from Concurrent Program Events to Animations, </title> <booktitle> Eighth International Parallel Processing Symposium, </booktitle> <pages> pp. 902-908, </pages> <year> 1994. </year>
Reference: [6] <author> A. D. Kshemkalyani, M. Raynal, and M. Singhal, </author> <title> An introduction to snapshot algorithms in distributed computing, </title> <journal> Distributed systems engineering , vol. </journal> <volume> 2, no. 4, </volume> <pages> pp. 224-233, </pages> <year> 1995. </year>
Reference-contexts: introduction to the global snapshot problem can be found in [1] and an overview of algorithms for dealing with the snapshot problem under different levels of delivery guarantees is found in <ref> [6] </ref>. 6. Conclusions This paper presents a new program visualization paradigm called query-based visualization. It is envisioned as the basis for a powerful exploratory tools in the hands of programmers and designers working with distributed systems.
Reference: [7] <author> J. Kundu and J. E. Cuny, </author> <title> Integrated Event and State-Based Debugging of Parallel Programs, </title> <institution> University of Oregon, </institution> <note> Technical Report 1996. </note>
Reference: [8] <author> G.-C. Roman, K. C. Cox, C. D. Wilcox, and J. Y. Plun, Pavane: </author> <title> A System for Declarative Visualization of Concurrent Computations, </title> <journal> Journal of Visual Languages an d Computing, </journal> <volume> vol. 3, no. 1, </volume> <pages> pp. 161-193, </pages> <year> 1992. </year>
Reference: [9] <author> G. C. Roman and K. Cox, </author> <title> A Taxonomy of Program Visualization Systems, </title> <journal> IEEE Computer , vol. </journal> <volume> 26, no. 12, </volume> <pages> pp. 11-24, </pages> <year> 1993. </year>
Reference: [10] <author> J. T. Stasko, </author> <title> The PARADE Environment for Visualizing Parallel Program Executions: A Progress Report, Graphics, Visualization, </title> <institution> and Usability Center, Georgia Institute of Technology, </institution> <address> Atlanta, GA GIT-GVU-95-03, </address> <month> January </month> <year> 1995. </year>
Reference: [11] <author> J. T. Stasko and E. Kraemer, </author> <title> A Methodology for Building ApplicationSpecific Visualizations of Parallel Programs, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> vol. 18, no. 2, </volume> <pages> pp. 258-264, </pages> <year> 1993. </year>
Reference: [12] <author> V. S. Sunderam, </author> <title> PVM: A Framework for Parallel Distributed Computing, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 315-339, </pages> <year> 1990. </year>
Reference: [13] <author> B. Topol, J. Stasko, and V. Sunderam, </author> <title> Integrating Visualization Support into Distributed Computing Systems, </title> <booktitle> 15th International Conference on Distributed Computing Systems, Vancouver, B.C., </booktitle> <pages> pp. 19-26, </pages> <year> 1995. </year>
References-found: 13

