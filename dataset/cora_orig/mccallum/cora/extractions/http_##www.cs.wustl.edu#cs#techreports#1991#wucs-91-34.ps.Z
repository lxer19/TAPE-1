URL: http://www.cs.wustl.edu/cs/techreports/1991/wucs-91-34.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: http://www.cs.wustl.edu
Title: DNA Mapping Algorithms: Clone Sequencing  
Author: Judith H. Lewis Will Gillett 
Note: This work was supported by the James S. McDonnell Foundation under Grant 87-24 and NIH under Grant 1 R01 HG00180.  
Address: Saint Louis, Missouri 63130 (314) 889-6160  
Affiliation: DEPARTMENT OF COMPUTER SCIENCE WASHINGTON UNIVERSITY  
Date: October 1991  
Pubnum: WUCS-91-34  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> W. Gillett and J. Heidemann, </author> <title> DNA Mapping Algorithms: The DNA Simulator, </title> <institution> Washington University, Dept. of Computer Science, </institution> <type> Technical Report WUCS-90-37, </type> <month> October, </month> <year> 1990. </year>
Reference-contexts: Performance Results 4.2.1. The DNA Simulator In order to determine the performance of the greedy algorithms as modified to address fragment length data, the four algorithms were applied to fragment length data produced by a simulator constructed within the DNA Mapping group. <ref> [1] </ref> Although the exact details of the simulator are not extremely important here, a few details may be helpful to the reader. The simulator can produce genomes of any desired size; certain statistical properties of the genome produced can be controlled by the use of input parameters.
Reference: 2. <author> W. Gillett and L. Hanks, </author> <title> DNA Mapping Algorithms: Abstract Data Types Concepts and Implementation, </title> <institution> Washington University, Dept. of Computer Science, </institution> <type> Technical Report WUCS-91-33, </type> <month> June </month> <year> 1991. </year>
Reference-contexts: Note that this may represent a number of disjoint clones sequences, not just one clone sequence. In order to achieve an efficient underlying implementation for manipulating clone sequences, it was necessary to implement a new list Abstract Data Type (ADT) <ref> [2] </ref> for which concatenation and reversal could be performed in constant time. A new ADT, rlist was implemented to achieve this execution performance. <p> These results are relatively encouraging. Focusing in on the weighted and unweighted BS algorithms for high minimum required overlap (3 and 4), the number of wrong decisions made is relatively low <ref> (between 2 and 7, out of 91) </ref>. In fact, some of these decisions may actually be correct, since the "ground truth" used is only an approximation to reality; of course, the converse is also true, and there may be more wrong decisions than indicated.
Reference: 3. <author> E. Horowitz and S. Sahni, </author> <title> Fundamentals of Computer Algorithms, </title> <publisher> Computer Science Press, </publisher> <address> Rockville, Maryland, </address> <year> 1984. </year>
Reference-contexts: Section 4 investigates the performance of these algorithms over a number of data sets using a number of different parameter settings. 2. Greedy Algorithms 2.1. The Skeleton of Greedy Algorithms Horowitz and Sahni <ref> [3] </ref> describe a greedy algorithm as one which works in stages, considering one input at a time. At each stage, a decision is made regarding whether a particular input can be included in a feasible solution. The inputs are considered in an order that is determined by some selection procedure. <p> FEASIBLE determines if the input selected can be included in a feasible solution. It returns a Boolean value through the function name which represents this feasibility determination. UNION combines the input with the solution. <ref> [3] </ref> 2.2. Formalisms In order to formalize the extensions of Rhee's greedy algorithms to fragment length data, it is useful to introduce a new mathematical construct similar to, but slightly different than, a bag.
Reference: 4. <author> M. V. Olson, J. E. Dutchik, M. Y. Graham, G. M. Brodeur, C. Helms, M. Frank, M. MacCollin, R. Scheinman and T. Frank, </author> <title> Random-Clone Strategy for Gemonic Restriction Mapping in Yeast, </title> <journal> Genomics, </journal> <volume> Vol. 83, </volume> <month> October, </month> <year> 1986. </year> <title> DNA Mapping - 31 Clone Sequencing </title>
Reference-contexts: Given the encouraging results obtained on simulated data, it was decided to apply the algorithms to actual laboratory data. Data were obtained from the Olson laboratory. <ref> [4] </ref> These data correspond to RH digestions of 218 clones (92 maximal clones) from the CF YAC, so named because the cystic fibrosis gene lies somewhere in this region of DNA. This is the only human DNA data currently available from the Olson laboratory.
Reference: 5. <author> G. Rhee, </author> <title> DNA Restriction Mapping From Random-clone Data, </title> <institution> Washington University, Dept. of Computer Science, </institution> <type> Technical Report WUCS-88-18, </type> <month> June, </month> <year> 1988. </year>
Reference-contexts: Since Rhee's abstraction to symbolic data produces an unrealistic transitive relation upon which his algorithms performed well, the question remained about how well fragment length modifications of them would perform in the context of a non-transitive relation. Other related work has been done by Rhee <ref> [5] </ref> and Turner. [7] DNA Mapping - 5 Clone Sequencing 1.4. Objectives The objective of using a family of greedy algorithms for clone sequencing is to produce ordered contigs, as a preprocessing step to the formal mapping process.
Reference: 6. <author> G. Rhee, </author> <title> Computational Models for DNA Restriction Mapping, </title> <type> Doctoral Dissertation, </type> <institution> Washington University, Dept. of Computer Science, </institution> <month> May, </month> <year> 1990. </year>
Reference-contexts: Turner [8] proved that the SCMS problem is NP-hard. 1.3. The Bag Sequencing Problem In attempting to simplify this problem, Rhee <ref> [6] </ref> divided it into two subproblems, the bag sequencing problem, and the symbol sequencing problem. <p> The symbol sequencing problem is unimportant to this work and will not be discussed further. Rhee <ref> [6] </ref> DNA Mapping - 4 Clone Sequencing proved that each of these subproblems is NP-complete. Since the bag sequencing problem is NP-complete, Rhee proposed a family of greedy algorithms intended heuristically to produce an approximation to the solution of the bag sequencing problem in polynomial time. <p> DNA Mapping - 13 Clone Sequencing 3. A Family of Fuzzybag Sequencing Algorithms The important aspects of four of the basic bag sequencing algorithms developed by Rhee <ref> [6] </ref> (and modified for fragment length data) are presented in this section. In conformance with his dissertation, they are referred to here as MGREEDY_B, MGREEDY_BS, MGREEDY_BW, and MGREEDY_BSW. <p> Experimentally, it has been determined that the choice of w 1 = w 2 = 1 is no worse than any other choices for these constants. <ref> [6] </ref> In Rhee's work, the symbols (corresponding to restriction fragments) have no length. Thus, there is only one applicable metric for the size of a bag, i.e., | b k | was taken to be the number of symbols in b k . <p> DNA Mapping - 21 Clone Sequencing 3.4. MGREEDY_BSW The MGREEDY_BSW algorithm is identical to MGREEDY_BS, except that the inputs are selected in order of nonincreasing weighted sums, as described for the MGREEDY_BW algorithm above. 4. Performance 4.1. Performance Measurements Rhee's work <ref> [6] </ref> defined a number of performance measures against which the quality of the result obtained by his algorithms could be tested. <p> As an example of how to compute these ratios, consider the following example from Rhee's dissertation. <ref> [6] </ref> Assume that there are ten clones labeled 0 through 9, where the actual clone sequence is 0123456789. Since there are ten clones, there are nine decisions to be make, i.e., N wd + N rd + N ud = 9.
Reference: 7. <author> J. S. Turner, </author> <title> Approximation Algorithms for the Shortest Common Superstring Problem, </title> <institution> Washington University, Dept. of Computer Science, </institution> <type> Technical Report WUCS-86-16, </type> <month> July </month> <year> 1986. </year>
Reference-contexts: Since Rhee's abstraction to symbolic data produces an unrealistic transitive relation upon which his algorithms performed well, the question remained about how well fragment length modifications of them would perform in the context of a non-transitive relation. Other related work has been done by Rhee [5] and Turner. <ref> [7] </ref> DNA Mapping - 5 Clone Sequencing 1.4. Objectives The objective of using a family of greedy algorithms for clone sequencing is to produce ordered contigs, as a preprocessing step to the formal mapping process.

Reference: 1. <author> Introduction ..................................................................................................................................... 1 1.1. </author> <title> An Overview of DNA Mapping ............................................................................................ 1 1.2. Formalization of the DNA Mapping Problem ....................................................................... 2 1.3. The Bag Sequencing Problem ................................................................................................ 3 1.4. </title> <type> Objectives .............................................................................................................................. 5 </type>
Reference-contexts: Performance Results 4.2.1. The DNA Simulator In order to determine the performance of the greedy algorithms as modified to address fragment length data, the four algorithms were applied to fragment length data produced by a simulator constructed within the DNA Mapping group. <ref> [1] </ref> Although the exact details of the simulator are not extremely important here, a few details may be helpful to the reader. The simulator can produce genomes of any desired size; certain statistical properties of the genome produced can be controlled by the use of input parameters.
Reference: 2. <institution> Greedy Algorithms .......................................................................................................................... 5 2.1. </institution> <note> The Skeleton of Greedy Algorithms ...................................................................................... 5 2.2. Formalisms ............................................................................................................................. 6 2.2.1. The Fuzzybag .............................................................................................................. 7 2.2.2. Adjacency in Nondirectional Sequences .................................................................... 9 2.3. A Paradigm for Clone Sequencing ........................................................................................ 9 </note>
Reference-contexts: Note that this may represent a number of disjoint clones sequences, not just one clone sequence. In order to achieve an efficient underlying implementation for manipulating clone sequences, it was necessary to implement a new list Abstract Data Type (ADT) <ref> [2] </ref> for which concatenation and reversal could be performed in constant time. A new ADT, rlist was implemented to achieve this execution performance.
Reference: 3. <institution> A Family of Fuzzybag Sequencing Algorithms .............................................................................. 13 3.1. </institution> <notenote>
Reference-contexts: Section 4 investigates the performance of these algorithms over a number of data sets using a number of different parameter settings. 2. Greedy Algorithms 2.1. The Skeleton of Greedy Algorithms Horowitz and Sahni <ref> [3] </ref> describe a greedy algorithm as one which works in stages, considering one input at a time. At each stage, a decision is made regarding whether a particular input can be included in a feasible solution. The inputs are considered in an order that is determined by some selection procedure. <p> FEASIBLE determines if the input selected can be included in a feasible solution. It returns a Boolean value through the function name which represents this feasibility determination. UNION combines the input with the solution. <ref> [3] </ref> 2.2. Formalisms In order to formalize the extensions of Rhee's greedy algorithms to fragment length data, it is useful to introduce a new mathematical construct similar to, but slightly different than, a bag.
Reference: 4. <author> Performance .................................................................................................................................... 21 4.1. </author> <title> Performance Measurements ................................................................................................... 21 4.2. Performance Results .............................................................................................................. 22 4.2.1. The DNA Simulator .................................................................................................... 22 4.2.2. Comparison with Performance on Abstract Data ....................................................... 23 4.2.3. Performance on Fragment Length Data with Random Error ...................................... 25 </title>
Reference-contexts: Given the encouraging results obtained on simulated data, it was decided to apply the algorithms to actual laboratory data. Data were obtained from the Olson laboratory. <ref> [4] </ref> These data correspond to RH digestions of 218 clones (92 maximal clones) from the CF YAC, so named because the cystic fibrosis gene lies somewhere in this region of DNA. This is the only human DNA data currently available from the Olson laboratory.
Reference: 5. <editor> Discussion and Conclusion ............................................................................................................. 30 TABLE OF FIGURES i TABLE OF TABLES Table 1: </editor> <title> Performance Data for NO Random Error, Minimum required overlap = 3 ......................... 23 Table 2: Performance Data for 3% Random Error, Minimum required overlap = 3 .......................... 25 Table 3: Performance Data Based on Cardinality Weighting ............................................................. 27 Table 4: Performance Data for 3% Random Error, Minimum required overlap = 2 .......................... 28 Table 5: Performance Data for 3% Random Error, Minimum required overlap = 4 .......................... 28 Table 6: Performance Data for Laboratory Data from the CF YAC .................................................. 29 - ii </title> - 
Reference-contexts: Since Rhee's abstraction to symbolic data produces an unrealistic transitive relation upon which his algorithms performed well, the question remained about how well fragment length modifications of them would perform in the context of a non-transitive relation. Other related work has been done by Rhee <ref> [5] </ref> and Turner. [7] DNA Mapping - 5 Clone Sequencing 1.4. Objectives The objective of using a family of greedy algorithms for clone sequencing is to produce ordered contigs, as a preprocessing step to the formal mapping process.
References-found: 12

