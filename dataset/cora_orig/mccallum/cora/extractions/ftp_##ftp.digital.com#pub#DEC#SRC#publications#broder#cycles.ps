URL: ftp://ftp.digital.com/pub/DEC/SRC/publications/broder/cycles.ps
Refering-URL: http://www.ing.unlp.edu.ar/cetad/mos/Hamilton.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Finding hidden Hamiltonian cycles  
Author: Andrei Z. Broder Alan M. Frieze Eli Shamir 
Abstract: We describe an O(n 3 log n) steps algorithm A for this purpose, and prove that it succeeds almost surely. Part one of A properly covers the "trouble spots" of G by a collection of disjoint paths. (This is the hard part to analyze.) Part two of A extends this cover to a full cycle by the rotation-extension technique which is already classical for such problems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Angluin and L. G. Valiant. </author> <title> Fast probabilistic algorithms for Hamilto-nian circuits and matchings. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 18 </volume> <pages> 155-193, </pages> <year> 1979. </year>
Reference-contexts: of the algorithm is dominated by Phase 4. (Phase 1 is easy since a.s. there are no small cycles with a common vertex.) In Part 1 of a stage we do O (n) rotations, and each rotations can be carried out in O (log n) time (see Angluin and Valiant <ref> [1] </ref>); Part 2 requires O (n) times as much work as Part 1; There are at most n stages.
Reference: [2] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <year> 1985. </year>
Reference: [3] <author> B. Bollobas, T. I. Fenner, and A. M. Frieze. </author> <title> An algorithm for finding Hamilton paths and cycles in random graphs. </title> <journal> Combinatorica, </journal> <volume> 7 </volume> <pages> 327-341, </pages> <year> 1987. </year>
Reference-contexts: random Hamiltonian cycle on n vertices, and add to it random edges, chosen independently with probability of existence d=n. (Observe that if d &gt; ln n 3 then almost surely G contains a Hamiltonian cycle made exclusively out of random edges and this cycle can be found in polynomial time <ref> [3] </ref>.) Our algorithm shows that this generation scheme will not work for d greater than some constant: anyone who sees the graph G can, with high probability, find a Hamiltonian cycle H 0 in polynomial time.
Reference: [4] <author> A. Z. Broder, A. M. Frieze, and E. </author> <booktitle> Shamir Finding hidden Hamiltonian cycles In Proceedings of the 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 182-189, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Our goal is to find some Hamiltonian cycle in G, not necessarily H. A preliminary version of this paper has appeared in <ref> [4] </ref>.
Reference: [5] <author> R. Boppana. </author> <title> Eigenvalues and graph bisection: An average-case analysis. </title> <booktitle> In Proceedings of the 28th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 280-285, </pages> <month> October </month> <year> 1987. </year> <month> 20 </month>
Reference-contexts: Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth [18], minimum bisection <ref> [5, 6, 7] </ref>, maximum clique or maximum independent set [12], k-coloring, bisection-width, graph-partitioning, 3-partition [7]. One reason for this interest is that graphs that arise in practical applications (say VLSI design) tend to have a hidden structure (e.g. small bisection) that random graphs of the same density do not possess.
Reference: [6] <author> T. Bui, S. Chaudhuri, T. Leighton, and M. Sipser. </author> <title> Graph bisection algorithms with good average case behavior. </title> <journal> Combinatorica, </journal> <volume> 6, </volume> <year> 1986. </year>
Reference-contexts: Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth [18], minimum bisection <ref> [5, 6, 7] </ref>, maximum clique or maximum independent set [12], k-coloring, bisection-width, graph-partitioning, 3-partition [7]. One reason for this interest is that graphs that arise in practical applications (say VLSI design) tend to have a hidden structure (e.g. small bisection) that random graphs of the same density do not possess.
Reference: [7] <author> M. E. Dyer and A. M. Frieze. </author> <title> Fast algorithms for some random np-hard problems. </title> <journal> Journal of Algorithms, </journal> <volume> 10 </volume> <pages> 451-489, </pages> <year> 1989. </year>
Reference-contexts: Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth [18], minimum bisection <ref> [5, 6, 7] </ref>, maximum clique or maximum independent set [12], k-coloring, bisection-width, graph-partitioning, 3-partition [7]. One reason for this interest is that graphs that arise in practical applications (say VLSI design) tend to have a hidden structure (e.g. small bisection) that random graphs of the same density do not possess. <p> Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth [18], minimum bisection [5, 6, 7], maximum clique or maximum independent set [12], k-coloring, bisection-width, graph-partitioning, 3-partition <ref> [7] </ref>. One reason for this interest is that graphs that arise in practical applications (say VLSI design) tend to have a hidden structure (e.g. small bisection) that random graphs of the same density do not possess.
Reference: [8] <author> T. I. Fenner and A. M. </author> <title> Frieze On the existence of Hamiltonian cycles in a class of random graphs. </title> <journal> Discrete mathematics, </journal> <volume> 45 </volume> <pages> 301-305, </pages> <year> 1983. </year>
Reference-contexts: The precise way to make these estimations follows the techniques from <ref> [8] </ref>, [9] and [10]. 18 Observe that after converting G into a blue-green instance in Phase 3, the rest of the algorithm is deterministic and actually uses at most n green edges, because each use of a green edge results in an extension.
Reference: [9] <author> A. M. Frieze. </author> <title> On the exact solution of random traveling salesman problems with medium-sized integer costs. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16 </volume> <pages> 1052-1072, </pages> <year> 1987. </year>
Reference-contexts: We avoid this by replacing X 0 by a slightly larger set X which has the property that any vertex not in X has few neighbours not in X. X and P are constructed in Phases 1 and 2. (See <ref> [9] </ref> for a similar construction.) The problem has now been reduced in essence to finding a Hamilton cycle in a random graph with vertices of high degree but only a linear number of random edges. <p> We now use a version of the extension-rotation algorithm in which some (randomly chosen) green edges are only used for extensions. This strange artifact is needed in the proof of correctness of the algorithm (see also <ref> [9, 10] </ref>). <p> The argument here is even simpler than in <ref> [9] </ref>, Lemma 3.2. On the other hand G X contains a path cover of X because G is Hamiltonian. <p> The precise way to make these estimations follows the techniques from [8], <ref> [9] </ref> and [10]. 18 Observe that after converting G into a blue-green instance in Phase 3, the rest of the algorithm is deterministic and actually uses at most n green edges, because each use of a green edge results in an extension.
Reference: [10] <author> A. M. Frieze. </author> <title> Finding Hamilton cycles in sparse random graphs. </title> <journal> Journal of Combinatorial Theory B, </journal> <volume> 44 </volume> <pages> 230-250, </pages> <year> 1988. </year>
Reference-contexts: We now use a version of the extension-rotation algorithm in which some (randomly chosen) green edges are only used for extensions. This strange artifact is needed in the proof of correctness of the algorithm (see also <ref> [9, 10] </ref>). <p> The precise way to make these estimations follows the techniques from [8], [9] and <ref> [10] </ref>. 18 Observe that after converting G into a blue-green instance in Phase 3, the rest of the algorithm is deterministic and actually uses at most n green edges, because each use of a green edge results in an extension.
Reference: [11] <author> Y. Gurevich and S. Shelah. </author> <title> Expected computation time for Hamiltonian path problem. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16(3) </volume> <pages> 486-502, </pages> <year> 1987. </year>
Reference: [12] <author> L. Kucera and S. Micali. </author> <title> Cryptography and random graphs. </title> <type> Unpublished manuscript, </type> <year> 1988. </year>
Reference-contexts: Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth [18], minimum bisection [5, 6, 7], maximum clique or maximum independent set <ref> [12] </ref>, k-coloring, bisection-width, graph-partitioning, 3-partition [7]. One reason for this interest is that graphs that arise in practical applications (say VLSI design) tend to have a hidden structure (e.g. small bisection) that random graphs of the same density do not possess.
Reference: [13] <author> M. R. </author> <title> Jerrum. </title> <type> Private communication. </type>
Reference-contexts: The former problem appears to be amenable to an attack based on recent results of Robinson and Wormald [15, 16], and Jerrum <ref> [13] </ref>. Acknowledgement We would like to thank Joan Feigenbaum who greatly helped us understand and expose the connections between the question considered here and zero-knowledge protocols. We would also like to thank Tomasz Luczak whose comments have helped to make the paper a little more readable.
Reference: [14] <author> L. Posa. </author> <title> Hamiltonian circuits in random graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 14 </volume> <pages> 359-364, </pages> <year> 1976. </year>
Reference-contexts: Clearly the failure of the algorithm means that 8v 2 fv 0 g [ END (v 0 ) otherwise a cycle extension applies. Let x; y; z be three consecutive vertices within the initial order of a path Q with endpoint v fixed. Posa <ref> [14] </ref> observed that if w 2 END (v) and y 2 N (w) n END (v), and all rotations are allowed, then one of x or z is also in END (v).
Reference: [15] <author> R. W. Robinson and N. C. Wormald. </author> <title> Almost all cubic graphs are Hamil-tonian. Random Structures and Algorithms 3 </title> <type> 117-126, </type> <year> 1992. </year>
Reference-contexts: The former problem appears to be amenable to an attack based on recent results of Robinson and Wormald <ref> [15, 16] </ref>, and Jerrum [13]. Acknowledgement We would like to thank Joan Feigenbaum who greatly helped us understand and expose the connections between the question considered here and zero-knowledge protocols. We would also like to thank Tomasz Luczak whose comments have helped to make the paper a little more readable.
Reference: [16] <author> R. W. Robinson and N. C. Wormald. </author> <title> Almost all regular graphs are Hamiltonian. Random Structures and Algorithms, </title> <note> to appear. </note>
Reference-contexts: The former problem appears to be amenable to an attack based on recent results of Robinson and Wormald <ref> [15, 16] </ref>, and Jerrum [13]. Acknowledgement We would like to thank Joan Feigenbaum who greatly helped us understand and expose the connections between the question considered here and zero-knowledge protocols. We would also like to thank Tomasz Luczak whose comments have helped to make the paper a little more readable.
Reference: [17] <author> E. Shamir. </author> <title> How many edges make a graph Hamiltonian? Combinatorica, </title> <booktitle> 3 </booktitle> <pages> 123-132, </pages> <year> 1983. </year>
Reference: [18] <author> J. S. Turner. </author> <title> On the probable performance of heuristics for bandwidth minimization. </title> <journal> SIAM Journal on Computing, </journal> <volume> 15(2) </volume> <pages> 561-580, </pages> <year> 1986. </year> <month> 21 </month>
Reference-contexts: Practical experience shows that this is a very good heuristic. 2. Practical considerations. Several hidden structure problems were studied before: minimum bandwidth <ref> [18] </ref>, minimum bisection [5, 6, 7], maximum clique or maximum independent set [12], k-coloring, bisection-width, graph-partitioning, 3-partition [7].
References-found: 18

