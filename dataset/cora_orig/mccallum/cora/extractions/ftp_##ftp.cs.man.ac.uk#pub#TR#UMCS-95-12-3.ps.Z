URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-95-12-3.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-95-12-3.html
Root-URL: http://www.cs.man.ac.uk
Title: Group Presentation of Process Structure  
Author: Kohei Honda 
Note: Notes on P-Algebra (2):  
Address: Manchester  
Affiliation: Computer Science University of  
Pubnum: ISSN 1361 6161  
Abstract: Department of Computer Science University of Manchester Technical Report Series UMCS-95-12-3 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Honda, K. </author> <booktitle> Notes on P-Algebra (1): Process Strcuture. </booktitle> <address> Proc.TPPP'94, </address> <publisher> LNCS 907, Spinger-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction The present notes show that the process structures introduced in <ref> [1] </ref> can be given yet another presentation. <p> The presentation we give in these notes is quite close to the "pure" presentation of process structure in <ref> [1] </ref>, rather than to the "rooted" one also discussed there, and is perhaps more faithful to geometric truth: instead of looking at a process (think of it as a geometrical object) from a single direction, it tries to look at it from all possible directions. <p> In the rest of the notes, we describe basic elements of theory of process structure using a new presentation. The development basically follows Chapter 3 of <ref> [1] </ref>. We also outline the proof of equivalence of the new presentation with the original one in terms of their ambient categories. Thus the new construction is really another way of presenting the same structure as the original one, though from a different angle. <p> G 2 G (p) is called a group of p. We sometimes write just P etc. to denote a group presentation. Then G (p) denotes the set of groups of p. 2.2 Examples. (group presentation) 2 (i) Any process structure <ref> [1] </ref> induces its group presentation, called its basic group pre-sentation, in the following way: given a process structure hP; H; Si, define hP; Gi by taking: G (p) = fG j G = 1 S (p) (for each bijection on H (p))g: Then hP; Gi is a group presentation. <p> Note for any G; G 0 2 G (p) we have hGi = hG 0 i here. (ii) We can also regard a rooted process structure <ref> [1] </ref> as a group presentation. <p> Then hP; Gi is a group presentation, called its canonical presentation. Next we introduce the basic idea of relating two processes, called correspondence <ref> [1] </ref>. A correspondence specifies not only a tuple of processes but also how their handles are related by partial one-one map (see the figure below). <p> Again p is its source, q is its target, and is its relational component. As one may observe, in the above definition is essentially the same relation as over correspondences defined in <ref> [1] </ref>. Thus the notion of correspondence in the above definition absorbs the difference up to in the original definition (i.e. a single correspondence in the above definition corresponds to an abstract correspondence in [1]). <p> one may observe, in the above definition is essentially the same relation as over correspondences defined in <ref> [1] </ref>. Thus the notion of correspondence in the above definition absorbs the difference up to in the original definition (i.e. a single correspondence in the above definition corresponds to an abstract correspondence in [1]). We also note that the number of pseudo-correspondences (hence that of correspondences) with common source and target is always finite, since a collection of partial injections from a finite set to a finite set is always finite. <p> Discussions 3.6 <ref> [1] </ref>). This is why we introduced the former. Now given a pseudo-correspondence hp; ; qi define: hp; ; qi = fhp; [hG 1 ; ffi; G 2 i] ; qi j hG 1 ; ffi; G 2 i 2 g: I.e. we take the partition of by . <p> Observe R 2 ffi R 1 above is well-defined because pseudo-correspondences are composable. Also note that we have defined a p-relation without using the condition on equivalence over correspondences, cf. Definition 3.5 of <ref> [1] </ref>. This is because an equivalence class of p-relation by in the original construction is represented by a single correspondence in the present setting. <p> With Definition 2.5, a p-relation is already a process structure. 2.6 Proposition Given a p-relation R, the following data define a group presentation. (i) The set of processes: R itself (cf. 3.10 (i) of <ref> [1] </ref>). (ii) Groups: G (hp; ; qi) def = fOE (hG; ffi; G 0 i) j hG; ffi; G 0 i 2 g where we define OE (hG; ffi; G 0 i) as a permutation group over a set (hGinpre (ffi)) ] ffi ] (hG 0 inim (ffi)) induced by the <p> Note the "uniqueness" of a p-map in (i) above is real set-theoretic uniqueness, not modulo some equivalence, cf. Definition 3.7 <ref> [1] </ref>. 2.8 Examples. (p-map and isomorphism) (i) Assume given P 1 and P 2 . <p> Proof: (i) is just as the proof of Proposition 3.8 of <ref> [1] </ref> while (ii) is easy. (iii) is again just as Proposition 3.9 of [1]. The following definition is a little stronger than what was given in [1] in that we require that the reciprocation operation (corresponding to the relational inverse) for an isomorphism coincides with its categorical inverse. <p> Proof: (i) is just as the proof of Proposition 3.8 of <ref> [1] </ref> while (ii) is easy. (iii) is again just as Proposition 3.9 of [1]. The following definition is a little stronger than what was given in [1] in that we require that the reciprocation operation (corresponding to the relational inverse) for an isomorphism coincides with its categorical inverse. This becomes useful for the proof of the equivalence theorem later. 2.10 Definition. <p> Proof: (i) is just as the proof of Proposition 3.8 of <ref> [1] </ref> while (ii) is easy. (iii) is again just as Proposition 3.9 of [1]. The following definition is a little stronger than what was given in [1] in that we require that the reciprocation operation (corresponding to the relational inverse) for an isomorphism coincides with its categorical inverse. This becomes useful for the proof of the equivalence theorem later. 2.10 Definition. <p> Note isomorphisms coincide in PS g Proof: Easy by observing, for example, that R 1 is, in our case, a (p-)relational inverse, so that, if R is an isomorphism, R 1 precisely coincides with the categorical inverse. We note that PS rel in <ref> [1] </ref> is a complete boolean allegory with the above stronger definition, as will be readily checked. The following theorem establishes the formal correspondence between the universes of the original presentation and those of the group presentation. <p> The following theorem establishes the formal correspondence between the universes of the original presentation and those of the group presentation. The proof sketch of the theorem is given at the end of the section. 2.12 Theorem. PS rel of <ref> [1] </ref> and PS g rel are equivalent as allegories, where involved func-tors induce categorical equivalence between PS of [1] and PS g . We now move to the quotient construction. <p> The proof sketch of the theorem is given at the end of the section. 2.12 Theorem. PS rel of <ref> [1] </ref> and PS g rel are equivalent as allegories, where involved func-tors induce categorical equivalence between PS of [1] and PS g . We now move to the quotient construction. One of the neatest points of the group presentation is that we can talk of "the" quotient of an equivalence p-relation, without using a choice function, cf. 3.13 of [1]. 2.13 Definition. (equivalence p-relation and equivalence classes) (i) A <p> where involved func-tors induce categorical equivalence between PS of <ref> [1] </ref> and PS g . We now move to the quotient construction. One of the neatest points of the group presentation is that we can talk of "the" quotient of an equivalence p-relation, without using a choice function, cf. 3.13 of [1]. 2.13 Definition. (equivalence p-relation and equivalence classes) (i) A p-relation R on P (i.e. from P to P) is an equivalence p-relation if ID P ae R, R ffi R ae R, and R 1 = R. (ii) Given an equivalence p-relation R on P, the equivalence class of a <p> Thus quotienting is just done by taking the equivalence classes and transforming all groups owned by processes in each equivalence class using the equivalence p-relation. This is much cleaner than the construction in 3.13 of <ref> [1] </ref> where we need to use a choice function, though the latter surely serves its purpose, so that technically it does not induce any problem. <p> We also note that Proposition 2.14 (iii) tells us that, while the set underlying each permutation group (corresponding to handles) will be restricted, the symmetry itself increases, cf. discussions after 2.18 and 3.15 of <ref> [1] </ref>. Such a fact is also more clearly seen in the present context. Also note that, as in [1], multiple equivalences give rise to the same quotient, since an equivalence can have redundant correspondences which are to be cancelled by restricting the domain. <p> note that Proposition 2.14 (iii) tells us that, while the set underlying each permutation group (corresponding to handles) will be restricted, the symmetry itself increases, cf. discussions after 2.18 and 3.15 of <ref> [1] </ref>. Such a fact is also more clearly seen in the present context. Also note that, as in [1], multiple equivalences give rise to the same quotient, since an equivalence can have redundant correspondences which are to be cancelled by restricting the domain. The situation is quite different from the quotient of a set. <p> Our next observation concerns how acts on "prime arrows" in PS rel . 13 2.20 Proposition. (i) Let R from P to Q in PS rel be an abstract correspondence (cf. 3.6 of <ref> [1] </ref>), i.e. a p-relation such that hp; ffi; qi; hp 0 ; ffi 0 ; q 0 i 2 R implies p 0 = p and q 0 = and hp; ffi; qi hp; ffi 0 ; qi. Then (R) is a singleton, i.e. consists of only one correspondence.
Reference: [2] <author> Mac Lane, S. </author> <title> Categories for Working Mathematician. </title> <publisher> Springer-Verlag, </publisher> <year> 1971. </year>
Reference-contexts: As has been observed, the correspondence between the group presentation and the original one is quite close, so that the proof poses no difficult problem. We use the following characterisation of allegorical equivalence, which comes from a similar fact in category theory (cf. IV: 4 of <ref> [2] </ref>). Proposition.
Reference: [3] <author> Milner, R. </author> <title> Processes: a Mathematical Model of Computing Agents. </title> <booktitle> Proc. Logic Colloquium '73. </booktitle> <publisher> North Holland, </publisher> <year> 1973. </year> <month> 16 </month>
Reference-contexts: 1 Introduction The present notes show that the process structures introduced in [1] can be given yet another presentation. Since a process structure is intended to provide a basic stratum of general process theory by giving a mathematical distillation of a basic element of concurrent processes (cf. <ref> [3] </ref>), its alternative presentation is interesting, because it offers a new way to look at the theory, and especially because different presentations are useful for different purposes.
References-found: 3

