URL: http://www.cs.umn.edu/Users/pub/tcl/java/tcljava.ps
Refering-URL: http://www.cs.umn.edu/Users/pub/tcl/java/
Root-URL: http://www.cs.umn.edu
Email: rjohnson@eng.sun.com  
Title: Sun, Sun Microsystems, the Sun Logo, Java, JavaBeans and JavaScript  Tcl and Java Integration  
Author: Ray Johnson 
Date: February 3, 1998  
Address: 901 San Antonio, MS UMTV-29-232 Palo Alto, CA 94303-4900  
Affiliation: Sun Microsystems Laboratories  
Note: UNIX is registered trademark in the United States and other countries, exclusively licensed through X/Open Company, Ltd.  are trademarks or registered trademarks of Sun Microsystems, Inc. in the United States and other countries  
Abstract: This paper describes the motivations and strategies behind our groups efforts to integrate the Tcl and Java programming languages. From the Java perspective, we wish to create a powerful scripting solution for Java applications and operating environments. From the Tcl perspective, we want to allow for cross-platform Tcl extensions and leverage the useful features and user community Java has to offer. We are specifically focusing on Java tasks like Java Bean manipulation, where a scripting solution is preferable to using straight Java code. Our goal is to create a synergy between Tcl and Java, similar to that of Visual Basic and Visual C++ on the Microsoft desktop, which makes both languages more powerful together than they are individually. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Ousterhout, </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison-Wesley, </publisher> <address> ISBN 0-201-63337-X, </address> <year> 1994. </year>
Reference-contexts: This white paper points out many of the reasons why Tcl and Java integration will make both languages more powerful. Despite the languages shared philosophies, it is important to note that these two languages have historically had very different uses. The Tcl <ref> [1] </ref> scripting language is a classic scripting language, ideal for embedding into other applications. Tcl started out in the UNIX world as a way to easily create tools with a command line interface. Tcl was first introduced in 1990 by its creator, John Ousterhout, a professor at U.C. Berkeley.
Reference: [2] <author> K.Arnold and J. Gosling, </author> <title> The Java Programming Language, </title> <publisher> Addison-Wesley, </publisher> <address> ISBN 0-201-63455-4, </address> <year> 1996. </year>
Reference-contexts: The goal was to make Tcl a cross-platform scripting language. Today, with some 500,000 users, Tcl is one of the most popular cross-platform scripting languages. February 3, 1998 Tcl and Java Integration 2 Java <ref> [2] </ref>, on the other hand, is a new twist on the classic 3rd generation programming language (3GL). While the Tcl project was just getting underway, Java, created at Sun Micro-systems by James Gosling, started to make its incredible introduction.
Reference: [3] <institution> Jacl & Tcl Blend home page: </institution> <note> http://sunscript.sun.com/java/ </note>
Reference-contexts: Finally we are working on a Tcl Bean for Java Studio that adds the power of Tcl for connecting Studio beans. We discuss each of these projects in greater detail later in this paper. We also suggest that you check out our home page <ref> [3] </ref> for the most up-to-date information about our projects. The rest of this paper is outlined in the following way: Section 2 discusses the various motivations behind our project from different perspectives. Section 3 focuses on the Java Package and the synergy we attain by integrating Java and Tcl.
Reference: [4] <author> J. Ousterhout, </author> <title> Scripting: </title> <booktitle> Higher Level Programming for the 21st Century, </booktitle> <address> http://www.sun labs.com/people/john.ousterhout/scripting.html. </address>
Reference: [5] <author> J. Ousterhout, </author> <note> Additional Information for Scripting White Paper, http://www.sunlabs.com/ people/john.ousterhout/scriptextra.html. </note>
Reference: [6] <author> S. Stanton, TclBlend: </author> <title> Blending Tcl and Java, </title> <journal> Dr. Dobbs Journal, </journal> <pages> pp. 50-54, </pages> <month> Feb </month> <year> 1998. </year>
Reference-contexts: It is ideal for testing little snippets of code for an expected outcome. With our use of the Java reection APIs Jacl is even better suited for this type of application <ref> [6] </ref>. The current Tcl implementation has about 211,000 lines of test code written in Tcl. The existing Tcl test suite has enabled us to port Tcl to Java very quickly and has also assured us that our implementation is rock solid.
Reference: [7] <author> B. Kernighan and D. Ritchie, </author> <title> The C Programming Language, Second Edition, </title> <publisher> Prentice Hall, </publisher> <address> ISBN 0 13-110362-8, </address> <year> 1988. </year>
Reference: [8] <author> L. Wall, T. Christiansen, and R. Schwartz, </author> <title> Programming Perl, </title> <note> Second Edition, OReilly and Associ ates, ISBN 1-56592-149-6, </note> <year> 1996. </year>
Reference-contexts: We also discuss the differences between the work they are doing and what we are trying to do. Please remember that this list is only a snapshot in time and information about various efforts is sketchy at best. Perl. Perl <ref> [8] </ref> is one of the more well known scripting languages. Traditionally Perl has been used for data conversion or processing but has recently dominated the world of CGI scripting. It is rumored that OReilly & Companys Perl Resource Kit has some limited support for Java. Python.
Reference: [9] <author> Watters, A., G. van Rossum, and J. C. Ahlstrom, </author> <title> Internet Programming with Python, </title> <publisher> MIS Press/ Henry Holt Publishers, </publisher> <year> 1996. </year>
Reference-contexts: Perl. Perl [8] is one of the more well known scripting languages. Traditionally Perl has been used for data conversion or processing but has recently dominated the world of CGI scripting. It is rumored that OReilly & Companys Perl Resource Kit has some limited support for Java. Python. Python <ref> [9] </ref> is also a cross-platform scripting language that has been around for a few years. While it hasnt attained the wide spread use of Tcl or Perl, it certainly has an avid following. Currently there is an effort to port the Python scripting language to Java called JPython [10].
Reference: [10] <author> J. Hugunin, </author> <title> Python and Java: The Best of Both Worlds, </title> <publisher> &lt;URL:http://www.python.org/jpython/ ipc6paper.html&gt; </publisher>
Reference-contexts: Python [9] is also a cross-platform scripting language that has been around for a few years. While it hasnt attained the wide spread use of Tcl or Perl, it certainly has an avid following. Currently there is an effort to port the Python scripting language to Java called JPython <ref> [10] </ref>. In fact, their approach is to compile Python code directly down to Java byte codes. The JPython work currently doesnt include anything like the Java Package but their work, like ours, is on going.[13] JavaScript.
Reference: [11] <author> D. Flanagan, </author> <title> JavaScript: The Definitive Guide, Second Edition, </title> <publisher> OReilly and Associates, </publisher> <address> ISBN 1 56592-234-4, </address> <year> 1997. </year>
Reference-contexts: The JPython work currently doesnt include anything like the Java Package but their work, like ours, is on going.[13] JavaScript. One of the most common questions we receive is, how does this relate to the JavaScript <ref> [11] </ref> programming language? The simple answer is that JavaScript was created for, and has always focused on web page scripting. JavaScript is not geared for, nor has been used to any extent for application development. Tcl, on the other hand, is focused on creating or working with applications.
Reference: [12] <author> D. Libes, </author> <title> Exploring Expect, </title> <publisher> OReilly and Associates, </publisher> <address> ISBN 1-56592-090-2, </address> <year> 1995. </year>
Reference-contexts: A bridge for porting legacy code. Tcl has always been good at gluing together various systems into an integrated whole. Tcl features and extensions like exec, expect <ref> [12] </ref>, and TkSteal, are ideal for wrapping legacy systems into new systems. Tcl Blend allows this same power for integrating C based code into the Java platform. With Tcl Blend developers use the Tcl scripting language to glue together legacy code with new Java systems.
Reference: [13] <institution> Home page for OReilly Perl product: </institution> <note> http://perl.oreilly.com/ </note>
References-found: 13

