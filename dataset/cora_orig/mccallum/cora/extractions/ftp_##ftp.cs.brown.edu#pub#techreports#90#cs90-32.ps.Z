URL: ftp://ftp.cs.brown.edu/pub/techreports/90/cs90-32.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-90-32.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "When trees collide: an approximation algorithm for the generalized Steiner tree problem on networks," </title> <type> Technical Report CS-90-32, </type> <institution> Brown University (1990). </institution>
Reference-contexts: Note that each node is immediately enclosed by at most one node. A node enclosed by another 5 Using a heap to organize the edges incident to each tree, one can implement the algorithm to run in O (n 2 log n) time <ref> [1] </ref>. Using a more sophisticated two-level heap structure, one can implement it in O (n p m log n) time [21]. 15 T of the original graph.
Reference: [2] <author> Y. P. Aneja, </author> <title> "An integer linear programming approach to the Steiner problem in graphs", </title> <journal> Networks, </journal> <volume> vol. </volume> <month> 10 </month> <year> (1980) </year> <month> 167-178. </month>
Reference-contexts: Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja <ref> [2] </ref>, and Wong [44] are among those who proposed heuristics. Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]).
Reference: [3] <author> S. Arora and S. Safra, </author> <title> "Probabilistic checking of proofs: a new characterization of NP," </title> <booktitle> Proc., 33rd Symposium on Foundations of Computer Science (1992), </booktitle> <pages> pp. 2-13. </pages>
Reference-contexts: This problem is NP-complete for general graphs. Moreover, an approximation algorithm for this cut-packing problem would yield an approximation algorithm for maximum independent set [9], an unlikely outcome in view of recent results <ref> [3, 4, 12] </ref>. We instead show how to make use of a cut-packing in bipartite graphs.
Reference: [4] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy, </author> <title> "Proof verification and hardness of approximation problems," </title> <booktitle> Proc., 33rd Symposium on Foundations of Computer Science (1992), </booktitle> <pages> pp. 14-23. </pages>
Reference-contexts: This problem is NP-complete for general graphs. Moreover, an approximation algorithm for this cut-packing problem would yield an approximation algorithm for maximum independent set [9], an unlikely outcome in view of recent results <ref> [3, 4, 12] </ref>. We instead show how to make use of a cut-packing in bipartite graphs.
Reference: [5] <author> P. Berman, </author> <title> personal communication (1991). </title> <type> 25 </type>
Reference-contexts: It is an open problem to find good approximation algorithms for either problem. It was observed by Berman <ref> [5] </ref> that the set cover problem is reducible to the node Steiner problem via an approximation-preserving transformation. Khuller [20] made an analogous observation concerning the directed Steiner tree problem. In fact, Segev [34] gave an approximation-preserving reduction from the node Steiner problem to the directed Steiner problem.
Reference: [6] <author> P. Berman and V. Ramaiyer, </author> <title> "Improved approximations for the Steiner tree problem," </title> <booktitle> Proc., 3rd Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 325-334. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> One algorithm, proposed by Plesnik [31] and by Sullivan [37], performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 [45]. Berman and Ramaiyer <ref> [6] </ref> have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds.
Reference: [7] <author> R. T. Chien, </author> <title> "Synthesis of a communication net," </title> <journal> IBM J. Res. Develop., </journal> <volume> Vol. 3 (1960), </volume> <pages> pp. 311-320. </pages>
Reference-contexts: Theorem 1.2 There is a polynomial-time algorithm to find an R-multijoin of cost at most (2 2=k)dlog 2 (r max + 1)e times minimum, where r max is the largest requirement value and k is the number of sites. This problem is called multiterminal network synthesis by Chien <ref> [7] </ref> and Gomory and Hu [13]. Gomory and Hu and later Sridhar and Chandrasekaran [35] address the synthesis problem for the special case where the input graph is the complete graph with all costs identical.
Reference: [8] <author> C. J. Colbourn, </author> <title> The Combinatorics of Network Reliability, </title> <publisher> Oxford University Press (1987). </publisher>
Reference-contexts: No approximation algorithms are known. However, one powerful and useful heuristic for estimating two-terminal and k-terminal reliability <ref> [8, 9] </ref> can be directly generalized to handle the case of arbitrary pairs. The (generalized) heuristic consists in finding a large collection of edge-disjoint cuts in the network such that each cut separates at least one client's pair of cities.
Reference: [9] <author> C. J. Colbourn, </author> <title> "Edge-packings of graphs and network reliability", </title> <journal> J. Discrete Math., </journal> <volume> vol. </volume> <pages> 72 (1988) pp. 49-61. </pages>
Reference-contexts: No approximation algorithms are known. However, one powerful and useful heuristic for estimating two-terminal and k-terminal reliability <ref> [8, 9] </ref> can be directly generalized to handle the case of arbitrary pairs. The (generalized) heuristic consists in finding a large collection of edge-disjoint cuts in the network such that each cut separates at least one client's pair of cities. <p> For a surviving network to be able to serve all clients' requirements, at least one edge in each cut must survive; thus such a cut-packing can be used to obtain a lower bound on the probability of catastrophic failure. Experience <ref> [9] </ref> with this heuristic in the cases of two-terminal and k-terminal reliability indicates that it is one of the best available. <p> In order to use this heuristic effectively, we want to find a maximum collection of edge-disjoint requirement cuts. This problem is NP-complete for general graphs. Moreover, an approximation algorithm for this cut-packing problem would yield an approximation algorithm for maximum independent set <ref> [9] </ref>, an unlikely outcome in view of recent results [3, 4, 12]. We instead show how to make use of a cut-packing in bipartite graphs.
Reference: [10] <author> J. Edmonds, and E. L. Johnson, </author> <title> "Matching, Euler tours and the Chinese postman", </title> <journal> Math. Programming, </journal> <volume> vol. </volume> <pages> 5 (1973) pp. 88-124. </pages>
Reference-contexts: We have jN j e2N 2 1 fi X jA i " N j 2 because each jA i " N j is at least one. 2 For comparison, Edmonds and Johnson <ref> [10] </ref> show that T -joins and T - cuts satisfy an analogous inequality, and, more importantly, they satisfy it with equality. Instead of showing equality, we show approximate equality, to within a factor of 2 (1 1=k). This is the content of Theorem 1.3.
Reference: [11] <author> C. El-Arbi, </author> <title> "Une heuristique pour le problem de l'arbre de Steiner", </title> <journal> R.A.I.R.O. Operations Research, </journal> <volume> vol. 12 (1978), </volume> <pages> pp. 207-212. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi <ref> [11] </ref>, Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics. Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]).
Reference: [12] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy, </author> <title> "Approximating clique is almost NP-complete," </title> <booktitle> Proc., 32nd Symposium on Foundations of Computer Science (1991), </booktitle> <pages> pp. 2-12. </pages>
Reference-contexts: This problem is NP-complete for general graphs. Moreover, an approximation algorithm for this cut-packing problem would yield an approximation algorithm for maximum independent set [9], an unlikely outcome in view of recent results <ref> [3, 4, 12] </ref>. We instead show how to make use of a cut-packing in bipartite graphs.
Reference: [13] <author> R. E. Gomory and T. C. Hu, </author> <title> "Multi-terminal network flows," </title> <journal> J. Soc. Indust. Appl. Math. </journal> <volume> Vol. 9, No. 4 (1961), </volume> <pages> pp. 551-570. </pages>
Reference-contexts: This problem is called multiterminal network synthesis by Chien [7] and Gomory and Hu <ref> [13] </ref>. Gomory and Hu and later Sridhar and Chandrasekaran [35] address the synthesis problem for the special case where the input graph is the complete graph with all costs identical. The problem is also essentially identical to the generalized Steiner problem as formulated by Krarup ([26], as cited in [41]).
Reference: [14] <author> M. X. Goemans, and D. J. Bertsimas, </author> <title> "Survivable networks, linear programming relaxations and the parsimonious property," </title> <note> Mathematical Programming 60 (1993), to appear. </note>
Reference-contexts: It follows from Theorem 1.3 that the fractional relaxations of these programs provide good approximations to both combinatorial quantities. Moreover, the factor of 22=k is existentially tight, as shown by the example of a k-cycle given by Goemans and Bertsimas <ref> [14] </ref>. 2 Related work 2.1 The Steiner tree problem in networks There have been volumes of work done on the Steiner tree problem in networks, including proposed solution methods, computational experiments, heuristics, probabilistic and worst-case analyses, and algorithms for special classes of graphs. <p> This corresponds to "buying" multiple communication links of the same cost and with the same endpoints. 6 2.3 Survivable networks In recent work, Goemans and Bertsimas <ref> [14] </ref> considered a special case of the generalized Steiner problem in networks. Instead of arbitrary requirement values, the input includes an assignment of integers r i to nodes. The goal is to find a minimum-cost network satisfying requirements r ij = min (r i ; r j ). <p> In order to obtain an approximation algorithm for this generalized problem from our algorithm for the case of 0-1 requirements, we make use of a heuristic technique due to Goemans and Bertsimas <ref> [14] </ref>. They propose a technique they call the tree heuristic, which consists essentially of decomposing a problem with many different requirement values into a series of simpler problems in which only two requirement values appear.
Reference: [15] <author> H. N. Gabow, M. X. Goemans, and D. P. Williamson, </author> <title> "An efficient approximation algorithm for the survivable network design problem," </title> <booktitle> Proceedings of the 3rd MPS Conference on Integer Programming and Combinatorial Optimization (1993), </booktitle> <pages> pp. 57-74. </pages>
Reference-contexts: In work building on that of Goemans and Williamson, we showed [32] how to obtain approximately optimal solutions to 2-edge-connected versions of the problems addressed in [16]. In these problems, one needs to achieve 2-connectivity without duplicating links. Finally, several subsequent papers <ref> [15, 23, 40] </ref> extended these methods to give approximation algorithms for the generalized Steiner problem without link duplication. 7 3 Background An instance of the generalized Steiner problem consists of a graph G with edge-costs c, together with a collection fR 1 ; : : : ; R b g of
Reference: [16] <author> M. X. Goemans and D. P. Williamson, </author> <title> "A general approximation technique for constrained forest problems," </title> <booktitle> Proc., 3rd Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 307-315. </pages>
Reference-contexts: By providing an approximation algorithm for the case of r ij 2 f0; 1g, we make it possible to handle requirements r ij not of that special form. 2.4 Subsequent work Building on our result, Goemans and Williamson <ref> [16] </ref> simplified and generalized our algorithm. They describe a framework in which to formulate and find approximately optimal solutions for many constrained forest problems, of which the minimum-cost R-join problem is an example. Their approximation algorithm uses an approach similar to ours, and achieves the same performance guarantee. <p> Goemans and Williamson describe an implementation of their algorithm that runs in O (n 2 log n) time on graphs with n nodes. In work building on that of Goemans and Williamson, we showed [32] how to obtain approximately optimal solutions to 2-edge-connected versions of the problems addressed in <ref> [16] </ref>. In these problems, one needs to achieve 2-connectivity without duplicating links.
Reference: [17] <author> F. K. Hwang and D. S. Richards, </author> <title> "Steiner tree problems," </title> <journal> Networks, </journal> <volume> Vol. 22, No. 1, </volume> <pages> pp. </pages> <month> 55-90 </month> <year> (1992). </year>
Reference-contexts: Winter [41] and more recently Hwang and Richards <ref> [17] </ref> surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics.
Reference: [18] <author> A. Jain, </author> <title> "Probabilistic analysis of an LP relaxation bound for the Steiner problem in networks", </title> <journal> Networks, </journal> <volume> vol. 19 (1989), </volume> <pages> pp. 793-801. </pages>
Reference-contexts: This special case is known in the literature as the Steiner tree problem in networks. This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics <ref> [33, 44, 18] </ref>, and approximation algorithms [6, 38, 25, 11, 31, 37, 29, 45] are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). <p> One algorithm, proposed by Plesnik [31] and by Sullivan [37], performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 [45]. Berman and Ramaiyer [6] have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds. Jain <ref> [18] </ref> proposed an integer-program formulation of the Steiner tree problem in networks, and showed that for two random distributions of costs, the value of this integer program differed drastically from the value of its fractional relaxation. 2.2 The generalized Steiner problem in networks The generalized Steiner problem in networks, as originally
Reference: [19] <author> R. M. Karp, </author> <title> "Reducibility among combinatorial problems", </title> <editor> in R. E. Miller and J. W. Thatcher (eds.), </editor> <title> Complexity of Computer Computations. </title> <publisher> Plenum Press, </publisher> <address> New York (1972) pp. </address> <pages> 85-103. </pages>
Reference-contexts: This special case is known in the literature as the Steiner tree problem in networks. This problem was one of the first seven problems shown NP-complete by Karp <ref> [19] </ref>. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms [6, 38, 25, 11, 31, 37, 29, 45] are known for the problem. <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp <ref> [19] </ref> showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics.
Reference: [20] <author> S. </author> <title> Khuller, </title> <type> personal communication (1991). 26 </type>
Reference-contexts: It is an open problem to find good approximation algorithms for either problem. It was observed by Berman [5] that the set cover problem is reducible to the node Steiner problem via an approximation-preserving transformation. Khuller <ref> [20] </ref> made an analogous observation concerning the directed Steiner tree problem. In fact, Segev [34] gave an approximation-preserving reduction from the node Steiner problem to the directed Steiner problem.
Reference: [21] <author> P. N. Klein, </author> <title> "A data structure for bicategories, with application to speeding up an approximation algorithm," </title> <note> submitted to IPL (1993). </note>
Reference-contexts: Using a more sophisticated two-level heap structure, one can implement it in O (n p m log n) time <ref> [21] </ref>. 15 T of the original graph.
Reference: [22] <author> P. N. Klein, S. Rao, A. Agrawal, and R. Ravi, </author> <title> "An approximate max-flow min-cut relation for multicommodity flow, with applications," </title> <note> to appear in Combinatorica. </note>
Reference-contexts: failure of communication links renders some of its clients' requirements unsatisfiable. 2 Assuming link failures are inde 2 A related problem|finding the minimum number of communication links that would need to fail for all requirements to be unsatisfiable|can be solved approximately, using techniques we have presented in an earlier paper <ref> [22] </ref>. 4 pendent, determining the probability that the surviving links can serve all clients' requirements is a generalization of the #P-complete problem [39] called Network Reliability. No approximation algorithms are known.
Reference: [23] <author> M. X. Goemans, A. V. Goldberg, S. Plotkin, D. Shmoys, E. Tardos, and D. P. Williamson, </author> <title> "Improved approximation algorithms for network design problems," </title> <booktitle> Proceedings of the 5th ACM-SIAM Symposium on Discrete Algorithms (1994), </booktitle> <pages> pp. 223-232. </pages>
Reference-contexts: In work building on that of Goemans and Williamson, we showed [32] how to obtain approximately optimal solutions to 2-edge-connected versions of the problems addressed in [16]. In these problems, one needs to achieve 2-connectivity without duplicating links. Finally, several subsequent papers <ref> [15, 23, 40] </ref> extended these methods to give approximation algorithms for the generalized Steiner problem without link duplication. 7 3 Background An instance of the generalized Steiner problem consists of a graph G with edge-costs c, together with a collection fR 1 ; : : : ; R b g of
Reference: [24] <author> P. N. Klein and R. Ravi, </author> <title> "A nearly best-possible approximation algorithm for node-weighted Steiner trees," </title> <booktitle> Proceedings, 3rd Symposium on Integer Programming and Combinatorial Optimization (1993), </booktitle> <pages> pp. 323-332. </pages>
Reference-contexts: We have recently discovered such an algorithm for the former problem <ref> [24] </ref>. Acknowledgements Thanks to Piotr Berman, Marshall Bern, Michel Goemans, Samir Khuller, Balaji Raghavachari, Arie Segev, and Richard Wong. Thanks also to the referees for a careful reading and helpful suggestions.
Reference: [25] <author> L. Kou, G. Markowsky, and L. Berman, </author> <title> "A fast algorithm for Steiner trees", </title> <journal> Acta Informatica, </journal> <volume> vol. 15 (1981), </volume> <pages> pp. 141-145. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman <ref> [25] </ref>, El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics. Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]).
Reference: [26] <author> J. Krarup, </author> <title> "The generalized Steiner problem," </title> <note> Unpublished note (1978). </note>
Reference: [27] <author> L. Lovasz, </author> <title> An Algorithmic Theory of Numbers, Graphs and Convexity, </title> <publisher> SIAM, </publisher> <address> Philadelphia (1986). </address>
Reference: [28] <author> C. Lund and M. Yannakakis, </author> <title> "On the hardness of approximating minimization problems," </title> <booktitle> Proc., 25th ACM Symposium on Theory of Computing (1993), </booktitle> <pages> pp. 286-293. </pages>
Reference-contexts: In fact, Segev [34] gave an approximation-preserving reduction from the node Steiner problem to the directed Steiner problem. In view of Lund and Yannakakis' recent result showing that the set cover problem cannot be approximated by a factor smaller than logarithmic <ref> [28] </ref>, it is natural to ask whether there are logarithmic-factor approximation algorithms for the node and directed Steiner problems. We have recently discovered such an algorithm for the former problem [24]. Acknowledgements Thanks to Piotr Berman, Marshall Bern, Michel Goemans, Samir Khuller, Balaji Raghavachari, Arie Segev, and Richard Wong.
Reference: [29] <author> K. Mehlhorn, </author> <title> "A faster approximation algorithm for the Steiner problem in graphs," </title> <journal> Information Processing Letters, </journal> <volume> vol. 27(3) (1988), </volume> <pages> pp. 125-128. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities.
Reference: [30] <author> M. Minoux, </author> <title> "Network synthesis and optimum network design problems: models, solution methods and applications," </title> <journal> Networks, </journal> <volume> vol. </volume> <pages> 19 (1989) pp. 313-360. </pages>
Reference: [31] <author> J. Plesnik, </author> <title> "A bound for the Steiner tree problem in graphs," </title> <journal> Math. Slovaca, </journal> <volume> vol. </volume> <pages> 31 (1981) pp. 155-163. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]). One algorithm, proposed by Plesnik <ref> [31] </ref> and by Sullivan [37], performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 [45]. Berman and Ramaiyer [6] have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds.
Reference: [32] <author> R. Ravi and P. N. Klein, </author> <title> "When cycles collapse: a general approximation technique for constrained 2-connectivity problems," </title> <booktitle> Proc., 3rd Symposium on Integer Programming and Combinatorial Optimization (1993), </booktitle> <pages> pp. 39-55. </pages>
Reference-contexts: Their approximation algorithm uses an approach similar to ours, and achieves the same performance guarantee. Goemans and Williamson describe an implementation of their algorithm that runs in O (n 2 log n) time on graphs with n nodes. In work building on that of Goemans and Williamson, we showed <ref> [32] </ref> how to obtain approximately optimal solutions to 2-edge-connected versions of the problems addressed in [16]. In these problems, one needs to achieve 2-connectivity without duplicating links.
Reference: [33] <author> V. J. Rayward-Smith, </author> <title> "The computation of nearly minimal Steiner trees in graphs," </title> <journal> Int. J. Math. Educ. Sci. Tech., </journal> <volume> vol. 14 (1983), </volume> <pages> pp. 15-23. </pages>
Reference-contexts: This special case is known in the literature as the Steiner tree problem in networks. This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics <ref> [33, 44, 18] </ref>, and approximation algorithms [6, 38, 25, 11, 31, 37, 29, 45] are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith <ref> [33] </ref>, Aneja [2], and Wong [44] are among those who proposed heuristics. Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]).
Reference: [34] <author> A. Segev, </author> <title> "The node-weighted Steiner tree problem," </title> <journal> Networks, </journal> <volume> vol. </volume> <pages> 17 (1987) pp. 1-17. </pages>
Reference-contexts: T freeg CP=k fl (6) Substituting into (5) and replacing k fl by k, the total number of sites, gives (2) and completes the proof of Theorem 1.3. 24 6 Further directions for research Two important variants of the basic Steiner tree problem in networks are the node Steiner problem <ref> [34] </ref>, in which nodes are assigned costs, and the directed Steiner tree problem, in which the input graph is directed and one seeks a directed tree as the solution. It is an open problem to find good approximation algorithms for either problem. <p> It was observed by Berman [5] that the set cover problem is reducible to the node Steiner problem via an approximation-preserving transformation. Khuller [20] made an analogous observation concerning the directed Steiner tree problem. In fact, Segev <ref> [34] </ref> gave an approximation-preserving reduction from the node Steiner problem to the directed Steiner problem.
Reference: [35] <author> R. Sridhar and R. Chandrasekaran, </author> <title> "Integer solution to synthesis of communication network," </title> <type> Technical Report, </type> <institution> The university of Texas at Dallas (1989). </institution> <month> 27 </month>
Reference-contexts: This problem is called multiterminal network synthesis by Chien [7] and Gomory and Hu [13]. Gomory and Hu and later Sridhar and Chandrasekaran <ref> [35] </ref> address the synthesis problem for the special case where the input graph is the complete graph with all costs identical. The problem is also essentially identical to the generalized Steiner problem as formulated by Krarup ([26], as cited in [41]).
Reference: [36] <author> K. Steiglitz, P. Weiner, and D. J. Kleitman, </author> <title> "The design of minimum-cost survivable networks," </title> <journal> IEEE Trans. on Circuit Theory, </journal> <volume> CT-16, </volume> <pages> 4 (1969) pp. 455-460. </pages>
Reference-contexts: The problem is also essentially identical to the generalized Steiner problem as formulated by Krarup ([26], as cited in [41]). The problem is referred to as the design of minimum-cost survivable networks in the work of Steiglitz, Weiner, and Kleitman <ref> [36] </ref>. These researchers pose the problem of finding a subgraph of minimum cost satisfying given connectivity requirements. The problem we address differs in that we allow the solution to contain multiple copies of links appearing only once in the input graph G.
Reference: [37] <author> G. F. Sullivan, </author> <title> "Approximation algorithms for Steiner tree problems," </title> <type> Tech. Rep. 249, </type> <institution> Dept. of Comp. Sci., Yale Univ. </institution> <year> (1982). </year>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]). One algorithm, proposed by Plesnik [31] and by Sullivan <ref> [37] </ref>, performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 [45]. Berman and Ramaiyer [6] have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds.
Reference: [38] <author> H. Takahashi, and A. </author> <title> Matsuyama, "An approximate solution for the Steiner problem in graphs," </title> <journal> Math. Japonica, </journal> <volume> vol. 24 (1980), </volume> <pages> pp. 573-577. </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama <ref> [38] </ref>, Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics.
Reference: [39] <author> L. G. Valiant, </author> <title> "The complexity of enumeration and reliability problems", </title> <journal> Siam J. Comput., </journal> <volume> vol. 8 (1979), </volume> <pages> pp. 410-421. </pages>
Reference-contexts: minimum number of communication links that would need to fail for all requirements to be unsatisfiable|can be solved approximately, using techniques we have presented in an earlier paper [22]. 4 pendent, determining the probability that the surviving links can serve all clients' requirements is a generalization of the #P-complete problem <ref> [39] </ref> called Network Reliability. No approximation algorithms are known. However, one powerful and useful heuristic for estimating two-terminal and k-terminal reliability [8, 9] can be directly generalized to handle the case of arbitrary pairs.
Reference: [40] <author> D. P. Williamson, M. X. Goemans, M. Mihail, and V. V. Vazirani, </author> <title> "A primal-dual approximation algorithm for generalized Steiner network problems," </title> <booktitle> Proceedings of the 25th ACM Symposium on Theory of Computing (1993), </booktitle> <pages> pp. 708-717. </pages>
Reference-contexts: In work building on that of Goemans and Williamson, we showed [32] how to obtain approximately optimal solutions to 2-edge-connected versions of the problems addressed in [16]. In these problems, one needs to achieve 2-connectivity without duplicating links. Finally, several subsequent papers <ref> [15, 23, 40] </ref> extended these methods to give approximation algorithms for the generalized Steiner problem without link duplication. 7 3 Background An instance of the generalized Steiner problem consists of a graph G with edge-costs c, together with a collection fR 1 ; : : : ; R b g of
Reference: [41] <author> P. Winter, </author> <title> "Steiner Problem in Networks: A Survey", </title> <booktitle> BIT 25 (1985), </booktitle> <pages> pp. 485-496. </pages>
Reference-contexts: Gomory and Hu and later Sridhar and Chandrasekaran [35] address the synthesis problem for the special case where the input graph is the complete graph with all costs identical. The problem is also essentially identical to the generalized Steiner problem as formulated by Krarup ([26], as cited in <ref> [41] </ref>). The problem is referred to as the design of minimum-cost survivable networks in the work of Steiglitz, Weiner, and Kleitman [36]. These researchers pose the problem of finding a subgraph of minimum cost satisfying given connectivity requirements. <p> Winter <ref> [41] </ref> and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong [44] are among those who proposed heuristics. <p> Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in <ref> [41] </ref>). One algorithm, proposed by Plesnik [31] and by Sullivan [37], performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 [45]. Berman and Ramaiyer [6] have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds. <p> Previous to our work, no approximation algorithms for the generalized Steiner problem were known. There have been papers on finding exact solutions and on algorithms for special classes of graphs <ref> [41, 42] </ref>. In the work of Goemans and Bertsimas, described below, and in our work, the edge-connectivity requirement is allowed to be satisfied in part by duplicating edges of the input graph.
Reference: [42] <author> P. Winter, </author> <title> "Generalized Steiner Problem in Outerplanar graphs," </title> <booktitle> Networks (1987), </booktitle> <pages> pp. 129-167. </pages>
Reference-contexts: Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms [6, 38, 25, 11, 31, 37, 29, 45] are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see <ref> [42] </ref>). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. Note that in this general case the solution network need not be connected. <p> of the Steiner tree problem in networks, and showed that for two random distributions of costs, the value of this integer program differed drastically from the value of its fractional relaxation. 2.2 The generalized Steiner problem in networks The generalized Steiner problem in networks, as originally formulated by Krarup (see <ref> [42] </ref>), is as follows. The input consists of a graph with edge-costs, a subset Z of the vertices, and, for each pair of vertices i; j 2 Z, a required edge-connectivity r ij . The goal is to output a minimum-cost subnetwork satisfying the connectivity requirements. <p> Previous to our work, no approximation algorithms for the generalized Steiner problem were known. There have been papers on finding exact solutions and on algorithms for special classes of graphs <ref> [41, 42] </ref>. In the work of Goemans and Bertsimas, described below, and in our work, the edge-connectivity requirement is allowed to be satisfied in part by duplicating edges of the input graph.
Reference: [43] <author> R. T. Wong, </author> <title> "Worst-case analysis of network design problem heuristics", </title> <journal> SIAM J. Alg. Disc. Math., </journal> <volume> vol. 1 (1980), </volume> <pages> pp. 51-63. </pages>
Reference: [44] <author> R. T. Wong, </author> <title> "A dual ascent approach for Steiner tree problems on a directed graph", </title> <journal> Math. Program., </journal> <volume> vol. </volume> <pages> 28 (1984) pp. 271-287. </pages>
Reference-contexts: This special case is known in the literature as the Steiner tree problem in networks. This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics <ref> [33, 44, 18] </ref>, and approximation algorithms [6, 38, 25, 11, 31, 37, 29, 45] are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). <p> Winter [41] and more recently Hwang and Richards [17] surveyed this body of work. Karp [19] showed that the problem is NP-complete. Takahashi and Mat-suyama [38], Kou, Markowsky and Berman [25], El-Arbi [11], Rayward-Smith [33], Aneja [2], and Wong <ref> [44] </ref> are among those who proposed heuristics. Among these, the heuristics that have been analyzed have a worst-case performance ratio of 2 2=k, where k is the number of terminals that need to be connected (called Z-vertices in [41]).
Reference: [45] <author> A. Z. Zelikovsky, </author> <title> "The 11/6-approximation algorithm for the Steiner problem on networks," </title> <journal> Algorithmica, </journal> <volume> 9, </volume> <pages> pp. 463-470. 28 </pages>
Reference-contexts: This problem was one of the first seven problems shown NP-complete by Karp [19]. Given the range of its applications, it is not surprising that this problem has been well-studied. Many enumeration algorithms, heuristics [33, 44, 18], and approximation algorithms <ref> [6, 38, 25, 11, 31, 37, 29, 45] </ref> are known for the problem. Polynomial-time solutions for restricted classes of graphs are also known (see [42]). However, none of the algorithms addresses the more general case in which each client can specify an arbitrary pair of cities. <p> One algorithm, proposed by Plesnik [31] and by Sullivan [37], performs somewhat better. Recently Ze-likovsky gave an approximation algorithm with a performance ratio of 11=6 <ref> [45] </ref>. Berman and Ramaiyer [6] have improved this to 16=9. In computational experiments, these heuristics generally perform considerably better than the worst-case bounds.
References-found: 45

