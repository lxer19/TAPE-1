URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1995/1995-11.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Case-Based Filter for Diagnostic Belief Networks  
Author: N.B. Peek L.C. van der Gaag 
Address: P.O. Box 9521 2300 RA Leiden The Netherlands  P.O. Box 80.089 3508 TB Utrecht The Netherlands  
Affiliation: Dept. of Law and Information Technology University of Leiden  Dept. of Computer Science Utrecht University  
Abstract: Special-case algorithms for Bayesian belief networks are designed to alleviate the computational burden of problem solving. These algorithms provide a case base for storing solutions for a small number of situations that are likely to be encountered during problem solving. This case base is employed as a filter for belief-network inference: for a problem under consideration, the network at hand is consulted only if the case base does not provide a solution for the problem. We present a new algorithm that further extends on the basic idea of special-case algorithms by exploiting knowledge about the way diagnostic problem solving with a belief network is shaped.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. </author> <title> Pearl (1988). Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference, </title> <publisher> Morgan Kaufmann Publishers. </publisher> <pages> 11 </pages>
Reference-contexts: The field that is concerned with automated reasoning in the presence of uncertain and incomplete information is no exception. Halfway through the 1980s, research in this field resulted in the framework of (Bayesian) belief networks <ref> [1] </ref>. This framework provides a powerful and intuitively appealing formalism for representing probabilistic information and in addition provides a set of algorithms for sound probabilistic inference. The belief network framework is suitable for various domains of application and for various types of task. <p> These 2 probabilities with each other constitute the quantitative part of the belief network and, with the qualitative part, suffice for describing the joint probability distribution <ref> [1] </ref>. In the sequel, we will use Pr to denote a joint probability distribution under consideration. We will further restrict the discussion to binary variables taking one of the truth values true and false; the generalisation to variables with more than two discrete values, however, is straightforward.
Reference: [2] <author> S. Andreassen, M. Woldbye, B. Falck, and S.K. </author> <title> Andersen (1987). MUNIN A causal probabilistic network for interpretation of electromyographic findings, </title> <booktitle> Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 366 - 372. </pages>
Reference-contexts: The belief network framework is suitable for various domains of application and for various types of task. Yet, over the last few years, it is becoming especially popular for building diagnostic knowledge-based systems <ref> [2, 3, 4] </ref>: experience with applying the belief network framework for diagnostic problem solving indicates that the framework is tailored to the task of diagnosis as it provides for reasoning with both causal and associative relationships in a domain. 1 Unfortunately, the basic algorithms of the belief network framework have a
Reference: [3] <author> M.A. Shwe, B. Middleton, D.E. Heckerman, M. Henrion, E.J. Horvitz, </author> <title> H.P. Lehmann, and G.F. Cooper (1991). Probabilistic diagnosis using a reformulation of the Internist-1/QMR knowledge base, </title> <booktitle> Methods of Information in Medicine, </booktitle> <volume> vol. 30, </volume> <pages> pp. 241-255. </pages>
Reference-contexts: The belief network framework is suitable for various domains of application and for various types of task. Yet, over the last few years, it is becoming especially popular for building diagnostic knowledge-based systems <ref> [2, 3, 4] </ref>: experience with applying the belief network framework for diagnostic problem solving indicates that the framework is tailored to the task of diagnosis as it provides for reasoning with both causal and associative relationships in a domain. 1 Unfortunately, the basic algorithms of the belief network framework have a
Reference: [4] <author> D.E. Heckerman, E.J. Horvitz, and B. </author> <month> Nathwani </month> <year> (1992). </year> <title> Towards normative expert systems: part I, the Pathfinder project, </title> <booktitle> Methods of Information in Medicine, </booktitle> <volume> vol. 31, </volume> <pages> pp. 90-105. </pages>
Reference-contexts: The belief network framework is suitable for various domains of application and for various types of task. Yet, over the last few years, it is becoming especially popular for building diagnostic knowledge-based systems <ref> [2, 3, 4] </ref>: experience with applying the belief network framework for diagnostic problem solving indicates that the framework is tailored to the task of diagnosis as it provides for reasoning with both causal and associative relationships in a domain. 1 Unfortunately, the basic algorithms of the belief network framework have a
Reference: [5] <author> G.F. </author> <title> Cooper (1990). The computational complexity of probabilistic inference using Bayesian belief networks, </title> <journal> Artificial Intelligence, </journal> <volume> vol. 42, </volume> <pages> pp. 393-405. </pages>
Reference-contexts: In essence, this problem cannot be remedied as general probabilistic inference with belief networks is N P-hard <ref> [5] </ref>. One way of enhancing the average-case complexity of problem solving with a belief network is the use of a special-case algorithm [6].
Reference: [6] <author> E.H. </author> <title> Herskovitz and G.F. Cooper (1991). Algorithms for Bayesian belief-network precomputation, </title> <booktitle> Methods of Information in Medicine, </booktitle> <volume> vol. 30, </volume> <pages> pp. 81-89. </pages>
Reference-contexts: In essence, this problem cannot be remedied as general probabilistic inference with belief networks is N P-hard [5]. One way of enhancing the average-case complexity of problem solving with a belief network is the use of a special-case algorithm <ref> [6] </ref>. Special-case algorithms are based on the idea of shifting part of the burden of runtime computation to a pre-runtime computational phase: for a number of situations that are likely to be encountered during problem solving, solutions are precomputed and stored in a case base. <p> Our special-case algorithm has not been tested as yet on real-life belief-network applications. We feel, however, that our algorithm has potential for substantial speedup of problem solving as it further extends on the basic idea of special-case algorithms which have been reported to yield impressive results <ref> [6] </ref>. As for special-case algorithms in general we expect the best results for belief networks where a relatively small number of cases covers a large proportion of the likely uses of the network.
Reference: [7] <author> J.Q. </author> <title> Smith (1989). Decision Analysis: a Bayesian Approach, </title> <publisher> Chapman and Hall. </publisher>
Reference-contexts: Test planning amounts to selecting the best tests to apply to the problem, and evaluating whether enough information has been obtained to establish a diagnosis with sufficient accuracy. For selecting the best tests to apply to a problem, we make use of concepts from Bayesian decision theory <ref> [7] </ref>. The basic idea is to measure for each available test T i the expected usefulness of the information yielded upon application of the test.
Reference: [8] <author> P. Glasziou and J. </author> <month> Hilden </month> <year> (1989). </year> <title> Test selection measures, Medical Decision Making, </title> <journal> vol. </journal> <volume> 9, </volume> <pages> pp. 133 - 141. </pages>
Reference-contexts: A utility may be based on probabilistic information only and not contain any other information about the domain at hand; a utility, however, may also involve non-probabilistic aspects from the domain such as the cost of obtaining the information <ref> [8] </ref>.
Reference: [9] <author> L.C. van der Gaag and M.L. </author> <title> Wessels (1994). Selective evidence gathering for diagnostic belief networks, </title> <journal> AISB Quarterly, </journal> <volume> No. 86, </volume> <pages> pp. 23-34. </pages>
Reference-contexts: In this paper, we use a very simple type of utility that is based on the changes in the probabilities of the various yet unestablished hypotheses incurred by the configuration at hand, following <ref> [9] </ref> in essence: we take the utility of a configuration k i given c to be u ( k P i )j where H (c) is the set of hypothesis variables that are not yet established given c.
Reference: [10] <author> G.A. </author> <title> Gorry and G.O. Barnett (1968). Experience with a model of sequential diagnosis, </title> <journal> Computers and Biomedical Research, </journal> <volume> vol. 1, </volume> <pages> pp. 490 - 507. </pages>
Reference-contexts: Also note that evidence variables to acquire information on are selected groupwise by employing knowledge about the tests available in the domain; variables therefore are not selected one by one as in a fully myopic approach to evidence gathering <ref> [10] </ref>. After a test has been applied to a problem under consideration and the evidence yielded has been processed, it is evaluated whether a sufficiently accurate diagnosis can be reached on the basis of the available information.
Reference: [11] <author> S.B. Cousins, W. Chen, and M.E. </author> <month> Frisse </month> <year> (1993). </year> <title> A tutorial to stochastic simulation algorithms for belief networks, </title> <journal> Artificial Intelligence in Medicine, </journal> <volume> vol. 5, </volume> <pages> pp. 315-340. </pages>
Reference-contexts: Before detailing our precomputation algorithm, we observe that for precomputing a case base several probabilities are required. Our precomputation algorithm makes use of a simulation algorithm for estimating these probabilities from the network at hand <ref> [11] </ref>. The basic idea of a simulation algorithm for a belief network is to generate a finite multiset of configurations of all variables involved, reflecting the joint probability distribution defined by the network; the separate elements from this multiset are called samples.
Reference: [12] <author> R. Karp, M. Luby, and N. </author> <title> Madras (1989). Monte-Carlo approximation algorithms for enumeration problems, </title> <journal> Journal of Algorithms, </journal> <volume> vol. 10, </volume> <pages> pp. 429-448. </pages>
Reference-contexts: More formally, if for the number of samples N in a properly generated multiset we have that N &gt; " 2 ln ffi E then a probability estimate from is within (absolute) error bound " E with probability 1 ffi E <ref> [12] </ref>; conversely, a probability estimate from is within the error bound " E &lt; 2 ln ffi E with probability 1 ffi E .
Reference: [13] <author> N.B. </author> <title> Peek (1994). A Filter for Belief Networks, M.Sc. </title> <type> thesis INF/SCR-94-20, </type> <institution> Utrecht University. </institution> <month> 12 </month>
Reference-contexts: Also note that the inequality provides a conservative lower bound for confirmation candidacy. Similar observations apply for determining rejection candidacy for a variable and for determining whether or not a candidate is established; for further details, we refer to <ref> [13] </ref>. 5.2 Building the Case Tree Our precomputation algorithm builds a partial case tree for a belief network: the basic idea is that only cases with a high probability of being encountered during problem solving are included.
References-found: 13

