URL: http://www.cs.washington.edu/homes/brad/research/graphics/gi96/paper.ps.gz
Refering-URL: http://www.cs.washington.edu/homes/brad/research/graphics/gi96/index.html
Root-URL: 
Email: brad,derose,danix,salesin@cs.washington.edu johnsny@microsoft.com  
Title: Fast Rendering of Complex Environments Using a Spatial Hierarchy  
Author: Bradford Chamberlain Tony DeRose Dani Lischinski David Salesin John Snyder 
Keyword: level-of-detail (LOD), multiresolution, octree, rendering, spatial hierarchy, walkthrough.  
Address: Box 352350 One Microsoft Way Seattle, WA 98195-2350 Redmond, WA 98052-6399  
Affiliation: University of Washington Microsoft Research  
Abstract: We present a new method for accelerating the rendering of complex static scenes. The technique is applicable to unstructured scenes containing arbitrary geometric primitives and has sublinear asymptotic complexity. Our approach is to construct a spatial hierarchy of cells over the scene and to associate with each cell a simplified representation of its contents. The scene is then rendered using a traversal of the hierarchy in which a cell's approximation is drawn instead of its contents if the approximation is sufficiently accurate. We apply the method to several different scenes and demonstrate significant speedups with little image degradation. We also exhibit and discuss some of the artifacts that our approximation may cause. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Airey, J. M., J. H. Rohlf, and F. P. Brooks, Jr. </author> <year> (1990, </year> <month> March). </month> <title> Towards image realism with interactive update rates in complex virtual building environments. </title> <booktitle> Computer Graphics (1990 Symposium on Interactive 3D Graphics) 24(2), </booktitle> <pages> 41-50. </pages>
Reference: <author> Akeley, K. </author> <year> (1993, </year> <month> August). </month> <title> RealityEngine graphics. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 109-116. </pages>
Reference-contexts: With antialiased polygon-drawing hardware <ref> (Akeley 1993) </ref> the RGBA color-cube approximation may be adequately computed from just a single pixel. In some cases, it might also be advantageous to compute the RGBA value analytically, rather than using the sampling approach that we have implemented.
Reference: <author> Banner, D. W., A. D'Arcy, W. Janes, R. Gentz, H. J. Schoen-feld, C. Broger, H. Loetscher, and W. </author> <month> Lesslauer </month> <year> (1993). </year> <title> Crystal structure of the soluble human 55 kd tnf receptor human tnf beta complex: implications for tnf receptor activation. </title> <booktitle> Cell 73, </booktitle> <pages> 431-445. </pages>
Reference-contexts: Plate 2 shows the same experiment for a model of a tumor necrosis factor protein and its receptor <ref> (Banner et al. 1993) </ref>. The model consists of 6,534 atoms (spheres), each of which is rendered as 800 polygons, resulting in a total of 5.2 million polygons. In this series, the model is viewed 25 degrees from a sampled direction.
Reference: <author> Barnes, J. and P. </author> <month> Hut </month> <year> (1986, </year> <month> December). </month> <title> A hierarchical O(N log N ) force-calculation algorithm. </title> <booktitle> Nature 324, </booktitle> <pages> 446-449. </pages>
Reference-contexts: In addition to O (n) leaf cells there are O (n) ancestor cells in the octree. Since each cell's color-cube requires a constant amount of storage, the total memory required is O (n). 3.2 Discussion Our method is similar in spirit to the Barnes-Hut algorithm for the n-body problem <ref> (Barnes and Hut 1986) </ref>. This algorithm approximates the gravitational field due to n point masses in O (log n) time by replacing large but distant clusters of points with a single point at their center of mass.
Reference: <author> Brechner, E. </author> <year> (1995). </year> <type> Personal communication. </type>
Reference-contexts: 1 Introduction Advances in the throughput of rendering hardware are continually offset by the need to render more and more complex scenes. Virtual environments consisting of tens or even hundreds of millions of polygons are becoming increasingly common for example, the Boeing 777 database contains over 500 million polygons <ref> (Brechner 1995) </ref>. Environments of such extreme complexity cannot be rendered in real-time using traditional means. Another potential difficulty with rendering large databases is that even the working set of data can potentially outgrow the capacity of main memory or the local disk, so that network bandwidth becomes the major bottleneck.
Reference: <author> Chen, S. E. and L. Williams (1993, </author> <month> August). </month> <title> View interpolation for image synthesis. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIG-GRAPH, </booktitle> <pages> pp. 279-288. </pages>
Reference: <author> Clark, J. H. </author> <year> (1976, </year> <month> October). </month> <title> Hierarchical geometric models for visible surface algorithms. </title> <booktitle> Communications of the ACM 19(10), </booktitle> <pages> 547-554. </pages>
Reference: <author> Eck, M., T. DeRose, T. Duchamp, H. Hoppe, M. Lounsbery, and W. Stuetzle (1995, </author> <month> August). </month> <title> Multiresolution analysis for arbitrary meshes. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 173-182. </pages>
Reference-contexts: One drawback of our algorithm is that, while it handles suspension-like objects (such as leafy trees) well, it can produce noticeable artifacts when rendering continuous surfaces. On the other hand, many promising approaches already exist for speeding the rendering of continuous geometry, including multiresolution surfaces <ref> (Eck et al. 1995) </ref> and other LOD approaches for sim-plifying the geometry itself, and hierarchical Z-buffer algorithms (Greene et al. 1993) for speeding the visibility computations.
Reference: <author> Funkhouser, T. A. and C. H. </author> <month> Sequin </month> <year> (1993, </year> <month> August). </month> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 247-254. </pages>
Reference: <author> Greene, N., M. Kass, and G. Miller (1993, </author> <month> August). </month> <title> Hierarchical z-buffer visibility. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIG-GRAPH, </booktitle> <pages> 231-238. </pages>
Reference-contexts: Airey et al. (1990) and Teller (1992) extended this idea, allowing rapid culling of surfaces that lie within the viewing volume but are occluded by other objects in the scene. These approaches work well for scenes with large oc-cluders, such as the walls in a building. The hierarchical Z-buffer <ref> (Greene, Kass, and Miller 1993) </ref> is another approach to fast visibility culling that allows a region of the scene to be culled whenever its closest depth value is greater than those of the pixels that have already been drawn at its projected screen location. <p> On the other hand, many promising approaches already exist for speeding the rendering of continuous geometry, including multiresolution surfaces (Eck et al. 1995) and other LOD approaches for sim-plifying the geometry itself, and hierarchical Z-buffer algorithms <ref> (Greene et al. 1993) </ref> for speeding the visibility computations. One worthwhile direction for future work, therefore, would be to look at combining our approach with some of these other methods, employing various different techniques in rendering a given scene, according to the particular geometry being rendered.
Reference: <author> Laur, D. and P. </author> <month> Hanrahan </month> <year> (1991, </year> <month> July). </month> <title> Hierarchical splat-ting: A progressive refinement algorithm for volume rendering. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings) 25(4), </booktitle> <pages> 285-288. </pages>
Reference: <author> Lounsbery, M., T. DeRose, and J. Warren (1994, </author> <month> January). </month> <title> Multiresolution surfaces of arbitrary topological type. </title> <type> Technical Report 93-10-05b, </type> <institution> Department of Computer Science and Engineering, University of Washington. </institution> <note> To appear in ACM Transactions on Graphics. </note>
Reference: <author> Maciel, P. W. C. and P. </author> <title> Shirley (1995, April). Visual navigation of large environments using textured clusters. </title> <booktitle> In 1995 Symposium on Interactive 3D Graphics, ACM SIGGRAPH, </booktitle> <pages> 95-102. </pages>
Reference: <author> McMillan, L. and G. Bishop (1995, </author> <month> August). </month> <title> Plenoptic modeling: An image-based rendering system. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 39-46. </pages>
Reference: <author> Meagher, D. J. </author> <year> (1985, </year> <month> September). </month> <title> The application of octree techniques to 3-d medical imaging. </title> <booktitle> In Proceedings of the Seventh Annual Conference of the IEEE Engineering in Medicine and Biology Society, </booktitle> <pages> 612-615. </pages>
Reference-contexts: Only parts of the environment that change or move significantly are re-rendered from one frame to the next, resulting in the majority of objects being rendered infrequently. Our approach is also related to octree-based volume rendering <ref> (Meagher 1985) </ref>, and in particular to the hierarchical splatting idea developed by Laur and Hanra-han (1991). Their algorithm renders an octree-encoded volume model to a given error tolerance by rendering splats at different levels according to the estimated error of rendering the level.
Reference: <author> Porter, T. and T. Duff (1984, </author> <month> July). </month> <title> Compositing digital images. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings) 18(3), </booktitle> <pages> 253-259. </pages>
Reference-contexts: The resulting image from each projection is used to compute the color of the corresponding color-cube face, as described below. In addition to color values, we store a per-face opacity (alpha) value <ref> (Porter and Duff 1984) </ref> to indicate the fraction of the cell face that is covered by geometry. Several different methods can be used to convert the projected cell's image to a single color value. <p> The color-cube approximation for each internal node is computed by combining the RGBA colors of its eight children, as shown in Figure 3. First, the front four cube faces are composited over the back four, using an ordinary over compositing operation <ref> (Porter and Duff 1984) </ref>. Then, the four resulting pixels are averaged to give a sin faces. gle RGBA color for the internal node's color-cube face.
Reference: <author> Regan, M. and R. </author> <title> Pose (1994, July). Priority rendering with a virtual reality address recalculation pipeline. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 155-162. </pages>
Reference: <author> Rohlf, J. and J. </author> <month> Helman </month> <year> (1994, </year> <month> July). </month> <title> Iris Performer: A high performance multiprocessing toolkit for real-time 3D graphics. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <pages> 381-394. </pages>
Reference-contexts: Lounsbery et al. (1994) and Eck et al. (1995) describe methods based on wavelet analysis that can be used to automatically create reasonably accurate low-detail models of surfaces. Maciel and Shirley (1995) used a number of LOD representations, including geometric simplifications created by Iris Performer <ref> (Rohlf and Hel-man 1994) </ref>, texture maps, and colored bounding boxes.
Reference: <author> Rossignac, J. and P. </author> <month> Borrel </month> <year> (1992). </year> <title> Multi-resolution 3D approximations for rendering complex scenes. </title> <type> Research Report RC 17697 (#77951), </type> <institution> IBM, </institution> <address> Yorktown Heights, New York 10598. </address> <note> Also appeared in the IFIP TC 5.WG 5.10. </note>
Reference: <author> Teller, S. J. </author> <year> (1992, </year> <month> October). </month> <title> Visibility Computations in Densely Occluded Polyhedral Environments. </title> <type> Ph. D. thesis, </type> <institution> Computer Science Division (EECS), UC Berke-ley, Berkeley, California 94720. </institution> <note> Available as Report No. UCB/CSD-92-708. </note>
References-found: 20

