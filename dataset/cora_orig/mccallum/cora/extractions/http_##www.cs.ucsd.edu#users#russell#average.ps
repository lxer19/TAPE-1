URL: http://www.cs.ucsd.edu/users/russell/average.ps
Refering-URL: http://www.cs.ucsd.edu/users/russell/
Root-URL: http://www.cs.ucsd.edu
Email: russell@cs.ucsd.edu  
Title: A Personal View of Average-Case Complexity  
Author: Russell Impagliazzo 
Note: Research Supported by NSF YI Award CCR-92-570979, Sloan Research Fellowship BR-3311, and USA-Israel BSF Grant 92-00043  
Date: April 17, 1995  
Address: UC, San Diego 9500 Gilman Drive La Jolla, CA 92093-0114  
Affiliation: Computer Science and Engineering  
Abstract: The structural theory of average-case complexity, introduced by Levin , gives a formal setting for discussing the types of inputs for which a problem is difficult. This is vital to understanding both when a seemingly difficult (e.g. N P -complete) problem is actually easy on almost all instances, and to determining which problems might be suitable for applications requiring hard problems, such as cryptography. This paper attempts to summarize the state of knowledge in this area, including some "folklore" results that have not explicitly appeared in print. We also try to standardize and unify definitions. Finally, we indicate what we feel are interesting research directions. We hope that this paper will motivate more research in this area and provide an introduction to the area for people new to it. 
Abstract-found: 1
Intro-found: 1
Reference: [BGS] <author> T.Baker, J. Gill and R. </author> <title> Solo-vay Relativizations of the P=NP question, </title> <journal> SIAM J. Comput., </journal> <year> 1975, </year> <pages> pp. 431-442. </pages>
Reference-contexts: To show that we are in Algorithmica, one needs to present an efficient algorithm for some N P -complete language. A rela-tivized Algorithmica was given in <ref> [BGS] </ref>. 2.2 Heuristica Heuristica is the world where N P problems are intractable in the worst-case, but tractable on average for any samplable distribution. Heuristica is in some sense a paradoxical world.
Reference: [BBR] <author> Bennett, C., Brassard, G., Robert, J., </author> <title> "Privacy Amplification by Public Discussion", </title> <journal> Siam 12 J. on Computing, </journal> <volume> Vol. 17, No. 2, </volume> <year> 1988, </year> <pages> pp. 210-229. </pages>
Reference-contexts: In particular, it may be possible to identify people based on certain quantum effects <ref> [BBR] </ref>). There seems to be no reason why randomness could not be essential for the 4 worst-case algorithm for the N P -complete problem. No general techniques for de-randomization are known to be possible in a version of Algorithmica where, say, N P = RP 6= P .
Reference: [BCGL] <author> S. Ben-David, B. Chor,O. Gol-dreich, and M. Luby, </author> <title> On the Theory of Average Case Complexity, </title> <booktitle> STOC 22 (1990), </booktitle> <pages> 379-386. </pages>
Reference-contexts: The best known result along these lines is that of <ref> [BCGL] </ref> reducing average case search problems to average case decision problems. As far as network security and cryptography go, there would not be much of a difference between Algorithmica and Heuris-tica.
Reference: [Bra] <author> G. Brassard, </author> <title> Relativized Cryptography, </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> IT-29 (1983), </volume> <pages> 877-894. </pages>
Reference-contexts: To prove that we live in Cryptomania, one must prove that a particular secret-key exchange protocol is secure. Proving a strong lower bound on the average case time to factor or take discrete logs would be sufficient, and no other problems are currently candidates for founding public-key cryptography. Brassard <ref> [Bra] </ref> gives a relativized world where public-key cryp tography is possible. 3 Definitional issues The definitions Levin gave for the basic concepts of his theory seem counterintuitive to many people on first reading.
Reference: [DH] <author> W. Diffie and M. Hellman, </author> <title> "New directions in cryptography", </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> Vol. 22, </volume> <year> 1976, </year> <pages> pp. 644-654. </pages>
Reference: [GGM] <author> Goldreich, O., S. Goldwasser, and S. Micali, </author> <title> "How to Construct Random Functions", </title> <journal> J. of ACM, </journal> <volume> Vol. 33, No. 4, </volume> <year> 1986, </year> <pages> pp. 792-807. </pages>
Reference: [GMW] <author> Goldreich, O., Micali, S., and Wigderson, A., </author> <title> "Proofs that Yield Nothing But their Validity or All Languages in NP have Zero-Knowledge Proofs", </title> <journal> J. of the ACM, </journal> <volume> Vol. 38, No. 3, </volume> <month> July </month> <year> 1991, </year> <pages> pp. 691-729. </pages>
Reference: [G1] <author> Y. </author> <title> Gurevich The Challenger-Solver Game Bulletin of the EATCS, </title> <month> October, </month> <year> 1991. </year>
Reference-contexts: Here, we imagine how the story might have turned out had Grouse been an expert in computational complexity at a time when the main questions about average-case complexity had been resolved. (We believe that this story inspired Gurevich's "Challenger-Solver Game" <ref> [G1] </ref>). In this section, we will leave unresolved the questions of how to properly formalize the complexity assumptions behind the worlds. <p> Levin hints at this in the last sentence of his original paper, and Gurevich has explained it nicely in <ref> [G1] </ref>. However, I feel that the following formal statement based on this intuition might be helpful to have in the literature: Definition 3.2: A distributional problem is a function f and an input ensemle n , n 2 Z + .
Reference: [G2] <author> Y. </author> <title> Gurevich Average case completeness JCSS </title>
Reference: [G3] <author> Y. </author> <title> Gurevich Matrix block decomposition is complete for the average case 31'st FOCS, </title> <booktitle> 1990, </booktitle> <pages> pp. 802-811. </pages>
Reference-contexts: Since, he and many others have built on this foundation (see e.g., [BCGL],[G2],[VL], <ref> [G3] </ref>). Despite the above work, I feel the structure of average-case complexity has not received the attention due to a central problem in complexity theory. <p> We will present alternate definitions in the next section. From the results of [ILe], being in Heur sitica is basically equivalent to knowing a method of quickly solving almost all instances of one of the average-case complete problems on the uniform distribution (see e.g., [L1],[G2],[VL], <ref> [G3] </ref>). and having a lower bound for the worst-case complexity of some N P -complete problem. We do not know of any relativized Heuristica using Levin's definition of average-case complexity.
Reference: [HILL] <author> J. Has-tad, R. Impagliazzo,L. Levin, and M. Luby, </author> <title> Pseudo-Random Generators Based on One-Way Functions. </title> <note> To appear, SIAM Journal of Computing. </note>
Reference-contexts: Thus, in Minicrypt, Grouse finally gains the upper hand, and can best Gauss in front of the class. 7 There are no known positive algorithmic aspects to Minicrypt, except that you can use the one-way function to get a pseudorandom generator that can be used to de-randomize algorithms <ref> [HILL] </ref>. On the other hand, it is possible for participants in a network to identify themselves to other participants and to authenticate messages as originating from them using electronic signatures [NY], [?].
Reference: [ILe] <author> R. Impagliazzo and L. Levin, </author> <title> No Better Ways of Finding Hard NP-Problems Than Picking Uniformly at Random. </title> <booktitle> Proceedings of the 31'st IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference-contexts: However, we feel this is more of an artifact of the definition than an essential fact about Heuris-tica. We will present alternate definitions in the next section. From the results of <ref> [ILe] </ref>, being in Heur sitica is basically equivalent to knowing a method of quickly solving almost all instances of one of the average-case complete problems on the uniform distribution (see e.g., [L1],[G2],[VL], [G3]). and having a lower bound for the worst-case complexity of some N P -complete problem. <p> Generic methods of problem solving will fail in most domains. However, a few relatively amazing generic algorithms are possible based only on the non-existence of one-way functions. For example, <ref> [ILe] </ref> gives a method of using a generic function inverter to learn in average polynomial time the behaviour of an unknown algorithm by observing its input-output behaviour on some samplable input distribution.
Reference: [ILu] <author> R. Impagliazzo and M. Luby, </author> <title> One-Way Functions are Essential for Complexity Based Cryptography. </title> <booktitle> Proceedings of the 30'th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1989. </year>
Reference-contexts: A problem that no one knows the answer to cannot be used to distinguish legitimate users from eaves droppers. This intuition is made formal in <ref> [ILu] </ref>, where it is shown that one-way functions are necessary for many cryptographic applications. The existence of hard average-case problems in a non-uniform setting has been shown by Nisan and Wigderson ([NW])to be sufficient for generic de-randomization. <p> In fact, in such a world, Grouse could arrange that all the students except Gauss would be able to solve the problems asked in class! Such a secret key agreement protocol implies the existence of a one-way function <ref> [ILu] </ref>, so we still have pseudo-randomness, signatures, identification, zero-knowledge, etc. Also, if one does the secret-key exchange using trap-door one-way functions (and all known protocols are either explicitly or implicitly using such functions), one can do almost any cryptographic task imaginable! (See [?],[?] ).
Reference: [IR] <author> R. Impagliazzo and S. Rudich, </author> <title> Limits on the Provable Consequences of One-Way Functions. </title> <booktitle> Proceedings, 20'th ACM Symposium on Theory of Computing, </booktitle> <year> 1989 </year> . 
Reference-contexts: There seems to be no nice characterization of secret-key agreement protocols, and maybe this is inherent to the problem ([Ru]), so it is not clear how one could even start to do the latter. <ref> [IR] </ref> gives a relativized Minicrypt. 2.5 Cryptomania In Cryptomania, public-key cryptography is possible, i,e., it is possible for two parties to agree on a secret message using only publicly accessible channels.
Reference: [IR2] <author> R. Impagliazzo and S. Rudich, </author> <note> in preparation. </note>
Reference-contexts: To get some idea for the difference, [NW] shows how to use any problem in DistN P but not in HP=poly for de-randomization. <ref> [IR2] </ref> was able to construct an oracle where DistN P HP but N P 6 P=poly, but the same for AvgP=poly is not known. However, many of the reductions between average-case problems work equally well for the heuristic classes as for the average-case classes.
Reference: [IZ] <author> R. Impagliazzo and D. Zucker-man, </author> <title> How to Recycle Random Bits. </title> <booktitle> Proceedings of the 30'th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1989. </year>
Reference: [L1] <author> L. Levin, </author> <title> Average Case Complete Problems SIAM J. </title> <journal> Com-put. </journal> <volume> 15 (1986), </volume> <pages> 285-286. </pages>
Reference-contexts: For such applications, one needs more than the mere existence of hard instances of the problem; one needs to be able to generate instances in a way that guarantees that almost all generated instances are hard. For these reasons, Levin in <ref> [L1] </ref> introduced a structural theory of the average-case complexity of problems.
Reference: [L2] <author> L. </author> <note> Levin. </note> ? 
Reference: [LR] <author> Luby M., and Rackoff, C., </author> <title> "How to Construct Pseudorandom Permutations From Pseudorandom Functions", </title> <journal> SIAM J. on Computing, </journal> <volume> Vol. 17, No. 2, </volume> <year> 1988, </year> <pages> pp. 373-386. </pages>
Reference-contexts: It is possible, if a small amount of information is agreed upon in advance, to set up a private unbreakable code between two participants in the network that will allow them to talk privately over a publicly accessible channel. ([HILL],[GGM], <ref> [LR] </ref>). However, it is impossible to have secure elections over a public channel, or to establish a private code without sending some information through a secure channel. It is not known how to have anonymous digital money in such a world.
Reference: [NW] <author> N. Nisan and A. Wigderson, </author> <title> Hardness vs. Randomness, </title> <journal> JCSS </journal> ? 
Reference-contexts: There are several ways of doing this. The first would be to insist that all errors be benign on all random inputs of the algorithm . I call the resulting class AvgZP P , for average case, zero-error probabilistic algorithms. Then it is relatively easy to use results of <ref> [NW] </ref> to prove the following: Proposition 4: If DistN P AvgZP P then BP P = ZP P . However, this is saying less about the average case hardness of problems in N P then about error-free vs. error prone randomized computation. <p> HP for heuristic polynomial-time is the class of distributional problems with a deterministic poly-time algorithm scheme, and similarly HP P is the class of distributional problems with a probabilistic poly-time algorithm scheme, and HP=poly with a nonuniform algorithm scheme. To get some idea for the difference, <ref> [NW] </ref> shows how to use any problem in DistN P but not in HP=poly for de-randomization. [IR2] was able to construct an oracle where DistN P HP but N P 6 P=poly, but the same for AvgP=poly is not known.
Reference: [NY] <author> Naor, M. and Yung, M., </author> <title> "Universal One-way Hash Functions 13 and Their Applications", </title> <booktitle> 21 rst STOC, </booktitle> <year> 1989, </year> <pages> pp 33-43. </pages>
Reference-contexts: On the other hand, it is possible for participants in a network to identify themselves to other participants and to authenticate messages as originating from them using electronic signatures <ref> [NY] </ref>, [?]. It is possible to prove facts about a secret in in a way that discloses no other information about the secret ([?],[GMW]).
Reference: [OW] <author> Ostrovsky, R and Wigderson, A., </author> <title> "One-way Functions are Essential for Non-Trivial Zero-Knowledge", </title> <booktitle> 2 nd Israel Symposium on the Theory of Computing and Systems, </booktitle> <year> 1993, </year> <pages> pp. 3-17. </pages>
Reference: [RSA] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> "A method for obtaining digital signatures and public-key cryptosystems", </title> <journal> Comm. of the ACM, </journal> <volume> Vol. 21, </volume> <year> 1978, </year> <pages> pp. 120-126. </pages>
Reference: [Rom] <author> Rompel, J., </author> <title> "One-way Functions are Necessary and Sufficient for Secure Signatures", </title> <booktitle> 22 nd STOC, </booktitle> <year> 1990, </year> <pages> pp 387-394. </pages>
Reference: [Ru] <author> S. </author> <title> Rudich The Role of Interaction in Public Key Cryptography, </title> <booktitle> Crypto, </booktitle> <pages> 91. </pages>
Reference: [Sh] <author> P. Shor, </author> <title> Algorithms for Quantum Computation: Discrete Logarithms and Factoring, </title> <booktitle> FOCS, </booktitle> <year> 1994. </year>
Reference-contexts: In fact, the earliest guess for such a parameter 20 years ago was recently broken. More speculatively, it has been recently shown how to solve both problems in the quantum computer model <ref> [Sh] </ref>. The existence of public-key cryptography is fragile at best. To prove that we live in Cryptomania, one must prove that a particular secret-key exchange protocol is secure.
Reference: [St] <author> L. </author> <title> Stockmeyer On approximation algorithms for #P TCS 3, </title> <publisher> 1977,1-22. </publisher>
Reference-contexts: People have attempted to use neural nets to do similar learning tasks, but that implicitly makes the much stronger assumption that the task is performable by a constant depth threshold circuit, which is not always reasonable.) Using the result that approximate counting is in the polynomial-time hierarchy <ref> [St] </ref>, exponential sized spaces of possible sequences of events could be searched and a probability estimate for an event given observed facts could be output, thus producing Mr.
Reference: [SW] <author> R. Schuler and O. Watanabe, </author> <title> Towards Average-Case Complexity Analysis of NP Optimization Problems, </title> <note> this proceedings. </note>
Reference-contexts: problems in N P are easy on average, can the same be said of all problems in the polynomial hierarchy? (The circuit minimization problem is in P 2 and problems involving repeated iterations of N P questions are in P NP .) This question is explored in more detail in <ref> [SW] </ref>. The best known result along these lines is that of [BCGL] reducing average case search problems to average case decision problems. As far as network security and cryptography go, there would not be much of a difference between Algorithmica and Heuris-tica.
Reference: [VL] <author> R. Venkatesan and L. </author> <title> Levin Random instances of a graph coloring problem are hard, </title> <booktitle> STOC 20 (1988), </booktitle> <pages> 217-222. </pages>
References-found: 29

