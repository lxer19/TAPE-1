URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P274.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts91.htm
Root-URL: http://www.mcs.anl.gov
Title: A Parallel Algorithm for the Sylvester Observer Equation  
Author: Christian H. Bischof Biswa Nath Datta Avijit Purkayastha 
Keyword: Key words. Sylvester observer equation, parallel algorithm, orthogonal factorization, shared-memory parallelism, Hessenberg-Schur algorithm.  
Date: (revised 05/94)  
Note: Mayaguez, PR-00681-5000 Argonne Preprint ANL/MCS-P274-1191  The work of this author was supported by the Office of Scientific Computing, U.S. Department of Energy, under Contract W-31-109-Eng-38. The work of this author was partially supported by a grant from the NSF under contract DMS-9212629. The work of this author was partially supported by a grant from the NSF under contract RII-8905080.  
Address: Argonne, IL 60439  Dekalb, IL 60115  Puerto Rico, Mayaguez  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  Department of Mathematical Sciences Northern Illinois University  Department of Mathematics University of  
Abstract: We present a new algorithm for solving the Sylvester observer equation arising in the context of the Luenberger observer. The algorithm embodies two main computational phases: the solution of several independent equation systems, and a series of matrix-matrix multiplications. The algorithm is, thus, well suited for parallel and high-performance computing. By reducing the coefficient matrix A to lower Hessenberg form, one can implement the algorithm efficiently, with few floating-point operations and little workspace. The algorithm has been successfully implemented on a CRAY C-90. A comparison, both theoretical and experimental, has been made with the well-known Hessenberg-Schur algorithm which solves an arbitrary Sylvester equation. Our theoretical analysis and experimental results confirm the superiority of the proposed algorithm, both in efficiency and speed, over the Hessenberg-Schur algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. DuCroz, A. Greenbaum, S. Ham-marling, A. McKenney, S. Ostrouchov, and D. Sorensen. </author> <title> LAPACK User's Guide. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year> <month> 16 </month>
Reference: [2] <author> Biswa N. Datta. </author> <title> Parallel and large-scale matrix computations in control: Some ideas. </title> <journal> Linear Algebra and Its Applications, </journal> <volume> 121 </volume> <pages> 243-264, </pages> <year> 1989. </year>
Reference-contexts: The method is suitable for large and sparse problems but does not offer much scope for parallelism. In this paper, we present a simple yet efficient method for solving (4) which is well suited for parallel and high-performance computers. The method is a block generalization of Datta's method <ref> [2] </ref> for the case when r = 1.
Reference: [3] <author> Biswa N. Datta and Youcef Saad. </author> <title> Arnoldi Methods for Large Sylvester-Like Observer Matrix Equations, and an Associated Algorithm for Partial Spectrum Assignment. Linear Algebra and Its Applications, </title> <address> 154-156:225-244, </address> <year> 1991. </year>
Reference-contexts: Like the Hessenberg-Schur method, it computes the columns of X sequentially and does not offer much scope for the exploitation of parallelism. Yet another approach, based on Arnoldi's method, has recently been proposed by Datta and Saad <ref> [3] </ref> for the case where C is a vector. It constructs an orthonormal solution to equation (4). The method is suitable for large and sparse problems but does not offer much scope for parallelism. <p> For a very small k, this might not pose any problem. In general, however, it is not satisfactory as it clearly is too expensive. Direct methods for factorization are excluded because A is assumed to be very large. A more effective way, proposed in Datta and Saad <ref> [3] </ref>, is as follows. <p> This experience is in line with the results in <ref> [3] </ref>. We note here that the algorithm in Figure 1 will break down if any of the eigenvalues of A and H are close Step 1 or Equation (20) will be singular. By using an appropriate test matrix generator, however, we can guarantee that their spectra do not intersect.
Reference: [4] <author> Biswa N. Datta. </author> <title> Parallel Algorithms in Control Theory. </title> <booktitle> Proceedings of IEEE Conference on Decision and Control, </booktitle> <pages> pp. 1700-1704, </pages> <year> 1991. </year>
Reference-contexts: We also point out that parallel algorithms for control problems are virtually nonexistent, with only a few algorithms being proposed in recent years (for references to these algorithms, see the recent survey papers of Datta <ref> [4] </ref> and [5]). The need for expanded research in this area has been clearly outlined in a recent panel report [13]. The outline of the paper is as follows. In the next section we present the algorithm and prove its correctness.
Reference: [5] <author> Biswa N. Datta. </author> <title> High Performance in Linear Control. </title> <booktitle> Proceedings of SIAM Conference on Parallel Processing, </booktitle> <pages> pp. 274-281, </pages> <year> 1993. </year>
Reference-contexts: We also point out that parallel algorithms for control problems are virtually nonexistent, with only a few algorithms being proposed in recent years (for references to these algorithms, see the recent survey papers of Datta [4] and <ref> [5] </ref>). The need for expanded research in this area has been clearly outlined in a recent panel report [13]. The outline of the paper is as follows. In the next section we present the algorithm and prove its correctness. In x3 we describe how this algorithm can be implemented efficiently.
Reference: [6] <author> James Demmel and Alan McKenney. </author> <title> LAPACK working note 9: A test matrix generation suite. </title> <type> Preprint MCS-P69-0389, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: As our test problem we generated matrices of dimensions n = 512; 1024; 1536; 1920: To generate lower Hessenberg matrices with the desired spectrum, we used the LAPACK test matrix generator SLATME <ref> [6] </ref> to generate a dense nonsymmetric matrix with the desired spectrum, used the LAPACK routine SGEHRD to reduce this matrix to upper Hessenberg form, and then transposed the resulting matrix. In all cases, k, the number of blocks is 4; so r = n=4.
Reference: [7] <author> J. J. Dongarra, F. G. Gustavson, and A. Karp. </author> <title> Implementing linear algebra algorithms for dense matrices on a vector pipeline machine. </title> <journal> SIAM Review, </journal> <volume> 26 </volume> <pages> 91-112, </pages> <year> 1984. </year>
Reference: [8] <author> Jack Dongarra and Sven Hammarling. </author> <title> Evolution of Numerical Software for Dense Linear Algebra. in Evolution of Numerical Software for Dense Linear Algebra, </title> <editor> M. G. Cox and S. Ham-marline, </editor> <booktitle> Eds., </booktitle> <pages> pages 297-327. </pages> <publisher> Oxford University Press, Oxford, </publisher> <address> UK, </address> <year> 1989. </year>
Reference: [9] <author> Paul Van Dooren. </author> <title> Reduced order observers: A new algorithm and proof. </title> <journal> Systems and Control Letters, </journal> <volume> 4 </volume> <pages> 243-251, </pages> <year> 1984. </year>
Reference-contexts: A more detailed discussion of this method, from the point of view of solving the Sylvester observer equation, is given in x5. Another possible approach is the method suggested by Van Dooren <ref> [9] </ref>. It uses an observer-Hessenberg form for the pair (A; C) in which both A and C are put in certain condensed forms. This approach also requires knowledge of the eigenvalues of the matrix A and is recursive.
Reference: [10] <author> Gene Golub, Stephen Nash, and Charles Van Loan. </author> <title> A Hessenberg Schur method for the problem AX + XB = C. </title> <journal> IEEE Transactions in Automatic Control, </journal> <volume> 24(6) </volume> <pages> 209-213, </pages> <year> 1979. </year>
Reference-contexts: For example, if we were to apply the well-known Hessenberg-Schur method 2 developed by Golub, Nash, and Van Loan <ref> [10] </ref> for the usual Sylvester equation, to the Sylvester observer equation (4), A would be reduced to Hessenberg form and H to real Schur form (RSF). <p> size Efficiency Whole Program algorithm on a CRAY C90 (- 1 proc., - 4 procs., .... 8 procs., -. 16 procs.) 5 Comparison of the Proposed Algorithm with Hessenberg Schur Method In this section we make a performance comparison of our proposed parallel algorithm with that of the Hessenberg-Schur method <ref> [10] </ref> adapted for the solution of the Sylvester observer equation AX XH = (0; C). The Hessenberg-Schur method solves the usual Sylvester equation AX XH = C, where the matrices A; H, and C are given and X needs to be found.
Reference: [11] <author> Gene H. Golub and Charles F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore, </address> <year> 1983. </year>
Reference-contexts: The RSF of a matrix is a quasi-triangular matrix in which the diagonal entries are either 1 fi 1 or 2 fi 2 matrices (see <ref> [11] </ref>). Because the matrix H can be chosen for the Sylvester observer equation, one can choose it in RSF with a desired set of eigenvalues on the diagonal and then easily solve for the columns of X.
Reference: [12] <author> D. Luenberger. </author> <title> Observing the state of a linear system. </title> <journal> IEEE Transaction on Military Electronics, </journal> <volume> MIL-8:74-80, </volume> <year> 1964. </year>
Reference-contexts: 1 Introduction The Luenberger observer problem (see <ref> [12] </ref>) for the control system _x = Ax + Bu (1) arises frequently in control theory.
Reference: [13] <institution> Report of the panel on "Future Directions in Control Theory: A Mathematical Perspective". SIAM, </institution> <address> Philadelphia, </address> <year> 1988. </year> <month> 17 </month>
Reference-contexts: The need for expanded research in this area has been clearly outlined in a recent panel report <ref> [13] </ref>. The outline of the paper is as follows. In the next section we present the algorithm and prove its correctness. In x3 we describe how this algorithm can be implemented efficiently.
References-found: 13

