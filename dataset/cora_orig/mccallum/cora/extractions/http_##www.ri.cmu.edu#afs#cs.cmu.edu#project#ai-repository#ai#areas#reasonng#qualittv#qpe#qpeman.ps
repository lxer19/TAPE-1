URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/areas/reasonng/qualittv/qpe/qpeman.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/areas/reasonng/qualittv/qpe/
Root-URL: 
Title: The QPE User's Manual (QPE Version 2.6)  
Author: Kenneth D. Forbus 
Date: January 29, 1992  
Note: DRAFT of  
Affiliation: Qualitative Reasoning Group The Institute for the Learning Sciences Northwestern University  
Abstract: This paper describes how to use the Qualitative Process Engine (QPE), an envisioner for Qualitative Process theory. We begin with an overview of QPE and how to install it at your site. Next we describe how to operate it and examine the results, including comments on the various parameters and switches available. QPE is designed to be used as a module in other reasoning systems, so methods for interfacing it to other programs are described. A brief tutorial for domain modeling is next, including a complete listing of the primitives supplied for building domain models, and how the modeling language can be extended. Finally, we discuss plans for future releases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Collins, J. and Forbus, K. </author> <title> "Reasoning about fluids via molecular collections", </title> <booktitle> Proceedings of AAAI-87, </booktitle> <address> Seattle, Washington, </address> <month> July, </month> <year> 1987. </year>
Reference: [2] <author> Davis, E. </author> <title> "Order of magnitude reasoning in qualitative differential equations", </title> <type> Technical Report 312, </type> <institution> NYU Computer Science Department, </institution> <month> August, </month> <note> 1987 [3] de Kleer, </note> <author> J., Doyle, J., Steele, G., and Sussman, G. </author> <title> "Explicit control of reasoning" in Winston, </title> <editor> P. & Brown, R., (Eds.), </editor> <booktitle> Artificial Intelligence: An MIT Perspective: </booktitle> <volume> Volume 1, </volume> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass, </address> <note> 1979 [4] de Kleer, </note> <author> J. </author> <title> "An assumption-based truth maintenance system", </title> <journal> Artificial Intelligence, </journal> <note> 28, 1986 [5] de Kleer, </note> <author> J. and Brown, J. </author> <title> "A qualitative physics based on confluences", </title> <journal> Artificial Intelligence, </journal> <volume> 24, </volume> <year> 1984 </year>
Reference: [6] <author> Falkenhainer, B. </author> <title> "An examination of the third state in the analogy process: </title> <booktitle> Verification-based analogical learning" Proceedings of IJCAI-87, </booktitle> <month> August, </month> <year> 1987. </year>
Reference: [7] <author> Falkenhainer, B. and Forbus, K. </author> <title> "Setting up large-scale qualitative models" Proceedings of AAAI-88, </title> <month> August, </month> <year> 1988. </year>
Reference-contexts: Furthermore, ad hoc aspects of models are more likely to be discovered if the same descriptions are re-used in a variety of settings. QP theory is designed to support the creation of problem-independent domain models that include explicit simplifying assumptions and modeling assumptions (e.g., <ref> [7] </ref>. This accounts for much of the complexity of QPE. 4.2 Built-in primitives for domain model specification Examples of how these primtives are used can be found in the sample domain files distributed with QPE.
Reference: [8] <author> Forbus, K. </author> <title> "Qualitative reasoning about physical processes" IJCAI-7, </title> <address> Vancouver, B.C., </address> <month> August, </month> <year> 1981 </year>
Reference: [9] <author> Forbus, K. </author> <title> "Qualitative Process theory" MIT AI Lab Technical report No. </title> <type> 789, </type> <month> July, </month> <year> 1984. </year>
Reference-contexts: For concreteness we use UNIX conventions when refering to pathnames. Here is the minimum you need to know about ATMoSphere for routine operation of QPE and domain model construction. ATMoSphere is a descendent of AMORD [3], by way of RUP [19] and DEBACLE <ref> [9] </ref>. Like these systems, the model of data is individual assertions stored in a database which allows pattern-directed retrieval. Rules are run antecedently whenever data is found which matches their trigger conditions. The differences in ATMoSphere are consequences of being built around an assumption-based truth-maintenance system [4]. <p> However, the phenomena of stutter, which led me to this choice in the first place, is. Brian Williams argued (personal communication) that I just wasn't enforcing continuity involving derivatives properly. Sure enough, when these constraints were tightened up the examples of stutter in <ref> [9] </ref> vanished! It can be proven that no stutter cycle of length two can exist, since it implies discontinuous derivatives. However, whether longer stutter cycles can exist is still an open question at this writing. <p> This distinction is important for enforcing the relationship between continuous properties and existence. (See Section 7, <ref> [9] </ref>.) Quantity hquantityi [Syntax] One-place predicate used to introduce continuous properties of individuals. A hquantityi [Syntax] The amount of a quantity. Amounts are numbers. D hquantityi [Syntax] The derivative of a quantity.
Reference: [10] <author> Forbus, K. </author> <title> "Qualitative process theory" Artificial Intelligence, </title> <type> 24, </type> <year> 1984 </year>
Reference-contexts: We also suspect that envisionments can be used as input for "compilers" that produce fast run-time programs for dealing with specific systems. However, it is important to realize that envisioning is not the only style of reasoning supported by QP theory (see <ref> [10] </ref> for details). Furthermore, while the modeling language provided in QPE is consistent with QP theory, there are many things one can say in QP theory that cannot be said in QPE's modeling language. <p> An error will be signaled if you use this. iff hprop1i hprop2i [Syntax] Not available yet. An error will be signaled if you use this. 4.2.5 Basic QP primitives Quantities and Numbers Many of these constructs are described in more detail in Section 2 of <ref> [10] </ref>. defQuantityType hqnamei &rest hArgT ypesi [Syntax] Declares that hqnamei is a procedure whose range is quantities. hArgT ypesi declares the procedure's domain by specifying whether or not each argument is an individual or constant. <p> Currently hconstraintsi can only contain qualitative proportionalities. See Section 2.6 of <ref> [10] </ref> for details. Correspondence &rest hpairsi [Syntax] Pins down a particular point on a monotonic procedure defined by qualitative proportionalities. See Section 2.6 of [10] for details. <p> Currently hconstraintsi can only contain qualitative proportionalities. See Section 2.6 of <ref> [10] </ref> for details. Correspondence &rest hpairsi [Syntax] Pins down a particular point on a monotonic procedure defined by qualitative proportionalities. See Section 2.6 of [10] for details. Q= hQ 1 i hQ 2 i [Syntax] hQ 1 i must be a quantity. hQ 2 i is either a quantity or an arithmetic form. <p> If hN 2 i is not a relational form, this is equivalent to using equal-to. I+ hinf luencedi hinf luenceri [Syntax] See Section 3.2 <ref> [10] </ref> for details. I- hinf luencedi hinf luenceri [Syntax] See Section 3.2 [10] for details. + hN orQ 1 i hN orQ 2 i [Syntax] Usual interpretation. Expands internally to ++rel, to prevent duplicate expansion. - hN orQ 1 i hN orQ 2 i [Syntax] Usual interpretation. <p> If hN 2 i is not a relational form, this is equivalent to using equal-to. I+ hinf luencedi hinf luenceri [Syntax] See Section 3.2 <ref> [10] </ref> for details. I- hinf luencedi hinf luenceri [Syntax] See Section 3.2 [10] for details. + hN orQ 1 i hN orQ 2 i [Syntax] Usual interpretation. Expands internally to ++rel, to prevent duplicate expansion. - hN orQ 1 i hN orQ 2 i [Syntax] Usual interpretation.
Reference: [11] <author> Forbus, K. </author> <title> "The Qualitative Process Engine", </title> <type> Technical Report No. </type> <institution> UIUCDCS-R-86-1288, </institution> <month> December, </month> <year> 1986. </year>
Reference-contexts: A particular type of qualitative simulation is envisioning. Theoretical descriptions of envisioning can be found in [5,10,12]. This manual describes a particular envisioner for Qualitative Process theory [8,10]. Versions of this program, the Qualitative Process Engine (hereafter QPE), have been used by our group both as a stand-alone system <ref> [11] </ref> and as a module in other qualitative reasoning systems [18,1,6] for several years now. Our intent in making QPE publically available is to help other researchers get started in qualitative reasoning.
Reference: [12] <author> Forbus, K. </author> <title> "The logic of occurrence", </title> <booktitle> Proceedings of IJCAI-87, </booktitle> <address> Milan, Italy, </address> <year> 1987. </year>
Reference: [13] <author> Forbus, K. "QPE: </author> <title> A study in assumption-based truth maintenance" International Journal of Artificial Intelligence in Engineering, </title> <year> 1989. </year>
Reference-contexts: The scenario specifies both the structural description of the example, such as what objects exist and what relationships hold between them, and any modeling assumptions which hold for the particular analysis. Another paper <ref> [13] </ref> outlines how this is accomplished, and understanding it will be helpful in understanding certain parts of this manual (and essential for Section 6) to read this paper. QPE uses the ATMoSphere inference engine as a substrate.
Reference: [14] <author> Forbus, K. </author> <title> "Introducing Actions into Qualitative Simulation" Department of Computer Science Technical Report No. </title> <address> UIUCDCS-R-88-1452, </address> <month> August, </month> <year> 1988. </year>
Reference-contexts: Choices htermi halternativesi [Syntax] Like Choice-set, but halternativesi explicitly lists the possible values. Switch htermi [Syntax] Much like Choice-set. Provides a hook for generating action-augmented envisionments (see <ref> [14] </ref>). The intuition is that a switch is something that can be "flipped" by an agent interacting with the world. STRIPS-like operators are provided that flip switches as a way of integrating actions into qualitative simulation.
Reference: [15] <author> Forbus, </author> <title> K."Pushing the edge of the (QP) envelope", to appear in Recent Progress in Qualitative Physics, Faltings, </title> <editor> B. and Struss, P. (Eds.), </editor> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: The converse is also true: QPE's modeling language contains hooks for external representations and systems which are interpreted in specific ways that are not central to QP theory. (see <ref> [15] </ref> for details.) 1.2 Conventions In addition to familarity with QP theory, we assume readers know Common Lisp (as defined by [21]).
Reference: [16] <author> Forbus, K. and de Kleer, J. </author> <title> "Focusing the ATMS", </title> <booktitle> Proceedings of AAAI-88, </booktitle> <address> St. Paul, </address> <month> August, </month> <year> 1988. </year>
Reference-contexts: The following values are allowed: :Intern Execute hbodyi as soon as the triggers are satisfied. :In Execute hbodyi when the conjunction of the triggers is consistent. :implied-by Execute hbodyi when every trigger is implied by a distinguished focus environment. See <ref> [16] </ref> for details. QPE only uses :INTERN rules, the others are mentioned for completeness. Each trigger takes the form hpatterni hoptionsi where hpatterni is an s-expression which can contain variables, and hoptionsi will be explained shortly. Bindings for triggers are found sequentially, in left to right order.
Reference: [17] <author> Forbus, K. and de Kleer, J. </author> <title> "The ATMoSphere Manual". </title> <booktitle> In preperation. </booktitle>
Reference-contexts: The report is written to hf ilei. The report consists of several parts: Header page Describes when and where the envisionment was generated and summarizes its statistics. ATMoSphere statistics See <ref> [17] </ref> for an explanation. Instances listing Shows what view instances and process instances were created. The short forms (i.e., PI0) are used in the rest of the listing to save page space. Quantity space listing Shows all relevant inequalities, and what part of the computation deemed them relevant.
Reference: [18] <author> Hogge, J. </author> <title> "Compiling plan operators from domains expressed in Qualitative Process theory", </title> <booktitle> Proceedings of AAAI-87, </booktitle> <month> July, </month> <year> 1987. </year>
Reference: [19] <author> McAllester, D. </author> <title> "Reasoning Utility Package user's manual: Version one" MIT AI Lab Memo No. </title> <type> 667, </type> <month> April, </month> <note> 1982 REFERENCES 34 </note>
Reference-contexts: Italics are used for comments, as shown above. For concreteness we use UNIX conventions when refering to pathnames. Here is the minimum you need to know about ATMoSphere for routine operation of QPE and domain model construction. ATMoSphere is a descendent of AMORD [3], by way of RUP <ref> [19] </ref> and DEBACLE [9]. Like these systems, the model of data is individual assertions stored in a database which allows pattern-directed retrieval. Rules are run antecedently whenever data is found which matches their trigger conditions. The differences in ATMoSphere are consequences of being built around an assumption-based truth-maintenance system [4].
Reference: [20] <author> Siegle, G. </author> <title> "QPE interface manual", </title> <note> in preparation. </note>
Reference-contexts: The next section describes a user-extendable report generator which provides this service. Envisionments can be large and complicated, making graphical interfaces a necessity to figure out what is going on. We recommend the CLIM-based QPE GUI, which is described in a seperate document <ref> [20] </ref>. 3.6.1 Report Generation Reports can be generated either through the command menu or by calling the following procedure: dump-envisioner-results hcommentsi hf ilei [Procedure] Produces a report on the current envisionment which includes hcommentsi in the header page. The report is written to hf ilei.
Reference: [21] <author> Steele, G. </author> <title> Common Lisp, </title> <publisher> Digital Press, </publisher> <year> 1984. </year>
Reference-contexts: The converse is also true: QPE's modeling language contains hooks for external representations and systems which are interpreted in specific ways that are not central to QP theory. (see [15] for details.) 1.2 Conventions In addition to familarity with QP theory, we assume readers know Common Lisp (as defined by <ref> [21] </ref>). Computer output and data (i.e., scenarios and domain models) will be in fixed-width, typewriter style font, like this: This could be computer output or part of a domain model (But this is a comment!) or part of a scenario description. Italics are used for comments, as shown above. <p> QPE v2.6 was designed with portability in mind, so it should run on any Common Lisp implementation which rigorously follows <ref> [21] </ref>. (If you port it to a Common Lisp implementation not on this list I would appreciate hearing about it, especially if you have problems.) 2.1 Unwrapping the package Generally you receive QPE v2.6 as a UNIX tar file (or files).
Reference: [22] <author> Weld, D. </author> <title> "Theories of comparative analysis", MIT AI Laboratory Technical Report No. </title> <type> 1035, </type> <month> May </month> <year> 1988. </year> <note> REFERENCES 35 </note>
References-found: 19

