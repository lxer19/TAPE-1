URL: http://www.cs.utexas.edu/users/plaxton/ps/1992/stoc_count.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Email: klugermn@theory.lcs.mit.edu  plaxton@cs.utexas.edu  
Title: Small-Depth Counting Networks  
Author: Michael Klugerman C. Greg Plaxton 
Address: Cambridge, MA 02139  Austin, TX 78712  
Affiliation: Mathematics Department Massachusetts Institute of Technology  Department of Computer Science University of Texas at Austin  
Abstract: Generalizing the notion of a sorting network, Asp-nes, Herlihy, and Shavit recently introduced a class of so-called "counting" networks, and established an O(lg 2 n) upper bound on the depth complexity of such networks. Their work was motivated by a number of practical applications arising in the domain of asynchronous shared memory machines. This paper continues the analysis of counting networks, providing a number of new upper bounds. In particular, we present an explicit construction of an O(c lg fl n lg n)-depth counting network, a randomized construction of an O(lg n)-depth network (that works with extremely high probability), and using the random construction we present an existential proof of a deterministic O(lg n)-depth network. The latter result matches the trivial (lg n)-depth lower bound to within a constant factor. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Aharonson and H. Attiya. </author> <title> Counting networks with arbitrary fan-out. </title> <booktitle> In Proceedings of the 3rd ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 104-113, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: In this paper only counting networks having a number of input wires input wires equal to some power of 2 are constructed. However, Klugerman [12] and Aharonson and Attiya <ref> [1] </ref> have independently shown that only networks of this type exist: Lemma 3.3 Every counting network must have 2 k input wires for some integer k 0. 4 Building blocks In this section, we describe three balancing networks that will provide us with useful "subroutines" for the counting network constructions of
Reference: [2] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> An O(n log n) sorting network. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: Counting networks are modelled after sorting networks <ref> [2, 5, 7, 13] </ref> in that they are composed of 2-input 2-output components called balancers (rather than comparators). A balancer takes in tokens along both input wires and, acting like a toggle, outputs these tokens alternately along the top and bottom output wires (see Figure 1). <p> In Section 7, we describe the explicit construction of the O (c lg fl n lg n)-depth counting network. Finally, in Section 8 we offer some concluding remarks. 2 Definitions A counting network is a balancing network with additional properties in the same way that a sorting network <ref> [2, 5, 7, 13] </ref> is a comparator network with additional properties. The elementary building block of a balancing network is a balancer, rather than a comparator. A balancer is a 2-input, 2-output device (see Figure 1). <p> The following lemma is stated in [4] and is very useful in our constructions. Given the O (lg n)-depth AKS sorting network result <ref> [2] </ref>, this lemma shows that the problem of constructing a small-depth counting network can be reduced to that of constructing a small-depth smoothing network. Lemma 3.2 A sorting network (with comparators replaced by balancers) when applied to the output of a smoothing network, produces a counting network. <p> We will also make use of sorting networks as "subroutines" in our counting network constructions. Any sorting network may be used at these locations by replacing the comparators with balancers. To obtain small depth we will use the O (lg n)-depth AKS sorting network <ref> [2] </ref>. Lemma 4.3 If a counted shape is input to the top n wires of a 2n-input ladder, and another counted shape is input to the bottom n wires, then the output of the ladder is smoothed.
Reference: [3] <author> N. Alon and J. H. Spencer. </author> <title> The Probabilis tic Method. </title> <publisher> Wiley-Interscience, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference-contexts: We use martingales for this purpose. Definition 5.3 A martingale is a sequence of random variables X 0 ; : : : ; X m such that E [X i+1 j X i ] = X i ; We will make use of the following variant of Azuma's Inequality <ref> [3] </ref> in the analysis of Phase 2: Theorem 5.1 Let X 0 = c and let X 0 ; : : : ; X m be a martingale with jX i+1 X i j U; 0 i &lt; m.
Reference: [4] <author> J. Aspnes, M.P. Herlihy, and N. Shavit. </author> <title> Count ing networks and multi-processor coordination. </title> <booktitle> In Proceedings of the 23rd Annual Symposium on Theory of Computing, </booktitle> <pages> pages 348-358, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The notion of a "counting network" was recently introduced by Aspnes, Herlihy, and Shavit <ref> [4] </ref>, where it was shown that such networks can be simulated efficiently on an asynchronous shared memory machine to implement counters [9, 10, 11, 16], pro-ducer/consumer buffers, and synchronization barriers. The counting network provides a means for the processors of a parallel machine to obtain successive values from a counter. <p> The counting network can then be implemented in software on a shared memory machine by associating a memory location with each balancer <ref> [4] </ref>. An important measure of the efficiency of a counting network is its depth. This is because the depth of the network is equal to the number of memory locations that a processor must access before its increment request has been fulfilled. <p> This is because the depth of the network is equal to the number of memory locations that a processor must access before its increment request has been fulfilled. In this paper, we present a number of constructions for counting networks of small depth. Aspnes, Herlihy, and Shavit <ref> [4] </ref> provide two O (lg 2 n)-depth families of n-input counting networks by proving that the balancing network isomorphic to Batcher's bitonic sorting network [5, 7, 13] and isomorphic to the balanced periodic sorting network of Dowd, Perl, Rudolph, and Saks [8] are counting networks. <p> Later, Klugerman [12] gave an O (lg n lg lg n)-depth construction. Our main result is a proof of the existence of an O (lg n)-depth counting network where n is the number of input wires. This result answers the question posed in <ref> [4] </ref>, which asks whether such an optimal-depth counting network exists. <p> This is a simple extension of the serialization lemma given in <ref> [4] </ref>. Lemma 3.1 The order in which tokens pass through the network does not affect the number of tokens output on each wire. Proof: We prove the claim by induction on the depth of the network. <p> The following lemma is stated in <ref> [4] </ref> and is very useful in our constructions. Given the O (lg n)-depth AKS sorting network result [2], this lemma shows that the problem of constructing a small-depth counting network can be reduced to that of constructing a small-depth smoothing network. <p> Phase 1: Apply a butterfly balancing network to all 2 d input wires. Phase 2: Let A i denote the set of 2 d 0 wires X (j) , i2 d 0 , 0 i &lt; 2 dd 0 . Apply a 2 d 0 -input bitonic counting network <ref> [4] </ref> to each A i . Phase 3: Apply a butterfly balancing network to all 2 d wires. Phase 4: Let B denote the set of * 0 -bad outputs of Phase 3.
Reference: [5] <author> K. E. Batcher. </author> <title> Sorting networks and their ap plications. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <volume> vol. 32, </volume> <pages> pages 307-314, </pages> <year> 1968. </year>
Reference-contexts: Counting networks are modelled after sorting networks <ref> [2, 5, 7, 13] </ref> in that they are composed of 2-input 2-output components called balancers (rather than comparators). A balancer takes in tokens along both input wires and, acting like a toggle, outputs these tokens alternately along the top and bottom output wires (see Figure 1). <p> In this paper, we present a number of constructions for counting networks of small depth. Aspnes, Herlihy, and Shavit [4] provide two O (lg 2 n)-depth families of n-input counting networks by proving that the balancing network isomorphic to Batcher's bitonic sorting network <ref> [5, 7, 13] </ref> and isomorphic to the balanced periodic sorting network of Dowd, Perl, Rudolph, and Saks [8] are counting networks. Later, Klugerman [12] gave an O (lg n lg lg n)-depth construction. <p> In Section 7, we describe the explicit construction of the O (c lg fl n lg n)-depth counting network. Finally, in Section 8 we offer some concluding remarks. 2 Definitions A counting network is a balancing network with additional properties in the same way that a sorting network <ref> [2, 5, 7, 13] </ref> is a comparator network with additional properties. The elementary building block of a balancing network is a balancer, rather than a comparator. A balancer is a 2-input, 2-output device (see Figure 1).
Reference: [6] <author> V. Chvatal. </author> <type> Personal communication. </type>
Reference-contexts: A similar technique has recently been used by Ajtai, Komlos and Szemeredi <ref> [6] </ref> to improve the constant factor in their O (lg n) depth sorting network, and by Plaxton [15] to obtain a 2 O ( p lg lg n) lg n-depth sorting network from an O (lg n)-depth random sorting network [14] that sorts with extremely high probability.
Reference: [7] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1990. </year>
Reference-contexts: Counting networks are modelled after sorting networks <ref> [2, 5, 7, 13] </ref> in that they are composed of 2-input 2-output components called balancers (rather than comparators). A balancer takes in tokens along both input wires and, acting like a toggle, outputs these tokens alternately along the top and bottom output wires (see Figure 1). <p> In this paper, we present a number of constructions for counting networks of small depth. Aspnes, Herlihy, and Shavit [4] provide two O (lg 2 n)-depth families of n-input counting networks by proving that the balancing network isomorphic to Batcher's bitonic sorting network <ref> [5, 7, 13] </ref> and isomorphic to the balanced periodic sorting network of Dowd, Perl, Rudolph, and Saks [8] are counting networks. Later, Klugerman [12] gave an O (lg n lg lg n)-depth construction. <p> In Section 7, we describe the explicit construction of the O (c lg fl n lg n)-depth counting network. Finally, in Section 8 we offer some concluding remarks. 2 Definitions A counting network is a balancing network with additional properties in the same way that a sorting network <ref> [2, 5, 7, 13] </ref> is a comparator network with additional properties. The elementary building block of a balancing network is a balancer, rather than a comparator. A balancer is a 2-input, 2-output device (see Figure 1).
Reference: [8] <author> M. Dowd, Y. Perl, M. Saks, and L. Rudolph. </author> <title> The balanced sorting network. </title> <type> Technical Report DCS-TR-127, </type> <institution> Department of Computer Science, Rutgers University, </institution> <month> June </month> <year> 1983. </year>
Reference-contexts: Aspnes, Herlihy, and Shavit [4] provide two O (lg 2 n)-depth families of n-input counting networks by proving that the balancing network isomorphic to Batcher's bitonic sorting network [5, 7, 13] and isomorphic to the balanced periodic sorting network of Dowd, Perl, Rudolph, and Saks <ref> [8] </ref> are counting networks. Later, Klugerman [12] gave an O (lg n lg lg n)-depth construction. Our main result is a proof of the existence of an O (lg n)-depth counting network where n is the number of input wires.
Reference: [9] <author> C.S. Ellis and T.J. Olson. </author> <title> Algorithms for paral lel memory allocation. </title> <journal> Journal of Parallel Programming, </journal> <volume> 17 </volume> <pages> 303-345, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The notion of a "counting network" was recently introduced by Aspnes, Herlihy, and Shavit [4], where it was shown that such networks can be simulated efficiently on an asynchronous shared memory machine to implement counters <ref> [9, 10, 11, 16] </ref>, pro-ducer/consumer buffers, and synchronization barriers. The counting network provides a means for the processors of a parallel machine to obtain successive values from a counter.
Reference: [10] <author> E. Freudenthal and A. Gottlieb. </author> <title> Process coordi nation with fetch-and-increment. </title> <booktitle> In Proceedings of the 4th International Conference on Architecture Support for Programming Languages and Operating Systems, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The notion of a "counting network" was recently introduced by Aspnes, Herlihy, and Shavit [4], where it was shown that such networks can be simulated efficiently on an asynchronous shared memory machine to implement counters <ref> [9, 10, 11, 16] </ref>, pro-ducer/consumer buffers, and synchronization barriers. The counting network provides a means for the processors of a parallel machine to obtain successive values from a counter.
Reference: [11] <author> A. Gottlieb, B.D. Lubachevsky, and L. Rudolph. </author> <title> Basic techniques for the efficient coordination of very large numbers of cooperating sequential processors. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 5 </volume> <pages> 164-189, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction The notion of a "counting network" was recently introduced by Aspnes, Herlihy, and Shavit [4], where it was shown that such networks can be simulated efficiently on an asynchronous shared memory machine to implement counters <ref> [9, 10, 11, 16] </ref>, pro-ducer/consumer buffers, and synchronization barriers. The counting network provides a means for the processors of a parallel machine to obtain successive values from a counter.
Reference: [12] <author> M.R. Klugerman. </author> <title> Lecture 17: Counting net works. In F.T. Leighton, </title> <editor> C.E. Leiserson, and N. Kahale, editors, </editor> <booktitle> Research Seminar Series 15: Advanced Parallel and VLSI Computation, </booktitle> <pages> pages 153-161. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Later, Klugerman <ref> [12] </ref> gave an O (lg n lg lg n)-depth construction. Our main result is a proof of the existence of an O (lg n)-depth counting network where n is the number of input wires. <p> Lemma 3.2 A sorting network (with comparators replaced by balancers) when applied to the output of a smoothing network, produces a counting network. In this paper only counting networks having a number of input wires input wires equal to some power of 2 are constructed. However, Klugerman <ref> [12] </ref> and Aharonson and Attiya [1] have independently shown that only networks of this type exist: Lemma 3.3 Every counting network must have 2 k input wires for some integer k 0. 4 Building blocks In this section, we describe three balancing networks that will provide us with useful "subroutines" for
Reference: [13] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Program ming, </booktitle> <volume> volume 3. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference-contexts: Counting networks are modelled after sorting networks <ref> [2, 5, 7, 13] </ref> in that they are composed of 2-input 2-output components called balancers (rather than comparators). A balancer takes in tokens along both input wires and, acting like a toggle, outputs these tokens alternately along the top and bottom output wires (see Figure 1). <p> In this paper, we present a number of constructions for counting networks of small depth. Aspnes, Herlihy, and Shavit [4] provide two O (lg 2 n)-depth families of n-input counting networks by proving that the balancing network isomorphic to Batcher's bitonic sorting network <ref> [5, 7, 13] </ref> and isomorphic to the balanced periodic sorting network of Dowd, Perl, Rudolph, and Saks [8] are counting networks. Later, Klugerman [12] gave an O (lg n lg lg n)-depth construction. <p> In Section 7, we describe the explicit construction of the O (c lg fl n lg n)-depth counting network. Finally, in Section 8 we offer some concluding remarks. 2 Definitions A counting network is a balancing network with additional properties in the same way that a sorting network <ref> [2, 5, 7, 13] </ref> is a comparator network with additional properties. The elementary building block of a balancing network is a balancer, rather than a comparator. A balancer is a 2-input, 2-output device (see Figure 1).
Reference: [14] <author> F. T. Leighton and C. G. Plaxton. </author> <title> A (fairly) simple circuit that (usually) sorts. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 264-274, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: technique has recently been used by Ajtai, Komlos and Szemeredi [6] to improve the constant factor in their O (lg n) depth sorting network, and by Plaxton [15] to obtain a 2 O ( p lg lg n) lg n-depth sorting network from an O (lg n)-depth random sorting network <ref> [14] </ref> that sorts with extremely high probability. The other result in this paper is an explicit construction of a counting network of depth O (c lg fl n lg n) (for some positive constant c), which represents an improvement over previously known constructions.
Reference: [15] <author> C. G. Plaxton. </author> <title> A hypercubic sorting network with nearly logarithmic depth. </title> <month> May </month> <year> 1992. </year>
Reference-contexts: A similar technique has recently been used by Ajtai, Komlos and Szemeredi [6] to improve the constant factor in their O (lg n) depth sorting network, and by Plaxton <ref> [15] </ref> to obtain a 2 O ( p lg lg n) lg n-depth sorting network from an O (lg n)-depth random sorting network [14] that sorts with extremely high probability.
Reference: [16] <author> H.S. Stone. </author> <title> Database applications of the fetch and-add instruction. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-33:604-612, </volume> <year> 1984. </year> <month> 12 </month>
Reference-contexts: 1 Introduction The notion of a "counting network" was recently introduced by Aspnes, Herlihy, and Shavit [4], where it was shown that such networks can be simulated efficiently on an asynchronous shared memory machine to implement counters <ref> [9, 10, 11, 16] </ref>, pro-ducer/consumer buffers, and synchronization barriers. The counting network provides a means for the processors of a parallel machine to obtain successive values from a counter.
References-found: 16

