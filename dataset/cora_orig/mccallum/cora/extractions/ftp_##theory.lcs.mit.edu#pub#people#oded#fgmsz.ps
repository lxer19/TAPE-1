URL: ftp://theory.lcs.mit.edu/pub/people/oded/fgmsz.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/complexity.html
Root-URL: 
Email: Email: oded@wisdom.weizmann.ac.il  
Title: On Completeness and Soundness in Interactive Proof Systems  
Author: Martin Furer, Oded Goldreich, Yishay Mansour, Michael Sipser, Oded Goldreich 
Date: 429-442, 1989.  
Note: Appeared in Advances in Computing Research: A Research Annual, Vol. 5 (Randomness and Computation, S. Micali, ed.), pages  Updated affiliation for  
Address: Park, PA 16802.  Israel.  Cambridge, MA 02139.  Cambridge, MA 02139.  Brookline, NY 11210.  Rehovot, Israel.  
Affiliation: Computer Science Dept., Pennsylvania state Univ., University  Computer Science Dept., Technion, Haifa,  Lab. for Computer Science, MIT,  Mathematics Dept., MIT,  Stathis Zachos, Comp. and Inform. Sci., Brookline College of CUNY,  Department of Computer Science and Applied Mathematics Weizmann Institute of Science,  
Abstract: An interactive proof system with Perfect Completeness (resp. Perfect Soundness) for a language L is an interactive proof (for L) in which for every x 2 L (resp. x 62 L) the verifier always accepts (resp. always rejects). We show that any language having an interactive proof system has one (of the Arthur-Merlin type) with perfect completeness. On the other hand, only languages in N P have interactive Work done while third author was working at the IBM-Scientific Center, Technion City, Haifa, Israel. Second author was partially supported by the Fund for Basic Research Administered by the Israeli Academy of Sciences and Humanities. Fifth author was partially supported by PSC-CUNY grant. Warning: Reproduced almost automatically from an old troff file. The resulting text was not proofread. proofs with perfect soundness.
Abstract-found: 1
Intro-found: 1
Reference: [A] <author> Adleman, L., </author> <title> "Two Theorems on Random Polynomial Time", </title> <booktitle> Proc. 19th FOCS, </booktitle> <year> 1978, </year> <pages> pp. 75-83. </pages>
Reference: [AGH] <author> Aiello, W., S. Goldwasser, and J. Hastad, </author> <title> "On the Power of Interaction", </title> <booktitle> Proc. 27th FOCS, </booktitle> <year> 1986, </year> <pages> pp. 368-379. </pages>
Reference-contexts: Evidence for this may perhaps be derived from the fact that, relative to some oracle, interactive proofs are even not contained in the polynomial-time hierarchy, i.e. 9A s.t. IP A P H A 6= ; (see <ref> [AGH] </ref>). It is also interesting to note that natural languages as Graph Non-Isomorphism and Matrix Group Non-Membership, which are not known to be in N P , where shown to be in IP (by [GMW] and [B], respectively).
Reference: [B] <author> Babai, L., </author> <title> "Trading Group Theory for Randomness", </title> <booktitle> Proc. 17th STOC, </booktitle> <year> 1985, </year> <pages> pp. 421-429. </pages>
Reference-contexts: This stemmed from the association of deterministic polynomial-time computation with efficient computation. The growing acceptability of probabilistic polynomial-time computations as reflecting efficient computations is the basis of more recent formalizations of "whatever can be efficiently verified". In these formalizations, due to Goldwasser, Micali and Rackoff [GMR] and Babai <ref> [B] </ref>, and shown to be equivalent by Goldwasser and Sipser [GS], the (polynomial time) verifier is allowed to toss coins and arbitrarily interact with the prover, furthermore he can accept or reject based on overwhelming statistical evidence. <p> IP A P H A 6= ; (see [AGH]). It is also interesting to note that natural languages as Graph Non-Isomorphism and Matrix Group Non-Membership, which are not known to be in N P , where shown to be in IP (by [GMW] and <ref> [B] </ref>, respectively). Considering an interactive proof system, it seems that in some sense the prover is "responsible" for the completeness condition, while the verifier is "responsible" for the soundness condition. <p> MODEL AND DEF INITIONS We state and prove our main result for the Arthur Merlin games introduced by Babai <ref> [B] </ref>. Using the result of [GS] our main result applies also to the interactive proof systems of [GMR]. In this section we provide a precise definition of Arthur Merlin games and auxiliary terminology, in order to facilitate the presentation of our result. <p> Let k = qm. Without loss of generality we assume that * &lt; 1 3k . This can be achieved by performing sufficiently many copies of the original Arthur Merlin game in parallel, and ruling by the majority (see <ref> [B] </ref>, [GS] and [BHZ]). Program for an honest Merlin: Merlin's program consists of two stages. First, Merlin computes k "sampling points" that are favorable to him, and sends them to Arthur. The second stage is a simulation of k (related) copies of the original Arthur Merlin game. <p> that almost all sequences s can serve as sampling points (see proof of Lemma 1), and thus having the prover randomly select and send a good s does not yield any knowledge. (In the simulation we use a randomly selected s, which is most likely but not necessarily good.) Babai <ref> [B] </ref> showed that any Arthur Merlin game with a fixed number of interactions can be simulated by a game with two interactions. A similar proof applies to the hierarchy of interactive proofs with perfect completeness.
Reference: [BM] <author> Blum, M., and Micali, S., </author> <title> "How to Generate Cryptographically Strong Sequences of PseudoRandom Bits", </title> <journal> SIAM Jour. on Computing, </journal> <volume> Vol. 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages>
Reference-contexts: This is the case, since probabilistic completeness and soundness are defined with respect to ideal (unbiased) coin tosses and may not hold when using pseudorandom sequences (even in the sense of Blum and Micali <ref> [BM] </ref> and Yao [Y]). On the other hand perfect completeness and soundness are independent of the quality of the verifier coin tosses. Our main result is that Interactive Proofs with Perfect Completeness are as powerful as Interactive Proofs.
Reference: [BHZ] <author> Boppana, R., J. Hastad, and S. Zachos, </author> <title> "Does Co-NP Have Short Interactive Proofs?", </title> <journal> IPL, </journal> <volume> 25, </volume> <month> May </month> <year> 1987, </year> <pages> pp. 127-132. </pages>
Reference-contexts: Let k = qm. Without loss of generality we assume that * &lt; 1 3k . This can be achieved by performing sufficiently many copies of the original Arthur Merlin game in parallel, and ruling by the majority (see [B], [GS] and <ref> [BHZ] </ref>). Program for an honest Merlin: Merlin's program consists of two stages. First, Merlin computes k "sampling points" that are favorable to him, and sends them to Arthur. The second stage is a simulation of k (related) copies of the original Arthur Merlin game.
Reference: [F] <author> Fortnow, L., </author> <title> "The Complexity of Perfect Zero-Knowledge", this volume. </title>
Reference-contexts: Given L 2 IP , first present an interactive proof with perfect completeness for L, and next apply the techniques in [GMW] observing that they preserve perfect completeness. However, it is not clear whether every language having a perfect (resp. almost perfect) zero-knowledge interactive proof (see <ref> [F] </ref> for definition) has a perfect (resp. almost perfect) zero-knowledge interactive proof with perfect completeness. <p> Weaker statement can nevertheless be proven: 1) Every language having an interactive proof which is almost perfect zero-knowledge with respect to the specified verifier has an interactive proof with perfect completeness which is almost perfect zero-knowledge with respect to the specified verifier (again see <ref> [F] </ref> for defini tion). 2) Every language having an interactive proof which is almost perfect zero-knowledge and remains so under parallel composition (see [O] for definition) has an almost perfect zero knowledge proof with perfect completeness.
Reference: [G] <author> Gill, J., </author> <title> "Complexity of Probabilistic Turing Machines", </title> <journal> SIAM J. on Comp., </journal> <volume> Vol. 6, No. 4, </volume> <year> 1977, </year> <pages> pp. 675-695. </pages>
Reference: [GMS] <author> Goldreich, O, Y. Mansour, and M. </author> <title> Sipser "Interactive Proof Systems: Provers that never Fail and Random Selection", </title> <booktitle> Proc. 28th FOCS, </booktitle> <year> 1987, </year> <month> pp.449-461. </month>
Reference-contexts: This transformation preserves the number of interactions of the original interactive proof. An alternative proof which uses different ideas, and in particular a protocol for "random selection" appears in <ref> [GMS] </ref>. An alternative characterization of complexity classes define by bounded Arthur-Merlin games was presented in [ZF]. They use polynomially bounded quantifiers 9; 8; 9 + (where 9 + means roughly "for most"). <p> Thus it is not clear that proving the above statement with respect to Arthur Merlin games yields the same result with respect to general interactive proofs. The difficulty can be resolved by modifying the transformation of [GS], using the approximate lower bound protocol of <ref> [GMS] </ref> (which has the perfect completeness property). We prefer to give a direct proof.
Reference: [GMW] <author> Goldreich O., S. Micali and A. Wigderson, </author> <title> "Proofs that yield Nothing But the Validity of the assertion and the a Methodology of Cryptographic Protocol Design", </title> <booktitle> Proc. 27th FOCS, </booktitle> <year> 1986, </year> <pages> pp. 174-187. </pages>
Reference-contexts: IP A P H A 6= ; (see [AGH]). It is also interesting to note that natural languages as Graph Non-Isomorphism and Matrix Group Non-Membership, which are not known to be in N P , where shown to be in IP (by <ref> [GMW] </ref> and [B], respectively). Considering an interactive proof system, it seems that in some sense the prover is "responsible" for the completeness condition, while the verifier is "responsible" for the soundness condition. <p> If x 62 L then, by the perfect-soundness condition, there is no such conversation, and any guess of the machine will fail. 2 5. CONCLUDING REMARKS Assuming the existence of secure encryption functions (in the sense of [GM]) and using the results of <ref> [GMW] </ref>, one can easily demonstrate the existence of zero-knowledge interactive proofs with perfect completeness for every language in IP . Given L 2 IP , first present an interactive proof with perfect completeness for L, and next apply the techniques in [GMW] observing that they preserve perfect completeness. <p> the sense of [GM]) and using the results of <ref> [GMW] </ref>, one can easily demonstrate the existence of zero-knowledge interactive proofs with perfect completeness for every language in IP . Given L 2 IP , first present an interactive proof with perfect completeness for L, and next apply the techniques in [GMW] observing that they preserve perfect completeness. However, it is not clear whether every language having a perfect (resp. almost perfect) zero-knowledge interactive proof (see [F] for definition) has a perfect (resp. almost perfect) zero-knowledge interactive proof with perfect completeness.
Reference: [GM] <author> Goldwasser, S., and S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: If x 62 L then, by the perfect-soundness condition, there is no such conversation, and any guess of the machine will fail. 2 5. CONCLUDING REMARKS Assuming the existence of secure encryption functions (in the sense of <ref> [GM] </ref>) and using the results of [GMW], one can easily demonstrate the existence of zero-knowledge interactive proofs with perfect completeness for every language in IP .
Reference: [GMR] <author> Goldwasser, S., S. Micali and C. Rackoff, </author> <title> "The knowledge Complexity of Interactive Proof Systems", </title> <booktitle> Proc. 17th STOC, </booktitle> <year> 1985, </year> <pages> pp. 291-304. </pages>
Reference-contexts: This stemmed from the association of deterministic polynomial-time computation with efficient computation. The growing acceptability of probabilistic polynomial-time computations as reflecting efficient computations is the basis of more recent formalizations of "whatever can be efficiently verified". In these formalizations, due to Goldwasser, Micali and Rackoff <ref> [GMR] </ref> and Babai [B], and shown to be equivalent by Goldwasser and Sipser [GS], the (polynomial time) verifier is allowed to toss coins and arbitrarily interact with the prover, furthermore he can accept or reject based on overwhelming statistical evidence. <p> MODEL AND DEF INITIONS We state and prove our main result for the Arthur Merlin games introduced by Babai [B]. Using the result of [GS] our main result applies also to the interactive proof systems of <ref> [GMR] </ref>. In this section we provide a precise definition of Arthur Merlin games and auxiliary terminology, in order to facilitate the presentation of our result.
Reference: [GS] <author> Goldwasser, S. and M. Sipser, </author> <title> "Private coins versus Public coins", this volume. </title>
Reference-contexts: The growing acceptability of probabilistic polynomial-time computations as reflecting efficient computations is the basis of more recent formalizations of "whatever can be efficiently verified". In these formalizations, due to Goldwasser, Micali and Rackoff [GMR] and Babai [B], and shown to be equivalent by Goldwasser and Sipser <ref> [GS] </ref>, the (polynomial time) verifier is allowed to toss coins and arbitrarily interact with the prover, furthermore he can accept or reject based on overwhelming statistical evidence. <p> For a definition of interactive proof systems we refer the reader to Goldwasser and Sipser's article in this volume <ref> [GS] </ref>. We denote by IP the class of languages for which there exists an interactive proof system. Clearly, N P IP P SP ACE. It is believed that the class N P is strictly contained in IP . <p> MODEL AND DEF INITIONS We state and prove our main result for the Arthur Merlin games introduced by Babai [B]. Using the result of <ref> [GS] </ref> our main result applies also to the interactive proof systems of [GMR]. In this section we provide a precise definition of Arthur Merlin games and auxiliary terminology, in order to facilitate the presentation of our result. <p> Let k = qm. Without loss of generality we assume that * &lt; 1 3k . This can be achieved by performing sufficiently many copies of the original Arthur Merlin game in parallel, and ruling by the majority (see [B], <ref> [GS] </ref> and [BHZ]). Program for an honest Merlin: Merlin's program consists of two stages. First, Merlin computes k "sampling points" that are favorable to him, and sends them to Arthur. The second stage is a simulation of k (related) copies of the original Arthur Merlin game. <p> Proof: Clearly, for every Merlin M 0 , jACC ;M 0 x j = j [ k x j i=1 jACC i ;M 0 x j Using Lemma 3, the statement follows. 2 3.4. Main Result Using the equivalence of interactive proofs and Arthur Merlin proofs <ref> [GS] </ref>, and combining Lemmas 2 and 4 we get Main Theorem (Theorem 5): If a language L has an interactive proof system (with q () iterations) then L has an (Arthur Merlin) interactive proof system with perfect completeness (and q () + 1 iterations). 2 4. <p> What happens if we require that the verifier never accepts false statements? In this case we show that the set of languages recognized equals NP. The reader should note that the transformation of Goldwasser and Sipser <ref> [GS] </ref> does not preserve perfect completeness. Thus it is not clear that proving the above statement with respect to Arthur Merlin games yields the same result with respect to general interactive proofs. The difficulty can be resolved by modifying the transformation of [GS], using the approximate lower bound protocol of [GMS] <p> note that the transformation of Goldwasser and Sipser <ref> [GS] </ref> does not preserve perfect completeness. Thus it is not clear that proving the above statement with respect to Arthur Merlin games yields the same result with respect to general interactive proofs. The difficulty can be resolved by modifying the transformation of [GS], using the approximate lower bound protocol of [GMS] (which has the perfect completeness property). We prefer to give a direct proof. <p> A similar proof applies to the hierarchy of interactive proofs with perfect completeness. Goldwasser and Sipser showed that the power of interactive proofs is not decreased when restricting the verifier to use only "public coins" <ref> [GS] </ref>. We have showed that the power of interactive proofs is not decreased when further restricting the system to have perfect completeness. How else can interactive proofs be restricted without decreasing their power?
Reference: [L] <author> Lautemann, C., </author> <title> "BPP and the Polynomial-time Hierarchy", </title> <journal> IPL, </journal> <volume> 14, </volume> <year> 1983, </year> <pages> pp. 215-217. </pages>
Reference-contexts: This transformation preserves the number of interactions in the original Arthur-Merlin proof. The underlying technique is taken from Lautemann's proof that BPP is in the polynomial-time hierarchy <ref> [L] </ref>. (Lautemann's proof that BPP is in the polynomial-time hierarchy simplifies the original proof of Sipser [S].) The idea is to show that this technique works also for Arthur-Merlin proof systems.
Reference: [O] <author> Oren, Y., </author> <title> "On the Cunning Power of Cheating Verifiers: Some Observations about Zero-Knowledge Proofs", </title> <booktitle> Proc. 28th FOCS, </booktitle> <year> 1987, </year> <pages> pp. 462-471. </pages>
Reference-contexts: zero-knowledge with respect to the specified verifier has an interactive proof with perfect completeness which is almost perfect zero-knowledge with respect to the specified verifier (again see [F] for defini tion). 2) Every language having an interactive proof which is almost perfect zero-knowledge and remains so under parallel composition (see <ref> [O] </ref> for definition) has an almost perfect zero knowledge proof with perfect completeness.
Reference: [Sch] <author> Schoening, U., </author> <title> "Probabilistic Complexity Classes and Lowness", </title> <booktitle> Proc. 2nd Structure in Complexity Theory Conf., IEEE 1987, </booktitle> <pages> pp. 2-8. </pages>
Reference-contexts: Zachos showed that the above "simulation" can be used to swap quantifiers in a successive manner (for survey see <ref> [Z, Sch] </ref>). Zachos and Fuerer [ZF] then used this idea to show that bounded Arthur-Merlin proofs equal bounded Arthur-Merlin proofs with perfect completeness, by expressing the former proofs as a fixed quantifier sequence and applying a "swapping lemma" iteratively.
Reference: [S] <author> Sipser, M., </author> <title> "A Complexity Theoretic Approach to Randomness", </title> <booktitle> Proc. 15th STOC, </booktitle> <year> 1983, </year> <pages> pp. 330-335. </pages>
Reference-contexts: This transformation preserves the number of interactions in the original Arthur-Merlin proof. The underlying technique is taken from Lautemann's proof that BPP is in the polynomial-time hierarchy [L]. (Lautemann's proof that BPP is in the polynomial-time hierarchy simplifies the original proof of Sipser <ref> [S] </ref>.) The idea is to show that this technique works also for Arthur-Merlin proof systems. We think that this idea seems strange at first glance, trivial in second thought, but in fact is quite surprising and important.
Reference: [Z] <author> Zachos, S., </author> <title> "Probabilistic Quantifiers, Adversaries, and Complexity Classes", </title> <booktitle> Proc. 1st Structure in Complexity Theory Conf., </booktitle> <publisher> LNCS 223, Springer Verlag, </publisher> <year> 1986, </year> <pages> pp. 383-400. </pages>
Reference-contexts: Zachos showed that the above "simulation" can be used to swap quantifiers in a successive manner (for survey see <ref> [Z, Sch] </ref>). Zachos and Fuerer [ZF] then used this idea to show that bounded Arthur-Merlin proofs equal bounded Arthur-Merlin proofs with perfect completeness, by expressing the former proofs as a fixed quantifier sequence and applying a "swapping lemma" iteratively.
Reference: [ZF] <author> Zachos, S., and M. Fuerer, </author> <title> "Probabilistic Quantifiers vs. Distrustful Adversaries", </title> <type> unpublished manuscript, </type> <month> August </month> <year> 1985. </year> <note> (see also FCT-TCS 1987.) </note>
Reference-contexts: This transformation preserves the number of interactions of the original interactive proof. An alternative proof which uses different ideas, and in particular a protocol for "random selection" appears in [GMS]. An alternative characterization of complexity classes define by bounded Arthur-Merlin games was presented in <ref> [ZF] </ref>. They use polynomially bounded quantifiers 9; 8; 9 + (where 9 + means roughly "for most"). <p> Zachos showed that the above "simulation" can be used to swap quantifiers in a successive manner (for survey see [Z, Sch]). Zachos and Fuerer <ref> [ZF] </ref> then used this idea to show that bounded Arthur-Merlin proofs equal bounded Arthur-Merlin proofs with perfect completeness, by expressing the former proofs as a fixed quantifier sequence and applying a "swapping lemma" iteratively.
Reference: [ZH] <author> Zachos, S. and H. Heller, </author> <title> "A Decisive Characterization of BPP", </title> <journal> Information and Control, </journal> <volume> 69, </volume> <year> 1986, </year> <month> pp.125-135. </month>
Reference-contexts: For example, applying the swapping lemma to (9 + 9=9 + 8) and using the BPP characterization <ref> [ZH] </ref> one gets (89 + 9=9 + 88) = (89=9 + 8). Each such iteration is thus a straightforward application of the "simulation technique", and blows-up the size of the Arthur-Merlin game by an unbounded amount. Thus, this idea does not extend to unbounded Arthur-Merlin proofs. <p> The argument is almost identical to the one in Lautemann (since ACC is fixed!), and is given here for sake of self-containment (see also <ref> [ZH] </ref>). Lemma 1: If x 2 L then the preprocessing does not fail.
Reference: [Y] <author> Yao, </author> <title> A.C., "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of the 23rd IEEE Symp. on FOCS, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: This is the case, since probabilistic completeness and soundness are defined with respect to ideal (unbiased) coin tosses and may not hold when using pseudorandom sequences (even in the sense of Blum and Micali [BM] and Yao <ref> [Y] </ref>). On the other hand perfect completeness and soundness are independent of the quality of the verifier coin tosses. Our main result is that Interactive Proofs with Perfect Completeness are as powerful as Interactive Proofs.
References-found: 20

