URL: http://www-graphics.stanford.edu/papers/glossy/glossy.ps.Z
Refering-URL: http://www-graphics.stanford.edu/papers/glossy/
Root-URL: http://www.cs.stanford.edu
Title: A Hierarchical Illumination Algorithm for Surfaces with Glossy Reflection  
Author: Larry Aupperle Pat Hanrahan 
Keyword: CR Categories and Subject Descriptors: I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism. Key Words: adaptive meshing, global illumination, radiosity, ray tracing.  
Note: O(n 3 element-triple interactions.  
Affiliation: Department of Computer Science Princeton University  
Abstract: We develop a radiance formulation for discrete three point transport, and a new measure and description of reflectance: area reflectance. This formulation and associated reflectance allow an estimate of error in the computation of radiance across triples of surface elements, and lead directly to a hierarchical refinement algorithm for global illumination. We have implemented and analyzed this algorithm over surfaces exhibiting glossy specular and diffuse reflection. Theoretical growth in light transport computation is shown to be O(n+k 3 ) for sufficient refinement, where n is the number of elements at the finest level of subdivision over an environment consisting of k input polygonal patches this growth is exhibited in experimental trials. Naive application of three point transport would require computation over 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Amanatides, J. </author> <title> (1992) Algorithms for the detection and elimination of specular aliasing. </title> <booktitle> Proc. Graphics Interface '92, </booktitle> <pages> 86-93. </pages>
Reference-contexts: In this case we must estimate the integral of a spikey function over a relatively broad area. Our solution is to band limit the BRDF in a fashion similar to that presented by Amanatides <ref> [1] </ref>. We employ the cone estimation techniques of the previous section to determine if the BRDF varies significantly over the given patches if this variance exceeds a set bound, we roughen the reflecting surface, lowering to broaden the resulting reflection over the estimated cones. <p> We then renormalize the resulting blurred function, as described in <ref> [1] </ref>, to prevent amplification of its low frequency components. We note that the resulting antialiasing is relatively aggressive, significantly dimming or eliminating reflections requiring overmuch blurring.
Reference: [2] <author> Aupperle, L. </author> <title> (1993) Hierarchical algorithms for illumination. </title> <type> Doctoral Dissertation, </type> <institution> Princeton University. </institution>
Reference-contexts: As is shown in <ref> [2] </ref>, radiance may be pushed unchanged within the interaction hierarchy, and area averaged as it is pulled from child to parent. 4 Application over Glossy Reflection In this section we discuss our implementation of the above algorithms over glossy reflection. 4.1 The Reflection Function We employ a highly simplified Torrance-Sparrow [15] <p> This scheme serves as a crude approximation to the shadowing function; however, a better strategy would be to employ a much fuller tabulation of the function, incorporated into the error analysis presented below. A more complete discussion of shadowing and conservation of energy over f g is presented in <ref> [2] </ref>. 4.2 Error Estimation Recall the general expression for error derived in Section 2.3: (F ji S kji + S kji F ji ) In implementation we have estimated the form factor F ji by F dji , the form factor from a differential area at A j to a disk <p> As discussed in [7], the relative error in this estimate is proportional to the estimate itself. In our implementation we have thus estimated absolute error F ji as at most proportional to F 2 dji .A brief discussion of relative and absolute error over hierarchical methods is presented in <ref> [2] </ref>. We now consider the error estimate S kji . <p> The gather and push/pull procedures described in preceding sections allow manipulation and solution over this representation. As discussed in <ref> [2] </ref>, the resulting system may be shown to converge. Growth in transport is more accurately described as O (n + k 3 ), where k is the number of input polygonal patches within the en vironment, as opposed to elements.
Reference: [3] <author> Blinn, J.F. </author> <title> (1977) Models of light refection for computer synthesized pictures. </title> <booktitle> Computer Graphics 11 (2), </booktitle> <pages> 192-198. </pages>
Reference-contexts: of the above algorithms over glossy reflection. 4.1 The Reflection Function We employ a highly simplified Torrance-Sparrow [15] model for our glossy reflection function: f g (~! i ; ~! r ) = 8 cos i cos r This function incorporates the facet distribution function cos m developed by Blinn <ref> [3] </ref>, normalized for projected facet area under [10]. Angle m is that made to the mean surface normal by ~! m , the microfacet mirror orientation normal lying halfway between ~! i and ~! r .
Reference: [4] <author> Chen, S.E., Rushmeier, H.E., Miller, G., Turner, D. </author> <title> (1991) A progressive multi-pass method for global illumination. </title> <booktitle> Computer Graphics 25 (4), </booktitle> <pages> 165-174. </pages>
Reference-contexts: Monte Carlo algorithms sometimes go under the name of distributed or stochastic ray tracing and are the most commonly employed in computer graphics (e.g. see <ref> [4, 5, 9, 12, 16] </ref>). Monte Carlo techniques have the advantage that they are easy to implement and can be used for complicated geometries and reflection functions. Unfortunately, their disadvantage is that they are notoriously inefficient.
Reference: [5] <author> Cook, </author> <title> R.L. (1986) Stochastic sampling in computer graphics. </title> <journal> ACM Transactions on Graphics 5 (1), </journal> <pages> 51-72. </pages>
Reference-contexts: Monte Carlo algorithms sometimes go under the name of distributed or stochastic ray tracing and are the most commonly employed in computer graphics (e.g. see <ref> [4, 5, 9, 12, 16] </ref>). Monte Carlo techniques have the advantage that they are easy to implement and can be used for complicated geometries and reflection functions. Unfortunately, their disadvantage is that they are notoriously inefficient.
Reference: [6] <author> Hall, R. </author> <title> (1989) Illumination and color in computer generated imagery. </title> <publisher> Springer-Verlag, </publisher> <address> New York. </address>
Reference-contexts: Function sh ( i ; r ) expresses self-shadowing over microfacets for near specular surfaces, such self-shadowing or masking does not become critical until relatively high i or r <ref> [6] </ref>. The implemented system thus simply clamps sh from 1 to 0 when i or r exceeds a preset bound near the horizon.
Reference: [7] <author> Hanrahan, P., Salzman, D., Aupperle, L. </author> <title> (1991) A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics 25 (4), </booktitle> <pages> 197-206. </pages>
Reference-contexts: However, in this paper we show that we can accurately approximate the n 3 reflectance matrix with O (n + k 3 ) blocks, in a way very similar to our recent hierarchical radiosity algorithm <ref> [7] </ref>. In that paper we showed how the n 2 form factor matrix could be approximated with O (n + k 2 ) blocks, resulting in a very efficient algorithm in both space and time. <p> This gathered radiance must be distributed and accounted for over all ancestors and descendants of each receiving interaction, in order to maintain the consistency and correctness of the hierarchical representation of radiance between patches. We employ a distribution algorithm similar to that presented in <ref> [7] </ref> for radiosity over patch/element hierarchies: gathered radiance is pushed to the leaf interactions within each hierarchy to ensure propagation to all descendants, and then pulled and distributed back up from the leaves through all higher level interactions to their common ancestor at the root. <p> (F ji S kji + S kji F ji ) In implementation we have estimated the form factor F ji by F dji , the form factor from a differential area at A j to a disk of area A i centered at A i , as was employed in <ref> [7] </ref>. As discussed in [7], the relative error in this estimate is proportional to the estimate itself. <p> + S kji F ji ) In implementation we have estimated the form factor F ji by F dji , the form factor from a differential area at A j to a disk of area A i centered at A i , as was employed in <ref> [7] </ref>. As discussed in [7], the relative error in this estimate is proportional to the estimate itself. In our implementation we have thus estimated absolute error F ji as at most proportional to F 2 dji .A brief discussion of relative and absolute error over hierarchical methods is presented in [2]. <p> We note that the resulting antialiasing is relatively aggressive, significantly dimming or eliminating reflections requiring overmuch blurring. In implementation, we have computed visibility via jittered ray casting and inheritance similar to that of <ref> [7] </ref>, storing visibility data in interactions as it is computed. 5 Results 5.1 Growth in Transport We have measured the growth in transport triples (linked interactions) versus n, the maximum number of elements at the finest level of subdivision, over parallel, perpendicular, and oriented patches (Figure 7). <p> The corresponding geometries are shown in Figure 6. The graphs show linear or near linear behavior over each range the graph of triples vs. n for the perpendicular case is slightly concave over the lower data points, but subsides to linear with further refinement. In previous work <ref> [7] </ref> on hierarchical refinement for radiosity, it was shown that for error estimate proportional to F dji , and sufficient refinement, each subpatch may only interact with other patches in a limited local neighborhood. As discussed in [7], each patch may thus participate in at most c interactions, for some constant <p> In previous work <ref> [7] </ref> on hierarchical refinement for radiosity, it was shown that for error estimate proportional to F dji , and sufficient refinement, each subpatch may only interact with other patches in a limited local neighborhood. As discussed in [7], each patch may thus participate in at most c interactions, for some constant c independent of n and k. Adaptive refinement thus generates at most O (n) transport interactions. We will show a similar bound for discrete three point transport under glossy reflection. <p> Consider refinement over interaction ij under an error estimate at worst proportional to S max F dji . The error estimate is thus proportional to F dji , and therefore, for sufficient refinement, there are at most O (n) such interactions, as discussed in <ref> [7] </ref>. Consider now an error satisfied link from ij to an interaction jk. For sufficient refinement under our subdivision scheme, we may assume that form factors F ij , F ji , F jk , F kj over p i , p j , and p k are roughly equal. <p> Another option would be to parameterize radiance by position and direction we believe that a similar hierarchical approach could be employed with the method of discrete ordinates or spherical harmonics. Finally, we note that, similarly to other algorithms for hierarchical illumination <ref> [7, 14] </ref>, the algorithm described in this paper bounds estimated error over individual transport computations. As discussed in [14], bounding estimated error over individual transport does not easily or necessarily provide a rigorous bound for overall error in the solution.
Reference: [8] <author> Immel, D.S., Cohen, M.F., Greenberg, </author> <title> D.P. (1986) A radiosity method for non-diffuse environments. </title> <booktitle> Computer Graphics 20 (4), </booktitle> <pages> 133-142. </pages>
Reference-contexts: Unfortunately, their disadvantage is that they are notoriously inefficient. The second approach, the finite element method, has been very successfully applied to the rendering equation under the radiosity assumption, but has only begun to be employed in the general case, and with limited success. For example, Immel et al. <ref> [8] </ref> discretized radiance into a lattice of cubical environment maps, and solved the resulting system. More recently, Sillion et al. [13] used a mesh of spherical harmonic functions to represent radiance, and solved the resulting system using a shooting algorithm.
Reference: [9] <author> Kajiya, J.T. </author> <title> (1986) The rendering equation. </title> <booktitle> Computer Graphics 20 (4), </booktitle> <pages> 143-150. </pages>
Reference-contexts: Monte Carlo algorithms sometimes go under the name of distributed or stochastic ray tracing and are the most commonly employed in computer graphics (e.g. see <ref> [4, 5, 9, 12, 16] </ref>). Monte Carlo techniques have the advantage that they are easy to implement and can be used for complicated geometries and reflection functions. Unfortunately, their disadvantage is that they are notoriously inefficient. <p> These two techniques roughly correspond to the methods of Immel et al. and Sillion et al., although many interesting variations are possible. Our approach is somewhat different, and based on Kajiya's original formulation of the rendering equation <ref> [9] </ref>. Under this formulation, the rendering equation is expressed in terms of three point transport. That is, the kernel of the integral expresses the transport of light from a point on the source to a point on the receiver, via a point on a reflector.
Reference: [10] <author> Mitchell, D. </author> <year> (1992) </year> <month> Manuscript. </month>
Reference-contexts: 4.1 The Reflection Function We employ a highly simplified Torrance-Sparrow [15] model for our glossy reflection function: f g (~! i ; ~! r ) = 8 cos i cos r This function incorporates the facet distribution function cos m developed by Blinn [3], normalized for projected facet area under <ref> [10] </ref>. Angle m is that made to the mean surface normal by ~! m , the microfacet mirror orientation normal lying halfway between ~! i and ~! r .
Reference: [11] <author> Nicodemus, F.E., Richmond, J.C., Hsia, J.J., Ginsberg, I.W., Limperis, T. </author> <title> (1977) Geometrical considerations and nomenclature for reflectance. </title> <journal> National Bureau of Standards monograph, </journal> <volume> no. </volume> <pages> 160. </pages>
Reference-contexts: Let ! 0 r be the solid angles subtended at point x 0 by A and A , respectively. Consider differential solid angles at ~! 0 0 by definition of the bidirectional reflectance-distribution function (BRDF), f r <ref> [11] </ref>, the radiance L (~! 0 r ) along ~! 0 r due to illumination through solid angle ! 0 L (~! r ) = ! 0 f r (~! i ; ~! r )L (~! i ) cos i d! i Integrating this expression over ! 0 r , and <p> Note that area reflectance is similar to biconical reflectance <ref> [11] </ref>, save that it is also integrated over the reflecting surface. <p> As discussed below, the lower this S max , the smaller the magnitude of the leading coefficient underling the resulting bound. Note that our argument thus does not apply to perfect specular reflection, as the corresponding BRDF incorporates the Dirac delta function <ref> [11] </ref>. Equivalently, the argument does not hold over f g for = 1 (inducing mirror reflection), as we can not provide a finite bound for S in this case.
Reference: [12] <author> Shirley, P. </author> <title> (1990) A ray tracing method for illumination calculation in diffuse-specular scenes. </title> <booktitle> Proc. Graphics Interace '90, </booktitle> <pages> 205-212. </pages>
Reference-contexts: Monte Carlo algorithms sometimes go under the name of distributed or stochastic ray tracing and are the most commonly employed in computer graphics (e.g. see <ref> [4, 5, 9, 12, 16] </ref>). Monte Carlo techniques have the advantage that they are easy to implement and can be used for complicated geometries and reflection functions. Unfortunately, their disadvantage is that they are notoriously inefficient.
Reference: [13] <author> Sillion, F.X., Arvo, J.R., Westin, S.H., Greenberg, </author> <title> D.P. (1991) A global illumination solution for general reflectance distributions. </title> <booktitle> Computer Graphics 25 (4), </booktitle> <pages> 187-196. </pages>
Reference-contexts: For example, Immel et al. [8] discretized radiance into a lattice of cubical environment maps, and solved the resulting system. More recently, Sillion et al. <ref> [13] </ref> used a mesh of spherical harmonic functions to represent radiance, and solved the resulting system using a shooting algorithm. There are many ways to parameterize the rendering equation, and each leads to a different choice of basis functions.
Reference: [14] <author> Smits, B.E., Arvo, J.R., Salesin, D.H. </author> <title> (1992) An importance-driven radiosity algorithm. </title> <booktitle> Computer Graphics 26 (2), </booktitle> <pages> 273-282. </pages>
Reference-contexts: Note that these scenes are extremely simple application to more complex environments is still very expensive, despite the employment of hierarchical methods. Motivated by the work of Smits et al. <ref> [14] </ref> in hierarchical radiosity, we are currently experimenting with importance and radiance weighting over three point transport preliminary results of this work are shown in Figure 12. The given environment contains four reflectors: the broad face of each of the three slabs and the top of the central cube. <p> The k 3 term is generated by the initial examination of all polygon triples for reflection, and is subsumed by n as the number of elements increases. As the number of polygons in an environment grows, however, the k 3 term will become prohibitively large. As discussed in <ref> [14] </ref> with respect to the related problem under hierarchical radiosity, the capability to cluster as well as refine polygons would reduce the difficulty of unnecessary initial interactions. Clustering is arguably the most important open problem in the computation of global illumination. <p> Another option would be to parameterize radiance by position and direction we believe that a similar hierarchical approach could be employed with the method of discrete ordinates or spherical harmonics. Finally, we note that, similarly to other algorithms for hierarchical illumination <ref> [7, 14] </ref>, the algorithm described in this paper bounds estimated error over individual transport computations. As discussed in [14], bounding estimated error over individual transport does not easily or necessarily provide a rigorous bound for overall error in the solution. <p> Finally, we note that, similarly to other algorithms for hierarchical illumination [7, 14], the algorithm described in this paper bounds estimated error over individual transport computations. As discussed in <ref> [14] </ref>, bounding estimated error over individual transport does not easily or necessarily provide a rigorous bound for overall error in the solution.
Reference: [15] <author> Torrance, K.E., </author> <title> Sparrow, E.M. (1967) Theory for off-specular reflection from roughened surfaces. </title> <editor> J. </editor> <booktitle> of the Optical Society of America 57 (9), </booktitle> <pages> 1105-1114. </pages>
Reference-contexts: [2], radiance may be pushed unchanged within the interaction hierarchy, and area averaged as it is pulled from child to parent. 4 Application over Glossy Reflection In this section we discuss our implementation of the above algorithms over glossy reflection. 4.1 The Reflection Function We employ a highly simplified Torrance-Sparrow <ref> [15] </ref> model for our glossy reflection function: f g (~! i ; ~! r ) = 8 cos i cos r This function incorporates the facet distribution function cos m developed by Blinn [3], normalized for projected facet area under [10].
Reference: [16] <author> Ward, G.J., Rubinstein, </author> <title> F.M., Clear, R.D. (1988) A ray tracing solution for diffuse environments. </title> <booktitle> Computer Graphics 22 (3), </booktitle> <pages> 85-92. </pages>
Reference-contexts: Monte Carlo algorithms sometimes go under the name of distributed or stochastic ray tracing and are the most commonly employed in computer graphics (e.g. see <ref> [4, 5, 9, 12, 16] </ref>). Monte Carlo techniques have the advantage that they are easy to implement and can be used for complicated geometries and reflection functions. Unfortunately, their disadvantage is that they are notoriously inefficient.
References-found: 16

