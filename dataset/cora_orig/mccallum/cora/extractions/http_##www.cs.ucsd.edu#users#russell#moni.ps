URL: http://www.cs.ucsd.edu/users/russell/moni.ps
Refering-URL: http://www.cs.ucsd.edu/users/russell/
Root-URL: http://www.cs.ucsd.edu
Email: E-mail: naor@wisdom.weizmann.ac.il.  
Title: Efficient Cryptographic Schemes Provably as Secure as Subset Sum  
Author: Russell Impagliazzo Moni Naor 
Note: Incumbent of the Morris and Rose Goldman Career Development Chair. Research supported by an Alon Fellowship and a grant from the Israel Science Foundation administered by the Israeli  
Date: September 29, 1995  
Address: La Jolla, CA 92093 USA  Rehovot 76100, Israel  
Affiliation: Department of Computer Science University of California at San Diego  Department of Applied Math and Computer Science Weizmann Institute  Academy of Sciences.  
Abstract: We show very efficient constructions for a pseudo-random generator and for a universal one-way hash function based on the intractability of the subset sum problem for certain dimensions. (Pseudo-random generators can be used for private key encryption and universal one-way hash functions for signature schemes). The increase in efficiency in our construction is due to the fact that many bits can be generated/hashed with one application of the assumed one-way function. All our construction can be implemented in NC using an optimal number of processors. fl Part of this work done while both authors were at UC Berkeley and part when the second author was at the IBM Almaden Research Center. Research supported by NSF grant CCR 88 - 13632. A preliminary version of this paper appeared in Proc. of the 30th Symp. on Foundations of Computer Science, 1989. y E-mail: russell@cs.ucsd.edu 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, </author> <title> 1 1 formulas of finite Structures, </title> <journal> Ann Pure & Apll. Logic 24, </journal> <pages> pp 1-48, </pages> <year> 1983. </year>
Reference-contexts: It is known that the parity function cannot be computed in AC 0 and hence summing many numbers cannot be done in AC 0 <ref> [1, 16] </ref>, (exponential lower 15 bounds on the size of a constant depth circuit to compute these functions are given in [47, 23]). However, we show that random instances of the subset sum problem can be generated in AC 0 .
Reference: [2] <author> L. Babai, </author> <title> Random Oracles Separate PSPACE From the Polynomial-time Hierarchy, </title> <journal> Infor. Proc. Let., </journal> <volume> vol 26, </volume> <pages> pp. 51-53, </pages> <year> 1987. </year>
Reference-contexts: We should also note that our results have been applied by Kharitonov [29] to show the hardness of learning problems. The basic idea is to generalize a method suggested by Babai <ref> [2] </ref> and Boppana and Lagarias [6]. Instead of first generating a random ~a and then computing a sum, which cannot be done in AC 0 , we generate the sum, the subset and ~a simultaneously.
Reference: [3] <author> M. Blum, </author> <title> Coin Flipping by Telephone, </title> <booktitle> Proc. 24th IEEE Compcon, </booktitle> <year> 1982, </year> <pages> pp. 133-137. </pages>
Reference-contexts: Proof: Analogous to Theorem 3.1. 2. 5 Bit Commitment vs. a Strong Receiver Bit commitment is a basic protocol which is useful and essential in many cryptographic applications, such as coin flipping by telephone <ref> [3] </ref>, zero-knowledge and minimum disclosure proofs ([21, 7]) and identification schemes [13]. Naor [37] has shown how to implement bit commitment given any pseudo-random generator. His scheme suffices for the all applications above, except minimum disclosure. <p> a n=2 2 f0; 1g l (n) and a 0 2 ; : : :; a 0 n=2 2 f0; 1g l (n) . (If there is no such third party, then the a i 's and a 0 i 's can be chosen via coin flipping over the telephone <ref> [3] </ref> which can be implemented using a bit commitment scheme vs a strong committer, as in [37]. This commitment can also be based on the hardness of subset sum.) The commit protocol to a bit b: 1. Alice chooses s 2 R f0; 1g n=2 . 2.
Reference: [4] <author> L. Blum, M. Blum and M. Shub, </author> <title> A simple Unpredictable Pseudo-Random Number Generator, </title> <journal> Siam J. on Comput., </journal> <year> 1986. </year>
Reference-contexts: Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub <ref> [4] </ref> constructed a pseudo-random generator based on quadratic residuosity. Yao [46] showed that the definition given above is equivalent to that of Blum and Micali, and gave a general construction that can be based on any one-way permutation.
Reference: [5] <author> M. Blum, S. </author> <title> Micali How to Generate Cryptographically Strong Sequences of Pseudo-Random Bits, </title> <journal> Siam J. on Comput., </journal> <volume> vol 13, </volume> <year> 1984, </year> <pages> pp 850-864. 17 </pages>
Reference-contexts: These include: private key encryption [22, 20, 34], bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali <ref> [5] </ref> who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub [4] constructed a pseudo-random generator based on quadratic residuosity.
Reference: [6] <author> R. B. Boppana and J. C. Lagarias, </author> <title> One-way functions and circuit complexity, </title> <booktitle> Proc. Structure in Complexity Theory, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1986, </year> <pages> pp. 51-65. </pages>
Reference-contexts: We should also note that our results have been applied by Kharitonov [29] to show the hardness of learning problems. The basic idea is to generalize a method suggested by Babai [2] and Boppana and Lagarias <ref> [6] </ref>. Instead of first generating a random ~a and then computing a sum, which cannot be done in AC 0 , we generate the sum, the subset and ~a simultaneously.
Reference: [7] <author> G. Brassard, D. Chaum, C. Crepeau, </author> <title> Minimum Disclosure Proofs of Knowledge, </title> <journal> J. of Comp. Sys. Sci., </journal> <volume> vol 37, </volume> <pages> pp. 156-189. </pages>
Reference-contexts: A primitive for which no construction under a general assumption (e.g., existence of one-way or trapdoor permutations) is bit commitment vs. a computationally unlimited receiver. This primitive constructed under number theoretic assumptions was used by Brassard, Chaum and Crepeau <ref> [7] </ref> for minimum disclosure proofs. In section 5 we show how to construct this primitive based on subset sum. Recently, [39] have shown how to construct such a bit commitment from any one-way permutation; however their construction requires many rounds of interaction. <p> As mentioned, minimum disclosure requires a special kind of bit commitment, one which is secure vs. a computationally unlimited receiver. In <ref> [7] </ref> it is shown how to implement this kind of bit commitment based on factoring and discrete log. [39] show a general but highly interactive protocol, which can be based on any one-way permutation. 14 Bit commitment is a way for a committer Alice to send a receiver Bob a locked
Reference: [8] <author> E. F. Brickell, </author> <title> Solving low density knapsacks, </title> <booktitle> Proc. Crypto 83, </booktitle> <pages> pp 25-37. </pages>
Reference-contexts: Many NP-Complete problems are known to have polynomial average case algorithms. The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers <ref> [8, 12, 15, 27, 31] </ref>. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. <p> The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers [8, 12, 15, 27, 31]. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell <ref> [8] </ref> have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. The Lagarias-Odlyzko [31] and Brickell [8] algorithms mentioned above transform the subset sum problem into a shortest vector in lattice problem. <p> For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell <ref> [8] </ref> have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. The Lagarias-Odlyzko [31] and Brickell [8] algorithms mentioned above transform the subset sum problem into a shortest vector in lattice problem.
Reference: [9] <author> E. F. Brickell and A. M. Odlyzko, </author> <title> Cryptanalysis: A Survey of Recent Results, </title> <journal> Proc. of the IEEE, </journal> <volume> vol. 76, </volume> <pages> pp. 578-593, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Many schemes were suggested that use this problem as the basis for public key encryption. However, none of these schemes have been proven to be as secure as subset sum, and, in fact, most of them have been broken. See Brickell and Odlyzko <ref> [9] </ref> and Odlyzko [40] for a survey. The first to suggest using subset sum were Merkle and Hellman [35], and the only method for using subset sum in a public key protocol that has not been broken is Chor and Rivest's [11].
Reference: [10] <author> L. Carter and M. Wegman, </author> <title> Universal Classes of Hash Functions, </title> <journal> JCSS, 1979, </journal> <volume> Vol. 18, </volume> <pages> pp. 143-154. </pages>
Reference-contexts: Proof: The proof is analogous to Proposition 1.1. (One technical point is that one needs the leftover hash lemma of [26], which works under the weaker assumption that the hash functions in question are universal 2 in the sense of <ref> [10] </ref>, rather than pairwise independent.) 2 Theorem 4.1 Let G = fG x jx 2 Ag and H = fH y jy 2 Bg be polynomial-time computable families of groups, let g : B ! A be a polynomial-time computable function, and let h = fh y jy 2 Bg be
Reference: [11] <author> B. Chor and R. L. Rivest, </author> <title> A Knapsack Type Public Key Crypto-System Based on arithmetic in finite fields, </title> <journal> IEEE Transaction on Information Theory, </journal> <volume> Vol 34, </volume> <year> 1988, </year> <pages> pp. 901-909. </pages>
Reference-contexts: See Brickell and Odlyzko [9] and Odlyzko [40] for a survey. The first to suggest using subset sum were Merkle and Hellman [35], and the only method for using subset sum in a public key protocol that has not been broken is Chor and Rivest's <ref> [11] </ref>. The approach taken here is different in two ways. We are less ambitious, and are not attempting to construct a public key cryptosystem. Many important tasks in cryptography do not require the full power of public key cryptography.
Reference: [12] <author> M. J. Coster, B. A. LaMacchia, A. M. Odlyzko and C. P. Schnorr, </author> <title> An improved low-density subset sum algorithm, </title> <booktitle> Proc. Advances in Cryptology - Eurocrypt'91, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1991, </year> <pages> pp. 54-67. </pages>
Reference-contexts: Many NP-Complete problems are known to have polynomial average case algorithms. The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers <ref> [8, 12, 15, 27, 31] </ref>. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. <p> This was improved very recently by Coster, LaMac-chia, Odlyzko and Schnorr <ref> [12] </ref> and Joux and Stern [27] who showed a different transformation that has the property that the vector corresponding to the solution is the shortest whenever `(n) &gt; 1:0629 n. ([12] also contains some evidence showing the limitation of this method.) The above mentioned papers suggest as a second stage finding
Reference: [13] <author> A. Fiat and A. Shamir, </author> <title> How to Prove Yourself, </title> <booktitle> Proc. of Advances in Cryptology - Crypto '86, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1987, </year> <pages> pp. 641-654. </pages>
Reference-contexts: This is the first method that can be implemented in NC which is provably secure 1 for any of these tasks (except identification in which the on-line part can be computed in NC using the Fiat-Shamir <ref> [13] </ref> method). In fact, we 1 Here, "provably secure" means that breaking the primitive in question is provably as hard as inverting a well-studied function which is widely assumed to be one-way. <p> Proof: Analogous to Theorem 3.1. 2. 5 Bit Commitment vs. a Strong Receiver Bit commitment is a basic protocol which is useful and essential in many cryptographic applications, such as coin flipping by telephone [3], zero-knowledge and minimum disclosure proofs ([21, 7]) and identification schemes <ref> [13] </ref>. Naor [37] has shown how to implement bit commitment given any pseudo-random generator. His scheme suffices for the all applications above, except minimum disclosure. Furthermore, his scheme enables commit to n bits at the price of generating a pseudo-random sequence of length O (n).
Reference: [14] <author> A. M Frieze, </author> <title> On the Lagarias Odlyzko algorithm for the subset sum problem, </title> <journal> SIAM J. Comput., </journal> <volume> vol 15, </volume> <year> 1986, </year> <pages> pp. 536-539. </pages>
Reference: [15] <author> M. Furst and R. Kannan, </author> <title> Succinct certificates for almost all subset sum problems, </title> <journal> Siam J. on Comput., </journal> <volume> vol 18, </volume> <year> 1989, </year> <pages> pp. 550-558. </pages>
Reference-contexts: Many NP-Complete problems are known to have polynomial average case algorithms. The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers <ref> [8, 12, 15, 27, 31] </ref>. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions.
Reference: [16] <author> M. Furst, J. Saxe and M. Sipser, </author> <title> Parity circuits and the polynomial time hierarchy, </title> <booktitle> Proc. 22nd Symposium on Foundations of Computer Science, </booktitle> <year> 1981, </year> <pages> pp. 260-270. </pages>
Reference-contexts: It is known that the parity function cannot be computed in AC 0 and hence summing many numbers cannot be done in AC 0 <ref> [1, 16] </ref>, (exponential lower 15 bounds on the size of a constant depth circuit to compute these functions are given in [47, 23]). However, we show that random instances of the subset sum problem can be generated in AC 0 .
Reference: [17] <author> Z. Galil and O. Margalit, </author> <title> An almost linear time algorithm for the dense subset sum problem, </title> <journal> Siam J. Comput., </journal> <volume> vol 20, </volume> <year> 1991, </year> <pages> pp. 1157-1189. </pages>
Reference-contexts: As for other case, when l (n) is very small, say O (log n), then the subset sum problem can be solved via dynamic programming. (For very dense problems, `(n) &lt; 1=2 log n, there are more efficient algorithms, as was recently shown by Galil and Margalit <ref> [17] </ref>. ) For the length function `(n) = n, the best known attack takes time O (2 n=2 ) and space O (2 n=4 ) due to Schroeppel and Shamir [45]. The recent papers [43] and [44] report extensive experimental work on the subset sum problem and several variants.
Reference: [18] <author> O. Goldreich, H. Krawczyk and M. Luby, </author> <title> On the existence of Pseudorandom Generators, </title> <booktitle> Proc. of the 29th Symposium on the Foundation of Computer Science , 1988, </booktitle> <pages> pp. 12-24. </pages>
Reference-contexts: the one-wayness of a function was used to construct a different pseudo-random generator. (For instance, using the first part of Proposition 1.1, that the subset sum function is 1-1 with high probability for l (n) = (1 + c)n one can construct using the method of Goldreich, Krawczyk and Luby <ref> [18] </ref> a pseudo random generator. This generator will output one bit for each computation of the subset sum.) In our case, the one-way function and the pseudo-random generator are the same. The loss of efficiency which occurs in the conversion process in previous constructions is no problem in ours.
Reference: [19] <author> O. Goldreich and L. Levin, </author> <title> A Hard-Core Predicate for all One-Way Functions, </title> <booktitle> Proc. of the 21st Symposium on the Theory of Computing, </booktitle> <year> 1989. </year>
Reference-contexts: Goldreich and Levin <ref> [19] </ref> have shown that for any one-way function f the inner product with a random vector is a hard bit. <p> Then the Goldreich-Levin Theorem is: Theorem 2.1 <ref> [19] </ref> Let f be a one-way function.
Reference: [20] <author> O. Goldreich, S. Goldwasser and S. Micali, </author> <title> How to Construct Random Functions, </title> <journal> J. of the ACM, </journal> <volume> vol 33, 186, </volume> <pages> pp. 792-807. 18 </pages>
Reference-contexts: These include: private key encryption <ref> [22, 20, 34] </ref>, bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. <p> Our construction obtains O (n) bits per application of the one-way function, (which is the subset sum function). As was pointed out in Micali and Schnorr [36], the technique of <ref> [20] </ref> can be used to generate pseudorandom sequences of any polynomial length in parallel, once a way of generating in parallel n + O (n) bits from n bits is given. Since subset sum is amenable to parallelism, this yields a parallel method for generating pseudo-random sequences. <p> This shows that Claim 2.2 holds for arithmetic modulo 2 l (n) and concludes the proof of the theorem. 2 Once we have a way of obtaining (1 + c)n pseudo-random bits from a seed of n bits, we can use the method of Goldreich, Goldwasser and Micali <ref> [20] </ref> to extend an n bit seed to an arbitrary polynomial length pseudo-random sequence. (Once a 1 ; a 2 ; : : : ; a n are chosen at random they can be fixed for all applications. Thus they do not count for the length of the seed). <p> Each iteration requires O (n) additions of number which are O (n) bits long. In particular, to generate a sequence of length 2n requires only O (1) iterations. Goldreich, Goldwasser and Micali <ref> [20] </ref> also show how a parallel pseudo-random number generator doubling the number of bits can be used to implement in parallel a pseudo-random generator for any length. <p> This is the first example of such functions. In contrast, Linial, Mansour and Nisan [33] have shown that no pseudo-random function generator, as defined by Goldreich, Goldwasser and Micali <ref> [20] </ref>, can be implemented in AC 0 . We should also note that our results have been applied by Kharitonov [29] to show the hardness of learning problems. The basic idea is to generalize a method suggested by Babai [2] and Boppana and Lagarias [6].
Reference: [21] <author> O. Goldreich, S. Micali, A. Wigderson, </author> <title> Proofs that Yield Nothing but Their Validity and a Methodology of Cryptographic Protocol Design, </title> <booktitle> Proc. 27rd Symposium on Foundations of Computer Science, </booktitle> <year> 1986, </year> <pages> pp 174-187. </pages>
Reference-contexts: These include: private key encryption [22, 20, 34], bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs <ref> [21] </ref>) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub [4] constructed a pseudo-random generator based on quadratic residuosity.
Reference: [22] <author> S. Goldwasser and S. Micali, </author> <title> Probabilistic Encryption, </title> <journal> J. of Computer and Systems Sciences, </journal> <volume> vol 28, </volume> <year> 1984, </year> <pages> pp 270-299. </pages>
Reference-contexts: These include: private key encryption <ref> [22, 20, 34] </ref>, bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log.
Reference: [23] <author> J. Hastad, </author> <title> Improved lower bounds for small depth circuits, </title> <booktitle> Proc. 18th Symposium on Theory of Computing, </booktitle> <year> 1986. </year>
Reference-contexts: It is known that the parity function cannot be computed in AC 0 and hence summing many numbers cannot be done in AC 0 [1, 16], (exponential lower 15 bounds on the size of a constant depth circuit to compute these functions are given in <ref> [47, 23] </ref>). However, we show that random instances of the subset sum problem can be generated in AC 0 . If subset sum is secure for any length l (n), then our construction gives a one-way function and a pseudo-random generator computable in AC 0 .
Reference: [24] <author> J. Hastad, </author> <title> Pseudo-Random Generators under Uniform Assumptions, </title> <booktitle> Proc. 19th Symposium on Theory of Computing, </booktitle> <year> 1990. </year>
Reference: [25] <author> R. Impagliazzo, L. Levin and M. Luby, </author> <title> Pseudo-random generation from one-way functions, </title> <booktitle> Proc. 21st Symposium on Theory of Computing, </booktitle> <year> 1989, </year> <pages> pp. 12-24. </pages>
Reference-contexts: Hence, if l (n) cn; c &gt; 1, we have P rob [9S 0 6= S; f ~a (S) = f ~a (S 0 )] S 0 6=S If l (n) cn; c &lt; 1, we can apply the leftover hash lemma of <ref> [25] </ref>, [26] to see that the expected distinguishability of f ~a (S) and a random y 2 f0; 1g l (n) is at most 2 (nl (n))=2 2 ((1c)=2)n . We then apply Markov's inequality to get the result claimed in part 2 of the proposition. 2.
Reference: [26] <author> R. Impagliazzo and D. Zuckerman, </author> <title> Recycling random bits, </title> <booktitle> Proc. of the 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1989, </year> <pages> pp. 248-253. </pages>
Reference-contexts: Hence, if l (n) cn; c &gt; 1, we have P rob [9S 0 6= S; f ~a (S) = f ~a (S 0 )] S 0 6=S If l (n) cn; c &lt; 1, we can apply the leftover hash lemma of [25], <ref> [26] </ref> to see that the expected distinguishability of f ~a (S) and a random y 2 f0; 1g l (n) is at most 2 (nl (n))=2 2 ((1c)=2)n . We then apply Markov's inequality to get the result claimed in part 2 of the proposition. 2. <p> Proof: The proof is analogous to Proposition 1.1. (One technical point is that one needs the leftover hash lemma of <ref> [26] </ref>, which works under the weaker assumption that the hash functions in question are universal 2 in the sense of [10], rather than pairwise independent.) 2 Theorem 4.1 Let G = fG x jx 2 Ag and H = fH y jy 2 Bg be polynomial-time computable families of groups, let
Reference: [27] <author> A. Joux and J. Stern, </author> <title> Improving the critical complexity of the Lagarias Odlyzko attack against subset sum problems, </title> <booktitle> Proc. of 8th International Conference on Fundamentals of Computation Theory, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1991, </year> <pages> pp. 258-264. </pages>
Reference-contexts: Many NP-Complete problems are known to have polynomial average case algorithms. The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers <ref> [8, 12, 15, 27, 31] </ref>. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. <p> This was improved very recently by Coster, LaMac-chia, Odlyzko and Schnorr [12] and Joux and Stern <ref> [27] </ref> who showed a different transformation that has the property that the vector corresponding to the solution is the shortest whenever `(n) &gt; 1:0629 n. ([12] also contains some evidence showing the limitation of this method.) The above mentioned papers suggest as a second stage finding the these shortest vectors using
Reference: [28] <author> R. M. Karp, </author> <title> Reducibility among combinatorial problems, in Complexity of Computer Computation, </title> <editor> ed. R. E. Miller and J. W. Thatcher, </editor> <address> New York: </address> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: As mentioned before, this function is in the class N C 1 and all of the construction in this paper can be implemented in N C. 1.2 The complexity of subset sum Subset sum is one of the original problems that Karp <ref> [28] </ref> proved to be NP-Hard, (i.e the corresponding decision problem is NP-Complete). However, although this probably means that no feasible worst case algorithm exists for this problem, it says little about the hardness of a random instance. Many NP-Complete problems are known to have polynomial average case algorithms.
Reference: [29] <author> M. Kharitonov, </author> <title> Cryptographic lower bounds for learnability of Boolean functions on the uniform distribution, </title> <booktitle> Proc. 5th COLT, </booktitle> <publisher> Morgan Kaufman, </publisher> <year> 1992. </year>
Reference-contexts: This is the first example of such functions. In contrast, Linial, Mansour and Nisan [33] have shown that no pseudo-random function generator, as defined by Goldreich, Goldwasser and Micali [20], can be implemented in AC 0 . We should also note that our results have been applied by Kharitonov <ref> [29] </ref> to show the hardness of learning problems. The basic idea is to generalize a method suggested by Babai [2] and Boppana and Lagarias [6].
Reference: [30] <author> H. Krawczyk, </author> <title> Secret Sharing Made Short, </title> <booktitle> Proc. of Advances in Cryptology - Crypto '93, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1994, </year> <pages> pp. 136-146. </pages>
Reference-contexts: These include: private key encryption [22, 20, 34], bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing <ref> [30] </ref>. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub [4] constructed a pseudo-random generator based on quadratic residuosity.
Reference: [31] <author> J. C. Lagarias and A. M. Odlyzko, </author> <title> Solving low density subset sum problems, </title> <journal> J. of the ACM, </journal> <volume> vol 32, </volume> <pages> pp. 229-246, </pages> <year> 1985. </year>
Reference-contexts: Many NP-Complete problems are known to have polynomial average case algorithms. The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers <ref> [8, 12, 15, 27, 31] </ref>. For the case l (n) &gt; n 2 , Lagarias and Odlyzko [31] and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. <p> The subset problem under the assumption that the inputs are chosen uniformly at random has been investigated in a number of papers [8, 12, 15, 27, 31]. For the case l (n) &gt; n 2 , Lagarias and Odlyzko <ref> [31] </ref> and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. The Lagarias-Odlyzko [31] and Brickell [8] algorithms mentioned above transform the subset sum problem into a shortest vector in lattice problem. <p> For the case l (n) &gt; n 2 , Lagarias and Odlyzko <ref> [31] </ref> and Brickell [8] have shown a feasible algorithm which solves this problem for almost all instances of these dimensions. The Lagarias-Odlyzko [31] and Brickell [8] algorithms mentioned above transform the subset sum problem into a shortest vector in lattice problem.
Reference: [32] <author> A. K. Lenstra, H. W. Lenstra and L. Lovasz, </author> <title> Factoring polynomials with rational coefficients, </title> <journal> Math. Ann., </journal> <volume> vol 261, </volume> <year> 1982, </year> <pages> 515-534. </pages>
Reference-contexts: the vector corresponding to the solution is the shortest whenever `(n) &gt; 1:0629 n. ([12] also contains some evidence showing the limitation of this method.) The above mentioned papers suggest as a second stage finding the these shortest vectors using the lattice base reduction algorithm of Lenstra, Lenstra and Lovasz <ref> [32] </ref> (or some modification of it, cf. [43]). This algorithm is not guaranteed to find a shortest vector but one that is at most 2 n times the shortest.
Reference: [33] <author> N. Linial, Y. Mansour and N. Nisan, </author> <title> Constant depth circuits, Fourier Transform, and Learnability, </title> <booktitle> Proc. of the 30th Symp. on Foundations of Computer Science, </booktitle> <year> 1989, </year> <pages> pp. 574-579. </pages>
Reference-contexts: If subset sum is secure for any length l (n), then our construction gives a one-way function and a pseudo-random generator computable in AC 0 . This is the first example of such functions. In contrast, Linial, Mansour and Nisan <ref> [33] </ref> have shown that no pseudo-random function generator, as defined by Goldreich, Goldwasser and Micali [20], can be implemented in AC 0 . We should also note that our results have been applied by Kharitonov [29] to show the hardness of learning problems.
Reference: [34] <author> M. Luby and C. Rackoff, </author> <title> How to Construct a Pseudo-random Permutation from a Pseudorandom function, </title> <journal> Siam J. on Computing, </journal> <volume> vol 17, </volume> <year> 1988, </year> <pages> pp. 373-386. 19 </pages>
Reference-contexts: These include: private key encryption <ref> [22, 20, 34] </ref>, bit commitment [37] ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log.
Reference: [35] <author> R. C. Merkle and M. Hellman, </author> <title> Hiding information and Signature in Trapdoor Knapsack, </title> <journal> IEEE Transaction on Information Theory, </journal> <volume> Vol 24, </volume> <year> 1978, </year> <pages> pp. 525-530. </pages>
Reference-contexts: However, none of these schemes have been proven to be as secure as subset sum, and, in fact, most of them have been broken. See Brickell and Odlyzko [9] and Odlyzko [40] for a survey. The first to suggest using subset sum were Merkle and Hellman <ref> [35] </ref>, and the only method for using subset sum in a public key protocol that has not been broken is Chor and Rivest's [11]. The approach taken here is different in two ways. We are less ambitious, and are not attempting to construct a public key cryptosystem.
Reference: [36] <author> S. Micali and C. P. </author> <title> Schnorr Efficient, Perfect Polynomial Random Number Generators, </title> <journal> J. of Cryptology, </journal> <volume> vol 3, </volume> <year> 1991, </year> <pages> pp. 157-172. </pages>
Reference-contexts: Our construction obtains O (n) bits per application of the one-way function, (which is the subset sum function). As was pointed out in Micali and Schnorr <ref> [36] </ref>, the technique of [20] can be used to generate pseudorandom sequences of any polynomial length in parallel, once a way of generating in parallel n + O (n) bits from n bits is given.
Reference: [37] <author> M. Naor, </author> <title> Bit Commitment Using Pseudo-Randomness, </title> <journal> J. of Cryptology, </journal> <volume> vol 4, </volume> <year> 1991, </year> <pages> pp. 151-158. </pages>
Reference-contexts: These include: private key encryption [22, 20, 34], bit commitment <ref> [37] </ref> ( the strong committer variant, which allows zero knowledge proofs [21]) and succinct secret sharing [30]. Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub [4] constructed a pseudo-random generator based on quadratic residuosity. <p> Proof: Analogous to Theorem 3.1. 2. 5 Bit Commitment vs. a Strong Receiver Bit commitment is a basic protocol which is useful and essential in many cryptographic applications, such as coin flipping by telephone [3], zero-knowledge and minimum disclosure proofs ([21, 7]) and identification schemes [13]. Naor <ref> [37] </ref> has shown how to implement bit commitment given any pseudo-random generator. His scheme suffices for the all applications above, except minimum disclosure. Furthermore, his scheme enables commit to n bits at the price of generating a pseudo-random sequence of length O (n). <p> 0 n=2 2 f0; 1g l (n) . (If there is no such third party, then the a i 's and a 0 i 's can be chosen via coin flipping over the telephone [3] which can be implemented using a bit commitment scheme vs a strong committer, as in <ref> [37] </ref>. This commitment can also be based on the hardness of subset sum.) The commit protocol to a bit b: 1. Alice chooses s 2 R f0; 1g n=2 . 2. If b = 0 then Alice sends Bob T = X a i 3.
Reference: [38] <author> M. Naor and M. Yung, </author> <title> Universal One Way Hash Functions and Their Cryptographic Applications, </title> <booktitle> Proc. 21st Annual Symposium on the Theory of Computing, </booktitle> <year> 1989, </year> <pages> pp. 33-43. </pages>
Reference-contexts: These tasks are known to be implementable based on any one way function ([24, 25, 37, 38, 21, 41]). However, the theoretical constructions suggested are extremely inefficient. We give very efficient constructions for primitives such as pseudo-random generators and universal one-way hash functions (defined in <ref> [38] </ref>) which can be used to implement the above tasks. To break our protocols is provably as hard as solving the subset sum problem for certain dimensions. Our constructions are extremely simple: at each step, it is only necessary to add n numbers of length O (n). <p> We say that such a y collides with x. Such functions were introduced by Naor and Yung <ref> [38] </ref>, who showed how they can be applied to various solve authentication problems, most notably signature schemes and public fingerprints for files. Naor and Yung showed how such a family can be constructed given any 1-1 one-way function.
Reference: [39] <author> M. Naor, R. Ostrovsky, R. Venkatesan and M. </author> <title> Yung Perfect Zero-Knowledge Arguments for NP Can be Based on General Complexity Assumptions, </title> <booktitle> Proc. of Advances in Cryptology - Crypto '92, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993, </year> <pages> pp. 196-214. </pages>
Reference-contexts: This primitive constructed under number theoretic assumptions was used by Brassard, Chaum and Crepeau [7] for minimum disclosure proofs. In section 5 we show how to construct this primitive based on subset sum. Recently, <ref> [39] </ref> have shown how to construct such a bit commitment from any one-way permutation; however their construction requires many rounds of interaction. <p> As mentioned, minimum disclosure requires a special kind of bit commitment, one which is secure vs. a computationally unlimited receiver. In [7] it is shown how to implement this kind of bit commitment based on factoring and discrete log. <ref> [39] </ref> show a general but highly interactive protocol, which can be based on any one-way permutation. 14 Bit commitment is a way for a committer Alice to send a receiver Bob a locked box containing a bit.
Reference: [40] <author> A. M. Odlyzko, </author> <title> The rise and fall of knapsack cryptosystems, in Cryptology and Computational Number Theory, </title> <editor> C. Pomerance ed., </editor> <booktitle> AMS Proc. Symp. Appl. Math, </booktitle> <volume> vol 42, </volume> <year> 1990, </year> <pages> pp. 75-88. </pages>
Reference-contexts: Many schemes were suggested that use this problem as the basis for public key encryption. However, none of these schemes have been proven to be as secure as subset sum, and, in fact, most of them have been broken. See Brickell and Odlyzko [9] and Odlyzko <ref> [40] </ref> for a survey. The first to suggest using subset sum were Merkle and Hellman [35], and the only method for using subset sum in a public key protocol that has not been broken is Chor and Rivest's [11]. The approach taken here is different in two ways.
Reference: [41] <author> J. Rompel, </author> <title> One-Way Functions are Necessary and Sufficient for Secure Signatures, </title> <booktitle> Proc. 22nd Symposium on Theory of Computing, </booktitle> <year> 1990, </year> <pages> pp. 387-394. </pages>
Reference: [42] <author> M. Santha and U. V. Vazirani, </author> <title> Generating Quasi-random Sequences from Slightly-random Sources, </title> <booktitle> Proc. 25th Symposium on the Theory of Computing, </booktitle> <year> 1984, </year> <pages> pp. 434-440. </pages>
Reference-contexts: The applications we give for these two cases are consequently quite different. We use the first case for pseudorandom generation, and the second case for one-way hashing. We can quantify "almost onto" and "almost 1-1" as follows: The following definition of Santha and Vazirani <ref> [42] </ref> describes distributions that are close enough to uniform for our purposes. Definition 1.2 [42] Let D be a probability distribution on f0; 1g m . <p> We use the first case for pseudorandom generation, and the second case for one-way hashing. We can quantify "almost onto" and "almost 1-1" as follows: The following definition of Santha and Vazirani <ref> [42] </ref> describes distributions that are close enough to uniform for our purposes. Definition 1.2 [42] Let D be a probability distribution on f0; 1g m .
Reference: [43] <author> C. P. Schnorr and M. Euchner, </author> <title> Lattice base reduction: improved practical algorithms for solving subset sum problems, </title> <journal> Mathematical Programming, </journal> <volume> vol 66 (1994), </volume> <pages> pp. 181-199. </pages>
Reference-contexts: the shortest whenever `(n) &gt; 1:0629 n. ([12] also contains some evidence showing the limitation of this method.) The above mentioned papers suggest as a second stage finding the these shortest vectors using the lattice base reduction algorithm of Lenstra, Lenstra and Lovasz [32] (or some modification of it, cf. <ref> [43] </ref>). This algorithm is not guaranteed to find a shortest vector but one that is at most 2 n times the shortest. In order to get that with high probability the shortest vector is much shorter than the other vectors, one has to require `(n) &gt; n 2 . <p> The recent papers <ref> [43] </ref> and [44] report extensive experimental work on the subset sum problem and several variants. They manage to solve problems of size up to n = 74 in moderate amount of computation.
Reference: [44] <author> C. P. Schnorr and H. H. Horner, </author> <title> Attacking the Chor-Rivest Cryptosystem by Improved Lattice Reduction, </title> <type> manuscript, </type> <year> 1994. </year>
Reference-contexts: The recent papers [43] and <ref> [44] </ref> report extensive experimental work on the subset sum problem and several variants. They manage to solve problems of size up to n = 74 in moderate amount of computation. From the discussion above it is clear that the subset sum of the dimensions we require is receiving considerable attention.
Reference: [45] <author> R. Schroeppel and A. Shamir, </author> <title> A T S 2 = O(2 n ) time/space tradeoff for certain NP-Complete problems, </title> <booktitle> Proc. 20th Symposium on Foundations of Computer Science, </booktitle> <year> 1979, </year> <pages> pp. 328-336. </pages>
Reference-contexts: dense problems, `(n) &lt; 1=2 log n, there are more efficient algorithms, as was recently shown by Galil and Margalit [17]. ) For the length function `(n) = n, the best known attack takes time O (2 n=2 ) and space O (2 n=4 ) due to Schroeppel and Shamir <ref> [45] </ref>. The recent papers [43] and [44] report extensive experimental work on the subset sum problem and several variants. They manage to solve problems of size up to n = 74 in moderate amount of computation.
Reference: [46] <author> A. C. Yao, </author> <title> Theory and Applications of Trapdoor Functions, </title> <booktitle> Proc. 23rd Symposium on Foundations of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: Cryptographically strong pseudo-random generators were defined by Blum and Micali [5] who constructed a pseudo-random generator based on discrete-log. Blum, Blum and Shub [4] constructed a pseudo-random generator based on quadratic residuosity. Yao <ref> [46] </ref> showed that the definition given above is equivalent to that of Blum and Micali, and gave a general construction that can be based on any one-way permutation.
Reference: [47] <author> A. C. Yao, </author> <title> Separating the polynomial time hierarchy by oracles, </title> <booktitle> Proc. 26th Symposium on Foundations of Computer Science, </booktitle> <year> 1985, </year> <pages> pp. 1-10. 20 </pages>
Reference-contexts: It is known that the parity function cannot be computed in AC 0 and hence summing many numbers cannot be done in AC 0 [1, 16], (exponential lower 15 bounds on the size of a constant depth circuit to compute these functions are given in <ref> [47, 23] </ref>). However, we show that random instances of the subset sum problem can be generated in AC 0 . If subset sum is secure for any length l (n), then our construction gives a one-way function and a pseudo-random generator computable in AC 0 .
References-found: 47

