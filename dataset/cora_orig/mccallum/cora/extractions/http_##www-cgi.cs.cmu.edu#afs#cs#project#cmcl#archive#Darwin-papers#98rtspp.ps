URL: http://www-cgi.cs.cmu.edu/afs/cs/project/cmcl/archive/Darwin-papers/98rtspp.ps
Refering-URL: 
Root-URL: 
Title: Network-aware Distributed Computing: A Case Study  
Author: Hongsuda Tangmunarunkit and Peter Steenkiste 
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: The development of network-aware applications, i.e. applications that dynamically adapt to network conditions, has had some success in the domain of multimedia applications, but progress has been very slow for distributed computing applications. The reason is that the relationship between application performance and network performance is typically more complex for that class of applications, making adaptation di-cult. In this paper we introduce two adaptation methods for distributed computing applications, one based on a performance model and another based on balancing computation and communication time. We illustrate the two methods using a simple distributed application (matrix multiply) and compare their performance. We show that both methods can correctly estimate the best number of nodes to use on our testbed. We also show that both methods have weaknesses. Model-based adaptation requires an accurate performance model and is sensitive to errors in measurements of the system parameters. The ratio-based method is more robust but less general.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. Bolliger and Thomas Gross. </author> <title> A framework-based approach to the development of network-aware applications. </title> <note> Submitted for publication, </note> <year> 1997. </year>
Reference-contexts: Distributed computing applications running over (shared) networks tend to be much more complicated and they have received less attention. Some results are presented in <ref> [11, 1] </ref>. A related problem is that of mapping applications on distributed-memory system [12]. This problem is somewhat easier, since these systems have static, well-understood performance characteristics.
Reference: 2. <author> Jean-Chrysostome Bolot and Andres Vega-Garcia. </author> <title> Control mechanisms for packet audio in the internet. </title> <journal> In IEEE INFOCOM'96, </journal> <volume> volume 1, </volume> <pages> pages 232-239, </pages> <address> San Fran-cisco, CA, </address> <month> March </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio <ref> [6, 2] </ref> and video [5, 14, 7, 9] data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice <ref> [6, 2] </ref> and video [5, 14, 7, 9, 10] streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
Reference: 3. <author> Robert Carter and Mark Crovella. </author> <title> Server selection using dynamic path characterization. </title> <journal> In IEEE INFOCOM'97, </journal> <volume> volume 3, </volume> <pages> pages 8C-4, </pages> <address> Kobe, Japan, </address> <month> April </month> <year> 1997. </year> <note> IEEE. </note>
Reference-contexts: There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g. Web browsers) select the most appropriate server, based on the network conditions between the client and servers <ref> [3] </ref>. Another example is that of determining whether network conditions permit the ooading of tasks to other nodes. A lot of work on adaptive applications is done in the context of wireless networks, since network resources tend to be both scarce and variable in this context [10].
Reference: 4. <author> Tony DeWitt, Thomas Gross, Bruce Lowekamp, Nancy Miller, Peter Steenkiste, and Jaspal Subhlok. ReMoS: </author> <title> A Resource Monitoring System for Network Aware Applications. </title> <type> Technical Report CMU-CS-97-194, </type> <institution> Carnegie Mellon University, </institution> <month> De-cember </month> <year> 1997. </year>
Reference-contexts: Applications that use model-based adaptation collect information about system characteristics when they start up, either by querying the system through a special interface <ref> [4] </ref>, or by running a small set of benchmarks. The system parameters are then plugged into the system model, which yields the method of distribution (e.g. the number of nodes) that optimizes performance for this particular system conflguration.
Reference: 5. <author> R. Frederick. </author> <title> Network video (nv), </title> <note> 1993. Software available via ftp://ftp.parc.xerox.com/net-research. </note>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio [6, 2] and video <ref> [5, 14, 7, 9] </ref> data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video <ref> [5, 14, 7, 9, 10] </ref> streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
Reference: 6. <author> V. Jacobson and S. McCanne. </author> <title> Visual audio tool (vat), </title> <note> 1993. Software available via ftp://ftp.ee.lbl.gov/conferencing/vat. </note>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio <ref> [6, 2] </ref> and video [5, 14, 7, 9] data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice <ref> [6, 2] </ref> and video [5, 14, 7, 9, 10] streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
Reference: 7. <author> V. Jacobson and S. McCanne. Vic, </author> <year> 1995. </year> <note> Software available via ftp://ftp.ee.lbl.gov/conferencing/vic. </note>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio [6, 2] and video <ref> [5, 14, 7, 9] </ref> data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video <ref> [5, 14, 7, 9, 10] </ref> streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
Reference: 8. <author> Van Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of the SIG-COMM '88 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 314-329. </pages> <publisher> ACM, </publisher> <month> August </month> <year> 1988. </year>
Reference-contexts: In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP <ref> [8] </ref>) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video [5, 14, 7, 9, 10] streaming applications.
Reference: 9. <author> H. Kanakia, P. Mishra, and A. Reibman. </author> <title> An adaptive congestion control scheme for real time packet video transport. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(6) </volume> <pages> 671-682, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio [6, 2] and video <ref> [5, 14, 7, 9] </ref> data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video <ref> [5, 14, 7, 9, 10] </ref> streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
Reference: 10. <author> Brian Noble, M. Satyanarayanan, Dushyanth Narayanan, James Tilton, Jason Flinn, and Kevin Walker. </author> <title> Agile application-aware adaptation for mobility. </title> <booktitle> In Proceedings of the Sixteenth Symposium on Operating System Principles, </booktitle> <pages> pages 276-287, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: The system parameters are then plugged into the system model, which yields the method of distribution (e.g. the number of nodes) that optimizes performance for this particular system conflguration. This method has been used successfully for a small but diverse number of applications <ref> [11, 10] </ref>. Fig. 1. Impact of T flop on model accuracy (4 nodes) The success of model-based adaptation depends on having both an accurate performance model and accurate measurements of system characteristics. The latter turns out to be more challenging than one would expect. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video <ref> [5, 14, 7, 9, 10] </ref> streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g. <p> Another example is that of determining whether network conditions permit the ooading of tasks to other nodes. A lot of work on adaptive applications is done in the context of wireless networks, since network resources tend to be both scarce and variable in this context <ref> [10] </ref>. Distributed computing applications running over (shared) networks tend to be much more complicated and they have received less attention. Some results are presented in [11, 1]. A related problem is that of mapping applications on distributed-memory system [12].
Reference: 11. <author> Bruce Siegell and Peter Steenkiste. </author> <title> Automatic selection of load balancing parameters using compile-time and run-time information. </title> <journal> Concurrency Practice and Experience, </journal> <volume> 9(3) </volume> <pages> 275-317, </pages> <year> 1996. </year>
Reference-contexts: For example, the power of the end-points (e.g. FLOPS rating) relative to the performance of the network (e.g. sustainable Mbs) often has an impact on how many nodes should be used, or on the optimal pipeline depth for pipelined computations <ref> [11] </ref>. Since applications can be invoked on systems with widely difierent characteristics, it is important that they can adapt to a speciflc conflguration, i.e. they should be able to determine the optimal way of distributing themselves and the distribution may have to be changed during execution. <p> The system parameters are then plugged into the system model, which yields the method of distribution (e.g. the number of nodes) that optimizes performance for this particular system conflguration. This method has been used successfully for a small but diverse number of applications <ref> [11, 10] </ref>. Fig. 1. Impact of T flop on model accuracy (4 nodes) The success of model-based adaptation depends on having both an accurate performance model and accurate measurements of system characteristics. The latter turns out to be more challenging than one would expect. <p> Distributed computing applications running over (shared) networks tend to be much more complicated and they have received less attention. Some results are presented in <ref> [11, 1] </ref>. A related problem is that of mapping applications on distributed-memory system [12]. This problem is somewhat easier, since these systems have static, well-understood performance characteristics.
Reference: 12. <author> Jaspal Subhlok and Gary Vondran. </author> <title> Optimal latency-throughput tradeofis for data parallel pipelines. </title> <booktitle> In Proc. SPAA'96. ACM, </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: Distributed computing applications running over (shared) networks tend to be much more complicated and they have received less attention. Some results are presented in [11, 1]. A related problem is that of mapping applications on distributed-memory system <ref> [12] </ref>. This problem is somewhat easier, since these systems have static, well-understood performance characteristics.
Reference: 13. <author> Hongsuda Tangmunarunkit. </author> <title> Middleware for network-aware distributed computing applications. </title> <type> Undergraduate thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: We discuss related work and summarize in Sections 5 and 6. This paper is an extension of the flrst author's undergraduate thesis <ref> [13] </ref>. 2 Model-based adaptation Model-based adaptation is based on a performance model of the application that expresses performance as a function of system and application parameters.
Reference: 14. <author> Hideyuki Tokuda, Yoshito Tobe, Stephen Chou, and Jose Moura. </author> <title> Continuous Media Communication with Dynamic QOS Control Using ARTS with an FDDI Network. </title> <booktitle> In Proceedings of the SIGCOMM '92 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 88-98, </pages> <address> Baltimore, </address> <month> August </month> <year> 1992. </year> <title> ACM. This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: The problem of adaptation has received a fair bit of attention, especially in the area of multimedia, e.g. network-aware streaming of audio [6, 2] and video <ref> [5, 14, 7, 9] </ref> data. The performance of distributed computing applications tends to be much harder to characterize, making it more di-cult to make them network-aware. <p> In the networking area, transport protocols that do congestion avoidance (e.g. TCP/IP [8]) are an important example of adaptation to network conditions. In terms of application-speciflc adaptation to network conditions by network-aware applications, several groups have focused on continuous media tra-c streams, e.g. network-aware voice [6, 2] and video <ref> [5, 14, 7, 9, 10] </ref> streaming applications. There has been some work on non-multimedia network-aware applications, although the network-aware decision making is typically at a coarse level. One example is having storage-intensive applications (e.g.
References-found: 14

