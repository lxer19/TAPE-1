URL: http://www.cs.wustl.edu/cs/techreports/1991/wucs-91-25.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Email: email: caben@informatics.WUSTL.EDU  
Phone: phone: (314) 362-4322  
Title: CABeN: A Collection of Algorithms for Belief Networks  Correspond with:  
Author: Steve B. Cousins William Chen Mark E. Frisse Steve Cousins 
Address: 660 South Euclid Ave., Box 8121 St. Louis, MO 63110 USA  
Date: October, 1990 Revised January 22, 1992  
Affiliation: Medical Informatics Laboratory Washington University  Medical Informatics Laboratory Washington University School of Medicine  
Pubnum: WUCS-91-25  
Abstract: Portions of this report have been published in the Proceedings of the Fifteenth Annual Symposium on Computer Applications in Medical Care (November, 1991). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cooper GF. </author> <title> Probabilistic inference using belief networks is NP-hard. </title> <type> Technical Report KSL-87-27. </type> <institution> Medical Computer Science Group, Stanford University, Stanford, California. </institution> <year> 1987. </year>
Reference-contexts: Introduction A belief network is a formal knowledge representation and inference technique consisting of a directed graph and a set of conditional probabilities. Belief networks are an elegant, well-founded way to reason with uncertainty, but in general, inference with them is computationally intractable <ref> [1] </ref>. Fortunately, for many specific types of graphs, reasoning with belief networks in polynomial time is possible. For some graphs, algorithms exist to give an exact answer in a reasonable amount of time [2,3,4]. For many other graphs, approximation algorithms may be used. <p> The odds array does not have to be normalized to sum to 1. For example if T is state 0 and F is state 1, odds [0] = 2, odds <ref> [1] </ref> = 1 would set a 2:1 ratio for the node being T. <p> To access a specific conditional probability value, p (c j p 1 ; :::p n ), an index containing numeric values for the states of c and p 1 :::p n is passed to net-&gt;proto->proto (node,ind), with ind [0] being the state of the node, ind <ref> [1] </ref> being the state of the first parent, and so on. The easiest way to understand this may be to look at the code in the file modimenu.c. <p> "be all.h" extern Selecting *logic sampling; extern Proto test; main (argc,argv) int argc; char *argv []; f Network *net; int numsims; double error = 0.0; if (argc &lt; 4)f printf ("Usage: sample &lt;net&gt; &lt;numsims&gt;nn"); exit (1); g sscanf (argv [2]," net = malloc net (); net-&gt;proto = &test; ReadNetFile (net,argv <ref> [1] </ref>); CopyPriors (net); if (simulate (net,(Selecting *) &logic sampling,numsims,FALSE)) f printf ("nnnn Error in simulation routine!"); return ERR; g; /* The nodes of net now contain simulated answers in node-&gt;calc probs */ g 3.4 Statistics on Algorithm Performance The relevant statistics regarding algorithm performance are run time and error.
Reference: [2] <author> Pearl J. </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: In other words, CABeN implements Likelihood weighting, as well as Likelihood weighting with Markov scoring. The first three algorithms have been implemented from the description in Shachter [5], and we consulted Pearl <ref> [2] </ref> and Chavez [6,7] for details about their respective algorithms. We have done some analysis of the relative performance of these algorithms under various circumstances, following Shachter. Some of our results have confirmed those of Shachter, but others contradict some of his initial findings. <p> network read from a file in belief network file format: #include "be all.h" extern Selecting *logic sampling; extern Proto test; main (argc,argv) int argc; char *argv []; f Network *net; int numsims; double error = 0.0; if (argc &lt; 4)f printf ("Usage: sample &lt;net&gt; &lt;numsims&gt;nn"); exit (1); g sscanf (argv <ref> [2] </ref>," net = malloc net (); net-&gt;proto = &test; ReadNetFile (net,argv [1]); CopyPriors (net); if (simulate (net,(Selecting *) &logic sampling,numsims,FALSE)) f printf ("nnnn Error in simulation routine!"); return ERR; g; /* The nodes of net now contain simulated answers in node-&gt;calc probs */ g 3.4 Statistics on Algorithm Performance The relevant
Reference: [3] <author> S.L.Lauritzen, Spiegelhalter D. </author> <title> Local computations with probabilities on graphical structures and their application to expert systems. </title> <journal> J. Royal Statistical Society 1988;9 :157-224. </journal>
Reference-contexts: LineGraph, a serial order of ten nodes; BipartiteGraph, a two-layer graph with five parent nodes and five child nodes in which each node in the child node layer is connected to each node in the parent node layer; ExpertSystem1, a graph taken from an influential paper by Lauritzen and Spiegelhalter <ref> [3] </ref>; and MeSHGraph, a slightly modified 109-node graph taken from the MeSH cardiovascular diseases subtree. <p> Conditional probabilities for nodes with more than one parent were computed using the noisy-or function [8]. Probabilities for ExpertSystem1 were the same as those assigned by Lauritzen <ref> [3] </ref> with the exception that probabilities of 1 or 0 were modified slightly to simplify evaluation of the Pearl and Chavez algorithms (which require special treatment for values of 1 and 0). Figures 1.8 and 1.9 present our experimental results. For each algorithm, absolute mean-squared-error (mse) is plotted against CPU-time.
Reference: [4] <author> Neapolitan RE. </author> <title> Probabilistic Reasoning in Expert Systems: Theory and Algorithms. </title> <address> New York, NY: </address> <publisher> Wiley Interscience, </publisher> <year> 1990. </year>
Reference: [5] <author> Shachter R, Peot M. </author> <title> Simulation approaches to general probabilistic inference on belief networks. </title> <editor> In: Henrion M, Shachter R, Kanal L, Lemmer J, eds. </editor> <booktitle> Uncertainty in Artificial Intelligence 5 . Amsterdam: </booktitle> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> 1990 221-31. 
Reference-contexts: In other words, CABeN implements Likelihood weighting, as well as Likelihood weighting with Markov scoring. The first three algorithms have been implemented from the description in Shachter <ref> [5] </ref>, and we consulted Pearl [2] and Chavez [6,7] for details about their respective algorithms. We have done some analysis of the relative performance of these algorithms under various circumstances, following Shachter. Some of our results have confirmed those of Shachter, but others contradict some of his initial findings. <p> In the rest of this introduction, the CABeN algorithms for computing approximate solutions are described and compared. 1.2 The Algorithms In this section we provide an informal, high-level description of the algorithms we have implemented in this package. For a more rigorous, mathematical treatment see Shachter's recent paper <ref> [5] </ref>. Our intent here is to give enough detail for the reader to get an intuitive understanding of the algorithms. We first describe a brute force algorithm for propagating belief network values.
Reference: [6] <author> Chavez RM, </author> <title> Cooper GF. A fully polynomial randomized approximation scheme for the bayesian inference problem (working paper). </title> <type> Technical report. </type> <institution> Stanford University, Stanford California. </institution> <month> Fall, </month> <year> 1988. </year>
Reference: [7] <author> Chavez RM, </author> <title> Cooper GF. A randomized approximation algorithm for probabilistic inference on bayesian belief networks. </title> <booktitle> Networks 1990;20 :661-85. </booktitle>
Reference: [8] <author> Cooper GF. </author> <title> Current research directions in the development of expert systems based on belief networks. Applied Stochastic Models and Data Analysis 1989;5 :39-52. </title>
Reference-contexts: The argument in favor of belief networks, made by Pearl and others, is that only belief networks are based on a really firm theoretical foundation: probability theory. One use of belief networks has been in the field of expert systems <ref> [8] </ref>. A rule based system might contain a rule, "If A, then conclude B with certainty C." In probabilistic terms, this would correspond to the conditional probability statement p (B j A) = C. <p> Conditional probabilities for nodes with more than one parent were computed using the noisy-or function <ref> [8] </ref>. Probabilities for ExpertSystem1 were the same as those assigned by Lauritzen [3] with the exception that probabilities of 1 or 0 were modified slightly to simplify evaluation of the Pearl and Chavez algorithms (which require special treatment for values of 1 and 0).
Reference: [9] <author> Henrion M. </author> <title> An introduction to algorithms for inference in belief nets. </title> <editor> In: Henrion M, Shachter R, Kanal L, Lemmer J, eds. </editor> <booktitle> Uncertainty in Artificial Intelligence 5 . Amsterdam: </booktitle> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> 1990 129-38. 
Reference: [10] <author> Cousins SB, Chen W, Frisse ME. CABeN: </author> <title> A collection of algorithms for belief networks. </title> <type> Technical Report wucs-91-25. </type> <institution> Washington University, </institution> <address> St. Louis, MO. </address> <year> 1991. </year>
Reference-contexts: Each algorithm was run both with and without Markov blanket scoring. We present data only for the mode in which each algorithm performed the best (as determined by previous criteria <ref> [10] </ref>). In the illustrations, Markov scoring is indicated by a `/M' following the algorithm's name.
Reference: [11] <author> Frisse ME, </author> <title> Cousins SB. Information retrieval from hypertext: Update on the Dynamic Medical Handbook Project. </title> <editor> In: Meyrowitz N, ed. </editor> <booktitle> Proceedings of Hypertext 89 . New York: </booktitle> <publisher> ACM Press, </publisher> 1989 199-212. 
Reference: [12] <author> Cousins SB, </author> <title> Frisse ME. Query networks for medical information retrieval|assigning probabilistic relationships. </title> <editor> In: Miller RA, ed. </editor> <booktitle> Proceedings, Symposium on Computer Applications in Medical Care. </booktitle> <address> New York, NY: </address> <publisher> IEEE Computer Society, </publisher> 1990 800-4. <pages> 39 </pages>
References-found: 12

