URL: http://www.cs.utexas.edu/users/dmcl/papers/ps/FTCS98.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/allpapers.html
Root-URL: http://www.cs.utexas.edu
Title: Hybrid Message Logging Protocols for Fast Recovery  
Author: Sriram Rao, Lorenzo Alvisi, and Harrick M. Vin 
Address: UT Austin.  
Affiliation: Department of Computer Sciences,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. Alvisi and K. Marzullo. </author> <title> Message logging: Pessimistic, op timistic, causal, and optimal. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 24(2):149159, </volume> <month> February </month> <year> 1998. </year>
Reference-contexts: As an initial step towards the development of these new techniques, we have implemented a sender-based pessimistic protocol [5], a receiver-based pessimistic protocol [2] and a causal protocol <ref> [1] </ref> and studied their performance during recovery [4] 1 . All of these protocols log (1) the content and (2) the order of receipt of each message delivered by each process during its execution. Processes synchronously log on stable storage 2 the order of receipt, encoded in tuples called determinants.
Reference: [2] <author> A. Borg, J. Baumbach, and S. Glazer. </author> <title> A message system sup porting fault tolerance. </title> <booktitle> In Proceedings of the Symposium on Operating Systems Principles, pages 9099. ACM SIGOPS, </booktitle> <month> October </month> <year> 1983. </year>
Reference-contexts: As an initial step towards the development of these new techniques, we have implemented a sender-based pessimistic protocol [5], a receiver-based pessimistic protocol <ref> [2] </ref> and a causal protocol [1] and studied their performance during recovery [4] 1 . All of these protocols log (1) the content and (2) the order of receipt of each message delivered by each process during its execution.
Reference: [3] <author> O. P. Damani and V. K. Garg. </author> <title> How to recover efficiently and asynchronously when optimism fails. </title> <booktitle> In Proceedings of the 16th International Conference on Distributed Computing Sys tems, </booktitle> <pages> pages 108115, </pages> <year> 1996. </year>
Reference-contexts: As f increases, however, sender-based protocols become as much as 390% slower. The cause for this peformance degradation is the in 1 Our study includes also a receiver-based optimistic protocol <ref> [3] </ref>. For the sake of space, in this abstract we focus on pessimistic and causal protocols, which try to speed up recovery by preventing the rollback of correct processes.
Reference: [4] <author> S. Rao, L. Alvisi, and H. Vin. </author> <title> The cost of recovery in mes sage logging protocols. </title> <type> Technical Report 98-02, </type> <institution> University of Texas at Austin, </institution> <month> March </month> <year> 1998. </year>
Reference-contexts: As an initial step towards the development of these new techniques, we have implemented a sender-based pessimistic protocol [5], a receiver-based pessimistic protocol [2] and a causal protocol [1] and studied their performance during recovery <ref> [4] </ref> 1 . All of these protocols log (1) the content and (2) the order of receipt of each message delivered by each process during its execution. Processes synchronously log on stable storage 2 the order of receipt, encoded in tuples called determinants. <p> For the sake of space, in this abstract we focus on pessimistic and causal protocols, which try to speed up recovery by preventing the rollback of correct processes. A full discussion of our experiments can be found in <ref> [4] </ref> 2 Pessimistic protocols implement stable storage using the file server's disk, while causal protocols use the volatile memory of at least f + 1 processes, where f is the maximum number of concurrent failures. 3 Since the performance during recovery of causal and sender-based pessimistic protocols does not vary significantly,

References-found: 4

