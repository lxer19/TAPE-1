URL: http://www.cs.jhu.edu/~cypher/pubs/meshsub.ps
Refering-URL: http://www.cs.jhu.edu/~cypher/pubs/pubs.html
Root-URL: http://www.cs.jhu.edu
Title: Fault-Tolerant Meshes with Small Degree  
Author: Jehoshua Bruck Robert Cypher Ching-Tien Ho 
Abstract: This paper presents constructions for fault-tolerant two-dimensional mesh architectures. The constructions are designed to tolerate k faults while maintaining a healthy n by n mesh as a subgraph. They utilize several novel techniques for obtaining trade-offs between the number of spare nodes and the degree of the fault-tolerant network. We consider both worst-case and random fault distributions. In terms of worst-case faults, we give a construction that has constant degree and O(k 3 ) spare nodes. This is the first construction known in which the degree is constant and the number of spare nodes is independent of n. In terms of random faults, we present several new degree-6 and degree-8 constructions and show (both analytically and through simulations) that they can tolerate large numbers of randomly placed faults. fl A preliminary version of this paper appeared in Proceedings of the Fifth Annual ACM Symposium on Parallel Algorithms and Architectures, 1993. y California Institute of Technology, Mail Code 116-81, Pasadena, CA 91125, bruck@systems.caltech.edu. This research was performed while the author was at the IBM Almaden Research Center. z Dept. of Computer Science, Johns Hopkins University, 3400 N. Charles Street, Baltimore, MD 21218, cypher@cs.jhu.edu. This research was performed while the author was at the IBM Almaden Research Center. x IBM Almaden Research Center, 650 Harry Road, San Jose, CA 95120, ho@almaden.ibm.com. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, N. Alon, J. Bruck, R. Cypher, C.T. Ho, M. Noar and E. Szemeredi, </author> <title> Fault Tolerant Graphs, Perfect Hash Functions and Disjoint Paths, </title> <booktitle> Proc. of 33rd Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 693-702, </pages> <year> 1992. </year>
Reference: [2] <author> F. Annexstein, </author> <title> Fault Tolerance in Hypercube-Derivative Networks, </title> <booktitle> Proceedings of the 1st Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 179-188, </pages> <year> 1989. </year>
Reference-contexts: The first class consists of techniques which do not add redundancy to the desired architecture. Instead, these techniques attempt to mask the effects of faults by using the healthy part of the architecture to simulate the entire machine <ref> [2, 11, 17, 19, 23] </ref>. These techniques do not pay any costs for adding fault-tolerance, but they can experience a significant degradation in performance. The second class consists of techniques which do add redundancy to the desired architecture.
Reference: [3] <author> V. Balasubramanian and P. Banerjee, </author> <title> A Fault Tolerant Massively Parallel Processing Architecture, </title> <journal> J. of Parallel and Distributed Computing, </journal> <volume> vol. 4, </volume> <pages> pp. 363-383, </pages> <year> 1987. </year>
Reference: [4] <author> K. E. Batcher, </author> <title> Design of a Massively Parallel Processor, </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-29, no. 9, </volume> <pages> pp. 836-840, </pages> <month> September </month> <year> 1980. </year>
Reference: [5] <author> C. Berge, </author> <title> Graphs, page 218, a Theorem attributed to Moon, </title> <publisher> North-Holland, </publisher> <year> 1985. </year>
Reference-contexts: H n graphs have been created for all n 2 <ref> [5] </ref>. See Figure 4 for an example. nodes is even in (a) and is odd in (b).
Reference: [6] <author> G. </author> <title> Bilardi and F.P. Preparata, </title> <booktitle> Horizons of Parallel Computing, Future Tendencies in Computer Science and Applied Mathematics, </booktitle> <editor> A. Bensoussan and J.P. Verjus, </editor> <booktitle> Eds., </booktitle> <pages> pp. 155-174, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction As the number of processors in parallel machines increases, physical limitations and cost considerations will tend to favor interconnection networks with constant degree and short wires, such as mesh networks <ref> [6] </ref>. In fact, the two-dimensional mesh is already one of the most important interconnection networks for parallel computers. Examples of existing two-dimensional mesh computers include the MPP (from Goodyear Aerospace), VICTOR (from IBM), and DELTA and Paragon (from Intel).
Reference: [7] <author> J. Bruck, R. Cypher and C.-T. Ho, </author> <title> Fault-Tolerant de Bruijn and Shu*e-Exchange Networks, </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 5, no. 5, </volume> <pages> pp. 548-553, </pages> <year> 1994. </year>
Reference: [8] <author> J. Bruck, R. Cypher and C.-T. Ho, </author> <title> Tolerating Faults in a Mesh with a Row of Spare Nodes, </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 128, </volume> <pages> pp. 241-252, </pages> <year> 1994. </year>
Reference: [9] <author> J. Bruck, R. Cypher and C.-T. Ho, </author> <title> Wildcard Dimensions, Coding Theory and Fault-Tolerant Meshes and Hypercubes, </title> <booktitle> IEEE Transactions on Computers (to appear). Also appeared in Proceedings of the 23rd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pp. 260-267, </pages> <month> June </month> <year> 1993. </year>
Reference: [10] <author> J. Bruck, R. Cypher and C.-T. Ho, </author> <title> Fault-Tolerant Meshes and Hypercubes with Minimal Numbers of Spares, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 42, no. 9, </volume> <pages> pp. 1089-1104, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Definitions: Let n be a positive integer and let S be a set of integers in the range 1 through n 1. The graph C (n; S), called the n-node circulant graph with connection set S <ref> [16, 14, 10] </ref>, consists of n nodes numbered 0; 1; : : :; n 1. Each node i is connected to all nodes of the form (i s) mod n where s 2 S. <p> Each node i is connected to all nodes of the form (i s) mod n where s 2 S. The graph D (n; S), called the n-node diagonal graph with connection set S <ref> [10] </ref>, consists of n nodes numbered 0; 1; : : : ; n 1. <p> The circulant graph C (n + k; T ) is a k-FT C (n; S). Theorem 2.2 <ref> [10] </ref> Let n be a positive integer, let y = dn=3e, let S be a set of integers in the range 1 through y, let k be a positive integer, and let T = expand (S; bk=2c). <p> We will focus on the problem of creating fault-tolerant graphs for the mesh M n;n . We will present six constructions for fault-tolerant meshes, analyze their asymptotic fault-tolerance, and study their fault-tolerance for realistic values of n. The first three constructions are simple generalizations of previously known constructions <ref> [10] </ref> designed to tolerate worst-case fault distributions, while the remaining three constructions are new. In particular, the fourth construction introduces the concept of adding "dummy faults" in order to provide a fairly regular fault pattern.
Reference: [11] <author> J. Bruck, R. Cypher and D. Soroker, </author> <title> Tolerating Faults in Hypercubes Using Subcube Partitioning, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 41, no. 5, </volume> <pages> pp. 599-605, </pages> <year> 1992. </year>
Reference-contexts: The first class consists of techniques which do not add redundancy to the desired architecture. Instead, these techniques attempt to mask the effects of faults by using the healthy part of the architecture to simulate the entire machine <ref> [2, 11, 17, 19, 23] </ref>. These techniques do not pay any costs for adding fault-tolerance, but they can experience a significant degradation in performance. The second class consists of techniques which do add redundancy to the desired architecture.
Reference: [12] <author> R. Cypher, </author> <title> Theoretical Aspects of VLSI Pin Limitations, </title> <journal> SIAM Journal on Computing, </journal> <volume> vol. 22, no. 2, </volume> <pages> pp. 356-378, </pages> <year> 1993. </year>
Reference-contexts: In fact, most existing parallel machines have one, or at most a few, processors per chip. This fact motivates our concern with the degree of the fault-tolerant network (because of the limited number of pins available to connect one chip to another <ref> [12] </ref>). The remainder of this paper is organized as follows. Definitions and several previously known results are given in Section 2.
Reference: [13] <author> S. Dutt and J. P. Hayes, </author> <title> On Designing and Reconfiguring k-Fault-Tolerant Tree Architectures, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-39, no. 4, </volume> <pages> pp. 490-503, </pages> <month> April </month> <year> 1990. </year>
Reference: [14] <author> S. Dutt and J. P. Hayes, </author> <title> Designing Fault-Tolerant Systems Using Automorphisms, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> vol. 12, </volume> <pages> pp. 249-268, </pages> <year> 1991. </year> <month> 27 </month>
Reference-contexts: Definitions: Let n be a positive integer and let S be a set of integers in the range 1 through n 1. The graph C (n; S), called the n-node circulant graph with connection set S <ref> [16, 14, 10] </ref>, consists of n nodes numbered 0; 1; : : :; n 1. Each node i is connected to all nodes of the form (i s) mod n where s 2 S. <p> The construction for diagonal target graphs has lower degree because a cluster of faults can be avoided by placing the cluster in the position where the missing wraparound edges would jump over them. Theorem 2.1 <ref> [14] </ref> Let n be a positive integer, let S be a set of integers in the range 1 through n 1, let k be a nonnegative integer, and let T = expand (S; k). The circulant graph C (n + k; T ) is a k-FT C (n; S).
Reference: [15] <author> S. Dutt and J. P. Hayes, </author> <title> Some Practical Issues in the Design of Fault-Tolerant Multi--processors, </title> <booktitle> Proceedings of the 21st International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pp. 292-299, </pages> <month> June </month> <year> 1991. </year>
Reference: [16] <author> B. Elspas and J. Turner, </author> <title> "Graphs with circulant adjacency matrices", </title> <journal> Journal of Combinatorial Theory, </journal> <volume> No. 9, </volume> <year> 1970, </year> <pages> pp. 297-307. </pages>
Reference-contexts: Definitions: Let n be a positive integer and let S be a set of integers in the range 1 through n 1. The graph C (n; S), called the n-node circulant graph with connection set S <ref> [16, 14, 10] </ref>, consists of n nodes numbered 0; 1; : : :; n 1. Each node i is connected to all nodes of the form (i s) mod n where s 2 S.
Reference: [17] <author> J. Hastad, F. T. Leighton and M. Newman, </author> <title> Fast Computations using Faulty Hyper-cubes, </title> <booktitle> Proceedings of 21st Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 251-284, </pages> <year> 1989. </year>
Reference-contexts: The first class consists of techniques which do not add redundancy to the desired architecture. Instead, these techniques attempt to mask the effects of faults by using the healthy part of the architecture to simulate the entire machine <ref> [2, 11, 17, 19, 23] </ref>. These techniques do not pay any costs for adding fault-tolerance, but they can experience a significant degradation in performance. The second class consists of techniques which do add redundancy to the desired architecture.
Reference: [18] <author> J. P. Hayes, </author> <title> A Graph Model for Fault-Tolerant Computing Systems, </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-25, no. 9, </volume> <pages> pp. 875-884, </pages> <month> September </month> <year> 1976. </year>
Reference-contexts: The goal with these techniques is to maintain the full performance of the desired architecture while minimizing the cost of the redundant components. One of the most powerful techniques for adding redundancy is based on a graph-theoretic model of fault-tolerance <ref> [18] </ref>. In this model, the desired architecture is viewed as a graph (called the target graph) and a fault-tolerant graph is created such that after the removal of k faulty nodes, the target graph is still present as a subgraph.
Reference: [19] <author> C. Kaklamanis, A. R. Karlin, F. T. Leighton, V. Milenkovic, P. Raghavan, S. Rao, C. Thomborson and A. Tsantilas, </author> <title> Asymptotically Tight Bounds for Computing with Faulty Arrays of Processors, </title> <booktitle> Proc. of 31st Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 285-296, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The first class consists of techniques which do not add redundancy to the desired architecture. Instead, these techniques attempt to mask the effects of faults by using the healthy part of the architecture to simulate the entire machine <ref> [2, 11, 17, 19, 23] </ref>. These techniques do not pay any costs for adding fault-tolerance, but they can experience a significant degradation in performance. The second class consists of techniques which do add redundancy to the desired architecture.
Reference: [20] <author> S.-Y. Kuo and W. K. Fuchs, </author> <title> Efficient Spare Allocation for Reconfigurable Arrays, </title> <booktitle> IEEE Design and Test, </booktitle> <pages> pp. 24-31, </pages> <month> February </month> <year> 1987. </year>
Reference: [21] <author> F. T. Leighton, </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: c grid by using the standard technique of placing the first half of the torus columns (rows) in increasing order in the even numbered columns (rows) of the grid and the remaining torus columns (rows) in decreasing order in the odd numbered columns (rows) of the grid (see, for example, <ref> [21, p. 246] </ref>). Finally, each node in M 0 can be layed out using an O (k) by O (k) square.
Reference: [22] <author> F. T. Leighton and C. E. Leiserson, </author> <title> Wafer Scale Integration of Systolic Arrays, </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-34, no. 5, </volume> <pages> pp. 448-461, </pages> <month> May </month> <year> 1985. </year>
Reference: [23] <author> T. Leighton, B. Maggs and R. Sitaraman, </author> <title> On the Fault Tolerance of Some Popular Bounded-Degree Networks, </title> <booktitle> Proc. of 33rd Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 542-552, </pages> <year> 1992. </year>
Reference-contexts: The first class consists of techniques which do not add redundancy to the desired architecture. Instead, these techniques attempt to mask the effects of faults by using the healthy part of the architecture to simulate the entire machine <ref> [2, 11, 17, 19, 23] </ref>. These techniques do not pay any costs for adding fault-tolerance, but they can experience a significant degradation in performance. The second class consists of techniques which do add redundancy to the desired architecture.
Reference: [24] <author> M. Paoli, W. W. Wong and C. K. Wong, </author> <title> Minimum k-Hamiltonian Graphs, II, </title> <journal> J. of Graph Theory, </journal> <volume> Vol. 10, </volume> <pages> pp. 79-95, </pages> <year> 1986. </year>
Reference: [25] <author> A. L. Rosenberg, </author> <title> The Diogenes Approach to Testable Fault-Tolerant VLSI Processor Arrays, </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. C-32, no. 10, </volume> <pages> pp. 902-910, </pages> <month> October </month> <year> 1983. </year>
Reference: [26] <author> V. P. Roychowdhury, J. Bruck and T. Kailath, </author> <title> Efficient Algorithms for Reconfiguration in VLSI/WSI Arrays, </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-39, no. 4, </volume> <pages> pp. 480-489, </pages> <month> April </month> <year> 1990. </year>
Reference: [27] <author> H. Tamaki, </author> <title> Construction of the mesh and the torus tolerating a large number of faults, </title> <booktitle> Proc. 6th Annual ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 268-277, </pages> <year> 1994. </year>
Reference-contexts: This is the first construction known in which the degree is constant and the number of spares is independent of n. The only other known constant degree construction for this problem 2 requires fi (n 2 ) spares <ref> [27] </ref>. In terms of random faults, we present several new degree-6 and degree-8 constructions and show (both analytically and through simulations) that they can tolerate large numbers of randomly placed faults. Our constructions require at most O (n) spares and appear to be of practical interest. <p> Our constructions require at most O (n) spares and appear to be of practical interest. The only other known construction that is proven to tolerate large numbers of random faults was created by Tamaki <ref> [27] </ref>. That construction can tolerate nodes and edges which fail with constant probability, but requires fi (n 2 ) spares and has degree O (log log n) [27]. <p> The only other known construction that is proven to tolerate large numbers of random faults was created by Tamaki <ref> [27] </ref>. That construction can tolerate nodes and edges which fail with constant probability, but requires fi (n 2 ) spares and has degree O (log log n) [27]. In addition, our construction for worst-case faults is shown to require only wires of length O (k 3 ) in Thompson's VLSI model [28], while our constructions for random faults are shown to require only constant length wires.
Reference: [28] <author> C. Thompson, </author> <title> A Complexity Theory for VLSI, </title> <type> Ph.D. Thesis, </type> <institution> Dept. of Computer Science, Carnegie-Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1980. </year>
Reference-contexts: In addition, our construction for worst-case faults is shown to require only wires of length O (k 3 ) in Thompson's VLSI model <ref> [28] </ref>, while our constructions for random faults are shown to require only constant length wires. Thus our fault-tolerant constructions maintain much of the scalability of the mesh network. <p> The details are omitted. Finally, we will consider laying out the fault-tolerant graph ^ M using Thompson's VLSI model <ref> [28] </ref>. One of the greatest advantages of two-dimensional mesh networks is that they can be laid out using only short (constant length) wires. The following theorem shows that the fault-tolerant graph ^ M may require somewhat longer wires, but the wire lengths are still independent of n. <p> However, by combining these two techniques, M 6 (n; k) is the only degree 6 network that is capable of tolerating fi (n 2=3 ) faults. Finally, we will consider laying out the fault-tolerant graphs presented in this section using Thompson's VLSI model <ref> [28] </ref>. The following theorem shows that, just like the mesh itself, all of the fault-tolerant constructions can be laid out with constant length wires.
Reference: [29] <author> W. W. Wong and C. K. Wong, </author> <title> Minimum k-Hamiltonian Graphs, </title> <journal> J. of Graph Theory, </journal> <volume> Vol. 8, </volume> <pages> pp. 155-165, </pages> <year> 1984. </year> <month> 28 </month>
References-found: 29

