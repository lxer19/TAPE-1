URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1998/98-05.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1998.html
Root-URL: http://www.cs.rutgers.edu
Email: (des-per@math.rutgers.edu)  
Title: Problem: an Overview  
Author: by Richard Desper ; 
Address: Piscataway, NJ 08903, USA.  
Affiliation: 2 Department of Mathematics, Rutgers University,  
Note: The Set-Maxima  Supported in part by NSF grant 9215293 and in part by grant NSF BIR 94-12594. DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs-Research, Bell Labs and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 98-05 January 1998 
Abstract-found: 1
Intro-found: 1
Reference: [AHU] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley, </publisher> <year> 1974. </year>
Reference-contexts: The difference is that the SELECT algorithm divides the original set into sets of size five, whereas the original algorithm divides the original set into sets of size seven. This change produces a slightly different cost. The algorithm SELECT is taken from <ref> [AHU] </ref>. The algorithm SELECT takes as its input a set S of size n, with an unknown underlying total order, and a value k n.
Reference: [Al] <author> N. Alon, </author> <title> "Eigenvalues, Geometric Expanders, Sorting in Rounds, and Ramsey Theory," </title> <journal> Combinatorica 6 (1986) pp. </journal> <pages> 207-219. </pages>
Reference-contexts: Both cases will use the following result: Lemma 5.1 Let Y be a non-empty set of points in P G (d; q). Then Y misses at most O ( nq jY j ) hyperplanes. The interested reader is referred to <ref> [Al] </ref> for the proof of this lemma. We first consider projective planes. Here n = jXj = q 2 + q + 1. Let S = fS 1 ; S 2 ; : : : ; S n g be an ordering of the lines.
Reference: [Ba] <author> L.M. Batten, </author> <title> Combinatorics of Finite Geometries, </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: We shall define the projective geometry P G (d; q) for d 2; and also define projective planes, which may be thought of as generalizations of P G (2; q). For more information about projective geometries, the interested reader is referred to a good text on geometries, for example <ref> [Ba] </ref>. For any prime power q, and d 2; let V d+1 (q) be the (d+1)-dimensional vector space over the finite field GF (q) with q elements.
Reference: [BMN] <author> A. Bar-Noy, B. Motwani, and J. Naor, </author> <title> "A Linear Time Approach to the Set Maxima Problem." </title>
Reference-contexts: Second is the cost P n i j 1) of finding the maxima of the sets fS 0 i g. In both cases considered in <ref> [BMN] </ref>, we can simultaneously get O (n) bounds for each of these costs, because of the "expansion" properties of the set systems fS i g. The first cost is easily bounded for any finite-entropy rank-sequence. <p> It is still not known whether there exists a deterministic algorithm which would can achieve an o (n log n) bound, say, when m = n. Furthermore, we essentially know no non-trivial (!(n)) lower bounds for m = n. Deterministic algorithms exist for the cases explored in [K] and <ref> [BMN] </ref>, but the algorithms for these cases depend upon special features of the set-systems, and do not appear to generalize readily to arbitrary set-systems. The Komlos algorithm would appear to be impossible to generalize, as it relies heavily upon properties of trees.
Reference: [DRT] <author> B. Dixon, M. Rauch, and R. E. Tarjan, </author> <title> "Verification and sensitivity analysis of minimum spanning trees in linear time," </title> <journal> SIAM J. of Computing 21, </journal> <year> 1992, </year> <pages> pp. 1184-1192. </pages>
Reference-contexts: Its cost is only considered with regard to implementation. Komlos only achieves linear-time implementation in the setting of strings. A variation on the Komlos algorithm, presented in <ref> [DRT] </ref>, achieves linear-time implementation in all settings, but that result is not within the scope of this paper. 4.2 The Full-Branching Tree The second extreme example is the case of a full-branching tree.
Reference: [GKKS] <author> W. Goddard, C. Kenyon, V. King, and L. Schulman, </author> <title> Optimal Randomized Algorithms for Local Sorting and Set-Maxima." </title>
Reference-contexts: The total number of such acyclic orientations is given the unfortunate designation ff (G) by <ref> [GKKS] </ref>. To avoid confusing this parameter with the independence number, we will use the label acorns (G) or a (G) to denote the number of acyclic orientations. The term "acorns," has been used by L. Schulman in this context. <p> Proposition: The following relationships hold between these four parameters: q Proof: 1. D (G) F (G). This inequality follows directly from the fact that for any positive, integral value of x, p 2. F (G) a (G). This proof, due to <ref> [GKKS] </ref>, uses induction on jGj. Let ffi denote the minimal degree of G. The case ffi = 0 is done by induction. Assuming ffi 1; let v be a vertex of minimal degree. <p> In this problem, we are asked for the t largest elements of each set, in order. By convention, if t &gt; jS i j, t-maxima asks that S i be returned fully sorted. The following is the <ref> [GKKS] </ref> algorithm LARGE, which finds the largest t elements of each of the subsets S 1 ; : : : ; S m of the universe X. LARGE is recursive, and includes a call to the analogous algorithm SMALL (which is just the mirror image of LARGE).
Reference: [GYY] <author> R. Graham, F. Yao, and A. Yao, </author> <title> "Information Bounds are Weak in the Shortest Distance Problem," </title> <journal> JACM 27 (1980) pp. </journal> <pages> 428-444. </pages>
Reference-contexts: This quantity is referred to as the information-theory lower bound. 2.1 Feasible Vectors Research on the set-maxima problem was initiated by the following proof that the information theory lower bound is low. This result of Fredman is taken from <ref> [GYY] </ref>. Let v = (v 1 ; ::; v m ) be called a feasible vector on (X; S) if there is some ordering of the underlying set X such that v i = max S i for all i.
Reference: [HLP] <author> G.H. Hardy, J.E. Littlewood, and G. Polya, </author> <title> "Some simple inequalities satisfied by convex functions," </title> <booktitle> Messenger of Mathematics 58, </booktitle> <pages> 145-152. </pages>
Reference-contexts: Proof of Claim: Let p 0 = (p 1 ; : : : ; p k ) satisfy P k P By a classic result of Hardy, Littlewood, and Polya <ref> [HLP] </ref>, since h (x) = x log (1=x) is a concave function on (0; 1), P P P P p i , we observe the inequality P P We evaluate H at p 0 to get the desired bound. max H (p) = H (p 0 ) = i&lt;k = i&lt;k
Reference: [H] <author> D. Harel, </author> <title> "A Linear Time Algorithm for the Lowest Common Ancestor Problem." </title>
Reference-contexts: Harel <ref> [H] </ref> has provided us with an algorithm which, after an O (n) preprocessing cost, will process any number of lowest common ancestor queries for a constant cost each. The SYMHEAP algorithm forms a symmetric heap using fewer than 2n comparisons, where n = jV j.
Reference: [Kn] <author> D. Knuth, </author> <title> The Art of Computer Programming, Vol. 3 Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: For k = 1, this problem is equivalent to the problem of finding the maximum of a set, which requires n 1 comparisons. The discussions throughout this section, including the historical background and the algorithms, are taken from <ref> [Kn] </ref>. For values of k greater than one, the k-selection problem dates back to the efforts of the reknowned author and mathematician, the Rev. C. L. <p> The following proof is taken from Knuth.<ref> [Kn] </ref> - 8 - Theorem 3.2 V t (n) n t + (t 1)dlog (n + 2 t)e. Proof:(From [Kn].) Given X, such that jXj = n, let X 1 be some subset of X, such that jX 1 j = n + 2 t. Let Y = fy 1 ; y 2 ; : : : ; y t2 g = X n X 1 . <p> The reader is again referred to <ref> [Kn] </ref>. In 1971, Blum produced a method of finding the median with O (n log log n) comparisons. Finally, in 1973, Rivest and Tarjan produced a linear-time algorithm for the problem.
Reference: [Ko] <author> J. Komlos, </author> <title> "Linear Verification for Spanning Trees," </title> <journal> Combinatorica 5 (1985) pp. </journal> <pages> 57-65. </pages>
Reference: [Ko2] <author> J. Komlos, </author> <title> private correspondence. </title>
Reference: [MT] <author> U. Manber and M. Tompa, </author> <title> "The Effect of Number of Hamiltonian Paths on the Complexity of a Vertex-Coloring Problem," </title> <journal> SIAM J. Comp. </journal> <volume> 13 (1984), </volume> <pages> pp. 109-115. </pages>
Reference-contexts: 1)( w2N f (d w ) and since f (x + 1)=f (x) is monotonically decreasing, F (G) F (G v)f (ffi + 1)( f (ffi) Applying the induction hypothesis yields the inequality F (G) a (G); our desired result. 3. a (G) F or (G). (This proof is from <ref> [MT] </ref>.) Index V as V = fv 1 ; v 2 ; : : : ; v n g. For each acyclic orientation O of G we use a depth-first search based on this ordering to define a forest, F (O), following the method described earlier.
References-found: 13

