URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-96-05.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Carafe User's Manual Release Alpha.5  
Author: Alvin Jee David Dahle Cyrus Bazeghi F. Joel Ferguson 
Note: Copyright c flRegents of the  
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering University of California, Santa Cruz  University of California  
Date: January 24, 1996  
Pubnum: UCSC-CRL-96-05  
Abstract: This document describes the command line user interface and the X window user interface for Carafe, the second generation Inductive Fault Analysis (IFA) program. This document also describes the Hemlock version of Carafe used for extracting faults in the interconnect regions of standard cell designs. The syntax of all the commands and their parameters are described in this document along with a description of the formats of the various files used and created by Carafe. 
Abstract-found: 1
Intro-found: 1
Reference: [Fer87] <author> F. Joel Ferguson. </author> <title> Inductive Fault Analysis of VLSI Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, Department of Electrical and Computer Engineering, </institution> <month> October </month> <year> 1987. </year>
Reference: [Lar90] <author> Tracy Larrabee. </author> <title> Efficient Generation of Test Patterns Using Boolean Satisfiability. </title> <type> PhD thesis, </type> <institution> Stanford University, Department of Computer Science, STAN-CS-90-1302, </institution> <month> February </month> <year> 1990. </year>
Reference-contexts: The new files have extensions of .bridger, .ccshort, .gateBreaks, .gateBridge, and .tdl. Please refer to Appendix B, Appendix C, Appendix E, Appendix F, and Appendix M for information on these file formats. These files are used by test pattern generators like Nemesis for Automatic Test Pattern Generation (ATPG) <ref> [Lar90] </ref> [TL92]. 63 Appendix A. Revision History This chapter lists all of the major changes of Carafe from one version to the next. A.1 Alpha-Alpha.1 28Nov1990 Comments in the technology file were not handled right.
Reference: [GCV80] <author> J. Galiay, Y. Crouzet, and M. Vergniault. </author> <title> Physical versus logical fault models in MOS LSI circuits: Impact on their testability. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(6):527-531, </volume> <month> June </month> <year> 1980. </year>
Reference: [JF93] <author> Alvin Jee and F. Joel Ferguson. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <booktitle> In Proceedings of the IEEE VLSI Test Symposium, </booktitle> <pages> pages 92-98, </pages> <year> 1993. </year>
Reference: [MAJC92] <author> P.C. Maxwell, R.C. Aitken, V. Johansen, and I. Chiang. </author> <title> The effectiveness of iddq, functional and scan tests: How many fault coverages do we need? In Proceedings of International Test Conference, </title> <address> pages 168-177. </address> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference: [Rog94] <author> Jeffrey S. Rogenski. </author> <title> Extraction of breaks in rectilinear layouts by plane sweeps. </title> <type> Technical Report UCSC-CRL-94-21, </type> <institution> University of California at Santa Cruz, Baskin Center for Computer Engineering, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: the Customizing Carafe chapter for more on planes. 4.3 Breaks Carafe also has the capability of extracting break faults, which result when a spot defect occurs consisting of missing conducting material or extra insulating material; research has shown breaks to be a common defect occurring in current CMOS fabrication processes <ref> [Rog94] </ref> [RF94]. Breaks can cause a node to split into two or more smaller nodes. This can 4.3. <p> Warning: conflicting groupings in merge. Note that since length-widths that do not cause breaks at the selected defect radii are deleted before the two sweep graphs are merged, this problem only occurs for relatively large defect sizes. See <ref> [Rog94] </ref> for more details about conflicts. There are a few cases where Carafe will introduce a small error in the critical area of a break.
Reference: [SMF85] <author> J.P. Shen, W. Maly, and F.J. Ferguson. </author> <title> Inductive fault analysis of MOS integrated circuits. </title> <journal> IEEE Design and Test of Computers, </journal> <volume> 2(6) </volume> <pages> 13-26, </pages> <month> December </month> <year> 1985. </year>
Reference: [WB81] <author> T.W. Williams and N.C. Brown. </author> <title> Defect level as a function of fault coverage. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(12):987-988, </volume> <month> December </month> <year> 1981. </year>
Reference: [SS95] <author> Gerald Spiegel and Albrecht P. Stroele. </author> <title> A Unified Approach to the Extraction of Realistic Multiple Bridging and Break Faults. </title> <institution> University of Karlsruhe, Institute of Computer Design and Fault Tolerance, </institution> <year> 1995. </year>
Reference-contexts: In addition, this chapter explains the important limitations of the various fault extractors and how these limitations may affect your results. 4.1 Compound Faults 4.1.1 Overview Carafe has recently added the capability of extracting compound faults <ref> [SS95] </ref>. A compound fault is the result of a spot defect simultaneously affecting an arbitrary number of objects in a circuit. Carafe extracts compound faults by first finding fault primitives.
Reference: [FL91] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test Pattern Generation for Realistic Bridge Faults in CMOS ICs. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 492-499, </pages> <year> 1991. </year>
Reference-contexts: Also the gate-level description generated by Hemlock facilitates fault simulation and test pattern generation of the extracted faults. For an example of how this is done, see <ref> [FL91] </ref>. 10.1 Installing Installing Hemlock consists of make a softlink to the Carafe executable name hemlock. The command-line to do this would look like this: ln -s /path_name/carafe hemlock 10.2 Running Hemlock Hemlock is invoked by entering hemlock at the command prompt.
Reference: [TL92] <author> Tracy Larrabee. </author> <title> Test pattern generation using boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 4-15, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The new files have extensions of .bridger, .ccshort, .gateBreaks, .gateBridge, and .tdl. Please refer to Appendix B, Appendix C, Appendix E, Appendix F, and Appendix M for information on these file formats. These files are used by test pattern generators like Nemesis for Automatic Test Pattern Generation (ATPG) [Lar90] <ref> [TL92] </ref>. 63 Appendix A. Revision History This chapter lists all of the major changes of Carafe from one version to the next. A.1 Alpha-Alpha.1 28Nov1990 Comments in the technology file were not handled right. Comments can now be inserted between tech sections. 29Nov1990 Labels on contacts were not handled correctly.
Reference: [RF94] <author> Jeffrey Rogenski and F. Joel Ferguson. </author> <title> Characterization of Opens in Logic Circuits. </title> <booktitle> In Proceedings of IEEE ASIC Conference, </booktitle> <year> 1994 </year>
Reference-contexts: Customizing Carafe chapter for more on planes. 4.3 Breaks Carafe also has the capability of extracting break faults, which result when a spot defect occurs consisting of missing conducting material or extra insulating material; research has shown breaks to be a common defect occurring in current CMOS fabrication processes [Rog94] <ref> [RF94] </ref>. Breaks can cause a node to split into two or more smaller nodes. This can 4.3. Breaks 19 1 and Node 3, and (c) Node 1 and Node 2. result in nodes that cannot be charged to power or ground, and nodes that are only charged under certain inputs.
References-found: 12

