URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1995/1995-26.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: markdb@cs.ruu.nl  marc@cs.ruu.nl  
Title: A New Approach to Subdivision Simplification  
Author: Mark de Berg Marc van Kreveld Stefan Schirra 
Web: stschirr@mpi-sb.mpg.de  
Address: P.O.Box 80.089 3508 TB Utrecht The Netherlands  P.O.Box 80.089 3508 TB Utrecht The Netherlands  D-66123 Saarbrucken Germany  
Affiliation: Dept. of Computer Science Utrecht University  Dept. of Computer Science Utrecht University  Max-Planck-Institut fur Informatik Im Stadtwald  
Abstract: The line simplification problem is an old and well-studied problem in cartography. Although there are several algorithms to compute a simplification, there seem to be no algorithms that perform line simplification in the context of other geographical objects. This paper presents a nearly quadratic time algorithm for the following line simplification problem: Given a polygonal line, a set of extra points, and a real * &gt; 0, compute a simplification that guarantees (i) a maximum error *, (ii) that the extra points remain on the same side of the simplified chain as of the original chain, and (iii) that the simplified chain has no self-intersections. The algorithm is applied as the main subroutine for subdivision simplification.
Abstract-found: 1
Intro-found: 1
Reference: [Asano & Katoh '93] <author> T. Asano and N. Katoh, </author> <title> Number theory helps line detection in digital images an extended abstract. </title> <booktitle> Proc. 4th ISAAC'93, Lect. Notes in Comp. Science 762, </booktitle> <year> 1993, </year> <pages> pp. 313-322. </pages>
Reference-contexts: 1 Introduction The line simplification problem is a well-studied problem in various disciplines including geographic information systems [Buttenfield '85, Cromley '88, Douglas & Peucker '73, Hershberger & Snoeyink '92, Li & Openshaw '92, McMaster '87], digital image analysis <ref> [Asano & Katoh '93, Hobby '93, Kurozumi & Davis '82] </ref>, and computational geometry [Chan & Chin '92, Eu & Toussaint '94, Guibas et al. '93, Imai & Iri '88, Melkman & O'Rourke '88].
Reference: [Buttenfield '85] <author> B. Buttenfield, </author> <title> Treatment of the cartographic line. </title> <booktitle> Cartographica 22 (1985), </booktitle> <pages> pp. 1-26. </pages>
Reference: [Chan & Chin '92] <author> W.S. Chan and F. Chin, </author> <title> Approximation of polygonal curves with minimum number of line segments. </title> <booktitle> Proc. 3rd ISAAC'92, Lect. Notes in Comp. Science 650, </booktitle> <year> 1992, </year> <pages> pp. 378-387. </pages>
Reference-contexts: The bottleneck in the efficiency is the construction of the graph G. In [Melkman & O'Rourke '88] it was shown that G can be computed in O (n 2 log n) time, reducing the overall time bound to O (n 2 log n) time. In <ref> [Chan & Chin '92] </ref> an algorithm was given to construct G in O (n 2 ) time. This is optimal in the worst case because G can have fi (n 2 ) arcs. We explain their algorithm briefly. <p> Pseudo code is given as Algorithm Compute Allowed-Shortcuts, and the algorithm is illustrated in Figure 3. With the given approach, the graph construction requires O (n 2 ) time in the worst case <ref> [Chan & Chin '92] </ref>. 4 Consistent simplification of a chain In this section we generalize the line simplification algorithm just described to respect extra points as well. We also consider the issue of computing a simplification that has no self intersections.
Reference: [Cormen et al. '90] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1990. </year> <month> 18 </month>
Reference-contexts: A shortest path from v 1 to v n in G corresponds to a minimum size simplification of the polygonal chain. Using topological sorting, the shortest path can be computed in time linear in the number of nodes and arcs of G <ref> [Cormen et al. '90] </ref>. Therefore, after the construction of G, the problem can be solved in O (n 2 ) time. We remark that the approach can always terminate with a valid output, because the original polygonal line is always a valid output (though hardly a simplification). <p> Compute graph G from G 1 ; G 2 ; G 3 by intersecting their arc sets. 15. Determine a minimum link path from v 1 to v n in G, and let it be the simplification for C. in graph literature, and its computation is standard <ref> [Cormen et al. '90] </ref>. This path represents the simplification of a chain. 6 Practical considerations In this section we will discuss some ideas that will lead to more efficient implementations or more efficient variants of subdivision simplification.
Reference: [Cromley '88] <author> R.G. Cromley, </author> <title> A vertex substitution approach to numerical line simplification. </title> <booktitle> Proc. 3rd Symp. on Spatial Data Handling (1988), </booktitle> <pages> pp. 57-64. </pages>
Reference: [Douglas & Peucker '73] <author> D.H. Douglas and T.K. Peucker, </author> <title> Algorithms for the reduction of the number of points required to represent a digitized line or its caricature. </title> <booktitle> The Canadian Cartographer 10 (1973), </booktitle> <pages> pp. 112-122. </pages>
Reference-contexts: If the current simplification satisfies the *-condition then we are done. Otherwise, the furthest point from the current simplification is chosen and added to the simplification. This gives two recursively defined subproblems. More 17 can be found in <ref> [Douglas & Peucker '73] </ref>. To adapt the algorithm we need only reimplement the test whether the current simplification is good enough. It should not only depend on the *-condition, but also on the extra points in P . <p> To obtain these results we relied on techniques from computational geometry. With ideas similar to ours, some other line simplification methods can also be adapted to be consistent with respect to a set of extra points. In particular, we showed that the algorithm in <ref> [Douglas & Peucker '73] </ref> can be extended. The given algorithm takes O (n (n + m) log n) time to perform the simplification for a chain with n vertices and m extra points.
Reference: [Edelsbrunner et al. '86] <author> H. Edelsbrunner, L.J. Guibas, and J. Stolfi, </author> <title> Optimal point location in a monotone subdivision, </title> <journal> SIAM J. Comput. </journal> <volume> 15 (1986), </volume> <pages> pp. 317-340. </pages>
Reference: [Eu & Toussaint '94] <author> D. Eu and G. Toussaint, </author> <title> On approximating polygonal curves in two and three dimensions. </title> <booktitle> Graphical Models and Image Processing 5 (1994), </booktitle> <pages> pp. 231-246. </pages>
Reference: [Guibas et al. '93] <author> L.J. Guibas, J.E. Hershberger, J.S.B. Mitchell, and J.S. Snoeyink, </author> <title> Approximating polygons and subdivisions with minimum-link paths. </title> <booktitle> Int. J. Computational Geometry and Applications 3 (1993), </booktitle> <pages> pp. 383-415. </pages>
Reference-contexts: It should be noted that some other version of the subdivision simplification problem, where the objective is to obtain a minimum complexity simple subdivision, is an NP-hard problem <ref> [Guibas et al. '93] </ref>. We do, however, guarantee a minimum size simplification for the simplification of every polygonal line that satisfies a condition weaker than monotonicity. 3 Preliminaries on line simplification We describe the line simplification algorithm in [Imai & Iri '88], upon which our method is based.
Reference: [Hershberger & Snoeyink '92] <author> J. Hershberger and J. Snoeyink, </author> <title> Speeding up the Douglas-Peucker line simplification algorithm. </title> <booktitle> Proc. 5th Symp. on Spatial Data Handling (1992), </booktitle> <pages> pp. 134-143. </pages>
Reference: [Hershberger & Snoeyink '94] <author> J. Hershberger and J. Snoeyink, </author> <title> Computing minimum length paths of a given homotopy class. </title> <booktitle> Computational Geometry Theory and Applications 4 (1994), </booktitle> <pages> pp. 63-97. </pages>
Reference: [Hobby '93] <author> J.D. </author> <title> Hobby, Polygonal approximations that minimize the number of inflections. </title> <booktitle> Proc. 4th ACM-SIAM Symp. on Discrete Algorithms (1993), </booktitle> <pages> pp. 93-102. </pages>
Reference-contexts: 1 Introduction The line simplification problem is a well-studied problem in various disciplines including geographic information systems [Buttenfield '85, Cromley '88, Douglas & Peucker '73, Hershberger & Snoeyink '92, Li & Openshaw '92, McMaster '87], digital image analysis <ref> [Asano & Katoh '93, Hobby '93, Kurozumi & Davis '82] </ref>, and computational geometry [Chan & Chin '92, Eu & Toussaint '94, Guibas et al. '93, Imai & Iri '88, Melkman & O'Rourke '88].
Reference: [Imai & Iri '88] <author> H. Imai and M. Iri, </author> <title> Polygonal approximations of a curve formulations and algorithms. </title> <editor> In: G.T. Toussaint (Ed.), </editor> <title> Computational Morphology, </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1988, </year> <pages> pp. 71-86. </pages>
Reference-contexts: We do, however, guarantee a minimum size simplification for the simplification of every polygonal line that satisfies a condition weaker than monotonicity. 3 Preliminaries on line simplification We describe the line simplification algorithm in <ref> [Imai & Iri '88] </ref>, upon which our method is based. Let v 1 ; : : : ; v n be the input polygonal chain C. A line segment v i v j is a shortcut for the subchain v i ; : : : ; v j .
Reference: [Kurozumi & Davis '82] <author> Y. Kurozumi and W.A. Davis, </author> <title> Polygonal approximation by the minimax method. </title> <booktitle> Computer Graphics and Image Processing P19 (1982), </booktitle> <pages> pp. 248-264. </pages>
Reference-contexts: 1 Introduction The line simplification problem is a well-studied problem in various disciplines including geographic information systems [Buttenfield '85, Cromley '88, Douglas & Peucker '73, Hershberger & Snoeyink '92, Li & Openshaw '92, McMaster '87], digital image analysis <ref> [Asano & Katoh '93, Hobby '93, Kurozumi & Davis '82] </ref>, and computational geometry [Chan & Chin '92, Eu & Toussaint '94, Guibas et al. '93, Imai & Iri '88, Melkman & O'Rourke '88].
Reference: [Li & Openshaw '92] <author> Z. Li and S. Openshaw, </author> <title> Algorithms for automated line generalization based on a natural principle of objective generalization. </title> <booktitle> Int. J. Geographical Information Systems 6 (1992), </booktitle> <pages> pp. 373-389. </pages>
Reference: [Mark '89] <author> D.M. Mark, </author> <title> Conceptual basis for geographic line generalization. </title> <booktitle> Proc. Auto-Carto 9 (1989), </booktitle> <pages> pp. 68-77. </pages>
Reference-contexts: research is supported by ESPRIT Basic Research Action 7141 (project ALCOM II: Algorithms and Complexity), and by a PIONIER project of the Dutch Organization for Scientific Research N.W.O. 1 Besides geometric error criteria, in geographic information systems one can also use criteria based on the geographic knowledge, or on perception <ref> [Mark '89] </ref>. The motivation for studying line simplification problems is twofold. Firstly, polygonal lines at a high level of detail consume a lot of storage space. In many situations a high level of detail is unnecessary or even unwanted.
Reference: [McMaster '87] <author> R.B. </author> <title> McMaster, Automated line generalization. </title> <booktitle> Cartographica 24 (1987), </booktitle> <pages> pp. 74-111. </pages>
Reference: [Melkman '87] <author> A. Melkman, </author> <title> On-line construction of the convex hull of a simple polyline. </title> <journal> Inform. Process. Lett. </journal> <volume> 25 (1987), </volume> <pages> pp. 11-12. </pages>
Reference-contexts: To compute the convex hull of a simple polygonal chain one can use a simple algorithm that uses only one deque in its execution <ref> [Melkman '87] </ref>. After the convex hull has been computed we test for every point in P whether it lies inside the convex hull or not. This test can be done using binary search for each point. Algorithm Reduce-Extra-Points gives the pseudo code.
Reference: [Melkman & O'Rourke '88] <author> A. Melkman and J. O'Rourke, </author> <title> On polygonal chain approximation. </title> <editor> In: G.T. Toussaint (Ed.), </editor> <title> Computational Morphology, </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1988, </year> <pages> pp. 87-95. </pages>
Reference-contexts: We remark that the approach can always terminate with a valid output, because the original polygonal line is always a valid output (though hardly a simplification). The bottleneck in the efficiency is the construction of the graph G. In <ref> [Melkman & O'Rourke '88] </ref> it was shown that G can be computed in O (n 2 log n) time, reducing the overall time bound to O (n 2 log n) time. In [Chan & Chin '92] an algorithm was given to construct G in O (n 2 ) time.
Reference: [Preparata & Shamos '85] <author> F.P. Preparata and M.I. Shamos, </author> <title> Computational Geometry an introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: Either by a plane sweep algorithm where a line rotates about v i , or by preprocessing S i for point location, this step requires O ((n + m) log n) time <ref> [Preparata & Shamos '85] </ref>. All points of P that don't lie in a bounded face of S i can be discarded; they cannot be in a bounded face of the polygon Q ij for any shortcut v i v j . But we can discard many more points.
Reference: [Sarnak & Tarjan '86] <author> N. Sarnak, and R.E. Tarjan, </author> <title> Planar point location using persistent search trees, </title> <booktitle> Comm. ACM 29 (1986), </booktitle> <pages> pp. 669-679. </pages>
Reference: [Zhan & Mark '93] <author> F. Zhan and D.M. Mark, </author> <title> Conflict resolution in map generalization: a cognitive study. </title> <booktitle> Proc. Auto-Carto 13 (1993), </booktitle> <pages> pp. 406-413. 19 </pages>
Reference-contexts: Such topological errors in the simplification lead to 2 inconsistencies in geographic information systems. In this paper we will show that both conditions can be enforced after reformulating the problem into an abstract geometric setting. This is quite different from the approach reported in <ref> [Zhan & Mark '93] </ref>, who have done a cognitive study on conflict resolution due to simplification. They accept that the simplification process may lead to conflicts (such as topological errors) and try to patch up the problems afterwards. We avoid conflicts from the start by using geometric algorithms.
References-found: 22

