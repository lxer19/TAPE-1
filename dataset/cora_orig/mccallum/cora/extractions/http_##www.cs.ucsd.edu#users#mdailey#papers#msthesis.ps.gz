URL: http://www.cs.ucsd.edu/users/mdailey/papers/msthesis.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/mdailey/research.html
Root-URL: http://www.cs.ucsd.edu
Title: Abstract Intelligent Interfaces and Complex Analysis Tasks: A Knowledge-Based Interface for Biological Sequence Analysis (Under
Author: DAILEY, MATTHEW NELSON. James Curtis Lester.) 
Abstract: Computer systems can be powerful tools for scientists. In complex analysis tasks, scientists formulate hypotheses and, through repeated data analysis and information retrieval, build evidence for the validity of those hypotheses. In a typical problem-solving session, a scientist will (1) analyze the data currently available, (2) hypothesize an action that will bring him or her closer to the overall goal, (3) perform the action, and (4) analyze the results. The scientist then iterates until either the goal is satisfied, all possible paths are exhausted without satisfying the goal, or the goal is abandoned. Each iteration of the process brings new data to light, forming a rapidly growing context for further formulation and revision of hypotheses. For complex analysis problems, the key to successful human-computer collaboration is the ability to facilitate interaction that enables users to focus on the problem at hand rather than on the complicated details of data analysis and retrieval operations. The goal of this research has been to design, implement, and empirically evaluate a knowledge-based interface for information exploration and task visualization, the two core components of complex analysis problems. As a testbed for our work, we have developed a prototype knowledge-based in 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Christopher Ahlberg, Christopher Williamson, and Ben Shneiderman. </author> <title> Dynamic queries for information exploration: An implementation and evaluation. </title> <booktitle> In CHI '92: ACM Conference on Human Factors in Computing Systems: Striking a Balance, </booktitle> <pages> pages 619-626, </pages> <year> 1992. </year>
Reference-contexts: GUIDE [123], 82 Graphical User Interface for Database Exploration, provides an interactive graphi-cal display of a database schema, thereby allowing users to progressively formulate queries as traversal paths in the schema, while always displaying the results of the current query. The Dynamic Query <ref> [1] </ref>, the Aggregate Manipulator [47], and the Dynamic Slider [79], provide specialized new GUI widgets for information exploration and manipulation. The PDQ Tree-browser [60] combines the dynamic query approach with visualization of and navigation through hierarchical data spaces.
Reference: [2] <author> S. F. Altschul. </author> <title> Gap costs for multiple sequence alignment. </title> <journal> Journal of Theoretical Biology, </journal> <volume> 138 </volume> <pages> 297-309, </pages> <year> 1989. </year>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [3] <author> S. F. Altschul. </author> <title> Amino acid subsitution matrices from an information theoretic perspective. </title> <journal> Journal of Molecular Biology, </journal> <volume> 219 </volume> <pages> 555-565, </pages> <year> 1991. </year>
Reference-contexts: It has been shown, for example, that one of the most common scoring matrices, the PAM 250, is frequently inappropriate <ref> [3] </ref>. Interpretion of the information a tool generates must be undertaken with care. Because many analyses produce such a tremendous volume of data, manual interpretation is prohibitive. Even the simplest similarity search can return hundreds of hits, each of which must be evaluated.
Reference: [4] <author> Stephen F. Altschul, Warren Gish, Webb Miller, Eugene W. Myers, and David J Lipman. </author> <title> Basic local alignment search tool. </title> <journal> Journal of Molecular Biology, </journal> <volume> 215 </volume> <pages> 403-410, </pages> <year> 1990. </year>
Reference-contexts: For other tasks, scientists are faced with a broad range of choices. If they decide to conduct a similarity search for homologous nucleic acids or proteins, they must choose from an extraordinarily large number of search engines such as BLAST <ref> [4] </ref>, FASTA [85], GDB/Accessor [83] or GRAIL [113]. The choice of a tool (and consequently the technique it employs) is more critical in some circumstances than in others. <p> Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and [50] for excellent tutorials on scoring matrices. 34 <ref> [50, 84, 33, 4, 101] </ref>. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [5] <author> Elizabeth Andre, Wolfgang Finkler, Winfried Graph, Thomas Rist, Anne Schauder, and Wolfgang Wahlster. WIP: </author> <title> The automatic synthesis of multi 93 modal presentations. </title> <editor> In Mark T. Maybury, editor, </editor> <title> Intelligent Multimedia Interfaces, chapter 3. </title> <publisher> AAAI Press, </publisher> <year> 1993. </year>
Reference-contexts: The current interface only allows for conjunctive constraints on the objects of interest and does not allow joins between disparate object types. * Multimedia Presentation Generation for Data Visualization: The system could increase the bandwidth of communication with the user by dynam ically planning coordinated multimedia presentations of data <ref> [7, 70, 5] </ref>. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users [39, 59, 65, 111, 115]. * User Modeling: User modeling techniques could play
Reference: [6] <author> Yigal Arens, Chin Y. Chee, Chun-Nan Hsu, and Craig A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval <ref> [6, 32] </ref> operations. Additional research has dealt with user interface design for complex tasks [120, 126, 125, 110, 19]. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task. <p> As noted in Chapter 2, from the user's perspective, execution of an information exploration operator reduces to formulating and submitting a query on the object-oriented knowledge base schema. We use a simple internal query language for this purpose based primarily on that in <ref> [6] </ref>. Section 4.4 gives an example of a simple query in this language, and Appendix A describes the language thoroughly. It is the responsibility of the information explorer to provide a usable interface for specification of queries in the internal language. <p> We have defined a simple query language for specifying classes of knowledge base objects subject to constraints based on that described in <ref> [6] </ref>. 50 For example, the sequence analysis operation "show me all known DNA se-quences whose molecular weight is greater than x" maps directly to the domain model-level query "retrieve the DNA-SEQUENCE-TEXT on all known instances of DNA such that MOLECULAR-WEIGHT &gt; x." This in turn would be translated to the following
Reference: [7] <author> Yigal Arens, Lawrence Miller, and Norman Sondheimer. </author> <title> Presentation design using an integrated knowledge base. </title> <editor> In Joseph W. Sullivan and Sher-man W. Tyler, editors, </editor> <booktitle> Intelligent User Interfaces, chapter 11, </booktitle> <pages> pages 241-258. </pages> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: The current interface only allows for conjunctive constraints on the objects of interest and does not allow joins between disparate object types. * Multimedia Presentation Generation for Data Visualization: The system could increase the bandwidth of communication with the user by dynam ically planning coordinated multimedia presentations of data <ref> [7, 70, 5] </ref>. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users [39, 59, 65, 111, 115]. * User Modeling: User modeling techniques could play
Reference: [8] <author> James D. Arthur and K. S. Raghu. Taskmaster: </author> <title> An interactive, graphical environment for task specification, execution, and monitoring. </title> <journal> Behaviour and Information Technology, </journal> <volume> 8(3) </volume> <pages> 219-233, </pages> <year> 1989. </year>
Reference-contexts: We take an approach to task visualization that is similar to data flow visualization in some visual parallel programming languages, e.g., [107], and the task specification, visualization, and execution environment of Taskmaster <ref> [8] </ref>. The task visualizer displays the analysis-by-exploration task as a directed graph that describes the dependencies among problem space states and the data context. The vertices of the graph map directly to three types of information explorer views: query formulation templates, query results summaries, and query results 42 exploration views. <p> However, the problem solver is not really reacting to stimuli in the environment. Most of 86 the activity in the system is the problem solver's cognitive activity. Taskmaster is an interactive environment supporting task specification <ref> [8] </ref>. It allows users to specify tasks in both a top-down and bottom-up fashion through a visual programming-inspired interface. The system visualizes tasks as hierarchical diagrams that illustrate the dependencies among atomic operations, which are small software tools that accomplish a simple task.
Reference: [9] <author> Annamaria Auddino, Yves Dennebouy, Yann Dupont, Edi Fontana, Ste-fano Spaccapietra, and Zahir Tari. </author> <title> SUPER: A comprehensive approach to database visual interfaces. </title> <editor> In E. Knuth and L. M. Wegner, editors, </editor> <booktitle> Visual Database Systems II, </booktitle> <pages> pages 365-380. </pages> <publisher> Elsevier Science Publishers B. V., </publisher> <year> 1992. </year>
Reference-contexts: VQL [75], SNAP [17], and SUPER <ref> [9] </ref> are expressive database query languages that employ visual programming approaches. Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71]. The Filter/Flow approach to boolean query formulation [124] uses a water flow metaphor to specify fully expressive boolean queries [26].
Reference: [10] <author> A. Bairoch. PROSITE: </author> <title> A dictionary of sites and patterns in proteins. </title> <journal> Nucleic Acids Research, </journal> <volume> 20 </volume> <pages> 2013-2018, </pages> <year> 1992. </year> <month> 94 </month>
Reference-contexts: to the vast majority of known nucleotide, amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) <ref> [10] </ref> SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [11] <author> A. Bairoch and B. Boeckmann. </author> <title> The SWISS-PROT protein sequence data bank. </title> <journal> Nucleic Acids Research, </journal> <volume> 20 </volume> <pages> 2019-2022, </pages> <year> 1992. </year>
Reference-contexts: Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data. This resides in more than one hundred separate databases such as GenBank [20], EMBL [51, 58, 43], and SWISS-PROT <ref> [11] </ref> and is growing exponentially. <p> With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL [51, 58, 43], and SWISS-PROT <ref> [11] </ref>, are maintained by agencies with relatively large budgets [114]. <p> majority of known nucleotide, amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein <ref> [11] </ref> PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [12] <author> W. Barker and D. George. </author> <title> Protein sequence database. </title> <editor> In R. F. Doolittle, editor, </editor> <booktitle> Methods in Enzymology, </booktitle> <volume> volume 183, </volume> <pages> pages 31-49. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: they offer comprehensive access to the vast majority of known nucleotide, amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein <ref> [12] </ref> PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [13] <author> F. C. Bernstein, T. F. Koetzle, G. J. B. Williams, E. F. Meyer Jr., M. D. Brice, J. R. Rodgers, O. Kennard, T. Shimanouchi, and M. Tasumi. </author> <title> The protein data bank: A computer-based archival file for macromolecular structures. </title> <journal> Journal of Molecular Biology, </journal> <volume> 112 </volume> <pages> 535-542, </pages> <year> 1977. </year>
Reference-contexts: amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) <ref> [13] </ref> GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [14] <author> M. Bishop, M. Ginsberg, C. Rawlings, and R. Wakeford. </author> <title> Molecular sequence databases. In Nucleic Acid and Protein Sequence Analysis: </title> <booktitle> A Practical Approach, </booktitle> <pages> pages 83-113. </pages> <publisher> IRL Press, </publisher> <address> Washington, D.C., </address> <year> 1987. </year>
Reference-contexts: With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases <ref> [14] </ref> to search for relevant information. The largest databases, such as GenBank [20], EMBL [51, 58, 43], and SWISS-PROT [11], are maintained by agencies with relatively large budgets [114].
Reference: [15] <author> Mark S. Boguski. </author> <title> Bioinformatics. </title> <booktitle> Curent Opinions in Genetics and Development, </booktitle> <volume> 4 </volume> <pages> 383-388, </pages> <year> 1994. </year>
Reference-contexts: The databases contain information about more than 350 million bases of nucleic acid sequence data, and an additional 42 million amino acids of protein sequence data. As the HGP progresses, the size of the databases is growing exponentially. GenBank, for example doubles in size every twenty months <ref> [15] </ref>, and it has been predicted that by the turn of the century, nucleotide data alone will have multiplied by a factor of several hundred over its 1992 size [44].
Reference: [16] <author> Joost Breuker. </author> <title> Coaching in help systems. </title> <editor> In John Self, editor, </editor> <booktitle> Artificial Intelligence and Human Learning: Intelligent Computer-Aided Instruction, </booktitle> <pages> pages 310-337. </pages> <publisher> Chapman and Hall Computing, </publisher> <address> London, </address> <year> 1988. </year>
Reference-contexts: Task specification interfaces for the analysis-by-exploration task could yield interesting research results. * Advisory/Critiquing Systems: The prototype Genome Collaborator interface and task model provide an excellent basis for research in advisory dialogue systems [121, 27], coaching systems <ref> [46, 16] </ref>, and critiquing systems [41]. 8.3 Summary By designing, implementing, and empirically evaluating a user- and task-centered prototype interface architecture for an important class of problem solving tasks, we have provided a sound basis for research in intelligent user interfaces.
Reference: [17] <author> Daniel Bryce and Richard Hull. </author> <title> SNAP: A graphics-based query language. </title> <editor> In Stanley B. Zdonik and David Maier, editors, </editor> <booktitle> Readings in Object-Oriented Database Systems, </booktitle> <pages> pages 537-550. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year> <month> 95 </month>
Reference-contexts: VQL [75], SNAP <ref> [17] </ref>, and SUPER [9] are expressive database query languages that employ visual programming approaches. Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71].
Reference: [18] <author> P. Bucher. </author> <title> Weight matrix descriptions of four eukaryotic RNA polymerase II promoter elements derived from 502 unrelated promoter sequences. </title> <journal> Journal of Molecular Biology, </journal> <volume> 212 </volume> <pages> 563-578, </pages> <year> 1990. </year>
Reference-contexts: This exercise yields a map associating particular enzymes with target locations in the sequence [89]. They may also 24 attempt to exploit information about particular commonly co-occurring patterns (e.g. CCAAT, GC, and TATA), to identify promoters, enhancers, transcriptional factors, protein binding sites, and terminators <ref> [89, 18, 99] </ref>. Search for Coding Regions. Scientists inevitably attempt to identify open reading frames (ORFs) within the six reading frames of a nucleic acid.
Reference: [19] <author> Peter T. Bullemer, Melissa L. Monty, and Rebecca Root. </author> <title> Striking a balance: Developing interaction requirements for intelligent task support in complex dynamic systems. </title> <booktitle> In 1992 IEEE International Conference on Systems, Man, and Cybernetics, </booktitle> <pages> pages 1189-1194, </pages> <year> 1992. </year>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks <ref> [120, 126, 125, 110, 19] </ref>. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task. <p> Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems [69, 23, 29, 24] and user intention support in complex process control systems <ref> [49, 19] </ref>. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.

Reference: [21] <author> Tom Bylander and B. Chandrasakaran. </author> <title> Generic tasks for knowledge-based reasoning: The "right" level of abstraction for knowledge acquisition. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 26 </volume> <pages> 231-243, </pages> <year> 1987. </year>
Reference-contexts: This chapter introduces and analyzes the information exploration approach to solving hyper-complex analysis problems. The problem class and solution method have interesting implications for human-computer interface design. It has been proposed that the correct level of abstraction of a problem-solving task is the generic task <ref> [25, 21] </ref>. A generic task characterizes the nature of the problem to be solved, the conceptual representation for the problem, and the strategy used in solving the problem. <p> Common computational approaches to design tasks are plan selection and refinement <ref> [21] </ref> and the graph-theoretical consistent labeling approach [76]. Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain.
Reference: [22] <author> Lisa Caballero. </author> <title> Practical aspects: Analysis of notch. </title> <editor> In Michael Gribskov and John Devereaux, editors, </editor> <title> Sequence Analysis Primer, </title> <booktitle> chapter 4, </booktitle> <pages> pages 159-203. </pages> <publisher> Stockton Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Coding region identification may be conducted with either "search by signal" techniques, e.g., attempting to discover transcriptional signals, or statistical "search by content" techniques [89]. Codon preference information may be exploited in this analysis <ref> [22] </ref>, as well as techniques such as the TestCode statistic [22, 40]. Similarity Searches. Conducting similarity searches for proteins and the genes that code for them is probably the single most promising analytical technique available [50]. <p> Coding region identification may be conducted with either "search by signal" techniques, e.g., attempting to discover transcriptional signals, or statistical "search by content" techniques [89]. Codon preference information may be exploited in this analysis [22], as well as techniques such as the TestCode statistic <ref> [22, 40] </ref>. Similarity Searches. Conducting similarity searches for proteins and the genes that code for them is probably the single most promising analytical technique available [50]. As soon as ORFs have been identified, scientists translate each ORF to a protein and conduct searches with the putative proteins. <p> Because there is a much larger number of amino acids than bases, similarity searches with proteins results in considerably fewer false positives than similarity searches with the nucleic acid sequence <ref> [22] </ref>, and the fact that there may be only 10 3 to 10 4 protein "archetypes" makes protein searches even more appealing [57]. 25 Scientists employ similarity searches to identify internal repeats within a se-quence [22] and to find related nucleic acid and amino acid sequences based on some criterion for <p> proteins results in considerably fewer false positives than similarity searches with the nucleic acid sequence <ref> [22] </ref>, and the fact that there may be only 10 3 to 10 4 protein "archetypes" makes protein searches even more appealing [57]. 25 Scientists employ similarity searches to identify internal repeats within a se-quence [22] and to find related nucleic acid and amino acid sequences based on some criterion for similarity. For example, a scientist may search an amino acid sequence for known motifs, which are common patterns with known functions that occur in previously analyzed proteins.
Reference: [23] <author> Sandra Carberry. </author> <title> Plan recognition and its use in understanding dialog. </title> <editor> In Al-fred Kobsa and Wolfgang Wahlster, editors, </editor> <booktitle> User Models in Dialog Systems, </booktitle> <pages> pages 133-162. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems <ref> [69, 23, 29, 24] </ref> and user intention support in complex process control systems [49, 19]. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [24] <author> Sandra Carberry. </author> <title> Incorporating default inferences into plan recognition. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 471-478, </pages> <year> 1990. </year>
Reference-contexts: Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems <ref> [69, 23, 29, 24] </ref> and user intention support in complex process control systems [49, 19]. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [25] <author> B. Chandrasakaran. </author> <title> Generic tasks in knowledge-based reasoning: High-level building blocks for expert system design. </title> <journal> IEEE Expert, </journal> <volume> 1(3) </volume> <pages> 23-30, </pages> <year> 1986. </year>
Reference-contexts: This chapter introduces and analyzes the information exploration approach to solving hyper-complex analysis problems. The problem class and solution method have interesting implications for human-computer interface design. It has been proposed that the correct level of abstraction of a problem-solving task is the generic task <ref> [25, 21] </ref>. A generic task characterizes the nature of the problem to be solved, the conceptual representation for the problem, and the strategy used in solving the problem.
Reference: [26] <author> Richard Chimera. </author> <title> Information technology and the transformation of decision making. </title> <booktitle> In Proceedings of the 29th Annual Hawaii International Conference on System Sciences, </booktitle> <pages> pages 120-129, </pages> <year> 1995. </year> <month> 97 </month>
Reference-contexts: Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71]. The Filter/Flow approach to boolean query formulation [124] uses a water flow metaphor to specify fully expressive boolean queries <ref> [26] </ref>. The Graphical Query System (GQS) [118] is a direct manipulation approach to query formulation that exploits the schema's generalization and specialization hierarchies and allows for progressive query refinement.
Reference: [27] <author> David N. Chin. KNOME: </author> <title> Modeling what the user knows in UC. </title> <editor> In Alfred Kobsa and Wolfgang Wahlster, editors, </editor> <booktitle> User Models in Dialog Systems, </booktitle> <pages> pages 74-107. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: Anti-bias Stereotypes. We propose the use of anti-bias stereotypes to combat strategic bias. Because of their broad range of applicability, stereotypes <ref> [90, 27, 55] </ref> have played an important role in user modeling. Like traditional stereotypes that encode commonalities of user attributes, anti-bias stereotypes represent aggregations of strategic biases that co-occur in particular segments of the user population. <p> Genome Collaborator in particular could benefit from exploiting stereotypes of users' knowledge, expertise, and back grounds <ref> [90, 27, 55] </ref>. * Task Specification: During evaluations some users have expressed interest in being able to specify "macros," which are networks of tasks that can be repeated. <p> Task specification interfaces for the analysis-by-exploration task could yield interesting research results. * Advisory/Critiquing Systems: The prototype Genome Collaborator interface and task model provide an excellent basis for research in advisory dialogue systems <ref> [121, 27] </ref>, coaching systems [46, 16], and critiquing systems [41]. 8.3 Summary By designing, implementing, and empirically evaluating a user- and task-centered prototype interface architecture for an important class of problem solving tasks, we have provided a sound basis for research in intelligent user interfaces.
Reference: [28] <author> P. Y. Chou and G. D. Fasman. </author> <title> Prediction of the secondary structure of proteins from their amino acid sequence. </title> <booktitle> Advances in Enzymology, </booktitle> <volume> 47 </volume> <pages> 45-147, </pages> <year> 1978. </year>
Reference-contexts: For example, in the comparatively specialized world of protein secondary structure prediction, scientists can choose from a perplexingly large arsenal of tools ranging from those based on physical properties [68] to others based on neural nets [87, 52] and statistics <ref> [28, 45] </ref>. Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques. When employing a profile search, scientists may select either of the two primary techniques, searching against a database of motifs or searching against a database of "blocks" [35].
Reference: [29] <author> Jennifer Chu-Carroll and Sandra Carberry. </author> <title> A plan-based model for response generation in collaborative task-oriented dialogues. </title> <booktitle> In AAAI-94: Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <volume> volume 1, </volume> <pages> pages 799-805, </pages> <year> 1994. </year>
Reference-contexts: Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems <ref> [69, 23, 29, 24] </ref> and user intention support in complex process control systems [49, 19]. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [30] <author> William J. Clancey. </author> <title> Heuristic classification. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 289-350, </pages> <year> 1985. </year>
Reference-contexts: Diagnosis problems are special cases of classification problems, which involve identifying features of an unknown entity within a pre-enumerated hierarchy of classes. Many classification systems (and human experts) first abstract input data, perform a heuristic mapping onto the pre-enumerated hierarchy, and then refine the classification <ref> [30] </ref>. Design. Design tasks involve the synthesis or layout of objects subject to constraints. For example, a design task might be to translate a logic circuit into a VLSI layout.
Reference: [31] <author> Bruce I. Cohen and Fred E. Cohen. </author> <title> Predictions of protein secondary and tertiary structure. </title> <editor> In Douglas W. Smith, editor, Biocomputing: </editor> <booktitle> Informatics and Genome Projects, chapter 7, </booktitle> <pages> pages 203-232. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: However, experimental structure analysis using techniques such as X-ray crystallography is problematic, so the rate at which new structures will be elucidated by experimentation|compared to the rate at which sequences are appearing|will probably remain low <ref> [31] </ref>. Fortunately, by comparing a given primary structure with other primary structures whose secondary and tertiary structures are known, it is possible to predict the structure of a new sequence. Scientists employ a large number of structure prediction techniques to infer the secondary and tertiary structures for nucleic acids.
Reference: [32] <author> Christine Collet, Michael N. Huhns, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in carnot. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year> <month> 98 </month>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval <ref> [6, 32] </ref> operations. Additional research has dealt with user interface design for complex tasks [120, 126, 125, 110, 19]. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task.
Reference: [33] <author> J. F. Collins and A. F. W. Coulson. </author> <title> Significance of protein sequence similar-ities. </title> <editor> In R. F. Doolittle, editor, </editor> <booktitle> Methods in Enzymology, </booktitle> <volume> volume 183, </volume> <pages> pages 474-487. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and [50] for excellent tutorials on scoring matrices. 34 <ref> [50, 84, 33, 4, 101] </ref>. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [34] <author> Andrew Coulson. </author> <title> Extracting the information|Sequence analysis software design evolves. </title> <journal> Tibtech, </journal> <volume> 11 </volume> <pages> 223-227, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information <ref> [34] </ref>. As the number and size of the databases grow, both the time required to find relevant data and the amount of noise in it increases. Scientists employing the HGP databases must cope with the complexities posed by two types of heterogeneity. 1 First, the databases employ different data models.
Reference: [35] <author> Andrew Coulson. </author> <title> High-performance searching of biosequence databases. </title> <booktitle> Trends in Biotechnology, </booktitle> <volume> 12 </volume> <pages> 76-80, </pages> <year> 1994. </year>
Reference-contexts: Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques. When employing a profile search, scientists may select either of the two primary techniques, searching against a database of motifs or searching against a database of "blocks" <ref> [35] </ref>. For other tasks, scientists are faced with a broad range of choices. If they decide to conduct a similarity search for homologous nucleic acids or proteins, they must choose from an extraordinarily large number of search engines such as BLAST [4], FASTA [85], GDB/Accessor [83] or GRAIL [113].
Reference: [36] <author> M. Dayhoff. </author> <title> Atlas of Protein Sequence and Structure, </title> <booktitle> volume 5 (Suppl. 3). National Biomedical Research Foundation, </booktitle> <address> Washington, DC, </address> <year> 1978. </year>
Reference-contexts: To illustrate, executing similarity searches can be troublesome for even the most advanced computational biologist. Depending on the sensitivity, speed and confidence desired, the scientist must specify an appropriate window (subsequence) size and a scoring matrix. Scoring matrices, e.g. the PAM matrix series <ref> [36, 48, 56] </ref>, encode information about what constitutes a partial match, how partial matches 33 should be rated, and how to combine partial match ratings to compute a final "score." 2 Typical of the complexity that sequence analysts must face, choosing a scoring matrix is an arcane exercise comprehended by an
Reference: [37] <author> J. Devereaux, P. Haeberli, and O. Smithies. </author> <title> A comprehensive set of sequence analysis programs for the VAX. </title> <journal> Nucleic Acids Research, </journal> <volume> 12 </volume> <pages> 387-395, </pages> <year> 1984. </year>
Reference-contexts: As they contemplate which tools to apply, they must carefully consider the availability of tools and their functions. Many tools are distributed individually, and 31 some are bundled together in a package such as GCG <ref> [37] </ref>, which alone offers al-most one hundred tools. Some tools, provide many functions, while others perform single, narrowly defined tasks.
Reference: [38] <author> Erik Eilerts. KnEd: </author> <title> An inteface for a frame-based knowledge representation system. </title> <type> Master's thesis, </type> <institution> The University of Texas at Austin, Austin, TX, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Its implementation utilizes Allegro Common Lisp 4.2, the Knowledge Manager (KM) frame-based knowledge representation system, and the Knowledge Editor (KnEd) knowledge engineering system <ref> [38] </ref>. * Heterogeneous data source integrator: The data source integrator is under development by G. Miller. 5.2 A Client-Server Application The Genome Collaborator system is implemented as a client-server application. <p> The server includes the the heterogeneous data source integration system and the domain knowledge base, which was constructed with KnEd, a graphical environment for editing knowledge bases <ref> [38] </ref>. When the user starts the Lisp server, it creates an Internet domain socket on a well-known TCP port. The server executes a loop, waiting for a connection from a Smalltalk client.
Reference: [39] <author> Claudie Faure and Luc Julia. </author> <title> An agent-based architecture for a multimodal interface. </title> <booktitle> In Working Notes of the AAAI Spring Symposium on Intelligent Multi-Media Multi-Modal Systems, </booktitle> <year> 1994. </year>
Reference-contexts: with the user by dynam ically planning coordinated multimedia presentations of data [7, 70, 5]. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users <ref> [39, 59, 65, 111, 115] </ref>. * User Modeling: User modeling techniques could play a major role in how the system reacts to its users.
Reference: [40] <author> J. W. Fickett. </author> <title> Recognition of protein coding regions in DNA sequences. </title> <journal> Nucleic Acids Research, </journal> <volume> 10 </volume> <pages> 5303-5318, </pages> <year> 1982. </year> <month> 99 </month>
Reference-contexts: Coding region identification may be conducted with either "search by signal" techniques, e.g., attempting to discover transcriptional signals, or statistical "search by content" techniques [89]. Codon preference information may be exploited in this analysis [22], as well as techniques such as the TestCode statistic <ref> [22, 40] </ref>. Similarity Searches. Conducting similarity searches for proteins and the genes that code for them is probably the single most promising analytical technique available [50]. As soon as ORFs have been identified, scientists translate each ORF to a protein and conduct searches with the putative proteins.
Reference: [41] <author> Gerhard Fischer, Andreas C. Lemke, Thomas Mastaglio, and Anders I Morch. </author> <title> The role of critiquing in cooperative problem solving. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 9(3) </volume> <pages> 123-151, </pages> <year> 1991. </year>
Reference-contexts: Task specification interfaces for the analysis-by-exploration task could yield interesting research results. * Advisory/Critiquing Systems: The prototype Genome Collaborator interface and task model provide an excellent basis for research in advisory dialogue systems [121, 27], coaching systems [46, 16], and critiquing systems <ref> [41] </ref>. 8.3 Summary By designing, implementing, and empirically evaluating a user- and task-centered prototype interface architecture for an important class of problem solving tasks, we have provided a sound basis for research in intelligent user interfaces.
Reference: [42] <author> M. L. Fredman. </author> <title> Algorithms for computing evolutionary similarity measures with length independent gap penalties. </title> <journal> Bulletin on Mathematics in Biology, </journal> <volume> 46 </volume> <pages> 522-566, </pages> <year> 1984. </year>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [43] <author> R. Fuchs, P. Stoehr, P. Rice, R. Osmond, and G. Cameron. </author> <title> New services of the EMBL data library. </title> <journal> Nucleic Acids Research, </journal> <volume> 18 </volume> <pages> 4319-4323, </pages> <year> 1990. </year>
Reference-contexts: Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data. This resides in more than one hundred separate databases such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11] and is growing exponentially. <p> With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11], are maintained by agencies with relatively large budgets [114].
Reference: [44] <author> Rainer Fuchs, Peter Rice, and Graham N. Cameron. </author> <title> Molecular biological databases|Present and future. </title> <booktitle> Trends in Biotechnology, </booktitle> <volume> 10 </volume> <pages> 61-66, </pages> <year> 1992. </year>
Reference-contexts: GenBank, for example doubles in size every twenty months [15], and it has been predicted that by the turn of the century, nucleotide data alone will have multiplied by a factor of several hundred over its 1992 size <ref> [44] </ref>. With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL [51, 58, 43], and SWISS-PROT [11], are maintained by agencies with relatively large budgets [114].
Reference: [45] <author> J. Garnier, D. J. Osguthorpe, and B. Robson. </author> <title> Analysis of the accuracy and implication of simple methods for predicting the secondary structure of globular proteins. </title> <journal> Journal of Molecular Biology, </journal> <volume> 120 </volume> <pages> 97-120, </pages> <year> 1978. </year>
Reference-contexts: For example, in the comparatively specialized world of protein secondary structure prediction, scientists can choose from a perplexingly large arsenal of tools ranging from those based on physical properties [68] to others based on neural nets [87, 52] and statistics <ref> [28, 45] </ref>. Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques. When employing a profile search, scientists may select either of the two primary techniques, searching against a database of motifs or searching against a database of "blocks" [35].
Reference: [46] <author> Ira Goldstein and Brian Carr. </author> <title> The computer as coach: An athletic paradigm for intellectual education. </title> <booktitle> In Proceedings of the National ACM Conference, </booktitle> <pages> pages 227-233, </pages> <year> 1977. </year>
Reference-contexts: Task specification interfaces for the analysis-by-exploration task could yield interesting research results. * Advisory/Critiquing Systems: The prototype Genome Collaborator interface and task model provide an excellent basis for research in advisory dialogue systems [121, 27], coaching systems <ref> [46, 16] </ref>, and critiquing systems [41]. 8.3 Summary By designing, implementing, and empirically evaluating a user- and task-centered prototype interface architecture for an important class of problem solving tasks, we have provided a sound basis for research in intelligent user interfaces.
Reference: [47] <author> Jade Goldstein and Steven F. Roth. </author> <title> Using aggregation and dynamic queries for exploring large data sets. </title> <booktitle> In CHI '94: Human Factors in Computing Systems: Celebrating Interdependence, </booktitle> <pages> pages 23-29, </pages> <year> 1994. </year> <month> 100 </month>
Reference-contexts: GUIDE [123], 82 Graphical User Interface for Database Exploration, provides an interactive graphi-cal display of a database schema, thereby allowing users to progressively formulate queries as traversal paths in the schema, while always displaying the results of the current query. The Dynamic Query [1], the Aggregate Manipulator <ref> [47] </ref>, and the Dynamic Slider [79], provide specialized new GUI widgets for information exploration and manipulation. The PDQ Tree-browser [60] combines the dynamic query approach with visualization of and navigation through hierarchical data spaces.
Reference: [48] <author> G. H. Gonnet, M. A. Cohen, and S. A. Benner. </author> <title> Exhaustive matching of the entire protein sequence database. </title> <journal> Science, </journal> <volume> 233 </volume> <pages> 1443-1445, </pages> <year> 1986. </year>
Reference-contexts: To illustrate, executing similarity searches can be troublesome for even the most advanced computational biologist. Depending on the sensitivity, speed and confidence desired, the scientist must specify an appropriate window (subsequence) size and a scoring matrix. Scoring matrices, e.g. the PAM matrix series <ref> [36, 48, 56] </ref>, encode information about what constitutes a partial match, how partial matches 33 should be rated, and how to combine partial match ratings to compute a final "score." 2 Typical of the complexity that sequence analysts must face, choosing a scoring matrix is an arcane exercise comprehended by an
Reference: [49] <author> Leonard J. Haasbroek. </author> <title> Advanced human-computer interfaces and intent support: A survey and perspective. </title> <booktitle> In Conference Proceedings. 1993 International Conference on Systems, Man, and Cybernetics. Systems Engineering in the Service of Humans, </booktitle> <volume> volume 4, </volume> <pages> pages 350-355, </pages> <year> 1993. </year>
Reference-contexts: Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems [69, 23, 29, 24] and user intention support in complex process control systems <ref> [49, 19] </ref>. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [50] <author> Steven Henikoff. </author> <title> Comparative sequence analysis: Finding genes. </title> <editor> In Dou-glas W. Smith, editor, Biocomputing: </editor> <booktitle> Informatics and Genome Projects, chapter 4, </booktitle> <pages> pages 87-117. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: Codon preference information may be exploited in this analysis [22], as well as techniques such as the TestCode statistic [22, 40]. Similarity Searches. Conducting similarity searches for proteins and the genes that code for them is probably the single most promising analytical technique available <ref> [50] </ref>. As soon as ORFs have been identified, scientists translate each ORF to a protein and conduct searches with the putative proteins. <p> example, if a database contains sequences that are relatively similar to a long nucleic acid fresh from sequencing, most of the tools will perform well; on the other hand, if databases house sequences that are more distantly related to a shorter anonymous sequence, tool selection is of the utmost importance <ref> [50] </ref>. Tool selection presents a vexing problem for both novice and expert sequence analysts. Novices unfamiliar with the large range of tools that can be employed in 32 an analysis may know of no applicable tools. <p> Scientists must also cope with the fact that many tools return results whose significance must be evaluated. Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and <ref> [50] </ref> for excellent tutorials on scoring matrices. 34 [50, 84, 33, 4, 101]. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74]. <p> Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and [50] for excellent tutorials on scoring matrices. 34 <ref> [50, 84, 33, 4, 101] </ref>. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [51] <author> D. G. Higgins, R. Fuchs, P. J. Stoehr, and G. N. Cameron. </author> <title> The EMBL Data Library. </title> <journal> Nucleic Acids Research, </journal> <volume> 20 </volume> <pages> 2071-2074, </pages> <year> 1992. </year>
Reference-contexts: Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data. This resides in more than one hundred separate databases such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11] and is growing exponentially. <p> With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11], are maintained by agencies with relatively large budgets [114]. <p> In principle, they offer comprehensive access to the vast majority of known nucleotide, amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide <ref> [51] </ref> GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [52] <author> L. H. Holley and M. Karplus. </author> <title> Protein secondary structure prediction with a neural network. </title> <booktitle> In Proceedings of the National Academy of Science USA, </booktitle> <volume> volume 78, </volume> <pages> pages 3824-3828, </pages> <year> 1989. </year>
Reference-contexts: For example, by employing software that locates the helical regions of stem-and-loop structures, it is possible to predict optimal folding for an RNA molecule [89]. They also employ the rapidly growing collection of artificial intelligence techniques for protein structure prediction <ref> [87, 52] </ref>. Not only must scientists cope with extraordinarily complicated individual tasks, they must also track the massive data flow between these these tasks. <p> Some tools, provide many functions, while others perform single, narrowly defined tasks. For example, in the comparatively specialized world of protein secondary structure prediction, scientists can choose from a perplexingly large arsenal of tools ranging from those based on physical properties [68] to others based on neural nets <ref> [87, 52] </ref> and statistics [28, 45]. Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques.
Reference: [53] <author> Liisa Holm, Christos Ouzounis, Chris Sander, Georg Tuparev, and Gert Vriend. </author> <title> A database of protein structure families with common folding motifs. </title> <journal> Protein Science, </journal> <volume> 1 </volume> <pages> 1691-1698, </pages> <year> 1994. </year>
Reference-contexts: In the course of a given analysis, they might also construct profiles that describe known three-dimensional structures, extrapolate a three-dimensional structure from a database of empirically-derived structures, and compare two or more protein structures to detect structurally similar regions <ref> [53, 54, 92] </ref>. Attempting to track the voluminous streams of data flowing between the myriad search, interpretation and visualization activities is overwhelming. Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data.
Reference: [54] <author> Liisa Holm and Chris Sander. </author> <title> Searching protein structure databases has come of age. Proteins: Structures, Function, </title> <journal> and Genetics, </journal> <volume> 19 </volume> <pages> 165-173, </pages> <year> 1994. </year> <month> 101 </month>
Reference-contexts: In the course of a given analysis, they might also construct profiles that describe known three-dimensional structures, extrapolate a three-dimensional structure from a database of empirically-derived structures, and compare two or more protein structures to detect structurally similar regions <ref> [53, 54, 92] </ref>. Attempting to track the voluminous streams of data flowing between the myriad search, interpretation and visualization activities is overwhelming. Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data.
Reference: [55] <author> Anthony Jameson. </author> <title> Generalizing the double-stereotype approach: A psy-chological perspective. </title> <booktitle> In UM92: Third International Workshop on User Modeling., </booktitle> <pages> pages 69-83, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Anti-bias Stereotypes. We propose the use of anti-bias stereotypes to combat strategic bias. Because of their broad range of applicability, stereotypes <ref> [90, 27, 55] </ref> have played an important role in user modeling. Like traditional stereotypes that encode commonalities of user attributes, anti-bias stereotypes represent aggregations of strategic biases that co-occur in particular segments of the user population. <p> Genome Collaborator in particular could benefit from exploiting stereotypes of users' knowledge, expertise, and back grounds <ref> [90, 27, 55] </ref>. * Task Specification: During evaluations some users have expressed interest in being able to specify "macros," which are networks of tasks that can be repeated.
Reference: [56] <author> D. T. Jones, W. R. Taylor, and J. M. Thornton. </author> <title> The rapid generation of mutation data matrices from protein sequences. </title> <booktitle> Computer Applications in the Biosciences, </booktitle> <volume> 8 </volume> <pages> 275-282, </pages> <year> 1992. </year>
Reference-contexts: To illustrate, executing similarity searches can be troublesome for even the most advanced computational biologist. Depending on the sensitivity, speed and confidence desired, the scientist must specify an appropriate window (subsequence) size and a scoring matrix. Scoring matrices, e.g. the PAM matrix series <ref> [36, 48, 56] </ref>, encode information about what constitutes a partial match, how partial matches 33 should be rated, and how to combine partial match ratings to compute a final "score." 2 Typical of the complexity that sequence analysts must face, choosing a scoring matrix is an arcane exercise comprehended by an
Reference: [57] <author> O. Seely Jr., D.-F. Feng, D. W. Smith, D. Sulzbach, and R. F. Doolittle. </author> <title> Construction of a facsimile data set for large genome sequence analysis. </title> <journal> Ge-nomics, </journal> <volume> 8 </volume> <pages> 71-82, </pages> <year> 1990. </year>
Reference-contexts: is a much larger number of amino acids than bases, similarity searches with proteins results in considerably fewer false positives than similarity searches with the nucleic acid sequence [22], and the fact that there may be only 10 3 to 10 4 protein "archetypes" makes protein searches even more appealing <ref> [57] </ref>. 25 Scientists employ similarity searches to identify internal repeats within a se-quence [22] and to find related nucleic acid and amino acid sequences based on some criterion for similarity.
Reference: [58] <author> Patricia Kahn and Graham Cameron. </author> <title> EMBL data library. </title> <editor> In R. F. Doolittle, editor, </editor> <booktitle> Methods in Enzymology, </booktitle> <volume> volume 183, </volume> <pages> pages 23-31. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data. This resides in more than one hundred separate databases such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11] and is growing exponentially. <p> With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL <ref> [51, 58, 43] </ref>, and SWISS-PROT [11], are maintained by agencies with relatively large budgets [114].
Reference: [59] <author> Jurgen Krause. </author> <title> A multilayered empirical approach to multimodality: Towards mixed solutions of natural language and graphics. </title> <editor> In Mark T. May-bury, editor, </editor> <title> Intelligent Multimedia Interfaces, chapter 14. </title> <publisher> AAAI Press, </publisher> <year> 1993. </year>
Reference-contexts: with the user by dynam ically planning coordinated multimedia presentations of data [7, 70, 5]. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users <ref> [39, 59, 65, 111, 115] </ref>. * User Modeling: User modeling techniques could play a major role in how the system reacts to its users.
Reference: [60] <author> Harsha P. Kumar, Catherine Plaisant, and Ben Shneiderman. </author> <title> Browsing hierarchical data with multi-level dynamic queries and pruning. </title> <type> Technical Report CS-TR-3474, </type> <institution> Human-Computer Interaction Laboratory, Department of Computer Science, Institute for Systems Research, University of Maryland, College Park, </institution> <address> MD 20742-3255, </address> <year> 1995. </year> <month> 102 </month>
Reference-contexts: The Dynamic Query [1], the Aggregate Manipulator [47], and the Dynamic Slider [79], provide specialized new GUI widgets for information exploration and manipulation. The PDQ Tree-browser <ref> [60] </ref> combines the dynamic query approach with visualization of and navigation through hierarchical data spaces. It also provides for pruning of uninteresting portions of the visualization and a bird's-eye view of its overall structure. These techniques have been primarily applied to browsing highly accessible and highly structured data.
Reference: [61] <author> Pat Langley, Herbert A. Simon, and Gary L. Bradshaw. </author> <title> Heuristics for em-pirical discovery. </title> <editor> In L. Bolc, editor, </editor> <booktitle> Computational Models of Learning. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain. Re--searchers have made significant progress in developing computational approaches to scientific discovery <ref> [67, 62, 61, 98] </ref>. Based upon initial observations, the scientist (or computer system) forms initial hypotheses that predict the observed behavior. This is the theory formation phase. The scientist then designs experiments to test the hypotheses, executes the experiments, and notes anomalies.
Reference: [62] <author> Pat Langley, Herbert A. Simon, Gary L. Bradshaw, and Jan M. Zytkow. </author> <title> Scientific Discovery: Computational Explorations of the Creative Processes. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1987. </year>
Reference-contexts: Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain. Re--searchers have made significant progress in developing computational approaches to scientific discovery <ref> [67, 62, 61, 98] </ref>. Based upon initial observations, the scientist (or computer system) forms initial hypotheses that predict the observed behavior. This is the theory formation phase. The scientist then designs experiments to test the hypotheses, executes the experiments, and notes anomalies.
Reference: [63] <author> Amy L. Lansky. </author> <title> A data analysis assistant. In Papers from the i-SAIRAS'94 Planning and Scheduling Workshop, </title> <note> 1994. (URL = http://fi-www.arc.nasa.gov/fia/projects/xfr/misc/schedule.html). </note>
Reference-contexts: Current research investigates systems that plan data analysis <ref> [63] </ref> and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks [120, 126, 125, 110, 19]. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task.
Reference: [64] <author> Jill H. Larkin. </author> <title> The role of representation in physics. </title> <editor> In Dedre Gentner and Albert L. Stevens, editors, </editor> <title> Mental Models, </title> <booktitle> chapter 5, </booktitle> <pages> pages 267-297. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, CA, </address> <year> 1983. </year>
Reference-contexts: a significant difference between an expert and novice level of competence in a problem-solving domain is 17 the disparity between their mental models of the domain and that a novice's tran-sition to expert-level competence can be aided by exposure to and explanation of the expert's mental domain and task model <ref> [64, 122, 86, 72] </ref>. An appropriate level of abstraction. We believe that modeling at the high level of abstraction that experts use in their reasoning process will produce the best conceptual model for the analysis-by-exploration task.
Reference: [65] <author> John Lee. </author> <title> Graphics and dialogue. </title> <editor> In G.G. Bes and T. Guillotin, editors, </editor> <title> A Natural Language and Graphics Interface, chapter 7. </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: with the user by dynam ically planning coordinated multimedia presentations of data [7, 70, 5]. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users <ref> [39, 59, 65, 111, 115] </ref>. * User Modeling: User modeling techniques could play a major role in how the system reacts to its users.
Reference: [66] <author> Beno^t Lemaire and Johanna Moore. </author> <title> An improved interface for tutorial dialogues: Browsing a visual dialogue history. </title> <booktitle> In CHI '94: Human Factors in Computing Systems: Celebrating Interdependence, </booktitle> <pages> pages 16-22, </pages> <address> Boston, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: Research on Sherlock demonstrates that users can benefit from a visual history of their dialogue with a tutorial system <ref> [66] </ref>, but the majority of research in complex task visualization has been in complex control systems, e.g. nuclear power generation, oil refining, or anti-submarine warfare [119, 125]. Analysis-by-exploration could perhaps be formulated as a control situation in which the problem solver is directing an army of retrieval and analysis agents.
Reference: [67] <author> Douglas B. Lenat. </author> <title> The ubiquity of discovery. </title> <journal> Artificial Intelligence, </journal> <volume> 9 </volume> <pages> 257-285, </pages> <year> 1977. </year>
Reference-contexts: Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain. Re--searchers have made significant progress in developing computational approaches to scientific discovery <ref> [67, 62, 61, 98] </ref>. Based upon initial observations, the scientist (or computer system) forms initial hypotheses that predict the observed behavior. This is the theory formation phase. The scientist then designs experiments to test the hypotheses, executes the experiments, and notes anomalies.
Reference: [68] <author> V. I. Lim. </author> <title> Algorithms for prediction of a-helical and b-structural regions in globular proteins. </title> <journal> Journal of Molecular Biology, </journal> <volume> 88 </volume> <pages> 873-894, </pages> <year> 1974. </year>
Reference-contexts: Some tools, provide many functions, while others perform single, narrowly defined tasks. For example, in the comparatively specialized world of protein secondary structure prediction, scientists can choose from a perplexingly large arsenal of tools ranging from those based on physical properties <ref> [68] </ref> to others based on neural nets [87, 52] and statistics [28, 45]. Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques.
Reference: [69] <author> Diane J. Litman. </author> <title> A plan recognition model for subdialogues in conversations. </title> <journal> Cognitive Science, </journal> <volume> 11 </volume> <pages> 163-200, </pages> <year> 1987. </year>
Reference-contexts: Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems <ref> [69, 23, 29, 24] </ref> and user intention support in complex process control systems [49, 19]. Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [70] <author> John D. Mackinlay. </author> <title> Search architectures for the automatic design of graphical presentations. </title> <editor> In Joseph W. Sullivan and Sherman W. Tyler, editors, </editor> <booktitle> Intelligent User Interfaces, chapter 13, </booktitle> <pages> pages 281-292. </pages> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: The current interface only allows for conjunctive constraints on the objects of interest and does not allow joins between disparate object types. * Multimedia Presentation Generation for Data Visualization: The system could increase the bandwidth of communication with the user by dynam ically planning coordinated multimedia presentations of data <ref> [7, 70, 5] </ref>. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users [39, 59, 65, 111, 115]. * User Modeling: User modeling techniques could play
Reference: [71] <author> M. Mainguenaud. </author> <title> From the user interface to the database management system: Application to a geographical information system. In Human-Computer Interaction. </title> <booktitle> Proceedings of the Fifth International Conference on Human-Computer Interaction (HCI International '93), </booktitle> <volume> volume 1, </volume> <pages> pages 684-689, </pages> <year> 1993. </year>
Reference-contexts: VQL [75], SNAP [17], and SUPER [9] are expressive database query languages that employ visual programming approaches. Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically <ref> [71] </ref>. The Filter/Flow approach to boolean query formulation [124] uses a water flow metaphor to specify fully expressive boolean queries [26]. The Graphical Query System (GQS) [118] is a direct manipulation approach to query formulation that exploits the schema's generalization and specialization hierarchies and allows for progressive query refinement.
Reference: [72] <author> Gary Marchionini, Xia Lin, and Sandra Dwiggins. </author> <title> Effects of search and subject expertise on information seeking in a hypertext environment. </title> <booktitle> In ASIS '90. Proceedings of the 53rd ASIS Annual Meeting, </booktitle> <pages> pages 129-142, </pages> <address> Medford, NJ, </address> <year> 1990. </year> <journal> American Society for Information Sciences. </journal>
Reference-contexts: a significant difference between an expert and novice level of competence in a problem-solving domain is 17 the disparity between their mental models of the domain and that a novice's tran-sition to expert-level competence can be aided by exposure to and explanation of the expert's mental domain and task model <ref> [64, 122, 86, 72] </ref>. An appropriate level of abstraction. We believe that modeling at the high level of abstraction that experts use in their reasoning process will produce the best conceptual model for the analysis-by-exploration task.
Reference: [73] <author> P. Markopoulos, S. Wilson, and P. Johnson. </author> <title> Representaiton and use of task knowledge in a user interface design environment. </title> <booktitle> IEE Proceedings: Computers and Digital Techniques, </booktitle> <volume> 141(2) </volume> <pages> 79-84, </pages> <month> March </month> <year> 1994. </year> <month> 104 </month>
Reference-contexts: Embedding task models in user interfaces, task visualization, and task specification have promise for improving complex task assistance systems. 7.3.1 Embedding Task Models in User Interfaces Task models are often used for empirical analyses of interactive systems but are less frequently used as the basis for a system's design <ref> [73] </ref>. Utilizing direct representations of the task model is critical to plan recognition in dialogue and information 85 retrieval systems [69, 23, 29, 24] and user intention support in complex process control systems [49, 19]. <p> Direct representation of task models also shows promise for other tasks such as user interface design <ref> [73] </ref> and decision support [117]. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [74] <author> Roland Lothy and David Eisenberg. </author> <title> Protein. </title> <editor> In Michael Gribskov and John Devereaux, editors, </editor> <title> Sequence Analysis Primer, </title> <booktitle> chapter 2, </booktitle> <pages> pages 61-87. </pages> <publisher> Stockton Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: If the motifs are encoded as regular expressions, then a standard similarity search may be employed; if instead they are encoded as collections of aligned sequences, then by converting them to profiles (tabular representations), dynamic programming comparison methods [102] can be applied <ref> [74] </ref>. By identifying similar sequences, scientists can incrementally develop, confirm and dis-confirm hypotheses about a newly discovered sequence's structure and function. Multiple Sequence Alignment. <p> In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range <ref> [74] </ref>. Optimal analyses demand the coordinated application of countless tools and the careful management of data flow between the tools.
Reference: [75] <author> Lil Mohan and R. L. Kashyap. </author> <title> A visual query language for graphical interaction with schema-intensive databases. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(5) </volume> <pages> 843-858, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: We need to provide an effective visual query interface for the domain model that accommodates the analysis-by-exploration task model. It is theoretically unnecessary to sacrifice flexibility and expressiveness in a visual query language <ref> [75] </ref>, but a simple visual language similar to that in [104] is better suited to the information exploration paradigm. <p> VQL <ref> [75] </ref>, SNAP [17], and SUPER [9] are expressive database query languages that employ visual programming approaches. Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71].
Reference: [76] <author> D. Navinchandra. </author> <title> Exploration and Innovation in Design: Towards a Computational Model. Symbolic Computation. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Common computational approaches to design tasks are plan selection and refinement [21] and the graph-theoretical consistent labeling approach <ref> [76] </ref>. Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain. Re--searchers have made significant progress in developing computational approaches to scientific discovery [67, 62, 61, 98].
Reference: [77] <author> Donald A. Norman. </author> <title> Some observations on mental models. </title> <editor> In Dedre Gen-tner and Albert L. Stevens, editors, </editor> <title> Mental Models, </title> <booktitle> chapter 1, </booktitle> <pages> pages 7-14. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, CA, </address> <year> 1983. </year>
Reference-contexts: We discuss each of these in turn. 2.3.1 The Conceptual Model A system's designer creates a conceptual model of a target system to explain and represent it <ref> [77] </ref>. It is useful to subdivide the conceptual model into the system task model and the system domain model. The system task model is a domain-independent specification of the actions required by the user to execute the problem-solving operators.
Reference: [78] <author> Donald A. Norman. </author> <title> The Design of Everyday Things. </title> <publisher> Doubleday, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: It has been argued that the fundamental principles of design for usability are (1) providing a good conceptual model and (2) making things visible 15 <ref> [78] </ref>. We discuss each of these in turn. 2.3.1 The Conceptual Model A system's designer creates a conceptual model of a target system to explain and represent it [77]. It is useful to subdivide the conceptual model into the system task model and the system domain model.
Reference: [79] <author> Max M. North and Sarah M. North. Sarah: </author> <title> An information exploration and visualization interface for direct manipulation of databases. </title> <booktitle> In Graphics Interface '93 Conference Proceedings, </booktitle> <pages> page 163, </pages> <year> 1993. </year>
Reference-contexts: The Dynamic Query [1], the Aggregate Manipulator [47], and the Dynamic Slider <ref> [79] </ref>, provide specialized new GUI widgets for information exploration and manipulation. The PDQ Tree-browser [60] combines the dynamic query approach with visualization of and navigation through hierarchical data spaces. It also provides for pruning of uninteresting portions of the visualization and a bird's-eye view of its overall structure.
Reference: [80] <author> Vicki L. O'Day and Robin Jeffries. </author> <title> Orienteering in an information landscape: How information seekers get from here to there. </title> <booktitle> In CHI '93 Conference Proceedings: Human Factors in Computing Systems: INTERCHI, </booktitle> <pages> pages 438-445, </pages> <year> 1993. </year>
Reference-contexts: areas that are indirectly related to this work but are planned for future research. 7.1 Visual Information Exploration Recently, researchers have begun to investigate how systems can can enable users seeking information, and there is strong evidence to support the hypothesis that users utilize an exploratory approach to information seeking <ref> [80] </ref>. GUIDE [123], 82 Graphical User Interface for Database Exploration, provides an interactive graphi-cal display of a database schema, thereby allowing users to progressively formulate queries as traversal paths in the schema, while always displaying the results of the current query.
Reference: [81] <institution> U.S. Department of Health, Human Services, and U.S. Department of Energy. Understanding Our Genetic Inheritance|The U.S. Human Genome Project: The First Five Years FY 1991-1995. National Technical Information Service, U.S. Department of Commerce, Springfield, Virginia, </institution> <year> 1990. </year>
Reference-contexts: With the promise of unprecedented advances in medicine, the Human Genome Project (HGP) <ref> [114, 116, 81] </ref> is making great strides in decrypting the human genetic code. In the process, it has catalyzed an exponential growth in data and complexity in the analyses confronting the typical molecular biologist. In this quest, scientists rely on DNA and protein sequence databases and sequence analysis software.
Reference: [82] <author> Dirk Ourston and Raymond J. Mooney. </author> <title> Theory refinement combining analytical and empirical methods. </title> <journal> Artificial Intelligence, </journal> <volume> 66 </volume> <pages> 311-344, </pages> <year> 1994. </year>
Reference-contexts: Based upon initial observations, the scientist (or computer system) forms initial hypotheses that predict the observed behavior. This is the theory formation phase. The scientist then designs experiments to test the hypotheses, executes the experiments, and notes anomalies. The anomalies are then used to generate alternative or refined hypotheses <ref> [82] </ref> and discriminating experiments. Often "local" changes to hypotheses can explain anomalies, but sometimes major revisions or replacements are necessary. Important subfields of computational scientific discovery include determination of taxonomic relationships and induction of regularities, empirical laws, or causation in data.
Reference: [83] <author> P. L. Pearson. </author> <title> The genome data bank (GDB)|A human gene mapping repository. </title> <journal> Nucleic Acids Research, </journal> <volume> 19(Suppl.):2237-2239, </volume> <year> 1991. </year>
Reference-contexts: bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map <ref> [83] </ref> OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34]. As the number and size of the databases grow, both the time required to find relevant data and the amount of noise in it increases. <p> For other tasks, scientists are faced with a broad range of choices. If they decide to conduct a similarity search for homologous nucleic acids or proteins, they must choose from an extraordinarily large number of search engines such as BLAST [4], FASTA [85], GDB/Accessor <ref> [83] </ref> or GRAIL [113]. The choice of a tool (and consequently the technique it employs) is more critical in some circumstances than in others.
Reference: [84] <author> W. R. Pearson. </author> <title> Rapid and sensitive sequence comparison with FASTP and FASTA. </title> <editor> In R. F. Doolittle, editor, </editor> <booktitle> Methods in Enzymology, </booktitle> <volume> volume 183, </volume> <pages> pages 63-98. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and [50] for excellent tutorials on scoring matrices. 34 <ref> [50, 84, 33, 4, 101] </ref>. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [85] <author> W. R. Pearson and D. Lipman. </author> <title> Improved tools for biological sequence comparison. </title> <journal> Science, </journal> <volume> 85 </volume> <pages> 2444-2448, </pages> <year> 1988. </year>
Reference-contexts: For other tasks, scientists are faced with a broad range of choices. If they decide to conduct a similarity search for homologous nucleic acids or proteins, they must choose from an extraordinarily large number of search engines such as BLAST [4], FASTA <ref> [85] </ref>, GDB/Accessor [83] or GRAIL [113]. The choice of a tool (and consequently the technique it employs) is more critical in some circumstances than in others.
Reference: [86] <author> Bruce W. Porter, Ray Bareiss, and Robert C. Holte. </author> <title> Concept learning and heuristic classification in weak-theory domains. </title> <journal> Artificial Intelligence Journal, </journal> <volume> 45(1-2):229-264, </volume> <year> 1990. </year>
Reference-contexts: a significant difference between an expert and novice level of competence in a problem-solving domain is 17 the disparity between their mental models of the domain and that a novice's tran-sition to expert-level competence can be aided by exposure to and explanation of the expert's mental domain and task model <ref> [64, 122, 86, 72] </ref>. An appropriate level of abstraction. We believe that modeling at the high level of abstraction that experts use in their reasoning process will produce the best conceptual model for the analysis-by-exploration task.
Reference: [87] <author> N. Qian and T. J. Sejnowski. </author> <title> Prediction the secondary structure of globular proteins using neural network models. </title> <journal> Journal of Molecular Biology, </journal> <volume> 202 </volume> <pages> 865-884, </pages> <year> 1988. </year>
Reference-contexts: For example, by employing software that locates the helical regions of stem-and-loop structures, it is possible to predict optimal folding for an RNA molecule [89]. They also employ the rapidly growing collection of artificial intelligence techniques for protein structure prediction <ref> [87, 52] </ref>. Not only must scientists cope with extraordinarily complicated individual tasks, they must also track the massive data flow between these these tasks. <p> Some tools, provide many functions, while others perform single, narrowly defined tasks. For example, in the comparatively specialized world of protein secondary structure prediction, scientists can choose from a perplexingly large arsenal of tools ranging from those based on physical properties [68] to others based on neural nets <ref> [87, 52] </ref> and statistics [28, 45]. Before scientists select a tool, they must first select a technique. For some tasks, there are a few basic techniques.
Reference: [88] <author> C. M. Queen, N. Wegman, and L. J. Korn. </author> <title> Improvements to a program for DNA analysis: A procedure to find homologies among many sequences. </title> <journal> Nucleic Acids Research, </journal> <volume> 10 </volume> <pages> 449-456, </pages> <year> 1982. </year>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [89] <author> Peter M. Rice, Keith Elliston, and Michael Gribskov. </author> <title> DNA. </title> <editor> In Michael Gribskov and John Devereaux, editors, </editor> <title> Sequence Analysis Primer, </title> <booktitle> chapter 1, </booktitle> <pages> pages 1-59. </pages> <publisher> Stockton Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Signal Analysis. Scientists may attempt to identify several types of known sites in an anonymous sequence. They can search an enzyme database [91] to construct a restriction map for the sequence. This exercise yields a map associating particular enzymes with target locations in the sequence <ref> [89] </ref>. They may also 24 attempt to exploit information about particular commonly co-occurring patterns (e.g. CCAAT, GC, and TATA), to identify promoters, enhancers, transcriptional factors, protein binding sites, and terminators [89, 18, 99]. Search for Coding Regions. <p> This exercise yields a map associating particular enzymes with target locations in the sequence [89]. They may also 24 attempt to exploit information about particular commonly co-occurring patterns (e.g. CCAAT, GC, and TATA), to identify promoters, enhancers, transcriptional factors, protein binding sites, and terminators <ref> [89, 18, 99] </ref>. Search for Coding Regions. Scientists inevitably attempt to identify open reading frames (ORFs) within the six reading frames of a nucleic acid. <p> Coding region identification may be conducted with either "search by signal" techniques, e.g., attempting to discover transcriptional signals, or statistical "search by content" techniques <ref> [89] </ref>. Codon preference information may be exploited in this analysis [22], as well as techniques such as the TestCode statistic [22, 40]. Similarity Searches. Conducting similarity searches for proteins and the genes that code for them is probably the single most promising analytical technique available [50]. <p> Scientists employ a large number of structure prediction techniques to infer the secondary and tertiary structures for nucleic acids. For example, by employing software that locates the helical regions of stem-and-loop structures, it is possible to predict optimal folding for an RNA molecule <ref> [89] </ref>. They also employ the rapidly growing collection of artificial intelligence techniques for protein structure prediction [87, 52]. Not only must scientists cope with extraordinarily complicated individual tasks, they must also track the massive data flow between these these tasks.
Reference: [90] <author> Elaine Rich. </author> <title> User modeling via stereotypes. </title> <journal> Cognitive Science, </journal> <volume> 3 </volume> <pages> 329-354, </pages> <year> 1979. </year>
Reference-contexts: Anti-bias Stereotypes. We propose the use of anti-bias stereotypes to combat strategic bias. Because of their broad range of applicability, stereotypes <ref> [90, 27, 55] </ref> have played an important role in user modeling. Like traditional stereotypes that encode commonalities of user attributes, anti-bias stereotypes represent aggregations of strategic biases that co-occur in particular segments of the user population. <p> Genome Collaborator in particular could benefit from exploiting stereotypes of users' knowledge, expertise, and back grounds <ref> [90, 27, 55] </ref>. * Task Specification: During evaluations some users have expressed interest in being able to specify "macros," which are networks of tasks that can be repeated.
Reference: [91] <author> R. Roberts. </author> <title> Restriction enzymes and their isoschizomers. </title> <journal> Nucleic Acids Research, </journal> <volume> 16:r165-r200, </volume> <year> 1988. </year>
Reference-contexts: They may search for "signals" and coding regions in a sequence, conduct similarity searches and multiple sequence alignments, and predict the structure of peptide sequences. Signal Analysis. Scientists may attempt to identify several types of known sites in an anonymous sequence. They can search an enzyme database <ref> [91] </ref> to construct a restriction map for the sequence. This exercise yields a map associating particular enzymes with target locations in the sequence [89]. They may also 24 attempt to exploit information about particular commonly co-occurring patterns (e.g.
Reference: [92] <author> Mauro Rustici and Authur M. Lesk. </author> <title> Three-dimensional searching for recurrent structural motifs in data bases of protein structures. </title> <journal> Journal of Computational Biology, </journal> <volume> 1(2) </volume> <pages> 121-132, </pages> <year> 1994. </year>
Reference-contexts: In the course of a given analysis, they might also construct profiles that describe known three-dimensional structures, extrapolate a three-dimensional structure from a database of empirically-derived structures, and compare two or more protein structures to detect structurally similar regions <ref> [53, 54, 92] </ref>. Attempting to track the voluminous streams of data flowing between the myriad search, interpretation and visualization activities is overwhelming. Scientists must cope also with the complexities of the enormous and rapidly growing body of sequence data.
Reference: [93] <author> D. F. Schorderet. </author> <title> Using OMIM: (On-line Mendelian Inheritance in Man) as an expert system in medical genetics. </title> <journal> American Journal of Medical Genetics, </journal> <volume> 39 </volume> <pages> 278-284, </pages> <year> 1991. </year>
Reference-contexts: but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide [109] EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map <ref> [93] </ref> Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34]. As the number and size of the databases grow, both the time required to find relevant data and the amount of noise in it increases.
Reference: [94] <author> G. D. Schuler, S. F. Altschul, and D. J. Lipman. </author> <title> A workbench for multiple alignment construction and analysis. Proteins: Structures, Functions, </title> <journal> and Genetics, </journal> <volume> 9 </volume> <pages> 180-190, </pages> <year> 1991. </year> <month> 107 </month>
Reference-contexts: One technique for coping with this complexity is applying yet another kind of tool: visualization software. Many packages have been constructed to help scientist visualize their data, ranging from low end dotplot viewers and viewers accompanying multiple sequence alignment packages, e.g., <ref> [94] </ref>, to sophisticated software for visualizing proteins. Scientists must also cope with the fact that many tools return results whose significance must be evaluated.
Reference: [95] <author> R. D. Semmel. </author> <title> QUICK: A system that uses conceptual design knowledge for query formulation. </title> <booktitle> In Proceedings of the 1992 IEEE International Conference on Tools with AI, </booktitle> <pages> pages 214-221, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Thus, we would like to provide a direct mapping between the user's mental model of the task and domain and the system's model of the task and domain (Figure 2.3) while minimizing the gap between the conceptual model and target system model <ref> [95, 96] </ref>. Providing such a mapping will accelerate the user's learning of the interface because he or she will immediately understand its goals and structures and will be capable of accurately predicting the results of his or her actions.
Reference: [96] <author> R. D. Semmel. </author> <title> Discovering context in a conceptual schema. In Information and Knowledge Management. Expanding the Definition of `Database.' </title> <booktitle> First International Conference, CIKM '92 Select Papers, </booktitle> <pages> pages 1-15, </pages> <address> Berlin, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Thus, we would like to provide a direct mapping between the user's mental model of the task and domain and the system's model of the task and domain (Figure 2.3) while minimizing the gap between the conceptual model and target system model <ref> [95, 96] </ref>. Providing such a mapping will accelerate the user's learning of the interface because he or she will immediately understand its goals and structures and will be capable of accurately predicting the results of his or her actions.
Reference: [97] <author> Edward H. Shortliffe. </author> <title> Computer-Based Medical Consultations: MYCIN. </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: Diagnosis and Heuristic Classification. Problem solvers are often called upon to classify an object or diagnose an abnormal condition. Diagnosis, a pop 9 ular problem class for expert systems, is the act of classifying entities in terms of possible causes for their deviance. For example, the expert system MYCIN <ref> [97] </ref> abstracts from patient symptoms to a more general patient condition, then performs a probabilistic heuristic mapping from the condition onto a hierarchy of causes of the symptoms and finally refines this diagnosis.
Reference: [98] <author> Jeff Shrager and Pat Langley, </author> <title> editors. Computational Models of Scientific Discovery and Theory Formation. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: Scientific Discovery. Experimentation helps scientists determine or explain phenomena in the world. The experimentation process is guided by scientific 10 reasoning, and its aim is to discover concepts and relationships in a domain. Re--searchers have made significant progress in developing computational approaches to scientific discovery <ref> [67, 62, 61, 98] </ref>. Based upon initial observations, the scientist (or computer system) forms initial hypotheses that predict the observed behavior. This is the theory formation phase. The scientist then designs experiments to test the hypotheses, executes the experiments, and notes anomalies.
Reference: [99] <author> Douglas W. Smith. </author> <title> Introduction. </title> <editor> In Douglas W. Smith, editor, Biocom-puting: </editor> <booktitle> Informatics and Genome Projects, chapter 1, </booktitle> <pages> pages 1-12. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: This exercise yields a map associating particular enzymes with target locations in the sequence [89]. They may also 24 attempt to exploit information about particular commonly co-occurring patterns (e.g. CCAAT, GC, and TATA), to identify promoters, enhancers, transcriptional factors, protein binding sites, and terminators <ref> [89, 18, 99] </ref>. Search for Coding Regions. Scientists inevitably attempt to identify open reading frames (ORFs) within the six reading frames of a nucleic acid.
Reference: [100] <author> H. O. Smith, T. M. Annau, and S. Chandrasegaran. </author> <title> Finding sequence motifs in groups of functionally related proteins. </title> <booktitle> In Proceedings of the National Academy of Science USA, </booktitle> <volume> volume 87, </volume> <pages> pages 826-830, </pages> <year> 1990. </year> <month> 108 </month>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [101] <author> R. F. Smith and T. F. Smith. </author> <title> Automatic generation of primary sequence patterns from sets of related protein sequences. </title> <booktitle> In Proceedings of the National Academy of Science USA, </booktitle> <volume> volume 87, </volume> <pages> pages 118-122, </pages> <year> 1990. </year>
Reference-contexts: Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See [105] and [50] for excellent tutorials on scoring matrices. 34 <ref> [50, 84, 33, 4, 101] </ref>. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [102] <author> T. F. Smith and M. S. Waterman. </author> <title> Identification of common molecular subsequences. </title> <journal> Journal of Molecular Biology, </journal> <volume> 147 </volume> <pages> 195-197, </pages> <year> 1981. </year>
Reference-contexts: If the motifs are encoded as regular expressions, then a standard similarity search may be employed; if instead they are encoded as collections of aligned sequences, then by converting them to profiles (tabular representations), dynamic programming comparison methods <ref> [102] </ref> can be applied [74]. By identifying similar sequences, scientists can incrementally develop, confirm and dis-confirm hypotheses about a newly discovered sequence's structure and function. Multiple Sequence Alignment.
Reference: [103] <author> E. Sobel and H. Martinez. </author> <title> A multiple sequence alignment program. </title> <journal> Nucleic Acids Research, </journal> <volume> 14 </volume> <pages> 363-374, </pages> <year> 1986. </year>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [104] <author> F. Staes, L. Tarantino, and A. Tiems. </author> <title> The graphical querying environment of the KIWIS system. </title> <editor> In H. J. Bullinger, editor, </editor> <booktitle> Human Aspects of Computing: Design and Use of Interactive Systems and Information Management, </booktitle> <pages> pages 876-880. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1991. </year>
Reference-contexts: We need to provide an effective visual query interface for the domain model that accommodates the analysis-by-exploration task model. It is theoretically unnecessary to sacrifice flexibility and expressiveness in a visual query language [75], but a simple visual language similar to that in <ref> [104] </ref> is better suited to the information exploration paradigm.
Reference: [105] <author> David J. States and Mark S. Boguski. </author> <title> Similarity and homology. </title> <editor> In Michael Gribskov and John Devereaux, editors, </editor> <title> Sequence Analysis Primer, </title> <booktitle> chapter 3, </booktitle> <pages> pages 89-157. </pages> <publisher> Stockton Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: These can provide valuable information about the relationships between a group of sequences, as well as predicting secondary and tertiary structures of a new sequence (see below) and identifying motifs <ref> [105] </ref>. Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques [105, 42, 2, 103, 88, 100, 106]. 26 Secondary and Tertiary Structure Prediction. <p> Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence. <p> Scientists must also cope with the fact that many tools return results whose significance must be evaluated. Some search tools report the statistical significance of their findings, and computational biologists have developed heuristics for estimating the "biological significance" based on the reported statistical significance 2 See <ref> [105] </ref> and [50] for excellent tutorials on scoring matrices. 34 [50, 84, 33, 4, 101]. In addition to significance, scientists must often evaluate an even more important property: accuracy. For example, the accuracy of many protein secondary structure prediction tools is known to be in the 55-65 percent range [74].
Reference: [106] <author> G. D. Stormo and G. W. Hartzell. </author> <title> Identifying protein-binding sites from unaligned DNA fragments. </title> <booktitle> In Proceedings of the National Academy of Science USA, </booktitle> <volume> volume 86, </volume> <pages> pages 1183-1187, </pages> <year> 1989. </year>
Reference-contexts: Depending on the lengths and number of the sequences, scientists may employ any of a number of global and local alignment techniques <ref> [105, 42, 2, 103, 88, 100, 106] </ref>. 26 Secondary and Tertiary Structure Prediction. Because the structure of a molecule determines its function, it is very useful to determine the secondary and tertiary structures of a sequence.
Reference: [107] <author> P. David Stotts. </author> <title> Graphical operational semantics for visual parallel programming. </title> <editor> In S. K. Chang, editor, </editor> <booktitle> Visual Languages and Visual Programming, chapter 6, </booktitle> <pages> pages 119-142. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1990. </year> <month> 109 </month>
Reference-contexts: We take an approach to task visualization that is similar to data flow visualization in some visual parallel programming languages, e.g., <ref> [107] </ref>, and the task specification, visualization, and execution environment of Taskmaster [8]. The task visualizer displays the analysis-by-exploration task as a directed graph that describes the dependencies among problem space states and the data context.
Reference: [108] <author> K. Sugiyama, S. Tagawa, and M. </author> <title> Toda. Methods for understanding of hi-erarchical systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> SMC-11(2):109-125, </volume> <year> 1981. </year>
Reference-contexts: We can then employ a simple and efficient method for hierarchy layout based upon Sugiyama et al.'s algorithm <ref> [108] </ref>. Because each vertex in the graph maps to an information explorer window that views a portion of the data context, the task visualizer serves the important auxiliary roles of data context management and window management. <p> Although color coding is not captured in the black and white figures, the displayed nodes are color-coded according the the scientist's information exploration context (Section 5.8). We employ a graph layout algorithm adapted from Sugiyama et al.'s hierarchy layout algorithm <ref> [108] </ref> 1.
Reference: [109] <author> J. Sulston, Z. Du, K. Thomas, R. Wilson, L. Hillier, R. Staden, N. Hallo-ran, P. Green, J. Thierry-Mieg, L. Qiu, S. Dear, A. Coulson, M. Craxton, R. Durbin, M. Berks, M. Metzstein, T. R. Hawkins, R. Ainschough, and R. Waterston. The C. </author> <title> elegans genome sequencing project: A beginning. </title> <journal> Nature, </journal> <volume> 356 </volume> <pages> 37-41, </pages> <year> 1992. </year>
Reference-contexts: In principle, they offer comprehensive access to the vast majority of known nucleotide, amino acid, structural, and bibliographic data (Table 3.1), but in practice, because of variations, errors, and overlapping clones, scientists must also access the 28 Database Information Type Reference AceDB Nucleotide <ref> [109] </ref> EMBL Nucleotide [51] GenBank Nucleotide [20] PIR Protein [12] PROSITE Protein (Motifs) [10] SWISS-PROT Protein [11] PDB Protein (Structure) [13] GDB Genetic Map [83] OMIM Genetics Map [93] Table 3.1: Selected Genomic and Protein Databases multitude of specialized databases that also provide invaluable information [34].
Reference: [110] <author> Gunilla A. Sundstrom. </author> <title> User modeling for graphical design in complex dynamic environments: Concepts and prototype implementations. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 38 </volume> <pages> 567-586, </pages> <year> 1993. </year>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks <ref> [120, 126, 125, 110, 19] </ref>. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task.
Reference: [111] <author> R. M. Taylor. </author> <title> Integrating voice, visual and manual transactions: Some practical issues from aircrew station design. </title> <editor> In M. Taylor, F Neel, and D. Bouwhuis, editors, </editor> <booktitle> The Structure of Multimodal Dialogue, </booktitle> <pages> pages 259-265. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: with the user by dynam ically planning coordinated multimedia presentations of data [7, 70, 5]. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users <ref> [39, 59, 65, 111, 115] </ref>. * User Modeling: User modeling techniques could play a major role in how the system reacts to its users.
Reference: [112] <author> John C. Thomas and John C. Gould. </author> <title> A psychological study of query by example. </title> <booktitle> In Proceedings of the National Computer Conference, </booktitle> <pages> pages 439-445, </pages> <month> May </month> <year> 1975. </year>
Reference-contexts: In the relational database model, many users find it easier to learn and use visual query languages such as Query by Example <ref> [127, 112] </ref>, particularly when they are unfamiliar with a database's schema. We need to provide an effective visual query interface for the domain model that accommodates the analysis-by-exploration task model.
Reference: [113] <author> E. C. Uberbacher and R. J. </author> <title> Mural. Locating protein-coding regions in human DNA sequences by a multiple sensor-neural network approach. </title> <booktitle> In Proceedings 110 of the National Academy of Science USA, </booktitle> <volume> volume 88, </volume> <pages> pages 11261-11265, </pages> <year> 1991. </year>
Reference-contexts: For other tasks, scientists are faced with a broad range of choices. If they decide to conduct a similarity search for homologous nucleic acids or proteins, they must choose from an extraordinarily large number of search engines such as BLAST [4], FASTA [85], GDB/Accessor [83] or GRAIL <ref> [113] </ref>. The choice of a tool (and consequently the technique it employs) is more critical in some circumstances than in others.
Reference: [114] <institution> Office of Technology Assessment U.S. </institution> <month> Congress. </month> <title> Mapping Our Genes|The Genome Projects: How Big, How Fast? U.S. Government Printing Office, </title> <address> Washington, D.C., </address> <year> 1988. </year>
Reference-contexts: With the promise of unprecedented advances in medicine, the Human Genome Project (HGP) <ref> [114, 116, 81] </ref> is making great strides in decrypting the human genetic code. In the process, it has catalyzed an exponential growth in data and complexity in the analyses confronting the typical molecular biologist. In this quest, scientists rely on DNA and protein sequence databases and sequence analysis software. <p> With an analysis goal in mind, a scientist must determine which of the more than one hundred separate biological databases [14] to search for relevant information. The largest databases, such as GenBank [20], EMBL [51, 58, 43], and SWISS-PROT [11], are maintained by agencies with relatively large budgets <ref> [114] </ref>.
Reference: [115] <author> Wolfgang Wahlster. </author> <title> User and discourse models for multimodal communication. </title> <editor> In Joseph W. Sullivan and Sherman W. Tyler, editors, </editor> <booktitle> Intelligent User Interfaces, </booktitle> <pages> pages 45-67. </pages> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: with the user by dynam ically planning coordinated multimedia presentations of data [7, 70, 5]. * Combination of Active Data Visualization and Query Interfaces: By combining visual query interfaces with active graphical data visualizations and 90 animations, the information explorer could engage users in multi-modal, mul- timedia dialogues with users <ref> [39, 59, 65, 111, 115] </ref>. * User Modeling: User modeling techniques could play a major role in how the system reacts to its users.
Reference: [116] <author> J.D. Watson. </author> <title> The human genome project: Past, present, and future. </title> <journal> Science, </journal> <volume> 231 </volume> <pages> 1055-1056, </pages> <year> 1986. </year>
Reference-contexts: With the promise of unprecedented advances in medicine, the Human Genome Project (HGP) <ref> [114, 116, 81] </ref> is making great strides in decrypting the human genetic code. In the process, it has catalyzed an exponential growth in data and complexity in the analyses confronting the typical molecular biologist. In this quest, scientists rely on DNA and protein sequence databases and sequence analysis software.
Reference: [117] <author> Monica Zubritzky Weiland, Boyd Cooke, and Brad Peterson. </author> <title> Designing and implementing decision aids for a complex environment using goal hierarchies. </title> <booktitle> In Proceedings of the Human Factors Society 36th Annual Meeting, </booktitle> <pages> pages 394-398, </pages> <year> 1992. </year>
Reference-contexts: Direct representation of task models also shows promise for other tasks such as user interface design [73] and decision support <ref> [117] </ref>. Analysis-by-exploration offers an interesting alternative to the direct representation of user tasks.
Reference: [118] <author> William J. Weiland and Ben Shneiderman. </author> <title> A graphical query interface based on aggregation/generalization hierarchies. </title> <journal> Information Systems, </journal> <volume> 18(4) </volume> <pages> 215-232, </pages> <year> 1993. </year>
Reference-contexts: Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71]. The Filter/Flow approach to boolean query formulation [124] uses a water flow metaphor to specify fully expressive boolean queries [26]. The Graphical Query System (GQS) <ref> [118] </ref> is a direct manipulation approach to query formulation that exploits the schema's generalization and specialization hierarchies and allows for progressive query refinement.
Reference: [119] <author> George R. S. Weir. </author> <title> Living with complex interactive systems. </title> <editor> In George R. S. Weir and James L. Alty, editors, </editor> <title> Human-Computer Interaction and Complex Systems, </title> <booktitle> chapter 1, </booktitle> <pages> pages 1-21. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1991. </year> <month> 111 </month>
Reference-contexts: Research on Sherlock demonstrates that users can benefit from a visual history of their dialogue with a tutorial system [66], but the majority of research in complex task visualization has been in complex control systems, e.g. nuclear power generation, oil refining, or anti-submarine warfare <ref> [119, 125] </ref>. Analysis-by-exploration could perhaps be formulated as a control situation in which the problem solver is directing an army of retrieval and analysis agents. However, the problem solver is not really reacting to stimuli in the environment.
Reference: [120] <author> George R. S. Weir and James L. Alty, </author> <title> editors. Human-Computer Interaction and Complex Systems. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks <ref> [120, 126, 125, 110, 19] </ref>. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task.
Reference: [121] <author> Robert Wilensky, David Chin, Marc Luria, James Martin, James Mayfield, and Dekai Wu. </author> <title> The Berkeley Unix Consultant project. </title> <journal> Computational Linguistics, </journal> <volume> 14(4) </volume> <pages> 35-84, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Task specification interfaces for the analysis-by-exploration task could yield interesting research results. * Advisory/Critiquing Systems: The prototype Genome Collaborator interface and task model provide an excellent basis for research in advisory dialogue systems <ref> [121, 27] </ref>, coaching systems [46, 16], and critiquing systems [41]. 8.3 Summary By designing, implementing, and empirically evaluating a user- and task-centered prototype interface architecture for an important class of problem solving tasks, we have provided a sound basis for research in intelligent user interfaces.
Reference: [122] <author> Marianne Wiser and Susan Carey. </author> <title> When heat and temperature were one. </title> <editor> In Dedre Gentner and Albert L. Stevens, editors, </editor> <title> Mental Models, </title> <booktitle> chapter 12, </booktitle> <pages> pages 267-297. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, CA, </address> <year> 1983. </year>
Reference-contexts: a significant difference between an expert and novice level of competence in a problem-solving domain is 17 the disparity between their mental models of the domain and that a novice's tran-sition to expert-level competence can be aided by exposure to and explanation of the expert's mental domain and task model <ref> [64, 122, 86, 72] </ref>. An appropriate level of abstraction. We believe that modeling at the high level of abstraction that experts use in their reasoning process will produce the best conceptual model for the analysis-by-exploration task.
Reference: [123] <author> Harry K. T. Wong and Ivy Kuo. </author> <title> GUIDE: Graphical user interface for database exploration. </title> <booktitle> In Proceedings of the Eighth International Conference on Very Large Data Bases, </booktitle> <pages> pages 22-32, </pages> <address> New York, 1982. </address> <publisher> ACM Press. </publisher>
Reference-contexts: GUIDE <ref> [123] </ref>, 82 Graphical User Interface for Database Exploration, provides an interactive graphi-cal display of a database schema, thereby allowing users to progressively formulate queries as traversal paths in the schema, while always displaying the results of the current query.
Reference: [124] <author> D. Young and B. Shneiderman. </author> <title> A graphical filter/flow representation of boolean queries: A prototype implementation and evaluation. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 44(6) </volume> <pages> 327-339, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: VQL [75], SNAP [17], and SUPER [9] are expressive database query languages that employ visual programming approaches. Cigales uses geometric operators such as intersection, euclidean distance, adjacency, paths, and inclusion to form queries graphically [71]. The Filter/Flow approach to boolean query formulation <ref> [124] </ref> uses a water flow metaphor to specify fully expressive boolean queries [26]. The Graphical Query System (GQS) [118] is a direct manipulation approach to query formulation that exploits the schema's generalization and specialization hierarchies and allows for progressive query refinement.
Reference: [125] <author> Wayne W. Zachary, Loma Ross, and Monica Zubritzky Weiland. COGNET and BATON: </author> <title> An integrated approach to embedding user models in complex systems. </title> <booktitle> In 1991 IEEE International Conference on Systems, Man, and Cybernetics, </booktitle> <pages> pages 689-694, </pages> <year> 1991. </year> <month> 112 </month>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks <ref> [120, 126, 125, 110, 19] </ref>. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task. <p> Research on Sherlock demonstrates that users can benefit from a visual history of their dialogue with a tutorial system [66], but the majority of research in complex task visualization has been in complex control systems, e.g. nuclear power generation, oil refining, or anti-submarine warfare <ref> [119, 125] </ref>. Analysis-by-exploration could perhaps be formulated as a control situation in which the problem solver is directing an army of retrieval and analysis agents. However, the problem solver is not really reacting to stimuli in the environment.
Reference: [126] <author> Craig L. Zarmer and Chee Chew. </author> <title> Frameworks for interactive, extensible, </title> <booktitle> information-intensive applications. In Proceedings of the ACM Symposium on User Interface Software and Technology (UIST), </booktitle> <pages> pages 33-41, </pages> <year> 1992. </year>
Reference-contexts: Current research investigates systems that plan data analysis [63] and information retrieval [6, 32] operations. Additional research has dealt with user interface design for complex tasks <ref> [120, 126, 125, 110, 19] </ref>. We draw upon these fields of research and investigate the user interface design implications of the analysis-by-exploration task.
Reference: [127] <author> M. M. Zloof. </author> <title> Query by example. </title> <booktitle> In Proceedings of the National Computer Conference, </booktitle> <pages> pages 431-438, </pages> <month> May </month> <year> 1975. </year> <month> 113 </month>
Reference-contexts: In the relational database model, many users find it easier to learn and use visual query languages such as Query by Example <ref> [127, 112] </ref>, particularly when they are unfamiliar with a database's schema. We need to provide an effective visual query interface for the domain model that accommodates the analysis-by-exploration task model. <p> We have extended the the information exploration concept to data analysis and problem solving in the analysis-by-exploration task, and we believe that providing a visual exploration interface will increase users' information seeking efficiency. 83 7.2 Visual Query Interfaces Beginning with Query By Example (QBE) <ref> [127] </ref>, researchers have long sought to ease the burden (especially for novice computer users) of formulating and refining database queries. VQL [75], SNAP [17], and SUPER [9] are expressive database query languages that employ visual programming approaches.
References-found: 126

