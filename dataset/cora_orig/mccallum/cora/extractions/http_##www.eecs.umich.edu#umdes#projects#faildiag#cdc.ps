URL: http://www.eecs.umich.edu/umdes/projects/faildiag/cdc.ps
Refering-URL: http://www.eecs.umich.edu/umdes/projects/faildiag/diagnosis.html
Root-URL: http://www.eecs.umich.edu
Email: fridebouk,stephane,teneketg@eecs.umich.edu;  
Title: Coordinated Decentralized Protocols for Failure Diagnosis of Discrete Event Systems  
Author: Rami Debouk, Stephane Lafortune and Demosthenis Teneketzis 
Web: www.eecs.umich.edu/umdes  
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Department of Electrical Engineering and Computer Science The University of Michigan,  
Abstract: We address the problem of failure diagnosis in discrete event systems with decentralized information. We propose a coordinated decentralized architecture consisting of two local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We extend the notion of diagnosabil-ity, originally introduced in [1] for centralized systems, to the proposed coordinated decentralized architecture. We specify three protocols that realize the proposed architecture. We analyze the diagnostic properties of these protocol. The key features of the proposed protocols are: (i) they achieve, each under a set of assumptions, the same diagnostic performance as the centralized diagnoser; and (ii) they highlight the performance vs. complexity tradeoff that arises in coordinated decentralized architectures. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sin-namohideen, and D. Teneketzis. </author> <title> Diagnosability of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 40(9) </volume> <pages> 1555-1575, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. <p> For a brief description of these methods, the interested reader is referred to [6] and the introduction of <ref> [1] </ref> and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. Only the method of template monitoring [3] is cited to have the advantage of being easily implemented in distributed control architectures. <p> Many systems are decentralized in nature, for instance, the majority of technological complex systems (computer and communication networks, manufacturing and power systems, etc.) are information-ally decentralized. In this paper, we investigate failure diagnosis problems in DES under decentralized information. We extend the notion of diagnosability, introduced in <ref> [1] </ref> for centralized systems, to a coordinated decentralized architecture consisting of two local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We present specific protocols that realize the architecture under consideration. <p> We present and discuss the diagnostic properties of the suggested protocols. The on-line diagnostic process is carried out by the diagnosers introduced in <ref> [1] </ref>, or a slight variations of these diagnosers. <p> F i . 2.2 Diagnosability and diagnosers A language is said to be diagnosable with respect to a set of observable events and a failure partition if within a finite delay, the occurrence of any failure can be detected using the history of observable events (we refer the reader to <ref> [1] </ref> for the formal definition). The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of [1, 7, 8]. <p> The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes on-line the behavior of the system. <p> For more information about the construction of the diag-noser, the reader is referred to <ref> [1] </ref>. The state space Q d is the resulting subset of Q o composed of the states of the diagnoser that are reachable from q 0 under ffi d . <p> Each site is composed of two modules: an observation module and a diagnostic module. The site i, i 2 f1; 2g, locally observes the system based on its available sensing capabilities. Therefore, a projection P i <ref> [1] </ref> is associated with site i, where P i is defined on the set of observable events oi (note here that o1 and o2 need not be disjoint although sites 1 and 2 may be physically apart). <p> The coordinator does not have a model of the system. It has a simple structure; specifically, it has limited memory and limited processing capabilities. 3.2 Definition of diagnosability The definition of diagnosability in <ref> [1] </ref> assumes centralization of the available information; hence it is not directly applicable to coordinated decentralized systems. Moreover, the coordinated decentralized architecture in architecture differentiated by the choice of the communication rules and the coordinator's decision rule. <p> some x k , k 2 f1; : : : ; ng, after subtrace s 2 S j (q), and (ii) l s is the failure label corresponding to y s , obtained by propagating the label l k of x k according to the label propagation function defined in <ref> [1] </ref>. The unobservable reach of a diagnoser at a state represents all possible states where the system may be after the execution of a trace in the language.
Reference: [2] <author> F. Lin. </author> <title> Diagnosability of discrete event systems and its application. Discrete Event Dynamic Systems: </title> <journal> Theory and Applications, </journal> <volume> 4(2) </volume> <pages> 197-212, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [3] <author> L. Holloway and S. Chand. </author> <title> Time templates for discrete event fault monitoring in manufacturing systems. </title> <booktitle> In Proc. 1994 American Control Conference, </booktitle> <pages> pages 701-706, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. <p> For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized. Only the method of template monitoring <ref> [3] </ref> is cited to have the advantage of being easily implemented in distributed control architectures. Many systems are decentralized in nature, for instance, the majority of technological complex systems (computer and communication networks, manufacturing and power systems, etc.) are information-ally decentralized.
Reference: [4] <author> R. Boubour, C. Jard, A. Aghasaryan, E. Fabre, and A. Benveniste. </author> <title> Petri net approach to fault detection and diagnosis in distributed systems: application to telecommunication networks, motivations, and modelling. </title> <booktitle> In Proc. 36th IEEE Conf. on Decision and Control, </booktitle> <address> San Diego, CA, </address> <month> December </month> <year> 1997. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [5] <author> C.G. Cassandras and S. Lafortune. </author> <title> Discrete event systems: The state of the art and some recent trends. </title> <editor> In B. Datta, editor, </editor> <title> Applied and computational control, signals and circuits. </title> <publisher> Birkhauser, </publisher> <year> 1998. </year>
Reference-contexts: 1 Introduction Failure detection and isolation is an important task in the automatic control of large complex systems, and consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches <ref> [1, 2, 3, 4, 5] </ref>, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to [6] and the introduction of [1] and the references therein.
Reference: [6] <author> A.D. Pouliezos and G.S. Stavrakakis. </author> <title> Real time fault monitoring of industrial processes. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches [1, 2, 3, 4, 5], model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods, the interested reader is referred to <ref> [6] </ref> and the introduction of [1] and the references therein. Almost all of the abovementioned approaches have been developed for systems where the information used for fault diagnosis is centralized.
Reference: [7] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sin-namohideen, and D. Teneketzis. </author> <title> Failure diagnosis using discrete-event models. </title> <journal> IEEE Trans. Contr. Syst. Tech., </journal> <volume> 4(2) </volume> <pages> 105-124, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes on-line the behavior of the system.
Reference: [8] <author> M. Sampath, S. Lafortune, and D. Teneket-zis. </author> <title> Active diagnosis of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 43(7), </volume> <month> July </month> <year> 1998. </year>
Reference-contexts: The diagnoser is a deterministic FSM built from the system model G. This machine is at the core of the diagnostic methodology of <ref> [1, 7, 8] </ref>. It is used to analyze the diagnosability properties of G and to perform diagnostic when it observes on-line the behavior of the system. <p> This is explained in [10]. Finally, our analysis was based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in <ref> [8] </ref>. However, the assumptions on the order of message reception at the coordinator site are indeed critical. In [10] we present an example where not preserving the global order of reception of messages at the coordinator site leads to declaring a false positive indefinitely.
Reference: [9] <author> R. Debouk, S. Lafortune, and D. Teneketzis. </author> <title> A coordinated decentralized architecture for failure diagnosis of discrete-event systems. </title> <booktitle> In Proc. of WODES 1998, International Workshop on Discrete Event Systems. Published by IEE, </booktitle> <address> London, England, </address> <month> August </month> <year> 1998. </year>
Reference-contexts: Thus diagnosability, requires that the detection of any failure should be achieved by the coordinator within a finite delay of the occurrence of that failure (L=s denotes the post-language of L after s and k t k denotes the length of t). 4 Protocol 1: a coordinated decentralized protocol In <ref> [9] </ref> we present a protocol, called Protocol 1, for the preceding coordinated decentralized architecture that is capable of diagnosing the same types of failures as the ones diagnosed using the centralized diagnoser. <p> We refer the reader to <ref> [9, 10] </ref> for a detailed description of the protocol, i.e., the diagnostic information generated at the local sites, the communication rules used by the local sites, and the coordinator decision rule. The following theorem summarizes the diagnostic properties of Protocol 1. <p> The following theorem summarizes the diagnostic properties of Protocol 1. Theorem 4.1 Under Assumptions 1 - 8, Protocol 1 achieves the same diagnostic performance as the centralized diagnoser does. Note that the above result is true irrespective of the system structure. Moreover, in <ref> [9, 10] </ref> we prove that the result is true irrespective of the partitioning of observable events, and provide necessary and sufficient conditions for a system to be diagnosable with respect to Protocol 1. 5 Protocol 2: a second coordinated decentralized protocol In this section we present a protocol, called Protocol 2, <p> 3 to 2 to 1: from a minimal amount of processing and communication and a simple decision rule for Protocol 3 to more processing and communication, and a more involved decision rule for Protocol 2, to more processing and communication and an even more complicated decision rule for Protocol 1 <ref> [9, 10] </ref>. The results of this paper can be extended in a straightforward manner to a coordinated decentralized architecture similar to that of Section 3 and consisting of m (m &gt; 2) local sites. This is explained in [10].
Reference: [10] <author> R. Debouk, S. Lafortune, and D. Teneketzis. </author> <title> Coordinated decentralized protocols for failure diagnosis of discrete-event systems. </title> <type> Technical Report CGR97-17, </type> <institution> Department of Electrical Engineering and Computer Science, University of Michigan, </institution> <month> September </month> <year> 1997. </year> <month> Revised May </month> <year> 1998. </year>
Reference-contexts: We refer the reader to <ref> [9, 10] </ref> for a detailed description of the protocol, i.e., the diagnostic information generated at the local sites, the communication rules used by the local sites, and the coordinator decision rule. The following theorem summarizes the diagnostic properties of Protocol 1. <p> The following theorem summarizes the diagnostic properties of Protocol 1. Theorem 4.1 Under Assumptions 1 - 8, Protocol 1 achieves the same diagnostic performance as the centralized diagnoser does. Note that the above result is true irrespective of the system structure. Moreover, in <ref> [9, 10] </ref> we prove that the result is true irrespective of the partitioning of observable events, and provide necessary and sufficient conditions for a system to be diagnosable with respect to Protocol 1. 5 Protocol 2: a second coordinated decentralized protocol In this section we present a protocol, called Protocol 2, <p> Theorem 5.1 Under assumptions 1 - 8, Protocol 2 achieves the same diagnostic performance as the centralized diagnoser does if there are no failure-ambiguous traces (with respect to all failure types). In <ref> [10] </ref>, we show that the absence of failure-ambiguous traces is not necessary for Protocol 2 to perform as well as the centralized diagnoser, and provide a test to check when Protocol 2 performs as well as the centralized diagnoser. <p> As is the case with Protocol 2, the partitioning of observable events affects the diagnostic properties of protocol 3. In <ref> [10] </ref> we present a test that verifies whether Protocol 3 performs as well as the centralized diag-noser, or in other words the test checks for the existence of fully-ambiguous traces. 7 Discussion As is the case with all coordinated decentralized architectures, the issue of performance vs. complexity should be addressed. <p> 3 to 2 to 1: from a minimal amount of processing and communication and a simple decision rule for Protocol 3 to more processing and communication, and a more involved decision rule for Protocol 2, to more processing and communication and an even more complicated decision rule for Protocol 1 <ref> [9, 10] </ref>. The results of this paper can be extended in a straightforward manner to a coordinated decentralized architecture similar to that of Section 3 and consisting of m (m &gt; 2) local sites. This is explained in [10]. <p> The results of this paper can be extended in a straightforward manner to a coordinated decentralized architecture similar to that of Section 3 and consisting of m (m &gt; 2) local sites. This is explained in <ref> [10] </ref>. Finally, our analysis was based on a set of assumptions, some of which, namely the liveness of the language and the nonexistence of cycles of unobservable events, can be relaxed easily as discussed in [8]. <p> However, the assumptions on the order of message reception at the coordinator site are indeed critical. In <ref> [10] </ref> we present an example where not preserving the global order of reception of messages at the coordinator site leads to declaring a false positive indefinitely. The example reveals some fundamental limitations of the untimed DES mathematical model that is used.
References-found: 10

