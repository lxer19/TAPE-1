URL: http://wwwipd.ira.uka.de/~prechelt/Biblio/jakk_pattern09-1997.ps.gz
Refering-URL: 
Root-URL: 
Email: (prechelt@ira.uka.de)  http://wwwipd.ira.uka.de/prechelt/  
Phone: +49/721/608-4068, Fax: +49/721/694092  
Title: An experiment on the usefulness of design patterns: Detailed description and evaluation  
Author: Lutz Prechelt 
Date: 9/1997 June 16, 1997  
Address: D-76128 Karlsruhe, Germany  
Affiliation: Fakult at fur Informatik Universit at Karlsruhe  
Pubnum: Technical Report  
Abstract: Advocates of software design patterns claim that using design patterns improves communication between software people. The controlled experiment that we describe in this report tests the hypotheses that software maintainers of well-structured, well-documented software containing design patterns can make changes (1) faster and (2) with less errors if the use of patterns is explicitly documented in the software. The experiment was performed with 74 participants of a university course on Java and design patterns. It finds that both hypotheses appear to be true, although the observed effects were relatively weak, presumably because the tasks were too simple in the experiment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Beck, J.O. Coplien, R. Crocker, L. Dominick, G. Meszaros, F. Paulisch, and J. Vlissides. </author> <title> Industrial experience with design patterns. </title> <booktitle> In 18th Intl. Conf. on Software Engineering, </booktitle> <pages> pages 103114, </pages> <address> Berlin, March 1996. </address> <publisher> IEEE CS press. </publisher>
Reference-contexts: A documentation format was developed and today a design pattern is a packaged description of a common software design problem, its context, appropriate terminology, one or several solutions, and their advantages, constraints, and other properties. According to practitioners <ref> [1, 6] </ref>, advantages of design patterns are first that less experienced designers can produce better designs with patterns. <p> As often in software engineering, all this activity builds on belief not knowledge that the developments are useful. Currently, this belief grounds on intuitive judgement or at best on anecdotal evidence as reported by practitioners from the pattern community <ref> [1] </ref>. Our group believes that systematic tests of purported advantages have to be carried out in order to understand the mechanisms: whether, why, when, and to what extent these advantages exist. Such tests will also help avoid expensive developments in useless or less fruitful directions. <p> The only reports available are experience reports and anecdotal evidence from protagonists of the design pattern community <ref> [1] </ref>. Technical Report 9/1997, Lutz Prechelt 6 Chapter 1: Introduction 1.4 How to use this report This report is meant to provide a most detailed documentation of the experiment and its results.
Reference: [2] <author> Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerlad, and Michael Stal. </author> <title> Pattern-Oriented Software Architecture A System of Patterns. </title> <publisher> John Wiley and Sons, </publisher> <address> Chichester, UK, </address> <year> 1996. </year>
Reference-contexts: other directions: Groups of patterns are presented as so-called pattern languages, pattern taxonomies are suggested, patterns on higher levels of abstraction (architectural patterns) or lower levels of abstraction (idioms) are collected, formalizations are sought, tools are built for discovering new patterns or for recovering known patterns from existing software etc. <ref> [2] </ref>. As often in software engineering, all this activity builds on belief not knowledge that the developments are useful. Currently, this belief grounds on intuitive judgement or at best on anecdotal evidence as reported by practitioners from the pattern community [1].
Reference: [3] <author> Larry B. Christensen. </author> <title> Experimental Methodology. </title> <publisher> Allyn and Bacon, </publisher> <address> Needham Heights, MA, 6th edition, </address> <year> 1994. </year>
Reference-contexts: We balanced across the subjects the order of the two programs, the order of having and not having PD, and the combination of both, i.e., we used a counterbalanced experiment design <ref> [3] </ref>; see Table 2.1. Furthermore, we also balanced the four resulting groups for expected subject ability, measured by the number of points each subject received in the lab course, using stratified random sampling. <p> In the present case, this may either be an advantage or a disadvantage: Professional programmers may have less need for PD because of their experience but just as well they may also be able to exploit it more profitably than our student subjects. 1 Definition from <ref> [3] </ref>: Internal validity refers to the extent to which we can accurately state that the independent variable produced the observed effect. Technical Report 9/1997, Lutz Prechelt 18 Chapter 2: Description of the experiment Another obvious difference is program size.
Reference: [4] <author> Bradley Efron and Robert Tibshirani. </author> <title> An introduction to the Bootstrap. Monographs on statistics and applied probability 57. </title> <publisher> Chapman and Hall, </publisher> <address> New York, London, </address> <year> 1993. </year>
Reference-contexts: A nice introduction into resampling for statistical laymen is by Simon [8]. Readers with deeper statistical knowledge may prefer the more mathematical yet highly understandable text of Efron and Tibshirani <ref> [4] </ref>. The only other statistical test used is the 2 test on a four field table for testing the significance of frequency differences of a binary attribute. The application is comparing the incidence of a certain event in two experimental groups.
Reference: [5] <author> Norman E. Fenton. </author> <title> Software Metrics: A Rigorous Approach. </title> <publisher> Chapman and Hall, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: We also study the learning effect from the first to the second task performed by each subject. 3.2.1 Metrics employed In the evaluation below, we following measurements and criteria will be used. Each class of them is described by the following terms <ref> [5] </ref>: A measurement can be either objective (and therefore in principle completely reproducible and out of question) or subjective (and therefore subject to debate); it can be either direct or be derived from other measurements; it can be on a nominal, ordinal, interval, cardinal, or absolute scale; it can have limited
Reference: [6] <author> Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides. </author> <title> Design Patterns: Elements of Reusable Object-Oriented Software. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1995. </year>
Reference-contexts: A documentation format was developed and today a design pattern is a packaged description of a common software design problem, its context, appropriate terminology, one or several solutions, and their advantages, constraints, and other properties. According to practitioners <ref> [1, 6] </ref>, advantages of design patterns are first that less experienced designers can produce better designs with patterns. <p> The first larger, orderly collection of design patterns was presented in 1995 as a book by Gamma, Helms, Johnson, and Vlissides <ref> [6] </ref>, often called the Gang of Four (GoF). The book enjoyed a giant success and resulted in heavily increased interest in design patterns. 4 1.2 Experiment overview 5 Currently the number of design patterns reported in the literature is exploding and there are several conferences on the topic [7].
Reference: [7] <author> Douglas Schmidt. </author> <title> Collected papers from the plop '96 and europlop '96 conferences. </title> <type> Technical Report wucs-97-07, </type> <institution> Washington University Department of Computer Science, St. Louis, </institution> <month> February </month> <year> 1997. </year> <booktitle> (Conference Pattern languages of programs). </booktitle>
Reference-contexts: The book enjoyed a giant success and resulted in heavily increased interest in design patterns. 4 1.2 Experiment overview 5 Currently the number of design patterns reported in the literature is exploding and there are several conferences on the topic <ref> [7] </ref>. Some of the new design patterns are appealing, but most are only minor variations of known ones.
Reference: [8] <author> Julien L. Simon. </author> <title> Resampling: The new statistics. </title> <publisher> Duxbury Press, </publisher> <address> Belmont, CA, </address> <year> 1992. </year> <note> http://www.statistics.com. 117 </note>
Reference-contexts: In contrast to classical statistical methods, resampling avoids distributional assumptions and allows for using the same procedure in all cases. A nice introduction into resampling for statistical laymen is by Simon <ref> [8] </ref>. Readers with deeper statistical knowledge may prefer the more mathematical yet highly understandable text of Efron and Tibshirani [4]. The only other statistical test used is the 2 test on a four field table for testing the significance of frequency differences of a binary attribute.
References-found: 8

