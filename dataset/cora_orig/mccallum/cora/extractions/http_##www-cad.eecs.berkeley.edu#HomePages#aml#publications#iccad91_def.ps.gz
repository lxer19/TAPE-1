URL: http://www-cad.eecs.berkeley.edu/HomePages/aml/publications/iccad91_def.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/aml/publications/index.html
Root-URL: http://www.cs.berkeley.edu
Phone: 6-parity 64 6 6 6 4.3 7-parity 128 7 7 7 10.7 8-parity 256 8 8 8 61.9 9-parity 512 9 9 11 878.1 10-parity 1024 10 10 24 1759.8 6-asymmetry 64 24 2 2 1.5 8-asymmetry 256 64 2 2 23.2 10-asymmetry 1024 160 2 2 408.6 12-asymmetry 4096 384 2 2 11752.9  200 80 6 6 144 6 87 dnf2 200 40 8 8 84 9 21 dnf3 200 32 6 7 19 6 15 dnf4 200 64 10 13 183 9 80 mux11 200 32 8 14 39 8 33 ex5of32 200 32 16 15 49 15 21  
Title: Problem Table 1: Experiments using threshold gates. Table 2: Experiments using logic gates. to the
Author: m n 
Keyword: Problem ESPRESSO LSAT Name m n T E T cpu E T cpu  
Note: dnf1  5 Conclusions and future work The most interesting single direction for future work in this area is the extension of these techniques  Acknowledgments This work was supported by the Air Force Office of Scientific Research (AFOSR/JSEP) under Contract No. F49620-90-C-0029 and the Portuguese INVOTAN committee. The authors would like to thank Gregory  
Address: cpu  
Affiliation: T E T  
Abstract: In the second set of problems, we compared the performance of the described algorithm with the performance of a popular two-level minimizer, ESPRESSO [4]. To allow for a fair comparison, LSAT was constrained to use only and gates in the first level and or gates in the second level. A detailed description of the functions used for these tests can be found in [8]. The input data sets were created by randomly generating a minterm and getting its correct classification from the function description. For each function, 2 different inputs were tried, with a number of minterms of 200 and 600. According to the generation procedure, all instances of the problem should accept a solution with no more cubes than the theoretical minimum. Table 2 shows that although no specific code optimization was performed for the special case when a cube cover is to be found, the performance of the algorithm still compares well with a classic two-level optimizer. In particular, it obtains results that are either similar or better than ESPRESSO and much faster. Moreover, the speed gain increases with the size of the problem. This is due, in part, to the fact that LSAT does not require an explicit cover for the f DC set while ESPRESSO does. Is is also clear from these results that both programs obtain results very far from the minimum in a large number of cases. A different approach to this optimization problem may lead to better results in these and other problems. We designed and implemented and algorithm for the synthesis of threshold gate networks and have shown, experimentally, that results near the theoretical minimum are obtainable in many problems. The algorithm has a run time polynomial in the input size and its performance degrades slowly with the size of the problem. Experimental results have also pointed out the need for a deeper understanding of this particular version of this optimization problem. In particular, the reason why, in some cases, different algorithms find similar solutions very far from the optimum requires further study. [1] K. Y. Siu & J. Bruck "On the Power of Threshold Circuits with Small Weights", to appear in SIAM J. Discrete Math. [2] K. Y. Siu & J. Bruck "Neural Computation of Arithmetic Functions" Proc. IEEE, 78, No. 10:1669-1675, October 1990. [3] A. Blumer, A. Ehrenfeucht, D. Haussler & M. War-muth "Occam's Razor", Information Processing Letters, vol 24, pp. 377-380, North-Holland, 1987. [4] R. Brayton, G. Hachtel, C. McMullen & A. Sangiovanni-Vincentelli "Logic Minimization Algorithms for VLSI Synthesis", Kluwer Academic Publishers, 1984. [5] R. Brayton, G. Hachtel & A. Sangiovanni-Vincentelli "Multilevel Logic Synthesis", Proceedings of the IEEE, vol. 78:2, pp. 264-300, February 1990. [6] S. Muroga "Threshold Logic and its Applications", Wiley-Interscience, 1971. [7] A. Oliveira "Logic Synthesis Using Threshold Gates", Internal Memo, UC Berkeley, 1990. [8] G. Pagallo & D. Haussler "Boolean Feature Discovery in Empirical Learning", Machine Learning, 5:71-99, 1990. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Y. Siu & J. </author> <title> Bruck "On the Power of Threshold Circuits with Small Weights", </title> <note> to appear in SIAM J. Discrete Math. </note>
Reference: [2] <author> K. Y. Siu & J. </author> <title> Bruck "Neural Computation of Arithmetic Functions" Proc. </title> <journal> IEEE, </journal> <volume> 78, No. 10 </volume> <pages> 1669-1675, </pages> <month> October </month> <year> 1990. </year>
Reference: [3] <author> A. Blumer, A. Ehrenfeucht, D. Haussler & M. </author> <title> War-muth "Occam's Razor", </title> <journal> Information Processing Letters, </journal> <volume> vol 24, </volume> <pages> pp. 377-380, </pages> <publisher> North-Holland, </publisher> <year> 1987. </year>
Reference: [4] <author> R. Brayton, G. Hachtel, C. McMullen & A. </author> <title> Sangiovanni-Vincentelli "Logic Minimization Algorithms for VLSI Synthesis", </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1984. </year>
Reference: [5] <author> R. Brayton, G. Hachtel & A. </author> <title> Sangiovanni-Vincentelli "Multilevel Logic Synthesis", </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 78:2, </volume> <pages> pp. 264-300, </pages> <month> February </month> <year> 1990. </year>
Reference: [6] <author> S. </author> <title> Muroga "Threshold Logic and its Applications", </title> <publisher> Wiley-Interscience, </publisher> <year> 1971. </year>
Reference: [7] <author> A. </author> <title> Oliveira "Logic Synthesis Using Threshold Gates", Internal Memo, </title> <institution> UC Berkeley, </institution> <year> 1990. </year>

References-found: 7

