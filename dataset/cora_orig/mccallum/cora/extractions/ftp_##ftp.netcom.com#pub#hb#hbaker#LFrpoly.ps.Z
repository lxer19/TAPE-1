URL: ftp://ftp.netcom.com/pub/hb/hbaker/LFrpoly.ps.Z
Refering-URL: ftp://ftp.netcom.com/pub/hb/hbaker/home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 91436(818) 501-4956(818) 986-1360 (FAX)  
Title: Sparse Polynomials and Linear Logic  
Author: Henry G. Baker 
Address: 16231 Meadow Ridge Way, Encino, CA  
Affiliation: Nimble Computer Corp.,  
Note: ACM Sigsam Bulletin 27,4 (December1993), 10-14. Copyright 1993 by Nimble Computer Corporation 1  This material is based upon work supported by the National Science Foundation under Grant No. III-9261682.  
Abstract: The Gabriel FRPOLY benchmark was rewritten in a "linear" fragment of Common Lisp and is competitive with the standard FRPOLY benchmark code. This linear FRPOLY is considerably more perspicuous than the standard code, while its running time is only 6% longer than that of the standard FRPOLY code. Linear FRPOLY recovers all of its garbage, and its "high water mark" space requirement is very probably smaller than that of the standard code. In the expansion of (x+y+z+1) 15 , the standard FRPOLY does 48,892 new conses, while the linear FRPOLY does only 4821 new consesi.e., it does only about 10% of the consing of the standard FRPOLY code. We also tested versions of FRPOLY in which squarings were not used for exponentiation. This nonlinear FRPOLY does 38,780 conses, and takes only 59% of the time of the nonlinear squaring FRPOLY. The linear non-squaring FRPOLY takes only 62% of the time of the linear squaring FRPOLY, and cuts the new consing to 3988 cells. A slightly slower version cuts the new consing to 2590 cellsonly 567 cells (28%) more than are used in the result. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abramsky, S. </author> <title> "Computational interpretations of linear logic". </title> <journal> Theor. Comp. Sci. </journal> <volume> 111 (1993), </volume> <pages> 3-57. </pages>
Reference: <author> Baker, H.G. </author> <title> "The Buried Binding and Dead Binding Problems of Lisp 1.5: Sources of Incomparability in Garbage Collector Measurements". </title> <booktitle> ACM Lisp Pointers V,2 (Apr.-June1992), </booktitle> <pages> 11-19. </pages>
Reference: <author> Baker, H.G. </author> <title> "Lively Linear Lisp 'Look Ma, No Garbage!'". </title> <journal> ACM Sigplan Notices 27,8 (Aug.1992), </journal> <pages> 89-98. </pages>
Reference: <author> Chirimar, J., et al. </author> <title> "Proving Memory Management Invariants for a Language Based on Linear Logic". </title> <booktitle> Proc. ACM Conf. Lisp & Funct. Prog., </booktitle> <address> San Francisco, CA, </address> <month> June, </month> <year> 1992, </year> <note> also ACM Lisp Pointers V,1 (Jan.-Mar.1992), 139. </note>
Reference: <author> Collins, G.E. </author> <title> "A method for overlapping and erasure of lists". </title> <journal> CACM 3,12 (Dec.1960), </journal> <pages> 655-657. </pages>
Reference: <author> Fateman, R. </author> <title> "On the Computation of Powers of Sparse Polynomials". </title> <journal> Studies Appl. Math. </journal> <month> 53,2 </month> <year> (1974), </year> <pages> 145-155. </pages>
Reference: <author> Fateman, R. "FRPOLY: </author> <title> A Benchmark Revisited". </title> <journal> Lisp & Symbolic Comput. </journal> <volume> 4 (1991), </volume> <pages> 155-164. </pages>
Reference: <author> Gabriel, </author> <title> R.P. Performance and Evaluation of Lisp Systems. </title> <publisher> MIT Press, Camb., </publisher> <address> MA 1985. </address>
Reference: <author> Girard, J.-Y. </author> <title> "Linear Logic". </title> <journal> Theoretical Computer Sci. </journal> <volume> 50 (1987),1-102. </volume>
Reference: <author> Mason, </author> <title> I.A. The Semantics of Destructive Lisp. </title> <type> CSLI LN 5, </type> <institution> Stanford, </institution> <address> CA, </address> <year> 1986. </year>
Reference: <author> Shalit, A. </author> <title> Dylan: An objectoriented dynamic language. </title> <institution> Apple Computer, Camb., </institution> <address> MA, </address> <year> 1992. </year>
Reference: <author> Strom, R.E. </author> <title> "Mechanisms for Compile-Time Enforcement of Security". </title> <booktitle> Proc. 10th ACM POPL, </booktitle> <month> Jan. </month> <year> 1983. </year>
Reference: <author> Wadler, P. </author> <title> "Is there a use for linear logic?". </title> <booktitle> Proc. ACM PEPM'91, </booktitle> <address> New Haven, </address> <month> June </month> <year> 1991, </year> <pages> 255-273. </pages>
Reference: <author> Wakeling, D., and Runciman, C. </author> <title> "Linearity and Laziness". </title> <journal> Proc. Funct. Progr. & Computer Arch., </journal> <volume> LNCS 523, </volume> <publisher> Springer-Verlag, </publisher> <month> Aug. </month> <year> 1991, </year> <pages> 215-240. </pages>
References-found: 14

