URL: ftp://ftp.idsia.ch/pub/techrep/IDSIA-05-99.ps.gz
Refering-URL: http://www.idsia.ch/techrep.html
Root-URL: http://www.idsia.ch/techrep.html
Title: Ant Systems  
Author: Eric D. Taillard 
Address: Corso Elvezia 36, CH-6900 Lugano, Switzerland  
Affiliation: Istituto Dalle Molle di Studi sull'Intelligenza Artificiale (IDSIA),  
Abstract: This article describes Ant Systems, a meta-heuristic based on an ant foraging metaphor. The presentation of Ant Systems has been somewhat generalized by adding a "Queen" process in charge of co-ordinating classical "Ant" processes, so that recent Ant Systems can be naturally included while remaining close to the metaphor. To illustrate how Ant Systems are practically implemented, a number of applications to the quadratic assignment problem are reviewed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Colorni, A., M. Dorigo and V. Maniezzo, </author> <title> "Distributed optimization by ant colonies", in Toward a practice of autonomous systems: </title> <booktitle> proceedings of the First European Conference on Artificial Life (ECAL 91), </booktitle> <editor> F.J. Varela and P. Bourgine (eds.), </editor> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1992, </year> <pages> 134-142. </pages>
Reference-contexts: So the ants are able to find the shortest path between nest and food, even if each ant has an extremely limited view of the surrounding area. Inspired by this natural optimization process, Colorni, Dorigo and Maniezzo <ref> [1] </ref> design a new meta-heuristic that can be applied to combinatorial optimization problems. The basic idea is to consider artificial ant processes that repeatedly build solutions to the optimization problem. <p> Inclusion of an "intelligent" queen helps in the design of efficient algorithms, since search strategies can be included within the artificial ant system, while remaining close to the ant metaphor. 2 Artificial Ant Systems Since the introduction of Ant Systems <ref> [1] </ref>, the algorithms based on the ant metaphor have evolved. Instead of reviewing successive evolutions of these algorithms, a general Ant System model, developed from the real ant model, is presented. <p> Then we review implementations for the quadratic assignment problem for which Ant Systems have proven to be among the best heuristic methods for some problem instance classes. 2.1 Historical application to the TSP The first Ant System application to a combinatorial optimization problem was programmed for the traveling salesman problem <ref> [1] </ref>. In this application, the memory is a vector m of real numbers (m e ) associated with each edge e 2 E of the graph G (V; E) in which a shortest tour passing exactly once by each vertex of V is sought. <p> The memory updates were also performed asynchronously by the Ant processes during the solution construction. Unfortunately, this system was found to be less efficient than another implementation with synchronized Ant processes that can be described as follows: In the best implementation of the algorithm <ref> [1] </ref>, the Queen process activates k parallel Ant processes at each loop. Each Ant process builds a solution with the probabilistic rule described above, send the solution to the Queen process and dies.
Reference: [2] <author> Deneubourg, J.-L., S. Aron, S. Goss and J.M. Pasteels, </author> <title> "The self-organizing exploratory pattern of the Argentine ant", </title> <journal> Journal of Insect Behavior 3, </journal> <year> 1990, </year> <pages> 159-168. </pages>
Reference-contexts: 1 A model of real ants The metaphor on which Ant Systems are based can be illustrated by observations of ants of the species Linepithema humile <ref> [2] </ref>. An ant colony nest is isolated, and a food source is provided which is accessible by a bridge composed of two branches of the same length.
Reference: [3] <author> Dorigo, M. and L.-M. Gambardella, </author> <title> "Ant colony system: A cooperative learning approach to the traveling salesman problem", </title> <journal> IEEE Transactions on Evolutionary Computation 1, </journal> <year> 1997, </year> <pages> 53-66. </pages>
Reference-contexts: The improvement of each constructed solution with a local search. 3. The addition of intensification and diversification strategies in memory management, i.e. the introduction of a stronger co-ordination between the Ant processes. The new method has been named ACS (Ant Colony System) <ref> [3] </ref>. 2.2 Applications to the quadratic assignment problem It is possible to design completely different Ant System-based heuristics by: 1. Modifying the type of information memorized, 2. Changing memory update rules (or learning mechanism), 3. Modifying the constructive procedure, 4. Including alternative search strategies.
Reference: [4] <author> Dorigo, M. and G. Di Caro, </author> <title> "The Ant Colony Optimization Meta-Heuristic", in New Ideas in Optimization, </title> <editor> D. Corne, M. Dorigo and F. Glover (eds.), </editor> <publisher> McGraw-Hill, </publisher> <year> 1999. </year>
Reference-contexts: Finally, in order to integrate a stronger, more intelligent form of co-operation between Ant processes, the Queen process has been introduced [13]. This process is also called ACO by other authors <ref> [4] </ref> (Ant Colony Optimization). The art of designing a heuristic based on Ant Systems resides principally in the choice of the information contained in the memory (and their update) and in the way this information is used for constructing a new solution.
Reference: [5] <author> Feo, T. and M. Resende, </author> <title> "Greedy randomized adaptive search procedures", </title> <journal> Journal of Global Optimization 16, </journal> <year> 1995, </year> <pages> 109-133. </pages>
Reference-contexts: Ant Systems share common features with Genetic Algorithms, Greedy Randomized Adaptive Search Procedures <ref> [5] </ref>, Tabu Search and Scatter Search. Indeed, Ant Systems are based on 9 a population of artificial agents, the Ant processes, but the interaction between individuals, through a common memory, is quite unlike classical genetic operators.
Reference: [6] <author> Gambardella, L. M., E. D. Taillard and M. Dorigo, </author> <title> "Ant colonies for the quadratic assignment problem", </title> <journal> Journal of the Operational Research Society 50, </journal> <year> 1999, </year> <pages> 167-176. 10 </pages>
Reference-contexts: A moving average c of the values of the last m solutions received is computed and the memory entries are updated as follows: m i b m i b + m 0 i c LB * Hybrid Ant System (HAS) A first principle of the Hybrid Ant System <ref> [6] </ref> is to replace the Ant process constructive procedure by a probabilistic local search: Instead of building 7 a brand new solution each time an Ant process is activated, the Ant pro-cess receives a starting solution and applies a given number of local search moves to that solution.
Reference: [7] <author> Glover, F. and M. </author> <title> Laguna, Tabu Search, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston/Dordrecht/London, </address> <year> 1997. </year>
Reference-contexts: Updates are then performed in a more intelligent way, following search strategies. For example, only an elite solution may be used to update the trails, thus implementing an intensification strategy (see <ref> [7] </ref>). Another example is to decrease the value of the trails corresponding to the elements chosen in the solution which has been built (negative feedback), thus implementing a diversification strategy.
Reference: [8] <author> Goss, S., S. Aron, J.-L. Deneubourg and J.M. Pasteels, </author> <title> "Self-organized shortcuts in the Argentine ant", </title> <address> Naturwissenschaften 76, </address> <year> 1989, </year> <pages> 579-581. </pages>
Reference-contexts: Since the ant deposits additional pheromone when traveling, the foraging process evolves with positive feedback. Moreover, pheromones evaporate, meaning that a trail that is not used gradually disappears, amplifying the positive feedback effect. 1 The observation has been repeated with a bridge whose branches have dif-ferent lengths <ref> [8] </ref>. Applying the same probabilistic behavior model, it can be deduced that the ants will rapidly choose the shorter branch and this is in fact observed.
Reference: [9] <author> Lin, S. and B. W. Kernighan, </author> <title> "An effective heuristic algorithm for the traveling-salesman problem", </title> <note> Operations Research 21, </note> <year> 1973, </year> <pages> 498-516. </pages>
Reference-contexts: The value m e associated with each edge e gives therefore a stronger weight to edges which appear in good solutions and to edges that are often chosen. This approach was able to produce, for small problem instances, solutions of slightly better quality than Lin and Kernighan's <ref> [9] </ref> heuristic. This approach gives a very limited role to the Queen process, which is why it was not initially integrated into Ant Systems explicitly. Recently, the system has been greatly improved by: 1. The use of a more elaborated construction procedure, including candidate lists and additional parameters. 2.
Reference: [10] <author> Maniezzo, V., </author> <title> "Exact and Approximate Nondeterministic Tree-Search Procedures for the Quadratic Assignment Problem", </title> <type> Technical Report CSR 98-1, </type> <address> C. </address> <institution> L. in Scienze dell'Informazione, Universita di Bologna, Sede di Cesena, Italy, </institution> <year> 1998. </year> <note> To appear in INFORMS Journal on Computing. </note>
Reference-contexts: The Max-Min Ant System has also been applied to the traveling salesman problem. * Approximate Nondeterministic Tree Search (ANTS) The main innovation of the Approximate Nondeterministic Tree Search <ref> [10] </ref> lies in the constructive procedure: At each step, the procedure randomly places a facility on a location with a probability depending on the memory, as usual for Ant Systems, but also depending on the computation of a lower bound, similar to what is done in implicit enumeration methods, such as
Reference: [11] <author> Stutzle, T. and H. H. Hoos, </author> <title> "The Max-Min Ant System and Local Search for Combinatorial Optimization Problems", in Meta-heuristics: Advances and Trends in Local Search Paradigms for Optimization, </title> <editor> S. Voss, S. Martello, I. H. Osman and C. Roucairol (eds.), </editor> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston/Dordrecht/London, </address> <year> 1999, </year> <pages> 313-329. </pages>
Reference-contexts: The higher the quality and the larger the number of solutions generated with facility i placed on location r, the higher the m ir value is. * Max-Min Ant System (MMAS) The main idea of the Max-Min Ant System <ref> [11] </ref> is to bound the values contained in the memory in an interval: m min m ir m max ; 8m ir , where m min and m max are two parameters.
Reference: [12] <author> Taillard E. D., </author> <title> "Robust taboo search for the quadratic assignment problem", </title> <booktitle> Parallel computing 17, </booktitle> <year> 1991, </year> <pages> 443-455. </pages>
Reference-contexts: There are two version of MMAS: the first one uses a descent procedure stopping at the first local optimum as local search and the second one uses the taboo search of Taillard <ref> [12] </ref>. Queen process Initially, the Queen process sets all the m ir values to m max .
Reference: [13] <author> Taillard, E. D., "FANT: </author> <title> Fast ant system", </title> <type> Technical report IDSIA-46-98, </type> <institution> IDSIA, Lugano, </institution> <year> 1998. </year>
Reference-contexts: More recently, the concept of artificial trails has been interpreted as a memory [14] storing information about the use of particular components in the solutions previously built. Finally, in order to integrate a stronger, more intelligent form of co-operation between Ant processes, the Queen process has been introduced <ref> [13] </ref>. This process is also called ACO by other authors [4] (Ant Colony Optimization). <p> if no b is better than b , the Queen process performs a diversification steps that consists of replacing k 1 solutions in the pool by random ones and by replacing the last one with fl . * Fast Ant System (FANT) The basic idea of the Fast Ant System <ref> [13] </ref> is to design a method which is as simple as possible while incorporating diversification and intensification strategies.
Reference: [14] <author> Taillard, E. D., L.-M. Gambardella, M. Gendreau, and J.Y. Potvin, </author> <title> "Adaptive Memory Programming: A Unified View of Meta-Heuristics", </title> <booktitle> EURO XVI Conference Tutorial and Research Reviews booklet (semi-plenary sessions), </booktitle> <address> Brussels, </address> <month> July </month> <year> 1998. </year> <month> 11 </month>
Reference-contexts: Another example is to decrease the value of the trails corresponding to the elements chosen in the solution which has been built (negative feedback), thus implementing a diversification strategy. More recently, the concept of artificial trails has been interpreted as a memory <ref> [14] </ref> storing information about the use of particular components in the solutions previously built. Finally, in order to integrate a stronger, more intelligent form of co-operation between Ant processes, the Queen process has been introduced [13]. This process is also called ACO by other authors [4] (Ant Colony Optimization). <p> However, the method can be easily extended to the case of an arbitrary number of Ant processes. 3 General considerations Ant Systems belongs to the wide class of meta-heuristics which works with a memory or Adaptive Memory Programming <ref> [14] </ref>. Ant Systems share common features with Genetic Algorithms, Greedy Randomized Adaptive Search Procedures [5], Tabu Search and Scatter Search. Indeed, Ant Systems are based on 9 a population of artificial agents, the Ant processes, but the interaction between individuals, through a common memory, is quite unlike classical genetic operators. <p> Efficient Ant Systems very often embed elements that are unrelated to the metaphor which inspired the first Ant Systems. Typical foreign elements are the use of a local search or the memory central management. This is perhaps a natural development for meta-heuristics: it has been noted <ref> [14] </ref> that the best heuristic methods are often inspired by many basic meta-heuristics. For example, most efficient genetic algorithms include a local search.
References-found: 14

