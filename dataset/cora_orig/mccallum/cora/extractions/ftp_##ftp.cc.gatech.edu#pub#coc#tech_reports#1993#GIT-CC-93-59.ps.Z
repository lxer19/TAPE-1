URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1993/GIT-CC-93-59.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.93.html
Root-URL: 
Email: eleni@pravda.gatech.edu goel@pravda.gatech.edu  
Title: GIT-CC-93-59 Reasoning About Function in Reflective Systems  
Author: Eleni Stroulia Ashok K. Goel 
Keyword: Acknowledgements  
Note: This work has been supported by the National Science Foundation (research grant IRI-92-10925), the Office of Naval Research (research contract N00014-92-J-1234), and the Advanced Projects Research Agency. In addition, Stroulia's work has been supported by an IBM grad uate fellowship.  
Abstract: Functional models have been extensively investigated in the context of several problem-solving tasks such as device diagnosis and design. In this paper, we view problem solvers themselves as devices, use functional models to represent how they work, and subsequently employ these models for performance-driven reflective reasoning and learning. We represent the functioning of a problem solver as a structure-behavior-function model that specifies how the knowledge and reasoning of the problem solver results in the achievement of its goals. We view performance-driven learning as the task of redesigning the knowledge and reasoning of the problem solver. We use the structure-behavior-function model of the problem solver to monitor its reasoning, reflectively assign blame when it fails, and redesign its knowledge and reasoning. This paper describes an architecture for reflective model-based reasoning that is capable of a broad range of learning tasks. It also illustrates reflective model-based learning using examples from the Autognostic system, a reflective path planner. 
Abstract-found: 1
Intro-found: 1
Reference: [Abu-Hanna et al. 1991a] <author> Abu-Hanna, A., </author> <title> Benjamins, V.R., and Jansweijer, W.N.H. (1991a) Device Understanding and modeling for Diagnosis. </title> <journal> In IEEE EXPERT, </journal> <volume> 6(2) </volume> <pages> 26-32. </pages>
Reference: [Allemang 1990] <author> Allemang, D., </author> <year> (1990), </year> <title> Understanding Programs as Devices, </title> <type> PhD Thesis, </type> <institution> The Ohio State University. </institution>
Reference-contexts: The focus of this paper, however, is the use of functional models in reflection. Hence, here we only compare our work to other research which has investigated the uses of functional models of abstract devices <ref> [Allemang 1990, Weintraub 1991, Johnson 1993] </ref>. Allemang has used the Functional Representation framework to model computer programs, and has shown how such models can be used for program verification.
Reference: [Baker & Brown 1984] <author> Baker, L., and Brown, A.L., </author> <title> (1984) Metacognitive skills of reading. </title> <editor> In D. Pear-son (ed.), </editor> <title> A Handbook of reading research, </title> <address> New York: </address> <publisher> Longman. </publisher>
Reference-contexts: These failures are opportunities for learning. One way that an intelligent agent can improve its problem-solving performance is by reflecting upon these instances of failed problem solving. The important affects of reflection to learning and performance improvement have been established by a long line of psychological research <ref> [Flavell 1971, Piaget 1971, Kluwe 1982, Baker & Brown 1984] </ref>.
Reference: [Chandrasekaran 1987] <author> Chandrasekaran, B., </author> <title> (1987) Towards a functional architecture for intelligence based on generic information processing tasks, </title> <booktitle> In Proc. of the Tenth IJCAI, </booktitle> <pages> 1183-1192, </pages> <address> Milan. </address>
Reference-contexts: Marr [Marr 1982] too emphasized the need to separate the computational theory embodied in an intelligent system from its implementation. He advocated an analysis of information processing in terms of tasks and subtasks, and the mechanisms for accomplishing the tasks. Chandrasekaran <ref> [Chandrasekaran 1987] </ref> proposed that information-processing tasks fall into major classes called generic tasks. All tasks that are instances of the same generic task can be solved by the same methods.
Reference: [Chandrasekaran 1989] <author> Chandrasekaran, B., </author> <title> (1989) Task Structures, </title> <journal> Knowledge Acquisition and Machine Learning. Machine Learning, </journal> <volume> 4 </volume> <pages> 341-347. </pages>
Reference-contexts: All tasks that are instances of the same generic task can be solved by the same methods. This led him to the use of task structures - task-method-subtask decomposition as a way of building AI systems and modeling cognition <ref> [Chandrasekaran 1989] </ref>. Some of Clancey's [Clancey 1985], McDermott's [McDermott 1988], Steels [Steels 1990], and Wielinga and Breuker's [Wielinga & Breuker 1986] work also shares this functional perspective. In our work, we have adopted Chandrasekaran's task structures as the framework for describing problem solving.
Reference: [Clancey 1985] <author> Clancey, W.J., </author> <title> (1985) Heuristic Classification, </title> <journal> Artificial Intelligence, 27(3):289:350 </journal>
Reference-contexts: All tasks that are instances of the same generic task can be solved by the same methods. This led him to the use of task structures - task-method-subtask decomposition as a way of building AI systems and modeling cognition [Chandrasekaran 1989]. Some of Clancey's <ref> [Clancey 1985] </ref>, McDermott's [McDermott 1988], Steels [Steels 1990], and Wielinga and Breuker's [Wielinga & Breuker 1986] work also shares this functional perspective. In our work, we have adopted Chandrasekaran's task structures as the framework for describing problem solving.
Reference: [Davis 1977] <author> Davis, R., </author> <title> (1977) Interactive transfer of expertise: Acquisition of new inference rules, </title> <journal> Artificial Intelligence, </journal> <volume> 12 </volume> <pages> 121-157. </pages>
Reference: [Davis 1980] <author> Davis, R., </author> <title> (1980) Meta-Rules: Reasoning about Control. </title> <journal> Artificial Intelligence, </journal> <volume> 15 </volume> <pages> 179-222. </pages>
Reference: [Flavell 1971] <author> Flavell, J.H., </author> <title> (1971) First discussant's comments: </title> <booktitle> What is memory development the development of? Human Development 14 </booktitle> <pages> 272-278. </pages>
Reference-contexts: These failures are opportunities for learning. One way that an intelligent agent can improve its problem-solving performance is by reflecting upon these instances of failed problem solving. The important affects of reflection to learning and performance improvement have been established by a long line of psychological research <ref> [Flavell 1971, Piaget 1971, Kluwe 1982, Baker & Brown 1984] </ref>.
Reference: [Franke 1991] <author> Franke, </author> <title> D.W (1991) Deriving and Using Descriptions of Purpose, In IEEE Expert April. </title>
Reference: [Freed et al. 1992] <author> Freed, M., Krulwich, B., Birnbaum, L., and Collins, G. </author> <title> (1992) Reasoning about performance intentions. </title> <booktitle> Proceedings of the Fourteenth Annual Conference of the Cognitive Science Society, </booktitle> <pages> 7-12. </pages>
Reference: [Forbus 1993] <author> Forbus, K. </author> <title> (1993) Qualitative Reasoning about Function: A Progress Report. </title> <booktitle> In Working Notes of Reasoning About Function Workshop, AAAI 93, </booktitle> <pages> pp 31-36. </pages>
Reference: [Gero, Lee and Tham 1991] <author> Gero, J.S., Lee, H.S., and Tham, K.W., </author> <year> (1991), </year> <title> Behaviour: A Link between Function and Structure in Design, </title> <booktitle> Proceedings IFIP WG5.2 Working Conference on Intelligent CAD, </booktitle> <pages> pp. 201-230. </pages>
Reference: [Goel 1989] <author> Goel, A., </author> <title> (1989) Integration of Case-Based Reasoning and Model-Based Reasoning for Adaptive Design Problem Solving, </title> <type> PhD Thesis, </type> <institution> The Ohio State University. </institution>
Reference-contexts: The reasoning process of a problem solver is thus described in terms of a recursive decomposition of its overall task into methods and subtasks. We use the language of structure-behavior-function (SBF) models to describe the task structure of a problem solver. SBF models <ref> [Goel 1989] </ref> are a generalization of the Functional Representation language, originally developed for modeling physical devices [Sembugamoorthy & Chandrasekaran 1986]. Adapating this language for modeling problem solvers, we express tasks as transitions between information states.
Reference: [Goel et al. 1991] <author> Goel, A., Callantine, T., Shankar, M., and Chandrasekaran, B., </author> <title> (1991) Representation, Organization, and Use of Topographic Models of Physical Spaces for Route Planning. </title> <booktitle> In Proc. Seventh IEEE Conference on AI Applications, </booktitle> <pages> 308-314, </pages> <address> Miami Beach FL, </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The problem solver uses the knowledge it has at the meta-reasoning level to monitor its reasoning, assign blame to some element of its reasoning process it when it fails, redesign it, and thus learn and improve its performance. 3 Router: A Case-Study Problem Solver In our work, we use Router, <ref> [Goel et al. 1991] </ref>, a path planning system, as a case-study problem solver. Router's task is to find a path from an initial location to a goal location in a physical space. It knows two methods that can achieve this task: a model-based method, and a case-based method.
Reference: [Johnson 1993] <author> Johnson, K., </author> <year> (1993), </year> <title> Exploiting a Functional Model of problem Solving for Error Detection in Tutoring, </title> <type> PhD Thesis, </type> <institution> The Ohio State University. </institution>
Reference-contexts: The focus of this paper, however, is the use of functional models in reflection. Hence, here we only compare our work to other research which has investigated the uses of functional models of abstract devices <ref> [Allemang 1990, Weintraub 1991, Johnson 1993] </ref>. Allemang has used the Functional Representation framework to model computer programs, and has shown how such models can be used for program verification.
Reference: [Kluwe 1982] <author> Kluwe, R.H., </author> <year> (1982). </year> <title> Cognitive Knowledge and Executive Control: </title> <editor> Metacognition. In D. R. Griffin (ed.), </editor> <title> Animal Mind Human Mind Springer-Verlag, </title> <publisher> Berlin. </publisher>
Reference-contexts: These failures are opportunities for learning. One way that an intelligent agent can improve its problem-solving performance is by reflecting upon these instances of failed problem solving. The important affects of reflection to learning and performance improvement have been established by a long line of psychological research <ref> [Flavell 1971, Piaget 1971, Kluwe 1982, Baker & Brown 1984] </ref>.
Reference: [Kumar & Upadhyaya 1992] <author> Kumar, A. and Upadhyaya, S., </author> <title> (1992) Framework for function-based Diagnosis. </title> <type> technical Report, </type> <institution> State University of New York at Buffalo, </institution> <address> Buffalo NY 14260. </address>
Reference: [Kuokka 1990] <author> Kuokka, </author> <title> D.R., (1990) The Deliberative Integration of Planning, Execution, and Learning, </title> <institution> Carnegie Mellon, Computer Science, </institution> <note> Technical Report CMU-CS-90-135. </note>
Reference: [Marr 1982] <author> Marr, D., </author> <title> (1982) Vision: A Computational investigation into the Human Representation and Processing of Visual Information, W.H. </title> <publisher> Freeman, </publisher> <address> San Francisco. </address>
Reference-contexts: He advocated that knowledge should be characterized functionally, in terms of what goals it helps to accomplish, and not structurally, in terms of particular objects and their relations. Marr <ref> [Marr 1982] </ref> too emphasized the need to separate the computational theory embodied in an intelligent system from its implementation. He advocated an analysis of information processing in terms of tasks and subtasks, and the mechanisms for accomplishing the tasks.
Reference: [McDermott 1988] <author> McDermott J., </author> <title> (1988) Preliminary steps toward a taxonomy of problem-solving methods, In Automating Knowledge Acquisition for Expert Systems, </title> <editor> Sandra Marcus (ed.), </editor> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: All tasks that are instances of the same generic task can be solved by the same methods. This led him to the use of task structures - task-method-subtask decomposition as a way of building AI systems and modeling cognition [Chandrasekaran 1989]. Some of Clancey's [Clancey 1985], McDermott's <ref> [McDermott 1988] </ref>, Steels [Steels 1990], and Wielinga and Breuker's [Wielinga & Breuker 1986] work also shares this functional perspective. In our work, we have adopted Chandrasekaran's task structures as the framework for describing problem solving.
Reference: [Mitchell et al. 1989] <author> Mitchell, T., Allen, J., Chalasani, P., Cheng, J., Etzioni, O., Ringuette, M., Schlimmer, J., </author> <title> (1989) Theo: A Framework for Self-Improving Systems. </title> <booktitle> In Architecture for Intelligence, </booktitle> <publisher> Lawrence Erlbaum. </publisher>
Reference: [Newell 1982] <author> Newell, A., </author> <booktitle> (1982) The Knowledge level AI Journal 19(2) </booktitle> <pages> 87-127. </pages>
Reference-contexts: Newell <ref> [Newell 1982] </ref>, for example, made a distinction between the level at which goals and knowledge are specified and lower levels at which goals and knowledge are represented in symbolic structures.
Reference: [Piaget 1971] <author> Piaget, J., </author> <title> (1971) Biology and Knowledge Chicago: </title> <publisher> University of Chicago Press. </publisher>
Reference-contexts: These failures are opportunities for learning. One way that an intelligent agent can improve its problem-solving performance is by reflecting upon these instances of failed problem solving. The important affects of reflection to learning and performance improvement have been established by a long line of psychological research <ref> [Flavell 1971, Piaget 1971, Kluwe 1982, Baker & Brown 1984] </ref>.
Reference: [Ram & Cox 1992] <author> Ram, A. and Cox, M. T., </author> <title> (1992) Introspective Reasoning Using Meta-Explanations for Multistrategy Learning. To appear in Machine Learning: A Multistrategy Approach IV, </title> <editor> R. S. Michalski and G. Tecuci (eds.), </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference: [Price & Hunt 1992] <author> Price, C.J. and Hunt, </author> <title> J.E., (1992) Automating FMEA through multiple models, </title> <booktitle> In Research and Development in Expert Systems VIII, I. Graham (editor), </booktitle> <pages> pp 25-39. </pages>
Reference: [Sembugamoorthy & Chandrasekaran 1986] <author> Sembugamoorthy, V. and Chandrasekaran, B., </author> <title> (1986) Functional Representation of Devices and Compilation of Diagnostic Problem-Solving Systems, Experience, Memory and Problem solving, </title> <editor> J. Kolodner and C. Riesbeck(editors), </editor> <publisher> Lawrence Erlbaum, </publisher> <address> Hillsdale, NJ, </address> <pages> pp. 47-73. </pages>
Reference-contexts: We use the language of structure-behavior-function (SBF) models to describe the task structure of a problem solver. SBF models [Goel 1989] are a generalization of the Functional Representation language, originally developed for modeling physical devices <ref> [Sembugamoorthy & Chandrasekaran 1986] </ref>. Adapating this language for modeling problem solvers, we express tasks as transitions between information states. The annotations on the state transitions act as indices to the methods that are applicable to them.
Reference: [Steels 1990] <editor> Steels, L., </editor> <booktitle> (1990) Components of Expertise AI Magazine 11(2) </booktitle> <pages> 30-49. </pages>
Reference-contexts: This led him to the use of task structures - task-method-subtask decomposition as a way of building AI systems and modeling cognition [Chandrasekaran 1989]. Some of Clancey's [Clancey 1985], McDermott's [McDermott 1988], Steels <ref> [Steels 1990] </ref>, and Wielinga and Breuker's [Wielinga & Breuker 1986] work also shares this functional perspective. In our work, we have adopted Chandrasekaran's task structures as the framework for describing problem solving.
Reference: [Sticklen & Chandrasekaran 1989] <author> Sticklen, J., and Chandrasekaran, B, </author> <title> (1989) Integrating classification-based compiled level reasoning with function-based deep level reasoning. In Causal AI Models: Steps towards Applications, </title> <editor> W. Horn (editor), </editor> <publisher> Hemisphere Publishing Corporation, </publisher> <pages> pp 191-220. </pages>
Reference: [Umeda et al 1990] <author> Umeda, Y., Takeda, H., Tomiyama, T., Yoshikawa, H.: </author> <year> 1990, </year> <title> Function, Behaviour, and Structure, </title> <journal> Applications of Artificial Intelligence in Engineering, </journal> <volume> vol 1, </volume> <booktitle> Design, Proceedings of the Fifth International Conference, </booktitle> <editor> Gero (editor), </editor> <publisher> Springer-Verlag, Berlin, </publisher> <pages> pp. 177-193. </pages>
Reference: [Weintraub 1991] <author> Weintraub, M., </author> <year> (1991), </year> <title> An Explanation-Based Approach to Assigning Credit, </title> <type> PhD Thesis, </type> <institution> The Ohio State University. </institution>
Reference-contexts: The focus of this paper, however, is the use of functional models in reflection. Hence, here we only compare our work to other research which has investigated the uses of functional models of abstract devices <ref> [Allemang 1990, Weintraub 1991, Johnson 1993] </ref>. Allemang has used the Functional Representation framework to model computer programs, and has shown how such models can be used for program verification.
Reference: [Wielinga & Breuker 1986] <author> Wielinga, B.J., and Breuker, J.A., </author> <title> (1986) Models of expertise, </title> <booktitle> In proc. Seventh European Conference on Artificial Intelligence, </booktitle> <pages> 306-318, </pages> <address> Brighton. </address>
Reference-contexts: This led him to the use of task structures - task-method-subtask decomposition as a way of building AI systems and modeling cognition [Chandrasekaran 1989]. Some of Clancey's [Clancey 1985], McDermott's [McDermott 1988], Steels [Steels 1990], and Wielinga and Breuker's <ref> [Wielinga & Breuker 1986] </ref> work also shares this functional perspective. In our work, we have adopted Chandrasekaran's task structures as the framework for describing problem solving. A problem-solving task in this framework is specified by the information it takes as input and the information it produces as output.
References-found: 32

