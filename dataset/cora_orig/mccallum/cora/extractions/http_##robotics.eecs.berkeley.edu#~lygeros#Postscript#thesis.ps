URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/thesis.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/thesis.html
Root-URL: 
Title: Hierarchical, Hybrid Control of Large Scale Systems  
Author: by John Lygeros 
Degree: M.Sc.  A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Engineering-Electrical Engineering and Computer Sciences in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge: Professor Shankar Sastry, Chair Professor Pravin Varaiya Professor Roberto Horowitz  
Date: 1990  1991  1996  
Address: London)  London)  
Affiliation: B.Eng. (Imperial College of Science Technology and Medicine,  (Imperial College of Science Technology and Medicine,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Nerode and W. Kohn, </author> <title> "Models for hybrid systems: Automata, topologies, controllability, observ-ability," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 317-356, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [2] <author> R. W. Brockett, </author> <title> "Hybrid models for motion control systems," in Perspectives in Control (H. </title> <editor> Trentel-man and J. Willems, eds.), </editor> <publisher> Birkhauser, </publisher> <year> 1993. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> (q 1 ; q 2 ) and 6= 0 (2.11) 2 In some cases the system dynamics may have to depend not only on the current value of the state but also on the value at the time of the last discrete jump (see for example the hybrid models of <ref> [2] </ref> and [7]). This effect can be modeled in this framework using parameters. Construction 2 (Memory Parameters) As usual let q 2 X D denote the discrete state, x 2 X C denote the continuous state and u 2 U denote the input.
Reference: [3] <author> X. Nicollin, A. Olivero, J. Sifakis, and S. Yovine, </author> <title> "An approach to the description and analysis of hybrid systems," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 149-178, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [4] <author> P. J. Antsaklis, J. A. Stiver, and M. Lemmon, </author> <title> "Hybrid system modeling and autonomous control systems," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 366-392, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [5] <author> R. Alur, C. Courcoubetis, T. A. Henzinger, and P. H. Ho, </author> <title> "Hybrid automaton: An algorithmic approach to the specification and verification of hybrid systems," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 209-229, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics. The first extension has been for systems with clocks [35, 36] and multi-rate clocks <ref> [5] </ref>. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS [38] and UUPAAL [39]). <p> 5 The closed loop design satisfies specification (J; C) if and only if: sup sup J (q 0 ; x 0 ; d) C 4.3 Example: The Leaking Gas Burner To illustrate how optimal control ideas can be used to carry out verification consider the "leaking gas burner" example of <ref> [5] </ref>. Even though this problem is rather simple and amenable to other techniques for verification it highlights some of the advantages of verifying using optimal control. 4.3.1 Problem Statement The gas burner has two states, "normal" and "leaking". There are two rules governing the leaking process: 1. <p> + 1)(D 1 + D 2 ) Theorem 6 The accumulated leaking time specification is satisfied if and only if D 1 ; D 2 ; T are such that J fl T for various values of (D 1 ; D 2 ) and T = 60 seconds (as in <ref> [5] </ref>). The dividing line between acceptable and unacceptable combinations is a horizontal plane at height ff. 43 44 Chapter 5 System Autonomy The first step towards controlling a given system is typically to design a controller to provide performance guarantees under some nominal conditions (plant model, environmental inputs, etc.).
Reference: [6] <author> M. S. Branicky, V. S. Borkar, and S. K. Mitter, </author> <title> "A unified framework for hybrid control: Background, model and theory," </title> <type> Tech. Rep. </type> <institution> LIDS-P-2239, Laboratory for Information and Decision Systems, Massachusetts Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level.
Reference: [7] <author> M. S. Branicky, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Massacussets Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> However, because we are interested in modeling different agents and their interaction we will take a more input/output approach, along the lines of the reactive module paradigm [45]. For an excellent overview of hybrid models from the dynamical systems point of view see <ref> [7] </ref>. 2.1.1 The Elements Variables A hybrid automaton is a dynamical system which determines the evolution and interaction of a finite collection of variables. We will consider two distinct kinds of variables, discrete and continuous. <p> ; q 2 ) and 6= 0 (2.11) 2 In some cases the system dynamics may have to depend not only on the current value of the state but also on the value at the time of the last discrete jump (see for example the hybrid models of [2] and <ref> [7] </ref>). This effect can be modeled in this framework using parameters. Construction 2 (Memory Parameters) As usual let q 2 X D denote the discrete state, x 2 X C denote the continuous state and u 2 U denote the input. <p> E. 2 Finally, by appropriately defining the boundary of E, one is able to model autonomous jumps (i.e. situations where the state has to jump to a new value) and controlled jumps (i.e. situations where the system can be forced to jump by the input u) 5 . 5 In <ref> [7] </ref> it is shown that autonomous switching (i.e. situations where the differential equation has to change) and controlled switching (i.e. situations where the differential equation can be forced to change by the input) are special cases of autonomous and controlled jumps respectively 13 Remark: note that it is easy to model
Reference: [8] <author> A. Deshpande, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, California, </institution> <year> 1994. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level. <p> Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature in various forms ([8, 5]). The model we consider will be similar to models used primarily in computer science (in particular the ones in <ref> [8] </ref> and [9]). However, because we are interested in modeling different agents and their interaction we will take a more input/output approach, along the lines of the reactive module paradigm [45]. <p> Here we only note that, with the discrete abstractions that result from our algorithm the refinement of the discrete design is a purely discrete problem. This step could therefore be carried out by any of the standard discrete tools <ref> [8, 57] </ref>.
Reference: [9] <author> A. Puri, </author> <title> Theory of Hybrid Systems and Discrete Event Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, California, </institution> <year> 1995. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> The abstraction can be chosen to be a decidable hybrid system; formal results exist that determine the quality of abstraction that can be expected <ref> [9] </ref>. Verification can then be carried out on the abstraction. If it turns out that the abstraction satisfies the necessary requirements then the original system is also guaranteed to satisfy them. If the abstraction fails to satisfy the requirements however, no conclusion can be drawn about the original system. <p> Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature in various forms ([8, 5]). The model we consider will be similar to models used primarily in computer science (in particular the ones in [8] and <ref> [9] </ref>). However, because we are interested in modeling different agents and their interaction we will take a more input/output approach, along the lines of the reactive module paradigm [45].
Reference: [10] <author> T. Henzinger, P. Kopke, A. Puri, and P. Varaiya, </author> <title> "What's decidable about hybrid automata," </title> <booktitle> in STOCS, </booktitle> <year> 1995. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> Progress in the direction of automatic verification has been impeded by two fundamental obstacles. The first is undecidability. To guarantee that automatic verification algorithm will terminate in finite number of steps with an answer, the system needs to satisfy very stringent technical requirements. It can be shown <ref> [10] </ref> that relaxing any of these requirements makes the problem undecidable. The second problem is computational complexity. Even relatively simple hybrid systems lead to very large numbers of discrete states when looked at from the point of view of automatic verification.
Reference: [11] <author> Z. Manna and A. Pnueli, </author> <title> Temporal Verification of Reactive Systems: Safety. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: None of these tools however is capable of fully addressing the issues arising in hybrid systems. The development of specialized hybrid system tools has recently been the focus of a number of research groups <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. This dissertation will summarize one such effort [12, 13, 14, 15, 16, 17, 18, 19, 20, 21]. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. <p> One would like to be able to analyze and modify these controllers without having to redesign the system from the beginning. In this chapter we will briefly discuss the issue of verification for hybrid automata. The most common approach to the problem is algorithmic verification <ref> [37, 11] </ref>. A solid background of theoretical results exist to support algorithmic verification and a number of efficient algorithms have been implemented.
Reference: [12] <author> D. N. Godbole, J. Lygeros, and S. Sastry, </author> <title> "Hierarchical hybrid control: an IVHS case study," in Hybrid Systems II (P. </title> <editor> Antsaklis, W. Kohn, A. Nerode, and S. Sastry, eds.), </editor> <volume> no. </volume> <booktitle> 999 in LNCS, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995. </year> <month> 110 </month>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> Here we focus on the safety issue from the point of view of the platoon leader. In particular we are concerned with safety problems that might arize by the hybrid interaction between the coordination and regulation layers. In <ref> [12] </ref>, Godbole et.al. highlighted examples of such problems. The discussion in [12] was based on controllers designed in [60] for the various actions of the leader. These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. <p> Here we focus on the safety issue from the point of view of the platoon leader. In particular we are concerned with safety problems that might arize by the hybrid interaction between the coordination and regulation layers. In <ref> [12] </ref>, Godbole et.al. highlighted examples of such problems. The discussion in [12] was based on controllers designed in [60] for the various actions of the leader. These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. <p> The AHS simulator SmartPath [92] has been successfully used in the past to carry out all these tasks for the normal mode <ref> [12, 75] </ref>. We are currently extending the capabilities of SmartPath to include operation under degraded conditions. 106 Chapter 8 Concluding Remarks The control of large scale systems is one of the major problems facing control engineers today.
Reference: [13] <author> J. Lygeros and D. Godbole, </author> <title> "An interface between continuous and discrete event controllers for vehicle automation," </title> <type> Tech. Rep. PATH Memorandum 93-8, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1993. </year> <booktitle> Also in Proceedings of the 1994 American Control Conference. </booktitle>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [14] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Simulation as a tool for hybrid control," </title> <booktitle> in AIS Conference on Distributed Interactive Simulation Environments, </booktitle> <year> 1994. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [15] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Towards a fault tolerant AHS design." </title> <type> SAE Paper # 951894, </type> <note> Presented at SAE Future Transportation Technology Conference, Costa Mesa, </note> <year> 1995. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> The impact of these results on the expected throughput is currently under investigation. 16 This approach is further explored in <ref> [15] </ref>, where the sensors of neighboring vehicles and the communication devices are used to recover information that has been lost due to sensor faults. In [15], a vehicle may even use communication and the actuators of neighboring vehicles to recover actuation capabilities lost to faults (for example brake faults of platoon <p> The impact of these results on the expected throughput is currently under investigation. 16 This approach is further explored in <ref> [15] </ref>, where the sensors of neighboring vehicles and the communication devices are used to recover information that has been lost due to sensor faults. In [15], a vehicle may even use communication and the actuators of neighboring vehicles to recover actuation capabilities lost to faults (for example brake faults of platoon followers). <p> It will become apparent that the task is formidable, even in this reduced setting. Here we will only highlight the main points; the details of the design as well as the proofs of the performance claims can be found in <ref> [15] </ref> and [16]. 7.1 Extended Information Structure We first try to extend the information structure. We will address both the causes that can lead to discrete transitions in the controller structure (i.e. initiation of degraded modes) discussed in Chapter 5. <p> Link Layer Supervisor Predicates A similar predicate structure can be constructed for the link layer. An example of such a structure for the link layer design of [75] is given in <ref> [15] </ref>. <p> They consist of a set of new coordination layer strategies that are executed by following a sequence of maneuvers, which we call atomic maneuvers. We will only discuss the main features of the proposed design. The details can be found in <ref> [15] </ref> and [16]. These references also contain a discussion of the extensions necessary at the regulation and link layers. 7.2.1 Coordination Supervisor Strategies The extended coordination layer strategies can be separated into two classes. For the most severe faults, strategies are required to stop the vehicle on the highway. <p> three strategies affect capability predicates up to the coordination layer while faults that dictate the use of the first three strategies affect predicates all the way up to the link layer 2 . 2 The details of the classification of faults induced by the predicate hierarchy can be found in <ref> [15] </ref> 100 During the execution of the degraded mode strategies, the faulty vehicle may request cooperation from neighboring vehicles. This cooperation can be encoded by means of communication protocols. In [16] the details of these protocols are specified in terms of interacting finite state machines.
Reference: [16] <author> D. N. Godbole, J. Lygeros, E. Singh, A. Deshpande, and A. Lindsey, </author> <title> "Design and verification of coordination layer protocols for degraded modes of operation of AHS," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 427-432, </pages> <year> 1995. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> Producing a completely safe AHS design is likely to be impossible, as one can not exclude the occurrence of combinations of faults that may cause unsafe collisions at any moment (for examples see <ref> [16] </ref>). The following assumption is therefore crucial to proving safety: Assumption 2 (Normal Mode AHS Operation) Operation on the AHS is "normal": no faults occur and the environmental conditions are benign. <p> Our analysis can be extended to a more "fault tolerant" design [96], if appropriate extensions to the definitions of safety are given <ref> [16] </ref>. The outline of this extension will be given in Chapter 7. Assumption 3 (Known Model) All vehicle model parameters are known. This implies that linearization by state feedback (equation 6.3) is feasible. Assumption 3 can be relaxed by an adaptive or robust design. <p> It will become apparent that the task is formidable, even in this reduced setting. Here we will only highlight the main points; the details of the design as well as the proofs of the performance claims can be found in [15] and <ref> [16] </ref>. 7.1 Extended Information Structure We first try to extend the information structure. We will address both the causes that can lead to discrete transitions in the controller structure (i.e. initiation of degraded modes) discussed in Chapter 5. <p> They consist of a set of new coordination layer strategies that are executed by following a sequence of maneuvers, which we call atomic maneuvers. We will only discuss the main features of the proposed design. The details can be found in [15] and <ref> [16] </ref>. These references also contain a discussion of the extensions necessary at the regulation and link layers. 7.2.1 Coordination Supervisor Strategies The extended coordination layer strategies can be separated into two classes. For the most severe faults, strategies are required to stop the vehicle on the highway. <p> This cooperation can be encoded by means of communication protocols. In <ref> [16] </ref> the details of these protocols are specified in terms of interacting finite state machines. Here we only give a brief overview of the design. Gentle Stop and Crash Stop Strategies: The goal of these control strategies is to bring the faulty vehicle to a complete stop on the highway. <p> A lot of useful information can be retrieved if the results are interpreted in the appropriate framework. Here we will state the major results of our verification effort; the details of the proofs can be found in <ref> [16] </ref>. The first step of the proofs is automatic verification using COSPAN [31]. COSPAN is a finite state machine verification tool and as such can not be used to answer hybrid questions like the ones tackled in Chapter 6. <p> The last assumption is quantified in <ref> [16] </ref>, where the finite state abstraction itself is specified. A similar assumption was made for the verification of the normal mode protocols in [34]. <p> Proof: Consider two consecutive free agents moving in the same lane. Assume the front vehicle develops a "brakes on" failure while the trailing vehicle develops a "brakes off" failure. In this situation a high relative velocity collision is likely for the initial free agent spacing. 2 The discussion in <ref> [16] </ref> indicates that, whatever definition is given for intersecting faults, great care is needed when making safety requirements. <p> Hopefully sever faults such as "brakes off" will be rare, making scenarios such as the one introduced above extremely unlikely. At this stage the only thing we are able to say about the effect of intersecting faults on the coordination layer design proposed here (and detailed in <ref> [16] </ref>) is: Theorem 10 For an arbitrary collection of faults the communication protocols will not deadlock. 7.3 Key Points and Discussion Completing the Design: The degraded mode strategies outlined above represent just one possible solution to the first step in the top-down phase of the design process.
Reference: [17] <author> S. Sastry, G. Meyer, C. Tomlin, J. Lygeros, D. Godbole, and G. Pappas, </author> <title> "Hybrid systems in air traffic control," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 1478-1483, </pages> <year> 1995. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> Because of the challenging problems associated with the control of multi-agent, scarce resource systems, this area has attracted considerable attention both theoretically and in application <ref> [22, 23, 24, 17, 25] </ref>.
Reference: [18] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A game theoretic approach to hybrid system design," </title> <type> Tech. Rep. </type> <institution> UCB/ERL-M95/77, Electronic Research Laboratory, University of California Berkeley, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level. <p> The feasibility of the approach was illustrated by determining conditions under which the safety of some of the control laws designed in [60] can be guaranteed. In <ref> [18] </ref>, Lygeros et.al. introduced ideas from game theory to show that maximum deceleration by both leading and trailing vehicles is indeed a saddle solution, when the objective of the trailing vehicle is to avoid collision altogether 6 . The results of [18] were based on the third order model used in <p> In <ref> [18] </ref>, Lygeros et.al. introduced ideas from game theory to show that maximum deceleration by both leading and trailing vehicles is indeed a saddle solution, when the objective of the trailing vehicle is to avoid collision altogether 6 . The results of [18] were based on the third order model used in [60] and made no assumptions about the relative deceleration capabilities of the vehicles. The calculations were used to determine "safe" sets of initial conditions and classify the "safe" controllers. <p> It was shown that in this 5 The assumption was shown to be valid in this case in [28]. 6 The design algorithm presented in Chapter 3 was also introduced in <ref> [18] </ref>. 57 case formation and dissipation of platoons can not be carried out in safety without the cooperation of the coordination layer. Sufficient conditions were established for the discrete design and it was shown that under these conditions safe operation can be guaranteed by controllers utilizing the saddle solutions. <p> Sufficient conditions were established for the discrete design and it was shown that under these conditions safe operation can be guaranteed by controllers utilizing the saddle solutions. The work presented here is based on the results of <ref> [18, 20, 21] </ref>. The various elements are brought together and conditions on both the regulation and coordination layers are given under which safe operation of the AHS can be guaranteed.
Reference: [19] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Optimal control approach to multiagent, hierarchical system verification," </title> <booktitle> in IFAC World Congress, </booktitle> <year> 1996. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [20] <author> J. Lygeros, </author> <title> "To brake or not to brake? is there a question?." </title> <type> (preprint), </type> <month> March </month> <year> 1996. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> The calculations were based on the assumption that the deceleration capability of all vehicles is uniform. In [28] complete control schemes were designed based on these results and their performance in terms of stability and safety was proved. In <ref> [20] </ref> the assumption that all vehicles have uniform deceleration capability was relaxed. <p> Sufficient conditions were established for the discrete design and it was shown that under these conditions safe operation can be guaranteed by controllers utilizing the saddle solutions. The work presented here is based on the results of <ref> [18, 20, 21] </ref>. The various elements are brought together and conditions on both the regulation and coordination layers are given under which safe operation of the AHS can be guaranteed.
Reference: [21] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A verified hybrid controller for automated vehicles." </title> <type> (preprint, </type> <note> submitted to Special Issue on Hybrid Systems of the IEEE Transactions on Automatic Control), </note> <month> March </month> <year> 1996. </year>
Reference-contexts: The development of specialized hybrid system tools has recently been the focus of a number of research groups [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]. This dissertation will summarize one such effort <ref> [12, 13, 14, 15, 16, 17, 18, 19, 20, 21] </ref>. Multi-Agent Scarce Resource Systems A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their common characteristic is that many agents are trying to make optimum use of a congested, common resource. <p> For the third order vehicle model it was shown that maximum deceleration by both leading and trailing vehicles is not necessarily a saddle solution in this case; in fact the saddle solution may initially involve maximum acceleration of both the leading and the trailing vehicles. Finally, in <ref> [21] </ref>, Lygeros et.al. proposed to introduce the effect of collisions as a discrete disturbance to the system. Even though low relative velocity collisions were allowed by previous designs, their effect on the system dynamics was never investigated. <p> While this omission is insignificant in the case of two vehicles, it may lead to catastrophic results in general, as it allows the relative velocity of collisions to increase geometrically down a long string of vehicles. In <ref> [21] </ref> ideas from game theory were used to derive saddle solutions for the third order vehicle model in the presence of collisions. <p> Sufficient conditions were established for the discrete design and it was shown that under these conditions safe operation can be guaranteed by controllers utilizing the saddle solutions. The work presented here is based on the results of <ref> [18, 20, 21] </ref>. The various elements are brought together and conditions on both the regulation and coordination layers are given under which safe operation of the AHS can be guaranteed.
Reference: [22] <author> R. F. Stengel, </author> <title> "Intelligent flight control systems," </title> <booktitle> in IMA Conference on Aerospace Vehicle Dynamics, </booktitle> <month> September </month> <year> 1992. </year>
Reference-contexts: Because of the challenging problems associated with the control of multi-agent, scarce resource systems, this area has attracted considerable attention both theoretically and in application <ref> [22, 23, 24, 17, 25] </ref>.
Reference: [23] <author> A. Nerode and W. Kohn, </author> <title> "Multiple agent hybrid control architecture," in Hybrid System (R. </title> <editor> L. Grossman, A. Nerode, A. P. Ravn, and H. Rischel, eds.), </editor> <volume> no. </volume> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 297-316, </pages> <address> New York: </address> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Because of the challenging problems associated with the control of multi-agent, scarce resource systems, this area has attracted considerable attention both theoretically and in application <ref> [22, 23, 24, 17, 25] </ref>. <p> This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level.
Reference: [24] <author> P. Varaiya and S. E. Shladover, </author> <title> "Sketch of an IVHS systems architecture," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-91-3, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1991. </year>
Reference-contexts: Because of the challenging problems associated with the control of multi-agent, scarce resource systems, this area has attracted considerable attention both theoretically and in application <ref> [22, 23, 24, 17, 25] </ref>. <p> A number of solutions have been proposed for this problem, involving various degrees of automation <ref> [24, 79, 74, 80, 81] </ref>. The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. <p> A number of solutions have been proposed for this problem, involving various degrees of automation [24, 79, 74, 80, 81]. The platooning architecture considered here was introduced in <ref> [24, 74] </ref>. Since then, considerable research has been carried out for all the levels of the hierarchical controller.
Reference: [25] <author> K. M. Passino and P. J. Antsaklis, </author> <title> "Modeling and analysis of artificially intelligent planning systems," in An Introduction to Intelligent and Autonomous Control (P. </title> <editor> J. Antsaklis and K. M. Passino, </editor> <booktitle> eds.), </booktitle> <pages> pp. 191-214, </pages> <address> Boston: </address> <publisher> Kluwer Academic Publishing, </publisher> <year> 1993. </year>
Reference-contexts: Because of the challenging problems associated with the control of multi-agent, scarce resource systems, this area has attracted considerable attention both theoretically and in application <ref> [22, 23, 24, 17, 25] </ref>.
Reference: [26] <author> C. Heitmayer and N. Lynch, </author> <title> "The generalized railroad crossing: A case study in formal verification of real-time systems," </title> <booktitle> in Proc. ICCC Real-Time Systems Symposium, </booktitle> <address> (San Juan, Puerto Rico), </address> <year> 1994. </year>
Reference-contexts: This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level.
Reference: [27] <author> J. Frankel, L. Alvarez, R. Horowitz, and P. Li, </author> <title> "Safety oriented maneuvers for IVHS," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 668-672, </pages> <year> 1995. </year>
Reference-contexts: This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level. <p> However, when they were interfaced [91] with the coordination layer design of [34] and simulated in the SmartPath micro simulator [92] unsafe, high relative velocity collisions were observed under extreme traffic conditions. To remedy the situation, Frankel et.al. proposed leader mode controllers that explicitly incorporate safety considerations <ref> [27] </ref>. These controllers were based on a linear, second order vehicle model with actuation delay. Under the underlying assumption that the worst possible action of the preceding vehicle is to decelerate as fast as possible, it was shown that these controllers can guarantee low relative velocity collisions 5 . <p> Clearly joining of a platoon can not take place under the requirement that no collision occurs. The next step therefore is to relax that requirement, in view of the fact that collisions with relative velocity smaller than v a are considered safe (see also <ref> [27] </ref> and [28]). <p> A controller needs to be designed to track the desired fixed point, y J d . Any controller that tracks this fixed point (for example <ref> [60, 27] </ref>) will suffice. Designs that try to minimize the cost function J 3 are preferable. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [28] <author> P. Li, L. Alvarez, and R. Horowitz, </author> <title> "AVHS safe control laws for platoon leaders." </title> <type> (preprint), </type> <month> January </month> <year> 1996. </year>
Reference-contexts: This approach is also taken by other researchers in the field (see for example <ref> [8, 6, 23, 26, 27, 18, 28] </ref>). The advantage is that it eases the requirements on verification somewhat as a large part of the complexity can be absorbed by careful design. Framework The plan is to start by modeling the systems dynamics at the continuous level. <p> The resulting fault tolerant design is outlined and proofs of certain aspects of its performance will be given. Finally, Chapter 8 contains some concluding remarks and directions of future work. 1 A similar design is presented in <ref> [28] </ref> under different assumptions 8 Chapter 2 Modeling & Mathematical Tools In this chapter, we present a rather general model for multiagent systems. Each agent is modeled as a hybrid dynamical system. The modeling framework is modular, in that a hybrid system can be specified as a composition of subsystems. <p> At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in [34]. Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders <ref> [79, 60, 80, 28] </ref> and for the platoon followers [82, 83, 84, 85, 72]. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. <p> Using the second order with delay model, Li et.al. were able to show that maximum deceleration by both leading and trailing vehicles is also a saddle solution when the objective of the trailing vehicle is to minimize the relative velocity at impact <ref> [28] </ref>. The calculations were based on the assumption that the deceleration capability of all vehicles is uniform. In [28] complete control schemes were designed based on these results and their performance in terms of stability and safety was proved. <p> able to show that maximum deceleration by both leading and trailing vehicles is also a saddle solution when the objective of the trailing vehicle is to minimize the relative velocity at impact <ref> [28] </ref>. The calculations were based on the assumption that the deceleration capability of all vehicles is uniform. In [28] complete control schemes were designed based on these results and their performance in terms of stability and safety was proved. In [20] the assumption that all vehicles have uniform deceleration capability was relaxed. <p> In [21] ideas from game theory were used to derive saddle solutions for the third order vehicle model in the presence of collisions. It was shown that in this 5 The assumption was shown to be valid in this case in <ref> [28] </ref>. 6 The design algorithm presented in Chapter 3 was also introduced in [18]. 57 case formation and dissipation of platoons can not be carried out in safety without the cooperation of the coordination layer. <p> Clearly joining of a platoon can not take place under the requirement that no collision occurs. The next step therefore is to relax that requirement, in view of the fact that collisions with relative velocity smaller than v a are considered safe (see also [27] and <ref> [28] </ref>). <p> This observation is also supported by the results of <ref> [28] </ref> where, assuming a second order model with delay for vehicle A and uniform deceleration capabilities, it was shown that the saddle solution involves only minimum deceleration by both vehicles. These observations limit the conditions under which saddle trajectories that involve acceleration can be expected.
Reference: [29] <author> T. Ba~sar and P. Bernhard, </author> <title> H 1 -Optimal Control and Related Minimax Design Problems. </title> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference-contexts: Game theoretic ideas have already been applied in this context to problems with disturbances of Class 1 and 2 and quadratic cost functions. The resulting controllers are the so called H 1 or L 2 optimal controllers (see for example <ref> [29, 30] </ref>). We will try to extend these ideas to the multiagent, hybrid setting and focus on disturbances of Class 3. Discrete Design The solution to the game theoretic problem will produce a continuous control law and a set of initial conditions for which performance is guaranteed for any disturbance.
Reference: [30] <author> J. C. Doyle, K. Glover, P. P. Khargonekar, and B. A. Francis, </author> <title> "State-space solutions to standard H 2 and H 1 control problems," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. 34, no. 8, </volume> <pages> pp. 831-847, </pages> <year> 1989. </year>
Reference-contexts: Game theoretic ideas have already been applied in this context to problems with disturbances of Class 1 and 2 and quadratic cost functions. The resulting controllers are the so called H 1 or L 2 optimal controllers (see for example <ref> [29, 30] </ref>). We will try to extend these ideas to the multiagent, hybrid setting and focus on disturbances of Class 3. Discrete Design The solution to the game theoretic problem will produce a continuous control law and a set of initial conditions for which performance is guaranteed for any disturbance.
Reference: [31] <author> Z. Har'El and R. Kurshan, </author> <title> Cospan User's Guide. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year>
Reference-contexts: Computer Aided Verification This approach has been motivated by the success of verification techniques for finite state systems. Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them (COSPAN <ref> [31] </ref>, HSIS [32], STATEMATE [33], etc.). They have proved very successful in discrete problems such as communication protocols [34] and software algorithms. The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics. <p> A lot of useful information can be retrieved if the results are interpreted in the appropriate framework. Here we will state the major results of our verification effort; the details of the proofs can be found in [16]. The first step of the proofs is automatic verification using COSPAN <ref> [31] </ref>. COSPAN is a finite state machine verification tool and as such can not be used to answer hybrid questions like the ones tackled in Chapter 6. The theorems listed below settle purely discrete questions, such as "do the protocols deadlock?" but not hybrid questions like "do vehicles collide?".
Reference: [32] <author> Adnan Aziz, et al., "HSIS: </author> <title> a BDD-based environment for formal verification," </title> <booktitle> in ACM/IEEE International Conference on CAD, </booktitle> <year> 1994. </year>
Reference-contexts: Computer Aided Verification This approach has been motivated by the success of verification techniques for finite state systems. Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them (COSPAN [31], HSIS <ref> [32] </ref>, STATEMATE [33], etc.). They have proved very successful in discrete problems such as communication protocols [34] and software algorithms. The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics.
Reference: [33] <author> M. Heymann, </author> <title> "Hierarchical decomposition of hybrid systems." </title> <type> (preprint), </type> <year> 1994. </year>
Reference-contexts: Computer Aided Verification This approach has been motivated by the success of verification techniques for finite state systems. Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them (COSPAN [31], HSIS [32], STATEMATE <ref> [33] </ref>, etc.). They have proved very successful in discrete problems such as communication protocols [34] and software algorithms. The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics.
Reference: [34] <author> A. Hsu, F. Eskafi, S. Sachs, and P. Varaiya, </author> <title> "Protocol design for an automated highway system," Discrete Event Dynamic Systems, </title> <journal> vol. </journal> <volume> 2, no. 1, </volume> <pages> pp. 183-206, </pages> <year> 1994. </year>
Reference-contexts: Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them (COSPAN [31], HSIS [32], STATEMATE [33], etc.). They have proved very successful in discrete problems such as communication protocols <ref> [34] </ref> and software algorithms. The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics. The first extension has been for systems with clocks [35, 36] and multi-rate clocks [5]. <p> The lower layer, called the regulation layer is responsible for trajectory tracking and regulation of each agent. The higher level, called the coordination layer is responsible for the communication and cooperation between the agents. A design for the coordination layer is given in detail in <ref> [34] </ref>. We will apply the design methodology developed here to come up with a controller for the regulation layer that can guarantee safe, comfortable and efficient operation under minimal assumptions on the coordination layer. <p> A number of designs have been proposed for the roadside controller, especially for the link layer. They make use of "fluid" flow models [75, 76], the concept of highway work [77] or the concept of highway space-time [78] to model the traffic. The coordination design of <ref> [34] </ref> takes into account the demands made by the higher layers, assuming they have been filtered by a suitable interface. <p> The lane change maneuver is used to move a vehicle from one lane to another. The entry and exit maneuvers can be considered as a special case of lane change maneuver that allow the vehicle to get on/off the automated highway. In <ref> [34] </ref> communication protocols were designed to implement these maneuvers. Some assumptions were made to simplify the design process: a platoon can only be engaged in one maneuver at a time 4 (in particular all maneuvers are coordinated by the leader) and only free agents can change lane, enter and exit. <p> The logical correctness of the proposed protocols (i.e. their effectiveness as transitions between the discrete states) was verified in <ref> [34] </ref> using automatic verification tools. The verification was based on assumptions about the behavior of the continuous state of the vehicles. Here we refine these assumptions and determine if and how they can be met. <p> Similarly a lane change may involve (in addition to the vehicle changing lane) vehicles in the target lane, as well as two lanes away. 56 models [77]. At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in <ref> [34] </ref>. Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers [82, 83, 84, 85, 72]. <p> These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. However, when they were interfaced [91] with the coordination layer design of <ref> [34] </ref> and simulated in the SmartPath micro simulator [92] unsafe, high relative velocity collisions were observed under extreme traffic conditions. To remedy the situation, Frankel et.al. proposed leader mode controllers that explicitly incorporate safety considerations [27]. These controllers were based on a linear, second order vehicle model with actuation delay. <p> The "one at a time" part of the second theorem assumption is already satisfied by the coordination level design of <ref> [34] </ref>. Some additions are needed to guarantee the timing constraints. Justification for the third and fourth theorem assumptions is given in Section 6.2.5. <p> After any safe collision follower operation is established. 4. Assumptions 2-8 are satisfied. 5. The AHS contains a finite number of vehicles. Then the multi lane AHS is safe in the sense of Definition 15. Theorem Assumption 2 is to be interpreted according to the communication protocol design of <ref> [34] </ref>. A maneuver involves at least two cooperating platoons. For a join/split both the joining/splitting platoon and the platoon being joined to/split from are involved. <p> This reduction in the disturbance has the following hybrid automata theoretic interpretation: the communication protocols designed in <ref> [34] </ref> are such that their interconnection with the hybrid automaton of Figure 6.4 for the joining/splitting vehicle and the vehicle being joined to/split from has the effect of disabling the transitions Coll B and Coll C. <p> Vehicle A can then join safely knowing that the deceleration of vehicle B will not exceed the promised value. The discrete steps of this extended communication protocol (request to join/split, acknowledge the request, etc.) will be the same as the steps of the protocol of <ref> [34] </ref>, but more continuous information (deceleration promises etc.) will need to be added. The calculations of Sections 6.5 and 6.6 can be used to determine the feasibility of such maneuvers (for given ranges of sensors and communication devices) and estimate its impact in terms of highway throughput. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in <ref> [34, 98] </ref>, the control laws of [97, 72, 60, 98, 87, 27] and the interface design of [91], the map F I can be seen in Figure 7.2. <p> The coordination layer of <ref> [34] </ref> requires that a normal vehicle should be able to enter the AHS, lead a platoon, join a platoon, be a follower, split from a platoon, change lane and exit the AHS. The capability 96 to carry out these maneuvers will be coded by the regulation/coordination interface capability vector. <p> Take Immediate Exit Normal (TIE-N): This strategy is similar to the TIE strategy except the faulty vehicle uses the normal lane change and split protocols of <ref> [34] </ref> instead of Emergency Lane Change and Forced Split. It is intended for mild faults that affect predicates only up to the regulation layer. 102 Normal: This is the normal mode strategy defined by the normal mode AHS architecture of [74]. <p> It is intended for mild faults that affect predicates only up to the regulation layer. 102 Normal: This is the normal mode strategy defined by the normal mode AHS architecture of [74]. The strategy is implemented by means of finite state machines in <ref> [34] </ref>. 7.2.2 Atomic Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the the normal mode maneuvers of [34] as well as some new, emergency maneuvers. As a rule the emergency maneuvers have higher priority than the normal mode maneuvers. <p> The strategy is implemented by means of finite state machines in <ref> [34] </ref>. 7.2.2 Atomic Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the the normal mode maneuvers of [34] as well as some new, emergency maneuvers. As a rule the emergency maneuvers have higher priority than the normal mode maneuvers. Therefore any normal mode maneuvers that may be in progress when an emergency maneuver is requested are aborted. <p> The last assumption is quantified in [16], where the finite state abstraction itself is specified. A similar assumption was made for the verification of the normal mode protocols in <ref> [34] </ref>. In order to substantiate this assumption a full blown hybrid analysis of the system is needed, similar to the analysis undertaken in Chapter 6 for the normal mode. <p> A stochastic formulation of the performance requirements is likely to be needed. The application of our techniques was illustrated throughout by means of small examples. In addition a more thorough investigation was carried out based on a case study on the automated highway problem. Using the work of <ref> [74, 34] </ref> as a preliminary high level design we applied our algorithm to obtain a hybrid low level controller and discrete requirements on the high level. The result was a theorem that established conditions under which the safety of the automated highway can be guaranteed.
Reference: [35] <author> R. Alur and D. Dill, </author> <title> "A theory of timed automata," </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 126, </volume> <pages> pp. 183-235, </pages> <year> 1994. </year>
Reference-contexts: The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics. The first extension has been for systems with clocks <ref> [35, 36] </ref> and multi-rate clocks [5]. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS [38] and UUPAAL [39]). <p> The constraint set will impose limits on these two aspects of the evolution of the discrete variables. It should be noted that both these constraints can be encoded by the requirement that the discrete variable sequence is generated/accepted by a timed automaton <ref> [35] </ref>. 2.2.3 Multiagent Design and Verification Environment We envision a design, simulation and verification environment for multi-agent hierarchical hybrid control systems as shown in Figure 2.3. The specifications are described by the desired emergent behavior of the collection of agents. <p> Solution to the game theory problems directly provides low level, hybrid controllers and requirements for the high level controllers. It should be noted that all the high level requirements observed in the examples can be encoded in terms of languages accepted by timed automata. The work of <ref> [35] </ref> indicates that problems in timed languages are purely discrete problems. Therefore, in principle, the design of high level controllers is tractable and could be tackled using discrete tools. These observations should not lead to the mistaken impression that the work presented here solves the whole of the second problem.
Reference: [36] <author> R. Alur, C. Courcoubetis, and D. Dill, </author> <title> "Model checking for real-time systems," </title> <booktitle> Logic in Computer Science, </booktitle> <pages> pp. 414-425, </pages> <year> 1990. </year>
Reference-contexts: The push towards stronger verification techniques has been in the direction of extending the standard finite state machine results to incorporate progressively more complicated continuous dynamics. The first extension has been for systems with clocks <ref> [35, 36] </ref> and multi-rate clocks [5]. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS [38] and UUPAAL [39]).
Reference: [37] <author> R. P. Kurshan, </author> <title> Computer-aided verification of coordinating processes; the automata-theoretic approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: The first extension has been for systems with clocks [35, 36] and multi-rate clocks [5]. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN <ref> [37] </ref>, KRONOS [38] and UUPAAL [39]). Verification of timed systems has proved useful in applications such as digital circuit verification [40] and real-time software [41]. Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions. <p> One would like to be able to analyze and modify these controllers without having to redesign the system from the beginning. In this chapter we will briefly discuss the issue of verification for hybrid automata. The most common approach to the problem is algorithmic verification <ref> [37, 11] </ref>. A solid background of theoretical results exist to support algorithmic verification and a number of efficient algorithms have been implemented.
Reference: [38] <author> C. Daws and S. Yovine, </author> <title> "Two examples of verification of multirate timed automata with KRONOS," </title> <booktitle> in Proc. 1995 IEEE Real-Time Systems Symposium, </booktitle> <address> RTSS'95, (Pisa, Italy), </address> <publisher> IEEE Computer Society Press, </publisher> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: The first extension has been for systems with clocks [35, 36] and multi-rate clocks [5]. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS <ref> [38] </ref> and UUPAAL [39]). Verification of timed systems has proved useful in applications such as digital circuit verification [40] and real-time software [41]. Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions.
Reference: [39] <author> K. Larsen, P. Pettersson, and W. Yi, </author> <title> "Compositional and symbolic model checking of real-time systems," </title> <booktitle> in 16 th Annual Real-time Systems Symposium, </booktitle> <pages> pp. 76-87, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: The first extension has been for systems with clocks [35, 36] and multi-rate clocks [5]. Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS [38] and UUPAAL <ref> [39] </ref>). Verification of timed systems has proved useful in applications such as digital circuit verification [40] and real-time software [41]. Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions.
Reference: [40] <author> F. Balarin, </author> <title> Iterative Methods for Formal Verification of Digital Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Theoretical results have established conditions under which problems like these can be solved computationally and algorithms have been developed to implement the verification process (for example timed COSPAN [37], KRONOS [38] and UUPAAL [39]). Verification of timed systems has proved useful in applications such as digital circuit verification <ref> [40] </ref> and real-time software [41]. Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions.
Reference: [41] <author> F. Balarin, K. Petty, and A. L. Sangiovanni-Vincentelli, </author> <title> "Formal verification of the PATHO real-time operating system," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 2459-2465, </pages> <year> 1994. </year>
Reference-contexts: Verification of timed systems has proved useful in applications such as digital circuit verification [40] and real-time software <ref> [41] </ref>. Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions. The results indicate that, under certain conditions, automatic verification should also be possible for such systems [42], but most applications have been to academic examples rather than actual systems. <p> Even though efficient algorithms (that make use of formal reduction techniques as well as heuristics and user input to facilitate the search) exist, the problem may still be prohibitively large for current computers <ref> [41] </ref>. Computational complexity is a fundamental issue for verification and can, in principle, cause problems to any verification algorithm. To address the issue of undecidability the concept of abstraction may be 5 used.
Reference: [42] <author> A. Puri and P. Varaiya, </author> <title> "Decidability of hybrid systems with rectangular differential inclusions," </title> <booktitle> in Computer Aided Verification, </booktitle> <pages> pp. 95-104, </pages> <year> 1994. </year>
Reference-contexts: Recently the theory has been extended to systems where the dynamics can be modeled by rectangular differential inclusions. The results indicate that, under certain conditions, automatic verification should also be possible for such systems <ref> [42] </ref>, but most applications have been to academic examples rather than actual systems. To our knowledge the only computer package capable of dealing with differential inclusions, HYTECH, is still under development [43]. Progress in the direction of automatic verification has been impeded by two fundamental obstacles. The first is undecidability.
Reference: [43] <author> T. A. Henzinger, P. H. Ho, and H. W. Toi, </author> <title> "A user guide to HYTECH," in TACAS 95: Tools and Algorithms for the Construction and Analysis of Systems (E. </title> <editor> Brinksma, W. Cleaveland, K. Larsen, T. Margaria, and B. Steffen, eds.), </editor> <volume> no. </volume> <booktitle> 1019 in LNCS, </booktitle> <pages> pp. 41-71, </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The results indicate that, under certain conditions, automatic verification should also be possible for such systems [42], but most applications have been to academic examples rather than actual systems. To our knowledge the only computer package capable of dealing with differential inclusions, HYTECH, is still under development <ref> [43] </ref>. Progress in the direction of automatic verification has been impeded by two fundamental obstacles. The first is undecidability. To guarantee that automatic verification algorithm will terminate in finite number of steps with an answer, the system needs to satisfy very stringent technical requirements.
Reference: [44] <author> A. Puri and P. Varaiya, </author> <title> "Driving safely in smart cars," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3597-3599, </pages> <year> 1995. </year>
Reference-contexts: Optimal control can be used to determine the discrete command sequences that force the continuous system to violate the performance specifications. If the discrete design is such that these command sequences are excluded then the hybrid design is verified. <ref> [44] </ref> discusses the application of these ideas to the automated highway example. The main advantage of the optimal control point of view to verification is that, by removing the requirement for an exhaustive search, the limitations of complexity and undecidability disappear. <p> The proof was based on the construction of a "safe set" that was rendered invariant if the proposed controller was applied and the preceding vehicle decelerated as fast as possible. In <ref> [44] </ref>, Puri-Varaiya proposed to use optimal control to determine the worst possible action of the preceding platoon, once a controller for the trailing platoon has been designed.
Reference: [45] <author> R. Alur and T. A. Henzinger, </author> <title> Computer-Aided Verification. </title> <note> 1996. to appear. </note>
Reference-contexts: The model we consider will be similar to models used primarily in computer science (in particular the ones in [8] and [9]). However, because we are interested in modeling different agents and their interaction we will take a more input/output approach, along the lines of the reactive module paradigm <ref> [45] </ref>. For an excellent overview of hybrid models from the dynamical systems point of view see [7]. 2.1.1 The Elements Variables A hybrid automaton is a dynamical system which determines the evolution and interaction of a finite collection of variables. <p> The input and disturbance are constrained to lie in U and D respectively: u 2 U = <ref> [0; 45] </ref> R (3.9) With a slight abuse of notation (bringing the second copy of X to the front) the set E is: E = ( x2X The analysis will reveal that the dynamics and input constraints automatically guarantee the state con straints. <p> Therefore: J 1 (x 0 ; u; d fl 2 =(2v 2 ) x 0 Z x 0 0 2 =v 2 +t )=2 u (t )dt 1 (x 0 ) + 2 =v 2 e (x 0 J fl since: u (t) 2 <ref> [0; 45] </ref> ) 2 =v 2 e (x 0 Now fix u = u fl 1 and vary d. <p> For a given pair (H; F ) we would like to solve the reachability problem, i.e. determine if F is reachable by H. By a simple construction the reachability problem can be shown to be equivalent to the invariant verification problem on state predicates (boolean expressions over X) <ref> [45] </ref>. The last observation can be used to formulate the reachability problem as an optimization problem.
Reference: [46] <author> A. Deshpande, D. Godbole, A. Gollu, L. Semenzato, R. Sengupta, D. Swaroop, and P. Varaiya, </author> <title> "Automated highway system tool interchange format." </title> <type> (preprint) California PATH Technical Report, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1996. </year> <month> 112 </month>
Reference-contexts: The process can be customized to a specific application, such as Automated Highway Systems (AHS) or Air Traffic Management Systems (ATMS). As an example, consider the case of AHS. The hybrid system description language introduced above can be customized to the specific application domain as shown in <ref> [46] </ref>. Then controllers for the various maneuvers required on the AHS can be designed to satisfy safety, comfort and efficiency requirements using the tools presented in Section 3. To get to the emergent behavior, the various maneuver control laws of an automated vehicle can then be abstracted into space-time requirements.
Reference: [47] <author> L. Semenzato, A. R. Deshpande, A. Gollu, P. Varaiya, D. Godbole, and R. Sengupta, </author> <title> "SHIFT reference manual." </title> <type> (preprint) California PATH Technical Report, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: One such microsimulator SmartAHS is being built for AHS applications at Berkeley. Note that the simulation program should be able to handle dynamically 20 changing inter-connections between different agents. A language for describing such a dynamically changing network of hybrid systems, called SHIFT, is described in <ref> [47] </ref>. SHIFT adds the functionality to dynamically create and destroy new components and change input output connections as part of the reset actions.
Reference: [48] <author> L. Berkovitz, </author> <title> Optimal Control Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1974. </year>
Reference-contexts: The games considered in the examples of this dissertation will turn out to have unique saddle solutions. Existence and uniqueness of solutions can not be guaranteed for general games, however. For results in this direction the reader is referred to <ref> [48, 49, 50] </ref>. The "saddle" is not the only solution concept of interest in dynamic games. Other types of solution can be defined (Nash, Stackelberg, etc.).
Reference: [49] <author> T. Ba~sar and G. J. Olsder, </author> <title> Dynamic Non-cooperative Game Theory. </title> <publisher> Academic Press, </publisher> <editor> second ed., </editor> <year> 1995. </year>
Reference-contexts: The games considered in the examples of this dissertation will turn out to have unique saddle solutions. Existence and uniqueness of solutions can not be guaranteed for general games, however. For results in this direction the reader is referred to <ref> [48, 49, 50] </ref>. The "saddle" is not the only solution concept of interest in dynamic games. Other types of solution can be defined (Nash, Stackelberg, etc.). <p> The saddle solution used here is the simplest solution concept and applies only to two player games. For a thorough treatment of dynamic games, solution concepts and applications the reader is referred to <ref> [49, 50, 51] </ref>. 2.3.2 Optimal Control From optimal control we will make use of the Maximum Principle [52]. The following statement comes from [53], with a slight modification in notation.
Reference: [50] <author> J. Lewin, </author> <title> Differential Games. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The games considered in the examples of this dissertation will turn out to have unique saddle solutions. Existence and uniqueness of solutions can not be guaranteed for general games, however. For results in this direction the reader is referred to <ref> [48, 49, 50] </ref>. The "saddle" is not the only solution concept of interest in dynamic games. Other types of solution can be defined (Nash, Stackelberg, etc.). <p> The saddle solution used here is the simplest solution concept and applies only to two player games. For a thorough treatment of dynamic games, solution concepts and applications the reader is referred to <ref> [49, 50, 51] </ref>. 2.3.2 Optimal Control From optimal control we will make use of the Maximum Principle [52]. The following statement comes from [53], with a slight modification in notation.
Reference: [51] <editor> T. Ba~sar and A. Haurie, eds., </editor> <booktitle> Advances in Dynamic Games and Applications, vol. 1 of Annals of the International Society of Dynamic Games. </booktitle> <publisher> Birkhauser, </publisher> <year> 1994. </year>
Reference-contexts: The saddle solution used here is the simplest solution concept and applies only to two player games. For a thorough treatment of dynamic games, solution concepts and applications the reader is referred to <ref> [49, 50, 51] </ref>. 2.3.2 Optimal Control From optimal control we will make use of the Maximum Principle [52]. The following statement comes from [53], with a slight modification in notation.
Reference: [52] <author> L. Pontryagin, V. Boltyanskii, R. Gamkrelidge, and E. Mishchenko, </author> <title> The Mathematical Theory of Optimal Processes. </title> <publisher> Wiley, </publisher> <year> 1962. </year>
Reference-contexts: For a thorough treatment of dynamic games, solution concepts and applications the reader is referred to [49, 50, 51]. 2.3.2 Optimal Control From optimal control we will make use of the Maximum Principle <ref> [52] </ref>. The following statement comes from [53], with a slight modification in notation. <p> A typical cost function will involve a combination of the following elements: 1. Continuous evolution costs, i.e. costs associated with the evolution of the continuous state under the vector field f . These are the kinds of costs usually encountered in optimal control <ref> [52, 53] </ref>. A special case of particular interest is when each pair of inputs (u; d) generates a unique state trajectory for a given initial condition (q 0 ; x 0 ).
Reference: [53] <author> L. C. Young, </author> <title> Optimal Control Theory. </title> <type> Chelsea, </type> <note> second ed., </note> <year> 1980. </year>
Reference-contexts: For a thorough treatment of dynamic games, solution concepts and applications the reader is referred to [49, 50, 51]. 2.3.2 Optimal Control From optimal control we will make use of the Maximum Principle [52]. The following statement comes from <ref> [53] </ref>, with a slight modification in notation. <p> A typical cost function will involve a combination of the following elements: 1. Continuous evolution costs, i.e. costs associated with the evolution of the continuous state under the vector field f . These are the kinds of costs usually encountered in optimal control <ref> [52, 53] </ref>. A special case of particular interest is when each pair of inputs (u; d) generates a unique state trajectory for a given initial condition (q 0 ; x 0 ). <p> A non zero amount of time elapses between the two switchings. Proof: The proof will be based on writing J 0 1 as an integral cost function and applying the maximum principle <ref> [53] </ref>. Recall that at the time of impact the relative velocity of the vehicles will have to be negative. Therefore: J 0 = x 0 Z T _x 4 (t)dt 4 + 0 Define L (x; u; d) = x 2 d.
Reference: [54] <author> H. B. Khalil, </author> <title> Nonlinear Systems. </title> <publisher> MacMillan, </publisher> <year> 1992. </year>
Reference-contexts: These concepts are covered in the standard textbooks (e.g. <ref> [54, 55, 56] </ref>). Here we will only show that the state space X of a hybrid automaton is a metric space. Recall that X = X D fi X C .
Reference: [55] <author> S. Wiggins, </author> <title> Introduction to Applied Nonlinear Dynamical Systems and Chaos. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: These concepts are covered in the standard textbooks (e.g. <ref> [54, 55, 56] </ref>). Here we will only show that the state space X of a hybrid automaton is a metric space. Recall that X = X D fi X C .
Reference: [56] <author> J. R. Munkres, </author> <title> Topology, a First Course. </title> <publisher> Prentice Hall, </publisher> <year> 1975. </year>
Reference-contexts: These concepts are covered in the standard textbooks (e.g. <ref> [54, 55, 56] </ref>). Here we will only show that the state space X of a hybrid automaton is a metric space. Recall that X = X D fi X C .
Reference: [57] <author> P. J. G. Ramadge and W. M. Wonham, </author> <title> "The control of discrete event dynamical systems," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. Vol.77, no. 1, </volume> <pages> pp. 81-98, </pages> <year> 1989. </year>
Reference-contexts: Here we only note that, with the discrete abstractions that result from our algorithm the refinement of the discrete design is a purely discrete problem. This step could therefore be carried out by any of the standard discrete tools <ref> [8, 57] </ref>.
Reference: [58] <author> A. L. Schwartz, </author> <title> Theory and Implementation of Numerical Methods Based on Runge-Kutta Integration for Solving Optimal Control Problems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, California, </institution> <year> 1996. </year>
Reference-contexts: In fact, even in the most complicated cases of Chapter 6, a solution can be obtained analytically, or using simple numerical calculations. We can not hope for such luck in general however. New and sophisticated optimal control tools <ref> [58] </ref> will hopefully make the solution of more general problems feasible, at least numerically. 3.2.4 Interface and Discrete Design Revisited The sets V are such that for all initial conditions in them all requirements on system performance are guaranteed.
Reference: [59] <author> A. Puri and P. Varaiya, </author> <title> "Verification of hybrid systems using abstractions," in Hybrid Systems II, no. </title> <booktitle> 999 in LNCS, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We will work on the problem formulation of <ref> [59] </ref>. For simplicity we assume that the train is going around on a circular track of length L, where L is large enough to ensure adequate separation between consecutive train appearances at the gate. This assumption will be discussed further in Section 3.3.3. <p> Assume that the gate dynamics are described by the first order differential equation: _x 1 = 2 where u is the input to be chosen by the designer of the gate controller. The Sensor: The design of <ref> [59] </ref> is based on discrete sensor measurements. We will assume that there are two sensors located at distances S 1 and S 2 respectively on the track.
Reference: [60] <author> D. N. Godbole and J. Lygeros, </author> <title> "Longitudinal control of the lead car of a platoon," </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> vol. 43, no. 4, </volume> <pages> pp. 1125-1135, </pages> <year> 1994. </year>
Reference-contexts: Such functions are easy to construct (see for example <ref> [60] </ref>). According to Theorem 2, the resulting controller will be safe if ^ S 0 S. With small changes in the analysis, safe designs can also be obtained for systems with delays (e.g. between the occurrence of an event and sensing it, and between command and execution). <p> At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in [34]. Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders <ref> [79, 60, 80, 28] </ref> and for the platoon followers [82, 83, 84, 85, 72]. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. <p> In particular we are concerned with safety problems that might arize by the hybrid interaction between the coordination and regulation layers. In [12], Godbole et.al. highlighted examples of such problems. The discussion in [12] was based on controllers designed in <ref> [60] </ref> for the various actions of the leader. These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. <p> The feasibility of the approach was illustrated by determining conditions under which the safety of some of the control laws designed in <ref> [60] </ref> can be guaranteed. In [18], Lygeros et.al. introduced ideas from game theory to show that maximum deceleration by both leading and trailing vehicles is indeed a saddle solution, when the objective of the trailing vehicle is to avoid collision altogether 6 . <p> The results of [18] were based on the third order model used in <ref> [60] </ref> and made no assumptions about the relative deceleration capabilities of the vehicles. The calculations were used to determine "safe" sets of initial conditions and classify the "safe" controllers. <p> For our purposes the details of the nonlinear functions b A and a A are not important. Following the design of <ref> [60] </ref>, we will assume that feedback linearization has already been carried out, i.e. input: v A (t) = a A ( _x A ) (6.2) has been applied to yield: 7 Under the assumptions of Sections 6.2.5, A, B and C can in fact be entire platoons. 58 We will design <p> The fixed points and the choice of P will depend on the maneuver in question. For steady state leader operation and for the split maneuver, the fixed point is: y L 2 4 0 3 5 for some v ; p &gt; 0 (refer to <ref> [60] </ref>). For the join maneuver on the other hand the fixed point is: y J 2 4 0 3 5 with P having zeros in its third row and column. <p> Other designs (e.g. the one proposed in <ref> [60] </ref>) are also acceptable. As we do not set a threshold for J 3 the choice of u fl 3 is not crucial. The requirement that u fl 3 2 U 2 (x 0 ) can be enforced a-posteriori, as will be shown in next section. <p> Such a design can be easily obtained, for example, by switching from tracking y d to tracking v H whenever x 1 (t) exceeds v H and back to tracking y d whenever the spacing becomes less than the desired x 3 &lt; y 1 d (see <ref> [60] </ref> for more details). <p> A controller needs to be designed to track the desired fixed point, y J d . Any controller that tracks this fixed point (for example <ref> [60, 27] </ref>) will suffice. Designs that try to minimize the cost function J 3 are preferable. <p> Figure 7.1 shows the mapping for the control designs in <ref> [97, 72, 60, 98, 87] </ref>. Coordination Layer Predicates From the point of view of the coordination layer, the regulation layer control laws represent resources that can be used to carry out maneuvers. Each maneuver will need to make use of two control laws, one longitudinal and one lateral. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [61] <author> S. Sastry and M. Bodson, </author> <title> Adaptive Control. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: The system uncertainty is highly structured and, as a consequence, very powerful results can be obtained for this class of systems, in terms of stability, parameter convergence etc. <ref> [61] </ref>. Parametric adaptive control has also been successfully applied to some classes of nonlinear systems [62]. A different approach for dealing with system uncertainty comes from the Artificial Intelligence and Soft Computing communities.
Reference: [62] <author> M. Krstic, I. Kanellakopoulos, and P. Kokotovic, </author> <title> Nonlinear and adaptive control design. </title> <publisher> Wiley, </publisher> <year> 1995. </year>
Reference-contexts: The system uncertainty is highly structured and, as a consequence, very powerful results can be obtained for this class of systems, in terms of stability, parameter convergence etc. [61]. Parametric adaptive control has also been successfully applied to some classes of nonlinear systems <ref> [62] </ref>. A different approach for dealing with system uncertainty comes from the Artificial Intelligence and Soft Computing communities. Here the emphasis is usually the lack of explicit assumptions about the model of the process to be controlled.
Reference: [63] <author> L.-X. Wang, </author> <title> Adaptive Fuzzy Systems and Control: Design and Stability Analysis. </title> <publisher> Prenice Hall, </publisher> <year> 1994. </year>
Reference-contexts: Typically, the only claim that can be made is that the scheme works in simulation or experiment. If the plant is also restricted to belong to a certain class (e.g. fuzzy systems), stronger theoretical results may be obtained <ref> [63] </ref>. The above methodologies are based on a central control paradigm, where the information is collected from the entire plant and is processed centrally. We would like to extend these ideas to the decentralized, semiautonomous agent setting considered here.
Reference: [64] <author> A. Morse, </author> <title> "Control using logic based switching," in Trends in Control (A. </title> <publisher> Isidori, ed.), </publisher> <pages> pp. 69-114, </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: An attempt to address switching issues like these in the central control paradigm can be found in <ref> [64] </ref>. Even though the context is quite different, the ideas of [64] could generalize to this framework. <p> An attempt to address switching issues like these in the central control paradigm can be found in <ref> [64] </ref>. Even though the context is quite different, the ideas of [64] could generalize to this framework.
Reference: [65] <author> R. K. Douglas, J. L. Speyer, D. L. Mingori, R. H. Chen, D. P. Malladi, and W. H. Chung, </author> <title> "Fault detection and identification with application to advanced vehicle control systems." </title> <institution> California PATH Research Report UCB-ITS-PRR-95-26, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Techniques have been developed to optimize the filter design and the residue processing with respect to missed detections and false positives. Algorithms implementing these techniques have successfully been applied to many systems. For example, fault detection on vehicles has been carried out using linear <ref> [65, 66] </ref> and nonlinear [67] filters, as well as filters based on probabilistic models [68]. Fault detection for discrete systems makes use of information only about the discrete state.
Reference: [66] <author> S. Patwardhan, </author> <title> Fault Detection and Tolerant Control for Lateral Guidance of Vehicles in Automated Highways. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, University of California, Berkeley, California, </institution> <year> 1994. </year> <month> 113 </month>
Reference-contexts: Techniques have been developed to optimize the filter design and the residue processing with respect to missed detections and false positives. Algorithms implementing these techniques have successfully been applied to many systems. For example, fault detection on vehicles has been carried out using linear <ref> [65, 66] </ref> and nonlinear [67] filters, as well as filters based on probabilistic models [68]. Fault detection for discrete systems makes use of information only about the discrete state. <p> Work at the physical layer on sensors [68, 88], actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments <ref> [72, 66] </ref>. The main concern in the design of most of these controllers has been safety. Here we focus on the safety issue from the point of view of the platoon leader.
Reference: [67] <author> V. Garg, </author> <title> Fault Detection in Nonlinear Systems: An application to Automated Highway Systems. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, University of California, Berkeley, California, </institution> <year> 1995. </year>
Reference-contexts: Techniques have been developed to optimize the filter design and the residue processing with respect to missed detections and false positives. Algorithms implementing these techniques have successfully been applied to many systems. For example, fault detection on vehicles has been carried out using linear [65, 66] and nonlinear <ref> [67] </ref> filters, as well as filters based on probabilistic models [68]. Fault detection for discrete systems makes use of information only about the discrete state. The goal here is to infer the occurrence of the unobservable transition from N to F through the occurrence of observable transitions.
Reference: [68] <author> A. Agogino, K. Gobel, and S. Alag, </author> <title> "Intelligent sensor validation and sensor fusion for reliability and safety enhancement in vehicle control." </title> <institution> California PATH Research Report UCB-ITS-PRR-95-40, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Algorithms implementing these techniques have successfully been applied to many systems. For example, fault detection on vehicles has been carried out using linear [65, 66] and nonlinear [67] filters, as well as filters based on probabilistic models <ref> [68] </ref>. Fault detection for discrete systems makes use of information only about the discrete state. The goal here is to infer the occurrence of the unobservable transition from N to F through the occurrence of observable transitions. <p> For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. Work at the physical layer on sensors <ref> [68, 88] </ref>, actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66]. The main concern in the design of most of these controllers has been safety.
Reference: [69] <author> M. Sampath, R. Sengupta, S. Lafortune, and K. Sinamohideen, </author> <title> "Diagnosability of discrete-event systems," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-40, no. 9, </volume> <pages> pp. 1555-1575, </pages> <year> 1995. </year>
Reference-contexts: The goal here is to infer the occurrence of the unobservable transition from N to F through the occurrence of observable transitions. In the finite state machine setting (where the continuous dynamics are trivial) this problem was solved in <ref> [69] </ref>. The techniques developed there establish conditions that the system needs to satisfy to allow the detection of the fault event within a certain number of transitions. If these conditions are satisfied a finite state machine design for the fault detection module (called a diagnoser in [69]) is also given. <p> problem was solved in <ref> [69] </ref>. The techniques developed there establish conditions that the system needs to satisfy to allow the detection of the fault event within a certain number of transitions. If these conditions are satisfied a finite state machine design for the fault detection module (called a diagnoser in [69]) is also given. Clearly both the continuous and the discrete approaches do not make use of all the available information when applied to the hybrid setting. For example, discrete transitions may not be observable directly but may have to be inferred from continuous measurements 4 and vice versa.
Reference: [70] <author> S. Shaldover, </author> <title> "Operation of automated guideway transit vehicles in dynamically reconfigured trains and platoons," </title> <year> 1979. </year>
Reference-contexts: Clearly any acceptable AHS design should seek a compromise between these two opposing trends. The concept of platooning <ref> [70] </ref> offers such a compromise. Key to this concept is the observation that collisions are not dangerous (in terms of passenger injuries and hardware damage) unless there is a large velocity differential between the colliding vehicles [71].
Reference: [71] <author> A. Hitchcock, </author> <title> "Casualties in accidents occuring during split and merge maneuvers," </title> <type> tech. rep., PATH Technical Memo 93-9, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: The concept of platooning [70] offers such a compromise. Key to this concept is the observation that collisions are not dangerous (in terms of passenger injuries and hardware damage) unless there is a large velocity differential between the colliding vehicles <ref> [71] </ref>. <p> Ideally we would like no collisions to occur on the AHS, under normal operation. Our analysis will indicate that this requirement may be too restrictive in terms of efficiency, as it does not allow platoons to join or break up. Previous studies (Hitchcock <ref> [71] </ref>) indicate that collisions with small relative velocities are not likely to result in serious damage. <p> Assumption 1 motivates the following definition: Definition 15 A safe collision between two vehicles is one where the relative velocity at impact is less than v a . An Automated Highway System where vehicles experience only safe collisions will be called a safe AHS. Motivated by the analysis of <ref> [71] </ref> we will use v a = 3ms 1 in the calculations. Producing a completely safe AHS design is likely to be impossible, as one can not exclude the occurrence of combinations of faults that may cause unsafe collisions at any moment (for examples see [16]).
Reference: [72] <author> D. Swaroop, </author> <title> String Stability of Interconnected systems: an application to platooning in automated highway systems. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, University of California, Berke-ley, California, </institution> <year> 1994. </year>
Reference-contexts: In addition to safety this large spacing guarantees that disturbances are attenuated as they propagate down a long string of platoons. This property of string stability is achieved within the platoon by communicating the state information of the first vehicle to all the vehicles in the platoon <ref> [72] </ref>. In terms of capacity, platooning clearly leads to an enormous improvement. "Static" calculations [73] indicate that, with reasonable size platoons, a fourfold increase in throughput can be expected over a manual driving scheme with the same level of safety. <p> Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers <ref> [82, 83, 84, 85, 72] </ref>. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. <p> Work at the physical layer on sensors [68, 88], actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments <ref> [72, 66] </ref>. The main concern in the design of most of these controllers has been safety. Here we focus on the safety issue from the point of view of the platoon leader. <p> The third has to do with the operation of the brakes and engine, which can be modeled by the throttle and brake angles acting through an integrator on some nonlinear dynamics (involving engine time constants, aerodynamic drag, etc.) <ref> [72, 89] </ref>. For our purposes the details of the nonlinear functions b A and a A are not important. <p> The design of feedback control laws for safe follower operation has received considerable attention in recent years <ref> [95, 72] </ref>. There are three problems that make the design particularly challenging. The more obvious one is regulating to the follower fixed spacing (typically 1 meter) without crashing into the preceding vehicle. <p> There are three problems that make the design particularly challenging. The more obvious one is regulating to the follower fixed spacing (typically 1 meter) without crashing into the preceding vehicle. In <ref> [72] </ref> it was shown that, in order to achieve this objective, the vehicle controller needs information about the acceleration of the preceding vehicle. Unlike the spacing and relative velocity information, preceding vehicle acceleration is not readily available through sensors and will have to be obtained through intervehicle communications. <p> Unless special care is taken during the design, a small disturbance of the platoon leader (e.g. a transient change in velocity) may get amplified as it propagates from one follower to the next, possibly resulting in collisions down the string. In <ref> [72] </ref> it was shown that, in order to avoid this "slinky effect", followers need information about the state of the platoon leader in addition to the information about the vehicle immediately ahead of them. <p> Because the accumulated delays caused by point-to-point communication increase with the size of the platoon, the leader information may have to be broadcast by the leader (using a radio link for example). Finally, in <ref> [72] </ref> it was also shown that, under the information structure dictated by the previous observations, the control law will invariably result in amplification of the control effort exerted by followers further down the platoon. This fact imposes restrictions on the operation of the leader. <p> We will avoid dealing with the complications of the follower design by introducing the assumption that the follower operation is always safe (Assumption 7). The ensuing discussion will provide some justification for this assumption. For more details the reader is referred to <ref> [72] </ref>. 6.2.4 Design Requirements In the leader mode the problem can be viewed as a two player zero sum game, one player being the action of vehicle A and the other the disturbances (action of vehicle B and possible collisions). <p> Note that this assumption allows us to mostly ignore the internal dynamics of the platoon. As a consequence we will collapse the platoons for the purposes of safety and assume that they are all one vehicle long. The work of <ref> [72, 93] </ref> leads us to believe that this is not an unrealistic assumption. We are currently working on modifying the follower design to fit it in this framework and subsequently prove Assumption 7 as a theorem. <p> Without getting into the details of the control law, we can see that the lead controller predicate can be viewed as an AND of the predicates for the velocity, acceleration, spacing and relative velocity sensors and the brake and throttle actuators. Likewise, the law proposed in <ref> [72] </ref> for the followers in a platoon makes use of additional information about the state of the leader of the platoon. It is assumed that this information is transmitted to all the followers using an infrared communication link. <p> Figure 7.1 shows the mapping for the control designs in <ref> [97, 72, 60, 98, 87] </ref>. Coordination Layer Predicates From the point of view of the coordination layer, the regulation layer control laws represent resources that can be used to carry out maneuvers. Each maneuver will need to make use of two control laws, one longitudinal and one lateral. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [73] <author> B. S. Y. Rao and P. Varaiya, </author> <title> "Flow benefits of autonomous intelligent cruise control in mixed manual and automated traffic," </title> <journal> Transportation Research Record, </journal> <volume> no. 1408, </volume> <pages> pp. 36-43, </pages> <year> 1993. </year>
Reference-contexts: This property of string stability is achieved within the platoon by communicating the state information of the first vehicle to all the vehicles in the platoon [72]. In terms of capacity, platooning clearly leads to an enormous improvement. "Static" calculations <ref> [73] </ref> indicate that, with reasonable size platoons, a fourfold increase in throughput can be expected over a manual driving scheme with the same level of safety.
Reference: [74] <author> P. Varaiya, </author> <title> "Smart cars on smart roads: problems of control," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-38, no. 2, </volume> <pages> pp. 195-207, </pages> <year> 1993. </year>
Reference-contexts: A centralized solution to this problem is clearly infeasible. Moreover, the calculations presented here will indicate that completely autonomous operation can not provide the guarantees necessary for safe formation of platoons. The problem is therefore ideally suited for a semiau-tonomous agent design. Such a design was proposed in <ref> [74] </ref>. Each vehicle is equipped with a two layer controller. The lower layer, called the regulation layer is responsible for trajectory tracking and regulation of each agent. The higher level, called the coordination layer is responsible for the communication and cooperation between the agents. <p> Throughput maximization is a macroscopic issue, an emergent behavior of our design, and is difficult to quantify at the microscopic vehicle level considered here. In the control architecture proposed in <ref> [74] </ref>, throughput maximization is the goal of two additional levels, called the network layer and the link layer. The overall control hierarchy is shown in Figure 6.1. <p> A number of solutions have been proposed for this problem, involving various degrees of automation <ref> [24, 79, 74, 80, 81] </ref>. The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. <p> A number of solutions have been proposed for this problem, involving various degrees of automation [24, 79, 74, 80, 81]. The platooning architecture considered here was introduced in <ref> [24, 74] </ref>. Since then, considerable research has been carried out for all the levels of the hierarchical controller. <p> The last assumption is need to "break the symmetry" of the problem and provides a starting point for the induction in the proof. 9 Following <ref> [74] </ref>, it is assumed that during a maneuver the joining/splitting vehicle and the vehicle being joined to/split from cooperate and therefore are both involved in the maneuver. 68 Proof: By design, any collision will occur while some u i , i 2 fL; J; S; F g, is being used. <p> Here we will assume the lane change scenario of <ref> [74] </ref>, where a vehicle is a free agent (single car platoon) both before and after the lane change. With minimal changes the same analysis can be applied to other lane change scenarios (changing from/to the end/middle of a platoon, entire platoon lane change, etc.). <p> The effect of environmental conditions on the system performance will be monitored by a hierarchical structure, called the performance monitor. 7.1.1 Capability Monitor The control scheme for normal operating conditions presented in <ref> [74] </ref> relies on a number of sensors, actuators and communication devices, both on the vehicles and on the roadside. All this additional hardware, as well as the standard mechanical parts of the vehicles, are prone to failure. <p> It is intended for mild faults that affect predicates only up to the regulation layer. 102 Normal: This is the normal mode strategy defined by the normal mode AHS architecture of <ref> [74] </ref>. The strategy is implemented by means of finite state machines in [34]. 7.2.2 Atomic Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the the normal mode maneuvers of [34] as well as some new, emergency maneuvers. <p> A stochastic formulation of the performance requirements is likely to be needed. The application of our techniques was illustrated throughout by means of small examples. In addition a more thorough investigation was carried out based on a case study on the automated highway problem. Using the work of <ref> [74, 34] </ref> as a preliminary high level design we applied our algorithm to obtain a hybrid low level controller and discrete requirements on the high level. The result was a theorem that established conditions under which the safety of the automated highway can be guaranteed.
Reference: [75] <author> B. S. Y. Rao and P. Varaiya, </author> <title> "Roadside intelligence for flow control in an IVHS," </title> <journal> Transportation Research - C, </journal> <volume> vol. 2, no. 1, </volume> <pages> pp. 49-72, </pages> <year> 1994. </year>
Reference-contexts: A number of designs have been proposed for the roadside controller, especially for the link layer. They make use of "fluid" flow models <ref> [75, 76] </ref>, the concept of highway work [77] or the concept of highway space-time [78] to model the traffic. The coordination design of [34] takes into account the demands made by the higher layers, assuming they have been filtered by a suitable interface. <p> The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. In the link and network layers controllers have been designed based on traffic flow models <ref> [75, 76] </ref>, vehicle activity models [78] and highway work 3 Even though this is in theory an infinite state space, in practice there are a finite number of discrete states as the number of lanes is finite. 4 By definition all cooperating platoons are engaged in the maneuver. <p> Link Layer Supervisor Predicates A similar predicate structure can be constructed for the link layer. An example of such a structure for the link layer design of <ref> [75] </ref> is given in [15]. <p> They include adverse weather conditions (such as rain, fog or snow) and gradual hardware degradation (such as brake ware). An extensive list of such causes, compiled by interviewing numerous PATH researchers, can be found in <ref> [75] </ref>. We will use C to denote the set of performance degradation causes. <p> The AHS simulator SmartPath [92] has been successfully used in the past to carry out all these tasks for the normal mode <ref> [12, 75] </ref>. We are currently extending the capabilities of SmartPath to include operation under degraded conditions. 106 Chapter 8 Concluding Remarks The control of large scale systems is one of the major problems facing control engineers today.
Reference: [76] <author> P. Li, R. Horowitz, L. Alvarez, J. Frankel, and A. Robertson, </author> <title> "Traffic flow stabilization," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 144-149, </pages> <year> 1995. </year>
Reference-contexts: A number of designs have been proposed for the roadside controller, especially for the link layer. They make use of "fluid" flow models <ref> [75, 76] </ref>, the concept of highway work [77] or the concept of highway space-time [78] to model the traffic. The coordination design of [34] takes into account the demands made by the higher layers, assuming they have been filtered by a suitable interface. <p> The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. In the link and network layers controllers have been designed based on traffic flow models <ref> [75, 76] </ref>, vehicle activity models [78] and highway work 3 Even though this is in theory an infinite state space, in practice there are a finite number of discrete states as the number of lanes is finite. 4 By definition all cooperating platoons are engaged in the maneuver.
Reference: [77] <author> R. W. Hall, </author> <title> "Longitudinal and lateral throughput on an idealized highway." </title> <type> PATH Technical Report, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: A number of designs have been proposed for the roadside controller, especially for the link layer. They make use of "fluid" flow models [75, 76], the concept of highway work <ref> [77] </ref> or the concept of highway space-time [78] to model the traffic. The coordination design of [34] takes into account the demands made by the higher layers, assuming they have been filtered by a suitable interface. <p> For example while one platoon joins another they are both engaged in a join maneuver. Similarly a lane change may involve (in addition to the vehicle changing lane) vehicles in the target lane, as well as two lanes away. 56 models <ref> [77] </ref>. At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in [34].
Reference: [78] <author> M. E. Broucke and P. Varaiya, </author> <title> "A theory of traffic flow in automated highway systems." </title> <type> (preprint), </type> <year> 1995. </year>
Reference-contexts: A number of designs have been proposed for the roadside controller, especially for the link layer. They make use of "fluid" flow models [75, 76], the concept of highway work [77] or the concept of highway space-time <ref> [78] </ref> to model the traffic. The coordination design of [34] takes into account the demands made by the higher layers, assuming they have been filtered by a suitable interface. <p> The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. In the link and network layers controllers have been designed based on traffic flow models [75, 76], vehicle activity models <ref> [78] </ref> and highway work 3 Even though this is in theory an infinite state space, in practice there are a finite number of discrete states as the number of lanes is finite. 4 By definition all cooperating platoons are engaged in the maneuver.
Reference: [79] <author> P. Ioannou, C. Chen, and J. Hauser, </author> <title> "Autonomous intelligent cruise control," </title> <type> Tech. Rep. </type> <institution> No 92-05-01, University of Southern California, </institution> <address> Los Angeles, </address> <year> 1992. </year>
Reference-contexts: A number of solutions have been proposed for this problem, involving various degrees of automation <ref> [24, 79, 74, 80, 81] </ref>. The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. <p> At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in [34]. Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders <ref> [79, 60, 80, 28] </ref> and for the platoon followers [82, 83, 84, 85, 72]. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [80] <author> W. Ren and D. Green, </author> <title> "Continuous platooning: a new evolutionary and operating concept for automated highway systems," </title> <type> Tech. Rep. </type> <institution> UCB/ERL-M94/24, Electronic Research Laboratory, University of California Berkeley, </institution> <year> 1994. </year>
Reference-contexts: A number of solutions have been proposed for this problem, involving various degrees of automation <ref> [24, 79, 74, 80, 81] </ref>. The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller. <p> At the coordination layer, a controller based on finite state machine communication protocols was designed and verified in [34]. Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders <ref> [79, 60, 80, 28] </ref> and for the platoon followers [82, 83, 84, 85, 72]. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [81] <author> J. Forbes, T. Huang, K. Kanazawa, and S. Russel, </author> <title> "The BATmobile: Towards a bayesian automated taxi," </title> <booktitle> in International Conference on Artificial Intelligence (IJCAI-95, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: A number of solutions have been proposed for this problem, involving various degrees of automation <ref> [24, 79, 74, 80, 81] </ref>. The platooning architecture considered here was introduced in [24, 74]. Since then, considerable research has been carried out for all the levels of the hierarchical controller.
Reference: [82] <author> S. Sheikholeslam and C. A. Desoer, </author> <title> "Longitudinal control of a platoon of vehicles," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 291-297, </pages> <year> 1990. </year>
Reference-contexts: Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers <ref> [82, 83, 84, 85, 72] </ref>. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [83] <author> S. Sheikholeslam and C. A. Desoer, </author> <title> "Longitudinal control of a platoon of vehicles with no communication of lead vehicle information," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3102-3107, </pages> <year> 1991. </year> <month> 114 </month>
Reference-contexts: Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers <ref> [82, 83, 84, 85, 72] </ref>. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [84] <author> S. Sheikholeslam and C. A. Desoer, </author> <title> "Combined longitudinal and lateral control of a platoon of vehicles," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 1763-1767, </pages> <year> 1992. </year>
Reference-contexts: Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers <ref> [82, 83, 84, 85, 72] </ref>. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [85] <author> S. Sheikholeslam and C. Desoer, </author> <title> "Indirect adaptive control of a class of interconnected non-linear dynamical systems," </title> <journal> International Journal of Control, </journal> <volume> vol. 57, no. 3, </volume> <pages> pp. 743-765, </pages> <year> 1993. </year>
Reference-contexts: Finally, at the regulation layer, controllers based on continuous vehicle models have been designed to regulate the longitudinal motion both for the platoon leaders [79, 60, 80, 28] and for the platoon followers <ref> [82, 83, 84, 85, 72] </ref>. For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87].
Reference: [86] <author> H. Peng and M. Tomizuka, </author> <title> "Lateral control of front-wheel-steering rubber-tire vehicles," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-90-5, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1990. </year>
Reference-contexts: For lateral vehicle motion controllers have been designed both for maintaining position in a lane <ref> [86] </ref> and for changing lanes [87]. Work at the physical layer on sensors [68, 88], actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66].
Reference: [87] <author> W. Chee and M. Tomizuka, </author> <title> "Lane change maneuver of automobiles for the intelligent vehicle and highway systems (IVHS)," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3586-3587, </pages> <year> 1994. </year>
Reference-contexts: For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes <ref> [87] </ref>. Work at the physical layer on sensors [68, 88], actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66]. The main concern in the design of most of these controllers has been safety. <p> It will be needed as an implicit assumption in the proofs of the subsequent lemmas. Assumption 6 (Perfect Lateral Control) Lateral operation is perfect This assumption is not too unrealistic, as both simulation and experimental results indicate <ref> [97, 87] </ref>. If needed, the techniques presented here can easily be used to modify the lateral design and/or obtain limits of guaranteed performance. As discussed in Section 6.2.3, designing control laws for the followers is a lot more complicated than for the leaders. <p> The interval [t i ; t f ) will typically represent the entire time it takes to move from one lane to the next (roughly 5 seconds under current lateral laws <ref> [87] </ref>). For the purposes of safety, entry and exit from the automated highway will be treated as a simplified version of a lane change. In particular, entry will be modeled as a lane change from the on-ramp to an automated lane, with vehicles C and B missing. <p> Figure 7.1 shows the mapping for the control designs in <ref> [97, 72, 60, 98, 87] </ref>. Coordination Layer Predicates From the point of view of the coordination layer, the regulation layer control laws represent resources that can be used to carry out maneuvers. Each maneuver will need to make use of two control laws, one longitudinal and one lateral. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [88] <author> D. Koller, T. Luong, and J. Malik, </author> <title> "Binocular stereopsis and lane marker flow for vehicle navigation: Lateral and longitudinal control," </title> <type> Tech. Rep. </type> <institution> UCB/CSD-94-804, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. Work at the physical layer on sensors <ref> [68, 88] </ref>, actuators [89] and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66]. The main concern in the design of most of these controllers has been safety.
Reference: [89] <author> J. C. Gerdes, D. B. Maciuca, P. E. Devlin, and J. K. Hedrick, </author> <title> "Brake system modeling for IVHS longitudinal control." </title> <booktitle> In proceedings of DSC-Vol. 53, Advancs in Robust and Nonlinear Control Systems, ASME Winter Annual Meeting, </booktitle> <year> 1994. </year>
Reference-contexts: For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. Work at the physical layer on sensors [68, 88], actuators <ref> [89] </ref> and communication devices [90] has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66]. The main concern in the design of most of these controllers has been safety. <p> The third has to do with the operation of the brakes and engine, which can be modeled by the throttle and brake angles acting through an integrator on some nonlinear dynamics (involving engine time constants, aerodynamic drag, etc.) <ref> [72, 89] </ref>. For our purposes the details of the nonlinear functions b A and a A are not important.
Reference: [90] <author> B. Foreman, </author> <title> "A survey of wireless communications technologies for automated vehicle control." </title> <type> SAE Paper # 951928, </type> <note> Presented at SAE Future Transportation Technology Conference, Costa Mesa, </note> <year> 1995. </year>
Reference-contexts: It is guarded by a gate that, when lowered, prevents the cars from crossing the tracks. Let: x 1 2 <ref> [0; 90] </ref> denote the angle of the gate in degrees. Assume that the gate dynamics are described by the first order differential equation: _x 1 = 2 where u is the input to be chosen by the designer of the gate controller. <p> in the two inputs: _x = 1=2 0 ! 0 u + 0 ! x (0) 2 I = fx 0 g (3.8) The state is constrained to lie in the set X: x 2 X = f (x 1 ; x 2 ) 2 R 2 jx 1 2 <ref> [0; 90] </ref>; x 2 2 2 L with the understanding that x 2 wraps around at L=2. <p> Proof: Under the wrap around assumption on x 2 the only thing we need to show is that x 1 (t) 2 <ref> [0; 90] </ref> for all t 0. <p> By Theorem 2 the controller will be safe if ^ S S, i.e. S 2 &gt; 0 and S 1 2v 2 ln ( C 1 1 1 2 <ref> [0; 90] </ref>. As the logarithm function is monotone, the above conditions are the same as the ones in the theorem statement. 2 Note that the above calculations gives us the optimum placement for the discrete sensors for free. <p> For lateral vehicle motion controllers have been designed both for maintaining position in a lane [86] and for changing lanes [87]. Work at the physical layer on sensors [68, 88], actuators [89] and communication devices <ref> [90] </ref> has allowed researchers to investigate the performance of some of these controllers in experiments [72, 66]. The main concern in the design of most of these controllers has been safety. Here we focus on the safety issue from the point of view of the platoon leader.
Reference: [91] <author> J. Lygeros and D. Godbole, </author> <title> "An interface between continuous and discrete event controllers for vehicle automation," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 801-805, </pages> <year> 1994. </year>
Reference-contexts: The discussion in [12] was based on controllers designed in [60] for the various actions of the leader. These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. However, when they were interfaced <ref> [91] </ref> with the coordination layer design of [34] and simulated in the SmartPath micro simulator [92] unsafe, high relative velocity collisions were observed under extreme traffic conditions. To remedy the situation, Frankel et.al. proposed leader mode controllers that explicitly incorporate safety considerations [27]. <p> In particular the safe sets, V i , determine the safety checks and terminating conditions that need to be checked by the interface before starting and finishing a maneuver (refer to <ref> [91] </ref> for more details). The "one at a time" part of the second theorem assumption is already satisfied by the coordination level design of [34]. Some additions are needed to guarantee the timing constraints. Justification for the third and fourth theorem assumptions is given in Section 6.2.5. <p> Essentially each of the states of Figure 6.6 contains a small finite state machine that can be used to determine when transitions out of the state are executed (in addition to the guards shown in the figure). For a more detailed discussion of this point refer to <ref> [91] </ref>. 72 6.5 The Leader Control Law 6.5.1 Design for safety According to Lemma 7 the safety criterion used for the leader should be: J 1 (x 0 ; u; d) = inf x 3 (t) t i = 0 can be assumed without loss of generality. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of [97, 72, 60, 98, 87, 27] and the interface design of <ref> [91] </ref>, the map F I can be seen in Figure 7.2. The coordination layer of [34] requires that a normal vehicle should be able to enter the AHS, lead a platoon, join a platoon, be a follower, split from a platoon, change lane and exit the AHS.
Reference: [92] <author> F. Eskafi, D. Khorramabadi, and P. Varaiya, "SmartPath: </author> <title> An automated highway system simulator." </title> <type> PATH Technical Report UCB-ITS-94-4. </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: These controllers were based on a third order, feedback linearizable model for the vehicle and were observed to perform well when simulated individually. However, when they were interfaced [91] with the coordination layer design of [34] and simulated in the SmartPath micro simulator <ref> [92] </ref> unsafe, high relative velocity collisions were observed under extreme traffic conditions. To remedy the situation, Frankel et.al. proposed leader mode controllers that explicitly incorporate safety considerations [27]. These controllers were based on a linear, second order vehicle model with actuation delay. <p> Finally, Monte Carlo simulations of the overall fault tolerant system can be used to obtain estimates of the impact of the degraded mode controllers on the highway throughput and hence validate any theoretical models developed for this purpose. The AHS simulator SmartPath <ref> [92] </ref> has been successfully used in the past to carry out all these tasks for the normal mode [12, 75].
Reference: [93] <author> Y. Yang and B. </author> <title> Tongue, "Intra-platoon collision behavior during emergency operations," Vehicle System Dynamics, </title> <journal> vol. </journal> <volume> 23, no. 4, </volume> <pages> pp. 279-292, </pages> <year> 1994. </year>
Reference-contexts: 0 C ) := x 1 (T C ) ffiv C x 4 (T 0 C ) := x 4 (T C ) + ffiv C This model will be quite accurate if the relative velocity at impact is low, in which case the collision is more or less elastic <ref> [93] </ref>. We will assume that the relative velocity of all collisions is bounded in an interval [v a ; 0]. In hybrid system terminology the collisions are discrete disturbances. <p> These issues are discussed further in Section 6.8. Assumption 5 (Elastic Collisions) Collisions are instantaneous, perfectly elastic and all vehicles have equal masses. 65 This assumption is clearly unrealistic. Assuming perfectly elastic collisions is not unreasonable for low relative velocity collisions <ref> [93] </ref>. The assumption that all vehicles have equal mass can easily be relaxed. This assumption leads to: Fact 1 Under Assumption 5, a collision with relative velocity at most v a induces an instantaneous change in velocity of at most v a in the colliding vehicles. <p> Note that this assumption allows us to mostly ignore the internal dynamics of the platoon. As a consequence we will collapse the platoons for the purposes of safety and assume that they are all one vehicle long. The work of <ref> [72, 93] </ref> leads us to believe that this is not an unrealistic assumption. We are currently working on modifying the follower design to fit it in this framework and subsequently prove Assumption 7 as a theorem.
Reference: [94] <author> F. M. Callier and C. A. Desoer, </author> <title> Linear System Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The initial conditions, node invariants, transition guards, events and reset maps should be obvious from the figure. The automaton runs can be obtained using the variation of constants formula <ref> [94] </ref>.
Reference: [95] <author> S. Sheikholeslam, </author> <title> Control of a class of interconnected nonlinear dynamical systems: The platoon problem. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, California, </institution> <year> 1991. </year>
Reference-contexts: The design of feedback control laws for safe follower operation has received considerable attention in recent years <ref> [95, 72] </ref>. There are three problems that make the design particularly challenging. The more obvious one is regulating to the follower fixed spacing (typically 1 meter) without crashing into the preceding vehicle.
Reference: [96] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Extended architecture for degraded modes of operation of IVHS," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3592-3596, </pages> <year> 1995. </year>
Reference-contexts: Our analysis can be extended to a more "fault tolerant" design <ref> [96] </ref>, if appropriate extensions to the definitions of safety are given [16]. The outline of this extension will be given in Chapter 7. Assumption 3 (Known Model) All vehicle model parameters are known. This implies that linearization by state feedback (equation 6.3) is feasible.
Reference: [97] <author> H. Peng and M. Tomizuka, </author> <title> "Vehicle lateral control for highway automation," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 788-794, </pages> <year> 1990. </year>
Reference-contexts: It will be needed as an implicit assumption in the proofs of the subsequent lemmas. Assumption 6 (Perfect Lateral Control) Lateral operation is perfect This assumption is not too unrealistic, as both simulation and experimental results indicate <ref> [97, 87] </ref>. If needed, the techniques presented here can easily be used to modify the lateral design and/or obtain limits of guaranteed performance. As discussed in Section 6.2.3, designing control laws for the followers is a lot more complicated than for the leaders. <p> Figure 7.1 shows the mapping for the control designs in <ref> [97, 72, 60, 98, 87] </ref>. Coordination Layer Predicates From the point of view of the coordination layer, the regulation layer control laws represent resources that can be used to carry out maneuvers. Each maneuver will need to make use of two control laws, one longitudinal and one lateral. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [98] <author> D. N. Godbole, F. Eskafi, E. Singh, and P. Varaiya, </author> <title> "Design of an entry and exit maneuvers for AHS," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3576-3580, </pages> <year> 1995. </year>
Reference-contexts: The entry/exit scheme obtained in this way will be safe, but may be inefficient in terms of throughput. For a more thorough treatment of entry and exit scenarios the reader is referred to <ref> [98] </ref>. All the scenarios discussed therein are amenable to our analysis techniques. 71 6.4.2 Safety Theorem The following theorem states conditions on the discrete design such that the hybrid control scheme is safe. Theorem 8 (Multi Lane Safety Theorem) If: 1. <p> Figure 7.1 shows the mapping for the control designs in <ref> [97, 72, 60, 98, 87] </ref>. Coordination Layer Predicates From the point of view of the coordination layer, the regulation layer control laws represent resources that can be used to carry out maneuvers. Each maneuver will need to make use of two control laws, one longitudinal and one lateral. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in <ref> [34, 98] </ref>, the control laws of [97, 72, 60, 98, 87, 27] and the interface design of [91], the map F I can be seen in Figure 7.2. <p> The design of the interface induces a mapping: F I : C R ! C I = f0; 1g n man For the normal maneuvers presented in [34, 98], the control laws of <ref> [97, 72, 60, 98, 87, 27] </ref> and the interface design of [91], the map F I can be seen in Figure 7.2.
Reference: [99] <author> A. Hitchcock, </author> <title> "A specification of an automated freeway with vehicle borne intelligence," </title> <type> Tech. Rep. PATH Memorandum 92-8, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1992. </year>
Reference-contexts: For intersecting faults the problem is a lot more complicated. It is easy to show that a deterministic safety definition (like Definition 15 or the one in <ref> [99] </ref>) is likely to be inadequate in this case: Lemma 17 For any control design there exist a combination of two faults that can lead to high relative velocity collisions. Proof: Consider two consecutive free agents moving in the same lane.
Reference: [100] <author> A. Kanaris, P. Ioannou, and F. S. Ho, </author> <title> "Spacing and capacity evaluations for different AHS concepts." </title> <type> (preprint) California PATH Technical Report, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1996. </year> <month> 115 </month>
References-found: 100

