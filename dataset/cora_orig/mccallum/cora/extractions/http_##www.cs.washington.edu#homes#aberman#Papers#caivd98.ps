URL: http://www.cs.washington.edu/homes/aberman/Papers/caivd98.ps
Refering-URL: http://www.cs.washington.edu/homes/aberman/
Root-URL: 
Email: faberman,shapirog@cs.washington.edu  
Title: Selecting Good Keys for Triangle-Inequality-Based Pruning Algorithms  
Author: Andrew Berman and Linda G. Shapiro 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering University of Washington  
Abstract: and storing the computed distances. Query images are later compared to the keys, and the triangle inequality is used to speedily compute lower bounds on the distance from the query to each of the database images. This paper addresses the question of increasing performance of this algorithm by the selection of appropriate key images. Several algorithms for key selection are proposed and tested. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Baeza-Yates, W. Cunto, U. Manber, and S. Wu. </author> <title> Proximity matching using fixed-queries trees. </title> <booktitle> In Combinatorial Pattern Matching, </booktitle> <pages> pages 198-212. </pages> <publisher> Springer-Verlag, </publisher> <month> June </month> <year> 1994. </year>
Reference-contexts: In this paper, we evaluate key selection algorithms for triangle-inequality-based searches for both Threshold queries and Best-Match queries. 2 Overview of the Triangle Inequality Algorithm There are several schemes in the literature that take advantage of the triangle inequality to reduce the number of direct comparisons in a Threshold search <ref> [3, 4, 2, 6, 1] </ref>. The intuition behind all the schemes is that the distance between two objects cannot be less than the difference in their distances to any other object. <p> Especially interesting was the fact that using 5 keys for Vertical Texture resulted in a 53% thresholding. Thus, the additional four keys only eliminated an additional two percent of the database. In <ref> [1] </ref>, Baeza-Yates, et. al.., demonstrated how, given a random model for database objects and keys, a logarithmic number of keys should threshold almost all of the database.
Reference: [2] <author> J. Barros, J. French, W. Martin, P. Kelley, and M. Cannon. </author> <title> Using the triangle inequality to reduce the number of comparisons required for similarity-based retrieval. In IS&T/SPIE Storage and Retrieval for Still Image and Video Databases, </title> <booktitle> volume IV, </booktitle> <month> Jan </month> <year> 1996. </year>
Reference-contexts: In this paper, we evaluate key selection algorithms for triangle-inequality-based searches for both Threshold queries and Best-Match queries. 2 Overview of the Triangle Inequality Algorithm There are several schemes in the literature that take advantage of the triangle inequality to reduce the number of direct comparisons in a Threshold search <ref> [3, 4, 2, 6, 1] </ref>. The intuition behind all the schemes is that the distance between two objects cannot be less than the difference in their distances to any other object.
Reference: [3] <author> A. Berman. </author> <title> A new data structure for fast approximate matching. </title> <type> Technical Report 1994-03-02, </type> <institution> Dept. of Computer Science, University of Washing-ton, </institution> <year> 1994. </year>
Reference-contexts: Since distance measure computation can be expensive, there is a need to eliminate candidate database images from a search without direct comparison to the query image. One method is to eliminate candidate images by the use of the triangle inequality <ref> [3] </ref>. In this scheme, a set of key images is stored in the database, along with the distance from each database image to each key image. When the user chooses a query image, the distance from the query image to each key image is computed. <p> In this paper, we evaluate key selection algorithms for triangle-inequality-based searches for both Threshold queries and Best-Match queries. 2 Overview of the Triangle Inequality Algorithm There are several schemes in the literature that take advantage of the triangle inequality to reduce the number of direct comparisons in a Threshold search <ref> [3, 4, 2, 6, 1] </ref>. The intuition behind all the schemes is that the distance between two objects cannot be less than the difference in their distances to any other object. <p> Enhancements to the vp-tree include partitioning of the distances into more than two sets, and multiple vantage points at each node [5]. In a vantage point tree, each node traversed requires a distance comparison between the query and the key. Berman <ref> [3] </ref> and Baeza-Yates, et. al.[1] invented a tree structure in which all the nodes at a given level are associated with a single key. Thus, the total number of distance comparisons required while traversing the tree is only the height of the tree. Individual node traversals are thus very cheap.
Reference: [4] <author> A. P. Berman and L. G. Shapiro. </author> <title> Efficient image retrieval with multiple distance measures. </title> <booktitle> In Proceedings of the SPIE Conference on Storage and Retrieval for Image and Video Databases, </booktitle> <month> Febru-ary </month> <year> 1997. </year>
Reference-contexts: In this paper, we evaluate key selection algorithms for triangle-inequality-based searches for both Threshold queries and Best-Match queries. 2 Overview of the Triangle Inequality Algorithm There are several schemes in the literature that take advantage of the triangle inequality to reduce the number of direct comparisons in a Threshold search <ref> [3, 4, 2, 6, 1] </ref>. The intuition behind all the schemes is that the distance between two objects cannot be less than the difference in their distances to any other object. <p> Barros, et. al.[2], successfully used a single set of keys and the triangle inequality in a real image database. They did not use any tree structure, but stored all the distances in a table. In Berman and Shapiro <ref> [4] </ref> we introduced an indexing and retrieval algorithm for multiple keys and multiple distance meau-res, and stored the distances in a table, rather than a tree structure. <p> The hope is that M + U is sufficiently smaller than N to result in an overall time savings. 2.2 Threshold Searches with Multiple Distance Measures In Berman and Shapiro <ref> [4] </ref>, we extended the above scheme to work with combinations of distance measures.
Reference: [5] <author> T. Bozkaya and M. Ozsoyoglu. </author> <title> Distance-based indexing for high-dimensional metric spaces. </title> <booktitle> In ACM SIGMOD International Conference on Management of Data,May, </booktitle> <year> 1997, </year> <pages> pages 357-368. </pages>
Reference-contexts: By repeatedly comparing the query to the vantage-point objects, one can eliminate subtrees from the search. Enhancements to the vp-tree include partitioning of the distances into more than two sets, and multiple vantage points at each node <ref> [5] </ref>. In a vantage point tree, each node traversed requires a distance comparison between the query and the key. Berman [3] and Baeza-Yates, et. al.[1] invented a tree structure in which all the nodes at a given level are associated with a single key.
Reference: [6] <author> W. A. Burkhard and R. M. Keller. </author> <title> Some approaches to best-match file searching. </title> <journal> Communications of the ACM, </journal> <volume> 16(4) </volume> <pages> 230-236, </pages> <month> Apr </month> <year> 1973. </year>
Reference-contexts: In this paper, we evaluate key selection algorithms for triangle-inequality-based searches for both Threshold queries and Best-Match queries. 2 Overview of the Triangle Inequality Algorithm There are several schemes in the literature that take advantage of the triangle inequality to reduce the number of direct comparisons in a Threshold search <ref> [3, 4, 2, 6, 1] </ref>. The intuition behind all the schemes is that the distance between two objects cannot be less than the difference in their distances to any other object. <p> We further shorten l (d; k; i; q) to l (d; k) when there is no confusion as to the values of i and q. Burke and Keller <ref> [6] </ref> first proposed the idea of using the triangle inequality to reduce comparisons. Uhlmann [10] described the vantage point tree, or vp-tree, in which relative distances to key objects are repeatedly used to partition the database. Each node in the tree represents a vantage-point.
Reference: [7] <author> A. Del Bimbo, M. Campanai, and P. Nesi. </author> <title> 3d visual query language for image databases. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 3, </volume> <year> 1992. </year>
Reference-contexts: Thus, more research into the behavior of the distance measures is called for. A more complete set of distance measures will also be used in our future tests. Distance measures have been proposed for color, tex ture, shape [8], object presence [9], and object spatial relationships <ref> [7] </ref>. We would like to include representatives of each type of measure in our tests. We assumed a static database known in advance of the key selection. Many databases do not have these qualities. Finding good keys for non-static databases using triangle inequality algorithms is an open research problem.
Reference: [8] <author> A. Del Bimbo, P. Pala, and S. Santini. </author> <title> Visual image retrieval by elastic deformation of object sketches. </title> <booktitle> In IEEE Symposium on Visual Languages, </booktitle> <pages> pages 216-223, </pages> <year> 1994. </year>
Reference-contexts: Thus, more research into the behavior of the distance measures is called for. A more complete set of distance measures will also be used in our future tests. Distance measures have been proposed for color, tex ture, shape <ref> [8] </ref>, object presence [9], and object spatial relationships [7]. We would like to include representatives of each type of measure in our tests. We assumed a static database known in advance of the key selection. Many databases do not have these qualities.
Reference: [9] <author> D. A. Forsyth, J. Malik, M. M. Fleck, H. Greenspan, T. Leung, S. Belongie, C. Carson, and C. Bregler. </author> <title> Finding pictures of objects in large collections of images. </title> <booktitle> In Proceedings of the 2nd In--ternational Workshop on Object Representation in Computer Vision, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: Thus, more research into the behavior of the distance measures is called for. A more complete set of distance measures will also be used in our future tests. Distance measures have been proposed for color, tex ture, shape [8], object presence <ref> [9] </ref>, and object spatial relationships [7]. We would like to include representatives of each type of measure in our tests. We assumed a static database known in advance of the key selection. Many databases do not have these qualities.
Reference: [10] <author> J. Uhlmann, </author> <title> Satisfying general proximity/similarity queries with metric trees. </title> <journal> Information Processing Letters, </journal> <volume> 40, </volume> <year> 1991, </year> <pages> pages 175-179. </pages>
Reference-contexts: We further shorten l (d; k; i; q) to l (d; k) when there is no confusion as to the values of i and q. Burke and Keller [6] first proposed the idea of using the triangle inequality to reduce comparisons. Uhlmann <ref> [10] </ref> described the vantage point tree, or vp-tree, in which relative distances to key objects are repeatedly used to partition the database. Each node in the tree represents a vantage-point.
Reference: [11] <author> L. Wang and D. C. </author> <title> He. Texture classification using texture spectrum. </title> <journal> Pattern Recognition Lett., </journal> <volume> 13, </volume> <year> 1990, </year> <pages> pages 905-910. </pages>
Reference-contexts: A short summary of the various distance measure follows: Color Histogram This is a simple L 1 distance measure based on breaking up the color space into a 4fi4fi4 RGB cube. Local Binary Partition Texture This is a standard and easy to implement texture measure with very good performance <ref> [11] </ref>. For each pixel p, the 8 neighbors are examined to see if their intensity is greater than p. The result becomes an 8 digit binary number, and a histogram of the numbers is created for each image.
References-found: 11

