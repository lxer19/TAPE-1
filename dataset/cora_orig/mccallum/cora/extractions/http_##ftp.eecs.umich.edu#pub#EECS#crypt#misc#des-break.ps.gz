URL: http://ftp.eecs.umich.edu/pub/EECS/crypt/misc/des-break.ps.gz
Refering-URL: http://ftp.eecs.umich.edu/pub/EECS/crypt/misc/
Root-URL: http://www.eecs.umich.edu
Title: Using Content-Addressable Search Engines To Encrypt and Break DES  
Author: Peter C. Wayner 
Address: Ithaca NY 14853  
Affiliation: Computer Science Department Cornell University  
Abstract: A very simple parallel architecture using a modified version of content-addressable memory can be used to cheaply and efficiently encipher and decipher data with DES-like systems. The paper will describe how to implement DES on these modified content-addressable memories at speeds approaching some of the best specialized hardware. The chips can also be used to build a large scale engine for exhaustively searching the entire keyspace of DES. The original DES system was designed to be easily implemented in hardware [NBS77] and the current silicon manifestations of the cipher use modern processor design techniques to encipher and decipher information at about 1 to 20 megabits per second. Implementations of DES in software for standard CPUs, however, are markedly slower than specialized chips because many of the operations involved in DES are bit-level manipulations. As a result, many of the DES-like systems such as Merkle's Khufu [Mer90] were designed as replacements that could be easily implemented on conventional hardware. There is one class of general architecture, however, that implements bit-level operations. The machines like the CM-1, CM-2 and CM-200 from Thinking Machines Corporation and the Maspar machine all have thousands of one-bit processors. The designers intended that large number of processors would make up for the deficencies of the individual nodes. Another example of this small architecture is now emerging from the labs of memory designers who are trying to build sophisticated content addressable memory. The individual processors of these machines are even weaker than the ones of the CM-1, but they can be packed very densely on a chip. The tiny processors have only a fraction of the memory of a CM-1 (42 bits versus thousands) and only a one dimensional interconnection network (vs 12), but this is sufficient to implement DES successfully. Moreover, the packing density (1024 processors per chip) ensures that a significant amount of parallelism is very cheap. 
Abstract-found: 1
Intro-found: 1
Reference: [Bri90] <author> Sharon Marie Britton. </author> <title> 8k-trit Database Accelerator with Error Detection. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> February </month> <year> 1990. </year>
Reference: [BS91] <author> Eli Biham and Adi Shamir. </author> <title> Differential cryptanalysis of Snefru, Khafre, REDOC-II, LOKI, and lucifer. </title> <booktitle> In Crypto 91, </booktitle> <address> Santa Barbara, California, </address> <year> 1991. </year>
Reference-contexts: The recent papers by Biham and Shamir <ref> [BS91] </ref> and others , show that there are additional ones that are more important. Meyer and Matyas note that there are 52 and 53 minterms in the description of each of the 8 s-boxes.
Reference: [DH77] <author> Whitfield Diffie and Martin Hellman. </author> <title> Exhaustive cryptanalysis of the nbs data encryption standard. </title> <journal> Computer, </journal> <volume> 10(6) </volume> <pages> 74-84, </pages> <year> 1977. </year>
Reference-contexts: less in large ones. 3 Exhaustive Attack on DES When DES was introduced in 1977, some computer scientists protested that 56 bits were not sufficient because it would be possible to do an exhaustive search of the key space in a short amount of time using a massively parallel computer. <ref> [DH77] </ref> In their book, Meyer and Matyas [MM82] discount that possiblity and predict that it would just not be physically possible to build the machine until the 1990's because there were too many physical limitations.
Reference: [GO91] <author> Gilles Garon and Richard Outerbridge. </author> <title> Des watch: And examination of the sufficiency of the data encryption standard for financial institution's information security in the 1990's. </title> <journal> Cryptologia, </journal> <volume> 15(3) </volume> <pages> 177-193, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Moreover, the slightest change in the algorithm would render this machine worthless. Garon and Outerbridge calculated the approximate costs of designing such a machine and found that it would cost about $129,000 for a machine that would break DES within 1 year if the machine was built in 1990. <ref> [GO91] </ref> They assume that it is possible to build a node that encrypts 2 million key tests for $25 in order to complete such a machine. They do not describe the details of how to design the board or manufacture it is sufficient quanties.
Reference: [Koh87] <author> Teuvo Kohonen. </author> <title> Content-Addressable Memories. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, New York City, </address> <year> 1987. </year> <month> 10 </month>
Reference-contexts: Content-addressable memory is a hardware solution to this problem that will invert the search and provide the address holding a value in only one operation. The technique has been well-researched over the years and the book by Kohonen <ref> [Koh87] </ref> notes many approaches and summarizes some of the more salient research. Several companies including AMD are making basic content-addressable memory modules. Recently teams at Syracuse University (some publications include [Old86, OWN87, OSB87]), MIT and Cornell ([Bri90, WS89, Zip90]) have developed more sophicated and powerful implementations in silicon.
Reference: [Mer90] <author> Ralph Merkle. </author> <title> Fast software encryption function. </title> <editor> In A.J. Menezes and S.A. Van Stone, editors, </editor> <booktitle> Crypto 90, </booktitle> <address> Berlin, New York City, 1990. </address> <publisher> Springer Verlag. </publisher>
Reference: [MM82] <author> Carl H. Meyer and Stephen M. Matyas. </author> <title> Cryptography: New Dimension in Computer Security. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: Some bits are used more than others. These eight s-boxes can be further simplified into 32 functions that map six bits to one bit and this is the best level of abstraction to use when programming the Coherent Processor . 4 Meyer and Matyas <ref> [MM82] </ref> describe the design of the s-boxes in terms of minterms, which are roughly the same as clauses of boolean variables. <p> on DES When DES was introduced in 1977, some computer scientists protested that 56 bits were not sufficient because it would be possible to do an exhaustive search of the key space in a short amount of time using a massively parallel computer. [DH77] In their book, Meyer and Matyas <ref> [MM82] </ref> discount that possiblity and predict that it would just not be physically possible to build the machine until the 1990's because there were too many physical limitations.
Reference: [NBS77] <author> NBS. </author> <title> Data encryption standard (des). </title> <type> Technical report, </type> <institution> National Bureau of Standards (US), Federal Information Processing Standards, Publication 46, National Technical Information Services, Springfield, Virginia, </institution> <month> April </month> <year> 1977. </year>
Reference: [Old86] <author> J.V. Oldfield. </author> <title> Logic programs and an experimental architecture for their execution. </title> <journal> Procedings of the I.E.E.E. Part E, </journal> <volume> 133 </volume> <pages> 163-167, </pages> <year> 1986. </year>
Reference-contexts: The technique has been well-researched over the years and the book by Kohonen [Koh87] notes many approaches and summarizes some of the more salient research. Several companies including AMD are making basic content-addressable memory modules. Recently teams at Syracuse University (some publications include <ref> [Old86, OWN87, OSB87] </ref>), MIT and Cornell ([Bri90, WS89, Zip90]) have developed more sophicated and powerful implementations in silicon. They allow the programmer to chain the result of several searches together in a simple fashion so that larger data structures and more complicated searches can be performed in hardware.
Reference: [OSB87] <author> J.V. Oldfield, Charles D. Stormon, </author> <title> and M.R. Brule. The application of vlsi content-addressable memories to the acceleration of logic programming systems. </title> <booktitle> In CompEuro 87, VLSI and Computers, </booktitle> <pages> pages 27-30, </pages> <address> Hamburg, Ger-many, </address> <month> May </month> <year> 1987. </year>
Reference-contexts: The technique has been well-researched over the years and the book by Kohonen [Koh87] notes many approaches and summarizes some of the more salient research. Several companies including AMD are making basic content-addressable memory modules. Recently teams at Syracuse University (some publications include <ref> [Old86, OWN87, OSB87] </ref>), MIT and Cornell ([Bri90, WS89, Zip90]) have developed more sophicated and powerful implementations in silicon. They allow the programmer to chain the result of several searches together in a simple fashion so that larger data structures and more complicated searches can be performed in hardware.
Reference: [OWN87] <author> J.V. Oldfield, R.D. Williams, and N.E.Wiseman. </author> <title> Content-addressable memories for storing and processing recursively-divided images and trees. </title> <journal> Electronics Letters, </journal> <volume> 23(6) </volume> <pages> 262-263, </pages> <year> 1987. </year>
Reference-contexts: The technique has been well-researched over the years and the book by Kohonen [Koh87] notes many approaches and summarizes some of the more salient research. Several companies including AMD are making basic content-addressable memory modules. Recently teams at Syracuse University (some publications include <ref> [Old86, OWN87, OSB87] </ref>), MIT and Cornell ([Bri90, WS89, Zip90]) have developed more sophicated and powerful implementations in silicon. They allow the programmer to chain the result of several searches together in a simple fashion so that larger data structures and more complicated searches can be performed in hardware.
Reference: [WS89] <author> John Wade and Charles Sodini. </author> <title> A ternary content-addressable search engine. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 24(4) </volume> <pages> 1003-1013, </pages> <month> August </month> <year> 1989. </year>
Reference: [Zip90] <author> Richard Zippel. </author> <title> Programming the data structure accelerator. </title> <booktitle> In Proceedings of Jerusalem Conference on Information, Technology, </booktitle> <address> Jerusalem, Israel, </address> <month> October </month> <year> 1990. </year> <month> 11 </month>
References-found: 13

