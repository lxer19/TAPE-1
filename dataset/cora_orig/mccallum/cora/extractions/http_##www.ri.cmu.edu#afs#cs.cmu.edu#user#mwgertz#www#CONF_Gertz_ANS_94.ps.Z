URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mwgertz/www/CONF_Gertz_ANS_94.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/mwgertz/www/publish.html
Root-URL: 
Title: ABSTRACT  
Abstract: In this paper, we discuss in detail the motivation behind the creation of the Onika Iconic Programming Language and Human-Machine Interface, developed at Carnegie Mel-lon University and used to program and control various robotic systems in both automous and teleoperative modes. Additionally, we discuss the syntax and grammar of the iconic languages presented therein, and show how they can be used to create complete applications to be executed on any manipulator. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. K. Chang, </author> <title> Visual Languages: A Tutorial and Survey, </title> <journal> IEEE Software, </journal> <month> January </month> <year> 1987, </year> <pages> pp. 29-39. </pages>
Reference: [2] <author> J. J. Craig, </author> <title> Introduction to Robotics, 2nd Ed. </title> <address> (Reading, Massachusetts: </address> <publisher> Addison Wesley Publishing Company), </publisher> <year> 1989. </year>
Reference: [3] <author> M. W. Gertz, D. B. Stewart, and P. K. Khosla, </author> <title> A Software Architecture-Based Human-Machine Interface for Reconfigurable Sensor-Based Control Systems, </title> <booktitle> in Proc. of 8th IEEE International Symposium on Intelligent Control, </booktitle> <address> Chicago, Illinois, </address> <month> August </month> <year> 1993. </year>
Reference: [4] <author> M. W. Gertz and P. K. Khosla, </author> <title> Onika 1.3 Iconically-Programmed Human-Machine Interface, Program Documentation, </title> <institution> Dept. of Elec. and Comp. Engineering and The Robotics Institute, Carnegie Mellon University, Pittsburgh, </institution> <note> PA 15213; to obtain copy electronically, send email to &lt;chimera@cmu.edu&gt;; October 1993. </note>
Reference: [5] <author> M.W. Gertz, D. B. Stewart, B. J. Nelson, and Pradeep K. Khosla, </author> <title> Using Hypermedia and Reconfigurable Software Assembly to Support Virtual Laboratories and Factories, </title> <booktitle> Fifth International Symposium on Robotics and Manufacturing, </booktitle> <month> Aug. </month> <pages> 15-17, </pages> <address> 1994, Maui, Hawaii. </address>
Reference-contexts: Similarly, the two jobs marked b will also begin execution at the same time. Additionally, since Onika connects to the Chimera real-time system via the internet, we have successfully controlled robots remotely using Onika from distances up to 2,600 kilometers away <ref> [5] </ref>. Despite these achievements, there are certain areas within our visual programming environment which require further research and development. These include: User Testing: Onika is currently undergoing user testing using standard prototyping techniques as given in Meister [6].
Reference: [6] <author> D. Meister, </author> <title> System Effectiveness Testing, </title> <booktitle> Handbook of Human Factors, </booktitle> <pages> pp. </pages> <address> 1271-1297 (New York: </address> <publisher> John Wiley & Sons, Inc.; </publisher> <editor> G. Salvendy, ed.), </editor> <year> 1987. </year>
Reference-contexts: Despite these achievements, there are certain areas within our visual programming environment which require further research and development. These include: User Testing: Onika is currently undergoing user testing using standard prototyping techniques as given in Meister <ref> [6] </ref>. User feedback from standardized testing is essential for designing an interface usable by non-specialists.
Reference: [7] <author> W. </author> <title> Meyer (principal investigator), </title> <type> Final Report, </type> <institution> NASA Contract NAS1-18393, Grumman Data Systems, Technology Department, </institution> <month> June 27, </month> <year> 1988, </year> <pages> pp. 34-47. </pages>
Reference: [8] <author> B. A. Myers, </author> <title> Taxonomies of Visual Programming and Program Visualization, </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 1990(1), </volume> <pages> pp. 97-123. </pages>
Reference: [9] <author> D. B. Stewart, D. E. Schmitz, and P. K. Khosla, </author> <title> The Chimera II Real-Time Operating System for Advanced Sensor-Based Robotic Applications, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> vol. 22, no. 6, </volume> <pages> pp. 1282-1295, </pages> <month> November/December </month> <year> 1992. </year>
Reference: [10] <author> D. B. Stewart and P. K. Khosla, </author> <title> Chimera 3.0 Real-Time Programming Environment, Program Documentation, </title> <institution> Dept. of Elec. and Comp. Engineering and The Robotics Institute, Carnegie Mellon University, Pitts-burgh, </institution> <note> PA 15213; to obtain copy electronically, send email to &lt;chimera@cmu.edu&gt;; July 1993. </note>
Reference: [11] <author> D. B. Stewart and P. K. Khosla, </author> <title> Real-Time Scheduling of Dynamically Reconfigurable Systems, </title> <booktitle> in Proc. of 1991 International Conference on Systems Engineering, </booktitle> <address> Dayton, </address> <publisher> Ohio, </publisher> <pages> pp. 139-142, </pages> <month> August </month> <year> 1991. </year>
Reference: [12] <author> D. B. Stewart, R. A. Volpe, and P. K. Khosla, </author> <title> Design of Dynamically Reconfigurable Real-Time Software using Port-Based Objects, </title> <type> Technical Report CMU-RI-TR-93-11, </type> <institution> Dept. of Elec. and Comp. Engineering and The Robotics Institute, Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213. </address>
Reference-contexts: A. Task Aspects The code for control tasks in our software framework for reconfigurable systems is small and portable. It is written in a conventional manner, external to the real-time operating system and the visual programming environment <ref> [12] </ref>. It is the responsibility of the visual programming environment to display the aspects of the task in such a way as to make its function completely understood by the user.
References-found: 12

