URL: http://www.cs.berkeley.edu/~byers/thesis/jwbthesis.ps
Refering-URL: http://www.cs.berkeley.edu/~byers/thesis/thesis.html
Root-URL: http://www.cs.berkeley.edu
Title: Maximizing Throughput of Reliable Bulk Network Transmissions  
Author: by John W. Byers Professor Michael Luby Professor Richard M. Karp 
Degree: 1991 A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Science in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge: Professor Christos Papadimitriou, Chair  Professor Dorit Hochbaum  
Date: Fall 1997  
Affiliation: B.A. (Cornell University)  
Abstract-found: 0
Intro-found: 1
Reference: [AA 94] <author> B. Awerbuch and Y. Azar. </author> <title> Local Optimization of Global Objectives: Competitive Distributed Deadlock Resolution and Resource Allocation. </title> <booktitle> In Proc. of the 35th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 240-249, </pages> <year> 1994. </year>
Reference-contexts: The use of the exponential weight function strongly discourages routing additional low-profit calls through edges which already have high load. Ultimately, their algorithm achieves a logarithmic competitive ratio. In continuation of this work, Awerbuch and Azar <ref> [AA 94] </ref> studied a range of related resource allocation problems in a distributed setting. In a distributed round of their distributed client-server model, each client can broadcast a message to each of the servers it utilizes, and each server can broadcast a message to each of the clients it serves. <p> But we are interested in more time-efficient solutions. The deterministic algorithm we present produces (1 + *) approximate solutions for positive linear programs, both in general and for the bandwidth allocation problem, and builds on ideas used in these other algorithms <ref> [AA 94, LN 93, PST 94] </ref>. The sequential version of our algorithm is most closely related to the algorithm of Luby and Nisan, and affords the following advantages. It eliminates the need for complex global operations and the enabling fast implementation in a distributed setting. <p> To this end, our algorithm uses exponential weight functions which have been used before in related contexts by many authors, including <ref> [AAFPW 92, AAP 93, LN 93, PST 94, AA 94] </ref>.
Reference: [AAB 97] <author> B. Awerbuch, Y. Azar, and Y. Bartal. </author> <title> Local Multicast Rate Control with Globally Optimum Throughput. </title> <type> Unpublished manuscript, </type> <year> 1997. </year>
Reference-contexts: This program is now a positive linear program in the form for which we have fast approximate solutions, but with a potentially intractable number of variables for each multicast connection to handle. Recently, Awerbuch, Azar and Bartal <ref> [AAB 97] </ref> made observations that make this problem tractable in the distributed model we present, enabling the use of an algorithm derived from the work in Chapter 3 for solving this layered multicast allocation problem.
Reference: [AAFKLL 96] <author> D.M. Andrews, B. Awerbuch, A. Fernandez, J. Kleinberg, F.T. Leighton, Z. Liu. </author> <title> Universal Stability Results for Greedy Contention-resolution Protocols. </title> <booktitle> In Proc. 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 380-389, </pages> <year> 1996. </year>
Reference-contexts: While we know of no related work on worst-case behavior of data selection policies, our approach is somewhat similar to the approach used in recent work in the adversarial queuing models of [BKRSW 95] and <ref> [AAFKLL 96] </ref>. Their work focuses on analysis of queuing policies in packet routing networks when the distribution of packet arrivals and packet routes is arbitrary, subject to the requirement that edge capacity constraints are not exceeded. In this manner, they consider the performance of queuing policies given worst-case arrival patterns. <p> This is somewhat similar to the approach used in recent work in the adversarial queuing models of [BKRSW 95] and <ref> [AAFKLL 96] </ref>. Their work focuses 56 on analysis of queuing protocols on packet routing networks even when the distribution of packet arrivals and packet routes is arbitrary, subject to the requirement that edge capacity constraints are not exceeded.
Reference: [AAFPW 92] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin and O. Waarts. </author> <title> On-line Load Balancing with Applications to Machine Scheduling and Virtual Circuit Routing. </title> <booktitle> In Proc. of the 33rd Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 164-173, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: To this end, our algorithm uses exponential weight functions which have been used before in related contexts by many authors, including <ref> [AAFPW 92, AAP 93, LN 93, PST 94, AA 94] </ref>.
Reference: [AAP 93] <author> B. Awerbuch, Y. Azar, and S. Plotkin. </author> <title> Throughput Competitive On-line Routing. </title> <booktitle> In Proc. of the 34th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 32-40, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: One of the first theoretical studies in this area for general network topologies was work on the following on-line problem, studied by Awerbuch, Azar and Plotkin <ref> [AAP 93] </ref>. <p> Their algorithm initializes all variables in the linear program to have very small, feasible values, then increases those values monotonically over time. Selecting which variables to increase at each point in time is perfomed basis of a cost measure using exponential weight functions similar to the one used in <ref> [AAP 93] </ref> and by increasing only those variables with sufficiently small cost. However, this threshold cost evolves over time, and its value both depends on global information and must be known globally, which makes their algorithm unsuitable for distributed implementation. <p> To this end, our algorithm uses exponential weight functions which have been used before in related contexts by many authors, including <ref> [AAFPW 92, AAP 93, LN 93, PST 94, AA 94] </ref>.
Reference: [ABBLR 97] <author> M. Adler, Y. Bartal, J. Byers, M. Luby and D. Raz. </author> <title> A Modular Analysis of Network Transmission Protocols. </title> <booktitle> Proc. of the 5th Israeli Symp. on Theory of Computing and Systems, </booktitle> <month> June </month> <year> 1997. </year> <month> 105 </month>
Reference-contexts: However, we show that with randomization, we can develop an algorithm which delivers very high performance, within an additive term from optimal at any point in time with high probability. Many of the theoretical results in this chapter appeared in preliminary form in <ref> [ABBLR 97] </ref> as joint work with Micah Adler, Yair Bartal, Michael Luby and Danny Raz. We bolster our results with comparative simulations of our algorithm against other data selection policies on network traces taken from the Internet and on simulated worst-case behavior.
Reference: [ABELS 96] <author> A. Albanese, J. Bloemer, J. Edmonds, M. Luby and M. Sudan. </author> <title> Priority Encoding Transmission. </title> <journal> In IEEE Transactions on Information Theory (special issue on coding theory), </journal> <volume> Volume 42, No. 6, </volume> <month> November </month> <year> 1996, </year> <pages> pp. 1737-1744. </pages>
Reference: [AMK 97] <author> E. Amir, S. McCanne and R. Katz. </author> <title> Receiver-driven Bandwidth Adaptation for Light-weight Sessions. </title> <booktitle> In ACM Multimedia '97, </booktitle> <month> November </month> <year> 1997. </year>
Reference: [AMO 96a] <author> Y. Afek, Y. Mansour and Z. Ostfeld. </author> <title> Convergence Complexity of Optimistic Rate Based Flow Control Algorithms. </title> <booktitle> In Proc. of 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 89-98, </pages> <year> 1996. </year>
Reference-contexts: A large body of research has subsequently worked on remedying this 13 problem. Theoretical results of Afek, Mansour and Ostfeld indicate that convergence to a max-min fair equilibrium can be obtained in fi (n 2 ) distributed update steps, where n is the number of connections in the system <ref> [AMO 96a] </ref>. Awerbuch and Shavitt [AS 97a] have shown how to arrive at an approximately max-min fair equilibrium in a distributed model in a logarithmic number of distributed rounds. <p> allocation as connections arrive and depart, and describe how to run our algorithm continuously to help achieve this objective. 3.1 Towards a Distributed Model 3.1.1 Practical Considerations In recent work on rate-based flow control, the following understanding of the operation of the network communication is generally assumed (see for example <ref> [AMO 96a, AMO 96b, AS 97a] </ref>). Routers and connection endpoints cooperate in obtaining a distributed allocation, although routers do not have prior knowledge of which connections will be present, nor do connections have prior knowledge of the existence of other connections.
Reference: [AMO 96b] <author> Y. Afek, Y. Mansour and Z. Ostfeld. Phantom: </author> <title> A Simple and Effective Flow Control Scheme. </title> <booktitle> In Proc. of ACM SIGCOMM '96, </booktitle> <pages> pp. 169-182, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Recently, the ATM Forum on Traffic Management has adopted rate-based flow control as a standard for available bit rate traffic on ATM networks (see [BF 95] for details). The work on Phantom of Afek et al <ref> [AMO 96b] </ref> is a first step towards interoperability of TCP and rate-based flow control. Typically, rate-based flow control is implemented by having routers store data about connections which utilize them. <p> However, in both cases, the mechanism for performing the updates can be quite slow in practice, and in a more practical result of Afek et al <ref> [AMO 96b] </ref>, the authors show how to improve convergence time when a portion of the bandwidth of each link is reserved for update operations, and is not used by any connections. <p> allocation as connections arrive and depart, and describe how to run our algorithm continuously to help achieve this objective. 3.1 Towards a Distributed Model 3.1.1 Practical Considerations In recent work on rate-based flow control, the following understanding of the operation of the network communication is generally assumed (see for example <ref> [AMO 96a, AMO 96b, AS 97a] </ref>). Routers and connection endpoints cooperate in obtaining a distributed allocation, although routers do not have prior knowledge of which connections will be present, nor do connections have prior knowledge of the existence of other connections.
Reference: [AS 97a] <author> B. Awerbuch and Y. Shavitt. </author> <title> Converging to Approximated Max-Min Flow Fairness in Logarithmic Time. </title> <type> Johns Hopkins Tech Report, </type> <year> 1997. </year>
Reference-contexts: Theoretical results of Afek, Mansour and Ostfeld indicate that convergence to a max-min fair equilibrium can be obtained in fi (n 2 ) distributed update steps, where n is the number of connections in the system [AMO 96a]. Awerbuch and Shavitt <ref> [AS 97a] </ref> have shown how to arrive at an approximately max-min fair equilibrium in a distributed model in a logarithmic number of distributed rounds. <p> allocation as connections arrive and depart, and describe how to run our algorithm continuously to help achieve this objective. 3.1 Towards a Distributed Model 3.1.1 Practical Considerations In recent work on rate-based flow control, the following understanding of the operation of the network communication is generally assumed (see for example <ref> [AMO 96a, AMO 96b, AS 97a] </ref>). Routers and connection endpoints cooperate in obtaining a distributed allocation, although routers do not have prior knowledge of which connections will be present, nor do connections have prior knowledge of the existence of other connections.
Reference: [AS 97b] <author> B. Awerbuch and T. Singh. </author> <title> Online Algorithms for Selective Multicast and Maximal Dense Trees. </title> <booktitle> In Proc. of the 29th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 354-362, </pages> <year> 1997. </year>
Reference: [BBR 97] <author> Y. Bartal, J. Byers and D. Raz. </author> <title> Global Optimization using Local Information with Applications to Flow Control. </title> <booktitle> In Proc. of the 38th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 303-312, </pages> <year> 1997. </year>
Reference-contexts: Using a natural set of communication primitives, we show how these agents can compute a feasible (1 + *)-approximate solution to the global optimum in a polylogarithmic number of distributed communication rounds. This theoretical result appeared in preliminary form in <ref> [BBR 97] </ref> as joint work with Yair Bartal and Danny Raz. We then provide a discussion of the implications of this technique for solving the bandwidth allocation problem, in part focusing on experience with a serial implementation of the algorithm. In Chapter 4, we focus on data selection policies.
Reference: [BG 87] <author> D. Bertsekas and R. Gallagher. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1987. </year>
Reference-contexts: A max-min fair equilibrium state has the following characterization: no connection can increase their rate without decreasing the rate of some other connection with equal or lower rate <ref> [BG 87] </ref>. Algorithmic techniques for efficiently converging on a max-min fair allocation for a set of bulk connections is described in the section on related work.
Reference: [BF 95] <author> F. Bonomi and K. Fendick. </author> <title> The Rate Based Flow Control for Available Bit Rate ATM Service. </title> <booktitle> IEEE Networks, </booktitle> <pages> pp. 24-39, </pages> <month> March/April </month> <year> 1995. </year>
Reference-contexts: On the other hand, rate-based flow control has become a technique which is widely expected to see broad use in integrated-services networks. Recently, the ATM Forum on Traffic Management has adopted rate-based flow control as a standard for available bit rate traffic on ATM networks (see <ref> [BF 95] </ref> for details). The work on Phantom of Afek et al [AMO 96b] is a first step towards interoperability of TCP and rate-based flow control. Typically, rate-based flow control is implemented by having routers store data about connections which utilize them.
Reference: [BKRSW 95] <author> A. Borodin, J. Kleinberg, P. Raghavan, M. Sudan and D. Williamson. </author> <title> Adversarial Queueing Theory. </title> <booktitle> In Proc. 28th ACM Symposium on Theory of Computing, </booktitle> <year> 1996. </year>
Reference-contexts: While we know of no related work on worst-case behavior of data selection policies, our approach is somewhat similar to the approach used in recent work in the adversarial queuing models of <ref> [BKRSW 95] </ref> and [AAFKLL 96]. Their work focuses on analysis of queuing policies in packet routing networks when the distribution of packet arrivals and packet routes is arbitrary, subject to the requirement that edge capacity constraints are not exceeded. <p> This is somewhat similar to the approach used in recent work in the adversarial queuing models of <ref> [BKRSW 95] </ref> and [AAFKLL 96]. Their work focuses 56 on analysis of queuing protocols on packet routing networks even when the distribution of packet arrivals and packet routes is arbitrary, subject to the requirement that edge capacity constraints are not exceeded.
Reference: [BOP 94] <author> L. S. Brakmo, S. W. O'Malley and L. L. Peterson. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <booktitle> In Proc. ACM SIGCOMM '94, </booktitle> <pages> pp. 24-35, </pages> <year> 1994. </year> <month> 106 </month>
Reference: [BPSK 96] <author> H. Balakrishnan, V. Padmanabhan, S. Seshan, and R. Katz. </author> <title> A Comparison of Mechanisms for Improving TCP Performance over Wireless Links. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 256-269, </pages> <year> 1996. </year>
Reference: [Cha 94] <author> A. Charny. </author> <title> An Algorithm for Rate Allocation in a Packet-Switching Network with Feedback. </title> <type> Technical Report MIT/LCS/TR-601, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> April </month> <year> 1994. </year>
Reference: [CLZ 87] <author> D. D. Clark, M. L. Lambert, and L. Zhang. NETBLT: </author> <title> A High Throughput Transport Protocol. </title> <journal> Computer Communications Review, </journal> <volume> 17(5) </volume> <pages> 353-359, </pages> <year> 1987. </year>
Reference-contexts: Our modular approach to protocol design has other obvious advantages: It encourages the design of simple and easy to understand protocols, while explicitly discouraging consideration of complex interactions between the different parts. This notion is not new the architects of NETBLT <ref> [CLZ 87] </ref> and the proponents of forward acknowledgment in TCP/IP [MM 96] both advocate explicit decoupling of congestion control algorithms from other parts of the protocol.
Reference: [DKS 89] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and Simulation of a Fair Queueing Algorithm. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pp. 3-12, </pages> <year> 1989, </year>
Reference: [FF 96] <author> K. Fall and S. Floyd. </author> <title> Simulation-based Comparisons of Tahoe, Reno and SACK TCP. </title> <journal> Computer Communications Review, </journal> <volume> 26(3), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: Our model supports negative acknowledgments (NACKs), when the receiver can infer that a packet has been lost. It can also support the use of acknowledgments which acknowledge multiple packets, similar to the use of selective acknowledgment in TCP/IP (see for example <ref> [FF 96, JB 88] </ref>), simply by unpacking such a multiple acknowledgment into a sequence of separate acknowledgments. Although the model implicitly permits the receiver to choose what to acknowledge at each time-step, our algorithms use a rather simple mechanism for doing so.
Reference: [FJLMZ 95] <author> S. Floyd, V. Jacobson, C. Liu, S. McCanne, and L. Zhang. </author> <title> A Reliable Mul-ticast Framework for Light-weight Sessions and Application Level Framing. </title> <booktitle> In Proc. ACM SIGCOMM '95, </booktitle> <pages> pp. 342-356, </pages> <month> August </month> <year> 1995. </year>
Reference: [FJ 93] <author> S. Floyd and V. Jacobson. </author> <title> Random Early Detection Gateways for Congestion Avoidance. </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference: [FJ 94] <author> S. Floyd and V. Jacobson. </author> <title> The Synchronization of Periodic Routing Messages. </title> <journal> In ACM Transactions on Networking, </journal> <volume> 2(2) </volume> <pages> 122-136, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: A reasonable question to ask is whether the bad behavior sketched in our trace data really occurs in practice? Evidence from empirical studies indicate that loss patterns in which packets are lost at fixed, periodic time intervals have recently been observed in the Internet <ref> [FJ 94, YKT 96] </ref>. Therefore it is likely that sometimes, under existing network conditions, the simple deterministic strategy performs poorly. The exact performance of our algorithm depends directly on the size of the set of candidates which we draw from at random at each transmission time.
Reference: [Hoe 96] <author> J. Hoe. </author> <title> Improving the Start-up Behavior of a Congestion Control Scheme for TCP. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 270-280, </pages> <year> 1996. </year>
Reference-contexts: In general, this simple policy has delivered high performance in protocols such as TCP when packet loss rates are low, but has recently drawn an increasing amount of attention (see for example <ref> [Hoe 96] </ref>) as the incidence of temporally correlated packet loss increases. 2.3.1 Trends in End-to-End Network Behavior Paxson's end-to-end measurements of Internet traffic indicate an important trend: over the last several years, packet loss rates experienced by bulk transmissions are increasing, and by many indications, accelerating [Pax 97].
Reference: [Hui 96] <author> C. Huitema. </author> <title> The Case for Packet Level FEC. </title> <booktitle> In Proc. of IFIP 5th Int'l Workshop on Protocols for High Speed Networks, </booktitle> <institution> Sophia Antipolis, France, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: Other approaches for using FEC for reliable multicasting can be found in [Mos 84], <ref> [Hui 96] </ref> and [Riz 97]. In spite of the recent focus of attention on this area, there is a distinct lack of analytic evidence to support the benefits of this approach over others in spite of the empirical evidence.
Reference: [Jac 88] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proc. ACM SIGCOMM '88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year> <month> 107 </month>
Reference-contexts: Traces 7 of packet loss on the Internet indicate the presence of frequent, long-lived bursts of packet loss [Pax 96, YKT 96]. Variance in packet latencies and packet interarrival times on the Internet is large <ref> [Jac 88, Pax 97] </ref>. These factors motivate studying the performance of transmission protocols on arbitrary transcripts of event sequences. In this worst-case model, the algorithm is asked to deliver high performance on any possible sequence of events relative to an optimal algorithm, and is graded based on its worst-case performance. <p> Although bulk connections are often much more concerned with throughput than latency, fluctuations in packet latency pose difficulty for best-effort protocols such as TCP which use round-trip times as a barometer for adjusting transmission rates. Jacobson's early work on congestion control in TCP <ref> [Jac 88] </ref> was careful to address this issue, and indications point to a problematic increase in variance both for packet latencies and packet interarrival times [Pax 97]. 2.3.2 Theoretical Work Since these uncertainties underlying our current understanding of packet loss are likely to persist in integrated-service networks, these factors motivate our
Reference: [JB 88] <author> V. Jacobson and R. Braden. </author> <title> TCP Extensions for Long-Delay Paths, </title> <month> October </month> <year> 1988. </year> <note> RFC 1072. </note>
Reference-contexts: Our model supports negative acknowledgments (NACKs), when the receiver can infer that a packet has been lost. It can also support the use of acknowledgments which acknowledge multiple packets, similar to the use of selective acknowledgment in TCP/IP (see for example <ref> [FF 96, JB 88] </ref>), simply by unpacking such a multiple acknowledgment into a sequence of separate acknowledgments. Although the model implicitly permits the receiver to choose what to acknowledge at each time-step, our algorithms use a rather simple mechanism for doing so.
Reference: [Jaf 81] <author> J. Jaffe. </author> <title> Bottleneck Flow Control. </title> <journal> In IEEE Transactions on Commmunica-tion, COM-29, </journal> <volume> 1(7), </volume> <pages> pp. 954-962, </pages> <month> July </month> <year> 1981. </year>
Reference-contexts: We employ this model in our work as well, and describe it completely in Chapter 5. 4 1.2 Bandwidth Allocation The most widely studied objective of rate-based flow control in the networking community is max-min fairness <ref> [Jaf 81] </ref>. A max-min fair equilibrium state has the following characterization: no connection can increase their rate without decreasing the rate of some other connection with equal or lower rate [BG 87]. <p> When this control message loops back to the source of the transmission, it complies with this request. Work on rate-based flow control can be traced back to the work of Jaffe <ref> [Jaf 81] </ref>. In 1981, he proposed an equilibrium condition he coined max-min fairness and a scheme for allocating transmission rates to a static set of connections to achieve this equilibrium.
Reference: [Kar 96] <author> H. Karloff. </author> <title> Linear Programming. </title> <publisher> Birkhauser, </publisher> <year> 1996. </year>
Reference: [Kes 91] <author> S. Keshav. </author> <title> A Control-Theoretic Approach to Flow Control. </title> <booktitle> In Proc. ACM SIGCOMM '91, </booktitle> <pages> pp. 3-16. </pages>
Reference: [L 87] <author> N. Linial. </author> <title> Distributive Graph Algorithms Global Solutions from Local Data. </title> <booktitle> In Proc. of the 28th Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 331-335, </pages> <year> 1987. </year>
Reference: [LMSSS 97] <author> M. G. Luby, M. Mitzenmacher, M. Amin Shokrollahi, D. A. Spielman, and V. Stemann. </author> <title> Practical Loss-Resilient Codes. </title> <booktitle> In Proc. of 29th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 150-159, </pages> <year> 1997. </year>
Reference-contexts: For example, these limitations make it infeasible to code for substantial packet loss rates, such as the 25% loss rates with large bursts observed by Yajnik et al [YKT 96] for overseas receivers in their trace data. Recently, Luby et al <ref> [LMSSS 97] </ref> have developed a randomized FEC scheme with encoding and decoding time linear in the length of the transmission. <p> Much more efficient encoding and decoding algorithms have recently been realized which slightly relax the ideal behavior described above. The Tornado codes of Luby et al <ref> [LMSSS 97] </ref> generate a set of redundant words R such that M can be reconstructed from any subset of M S R of size at least k (1 + *) with high probability. <p> For this application, the source of the transmission treats the entire bulk message as one large block and generates a large set of redundant codewords for this block. In practice, this technique can presently be realized only by using the codes of <ref> [LMSSS 97] </ref> described above, which can efficiently perform encoding and decoding even when the block size and redundancy are very large, although a similar approach is advocated with RSE codes by [RV 97].
Reference: [LN 93] <author> M. Luby and N. Nisan. </author> <title> A Parallel Approximation Algorithm for Positive Linear Programming. </title> <booktitle> In Proc. of 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 448-457, </pages> <year> 1993. </year>
Reference-contexts: The sequential algorithm of Plotkin, Shmoys and Tardos [PST 94] models positive linear programs as restricted flow problems, and in this model, repeatedly identifies a globally minimum weight path, then increases the flow along that path. The algorithm of Luby and Nisan <ref> [LN 93] </ref> has both a fast sequential and parallel implementation. Their algorithm initializes all variables in the linear program to have very small, feasible values, then increases those values monotonically over time. <p> But we are interested in more time-efficient solutions. The deterministic algorithm we present produces (1 + *) approximate solutions for positive linear programs, both in general and for the bandwidth allocation problem, and builds on ideas used in these other algorithms <ref> [AA 94, LN 93, PST 94] </ref>. The sequential version of our algorithm is most closely related to the algorithm of Luby and Nisan, and affords the following advantages. It eliminates the need for complex global operations and the enabling fast implementation in a distributed setting. <p> To this end, our algorithm uses exponential weight functions which have been used before in related contexts by many authors, including <ref> [AAFPW 92, AAP 93, LN 93, PST 94, AA 94] </ref>.
Reference: [LTWW 95] <author> W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson. </author> <title> On the Self-Similar Nature of Ethernet Traffic (Extended Version). </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 2, No. 1, </volume> <pages> pp. 1-15, </pages> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: Another interesting finding regards the distribution of packet loss. While it was once widely held that network traffic characteristics could be accurately modeled with simple Poisson processes, that interpretation has largely been discounted, due in large part to the breakthrough work of <ref> [LTWW 95] </ref>. Their work and numerous subsequent studies have confirmed that traffic patterns in wide-area networks, packet loss patterns, and other network phenomena are more accurately modeled by a complex, bursty process [WTSW 95, PF 95, YKT 96, Pax 97] in which long-term correlation is present. <p> users, that present obstacles for bandwidth allocation policies. 4.1.1 Modelling Issues As we described in the section on previous work, the operation of existing networks has become complex and difficult to model, since these networks can have arbitrary topologies, variable edge capacities and network load can be bursty and unpredictable <ref> [LTWW 95, YKT 96] </ref>. Furthermore, packets traversing these networks can be dropped by intermediate routers due to congestion or can experience unpredictable and widely varying round-trip times [Pax 97].
Reference: [MSZ 96] <author> Q. Ma, P. Steenkiste, and H. Zhang. </author> <title> Routing High-bandwidth Traffic in Max-min Fair Share Networks. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 206-217, </pages> <year> 1996. </year>
Reference-contexts: Our model is intended to reflect the reality of a trend in high-speed networks towards connection-oriented architectures with per-connection state inside the network <ref> [MSZ 96] </ref>. We separately consider unicast and multicast applications, applications which transmit data to a single destination and multiple destinations, respectively. In a connection-oriented network, a unicast application establishes a connection along a source-destination path in the network.
Reference: [MS 77] <author> F. J. MacWilliams and N. J. A. Sloane. </author> <title> The Theory of Error-Correcting Codes, </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference-contexts: Until very recently however, the performance of FEC schemes in practice had been too slow to warrant use except to recover from a very small proportion of packet loss. Those algorithms used Reed-Solomon based codes for the encoding, (see <ref> [MS 77] </ref> or Chapter 5 for a description of Reed-Solomon codes) and the fastest algorithms for performing the decoding in practice had a quadratic dependence on the size of the encoded message block in the running time. <p> Reed-Solomon Erasure correcting codes (RSE codes) as described in <ref> [MS 77] </ref> realize the ideal behavior above efficiently for small values of k and h as follows.
Reference: [MM 96] <author> M. Mathis and J. Mahdavi. </author> <title> Forward Acknowledgment: Refining TCP Congestion Control. </title> <booktitle> In Proc. of ACM SIGCOMM '96, </booktitle> <pages> pp. 281-291, </pages> <year> 1996. </year> <month> 108 </month>
Reference-contexts: This observation leads to a better understanding of unicast transmission protocols, in that it gives provable grounds supporting the idea of explicitly separating the two policies. This modular separation has been suggested by other authors in the networking community, including <ref> [MM 96] </ref>, but is not found in the most widely used protocols. 1.3.1 Data Selection Policies for Multicast Connections For developing data selection policies for multicast connections, the main additional complication is scalability. <p> This notion is not new the architects of NETBLT [CLZ 87] and the proponents of forward acknowledgment in TCP/IP <ref> [MM 96] </ref> both advocate explicit decoupling of congestion control algorithms from other parts of the protocol. As in [MM 96], we propose decomposing a transmission protocol into two parts: A rate allocation policy that determines when the packets are to be sent, ([MM 96] calls this congestion control in the context <p> This notion is not new the architects of NETBLT [CLZ 87] and the proponents of forward acknowledgment in TCP/IP <ref> [MM 96] </ref> both advocate explicit decoupling of congestion control algorithms from other parts of the protocol. As in [MM 96], we propose decomposing a transmission protocol into two parts: A rate allocation policy that determines when the packets are to be sent, ([MM 96] calls this congestion control in the context of TCP/IP) and a data selection 58 policy that determines what data is placed in each sent packet.
Reference: [McC 96] <author> S. McCanne. </author> <title> Scalable Compression and Transmission of Internet Multicast Video, </title> <type> PhD Thesis, </type> <institution> University of California, Berkeley, UCB/CSD-96-928, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: We have already described how forward error correction can be used to implement layered multicast for bulk transfer applications. A related approach for implementing reliable, bulk multicast with layering is described in [Vic 97]. Other work, notably that of McCanne <ref> [McC 96] </ref>, is deployed for use with real-time video applications on the MBone. Their work uses encoding technology which is capable of encoding a video stream in such a way that 82 certain substreams of the original stream are lower fidelity representations of the original stream.
Reference: [MJV 96] <author> S. McCanne, V. Jacobson, and M. Vetterli. </author> <title> Receiver-driven Layered Multi-cast. </title> <booktitle> In Proc. of ACM SIGCOMM '96, </booktitle> <pages> pp. 117-130, </pages> <year> 1996. </year>
Reference-contexts: With this approach, receivers can subscribe to subsets of the layers to receive the transmission at various rates. Typically this approach is best suited towards unreliable streaming applications. In recent implementation-based work, McCanne et al <ref> [MJV 96] </ref> developed a receiver-driven layered multicast protocol (RLM) for packet video in which receivers can dynamically join (or depart from) additional layers of the transmission each improving the signal-to-noise ratio of the overall transmission.
Reference: [Mos 84] <author> J. Mosley. </author> <title> Asynchronous Distributed Flow Control Algorithms. </title> <type> PhD Thesis. </type> <institution> MIT, </institution> <month> June </month> <year> 1984. </year>
Reference-contexts: Other approaches for using FEC for reliable multicasting can be found in <ref> [Mos 84] </ref>, [Hui 96] and [Riz 97]. In spite of the recent focus of attention on this area, there is a distinct lack of analytic evidence to support the benefits of this approach over others in spite of the empirical evidence.
Reference: [NB 96] <author> J. Nonnenmacher and E. W. Biersack. </author> <title> Reliable Multicast: Where to Use Forward Error Correction. </title> <booktitle> In em Proc. of IFIP 5th Int'l Workshop on Protocols for High Speed Networks, </booktitle> <pages> pp. 134-148, </pages> <institution> Sophia Antipolis, </institution> <address> France, October 1996. </address> <publisher> Chapman and Hall. </publisher>
Reference: [NBT 97] <author> J. Nonnenmacher, E. W. Biersack, and D. Towsley. </author> <title> Parity-Based Loss Recovery for Reliable Multicast Transmission. </title> <booktitle> In Proc. of ACM SIGCOMM '97, </booktitle> <year> 1997. </year>
Reference-contexts: Work by Rizzo [Riz 97] describes such an encoding scheme to perform reliable multicast in settings where packet loss rates are low (between 1 and 5%). Nonnen-macher, Biersack and Towsley <ref> [NBT 97] </ref> define algorithms for reliable multicast with FEC and analytically demonstrate the benefit of FEC schemes over retransmitting lost packets for a variety of packet loss scenarios. <p> A promising technique which has already been implemented in many lower level applications is error detection and correction. Recently, the use of forward error correction has been proposed to improve reliability in the higher level setting of multicast transmissions. Nonnenmacher, Biersack, and Towsley <ref> [NBT 97] </ref> present multicas-ting algorithms that use FEC and provide performance analysis of these protocols under a wide variety of probabilistic packet loss scenarios where the probability of packet loss is low (typically .01). <p> Similar observations were made in related studies of the benefits of FEC for reliable multicast of Nonnenmacher et al <ref> [NBT 97] </ref>. Surprisingly, while one might expect the GreedyAvg policy to deliver a larger average prefix than the GreedyMin policy, in practice, the GreedyAvg policy performs much more poorly.
Reference: [Pax 96] <author> V. Paxson. </author> <title> End-to-End Routing Behavior in the Internet. </title> <booktitle> In Proc. ACM SIGCOMM '96, </booktitle> <pages> pp. 25-38, </pages> <year> 1996. </year>
Reference-contexts: Moreover, recent experience in modeling these phenomena indicate that they are extremely difficult to predict. Traces 7 of packet loss on the Internet indicate the presence of frequent, long-lived bursts of packet loss <ref> [Pax 96, YKT 96] </ref>. Variance in packet latencies and packet interarrival times on the Internet is large [Jac 88, Pax 97]. These factors motivate studying the performance of transmission protocols on arbitrary transcripts of event sequences.
Reference: [Pax 97] <author> V. Paxson. </author> <title> Measurements and Analysis of End-to-End Internet Dynamics, </title> <type> PhD Thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1997. </year>
Reference-contexts: Traces 7 of packet loss on the Internet indicate the presence of frequent, long-lived bursts of packet loss [Pax 96, YKT 96]. Variance in packet latencies and packet interarrival times on the Internet is large <ref> [Jac 88, Pax 97] </ref>. These factors motivate studying the performance of transmission protocols on arbitrary transcripts of event sequences. In this worst-case model, the algorithm is asked to deliver high performance on any possible sequence of events relative to an optimal algorithm, and is graded based on its worst-case performance. <p> Most influential have been recent studies of end-to-end dynamics of connections in the Internet, especially the work of Paxson <ref> [Pax 97] </ref>. <p> attention (see for example [Hoe 96]) as the incidence of temporally correlated packet loss increases. 2.3.1 Trends in End-to-End Network Behavior Paxson's end-to-end measurements of Internet traffic indicate an important trend: over the last several years, packet loss rates experienced by bulk transmissions are increasing, and by many indications, accelerating <ref> [Pax 97] </ref>. Whether this trend will continue is the subject of a great deal of speculation. Another interesting finding regards the distribution of packet loss. <p> Their work and numerous subsequent studies have confirmed that traffic patterns in wide-area networks, packet loss patterns, and other network phenomena are more accurately modeled by a complex, bursty process <ref> [WTSW 95, PF 95, YKT 96, Pax 97] </ref> in which long-term correlation is present. In particular, the distribution of packet loss is challenging to model, and is not yet completely understood. <p> Jacobson's early work on congestion control in TCP [Jac 88] was careful to address this issue, and indications point to a problematic increase in variance both for packet latencies and packet interarrival times <ref> [Pax 97] </ref>. 2.3.2 Theoretical Work Since these uncertainties underlying our current understanding of packet loss are likely to persist in integrated-service networks, these factors motivate our study of the performance of protocols against arbitrary, rather than probabilistic, behavior by the network. <p> Furthermore, packets traversing these networks can be dropped by intermediate routers due to congestion or can experience unpredictable and widely varying round-trip times <ref> [Pax 97] </ref>. Therefore, drawing conclusions about a network protocol based on a particular theoretical model or interpretation of network behavior is sharply limited by those assumptions introduced to derive the model.
Reference: [PSLB 97] <author> S. Paul, K. K. Sabnani, J. C. Lin, and S. Bhattacharyya. </author> <title> Reliable Multicast Transport Protocol (RMTP). </title> <note> To appear in IEEE Journal on Selected Areas in Communications, a special issue on Network Support for Multipoint Communications. </note>
Reference: [PF 95] <author> V. Paxson and S. Floyd. </author> <title> Wide Area Traffic: The Failure of Poisson Modeling. </title> <journal> In IEEE/ACM Trans. on Networking, </journal> <volume> 3(3) </volume> <pages> 226-244, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Their work and numerous subsequent studies have confirmed that traffic patterns in wide-area networks, packet loss patterns, and other network phenomena are more accurately modeled by a complex, bursty process <ref> [WTSW 95, PF 95, YKT 96, Pax 97] </ref> in which long-term correlation is present. In particular, the distribution of packet loss is challenging to model, and is not yet completely understood.
Reference: [PST 94] <author> S. Plotkin, D. Shmoys and E. Tardos. </author> <title> Fast Approximation Algorithms for Fractional Packing and Covering Problems. </title> <institution> Technical Report ORIE-999 of the School of Operations Research and Industrial Engineering, Cornell Univer, </institution> <year> 1995. </year> <note> A preliminary version of this work appeared in Proc. of 25th ACM Symp. on Theory of Computing, 1993. 109 </note>
Reference-contexts: Recently, algorithms that produce approximate solutions to positive linear programs within a (1+*) factor of optimal have been developed which are much faster than exact algorithms. The sequential algorithm of Plotkin, Shmoys and Tardos <ref> [PST 94] </ref> models positive linear programs as restricted flow problems, and in this model, repeatedly identifies a globally minimum weight path, then increases the flow along that path. The algorithm of Luby and Nisan [LN 93] has both a fast sequential and parallel implementation. <p> But we are interested in more time-efficient solutions. The deterministic algorithm we present produces (1 + *) approximate solutions for positive linear programs, both in general and for the bandwidth allocation problem, and builds on ideas used in these other algorithms <ref> [AA 94, LN 93, PST 94] </ref>. The sequential version of our algorithm is most closely related to the algorithm of Luby and Nisan, and affords the following advantages. It eliminates the need for complex global operations and the enabling fast implementation in a distributed setting. <p> To this end, our algorithm uses exponential weight functions which have been used before in related contexts by many authors, including <ref> [AAFPW 92, AAP 93, LN 93, PST 94, AA 94] </ref>.
Reference: [PY 93] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Linear Programming without the Matrix. </title> <booktitle> In Proc. of 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 121-129, </pages> <year> 1993. </year>
Reference-contexts: In particular, connections may communicate with routers through which they pass, and routers with connections which pass through them. Then with the incomplete information they obtain about the system, they must then decide upon a feasible allocation. We formalize this model, which derives from work of Papadimitriou and Yannakakis <ref> [PY 93] </ref> in Chapter 3. In the setting of networking, the distributed running time is a crucial consideration, as algorithms with which run in polynomial time are often too inefficient to warrant practical implementation. It can therefore be important to sacrifice optimality for the sake of more efficient running time. <p> In Chapter 3, we focus on bandwidth allocation policies maximizing weighted throughput. We show how to formulate the bandwidth allocation problem as a positive linear program and extend the model of Pa-padimitriou and Yannakakis <ref> [PY 93] </ref> for solving positive linear programs with distributed decision-makers. In our extension of their model, the distributed decision-makers are the connections and routers comprising the network. <p> Another approach for solving resource allocation problems with incomplete information was proposed by Papadimitriou and Yannakakis <ref> [PY 93] </ref>. They considered the problem of having distributed decision-makers assign values to a set of variables in a linear program (LP), where the agents have limited information about the constraint matrix. <p> Upon termination, each connection chooses a feasible transmission rate such that the sum of the rates is within a 1 + * factor of the throughput-maximizing allocation. This theoretical model was developed in the spirit of the work of Papadimitriou and Yannakakis <ref> [PY 93] </ref>, described in Chapter 2, in which distributed agents generate approximate solutions to positive linear programs. In their model, distributed primal agents must independently set the values of their associated primal variable knowing only the constraints of the linear program in which their variable is involved.
Reference: [Riz 97] <author> L. </author> <title> Rizzo. Effective Erasure Codes for Reliable Computer Communication Protocols. </title> <booktitle> In Computer Communication Review, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Work by Rizzo <ref> [Riz 97] </ref> describes such an encoding scheme to perform reliable multicast in settings where packet loss rates are low (between 1 and 5%). <p> Other approaches for using FEC for reliable multicasting can be found in [Mos 84], [Hui 96] and <ref> [Riz 97] </ref>. In spite of the recent focus of attention on this area, there is a distinct lack of analytic evidence to support the benefits of this approach over others in spite of the empirical evidence.
Reference: [RV 97] <author> L. Rizzo and L. Vicisano. </author> <title> A Reliable Multicast data Distribution Protocol Based on Software FEC Techniques. </title> <booktitle> In Proc. of HPCS '97, </booktitle> <address> Greece, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Nonnen-macher, Biersack and Towsley [NBT 97] define algorithms for reliable multicast with FEC and analytically demonstrate the benefit of FEC schemes over retransmitting lost packets for a variety of packet loss scenarios. The work of Rizzo and Vicisano <ref> [RV 97] </ref> defines a Reliable Multicast Data Distribution Protocol (RMDP) which use Reed-Solomon FEC codes to perform reliable multicast by (repeatedly) transmitting source data along with a set of redundant codewords. Receivers with heterogeneous receive rates simply receive words from the stream until they are able to reconstruct the message. <p> In practice, this technique can presently be realized only by using the codes of [LMSSS 97] described above, which can efficiently perform encoding and decoding even when the block size and redundancy are very large, although a similar approach is advocated with RSE codes by <ref> [RV 97] </ref>. The source then multicasts message words and codewords, and intermediate routers forward these packets at the maximum of the rates demanded by receivers in their subtree.
Reference: [ST 85] <author> D. Sleator and R. Tarjan. </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <journal> In Communications of the ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: In this manner, they consider the performance of queuing policies given worst-case arrival patterns. Our work on competitive analysis of 18 data selection policies uses the standard definitions initiated by the work of Sleator and Tarjan <ref> [ST 85] </ref>, but we defer discussion of these definitions to Chapter 4. 2.3.3 Multicasting In a multicasting environment, there are additional considerations which data selection policies and flow control policies must address. First and foremost, as the number of receivers grows large, scalability of the protocol becomes a problem. <p> We analyze the performance of our data selection policy in the spirit of competitive analysis of on-line algorithms introduced in <ref> [ST 85] </ref>. The analysis measures the worst-case performance of our data selection policy when compared with the performance of an optimal data selection policy, where comparisons are made at all points in time over each possible event sequence, or behavior of the network. <p> This off-line optimum forms the baseline for our comparison. For an algorithm A, we assess its performance at time t using the theory of competitive analysis <ref> [ST 85] </ref> using the definitions and measures below.
Reference: [Vic 97] <author> L. Vicisano. </author> <title> Notes on a Cumulative Layered Organization of Data Packets Across Multiple Streams with Different Rates. </title> <type> Unpublished manuscript, </type> <month> November </month> <year> 1997. </year>
Reference-contexts: Since this protocol is run at the receivers, the receivers perform flow control and feedback implosion is not an issue. A similar approach has recently been put forth for carefully organizing data in layers for reliable bulk multicast transmissions by <ref> [Vic 97] </ref>, although this scheme does not seem suitable for dynamic rate adjustment. A third approach is the use of forward error correction (FEC). <p> A related objective function is motivated by recent work on layered multicast. We have already described how forward error correction can be used to implement layered multicast for bulk transfer applications. A related approach for implementing reliable, bulk multicast with layering is described in <ref> [Vic 97] </ref>. Other work, notably that of McCanne [McC 96], is deployed for use with real-time video applications on the MBone.
Reference: [WTSW 95] <author> W. Willinger, M. Taqqu, R. Sherman, and D. Wilson. </author> <title> Self-Similarity through High Variability: Statistical Analysis of Ethernet LAN Traffic at the Source Level. </title> <booktitle> In Proc. ACM SIGCOMM '95, </booktitle> <pages> pp. 100-113, </pages> <address> Cambridge, MA, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: Their work and numerous subsequent studies have confirmed that traffic patterns in wide-area networks, packet loss patterns, and other network phenomena are more accurately modeled by a complex, bursty process <ref> [WTSW 95, PF 95, YKT 96, Pax 97] </ref> in which long-term correlation is present. In particular, the distribution of packet loss is challenging to model, and is not yet completely understood.
Reference: [YKT 96] <author> M. Yajnik, J. Kurose, and D. Towsley. </author> <title> Packet Loss Correlation in the MBone Multicast Network, </title> <booktitle> In Proceedings of IEEE Global Internet '96, </booktitle> <address> London, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Moreover, recent experience in modeling these phenomena indicate that they are extremely difficult to predict. Traces 7 of packet loss on the Internet indicate the presence of frequent, long-lived bursts of packet loss <ref> [Pax 96, YKT 96] </ref>. Variance in packet latencies and packet interarrival times on the Internet is large [Jac 88, Pax 97]. These factors motivate studying the performance of transmission protocols on arbitrary transcripts of event sequences. <p> Their work and numerous subsequent studies have confirmed that traffic patterns in wide-area networks, packet loss patterns, and other network phenomena are more accurately modeled by a complex, bursty process <ref> [WTSW 95, PF 95, YKT 96, Pax 97] </ref> in which long-term correlation is present. In particular, the distribution of packet loss is challenging to model, and is not yet completely understood. <p> Also it is not yet known precisely which factors lead to bursty behavior nor whether those factors can be mitigated with the advent of new network protocols and routing technology. In the realm of multicast applications, Yajnik et al <ref> [YKT 96] </ref> demonstrated that there was both a high temporal and spatial correlation in loss patterns for receivers lis 17 tening to audio broadcasts originating in California over the worldwide multicast backbone (MBone). <p> For example, these limitations make it infeasible to code for substantial packet loss rates, such as the 25% loss rates with large bursts observed by Yajnik et al <ref> [YKT 96] </ref> for overseas receivers in their trace data. Recently, Luby et al [LMSSS 97] have developed a randomized FEC scheme with encoding and decoding time linear in the length of the transmission. <p> users, that present obstacles for bandwidth allocation policies. 4.1.1 Modelling Issues As we described in the section on previous work, the operation of existing networks has become complex and difficult to model, since these networks can have arbitrary topologies, variable edge capacities and network load can be bursty and unpredictable <ref> [LTWW 95, YKT 96] </ref>. Furthermore, packets traversing these networks can be dropped by intermediate routers due to congestion or can experience unpredictable and widely varying round-trip times [Pax 97]. <p> The bulk of the testing was done on traces of MBone audio broadcasts, each lasting approximately one hour, broadcasting packets of size 2.5Kb at a constant rate of one packet every 40ms, taken from <ref> [YKT 96] </ref>. Each broadcast was received by between ten and sixteen receivers from the U.S. and Europe, and each receiver recorded the set of packets which it received. <p> A reasonable question to ask is whether the bad behavior sketched in our trace data really occurs in practice? Evidence from empirical studies indicate that loss patterns in which packets are lost at fixed, periodic time intervals have recently been observed in the Internet <ref> [FJ 94, YKT 96] </ref>. Therefore it is likely that sometimes, under existing network conditions, the simple deterministic strategy performs poorly. The exact performance of our algorithm depends directly on the size of the set of candidates which we draw from at random at each transmission time. <p> We then present a centralized multicast data selection policy which uses FEC and demonstrate its performance on simulations and multicast trace data taken from the MBone by Yajnik et al <ref> [YKT 96] </ref> in Section 5.3.4. <p> The bulk of the testing was done on traces of MBone audio broadcasts, each lasting approximately one hour, broadcasting packets of size 2.5Kb at a constant rate of every 40ms, taken from <ref> [YKT 96] </ref>. Each broadcast was received by between ten and sixteen receivers from the U.S. and Europe, and each receiver recorded which packets it received. <p> This in turn tends to cluster important words close together in the transmission sequence. But with the bursty loss patterns observed in these traces by Yajnik et al <ref> [YKT 96] </ref>, temporal correlation of loss implies that entire clusters may be lost and not be retransmitted until a round trip time elapses.
Reference: [YM 93] <author> R. Yavatkar and L. Manoj. </author> <title> Optimistic Strategies for Large-scale Dissemination of Multimedia Information. </title> <booktitle> In Proceedings of ACM Multimedia '93, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: One natural approach for handling the feedback implosion problem is the use of random sampling, whereby only a small subset of receivers transmits feedback to the source at any point in time. Yavatkar and Manoj <ref> [YM 93] </ref> define a Quasi-reliable Multicast Transport Protocol (QMTP), which performs rate-based flow control with selective receiver feedback employing this technique. Unfortunately, their solution does not completely solve the implosion problem, moreover the limited feedback received may not be an accurate reflection of the multicast group at large. <p> One widely used technique for improving scalability in multicast is random sampling, whereby each packet arrival triggers an acknowledgment from only a small fraction of the receivers. While this technique has been used effectively for small sets of receivers <ref> [YM 93] </ref>, it does not appear to scale well. The technique which we employ instead is acknowledgment aggregation, using a scheme analogous to the aggregation of control messages in our policy for multicast bandwidth allocation.
References-found: 57

