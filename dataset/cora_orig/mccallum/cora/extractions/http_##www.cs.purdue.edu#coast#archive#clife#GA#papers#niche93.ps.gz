URL: http://www.cs.purdue.edu/coast/archive/clife/GA/papers/niche93.ps.gz
Refering-URL: http://www.cs.purdue.edu/coast/archive/clife/GA/papers/
Root-URL: http://www.cs.purdue.edu
Title: A Sequential Niche Technique for Multimodal Function Optimization  
Author: David Beasley David R. Bull Ralph R. Martin 
Keyword: genetic algorithm, fitness sharing, fitness derating function, multimodal optimization, simulated annealing.  
Address: Cardiff, Cardiff, CF2 4YN, UK  BS8 1TR, UK  Cardiff, Cardiff, CF2 4YN, UK  
Affiliation: Department of Computing Mathematics, University of Wales, College of  Department of Electrical and Electronic Engineering, University of Bristol, Bristol,  Department of Computing Mathematics, University of Wales, College of  
Abstract: c fl UWCC COMMA Technical Report No. 93001, February 1993 x No part of this article may be reproduced for commercial purposes. Abstract A technique is described which allows unimodal function optimization methods to be extended to efficiently locate all optima of multimodal problems. We describe an algorithm based on a traditional genetic algorithm (GA). This involves iterating the GA, but uses knowledge gained during one iteration to avoid re-searching, on subsequent iterations, regions of problem space where solutions have already been found. This is achieved by applying a fitness derating function to the raw fitness function, so that fitness values are depressed in the regions of the problem space where solutions have already been found. Consequently, the likelihood of discovering a new solution on each iteration is dramatically increased. The technique may be used with various styles of GA, or with other optimization methods, such as simulated annealing. The effectiveness of the algorithm is demonstrated on a number of multimodal test functions. The technique is at least as fast as fitness sharing methods. It provides a speedup of between 1 and 10p on a problem with p optima, depending on the value of p and the convergence time complexity. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Ackley, D. H. </author> <year> (1985). </year> <title> A connectionist algorithm for genetic search. </title> <booktitle> In Proceedings of the First International Conference on Genetic Algorithms (pp.121-135). </booktitle> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: With similar conditions to the trap function, this was solved in an average of 3000 evaluations (230, 95% confidence; std dev = 1700), needing only 4.1 runs per sequence. Ackley's own technique, SIGH, <ref> (Ackley, 1985) </ref> which performed well on the two peak trap problem, exceeded the 1 million evaluations limit on this problem. 4.3 Binary-coded Functions For the tests on Deb's functions F1 to F5, we took the population size used by Deb, 100, and scaled it down according to the number of maxima
Reference: <author> Ackley, D. H. </author> <year> (1987). </year> <title> An empirical study of bit vector function optimization. </title> <editor> In L. Davis (Ed.), </editor> <title> Genetic Algorithms and Simulated Annealing (Ch. 13). </title> <publisher> Pitman. </publisher>
Reference: <author> Davidor, Y. </author> <year> (1991). </year> <title> A naturally occurring niche and species phenomenon: the model and first results. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms (pp.257-263). </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Most implementations utilize some degree of communication between the sub-populations, to allow good genes to spread. However, the effect of this is to reduce the diversity of solutions, and the whole population will eventually converge on a single solution (Grosso, 1985). Local mating schemes suffer similar problems <ref> (Davidor, 1991) </ref>. 1.3 Fitness sharing Goldberg and Richardson (1987) describe the idea of fitness sharing in a GA as a way of promoting stable sub-populations, or species. 1 1 Earlier work aimed at promoting speciation exists.
Reference: <author> Davis, L. </author> <year> (1991). </year> <title> Handbook of genetic algorithms. </title> <publisher> Van Nostrand Reinhold. </publisher>
Reference: <author> Deb, K. </author> <year> (1989). </year> <title> Genetic algorithms in multimodal function optimization. </title> <type> Masters thesis, TCGA Report No. 89002. </type> <institution> The University of Alabama, Department of Engineering Mechanics. </institution>
Reference-contexts: Closeness, in this instance, is measured by the distance in a single-dimension decoded parameter space. (A method for choosing the niche radius is presented in <ref> (Deb & Goldberg, 1989) </ref>, and this is discussed later.) Although their technique is successful, its disadvantages have been pointed out by Smith, Forrest and Perelson (1992). To compute accurately the fitness of an individual involves calculating its distance from every other member of the population. <p> Deb (1989) describes several functions he used to test his sharing GA. These are shown in Figures 6 to 10. (Three of these functions are also described in <ref> (Deb & Goldberg, 1989) </ref>.) For functions F1 to F4, a 30-bit binary-coded chromosome was used to represent x in the range 0 to 1.
Reference: <author> Deb, K., & Goldberg, D.E. </author> <year> (1989). </year> <title> An investigation of niche and species formation in genetic function optimization. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms (pp.42-50) Morgan Kaufmann. </booktitle>
Reference-contexts: Closeness, in this instance, is measured by the distance in a single-dimension decoded parameter space. (A method for choosing the niche radius is presented in <ref> (Deb & Goldberg, 1989) </ref>, and this is discussed later.) Although their technique is successful, its disadvantages have been pointed out by Smith, Forrest and Perelson (1992). To compute accurately the fitness of an individual involves calculating its distance from every other member of the population. <p> Deb (1989) describes several functions he used to test his sharing GA. These are shown in Figures 6 to 10. (Three of these functions are also described in <ref> (Deb & Goldberg, 1989) </ref>.) For functions F1 to F4, a 30-bit binary-coded chromosome was used to represent x in the range 0 to 1.
Reference: <author> Deb, K. & Goldberg, D.E. </author> <year> (1990). </year> <title> Natural Frequency calculation using Genetic Algorithms. Developments in Theoretical and Applied Mechanics, XV, </title> <editor> pp.94-101. 20 Deb, K., & Goldberg, D.E. </editor> <year> (1991). </year> <title> Analyzing deception in trap functions. </title> <type> IlliGal Report No. 91009. </type> <institution> University of Illinois at Urbana-Champaign, Department of General Engineering. </institution>
Reference-contexts: The human designer can then use his judgement to select the best design from those generated. Another example is the location of resonance points in a mechanical or electrical system <ref> (Deb & Goldberg, 1990) </ref>. If the fitness function gives the resonant amplitude of the system under particular conditions, we may be interested in locating all resonant frequencies with amplitudes above a particular threshold, not simply the frequency of greatest resonance.
Reference: <author> DeJong, K. </author> <year> (1985). </year> <title> Genetic Algorithms: A 10 year perspective. </title> <booktitle> In Proceedings of the First International Conference on Genetic Algorithms, </booktitle> <address> (pp.169-177). </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: Sequences sometimes fail to find all solutions * Extra runs. More runs are often required than the number of solutions The causes of and solutions to these symptoms are considered below. 18 5.2.1 Inaccuracy This is a standard problem with all traditional GAs <ref> (DeJong, 1985) </ref>. One solution is to use a hybrid method in which a GA finds approximate solutions, then to use a local search technique, such as hill climbing, (using the raw fitness function), to give a more accurate result (Goldberg, 1989a; Davis, 1991).
Reference: <author> Glover, F. </author> <year> (1989). </year> <title> Tabu Search. </title> <journal> ORSA Journal on Computing, </journal> <volume> 1(3), </volume> <month> pp.190-206. </month>
Reference: <author> Goldberg, D.E. </author> <year> (1989a). </year> <title> Genetic Algorithms in search, optimization and machine learning. </title> <publisher> Addison Wesley. </publisher>
Reference-contexts: These are multimodal functions in which all maxima are of interest. Our results show that, like the fitness sharing approach, the sequential niche technique can efficiently locate all maxima. For the tests, the GA used at the heart of this algorithm was a traditional one, based on Goldberg's SGA <ref> (Goldberg, 1989a) </ref>.
Reference: <author> Goldberg, D.E. </author> <year> (1989b). </year> <title> Sizing populations for serial and parallel genetic algorithms. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms (pp.70-79). </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Towards the end of a run of any traditional GA, the search efficiency falls off since the population becomes more uniform, causing exploration to rely increasingly on mutation <ref> (Goldberg, 1989b) </ref>. For our algorithm, we need to decide at what point in the run we are unlikely to improve on the best individual found so far, and then terminate the run.
Reference: <author> Goldberg, D.E. </author> <year> (1992). </year> <title> Construction of high-order deceptive functions using low-order Walsh coefficients. </title> <journal> Annals Math. A.I., </journal> <volume> 5, </volume> <editor> pp.35-48 Goldberg, D.E., & Deb, K. </editor> <year> (1991). </year> <title> A comparative analysis of selection schemes used in genetic algorithms. </title> <editor> In G.J.E. Rawlins (Ed.), </editor> <booktitle> Foundations of Genetic Algorithms, </booktitle> <address> (pp.69-93). </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: stochastic remainder selection without replacement, linear fitness scaling (with a factor of 2), and single-point crossover. 3.1 Trap functions Trap functions are deceptive functions in which the fitness is a function of the count, c, of the number of ones in the binary chromosome (sometimes referred to as the unitation <ref> (Goldberg, 1992) </ref>). 3.1.1 Two Peak Trap In his comparison of various optimization techniques, Ackley (1987) found that a two peak trap function was very hard to optimize. The fitness function is defined by Eqn. (17), and is shown in Figure 4.
Reference: <author> Goldberg, D.E., Deb, K., & Horn, J. </author> <year> (1992). </year> <title> Massive Multimodality, Deception, </title> <booktitle> and Genetic Algorithms. In R. </booktitle>
Reference-contexts: stochastic remainder selection without replacement, linear fitness scaling (with a factor of 2), and single-point crossover. 3.1 Trap functions Trap functions are deceptive functions in which the fitness is a function of the count, c, of the number of ones in the binary chromosome (sometimes referred to as the unitation <ref> (Goldberg, 1992) </ref>). 3.1.1 Two Peak Trap In his comparison of various optimization techniques, Ackley (1987) found that a two peak trap function was very hard to optimize. The fitness function is defined by Eqn. (17), and is shown in Figure 4.
Reference: <editor> Manner and B. Manderick (Eds.), </editor> <title> Parallel Problem Solving from Nature, 2 (pp.37-46). </title> <publisher> North-Holland. </publisher>
Reference: <author> Goldberg, D.E., & Richardson, J. </author> <year> (1987). </year> <title> Genetic algorithms with sharing for multimodal function optimization. </title> <booktitle> In Proceedings of the Second International Conference on Genetic Algorithms (pp.41-49) Lawrence Erlbaum Associates. </booktitle>
Reference: <author> Grosso, P.B. </author> <year> (1985). </year> <title> Computer simulations of genetic adaptation: Parallel subcomponent interaction in a multilocus model. </title> <type> PhD thesis. </type> <institution> The University of Michigan, </institution> <address> Ann Arbor. </address>
Reference-contexts: Most implementations utilize some degree of communication between the sub-populations, to allow good genes to spread. However, the effect of this is to reduce the diversity of solutions, and the whole population will eventually converge on a single solution <ref> (Grosso, 1985) </ref>. Local mating schemes suffer similar problems (Davidor, 1991). 1.3 Fitness sharing Goldberg and Richardson (1987) describe the idea of fitness sharing in a GA as a way of promoting stable sub-populations, or species. 1 1 Earlier work aimed at promoting speciation exists.
Reference: <author> Jolley, L.B.W. </author> <year> (1961). </year> <title> Summation of series. </title> <publisher> Dover. </publisher>
Reference-contexts: If all maxima have an equal likelihood of being found, it can be shown that R has a value given by: R = m=1 m This can be approximated <ref> (Jolley, 1961) </ref> for p &gt; 3, by: R fl + log p (2) where fl 0:577 (Euler's constant). This value is relatively small|even for p = 1000, R is only 7.5.
Reference: <author> Muhlenbein, H. & Schlierkamp-Voosen, D. </author> <year> (1993). </year> <title> Predictive Models for the Breeder Genetic Algorithm. I. Continuous Parameter Optimization. Evolutionary Computation, 1 Oei, </title> <editor> C.K., Goldberg, D.E., & Chang, S. </editor> <year> (1991). </year> <title> Tournament selection, niching and the preservation of diversity. </title> <type> IlliGal Report No. 91001. </type> <institution> University of Illinois at Urbana-Champaign, Department of General Engineering. </institution>
Reference: <author> Smith, R.E., Forrest, S., & Perelson, A.S. </author> <year> (1992). </year> <title> Searching for diverse, cooperative populations with genetic algorithms. TCGA Report No. </title> <type> 92002. </type> <institution> The University of Alabama, Department of Engineering Mechanics. </institution> <month> 21 </month>
References-found: 19

