URL: http://www.csl.sri.com/~gong/papers/globecom95code.ps.Z
Refering-URL: http://www.csl.sri.com/~gong/papers/pubs95.html
Root-URL: 
Abstract: To eliminate the use of conventional encryp-tion and to improve protocol efficiency, one-way hash function based authenticated key distribution protocols have appeared in the literature following two distinct approaches: the first approach employs one-way hash function and bit-wise XOR operation [7, 3, 15]; while the second approach makes use of one-way hash function and polynomial interpolation [9]. In this paper, we present a new technique for constructing one-way hash function based protocols for authenticated key distribution. The technique makes use of systematic linear block codes in error-control coding theory, results in more efficient protocols compared with their counterparts in the literature, and in effect, unifies the above two approaches in designing such protocols. As a by product, a secure broadcast protocol is also given which is capable of distributing a data message of any size in one broadcast protocol message. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> R. J. Anderson (editor), </editor> <booktitle> Proceedings of the Cambridge Security Workshop on Fast Software Encryption, </booktitle> <address> Cambridge, England, </address> <month> December </month> <year> 1993. </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> 809, </volume> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Conventional encryption based protocols such as Kerberos and X.509 are quite generous in their flexibility but are too costly for devices with limited memory, software and computational capabilities. They are also not well suited for low-level network mechanisms <ref> [1, 15] </ref>. In addition, because of the use of encryption algorithms, such protocols may also be subject to export control.
Reference: [2] <author> E. Ayanoglu, C.-L. I, R. D. Gitlin, and J. E. Mazo, </author> <title> "Diversity coding: using error control for self-healing in communication networks," </title> <booktitle> Proceedings of IEEE Inform90, </booktitle> <pages> pp. 95-104, </pages> <address> June 5-7, 1990, San Francisco, CA. </address>
Reference-contexts: Let a be a primitive element in GF (2 m ), the generator matrix of a special type of (N, K) systematic code, with K &lt; 2 m , is given by <ref> [2] </ref> G = [I : P] t (2) where I is the identity matrix and where n 2 K K is a matrix. <p> symbols in the corresponding code word V are generated as (4) Assuming that , the (N, K) systematic code with generator matrix as defined in (2) and (3) is capable of recovering any M missing information symbols, denoted , when the other K symbols in a code word are available <ref> [2] </ref>. This can be done by first computing the following M syndrome symbols (5) and then solving the following M linear equations: (6) A special case of the (N, K) systematic code is when N = K + 1, or M = 1.
Reference: [3] <author> B. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva, and M. Yung, </author> <title> "Systematic design of a family of attack-resistant authentication protocols," </title> <journal> IEEE J. on Selected Areas in Communications, </journal> <volume> 11(5): </volume> <pages> 679-693, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Examples of protocols based on this principle including the ones in <ref> [7, 3] </ref> and the IBMs KryptoKnight protocol family [15]. In the second approach, termed Approach-II, protocols are designed based on one-way hash functions and polynomial interpolation [9]. <p> Our protocols use (2n + 1, n + 1) systematic code. For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. <p> For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. In addition, our protocols are more efficient since they need to solve fewer equations compared with their counterparts in the literature and since they operate over GF (2 m ) rather than GF (p).
Reference: [4] <author> G. H. Chiou and W. T. Chen, </author> <title> "Secure broadcasting using secure lock," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 15(8): </volume> <pages> 929-934, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: In addition, our protocols are more computationally efficient since operations are performed in GF (2 m ). The secure broadcast protocol proposed here is also more transmission efficient than some of its counterparts existing in the literature (e.g., <ref> [4, 9] </ref>) since it is capable of broadcasting data messages of any length while maintaining a protocol message overhead which is only proportional to the number of receivers/clients. <p> Other possibilities also exist, such as using a mixture of public-key and symmetric key cryptosystems [9], or using the Chinese Remainder Theorem and DES encryption <ref> [4] </ref>. Our interest here is to design a secure broadcast protocol which requires neither encryption nor execution of multiple protocols. A protocol which fulfils these requirements has been proposed in [9], which uses only secure keyed one-way hash function and polynomial interpolation and protects both data message secrecy and integrity.
Reference: [5] <author> R. H. Deng, L. Gong, A. A. Lazar, and W. Wang, </author> <title> "Authenticated key distribution and secure broadcast protocols based on block codes," </title> <journal> submitted to IEEE/ACM Trans. Networking, </journal> <month> July </month> <year> 1995. </year>
Reference-contexts: Due to page limitation, in the following, we only consider the case of n = 2 clients. For the cases of n &gt; 2 the reader is refered to <ref> [5] </ref>. Since n = 2, the protocol uses the (5, 3) systematic code. Let S share a secret s 1 with client A (Alice) and a secret s 2 with client B (Bob), where (2 m ). <p> For a detailed comparison of our protocols with related work in the literature, the reader is directed to reference <ref> [5] </ref>. The protocol design technique demonstrated in this paper is not restricted to use only the codes given in Section 2. Any non-binary systematic codes, such as systematic RS codes [12], can be used.
Reference: [6] <author> W. Diffie and M. E. Hellman, </author> <title> "New directions in cryptography," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644-65, </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: To establish an authenticated and secure session between two clients, the server distributes a session key to the two clients with the aid of the shared long term secrets. A distinguishing feature of this type of protocols is the use of either symmetric-key cryptosystems or public-key cryp-tosystems <ref> [6] </ref> for authentication and key distribution. The Kerberos developed at MIT [10, 17] is a well known protocol which makes use of DES [20] encryption; while the X.509 authentication exchange protocol [19] is based on public-key cryptosystems.
Reference: [7] <author> L. Gong, </author> <title> "Using one-way functions for authentication," </title> <journal> ACM Computer Communication Review, </journal> <volume> 19(5): </volume> <pages> 8-11, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: It is widely believed that one-way hash functions are easier to design and much more computationally efficient than encryption algorithms. Based on this observation, Gong <ref> [7] </ref> suggested a technique of designing one-way hash function based authenticated key distribution protocols that does not use conventional encryption. Since then, two distinct approaches in designing such protocols have appeared in the literature. <p> Examples of protocols based on this principle including the ones in <ref> [7, 3] </ref> and the IBMs KryptoKnight protocol family [15]. In the second approach, termed Approach-II, protocols are designed based on one-way hash functions and polynomial interpolation [9]. <p> Our protocols use (2n + 1, n + 1) systematic code. For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. <p> For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. In addition, our protocols are more efficient since they need to solve fewer equations compared with their counterparts in the literature and since they operate over GF (2 m ) rather than GF (p).
Reference: [8] <author> L. Gong, </author> <title> "Increasing availability and security of an authentication service," </title> <journal> IEEE J. on Selected Areas in Communications, </journal> <volume> 11(5): </volume> <pages> 657-662, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Moreover, in distributed systems, authenticated key distribution service is often a system performance bottleneck, because many user and system activities cannot proceed unless the identities of those involved can be satisfactorily established <ref> [8] </ref>. Therefore, it is highly desirable that protocols carrying out this service be designed as efficient as possible so as to improve the overall system performance and to accommodate a wide range of devices and system operational environments.
Reference: [9] <author> L. Gong, </author> <title> "New Protocols for third-party-based authentication and secure broadcast," </title> <booktitle> Proceedings of 2nd ACM Conference on Computer and Communications Security, </booktitle> <pages> pp. 176-183, </pages> <month> November </month> <year> 1994, </year> <institution> Fairfax, Virginia. </institution>
Reference-contexts: Examples of protocols based on this principle including the ones in [7, 3] and the IBMs KryptoKnight protocol family [15]. In the second approach, termed Approach-II, protocols are designed based on one-way hash functions and polynomial interpolation <ref> [9] </ref>. In this paper, we present a new family of third-party-based authenticated key distribution protocols as well as an efficient secure broadcast protocol which also do not rely on conventional cryptosystems. <p> In addition, our protocols are more computationally efficient since operations are performed in GF (2 m ). The secure broadcast protocol proposed here is also more transmission efficient than some of its counterparts existing in the literature (e.g., <ref> [4, 9] </ref>) since it is capable of broadcasting data messages of any length while maintaining a protocol message overhead which is only proportional to the number of receivers/clients. <p> This problem can be cured easily with the use of a secure keyed one-way hash function. A complete definition of such functions is given in <ref> [9] </ref>. <p> Authentication Check (MAC) h (s 1 , k, r, f A , I A , I B ) to A (and a similar message to B), where f A is a freshness identifier for A and I A and I B are the unique identifiers of A and B, respectively <ref> [9] </ref>. The freshness identifier can be either a nonce generated by A or the servers timestamp if the server and clients maintain synchronized clocks. After obtaining k, A recomputes this MAC and compares it with the received one. <p> The first approach is not broadcast in nature and requires multiple encryption and decryption operations, while the second approach requires pre-distribution of a session key. Other possibilities also exist, such as using a mixture of public-key and symmetric key cryptosystems <ref> [9] </ref>, or using the Chinese Remainder Theorem and DES encryption [4]. Our interest here is to design a secure broadcast protocol which requires neither encryption nor execution of multiple protocols. A protocol which fulfils these requirements has been proposed in [9], which uses only secure keyed one-way hash function and polynomial <p> as using a mixture of public-key and symmetric key cryptosystems <ref> [9] </ref>, or using the Chinese Remainder Theorem and DES encryption [4]. Our interest here is to design a secure broadcast protocol which requires neither encryption nor execution of multiple protocols. A protocol which fulfils these requirements has been proposed in [9], which uses only secure keyed one-way hash function and polynomial interpolation and protects both data message secrecy and integrity. <p> By this definition, the transmission efficiency of our protocol is pm/(2n + p)m = p/(2n + p), while that of the secure broadcast protocol in <ref> [9] </ref> is 1/2 (n + 1). Clearly, for p = 1, the two protocols are equally efficient. But as p getting large, the protocol presented here becomes superior. <p> Our protocols use (2n + 1, n + 1) systematic code. For n = 1, our protocol results in the protocols given in [7, 3, 15], and for n = 2, our protocol is similar to the one given in <ref> [9] </ref>. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. <p> For n = 1, our protocol results in the protocols given in [7, 3, 15], and for n = 2, our protocol is similar to the one given in <ref> [9] </ref>. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. In addition, our protocols are more efficient since they need to solve fewer equations compared with their counterparts in the literature and since they operate over GF (2 m ) rather than GF (p).
Reference: [10] <author> J. T. Kohl, B. C. Neuman, and T. Y. Tso, </author> <title> "The evolution of the Kerberos authentication service," Distributed Open Systems, </title> <editor> eds. F. M. T. Brazier and D. Johansen, </editor> <publisher> IEEE Computer Society Press, </publisher> <address> CA. </address> <year> 1994. </year>
Reference-contexts: A distinguishing feature of this type of protocols is the use of either symmetric-key cryptosystems or public-key cryp-tosystems [6] for authentication and key distribution. The Kerberos developed at MIT <ref> [10, 17] </ref> is a well known protocol which makes use of DES [20] encryption; while the X.509 authentication exchange protocol [19] is based on public-key cryptosystems.
Reference: [11] <author> Y. X. Li, R. H. Deng, and X. M. Wang, </author> <title> "On the equivalence of McElieces and Niederreiters public-key cryptosystems," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 40(1): </volume> <pages> 271-273, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Linear block codes by their very nature, are capable of correcting transmission errors. An interesting problem for future research is to incorporate error correction as a built-in feature of authenticated key distribution and secure broadcast protocols. Linear block codes have also been used to realize public-key cryptosystems <ref> [14, 11] </ref>; therefore, whether such techniques apply to the design of authenticated key distribution protocols is another problem open for future research.
Reference: [12] <author> S. Lin and D. J. Costello, Jr. </author> <title> Error Control Coding: Fundamentals and Applications, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1983 </year>
Reference-contexts: In this paper, we present a new family of third-party-based authenticated key distribution protocols as well as an efficient secure broadcast protocol which also do not rely on conventional cryptosystems. Instead, these protocols are based on one-way hash functions and systematic linear block codes in error control coding theory <ref> [12] </ref>. Using systematic linear block codes, our protocol design technique unifies Approach-I and Approach-II. Specifically, (2n + 1, n + 1) systematic codes are used through-Authenticated Key Distribution and Secure Broadcast Using No Conventional Encryption: A Unified Approach Based On Block Codes Robert H. <p> Finally, Section 7 contains our discussions and including remarks. 2. Preliminaries: Linear Block Codes An (N, K) (with N &gt; K) linear block code over GF (2 m ), m being a positive integer, is defined by an generator matrix G with symbols in GF (2 m ) <ref> [12] </ref>. Here N is length and K dimension of the code. <p> For a detailed comparison of our protocols with related work in the literature, the reader is directed to reference [5]. The protocol design technique demonstrated in this paper is not restricted to use only the codes given in Section 2. Any non-binary systematic codes, such as systematic RS codes <ref> [12] </ref>, can be used. High-speed encoders and decoders for RS codes have been implemented in hardware and software, and are available commercially. Linear block codes by their very nature, are capable of correcting transmission errors.
Reference: [13] <author> R. J. McEliece and D. V. Sarwate, </author> <title> "On sharing secrets and Reed-Solomon codes," </title> <journal> Communications of the ACM, </journal> <volume> 24(9) </volume> <pages> 583-584, </pages> <month> september </month> <year> 1981. </year>
Reference-contexts: We note that linear block codes in general, and RS codes in particular, have been used to realize threshold schemes with applications in secret key distribution <ref> [13] </ref>. However, the scheme in [13] is not suitable to our setting. To our knowledge, use of systematic linear block codes for authenticated key distribution and secure broadcast has not been exploited in the literature. The organization of the paper is as follows. <p> We note that linear block codes in general, and RS codes in particular, have been used to realize threshold schemes with applications in secret key distribution <ref> [13] </ref>. However, the scheme in [13] is not suitable to our setting. To our knowledge, use of systematic linear block codes for authenticated key distribution and secure broadcast has not been exploited in the literature. The organization of the paper is as follows.
Reference: [14] <author> R. J. </author> <title> McEliece,"A public-key cryptosystem based on algebraic coding theory," </title> <type> DSN Progress Report, </type> <institution> Jet Prop. Lab., California Institute of Technology, Pasadena, </institution> <address> CA, </address> <pages> pp. 114-116, </pages> <address> Jan.-Feb. </address> <year> 1987. </year>
Reference-contexts: Linear block codes by their very nature, are capable of correcting transmission errors. An interesting problem for future research is to incorporate error correction as a built-in feature of authenticated key distribution and secure broadcast protocols. Linear block codes have also been used to realize public-key cryptosystems <ref> [14, 11] </ref>; therefore, whether such techniques apply to the design of authenticated key distribution protocols is another problem open for future research.
Reference: [15] <author> R. Molva, G. Tsudik, E. Van herreweghen, S. Zatti, </author> <title> "KryptoKnight authentication and key distribution service," </title> <booktitle> Proceedings of ESORICS 92, </booktitle> <month> October </month> <year> 1992, </year> <institution> Toulouse, France. </institution>
Reference-contexts: Conventional encryption based protocols such as Kerberos and X.509 are quite generous in their flexibility but are too costly for devices with limited memory, software and computational capabilities. They are also not well suited for low-level network mechanisms <ref> [1, 15] </ref>. In addition, because of the use of encryption algorithms, such protocols may also be subject to export control. <p> Examples of protocols based on this principle including the ones in [7, 3] and the IBMs KryptoKnight protocol family <ref> [15] </ref>. In the second approach, termed Approach-II, protocols are designed based on one-way hash functions and polynomial interpolation [9]. In this paper, we present a new family of third-party-based authenticated key distribution protocols as well as an efficient secure broadcast protocol which also do not rely on conventional cryptosystems. <p> Our protocols use (2n + 1, n + 1) systematic code. For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. <p> For n = 1, our protocol results in the protocols given in <ref> [7, 3, 15] </ref>, and for n = 2, our protocol is similar to the one given in [9]. Therefore, the techniques presented here unifies the two approaches given in [7, 3, 15] and [9], respectively, in designing hash function based authenticated key distribution protocols. In addition, our protocols are more efficient since they need to solve fewer equations compared with their counterparts in the literature and since they operate over GF (2 m ) rather than GF (p).
Reference: [16] <author> R. M. Needham and M. D. Schroeder, </author> <title> "Using encryption for authentication in large networks of computers," </title> <journal> Communications of the ACM, </journal> <volume> 21(12): </volume> <pages> 993-999, </pages> <month> December </month> <year> 1978. </year>
Reference-contexts: It is the means of gaining confidence that an entity is who/what it claims to be and at the same time distributing a shared secret key between communicating entities. In the late 1970s, Needham and Schroeder <ref> [16] </ref> published a framework for designing third-party-based authenticated key distribution protocols where a third party, called authentication server, shares a long term secret with every client it supports.
Reference: [17] <author> B. C. Neuman and T. Y. Tso, </author> <title> "Kerberos: an authentication service for computer networks," </title> <journal> IEEE Communications, </journal> <volume> 32(9): </volume> <pages> 33-38, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: A distinguishing feature of this type of protocols is the use of either symmetric-key cryptosystems or public-key cryp-tosystems [6] for authentication and key distribution. The Kerberos developed at MIT <ref> [10, 17] </ref> is a well known protocol which makes use of DES [20] encryption; while the X.509 authentication exchange protocol [19] is based on public-key cryptosystems.
Reference: [18] <author> M. Y. Rhee, </author> <title> Cryptography and Secure Communications, </title> <publisher> McGraw-Hill Book Co., </publisher> <address> Singapore, </address> <year> 1994. </year>
Reference: [19] <author> CCITT, </author> <title> "The directory - authentication framework," Recommendations X.509, </title> <note> 1988 (also published as ISO/IEC 9594-8, </note> <year> 1990). </year>
Reference-contexts: A distinguishing feature of this type of protocols is the use of either symmetric-key cryptosystems or public-key cryp-tosystems [6] for authentication and key distribution. The Kerberos developed at MIT [10, 17] is a well known protocol which makes use of DES [20] encryption; while the X.509 authentication exchange protocol <ref> [19] </ref> is based on public-key cryptosystems. Conventional encryption based protocols such as Kerberos and X.509 are quite generous in their flexibility but are too costly for devices with limited memory, software and computational capabilities. They are also not well suited for low-level network mechanisms [1, 15].
Reference: [20] <institution> FIPS PUB 46: U.S. Department of Commerce, Data Encryption Standard, Federal Information Processing Standards Publication 46, </institution> <year> 1977. </year>
Reference-contexts: A distinguishing feature of this type of protocols is the use of either symmetric-key cryptosystems or public-key cryp-tosystems [6] for authentication and key distribution. The Kerberos developed at MIT [10, 17] is a well known protocol which makes use of DES <ref> [20] </ref> encryption; while the X.509 authentication exchange protocol [19] is based on public-key cryptosystems. Conventional encryption based protocols such as Kerberos and X.509 are quite generous in their flexibility but are too costly for devices with limited memory, software and computational capabilities.
References-found: 20

