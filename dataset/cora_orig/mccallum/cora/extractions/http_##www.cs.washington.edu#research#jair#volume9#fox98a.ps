URL: http://www.cs.washington.edu/research/jair/volume9/fox98a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/contents/v9.html
Root-URL: http://www.cs.washington.edu
Email: maria.fox@dur.ac.uk d.p.long@dur.ac.uk  
Title: The Automatic Inference of State Invariants in TIM  
Author: Maria Fox Derek Long 
Address: Durham, UK  
Affiliation: Department of Computer Science University of  
Note: Journal of Artificial Intelligence Research 9 (1998) 367-421 Submitted 7/98; published 12/98  
Abstract: As planning is applied to larger and richer domains the effort involved in constructing domain descriptions increases and becomes a significant burden on the human application designer. If general planners are to be applied successfully to large and complex domains it is necessary to provide the domain designer with some assistance in building correctly encoded domains. One way of doing this is to provide domain-independent techniques for extracting, from a domain description, knowledge that is implicit in that description and that can assist domain designers in debugging domain descriptions. This knowledge can also be exploited to improve the performance of planners: several researchers have explored the potential of state invariants in speeding up the performance of domain-independent planners. In this paper we describe a process by which state invariants can be extracted from the automatically inferred type structure of a domain. These techniques are being developed for exploitation by stan, a Graphplan based planner that employs state analysis techniques to enhance its performance. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Blum, A., & Furst, M. </author> <year> (1995). </year> <title> Fast Planning through Plan-graph Analysis. </title> <booktitle> In IJCAI. </booktitle>
Reference-contexts: 1. Introduction Stan (Long & Fox, in press) is a domain-independent planner based on the constraint satisfaction technology of Graphplan <ref> (Blum & Furst, 1995) </ref>. Its name is derived from the fact that it performs a variety of pre-processing analyses (STate ANalyses) on the domain description to which it is applied, that assist it in planning efficiently in that domain. <p> Stan took part in the aips-98 planning competition, the first international competition in which domain-independent planners were compared in terms of their performance on well-known benchmark domains. Of the four planners that competed in the strips track, three were based on the Graphplan <ref> (Blum & Furst, 1995) </ref> architecture. The most important difference between stan and the other Graphplan-based planners was its use of state analysis techniques. <p> The fixed-resource and uniqueness invariants produced by tim can be seen as providing a form of multi-mutex relations, in contrast to the binary mutex relations inferred during the construction of the plan graph in Graphplan-based planners <ref> (Blum & Furst, 1995) </ref>. Binary mutex relations indicate that two actions or facts are mutually incompatible, whilst multi-mutex relations indicate that larger groups of actions or facts are collectively incompatible.
Reference: <author> Bundy, A., Burstall, R., Weir, S., & Young, R. </author> <year> (1980). </year> <title> Artificial Intelligence: An Introductory Course. </title> <publisher> Edinburgh University Press. </publisher>
Reference: <author> Fikes, R., & Nilsson, N. </author> <year> (1971). </year> <title> STRIPS: A New Approach to the Application of Theorem-Proving to Problem-Solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2 (3). </volume>
Reference-contexts: We will then provide experimental results demonstrating the performance advantages that can be obtained by the use of types. 368 Automatic Inference of State Invariants fuelled 1 unfuelled 1 at 1 in load unload drive drive 1 2. The Type Inference Module One way of viewing strips <ref> (Fikes & Nilsson, 1971) </ref> domains is as a collection of finite-state machines (FSMs) with domain constants traversing the states within them.
Reference: <author> Gerevini, A., & Schubert, L. </author> <year> (1996a). </year> <title> Accelerating Partial Order Planners: Some Techniques for Effective Search Control and Pruning. </title> <journal> JAIR, </journal> <volume> 5, </volume> <pages> 95-137. </pages>
Reference: <author> Gerevini, A., & Schubert, L. </author> <year> (1996b). </year> <title> Computing Parameter Domains as an Aid to Planning. </title> <booktitle> In AIPS-96. </booktitle>
Reference: <author> Gerevini, A., & Schubert, L. </author> <year> (1998). </year> <title> Inferring State Constraints for Domain-Independent Planning. </title> <booktitle> In AAAI. </booktitle>
Reference: <author> Grant, T. J. </author> <year> (1996). </year> <title> Inductive Learning of Knowledge-based Planning Operators. </title> <type> Ph.D. thesis, </type> <institution> Rijksuniversiteit Limburg de Maastricht. </institution>
Reference: <author> Kautz, H., & Selman, B. </author> <year> (1998). </year> <title> The Role of Domain Specific Knowledge in the Planning as Satisfiability Framework. </title> <booktitle> In The Fourth International Conference on Artificial Intelligence Planning Systems. 420 Automatic Inference of State Invariants Kelleher, </booktitle> <editor> G., & Cohn, A. </editor> <year> (1992). </year> <title> Automatically Synthesising Domain Constraints from Operator Descriptions. </title> <booktitle> In Proceedings ECAI92. </booktitle>
Reference-contexts: Figure 3 shows that, even on large problem instances, the overhead is entirely acceptable. All of the Mystery problems listed in this table are very large (involving initial states containing hundreds of facts) and could not be solved by stan, ipp (Koehler, Nebel, & Dimopoulos, 1997) or Blackbox <ref> (Kautz & Selman, 1998) </ref> in the aips-98 competition. The nature of the Mystery domain is described in Appendix C. This emphasises the relative costs of the preprocessing and planning efforts. The selection of problems used to construct table 3 is justified as follows.
Reference: <author> Koehler, J., Nebel, B., & Dimopoulos, Y. </author> <year> (1997). </year> <title> Extending Planning Graphs to an ADL Subset. </title> <booktitle> In Proceedings of 4th European Conference on Planning. </booktitle>
Reference-contexts: Figure 3 shows that, even on large problem instances, the overhead is entirely acceptable. All of the Mystery problems listed in this table are very large (involving initial states containing hundreds of facts) and could not be solved by stan, ipp <ref> (Koehler, Nebel, & Dimopoulos, 1997) </ref> or Blackbox (Kautz & Selman, 1998) in the aips-98 competition. The nature of the Mystery domain is described in Appendix C. This emphasises the relative costs of the preprocessing and planning efforts. The selection of problems used to construct table 3 is justified as follows.
Reference: <author> Liatsos, V., & Richards, B. </author> <year> (1997). </year> <title> Least Commitment: An Optimal Planning Strategy. </title> <booktitle> In Proceedings of the 16th Workshop of the UK Planning and Scheduling Special Interest Group. </booktitle>
Reference-contexts: The information encoded in the fixed resource invariants is very useful for identifying unsolvable goal sets without attempting to plan for them. For example, in the ICPARC version of the three-blocks Blocks world <ref> (Liatsos & Richards, 1997) </ref>, in which there are only three table positions, there must always be exactly three clear surfaces. Any goal specifying more than three clear relationships can be identified as unachievable from the fixed-resource invariants for that domain.
Reference: <author> Long, D., & Fox, M. </author> <title> (in press). The Efficient Implementation of the Plangraph in stan. In JAIR. </title>
Reference: <author> McCluskey, T. L., & Porteous, J. </author> <year> (1997). </year> <title> Engineering and Compiling Planning Domain Models to Promote Validity and Efficiency. </title> <journal> Artificial Intelligence, </journal> <volume> 95 (1). </volume>
Reference: <author> Morris, P., & Feldman, R. </author> <year> (1989). </year> <title> Automatically Derived Heuristics for Planning Search. </title> <booktitle> In Proceedings of the 2nd Irish Conference on Artificial Intelligence and Cognitive Science, School of Computer Applications, </booktitle> <address> Dublin City University. </address> <month> 421 </month>
Reference-contexts: The use of these relations leads to the inference of a collection of constraints which fall into the uniqueness invariants inferred by tim. In the work described in <ref> (Morris & Feldman, 1989) </ref> the authors build invariants by using truth counts which are counts of the number of propositions from particular identified sets which must be true in any state of the domain.
References-found: 13

