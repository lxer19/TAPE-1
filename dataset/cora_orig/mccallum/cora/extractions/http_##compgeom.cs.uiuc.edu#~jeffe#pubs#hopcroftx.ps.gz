URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/hopcroftx.ps.gz
Refering-URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/hopcroft.html
Root-URL: http://www.cs.uiuc.edu
Email: jeffe@cs.berkeley.edu  
Title: New Lower Bounds for Hopcroft's Problem (Extended Abstract)  
Author: Jeff Erickson 
Address: Berkeley, CA 94720 USA  D-66123 Saarbrucken, Germany  
Affiliation: Computer Science Division University of California  Fachbereich Informatik Universitat des Saarlandes  
Abstract: We establish new lower bounds on the complexity of the following basic geometric problem, attributed to John Hopcroft: Given a set of n points and m hyperplanes in IR d , is any point contained in any hyperplane? We define a general class of partitioning algorithms, and show that in the worst case, for all m and n, any such algorithm requires time (n log m + n 2=3 m 2=3 + m log n) in two dimensions, or (n log m + n 5=6 m 1=2 + n 1=2 m 5=6 + m log n) in three or more dimensions. We obtain slightly higher bounds for the counting version of Hopcroft's problem in four or more dimensions. Our planar lower bound is within a factor of 2 O(log fl (n+m)) of the best known upper bound, due to Matousek. Previously, the best known lower bound, in any dimension, was (n log m + m log n). We develop our lower bounds in two stages. First we define a combinatorial representation of the relative order type of a set of points and hyperplanes, called a monochromatic cover, and derive lower bounds on the complexity of this representation. We then show that the running time of any partitioning algorithm is bounded below by the size of some monochromatic cover. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. K. Agarwal. </author> <title> Partitioning arrangements of lines: II. </title> <journal> Applications. Discrete Comput. Geom., </journal> <volume> 5 </volume> <pages> 533-573, </pages> <year> 1990. </year>
Reference-contexts: Edels-brunner et al. [15] developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors <ref> [10, 14, 1, 8] </ref>.
Reference: [2] <author> P. K. Agarwal, N. Alon, B. Aronov, and S. Suri. </author> <title> Can visibility graphs be represented compactly? In Proc. </title> <booktitle> 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 338-347, </pages> <year> 1993. </year>
Reference-contexts: Tuza [27] showed that every n fi m 0-1 matrix has such a cover of size O (nm= log (max (m; n))), and that this bound is tight in the worst case, up to constant factors. These results apply immediately to monochromatic covers of arbitrary sign matrices. See also <ref> [2] </ref> for a geometric application of bipartite clique covers. Given a set of points and hyperplanes, a monochromatic cover of its relative orientation matrix provides a succinct combinatorial representation of the relative order type of the set.
Reference: [3] <author> M. Ben-Or. </author> <title> Lower bounds for algebraic computation trees. </title> <booktitle> In Proc. 15th Annu. ACM Sympos. Theory Com-put., </booktitle> <pages> pages 80-86, </pages> <year> 1983. </year>
Reference-contexts: The only previously known lower bound is (n log m + m log n), in the algebraic decision tree and algebraic computation tree models, by reduction from the problem of detecting an intersection between two sets of real numbers <ref> [23, 3] </ref>. In this paper, we establish new lower bounds on the complexity of Hopcroft's problem.
Reference: [4] <author> M. de Berg, M. Overmars, and O. Schwarzkopf. </author> <title> Computing and verifying depth orders. </title> <booktitle> In Proc. 8th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 138-145, </pages> <year> 1992. </year>
Reference-contexts: We mention one specific example, the cyclic overlap problem. Given a set of non-intersecting line segments in IR 3 , does any subset form a cycle with respect to the "above" relation? The fastest known algorithm for this problem, due to de Berg et al. <ref> [4] </ref>, runs in time O (n 4=3+" ), using a divide-and-conquer strategy very similar to algorithms for Hopcroft's problem. In fact, in the algebraic decision tree model, the cyclic overlap problem is at least as hard as Hopcroft's problem [17].
Reference: [5] <author> M. de Berg and O. Schwarzkopf. </author> <title> Cuttings and applications. </title> <type> Report RUU-CS-92-26, </type> <institution> Dept. Comput. Sci., Utrecht Univ., </institution> <address> Utrecht, Netherlands, </address> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: [22], runs in time n 4=3 2 O (log fl n) . 2 Matousek's algorithm can be tuned to detect incidences among n points and m lines in the plane in time O (n log m + n 2=3 m 2=3 2 O (log fl (n+m)) + m log n) <ref> [5] </ref>, or more gener ally among n points and m hyperplanes in IR d in time O (n log m + n d=(d+1) m d=(d+1) 2 O (log fl (n+m)) + m log n): The lower bound history is much shorter.
Reference: [6] <author> B. Chazelle. </author> <title> Reporting and counting segment intersections. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 32 </volume> <pages> 156-182, </pages> <year> 1986. </year>
Reference-contexts: An earlier version of this paper was published as Technical Report A/04/94, Fachbereich Informatik, Universitat des Saarlandes, Saarbrucken, Germany, November 1994. range searching, motion planning, collision detection, ray shooting, and hidden surface removal. The earliest sub-quadratic algorithm for Hopcroft's problem, due to Chazelle <ref> [6] </ref>, runs in time O (n 1:695 ). A very simple algorithm, attributed to Hopcroft and Seidel [12], runs in time O (n 3=2 log 1=2 p. 350].) Cole et al. [12] combined these two algorithms, achieving a running time of O (n 1:412 ).
Reference: [7] <author> B. Chazelle. </author> <title> Lower bounds on the complexity of polytope range searching. </title> <journal> J. Amer. Math. Soc., </journal> <volume> 2 </volume> <pages> 637-666, </pages> <year> 1989. </year>
Reference-contexts: range counting problem: Given a set of points and a set of simplices, how many points are in each simplex? For example, in the online case, any data structure of size s that supports arbitrary triangular range queries among n points in the plane requires (n= s) time per query <ref> [7] </ref>. It follows that answering n queries over n points requires (n 4=3 ) time in the worst case. <p> The theorem now follows from Lemma 3.2. 2 Theorem 3.4. The two-dimensional monochromatic cover size fl 2 (n; m) = (n + n 2=3 m 2=3 + m). 5 Perhaps it is more interesting that Chazelle's static lower bounds <ref> [7] </ref> do not use this construction. Proof: Consider any configuration of n points and m=2 lines with (n + n 2=3 m 2=3 + m) point-line incidences, as given by Lemma 3.2.
Reference: [8] <author> B. Chazelle. </author> <title> Cutting hyperplanes for divide-and-conquer. </title> <journal> Discrete Comput. Geom., </journal> <volume> 9(2) </volume> <pages> 145-158, </pages> <year> 1993. </year>
Reference-contexts: Edels-brunner et al. [15] developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors <ref> [10, 14, 1, 8] </ref>.
Reference: [9] <author> B. Chazelle. </author> <title> Lower bounds for off-line range searching. </title> <note> To appear in Proc. 27th Annu. ACM Sympos. Theory Comput., </note> <year> 1995. </year>
Reference-contexts: Our results also imply a lower bound for a variant of the counting version of Hopcroft's problem, in the Fredman/Yao semigroup arithmetic model. The lower bound follows from the following result of Chazelle <ref> [9, Lemma 3.3] </ref>. (Chazelle's lemma only deals with the case n = m, but his proof generalizes immediately to the more general case.) Lemma 4.8.
Reference: [10] <author> B. Chazelle, M. Sharir, and E. Welzl. </author> <title> Quasi-optimal upper bounds for simplex range searching and new zone theorems. </title> <journal> Algorithmica, </journal> <volume> 8 </volume> <pages> 407-429, </pages> <year> 1992. </year>
Reference-contexts: Edels-brunner et al. [15] developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors <ref> [10, 14, 1, 8] </ref>.
Reference: [11] <author> K. Clarkson, H. Edelsbrunner, L. Guibas, M. Sharir, and E. Welzl. </author> <title> Combinatorial complexity bounds for arrangements of curves and spheres. </title> <journal> Discrete Comput. Geom., </journal> <volume> 5 </volume> <pages> 99-160, </pages> <year> 1990. </year>
Reference-contexts: The corresponding upper bound was first proven by Sze-meredi and Trotter [25]. A much simpler proof, with better constants, was later given by Clarkson et al. <ref> [11] </ref> Theorem 3.3. The two-dimensional zero cover size 2 (n; m) = (n + n 2=3 m 2=3 + m). <p> Using the probabilistic counting techniques of Clarkson et al. <ref> [11] </ref>, we can improve this upper bound to O (n + n 4=5 m 3=5 + m). Theorem 3.6. The three-dimensional zero cover size 3 (n; m) = (n + n 5=6 m 1=2 + n 1=2 m 5=6 + m). Proof: Consider the case n 1=3 &lt; m n.
Reference: [12] <author> R. Cole, M. Sharir, and C. K. Yap. </author> <title> On k-hulls and related problems. </title> <journal> SIAM J. Comput., </journal> <volume> 16 </volume> <pages> 61-77, </pages> <year> 1987. </year>
Reference-contexts: The earliest sub-quadratic algorithm for Hopcroft's problem, due to Chazelle [6], runs in time O (n 1:695 ). A very simple algorithm, attributed to Hopcroft and Seidel <ref> [12] </ref>, runs in time O (n 3=2 log 1=2 p. 350].) Cole et al. [12] combined these two algorithms, achieving a running time of O (n 1:412 ). <p> The earliest sub-quadratic algorithm for Hopcroft's problem, due to Chazelle [6], runs in time O (n 1:695 ). A very simple algorithm, attributed to Hopcroft and Seidel <ref> [12] </ref>, runs in time O (n 3=2 log 1=2 p. 350].) Cole et al. [12] combined these two algorithms, achieving a running time of O (n 1:412 ).
Reference: [13] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry, </title> <booktitle> volume 10 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, West Germany, </address> <year> 1987. </year>
Reference-contexts: Some related results deserve to be mentioned here. Erd-os constructed a set of n points and n lines in the plane with (n 4=3 ) incident point-line pairs <ref> [13] </ref>. It follows immediately that any algorithm that reports all incident pairs requires time (n 4=3 ) in the worst case. Of course, we cannot apply this argument to either the decision version or the counting version of Hopcroft's problem, since the output size for these problems is constant. <p> To derive lower bounds for fl 2 (n; m) and 2 (n; m), we use the following combinatorial result of Erd-os. (See [19] or <ref> [13, p.112] </ref> for proofs.) Lemma 3.2 (Erd-os). For all n and m, there is a set of n points and m lines in the plane with (n + n 2=3 m 2=3 + m) incident pairs. <p> Without loss of generality, we can assume that none of the points in P or planes in H is lonely, since each lonely point and plane contributes at most three incidences. 6 We assume the reader is familiar with the concept of point hyperplane duality. Otherwise, see <ref> [13] </ref> or [24]. 5 No point in the interior of of the convex hull of P can be incident to a plane in H. Any point in the interior of a facet of the convex hull can be on at most one plane in H.
Reference: [14] <author> H. Edelsbrunner, L. Guibas, J. Hershberger, R. Seidel, M. Sharir, J. Snoeyink, and E. Welzl. </author> <title> Implicitly representing arrangements of lines or segments. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 433-466, </pages> <year> 1989. </year>
Reference-contexts: Edels-brunner et al. [15] developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors <ref> [10, 14, 1, 8] </ref>.
Reference: [15] <author> H. Edelsbrunner, L. Guibas, and M. Sharir. </author> <title> The complexity of many cells in arrangements of planes and related problems. </title> <journal> Discrete Comput. Geom., </journal> <volume> 5 </volume> <pages> 197-216, </pages> <year> 1990. </year>
Reference-contexts: A very simple algorithm, attributed to Hopcroft and Seidel [12], runs in time O (n 3=2 log 1=2 p. 350].) Cole et al. [12] combined these two algorithms, achieving a running time of O (n 1:412 ). Edels-brunner et al. <ref> [15] </ref> developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors [10, 14, 1, 8]. <p> Since i ? j, each such plane determines a unique line. Furthermore, since all these lines are tangent to a parabola, no three of them are concurrent. It follows that the intersection of any three planes in H consists of at most one point. 2 Edelsbrunner et al. <ref> [15] </ref> prove an upper bound of O (n log m + n 4=5+2" m 3=5" + m) on the maximum number of incidences between n points and m planes, where no three planes contain a common line.
Reference: [16] <author> H. Edelsbrunner and M. Sharir. </author> <title> A hyperplane incidence problem with applications to counting distances. </title> <editor> In P. Gritzman and B. Sturmfels, editors, </editor> <booktitle> Applied Geometry and Discrete Mathematics: The Victor Klee Festschrift, volume 4 of DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <pages> pages 253-263. </pages> <publisher> AMS Press, </publisher> <year> 1991. </year>
Reference-contexts: The best upper bound we can prove on the number of incidences between n points and m hyperplanes in IR 4 , where every point is above or on every hyperplane and no four hyper-planes contain a line, is O (n + n 2=3 m 2=3 + m). (See <ref> [16] </ref> for the derivation of a similar upper bound.) No su perlinear lower bounds are known in any dimension, so there is some hope for a linear upper bound. However, we can achieve a super-linear number of incidences in five dimensions, under a weaker combinato 6 rial general position requirement.
Reference: [17] <author> J. Erickson. </author> <title> On the relative complexities of some geometric problems. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: In fact, in the algebraic decision tree model, the cyclic overlap problem is at least as hard as Hopcroft's problem <ref> [17] </ref>. However, it is not clear that this problem can even be solved by a partitioning algorithm, since the answer might depend on arbitrarily large tuples of segments, arbitrarily far apart.
Reference: [18] <author> J. Erickson and R. Seidel. </author> <title> Better lower bounds on detecting affine and spherical degeneracies. </title> <journal> Discrete Com-put. Geom., </journal> <volume> 13(1) </volume> <pages> 41-57, </pages> <year> 1995. </year>
Reference-contexts: In Section 5, we discuss a number of related geometric problems for which our techniques give new lower bounds. Finally, in Section 6, we offer our conclusions and suggest directions for fur ther research. 2 A Simple Quadratic Lower Bound Erickson and Seidel <ref> [18] </ref> have proven a number of lower bounds on other geometric degeneracy-detection prob (a) (b) (a) The original adversary input. (b) The "collapsed" input. lems, under a model of computation in which only a limited number of geometric primitives are allowed. <p> It appears that higher-order primitives such as "Is this point to the left or right of the intersection of these two lines?" are necessary to achieve nontrivial upper bounds. If we allow either of these two primitives, however, it seems unlikely that the techniques developed in <ref> [18] </ref> can be used to derive nontrivial lower bounds.
Reference: [19] <author> M. L. Fredman. </author> <title> Lower bounds on the complexity of some optimal data structures. </title> <journal> SIAM J. Comput., </journal> <volume> 10 </volume> <pages> 1-10, </pages> <year> 1981. </year>
Reference-contexts: Both lower bounds hold in the Fredman/Yao semigroup arithmetic model <ref> [19] </ref>, in which we give the points arbitrary weights from a semigroup, and count the number of arithmetic operations required to calculate the answer. Unfortunately, this model is inappropriate for studying Hopcroft's problem. <p> To derive lower bounds for fl 2 (n; m) and 2 (n; m), we use the following combinatorial result of Erd-os. (See <ref> [19] </ref> or [13, p.112] for proofs.) Lemma 3.2 (Erd-os). For all n and m, there is a set of n points and m lines in the plane with (n + n 2=3 m 2=3 + m) incident pairs. Fredman [19] uses Erd-os' construction to prove lower bounds for dynamic range query <p> (n; m), we use the following combinatorial result of Erd-os. (See <ref> [19] </ref> or [13, p.112] for proofs.) Lemma 3.2 (Erd-os). For all n and m, there is a set of n points and m lines in the plane with (n + n 2=3 m 2=3 + m) incident pairs. Fredman [19] uses Erd-os' construction to prove lower bounds for dynamic range query data structures in the plane. 5 The Erd-os lower bound is asymptotically tight. The corresponding upper bound was first proven by Sze-meredi and Trotter [25].
Reference: [20] <author> G. Hardy and E. Wright. </author> <title> The Theory of Numbers. </title> <publisher> Oxford University Press, </publisher> <address> London, England, 4th edition, </address> <year> 1965. </year>
Reference-contexts: We also use (without proof) a number of simple number-theoretic results concerning the Euler totient function (n), the number of positive integers less than n that are relatively prime to n. We refer the reader to <ref> [20] </ref> for relevant background. Lemma 3.5.
Reference: [21] <author> L. Lovasz. </author> <title> Communication complexity: A survey. In Paths, Flows, and VLSI Layout, </title> <booktitle> volume 9 of Algorithms and Combinatorics, </booktitle> <pages> pages 235-265. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Monochromatic covers for 0-1 matrices have been previously used to prove lower bounds for various communication complexity problems <ref> [21] </ref>. Typically, however, these results make use of the number of minors in the cover, not the size of the cover as we define it here. 3 A similar concept was introduced by Tarjan [26] in the context of switching theory.
Reference: [22] <author> J. Matousek. </author> <title> Range searching with efficient hierarchical cuttings. </title> <journal> Discrete Comput. Geom., </journal> <volume> 10(2) </volume> <pages> 157-182, </pages> <year> 1993. </year>
Reference-contexts: Edels-brunner et al. [15] developed a randomized algorithm with expected running time O (n 4=3+" ). 1 Further research replaced the n " term in this upper bound with a succession of smaller and smaller polylogarithmic factors [10, 14, 1, 8]. The fastest known algorithm, due to Matousek <ref> [22] </ref>, runs in time n 4=3 2 O (log fl n) . 2 Matousek's algorithm can be tuned to detect incidences among n points and m lines in the plane in time O (n log m + n 2=3 m 2=3 2 O (log fl (n+m)) + m log n) [5],
Reference: [23] <author> J. M. Steele and A. C. Yao. </author> <title> Lower bounds for algebraic decision trees. </title> <journal> J. Algorithms, </journal> <volume> 3 </volume> <pages> 1-8, </pages> <year> 1982. </year>
Reference-contexts: The only previously known lower bound is (n log m + m log n), in the algebraic decision tree and algebraic computation tree models, by reduction from the problem of detecting an intersection between two sets of real numbers <ref> [23, 3] </ref>. In this paper, we establish new lower bounds on the complexity of Hopcroft's problem.
Reference: [24] <author> J. Stolfi. </author> <title> Oriented Projective Geometry: A Framework for Geometric Computations. </title> <publisher> Academic Press, </publisher> <year> 1991. </year>
Reference-contexts: More generally, we can assign an absolute orientation to each point and hyperplane, and define relative orientations with respect to these assigned orientations. (See <ref> [24] </ref>.) The orientations of the points and hyperplanes determine which minors of the relative orientation matrix are monochromatic, and therefore determine the minimum monochromatic cover size. Surprisingly, however, the minimum monochromatic cover size is independent of any choice of absolute orientations, up to a factor of two. <p> Without loss of generality, we can assume that none of the points in P or planes in H is lonely, since each lonely point and plane contributes at most three incidences. 6 We assume the reader is familiar with the concept of point hyperplane duality. Otherwise, see [13] or <ref> [24] </ref>. 5 No point in the interior of of the convex hull of P can be incident to a plane in H. Any point in the interior of a facet of the convex hull can be on at most one plane in H. <p> In a more geometric setting, maps points and lines in the plane, represented in homogeneous coordinates, to points and hyperplanes in IR 5 , also represented in homogeneous coordinates <ref> [24] </ref>. For any point p and line ` in the plane, the point (p) is incident to the hyper-plane (`) if and only if p is incident to `; otherwise, (p) lies above (`).
Reference: [25] <author> E. Szemeredi and W. T. Trotter, Jr. </author> <title> Extremal problems in discrete geometry. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 381-392, </pages> <year> 1983. </year>
Reference-contexts: Fredman [19] uses Erd-os' construction to prove lower bounds for dynamic range query data structures in the plane. 5 The Erd-os lower bound is asymptotically tight. The corresponding upper bound was first proven by Sze-meredi and Trotter <ref> [25] </ref>. A much simpler proof, with better constants, was later given by Clarkson et al. [11] Theorem 3.3. The two-dimensional zero cover size 2 (n; m) = (n + n 2=3 m 2=3 + m).
Reference: [26] <author> T. G. Tarjan. </author> <title> Complexity of lattice-configurations. </title> <journal> Stu-dia Sci. Math. Hungar., </journal> <volume> 10 </volume> <pages> 203-211, </pages> <year> 1975. </year>
Reference-contexts: Typically, however, these results make use of the number of minors in the cover, not the size of the cover as we define it here. 3 A similar concept was introduced by Tarjan <ref> [26] </ref> in the context of switching theory. He considers (in our terminology) sets of monochromatic minors that cover the ones in a given 0-1 matrix, or equivalently, sets of bipartite cliques that cover a given bipartite graph.
Reference: [27] <author> Z. Tuza. </author> <title> Covering of graphs by complete bipartite subgraphs; complexity of 0-1 matrices. </title> <journal> Combinatorica, </journal> <volume> 4 </volume> <pages> 111-116, </pages> <year> 1984. </year>
Reference-contexts: He considers (in our terminology) sets of monochromatic minors that cover the ones in a given 0-1 matrix, or equivalently, sets of bipartite cliques that cover a given bipartite graph. Tuza <ref> [27] </ref> showed that every n fi m 0-1 matrix has such a cover of size O (nm= log (max (m; n))), and that this bound is tight in the worst case, up to constant factors. These results apply immediately to monochromatic covers of arbitrary sign matrices.
References-found: 27

