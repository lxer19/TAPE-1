URL: http://L2R.cs.uiuc.edu/~danr/Papers/db.ps.gz
Refering-URL: http://L2R.cs.uiuc.edu/~danr/publications.html
Root-URL: http://www.cs.uiuc.edu
Title: Reasoning with Examples: Propositional Formulae and Database Dependencies  
Author: Roni Khardon Heikki Mannila Dan Roth 
Date: August 26, 1998  
Address: Scotland  Finland  USA  
Affiliation: Department of Computer Science University of Edinburgh  Department of Computer Science University of Helsinki  Department of Computer Science University of Illinois at Urbana-Champaign  
Note: To appear in Acta Informatica  
Abstract: For humans, looking at how concrete examples behave is an intuitive way of deriving conclusions. The drawback with this method is that it does not necessarily give the correct results. However, under certain conditions example-based deduction can be used to obtain a correct and complete inference procedure. This is the case for Boolean formulae (reasoning with models) and for certain types of database integrity constraints (the use of Armstrong relations). We show that these approaches are closely related, and use the relationship to prove new results about the existence and sizes of Armstrong relations for Boolean dependencies. Furthermore, we exhibit close relations between the questions of finding keys in relational databases and that of finding abductive explanations. Further applications of the correspondence between these two approaches are also discussed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, J. Bruck, J. Naor, M. Naor, and R. Roth. </author> <title> Construction of asymptotically good low-rate error-correcting codes through pseudo-random graphs. </title> <journal> IEEE Transactions on information theory, </journal> <volume> 38(2) </volume> <pages> 509-516, </pages> <year> 1992. </year>
Reference-contexts: By flipping all the bits in each of the basis elements one gets a basis for the reversed classes. The basis for the class of log nCNF formulas is derived using a combinatorial construction called an (n; k) set <ref> [1] </ref>. For more details see [12]. Here we need the following observations: (1) jB H j = n + 1, (2) jB H k j = O (n k ), and (3) jB log nCNF j = O (n 3 ).
Reference: [2] <author> C. Beeri, M. Dowd, R. Fagin, and R. Statman. </author> <title> On the structure of Armstorng relations for functional dependencies. </title> <journal> Journal of the ACM, </journal> <volume> 31(1) </volume> <pages> 30-46, </pages> <year> 1984. </year>
Reference-contexts: The first area is in database integrity constraints, where so called Armstrong relations serve as a single example capturing all implications of a set of sentences <ref> [6, 5, 2] </ref>. More formally, if L is a set of database dependencies and L, then an Armstrong relation for and L is a database relation r such that for all 2 L we have that implies if and only if r satisfies . <p> In particular, the set of characteristic models has this property. In these applications it is of course important that the example relation or the set of examples is small; otherwise there is no sense in using example-based deduction. The size issue has been treated for database dependencies in <ref> [2, 15] </ref> and for propositional formulae in [9, 12]. We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in [2]. <p> We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in <ref> [2] </ref>. Moreover, the correspondence holds for generalizations of characteristic models introduced in [12]. We then apply this correspondence to get some new results. First, we prove some bounds for the size of Armstrong relations for various types of database dependencies. <p> So, Armstrong relations is a property of a class of dependencies rather than a single dependency. In the following we discuss the existence of Armstrong relations, generalizing a result on Arm-strong relations for FDs proved in <ref> [2] </ref>. <p> Namely, the agree set of R (M ) corresponds exactly to the set M . This is essentially the "disjoint union" construction used in <ref> [6, 2] </ref>. <p> Namely, R (M ) agr = M . Claim 3.1 implies that R (M ) is an Armstrong relation of . 9 This is a generalization of the result on Armstrong relations for FDs <ref> [2] </ref>. As observed in the above proof, in the Boolean domain, every function has "Armstrong sets": the set of all models of f is an "Armstrong set". In the use of example-based reasoning for database dependencies, however, we want to use a single relation as the example. <p> We have discussed the existence issue earlier. We now show how results from the theory of reasoning with models, introduced in Section 2, can be used in the study of Armstrong relations. The concept of generators, defined below, has been introduced by Beeri et. al. <ref> [2] </ref> for the purpose of studying Armstrong relations for functional dependencies. Let be a set of FDs, over the set U of attributes. A subset V U is closed if for every dependency X ! Y , in , for which X V , also Y V . <p> Theorem 4.2 ([15]) Let be a set of FDs. Then M AX () = GEN (). It is well known <ref> [6, 2] </ref> that functional dependencies enjoy Armstrong relations. Beeri et al. [2] have also shown the correspondence between generators and Armstrong relations for functional dependencies. <p> Theorem 4.2 ([15]) Let be a set of FDs. Then M AX () = GEN (). It is well known [6, 2] that functional dependencies enjoy Armstrong relations. Beeri et al. <ref> [2] </ref> have also shown the correspondence between generators and Armstrong relations for functional dependencies. Theorem 4.3 ([2]) Let be a set of FDs, then a relation R is an Armstrong relation (with respect to FDs) for if and only if GEN () agr (R) CL (). 2 We could however talk <p> Theorem 5.5 Let be a set of UDisjDs. Then the size of the minimal Armstrong relation of , with respect to UDisjDs, is ( q f j) where B is the basis for k-quasi-Horn functions and Reversed k-quasi-Horn functions. Proof: The proof follows from the observation <ref> [2] </ref> that the agree set of a relation with m tuples has at most m elements, together with Theorem 4.5 and Claim 3.1. 6 Abductive Explanations as Keys In this section we show another connection between notions in database theory and the propositional domain.
Reference: [3] <author> J. Berman and W.J. Blok. </author> <title> Positive boolean dependencies. </title> <journal> Information Processing Letters, </journal> <volume> 27 </volume> <pages> 147-150, </pages> <year> 1988. </year>
Reference-contexts: The following theorem shows that, with a small caveat, the semantics of dependencies is equivalent to that of the Boolean formulas. The theorem was first reported in [17] and a small caveat reported in <ref> [3] </ref> implies that it holds only under some restrictions. We discuss this issue briefly. The definition of when a relation R obeys the FD X ! Y does not specify whether the tuples t 1 and t 2 have to be distinct or not.
Reference: [4] <author> N. H. Bshouty. </author> <title> Exact learning via the monotone theory. </title> <journal> Information and Computation, </journal> <volume> 123(1) </volume> <pages> 146-153, </pages> <year> 1995. </year>
Reference-contexts: That is, f j= g if and only if f g. 2.1 Theory We start by describing some results of the Monotone Theory of Boolean functions, introduced by Bshouty <ref> [4] </ref>, and then use those to present the theory of reasoning with models, developed in [12].
Reference: [5] <author> R. Fagin. </author> <title> Horn clauses and database dependencies. </title> <journal> Journal of the ACM, </journal> <volume> 29(4) </volume> <pages> 952-985, </pages> <year> 1982. </year>
Reference-contexts: The first area is in database integrity constraints, where so called Armstrong relations serve as a single example capturing all implications of a set of sentences <ref> [6, 5, 2] </ref>. More formally, if L is a set of database dependencies and L, then an Armstrong relation for and L is a database relation r such that for all 2 L we have that implies if and only if r satisfies .
Reference: [6] <author> Ronald Fagin. </author> <note> Armstrong databases. Research Report RJ3440, </note> <institution> IBM, </institution> <address> San Jose, CA, </address> <month> May </month> <year> 1982. </year>
Reference-contexts: The first area is in database integrity constraints, where so called Armstrong relations serve as a single example capturing all implications of a set of sentences <ref> [6, 5, 2] </ref>. More formally, if L is a set of database dependencies and L, then an Armstrong relation for and L is a database relation r such that for all 2 L we have that implies if and only if r satisfies . <p> Namely, the agree set of R (M ) corresponds exactly to the set M . This is essentially the "disjoint union" construction used in <ref> [6, 2] </ref>. <p> Theorem 4.2 ([15]) Let be a set of FDs. Then M AX () = GEN (). It is well known <ref> [6, 2] </ref> that functional dependencies enjoy Armstrong relations. Beeri et al. [2] have also shown the correspondence between generators and Armstrong relations for functional dependencies.
Reference: [7] <author> J. Hong. </author> <title> Proving by example and gap theorems. </title> <booktitle> In Proc. 27th IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <pages> pages 107-116, </pages> <year> 1986. </year> <month> 15 </month>
Reference-contexts: Of course, this conclusion can be wrong. There are, nevertheless, some domains where inference of this type can yield correct answers. A dramatic example is give by Hong <ref> [7] </ref>, who proves that for certain types of geometric statements one example (consisting of real numbers) is sufficient to prove or disprove any geometric theorem about points, lines and circles in the plane.
Reference: [8] <author> P. N. Johnson-Laird. </author> <title> Mental Models. </title> <publisher> Harvard University Press, </publisher> <year> 1983. </year>
Reference-contexts: It is normally argued that checking this semantic implication relation by using the above definition explicitly is impossible due to the large number of possible structures, and hence one needs to find efficiently implementable sound and complete axiomatizations for the problem. Some theories on human reasoning <ref> [8] </ref>, however, claim that humans typically argue by just looking at some examples: one selects some structures m i 2 O such that is true, and checks whether is also true for these structures.
Reference: [9] <author> H. Kautz, M. Kearns, and B. Selman. </author> <title> Horn approximations of empirical data. </title> <journal> Artificial Intelligence, </journal> <volume> 74 </volume> <pages> 129-145, </pages> <year> 1995. </year>
Reference-contexts: That is, the semantic implication relation for reduces to the truth in a single example relation r . The second area is in automated reasoning, where reasoning with models has been recently studied <ref> [9, 12] </ref>. Assume the language consists of propositional formulae, and the structures are models (i.e., truth assignments). <p> In these applications it is of course important that the example relation or the set of examples is small; otherwise there is no sense in using example-based deduction. The size issue has been treated for database dependencies in [2, 15] and for propositional formulae in <ref> [9, 12] </ref>. We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in [2]. <p> The size issue has been treated for database dependencies in [2, 15] and for propositional formulae in [9, 12]. We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of <ref> [9] </ref> are essentially the intersection generators for sets of functional dependencies in [2]. Moreover, the correspondence holds for generalizations of characteristic models introduced in [12]. We then apply this correspondence to get some new results. <p> Moreover, some approximate solutions for these problems can be derived using results from computational learning theory [11]. The equivalence also implies that, given a database, the abduction algorithm of <ref> [9, 12] </ref> can be used for finding keys from a particular subset of attributes. The paper is organized as follows: In Section 2 we describe the theory of reasoning with models. <p> It does however allow for an exponential gap in other cases. Namely, there are functions with an exponential size DNF and a linear size model-based representation [12]. It is also interesting to compare the size of this representation to the size of other representations for functions. Examples in <ref> [9] </ref> show that there are cases where the (Horn CNF) formula representation is small and the model-based representation is exponentially large, and vice versa. <p> It is easy to show that M 0 is uniquely defined. Similar definitions in the Boolean domain have been given by <ref> [9] </ref>. Let gen () denote the Boolean counterpart of GEN (). That is, for every subset Z in GEN () construct the assignment z X as in the construction of the set R agr . <p> The task of computing an assumption based explanation is NP-Hard when the input is given as a propositional expression [19]. However, if the input is given as a set of characteristic models then this task has a polynomial time algorithm <ref> [9, 12] </ref>. Using the above equivalence, this algorithm can be applied to find keys, restricted to certain subset of the attributes, when the input is an Armstrong relation. 7 Conclusions We have revealed a useful connection between theories for relational databases and theories for automated reasoning. <p> The equivalence also implies that, given a database, the abduction algorithm of <ref> [9, 12] </ref> can be used for finding keys from a particular subset of attributes. We believe that further study of the correspondence between the fields will be fruitful.
Reference: [10] <author> R. Khardon. </author> <title> Translating between Horn expressions and their characteristic models. </title> <type> Technical Report TR-03-95, </type> <institution> Aiken Computation Lab., Harvard University, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: The problem of translating a set of sentences into the corresponding Armstrong relation, and vice versa, translating a given 2 relation into a set of dependencies has been studied in the context of design of relational databases [15]. An immediate corollary we get using results on characteristic models <ref> [10] </ref>, is that the complexity of the two translation problems is equivalent under polynomial reductions. Moreover, some approximate solutions for these problems can be derived using results from computational learning theory [11]. <p> Further applications of the equivalences shown here can be derived. For example, a study of characteristic models in the Boolean domain <ref> [10] </ref> yields results that are relevant for the problem of translating a set of sentences into the corresponding Armstrong relation, a problem that has been studied before in the database domain [15].
Reference: [11] <author> R. Khardon. </author> <title> Learning to be Competent. </title> <type> PhD thesis, </type> <institution> Division of Applied Sciences, Harvard University, </institution> <year> 1996. </year> <note> Available as: Technical Report TR-03-96, </note> <institution> Aiken Computation Lab., Harvard University. </institution>
Reference-contexts: An immediate corollary we get using results on characteristic models [10], is that the complexity of the two translation problems is equivalent under polynomial reductions. Moreover, some approximate solutions for these problems can be derived using results from computational learning theory <ref> [11] </ref>. The equivalence also implies that, given a database, the abduction algorithm of [9, 12] can be used for finding keys from a particular subset of attributes. The paper is organized as follows: In Section 2 we describe the theory of reasoning with models. <p> Note that DisjDs are defined so that they are clipped and therefore this class enjoys Armstrong relations. It is easy to show that the restriction m 1 is necessary, since otherwise the class does not enjoy Armstrong relations <ref> [11] </ref>. We can now derive bounds on the size of minimal Armstrong relations. The next two theorems follow from the combination of Theorem 4.4, Claim 3.4, Lemma 2.8 and the bound on the sizes of the basis for the corresponding classes. Theorem 5.1 Let be a set of (k; q)-DisjDs.
Reference: [12] <author> R. Khardon and D. Roth. </author> <title> Reasoning with models. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 1148-1153, </pages> <year> 1994. </year> <note> Full version: Technical Report TR-1-94, </note> <institution> Aiken Computation Lab., Harvard University, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: That is, the semantic implication relation for reduces to the truth in a single example relation r . The second area is in automated reasoning, where reasoning with models has been recently studied <ref> [9, 12] </ref>. Assume the language consists of propositional formulae, and the structures are models (i.e., truth assignments). <p> In these applications it is of course important that the example relation or the set of examples is small; otherwise there is no sense in using example-based deduction. The size issue has been treated for database dependencies in [2, 15] and for propositional formulae in <ref> [9, 12] </ref>. We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in [2]. <p> Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in [2]. Moreover, the correspondence holds for generalizations of characteristic models introduced in <ref> [12] </ref>. We then apply this correspondence to get some new results. First, we prove some bounds for the size of Armstrong relations for various types of database dependencies. We present a new family of Bounded Disjunctive Dependencies which generalizes the class of Functional Dependencies. <p> Moreover, some approximate solutions for these problems can be derived using results from computational learning theory [11]. The equivalence also implies that, given a database, the abduction algorithm of <ref> [9, 12] </ref> can be used for finding keys from a particular subset of attributes. The paper is organized as follows: In Section 2 we describe the theory of reasoning with models. <p> That is, f j= g if and only if f g. 2.1 Theory We start by describing some results of the Monotone Theory of Boolean functions, introduced by Bshouty [4], and then use those to present the theory of reasoning with models, developed in <ref> [12] </ref>. All the proofs in this section are omitted; they can be found in [12]. 2.1.1 Monotone Theory Definition 2.1 (Order) We denote by the usual partial order on the lattice f0; 1g n , the one induced by the order 0 &lt; 1. <p> if f g. 2.1 Theory We start by describing some results of the Monotone Theory of Boolean functions, introduced by Bshouty [4], and then use those to present the theory of reasoning with models, developed in <ref> [12] </ref>. All the proofs in this section are omitted; they can be found in [12]. 2.1.1 Monotone Theory Definition 2.1 (Order) We denote by the usual partial order on the lattice f0; 1g n , the one induced by the order 0 &lt; 1. <p> There are of course other ways to characterize classes of functions which do not correspond to any basis (e.g. some subset of DNF). 5 Definition 2.5 A class of functions F is common if there is a small (polynomial size) fixed basis for all f 2 F . In <ref> [12] </ref> it is shown that some important function classes are common. <p> By flipping all the bits in each of the basis elements one gets a basis for the reversed classes. The basis for the class of log nCNF formulas is derived using a combinatorial construction called an (n; k) set [1]. For more details see <ref> [12] </ref>. Here we need the following observations: (1) jB H j = n + 1, (2) jB H k j = O (n k ), and (3) jB log nCNF j = O (n 3 ). <p> It does however allow for an exponential gap in other cases. Namely, there are functions with an exponential size DNF and a linear size model-based representation <ref> [12] </ref>. It is also interesting to compare the size of this representation to the size of other representations for functions. Examples in [9] show that there are cases where the (Horn CNF) formula representation is small and the model-based representation is exponentially large, and vice versa. <p> Examples in [9] show that there are cases where the (Horn CNF) formula representation is small and the model-based representation is exponentially large, and vice versa. For a discussion of these issues see <ref> [12] </ref>. 3 Relational Databases In this section we introduce some of the basic notions in relational databases, and discuss the correspondence between them and notions in the Boolean domain. 6 3.1 Relations and Dependencies We assume a finite set U of attributes. <p> The task of computing an assumption based explanation is NP-Hard when the input is given as a propositional expression [19]. However, if the input is given as a set of characteristic models then this task has a polynomial time algorithm <ref> [9, 12] </ref>. Using the above equivalence, this algorithm can be applied to find keys, restricted to certain subset of the attributes, when the input is an Armstrong relation. 7 Conclusions We have revealed a useful connection between theories for relational databases and theories for automated reasoning. <p> The equivalence also implies that, given a database, the abduction algorithm of <ref> [9, 12] </ref> can be used for finding keys from a particular subset of attributes. We believe that further study of the correspondence between the fields will be fruitful.
Reference: [13] <author> Sukhamay Kundu. </author> <title> An improved algorithm for finding a key of a relation. </title> <booktitle> In Proceedings of the Fourth ACM SIGACT-SIGMOD Symposium on Principles of Database Systems (PODS'85), </booktitle> <pages> pages 189-192, </pages> <address> New York, NY, 1985. </address> <publisher> ACM. </publisher>
Reference-contexts: For the case where is a Horn theory, Theorem 1 of [19] gives an O (kjjjj) algorithm for producing an explanation, where k is the number of propositional variables and jjjj is the number of occurrences of symbols in . This corresponds to a result of <ref> [13] </ref>, showing how to compute keys with respect to set of dependencies consisting only of definite Horn clauses.
Reference: [14] <author> C. L. Lucchesi and Sylvia L. Osborn. </author> <title> Candidate keys for relations. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 17(2) </volume> <pages> 270-279, </pages> <year> 1978. </year>
Reference-contexts: This corresponds to the late 1970's result of <ref> [14] </ref>: it is NP-hard to determine whether an attribute is prime, i.e., occurs in a key. The task of computing an assumption based explanation is NP-Hard when the input is given as a propositional expression [19].
Reference: [15] <author> H. Mannila and K. Raiha. </author> <title> Design by example: an application of Armstrong relations. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 33(2) </volume> <pages> 126-141, </pages> <year> 1986. </year>
Reference-contexts: In particular, the set of characteristic models has this property. In these applications it is of course important that the example relation or the set of examples is small; otherwise there is no sense in using example-based deduction. The size issue has been treated for database dependencies in <ref> [2, 15] </ref> and for propositional formulae in [9, 12]. We show that these two application areas of the general idea of example-based reasoning are actually very closely related. Namely, we show that the characteristic models of [9] are essentially the intersection generators for sets of functional dependencies in [2]. <p> Further applications of the equivalence shown here can be derived. The problem of translating a set of sentences into the corresponding Armstrong relation, and vice versa, translating a given 2 relation into a set of dependencies has been studied in the context of design of relational databases <ref> [15] </ref>. An immediate corollary we get using results on characteristic models [10], is that the complexity of the two translation problems is equivalent under polynomial reductions. Moreover, some approximate solutions for these problems can be derived using results from computational learning theory [11]. <p> For example, a study of characteristic models in the Boolean domain [10] yields results that are relevant for the problem of translating a set of sentences into the corresponding Armstrong relation, a problem that has been studied before in the database domain <ref> [15] </ref>. The equivalence also implies that, given a database, the abduction algorithm of [9, 12] can be used for finding keys from a particular subset of attributes. We believe that further study of the correspondence between the fields will be fruitful.
Reference: [16] <author> R. Reiter and J. De Kleer. </author> <title> Foundations of assumption-based truth maintenance systems. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 183-188, </pages> <year> 1987. </year>
Reference-contexts: In particular we show a close relation between abductive explanations in the propositional domain and keys in relational databases. Abduction is the task of finding a minimal explanation to some observation. Formally (see, e.g., <ref> [16] </ref>), the reasoner is given a Boolean function KB (the background theory), a set of propositional letters A (the assumption set), and a query letter q. An assumption based explanation of q, with respect to the background theory KB, is a minimal subset E A such that 1.
Reference: [17] <author> Y. Sagiv, C. Delobel, D. S. Parker, and R. Fagin. </author> <title> An equivalence between relational database dependencies and a fragment of propositional logic. </title> <journal> Journal of the ACM, </journal> <volume> 28(3) </volume> <pages> 435-453, </pages> <year> 1981. </year>
Reference-contexts: Therefore, by definition, z agrft 1 ;t 2 g 2 f0; 1g n does not satisfy f . The following theorem shows that, with a small caveat, the semantics of dependencies is equivalent to that of the Boolean formulas. The theorem was first reported in <ref> [17] </ref> and a small caveat reported in [3] implies that it holds only under some restrictions. We discuss this issue briefly. <p> If q = O (log n) then the size of the minimal Armstrong relation of , with respect to (k; q)-DisjDs, is O (p 1 (n) jDN F (f )j), where p 1 (n) = O (n 3 + n k ). Sagiv et. al. <ref> [17] </ref> studied the class of Multi-Valued Dependencies (MVDs). They show that although MVDs cannot be described as BDs there is a set of dependencies they call degenerate MVDs which is semantically equivalent to MVDs and which can be described as BDs.
Reference: [18] <author> B. Selman and H. Kautz. </author> <title> Knowledge compilation and theory approximation. </title> <journal> Journal of the ACM, </journal> <volume> 43(2) </volume> <pages> 193-224, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: For a knowledge base f 2 F we define the set = B f of characteristic models to be the set of all minimal assignments of f with respect to the basis B. Formally, B Next we discuss the notion of a least upper bound of a Boolean function <ref> [18] </ref>, its relation to the monotone theory and its usage in model-based reasoning. Definition 2.4 (Least Upper-bound) Let F ; G be classes of Boolean functions.
Reference: [19] <author> B. Selman and H. Levesque. </author> <title> Abductive and default reasoning: A computational core. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 343-348, </pages> <year> 1990. </year> <month> 16 </month>
Reference-contexts: This indeed corresponds to one of the explanations ab as required. Clearly, bd can be found in a similar way. As one can expect from the above equivalence, similar results have been derived in the two domains. For the case where is a Horn theory, Theorem 1 of <ref> [19] </ref> gives an O (kjjjj) algorithm for producing an explanation, where k is the number of propositional variables and jjjj is the number of occurrences of symbols in . <p> Using this result and the equivalence theorem above, we can find explanations in time O (Kjjjj), where K is the number of variables in the resulting explanation. 14 Furthermore, Theorem 2 of <ref> [19] </ref> shows that it is NP-complete to determine whether a propo-sitional letter occurs in an explanation. This corresponds to the late 1970's result of [14]: it is NP-hard to determine whether an attribute is prime, i.e., occurs in a key. <p> This corresponds to the late 1970's result of [14]: it is NP-hard to determine whether an attribute is prime, i.e., occurs in a key. The task of computing an assumption based explanation is NP-Hard when the input is given as a propositional expression <ref> [19] </ref>. However, if the input is given as a set of characteristic models then this task has a polynomial time algorithm [9, 12].
References-found: 19

