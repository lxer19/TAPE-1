URL: http://www.cs.wustl.edu/~schmidt/europlop-97/papers/p23final.ps.gz
Refering-URL: http://www.cs.wustl.edu/~schmidt/europlop-97/workshops.html
Root-URL: 
Email: email: petriu@sce.carleton.ca email: gurudas@sce.carleton.ca  
Title: A Pattern Language For Improving the Capacity of Layered Client/Server Systems with Multi-Threaded Servers  
Author: Dorina Petriu Gurudas Somadder 
Address: Ottawa, K1S 5B6, Canada Carleton University, Ottawa, K1S 5B6, Canada  
Affiliation: Dept. of Systems and Computer Engineering Dept. of Systems and Computer Engineering Carleton University,  
Abstract: The paper describes a set of patterns that extend the pattern language proposed in [Meszaros96] for improving the capacity of reactive systems. The intent of these patterns is to identify some specific causes that limit the efficiency of a distributed layered clientserver system with multi-threaded servers, and to find appropriate corrective measures. The type of systems considered here is a subclass of the larger category of reactive systems, and the new patterns are dealing with their specific performance characteristics. The effects of the patterns are illustrated with performance measurements conducted on a layered client-server system. 
Abstract-found: 1
Intro-found: 1
Reference: [Aarsten+96] <author> A.Aarsten, D. Brugali, G. Menga, </author> <title> Patterns for Three-Tier Client/Sever Applications, </title> <booktitle> Proc. of PLop96. </booktitle>
Reference-contexts: Under high load, the system capacity may be limited either by one of its hardware resources or by one of its software servers. A typical (but not the only) class of such systems is known as a three-tier client/server architecture, used particularly for large business applications <ref> [Aarsten+96] </ref>, [Hirschfeld96]. The system functionality is distributed into three tiers: front-end clients, middle application servers and back-end database server. <p> The new patterns are also complementary to another pattern language regarding the distribution of functionality in three-tier client/server systems presented in <ref> [Aarsten+96] </ref>, [Hirschfeld96]. from [Meszaros96] (shown in boxes) . The patterns in plain boxes are described in detail in the reference, those in dashed boxes only mentioned briefly.
Reference: [Fraks+96] <author> G.Franks, S.Majumdar, J.Neilson, D.Petriu, J.Rolia, M.Woodside, </author> <title> ``Performance Analysis of Distributed Server Systems", </title> <booktitle> Proc. of The 6th International Conference on Software Quality, </booktitle> <address> Ottawa, pp.15-26, </address> <month> October </month> <year> 1996. </year>
Reference: [Hirschfeld96] <author> R. </author> <title> Hirschfeld, </title> <booktitle> Three-Tier Distribution Architecture , Proc. of PLop96. </booktitle>
Reference-contexts: Under high load, the system capacity may be limited either by one of its hardware resources or by one of its software servers. A typical (but not the only) class of such systems is known as a three-tier client/server architecture, used particularly for large business applications [Aarsten+96], <ref> [Hirschfeld96] </ref>. The system functionality is distributed into three tiers: front-end clients, middle application servers and back-end database server. <p> The new patterns are also complementary to another pattern language regarding the distribution of functionality in three-tier client/server systems presented in [Aarsten+96], <ref> [Hirschfeld96] </ref>. from [Meszaros96] (shown in boxes) . The patterns in plain boxes are described in detail in the reference, those in dashed boxes only mentioned briefly.
Reference: [Mesazaros96] <author> G.Meszaros, </author> <title> A Pattern Language for Improving the Efficiency of Reactive Systems, In Pattern Languages of Program Design, Vol.2, </title> <editor> (J.Vlissides, J.Coplien and N.Kerth eds.), pp.575-591, </editor> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1996. </year>
Reference: [Mesazaros+96] <author> G.Meszaros, J. Doble, </author> <title> A Pattern Language for Pattern Writing , Proc. </title> <booktitle> of PLoP96. </booktitle>
Reference: [Neilson+95] <author> J.E. Neilson, C.M.Woodside, </author> <title> D.C. Petriu, S.Majumdar, ``Software Bottlenecking in Client-Server Systems and Rendezvous Networks", </title> <journal> IEEE Trans. on Software Eng., Vol.21, No.9, </journal> <volume> pp.776-782, </volume> <month> Sept. </month> <year> 1995. </year> <title> [McKenney96], P.E.McKenney, Selecting Locking Designs for Parallel Programs, , In Pattern Languages of Program Design, Vol.2, </title> <editor> (J.Vlissides, J.Coplien and N.Kerth eds.), pp.501-531, </editor> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1996. </year>
Reference-contexts: This paper shows that another type of limiting resource exists - a software server, as described in the Intermediate Server Bottleneck pattern. The socalled software bottleneck phenomenon was described in previous performance analysis work, such as <ref> [Neilson+95] </ref> and [Franks+96], but it was never expressed in pattern form, nor was it related to existing pattern languages. Server Multi-threading pattern shows how to alleviate such a bottleneck by increasing the concurrency level of the server.
Reference: [Rolia+95] <author> J.A.Rolia, K.C.Sevcik, </author> <title> The Method of Layers, </title> <journal> IEEE Trans. on Software Eng., </journal> <volume> Vol. 21, No. 8, </volume> <pages> pp. 689-700, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: The layered client/server model has been developed in previous work as a performance modelling approach that extends the well-known Queueing Network model in order to capture and solve analytically the performance characteristics of systems with software servers [Woodside+95], <ref> [Rolia+95] </ref>, [Franks+96]. Set of Proposed Patterns The layered client/server systems, as all reactive systems, have to meet performance requirements at a reasonable cost under high loads.
Reference: [Somadder+97] <author> G. Somadder, </author> <title> D.C. Petriu, "Performance Measurements of Multi-Threaded Servers in a Distributed Environment", </title> <booktitle> (accepted) The Joint Int. Conference on Open Distrib. Processing and Distributed Platforms (ICODP'97), </booktitle> <address> Toronto, Canada, </address> <month> May 27-30, </month> <year> 1997. </year>
Reference: [Schmidt94] <author> D.C.Schmidt, </author> <title> "ACE: an ObjectOriented Framework for Developing Distributed Applications", </title> <booktitle> in Proc. of the 6th USENIX C++ Technical Conference, </booktitle> <address> Cambridge Mass., </address> <month> April </month> <year> 1994. </year>
Reference: [Schmidt+96] <author> Schmidt, D.C. and Vinoski, S. </author> <title> Object Interconnections: Comparing Alternative Programming Techniques for Multi-threaded Servers (Column 5, </title> <type> 6 & 7), </type> <note> in SIGS C++ Report Magazine, </note> <month> Feb., Apr & July, </month> <year> 1996. </year>
Reference: [Woodside+95] <author> C.M. Woodside, J.E. Neilson, D.C. Petriu, S. Majumdar, </author> <title> ``The Stochastic RendezVous Network Model for Performance of Synchronous ClientServer-like Distributed Software,'' </title> <journal> IEEE Trans. on Computers, Vol.44, </journal> <volume> No.1, </volume> <pages> pp. 20-34, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: The layered client/server model has been developed in previous work as a performance modelling approach that extends the well-known Queueing Network model in order to capture and solve analytically the performance characteristics of systems with software servers <ref> [Woodside+95] </ref>, [Rolia+95], [Franks+96]. Set of Proposed Patterns The layered client/server systems, as all reactive systems, have to meet performance requirements at a reasonable cost under high loads.
References-found: 11

