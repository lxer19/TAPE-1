URL: http://www-cs-faculty.stanford.edu/~koza/gp96.nielsen.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  fhb3@slip.net  andre@flamingo.stanford.edu  makeane@ix.netcom.com  
Title: Automated WYWIWYG Design of Both the Topology and Component Values of Electrical Circuits Using Genetic
Author: John R. Koza Forrest H Bennett III David Andre Martin A. Keane 
Keyword: process uses genetic programming  
Note: to produce both the topology of the  was described as being difficult-to-design in a leading electrical engineering journal. This evolved  
Web: http://www-cs faculty.stanford.edu/~koza/  
Address: 258 Gates Building  Stanford, California 94305  Stanford, California 94305  Stanford, California 94305  5733 West Grover Chicago, Illinois 60630  
Affiliation: Computer Science Dept.  Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Econometrics Inc.  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference: <author> Degrauwe, M. </author> <year> 1987. </year> <title> IDAC: An interactive design tool for analog integrated circuits. </title> <journal> IEEE Journal of Solid State Circuits. 22:11061116. </journal>
Reference-contexts: Examples include IDAC <ref> (Degrauwe 1987) </ref>; OASYS (Harjani, Rutenbar, and Carley 1989); OPASYN (Koh, Sequin, and Gray 1990); SEAS (Ning, Kole, Mouthaan, and Wallings 1992); the expert design knowledge system of Maulik, Carley, and Rutenbar (1992); the works of Hemmi, Mizoguchi, and Shimohara (1994); Mizoguchi, Hemmi, and Shimohara 1994; and Higuchi et al. (1993); the
Reference: <author> Gruau, Frederic. </author> <year> 1992. </year> <title> Cellular Encoding of Genetic Neural Networks. </title> <type> Technical report 92-21. </type> <institution> Laboratoire de l'Informatique du Paralllisme. Ecole Normale Suprieure de Lyon. </institution> <month> May </month> <year> 1992. </year>
Reference: <author> Harjani, R., Rutenbar, R. A., and Carley, L. R. </author> <year> 1989. </year> <title> OASYS: A framework for analog circuit synthesis. </title> <journal> IEEE Transactions on Computer Aided Design. 8:12471266. </journal>
Reference-contexts: Examples include IDAC (Degrauwe 1987); OASYS <ref> (Harjani, Rutenbar, and Carley 1989) </ref>; OPASYN (Koh, Sequin, and Gray 1990); SEAS (Ning, Kole, Mouthaan, and Wallings 1992); the expert design knowledge system of Maulik, Carley, and Rutenbar (1992); the works of Hemmi, Mizoguchi, and Shimohara (1994); Mizoguchi, Hemmi, and Shimohara 1994; and Higuchi et al. (1993); the "C-T filter design
Reference: <author> Hemmi, Hitoshi, Mizoguchi, Jun'ichi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Development and evolution of hardware behaviors. </title> <editor> In Brooks, R. and Maes, P. (editors). </editor> <booktitle> Artificial Life IV: Proceedings of the Fourth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <pages> Pages 371376. </pages>
Reference: <author> Higuchi, T., Niwa, T., Tanaka, H., Iba, H., de Garis, H. and Furuya, T. </author> <year> 1993. </year> <title> Evolvable hardware Genetic-based generation of electric circuitry at gate and hardware description language (HDL) levels. </title> <type> Electrotechnical Laboratory technical report 93-4, </type> <institution> Tsukuba, </institution> <address> Ibaraki, Japan. </address>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <title> Adaptation in Natural and Artificial System. </title> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <author> Koh, H. Y., Sequin, C. H. and Gray, P. R. </author> <year> 1990. </year> <title> OPASYN: A compiler for MOS operational amplifiers. </title> <journal> IEEE Trans. on Computer Aided Design. 9:113125. </journal>
Reference-contexts: Examples include IDAC (Degrauwe 1987); OASYS (Harjani, Rutenbar, and Carley 1989); OPASYN <ref> (Koh, Sequin, and Gray 1990) </ref>; SEAS (Ning, Kole, Mouthaan, and Wallings 1992); the expert design knowledge system of Maulik, Carley, and Rutenbar (1992); the works of Hemmi, Mizoguchi, and Shimohara (1994); Mizoguchi, Hemmi, and Shimohara 1994; and Higuchi et al. (1993); the "C-T filter design tool" of Nielsen (1995); and DARWIN
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Both the random program trees in the initial population (generation 0) and all random subtrees created by the mutation operation in later generations are created so as to conform to this constrained syntactic structure. This constrained syntactic structure is then preserved by structure-preserving crossover with point typing <ref> (Koza 1994a) </ref>. 4.
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996a. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <editor> In Gero, John S. and Sudweeks, Fay (editors). </editor> <booktitle> Artificial Intelligence in Design '96. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer Academic Publishers. </publisher> <pages> 151-170. </pages>
Reference-contexts: Related Work The above techniques have recently been successfully applied to a variety of different problems of circuit synthesis. 10.1. Lowpass "Brick Wall" Filter Consider the problem of designing a lowpass filter with passband below 1,000 Hz and a stopband above 2,000 Hz <ref> (as described in Koza, Bennett, Andre, and Keane 1996a) </ref>. The voltages in the passband are to be between 970 millivolts and 1 volt (i.e., the passband ripple is 30 millivolts) and the voltages in the stopband between 0 volts and 1 millivolt.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996b. </year> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> Proceedings of the 1996 IEEE International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. </publisher>
Reference-contexts: The boxes highlight a recognizable voltage gain stage and a quasi-Darlington emitter-follower stage. Voltage Gain Stage Darlington Emitter-Follower Stage from generation 45. 10.3. A Crossover Filter Now consider the problem of designing a crossover (woofer and tweeter) filter with a crossover frequency of 2,512 Hz <ref> (as described more fully in Koza, Bennett, Andre, and Keane 1996b) </ref>. The voltages in the passband are to be between 970 millivolts and 1 volt (i.e., the passband ripple is 30 millivolts) and the voltages in the stopband between 0 volts and 1 millivolt.
Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> G e n e t i c Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <editor> Kruiskamp, Wim and Leenaerts, Domine. </editor> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <publisher> Association for Computing Machinery. </publisher> <pages> Pages 433438. </pages>
Reference: <author> Maulik, P. C. Carley, L. R., and Rutenbar, R. A. </author> <year> 1992. </year> <title> A mixed-integer nonlinear programming approach to analog circuit synthesis. </title> <booktitle> Proceedings of the 29th Design Automation Conference. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Press. </publisher> <pages> Pages 698703. </pages>
Reference: <author> Mizoguchi, Junichi, Hemmi, Hitoshi, and Shimohara, Katsunori. </author> <year> 1994. </year> <title> Production genetic algorithms for automated hardware design through an evolutionary process. </title> <booktitle> Proceedings of the First IEEE Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. Volume I. </publisher> <pages> Pages 661-664. </pages>
Reference: <author> Nielsen, Ivan Riis. </author> <year> 1995. </year> <title> A C-T filter compiler - From specification to layout. Analog Integrated Circuits and Signal Processing. </title> <publisher> 7(1):2133. </publisher>
Reference-contexts: This paper shows how genetic programming was used to design an asymmetric bandpass filter that was described as difficult-to-design in an article in the Analog Integrated Circuits and Signal Processing journal <ref> (Nielsen 1995) </ref>. 2.
Reference: <author> Ning, Z., Kole, M., Mouthaan, T., and Wallings, H. </author> <year> 1992. </year> <title> Analog circuit design automation for performance. </title> <booktitle> Proceedings of the 14th IEEE CICC. </booktitle> <address> New York: </address> <publisher> IEEE Press. </publisher> <pages> Pages 8.2.18.2.4. </pages>
Reference-contexts: Examples include IDAC (Degrauwe 1987); OASYS (Harjani, Rutenbar, and Carley 1989); OPASYN (Koh, Sequin, and Gray 1990); SEAS <ref> (Ning, Kole, Mouthaan, and Wallings 1992) </ref>; the expert design knowledge system of Maulik, Carley, and Rutenbar (1992); the works of Hemmi, Mizoguchi, and Shimohara (1994); Mizoguchi, Hemmi, and Shimohara 1994; and Higuchi et al. (1993); the "C-T filter design tool" of Nielsen (1995); and DARWIN (Kruiskamp and Leenaerts 1995).
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, California. </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: SPICE (an acronym for Simulation Program with Integrated Circuit Emphasis) is a large family of programs written over several decades at the University of California at Berkeley for the simulation of analog, digital, and mixed analog/digital electrical circuits <ref> (Quarles et al. 1994) </ref>. The input to a SPICE simulation consists of a netlist describing the circuit to be analyzed and certain commands that instruct SPICE as to the type of analysis to be performed and the nature of the output to be produced.
Reference: <author> Rutenbar, R. A. </author> <year> 1993. </year> <title> Analog design automation: Where are we? Where are we going? Proceedings of the l5th IEEE CICC. </title> <address> New York: </address> <publisher> IEEE Press. 13.1.1-13.1.8. </publisher>
Reference-contexts: The sizing of a circuit consists of the component value (s) (typically numerical) associated with each component. Considerable progress has been made in automating the design of certain categories of purely digital circuits; however, analog circuits and mixed analog-digital circuits are not as amenable to automation <ref> (Rutenbar 1993) </ref>. Once the user has specified the design goals for an electronic circuit, it would be ideal if an automated design process could create both the topology and the sizing of a circuit that satisfies the design goals.
References-found: 20

