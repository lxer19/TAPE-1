URL: ftp://ftp.cs.rochester.edu/pub/papers/ai/96.tr612.Dialog_parsing_in_the_TRAINS_system.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/mcore/papers.html
Root-URL: 
Title: Dialog Parsing in the TRAINS System  
Author: Mark G. Core and Lenhart K. Schubert 
Note: This work was supported in part by National Science Foundation grant IRI-95033312.  
Date: March 1996  
Address: Rochester, New York 14627  
Affiliation: The University of Rochester Computer Science Department  
Pubnum: Technical Report 612  
Abstract: Currently, the TRAINS dialog system uses a more or less standard chart parser as the interface between the text of the dialog and the rest of the dialog processing system. However, traditional chart parsers are not well equipped to handle dialogs because dialog constituents can be discontinuous, with interspersed acknowledgments, editing terms, repairs, etc. This paper proposes some modifications of the current TRAINS parser enabling it to handle discontinuous dialog structure. The representation of a dialog is still superficially hierarchical (rather than consisting of interleaved structures). This is made possible by two devices: one is to accommodate repairs (e.g., to uh .. to Corning) through explicit grammar rules; the other is to accommodate mid-sentence acknowledgments (e.g., okay), editing terms (e.g., uh), etc. as "trailers" attached to lexical items. We show how this works on a simple sample dialog. Because allowing for repairs and interruptions introduces much ambiguity, we also discuss some initial disambiguation techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [AFMR95] <author> J.F. Allen, G. Ferguson, B. Miller, and E. Ringger. </author> <title> Spoken dialogue and interactive planning. </title> <booktitle> In Proc. of the ARPA Spoken Language Technology Workshop, </booktitle> <address> Austin, TX, </address> <year> 1995. </year>
Reference-contexts: The parser should be applicable to the kinds of dialogs that are held or could be held between a user and the TRAINS interactive transportation planning system <ref> [All94, AFMR95] </ref>. However, in this initial work our focus is on allowing for the kinds of intertwined, discontinuous constituents mentioned above. <p> The current version of this planning assistant, described in <ref> [AFMR95] </ref>, uses a chart parser which is not designed to handle lulls and interpolated or backtrack segments. In the following we propose a modified version of the current parser, equipped with special actions and grammar rules to handle such segments.
Reference: [All94] <editor> L.K.; et al. Allen, J.F.; Schubert. </editor> <title> the TRAINS project: a case study in building a conversational planning agent. </title> <type> Technical Report 532, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY 14627-0226, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: The parser should be applicable to the kinds of dialogs that are held or could be held between a user and the TRAINS interactive transportation planning system <ref> [All94, AFMR95] </ref>. However, in this initial work our focus is on allowing for the kinds of intertwined, discontinuous constituents mentioned above. <p> They are to some extent indicated by superficial clues (such as turn-taking, cue words, and coreference relations), but cannot be reliably recognized independently of the problem-solving process. The approach to higher-level dialog processing used in the TRAINS 93 system is described in <ref> [All94] </ref>. Since the dialogs involve interactive development of a plan, the state of the discourse can be thought of as the current mutually accepted plan (along with proposed but not yet accepted plans).
Reference: [Bie93] <author> C.I.; et al. Biermann, A. W.; Guinn. </author> <title> Efficient collaborative discourse: A theory and its implementation. </title> <editor> In M. Bates, editor, </editor> <booktitle> Human Language Technology, </booktitle> <pages> pages 177-181, </pages> <address> San Francisco, </address> <month> March </month> <year> 1993. </year> <title> Advanced Research Projects Agency, </title> <publisher> Morgan Kaufman Pub. Inc. </publisher>
Reference-contexts: For example, acknowledgments often signal "grounding" the achievement of mutual understanding or mutual acceptance of a plan; and backtrack segments can contain referents that are needed to interpret subsequent text (e.g., Take the oranges to Elmira, uh, I mean, take them to Corning). Biermann, et al. in <ref> [Bie93] </ref> present a dialog system that initiates subdialogs with the user to achieve its goals. In addition, the user is allowed to initiate a new subdialog. The dialog system uses plan recognition to see if the new subdialog is part of an appropriate plan.
Reference: [Dow93] <author> J.M.; et al. Dowding, J.; Gawron. </author> <title> Gemini: A natural language system for spoken-language understanding. </title> <booktitle> In Proc. ACL-93, </booktitle> <pages> pages 54-61, </pages> <address> Columbus, Ohio, </address> <year> 1993. </year>
Reference-contexts: In sections 6 and 7 we deal with some complications concerning VP backtrack segments (caused for example by the presence of gaps and passive verb forms). We conclude with a discussion of future work in section 8. 2 Previous Work The Gemini dialog system <ref> [Dow93] </ref> has an utterance grammar which it applies after it has built all the traditional syntactic structures. The utterance grammar is designed for single sentences, sentence fragments, and run-on sentences. <p> Third, other features should be examined to determine their relevance in determining matches between backtrack segments and restarted phrases. Another possible technique to aid disambiguation would be to mark potential backtrack segments before they reach the parser. Work in <ref> [Dow93] </ref> and [HA94] reports success in isolating backtrack segments using word matching techniques. Having likely backtrack segments already marked would help the dialog parser, which has many possible high-level constituents it can assign to an utterance with a restarted phrase.
Reference: [GT93] <author> J.; Gross, D.; Allen and D. Traum. </author> <title> the TRAINS 91 dialogues. </title> <type> TRAINS Technical Note 92-1, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY 14627-0226, </address> <year> 1993. </year>
Reference-contexts: However, in this initial work our focus is on allowing for the kinds of intertwined, discontinuous constituents mentioned above. We take for granted a written transcription of a spoken dialog (such as are available for the 1991-3 TRAINS dialogs <ref> [GT93, HA95] </ref>, and we largely neglect the higher-level organization of dialogs.
Reference: [HA94] <author> P. Heeman and J. Allen. </author> <title> Detecting and correcting speech repairs. </title> <booktitle> In Proc. ACL-94, </booktitle> <pages> pages 295-302, </pages> <address> Las Cruces, New Mexico, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Third, other features should be examined to determine their relevance in determining matches between backtrack segments and restarted phrases. Another possible technique to aid disambiguation would be to mark potential backtrack segments before they reach the parser. Work in [Dow93] and <ref> [HA94] </ref> reports success in isolating backtrack segments using word matching techniques. Having likely backtrack segments already marked would help the dialog parser, which has many possible high-level constituents it can assign to an utterance with a restarted phrase.
Reference: [HA95] <author> P. Heeman and J. Allen. </author> <title> the TRAINS 93 dialogues. </title> <type> TRAINS Technical Note 94-2, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY 14627-0226, </address> <year> 1995. </year>
Reference-contexts: However, in this initial work our focus is on allowing for the kinds of intertwined, discontinuous constituents mentioned above. We take for granted a written transcription of a spoken dialog (such as are available for the 1991-3 TRAINS dialogs <ref> [GT93, HA95] </ref>, and we largely neglect the higher-level organization of dialogs.
Reference: [LD93] <author> L. M.; Linebarger, M. C.; Norton and D. A. Dahl. </author> <title> A portable approach to last resort parsing and interpretation. </title> <editor> In M. Bates, editor, </editor> <booktitle> Human Language Technology, </booktitle> <pages> pages 31-36, </pages> <address> San Francisco, </address> <month> March </month> <year> 1993. </year> <title> Advanced Research Projects Agency, </title> <publisher> Morgan Kaufman Pub. Inc. </publisher> <pages> 17 </pages>
Reference-contexts: The utterance grammar is designed for single sentences, sentence fragments, and run-on sentences. The system does not license interpolated segments or backtrack segments as part of the regular dialog structure, but instead uses special mechanisms to skip over some kinds of repairs and interpolations (see also <ref> [LD93] </ref>). Though this is reasonable as a rough-and-ready expedient, it neglects the important role such segments can play in the dialog structure. <p> Having likely backtrack segments already marked would help the dialog parser, which has many possible high-level constituents it can assign to an utterance with a restarted phrase. A word matching approach is also used in the PUNDIT system <ref> [LD93] </ref>, but only in cases where a parse cannot be found. The PUNDIT parser skips words until a keyword is seen and then it restarts the parse.
References-found: 8

