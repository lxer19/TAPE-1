URL: http://www.cs.pitt.edu/~pollack/distrib/ewsp95.ps
Refering-URL: http://www.cs.pitt.edu/~pollack/distrib/guide.html
Root-URL: http://www.cs.pitt.edu
Email: joslin@cs.pitt.edu, pollack@cs.pitt.edu  
Title: Passive and Active Decision Postponement in Plan Generation  
Author: David Joslin Martha E. Pollack 
Address: Pittsburgh, Pittsburgh, PA 15260  
Affiliation: Intelligent Systems Program Department of Computer Science University of  
Date: 1995  
Note: Appears in Proceedings of the 3rd European Conference on Planning,  
Abstract: One of the strengths of Partial-Order Causal Link (POCL) planning is the ability to postpone decisions. But because postponed decisions play no role in reasoning about the plan until they are eventually acted upon, the penalty for postponing some decisions can be quite high. We call this style of decision postponement passive postponement, and present experimental results that quantify the efficiency penalty it incurs. We also suggest an alternate approach, active postponement, that allows postponed decisions to impose constraints on the generation of a plan. This constraint-based approach to decision postponement has been implemented in the Descartes planning system. In Descartes, every planning decision is represented by a variable, with constraints on each variable representing criteria that must be satisfied by the corresponding decision. These constraints are managed by a general-purpose constraint engine, so that even postponed decisions play a role in reasoning about the plan. 1
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Allen and J. Koomen. </author> <title> Planning using a temporal world model. </title> <booktitle> In Proc. IJCAI, </booktitle> <pages> pages 741-747, </pages> <year> 1983. </year>
Reference-contexts: Modern planners typically use codesignation constraints, as formalized by Chapman [3], in the process of binding plan step parameters. Another clear example is the use of causal links [10, 12], or their predecessor, protection intervals [21], to constrain the temporal ordering of plan steps. Allen and Koomen <ref> [1] </ref> and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage [9]. Zeno uses constraints and temporal intervals to reason about goals with deadlines and continuous change.
Reference: [2] <author> A. Borning, B. Freeman-Benson, and M. Wilson. </author> <title> Constraint hierarchies. </title> <journal> Lisp and symbolic computation, </journal> <volume> 5 </volume> <pages> 223-270, </pages> <year> 1992. </year>
Reference-contexts: Another avenue of future research is to leverage innovations in CSP research, using the Descartes framework to apply those techniques to planning problems. For example, some CSP algorithms allow constraints to vary in strength, from constraints that must be satisfied to constraints that only represent some degree of preference <ref> [2] </ref>. By in corporating this CSP technique into the underlying mechanism of Descartes, planning problems could have goals weighted by preference; this in turn could form the basis for an anytime planning algorithm in which successive iterations satisfy those preferences to greater extents.
Reference: [3] <author> D. Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32(3) </volume> <pages> 333-378, </pages> <year> 1987. </year>
Reference-contexts: Modern planners typically use codesignation constraints, as formalized by Chapman <ref> [3] </ref>, in the process of binding plan step parameters. Another clear example is the use of causal links [10, 12], or their predecessor, protection intervals [21], to constrain the temporal ordering of plan steps. Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively.
Reference: [4] <author> K. Currie and A. Tate. O-Plan: </author> <title> the open planning architecture. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 49-86, </pages> <year> 1991. </year>
Reference: [5] <author> D. Joslin. </author> <title> Plan generation as dynamic constraint satisfaction. Forthcoming PhD dissertation from the University of Pittsburgh, </title> <year> 1995. </year>
Reference-contexts: Theoretical analysis. The Descartes approach also makes possible a better intuitive and theoretical understanding of planning problems and algorithms. By representing every decision as a variable to be bound, details that are hidden in traditional planning algorithms become clear. For example, in <ref> [5] </ref> the CSP formulation is used to give a precise, mathematical characterization of "early commitment" and "least commitment" decision making, including a quantifiable definition of varying degrees of commitment.
Reference: [6] <author> D. Joslin and M. E. Pollack. </author> <title> Least-cost flaw repair: A plan refinement strategy for partial-order planning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI), </booktitle> <pages> pages 1004-1009, </pages> <address> Seattle, WA, </address> <year> 1994. </year>
Reference: [7] <author> S. Kambhampati. </author> <title> Planning as refinement search: A unified framework for comparative analysis of search space size and performance. </title> <type> Technical Report TR-93-004, </type> <institution> Arizona State University Department of Computer Science and Engineering, </institution> <year> 1993. </year>
Reference: [8] <author> S. Kambhampati. </author> <title> Multi-contributor causal structures for planning: a formalization and evaluation. </title> <journal> Artificial Intelligence, </journal> <volume> 69(1-2):235-278, </volume> <year> 1994. </year>
Reference-contexts: Another clear example is the use of causal links [10, 12], or their predecessor, protection intervals [21], to constrain the temporal ordering of plan steps. Allen and Koomen [1] and Kambhampati <ref> [8] </ref> generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage [9]. Zeno uses constraints and temporal intervals to reason about goals with deadlines and continuous change.
Reference: [9] <author> A. L. Lansky. </author> <title> Action-based planning. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems (AIPS), </booktitle> <pages> pages 110-115, </pages> <address> Chicago, IL, </address> <year> 1994. </year>
Reference-contexts: Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage <ref> [9] </ref>. Zeno uses constraints and temporal intervals to reason about goals with deadlines and continuous change.
Reference: [10] <author> D. McAllester and D. Rosenblitt. </author> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 634-639, </pages> <address> Anaheim, CA, </address> <year> 1991. </year>
Reference-contexts: Modern planners typically use codesignation constraints, as formalized by Chapman [3], in the process of binding plan step parameters. Another clear example is the use of causal links <ref> [10, 12] </ref>, or their predecessor, protection intervals [21], to constrain the temporal ordering of plan steps. Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage [9].
Reference: [11] <author> S. Minton, J. L. Bresina, and M. Drummond. </author> <title> Commitment strategies in planning: A comparative analysis. </title> <booktitle> In Proceedings of the 12th International Joint Conference on Art ificial Intelligence, </booktitle> <pages> pages 259-265, </pages> <year> 1991. </year>
Reference: [12] <author> J. Penberthy and D. Weld. UCPOP: </author> <title> A sound, complete, partial order planner for ADL. </title> <booktitle> In Proceedings of the Third International Conference on Knowledge Representation and Reasoning, </booktitle> <pages> pages 103-114, </pages> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: Modern planners typically use codesignation constraints, as formalized by Chapman [3], in the process of binding plan step parameters. Another clear example is the use of causal links <ref> [10, 12] </ref>, or their predecessor, protection intervals [21], to constrain the temporal ordering of plan steps. Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage [9].
Reference: [13] <author> J. S. Penberthy and D. S. Weld. </author> <title> Temporal planning with continuous change. </title> <booktitle> In Proc. AAAI-94, </booktitle> <pages> pages 1010-1015, </pages> <year> 1994. </year>
Reference-contexts: Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno <ref> [13] </ref>, O-Plan2 [22], and Collage [9]. Zeno uses constraints and temporal intervals to reason about goals with deadlines and continuous change.
Reference: [14] <author> M. Peot and D. E. Smith. </author> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 492-499, </pages> <address> Washington, D.C., </address> <year> 1993. </year>
Reference: [15] <author> M. A. Peot and D. E. Smith. </author> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proc. AAAI-93, </booktitle> <pages> pages 492-499, </pages> <year> 1993. </year>
Reference: [16] <author> M. E. Pollack, D. Joslin, A. Nunes, S. Ur, and E. Ephrati. </author> <title> Experimental investigation of an agent-commitment strategy. </title> <type> Technical Report 94-31, </type> <institution> Univ. of Pittsburgh Dept. of Computer Science, </institution> <address> Pittsburgh, PA, </address> <year> 1994. </year>
Reference: [17] <author> M. E. Pollack and M. Ringuette. </author> <title> Introducing the Tileworld: Experimentally evaluating agent architectures. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 183-189, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference: [18] <author> M. E. Pollack, T. Znati, E. Ephrati, D. Joslin, S. Lauzac, A. Nunes, N. Onder, Y. Ronen, and S. </author> <title> Ur. The dipart project: A status report. </title> <booktitle> In Proceedings of the Annual ARPI Meeting, </booktitle> <address> Tucson, AZ, </address> <year> 1994. </year>
Reference: [19] <author> L. Schubert and A. Gerevini. </author> <title> Accelerating partial order planners by emphasizing deductive choices. </title> <type> Technical Report TR-570, </type> <institution> Dept. of CS, University of Rochester, </institution> <year> 1995. </year>
Reference: [20] <author> M. Stefik. </author> <title> Planning with constraints (MOLGEN: Part 1). </title> <journal> Artificial Intelligence, </journal> <volume> 16 </volume> <pages> 111-140, </pages> <year> 1981. </year>
Reference-contexts: Descartes differs from these three planners in its use of active postponement. Zeno, O-Plan2 and Collage all maintain an agenda, representing decisions yet to be made, and to varying extents, take a passive postponement approach in handling that agenda. Another approach to constraint-based planning is found in MOLGEN <ref> [20] </ref>, a system for planning experiments in molecular genetics. MOLGEN uses constraints on variables to represent certain kinds of goal interactions in a partial plan.
Reference: [21] <author> A. Tate. </author> <title> Generating project networks. </title> <booktitle> In Proceedings of IJCAI-77, </booktitle> <pages> pages 888-893, </pages> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: Modern planners typically use codesignation constraints, as formalized by Chapman [3], in the process of binding plan step parameters. Another clear example is the use of causal links [10, 12], or their predecessor, protection intervals <ref> [21] </ref>, to constrain the temporal ordering of plan steps. Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 [22], and Collage [9].
Reference: [22] <author> A. Tate, B. Drabble, and J. Dalton. </author> <title> Reasoning with constraints within O-Plan2. </title> <type> Technical Report ARPA-RL/O-Plan2/TP/6 Version 1, </type> <institution> Artificial Intelligence Applications Institute, University of Edinburgh, </institution> <year> 1994. </year>
Reference-contexts: Allen and Koomen [1] and Kambhampati [8] generalize the notion of temporal and causal constraints, respectively. Planners that make more extensive use of constraints include Zeno [13], O-Plan2 <ref> [22] </ref>, and Collage [9]. Zeno uses constraints and temporal intervals to reason about goals with deadlines and continuous change.
Reference: [23] <author> E. Tsang. </author> <title> Foundations of Constraint Satisfaction. </title> <publisher> Academic Press, </publisher> <year> 1993. </year>
References-found: 23

