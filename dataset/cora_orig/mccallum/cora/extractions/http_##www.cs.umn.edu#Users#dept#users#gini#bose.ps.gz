URL: http://www.cs.umn.edu/Users/dept/users/gini/bose.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/gini/
Root-URL: http://www.cs.umn.edu
Author: MARIA GINI Date 
Note: This is to certify that I have examined this bound copy of a doctoral thesis by ASHIM BOSE and have found that it is complete and satisfactory in all respects, and that any and all revisions required by the final examining committee have been made.  
Affiliation: UNIVERSITY OF MINNESOTA  GRADUATE SCHOOL  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Aho. </author> <title> Algorithms for finding patterns in strings. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science - Vol A, chapter 5, </booktitle> <pages> pages 255-300. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: Details of this matching algorithm can be found in <ref> [1] </ref>. 1 A regular expression is a language accepted by a finite state automaton. A finite state automaton consists of a collection of states, an alphabet of input signals, and a function which for every possible combination of current state and input, determines a new state. <p> A deterministic finite automaton (DFA) is an NDFA in which there are no *-transitions and in which every state has at most one transition on any input character. DFA's have the benefit that they can be simulated in real time. In <ref> [1] </ref>, Aho describes a DFA-based regular expression pattern matching algorithm. A syntax tree and DFA are constructed from the regular expression, and then the DFA is run on the input string for matches. This algorithm runs in O (2 m + n) time and O (2 m ) space.
Reference: [2] <author> R. Alterman. </author> <title> Adaptive planning. </title> <journal> Cognitive Design, </journal> <volume> 12 </volume> <pages> 393-422, </pages> <year> 1988. </year>
Reference-contexts: In addition to applications emphasizing reasoning tasks like 2 planning ([17] and <ref> [2] </ref>), scheduling [34], diagnosis [28], argumentation [4] etc., CBR is being developed into a technology for building systems that assist users by presenting them with useful information chosen from organized memories of past experiences [8].
Reference: [3] <author> M. Arakawa and H. Yamakawa. </author> <title> A study on structural optimum design based on qualitative sensitivities. </title> <booktitle> In Proceedings Artificial Intelligence in Design 92, </booktitle> <year> 1992. </year>
Reference-contexts: They decompose a large problem into sub-problems and use cases to solve each subproblem. The individual solutions are then combined and solved using Model-based Reasoning. CBR has also been used in conjunction with other well established design tools like optimization. In <ref> [3] </ref>, the authors propose the concept of qualitative sensitivity and optimality, and then use these to develop a qualitative sensitivity aided optimum oriented system. This system uses model cases from a a model case-base to compute the sensitivities, which are then used to perform the optimization.
Reference: [4] <author> K. Ashley and E. Rissland. </author> <title> Compare and contrast: A test of expertise. </title> <booktitle> In Proceedings of the American Association for Artificial Intelligence, </booktitle> <year> 1987. </year>
Reference-contexts: In addition to applications emphasizing reasoning tasks like 2 planning ([17] and [2]), scheduling [34], diagnosis [28], argumentation <ref> [4] </ref> etc., CBR is being developed into a technology for building systems that assist users by presenting them with useful information chosen from organized memories of past experiences [8]. CBR can be illustrated with the help of the following example that has been taken from [24].
Reference: [5] <author> T. Bardasz and I. Zeid. Dejavu: </author> <title> A case-based reasoning designer's assistant shell. </title> <booktitle> In Proceedings Artificial Intelligence in Design 92, </booktitle> <year> 1992. </year>
Reference-contexts: They describe a model-based approach for solving the blame-assignment problem which uses structure-behavior-function causal models that capture a designer's comprehension of the way a device works. They conclude that each of the three blame-assignment tasks requires different indices into the causal behaviors of the design. Bardasz and Zeid, in <ref> [5] </ref>, describe a case-based reasoning designer's assistant shell called DEJAVU. The main components of the shell are a knowledge base of design plans, a design plan system, and an opportunistic problem solver.
Reference: [6] <author> J. Bentley. </author> <title> Multidimensional binary search trees used for associative searching. </title> <journal> Communications of the ACM, </journal> <volume> 18(9) </volume> <pages> 509-517, </pages> <year> 1975. </year>
Reference-contexts: represented by a particular node in the tree; hence the discriminating key number can range from 1 to k. 3 2 The global attributes capture the distinguishing features of the segment sequence and help to rapidly prune the search space. 3 In the original k-d tree proposed by Bentley in <ref> [6] </ref>, the discriminator for each node is chosen on the basis of its level in the tree; the discriminator for each level is obtained by cycling through the keys in order, i.e., D = L mod k + 1, where D is the discriminating key number for level L and the
Reference: [7] <author> B. Chandrasekaran. </author> <title> Design problem solving: A task analysis. </title> <journal> AI Magazine, </journal> <volume> 11(4), </volume> <year> 1990. </year>
Reference-contexts: The design problem involves mappings from the space of design specifications to the space of devices or components (mapping from behavior to structure), typically conducted by means of a search or exploration in the space of possible sub-assemblies of components <ref> [7] </ref>. The design problem is formally a search problem in a large space for objects that satisfy multiple constraints. Only a vanishingly small number of objects in this space constitute even satisficing, not to mention optimal solutions.
Reference: [8] <author> E. Domeshek and J. Kolodner. </author> <title> A case-based design aid for architecture. </title> <booktitle> In Proceedings Artificial Intelligence in Design 92, </booktitle> <pages> pages 497-516, </pages> <year> 1992. </year>
Reference-contexts: In addition to applications emphasizing reasoning tasks like 2 planning ([17] and [2]), scheduling [34], diagnosis [28], argumentation [4] etc., CBR is being developed into a technology for building systems that assist users by presenting them with useful information chosen from organized memories of past experiences <ref> [8] </ref>. CBR can be illustrated with the help of the following example that has been taken from [24]. Example: A psychiatrist sees a patient who exhibits clear signs of major depression.
Reference: [9] <author> E. Dougherty and C. Giardina. </author> <booktitle> Mathematical Methods for Artificial Intelligence and Autonomous Systems. </booktitle> <publisher> Prentice-Hall, Inc, </publisher> <year> 1988. </year>
Reference-contexts: String matching algorithms are sometimes used to detect matches between a line drawing and a template. Fourier transformations have also been used in matching line drawings. Reference <ref> [9] </ref> contains an overview of these techniques. 7.4 Matching Regular Expressions The general problem of string pattern matching occurs in many areas of science and information processing. This problem deals with detecting the occurrences of a given pattern in a sequence of characters called an input string.
Reference: [10] <author> A. Erdman and G. Sandor. </author> <title> Mechanism Design: </title> <journal> Analysis and Synthesis, </journal> <volume> Vol 1. </volume> <publisher> Prentice-Hall, Inc, </publisher> <year> 1984. </year>
Reference-contexts: Among the three movable links, one is used to impart motion to the linkage. If this motion is rotary, the link 8 is referred to as the input link or crank. Examples of four-bar and other linkages can be found in, for instance <ref> [10] </ref>. The complexity, and in general the versatility, of the linkage increases as the number of links increases. Nearly every mechanical device that is conceived, designed, and fabricated contains a mechanism in one form or another [21]. <p> Linkages make simple mechanisms and can be designed to perform complex tasks, such as nonlinear motion and force transmission. Because of their simplicity and versatility, many designers opt for linkage mechanisms whenever possible. The tasks that linkages are used for are varied and may be classified by application <ref> [10] </ref>: in path generation, the path of a tracer point on the coupler link is of interest; in motion generation, the entire motion (path and angle) of the coupler link is of concern; in function generation, the relative motion or force ratio between links is of interest. <p> Consequently, the function-structure relationship is governed by the equations of motion that can be adequately represented using vector algebra and/or complex 9 number algebra. These equations are for displacement, velocity, and acceleration analysis, and, if dynamics is important, force analysis too. This material is extensively covered in <ref> [10] </ref> and [42]. In order to design a linkage for a particular application, there are several variables that are to be considered. <p> This determines the type of linkage and is referred to as type synthesis <ref> [10] </ref>. The next step requires making quantitative decisions about geometrical dimensions, and is called dimensional synthesis. Finally, it is customary to simulate and analyze the motion of the linkage to ensure that no constraints are violated and to determine various performance parameters, such as velocity and acceleration.
Reference: [11] <author> B. Erickson and P. Sellers. </author> <title> Recognition of patterns in genetic sequences. </title> <editor> In D. Sankoff and J. Kruskal, editors, </editor> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison, </title> <booktitle> chapter 2, </booktitle> <pages> pages 55-91. </pages> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <year> 1983. </year> <month> 149 </month>
Reference-contexts: Articles on the subject of sequence comparison for the discrete and continuous cases include [29], <ref> [11] </ref>, and [30]. 7.6 Variational Geometry The use of variational geometry (or parametric programming as it is sometimes referred as), is becoming a growing trend in current computer-aided design systems. The basis for variational geometry was first developed by Hillyard [19] as a means for quickly redimensioning a CAD model.
Reference: [12] <author> A. Esterline, D. Riley, and A. Erdman. </author> <title> Design theory and ai implementations of design methodology. </title> <booktitle> In Preprints of the NSF Engineering Design Research Conference, </booktitle> <year> 1989. </year>
Reference-contexts: Most designers are accustomed to looking up standard artifacts and/or design solutions in design catalogs or handbooks published for this purpose. A catalog lookup on its own, however, is usually not sufficient since the catalog seldom contains the exact solution to a given problem specification <ref> [12] </ref>. Case-based Designing (CBD), which is an adaptation of CBR for Design Problem Solving, can be looked on as an enhancement to a straightforward catalog lookup. It goes one step further by adapting what is in the catalog 6 to suit the needs of the problem.
Reference: [13] <author> J. Friedman, J. Bentley, and R. Finkel. </author> <title> An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3(3) </volume> <pages> 209-226, </pages> <year> 1977. </year>
Reference-contexts: the `k'th discriminator &gt; `v'. k = 1 for Maximum Arc Index, 2 for Minimum Arc Index, and 3 for Number of Segments. n The case with id `n' resides at this leaf. `k'th discriminator &lt;= `v', and v= We use a variation of the optimized k-d tree reported in <ref> [13] </ref>. The optimized k-d tree provides a mechanism for examining only those cases that have some potential for matching with the problem. <p> They can be used to prune the search space even further so that fewer cases are retrieved. 57 4.8 Concluding Remarks We have presented a multi-layered approach to retrieval of cases similar to the problem specifications. The pre-processing algorithm is based on the optimized k d tree described in <ref> [13] </ref>. The number of nodes in the tree, assuming the case-base has N cases, is 2N 1 (N terminal leaves + N 1 nonterminal nodes). Hence the tree requires O (N ) space.
Reference: [14] <author> A. Goel and B. Chandrasekaran. </author> <title> Functional representation of designs and redesign problem solving. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference-contexts: Also, the search space is finite and the variables are discrete. This not only yields simpler failure detection algorithms, but also more effective adaptation and repair strategies. In <ref> [14] </ref> and [15], Goel and Chandrasekaran describe a scheme for storing cases according to a device's functions, its structure, and its behavior. The causality between the structure and the functions of the model is captured by the behavior which is based on physical laws.
Reference: [15] <author> A. Goel and B. Chandrasekaran. </author> <title> Use of device models in adaptation of design cases. </title> <booktitle> In Proceedings of the Case Based Reasoning Workshop 1989, </booktitle> <pages> pages 100-109. DARPA, </pages> <year> 1989. </year>
Reference-contexts: This is in direct contrast to other approaches, e.g., [17], where a case represents a plan for the design, or <ref> [15] </ref>, where a case is a skeleton of an artifact which can be refined with the aid of rules to get the actual artifact. <p> Also, the search space is finite and the variables are discrete. This not only yields simpler failure detection algorithms, but also more effective adaptation and repair strategies. In [14] and <ref> [15] </ref>, Goel and Chandrasekaran describe a scheme for storing cases according to a device's functions, its structure, and its behavior. The causality between the structure and the functions of the model is captured by the behavior which is based on physical laws.
Reference: [16] <author> A. Golding and P. Rosenbloom. </author> <title> Improving rule-based systems through case-based reasoning. </title> <booktitle> In Proceedings Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 22-27, </pages> <year> 1991. </year>
Reference-contexts: The plans are indexed functionally and retrieval is based on one of the following: a complete match, a partial match, a generalization match, or no match. There has been some recent work in integrating case-based reasoning with other forms of reasoning to improve overall performance. Golding and Rosenbloom in <ref> [16] </ref> describe an architecture where the rules are first applied to a target problem to get a first approximation to the answer; but if the problem is found to be similar to a known exception of the rule, then the exception is used to model that aspect of the solution.
Reference: [17] <author> K. Hammond. </author> <title> Case-Based Planning: Viewing Planning as a Memory Task. </title> <publisher> Academic Press Inc, </publisher> <year> 1989. </year>
Reference-contexts: Similarity Metrics Retrieved Designs + Specs Retrieved Designs + Failures Predicted Indexed Repair Strategies Explanation of Failure Irrepairable Designs - oeoe oe ? ? ? ? OE J J] H H HY 2.1 The Classical CBD Paradigm The classical paradigm, a variation of which was first proposed by Hammond in <ref> [17] </ref>, is illustrated in Figure 2.1. In this paradigm, a problem instance is entered as a set of design requirements. The Retriever uses pre-defined similarity metrics to 16 retrieve candidate designs from case memory. In so doing, it eliminates most of the search space of design solutions. <p> If no candidate remains, failure is reported. 2.3 Discussion Our approach to CBD is to store all particulars of an artifact for reference later when a new problem is presented. This is in direct contrast to other approaches, e.g., <ref> [17] </ref>, where a case represents a plan for the design, or [15], where a case is a skeleton of an artifact which can be refined with the aid of rules to get the actual artifact. <p> An overview of the more important of these areas is provided in the following sections. 7.1 Case-based Reasoning and Design The paradigm for CBD that we use is similar to the one for Case-based Planning in CHEF described by Hammond in <ref> [17] </ref>, but there are several important differences. The domain of CHEF is Szechwan cooking in which clear causal relationships exist between structure (the ingredients of a dish) and their function (the taste, texture etc. 96 of the dish).
Reference: [18] <author> N. Heintze, J. Jaffar, S. Michaylov, P. Stuckey, and R. Yap. </author> <title> The CLP(&lt;) Programmer's manual, </title> <note> Version 1.1, </note> <month> Nov </month> <year> 1991. </year>
Reference-contexts: It was thought that because of the enormous amount of low-level computation involved, the use an object-oriented language with faster performance characteristics was called for. However, the ADAPTOR that uses the modifier matrix approach, is coded in CLP (&lt;) <ref> [18] </ref>. This is done to exploit the linear constraint solving feature of CLP (&lt;) which is ideal for solving ineuqalities of the type described in Section 5.2. A severe handicap of this approach was the interfacing between this module and the rest of 112 the modules.
Reference: [19] <author> R. Hillyard. </author> <title> Dimensions and Tolerances in Shape Design. </title> <type> PhD thesis, </type> <institution> University of Cambridge, UK, </institution> <year> 1978. </year>
Reference-contexts: The basis for variational geometry was first developed by Hillyard <ref> [19] </ref> as a means for quickly redimensioning a CAD model. Today, several commercial systems 1 support the ideas embodied by variational geometry. Martino and Gabriele, in [35], describe the role of the Jacobian and constraint matrices in variational geometry and methods to quickly and accurately estimate them.
Reference: [20] <author> D. Hoeltzel and W.-H. Chieng. </author> <title> Pattern matching synthesis as an automated approach to mechanism design. </title> <booktitle> ASME J. Mechanisms, Transmissions and Automation in Design, </booktitle> <year> 1989. </year>
Reference-contexts: They use this 99 system to solve the problem of optimum layout of a parabolic antenna. 7.2 Storing Linkage Examples Methods from AI have been used by design researchers to store linkage examples. Hoeltzel and Chieng <ref> [20] </ref> developed Pattern Matching Synthesis (PMS) for matching curves of four-bar linkages (although they do not explicitly refer to CBD). They determine the dimensions of the path generator mechanism and then the dimensions of the timing compensator mechanism by associating curves to clusters.
Reference: [21] <author> D. Hoeltzel and W.-H. Chieng. </author> <title> Knowledge-based approaches for the creative synthesis of mechanisms. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(1) </volume> <pages> 57-67, </pages> <month> Jan-Feb </month> <year> 1990. </year>
Reference-contexts: Examples of four-bar and other linkages can be found in, for instance [10]. The complexity, and in general the versatility, of the linkage increases as the number of links increases. Nearly every mechanical device that is conceived, designed, and fabricated contains a mechanism in one form or another <ref> [21] </ref>. Linkages make simple mechanisms and can be designed to perform complex tasks, such as nonlinear motion and force transmission. Because of their simplicity and versatility, many designers opt for linkage mechanisms whenever possible.
Reference: [22] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley Inc, </publisher> <year> 1979. </year>
Reference-contexts: A finite state automaton is said to accept any sequence of symbols which places it in its final state. See <ref> [22] </ref> for a detailed introduction to automata theory. 43 Once a match with one or more cases is found at the first level, a more detailed match is attempted at the next level of each case.
Reference: [23] <author> J. Hrones and G. Nelson. </author> <title> Analysis of the FOUR-BAR linkage: Its Application to the Synthesis of Mechanisms. </title> <publisher> The MIT Press, </publisher> <year> 1951. </year>
Reference-contexts: These mechanisms are described in <ref> [23] </ref>, which also lists about seven thousand different crank-rocker mechanisms. The distribution of the segment indices for the cases generated for a case-base of size 100 is as shown in Figure 3.4.
Reference: [24] <author> J. Kolodner. </author> <title> The role of experience in development of expertise. </title> <booktitle> In Proceedings of the American Association for Artificial Intelligence, </booktitle> <pages> pages 273-277, </pages> <year> 1982. </year>
Reference-contexts: CBR can be illustrated with the help of the following example that has been taken from <ref> [24] </ref>. Example: A psychiatrist sees a patient who exhibits clear signs of major depression. The patient also reports, among other things, that she recently had a stomach problem that doctors could find no organic cause for.
Reference: [25] <author> J. Kolodner and R. Simpson. </author> <title> The mediator: Analysis of an early case-based problem solver. </title> <journal> Cognitive Science, </journal> <volume> 13(4) </volume> <pages> 507-549, </pages> <month> Oct-Dec </month> <year> 1989. </year> <month> 150 </month>
Reference-contexts: CBR can improve problem-solving behavior in several ways: by providing reasoning shortcuts, by warning of the potential for error so that pre-emptive action may be taken, and by suggesting a focus for reasoning <ref> [25] </ref>. CBR is a paradigm based on a memory-centered cognitive model; the basic idea is that people are good at figuring out what to do in new situations largely because they are able to remember and adapt things they did (or saw others do) in similar previous situations.
Reference: [26] <author> S. Kota, A. Erdman, and D. Riley. </author> <title> Minn-dwell computer aided design and analysis of linkage-type dwell mechanisms. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 4(1) </volume> <pages> 1-8, </pages> <year> 1988. </year>
Reference: [27] <author> S. Kota, A. Erdman, D. Riley, A. Esterline, and J. Slagle. </author> <title> A network based expert system for intelligent design of mechanisms. </title> <booktitle> AI in Engineering Design and Manufacturing, </booktitle> <volume> 2(1) </volume> <pages> 17-32, </pages> <year> 1988. </year>
Reference-contexts: An atlas of four-bar straight-line linkages containing about 350 different linkages is developed. The designer selects the linkage from the atlas. The system then derives the design parameters and computes 100 the linkage parameters. An expert system that originated from MINN-DWELL is the Dwell-Expert <ref> [27] </ref> for initial selection of models for dwell linkages from a base of shallow models defined in terms of a fixed number of characteristics.
Reference: [28] <author> P. Koton. </author> <title> Using Experience in Learning and Problem Solving. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1988. </year>
Reference-contexts: In addition to applications emphasizing reasoning tasks like 2 planning ([17] and [2]), scheduling [34], diagnosis <ref> [28] </ref>, argumentation [4] etc., CBR is being developed into a technology for building systems that assist users by presenting them with useful information chosen from organized memories of past experiences [8]. CBR can be illustrated with the help of the following example that has been taken from [24].
Reference: [29] <author> J. Kruskal. </author> <title> An overview of sequence comparison. </title> <editor> In D. Sankoff and J. Kruskal, editors, </editor> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison, </title> <booktitle> chapter 1, </booktitle> <pages> pages 1-44. </pages> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <year> 1983. </year>
Reference-contexts: Articles on the subject of sequence comparison for the discrete and continuous cases include <ref> [29] </ref>, [11], and [30]. 7.6 Variational Geometry The use of variational geometry (or parametric programming as it is sometimes referred as), is becoming a growing trend in current computer-aided design systems.
Reference: [30] <author> J. Kruskal and M. Liberman. </author> <title> The symmetric time-warping problem: From continuous to discrete. </title> <editor> In D. Sankoff and J. Kruskal, editors, </editor> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison, </title> <booktitle> chapter 4, </booktitle> <pages> pages 125-161. </pages> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <year> 1983. </year>
Reference-contexts: Articles on the subject of sequence comparison for the discrete and continuous cases include [29], [11], and <ref> [30] </ref>. 7.6 Variational Geometry The use of variational geometry (or parametric programming as it is sometimes referred as), is becoming a growing trend in current computer-aided design systems. The basis for variational geometry was first developed by Hillyard [19] as a means for quickly redimensioning a CAD model. <p> to increase the information that is stored in the modifier matrix, each entry could be a complex number entity recorded in polar form, where the difference between the P C and the CC can be broken and recorded as separate components corresponding to translation and rotation. 1 See for example, <ref> [30] </ref>, for an introduction to the topic of "time warping" 114 This would, in all likelihood, cause the method to be more accurate. 115 Appendix A Segmentation Formulae . . . . . . . . . . . . . . . . . . . . . . .
Reference: [31] <author> Y. Lamdan, J. Schwartz, and H. Wolfson. </author> <title> Object recognition by affine invariant matching. </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 335-344, </pages> <year> 1988. </year>
Reference-contexts: The matching is done by finding a graph monomorphism between the synthesized AHR of the view and the complete AHR of the object. Matching techniques based on geometric hashing have also been used for model-based object recognition. Lamdan et al., in [32] and <ref> [31] </ref>, describe techniques for recognition of flat objects observed from an arbitrary viwpoint. They use the affine approximation to the viewing transformation and present point, line, and curve matching techniques.
Reference: [32] <author> Y. Lamdan, J. Schwartz, and H. Wolfson. </author> <title> On recognition of 3-d objects from 2-d images. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1407-1413, </pages> <year> 1988. </year>
Reference-contexts: The matching is done by finding a graph monomorphism between the synthesized AHR of the view and the complete AHR of the object. Matching techniques based on geometric hashing have also been used for model-based object recognition. Lamdan et al., in <ref> [32] </ref> and [31], describe techniques for recognition of flat objects observed from an arbitrary viwpoint. They use the affine approximation to the viewing transformation and present point, line, and curve matching techniques.
Reference: [33] <author> Y. Lamdan and H. Wolfson. </author> <title> Geometric hashing: A general and efficient model-based recognition scheme. </title> <booktitle> In Proceedings of the 2nd International Conference on Computer Vision, </booktitle> <pages> pages 238-249, </pages> <year> 1988. </year>
Reference-contexts: Lamdan et al., in [32] and [31], describe techniques for recognition of flat objects observed from an arbitrary viwpoint. They use the affine approximation to the viewing transformation and present point, line, and curve matching techniques. In <ref> [33] </ref>, the focus is on the general applicability and efficiency of their technique to recognition tasks in 2-D and 3-D using data obtained from gray scale images, range images, or by tactile sensors. The method relies on computing invariant geometric features for the models and storing them in a hash-table.
Reference: [34] <author> W. Mark. </author> <title> Case-based reasoning for autoclave management. </title> <booktitle> In Proceedings of the Case Based Reasoning Workshop 1989, </booktitle> <pages> pages 176-180, </pages> <year> 1989. </year>
Reference-contexts: In addition to applications emphasizing reasoning tasks like 2 planning ([17] and [2]), scheduling <ref> [34] </ref>, diagnosis [28], argumentation [4] etc., CBR is being developed into a technology for building systems that assist users by presenting them with useful information chosen from organized memories of past experiences [8]. CBR can be illustrated with the help of the following example that has been taken from [24].
Reference: [35] <author> P. Martino and G. Gabriele. </author> <title> Estimating jacobian and constraint matrices in variational geometry systems. </title> <booktitle> In Proceedings, 15th Design Automation Conference, </booktitle> <pages> pages 79-85, </pages> <year> 1989. </year>
Reference-contexts: The basis for variational geometry was first developed by Hillyard [19] as a means for quickly redimensioning a CAD model. Today, several commercial systems 1 support the ideas embodied by variational geometry. Martino and Gabriele, in <ref> [35] </ref>, describe the role of the Jacobian and constraint matrices in variational geometry and methods to quickly and accurately estimate them. They describe geometric models in terms of model variables with dimensions.
Reference: [36] <author> R. McNaughton and H. Yamada. </author> <title> Regular expressions and state graphs for automata. </title> <journal> IRE Transactions on Electronic Computing, </journal> <volume> 9(1) </volume> <pages> 39-47, </pages> <year> 1960. </year>
Reference-contexts: The symbol # is an end marker appended to the expression. The dots are used as concatenation operators. The leaves of the syntax tree are labelled by the non-metacharacters in the regular expression. Using a technique first suggested by McNaughton and Yamada <ref> [36] </ref>, we associate with each leaf a unique integer denoting the relative position of the leaf. Ths relative positions are shown below the leaves in the syntax tree of Figure B.1. 128 The transitions of the DFA are constructed directly from the syntax tree.
Reference: [37] <author> E. Myers. </author> <title> An o(nd) difference algorithm and its variations. </title> <journal> Algorithmica, </journal> <volume> 1 </volume> <pages> 251-266, </pages> <year> 1986. </year>
Reference-contexts: If the NDFA enters an accepting state while processing the input string, a match for the pattern in the string has been found. This algorithm has O (mn) time and space complexity, where m and n are the lengths of the regular expression 104 and input string respectively. In <ref> [37] </ref>, this basic algorithm is enhanced to derive an O (mn= log n) time and space solution. Deterministic recognizers are also used for matching regular expressions.
Reference: [38] <author> G. Pahl and W. Beitz. </author> <title> Engineering Design. </title> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: This is why the use of Artificial Intelligence techniques in design are important. There are several different classifications used to categorize design activity. One such 5 scheme is the routine-innovative-creative or variant-adaptive-original design classifi-cation scheme <ref> [38] </ref>. Routine or variant designs are for variations on dimensions and/or arrangements of artifacts that are already in use. Creative or original designs require creativity on the part of the designer; the artifacts produced are original in some sense and haven't been used for that particular application before.
Reference: [39] <author> S. Rajamoney and H.-Y. Lee. </author> <title> Prototype-based reasoning: An integrated approach to solving large novel problems. </title> <booktitle> In Proceedings Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 34-39, </pages> <year> 1991. </year>
Reference-contexts: The cases thus record the exceptions to the rules. In <ref> [39] </ref>, Rajamoney and Lee describe prototype-based reasoning to be an integration of Model-based and Case-based Reasoning. They claim that this form of reasoning is useful for solving large problems. They decompose a large problem into sub-problems and use cases to solve each subproblem.
Reference: [40] <author> C. Riesbeck and R. Schank. </author> <title> Inside Case-based Reasoning. </title> <publisher> Lawrence Erlbaum Associates, Publishers, </publisher> <year> 1989. </year>
Reference-contexts: This can be attributed at least in part to the fact that people solve unfamiliar problems from first principles, whereas they tend to remember distinctive problems they have solved in the past, which causes them to be able to solve similar problems much more efficiently through remindings <ref> [40] </ref>. Case-based Reasoning (CBR) is a memory-based reasoning paradigm that enhances machine intelligence by using techniques similar to remindings. CBR is defined as reasoning from precedents, adapting old solutions to solve new problems, or retrieving old cases to illuminate aspects of the current situation.
Reference: [41] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley Inc, </publisher> <year> 1990. </year>
Reference-contexts: All coupler curves are closed since the crank is always rotated 360 degrees. We generate an ACC by recording N positions of the coupler point corresponding to N positions of the crank. Each crank position is obtained by rotating the crank 360/N 1 For example, see <ref> [41] </ref> for a comprehensive description of some of these schemes. 26 7 @ @ @ @ @ L L L L L L L point1 point2 point3 ae 12 ae = ae 12 = ae 23 degrees from the previous position in the anti-clockwise direction.
Reference: [42] <author> G. Sandor and A. Erdman. </author> <title> Advanced Mechanism Design: </title> <journal> Analysis and Synthesis, </journal> <volume> Vol 2. </volume> <publisher> Prentice-Hall, Inc, </publisher> <year> 1984. </year>
Reference-contexts: Consequently, the function-structure relationship is governed by the equations of motion that can be adequately represented using vector algebra and/or complex 9 number algebra. These equations are for displacement, velocity, and acceleration analysis, and, if dynamics is important, force analysis too. This material is extensively covered in [10] and <ref> [42] </ref>. In order to design a linkage for a particular application, there are several variables that are to be considered.
Reference: [43] <author> L. Shapiro. </author> <title> Ordered structural matching. </title> <editor> In G. e. a. Ferrate, editor, </editor> <booktitle> Syntactic and Structural Pattern Recognition, </booktitle> <pages> pages 33-47. </pages> <publisher> Springer-Verlag Berlin Heidelberg, NATO ASI Series, Vol. </publisher> <address> F45, </address> <year> 1988. </year>
Reference-contexts: Shapiro and Haralick, in [44], discuss the problems associated with a brute-force backtracking tree search for inexact matching, and compare several different algorithms to make the tree search more efficient. In <ref> [43] </ref>, Shapiro describes a technique called ordered structural matching for matching simple 2-D objects. This approach uses the operations of mathematical morphology to decompose the shape into primitives. It depends on rules that specify the spatial ar 102 rangement of the primitives of the object.
Reference: [44] <author> L. Shapiro and R. Haralick. </author> <title> Structural descriptions and inexact matching. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 3(5) </volume> <pages> 504-519, </pages> <year> 1981. </year>
Reference-contexts: In order to characterize the similarity and differences between 3-D objects, they define a measure of relational similarity, and a measure of feature similarity. This leads to the concept of inexact matching, where matches that are not necessarily perfect, but merely good enough, are sought. Shapiro and Haralick, in <ref> [44] </ref>, discuss the problems associated with a brute-force backtracking tree search for inexact matching, and compare several different algorithms to make the tree search more efficient. In [43], Shapiro describes a technique called ordered structural matching for matching simple 2-D objects.
Reference: [45] <author> L. Shapiro, J. Moriarty, R. Haralick, and P. Mulgaonkar. </author> <title> Matching three-dimensional objects using a relational paradigm. </title> <journal> Pattern Recognition, </journal> <volume> 17(4) </volume> <pages> 385-405, </pages> <year> 1984. </year>
Reference-contexts: This work mostly pertains to the recognition of 2-D and 3-D objects in vision systems. Shapiro et al., in <ref> [45] </ref>, make use of a relational paradigm to match stored models of 3-D objects against unknown 3-D objects. The model they use provides a tool for the approximate description of an object by including information on the simple parts that constitute the object.
Reference: [46] <author> E. Stroulia, M. Shankar, A. Goel, and L. Penberthy. </author> <title> A model-based approach to blame-assignment in design. </title> <booktitle> In Proceedings Artificial Intelligence in Design 92, </booktitle> <year> 1992. </year>
Reference-contexts: Their examples are taken from the domain of water taps and faucets. The causal relationships are again monotonically increasing or decreasing. The designs are conceptual in nature and dimensional synthesis is not undertaken. In <ref> [46] </ref>, the authors analyze the blame-assignment task in the context of experience-based design and redesign of physical devices.
Reference: [47] <author> K. Sycara and D. Navinchandra. </author> <title> Integrating case-based reasoning and qualitative reasoning in engineering design. </title> <editor> In J. Gero, editor, </editor> <booktitle> AI in Engineering Design. </booktitle> <year> 1989. </year>
Reference-contexts: This scheme has been implemented in the domains of Acid Coolers, and Reaction Wheel Assemblies. In both cases, the causal relationships are captured as qualitative relations that are montonically increasing or decreasing. The designs are conceptual in nature, and do not deal with dimensional synthesis. Sycara and Navinchandra in <ref> [47] </ref> take a broader view of CBD. Apart from the indirect use of models in the form of qualitative relations describing the functions of a device, they also use analogical reasoning to retrieve examples from diverse domains, where the thread of commonality runs only at a very abstract level.
Reference: [48] <author> K. Thompson. </author> <title> Regular expression search algorithm. </title> <journal> Communications of the ACM, </journal> <volume> 11(6) </volume> <pages> 419-422, </pages> <year> 1968. </year>
Reference-contexts: The pattern is really a notation for describing a set of substrings. A common method to describe a pattern is through the use of a regular expression as defined in language theory. In <ref> [48] </ref>, a method to match regular expressions that uses a nondeterministic recognizer is described. A nondeterministic finite automaton (NDFA) is constructed from the regular expression representing the pattern. The NDFA is then run on the input string.
Reference: [49] <author> J. Titus, A. Erdman, and D. Riley. </author> <title> The role of type synthesis in the design of machines. </title> <booktitle> In Preprints of the NSF Engineering Design Research Conference, </booktitle> <year> 1989. </year>
Reference-contexts: This purpose is stated in the problem statement. The problem statement addresses a need and limits the final solution by specifying characteristics the artifact designed must possess and constraints the artifact must satisfy <ref> [49] </ref>. This purpose can be represented as a hierarchy of tasks or functions. The components of the device comprise its structure, obey physical laws, and aid in achieving the purpose by performing one or more of the functions.
Reference: [50] <author> A. K. Wong. </author> <title> Knowledge representation for robot vision and path planning using attributed hypergraphs. </title> <editor> In A. Wong and A. Pugh, editors, </editor> <booktitle> Machine Intelligence and Knowledge Engineering for Robotic Applications, </booktitle> <pages> pages 113-143. </pages> <publisher> Springer-Verlag Berlin, </publisher> <year> 1987. </year> <month> 152 </month>
Reference-contexts: In [43], Shapiro describes a technique called ordered structural matching for matching simple 2-D objects. This approach uses the operations of mathematical morphology to decompose the shape into primitives. It depends on rules that specify the spatial ar 102 rangement of the primitives of the object. Wong, in <ref> [51, 50] </ref>, describes a vision system for shape synthesis and 3-D object recognition using an attributed hypergraph representation (AHR).
Reference: [51] <author> A. K. Wong. </author> <title> Recognition and shape synthesis of 3-d objects based on attributed hypergraphs. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 2(3) </volume> <pages> 279-290, </pages> <month> March </month> <year> 1989. </year> <month> 153 </month>
Reference-contexts: In [43], Shapiro describes a technique called ordered structural matching for matching simple 2-D objects. This approach uses the operations of mathematical morphology to decompose the shape into primitives. It depends on rules that specify the spatial ar 102 rangement of the primitives of the object. Wong, in <ref> [51, 50] </ref>, describes a vision system for shape synthesis and 3-D object recognition using an attributed hypergraph representation (AHR).
References-found: 51

