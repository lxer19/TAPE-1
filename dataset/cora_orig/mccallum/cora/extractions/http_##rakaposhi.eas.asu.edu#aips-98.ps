URL: http://rakaposhi.eas.asu.edu/aips-98.ps
Refering-URL: http://rakaposhi.eas.asu.edu/yochan.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: famol.mali, raog@asu.edu  
Title: Encoding HTN Planning in Propositional Logic  
Author: Amol D. Mali and Subbarao Kambhampati 
Web: URL: http://rakaposhi.eas.asu.edu/yochan.html  
Address: Tempe, AZ 85287-5406  
Affiliation: Department of Computer Science Engineering, Arizona State University,  
Abstract: Casting planning problems as propositional satisfia-bility problems has recently been shown to be an effective way of scaling up plan synthesis. Until now, the benefits of this approach have only been utilized in primitive action-based planning models. Motivated by the conventional wisdom in the planning community about the effectiveness of hierarchical task network (HTN) planning models, in this paper we adapt the "planning as satisfiability" approach to HTN planning models. HTN planning models can be thought of as an augmentation of primitive action based planning models with a grammar of legal solutions, provided in the form of non-primitive tasks and task reduction schemas. Accordingly, we argue that any action-based encoding scheme can be generalized to handle HTN planning models. Informally, this generalization involves adding constraints to the encoding to ensure that the solutions produced by solving the encoding will conform to the grammar provided by the HTN planning model. The constraints can be added in either a "top-down" or "bottom-up" fashion, resulting in two HTN encoding schemes for each primitive action-based encoding scheme. We illustrate this process by providing three different HTN encodings. We discuss the asymptotic sizes of these encodings, as well as the complexity of finding models for them. 
Abstract-found: 1
Intro-found: 1
Reference: [Barrett & Weld 94 ] <author> Anthony Barrett and Daniel Weld, </author> <title> Task-Decomposition via plan parsing, </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1994, </year> <pages> 1117-1122. </pages>
Reference-contexts: In the top-down way, which is followed in most implemented HTN planners, planning starts with non-primitive tasks, and the reduction schemas are used to gradually reduce them into more concrete actions (while taking care of ensuing interactions). In the bottom-up way <ref> [Barrett & Weld 94] </ref>, the (partial) solutions generated by an action-based planner are incrementally parsed with the help of reduction schemas and the branches leading to solutions that cannot be parsed are pruned. house Posing Planning as Satisfiability: Given a planning problem hI; G; Ai, where I is the initial state
Reference: [Erol 95 ] <author> Kutluhan Erol, </author> <title> Hierarchical task network planning: Formalization, Analysis and Implementation, </title> <type> Ph.D thesis, </type> <institution> Dept. of computer science, Univ. of Maryland, College Park, </institution> <year> 1995. </year>
Reference-contexts: In the worst case, this may well be true as the worst case complexity of HTN planning is indeed higher than that of normal action-based planning <ref> [Erol 95] </ref>. In practice however, we speculate that the HTN encodings can still out perform the action-based encodings for two reasons.
Reference: [Estlin et al. 97 ] <author> Tara Estlin, Steve Chien and Xuemei Wang, </author> <title> An argument for a hybrid HTN/Operator-based approach to planning, </title> <booktitle> Proceedings of the European Conference on Planning (ECP), </booktitle> <year> 1997, </year> <pages> 184-196. </pages>
Reference-contexts: HTN planners have been used in several fielded applications including space platform construction, satellite planning and control [Tate 77], beer factory production line scheduling, military operations planning [Wilkins 88], image processing for science data analysis and deep space network antenna operations <ref> [Estlin et al. 97] </ref>. The action reduction schemas capture the human expertise in that only those solutions that have a parse in terms of the supplied schemas are considered legal.
Reference: [Jiang et al. 95 ] <author> Yuejun Jiang, Henry Kautz and Bart Selman, </author> <title> Solving problems with hard and soft constraints using stochastic algorithm for MAX-SAT, </title> <booktitle> First international joint workshop on artificial intelligence and operations research, </booktitle> <year> 1995. </year>
Reference-contexts: Then the solution should be found by satisfying the clauses in a hierarchical order. Since all three encodings do refer to the constraints in the reduction schemas, the weighting scheme can be used in all of them. <ref> [Jiang et al. 95] </ref> discuss an extension of a local search algorithm for handling weighted propositional satisfiability and show that weighted declarative representation and stochastic search have the potential to solve problems of practical interest.
Reference: [Kambhampati et al. 98 ] <author> Subbarao Kambhampati, Amol Mali & Biplav Srivastava, </author> <title> Hybrid planning in partially hierarchical domains, </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1998. </year>
Reference-contexts: In this paper, we view HTN planning as an "augmentation" of the action-based planning paradigm, where the abstract tasks and their associated reduction schemas provide an implicit grammar of legal ("desired") solutions <ref> [Kambhampati et al. 98] </ref>. An immediate advantage of this view is that propositional encodings for HTN planning models can be developed by generalizing each of the action-based encodings in [Kautz et al. 96]. <p> The action reduction schemas capture the human expertise in that only those solutions that have a parse in terms of the supplied schemas are considered legal. The rich structure of the reduction schemas (see Section 3) allows the users to provide a fairly sophisticated grammar for legal solutions <ref> [Kambhampati et al. 98] </ref>. The reduction schemas can be used to control planning either in a top-down or a bottom-up way. <p> We capture in the encodings the scenario where both hierarchical task networks and primitive actions (that do not occur in the hierarchical task networks) are used for planning. Such a hybrid plan ning process is quite common since many domains are only partially hierarchized <ref> [Kambhampati et al. 98] </ref>. Our encoding schemes create an encoding for K non-primitive steps and an additional k 0 primitive steps (which are mapped to primitive actions that do not belong to any reduction schema). The reduction of non-primitive tasks requires T primitive steps in the encoding.
Reference: [Kautz et al. 96 ] <author> Henry Kautz, David McAllester and Bart Sel-man, </author> <title> Encoding plans in propositional logic, </title> <booktitle> Proceedings of the conference on Knowledge Representation & Reasoning (KRR), </booktitle> <year> 1996. </year>
Reference-contexts: 1 Introduction Recent work <ref> [Kautz & Selman 96; Kautz et al. 96] </ref> has shown that a surprisingly effective way of attacking the classical planning problem is to pose it as a propositional satisfiability problem. <p> An immediate advantage of this view is that propositional encodings for HTN planning models can be developed by generalizing each of the action-based encodings in <ref> [Kautz et al. 96] </ref>. The basic idea is to constrain the encodings such that their satisfying models not only correspond to valid solutions to the planning problems, but also conform to the grammar specified by the reduction schemas. <p> We illustrate our methodology by providing three different HTN encodings. Since most implemented HTN planners [Wilkins 88; Tate 77] share a lot of structure of the plan-space planners, the "causal encodings" in <ref> [Kautz et al. 96] </ref> provide a natural starting place for developing encodings for HTN planning. We provide both "top-down" and "bottom-up" HTN encodings based on causal encodings. <p> However, given our view of HTN planning as just an augmentation of action-based planning with a grammar of legal solutions, there is no reason to constrain ourselves to causal encodings. To emphasize this point, we also develop a "bottom-up" encoding based on the forward state-space encoding of <ref> [Kautz et al. 96] </ref>. In the rest of this paper, we develop the three encodings motivated above, and analyze their asymptotic properties. <p> (iii) "causal" encodings that comprise the constraints required to show that every top level goal as well as every precondition of the actions in the sequence are caused by the effect of some preceding action in the sequence, such that any action coming after the supporting action preserves the goal. <ref> [Kautz et al. 96] </ref> report encodings based on each of these ideas. 1 The contribution of the current paper can be seen as providing a methodology for adapting these three classes of encodings to HTN planning models. 3 Representation & Notation In order to formally develop HTN encodings, we must first <p> Recall that this encoding is based on the causal encoding of <ref> [Kautz et al. 96] </ref>. Below we explain what the schemas in Fig. 2 mean. Schema 1 states that a non-primitive step can be mapped to any non-primitive task, including the null action. <p> Schema 9 states such mutually exclusive transformations. Formal versions of the encoding schemas 4, 5, 10 ... 20 are not shown in Fig. 2 because these schemas are similar to the schemas for causal encoding of <ref> [Kautz et al. 96] </ref>. These schemas state the transitivity on the orderings of primitive steps, the reordering of steps necessary for resolving threats and the need to have a contributor for each precondition of each primitive step. <p> In addition to the schemas from the linear encoding of <ref> [Kautz et al. 96] </ref> (which we do not state here), we need a schema that tells how the constraints from a hierarchical task network are to be encoded. <p> If we decide to create an encoding with (T + k 0 ) primitive steps, without using the information provided by the reduction schemas, the causal encodings for HTN planning shrink to the causal encoding provided by <ref> [Kautz et al. 96] </ref> with O ((T + k 0 ) 3 fl j j) clauses and O ((T + k 0 ) 2 fl j j) variables. We observe that HTN causal encodings have more clauses and variables than the causal encodings without abstractions. <p> The number of ground reduction schemas tends to be combinatorially large. Pre-processing technique like operator graphs [Peot & Smith 96] can be used to prune irrelevant schemas. 2. The causal encoding of planning with primitive actions <ref> [Kautz et al. 96] </ref> contains all potential causal links.
Reference: [Kautz & Selman 96 ] <author> Henry Kautz and Bart Selman, </author> <title> Pushing the envelope: Planning, Propositional logic and Stochastic search, </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1996. </year>
Reference-contexts: 1 Introduction Recent work <ref> [Kautz & Selman 96; Kautz et al. 96] </ref> has shown that a surprisingly effective way of attacking the classical planning problem is to pose it as a propositional satisfiability problem. <p> and the branches leading to solutions that cannot be parsed are pruned. house Posing Planning as Satisfiability: Given a planning problem hI; G; Ai, where I is the initial state of the world, G specifies the desired goals and A is the set of actions that an agent can execute, <ref> [Kautz & Selman 96] </ref> show that the task of finding a k-step solution to this problem can be posed as a propositional satisfiability problem.
Reference: [Kautz & Selman 98 ] <author> Henry Kautz and Bart Selman, </author> <title> The role of domain-specific knowledge in the planning as satisfiability framework, </title> <booktitle> Proceedings of the international conference on Artificial Intelligence Planning Systems (AIPS), </booktitle> <year> 1998. </year>
Reference-contexts: In practice however, we speculate that the HTN encodings can still out perform the action-based encodings for two reasons. First, recent work by <ref> [Kautz & Selman 98] </ref> shows that when domain specific knowledge about desirable solutions is added to linear action-based encodings (thus increasing their size), the complexity of testing the satisfiability of the resulting encodings goes down.
Reference: [Peot & Smith 96 ] <author> Mark Peot and David Smith, </author> <title> Suspending recursion in causal link planning, </title> <booktitle> Proceedings of the international conference on Artificial Intelligence Planning Systems (AIPS), </booktitle> <year> 1996. </year>
Reference-contexts: Optimizing HTN encodings We have found several ways of reducing the size of the encodings, two of which are mentioned below. 1. The number of ground reduction schemas tends to be combinatorially large. Pre-processing technique like operator graphs <ref> [Peot & Smith 96] </ref> can be used to prune irrelevant schemas. 2. The causal encoding of planning with primitive actions [Kautz et al. 96] contains all potential causal links.
Reference: [Sacerdoti 73 ] <author> Sacerdoti E. D., </author> <title> Planning in a hierarchy of abstraction spaces, </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <year> 1973, </year> <pages> 412-422. </pages>
Reference-contexts: Secondly, even after simplification, we can use the constraints from the reduction schemas to "guide" the planning process. Indeed, since the early days of HTN planning <ref> [Sacerdoti 73] </ref>, it has been known that the success of HTN planners heavily depends upon producing good plans at the abstract level.
Reference: [Sacerdoti 77 ] <author> Sacerdoti E. D., </author> <title> A structure for plans and behavior, </title> <publisher> Elsevier-North Holland, </publisher> <year> 1977. </year>
Reference: [Tate 77 ] <author> Austin Tate, </author> <title> Generating project networks, </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence (IJ-CAI), </booktitle> <year> 1977, </year> <pages> 888-893. </pages>
Reference-contexts: The "bottom-up" encodings use the task reduction schemas to ensure that the solutions for the encodings can be parsed in terms of the reductions. We illustrate our methodology by providing three different HTN encodings. Since most implemented HTN planners <ref> [Wilkins 88; Tate 77] </ref> share a lot of structure of the plan-space planners, the "causal encodings" in [Kautz et al. 96] provide a natural starting place for developing encodings for HTN planning. We provide both "top-down" and "bottom-up" HTN encodings based on causal encodings. <p> Planners that use such action reduction schemas have come to be known as "hierarchical task network planners" [Sacer-doti 77][Wilkins 88][Erol 95]. HTN planners have been used in several fielded applications including space platform construction, satellite planning and control <ref> [Tate 77] </ref>, beer factory production line scheduling, military operations planning [Wilkins 88], image processing for science data analysis and deep space network antenna operations [Estlin et al. 97].
Reference: [Wilkins 88 ] <author> David Wilkins, </author> <title> Practical planning: Extending the classical AI planning paradigm, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: The "bottom-up" encodings use the task reduction schemas to ensure that the solutions for the encodings can be parsed in terms of the reductions. We illustrate our methodology by providing three different HTN encodings. Since most implemented HTN planners <ref> [Wilkins 88; Tate 77] </ref> share a lot of structure of the plan-space planners, the "causal encodings" in [Kautz et al. 96] provide a natural starting place for developing encodings for HTN planning. We provide both "top-down" and "bottom-up" HTN encodings based on causal encodings. <p> Planners that use such action reduction schemas have come to be known as "hierarchical task network planners" [Sacer-doti 77]<ref> [Wilkins 88] </ref>[Erol 95]. HTN planners have been used in several fielded applications including space platform construction, satellite planning and control [Tate 77], beer factory production line scheduling, military operations planning [Wilkins 88], image processing for science data analysis and deep space network antenna operations [Estlin et al. 97]. The action reduction schemas capture the human expertise in that only those solutions that have a parse in terms of the supplied schemas are considered legal.
References-found: 13

