URL: http://theory.lcs.mit.edu/~madhu/papers/benny.ps
Refering-URL: http://theory.lcs.mit.edu/~madhu/papers.html
Root-URL: 
Title: A Geometric Approach to Betweenness  
Author: Benny Chor and Madhu Sudan 
Keyword: SDP solution.  
Abstract: An input to the betweenness problem contains m constraints over n real variables. Each constraint consists of three variables, where one of the variables is specified to lie inside the interval defined by the other two. The order of the other two variables (which one is the largest and which one is the smallest) is not specified. This problem comes up in questions related to physical mapping in computational molecular biology. In 1979, Opatrny has shown that the problem of deciding whether the n variables can be totally ordered while satisfying the m betweenness constraints is NP-complete. Furthermore, the problem is MAX SNP complete. Therefore, there is some * &gt; 0 such that finding a total order which satisfies at least m(1 *) of the constraints (even if they are all satisfiable) is NP-hard. It is easy to find an ordering of the variables which satisfies 1=3 of the m constraints (e.g. by choosing the ordering at random). This paper presents a polynomial time algorithm which either determines that there is no feasible solution, or finds a total order which satisfies at least 1=2 of the m constraints. The algorithm translates the problem into a set of quadratic inequalities, and solves a semidefinite relaxation of them in R n . The n solution points are then projected on a random line through the origin. The claimed performance guarantee using simple geometric properties of the 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> N. Alon and N. Kahale. </author> <title> "Approximating the independence number via the -function", </title> <type> Manuscript, </type> <month> August </month> <year> 1994. </year>
Reference-contexts: Further evidence of the applicability of the SDP approach is provided by the works of Karger, Motwani and Sudan [10], who use it to approximate graph coloring, Alon and Kahale <ref> [1] </ref> (independent set approximation) and by Feige and Goemans [4] (improvements to MAX 2SAT). Thus the semidefinite programming method has now been used successfully to solve many optimization problems | exactly and approximately.
Reference: 2. <author> S. Arora, C. Lund, R. Motwani, M. Sudan and M. Szegedy. </author> <title> "Proof Verification and Hardness of Approximation Problems", </title> <booktitle> Proceedings 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 14-23, </pages> <year> 1992. </year>
Reference-contexts: It is well-known that there exists an ffi &gt; 0 such that approximating the value of the MAX CUT of a graph to within a factor of 1 ffi is NP-hard <ref> [2] </ref>. The reduction to betweenness is as follows: For every vertex v i in the graph create a point p i . In addition we introduce one special point s. <p> This reduction follows Opatrny's original reduction. It is known that there exists a constant * &gt; 0 such that finding a solution which satisfies of 1 * fraction of all clauses in a satisfiable problem is NP-hard <ref> [2] </ref>. Therefore, we conclude that there exists a constant * 0 &gt; 0 such that finding an ordering which satisfies (1 * 0 ) fraction of the constraints in a satisfiable instance of the betweenness problem is NP-hard. Proposition 1.
Reference: 3. <author> D. Cox, M. Burmeister, E. Price, S. Kim, R. Myers, </author> <title> "Radiation Hybrid Mapping: A Somatic Cell Genetic Method for Constructing High Resolution Maps of Mammalian Chromosomes", </title> <journal> Science, </journal> <volume> Vol. 250, </volume> <year> 1990, </year> <pages> pp. 245-250. </pages>
Reference-contexts: Re search partially supported by Technion V.P.R. funds. ??? IBM Thomas J. watson Research Center, P.O.Box 218, Yorktown Heights, NY 10598 (madhu@watson.ibm.com) biology. For example, when trying to order markers on a chromosome, given the results of a radiation hybrid experiment <ref> [6, 3] </ref>. A computational task of practical significance, in this context, is to find a total ordering of the markers (the x i in our terminology) which maximizes the number of satisfied constraints. Opatrny gave two reductions in his proof of NP-completeness. One of these reductions is from 3SAT.
Reference: 4. <author> U. Feige and M. Goemans. </author> <title> "Approximating the value of two prover proof systems, with applications to MAX 2SAT and MAX DICUT", </title> <booktitle> Proceedings of the Third Israel Symposium on Theory and Computing Systems, </booktitle> <pages> pp. 182-189, </pages> <year> 1995. </year>
Reference-contexts: Further evidence of the applicability of the SDP approach is provided by the works of Karger, Motwani and Sudan [10], who use it to approximate graph coloring, Alon and Kahale [1] (independent set approximation) and by Feige and Goemans <ref> [4] </ref> (improvements to MAX 2SAT). Thus the semidefinite programming method has now been used successfully to solve many optimization problems | exactly and approximately. However all the cases where SDP has been used to find approximation algorithms seem to be essentially partition problems (MAX CUT, Coloring, Multicut etc.).
Reference: 5. <author> M. Goemans and D. Williamson. </author> <title> ":878-Approximation Algorithms for MAX CUT and MAX 2SAT", </title> <booktitle> Proceedings of the Twenty-Sixth ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 422-431, </pages> <year> 1994. </year>
Reference-contexts: This application was then turned into exact coloring and independent set finding algorithms for perfect graphs. The use of SDP in approximation algorithms was innovated by the work of Goemans and Williamson <ref> [5] </ref> who break longstanding barriers in the approximability of MAX CUT and MAX 2SAT by their SDP based algorithm. <p> Mahajan and Ramesh [9] give a method to deterministically find a vector r whose cut value equals the expected cut value. They use this algorithm to derandomize the MAX CUT and Max 2SAT algorithm of Goemans and Williamson <ref> [5] </ref>. By using their algorithm we get a vector such that projection on to this vector satisfies as many constraints as satisfiable by a random vector. Remark: Observe that the above reduction is not a generic reduction from betweenness to MAX CUT.
Reference: 6. <author> S. Goss and H. Harris, </author> <title> "New Methods for Mapping Genes in Human Chromosomes", </title> <journal> Nature, </journal> <volume> Vol. 255, </volume> <year> 1975, </year> <pages> pp. 680-684. </pages>
Reference-contexts: Re search partially supported by Technion V.P.R. funds. ??? IBM Thomas J. watson Research Center, P.O.Box 218, Yorktown Heights, NY 10598 (madhu@watson.ibm.com) biology. For example, when trying to order markers on a chromosome, given the results of a radiation hybrid experiment <ref> [6, 3] </ref>. A computational task of practical significance, in this context, is to find a total ordering of the markers (the x i in our terminology) which maximizes the number of satisfied constraints. Opatrny gave two reductions in his proof of NP-completeness. One of these reductions is from 3SAT.
Reference: 7. <author> M. Grotschel, L. Lovasz and A. Schrijver. </author> <title> "The ellipsoid method and its consequences in combinatorial optimization", </title> <journal> Combinatorica, </journal> <volume> 1 </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: Our use of semidefinite programming is inspired by the recent success in using this methodology to find improved approximation algorithms for several optimization problems. The applicability of SDP in combinatorial optimization was demonstrated by Grotschel, Lovasz and Schrijver <ref> [7] </ref> to show that the Theta function of Lovasz [12] was polynomial time computable. This application was then turned into exact coloring and independent set finding algorithms for perfect graphs.
Reference: 8. <author> M. Grotschel, L. Lovasz and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: It is well-known that the ellipsoid algorithm of Khaciyan [11] can be used to find an additive *-approximate solution to any semidefinite program in time polynomial in the input size and the logarithm of 1=* (see for instance <ref> [8] </ref>). In order to use the semidefinite programming approach for solving combinatorial optimization problems, one more tool is useful. This is the ability to find a matrix V as guaranteed to exist in part 3 of the definition of positive semidefiniteness above.
Reference: 9. <author> S. Mahajan and H. Ramesh. </author> <title> Derandomizing Semidefinite Programming Based Approx--imation Algorithms. </title> <booktitle> Proceedings of the 36th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 162-169, </pages> <year> 1995. </year>
Reference-contexts: Thus j lies between i and k. Conversely if projection onto the vector r satisfies the betweenness constraint for i; j; k; then the edge between w ij and w jk must be cut. Mahajan and Ramesh <ref> [9] </ref> give a method to deterministically find a vector r whose cut value equals the expected cut value. They use this algorithm to derandomize the MAX CUT and Max 2SAT algorithm of Goemans and Williamson [5].
Reference: 10. <author> D. Karger, R. Motwani and M. Sudan. </author> <title> "Approximate graph coloring via semidefinite programming", </title> <booktitle> Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 2-13, </pages> <year> 1994. </year>
Reference-contexts: Further evidence of the applicability of the SDP approach is provided by the works of Karger, Motwani and Sudan <ref> [10] </ref>, who use it to approximate graph coloring, Alon and Kahale [1] (independent set approximation) and by Feige and Goemans [4] (improvements to MAX 2SAT). Thus the semidefinite programming method has now been used successfully to solve many optimization problems | exactly and approximately.
Reference: 11. <author> L. Khaciyan. </author> <title> "A polynomial algorithm in linear programming", </title> <journal> (English translation appears in) Soviet Mathematics Doklady, </journal> <volume> vol. 20, </volume> <pages> pp. 191-194, </pages> <year> 1979. </year>
Reference-contexts: All the eigenvalues of X are non-negative. 2. For all vectors y 2 R n , y T Xy 0. 3. There exists a real matrix V such that V T V = X. It is well-known that the ellipsoid algorithm of Khaciyan <ref> [11] </ref> can be used to find an additive *-approximate solution to any semidefinite program in time polynomial in the input size and the logarithm of 1=* (see for instance [8]). In order to use the semidefinite programming approach for solving combinatorial optimization problems, one more tool is useful.
Reference: 12. <author> L. Lovasz. </author> <title> "On the Shannon capacity of a graph", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-25:1-7, </volume> <year> 1979. </year>
Reference-contexts: Our use of semidefinite programming is inspired by the recent success in using this methodology to find improved approximation algorithms for several optimization problems. The applicability of SDP in combinatorial optimization was demonstrated by Grotschel, Lovasz and Schrijver [7] to show that the Theta function of Lovasz <ref> [12] </ref> was polynomial time computable. This application was then turned into exact coloring and independent set finding algorithms for perfect graphs.
Reference: 13. <author> J. Opatrny, </author> <title> "Total Ordering Problem", </title> <journal> SIAM J. Comput., </journal> <volume> vol. 8 No. 1, </volume> <month> February </month> <year> 1979, </year> <pages> pp. </pages> <month> 111-114. </month> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: The betweenness problem is to decide if all constraint can be simultaneously satisfied by a total order of the variables. In 1979, Opatrny <ref> [13] </ref> has shown that the betweenness problem is NP-complete. <p> Section 5 shows the tightness of our analysis. Finally, Section 6 contains some concluding remarks and open problems. 2 Preliminaries We start this section with some preliminary observations about the betweenness problem. We begin by analyzing the complexity of finding approximate solutions to the problem. Opatrny <ref> [13] </ref> has shown that it is hard to decide if a given instance of the betweenness problem is satisfiable. <p> Acknowledgments We are grateful to Michel Goemans for providing us with the max cut example, and for helpful discussions on semi-definite programming. Many thanks to Amir Ben-Dor for numerous helpful discussions on the betweenness problem. We would also like to thank Ron Shamir for acquainting us with reference <ref> [13] </ref> and for useful discussions, Oded Goldreich for his comments on an earlier draft of this manuscript, and Amos Beimel for his expert advice on xfig.
References-found: 13

