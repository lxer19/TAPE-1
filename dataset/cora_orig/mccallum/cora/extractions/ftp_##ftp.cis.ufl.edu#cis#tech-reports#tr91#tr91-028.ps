URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr91/tr91-028.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr91-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Upgrading Circuit Modules To Improve Performance+  
Author: Doowon Paik Sartaj Sahni 
Keyword: And Phrases Module upgrading, performance, delay, complexity, NP-hard, heuristics  
Note: This research was supported, in part, by the National Science Foundation under grant MIP86-17374.  
Abstract: University of Minnesota University of Florida Abstract We consider the problem of selectively upgrading some of the modules in a circuit so as to meet a specified performance level. The upgrading of a module involves replacing it with an equivalent module with zero delay (effectively) and this replacement has a cost or weight associated with. We show that some versions of the minimum cost upgrading problem are NP-hard while others are polynomially solvable. Several heuristics for the general problem are proposed and evaluated experimentally. 
Abstract-found: 1
Intro-found: 1
Reference: [BRGL85] <author> F. Brglez and H. Fujiwara, </author> <title> "A Neutral Netlist of Ten Combinational Benchmark Circuits and a Target Translator in FORTRAN", </title> <booktitle> Proc. IEEE Symp. on Circuits & Systems, </booktitle> <month> June </month> <year> 1985 </year> <month> pp. </month> <pages> 663-666. </pages>
Reference-contexts: When d = 1, the problem is polynomially solvable (Section 3). 3. Several heuristics for the general DVUP are proposed (Section 4). 4. An experimental evaluation of the heuristics using ISCAS benchmark circuits <ref> [BRGL85, 89] </ref> is per formed (Section 5). - 4 - Related vertex modification problems for dags have been studied in [PAIK90, 91]. <p> Experimental Results The heuristics of the preceding section were programmed in Pascal and evaluated on an Apollo DN3500 workstation. The test circuits used were derived from ISCAS benchmark combinational and sequential circuits <ref> [BRGL85, BRGL89] </ref>. The sequential circuits were transformed into directed acyclic graphs as in [LEE90]. The characteristics of the two circuits sets are given in Table 1 and 2, respectively. For the sequential circuits, vertex delays in the range 1 - 10 were assigned by us.
Reference: [BRGL89] <author> F. Brglez, D. Bryan, and K. Kozminski, </author> <title> "Combinational Profiles of Sequential Benchmark Circuits", </title> <booktitle> Proc. of Intern. Symp. on Circuit & Systems, </booktitle> <month> May </month> <year> 1989, </year> <pages> pp. 1929-1934. </pages>
Reference-contexts: Experimental Results The heuristics of the preceding section were programmed in Pascal and evaluated on an Apollo DN3500 workstation. The test circuits used were derived from ISCAS benchmark combinational and sequential circuits <ref> [BRGL85, BRGL89] </ref>. The sequential circuits were transformed into directed acyclic graphs as in [LEE90]. The characteristics of the two circuits sets are given in Table 1 and 2, respectively. For the sequential circuits, vertex delays in the range 1 - 10 were assigned by us.
Reference: [CHAN90] <author> P. K. Chan, </author> <title> "Algorithms For Library-Specific Sizing Of Combinational Logic", </title> <booktitle> Proc. 27th DAC Conf., 1990 pp. </booktitle> <pages> 353-356. </pages>
Reference-contexts: 1. Introduction Often, a circuit can be modeled as a directed acyclic graph (dag) G in which there is a delay, d (v ), associated with each vertex, v <ref> [CHAN90, GHAN87, MCGE90] </ref>. The dag vertices represent circuit modules while interconnects are modeled by dag edges. The delay, d (v ), associated with vertex v of the dag models both the delay of the modules the vertex represents as well as the interconnect delay.
Reference: [GARE79] <author> M. R. Garey, and D. S. Johnson, </author> <title> "Computers and Intractability", </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: This problem is called the directed vertex upgrade problem (DVUP). It is easy to see that DVUP is NP-hard. For this we simply show how a polynomial time algorithm for DVUP could be used to solve, in polynomial time, the partition problem which is known to be NP-hard <ref> [GARE79] </ref>.
Reference: [GAVR87] <author> F. Gavril, </author> <title> "Algorithms For Maximum k-colorings And k-coverings Of Transitive Graphs", </title> <journal> Networks, </journal> <volume> Vol. 17, </volume> <pages> pp. 465-470, </pages> <year> 1987. </year>
Reference-contexts: Note that if G is a dag then G + is a transitive dag. The unit delay unit weight DVUP for any d, d 1 can be solved in O (n 3 logn) time by using the O (n 3 logn) maximum k -coloring algorithm of <ref> [GAVR87] </ref> for transitive dags. Before showing how this can be done, we establish a relationship between the number of vertices of a given set X that can be on any path of G and colorability of X in G + . <p> Note that when d = 1, a maximum d-coloring is just a maximum independent set and such a set can be found in O (ne ) time for transitive closure graphs with n vertices and e edges <ref> [GAVR87] </ref>.
Reference: [GHAN87] <author> S. Ghanta, H. C. Yen, and H. C. Du, </author> <title> "Timing Analysis Algorithms For Large Designs", </title> <institution> University of Minnesota, </institution> <type> Technical Report, </type> <institution> 87-57,1987. </institution>
Reference-contexts: 1. Introduction Often, a circuit can be modeled as a directed acyclic graph (dag) G in which there is a delay, d (v ), associated with each vertex, v <ref> [CHAN90, GHAN87, MCGE90] </ref>. The dag vertices represent circuit modules while interconnects are modeled by dag edges. The delay, d (v ), associated with vertex v of the dag models both the delay of the modules the vertex represents as well as the interconnect delay.
Reference: [LEE90] <author> D. H. Lee and S. M. Reddy, </author> <title> "On Determining Scan Flip-flops In Partial-scan Designs", </title> <booktitle> Proc. of International Conference on Computer Aided Design, </booktitle> <month> November </month> <year> 1990. </year>
Reference-contexts: Experimental Results The heuristics of the preceding section were programmed in Pascal and evaluated on an Apollo DN3500 workstation. The test circuits used were derived from ISCAS benchmark combinational and sequential circuits [BRGL85, BRGL89]. The sequential circuits were transformed into directed acyclic graphs as in <ref> [LEE90] </ref>. The characteristics of the two circuits sets are given in Table 1 and 2, respectively. For the sequential circuits, vertex delays in the range 1 - 10 were assigned by us.
Reference: [MCGE90] <author> P. McGeer, R. Brayton, R. Rudell, and A. Sangiovanni-Vincentelli, </author> <title> "Extended Stuck-fault Testability For Combinational Networks", </title> <booktitle> Proc. of the 6th MIT Conference on Advanced Research in VLSI, </booktitle> <publisher> MIT Press, </publisher> <month> April </month> <year> 1990. </year>
Reference-contexts: 1. Introduction Often, a circuit can be modeled as a directed acyclic graph (dag) G in which there is a delay, d (v ), associated with each vertex, v <ref> [CHAN90, GHAN87, MCGE90] </ref>. The dag vertices represent circuit modules while interconnects are modeled by dag edges. The delay, d (v ), associated with vertex v of the dag models both the delay of the modules the vertex represents as well as the interconnect delay.
Reference: [PAIK90] <author> D. Paik, S. Reddy, and S. Sahni, </author> <title> "Vertex Splitting In Dags And Applications To Partial Scan Designs And Lossy Circuits", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <institution> 90-34,1990. </institution>
Reference-contexts: Several heuristics for the general DVUP are proposed (Section 4). 4. An experimental evaluation of the heuristics using ISCAS benchmark circuits [BRGL85, 89] is per formed (Section 5). - 4 - Related vertex modification problems for dags have been studied in <ref> [PAIK90, 91] </ref>. In the first of these, vertex splitting was used to model the problem of obtaining an optimal selection of scan flip-flops and in the latter vertex deletion was used to model the problem of optimal placement of signal boosters in lossy circuits. 2. <p> The proof for the case d = 2 uses the known <ref> [PAIK90] </ref> NP-hard problem 2-3SAT which is defined below: Input: A boolean function F = C 1 C 2 . . . C n in n variables x 1 , x 2 , ... , x n such that each clause has either two or three literals.

References-found: 9

