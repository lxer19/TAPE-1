URL: http://www.cs.ucsb.edu/TRs/techreports/TRCS96-16.ps
Refering-URL: http://www.cs.ucsb.edu/TRs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: teo@cs.ucsb.edu  
Title: Improved Approximation Algorithms for Multimessage Multicasting  
Author: Teofilo F. Gonzalez 
Keyword: Approximation Algorithms, Multimessage Multicasting, Dynamic Net works, Parallel Iterative Methods, Communication Schedules.  
Date: Revised: August 19, 1996  
Address: Santa Barbara, CA, 93106  
Affiliation: Department of Computer Science University of California,  
Abstract: We consider Multimessage Multicasting over the n processor complete (or fully connected) static network (MM C ). We present several fast approximation algorithms with improved approximation bounds for problem instances with small fan-out (maximum number of processors receiving any given message), but arbitrary degree d, where d is the maximum number of messages that each processor may send (receive). These problem instances are the ones that arise in practice, since the fan-out restriction is imposed by the applications and the number of processors available in commercial systems. Our algorithms are centralized and require all the communication information ahead of time. Applications where this information is available include iterative algorithms for solving linear equations and most dynamic programming procedures. The Meiko CS-2 machine and in general computer systems with processors communicating via dynamic permutation networks whose basic switches can act as data replicators (e.g., n by n Benes network with 2 by 2 switches that can also act as data replicators) will also benefit from our results at the expense of doubling the number of communication phases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. S. Almasi, and A. Gottlieb, </author> <title> Highly Parallel Computing, </title> <publisher> The Benjamin/Cummings Publishing Co., Inc., </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: This is accomplished by translating each communication phase for the complete network into two communication phases for these dynamic networks. The first phase replicates data and transmits it to other processors, and the second phase distributes data to the appropriate processors ([15], [16], [18]). The IBM GF11 machine <ref> [1] </ref>, and the Meiko CS-2 machine use Benes networks for processor interconnection. The two stage translation process can also be used in the Meiko CS-2 computer system, and any multimessage multicasting schedule can be realized by using basic synchronization primitives.
Reference: [2] <author> E. G. Coffman, Jr, M. R. Garey, D. S. Johnson, and A. S. LaPaugh, </author> <title> Scheduling File Transfers in Distributed Networks, </title> <journal> SIAM J. on Computing, </journal> <volume> 14(3) (1985), </volume> <pages> pp. 744 - 780. </pages>
Reference-contexts: It is not surprising that several authors have studied the M U C problem as well as several interesting variations for which NP-completeness has been established, subproblems have been shown to be polynomially solvable, and approximation algorithms and heuristics have been developed. Coffman, Garey, Johnson and LaPaugh <ref> [2] </ref> studied a version the multimessage unicasting problem when messages have different lengths, each processor can send (receive) ff (P i ) 1 (fi (P i ) 1) messages simultaneously, and messages are transmitted without interruption (non-preemptive mode). Whitehead [20] considered the case when messages can 4 be sent indirectly.
Reference: [3] <author> H.-A. Choi, and S. L. Hakimi, </author> <title> Data Transfers in Networks, </title> <journal> Algorithmica, </journal> <volume> Vol. 3, </volume> <year> (1988), </year> <pages> pp. 223 - 245. </pages>
Reference-contexts: Whitehead [20] considered the case when messages can 4 be sent indirectly. The preemptive version of these problems as well as other generalizations were studied by Choi and Hakimi ([4], [5], <ref> [3] </ref>), Hajek and Sasaki [13], Gopal, Bongiovanni, Bonuccelli, Tang, and Wong [11]. Some of these papers considered the case when the input and output units are interchangeable, i.e., each processor can be involved in at most fl (P i ) message transmissions (sending and/or receiving).
Reference: [4] <author> H.-A. Choi, and S. L. Hakimi, </author> <title> Scheduling File Transfers for Trees and Odd Cycles, </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 16, No. 1, </volume> <month> February </month> <year> 1987, </year> <pages> pp. 162 - 168. </pages>
Reference: [5] <author> H.-A. Choi, and S. L. Hakimi, </author> <title> "Data Transfers in Networks with Transceivers," </title> <journal> Networks, </journal> <volume> Vol. 17, </volume> <year> (1987), </year> <pages> pp. 393 - 421. </pages>
Reference-contexts: Whitehead [20] considered the case when messages can 4 be sent indirectly. The preemptive version of these problems as well as other generalizations were studied by Choi and Hakimi ([4], <ref> [5] </ref>, [3]), Hajek and Sasaki [13], Gopal, Bongiovanni, Bonuccelli, Tang, and Wong [11]. Some of these papers considered the case when the input and output units are interchangeable, i.e., each processor can be involved in at most fl (P i ) message transmissions (sending and/or receiving).
Reference: [6] <author> Gonzalez, T. F., </author> <title> "Multi-Message Multicasting," Proceedings of the Third International Workshop on Parallel Algorithms for Irregularly Structured Problems (Irregular'96), </title> <note> to appear. </note>
Reference: [7] <author> Gonzalez, T. F., </author> <title> "Multimessage Multicasting: Complexity and Approximations," </title> <institution> UCSB Department of Computer Science, </institution> <type> Technical Report TRCS-96-15, </type> <month> July </month> <year> 1996. </year>
Reference-contexts: Our introduction is a con-densed version of the one in <ref> [7] </ref>, which includes a complete justification for the M M C problem as well as motivations, applications and examples. Routing in the complete static network (there are bidirectional links between every pair of processors) is the simplest and most flexible when compared to other static and dynamic networks. <p> The colors correspond to different time periods. In what follows we corrupt our notation by using interchangeably colors and time periods; vertices and processors; and bundles, branches or edges, and messages. 1.2 Previous Work, New Results, and Applications Gonzalez <ref> [7] </ref> developed an efficient algorithm to construct for any degree d problem instance a communication schedule with total communication time at most d 2 , and presented problem instances for which this upper bound on the communication time is best possible, i.e. the upper bound is also a lower bound. <p> This two stage process can be used in the MEIKO CS-2 machine <ref> [7] </ref>. Gonzalez [7] also considered the case when each message has fixed fan-out k. <p> This two stage process can be used in the MEIKO CS-2 machine <ref> [7] </ref>. Gonzalez [7] also considered the case when each message has fixed fan-out k. <p> Our M M C problem is closest to the communication model in the Meiko CS2 machine and it involves multicasting rather than just unicasting. The M M C problem is significantly harder than the M U C . Gonzalez <ref> [7] </ref> showed that even when k = 2 the decision version of the M M C problem is NP-complete. He also developed an algorithm to construct a communication schedule with total communication time 2d1 for the case when the fan-out is two, i.e., k = 2. Gonzalez [7] developed an O <p> Gonzalez <ref> [7] </ref> showed that even when k = 2 the decision version of the M M C problem is NP-complete. He also developed an algorithm to construct a communication schedule with total communication time 2d1 for the case when the fan-out is two, i.e., k = 2. Gonzalez [7] developed an O (q d e) time algorithm, where e nd (the input size), to construct for problem instances of degree d a communication schedule with total communication time qd + k 1 q (d 1), where q is the maximum number of colors that can be used to color <p> The value of constant a 1 for the different methods we have developed and for different values for k is given in Table 3. The methods labeled "simple" are for the method described in <ref> [7] </ref>. The "involved (2c)" is the method discussed in this section, and the one labeled "With Matching" is described in the next section. We briefly discuss in Section 4 the remaining methods.
Reference: [8] <author> Gonzalez, T. F., </author> <title> "Proofs for Improved Approximation Algorithms for Multimessage Mul-ticasting," </title> <institution> UCSB Department of Computer Science, </institution> <type> Technical Report TRCS-96-17, </type> <month> July </month> <year> 1996, </year> <title> (or access directly http://www.cs.ucsb.edu/~teo). </title>
Reference-contexts: Lemma 2.3 is used in the proof of Lemmas 2.4 and 2.5, and requires Lemma 2.2. The purely mechanical proofs (or parts of proofs) appear in Appendix A. Mathematica programs (and their outputs) for all of these mechanical proofs are given in <ref> [8] </ref>. <p> Lemma 3.3 is used in the proof of Lemmas 3.4 and 3.5, and requires Lemma 3.2. The purely mechanical proofs (or parts of proofs) appear in Appendix B. Mathematica programs (and their outputs) for all of these mechanical proofs are given in <ref> [8] </ref>.
Reference: [9] <author> Gonzalez, T. F., </author> <title> "Unit Execution Time Shop Problems, </title> " <journal> Mathematics of Operations Research," </journal> <volume> Vol. 7, No. 1, </volume> <month> February </month> <year> 1982, </year> <pages> pp. 57 - 66. </pages>
Reference: [10] <author> T. F. Gonzalez, and S. Sahni, </author> <title> Open Shop Scheduling to Minimize Finish Time, </title> <journal> JACM, </journal> <volume> Vol. 23, No. 4, </volume> <month> October </month> <year> 1976, </year> <pages> pp. 665 - 679. 17 </pages>
Reference: [11] <author> I. S. Gopal, G. Bongiovanni, M. A. Bonuccelli, D. T. Tang, and C. K. Wong, </author> <title> An Optimal Switching Algorithm for Multibean Satellite Systems with Variable Bandwidth Beams, </title> <journal> IEEE Transactions on Communications, COM-30, </journal> <note> 11 (1982) pp. 2475 - 2481. </note>
Reference-contexts: Whitehead [20] considered the case when messages can 4 be sent indirectly. The preemptive version of these problems as well as other generalizations were studied by Choi and Hakimi ([4], [5], [3]), Hajek and Sasaki [13], Gopal, Bongiovanni, Bonuccelli, Tang, and Wong <ref> [11] </ref>. Some of these papers considered the case when the input and output units are interchangeable, i.e., each processor can be involved in at most fl (P i ) message transmissions (sending and/or receiving).
Reference: [12] <author> A J. Hopcroft, and R. M. Karp, </author> <title> An n 2:5 Algorithm for Maximum Matchings in Bipartite Graphs, </title> <journal> SIAM J. Computing, </journal> <year> (1973), </year> <pages> pp. 225 - 231. </pages>
Reference-contexts: colors in the same branch of bundle bg S 0 [ C b 1 , and g and z b are not t j1 -forbidden colors in the same branch of bundle b g; Find a complete matching (M ) for W [ X in H using the algorithm in <ref> [12] </ref>; /* Use M to color the maximum set of branches emanating from P j */ for each edge in M of the form fW b ; Y g g do color with g the maximum number of branches in bundle b of processor P j ; for each edge in <p> As we have established before, the combined degree of W b and X b is at least 2d. Therefore jR (A)j 2d. Since A has at most 2d elements, it then follows that jAj jR (A)j. Hopcroft and Karp's <ref> [12] </ref> constructs a matching M for G. By the above discussion, such a matching must be complete with respect to all the vertices in W [ X. From such matching we construct a partial coloration.
Reference: [13] <author> B. Hajek, and G. Sasaki, </author> <title> Link Scheduling in Polynomial Time, </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> Vol. 34, No. 5, </volume> <month> Sept. </month> <year> 1988, </year> <pages> pp. 910 - 917. </pages>
Reference-contexts: Whitehead [20] considered the case when messages can 4 be sent indirectly. The preemptive version of these problems as well as other generalizations were studied by Choi and Hakimi ([4], [5], [3]), Hajek and Sasaki <ref> [13] </ref>, Gopal, Bongiovanni, Bonuccelli, Tang, and Wong [11]. Some of these papers considered the case when the input and output units are interchangeable, i.e., each processor can be involved in at most fl (P i ) message transmissions (sending and/or receiving).
Reference: [14] <author> I. Holyer, </author> <title> The NP-completeness of Edge-Coloring, </title> <journal> SIAM J. Comp., </journal> <volume> 11 (1982), 117 - 129. </volume>
Reference: [15] <author> T. T. Lee, </author> <title> Non-blocking Copy Networks for Multicast Packet Switching, </title> <journal> IEEE J. Selected Areas of Communication, </journal> <volume> Vol. 6, No 9, </volume> <month> Dec. </month> <year> 1988, </year> <pages> pp. 1455 - 1467. </pages>
Reference: [16] <author> S. C. Liew, </author> <title> A General Packet Replication Scheme for Multicasting in Interconnection Networks, </title> <booktitle> Proceedings IEEE INFOCOM '95, Vol.1 (1995), </booktitle> <pages> pp. 394 - 401. </pages>
Reference-contexts: This is accomplished by translating each communication phase for the complete network into two communication phases for these dynamic networks. The first phase replicates data and transmits it to other processors, and the second phase distributes data to the appropriate processors ([15], <ref> [16] </ref>, [18]). The IBM GF11 machine [1], and the Meiko CS-2 machine use Benes networks for processor interconnection. The two stage translation process can also be used in the Meiko CS-2 computer system, and any multimessage multicasting schedule can be realized by using basic synchronization primitives. <p> The two stage translation process can also be used in the Meiko CS-2 computer system, and any multimessage multicasting schedule can be realized by using basic synchronization primitives. This two step translation process can be reduced to one step by increasing the number of network switches about 50% ([15], <ref> [16] </ref>, and [18]). In what follows we concentrate on the M M C problem because it has a simple structure, and, as we mentioned before, results for this network can be easily translated to other dynamic networks. Let us formally define our problem. <p> When the processors are connected via a dynamic network whose basic switches allow data replication, the basic multicasting problem can be solved in two stages: the data replication step followed by the data distribution step ([15], [18], <ref> [16] </ref>). This two stage process can be used in the MEIKO CS-2 machine [7]. Gonzalez [7] also considered the case when each message has fixed fan-out k.
Reference: [17] <author> P. I. Rivera-Vega, R, Varadarajan, and S. B. Navathe, </author> <title> "Scheduling File Transfers in Fully Connected Networks," </title> <journal> Networks, </journal> <volume> Vol. 22, </volume> <year> (1992), </year> <pages> pp. 563 - 588. </pages>
Reference-contexts: Some of these papers considered the case when the input and output units are interchangeable, i.e., each processor can be involved in at most fl (P i ) message transmissions (sending and/or receiving). Rivera-Vega, Varadarajan and Navathe <ref> [17] </ref> studied, the file transferring problem, a version the multimessage unicasting problem for the complete network when every vertex can send (receive) as many messages as the number of outgoing (incoming) links.
Reference: [18] <author> J. S. Turner, </author> <title> A Practical Version of Lee's Multicast Switch Architecture, </title> <journal> IEEE Transactions on Communications, </journal> <volume> Vol. 41, No 8, </volume> <month> Aug. </month> <year> 1993, </year> <pages> pp. 1166 - 1169. </pages>
Reference-contexts: This is accomplished by translating each communication phase for the complete network into two communication phases for these dynamic networks. The first phase replicates data and transmits it to other processors, and the second phase distributes data to the appropriate processors ([15], [16], <ref> [18] </ref>). The IBM GF11 machine [1], and the Meiko CS-2 machine use Benes networks for processor interconnection. The two stage translation process can also be used in the Meiko CS-2 computer system, and any multimessage multicasting schedule can be realized by using basic synchronization primitives. <p> This two step translation process can be reduced to one step by increasing the number of network switches about 50% ([15], [16], and <ref> [18] </ref>). In what follows we concentrate on the M M C problem because it has a simple structure, and, as we mentioned before, results for this network can be easily translated to other dynamic networks. Let us formally define our problem. <p> When the processors are connected via a dynamic network whose basic switches allow data replication, the basic multicasting problem can be solved in two stages: the data replication step followed by the data distribution step ([15], <ref> [18] </ref>, [16]). This two stage process can be used in the MEIKO CS-2 machine [7]. Gonzalez [7] also considered the case when each message has fixed fan-out k.
Reference: [19] <author> V. G. Vizing, </author> <title> On an Estimate of the Chromatic Class of a p-graph, </title> <journal> Diskret. Analiz., </journal> <volume> 3 (1964), </volume> <pages> pp. </pages> <note> 25 - 30 (In Russian). </note>
Reference-contexts: This follows from the observation that each edge is considered a constant number of times and each time the algorithm spends O (d) time on it. 2 3 Approximation Algorithm With Matching The M M C problem can be viewed as the generalization of the multigraph edge coloration (EC) problem <ref> [19] </ref>, where the edges are directed, and bundled in groups. Vizing's [19] approximation algorithm for the EC problem colors the edges one at a time with one of the 1:5d available colors, where d is the degree of the multigraph. <p> constant number of times and each time the algorithm spends O (d) time on it. 2 3 Approximation Algorithm With Matching The M M C problem can be viewed as the generalization of the multigraph edge coloration (EC) problem <ref> [19] </ref>, where the edges are directed, and bundled in groups. Vizing's [19] approximation algorithm for the EC problem colors the edges one at a time with one of the 1:5d available colors, where d is the degree of the multigraph. If there are no colors available to color an edge, the algorithm will recolor some previously colored edges via limited backtracking.
Reference: [20] <author> J. Whitehead, </author> <title> The Complexity of File Transfer Scheduling with Forwarding, </title> <journal> SIAM Journal on Computing Vol. </journal> <volume> 19, No 2, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 222 - 245. </pages>
Reference-contexts: Coffman, Garey, Johnson and LaPaugh [2] studied a version the multimessage unicasting problem when messages have different lengths, each processor can send (receive) ff (P i ) 1 (fi (P i ) 1) messages simultaneously, and messages are transmitted without interruption (non-preemptive mode). Whitehead <ref> [20] </ref> considered the case when messages can 4 be sent indirectly. The preemptive version of these problems as well as other generalizations were studied by Choi and Hakimi ([4], [5], [3]), Hajek and Sasaki [13], Gopal, Bongiovanni, Bonuccelli, Tang, and Wong [11].
References-found: 20

