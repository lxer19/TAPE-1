URL: ftp://ftp.wins.uva.nl/pub/computer-systems/aut-sys/reports/DorSme91.ps.gz
Refering-URL: http://www.fwi.uva.nl/research/neuro/publications/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Discrete Straight Line Segments: Parameters, Primitives and Properties  
Author: Leo Dorst and Arnold W.M. Smeulders 
Address: NY, USA,  Amsterdam, Amsterdam, The Netherlands.  
Affiliation: Philips Laboratories, North American Philips Corporation, Briarcliff Manor,  Dept. of Computer Systems, University of  
Abstract: Digitizing the continuous world unavoidably looses information; as a consequence, geometrical properties of real-world objects can only be estimated from the digital data. For continuous straight lines and straight object boundaries, we show the best accuracy that can be reached in the estimation of length (and other properties), in the absence of noise. In the process, we give an analytical expression for the set of continuous pre-images of a digitized straight line segment. That fundamental result has found many applications in analyses of geometrical digitization processes; several of these are indicated, as well as recent extensions of the method to arbitrary objects.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T.A. Anderson and C.E. Kim, </author> <title> Representation of Digital Line Segments and their Preimages, </title> <booktitle> Computer Vision and Image Processing, </booktitle> <address> Vol.30, pp.279-288, </address> <year> 1985. </year>
Reference-contexts: In digitial image analysis, one digitizes the image before measuring; by means of a camera and a digitizer, the object is represented in a discrete array as a function g (i; j), which may assume values in the continuous range <ref> [0; 1] </ref> (when properly scaled) due to the imperfections of optics and digitization. From this function, we have to derive a good estimate of the circumference exact measurement has become impossible. <p> These linearity conditions can be checked incrementally, leading to an O (n) decomposition of arbitrary strings into straight substrings [24]. Another way of checking straightness is by means of the `chord property', see for instance <ref> [1] </ref>. 3 3 Parameters The chaincode string representation is not convenient for use in estimation; formulas for estimators do not take strings as input, but numbers characterizing the string. As an example, the length estimator given in the introduction was based on the number of odd and even chaincodes. <p> Anderson and Kim <ref> [1] </ref> give a chord-property-based algorithm that computes the `pre-images' of discretized straight lines; these pre-images are, of course, the domains. Their algorithm uses a convex hull determination as one of its subroutines; this is an O (n) algorithm.
Reference: [2] <author> A.L.D. Beckers and A.W.M. Smeulders, </author> <title> The Probability of a Random Straight Line in Two and Three Dimensions, </title> <journal> Pattern Recognition Letters, vol.11, </journal> <volume> pp.233-240, </volume> <year> 1990. </year>
Reference-contexts: Then we introduce and discuss a different type of estimator, important for fast measurement: the simple length estimators. 4 A linear estimator is is a linear combination of values of the function f (`) over some range of `. 5 In <ref> [2] </ref>, the distribution in polar parameters is derived from first principles, for lines in R 2 and R 3 . 8 6.1 (n)-characterization For this characterization, the MPO length estimator is given by g MPO (n) = n: (14) The BLUEstimator is g BLUE (n) = p (see [9]).
Reference: [3] <editor> C.A. Berenstein, L.N. Kanal, D. Lavine, </editor> <title> A Geometric Approach to Subpixel Registration Accuracy, Computer Vision, Graphics and Image Processing, Vol.40, </title> <type> No.3, </type> <institution> pp.334-360, </institution> <year> 1987. </year>
Reference-contexts: , p = d q e d tp+1 The first proof of this theorem, published in [5], was performed in (x; y)-space, and quite lengthy; McIlroy [22] gave a much shorter proof in (b; a)-space, using `Farey-fans'; this inspired an improved proof in [7]; yet another proof is given in <ref> [3] </ref>. Anderson and Kim [1] give a chord-property-based algorithm that computes the `pre-images' of discretized straight lines; these pre-images are, of course, the domains. Their algorithm uses a convex hull determination as one of its subroutines; this is an O (n) algorithm. <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy <ref> [3, 14, 15] </ref>; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length.
Reference: [4] <author> C.A. Berenstein and D.Lavine, </author> <title> On the Number of Digital Straight Line Segments, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. </volume> <pages> PAMI-10, </pages> <address> No.6, pp.880-887, </address> <year> 1988. </year>
Reference-contexts: We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results <ref> [21, 4] </ref>, for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length.
Reference: [5] <author> L. Dorst and A.W.M. Smeulders, </author> <title> Discrete Representation of Straight Lines, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. </volume> <pages> PAMI-6, </pages> <address> pp.460-462, </address> <year> 1984. </year>
Reference-contexts: same tuple (n e ; n o ; n c ) if and only if they have the same discrete points at the four columns i = 0; 1; (n 1); n. 3.4 (n; q; p; s)-characterization The (n; q; p; s)-characterization is a 4-tuple of parameters first introduced in <ref> [5] </ref>. <p> This fraction is not sufficient to determine the chaincode string, since it is only related to a. The parameter s is a `phase shift' of the standard string of the fraction p q , to account for the effect of the intercept b. For a proof, see <ref> [5, 7] </ref>. By eq.(7), strings with the same tuple (n; q; p; s) are necessarily the same string. Such a characterization with a invertible correspondence between tuple and string is called a faithful characterization. <p> The expressions for C 1 T 1 (n e ; n o ; n c ) were first given in [26]. The expressions for C 1 T 1 (n; q; p; s) were first given in <ref> [5] </ref> and are derived more directly in [22], where they are called `facets'. Fig.2 plots the regions for all strings with n = 6 consisting of codes 0 and 1, in the four characterizations introduced in Section 3. <p> We call these equivalence classes domains (McIlroy [22] calls them `facets', Havelock [14, 15] `locales'). Each string has its own domain. These domains are so fundamental in the study of discrete straight lines that it is worth repeating the theorem derived in <ref> [5] </ref>, giving their analytical expressions: The Domain Theorem In object boundary quantization, C 1 T 1 (n; q; p; s) is given by 1) q &lt; a &lt; q + ( q e sa b &lt; d q e L (t)a if p p + d q e L (s)a b <p> b &lt; d tp+1 p q where t is implicitly defined by tp = (sp1) mod q, and where L (x) = x+b nx q c, p + = d q e q e , p = d q e d tp+1 The first proof of this theorem, published in <ref> [5] </ref>, was performed in (x; y)-space, and quite lengthy; McIlroy [22] gave a much shorter proof in (b; a)-space, using `Farey-fans'; this inspired an improved proof in [7]; yet another proof is given in [3]. <p> It should be emphasized that these results apply only to strings that are the digitization of straight lines (so-called `straight strings'); interpreting them to arbitrary curves should be done with care (see [9]). 7 Extensions of the Framework The faithful characterization of straight strings, first published in <ref> [5] </ref>, has been used by many to derive additional results on digitized straight lines. Also, our method of finding primitive `domains' on which estimators are computed has been applied to different digitized curves. <p> For digitized straight lines, those calculations have been done exactly in [6] and in more detail in Berenstein et al.[3]; the latter also contains an alternative proof of the Domain Theorem of <ref> [5] </ref> (eq.(8)). A first analytical treatment of lines and planes in three dimensions is given by Forchhammer [10], along the lines of our method, with an interesting application to the processing of half-tone pictures.
Reference: [6] <author> L. Dorst and R.P.W. Duin, </author> <title> Spirograph Theory, a Framework for Calculations on Digitized Straight Lines, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. </volume> <pages> PAMI-6, </pages> <address> No.5, pp.632-639, </address> <year> 1984. </year>
Reference-contexts: These are directly related to number-theoretical issues in the approximation of real numbers by rational numbers, see <ref> [6, 28] </ref>. These linearity conditions can be checked incrementally, leading to an O (n) decomposition of arbitrary strings into straight substrings [24]. <p> 3 2 Lindenbaum and Koplowitz [21] later derived a set of 4 characterizing parameters on the basis of nontrivial linear dichotomies of the discrete plane; they proved the equivalence to (n; q; p; s). 3 There are interesting relations between these domains and the approximation of reals by rationals (see <ref> [6, 22] </ref>). 5 characterization, b) (n e ; n o )-characterization , c) (n e ; n o ; n c )-characterization , d) (n,q,p,s)c. 6 7 5 Properties Denote the property of ` to be estimated by f (`), and the estimator by g (t). <p> Also, our method of finding primitive `domains' on which estimators are computed has been applied to different digitized curves. We discuss these new developments briefly. relative to the contour to be measured! (see <ref> [6] </ref>) 12 7.1 The Number of Digitized Straight Line Segments The number of straight strings consisting of n chaincodes 0 and 1 can be computed easily from the Domain Theorem of eq.(8) and some number theory. <p> These principles can be used to achieve subpixel accuracy in the geometric registration of arbitrary figures, see Havelock's thesis [15]. For digitized straight lines, those calculations have been done exactly in <ref> [6] </ref> and in more detail in Berenstein et al.[3]; the latter also contains an alternative proof of the Domain Theorem of [5] (eq.(8)).
Reference: [7] <author> L. Dorst, </author> <title> Discrete Straight Line Segments: Parameters, Primitives and Properties, </title> <type> Ph.D. Thesis, </type> <institution> Technological University Delft, </institution> <year> 1986. </year>
Reference-contexts: The boundary is digitized by the procedure sketched in the introduction: integration over the sensitivity region of a discretization point, then thresholding. It can be shown <ref> [7] </ref> that for symmetrical sensitivity regions this leads to the discrete boundary points given by: (i; y i ) = (i; bai + bc): (3) Here b:c indicates the floor function, or `rounding down'. This method is also known as `object boundary quantization', or OBQ. <p> This fraction is not sufficient to determine the chaincode string, since it is only related to a. The parameter s is a `phase shift' of the standard string of the fraction p q , to account for the effect of the intercept b. For a proof, see <ref> [5, 7] </ref>. By eq.(7), strings with the same tuple (n; q; p; s) are necessarily the same string. Such a characterization with a invertible correspondence between tuple and string is called a faithful characterization. <p> These sets are conveniently expressed in the parametrization ` = (b; a) for a given n. Expressions for the sets C 1 T 1 t (also called `regions') are given in <ref> [7] </ref>. In (b; a)-space, they are collections of quadrilaterals. For the (n)-characterization and the (n e ; n o )-characterization these can be found easily. The expressions for C 1 T 1 (n e ; n o ; n c ) were first given in [26]. <p> + = d q e q e , p = d q e d tp+1 The first proof of this theorem, published in [5], was performed in (x; y)-space, and quite lengthy; McIlroy [22] gave a much shorter proof in (b; a)-space, using `Farey-fans'; this inspired an improved proof in <ref> [7] </ref>; yet another proof is given in [3]. Anderson and Kim [1] give a chord-property-based algorithm that computes the `pre-images' of discretized straight lines; these pre-images are, of course, the domains. Their algorithm uses a convex hull determination as one of its subroutines; this is an O (n) algorithm. <p> In formula g MPO (t) = f (argmaxfp (`)j` 2 C 1 T 1 tg); (10) where argmaxfp (`)g indicates the value of ` maximizing p (`) in the given range. In <ref> [7] </ref> different types of estimators are treated, obeying different optimality criteria. In [8], BLUE and MPO estimators are developed for arbitrary properties of straight line segments. <p> The probability density of random lines in R 2 is uniform in polar parameters 5 , which is transformed to the parameters a and b as (see <ref> [7] </ref>) p (b; a; n) = 2 (1 + a 2 ) 3=2 : (12) In this Section, we develop estimators for this property. <p> Many length estimators can be developed (see <ref> [7] </ref>); here we consider the MPO- and BLUE- estimators, ordered by characterization. <p> Surprisingly, and as we will see in Section 6.4, it is not the most accurate length estimator! It can be shown that the asymptotic behavior of the accuracy as measured by RDEV is O (n 1 ) (see <ref> [7] </ref>). The BLUEstimator for the (n e ; n o )-characterization is more complicated. For convenience, let us put n = n e + n o and m = n o . <p> A better order than this is impossible for any estimator based on the (n e ; n o )-characterization (see <ref> [7] </ref>). 6.3 (n e ; n o ; n c )-characterization The MPO length estimator for the (n e ; n o ; n c )-characterization has not been computed, due to the complex form of the regions. <p> The asymptotic order can be computed, though, and is found to be O (n 1 ) (see <ref> [7] </ref>). The BLUEstimator was first computed in [26]. The resulting formulas are rather involved and are not repeated here. The asymptotic accuracy is O (n 1 ). 6.4 (n; q; p; s)-characterization The MPO-estimator for the (n; q; p; s)-characterization is simply (see [7]) g MPO (n; q; p; s) = <p> to be O (n 1 ) (see <ref> [7] </ref>). The BLUEstimator was first computed in [26]. The resulting formulas are rather involved and are not repeated here. The asymptotic accuracy is O (n 1 ). 6.4 (n; q; p; s)-characterization The MPO-estimator for the (n; q; p; s)-characterization is simply (see [7]) g MPO (n; q; p; s) = n 1 + ( q This is independent of s (because the original f in eq.(1) is independent of b). 9 estimator RDEV (g (t); 1) L 0 (n) = 1:000n 16 % L G (n e ; n o ) = 1:059n <p> The result is N = 2 + O (n 2 log n): (20) This result is given in <ref> [7] </ref>; a different derivation and considerations on refined estimates can be found in Berenstein et al.[4]; Lindenbaum and Koplowitz [20] use their own derivation of the same result, based on a characterization in [21] which is equivalent to the faithful (n; q; p; s)-characterization. 7.2 Data Compression and Conversion We have <p> It was argued in <ref> [7] </ref> that this could not be done in general without making some assumptions about the original curve. The recognition problem for the digitization of linear combinations of linearly independent functions is treated in Werman et al.[27], with special attention to polynomials. <p> This result, in eq.(8) and depicted in Fig.3, is central to the study of digitization of straight lines, and has led to an 8 We have run some experiments to assess the performance of the length estimators designed for straight strings on non-straight strings. The results are reported in <ref> [7] </ref> and [9]. The surprising finding is that the simple length estimator L K (n e ; n o ), which was designed for straight lines, is a consistent estimator for the length of large circular arcs of =8 radians. <p> As a consequence, this estimator performs very well on the perimeter estimation of circles and circle-like objects. 13 avalanche of further results. We have used it to derive optimal estimators for arbitrary properties <ref> [7, 8] </ref>, and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. <p> The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. We succeeded in computing those; they are given in Sections 5 and 6 (for properties other than length, results can be found in <ref> [7, 8] </ref>). The explanation for observed different asymptotic behaviors of the length estimators is the characterization of the string used.
Reference: [8] <author> L. Dorst and A.W.M. Smeulders, </author> <title> Best Linear Unbiased Estimators for Properties of Digitized Straight Lines, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. PAMI-8, </volume> <pages> No.2, </pages> <address> pp.276-282, </address> <year> 1986. </year>
Reference-contexts: This is equivalent to (proof in <ref> [8] </ref>) g BLUE (t) = Z f (`)p (`)d`; (9) where p (`) is the probability density of lines. <p> In formula g MPO (t) = f (argmaxfp (`)j` 2 C 1 T 1 tg); (10) where argmaxfp (`)g indicates the value of ` maximizing p (`) in the given range. In [7] different types of estimators are treated, obeying different optimality criteria. In <ref> [8] </ref>, BLUE and MPO estimators are developed for arbitrary properties of straight line segments. <p> The former approximates a by an irreducible fraction with denominator between 1 and n, of which there are O (n 2 ) (see [13]). 6 The BLUEstimator for the (n; q; p; s)-characterization was given in <ref> [8] </ref>. As with the BLUEstimator for the (n e ; n o ; n c )-characterization , the expressions are involved (in fact very similar!) and are not repeated here. <p> As a consequence, this estimator performs very well on the perimeter estimation of circles and circle-like objects. 13 avalanche of further results. We have used it to derive optimal estimators for arbitrary properties <ref> [7, 8] </ref>, and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. <p> The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. We succeeded in computing those; they are given in Sections 5 and 6 (for properties other than length, results can be found in <ref> [7, 8] </ref>). The explanation for observed different asymptotic behaviors of the length estimators is the characterization of the string used.
Reference: [9] <author> L.Dorst and A.W.M. Smeulders, </author> <title> Length Estimators for Digitized Contours, </title> <booktitle> Computer Vision, Graphics and Image Processing, </booktitle> <address> Vol.40, pp.311-333, </address> <year> 1987. </year>
Reference-contexts: The results of the separate steps in this study have been published in [5]-[8], and an overview for length estimation has been given <ref> [9] </ref>. In the present paper we explain our main results and their relationships, and discuss extensions of the work given since by others. <p> 5 In [2], the distribution in polar parameters is derived from first principles, for lines in R 2 and R 3 . 8 6.1 (n)-characterization For this characterization, the MPO length estimator is given by g MPO (n) = n: (14) The BLUEstimator is g BLUE (n) = p (see <ref> [9] </ref>). For both estimators, the error RDEV tends to a constant as n ! 1. This implies that the estimation does not get more accurate than some fixed accuracy, even when the sampling density becomes infinite. <p> The simple estimators considered are given in Fig.4. L F was first given by Freeman [11], L G by Groen [12], L K by Kulpa [19] and L C by Vossepoel and Smeulders [26]. More on the historical development can be found in <ref> [9] </ref>. Recently, Koplowitz and Bruckstein [17] have given a design method for simple estimators based on arbitrary local string properties. Note that L 0 (n) = g MPO (n) and L 1 (n) = g BLUE (n). <p> Asymptotic accuracy 0:46n 3 2 . It should be emphasized that these results apply only to strings that are the digitization of straight lines (so-called `straight strings'); interpreting them to arbitrary curves should be done with care (see <ref> [9] </ref>). 7 Extensions of the Framework The faithful characterization of straight strings, first published in [5], has been used by many to derive additional results on digitized straight lines. Also, our method of finding primitive `domains' on which estimators are computed has been applied to different digitized curves. <p> The results are reported in [7] and <ref> [9] </ref>. The surprising finding is that the simple length estimator L K (n e ; n o ), which was designed for straight lines, is a consistent estimator for the length of large circular arcs of =8 radians.
Reference: [10] <author> S. Forchhammer, </author> <title> Digital Plane and Grid Point Segments, </title> <booktitle> Computer Vision, Graphics and Image Processing, </booktitle> <address> Vol.47, pp.373-384, </address> <year> 1989. </year>
Reference-contexts: For digitized straight lines, those calculations have been done exactly in [6] and in more detail in Berenstein et al.[3]; the latter also contains an alternative proof of the Domain Theorem of [5] (eq.(8)). A first analytical treatment of lines and planes in three dimensions is given by Forchhammer <ref> [10] </ref>, along the lines of our method, with an interesting application to the processing of half-tone pictures. <p> Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes <ref> [10, 25, 27] </ref>. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. We succeeded in computing those; they are given in Sections 5 and 6 (for properties other than length, results can be found in [7, 8]). <p> We believe that with the computation of the domains (pre-images) and their properties, noise-free digitized straight lines are now very well understood. The methods used give a direction for the treatment of arbitrary curves, as shown by recent work <ref> [10, 14, 15, 25] </ref>. For shapes with noise, Havelock's theory on `locales' (generalized domains) and their statistical properties looks promising.
Reference: [11] <author> H. Freeman, </author> <title> Boundary Encoding and Processing, In: Picture Processing and Psychopictorics (B.S. </title> <editor> Lipkin and A. Rosenfeld, eds.), </editor> <publisher> Academic Press, </publisher> <address> New York, pp.241-266, </address> <year> 1970. </year>
Reference-contexts: But we will see that the solution of this problem points to ways to solve the general problem. We focus mainly on the calculation of estimators for the length of a digitized straight line segment. Prior to our study, various length measures had been published. Those of <ref> [11] </ref>, [12], [19] were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. <p> We focus mainly on the calculation of estimators for the length of a digitized straight line segment. Prior to our study, various length measures had been published. Those of <ref> [11] </ref>, [12], [19] were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. <p> Thus all discrete line segments with the same endpoints have the same tuple (n e ; n o ). Moreover, there are non-straight strings between the endpoints that also have the same tuple (namely all strings with only chaincode elements 0 and 1). This characterization avant-la-lettre was used in <ref> [11, 12, 19] </ref>. 3.3 (n e ; n o ; n c )-characterization The parameters n e and n o have the same meaning as before. The parameter n c is the `corner count', defined as the number of occurrences in the string where c i 6= c i1 . <p> The optimal coefficients in the linear function are to be determined by an optimization criterion, for which we use minimization of the mean square error over all ` 2 C 1 T 1 (t). The simple estimators considered are given in Fig.4. L F was first given by Freeman <ref> [11] </ref>, L G by Groen [12], L K by Kulpa [19] and L C by Vossepoel and Smeulders [26]. More on the historical development can be found in [9]. Recently, Koplowitz and Bruckstein [17] have given a design method for simple estimators based on arbitrary local string properties.
Reference: [12] <author> F.C.A. Groen and P.W. </author> <title> Verbeek, Freeman Code Propbabilities of Object Boundary Quantized Contours, </title> <booktitle> Computer Graphics and Image Processing, </booktitle> <address> Vol.7, pp.391-402, </address> <year> 1978. </year>
Reference-contexts: But we will see that the solution of this problem points to ways to solve the general problem. We focus mainly on the calculation of estimators for the length of a digitized straight line segment. Prior to our study, various length measures had been published. Those of [11], <ref> [12] </ref>, [19] were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. <p> Prior to our study, various length measures had been published. Those of [11], <ref> [12] </ref>, [19] were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. Later, Koplowitz [16] computed the probability of odd and even codes for arbitrary digitization schemes and curving contours, leading to generalized coefficients. <p> This method is also known as `object boundary quantization', or OBQ. Another common method of digitization, used for lines rather than for boundaries, is `grid intersection quantization' (GIQ) <ref> [12] </ref>, which codes the grid points closest to intersections of the boundary line with the grid. This gives the points (i; y 0 where [:] indicates the rounding-off function. <p> Thus all discrete line segments with the same endpoints have the same tuple (n e ; n o ). Moreover, there are non-straight strings between the endpoints that also have the same tuple (namely all strings with only chaincode elements 0 and 1). This characterization avant-la-lettre was used in <ref> [11, 12, 19] </ref>. 3.3 (n e ; n o ; n c )-characterization The parameters n e and n o have the same meaning as before. The parameter n c is the `corner count', defined as the number of occurrences in the string where c i 6= c i1 . <p> The simple estimators considered are given in Fig.4. L F was first given by Freeman [11], L G by Groen <ref> [12] </ref>, L K by Kulpa [19] and L C by Vossepoel and Smeulders [26]. More on the historical development can be found in [9]. Recently, Koplowitz and Bruckstein [17] have given a design method for simple estimators based on arbitrary local string properties.
Reference: [13] <author> G.H. Hardy and E.M. Wright, </author> <title> An introduction to the theory of numbers, </title> <booktitle> Oxford, 5th edition, </booktitle> <year> 1979. </year> <month> 14 </month>
Reference-contexts: The former approximates a by an irreducible fraction with denominator between 1 and n, of which there are O (n 2 ) (see <ref> [13] </ref>). 6 The BLUEstimator for the (n; q; p; s)-characterization was given in [8]. As with the BLUEstimator for the (n e ; n o ; n c )-characterization , the expressions are involved (in fact very similar!) and are not repeated here.
Reference: [14] <author> D.I. Havelock, </author> <title> Geometric Precision in Digital Images, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. </volume> <publisher> PAMI-11, No.10, pp.1065-1075. </publisher>
Reference-contexts: Since the (n; q; p; s)-characterization is a faithful characterization, the regions of this characterization are the equivalence classes of lines still distinguishable after digitization. We call these equivalence classes domains (McIlroy [22] calls them `facets', Havelock <ref> [14, 15] </ref> `locales'). Each string has its own domain. <p> They plan to extend their work with the computation of the optimal estimators, which could be stored in lookup tables for practical use. 8 Havelock <ref> [14] </ref> suggests that we may not want to determine the generalized domains (he calls them `locales') exactly, but that a statistical knowledge of their properties is sufficient for metrology. These principles can be used to achieve subpixel accuracy in the geometric registration of arbitrary figures, see Havelock's thesis [15]. <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy <ref> [3, 14, 15] </ref>; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. <p> We believe that with the computation of the domains (pre-images) and their properties, noise-free digitized straight lines are now very well understood. The methods used give a direction for the treatment of arbitrary curves, as shown by recent work <ref> [10, 14, 15, 25] </ref>. For shapes with noise, Havelock's theory on `locales' (generalized domains) and their statistical properties looks promising.
Reference: [15] <author> D.I. Havelock, </author> <title> High Precision Position Estimation in Digital Image Metrology, </title> <type> Ph.D. Thesis, </type> <institution> Carleton Univ. Dept. Syst. Eng. Comput. Sci., </institution> <address> Ottawa, Canada, </address> <year> 1989. </year>
Reference-contexts: Since the (n; q; p; s)-characterization is a faithful characterization, the regions of this characterization are the equivalence classes of lines still distinguishable after digitization. We call these equivalence classes domains (McIlroy [22] calls them `facets', Havelock <ref> [14, 15] </ref> `locales'). Each string has its own domain. <p> These principles can be used to achieve subpixel accuracy in the geometric registration of arbitrary figures, see Havelock's thesis <ref> [15] </ref>. For digitized straight lines, those calculations have been done exactly in [6] and in more detail in Berenstein et al.[3]; the latter also contains an alternative proof of the Domain Theorem of [5] (eq.(8)). <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy <ref> [3, 14, 15] </ref>; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. <p> We believe that with the computation of the domains (pre-images) and their properties, noise-free digitized straight lines are now very well understood. The methods used give a direction for the treatment of arbitrary curves, as shown by recent work <ref> [10, 14, 15, 25] </ref>. For shapes with noise, Havelock's theory on `locales' (generalized domains) and their statistical properties looks promising.
Reference: [16] <author> J. Koplowitz, </author> <title> On the Performance of Chain Codes for Quantization of Line Drawings, </title> <journal> IEEE Transactions Pattern Analysis and Machine Intelligence, Vol.PAMI-3, No.2, </journal> <volume> pp.180-185, </volume> <year> 1981. </year>
Reference-contexts: Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. Later, Koplowitz <ref> [16] </ref> computed the probability of odd and even codes for arbitrary digitization schemes and curving contours, leading to generalized coefficients.
Reference: [17] <author> J. Koplowitz, </author> <title> A.M. Bruckstein, Design of Perimeter Estimators for Digitized Planar Shapes, </title> <journal> IEEE Transactions Pattern Analysis and Machine Intelligence, vol.PAMI-11, </journal> <volume> no.6, </volume> <year> 1989, </year> <month> pp.611-622. </month>
Reference-contexts: In the present paper we explain our main results and their relationships, and discuss extensions of the work given since by others. An alternative way of extending Vossepoel and Smeulders [26] was followed by Koplowitz and Bruckstein <ref> [17] </ref>, who computed length estimators based on linear combinations of arbitrary local properties. We will not discuss that extension here; the interested reader is referred to [17]. This paper is organized as follows. <p> An alternative way of extending Vossepoel and Smeulders [26] was followed by Koplowitz and Bruckstein <ref> [17] </ref>, who computed length estimators based on linear combinations of arbitrary local properties. We will not discuss that extension here; the interested reader is referred to [17]. This paper is organized as follows. In Section 2 and 3 describe digitized line segments, and develop several characterizations of them by means of parameters. Section 4 describes the inverse process, of finding the primitives, given the parameters. <p> The simple estimators considered are given in Fig.4. L F was first given by Freeman [11], L G by Groen [12], L K by Kulpa [19] and L C by Vossepoel and Smeulders [26]. More on the historical development can be found in [9]. Recently, Koplowitz and Bruckstein <ref> [17] </ref> have given a design method for simple estimators based on arbitrary local string properties. Note that L 0 (n) = g MPO (n) and L 1 (n) = g BLUE (n). <p> There is an alternative to developing more accurate estimators for arbitrary strings through the domains, and that is to augment the simple estimators to take into account more local properties of the chaincode string. This approach is taken by <ref> [17] </ref> and leads to quite accurate and easily computable estimators. 8 Conclusions The main result of our research is the inversion of the digitization process for straight lines.
Reference: [18] <author> J. Koplowitz, A.P. Sundar Raj, </author> <title> A Robust Filtering Algorithm for Subpixel Reconstruction of Chain Coded Line Drawings, </title> <journal> IEEE Transactions Pattern Analysis and Machine Intelligence, vol.PAMI-9, </journal> <volume> no.3, </volume> <year> 1987, </year> <month> pp.451-457. </month>
Reference-contexts: Anderson and Kim [1] give a chord-property-based algorithm that computes the `pre-images' of discretized straight lines; these pre-images are, of course, the domains. Their algorithm uses a convex hull determination as one of its subroutines; this is an O (n) algorithm. Koplowitz and Sundar Raj <ref> [18] </ref> use the convex hull construction in a non-linear filtering algorithm on chaincode strings, for accurate reconstruction of arbitrary curves.
Reference: [19] <author> Z. Kulpa, </author> <title> Area and Perimeter Measurement of Blobs in Discrete Binary Pictures, </title> <booktitle> Computer Vision and Image Processing, </booktitle> <address> Vol.6, pp.434-454, </address> <year> 1977. </year>
Reference-contexts: But we will see that the solution of this problem points to ways to solve the general problem. We focus mainly on the calculation of estimators for the length of a digitized straight line segment. Prior to our study, various length measures had been published. Those of [11], [12], <ref> [19] </ref> were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. <p> Prior to our study, various length measures had been published. Those of [11], [12], <ref> [19] </ref> were of the form L = an e + bn o . Freeman [11] used the intuitive but inaccurate (a; b) = (1; p 2); Groen and Verbeek [12] and Kulpa [19] calculated the coefficients by a statistical analysis over all digitized straight lines. Later, Koplowitz [16] computed the probability of odd and even codes for arbitrary digitization schemes and curving contours, leading to generalized coefficients. <p> Thus all discrete line segments with the same endpoints have the same tuple (n e ; n o ). Moreover, there are non-straight strings between the endpoints that also have the same tuple (namely all strings with only chaincode elements 0 and 1). This characterization avant-la-lettre was used in <ref> [11, 12, 19] </ref>. 3.3 (n e ; n o ; n c )-characterization The parameters n e and n o have the same meaning as before. The parameter n c is the `corner count', defined as the number of occurrences in the string where c i 6= c i1 . <p> The simple estimators considered are given in Fig.4. L F was first given by Freeman [11], L G by Groen [12], L K by Kulpa <ref> [19] </ref> and L C by Vossepoel and Smeulders [26]. More on the historical development can be found in [9]. Recently, Koplowitz and Bruckstein [17] have given a design method for simple estimators based on arbitrary local string properties.
Reference: [20] <author> M. Lindenbaum and J. Koplowitz, </author> <title> Compression of Chain Codes Using Digital Straight Line Sequences, </title> <journal> Pattern Recognition Letters, vol.9, </journal> <volume> pp.167-171, </volume> <year> 1988. </year>
Reference-contexts: The result is N = 2 + O (n 2 log n): (20) This result is given in [7]; a different derivation and considerations on refined estimates can be found in Berenstein et al.[4]; Lindenbaum and Koplowitz <ref> [20] </ref> use their own derivation of the same result, based on a characterization in [21] which is equivalent to the faithful (n; q; p; s)-characterization. 7.2 Data Compression and Conversion We have used the domains to describe the digitization process, so as to find the pre-images of digitized straight lines. <p> In an interesting inversion, McIlroy [22] uses the domains to rapidly determine the digitization of the line y = ax + b. Lindenbaum and Koplowitz <ref> [20] </ref> suggest to code arbitrary strings by straight substrings, whose representation is stored in a table. <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression <ref> [20, 22] </ref>, and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length.
Reference: [21] <author> M. Lindenbaum and J. Koplowitz, </author> <title> A New Parametrization of Digital Straight Lines, </title> <type> EE report, </type> <institution> Technion Israel Institute of Technology, Haifa, Israel, </institution> <year> 1989. </year>
Reference-contexts: The domains for all strings of 6 or fewer elements are depicted in Fig.3; compare the figure for n = 6 with Fig.2d. 3 2 Lindenbaum and Koplowitz <ref> [21] </ref> later derived a set of 4 characterizing parameters on the basis of nontrivial linear dichotomies of the discrete plane; they proved the equivalence to (n; q; p; s). 3 There are interesting relations between these domains and the approximation of reals by rationals (see [6, 22]). 5 characterization, b) (n <p> result is N = 2 + O (n 2 log n): (20) This result is given in [7]; a different derivation and considerations on refined estimates can be found in Berenstein et al.[4]; Lindenbaum and Koplowitz [20] use their own derivation of the same result, based on a characterization in <ref> [21] </ref> which is equivalent to the faithful (n; q; p; s)-characterization. 7.2 Data Compression and Conversion We have used the domains to describe the digitization process, so as to find the pre-images of digitized straight lines. <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results <ref> [21, 4] </ref>, for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length.
Reference: [22] <author> M.D. McIlroy, </author> <title> A Note on Discrete Representation of Lines, </title> <journal> AT&T Technical Journal, Vol.64, No.2, </journal> <year> 1985. </year>
Reference-contexts: The expressions for C 1 T 1 (n e ; n o ; n c ) were first given in [26]. The expressions for C 1 T 1 (n; q; p; s) were first given in [5] and are derived more directly in <ref> [22] </ref>, where they are called `facets'. Fig.2 plots the regions for all strings with n = 6 consisting of codes 0 and 1, in the four characterizations introduced in Section 3. <p> Since the (n; q; p; s)-characterization is a faithful characterization, the regions of this characterization are the equivalence classes of lines still distinguishable after digitization. We call these equivalence classes domains (McIlroy <ref> [22] </ref> calls them `facets', Havelock [14, 15] `locales'). Each string has its own domain. <p> defined by tp = (sp1) mod q, and where L (x) = x+b nx q c, p + = d q e q e , p = d q e d tp+1 The first proof of this theorem, published in [5], was performed in (x; y)-space, and quite lengthy; McIlroy <ref> [22] </ref> gave a much shorter proof in (b; a)-space, using `Farey-fans'; this inspired an improved proof in [7]; yet another proof is given in [3]. Anderson and Kim [1] give a chord-property-based algorithm that computes the `pre-images' of discretized straight lines; these pre-images are, of course, the domains. <p> 3 2 Lindenbaum and Koplowitz [21] later derived a set of 4 characterizing parameters on the basis of nontrivial linear dichotomies of the discrete plane; they proved the equivalence to (n; q; p; s). 3 There are interesting relations between these domains and the approximation of reals by rationals (see <ref> [6, 22] </ref>). 5 characterization, b) (n e ; n o )-characterization , c) (n e ; n o ; n c )-characterization , d) (n,q,p,s)c. 6 7 5 Properties Denote the property of ` to be estimated by f (`), and the estimator by g (t). <p> In an interesting inversion, McIlroy <ref> [22] </ref> uses the domains to rapidly determine the digitization of the line y = ax + b. Lindenbaum and Koplowitz [20] suggest to code arbitrary strings by straight substrings, whose representation is stored in a table. <p> We have used it to derive optimal estimators for arbitrary properties [7, 8], and to compare length estimators ([9], Section 6). Others have used it for further theoretical results [21, 4], for data compression <ref> [20, 22] </ref>, and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes [10, 25, 27]. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length.
Reference: [23] <author> P.A.P. Moran, </author> <title> Measuring the Length of a Curve, </title> <journal> Biometrika 1966, </journal> <note> vol.53, no.3 and 4, pp.359-364. </note>
Reference-contexts: The goal is to measure the length of the perimeter of the disk. In microscopy, one might do so by projecting a grid onto the disk, in several directions, and counting the intersections of the contour with the grid. Moran <ref> [23] </ref> gives the procedure to convert this to an unbiased estimate of the perimeter length.
Reference: [24] <author> A.W.M. Smeulders and L. Dorst, </author> <title> Decomposition of Discrete Curves into Piecewise Straight Segments in Linear Time, elsewhere in this volume. </title>
Reference-contexts: These are directly related to number-theoretical issues in the approximation of real numbers by rational numbers, see [6, 28]. These linearity conditions can be checked incrementally, leading to an O (n) decomposition of arbitrary strings into straight substrings <ref> [24] </ref>. Another way of checking straightness is by means of the `chord property', see for instance [1]. 3 3 Parameters The chaincode string representation is not convenient for use in estimation; formulas for estimators do not take strings as input, but numbers characterizing the string.
Reference: [25] <author> A.W.M. Smeulders and M. Worring, </author> <title> Accurate Measurement of Shape at Low Resolution, in: </title> <journal> Pattern Recognition and Artificial Intelligence, </journal> <note> E.S. </note> <editor> Gelsema and L.N. Kanal, eds., </editor> <publisher> Elsevier Science Publishers, </publisher> <year> 1988, </year> <note> pp.91-102. In preparation is: </note> <author> M. Worring and A.W.M. Smeulders, </author> <title> Optimal Curvature Estimation in Noise-Free Digital Images. </title>
Reference-contexts: It was argued in [7] that this could not be done in general without making some assumptions about the original curve. The recognition problem for the digitization of linear combinations of linearly independent functions is treated in Werman et al.[27], with special attention to polynomials. Smeulders and Worring <ref> [25] </ref> compute the pre-images of curves that are bounded in curvature; this obviously also solves the inversion of digitization for circular arcs. <p> Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes <ref> [10, 25, 27] </ref>. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. We succeeded in computing those; they are given in Sections 5 and 6 (for properties other than length, results can be found in [7, 8]). <p> We believe that with the computation of the domains (pre-images) and their properties, noise-free digitized straight lines are now very well understood. The methods used give a direction for the treatment of arbitrary curves, as shown by recent work <ref> [10, 14, 15, 25] </ref>. For shapes with noise, Havelock's theory on `locales' (generalized domains) and their statistical properties looks promising.
Reference: [26] <author> A.M. Vossepoel and A.W.M. Smeulders, </author> <title> Vector Code Probability and Metrication Error in the Representation of Straight Lines of Finite Length, </title> <booktitle> Computer Graphics and Image Processing, </booktitle> <address> Vol.20, pp.347-364, </address> <year> 1982. </year>
Reference-contexts: Later, Koplowitz [16] computed the probability of odd and even codes for arbitrary digitization schemes and curving contours, leading to generalized coefficients. However, Vossepoel and Smeulders <ref> [26] </ref> realized that the number of odd and even codes is not a very accurate way of characterizing strings, and that one may not expect very accurate estimators from such characterizations. Therefore they extended the characterization by the `corner count' (the number of odd-even chaincode transitions in the string). <p> We realized that the most accurate length estimators for straight lines would be found by carrying through the main idea of <ref> [26] </ref>: find an invertible characterization of straight strings; then `invert the digitization process', computing the set of continuous straight lines that digitize to a given string; finally, use estimation theory to compute the optimal value for an estimator of the desired property (such as length) over that set. <p> In the present paper we explain our main results and their relationships, and discuss extensions of the work given since by others. An alternative way of extending Vossepoel and Smeulders <ref> [26] </ref> was followed by Koplowitz and Bruckstein [17], who computed length estimators based on linear combinations of arbitrary local properties. We will not discuss that extension here; the interested reader is referred to [17]. This paper is organized as follows. <p> The parameter n c is the `corner count', defined as the number of occurrences in the string where c i 6= c i1 . This characterization was first introduced by Vossepoel and Smeulders <ref> [26] </ref>, who also showed that straight strings have the same tuple (n e ; n o ; n c ) if and only if they have the same discrete points at the four columns i = 0; 1; (n 1); n. 3.4 (n; q; p; s)-characterization The (n; q; p; s)-characterization <p> In (b; a)-space, they are collections of quadrilaterals. For the (n)-characterization and the (n e ; n o )-characterization these can be found easily. The expressions for C 1 T 1 (n e ; n o ; n c ) were first given in <ref> [26] </ref>. The expressions for C 1 T 1 (n; q; p; s) were first given in [5] and are derived more directly in [22], where they are called `facets'. <p> The asymptotic order can be computed, though, and is found to be O (n 1 ) (see [7]). The BLUEstimator was first computed in <ref> [26] </ref>. The resulting formulas are rather involved and are not repeated here. <p> The simple estimators considered are given in Fig.4. L F was first given by Freeman [11], L G by Groen [12], L K by Kulpa [19] and L C by Vossepoel and Smeulders <ref> [26] </ref>. More on the historical development can be found in [9]. Recently, Koplowitz and Bruckstein [17] have given a design method for simple estimators based on arbitrary local string properties. Note that L 0 (n) = g MPO (n) and L 1 (n) = g BLUE (n).
Reference: [27] <author> M. Werman, A.Y. Wu, R.A. Melter, </author> <title> Recognition and Characterization of Digitized Curves, </title> <journal> Pattern Recognition Letters 5, </journal> <volume> pp.207-213, </volume> <year> 1987. </year>
Reference-contexts: Others have used it for further theoretical results [21, 4], for data compression [20, 22], and to achieve subpixel accuracy [3, 14, 15]; currently, the methods are being applied to other digitized shapes <ref> [10, 25, 27] </ref>. The motivation of our research in digitized straight line segments was the need for accurate estimates for their properties, notably their length. We succeeded in computing those; they are given in Sections 5 and 6 (for properties other than length, results can be found in [7, 8]).
Reference: [28] <author> L.-D. Wu, </author> <title> On the Chain Code of a Line, </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol.PAMI-4, No.3, </journal> <volume> pp.347-353, </volume> <year> 1982. </year> <month> 15 </month>
Reference-contexts: These are directly related to number-theoretical issues in the approximation of real numbers by rational numbers, see <ref> [6, 28] </ref>. These linearity conditions can be checked incrementally, leading to an O (n) decomposition of arbitrary strings into straight substrings [24].
References-found: 28

