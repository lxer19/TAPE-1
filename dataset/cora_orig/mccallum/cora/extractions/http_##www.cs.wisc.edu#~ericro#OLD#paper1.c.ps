URL: http://www.cs.wisc.edu/~ericro/OLD/paper1.c.ps
Refering-URL: http://www.cs.wisc.edu/~ericro/OLD/paper1.html
Root-URL: 
Title: Exploiting Parallelism Across Basic Blocks Via Decoupled Control Flow  
Abstract: Studies of instruction-level parallelism in programs indicate considerable parallelism across basic blocks that are far apart in the dynamic control ow of the program. We propose a novel architecture based on decoupled control ow to exploit this parallelism. A control processor coordinates and feeds basic blocks to two processing elements (PEs); several PEs can be coordinated via a hierarchy of control processors. The control processor dynamically examines the program dependence graph, and carries out the following functions: speculatively assigning basic blocks to PEs in nonsequential PE order so that when one PE is executing a long block, another PE can execute several subsequent blocks speculatively; upon a trap caused by incorrect speculation, early backout from the block without waiting for the branch to be resolved and execution of the alternate block; runtime exploitation of compiler generated control independence information to avoid undoing the execution of a control-independent basic block when a far away previous branch's speculation proves incorrect. We report a preliminary performance evaluation of a restricted conguration consisting of two 2-way superscalar PEs and a control processor and having only the ability to assign blocks to PEs in non-sequential PE order. We nd that this conguration provides signicant performance improvements (typically approx. 30% speedup) for ve of the six kernels and dominant program routines evaluated, over a two PE conguration that does not use a sophisticated control processor. Preliminary evaluation on one benchmark of the ability to exploit control independence shows an additional 10% improvement. We discuss how the control processor also enables the PEs to be used exibly to run independent processes. We outline a method of scaling up the conguration to multiple PEs by using a hierarchy of control processors. 
Abstract-found: 1
Intro-found: 1
References-found: 0

