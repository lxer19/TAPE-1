URL: http://drl.cs.uiuc.edu/pubs/Hughes-prelim.ps
Refering-URL: http://drl.cs.uiuc.edu/prototyping/
Root-URL: http://www.cs.uiuc.edu
Email: hughes@cs.uiuc.edu  
Title: An Abstract Model of Object-Oriented Databases with Application to Performance Evaluation for ECAD Tools  
Author: Eric Hughes 
Date: February 24, 1994  
Address: Urbana, IL 61801 USA  
Affiliation: Computer Science Department University of Illinois  
Abstract: This statement proposes a new method of performance evaluation of object-oriented database management systems which is based on an abstract model of OODBMSes. Under the proposed approach, an abstract model is used to describe applications in a way that is independent of the OODBMS. Such application descriptions can be used to generate test implementations, which are useful for performance evaluation of an OODBMS. The performance evaluations in this research will compare features of a single OODBMS rather than comparing OODBMSes. In the proposed research, performance evaluation based on real applications will be shown to be more useful than benchmarking for many common situations. In the preliminary results reported in this statement, a prototype system has been used to generate performance tests which give useful information for a test application. This work is motivated by electronic CAD applications, but the results may be applicable to other domains. 
Abstract-found: 1
Intro-found: 1
Reference: [AA92] <author> Robert Armstrong and Jonathan Allen. FICOM: </author> <title> A framework for incremental consistency maintenance in multi-representation, structural VLSI databases. </title> <booktitle> In Proc. ICCAD, </booktitle> <pages> pages 336-343, </pages> <year> 1992. </year>
Reference-contexts: In addition, the storage and retrieval of persistent data is handled by the ECAD tools. For example, in the FICOM ECAD design environment at MIT, 35% of the code performs data management tasks, even though the system does not support multiple users, distribution, or versions of data <ref> [AA92] </ref>. In such systems, even minor changes to the shared data model require expensive changes to the tools. 1.2 Data Managers One way to improve the integration of ECAD tools is to develop a data manager, which is a separate subsystem responsible for storing and retrieving design data.
Reference: [ABD + 91] <author> Timothy Ayers, Douglas Barry, John Dolejsi, Jeffrey Galarneau, and Randal Zoeller. </author> <title> Development of ITASCA. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 4(4) </volume> <pages> 46-49, </pages> <month> July - August </month> <year> 1991. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca <ref> [ABD + 91] </ref>, O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [ABRP89] <author> H. Afsarmanesh, E. Brotoatmodjo, K. Ryeon, and A. Parker. </author> <title> The EVE VLSI information management environment. </title> <booktitle> In Proc. ICCAD, </booktitle> <pages> pages 384-387, </pages> <year> 1989. </year>
Reference-contexts: This benefit allows the ECAD tool writer to support new design technologies more quickly. Some research work has applied RDBMSes to ECAD tool integration. Kuspert, Dadam, and Gunauer investigated data management for computer-aided manufacturing [KDG87]. Afsarmanesh and others investigated an RDBMS for VLSI information management <ref> [ABRP89] </ref>. These research efforts typically chose RDBMSes because few alternatives were available at the time. One drawback to the use of RDBMSes for ECAD tools is that these database systems are usually optimized for access to small amounts of data for short periods of time. <p> In this work we address the use of OODBMSes by ECAD applications. Some researchers have applied OODBMSes to ECAD tool integration. Breuer, et.al. developed Cbase, an ECAD data manager which uses an OODBMS [BCG + 88]. Cbase was used experimentally by Afsarmanesh, et.al. <ref> [ABRP89] </ref> and Gupta, et.al. [GCG + 89]. These studies examined the feasibility of using OODBMSes for ECAD tool integration, and did not concentrate on performance. Chang investigated clustering using access statistics from actual engineering work [Cha89]. Ahmed et.al. surveyed OODBMSes for engineering applications based on functionality [AWSL92].
Reference: [AD92] <author> Rafiul Ahad and Douglas Dedo. </author> <title> OpenODB from Hewlett-Packard: A commercial object-oriented database management system. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 4(9) </volume> <pages> 31-35, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB <ref> [AD92] </ref>, and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes. The terms "object database" and "next-generation DBMS" are often used to refer to both OODBMSes and ERDBMSes.
Reference: [AHSD89] <author> T. Andrews, C. Harris, K. Sinkel, and J. Duhl. </author> <title> The ONTOS object database. </title> <type> Technical report, </type> <institution> Ontologic, Inc., </institution> <year> 1989. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos <ref> [AHSD89] </ref>, OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes. The terms "object database" and "next-generation DBMS" are often used to refer to both OODBMSes and ERDBMSes.
Reference: [And90] <author> T. Anderson. </author> <title> The HyperModel benchmark. </title> <booktitle> In Proc. </booktitle> <address> EDBT, </address> <month> March </month> <year> 1990. </year>
Reference-contexts: Most research in performance evaluation of databases has concentrated on benchmarks. 3.1 Object Database Benchmarks Several benchmarks have been developed for object databases. The OO1 benchmark [CS92] models typical engineering applications. The HyperModel benchmark <ref> [And90] </ref> represents the algorithms and data structures of hypertext applications. The ACOB benchmark [DFMV90] compares alternative client-server process architectures. OO7 [CDN93] is a more comprehensive model of engineering applications. These benchmarks have been very useful for debugging and understanding performance problems of OODBMSes.
Reference: [AWSL92] <author> Shamim Ahmed, Albert Wong, Duvvuru Sriram, and Robert Logcher. </author> <title> Object-oriented database management systems for engineering: A comparison. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 5(3) </volume> <pages> 27-44, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: These studies examined the feasibility of using OODBMSes for ECAD tool integration, and did not concentrate on performance. Chang investigated clustering using access statistics from actual engineering work [Cha89]. Ahmed et.al. surveyed OODBMSes for engineering applications based on functionality <ref> [AWSL92] </ref>. The proposed work will extend these efforts by concentrating on performance evaluation of OODBMSes for ECAD applications. 2.1 OODBMS Capabilities Object databases support persistence of complex data, concurrency control, and recovery. Complex data support includes features provided by object-oriented programming languages, like inheritance and encapsulation. <p> Composite objects are not supported by ODMG-93 nor by several OODBMSes. Object query languages have been the subject of numerous research efforts, and ODMG-93 proposes a consensus. Extended transaction models have been shown to be important for engineering applications <ref> [AWSL92] </ref>, but it is not clear which transaction models will become standard. Much work has been done on the performance benefits of user-controlled clustering of objects [HZ87], but no consensus has been reached on what options will be available to the user.
Reference: [BALL90] <author> B. N. Bershad, T. E. Anderson, E. D. Lazowska, and H. M. Levy. </author> <title> Lightweight remote procedure call. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1) </volume> <pages> 37-55, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications [KKB88]. Advanced clustering techniques have been described by Hornick and Zdonick [HZ87]. Many researchers have studied operating system and hardware support for objects (for example, <ref> [FR86, BALL90, DFK + 92] </ref>). Each of these efforts make object databases more attractive to ECAD tool integration projects. 3 Performance Evaluation An important remaining problem for tool writers is how to evaluate the performance of an object database for an ECAD integration project [WC92].
Reference: [BCG + 88] <author> M. Breuer, W. Cheng, R. Gupta, I. Hardonag, E. Horowitz, and S. Lin. Cbase 1.0: </author> <title> A CAD database for VLSI circuits using object-oriented technology. </title> <booktitle> In Proc. ICCAD, </booktitle> <pages> pages 392-395, </pages> <year> 1988. </year>
Reference-contexts: Kala [SG91] is an example of a persistent object system. In this work we address the use of OODBMSes by ECAD applications. Some researchers have applied OODBMSes to ECAD tool integration. Breuer, et.al. developed Cbase, an ECAD data manager which uses an OODBMS <ref> [BCG + 88] </ref>. Cbase was used experimentally by Afsarmanesh, et.al. [ABRP89] and Gupta, et.al. [GCG + 89]. These studies examined the feasibility of using OODBMSes for ECAD tool integration, and did not concentrate on performance. Chang investigated clustering using access statistics from actual engineering work [Cha89].
Reference: [But91] <author> Paul Butterworth. </author> <title> OODBMSes as database managers. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 4(4) </volume> <pages> 55-57, </pages> <month> July/August </month> <year> 1991. </year>
Reference-contexts: One way for ECAD tool writers to improve this situation is to write a customized benchmark, which is intended to represent the target application <ref> [LG91, But91] </ref>.
Reference: [Cat93] <editor> Rick Cattell, editor. </editor> <title> The Object Database Standard: ODMG-93. </title> <publisher> Morgan-Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Finally, version management supports a history of changes to an object which is crucial to the concurrent development of designs. The Object Database Management Group (ODMG) has recently published a standard for object databases <ref> [Cat93] </ref>. The ODMG-93 standard defines an object model, object definition language, and object query language to support sharing of data by different OODBMSes. The ODMG-93 standard supports most of the OODBMS features discussed above, but does not support composite objects and leaves control of clustering as an option. <p> Where research has not reached a consensus on the appropriate definition of an OODBMS feature, the model will use the most general definition. Many object database features are areas of active research. Some consensus has been reached on inverse attributes, or relationships, which are included in the ODMG-93 standard <ref> [Cat93] </ref>. Composite objects are not supported by ODMG-93 nor by several OODBMSes. Object query languages have been the subject of numerous research efforts, and ODMG-93 proposes a consensus.
Reference: [CDN93] <author> Michael Carey, David DeWitt, and Jeffrey Naughton. </author> <title> The OO7 benchmark. </title> <booktitle> In Proc. SIGMOD, </booktitle> <pages> pages 12-21, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The OO1 benchmark [CS92] models typical engineering applications. The HyperModel benchmark [And90] represents the algorithms and data structures of hypertext applications. The ACOB benchmark [DFMV90] compares alternative client-server process architectures. OO7 <ref> [CDN93] </ref> is a more comprehensive model of engineering applications. These benchmarks have been very useful for debugging and understanding performance problems of OODBMSes. However, ECAD tool writers find the object benchmarks insufficient for several reasons. <p> The test generation program will be a prototype implementation, with simple parsing of application descriptions and incomplete support for the application model. Third, develop some example integration projects. The OO7 benchmark can be used as a control example, because performance-tuned implementation code is available <ref> [CDN93] </ref>. The ViDEO ECAD environment [GFHH93] is a research system which will be used to test this work. The Berkeley ECAD tools [OHM + 84] are a good approximation of commercial applications. <p> If a feature is found to be important to many applications, the prototype program will be modified to test the feature. 4.3.3 A Detailed Experiment The prototype test generation program has been used to study T1, a traversal operation from the OO7 benchmark <ref> [CDN93] </ref>. This operation is a depth-first traversal of the design hierarchy. Since the atomic parts of the design hierarchy are connected in a directed graph, the traversal maintains a collection of atomic part ids so that each part is visited only once.
Reference: [CFI92] <author> CFI. </author> <title> Release 1.0 Draft Standards. CAD Framework Initiative, </title> <month> January </month> <year> 1992. </year>
Reference-contexts: One example of research in this area in the CAD Framework Initiative (CFI), which proposes several standards for interoperability of ECAD tools from different vendors <ref> [CFI92] </ref>. The CFI Design Representation (CFIDR) is a standard data model which can be used by many ECAD tools. There are limitations to ECAD tool integration based solely on shared data models. First, concurrent access to design data must be controlled by the ECAD tools.
Reference: [CG90] <author> G-D Chen and D. Gajski. </author> <title> An intelligent component database for behavioral synthesis. </title> <booktitle> In Proc. 27th DAC, </booktitle> <pages> pages 150-155. </pages> <address> ACM/IEEE, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Several researchers have investigated the use of data managers for ECAD tool integration projects. Heydemann, Plaignaud, and Dure discussed an integrated simulation system [HPD88]. Chen and Gajski described an intelligent data manager for high-level synthesis <ref> [CG90] </ref>. Walker, Keller, and Strojwas studied a data manager for semiconductor process simulation [WKS91]. These systems often manage complex design data in memory as well as on disk. 3 Unfortunately, there are disadvantages to the data manager solution.
Reference: [Cha89] <author> Ellis Chang. </author> <title> Effective Clustering and Buffering in an Object-Oriented DBMS. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1989. </year>
Reference-contexts: Cbase was used experimentally by Afsarmanesh, et.al. [ABRP89] and Gupta, et.al. [GCG + 89]. These studies examined the feasibility of using OODBMSes for ECAD tool integration, and did not concentrate on performance. Chang investigated clustering using access statistics from actual engineering work <ref> [Cha89] </ref>. Ahmed et.al. surveyed OODBMSes for engineering applications based on functionality [AWSL92]. The proposed work will extend these efforts by concentrating on performance evaluation of OODBMSes for ECAD applications. 2.1 OODBMS Capabilities Object databases support persistence of complex data, concurrency control, and recovery.
Reference: [CS92] <author> Rick Cattell and J. Skeen. </author> <title> Object operations benchmark. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(1), </volume> <month> March </month> <year> 1992. </year> <month> 16 </month>
Reference-contexts: One drawback to the use of RDBMSes for ECAD tools is that these database systems are usually optimized for access to small amounts of data for short periods of time. This optimization often makes RDBMSes too slow for ECAD applications <ref> [CS92] </ref>. Another problem is that the relational data model is not appropriate for CAD data, which typically includes complex objects [CS92]. 2 Object Databases The limitations of RDBMSes for engineering applications have been addressed by work on object-oriented databases (OODBMSes) and extended relational databases (ERDBMSes). <p> This optimization often makes RDBMSes too slow for ECAD applications <ref> [CS92] </ref>. Another problem is that the relational data model is not appropriate for CAD data, which typically includes complex objects [CS92]. 2 Object Databases The limitations of RDBMSes for engineering applications have been addressed by work on object-oriented databases (OODBMSes) and extended relational databases (ERDBMSes). OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. <p> Most research in performance evaluation of databases has concentrated on benchmarks. 3.1 Object Database Benchmarks Several benchmarks have been developed for object databases. The OO1 benchmark <ref> [CS92] </ref> models typical engineering applications. The HyperModel benchmark [And90] represents the algorithms and data structures of hypertext applications. The ACOB benchmark [DFMV90] compares alternative client-server process architectures. OO7 [CDN93] is a more comprehensive model of engineering applications.
Reference: [Deu91] <author> O. </author> <title> Deux. The O2 system. </title> <journal> Communications of the ACM, </journal> <volume> 34(10) </volume> <pages> 34-48, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 <ref> [Deu91] </ref>, Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [DFK + 92] <author> W. J. Dally, J. A. S. Fiske, J. S. Keen, R. A. Lethin, M. D. Noakes, P. R. Nuth, R. E. Davison, and G. </author> <title> A Fyler. The message-driven processor. </title> <booktitle> IEEE Micro, </booktitle> <month> April </month> <year> 1992. </year>
Reference-contexts: Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications [KKB88]. Advanced clustering techniques have been described by Hornick and Zdonick [HZ87]. Many researchers have studied operating system and hardware support for objects (for example, <ref> [FR86, BALL90, DFK + 92] </ref>). Each of these efforts make object databases more attractive to ECAD tool integration projects. 3 Performance Evaluation An important remaining problem for tool writers is how to evaluate the performance of an object database for an ECAD integration project [WC92].
Reference: [DFMV90] <author> David DeWitt, Philippe Futtersack, David Maier, and Fernando Velez. </author> <title> A study of three alternative workstation-server architectures for object-oriented database systems. </title> <booktitle> In Proc. VLDB, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: Most research in performance evaluation of databases has concentrated on benchmarks. 3.1 Object Database Benchmarks Several benchmarks have been developed for object databases. The OO1 benchmark [CS92] models typical engineering applications. The HyperModel benchmark [And90] represents the algorithms and data structures of hypertext applications. The ACOB benchmark <ref> [DFMV90] </ref> compares alternative client-server process architectures. OO7 [CDN93] is a more comprehensive model of engineering applications. These benchmarks have been very useful for debugging and understanding performance problems of OODBMSes. However, ECAD tool writers find the object benchmarks insufficient for several reasons.
Reference: [FCL92] <author> Michael Franklin, Michael Carey, and Miron Livny. </author> <title> Global memory management in client-server DBMS architectures. </title> <booktitle> In Proc. 18th VLDB, </booktitle> <pages> pages 596-609, </pages> <year> 1992. </year>
Reference-contexts: ECAD schemas evolve frequently due to changes in design technology. 5 Recent OODBMS research has also targeted performance. Franklin, Carey, and Livny investi-gated techniques for improving database performance in a client-server environment <ref> [FCL92] </ref>, which is common in ECAD design efforts. Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications [KKB88]. Advanced clustering techniques have been described by Hornick and Zdonick [HZ87]. Many researchers have studied operating system and hardware support for objects (for example, [FR86, BALL90, DFK + 92]).
Reference: [FR86] <author> Robert Fitzgerald and Richard Rashid. </author> <title> The integration of virtual memory management and interprocess communication in Accent. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 4(2) </volume> <pages> 147-177, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications [KKB88]. Advanced clustering techniques have been described by Hornick and Zdonick [HZ87]. Many researchers have studied operating system and hardware support for objects (for example, <ref> [FR86, BALL90, DFK + 92] </ref>). Each of these efforts make object databases more attractive to ECAD tool integration projects. 3 Performance Evaluation An important remaining problem for tool writers is how to evaluate the performance of an object database for an ECAD integration project [WC92].
Reference: [GCG + 89] <author> Rajiv Gupta, Wesley Cheng, Rajesh Gupta, Ido Hardonag, and Melvin Breuer. </author> <title> An object-oriented VLSI CAD framework. </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: In this work we address the use of OODBMSes by ECAD applications. Some researchers have applied OODBMSes to ECAD tool integration. Breuer, et.al. developed Cbase, an ECAD data manager which uses an OODBMS [BCG + 88]. Cbase was used experimentally by Afsarmanesh, et.al. [ABRP89] and Gupta, et.al. <ref> [GCG + 89] </ref>. These studies examined the feasibility of using OODBMSes for ECAD tool integration, and did not concentrate on performance. Chang investigated clustering using access statistics from actual engineering work [Cha89]. Ahmed et.al. surveyed OODBMSes for engineering applications based on functionality [AWSL92].
Reference: [GFHH93] <author> Eric Golin, Annette Feng, Linus Huang, and Eric Hughes. </author> <title> A visual design environment. </title> <booktitle> In Proc. ICCAD, </booktitle> <pages> pages 364-367, </pages> <year> 1993. </year>
Reference-contexts: The test generation program will be a prototype implementation, with simple parsing of application descriptions and incomplete support for the application model. Third, develop some example integration projects. The OO7 benchmark can be used as a control example, because performance-tuned implementation code is available [CDN93]. The ViDEO ECAD environment <ref> [GFHH93] </ref> is a research system which will be used to test this work. The Berkeley ECAD tools [OHM + 84] are a good approximation of commercial applications. Previous work in integrating Crystal (part of the Berkeley toolset) with ObjectStore provides a convenient test for this work.
Reference: [GK88] <author> David Gedye and Randy Katz. </author> <title> Browsing the chip design database. </title> <booktitle> In Proc. 25th DAC, </booktitle> <pages> pages 269-274. </pages> <address> ACM/IEEE, </address> <year> 1988. </year>
Reference-contexts: The model used in this work will be made consistent with ODMG-93 where possible. 2.2 Related Work Many research efforts will improve OODBMS support for engineering applications. Katz and others have studied ECAD requirements for version management [Kat90]. Relationships between design data elements were described by Gedye and Katz <ref> [GK88] </ref>. Kuno and Rundensteiner have described view support for OODBMSes [KR93], which simplifies the integration of ECAD tools [WHJ93]. Schema evolution, which maintains database and application consistency during schema updates, has been studied by Kim and Chou [KC88].
Reference: [HPD88] <author> Michel Heydemann, Alain Plaignaud, and Daniel Dure. </author> <title> The architecture of a highly integrated simulation system. </title> <booktitle> In Proc. 25th DAC, </booktitle> <pages> pages 617-621. </pages> <address> ACM/IEEE, </address> <year> 1988. </year>
Reference-contexts: Finally, the data access algorithms of the data manager can be precisely tuned to offer the best performance for the applications. Several researchers have investigated the use of data managers for ECAD tool integration projects. Heydemann, Plaignaud, and Dure discussed an integrated simulation system <ref> [HPD88] </ref>. Chen and Gajski described an intelligent data manager for high-level synthesis [CG90]. Walker, Keller, and Strojwas studied a data manager for semiconductor process simulation [WKS91]. These systems often manage complex design data in memory as well as on disk. 3 Unfortunately, there are disadvantages to the data manager solution.
Reference: [HZ87] <author> M. F. Hornick and S. B. Zdonick. </author> <title> A shared, segmented memory system for an object-oriented database. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 5(1), </volume> <year> 1987. </year>
Reference-contexts: Franklin, Carey, and Livny investi-gated techniques for improving database performance in a client-server environment [FCL92], which is common in ECAD design efforts. Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications [KKB88]. Advanced clustering techniques have been described by Hornick and Zdonick <ref> [HZ87] </ref>. Many researchers have studied operating system and hardware support for objects (for example, [FR86, BALL90, DFK + 92]). <p> Extended transaction models have been shown to be important for engineering applications [AWSL92], but it is not clear which transaction models will become standard. Much work has been done on the performance benefits of user-controlled clustering of objects <ref> [HZ87] </ref>, but no consensus has been reached on what options will be available to the user. The use of version management for engineering applications is reasonably well understood, but many OODBMSes offer only incomplete support.
Reference: [Jag93] <author> H. V. </author> <title> Jagadish. </title> <journal> Database research at AT&T Bell Laboratories. ACM Sigmod Record, </journal> <volume> 22(1) </volume> <pages> 82-88, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode <ref> [Jag93] </ref>, Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [Kat90] <author> Randy Katz. </author> <title> Toward a unified framework for version modeling in engineering databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(4) </volume> <pages> 375-408, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: The standard also leaves version management to future work. The model used in this work will be made consistent with ODMG-93 where possible. 2.2 Related Work Many research efforts will improve OODBMS support for engineering applications. Katz and others have studied ECAD requirements for version management <ref> [Kat90] </ref>. Relationships between design data elements were described by Gedye and Katz [GK88]. Kuno and Rundensteiner have described view support for OODBMSes [KR93], which simplifies the integration of ECAD tools [WHJ93]. Schema evolution, which maintains database and application consistency during schema updates, has been studied by Kim and Chou [KC88].
Reference: [KC88] <author> Won Kim and Hong-Tai Chou. </author> <title> Versions of schema for object-oriented databases. </title> <booktitle> In Proc. 14th VLDB, </booktitle> <pages> pages 148-159, </pages> <year> 1988. </year>
Reference-contexts: Relationships between design data elements were described by Gedye and Katz [GK88]. Kuno and Rundensteiner have described view support for OODBMSes [KR93], which simplifies the integration of ECAD tools [WHJ93]. Schema evolution, which maintains database and application consistency during schema updates, has been studied by Kim and Chou <ref> [KC88] </ref>. ECAD schemas evolve frequently due to changes in design technology. 5 Recent OODBMS research has also targeted performance. Franklin, Carey, and Livny investi-gated techniques for improving database performance in a client-server environment [FCL92], which is common in ECAD design efforts.
Reference: [KDG87] <author> K. Kuspert, P. Dadam, and J. Gunauer. </author> <title> Cooperative object buffer management in the advanced information management prototype. </title> <booktitle> In Proc. 13th VLDB, </booktitle> <pages> pages 483-492, </pages> <year> 1987. </year>
Reference-contexts: This benefit allows the ECAD tool writer to support new design technologies more quickly. Some research work has applied RDBMSes to ECAD tool integration. Kuspert, Dadam, and Gunauer investigated data management for computer-aided manufacturing <ref> [KDG87] </ref>. Afsarmanesh and others investigated an RDBMS for VLSI information management [ABRP89]. These research efforts typically chose RDBMSes because few alternatives were available at the time.
Reference: [KKB88] <author> Henry Korth, Won Kim, and Francois Bancilhon. </author> <title> On long-duration CAD transactions. </title> <booktitle> Information Science, </booktitle> <year> 1988. </year>
Reference-contexts: Franklin, Carey, and Livny investi-gated techniques for improving database performance in a client-server environment [FCL92], which is common in ECAD design efforts. Korth, Kim, and Bancilhon studied relaxing concurrency control requirements for engineering applications <ref> [KKB88] </ref>. Advanced clustering techniques have been described by Hornick and Zdonick [HZ87]. Many researchers have studied operating system and hardware support for objects (for example, [FR86, BALL90, DFK + 92]).
Reference: [KR93] <author> Harumi A. Kuno and Elke A. Rundensteiner. </author> <title> Developing an object-oriented view management system. </title> <booktitle> In Proc. CASCON. IBM, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: Katz and others have studied ECAD requirements for version management [Kat90]. Relationships between design data elements were described by Gedye and Katz [GK88]. Kuno and Rundensteiner have described view support for OODBMSes <ref> [KR93] </ref>, which simplifies the integration of ECAD tools [WHJ93]. Schema evolution, which maintains database and application consistency during schema updates, has been studied by Kim and Chou [KC88]. ECAD schemas evolve frequently due to changes in design technology. 5 Recent OODBMS research has also targeted performance.
Reference: [LG91] <author> K-W Larry Lai and Leon Guzenda. </author> <title> How to benchmark an OODBMS. </title> <journal> Journal of Object-Oriented Programming, </journal> <volume> 4(4) </volume> <pages> 12-15, </pages> <month> July/August </month> <year> 1991. </year> <month> 17 </month>
Reference-contexts: The benchmark is designed to measure certain aspects of the performance of the database. The tool writer wants to know how to use the database to integrate tools and meet performance requirements. Fourth, the benchmark results are often outdated by the time they are used <ref> [LG91] </ref>. Despite these problems, object database benchmarks are very important for performance evaluation of OODBMSes. 3.2 Performance Evaluation for ECAD Tools The limitations of object benchmarks make them insufficient for ECAD tool integration efforts. <p> One way for ECAD tool writers to improve this situation is to write a customized benchmark, which is intended to represent the target application <ref> [LG91, But91] </ref>.
Reference: [LLOW91] <author> Charles Lamb, Gordon Landis, Jack Orenstein, and Dan Weinreb. </author> <title> The ObjectStore database system. </title> <journal> Communications of the ACM, </journal> <volume> 34(10) </volume> <pages> 50-63, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore <ref> [LLOW91] </ref>, Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [LLPS91] <author> Guy Lohman, Bruce Lindsay, Hamid Pirahesh, and K. Bernhard Schiefer. </author> <title> Extensions to Starburst: Objects, types, functions, and rules. </title> <journal> Communications of the ACM, </journal> <volume> 34(10) </volume> <pages> 94-109, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst <ref> [LLPS91] </ref> are examples of ERDBMSes. The terms "object database" and "next-generation DBMS" are often used to refer to both OODBMSes and ERDBMSes. In addition, persistent object systems have been developed which manage persistent objects, with the option of providing concurrency control and 4 recovery as in a DBMS.
Reference: [MSOP86] <author> David Maier, Jacob Stein, Allen Otis, and Alan Purdy. </author> <title> Development of an object-oriented DBMS. </title> <booktitle> In Proc. </booktitle> <address> OOPSLA'86, </address> <year> 1986. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone <ref> [MSOP86] </ref>, Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [NB92] <author> Deborah Novell and Robert Breton. </author> <title> ONTOS performance tests: Optimizing small object performance. </title> <type> Technical report, </type> <institution> ONTOS, Inc., </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Object database systems manage shared data in a convenient manner. However, the ECAD tools must maintain acceptable performance when accessing shared data. The use of particular features of an OODBMS might make the difference between acceptable and unacceptable performance <ref> [NB92] </ref>. For this reason, performance evaluation of object databases is important to future ECAD tool development. 1.1 Integrating ECAD Tools The integration of ECAD tools can be defined as the modification of the tools to share data in a more cohesive or comprehensive way.
Reference: [Obj90] <institution> Objectivity Database System Overview. Objectivity, Inc., </institution> <year> 1990. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity <ref> [Obj90] </ref>, ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes.
Reference: [OHM + 84] <author> J. Ousterhout, G. Hamachi, R. Mayo, W. Scott, and G. Taylor. </author> <title> Magic, a VLSI layout system. </title> <booktitle> In Proc. 21st DAC. </booktitle> <address> ACM/IEEE, </address> <year> 1984. </year>
Reference-contexts: Third, develop some example integration projects. The OO7 benchmark can be used as a control example, because performance-tuned implementation code is available [CDN93]. The ViDEO ECAD environment [GFHH93] is a research system which will be used to test this work. The Berkeley ECAD tools <ref> [OHM + 84] </ref> are a good approximation of commercial applications. Previous work in integrating Crystal (part of the Berkeley toolset) with ObjectStore provides a convenient test for this work. Fourth, compare the predictive performance evaluation to performance after integration, for the example integration projects.
Reference: [SG91] <editor> Sergiu S. Simmel and Ivan Godard. </editor> <booktitle> The Kala basket. In Proc. OOPSLA'91. ACM, </booktitle> <year> 1991. </year>
Reference-contexts: In addition, persistent object systems have been developed which manage persistent objects, with the option of providing concurrency control and 4 recovery as in a DBMS. These systems have been designed to support engineering applications (like ECAD) without the problems associated with RDBMSes. Kala <ref> [SG91] </ref> is an example of a persistent object system. In this work we address the use of OODBMSes by ECAD applications. Some researchers have applied OODBMSes to ECAD tool integration. Breuer, et.al. developed Cbase, an ECAD data manager which uses an OODBMS [BCG + 88].
Reference: [SK91] <author> Michael Stonebraker and Greg Kemnitz. </author> <title> The Postgres next-generation database management system. </title> <journal> Communications of the ACM, </journal> <volume> 34(10) </volume> <pages> 78-92, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant [Ver90]. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres <ref> [SK91] </ref> and Starburst [LLPS91] are examples of ERDBMSes. The terms "object database" and "next-generation DBMS" are often used to refer to both OODBMSes and ERDBMSes.
Reference: [Ver90] <institution> VERSANT Technical Overview. Versant Object Technologies, Inc., </institution> <year> 1990. </year>
Reference-contexts: OODBMSes are built with an object-oriented philosophy and data model, and are usually accessed by an object-oriented programming language. Some examples are GemStone [MSOP86], Itasca [ABD + 91], O2 [Deu91], Objectivity [Obj90], ObjectStore [LLOW91], Ode [Jag93], Ontos [AHSD89], OpenODB [AD92], and Versant <ref> [Ver90] </ref>. An ERDBMS is an RDBMS which has been extended to support objects by mapping them to relations automatically. Postgres [SK91] and Starburst [LLPS91] are examples of ERDBMSes. The terms "object database" and "next-generation DBMS" are often used to refer to both OODBMSes and ERDBMSes.
Reference: [WC92] <author> Marianne Winslett and Sheauyin Chu. </author> <title> Database management systems for ECAD applications: Architecture and performance. </title> <booktitle> In Proc. NSF Conf. on Design and Manufacturing Systems, </booktitle> <month> January </month> <year> 1992. </year>
Reference-contexts: Each of these efforts make object databases more attractive to ECAD tool integration projects. 3 Performance Evaluation An important remaining problem for tool writers is how to evaluate the performance of an object database for an ECAD integration project <ref> [WC92] </ref>. Most research in performance evaluation of databases has concentrated on benchmarks. 3.1 Object Database Benchmarks Several benchmarks have been developed for object databases. The OO1 benchmark [CS92] models typical engineering applications. The HyperModel benchmark [And90] represents the algorithms and data structures of hypertext applications.
Reference: [WHJ93] <author> Marianne Winslett, Eric Hughes, and Vicki Jones. </author> <title> The persistence problem: Interfacing persistent and transient data. </title> <note> To Appear, </note> <year> 1993. </year>
Reference-contexts: Katz and others have studied ECAD requirements for version management [Kat90]. Relationships between design data elements were described by Gedye and Katz [GK88]. Kuno and Rundensteiner have described view support for OODBMSes [KR93], which simplifies the integration of ECAD tools <ref> [WHJ93] </ref>. Schema evolution, which maintains database and application consistency during schema updates, has been studied by Kim and Chou [KC88]. ECAD schemas evolve frequently due to changes in design technology. 5 Recent OODBMS research has also targeted performance.
Reference: [WKS91] <author> D. Walker, C. Keller, and A. Strojwas. </author> <title> A semiconductor wafer representation database and its use in the PREDITOR process editor and statistical simulator. </title> <booktitle> In Proc. 28th DAC, </booktitle> <pages> pages 579-584. </pages> <address> ACM/IEEE, </address> <year> 1991. </year> <month> 18 </month>
Reference-contexts: Several researchers have investigated the use of data managers for ECAD tool integration projects. Heydemann, Plaignaud, and Dure discussed an integrated simulation system [HPD88]. Chen and Gajski described an intelligent data manager for high-level synthesis [CG90]. Walker, Keller, and Strojwas studied a data manager for semiconductor process simulation <ref> [WKS91] </ref>. These systems often manage complex design data in memory as well as on disk. 3 Unfortunately, there are disadvantages to the data manager solution. First, the concurrency control mechanisms embodied in the data manager are usually quite simple and inflexible.
References-found: 45

