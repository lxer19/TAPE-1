URL: http://www.cs.duke.edu/~jsv/Papers/KLV95.learning.ps.gz
Refering-URL: http://www.cs.duke.edu/~jsv/Papers/catalog/node54.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: pk@research.att.com  plong@cs.duke.edu  jsv@cs.duke.edu  
Title: Adaptive Disk Spindown via Optimal Rent-to-Buy in Probabilistic Environments  
Author: P. Krishnan P. O. Philip M. Long P. O. Jeffrey Scott Vitter P. O. 
Date: July 1995.  
Note: An extended abstract appears in the Twelfth International Machine Learning Conference,  Support was provided in part by an IBM Fellowship, by NSF research grant CCR-9007851, by Army Research Office grant DAAH04-93-G-0076, and by Air Force Office of Scientific Research grant F49620-94-1-0217. This work was done while the author was visiting Duke University from Brown University. Supported in part by Air Force Office of Scientific Research grants F49620-92-J-0515 and F49620-94-1-0217. Supported in part by National Science Foundation research grant CCR-9007851, by Air Force Office of Scientific Research grants F49620-92-J-0515 and F49620-94-1-0217 and by a Universities Space Research Association/CESDIS associate membership.  
Address: 101 Crawfords Corner Road  Box 3030 Holmdel, NJ 07733  Box 90129 Durham, NC 27708  Box 90129 Durham, NC 27708  
Affiliation: AT&T Bell Laboratories  Dept. of Computer Science Duke University  Dept. of Computer Science Duke University  
Abstract: In the single rent-to-buy decision problem, without a priori knowledge of the amount of time a resource will be used we need to decide when to buy the resource, given that we can rent the resource for $1 per unit time or buy it once and for all for $c. In this paper we study algorithms that make a sequence of single rent-to-buy decisions, using the assumption that the resource use times are independently drawn from an unknown probability distribution. Our study of this rent-to-buy problem is motivated by important systems applications, specifically, problems arising from deciding when to spindown disks to conserve energy in mobile computers [DKM, LKH, MDK], thread blocking decisions during lock acquisition in multiprocessor applications [KLM], and virtual circuit holding times in IP-over-ATM networks [KLP, SaK]. We develop a provably optimal and computationally efficient algorithm for the rent-to-buy problem. Our algorithm uses O( p t) time and space, and its expected cost for the tth resource use converges to optimal as O( p log t=t), for any bounded probability distribution on the resource use times. Alternatively, using O(1) time and space, the algorithm almost converges to optimal. We describe the experimental results for the application of our algorithm to one of the motivating systems problems: the question of when to spindown a disk to save power in a mobile computer. Simulations using disk access traces obtained from an HP workstation environment suggest that our algorithm yields significantly improved power/response time performance over the non-adaptive 2-competitive algorithm which is optimal in the worst-case competitive analysis model. 
Abstract-found: 1
Intro-found: 1
Reference: [BEH] <author> A. Blumer, A. Ehrenfeucht, D. Haussler, and M. K. Warmuth, </author> <title> "Learnability and the Vapnik Chervonenkis Dimension," </title> <note> Journal of the ACM (October 1989). </note>
Reference-contexts: As a result of the VC theory <ref> [BEH, VaC] </ref>, it is easy to partition [0; M ] into v intervals satisfying the density criterion with high probability, by storing = fi (v ln v) examples, and calling a procedure generate cutoffs (w; ; ) on [0; M ]. <p> Then, for any * that is suitable, Pr (E 1 ) *=(2 (c + M )). 7 To prove the above lemma, we use a technique due to Kearns and Schapire [KeS]. Lemma 2 below follows immediately from the results of Blumer et al. <ref> [BEH] </ref> using the techniques of Vapnik and Chervonenkis [VaC]. Informally, Lemma 2 says that m points are enough to simultaneously estimate the probabilities of every interval. Lemma 2 Choose 0 &lt; ff; fi 1=2; c 1; and a probability distribution D on IR + .
Reference: [DKB] <author> F. Douglis, P. Krishnan, and B. Bershad, </author> <title> "Adaptive Disk Spindown Policies for Mobile Computers," Proceedings of the Second USENIX Symposium on Mobile and Location Independent Computing, </title> <note> to appear. 23 </note>
Reference-contexts: In [DKM], the comparison of fixed-threshold strategies is made against optimal o*ine algorithms. The authors also mention trying out predictive disk spindown policies. Adaptive spindown policies that continually change the spindown threshold based on perceived inconvenience to the user are studied in <ref> [DKB] </ref>. In [Gre], Greenawalt looks at the disk spindown problem assuming a Poisson arrival of requests at disk, and studies disk spindown and reliability issues. Karlin et al. in [KLM] have studied the spin/block problem empirically, evaluating different spin/block strategies including fixed-threshold and adaptive strategies. <p> Concerns on how to effectively trade power for response time have been raised for the disk spindown problem <ref> [DKB, DKM] </ref>, and the rent-to-buy model provides an elegant way of achieving this tradeoff. 7.2.5 Other Observations Some other observations from our simulations are as follows: 1.
Reference: [DKM] <author> F. Douglis, P. Krishnan, and B. Marsh, </author> <title> "Thwarting the Power Hungry Disk," </title> <booktitle> Proceedings of the 1994 Winter USENIX Conference (January 1994). </booktitle>
Reference-contexts: Current techniques for conserving energy are based on shutting down components of the system after reasonably long periods of inactivity. Recent studies show that the disk subsystem on notebook computers is a major consumer of energy <ref> [DKM, LKH, MDK] </ref>. Most disks used for portable computers (e.g., the small, light-weight Kittyhawk from Hewlett Packard [Pac]) have multiple energy states. <p> However, their technique as stated is computationally inefficient. For the disk spindown problem, current mobile computers spin disks down after about five minutes of inactivity. In <ref> [DKM, LKH] </ref>, the authors propose a more aggressive spindown policy, and support their proposal by simulation studies on workstation and notebook traces. The studies suggest that the gain in energy often overshadows the loss in response time. In [DKM], the comparison of fixed-threshold strategies is made against optimal o*ine algorithms. <p> In [DKM, LKH], the authors propose a more aggressive spindown policy, and support their proposal by simulation studies on workstation and notebook traces. The studies suggest that the gain in energy often overshadows the loss in response time. In <ref> [DKM] </ref>, the comparison of fixed-threshold strategies is made against optimal o*ine algorithms. The authors also mention trying out predictive disk spindown policies. Adaptive spindown policies that continually change the spindown threshold based on perceived inconvenience to the user are studied in [DKB]. <p> consumed, spundown (W) 0.27 0.20 Power consumed, spinup (W) 2.17 5.50 Normal time to spinup (s) 1.10 2.50 Normal time to spindown (s) 0.55 6.00 Avg time to read 1 Kbyte (ms) 22.50 26.7 Table 1: Disk characteristics of the Kittyhawk C3014A and Quantum Go*Drive 120. (This table appears in <ref> [DKM] </ref>.) 7.1 Methodology We simulated algorithm L using a disk access trace from a Hewlett-Packard 9000/845 personal workstation running HP-UX. This trace is described in [RuW], and a portion of this trace was also used in a previous study of disk spindown policies [DKM]. <p> Quantum Go*Drive 120. (This table appears in <ref> [DKM] </ref>.) 7.1 Methodology We simulated algorithm L using a disk access trace from a Hewlett-Packard 9000/845 personal workstation running HP-UX. This trace is described in [RuW], and a portion of this trace was also used in a previous study of disk spindown policies [DKM]. The trace was obtained by Ruemmler and Wilkes by monitoring the disk for roughly two months; it consisted of 416262 accesses to disk. We studied our algorithm for two disks, the Kittyhawk C3014A and the Quantum Go*Drive. <p> We studied our algorithm for two disks, the Kittyhawk C3014A and the Quantum Go*Drive. The characteristics of the two drives are given in Table 1. (This table is derived from <ref> [DKM] </ref>.) For our studies, we merged the active and idle states of the disk into one active state; notice that a disk can read and write data only in the active state. By merging these two states we ensure that a "buy" corresponds to a spindown. As in [DKM], we assumed <p> derived from <ref> [DKM] </ref>.) For our studies, we merged the active and idle states of the disk into one active state; notice that a disk can read and write data only in the active state. By merging these two states we ensure that a "buy" corresponds to a spindown. As in [DKM], we assumed that a disk access takes the average time for seek and rotational latency. We also assumed that all operations and state transitions take the average or "typical" time specified by the manufacturer, if one is specified, or else the maximum time. <p> Concerns on how to effectively trade power for response time have been raised for the disk spindown problem <ref> [DKB, DKM] </ref>, and the rent-to-buy model provides an elegant way of achieving this tradeoff. 7.2.5 Other Observations Some other observations from our simulations are as follows: 1. <p> For measuring response time performance, we used the metric of the number of operations delayed. An alternative measure of response time performance is R X , the number of read operations delayed by a spinup for algorithm X <ref> [DKM] </ref>. This metric redefines the effective cost from (4) as E + a R X . The rent-to-buy model can be easily modified to evaluate this measure, by having different costs for a spindown (i.e., different c's) depending on whether the operation is a read or a write.
Reference: [Gre] <author> P. Greenawalt, </author> <title> "Modeling Power Management for Hard Disks," </title> <booktitle> Proceedings of the Symposium on Modeling and Simulation of Computer Telecommunication Systems (1994). </booktitle>
Reference-contexts: In [DKM], the comparison of fixed-threshold strategies is made against optimal o*ine algorithms. The authors also mention trying out predictive disk spindown policies. Adaptive spindown policies that continually change the spindown threshold based on perceived inconvenience to the user are studied in [DKB]. In <ref> [Gre] </ref>, Greenawalt looks at the disk spindown problem assuming a Poisson arrival of requests at disk, and studies disk spindown and reliability issues. Karlin et al. in [KLM] have studied the spin/block problem empirically, evaluating different spin/block strategies including fixed-threshold and adaptive strategies.
Reference: [KLM] <author> A. R. Karlin, K. Li, M. S. Manasse, and S. </author> <title> Owicki, </title> <booktitle> "Empirical Studies of Competitive Spinning for a Shared-Memory Multiprocessor ," Proceedings of the 1991 ACM Symposium on Operating System Principles (1991), </booktitle> <pages> 41-55. </pages>
Reference-contexts: The disk spindown problem will be our main motivating application for this study. The Spin/Block Problem. Another interesting and important problem from multiprocessor applications, the spin/block problem, involves threads trying to acquire locks to protect access to shared data <ref> [KLM] </ref>. A round is defined by a thread requesting locked data and eventually acquiring the lock. <p> The spinning can thus be viewed as renting, and a block can be viewed as a buy. In this situation too, practical studies suggest that lock-waiting times can be assumed to obey some unknown but time-invariant probability distribution <ref> [KLM] </ref>. The Virtual Circuit Problem. Deciding virtual circuit holding times in IP-over-ATM networks is another scenario modeled by the rent-to-buy framework [SaK]. <p> Adaptive spindown policies that continually change the spindown threshold based on perceived inconvenience to the user are studied in [DKB]. In [Gre], Greenawalt looks at the disk spindown problem assuming a Poisson arrival of requests at disk, and studies disk spindown and reliability issues. Karlin et al. in <ref> [KLM] </ref> have studied the spin/block problem empirically, evaluating different spin/block strategies including fixed-threshold and adaptive strategies. The virtual circuit problem has been empirically studied by Saran et al. [SaK], where they propose a Least Recently Used 3 (LRU)-based holding time policy as performing well in their studies.
Reference: [KMM] <author> A. R. Karlin, M. S. Manasse, L. A. McGeoch, and S. Owicki, </author> <title> "Competitive Randomized Algorithms for Non-Uniform Problems," </title> <booktitle> Proceedings of the 1st ACM-SIAM Symposium on Discrete Algorithms (1990), </booktitle> <pages> 301-309. </pages>
Reference-contexts: This competitive factor 1 of 2 is the best possible (for deterministic algorithms) in the worst case <ref> [KMM] </ref>. If we know of a probability distribution on the time the resource is needed, we can usually find a rent-to-buy strategy whose expected cost is substantially less than that of the online algorithm that waits c time units before buying. <p> In this paper we develop online algorithms for the rent-to-buy problem in probabilistic environments, assuming that the resource use times are independently randomly drawn from a fixed but unknown probability distribution. The most straightforward solution to the problem <ref> [KMM] </ref> is to store all past resource use times, and use that cutoff b for the current round which would have had the lowest total cost had we used it in the past. <p> algorithm reduces excess energy by 17-60%, and when compared against the 5 second threshold, it reduced excess energy by 6-42%. 1.1 Related Work The single rent-to-buy problem has been studied in the worst-case setting and efficient deterministic and randomized algorithms have been developed for the problem by Karlin et al. <ref> [KMM] </ref>. In particular, 2-competitive deterministic algorithms and e=(e 1)-competitive randomized algorithms have been developed. In [KMM] it was claimed that there is an adaptive algorithm achieving a competitive ratio approaching e=(e 1) on input sequences generated according to any time invariant probability distribution. <p> reduced excess energy by 6-42%. 1.1 Related Work The single rent-to-buy problem has been studied in the worst-case setting and efficient deterministic and randomized algorithms have been developed for the problem by Karlin et al. <ref> [KMM] </ref>. In particular, 2-competitive deterministic algorithms and e=(e 1)-competitive randomized algorithms have been developed. In [KMM] it was claimed that there is an adaptive algorithm achieving a competitive ratio approaching e=(e 1) on input sequences generated according to any time invariant probability distribution. However, their technique as stated is computationally inefficient.
Reference: [KPR] <author> A. R. Karlin, S. J. Phillips, and P. Raghavan, </author> <title> "Markov Paging," </title> <booktitle> Proceedings of the 33rd Annual IEEE Conference on Foundations of Computer Science (October 1992), </booktitle> <pages> 208-217. </pages>
Reference-contexts: Recently, Markov models have been effectively used to analyze caching and prefetching algorithms assuming user requests to pages in cache are generated by Markov sources <ref> [KPR, KrV, ViK] </ref>. Simulations of our algorithm for the disk spindown problem using disk access traces obtained from HP suggest that the rent-to-buy model is a good way to study disk spindown and related systems issues; in particular, a single parameter c effectively models the tradeoff between power and response-time.
Reference: [KeS] <author> M. J. Kearns and R. E. Schapire, </author> <title> "Efficient Distribution-Free Learning of Probabilistic Concepts," </title> <booktitle> Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science (October 1990), </booktitle> <pages> 382-391. </pages>
Reference-contexts: Then, for any * that is suitable, Pr (E 1 ) *=(2 (c + M )). 7 To prove the above lemma, we use a technique due to Kearns and Schapire <ref> [KeS] </ref>. Lemma 2 below follows immediately from the results of Blumer et al. [BEH] using the techniques of Vapnik and Chervonenkis [VaC]. Informally, Lemma 2 says that m points are enough to simultaneously estimate the probabilities of every interval.
Reference: [KLP] <author> S. Keshav, C. Lund, S. J. Phillips, N. Reingold, and H. Saran, </author> <title> "An Empirical Evaluation of Virtual Circuit Holding Time Policies in IP-over-ATM Networks," </title> <booktitle> Proceedings of INFOCOM '95 </booktitle> . 
Reference-contexts: The first LRU-based holding time policy they study is the 2-competitive algorithm described earlier in this paper, and their second holding time policy involves estimating the mean inter-reference interval with exponential averaging. In <ref> [KLP] </ref>, Keshav et al. empirically study an adaptive policy for the virtual circuit problem that tries to estimate the distribution of inter-arrival times by keeping a histogram of observed inter-arrival times grouped into fixed size buckets. In Section 2, we describe the main analytical results of the paper.
Reference: [KrV] <author> P. Krishnan and J. S. Vitter, </author> <title> "Optimal Prediction for Prefetching in the Worst Case," </title> <note> Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms (January 1994), Also appears as Duke University Technical Report CS-1993-26.. </note>
Reference-contexts: Recently, Markov models have been effectively used to analyze caching and prefetching algorithms assuming user requests to pages in cache are generated by Markov sources <ref> [KPR, KrV, ViK] </ref>. Simulations of our algorithm for the disk spindown problem using disk access traces obtained from HP suggest that the rent-to-buy model is a good way to study disk spindown and related systems issues; in particular, a single parameter c effectively models the tradeoff between power and response-time.
Reference: [LKH] <author> K. Li, R. Kumpf, P. Horton, and T. Anderson, </author> <title> "A Quantitative Analysis of Disk Drive Power Management in Portable Computers," </title> <booktitle> Proceedings of the 1994 Winter USENIX (January 1994). </booktitle>
Reference-contexts: Current techniques for conserving energy are based on shutting down components of the system after reasonably long periods of inactivity. Recent studies show that the disk subsystem on notebook computers is a major consumer of energy <ref> [DKM, LKH, MDK] </ref>. Most disks used for portable computers (e.g., the small, light-weight Kittyhawk from Hewlett Packard [Pac]) have multiple energy states. <p> However, their technique as stated is computationally inefficient. For the disk spindown problem, current mobile computers spin disks down after about five minutes of inactivity. In <ref> [DKM, LKH] </ref>, the authors propose a more aggressive spindown policy, and support their proposal by simulation studies on workstation and notebook traces. The studies suggest that the gain in energy often overshadows the loss in response time. In [DKM], the comparison of fixed-threshold strategies is made against optimal o*ine algorithms.
Reference: [LPR] <author> C. Lund, S. Phillips, and N. Reingold, </author> <title> "IP over Connection-Oriented Networks and Distributed Paging," </title> <booktitle> Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science (November 1994), </booktitle> <pages> 424-434. </pages>
Reference-contexts: Keeping the virtual circuit open can be thought of as a "rent" while closing it can be considered a "buy." The inter-arrival time of packets on a circuit (i.e., the resource use times in the rent-to-buy model) can be modeled as being drawn independently from a probability distribution <ref> [LPR, SaK] </ref>. An algorithm for the sequential rent-to-buy problem can be visualized in two ways.
Reference: [MDK] <author> B. Marsh, F. Douglis, and P. Krishnan, </author> <title> "Flash Memory File Caching for Mobile Computers," </title> <booktitle> Proceedings of the 27th IEEE Hawaii Conference on System Sciences (January 1994). </booktitle>
Reference-contexts: Current techniques for conserving energy are based on shutting down components of the system after reasonably long periods of inactivity. Recent studies show that the disk subsystem on notebook computers is a major consumer of energy <ref> [DKM, LKH, MDK] </ref>. Most disks used for portable computers (e.g., the small, light-weight Kittyhawk from Hewlett Packard [Pac]) have multiple energy states.
Reference: [Pac] <author> Hewlett Packard, </author> <title> "Kittyhawk HP C3013A/C3014A Personal Storage Modules Technical Reference Manual," </title> <journal> March 1993, </journal> <volume> HP Part No. </volume> <pages> 5961-4343. </pages>
Reference-contexts: Recent studies show that the disk subsystem on notebook computers is a major consumer of energy [DKM, LKH, MDK]. Most disks used for portable computers (e.g., the small, light-weight Kittyhawk from Hewlett Packard <ref> [Pac] </ref>) have multiple energy states.
Reference: [Pol] <author> D. Pollard, </author> <title> Convergence of Stochastic Processes, </title> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: Lemma 5 (see <ref> [Pol] </ref>) Choose M &gt; 0, a probability distribution D on [0; M ], and m 2 IN.
Reference: [RuW] <author> C. Ruemmler and J. Wilkes, </author> <title> "UNIX Disk Access Patterns," </title> <booktitle> Proceedings of the 1993 Winter USENIX Conference (January 1993), </booktitle> <pages> 405-420. </pages>
Reference-contexts: provide more than just two power management states, but only one state, the fully spinning state, allows access to data. 1 relative importance of conserving energy and responding quickly to disk accesses. (This is discussed in detail in Section 6.) Based on observations of disk access patterns in workstation environments <ref> [RuW] </ref>, the times between accesses to disk (which define the rounds) can be assumed to be generated by a probability distribution. The disk spindown problem will be our main motivating application for this study. The Spin/Block Problem. <p> This trace is described in <ref> [RuW] </ref>, and a portion of this trace was also used in a previous study of disk spindown policies [DKM]. The trace was obtained by Ruemmler and Wilkes by monitoring the disk for roughly two months; it consisted of 416262 accesses to disk.
Reference: [SaK] <author> H. Saran and S. Keshav, </author> <title> "An Empirical Evaluation of Virtual Circuit Holding Times in IP-over-ATM networks," </title> <booktitle> Proceedings of INFOCOM '94 (June 1994). </booktitle>
Reference-contexts: In this situation too, practical studies suggest that lock-waiting times can be assumed to obey some unknown but time-invariant probability distribution [KLM]. The Virtual Circuit Problem. Deciding virtual circuit holding times in IP-over-ATM networks is another scenario modeled by the rent-to-buy framework <ref> [SaK] </ref>. When carrying Internet protocol (IP) traffic over an Asynchronous Transfer Mode (ATM) network, a virtual circuit is opened upon the arrival of an IP datagram, and the ATM adaptation layer has to decide how long to hold a virtual circuit open. <p> There are many possible pricing policies for virtual circuit holding times. As described in <ref> [SaK, Section 5] </ref>, in future ATM networks, it is expected that a large number of virtual circuits could be held open by paying a charge per unit time to keep the circuit open. <p> Keeping the virtual circuit open can be thought of as a "rent" while closing it can be considered a "buy." The inter-arrival time of packets on a circuit (i.e., the resource use times in the rent-to-buy model) can be modeled as being drawn independently from a probability distribution <ref> [LPR, SaK] </ref>. An algorithm for the sequential rent-to-buy problem can be visualized in two ways. <p> Karlin et al. in [KLM] have studied the spin/block problem empirically, evaluating different spin/block strategies including fixed-threshold and adaptive strategies. The virtual circuit problem has been empirically studied by Saran et al. <ref> [SaK] </ref>, where they propose a Least Recently Used 3 (LRU)-based holding time policy as performing well in their studies.
Reference: [Vap] <author> V. N. Vapnik, </author> <title> "Inductive principles of the search for empirical dependences (methods based on weak convergence of probability measures)," </title> <booktitle> Proceedings of the 1989 Workshop on Computational Learning Theory (1989). </booktitle> <pages> 24 </pages>
Reference-contexts: The most straightforward solution to the problem [KMM] is to store all past resource use times, and use that cutoff b for the current round which would have had the lowest total cost had we used it in the past. Straightforward application of results of Vapnik <ref> [Vap] </ref> implies that the expected rent-to-buy cost of this strategy converges to that of the best fixed cutoff.
Reference: [VaC] <author> V. N. Vapnik and A. Y. Chervonenkis, </author> <title> "On the Uniform Convergence of Relative Fre--quencies of Events to their Probabilities," </title> <booktitle> Theoretical Probability and Its Applications 16 (1971), </booktitle> <pages> 264-280. </pages>
Reference-contexts: As a result of the VC theory <ref> [BEH, VaC] </ref>, it is easy to partition [0; M ] into v intervals satisfying the density criterion with high probability, by storing = fi (v ln v) examples, and calling a procedure generate cutoffs (w; ; ) on [0; M ]. <p> Lemma 2 below follows immediately from the results of Blumer et al. [BEH] using the techniques of Vapnik and Chervonenkis <ref> [VaC] </ref>. Informally, Lemma 2 says that m points are enough to simultaneously estimate the probabilities of every interval. Lemma 2 Choose 0 &lt; ff; fi 1=2; c 1; and a probability distribution D on IR + .
Reference: [ViK] <author> J. S. Vitter and P. Krishnan, </author> <title> "Optimal Prefetching via Data Compression," </title> <booktitle> Proceedings of the 32nd Annual IEEE Symposium on Foundations of Computer Science (October 1991), </booktitle> <pages> 121-130, </pages> <note> Also appears as Brown University Technical Report No. CS-91-46. 25 </note>
Reference-contexts: Recently, Markov models have been effectively used to analyze caching and prefetching algorithms assuming user requests to pages in cache are generated by Markov sources <ref> [KPR, KrV, ViK] </ref>. Simulations of our algorithm for the disk spindown problem using disk access traces obtained from HP suggest that the rent-to-buy model is a good way to study disk spindown and related systems issues; in particular, a single parameter c effectively models the tradeoff between power and response-time.
References-found: 20

