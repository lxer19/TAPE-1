URL: http://www.daimi.aau.dk/CPnets/workshop98/papers/maier.ps.Z
Refering-URL: http://www.daimi.aau.dk/CPnets/workshop98/papers/
Root-URL: http://www.daimi.aau.dk
Title: Sniff: An Input/Output Library for Design/CPN  
Author: Christoph Maier Daniel Moldt and Heiko Rolke 
Abstract: In our group several projects used and use Coloured Petri nets as their main technique for modeling. Design/CPN has been one of the tools to edit and simulate the Petri net diagrams. However, Design/CPN has to be considered as a closed tool. To enlarge its funcitonality the desire is to open the tool for its environment. This is achieved by a library of functions which are implemented using Design/ML and Mimic allowing selective import and export of single or all pages of a Petri net diagram. Its input/output format is a human-readable text file. The text has a well defined syntax and maintains the nets structure and its content. Hence the interface is public other tools can use the diagrams produced by Design/CPN and Design/CPN can use the output of other tools. 
Abstract-found: 1
Intro-found: 1
Reference: [Becker und Moldt 1993] <author> Ulrich Becker and Daniel Moldt. </author> <title> Object-Oriented Concepts for Coloured Petri Nets. </title> <booktitle> In IEEE, editor, "Conference Proceedings, IEEE International Conference on Systems, Man and Cybernetics", </booktitle> <volume> volume 3, </volume> <pages> pages 279-286, </pages> <address> Le Touquet, Frankreich (17.- 20. </address> <month> October </month> <year> 1993). </year> <note> IEEE. </note>
Reference-contexts: Therefore existing tools are adopted or extended to fit the specific needs within projects. In Hamburg one of the main techniques used within projects were Coloured Petri Nets [Jensen 1992]. Especially in the context of prototyping projects [Beckmann 1993] as well as object-oriented Petri net projects <ref> [Becker und Moldt 1993; Maier 1996] </ref> the need for tool support arose. The tool Design/CPN has been used since its first distribution. However, especially the introduction of new concepts and structuring rules for Coloured Petri nets diagrams required to use an open tool.
Reference: [Beckmann 1993] <author> Nicole Beckmann. </author> <title> Prototyping mit gefarbten Petrinetzen. </title> <type> Studienarbeit, </type> <institution> Universitat Hamburg, Fachbereich Informatik, </institution> <address> Vogt-Kolln Str. 30, 22527 Hamburg, </address> <month> Germany (November </month> <year> 1993). </year> <note> [Design/CPN 1993a] "Design/CPN Handbook: CPN ML - CPN Palette; Part 1, Version 2.0". </note> <institution> Cambridge, </institution> <address> MA, USA (1993). </address>
Reference-contexts: Therefore existing tools are adopted or extended to fit the specific needs within projects. In Hamburg one of the main techniques used within projects were Coloured Petri Nets [Jensen 1992]. Especially in the context of prototyping projects <ref> [Beckmann 1993] </ref> as well as object-oriented Petri net projects [Becker und Moldt 1993; Maier 1996] the need for tool support arose. The tool Design/CPN has been used since its first distribution.
Reference: [Design/CPN 1993b] <institution> Meta Software Corporation, </institution> <address> Cambridge, MA, USA. </address> <note> "Design/CPN Handbook Version 2.0" (1993). </note>
Reference-contexts: 1 Introduction Today's software development needs special and powerful tools which support the underlying concepts and techniques. In the area of specification and prototyping (Coloured) Petri nets are a well known formalism for which the tool Design/CPN <ref> [Design/CPN 1993b] </ref> has specifically been developed, besides some others. Building such tools is a very expensive task as can be seen in all parts of computer science. Therefore existing tools are adopted or extended to fit the specific needs within projects. <p> Hierarchy information for the already mentioned substitutions and fusions are located in such regions, too, as well as simulation specific and other information. For a deeper introduction to Design/CPN see <ref> [Design/CPN 1993b] </ref> or [WWW-Design/CPN 1998a]. Design/ML Design/CPN is based upon the functional programming language ML (see [Design/CPN 1993a; Harper 1986; Paulson 1991]). ML is not only used in code regions of more complex transitions, but it is also possible to execute any program without leaving the tool.
Reference: [Fowler und Scott 1997] <author> Martin Fowler and Kendall Scott. </author> <title> "UML Distilled Applying the Standard Object Modeling Language". </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts (1997). </address>
Reference-contexts: Sniff allows to connect Design/CPN to the output of other tools, e.g. diagrams which contain Coloured Petri nets transformed from class diagrams (for class diagrams see e.g. <ref> [Fowler und Scott 1997] </ref>). Also some extensions were necessary due to some mistakes, gaps, or design flaws within Design/CPN.
Reference: [Harper 1986] <author> Robert Harper. </author> <title> Introduction to Standard ML. </title> <type> LFCS Report Series ECS-LFCS-86-14, </type> <institution> University of Edinburg (1986). </institution>
Reference-contexts: Hierarchy information for the already mentioned substitutions and fusions are located in such regions, too, as well as simulation specific and other information. For a deeper introduction to Design/CPN see [Design/CPN 1993b] or [WWW-Design/CPN 1998a]. Design/ML Design/CPN is based upon the functional programming language ML (see <ref> [Design/CPN 1993a; Harper 1986; Paulson 1991] </ref>). ML is not only used in code regions of more complex transitions, but it is also possible to execute any program without leaving the tool. The language itself is extended mainly by colors of places and variables to satisfy special Petri net needs.
Reference: [Jensen 1992] <author> Kurt Jensen. </author> <title> "Coloured Petri Nets: Volume 1; Basic Concepts, Analysis Methods and Practical Use". </title> <booktitle> EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg New York (1992). </address>
Reference-contexts: Building such tools is a very expensive task as can be seen in all parts of computer science. Therefore existing tools are adopted or extended to fit the specific needs within projects. In Hamburg one of the main techniques used within projects were Coloured Petri Nets <ref> [Jensen 1992] </ref>. Especially in the context of prototyping projects [Beckmann 1993] as well as object-oriented Petri net projects [Becker und Moldt 1993; Maier 1996] the need for tool support arose. The tool Design/CPN has been used since its first distribution.
Reference: [Maier 1996] <author> Christoph Maier. </author> <title> Darstellung von Konzepten der objektorientierten Model-lierung und Programmierung mit Petrinetzen. </title> <type> Studienarbeit, </type> <institution> Universitat Hamburg, Fachbereich Informatik, </institution> <address> Vogt-Kolln Str. 30, 22527 Hamburg, Germany (May 1996). </address>
Reference-contexts: Therefore existing tools are adopted or extended to fit the specific needs within projects. In Hamburg one of the main techniques used within projects were Coloured Petri Nets [Jensen 1992]. Especially in the context of prototyping projects [Beckmann 1993] as well as object-oriented Petri net projects <ref> [Becker und Moldt 1993; Maier 1996] </ref> the need for tool support arose. The tool Design/CPN has been used since its first distribution. However, especially the introduction of new concepts and structuring rules for Coloured Petri nets diagrams required to use an open tool. <p> To load other diagrams only loading of IDEF diagrams was available. However, in some projects it was of interest to load nets which were generated by other tools, e.g. object-oriented Coloured Petri nets as defined in <ref> [Maier 1996; Moldt 1996] </ref>. * A library of Design/CPN diagrams could not be build due to the insufficient import/export functionality. Independent development of parts of a Petri net e.g. by different people was not supported.
Reference: [Moldt 1996] <author> Daniel Moldt. </author> <title> "Hohere Petrinetze als Grundlage fur Systemspezifikationen". </title> <type> Dissertation, </type> <institution> Universitat Hamburg, Fachbereich Informatik, </institution> <address> Vogt-Kolln Str. 30, 22527 Hamburg, </address> <month> Germany (August </month> <year> 1996). </year>
Reference-contexts: To load other diagrams only loading of IDEF diagrams was available. However, in some projects it was of interest to load nets which were generated by other tools, e.g. object-oriented Coloured Petri nets as defined in <ref> [Maier 1996; Moldt 1996] </ref>. * A library of Design/CPN diagrams could not be build due to the insufficient import/export functionality. Independent development of parts of a Petri net e.g. by different people was not supported. <p> The Design/ML allows the expanding or transformation of the other diagrams, for which again Sniff functions can be used. This has been used in the SIMON 5 project <ref> [Moldt 1996] </ref> and worked quite well. The generation of special Petri nets is especially important for net formalisms with a high degree of administrative overhead like pages for class diagrams or message schedulers in object-oriented Petri nets. 3 Conclusion and Future Plans Sniff has been used within several projects.
Reference: [Paulson 1991] <author> Lawrence C. Paulson. </author> <title> "ML for the Working Programmer". </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, England (1991). </address>
Reference-contexts: Hierarchy information for the already mentioned substitutions and fusions are located in such regions, too, as well as simulation specific and other information. For a deeper introduction to Design/CPN see [Design/CPN 1993b] or [WWW-Design/CPN 1998a]. Design/ML Design/CPN is based upon the functional programming language ML (see <ref> [Design/CPN 1993a; Harper 1986; Paulson 1991] </ref>). ML is not only used in code regions of more complex transitions, but it is also possible to execute any program without leaving the tool. The language itself is extended mainly by colors of places and variables to satisfy special Petri net needs.
Reference: [Rasmussen und Singh 1995] <author> Jens L. Rasmussen and Mejar Singh. </author> <title> "Mimic/CPN A Graphic Animation Utility for Design/CPN". </title> <institution> Computer Science Department, Aarhus University, DK-8000 Aarhus C, Denmark, </institution> <note> 1.5 edition (1995). [WWW-Design/CPN 1998a] "http://www.daimi.aau.dk/designCPN/" (1998). [WWW-Design/CPN 1998b] "http://www.daimi.aau.dk/PetriNets/tools/db/designcpn.html" (1998). [WWW-Mimic 1998] "http://www.daimi.aau.dk/designCPN/libs/mimic/" (1998). [WWW-PetriNetStandard 1998] "http://www.daimi.aau.dk/PetriNets/standard/" (1998). </note>
Reference-contexts: The mouse is supported for user interaction. The functions can be used within the edit-mode of Design/CPN. Mainly the selection possibilities for the mouse device are used within Sniff. For more details about Mimic see <ref> [Rasmussen und Singh 1995] </ref> and [WWW-Mimic 1998]. After this introduction section 2 explains basic ideas, architecture, functionality, grammar, and examples files of Sniff and closes with a discussion of gained experience. <p> The creation of the new pages takes care of already existing pages and their numbers. If necessary, the new pages get assigned new pages numbers. The menu was implemented using Mimic for Design/CPN <ref> [Rasmussen und Singh 1995] </ref>. All other parts of Sniff only use functions available in Design/ML. No external function library is needed for execution of Sniff.
References-found: 10

