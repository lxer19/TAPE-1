URL: http://www.cs.tamu.edu/research/robotics/Amato/Papers/vr-tr.ps
Refering-URL: http://www.cs.tamu.edu/faculty/amato/dsmft/publications.html
Root-URL: http://www.cs.tamu.edu
Email: amato@cs.tamu.edu burchanb@cs.tamu.edu kimk@cs.tamu.edu  wooks@cs.tamu.edu gsong@cs.tamu.edu  
Title: Providing Haptic 'Hints' to Automatic Motion Planners  
Author: Nancy M. Amato O. Burchan Bayazit Kyunghwan Kim Wookho Son Guang Song 
Date: November 24, 1998  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 98-026  
Abstract: The overall goal of our project is to design and build a truly interactive virtual environment (VE) system which incorporates efficient dynamic simulation and motion planning techniques applicable to complex three-dimensional systems of bodies in contact. In this paper, we investigate various paradigms for enabling a human operator and an automatic motion planner to cooperatively solve a motion planning query. Communication between the operator and the planner is through haptic and visual interfaces. fl This research supported in part by NSF CAREER Award CCR-9624315 (with REU Supplement), NSF Grants IIS-9619850 (with REU Supplement), EIA-9805823, and EIA-9810937, and by the Texas Higher Education Coordinating Board under grant ARP-036327-017. Bayazit is supported in part by the Turkish Ministry of Education. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. M. Ahuactzin and K. Gupta. </author> <title> A motion planning based approach for inverse kinematics of redundant robots: The kinematic roadmap. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 3609-3614, </pages> <year> 1997. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [2] <author> N. M. Amato, O. B. Bayazit, L. K. Dale, C. V. Jones, and D. Vallejo. </author> <title> Choosing good distance metrics and local planners for probabilistic roadmap methods. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 630-637, </pages> <year> 1998. </year>
Reference-contexts: At the same time, there are many examples of problems that are challenging for automatic planning methods, but trivial for humans (see, e.g., <ref> [2] </ref>). It is our belief that `hints' from human operators could provide a means of increasing the efficiency of automatic methods, while still relieving the operator from the tedious, time-consuming work of producing the path manually. <p> The force feedback can be determined by repulsive potential fields generated by configurations in the roadmap [13, 14], where closeness is defined by an appropriate distance function in C-space <ref> [2] </ref>. 4 3.3 Human/Planner Cooperation In this section we describe several general ways in which the human operator and the motion planner can work together to solve a motion planning query.
Reference: [3] <author> N. M. Amato, O. B. Bayazit, L. K. Dale, C. V. Jones, and D. Vallejo. OBPRM: </author> <title> An obstacle-based PRM for 3D workspaces. </title> <booktitle> In Proc. Int. Workshop on Algorithmic Foundations of Robotics (WAFR), </booktitle> <year> 1998. </year>
Reference-contexts: The haptic device used in this study is the PHANToM [16], a finger controller with 3 active degrees of freedom (dof) and a 3 dof passive gimbal. It permits users to feel the force that arises from point interactions with virtual objects. The automatic planning method used is OBPRM <ref> [3] </ref>, which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) [12]. As this study is focussed on evaluating various cooperation paradigms, our system incorporates only rudimentary dynamics, collision detection methods, and visual display. <p> For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot. <p> If the configurations were collected in a dilated space, then the configurations in collision could serve as milestones in the dilated freespace in [7] or as seed nodes in OBPRM <ref> [3] </ref> (which attempts to `push' them to freespace). When the human operator collects a path in a dilated freespace, some segments of the path may be in collision. <p> Two methods of recording robot configurations were implemented: continuous (path) recording (done at preset time intervals), and discrete (critical configuration) recording (done only upon operator request). The motion planner used was OBPRM <ref> [3] </ref> (see Section 3), which was augmented with the methods for incorporating the approximate paths and critical configurations sketched above.
Reference: [4] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> Int. J. Robot. Res., </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot [20]. Recently, some promising randomized methods have been proposed (see, e.g., <ref> [4, 12] </ref>), but there still exist many important applications that have not been solved by current methods. In this work, we investigate a mechanism for allowing user input to help guide automatic motion planning algorithms.
Reference: [5] <author> R. B. Gillespie. </author> <title> Stable user-specific haptic rendering of the virtual wall. </title> <booktitle> In Int. Mechanical Engineering Exposition and Congress, </booktitle> <volume> DSC 58, </volume> <pages> pages 397-406, </pages> <address> Atlanta, GA, </address> <year> 1996. </year> <editor> K. Danai, ed., </editor> <publisher> ASME. </publisher>
Reference-contexts: Dynamic Simulation. Physically-based animations and haptic interfaces require real-time dynamic simulations. In recent years, haptic interfaces have been successfully used in some specific applications such as a virtual wall, a bouncing ball, and cart-pendulum, etc. <ref> [5, 21, 22] </ref>. Most of these VE systems were application specific. Once the target is changed, designers must develop new VEs, including implementing new motion equations and defining a set of parameters for the new environments.
Reference: [6] <author> T. Horsch, F. Schwarz, and H. Tolle. </author> <title> Motion planning for many degrees of freedom random reflections at c-space obstacles. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 3318-3323, </pages> <year> 1994. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [7] <author> D. Hsu, L. Kavraki, J-C. Latombe, R. Motwani, and S. Sorkin. </author> <title> On finding narrow passages with probabilistic roadmap planners. </title> <booktitle> In Proc. Int. Workshop on Algorithmic Foundations of Robotics (WAFR), </booktitle> <year> 1998. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot. <p> In both cases, the configurations generated might be required to be free, or some penetration might be allowed. The latter case can be viewed as `dilating' the robot's free space <ref> [7] </ref>. In addition to `direct' manipulation, paths could be generated by an artificial potential field [13, 14]. In this case, the operator could apply a force to the robot (e.g., push it) and allow it to move under the effect of that force. <p> The planner's role is to incorporate the configurations captured by the operator, and construct the missing portions of the path, if any. If the configurations were collected in a dilated space, then the configurations in collision could serve as milestones in the dilated freespace in <ref> [7] </ref> or as seed nodes in OBPRM [3] (which attempts to `push' them to freespace). When the human operator collects a path in a dilated freespace, some segments of the path may be in collision.
Reference: [8] <author> D. Hsu, J-C. Latombe, and R. Motwani. </author> <title> Path planning in expansive configuration spaces. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 2719-2726, </pages> <year> 1997. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [9] <author> Y. K. Hwang and N. Ahuja. </author> <title> Gross motion planning a survey. </title> <journal> ACM Computing Surveys, </journal> <volume> 24(3) </volume> <pages> 219-291, </pages> <year> 1992. </year> <month> 9 </month>
Reference-contexts: 1 Introduction Motion planning arises in many application domains such as robotics, virtual reality systems, and computer-aided design. Algorithms for performing fully automatic motion planning would be highly desirable for many of these applications, and as such, have been the object of much research <ref> [9, 15] </ref>. Despite the large effort that has been spent on this problem, efficient fully automatic solutions are known only for very limited scenarios.
Reference: [10] <author> L. Kavraki. </author> <title> Random Networks in Configuration Space for Fast Path Planning. </title> <type> PhD thesis, </type> <institution> Stanford Univ, Computer Science Dept., </institution> <year> 1995. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [11] <author> L. Kavraki and J. C. Latombe. </author> <title> Randomized preprocessing of configuration space for fast path planning. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 2138-2145, </pages> <year> 1994. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [12] <author> L. Kavraki, P. Svestka, J. C. Latombe, and M. Overmars. </author> <title> Probabilistic roadmaps for path planning in high-dimensional configuration spaces. </title> <journal> IEEE Trans. Robot. Automat., </journal> <volume> 12(4) </volume> <pages> 566-580, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot [20]. Recently, some promising randomized methods have been proposed (see, e.g., <ref> [4, 12] </ref>), but there still exist many important applications that have not been solved by current methods. In this work, we investigate a mechanism for allowing user input to help guide automatic motion planning algorithms. <p> It permits users to feel the force that arises from point interactions with virtual objects. The automatic planning method used is OBPRM [3], which is a representative of the class of planners known as probabilistic roadmap methods (PRMs) <ref> [12] </ref>. As this study is focussed on evaluating various cooperation paradigms, our system incorporates only rudimentary dynamics, collision detection methods, and visual display. <p> For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [13] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> Int. J. Robot. Res., </journal> <volume> 5(1) </volume> <pages> 90-98, </pages> <year> 1986. </year>
Reference-contexts: The force feedback can be determined by repulsive potential fields generated by configurations in the roadmap <ref> [13, 14] </ref>, where closeness is defined by an appropriate distance function in C-space [2]. 4 3.3 Human/Planner Cooperation In this section we describe several general ways in which the human operator and the motion planner can work together to solve a motion planning query. <p> In both cases, the configurations generated might be required to be free, or some penetration might be allowed. The latter case can be viewed as `dilating' the robot's free space [7]. In addition to `direct' manipulation, paths could be generated by an artificial potential field <ref> [13, 14] </ref>. In this case, the operator could apply a force to the robot (e.g., push it) and allow it to move under the effect of that force. The planner's role is to incorporate the configurations captured by the operator, and construct the missing portions of the path, if any.
Reference: [14] <author> P. Khosla and R. Volpe. </author> <title> Superquadratic artificial potentials for obstacle avoidance and approach. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 1178-1184, </pages> <year> 1988. </year>
Reference-contexts: The force feedback can be determined by repulsive potential fields generated by configurations in the roadmap <ref> [13, 14] </ref>, where closeness is defined by an appropriate distance function in C-space [2]. 4 3.3 Human/Planner Cooperation In this section we describe several general ways in which the human operator and the motion planner can work together to solve a motion planning query. <p> In both cases, the configurations generated might be required to be free, or some penetration might be allowed. The latter case can be viewed as `dilating' the robot's free space [7]. In addition to `direct' manipulation, paths could be generated by an artificial potential field <ref> [13, 14] </ref>. In this case, the operator could apply a force to the robot (e.g., push it) and allow it to move under the effect of that force. The planner's role is to incorporate the configurations captured by the operator, and construct the missing portions of the path, if any.
Reference: [15] <author> J. C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Motion planning arises in many application domains such as robotics, virtual reality systems, and computer-aided design. Algorithms for performing fully automatic motion planning would be highly desirable for many of these applications, and as such, have been the object of much research <ref> [9, 15] </ref>. Despite the large effort that has been spent on this problem, efficient fully automatic solutions are known only for very limited scenarios. <p> The latter necessitates an understanding of and a methodology for exploiting the relative strengths of both the human user and the automatic planners. In this paper, we concentrate on (ii). 2 Motion Planning. Despite the great amount of effort spent on motion planning <ref> [15] </ref>, there exist many important applications that have resisted automatic solution. It is our belief that the input of a human operator might allow some such problems to be solved. However, there are still many problem domains for which better planning methods are needed. <p> Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap <ref> [15] </ref>). Roadmap nodes correspond to collision-free configurations of the robot. Two nodes are connected by an edge if a path between the two corresponding configurations can be found by a local planning method.
Reference: [16] <author> T. H. Massie and J. K. Salisbury. </author> <title> The PHANToM haptic interface: A device for probing virtual objects. </title> <booktitle> In Int. Mechanical Engineering Exposition and Congress, </booktitle> <pages> DSC 55-1, pages 295-302, </pages> <address> Chicago, </address> <year> 1994. </year> <editor> C. J. Radcliffe, ed., </editor> <publisher> ASME. </publisher>
Reference-contexts: Our study considers several general ways in which this communication can be structured, compares these methods according to ease of use and effectiveness for solving motion planning queries, and provides recommendations for further development. 1 Scope. The haptic device used in this study is the PHANToM <ref> [16] </ref>, a finger controller with 3 active degrees of freedom (dof) and a 3 dof passive gimbal. It permits users to feel the force that arises from point interactions with virtual objects. <p> The improved roadmap which incorporated the operator generated approximate path is shown in (c). 4 Our VE System Our experiments were conducted using a PHANToM haptic device <ref> [16] </ref> and an SGI O2 graphics workstation. A bilateral connection exists between the PHANToM and the SGI O2 (the graphics display). The graphics keep track of the position updates of the PHANToM finger tip (gimbal), and the PHANToM generates force-feedback using the collision/penetration information from the graphics display.
Reference: [17] <author> H. Nakagaki and K. Kitagaki. </author> <title> Study of deformation tasks of a flexible wire. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. </booktitle> <address> Autom. (ICRA), pages ??-??, Albuquerque, NM, </address> <year> 1997. </year>
Reference-contexts: However, there are still many problem domains for which better planning methods are needed. For example, planning manipulation tasks involving contact of rigid bodies remains a challenging problem despite receiving much attention. When flexible models are involved, the difficulty only increases <ref> [17, 25] </ref>. One of our research goals is to model various contact states such as deformation, friction, multiple points of contact and multi-body dynamics. Dynamic Simulation. Physically-based animations and haptic interfaces require real-time dynamic simulations.
Reference: [18] <author> M. Overmars. </author> <title> A random approach to path planning. </title> <type> Technical Report RUU-CS-92-32, </type> <institution> Computer Science, Utrecht University, </institution> <address> The Netherlands, </address> <year> 1992. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [19] <author> M. Overmars and P. Svestka. </author> <title> A probabilistic learning approach to motion planning. </title> <booktitle> In Proc. Workshop on Algorithmic Foundations of Robotics, </booktitle> <pages> pages 19-37, </pages> <year> 1994. </year>
Reference-contexts: For example, they enable the operator to explore the robot's six-dimensional C-space by combining visualizaton of the three-dimensional workspace (3 dof for the operator) and force feedback (another 3 dof). 3.1 Probabilistic Roadmap Methods Our interest in motion planning is focused on probabilistic roadmap methods (PRMs) <ref> [1, 3, 6, 7, 8, 10, 11, 12, 18, 19] </ref>. Briefly, PRMs, use randomization (usually during preprocessing) to construct a graph in C-space (a roadmap [15]). Roadmap nodes correspond to collision-free configurations of the robot.
Reference: [20] <author> J. Reif. </author> <title> Complexity of the piano mover's problem and generalizations. </title> <booktitle> In Proc. IEEE Symp. Foundations of Computer Science (FOCS), </booktitle> <pages> pages 421-427, </pages> <year> 1979. </year>
Reference-contexts: Indeed, there is strong evidence that any complete planner (one that is guaranteed to find a solution or determine that none exists) requires time exponential in the number of degrees of freedom (dof) of the robot <ref> [20] </ref>. Recently, some promising randomized methods have been proposed (see, e.g., [4, 12]), but there still exist many important applications that have not been solved by current methods. In this work, we investigate a mechanism for allowing user input to help guide automatic motion planning algorithms.
Reference: [21] <author> C. Richard, A. M. Okamura, and M. R. Cutkosky. </author> <title> Getting a feel for dynamics : Using haptic interface kits for teaching dynamics and controls. </title> <booktitle> In ASME IMECE 6th Annual Symp. on Haptic Interfaces, </booktitle> <address> pages ??-??, Dallas, TX, </address> <month> November </month> <year> 1997. </year>
Reference-contexts: Dynamic Simulation. Physically-based animations and haptic interfaces require real-time dynamic simulations. In recent years, haptic interfaces have been successfully used in some specific applications such as a virtual wall, a bouncing ball, and cart-pendulum, etc. <ref> [5, 21, 22] </ref>. Most of these VE systems were application specific. Once the target is changed, designers must develop new VEs, including implementing new motion equations and defining a set of parameters for the new environments.
Reference: [22] <author> S. E. Salcudean and T. D. Vlaar. </author> <title> On the emulation of stiff walls and static friction with a magnetically levitated input / output device. </title> <booktitle> In Symp. on Haptic Interfaces for Virtual Environment and Teleoperator Systems, Proc. of the ASME Winter Annual Meeting, </booktitle> <pages> pages 303-309, </pages> <year> 1994. </year>
Reference-contexts: Dynamic Simulation. Physically-based animations and haptic interfaces require real-time dynamic simulations. In recent years, haptic interfaces have been successfully used in some specific applications such as a virtual wall, a bouncing ball, and cart-pendulum, etc. <ref> [5, 21, 22] </ref>. Most of these VE systems were application specific. Once the target is changed, designers must develop new VEs, including implementing new motion equations and defining a set of parameters for the new environments.
Reference: [23] <author> Sensable Technologies, Inc. </author> <title> GHOST Software Developer's Toolkit Programmer's Guide Version 1.21. </title>
Reference-contexts: The graphics keep track of the position updates of the PHANToM finger tip (gimbal), and the PHANToM generates force-feedback using the collision/penetration information from the graphics display. Our haptic-interaction applications were developed using the C++ General Haptic Open Software Toolkit (GHOST SDK) <ref> [23] </ref>. The PHANToM can be viewed as a transmission between the three DC brushed motors with shaft encoders and the human fingers.
Reference: [24] <author> K. B. Shimoga. </author> <title> A survey of perceptual feedback issue in dexterous telemanipulation: Part I. finger force feedback. </title> <booktitle> In Proc. of Virtual Reality Annual Int. Symp. (VRAIS), </booktitle> <pages> pages 263-270, </pages> <year> 1993. </year>
Reference-contexts: Implementation Challenges. A key challenge in haptic systems is performing the dynamics calculations fast enough to maintain servo rates. To enable delicate manipulation in virtual environments, a human should feel force feedback on the order of several hundred hertz <ref> [24] </ref>. Due to computational limitations, all the routines may not be executed within this servo rate. Many systems address this problem by performing the dynamic simulation, haptic interface, and the visual display in separate processes, perhaps on different machines [26].
Reference: [25] <author> D. Sun, X. Shi, and Y. Liu. </author> <title> Modeling and cooperation of two-arm robotic system manipulating a deformable object. </title> <booktitle> In Proc. IEEE Int. Conf. Robot. Autom. (ICRA), </booktitle> <pages> pages 2346-2351, </pages> <address> Albuquerque, NM, </address> <year> 1997. </year>
Reference-contexts: However, there are still many problem domains for which better planning methods are needed. For example, planning manipulation tasks involving contact of rigid bodies remains a challenging problem despite receiving much attention. When flexible models are involved, the difficulty only increases <ref> [17, 25] </ref>. One of our research goals is to model various contact states such as deformation, friction, multiple points of contact and multi-body dynamics. Dynamic Simulation. Physically-based animations and haptic interfaces require real-time dynamic simulations.
Reference: [26] <author> T. V. Thompson, D. E. Johnson, and E. Cohen. </author> <title> Direct haptic rendering of sculptured models. </title> <booktitle> In Proc. Symp. on Interactive 3D Graphics, </booktitle> <address> Providence, RI, </address> <month> April </month> <year> 1997. </year> <title> 10 (a) Accumulated count of collisions. (b) Clearance (distance from nearest obstacle). (c) Contact force acting on the robot. robot's clearance, and (c) contact force acting on the robot. 11 (a) Accumulated count of collisions. (b) Clearance (distance from nearest obstacle). (c) Contact Force acting on the robot. robot's clearance, and (c) contact force acting on the robot. </title> <type> 12 </type>
Reference-contexts: Due to computational limitations, all the routines may not be executed within this servo rate. Many systems address this problem by performing the dynamic simulation, haptic interface, and the visual display in separate processes, perhaps on different machines <ref> [26] </ref>. Another technique of meeting the servo rate is to use intermediate representations, or reasonable approximations, of the virtual models in the dynamic simulation or in the haptic process. These problems become only more pronounced as the complexity of the virtual scene increases.
References-found: 26

