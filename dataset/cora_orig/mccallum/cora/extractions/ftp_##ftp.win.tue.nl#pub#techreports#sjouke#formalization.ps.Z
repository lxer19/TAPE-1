URL: ftp://ftp.win.tue.nl/pub/techreports/sjouke/formalization.ps.Z
Refering-URL: http://www.win.tue.nl/win/cs/fm/sjouke/msc.html
Root-URL: http://www.win.tue.nl
Email: E-mail: sjouke@win.tue.nl  
Title: The formalization of Message Sequence Charts  
Author: S. Mauw a 
Keyword: Message Sequence Charts; semantics; process algebra.  
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands.  
Affiliation: a Dept. of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract: We discuss the state of affairs with respect to the formalization of Message Sequence Charts (MSC) and identify which parts of the definition of MSC are still candidate for formalization. Further, we give a tutorial on the formal semantics of MSC. The semantics of all features from the MSC language is treated by presenting small examples and the corresponding process algebra expressions. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> F. Belina, D. Hogrefe, and A. Sarma. </author> <title> SDL with applications from protocol specification. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: It is standardized by the ITU (International Telecommunication Union). The ITU maintains recommendation Z.120 [5], which contains a (partly informal) definition of MSC. MSCs are applied in the telecommunication sector for the specification of system requirements and for testing, often in combination with SDL <ref> [1, 4] </ref>. Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics.
Reference: 2. <author> J. de Man. </author> <title> Towards a formal semantics of Message Sequence Charts. </title> <editor> In O. Faerge-mand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics. Several approaches have been studied (see <ref> [2, 3, 8, 13] </ref>) of which the process algebra approach was accepted for standardization [6, 9]. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10].
Reference: 3. <author> J. Grabowski, P. Graubmann, and E. Rudolph. </author> <title> Towards a Petri Net based semantics definition for Message Sequence Charts. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Else-vier Science Publishers B.V. </publisher>
Reference-contexts: Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics. Several approaches have been studied (see <ref> [2, 3, 8, 13] </ref>) of which the process algebra approach was accepted for standardization [6, 9]. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10].
Reference: 4. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.100: Specification and Description Language (SDL). </title> <address> ITU-TS, Geneva, </address> <year> 1988. </year>
Reference-contexts: It is standardized by the ITU (International Telecommunication Union). The ITU maintains recommendation Z.120 [5], which contains a (partly informal) definition of MSC. MSCs are applied in the telecommunication sector for the specification of system requirements and for testing, often in combination with SDL <ref> [1, 4] </ref>. Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics.
Reference: 5. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.120: Message Sequence Chart (MSC). </title> <address> ITU-TS, Geneva, </address> <year> 1994. </year>
Reference-contexts: 1. INTRODUCTION Message Sequence Charts (MSC) is a graphical language for the specification of system traces. It is standardized by the ITU (International Telecommunication Union). The ITU maintains recommendation Z.120 <ref> [5] </ref>, which contains a (partly informal) definition of MSC. MSCs are applied in the telecommunication sector for the specification of system requirements and for testing, often in combination with SDL [1, 4]. <p> Thanks are due to Jos Baeten, Oystein Haugen, Richard Sanders and Louis Verhaard for commenting on a draft version of this paper. 2. FORMALIZATION In this section we will explore which parts of the MSC landscape are suited for formalization. First we will summarize the current situation. Recommendation Z.120 <ref> [5] </ref> contains the definition of MSC, as accepted by the ITU. It contains a textual and graphical syntax and an informal description of the meaning of an MSC. Appendix B to recommendation Z.120 [6] contains a formal description of the semantics of MSC using process algebra. <p> It consists of a procedure to transform an expression into a behaviour (an execution step) and a new expression (the result after executing this step). Using the operational semantics one can prototype or test an expression. The semantics of MSC is described in Z.120 <ref> [5] </ref> in an informal and often operational way. The formal semantics is given in [6] by means of a translation into process algebra expressions. This is a denotational semantics. However, one can easily assign an operational semantics to these process algebra expressions, by adding transition rules.
Reference: 6. <author> ITU-TS. </author> <title> ITU-TS Recommendation Z.120 Annex B: Algebraic semantics of Message Sequence Charts. </title> <address> ITU-TS, Geneva, </address> <year> 1995. </year>
Reference-contexts: The first part subject to formalization was the semantics. Several approaches have been studied (see [2, 3, 8, 13]) of which the process algebra approach was accepted for standardization <ref> [6, 9] </ref>. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10]. It is investigated whether other parts of Z.120 also need formalization. <p> First we will summarize the current situation. Recommendation Z.120 [5] contains the definition of MSC, as accepted by the ITU. It contains a textual and graphical syntax and an informal description of the meaning of an MSC. Appendix B to recommendation Z.120 <ref> [6] </ref> contains a formal description of the semantics of MSC using process algebra. Finally, a proposal for a formal definition of the static requirements for MSC is in [10, 15]. We consider the textual syntax, the graphical syntax and the semantics. 2.1. <p> Using the operational semantics one can prototype or test an expression. The semantics of MSC is described in Z.120 [5] in an informal and often operational way. The formal semantics is given in <ref> [6] </ref> by means of a translation into process algebra expressions. This is a denotational semantics. However, one can easily assign an operational semantics to these process algebra expressions, by adding transition rules. This is elaborated for Basic Message Sequence Charts in [9]. <p> FORMAL SEMANTICS The purpose of this section is to give an overview of the process algebra semantics of MSC, as defined in <ref> [6] </ref>. Process algebra theory will be avoided as much as possible. We present a series of MSC examples and explain for each example the process algebra expression that denotes its semantics.
Reference: 7. <author> ITU-TS. </author> <title> Minutes of MSC internet meeting on semantics of conditions. </title> <booktitle> MSC internet meeting TD11, </booktitle> <year> 1995. </year>
Reference-contexts: The disadvantage is that it is more difficult to establish a formal relation between the operational and denotational semantics in this way. The current semantics does not define the composition and decomposition of MSCs. The inclusion of explicit mechanisms for structuring a specification are still under discussion <ref> [7] </ref>. We conclude that with respect to the semantics, work is needed on defining the operational semantics and defining the composition of MSCs. 2.4. Other issues In this section we will discuss some issues concerning formalization that are not strictly related to one of the items from Figure 1. <p> Conditions A condition marks a point in an MSC which is of special interest. As has been concluded in <ref> [7] </ref>, conditions are used for many purposes, e.g. for composition of MSCs and for describing a particular state. Some problematic issues concerning the meaning of conditions were discussed in [11].
Reference: 8. <author> P.B. Ladkin and S. Leue. </author> <title> Interpreting Message Sequence Charts. </title> <type> Technical Report IBM RJ 8965, </type> <institution> IBM Almaden Research Center, </institution> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics. Several approaches have been studied (see <ref> [2, 3, 8, 13] </ref>) of which the process algebra approach was accepted for standardization [6, 9]. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10].
Reference: 9. <author> S. Mauw and M.A. Reniers. </author> <title> An algebraic semantics of Basic Message Sequence Charts. </title> <journal> The computer journal, </journal> <volume> 37(4) </volume> <pages> 269-277, </pages> <year> 1994. </year>
Reference-contexts: The first part subject to formalization was the semantics. Several approaches have been studied (see [2, 3, 8, 13]) of which the process algebra approach was accepted for standardization <ref> [6, 9] </ref>. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10]. It is investigated whether other parts of Z.120 also need formalization. <p> The formal semantics is given in [6] by means of a translation into process algebra expressions. This is a denotational semantics. However, one can easily assign an operational semantics to these process algebra expressions, by adding transition rules. This is elaborated for Basic Message Sequence Charts in <ref> [9] </ref>. It is not difficult to extend the formal semantics of the complete MSC language with operational rules. Instead of giving an indirect operational semantics by defining the operational behaviour of the process algebra expressions, it is also possible to give an operational semantics directly based on MSC.
Reference: 10. <author> S. Mauw and M.A. Reniers. </author> <title> Formalization of static requirements for Message Sequence Charts. </title> <booktitle> Joint rapporteurs meeting SG10, </booktitle> <address> Geneva TD9010, ITU-TS, </address> <year> 1994. </year>
Reference-contexts: Several approaches have been studied (see [2, 3, 8, 13]) of which the process algebra approach was accepted for standardization [6, 9]. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized <ref> [10] </ref>. It is investigated whether other parts of Z.120 also need formalization. The second goal of this paper is to describe the state of affairs with respect to the formalization of MSC and to indicate which parts possibly need further formalization. <p> Appendix B to recommendation Z.120 [6] contains a formal description of the semantics of MSC using process algebra. Finally, a proposal for a formal definition of the static requirements for MSC is in <ref> [10, 15] </ref>. We consider the textual syntax, the graphical syntax and the semantics. 2.1. Textual syntax Although MSC is basically a graphical language, a textual syntax is defined for manipulation of MSCs, such as exchanging them between users or tools. <p> This gives raise to a set of requirements on MSC. These are often called static semantics, but we prefer static requirements or context sensitive syntax. 1 The definition of the static requirements in Z.120 is in natural language and thus informal. Formalizing the requirements <ref> [10, 15] </ref> not only helped in removing ambiguities and making Z.120 more consistent, it also revealed some deficiencies. We may conclude that the textual syntax will soon be formalized completely. 2.2. Graphical syntax The graphical syntax from Z.120 is defined by BNF-like production rules. <p> STATIC REQUIREMENTS This section contains a short explanation of the static requirements for MSC, as formalized in <ref> [10] </ref>. 13 4.1. Requirements Z.120 contains an informal description of a number of static requirements for MSC. The requirements treated in [10] either follow from recommendation Z.120 or from the discussion within the ITU study group maintaining this recommendation. <p> STATIC REQUIREMENTS This section contains a short explanation of the static requirements for MSC, as formalized in <ref> [10] </ref>. 13 4.1. Requirements Z.120 contains an informal description of a number of static requirements for MSC. The requirements treated in [10] either follow from recommendation Z.120 or from the discussion within the ITU study group maintaining this recommendation. The requirements are stated in terms of predicates and functions on the textual syntax of MSC.
Reference: 11. <author> S. Mauw and M.A. Reniers. </author> <title> Thoughts on the meaning of conditions. </title> <booktitle> Experts meeting SG10, </booktitle> <address> St. Petersburg TD9016, ITU-TS, </address> <year> 1995. </year>
Reference-contexts: Conditions A condition marks a point in an MSC which is of special interest. As has been concluded in [7], conditions are used for many purposes, e.g. for composition of MSCs and for describing a particular state. Some problematic issues concerning the meaning of conditions were discussed in <ref> [11] </ref>. Due to this variety of uses and the wide range of interpretations, conditions are considered as meaningless in the formal semantics. This is expressed by defining the semantics of a condition as ", which is the process that displays no activity.
Reference: 12. <author> S. Mauw and E.A. van der Meulen. </author> <title> Generating tools for Message Sequence Charts. In SDL'95 with MSC in CASE, </title> <booktitle> Proceedings of the Seventh SDL Forum, </booktitle> <address> Oslo, 1995. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: In exchanging MSCs between tools one often wants to include information that is not represented in the semantics, such as concrete positions of objects in the graphical representation. A (formalized) interchange language will be useful for this. In <ref> [12] </ref> a collection of tools for Basic Message Sequence Charts was formally specified. Although it is possible to formalize all tools and uses of the MSC language, it is, in our opinion, not desirable to restrict users and tool builders too much.
Reference: 13. <author> S. Mauw, M. van Wijk, and T. Winter. </author> <title> A formal semantics of synchronous Interwork-ings. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects, </title> <booktitle> Proceedings of the Sixth SDL Forum, </booktitle> <address> Darmstadt, 1993. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: Because of its widespread use, discussions on the meaning of an MSC became unavoidable, so it was decided to start the formalization of MSC several years ago. The first part subject to formalization was the semantics. Several approaches have been studied (see <ref> [2, 3, 8, 13] </ref>) of which the process algebra approach was accepted for standardization [6, 9]. One of the purposes of this paper is to give an informal tutorial on this process algebra semantics. Currently, the static requirements are formalized [10].
Reference: 14. <author> J. Rekers. </author> <title> A definition of the graphical syntax of Basic Message Sequence Charts. </title> <type> Technical report, </type> <institution> Leiden University. </institution> <note> (in preparation). </note>
Reference-contexts: It is hard to define a two-dimensional structure using a set of linear production rules. A more natural way of dealing with this problem is to use, so-called, graph grammars. A promising approach is given in <ref> [14] </ref>. It defines both an abstract and concrete graphical syntax for Basic Message Sequence Charts. The graphical grammar in Z.120 is accompanied by a series of informal drawing rules, which partly restrict the number of allowed MSCs and partly help to interpret MSCs whose meaning is not obvious.
Reference: 15. <author> M.A. Reniers. </author> <title> Static semantics of Message Sequence Charts. In SDL'95 with MSC in CASE, </title> <booktitle> Proceedings of the Seventh SDL Forum, </booktitle> <address> Oslo, 1995. </address> <publisher> Elsevier Science Publishers B.V. </publisher>
Reference-contexts: Appendix B to recommendation Z.120 [6] contains a formal description of the semantics of MSC using process algebra. Finally, a proposal for a formal definition of the static requirements for MSC is in <ref> [10, 15] </ref>. We consider the textual syntax, the graphical syntax and the semantics. 2.1. Textual syntax Although MSC is basically a graphical language, a textual syntax is defined for manipulation of MSCs, such as exchanging them between users or tools. <p> This gives raise to a set of requirements on MSC. These are often called static semantics, but we prefer static requirements or context sensitive syntax. 1 The definition of the static requirements in Z.120 is in natural language and thus informal. Formalizing the requirements <ref> [10, 15] </ref> not only helped in removing ambiguities and making Z.120 more consistent, it also revealed some deficiencies. We may conclude that the textual syntax will soon be formalized completely. 2.2. Graphical syntax The graphical syntax from Z.120 is defined by BNF-like production rules.
References-found: 15

