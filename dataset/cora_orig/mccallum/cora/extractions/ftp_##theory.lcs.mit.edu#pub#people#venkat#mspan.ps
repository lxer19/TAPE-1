URL: ftp://theory.lcs.mit.edu/pub/people/venkat/mspan.ps
Refering-URL: http://theory.lcs.mit.edu/~venkat/pubs/publist.html
Root-URL: 
Phone: 2  
Title: Restrictions of Minimum Spanner Problems  
Author: G. Venkatesan U. Rotics M.S. Madanlal ? J.A. Makowsy ?? C. Pandu Rangan 
Note: Current Address:  Partially Supported by German Israeli Foundation  
Address: Madras-600 036, INDIA.  32000 Haifa, ISRAEL.  California.  
Affiliation: 1 Department of Computer Science and Engineering Indian Institute of Technology  Department of Computer Science Technion-Israel Institute of Technology  Department of Computer Science, Stanford University, Stanford,  
Abstract: A t-spanner of a graph G is a spanning subgraph H such that the distance between any two vertices in H is at most t times their distance in G. Spanners arise in the context of approximating the original graph by a sparse subgraph [23]. The MINIMUM t-SPANNER problem seeks to find a t-spanner with the minimum number of edges for the given graph. In this paper, we completely settle the complexity status of this problem for various values of t, on Chordal graphs, Split graphs, Bipartite graphs and Convex Bipartite graphs. Our results settle an open question raised in [7] and also greatly simplify some of the proofs presented in [7, 8]. We also give a factor two approximation algorithm for the MINIMUM 2-SPANNER problem on interval graphs. Finally, we provide approximation algorithms for the bandwidth minimization problem on Convex Bipartite graphs and Split graphs using the notion of tree spanners. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Althofer, G.Das, D.Dobkin, D.Joseph and J.Soares, </author> <title> On sparse spanners of weighted graphs, </title> <journal> Discrete Comput. Geom., </journal> <volume> 9(1993), </volume> <pages> 81=100. </pages>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph.
Reference: [2] <author> S.F.Assmann, G.W.Peck, M.M.Syslo and J.Zak, </author> <title> The Bandwidth of cater pillars with hairs of length 1 and 2, </title> <journal> SIAM Journal on Algebraic and Discrete Methods, </journal> <volume> 2(1981), </volume> <pages> 387-393. </pages>
Reference-contexts: A caterpillar is a special kind of tree consisting of a simple chain with "hairs" attached to each vertex. If each hair has a length k, it is called as a caterpillar of hair length at most k. The following is by Assmann et.al <ref> [2] </ref>. Minimum Spanners 18 Theorem 6.1 Bandwidth of caterpillars of hair length at most 2 can be found in O (n log n) time. As Bandwidth Minimization is intractable on many classes of graphs, we can try to find an approximate bandwidth of a given graph.
Reference: [3] <author> B.Awerbuch, </author> <title> Complexity of Network synchronization, </title> <journal> J.ACM, </journal> <volume> 32(1985), </volume> <pages> 804-823. </pages> <note> Minimum Spanners 22 </note>
Reference-contexts: In what follows, all graphs we deal with are finite, simple, undirected and connected. Motivation The notion of t-spanners was introduced by Peleg and Ullman [24] in connection with the design of synchronizers. The synchronizer is a simulation technology introduced by Awerbuch <ref> [3] </ref> which enables the execution of a synchronous algorithm on an asynchronous network. The t-spanner is the underlying graph structure of the synchronizer, and the stretch factor and size of the t-spanner are closely related to the time and communication complexities of the synchronizer respectively.
Reference: [4] <author> H.Bandelt and A.Dress, </author> <title> Reconstructing the shape of a tree from observed dissimilarity data, </title> <journal> Adv. Appl. Math., </journal> <volume> 7(1986), </volume> <pages> 309-343. </pages>
Reference-contexts: Spanners also have applications in planning efficient routing schemes while maintaining succinct routing tables [25]. Spanners also arise in computational geometry in the study of approximation of complete Euclidean graphs [10] and in computational biology in the process of reconstruction of phylogenetic trees <ref> [4] </ref>. The study of graph spanners has been very active in the last few years.
Reference: [5] <author> K.S.Booth and G.S.Lueker, </author> <title> Testing for the Consecutive Ones Property, In terval Graphs and Graph Planarity using P-Q Tree Algorithms. </title> <journal> J. Comput. </journal> <note> System Sciences 13 335-379 (1976). </note>
Reference-contexts: Given the adjacency matrix A, of a Bipartite graph, it is convex if and only if A has consecutive 1's property. So, the recognition algorithm is straight forward and is linear <ref> [5] </ref>. From now on, we assume that the ordering of the vertices of Y is available.
Reference: [6] <author> L.Cai, </author> <title> Tree Spanners: Spanning Trees that approximate distances. </title> <type> Tech. Report 260/92, </type> <institution> University of Toronto, </institution> <year> (1992). </year>
Reference-contexts: Clearly if G is connected, s t (G) jV (G)j 1 with equality holding if and only if G admits a tree t-spanner <ref> [6] </ref>. The decision version of the MINIMUM t-SPANNER problem consists of a graph G = (V; E) and a goal K 0 and the question is whether G has a t-spanner with K or fewer edges i.e whether s t (G) K. <p> The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph.
Reference: [7] <author> L.Cai, </author> <title> NP-completeness of minimum spanner problems, </title> <journal> Disc. Appl. Math., </journal> <volume> 48(1994), </volume> <pages> 187-194. </pages>
Reference-contexts: Therefore, one of the fundamental problems in the study of spanners is to find a minimum t-spanner of a graph where t 1 is a fixed integer (stretch factor). Finding a minimum 2-spanner is NP-hard for general graphs [23]. Later, Cai <ref> [7] </ref> proved that minimum t-spanner is NP-hard for each t 3 using a rather complicated reduction from 3SAT. MINIMUM t-SPANNER, for each fixed t 2, remains NP-hard on graphs with maximum degree equal to nine [8]. <p> As corollary, this also holds for perfect graphs. For t = 2 this is new. A polynomial approximation algorithm was given for t = 2; 3; 5 in [23], however the exact complexity was still considered open in <ref> [7] </ref>. For its subclass of interval graphs it was shown in [20, 27] that the problem is polynomial for t 3. For t = 2 the exact complexity of the problem remains open, but we show here a polynomial 2-approximation algorithm. <p> Bipartite graphs In contrast to split graphs, for bipartite graphs the case t = 2 is trivially polynomial as there are no edges which can be replaced by a path of length 2. But the case t 3 is NP-hard, <ref> [7] </ref>. In this paper we present a new and simpler proof of this. Minimum Spanners 3 We also look at a fairly large subclass of bipartite graphs, namely the convex bipartite graphs. Here we prove that finding optimal t-spanners is polynomial for every t 2. <p> As every chordal graph is perfect we get Corollary 4 The MINIMUM t-SPANNER problem on perfect graphs is NP-hard for all integers t 2. For t 3 this also follows from the NP-hardness of the MINIMUM t-SPANNER problem for bipartite graphs, <ref> [7] </ref>, cf. also theorem 3.1. For t = 2 the result of the corollary is new. <p> The results obtained or improved in this paper are summarized in the table below: Class t = 1 t = 2 t 3 Bipartite <ref> [7] </ref> P P NP-hard Convex Bipartite P P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 <p> The results obtained or improved in this paper are summarized in the table below: Class t = 1 t = 2 t 3 Bipartite <ref> [7] </ref> P P NP-hard Convex Bipartite P P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 t 3 Interval P ? P [27, 20] Permutation P ? P [20] It is interesting to <p> The same phenomenon occurs when passing from chordal graphs to interval graphs. Many graphs in concrete applications are planar. That is why the following question, which was also left open in <ref> [7] </ref>, is an extremely interesting one. Problem 2 Determine the complexity of the MINIMUM t-SPANNER problem (t 2) for planar graphs (or even planar graphs of bounded degree). The MINIMUM t-SPANNER problem is not monotone in t. Some cases remain open for t = 2.
Reference: [8] <author> L.Cai and M.Keil, </author> <title> Spanners in Graphs of Bounded Degree, </title> <journal> Networks, </journal> <volume> 24(1994), </volume> <pages> 233-249. </pages>
Reference-contexts: Finding a minimum 2-spanner is NP-hard for general graphs [23]. Later, Cai [7] proved that minimum t-spanner is NP-hard for each t 3 using a rather complicated reduction from 3SAT. MINIMUM t-SPANNER, for each fixed t 2, remains NP-hard on graphs with maximum degree equal to nine <ref> [8] </ref>. Because of these intractability results, the complexity of MINIMUM t-SPANNER for Minimum Spanners 2 useful subclasses of graphs becomes interesting. <p> Also, a linear algorithm for the MINIMUM 2-SPANNER problem on graphs with bounded degree 4 is presented in <ref> [8] </ref>. Discussion of main results In this paper we study the MINIMUM t-SPANNER problem for chordal, bipartite and split graphs. We also consider interval graphs (which are a subclass of chordal graphs), convex bipartite graphs and graphs of bounded degrees. <p> For t = 2 the result of the corollary is new. Remark: Using a similar approach and by bonding "suitable" graphs at each triangle of the graph H 2 constructed in the reduction of lemma 2.2, one can prove in a much simpler way than that given in <ref> [8] </ref> that MINIMUM t-SPANNER is NP-hard on degree-bounded graphs for each fixed t 2. 5 Minimum 2-spanner on Interval Graphs All connected interval graphs admit a tree 3-spanner that can be computed in linear time [20, 27], hence it follows that the minimum t-spanner of an interval Minimum Spanners 15 graph <p> The results obtained or improved in this paper are summarized in the table below: Class t = 1 t = 2 t 3 Bipartite [7] P P NP-hard Convex Bipartite P P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree <ref> [8] </ref> P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 t 3 Interval P ? P [27, 20] Permutation P ? P [20] It is interesting to note that the MINIMUM t-SPANNER problem
Reference: [9] <author> L.Cai and J.M.Keil, </author> <title> Degree-Bounded Spanners, </title> <journal> Parallel Processing Letters, </journal> <volume> 3(1993), </volume> <pages> 457-468. </pages>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph. <p> Minimum Spanners 3 We also look at a fairly large subclass of bipartite graphs, namely the convex bipartite graphs. Here we prove that finding optimal t-spanners is polynomial for every t 2. Bounded degree graphs Finally we look at graphs of bounded degree with bound k. In <ref> [9] </ref> it is shown that for k 9 finding optimal t-spanners is NP-hard for t 2. Our techniques used for the case of chordal graphs can be used to simplify the proof of this result. In [9] it is also shown that for k 4 the 2-spanner problem is polynomial. <p> In <ref> [9] </ref> it is shown that for k 9 finding optimal t-spanners is NP-hard for t 2. Our techniques used for the case of chordal graphs can be used to simplify the proof of this result. In [9] it is also shown that for k 4 the 2-spanner problem is polynomial. For the remaining non-trivial combinations of t and k the exact complexity of the MINIMUM t-SPANNER problem still remains as open. Organization of the paper In detail the paper is organized as follows.
Reference: [10] <author> L.P.Chew, </author> <title> There is a planar graph almost as good as the complete graph, </title> <booktitle> Proceedings 2nd ACM Symposium on Computational Geometry, </booktitle> <address> Yorktown Heights, </address> <publisher> NY(1986), </publisher> <pages> 169-177. </pages>
Reference-contexts: Spanners also have applications in planning efficient routing schemes while maintaining succinct routing tables [25]. Spanners also arise in computational geometry in the study of approximation of complete Euclidean graphs <ref> [10] </ref> and in computational biology in the process of reconstruction of phylogenetic trees [4]. The study of graph spanners has been very active in the last few years.
Reference: [11] <author> M.R.Garey, R.L.Graham, D.S.Johnson and D.E.Knuth, </author> <title> Complexity results for Bandwidth Minimization, </title> <journal> SIAM Journal on Applied Mathematics, </journal> <volume> 34, </volume> <year> 477-495,(1978). </year>
Reference-contexts: The bandwidth minimization problem is in general very tough. The first NP-hardness result on general graphs was shown by Papadimitriou [22]. Later, Garey et.al <ref> [11] </ref> showed that this problem is NP-hard even when restricted to trees having maximum degree of three. A caterpillar is a special kind of tree consisting of a simple chain with "hairs" attached to each vertex.
Reference: [12] <author> M.R.Garey and D.S.Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: However we prove a stronger result constraining the input graph G is degree-bounded. More precisely we prove: Lemma 2.2 It is NP-hard to determine t 2 (G) even for a graph G with (G) = 9. Proof : The reduction is from the vertex cover problem on cubic graphs <ref> [12] </ref>. Let H 1 = (V 1 ; E 1 ) be a cubic graph with V 1 = f1; 2; : : :; ng, E 1 = fe i = (p i ; q i ) : 1 i mg.
Reference: [13] <author> P.C.Gilmore and A.J.Hoffman, </author> <title> A characterizatiion of comparability graphs and of interval graphs, </title> <journal> Canad. J. Math., </journal> <volume> 16, </volume> <pages> 539-548, </pages> <year> (1964). </year>
Reference-contexts: A maximal clique of G is a clique C of G, such that for every vertex v of V which is not in C, the set of vertices C [ fvg is not a clique of G. The following theorem is from <ref> [13] </ref>: Theorem 5.1 (Gilmore and Hoffman) A graph G is an interval graph if and only if the set of vertices of G can be linearly ordered such that, for every vertex x of G, the maximal cliques containing x occur consecutively.
Reference: [14] <author> M.C.Golumbic, </author> <title> Algorithmic Graph Theory and Perfect Graphs. </title> <publisher> (Academic Press, </publisher> <address> New York, </address> <year> 1980). </year>
Reference: [15] <author> F.Harary, </author> <title> Graph Theory (Addison-Wesley, </title> <address> Reading, Mass., </address> <year> 1969). </year>
Reference-contexts: In section 5 we present approximation algorithms for interval graphs and in section 6 we discuss the applications to the bandwidth minimization problem. In section 7 we draw conclusions and present open problems. Notation The notations and definitions not stated explicitly may be found in <ref> [15] </ref>. We use u ~ v to mean that u is adjacent to v. The neighborhood of a vertex v in G is denoted by N G (v). When the graph being referred to is obvious, we just use N (v).
Reference: [16] <author> T.Kloks, D.Kratsch and H.Muller, </author> <title> Approximating the bandwidth for aster oidal triple-free graphs, </title> <institution> Forschungsergebnisse Math/95/6, Friedrich Schiller University, Germany, </institution> <year> 1995. </year>
Reference-contexts: Up to our knowledge, there is no algorithm for approximate bandwidth of general graphs, and even for trees. An approximate algorithm for Asteroidal Triple-Free Graphs was given by Kloks et.al <ref> [16] </ref>. In this section, we seek to find approximate algorithms for certain classes of graphs using the concept of tree-spanners.
Reference: [17] <author> G.Kortsarz and D.Peleg, </author> <title> Generating sparse 2-spanners, </title> <booktitle> in: Third SWAT, </booktitle> <year> (1992). </year>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph. <p> However, the MINIMUM 2-SPANNER problem on interval graphs is an intriguing open problem and as a first step, we proceed to give a factor 2 approximation algorithm for the same. Note that a factor O (log (jEj=jV j)) approximation algorithm exists for the MINIMUM 2-SPANNER problem on general graphs <ref> [17] </ref>. Recall that a clique of a graph G = (V; E) is a set of vertices C V such that for any pair of vertices u; v in C the edge (u; v) is in E.
Reference: [18] <author> A.L.Liestman and T.C.Shermer, </author> <title> Additive graph Spanners, </title> <journal> Networks, </journal> <volume> 23(1993), </volume> <pages> 343-364. </pages> <note> Minimum Spanners 23 </note>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph.
Reference: [19] <author> A.L.Liestman and T.C.Shermer, </author> <title> Grid Spanners, </title> <journal> Networks, </journal> <volume> 23(2)(1993), </volume> <pages> 123-133. </pages>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph.
Reference: [20] <author> M.S.Madanlal, G. Venkatesan and C.Pandu Rangan, </author> <title> Tree 3-spanners on Interval, Permutation and Regular Bipartite Graphs, </title> <journal> Information Processing Letters, </journal> <volume> 59 (2) (1996), </volume> <pages> 97-102. </pages>
Reference-contexts: Because of these intractability results, the complexity of MINIMUM t-SPANNER for Minimum Spanners 2 useful subclasses of graphs becomes interesting. Linear algorithms exist for the MINIMUM t-SPANNER problem on interval and permutation graphs for each fixed t 3 <ref> [20] </ref>, however the case t = 2 remains open for both these classes of graphs. Also, a linear algorithm for the MINIMUM 2-SPANNER problem on graphs with bounded degree 4 is presented in [8]. <p> As corollary, this also holds for perfect graphs. For t = 2 this is new. A polynomial approximation algorithm was given for t = 2; 3; 5 in [23], however the exact complexity was still considered open in [7]. For its subclass of interval graphs it was shown in <ref> [20, 27] </ref> that the problem is polynomial for t 3. For t = 2 the exact complexity of the problem remains open, but we show here a polynomial 2-approximation algorithm. <p> For t = 2 the exact complexity of the problem remains open, but we show here a polynomial 2-approximation algorithm. Note that also for permutation graphs the exact complexity of finding optimal 2-spanners remains open, whereas for t 3 the problem is polynomial, <ref> [20] </ref>. Split graphs In the case of split graphs we show in this paper that the case of t = 2 is NP-hard whereas the case t 3 is polynomial. The reason for this is that for t 3 there is an optimal t-spanner which is a tree. <p> Madanlal and C. Pandu Rangan in India and U. Rotics and J.A. Makowsky in Israel. [27], which was accepted for publication first, contains the NP-completeness for chordal graphs (the result was however proved in a different manner) and the polynomial algorithm for interval graphs, which also appears in <ref> [20] </ref>. [27] was subsequently replaced by the current paper with five authors. We would like to thank L. Cai for bringing to our mutual attention the work of the other team and also for providing us other valuable references. <p> of lemma 2.2, one can prove in a much simpler way than that given in [8] that MINIMUM t-SPANNER is NP-hard on degree-bounded graphs for each fixed t 2. 5 Minimum 2-spanner on Interval Graphs All connected interval graphs admit a tree 3-spanner that can be computed in linear time <ref> [20, 27] </ref>, hence it follows that the minimum t-spanner of an interval Minimum Spanners 15 graph can be found in linear time for t 3. <p> Minimum Spanners 19 Proof: Note that the tree 3-spanners we have constructed for convex bipartite graphs in theorem 3.2 and that constructed in <ref> [20] </ref> for permutation graphs are caterpillars of hair length at most 2. The proof of this theorem directly follows from corollary 5 and theorem 6.1. 6.1.1 Two Approximation for Bandwidth of Convex Bipartite Graphs Now we improve the previous result on Convex Bipartite Graphs by providing a factor two approximation. <p> = 1 t = 2 t 3 Bipartite [7] P P NP-hard Convex Bipartite P P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers <ref> [20, 27] </ref>: Class t = 1 t = 2 t 3 Interval P ? P [27, 20] Permutation P ? P [20] It is interesting to note that the MINIMUM t-SPANNER problem (t 3), which remains NP-hard on Bipartite graphs is solvable in linear time when restricted to Convex Bipartite graphs. <p> P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 t 3 Interval P ? P <ref> [27, 20] </ref> Permutation P ? P [20] It is interesting to note that the MINIMUM t-SPANNER problem (t 3), which remains NP-hard on Bipartite graphs is solvable in linear time when restricted to Convex Bipartite graphs. <p> Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 t 3 Interval P ? P [27, 20] Permutation P ? P <ref> [20] </ref> It is interesting to note that the MINIMUM t-SPANNER problem (t 3), which remains NP-hard on Bipartite graphs is solvable in linear time when restricted to Convex Bipartite graphs.
Reference: [21] <author> G. Narasimhan, B. Chandra, D. Gautam and J. Soares. </author> <title> New sparseness re sults on graph spanners. </title> <booktitle> In 8th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 192-201, </pages> <year> 1992. </year>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph.
Reference: [22] <author> C.H.Papadimitriou, </author> <title> The N P Completeness of the bandwidth minimiza tion problem, </title> <journal> Computing, </journal> <volume> 16, </volume> <pages> 263-270, </pages> <year> (1976). </year>
Reference-contexts: The bandwidth minimization problem is in general very tough. The first NP-hardness result on general graphs was shown by Papadimitriou <ref> [22] </ref>. Later, Garey et.al [11] showed that this problem is NP-hard even when restricted to trees having maximum degree of three. A caterpillar is a special kind of tree consisting of a simple chain with "hairs" attached to each vertex.
Reference: [23] <author> D.Peleg and A.A.Schaffer, </author> <title> Graph Spanners, </title> <journal> Journal of Graph Theory, </journal> <volume> 13(1), </volume> <pages> 99-116, </pages> <year> (1989). </year>
Reference-contexts: The study of graph spanners has been very active in the last few years. Most of the work has been focused on finding spanners with few edges, small degree, light weights or small stretch factors or on finding optimal spanners on restricted classes of graphs <ref> [1, 6, 9, 17, 18, 19, 21, 23] </ref>. The key ideas behind the notion of spanners is to approximate the pairwise distances in the original graph by a sparse spanning subgraph. <p> Therefore, one of the fundamental problems in the study of spanners is to find a minimum t-spanner of a graph where t 1 is a fixed integer (stretch factor). Finding a minimum 2-spanner is NP-hard for general graphs <ref> [23] </ref>. Later, Cai [7] proved that minimum t-spanner is NP-hard for each t 3 using a rather complicated reduction from 3SAT. MINIMUM t-SPANNER, for each fixed t 2, remains NP-hard on graphs with maximum degree equal to nine [8]. <p> As corollary, this also holds for perfect graphs. For t = 2 this is new. A polynomial approximation algorithm was given for t = 2; 3; 5 in <ref> [23] </ref>, however the exact complexity was still considered open in [7]. For its subclass of interval graphs it was shown in [20, 27] that the problem is polynomial for t 3.
Reference: [24] <author> D.Peleg and J.D.Ullman, </author> <title> An optimal synchronizer for the hypercube, </title> <booktitle> Pro ceedings of the 6th ACM Symposium on Principles of Distributed Computing, Vancouver (1987), </booktitle> <pages> 77-85. </pages>
Reference-contexts: In what follows, all graphs we deal with are finite, simple, undirected and connected. Motivation The notion of t-spanners was introduced by Peleg and Ullman <ref> [24] </ref> in connection with the design of synchronizers. The synchronizer is a simulation technology introduced by Awerbuch [3] which enables the execution of a synchronous algorithm on an asynchronous network.
Reference: [25] <author> D.Peleg and E.Upfal, </author> <title> A tradeoff between space and efficiency for routing tables, </title> <booktitle> Proceedings of the 20th ACM Symposium on Theory of Computing, Chicago (1988), </booktitle> <pages> 43-52. </pages>
Reference-contexts: The t-spanner is the underlying graph structure of the synchronizer, and the stretch factor and size of the t-spanner are closely related to the time and communication complexities of the synchronizer respectively. Spanners also have applications in planning efficient routing schemes while maintaining succinct routing tables <ref> [25] </ref>. Spanners also arise in computational geometry in the study of approximation of complete Euclidean graphs [10] and in computational biology in the process of reconstruction of phylogenetic trees [4]. The study of graph spanners has been very active in the last few years.
Reference: [26] <author> G.Ramalingam and C.Pandu Rangan, </author> <title> A Unified Approach to Domination problems on Interval graphs, </title> <journal> Info. Proc. Letters, </journal> <volume> 27 (1988), </volume> <pages> 271-274. </pages>
Reference: [27] <author> J.A. Makowsky and U. Rotics. </author> <title> Spanners in interval and chordal graphs. </title> <type> Technical Report, </type> <institution> Department of Computer Science, Technion-Israel Institute of Technology, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: As corollary, this also holds for perfect graphs. For t = 2 this is new. A polynomial approximation algorithm was given for t = 2; 3; 5 in [23], however the exact complexity was still considered open in [7]. For its subclass of interval graphs it was shown in <ref> [20, 27] </ref> that the problem is polynomial for t 3. For t = 2 the exact complexity of the problem remains open, but we show here a polynomial 2-approximation algorithm. <p> Acknowledgments This paper reports results which were mostly obtained independently by G. Venkatesan, M.S. Madanlal and C. Pandu Rangan in India and U. Rotics and J.A. Makowsky in Israel. <ref> [27] </ref>, which was accepted for publication first, contains the NP-completeness for chordal graphs (the result was however proved in a different manner) and the polynomial algorithm for interval graphs, which also appears in [20]. [27] was subsequently replaced by the current paper with five authors. <p> Madanlal and C. Pandu Rangan in India and U. Rotics and J.A. Makowsky in Israel. <ref> [27] </ref>, which was accepted for publication first, contains the NP-completeness for chordal graphs (the result was however proved in a different manner) and the polynomial algorithm for interval graphs, which also appears in [20]. [27] was subsequently replaced by the current paper with five authors. We would like to thank L. Cai for bringing to our mutual attention the work of the other team and also for providing us other valuable references. <p> The Israeli Minimum Spanners 4 team would like to thank also to B. Courcelle, D. Peleg, R. Shamir and K. Simon for pointing out important references and critical comments to <ref> [27] </ref>. 2 A useful NP-complete problem In this section we prove the NP-hardness of a useful problem which we will use for reductions to prove NP-hardness later on. <p> of lemma 2.2, one can prove in a much simpler way than that given in [8] that MINIMUM t-SPANNER is NP-hard on degree-bounded graphs for each fixed t 2. 5 Minimum 2-spanner on Interval Graphs All connected interval graphs admit a tree 3-spanner that can be computed in linear time <ref> [20, 27] </ref>, hence it follows that the minimum t-spanner of an interval Minimum Spanners 15 graph can be found in linear time for t 3. <p> = 1 t = 2 t 3 Bipartite [7] P P NP-hard Convex Bipartite P P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers <ref> [20, 27] </ref>: Class t = 1 t = 2 t 3 Interval P ? P [27, 20] Permutation P ? P [20] It is interesting to note that the MINIMUM t-SPANNER problem (t 3), which remains NP-hard on Bipartite graphs is solvable in linear time when restricted to Convex Bipartite graphs. <p> P P Chordal P NP-hard NP-hard Perfect P NP-hard NP-hard [7] Split P NP-hard P Bounded-degree [8] P NP-hard NP-hard Minimum Spanners 21 For completeness we also summarize the results obtained in the companion papers [20, 27]: Class t = 1 t = 2 t 3 Interval P ? P <ref> [27, 20] </ref> Permutation P ? P [20] It is interesting to note that the MINIMUM t-SPANNER problem (t 3), which remains NP-hard on Bipartite graphs is solvable in linear time when restricted to Convex Bipartite graphs.
Reference: [28] <author> A.P.Sprague, </author> <title> An O(n log n) algorithm for bandwidth of interval graphs, </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 7, </volume> <pages> 213-220, </pages> <year> (1994). </year>
Reference-contexts: Similarly, we can prove that if two intervals intersect then the corresponding vertices are adjacent in I. So, I is an interval graph. Using the fact that the bandwidth of an interval graph can be computed in O (n log n) time <ref> [28] </ref> and using lemma 6.1, the following theorem can be deduced: Theorem 6.3 A two approximation of bandwidth of a Convex Bipartite Graph can be found in O (m + n log n) time. 6.2 Two Approximation for Bandwidth of Split Graphs We now give a factor two approximation algorithm for
Reference: [29] <author> M.Yannakakis and F.Gavril, </author> <title> Edge Dominating sets in graphs, </title> <journal> SIAM Jl. of Appl. Math., </journal> <volume> 38 (1980), </volume> <pages> 364-372. </pages>
Reference-contexts: Proof : As mentioned earlier, it suffices to consider odd t 3. The reduction is from the edge domination problem on Bipartite graphs <ref> [29] </ref>. Let H = (X; Y; E) be a Bipartite graph with X = fx 1 ; x 2 ; : : : ; x r g, Y = fy 1 ; y 2 ; : : : ; y s g and jEj = m.
Reference: [30] <author> M.Yannakakis, </author> <title> Edge-deletion problems, </title> <journal> SIAM J. Computing, </journal> <volume> 10 (1981), </volume> <pages> 297-309. </pages>
Reference-contexts: Lemma 2.1 It is NP-hard to determine t 2 (G) of a general graph G. The above lemma can be proved through a reduction from the vertex-cover problem using some modifications in the idea used in <ref> [30] </ref> to prove the NP-hardness of the following problem: Given a graph G = (V; E), find a set P of minimum number of edges in E such that any triangle in G has at least one edge in P .
References-found: 30

