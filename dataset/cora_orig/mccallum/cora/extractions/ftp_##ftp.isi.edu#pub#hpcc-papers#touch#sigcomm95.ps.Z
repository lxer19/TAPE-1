URL: ftp://ftp.isi.edu/pub/hpcc-papers/touch/sigcomm95.ps.Z
Refering-URL: http://www.isi.edu/div7/atomic2/pubs.html
Root-URL: http://www.isi.edu
Email: (touch@isi.edu)  
Title: Performance Analysis of MD5 Measurements of MD5s reference implementation. Manual optimizations to reference implementation. Analysis
Author: Joseph D. Touch 
Note: 1: Introduction An overview of MD5 and its relevance to IPv6.  Recommendations for further work, and pending proposals.  
Affiliation: USC Information Sciences Institute  
Abstract: MD5 is an authentication algorithm proposed as the required implementation of the authentication option in IPv6. This paper presents an analysis of the speed at which MD5 can be implemented in software and hardware, and discusses whether its use interferes with high bandwidth networking. The analysis indicates that MD5 software currently runs at 85 Mbps on a 190 Mhz RISC architecture, a rate that cannot be improved more than 20-40%. Because MD5 processes the entire body of a packet, this data rate is insufficient for current high bandwidth networks, including HiPPI and FiberChannel. Further analysis indicates that a 300 Mhz custom VLSI CMOS hardware implementation of MD5 may run as fast as 256 Mbps. The hardware rate cannot support existing IPv4 data rates on high bandwidth links (800 Mbps HiPPI). The use of MD5 as the default required authentication algorithm in IPv6 should therefore be reconsidered, and an alternative should be proposed. This paper includes a brief description of the properties of such an alternative, including a sample alternate hash algorithm. The current Internet Protocol (IP) is undergoing its first major revision in 14 years [24]. As part of that revision, the new IP (IPv6, [12]) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 [1]. Analysis indicates that MD5 may not adhere to the performance criterion of IPv6 [23], and thus its mandate as the default for a required option in IPv6 should be reconsidered. This paper is organized as follows: 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Atkinson, R., </author> <note> IPv6 Authentication Header, (working draft - draft-ietf-ipngwg-auth-00.txt), </note> <month> February </month> <year> 1995. </year>
Reference-contexts: As part of that revision, the new IP (IPv6, [12]) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 <ref> [1] </ref>. Analysis indicates that MD5 may not adhere to the performance criterion of IPv6 [23], and thus its mandate as the default for a required option in IPv6 should be reconsidered. This paper is organized as follows: An overview of MD5 and its relevance to IPv6. <p> Authentication is a required option in IPv6. The authentication option allows per-packet specification of the particular authentication algorithm <ref> [1] </ref>. In keeping with the required option spirit, one algorithm is required to be implemented. The IPv6 authentication mechanism proposes MD5 as its required algorithm. Internet RFCs and Internet Drafts regarding authentication do not address performance issues (as a rule). <p> The following is a partial list of protocols or protocol options using MD5. Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* <ref> [1] </ref> [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other
Reference: [2] <author> Atkinson, R., </author> <title> IPv6 Security Architecture, </title> <note> (working draft - draft-ietf-ipngwg-sec-00.txt), </note> <month> February </month> <year> 1995. </year>
Reference: [3] <author> Atkinson, R., </author> <title> IPv6 Encapsulating Security Payload (ESP), </title> <note> (working draft - draft-ietf-ipngwg-esp-00.txt), </note> <month> February </month> <year> 1995. </year>
Reference-contexts: Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) <ref> [3] </ref> IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [4] <author> Baker, F., and Atkinson, R., </author> <title> OSPF MD5 Authentication, </title> <note> (working draft - draft-ietf-osp5-md5-03.txt), </note> <month> March </month> <year> 1995. </year>
Reference-contexts: Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* <ref> [4] </ref> RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [5] <author> Baker, F., and Atkinson, R., </author> <title> RIP-II Cryptographic Authentication, </title> <note> (working draft - draft-ietf-ripv2-md5-04.txt), </note> <month> March </month> <year> 1995. </year>
Reference-contexts: protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* <ref> [5] </ref> RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [6] <author> Bradner, S., and Mankin, A., </author> <title> The Recommendation for the IP Next Generation Protocol, </title> <type> RFC 1752, </type> <institution> Harvard University, USC/Information Sciences Institute, </institution> <month> January </month> <year> 1995. </year>
Reference: [7] <author> Deering, S., </author> <title> Simple Internet Protocol Plus (SIPP), </title> <note> (working draft - draft-ietf-sipp-spec-01.txt), </note> <month> July </month> <year> 1994. </year>
Reference-contexts: Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) <ref> [7] </ref> OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [8] <author> DiMarco, J., </author> <title> Spec Benchmark table, </title> <address> V4.12 &lt;ftp:// ftp.cdf.toronto.edu/pub/spectable&gt;. </address>
Reference-contexts: The values chosen for block sizes were based on information on external and internal cache sizes as published with the SPEC Benchmark results <ref> [8] </ref>. All four configurations used randomized block initializations to remove potential data-dependent performance differences. MD5 is not a data-dependent algorithm, but some architectures could have exhibit data-dependent performance variations (though they did not). The code was compiled under both native and GNU-based C compilers (where available) with all optimizations. <p> Another modification to MD5 would permit parallelization, both in custom hardware and software on integer-parallel architectures. There are several proposals to modify MD5 to permit finite parallelism over a single stream. One solution replaces chaining with per-block seeds <ref> [8] </ref>. Each seed is computed as a hash of the offset of the block in the stream, thus retaining the block-order dependency of block chaining. It does not retain the property that the digest of a block is dependent on the contents of all prior blocks.
Reference: [9] <author> Feldmeier, D., and McAuley, A., </author> <title> Reducing Protocol Ordering Constraints to Improve Performance, in Protocols for High-Speed Networks, III, </title> <editor> Eds. Pehrson, B., Gunningberg, P., and Pink, S., </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1992, </year> <pages> pp. 3-17. </pages>
Reference: [10] <author> Galvin, J., and McCloghrie, H., </author> <title> Security Protocols for version 2 of the Simple Network Management Protocol(SNMPv2), </title> <type> RFC 1446, </type> <institution> Trusted Information Systems, Hughes LAN Systems, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Notable exceptions are the ESP encapsulation mechanism [19], a keyed MD5 [20], and the technical criteria of IPv6 [23]. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation <ref> [10] </ref> [11] [28]. MD5 can be implemented in software on a 190 Mhz RISC processor at 85 Mbps. On a Sun SPARC 20/71, MD5 executes at 57-59 Mbps, but IPv4 executes at 120 Mbps (via Fore SBA-200 IP over ATM). <p> The following is a partial list of protocols or protocol options using MD5. Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 <ref> [10] </ref> IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not
Reference: [11] <author> Heffernan, A., </author> <title> TCP MD5 Signature Option, </title> <note> (working draft - draft-hefferman-tcp-md5-01.txt), </note> <month> March </month> <year> 1995. </year>
Reference-contexts: Notable exceptions are the ESP encapsulation mechanism [19], a keyed MD5 [20], and the technical criteria of IPv6 [23]. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation [10] <ref> [11] </ref> [28]. MD5 can be implemented in software on a 190 Mhz RISC processor at 85 Mbps. On a Sun SPARC 20/71, MD5 executes at 57-59 Mbps, but IPv4 executes at 120 Mbps (via Fore SBA-200 IP over ATM). <p> chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP <ref> [11] </ref> SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols. SNMP V2 is a control protocol, not intended for high bandwidth continuous stream operation, so protocol performance is not critical.
Reference: [12] <author> Hinden, R., </author> <title> Internet Protocol, </title> <note> Version 6 (IPv6) Specification, (working draft draft-ietf-ipngwg-ipv6-spec-01.txt), </note> <month> March </month> <year> 1995. </year>
Reference-contexts: 1: Introduction The current Internet Protocol (IP) is undergoing its first major revision in 14 years [24]. As part of that revision, the new IP (IPv6, <ref> [12] </ref>) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 [1]. <p> The following is a partial list of protocols or protocol options using MD5. Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] <ref> [12] </ref> IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [13] <author> Hostetler, J., and Sink, E., </author> <title> A Proposed Extension to HTTP: SimpleMD5 Access Authorization, </title> <booktitle> (work in progress). </booktitle>
Reference-contexts: implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 <ref> [13] </ref> There is some concern that the performance of MD5 may not keep up with these other protocols. SNMP V2 is a control protocol, not intended for high bandwidth continuous stream operation, so protocol performance is not critical.
Reference: [14] <author> Irissou, B., </author> <title> Design Techniques for High-Speed Datapaths, </title> <type> Master's Thesis, </type> <institution> University of California at Berkeley, CSD, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: The 3-input logical functions F,G,H,I were replaced with a single logical block. The four adders remain. For VLSI CMOS implementation, the one fast adder has a single-cycle time of 3.2 ns, and requires 3.2 ns precharging <ref> [14] </ref>. This adder would run at approximately 300 Mhz, and require two clocks per add (i.e., supporting a 150 Mhz processor). The rotate uses with a zero-cost wiring permutation in the best case, and logical circuit in the worst. CMOS latch setup time can be as low as 2 ns.
Reference: [15] <author> Kaliski, B., </author> <title> The MD2 Message-Digest Algorithm, RFC-1319, RSA Data Security, </title> <publisher> Inc., </publisher> <month> April </month> <year> 1992. </year>
Reference-contexts: MD4 is expected to run in 2/3 the time of MD5. MD4 is not necessarily the best substitute for MD5, due to security considerations. Implementations of other algorithms have been measured as follows. MD5 is given for comparison; all measurements are in software on a Sun SPARC 20/71: MD2 <ref> [15] </ref> - 1.8 Mbps SHA [22] - 30 Mbps DES [21] - 20.6 Mbps MD5 - 57 Mbps The result is that current alternatives are slower than MD5 in software.
Reference: [16] <author> Leech, M., </author> <title> Key-seeded MD5 authentication for SOCKS, </title> <note> (working draft - draft-ietf-aft-socks-md5-auth-00.txt), Octo-ber 1994. </note>
Reference-contexts: because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 <ref> [16] </ref> WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols. SNMP V2 is a control protocol, not intended for high bandwidth continuous stream operation, so protocol performance is not critical.
Reference: [17] <author> Malkin, G., </author> <note> RIP for IPv6, (working draft - draft-ietf-ripv2-ripng-00.txt), </note> <month> November </month> <year> 1994. </year>
Reference-contexts: this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* <ref> [17] </ref> TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [18] <author> McCanne, S., and Torek, C., </author> <title> A Randomized Sampling Clock for CPU Utilization Estimation and Code Profiling, </title> <booktitle> Proc. Winter USENIX, </booktitle> <address> San Diego, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: The flags were added to permit run-time configuration, and to provide configuration for cache management. The CPU time measurement was changed to use the more accurate getrusage () function, although even that function is known to have potentially large errors on heavily-loaded machines <ref> [18] </ref>. Lightly-loaded machines were used to avoid such errors. The Optimized configuration included modifications: On little-endian machines, load 32-bit words directly. Avoid byte-swapping and copy overhead altogether. On big-endian machines, use more effective swap code. - Use a more efficient byte-swap source code. - Unroll the byte swap routine.
Reference: [19] <author> Metzger, P., Karn, P., and Simpson, W., </author> <title> The ESP DES-CBC Transform, </title> <note> (working draft - draft-ietf-ipsec-esp-des-cbc-04.txt), </note> <month> April </month> <year> 1995. </year>
Reference-contexts: In keeping with the required option spirit, one algorithm is required to be implemented. The IPv6 authentication mechanism proposes MD5 as its required algorithm. Internet RFCs and Internet Drafts regarding authentication do not address performance issues (as a rule). Notable exceptions are the ESP encapsulation mechanism <ref> [19] </ref>, a keyed MD5 [20], and the technical criteria of IPv6 [23]. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation [10] [11] [28]. <p> MD5 requires that both the sender and receiver compute the digest of the entire body of a message. MD5 is used for authentication in a number of protocols. It is also included as an encapsulation mechanism in SIPP, IPv6, and IPv4 <ref> [19] </ref>. The following is a partial list of protocols or protocol options using MD5. <p> Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 <ref> [19] </ref> [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols. <p> SNMP V2 is a control protocol, not intended for high bandwidth continuous stream operation, so protocol performance is not critical. Even so, SNMP V2 uses several authentication mechanisms to optimize security vs. performance, including one (DES-CBC) noted for its implementation at 1 Gbps in hardware (as indicated in <ref> [19] </ref>). 1.2.1 Overview of the MD5 algorithm MD5 is a block-chained digest algorithm, computed over the data in phases of 512-byte blocks organized as little-endian 32-bit words (Figure 1). The first block is processed with an initial seed, resulting in a digest that becomes the seed for the next block. <p> MD2 and SHA are message digest algorithms; DES is an encryption algorithm. 5.1: Expected hardware acceleration DES has a hardware implementation that runs at 1 Gbps in GaAs <ref> [19] </ref>. This factor of 50x improvement in hardware is not a representative speedup for arbitrary algorithms. MD5 in particular is difficult to accelerate in hardware.
Reference: [20] <author> Metzger, P., and Simpson, W., </author> <title> IP Authentication using Keyed MD5, </title> <note> (working draft - draft-ietf-ipsec-ah-md5-03.txt), </note> <month> April </month> <year> 1995. </year>
Reference-contexts: The IPv6 authentication mechanism proposes MD5 as its required algorithm. Internet RFCs and Internet Drafts regarding authentication do not address performance issues (as a rule). Notable exceptions are the ESP encapsulation mechanism [19], a keyed MD5 <ref> [20] </ref>, and the technical criteria of IPv6 [23]. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation [10] [11] [28]. MD5 can be implemented in software on a 190 Mhz RISC processor at 85 Mbps. <p> The authentication algorithm computes a digest of the entire data of the message, used for authentication. Typically, the message digest is registered with a trusted third-party, or encrypted via other means <ref> [20] </ref>. The digest is used by the receiver to verify the contents of a message. It can also be used to encrypt the contents of a message, via a second pass over the data by another algorithm. <p> Some protocols on this list chose MD5 explicitly because of its use in SNMP V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] <ref> [20] </ref> SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol [25] WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols.
Reference: [21] <author> National Bureau of Standards, </author> <title> Data Encryption Standard, Federal Information Processing Standards Publication 46, Government Printing Office, </title> <address> Washington, D.C., </address> <year> 1977. </year>
Reference-contexts: MD4 is not necessarily the best substitute for MD5, due to security considerations. Implementations of other algorithms have been measured as follows. MD5 is given for comparison; all measurements are in software on a Sun SPARC 20/71: MD2 [15] - 1.8 Mbps SHA [22] - 30 Mbps DES <ref> [21] </ref> - 20.6 Mbps MD5 - 57 Mbps The result is that current alternatives are slower than MD5 in software. MD2 and SHA are message digest algorithms; DES is an encryption algorithm. 5.1: Expected hardware acceleration DES has a hardware implementation that runs at 1 Gbps in GaAs [19].
Reference: [22] <institution> National Institute for Standards and Technology, Secure Hash Standard, Federal Information Processing Standards Publication 180, Government Printing Office, </institution> <address> Washington, D.C., </address> <year> 1993. </year>
Reference-contexts: MD4 is not necessarily the best substitute for MD5, due to security considerations. Implementations of other algorithms have been measured as follows. MD5 is given for comparison; all measurements are in software on a Sun SPARC 20/71: MD2 [15] - 1.8 Mbps SHA <ref> [22] </ref> - 30 Mbps DES [21] - 20.6 Mbps MD5 - 57 Mbps The result is that current alternatives are slower than MD5 in software.
Reference: [23] <author> Partridge, C., and Kastenholz, F., </author> <title> Technical Criteria for Choosing IP The Next Generation (IPng), </title> <type> RFC 1726, </type> <institution> BBN Systems and Technologies, </institution> <note> FTP Software, </note> <month> December </month> <year> 1994. </year>
Reference-contexts: This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 [1]. Analysis indicates that MD5 may not adhere to the performance criterion of IPv6 <ref> [23] </ref>, and thus its mandate as the default for a required option in IPv6 should be reconsidered. This paper is organized as follows: An overview of MD5 and its relevance to IPv6. Measurements of MD5s reference implementation. Manual optimizations to reference implementation. Analysis of the limits of a software MD5. <p> Government. 1.1: IPv6 performance criterion The technical criteria for IPv6 (also known as IPng) includes an explicit performance criterion <ref> [23] </ref>: A state of the art, commercial grade router must be able to process and forward IPng traffic at speeds capable of fully utilizing common, commercially available, high-speed media at the time. <p> The IPv6 authentication mechanism proposes MD5 as its required algorithm. Internet RFCs and Internet Drafts regarding authentication do not address performance issues (as a rule). Notable exceptions are the ESP encapsulation mechanism [19], a keyed MD5 [20], and the technical criteria of IPv6 <ref> [23] </ref>. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation [10] [11] [28]. MD5 can be implemented in software on a 190 Mhz RISC processor at 85 Mbps.
Reference: [24] <author> Postel, J., </author> <title> Internet Protocol - DARPA Internet Program Protocol Specification, </title> <journal> STD-5, RFC-791, </journal> <volume> ISI, </volume> <month> September </month> <year> 1981. </year>
Reference-contexts: 1: Introduction The current Internet Protocol (IP) is undergoing its first major revision in 14 years <ref> [24] </ref>. As part of that revision, the new IP (IPv6, [12]) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 [1]. <p> 1: Introduction The current Internet Protocol (IP) is undergoing its first major revision in 14 years <ref> [24] </ref>. As part of that revision, the new IP (IPv6, [12]) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 [28], the proposed required optional authentication algorithm in IPv6 [1]. Analysis indicates that MD5 may not adhere to the performance criterion of IPv6 [23], and thus its mandate as the default for a required option in IPv6 should be reconsidered. <p> Avoiding the reordering and copying resulted in code that ran in 2/3 the original time, as expected. The specification of little-endian byte order is opposite that of network standard byte order, which is big-endian <ref> [24] </ref>. On big-endian architectures, the reordering was optimized by replacing it with a more efficiently compiled source code.
Reference: [25] <author> Rescorla, E., and Schiffman, A., </author> <title> The Secure HyperText Transfer Protocol, </title> <note> (working draft - draft-rescorla-shttp-0.txt), </note> <month> December </month> <year> 1994. </year>
Reference-contexts: V2, thus its implementation in many routers (indicated by a star *): SNMP V2 [10] IPv6 * / IPng* [1] [12] IPng ESH* (uses DES) [3] IPv4 [19] [20] SIPP* (progenitor of IPng) [7] OSPF* [4] RIP-II* [5] RIPng* [17] TCP [11] SOCKS V5 [16] WWWs Secure HyperText Transfer Protocol <ref> [25] </ref> WWWs SimpleMD5 [13] There is some concern that the performance of MD5 may not keep up with these other protocols. SNMP V2 is a control protocol, not intended for high bandwidth continuous stream operation, so protocol performance is not critical.
Reference: [26] <author> Rivest, R., </author> <title> The RC5 Encryption Algorithm, RSA Data Security Technical Report, </title> <month> April </month> <year> 1995. </year>
Reference-contexts: In RC5, a parameterized number of phases of data-dependent rotates are used to compute a symmetric block-cipher (comparable to DES) <ref> [26] </ref>. For a 32-bit quantity to have the resulting hash depend on a 32-bit data-dependent rotate would require 7 rounds of 5-bit hashes.
Reference: [27] <author> Rivest, R., </author> <title> The MD4 Message-Digest Algorithm, RFC-1320, MIT LCS and RSA Data Security, </title> <publisher> Inc., </publisher> <month> April </month> <year> 1992. </year>
Reference-contexts: It is an augmented version of the MD4 algo 2. This phrase commonly refers to the treatment of a patient by a medical doctor, as part of the Hippocratic Oath. rithm <ref> [27] </ref>. The authentication algorithm computes a digest of the entire data of the message, used for authentication. Typically, the message digest is registered with a trusted third-party, or encrypted via other means [20]. The digest is used by the receiver to verify the contents of a message. <p> MD4 uses only 3 phases of 16 basic steps, so the cost is 3 basic steps per word of input, rather than 4 <ref> [27] </ref>. The critical path of a basic step is further reduced by the final addition, so the resulting algorithm can run with one add, one logical function, and one rotate. MD4 is expected to run in 2/3 the time of MD5.
Reference: [28] <author> Rivest, R., </author> <title> The MD5 Message-Digest Algorithm, RFC-1321, MIT LCS and RSA Data Security, </title> <publisher> Inc., </publisher> <month> April </month> <year> 1992. </year>
Reference-contexts: As part of that revision, the new IP (IPv6, [12]) proposes a number of required options that were not required in the previous IP (IPv4, [24]). This paper describes a performance analysis of MD5 <ref> [28] </ref>, the proposed required optional authentication algorithm in IPv6 [1]. Analysis indicates that MD5 may not adhere to the performance criterion of IPv6 [23], and thus its mandate as the default for a required option in IPv6 should be reconsidered. <p> Notable exceptions are the ESP encapsulation mechanism [19], a keyed MD5 [20], and the technical criteria of IPv6 [23]. The claim in other documents is that current implementations exhibit poor performance, but that software optimizations or custom hardware will overcome this limitation [10] [11] <ref> [28] </ref>. MD5 can be implemented in software on a 190 Mhz RISC processor at 85 Mbps. On a Sun SPARC 20/71, MD5 executes at 57-59 Mbps, but IPv4 executes at 120 Mbps (via Fore SBA-200 IP over ATM). <p> MD5 does not keep pace with available link rates (800 Mbps HiPPI), or available IPv4 implementations, in violation of the performance criterion of IPv6. 1.2: MD5 MD5 is a message digest authentication algorithm developed by RSA, Inc. <ref> [28] </ref>. It is an augmented version of the MD4 algo 2. This phrase commonly refers to the treatment of a patient by a medical doctor, as part of the Hippocratic Oath. rithm [27]. The authentication algorithm computes a digest of the entire data of the message, used for authentication. <p> The basic structure of the steps Data Block (512 bytes) Seed (4 32-bit words) Block Digest Algorithm Digest (4 32-bit words) Data Block (512 bytes) Block Digest Algorithm Digest (4 32-bit words) is shown below (&lt;<< denotes rotate). The accumulated digest is denoted by -A,B,C,D-, as in RFC-1321 <ref> [28] </ref>: A = B+((A+ F (B,C,D) + X [i++] + k1)&lt;<<k2) C = D+((C+ F (D,A,B) + X [i++] + k1)&lt;<<k2) There are 16 steps based on each of 4 logical functions; 4 based on F are shown here. <p> steps have optimization limitations, due to the mathemati cal properties of the operations used: additions can be reordered by commutative laws, rotate does not distribute over addition, and addition does not distribute over rotation or logicals 2: Software Implementation Measurements The MD5 RFC-1321 includes a reference implementation written in C <ref> [28] </ref>. The performance of this software gives a baseline against which to compare optimizations. Measurement of the performance of the reference implementation precedes the abstract analysis to determine the focus of the analysis, and the extent of the optimization required.
Reference: [29] <author> Rogaway, P., </author> <title> Bucket Hashing and its Application to Fast Message Authentication, </title> <note> to appear in Advanced in Cryptology, Crypto 95. </note>
Reference-contexts: scrambling (slows hardware) Realize that rotates can be costly (as much as 3 opcodes) Use finite parallelism (will help software and hardware) These techniques have been used elsewhere to develop hash algorithms with as little as ~10 opcodes per 32-bit word of input. down from the 40-50 that MD5 uses <ref> [29] </ref>. Performance measurements for that algorithm were not available at the time of publication, but that estimate uses self-modifying code, which may affect its performance on processors with write-through instruction caches.
Reference: [30] <author> Touch, J., </author> <title> Report on MD5 Performance, </title> <note> (working draft - draft-touch-md5-performance-00.txt), </note> <month> December </month> <year> 1994. </year>
Reference-contexts: These two proposals together, of big-endian byte order and 4-way parallelism, comprise a modified MD5 that we call MD5++. 1. proposed independently by the author <ref> [30] </ref> and by Burt Kaliski of RSA, Inc. 6.2: An alternate hash algorithm In the process of analyzing MD5, there are several design principles that were observed.
Reference: [31] <author> Touch, J., </author> <title> Implementing the Internet Checksum in Hardware, </title> <booktitle> (work in progress). </booktitle>
Reference-contexts: Checksum of IPv4 can be implemented in software at very high speeds (260 Mbps on a Sun SPARC 20/61, vs. 38 Mbps for MD5), and has been implemented at 1.23 Gbps in a single inexpensive programmable chip (32 bit parallel at 26 ns in a $40 programmable logic device chip <ref> [31] </ref>). MD5 does not keep pace with available link rates (800 Mbps HiPPI), or available IPv4 implementations, in violation of the performance criterion of IPv6. 1.2: MD5 MD5 is a message digest authentication algorithm developed by RSA, Inc. [28]. It is an augmented version of the MD4 algo 2.
References-found: 31

