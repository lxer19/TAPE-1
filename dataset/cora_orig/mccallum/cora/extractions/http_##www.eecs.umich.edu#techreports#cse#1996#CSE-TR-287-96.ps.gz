URL: http://www.eecs.umich.edu/techreports/cse/1996/CSE-TR-287-96.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse96.html
Root-URL: http://www.eecs.umich.edu
Email: E-mail: fwuchang,kgshing@eecs.umich.edu  
Title: Impact of Selection Functions on Routing Algorithm Performance in Multicomputer Networks  
Author: Wu-chang Feng and Kang G. Shin 
Keyword: Multicomputers, interconnection networks, routers, routing  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: Maximizing overall performance in multicomputers requires matching application communication characteristics with a suitable routing scheme. However, since the communication demands of emerging applications vary significantly, it is hard for a single routing algorithm to perform well under all workloads. In order to study the complex dependencies between routing policies and communication workloads, we have performed a set of multi-factor experiments to better characterize routing performance. These experiments show that in addition to adaptivity, the selection functions used to order the candidate links greatly affect network performance under various traffic patterns. By supporting flexible routing, the network can tune its routing policies to application communication characteristics in order to improve performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-M. Hsu and P. Banerjee, </author> <title> "Performance measurement and trace driven simulation of parallel CAD and numeric applications on a hypercube multicomputer," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, </volume> <pages> pp. 451-464, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Maximizing network performance requires matching application communication characteristics with a suitable network design. Parallel applications impose a wide range of communication patterns on the underlying interconnection network. Scientific computations <ref> [1, 2] </ref>, parallel databases, and real-time applications [3, 4] generate distinct distributions for message lengths, interarrival times, and target destination nodes. Finding a suitable network design to support such diverse communication requirements is difficult since there are a myriad of design factors which can potentially impact performance. <p> Message/packet arrival: Earlier studies of multicomputer networks have typically modeled message arrivals as a Poisson process, with exponentially-distributed interarrival times. However, detailed measurements of multicomputer applications have led to more sophisticated message generation models. In particular, these studies show that applications typically generate bursty network traffic <ref> [1, 2] </ref>, due to multi-packet messages and fine-grain handshaking between cooperating nodes. Message/packet length: Message and packet lengths depend on several factors including packet-size restrictions and the mixture of data and control messages. <p> Message/packet length: Message and packet lengths depend on several factors including packet-size restrictions and the mixture of data and control messages. Although fixed-length packets or exponentially-distributed lengths simplify analytic models, recent work shows that real multicomputer applications typically generate bimodal packet-length distributions <ref> [1, 2] </ref>. Recent studies have examined adapting router designs to accommodate bimodal packet-length distributions [6, 7]. Message destination: Message destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements.
Reference: [2] <author> R. Cypher, A. Ho, S. Konstantinidou, and P. Messina, </author> <title> "Architectural requirements of parallel scientific applications with explicit communication," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 2-13, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Maximizing network performance requires matching application communication characteristics with a suitable network design. Parallel applications impose a wide range of communication patterns on the underlying interconnection network. Scientific computations <ref> [1, 2] </ref>, parallel databases, and real-time applications [3, 4] generate distinct distributions for message lengths, interarrival times, and target destination nodes. Finding a suitable network design to support such diverse communication requirements is difficult since there are a myriad of design factors which can potentially impact performance. <p> Message/packet arrival: Earlier studies of multicomputer networks have typically modeled message arrivals as a Poisson process, with exponentially-distributed interarrival times. However, detailed measurements of multicomputer applications have led to more sophisticated message generation models. In particular, these studies show that applications typically generate bursty network traffic <ref> [1, 2] </ref>, due to multi-packet messages and fine-grain handshaking between cooperating nodes. Message/packet length: Message and packet lengths depend on several factors including packet-size restrictions and the mixture of data and control messages. <p> Message/packet length: Message and packet lengths depend on several factors including packet-size restrictions and the mixture of data and control messages. Although fixed-length packets or exponentially-distributed lengths simplify analytic models, recent work shows that real multicomputer applications typically generate bimodal packet-length distributions <ref> [1, 2] </ref>. Recent studies have examined adapting router designs to accommodate bimodal packet-length distributions [6, 7]. Message destination: Message destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements.
Reference: [3] <author> J.-P. Li and M. W. </author> <title> Mutka, "Priority based real-time communication for large scale wormhole networks," </title> <booktitle> in Proc. International Parallel Processing Symposium, </booktitle> <pages> pp. 433-438, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Maximizing network performance requires matching application communication characteristics with a suitable network design. Parallel applications impose a wide range of communication patterns on the underlying interconnection network. Scientific computations [1, 2], parallel databases, and real-time applications <ref> [3, 4] </ref> generate distinct distributions for message lengths, interarrival times, and target destination nodes. Finding a suitable network design to support such diverse communication requirements is difficult since there are a myriad of design factors which can potentially impact performance.
Reference: [4] <author> J. Rexford and K. G. Shin, </author> <title> "Support for multiple classes of traffic in multicomputer routers," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 116-130, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Maximizing network performance requires matching application communication characteristics with a suitable network design. Parallel applications impose a wide range of communication patterns on the underlying interconnection network. Scientific computations [1, 2], parallel databases, and real-time applications <ref> [3, 4] </ref> generate distinct distributions for message lengths, interarrival times, and target destination nodes. Finding a suitable network design to support such diverse communication requirements is difficult since there are a myriad of design factors which can potentially impact performance. <p> Because of the diverse communication requirements of emerging applications, several router architectures now support multiple routing schemes in order to tailor network routing to applications <ref> [4, 24-26] </ref>. In a multi-user environment, where multiple tasks communicate concurrently, supporting multiple routing schemes simultaneously , can improve performance significantly. The following experiements consider a mix of bit-reversal and bit-complement traffic in an 8 fi 8 square mesh.
Reference: [5] <author> W. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year> <month> 13 </month>
Reference-contexts: In this paper, we focus on how routing policies impact network performance as the communication pattern is varied. Specifically, we classify different routing algorithms in terms of their adaptivity and the selection function <ref> [5] </ref> used to determine the order in which candidate links are considered. Through extensive multi-factor experiments, we investigate how selection functions and the amount of routing adaptivity combine with the traffic pattern to determine how well links are utilized and hence, how well the network performs. <p> In addition, adaptive algorithms add to the complexity of both the hardware which implements the scheme and the software which must handle the possibility of out-of-order arrivals [13]. Each algorithm invokes a selection function <ref> [5] </ref> which selects and orders candidate links. Network performance is greatly influenced by the interaction of this function with the communication workload. Selection functions of oblivious algorithms deterministically select a single candidate link independent of the current network conditions.
Reference: [6] <author> S. Konstantinidou, </author> <title> "Segment router: A novel router design for parallel computers," </title> <booktitle> in Symposium on Parallel Algorithms and Architectures, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: Although fixed-length packets or exponentially-distributed lengths simplify analytic models, recent work shows that real multicomputer applications typically generate bimodal packet-length distributions [1, 2]. Recent studies have examined adapting router designs to accommodate bimodal packet-length distributions <ref> [6, 7] </ref>. Message destination: Message destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements.
Reference: [7] <author> J. H. Kim and A. A. Chien, </author> <title> "Evaluation of wormhole routed networks under hybrid traffic loads," </title> <booktitle> in Proc. Hawaii Int'l Conf. on System Sciences, </booktitle> <pages> pp. 276-285, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Although fixed-length packets or exponentially-distributed lengths simplify analytic models, recent work shows that real multicomputer applications typically generate bimodal packet-length distributions [1, 2]. Recent studies have examined adapting router designs to accommodate bimodal packet-length distributions <ref> [6, 7] </ref>. Message destination: Message destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements. <p> In particular, we focus on how routing adaptivity and selection functions combine with a set of destination distributions to determine network performance. While other studies have looked at comparing various routing algorithms over different patterns, most studies limit the selection functions used [14-16], the range of algorithms evaluated <ref> [7, 10, 17] </ref>, or the destination distributions considered [11, 18]. 3 Distribution Description NodeUniform Uniform random selection of destination node MatrixTranspose Source (x; y) selects destination (y; x) BitComplement Destination node id is the bit-complement of the source id BitReversal Destination node id is the bit-reversal of the source id Table
Reference: [8] <author> S. Chittor and R. Enbody, </author> <title> "Performance evaluation of mesh-connected wormhole-routed networks for interprocessor communication in multicomputers," </title> <booktitle> in Supercomputing, </booktitle> <pages> pp. 647-656, </pages> <month> November </month> <year> 1990. </year>
Reference: [9] <author> J. H. Kim and A. A. Chien, </author> <title> "An evaluation of planar-adaptive routing (PAR)," </title> <booktitle> in Proc. International Symposium on Parallel and Distributed Processing, </booktitle> <year> 1992. </year>
Reference: [10] <author> A. A. Chien and J. H. Kim, </author> <title> "Planar-adaptive routing: Low-cost adaptive networks for multiprocessors," </title> <journal> Journal of the ACM, </journal> <volume> vol. 42, </volume> <pages> pp. 91-123, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: In particular, we focus on how routing adaptivity and selection functions combine with a set of destination distributions to determine network performance. While other studies have looked at comparing various routing algorithms over different patterns, most studies limit the selection functions used [14-16], the range of algorithms evaluated <ref> [7, 10, 17] </ref>, or the destination distributions considered [11, 18]. 3 Distribution Description NodeUniform Uniform random selection of destination node MatrixTranspose Source (x; y) selects destination (y; x) BitComplement Destination node id is the bit-complement of the source id BitReversal Destination node id is the bit-reversal of the source id Table
Reference: [11] <author> W. Dally and H. Aoki, </author> <title> "Deadlock-free adaptive routing in multicomputer networks using virtual channels," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 4, </volume> <pages> pp. 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: While other studies have looked at comparing various routing algorithms over different patterns, most studies limit the selection functions used [14-16], the range of algorithms evaluated [7, 10, 17], or the destination distributions considered <ref> [11, 18] </ref>. 3 Distribution Description NodeUniform Uniform random selection of destination node MatrixTranspose Source (x; y) selects destination (y; x) BitComplement Destination node id is the bit-complement of the source id BitReversal Destination node id is the bit-reversal of the source id Table 1: Destination node distributions Selection Function Description Dimension
Reference: [12] <author> S. Ramany and D. Eager, </author> <title> "The interaction between virtual channel flow control and adaptive routing in wormhole networks," </title> <booktitle> in Proc. International Conference on Supercomputing, </booktitle> <pages> pp. 136-145, </pages> <month> July </month> <year> 1994. </year>
Reference: [13] <author> V. Karamcheti and A. A. Chien, </author> <title> "Do faster routers imply faster communication?," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 1-15, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: However, opportunities for adaptive routing vary depending on the network topology and the distance a packet must travel. In addition, adaptive algorithms add to the complexity of both the hardware which implements the scheme and the software which must handle the possibility of out-of-order arrivals <ref> [13] </ref>. Each algorithm invokes a selection function [5] which selects and orders candidate links. Network performance is greatly influenced by the interaction of this function with the communication workload. Selection functions of oblivious algorithms deterministically select a single candidate link independent of the current network conditions.
Reference: [14] <author> R. Boppana and S. Chalasani, </author> <title> "A comparison of adaptive wormhole routing algorithms," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 351-360, </pages> <year> 1993. </year>
Reference: [15] <author> T. D. Nguyen and L. Snyder, </author> <title> "Performance analysis of a minimal adaptive router," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 31-44, </pages> <month> May </month> <year> 1994. </year>
Reference: [16] <author> J. Duato and P. Lopez, </author> <title> "Performance evaluation of adaptive routing algorithms for k-ary n-cubes," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 45-59, </pages> <month> May </month> <year> 1994. </year>
Reference: [17] <author> T. Nesson and L. Johnsson, </author> <title> "Romm routing: A class of efficient minimal routing algorithms," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 185-199, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: In particular, we focus on how routing adaptivity and selection functions combine with a set of destination distributions to determine network performance. While other studies have looked at comparing various routing algorithms over different patterns, most studies limit the selection functions used [14-16], the range of algorithms evaluated <ref> [7, 10, 17] </ref>, or the destination distributions considered [11, 18]. 3 Distribution Description NodeUniform Uniform random selection of destination node MatrixTranspose Source (x; y) selects destination (y; x) BitComplement Destination node id is the bit-complement of the source id BitReversal Destination node id is the bit-reversal of the source id Table
Reference: [18] <author> P. Gaughan and S. Yalamanchili, </author> <title> "Adaptive routing protocols for hypercube interconnection networks," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 12-23, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: While other studies have looked at comparing various routing algorithms over different patterns, most studies limit the selection functions used [14-16], the range of algorithms evaluated [7, 10, 17], or the destination distributions considered <ref> [11, 18] </ref>. 3 Distribution Description NodeUniform Uniform random selection of destination node MatrixTranspose Source (x; y) selects destination (y; x) BitComplement Destination node id is the bit-complement of the source id BitReversal Destination node id is the bit-reversal of the source id Table 1: Destination node distributions Selection Function Description Dimension
Reference: [19] <author> J. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-mode Routing and Switching in Distributed Real-Time Systems. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: 1: Destination node distributions Selection Function Description Dimension order Favors links in lower dimensions of the topology Random Generates all rankings with equal probability Diagonal Favors directions with more remaining hops Table 2: Selection functions used in algorithms 3 Experimental Setup In order to evaluate these algorithms, we used pp-mess-sim <ref> [19, 20] </ref> (point-to-point message simulator), an object-oriented discrete-event simulation tool. pp-mess-sim supports a wide range of routing algorithms under a variety of switching schemes by decoupling them from the router models which execute them. <p> Applying these results to improve routing performance can easily be done for systems such as HARTS [27], the nCube-3 [25], and Hnet [24] which support multiple routing policies. For example, in HARTS, the Programmable Routing Controller (PRC) <ref> [19, 26] </ref> can be reprogrammed with different routing policies as the application communication workloads change. By having multiple algorithms programmed into its memory, the PRC is also able to tailor its routing decisions to individaul tasks in multi-user environments.
Reference: [20] <author> J. Rexford, J. Dolter, W. Feng, and K. G. Shin, </author> <title> "PP-MESS-SIM: A simulator for evaluating multicomputer interconnection networks," </title> <booktitle> in Proc. Simulation Symposium, </booktitle> <pages> pp. 84-93, </pages> <month> April </month> <year> 1995. </year> <month> 14 </month>
Reference-contexts: 1: Destination node distributions Selection Function Description Dimension order Favors links in lower dimensions of the topology Random Generates all rankings with equal probability Diagonal Favors directions with more remaining hops Table 2: Selection functions used in algorithms 3 Experimental Setup In order to evaluate these algorithms, we used pp-mess-sim <ref> [19, 20] </ref> (point-to-point message simulator), an object-oriented discrete-event simulation tool. pp-mess-sim supports a wide range of routing algorithms under a variety of switching schemes by decoupling them from the router models which execute them.
Reference: [21] <author> J. Dolter, S. Daniel, A. Mehra, J. Rexford, W. Feng, and K. Shin, "SPIDER: </author> <title> Flexible and efficient communication support for point-to-point distributed systems," </title> <booktitle> in Proc. Int'l Conf. on Distributed Computing Systems, </booktitle> <pages> pp. 574-580, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In addition, the model assumes that the host is an ideal sink with large buffer capacity. This abstract model allows the basic interaction between selection functions and communication workloads to be studied. Experiments were also done on a cycle level simulation model of SPIDER <ref> [21] </ref> and showed similar trends in performance. The destination node patterns we examine include node uniform traffic, as well as patterns found commonly in scientific computations such as the matrix-transpose, bit-complement, and bit-reversal permutations. Table 1 summarizes each of these destination distributions.
Reference: [22] <author> H. G. Badr and S. Podar, </author> <title> "An optimal shortest-path routing policy for network computers with regular mesh-connected topologies," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-38, </volume> <pages> pp. 1362-1370, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: The oblivious random algorithm chooses a single link from all minimal-path links randomly. Finally, the oblivious diagonal 4 algorithm chooses the link which is in the direction that the packet has the most hops left to travel <ref> [22, 23] </ref>. Similar to the oblivious algorithms, adaptive minpath algorithms using the same selection functions are considered. The adaptive dimension-ordered algorithm takes the set of minimal-path directions, orders them according to their dimension, and attempts to route the packet along each of the ordered directions until it is successful.
Reference: [23] <author> A. L. Davis, "Mayfly: </author> <title> A general-purpose, scalable, </title> <booktitle> parallel processing architecture," Lisp and Symbolic Computation, </booktitle> <volume> vol. 5, </volume> <pages> pp. 7-47, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The oblivious random algorithm chooses a single link from all minimal-path links randomly. Finally, the oblivious diagonal 4 algorithm chooses the link which is in the direction that the packet has the most hops left to travel <ref> [22, 23] </ref>. Similar to the oblivious algorithms, adaptive minpath algorithms using the same selection functions are considered. The adaptive dimension-ordered algorithm takes the set of minimal-path directions, orders them according to their dimension, and attempts to route the packet along each of the ordered directions until it is successful.
Reference: [24] <author> D. Smitley, F. Hady, and D. Burns, </author> <title> "Hnet: A high-performance network evaluation testbed," </title> <type> Tech. Rep. </type> <institution> SRC-TR-91-049, Supercomputing Research Center, Institute for Defense Analyses, </institution> <month> Dec. </month> <year> 1991. </year> <title> [25] nCube Corporation, nCUBE-3: The Scalable Server Platform, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: In particular, routing performance is fairly sensitive to the selection function, adaptivity, and the traffic pattern. Applying these results to improve routing performance can easily be done for systems such as HARTS [27], the nCube-3 [25], and Hnet <ref> [24] </ref> which support multiple routing policies. For example, in HARTS, the Programmable Routing Controller (PRC) [19, 26] can be reprogrammed with different routing policies as the application communication workloads change.
Reference: [26] <author> S. Daniel, J. Rexford, J. Dolter, and K. Shin, </author> <title> "A programmable routing controller for flexible communications in point- to-point networks." </title> <booktitle> to appear in Proc. Int'l Conference on Computer Design, </booktitle> <month> October </month> <year> 1995. </year>
Reference-contexts: Applying these results to improve routing performance can easily be done for systems such as HARTS [27], the nCube-3 [25], and Hnet [24] which support multiple routing policies. For example, in HARTS, the Programmable Routing Controller (PRC) <ref> [19, 26] </ref> can be reprogrammed with different routing policies as the application communication workloads change. By having multiple algorithms programmed into its memory, the PRC is also able to tailor its routing decisions to individaul tasks in multi-user environments.
Reference: [27] <author> K. G. Shin, </author> <title> "HARTS: A distributed real-time architecture," </title> <journal> IEEE Computer, </journal> <volume> vol. 24, </volume> <pages> pp. 25-35, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: In particular, routing performance is fairly sensitive to the selection function, adaptivity, and the traffic pattern. Applying these results to improve routing performance can easily be done for systems such as HARTS <ref> [27] </ref>, the nCube-3 [25], and Hnet [24] which support multiple routing policies. For example, in HARTS, the Programmable Routing Controller (PRC) [19, 26] can be reprogrammed with different routing policies as the application communication workloads change.
References-found: 26

