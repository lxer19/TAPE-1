URL: http://www.csc.calpoly.edu/~smeldal/NIK94/NIK94.ps
Refering-URL: http://www.csc.calpoly.edu/~smeldal/tidbits.html
Root-URL: http://www.csc.calpoly.edu
Title: Initiality Nondeterminism Junk  
Author: Michal Walicki Sigurd Meldal 
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Dahl, O.J., </author> <title> Verifiable Programming, </title> <publisher> Prentice Hall, </publisher> <year> 1992. </year>
Reference: [2] <author> Guttag, J.V., </author> <title> The Specification and Application to Programming of ADT, </title> <type> Tech. Rep., </type> <institution> CSR6-59, Computer Systems Research Group, University of Toronto 1975. </institution>
Reference: [3] <author> Hesselink, </author> <title> W.H., A Mathematical Approach to Nondeterminism in Data Types, </title> <journal> ACM: Transactions on Programming Languages and Systems, </journal> <volume> vol. 10, </volume> <year> 1988. </year>
Reference: [4] <author> Humann, H., </author> <title> Nondeterministic Algebraic Specifications, </title> <type> Ph.D. thesis, </type> <institution> Fakultt fr Mathematik und Informatik, Universitt Passau, </institution> <year> 1990. </year>
Reference-contexts: In order to distinguish values from sets of values one also needs an additional determinacy operator. It can be introduced explicitly (as a Det-predicate in <ref> [4] </ref>), or as a side effect of a reinterpretation of equality (as in [15]). We will consider the former which is less general but sufficient for our purpose here. Nondeterministic operations can be specified by describing their results, and a primitive nondeterministic operation is not needed. <p> Terms are again interpreted as sets with the restriction that a term t satisfying Det (t), must be interpreted deterministically, i.e., as a 1-element set. As in the previous case, initial multialgebras for specifications in L heq do not necessarily exist. In <ref> [4] </ref>, Humann has identified necessary and sufficient conditions ensuring the existence of initial semantics.
Reference: [5] <author> Huet, G., Hullot, J., </author> <title> Proofs by Induction in Equational Theories with Constructors, </title> <journal> JCSS, </journal> <volume> vol. 25, </volume> <pages> 239-266, </pages> <year> 1981. </year>
Reference: [6] <author> Kaplan, S., </author> <title> Rewriting with a Nondeterministic Choice Operator, </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 56, </volume> <pages> 37-57, </pages> <year> 1988. </year>
Reference: [7] <author> Kapur, D., </author> <title> Towards a theory of abstract data types, </title> <type> Ph.D. thesis, </type> <institution> Laboratory for CS, MIT, </institution> <year> 1980. </year>
Reference: [8] <author> Mahr, B., Makowsky, J.A., </author> <title> Characterizing specification languages which admit initial semantics, </title> <booktitle> in Proc. 8th CAAP, </booktitle> <volume> vol. 159, </volume> <publisher> LNCS, Springer, </publisher> <year> 1983, </year> <pages> pp. 300-316. </pages>
Reference: [9] <author> Maibaum, T.S.E., </author> <title> The Semantics of Nondeterminism, </title> <type> Tech. Rep., </type> <institution> CS-77-30, University of Waterloo, </institution> <address> Ontario, Canada December 1977. </address>
Reference: [10] <author> Makowsky, J.A., </author> <title> Why Horn Formulas Matter in Computer Science, </title> <journal> Journal of Computer and System Science, </journal> <volume> vol. 34, </volume> <pages> 266-292, </pages> <year> 1987. </year>
Reference: [11] <author> Mosses, </author> <title> P.D., Unified Algebras and Action Semantics, </title> <booktitle> in STACS89, </booktitle> <volume> vol. 349, </volume> <publisher> LNCS, Springer, </publisher> <year> 1989. </year>
Reference-contexts: In each case we will give a short description of the language used. We will have in mind only initial models, and the interpretation of a ground term t in such a model will be denoted I (t) or t. The example itself was used in <ref> [11] </ref>, but has certainly been contemplated by anybody devoting a few minutes thought to nondeterminism. We are particularly thankful to Vladimir Antimirov for his comments and discussion of it in the context of unified algebras.
Reference: [12] <author> Mosses, </author> <title> P.D., Unified Algebras and Institutions, </title> <booktitle> in Proceedings of LICS89, Fourth Annual Symposium on Logic in Computer Science, </booktitle> <year> 1989. </year>
Reference-contexts: The partial order of the lattice corresponds to set inclusion, and nondeterministic choice is interpreted as joins. The operations from V can be specified using Horn clauses alone, and it is shown that specifications with Horn clauses always possess initial unified models <ref> [12] </ref>. The example specification becomes: SPU is P: - 1. a:a b:b end (Since unified algebras have only one sort there is no need to specify profiles of the operations, except for the number of arguments they take.) The first axiom makes a and b individuals, i.e., deterministic constants.
Reference: [13] <author> Subrahmanyam, </author> <title> P.A., Nondeterminism in Abstract Data Types, in Automata, </title> <journal> Languages and Programming, </journal> <volume> vol. 115, </volume> <publisher> LNCS, Springer, </publisher> <year> 1981. </year>
Reference: [14] <author> Tarlecki, A., </author> <title> Free constructions in algebraic institutions, </title> <booktitle> in Mathematical Foundation of Computer Science 84, </booktitle> <volume> vol. 176, </volume> <publisher> LNCS, Springer, </publisher> <year> 1984. </year>
Reference: [15] <author> Walicki, M., </author> <title> ALgebraic Specifications of Nondeterminism, Dr.Scient. </title> <type> Thesis, </type> <institution> Universitetet i Bergen, Institutt for Informatikk, </institution> <year> 1993. </year>
Reference-contexts: The presentation is rather informal. We will present a simple, yet illustrative, example and work it out in different formalisms. The models we will consider are multialgebras [3,4,7], computations <ref> [15] </ref>, and unified algebras [11,12]. In each case we will give a short description of the language used. We will have in mind only initial models, and the interpretation of a ground term t in such a model will be denoted I (t) or t. <p> In order to distinguish values from sets of values one also needs an additional determinacy operator. It can be introduced explicitly (as a Det-predicate in [4]), or as a side effect of a reinterpretation of equality (as in <ref> [15] </ref>). We will consider the former which is less general but sufficient for our purpose here. Nondeterministic operations can be specified by describing their results, and a primitive nondeterministic operation is not needed. <p> Removing c and axioms Det (c) and 3. from SPM i.e., removing the underspecified deterministic operation and retaining only nondeterministic choice would give the expected (and reasonable) initial model with I (S) = -a,b- and I (aub) = -a,b-. 4. Computations In <ref> [15] </ref> we defined a refinement of multialgebraic semantics. Instead of gathering all possible results of nondeterministic operations into one multimodel, the semantics of a specification is the collection of all possible computations each realizing different possibilities of nondeterministic operators. <p> Disjunction allows us to distinguish c as underspecified in SPD from d as a result returned by nondeterministic choice in SPD1 below (although we are not going into the details here see <ref> [15] </ref>). SPD does not have an initial model. Nevertheless, disjunction does not spoil initiality completely. We have shown that disjunctive specifications always possess quasi-initial computational semantics, and that mild restrictions on the specifications guarantee existence of quasi-initial multialgebra semantics [15]. <p> below (although we are not going into the details here see <ref> [15] </ref>). SPD does not have an initial model. Nevertheless, disjunction does not spoil initiality completely. We have shown that disjunctive specifications always possess quasi-initial computational semantics, and that mild restrictions on the specifications guarantee existence of quasi-initial multialgebra semantics [15]. Quasi-initiality generalizes initiality to the situations involving either ... or .... For SPD, such a semantics can be summarized by saying that the model class will consist of two parts: the models where c equals a (Ma) and those where it equals b (Mb).
References-found: 15

