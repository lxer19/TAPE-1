URL: ftp://ftp.cs.washington.edu/pub/graphics/GeometryBook.ps.Z
Refering-URL: http://www.cs.washington.edu/research/projects/grail2/www/pub/abstracts.html
Root-URL: http://www.cs.washington.edu
Title: Three-Dimensional Computer Graphics A Coordinate-Free Approach  
Author: Tony D. DeRose 
Date: Last Revised: October 2, 1992  
Affiliation: University of Washington  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> W. Bouknight. </author> <title> A procedure for generation of three-dimensional halftoned computer graphics representations. </title> <journal> Communications of the ACM, </journal> <volume> 13(9) </volume> <pages> 527-536, </pages> <month> September </month> <year> 1970. </year>
Reference-contexts: The origin is deflned to be in the lower left corner, with the x axis pointing to the right and the y axis pointing upward. The visible portion of the NDC plane is deflned to be the unit square <ref> [0; 1] </ref> [0; 1]; points lying outside the unit NDC square will not appear in the image. By using real rather than integers coordinates we have abstracted out the horizontal and vertical pixel resolutions of physical frame bufiers. <p> The origin is deflned to be in the lower left corner, with the x axis pointing to the right and the y axis pointing upward. The visible portion of the NDC plane is deflned to be the unit square <ref> [0; 1] </ref> [0; 1]; points lying outside the unit NDC square will not appear in the image. By using real rather than integers coordinates we have abstracted out the horizontal and vertical pixel resolutions of physical frame bufiers. <p> This can be seen Coordinate-free Geometric Programming I 53 by noting that the line segment connecting the points Q 1 and Q 2 can be written in parametric form as the a-ne combination Q (t) = (1 t)Q 1 + tQ 2 ; t 2 <ref> [0; 1] </ref>: (3:12) The image of the segment under an a-ne map F is therefore F (Q (t)) = (1 t)F (Q 1 ) + tF (Q 2 ); t 2 [0; 1]; (3:13) which is a parametric description of the line segment connecting the images of Q 1 and Q <p> in parametric form as the a-ne combination Q (t) = (1 t)Q 1 + tQ 2 ; t 2 <ref> [0; 1] </ref>: (3:12) The image of the segment under an a-ne map F is therefore F (Q (t)) = (1 t)F (Q 1 ) + tF (Q 2 ); t 2 [0; 1]; (3:13) which is a parametric description of the line segment connecting the images of Q 1 and Q 2 . Equations 3.12 and 3.13 actually show something substantially stronger. <p> A Sweep Line Algorithm In the late 60's and early 70's a number of algorithms were developed that build up an image a scan-line at a time <ref> [1, 2, 21, 24] </ref>. The basic idea behind these algorithms is to use the sweep line algorithm for polygon scan-conversion discussed in Section 5.1.3.
Reference: [2] <author> W. Bouknight and K. Kelly. </author> <title> An algorithm for producing half-tone computer graphics presentations with shadows and movable light sources. </title> <booktitle> SJCC, </booktitle> <pages> pages 1-10, </pages> <year> 1970. </year>
Reference-contexts: A Sweep Line Algorithm In the late 60's and early 70's a number of algorithms were developed that build up an image a scan-line at a time <ref> [1, 2, 21, 24] </ref>. The basic idea behind these algorithms is to use the sweep line algorithm for polygon scan-conversion discussed in Section 5.1.3.
Reference: [3] <author> J. E. Bresenham. </author> <title> Algorithm for computer control of a digital plotter. </title> <journal> IBM Systems Journal, </journal> <volume> 4(1) </volume> <pages> 25-30, </pages> <year> 1965. </year>
Reference-contexts: A pseudo-code statement of the DDA algorithm is shown in Figure 2.3. 2.2. Bresenham's Algorithm There is a flnal improvement that we shall consider: the removal of all oating point computations to arrive at an entirely integer algorithm. The algorithm we now present was originally due to Jack Bresenham <ref> [3] </ref>, although we have chosen to use the alternate derivation from Foley et al [11], which in turn is due to Pitteway [15]. (Historical aside: Bresenham originally devised the algorithm for drawing lines with pen-plotters, not frame bufiers.) As indicated above, Bresenham's algorithm will only require integer arithmetic.
Reference: [4] <author> E. Catmull. </author> <title> A Subdivision Algorithm for Computer Display of Curved Surfaces. </title> <type> PhD thesis, </type> <institution> Computer Science Department, University of Utah, </institution> <month> December </month> <year> 1974. </year>
Reference-contexts: The Depth Bufier Algorithm The flrst hidden surface algorithm we shall consider is a very simple one called the depth bufier algorithm. The algorithm, originated by Ed Catmull in 1974 <ref> [4] </ref>, is also called the z-bufier algorithm. The basic idea behind the algorithm is to maintain an array of depth values during the scan-conversion of the primitives in the scene.
Reference: [5] <author> E. Catmull. </author> <title> A tutorial on compensation tables. </title> <booktitle> In Proceedings of SIGGRAPH, </booktitle> <pages> pages 279-285, </pages> <year> 1979. </year>
Reference-contexts: Introduction 5 to the intensity. This process has come to be known as gamma correction <ref> [5] </ref>. Since the value of must be known to initialize the lookup tables, true gamma correction requires that the value of be measured experimentally for each monitor. Exercises 1. A spectraphotometer is a device that can accurately measure the intensity of a source of illumination.
Reference: [6] <editor> C. de Boor. B-form basics. In G. Farin, editor, </editor> <booktitle> Geometric Modeling: Algorithms and New Trends, </booktitle> <pages> pages 131-148. </pages> <year> 1987. </year>
Reference-contexts: We will flnd them useful, for instance, when we consider projective transformations in Section 7.1. Simplexes and barycentric coordinates also have important uses in the theory of Bezier curves and surfaces (cf. <ref> [6, 9] </ref>). 3.5. *Matrix Representations of Points and Vectors In the previous section it was shown that points and vectors can be uniquely identifled by their coordinates relative to a given frame.
Reference: [7] <author> Manfred P. </author> <title> do Carmo. Difierential Geometry of Curves and Surfaces. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Clifis, New Jersey, </address> <year> 1976. </year>
Reference-contexts: We begin with the deflnition of the notion of a "simple" polygon. A curve is said to be simple if it does not intersect itself. The Jordan curve theorem says that a closed simple planar curve divides the plane into two sets, a flnite "inside" and an inflnite "outside" <ref> [7] </ref>. A simple polygon P can be deflned as the flnite set bounded by a closed, simple, planar, piecewise linear curve. A simple polygon P is typically represented by a sequence of co-planar vertices V 1 ; :::; V n .
Reference: [8] <author> C. Dodson and T. Poston. </author> <title> Tensor Geometry: The Geometric Viewpoint and its Uses. </title> <publisher> Pitman, </publisher> <address> London, </address> <year> 1979. </year>
Reference-contexts: We have therefore chosen to develop the a-ne theory here, then specialize to Euclidean geometry in Section 3.3. There are many difierent approaches to a-ne geometry <ref> [8, 10, 23] </ref>. <p> We have therefore chosen to develop the a-ne theory here, then specialize to Euclidean geometry in Section 3.3. There are many difierent approaches to a-ne geometry [8, 10, 23]. One approach, flrst put forth by Weyl [23] (a modern account of which can be found in Dodson and Poston <ref> [8] </ref> and Flohr and Raith P w v 34 Computer Graphics Fig. 3.3: Geometric interpretations of points and vectors. [10]), makes a distinction between points and vectors, but does not deflne operations for combining them. The method we shall adopt is very similar to that used by Dodson and Poston.
Reference: [9] <author> G. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <note> second edition edition, </note> <year> 1990. </year>
Reference-contexts: We will flnd them useful, for instance, when we consider projective transformations in Section 7.1. Simplexes and barycentric coordinates also have important uses in the theory of Bezier curves and surfaces (cf. <ref> [6, 9] </ref>). 3.5. *Matrix Representations of Points and Vectors In the previous section it was shown that points and vectors can be uniquely identifled by their coordinates relative to a given frame. <p> In Section 4.1 it was claimed that perspective projection, also known as central projection, was a projective map. To verify the claim, we must demonstrate that lines map to lines and that cross ratios are preserved under central projection. The following development is due to Farin <ref> [9] </ref>. Referring to Figure 7.2, it is clear that lines not containing C map to lines under perspective projection. In particular, a line Q 0 Q 1 maps to the line of intersection between the projection plane and the plane containing C, Q 0 , and Q 1 .
Reference: [10] <author> F. Flohr and F. Raith. </author> <title> A-ne and Euclidean geometry. </title> <editor> In H. Behnke, F. Bachmann, K. Fladt, and H. Kunle, editors, </editor> <booktitle> Fundamentals of Mathematics, </booktitle> <volume> Volume II, </volume> <pages> pages 293-383. </pages> <publisher> MIT Press, </publisher> <year> 1974. </year>
Reference-contexts: We have therefore chosen to develop the a-ne theory here, then specialize to Euclidean geometry in Section 3.3. There are many difierent approaches to a-ne geometry <ref> [8, 10, 23] </ref>. <p> One approach, flrst put forth by Weyl [23] (a modern account of which can be found in Dodson and Poston [8] and Flohr and Raith P w v 34 Computer Graphics Fig. 3.3: Geometric interpretations of points and vectors. <ref> [10] </ref>), makes a distinction between points and vectors, but does not deflne operations for combining them. The method we shall adopt is very similar to that used by Dodson and Poston.
Reference: [11] <author> J. Foley, A. van Dam, S. Feiner, and J. Hughes. </author> <title> Computer Graphics, Princples and Practice. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: The algorithm we now present was originally due to Jack Bresenham [3], although we have chosen to use the alternate derivation from Foley et al <ref> [11] </ref>, which in turn is due to Pitteway [15]. (Historical aside: Bresenham originally devised the algorithm for drawing lines with pen-plotters, not frame bufiers.) As indicated above, Bresenham's algorithm will only require integer arithmetic. In fact, the only arithmetic operations required are integer addition, subtraction, and bitwise shifting.
Reference: [12] <author> R. Goldman. </author> <title> Vector geometry: A coordinate-free approach. </title> <booktitle> Siggraph Course Notes, </booktitle> <volume> Course No. 19, </volume> <year> 1987. </year>
Reference-contexts: However, for reasons that will only become fully apparent later, it is more convenient to augment the row matrix with an additional value that distinguishes between points and vectors <ref> [12] </ref>. To allow this augmentation to proceed in a rigorous fashion, we extend the original set of axioms for an a-ne space A to include: (iii) Coordinate Axiom: For every point P 2 A:P, 0 P = ~ 0, the zero vector of A:V, and 1 P = P .
Reference: [13] <author> Serge Lang. </author> <title> Algebra. </title> <publisher> Addison-Wesley, </publisher> <address> Redwood City, California, </address> <note> second edition, </note> <year> 1984. </year>
Reference-contexts: It turns out that the set of all linear functionals on a vector space V itself forms a vector space, generally denoted by V (cf. Lang <ref> [13] </ref>). The vector space V of linear functionals is called the dual space of V. To reinforce the dual nature of the spaces V and V , the elements of V are more accurately known as primal vectors and the elements of V are called dual vectors.
Reference: [14] <author> M. O'Nan. </author> <title> Linear Algebra. </title> <publisher> Harcourt Brace Jovanovich, Inc., </publisher> <address> New York, </address> <note> second edition edition, </note> <year> 1976. </year>
Reference-contexts: Proof. For a rigorous proof, see any standard text in linear algebra such as O'Nan <ref> [14] </ref>. The two important points about this theorem are: (1) coordinates are always relative to some basis, and (2) relative to a particular basis, the coordinates are unique.
Reference: [15] <author> M. L. V. Pitteway. </author> <title> Algorithm for drawing ellipses or hyperbolae with a digital plotter. </title> <journal> Computer Journal, </journal> <volume> 10(3) </volume> <pages> 282-289, </pages> <year> 1967. </year>
Reference-contexts: The algorithm we now present was originally due to Jack Bresenham [3], although we have chosen to use the alternate derivation from Foley et al [11], which in turn is due to Pitteway <ref> [15] </ref>. (Historical aside: Bresenham originally devised the algorithm for drawing lines with pen-plotters, not frame bufiers.) As indicated above, Bresenham's algorithm will only require integer arithmetic. In fact, the only arithmetic operations required are integer addition, subtraction, and bitwise shifting.
Reference: [16] <author> R. Sproull and I. Sutherland. </author> <title> A clipping divider. </title> <booktitle> In FJCC, </booktitle> <pages> pages 765-775. </pages> <publisher> Thompson Books, </publisher> <address> Washington, D.C., </address> <year> 1968. </year>
Reference-contexts: In this case it is more convenient to postpone the clipping phase so that it is done in device coordinates so that integer rather than oating point arithmetic can be used. The clipping divider <ref> [16] </ref> is an integer based divide and conquer method for clipping line segments in device coordinates. The algorithm tests the segment being processed for trivial accept and reject conditions.
Reference: [17] <author> I. E. Sutherland and G. W. Hodgman. </author> <title> Reentrant polygon clipping. </title> <journal> Communications of the ACM, </journal> <volume> 17(1) </volume> <pages> 32-42, </pages> <year> 1974. </year>
Reference-contexts: Once I is computed, the subsegment P 1 I is discarded, and the subsegment P 2 I is output as the result. The above algorithm is the coordinate-free version of the Sutherland-Hodgman line clipping algorithm <ref> [17] </ref>. Exercises 1. <p> The failure of this approach is indicated in Figure 5.1. The algorithm we present here is due to Sutherland and Hodg-man <ref> [17] </ref>.
Reference: [18] <author> K. Torrance and E. </author> <title> Sparrow. Theory of ofi-specular reection from roughened surfaces. </title> <journal> Journal of the Optical Society of America, </journal> <volume> 57(9) </volume> <pages> 1105-1114, </pages> <year> 1967. </year> <note> 136 Computer Graphics </note>
Reference-contexts: The variation of the intensity of a point with the position of a viewer is not an efiect captured by the difiuse model. Torrance and Sparrow developed a model of specularly reecting surfaces by treating the surface as being composed of microscopic perfectly reecting at facets called microfacets <ref> [18, 19] </ref>. The microfacets are assumed to have normal vectors oriented in a distribution about the macro surface normal ^n, thereby modeling the microscopic aws that prevent real materials from being perfectly mirror-like.
Reference: [19] <author> K. Torrance, E. Sparrow, and R. Birkebak. </author> <title> Polarization, directional distributional, and ofi-specular peak phenomena in light reected from roughened surfaces. </title> <journal> Journal of the Optical Society of America, </journal> <volume> 56(7) </volume> <pages> 916-925, </pages> <year> 1966. </year>
Reference-contexts: The variation of the intensity of a point with the position of a viewer is not an efiect captured by the difiuse model. Torrance and Sparrow developed a model of specularly reecting surfaces by treating the surface as being composed of microscopic perfectly reecting at facets called microfacets <ref> [18, 19] </ref>. The microfacets are assumed to have normal vectors oriented in a distribution about the macro surface normal ^n, thereby modeling the microscopic aws that prevent real materials from being perfectly mirror-like.
Reference: [20] <author> J. Warnock. </author> <title> A hidden-surface algorithm for computer generated halftone pictures. </title> <institution> Computer Science Department TR 4-15, NTIS AD-753 671, University of Utah, </institution> <year> 1969. </year>
Reference-contexts: A major disadvantage of the depth bufier algorithm, at least as described above, is that the images it creates sufier from discretiza-tion efiects. For instance, if two triangle interpenetrate, the line of intersection will appear as a fairly ragged edge. 6.4. Warnock's Algorithm Warnock's algorithm <ref> [20] </ref> is an early example of a divide and conquer method that resolves hidden surfaces for the entire viewport by determining if the image to be rendered is "su-ciently simple" to 98 Computer Graphics allow hidden surfaces to be determined with simple tests.
Reference: [21] <author> G. Watkins. </author> <title> A real-time visible surface algorithm. </title> <institution> Computer Science Department UTEC-CSc-70-101, NTIS AD-762 004, University of Utah, </institution> <month> June </month> <year> 1970. </year>
Reference-contexts: A Sweep Line Algorithm In the late 60's and early 70's a number of algorithms were developed that build up an image a scan-line at a time <ref> [1, 2, 21, 24] </ref>. The basic idea behind these algorithms is to use the sweep line algorithm for polygon scan-conversion discussed in Section 5.1.3.
Reference: [22] <author> K. Weiler and P. Atherton. </author> <title> Hidden surface removal using polygon area sorting. </title> <booktitle> In Proceedings of SIGGRAPH, </booktitle> <pages> pages 214-??, </pages> <year> 1977. </year>
Reference-contexts: The proper clipping of concave polygons is somewhat more di-cult. Such an algorithm has been developed by Weiler and Atherton <ref> [22] </ref>. 5.1.2. Transforming Through A-ne Maps The image of a simple polygon P with vertices V 1 ; :::; V n under an a-ne transformation T is again a simple polygon P 0 with vertices T (V 1 ); :::; T (V n ).
Reference: [23] <author> H. </author> <title> Weyl. Space, Time, and Matter. </title> <publisher> Methuen & Co., </publisher> <address> London, </address> <year> 1922. </year> <title> Translated from German by H. </title> <publisher> Brose. </publisher>
Reference-contexts: We have therefore chosen to develop the a-ne theory here, then specialize to Euclidean geometry in Section 3.3. There are many difierent approaches to a-ne geometry <ref> [8, 10, 23] </ref>. <p> We have therefore chosen to develop the a-ne theory here, then specialize to Euclidean geometry in Section 3.3. There are many difierent approaches to a-ne geometry [8, 10, 23]. One approach, flrst put forth by Weyl <ref> [23] </ref> (a modern account of which can be found in Dodson and Poston [8] and Flohr and Raith P w v 34 Computer Graphics Fig. 3.3: Geometric interpretations of points and vectors. [10]), makes a distinction between points and vectors, but does not deflne operations for combining them.
Reference: [24] <author> C. Wylie, G. Romney, D. Evans, and A. Erdahl. </author> <title> Halftone perspective drawings by computer. </title> <booktitle> FJCC 1967, </booktitle> <pages> pages 49-58, </pages> <year> 1967. </year>
Reference-contexts: A Sweep Line Algorithm In the late 60's and early 70's a number of algorithms were developed that build up an image a scan-line at a time <ref> [1, 2, 21, 24] </ref>. The basic idea behind these algorithms is to use the sweep line algorithm for polygon scan-conversion discussed in Section 5.1.3.
References-found: 24

