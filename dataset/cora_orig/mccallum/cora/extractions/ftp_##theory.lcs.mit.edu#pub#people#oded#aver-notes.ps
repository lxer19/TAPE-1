URL: ftp://theory.lcs.mit.edu/pub/people/oded/aver-notes.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/surveys.html
Root-URL: 
Email: E-mail: oded@wisdom.weizmann.ac.il  
Title: Notes on Levin's Theory of Average-Case Complexity years old; I would have written some things
Author: Oded Goldreich 
Note: Acknowledgement and Warning: Much of the text was reproduced from expositionary material contained in [1], which in turn was based on [4]. Thus, much of the technical exposition is 10  Written while visting LCS, MIT.  
Date: November 1997  
Address: Rehovot, Israel.  
Affiliation: Department of Computer Science and Applied Mathematics Weizmann Institute of Science,  
Abstract: In 1984, Leonid Levin has initiated a theory of average-case complexity. We provide an exposition of the basic definitions suggested by Levin, and discuss some of the considerations underlying these definitions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Ben-David, B. Chor, O. Goldreich, and M. Luby, </author> <title> "On the Theory of Average Case Com plexity", </title> <journal> Journal of Computer and system Sciences, </journal> <volume> Vol. 44, No. 2, </volume> <month> April </month> <year> 1992, </year> <pages> pp. 193-219. </pages>
Reference-contexts: Subsequent works [7, 18, 8] have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in <ref> [1] </ref>. Levin's average-case complexity theory in a nutshell. An average case complexity class consists of pairs, called distributional problems. Each such pair consists of a decision (resp., search) problem and a probability distribution on problem instances. <p> One may argue that the instances of any problem we may need to solve are generated efficiently by some process, and so the latter class of P-samplable distribution suffices for our theory <ref> [1] </ref>. Fortunately, it was show [10] that any distributional problem which is complete for DistNP=hNP, P-computablei, is also complete with respect to the class hNP, P-samplablei. <p> Also, we associate pairs, triples etc. of binary strings with single binary strings in some standard manner (i.e. encoding). Definition 1 (Probability Distribution Function): A distribution function : f0; 1g fl ! <ref> [0; 1] </ref> is a non-decreasing function from strings to the unit interval [0,1] which converges to one (i.e., (0) 0, (x) (y) for each x &lt; y, and lim x!1 (x) = 1). <p> 0 (x) = 1 Definition 2 (A Distributional Problem): A distributional decision problem (resp., distributional search problem) is a pair (D; ) (resp. (S; )), where D : f0; 1g fl ! f0; 1g (resp., S f0; 1g fl fi f0; 1g fl ) and : f0; 1g fl ! <ref> [0; 1] </ref> is a distribution function. In the sequel we consider mainly decision problems. Similar formulations for search problems can be easily derived. 2.1 Distributional-NP Simple distributions are identified with the P-computable ones. <p> In the sequel we consider mainly decision problems. Similar formulations for search problems can be easily derived. 2.1 Distributional-NP Simple distributions are identified with the P-computable ones. The importance of restricting attention to simple distributions (rather than allowing arbitrary ones) is demonstrated in <ref> [1, Sec. 5.2] </ref>. Definition 3 (P-computable): A distribution is in the class P-computable if there is a deterministic polynomial time Turing machine that on input x outputs the binary expansion of (x) (the running time is polynomial in jxj). <p> That is, elements in a P-samplable distribution are generated in time polynomial in their length. We comment that any P-computable distribution is P-samplable, whereas the converse if false (provided one-way functions exist). For a detailed discussion see <ref> [1] </ref>. 2.2 Average Polynomial-Time The following definitions, regarding average polynomial-time, may seem obscure at first glance. It is important to point out that the naive formalizations of these definitions suffer from serious problems such as not being closed under functional composition of algorithms, being model dependent, encoding dependent etc. <p> Thus, a function is polynomial on the average if it is bounded by a polynomial in a function which is linear on the average. In fact, the basic definition is that of a function which is linear on the average; see <ref> [1, Def. 2] </ref>. Definition 6 (The class Average-P): A distributional problem (D; ) is in the class Average-P if there exists an algorithm A solving D, so that the running time of A is polynomial on the average with respect to the distribution . <p> We view the classes Average-P and DistNP as the average-case analogue of P and NP (respectively). We mention that if EXP 6= NEXP (i.e., DTime (2 O (n) ) 6= NTime (2 O (n) )) then Average-P does not contain all of DistNP (cf., <ref> [1] </ref>). 3 2.3 Reducibility between Distributional Problems We now present definitions of (average polynomial time) reductions of one distributional problem to another. Intuitively, such a reduction should be efficiently computable, yield a valid result and "preserve" the probability distribution. <p> In the definition of deterministic Turing reductions M D 2 (x) is determined by x (rather than being a random variable) and Ask M (x; y) is either 0 or 1 (rather than being any arbitrary rational in <ref> [0; 1] </ref>). In case of a many-to-one deterministic reduction, for every x, we have Ask M (x; y) = 1 for a unique y. <p> It seems that the theory of average case complexity, initiated by Levin and further developed in <ref> [7, 18, 1, 10] </ref>, satisfies these expectations to some extent. Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in [1]). <p> Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in <ref> [1] </ref>). The key result here is by Impagliazzo and Levin [10] whow proved that every language which is hNP, P-computablei-complete is also hNP, P-samplablei-complete.
Reference: [2] <author> Cook, S.A., </author> <title> "The Complexity of Theorem Proving Procedures", </title> <booktitle> Proc. 3rd ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 151-158, </pages> <year> 1971. </year>
Reference-contexts: The general question of average case complexity was addressed for the first time by Levin [15]. Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's <ref> [2] </ref> (and Levin's [14]) works are the basis for the theory of NP-completeness. Subsequent works [7, 18, 8] have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in [1]. Levin's average-case complexity theory in a nutshell.
Reference: [3] <author> Garey, </author> <title> M.R., and D.S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [4] <author> Goldreich, O., </author> <title> "Towards a Theory of Average Case Complexity (a survey)", </title> <institution> TR-531, Computer Science Department, Technion, Haifa, Israel, </institution> <month> March </month> <year> 1988. </year>
Reference-contexts: Most definitions originate from [Levin 84], but the reader is advised to look for further explanations and motivating discussions elsewhere (e.g., <ref> [11, 9, 4] </ref>). For sake of simplicity, we consider the standard lexicographic ordering of binary strings. <p> The notions of reducibility are both natural and adequate. 4. Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) [7], Combinatorics (e.g., Tiling [15] and a generalization of graph coloring [18]), Formal Languages (cf., <ref> [7, 4] </ref>), and Algebra (e.g., of matrix groups [8]). However the challenge of finding a really natural distributional problem which is complete in DistNP (e.g., subset sum with uniform distribution), has not been met so far.
Reference: [5] <author> O. Goldreich. </author> <title> Foundation of Cryptography Fragments of a Book. </title> <month> February </month> <year> 1995. </year> <note> Available from http://theory.lcs.mit.edu/~oded/frag.html. </note>
Reference-contexts: We discuss some of this choices here. Firstly, one better think of the motivation as to provide a theory of efficient computation (as suggested above), rather than a theory of infeasible ones (e.g., as in Cryptography). We note that a theory of useful-for-cryptography infeasible computations does exist (cf., <ref> [5, 6] </ref>). A key difference is that in Cryptography we needs problems for which one may generate instance-solution pairs so that solving the problem given only the instance is hard.
Reference: [6] <author> O. Goldreich. </author> <booktitle> On the Foundations of Modern Cryptography (essay). Proceedings of Crypto97, Springer LNCS, </booktitle> <volume> Vol. 1294, </volume> <pages> pp. 46-74. </pages>
Reference-contexts: We discuss some of this choices here. Firstly, one better think of the motivation as to provide a theory of efficient computation (as suggested above), rather than a theory of infeasible ones (e.g., as in Cryptography). We note that a theory of useful-for-cryptography infeasible computations does exist (cf., <ref> [5, 6] </ref>). A key difference is that in Cryptography we needs problems for which one may generate instance-solution pairs so that solving the problem given only the instance is hard.
Reference: [7] <author> Gurevich, Y., </author> <title> "Complete and Incomplete Randomized NP Problems", </title> <booktitle> Proc. of the 28th IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1987, </year> <pages> pp. 111-117. </pages>
Reference-contexts: Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's [2] (and Levin's [14]) works are the basis for the theory of NP-completeness. Subsequent works <ref> [7, 18, 8] </ref> have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in [1]. Levin's average-case complexity theory in a nutshell. An average case complexity class consists of pairs, called distributional problems. <p> one can easily modify BH so that has a "uniform" distribution and is DistNP-complete with respect to randomized reduction. (Hint: replace the unary time bound by a string of equal length, assigning each such string the same probability.) 3 DistNP-completeness of BH The proof, presented here, is due to Guretich <ref> [7] </ref> (an alternative proof is implied by Levin's original paper [15]). In the traditional theory of N P-completeness, the mere existence of complete problems is almost immediate. For example, it is extremely simple to show that the Bounded Halting problem is N P-complete. <p> It seems that the theory of average case complexity, initiated by Levin and further developed in <ref> [7, 18, 1, 10] </ref>, satisfies these expectations to some extent. Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in [1]). <p> The notions of reducibility are both natural and adequate. 4. Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) <ref> [7] </ref>, Combinatorics (e.g., Tiling [15] and a generalization of graph coloring [18]), Formal Languages (cf., [7, 4]), and Algebra (e.g., of matrix groups [8]). <p> The notions of reducibility are both natural and adequate. 4. Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) [7], Combinatorics (e.g., Tiling [15] and a generalization of graph coloring [18]), Formal Languages (cf., <ref> [7, 4] </ref>), and Algebra (e.g., of matrix groups [8]). However the challenge of finding a really natural distributional problem which is complete in DistNP (e.g., subset sum with uniform distribution), has not been met so far.
Reference: [8] <author> Gurevich, Y., </author> <title> "Matrix Decomposition Problem is Complete for the Average Case", </title> <booktitle> Proc. of the 31st IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 802-811. </pages>
Reference-contexts: Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's [2] (and Levin's [14]) works are the basis for the theory of NP-completeness. Subsequent works <ref> [7, 18, 8] </ref> have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in [1]. Levin's average-case complexity theory in a nutshell. An average case complexity class consists of pairs, called distributional problems. <p> Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) [7], Combinatorics (e.g., Tiling [15] and a generalization of graph coloring [18]), Formal Languages (cf., [7, 4]), and Algebra (e.g., of matrix groups <ref> [8] </ref>). However the challenge of finding a really natural distributional problem which is complete in DistNP (e.g., subset sum with uniform distribution), has not been met so far. It seems that what is still lacking are techniques for design of "distribution preserving" reductions.
Reference: [9] <author> Gurevich, Y., and D. McCauley, </author> <title> "Average Case Complete Problems", </title> <type> preprint, </type> <year> 1987. </year>
Reference-contexts: Most definitions originate from [Levin 84], but the reader is advised to look for further explanations and motivating discussions elsewhere (e.g., <ref> [11, 9, 4] </ref>). For sake of simplicity, we consider the standard lexicographic ordering of binary strings. <p> If the distribution function is in P-computable then the density function, 0 , is computable in time polynomial in jxj. The converse, however, is false, unless P = NP (see <ref> [9] </ref>). In spite of this remark we usually present the density function, and leave it to the reader to verify that the corresponding distribution function is in P-computable. We now present the class of distributional problems which corresponds to (the traditional) NP.
Reference: [10] <author> Impagliazzo, R., and L.A. Levin, </author> <title> "No Better Ways to Generate Hard NP Instances than Picking Uniformly at Random", </title> <booktitle> Proc. of the 31st IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 812-821. </pages>
Reference-contexts: One may argue that the instances of any problem we may need to solve are generated efficiently by some process, and so the latter class of P-samplable distribution suffices for our theory [1]. Fortunately, it was show <ref> [10] </ref> that any distributional problem which is complete for DistNP=hNP, P-computablei, is also complete with respect to the class hNP, P-samplablei. <p> It seems that the theory of average case complexity, initiated by Levin and further developed in <ref> [7, 18, 1, 10] </ref>, satisfies these expectations to some extent. Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in [1]). <p> Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in [1]). The key result here is by Impagliazzo and Levin <ref> [10] </ref> whow proved that every language which is hNP, P-computablei-complete is also hNP, P-samplablei-complete. This important result makes the theory of average case very robust: It allows to reduce distributional problems from an utmost wide class to distributional problems with very restricted/simple type of distributions. 7 2.
Reference: [11] <author> Johnson, </author> <title> D.S., "The NP-Complete Column an ongoing guide", </title> <booktitle> Jour. of Algorithms, 1984, </booktitle> <volume> Vol. 4, </volume> <pages> pp. 284-299. </pages>
Reference-contexts: 1 Introduction The average complexity of a problem is, in many cases, a more significant measure than its worst case complexity. This has motivated the development of a rich area in algorithmic research the probabilistic analysis of algorithms <ref> [11, 13] </ref>. However, this line of research has so far been applicable only to specific algorithms and with respect to specific, typically uniform, probability distributions. The general question of average case complexity was addressed for the first time by Levin [15]. <p> Most definitions originate from [Levin 84], but the reader is advised to look for further explanations and motivating discussions elsewhere (e.g., <ref> [11, 9, 4] </ref>). For sake of simplicity, we consider the standard lexicographic ordering of binary strings.
Reference: [12] <author> Karp, </author> <title> R.M., "Reducibility among Combinatorial Problems", Complexity of Computer Com putations, R.E. </title> <editor> Miller and J.W. Thatcher (eds.), </editor> <publisher> Plenum Press, </publisher> <pages> pp. 85-103, </pages> <year> 1972. </year>
Reference: [13] <author> Karp, </author> <title> R.M., "Probabilistic Analysis of Algorithms", </title> <type> manuscript, </type> <year> 1986. </year>
Reference-contexts: 1 Introduction The average complexity of a problem is, in many cases, a more significant measure than its worst case complexity. This has motivated the development of a rich area in algorithmic research the probabilistic analysis of algorithms <ref> [11, 13] </ref>. However, this line of research has so far been applicable only to specific algorithms and with respect to specific, typically uniform, probability distributions. The general question of average case complexity was addressed for the first time by Levin [15].
Reference: [14] <author> Levin, L.A., </author> <title> "Universal Search Problems", </title> <booktitle> Problemy Peredaci Informacii 9, </booktitle> <pages> pp. 115-116, </pages> <year> 1973. </year> <booktitle> Translated in problems of Information Transmission 9, </booktitle> <pages> pp. 265-266. </pages>
Reference-contexts: The general question of average case complexity was addressed for the first time by Levin [15]. Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's [2] (and Levin's <ref> [14] </ref>) works are the basis for the theory of NP-completeness. Subsequent works [7, 18, 8] have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in [1]. Levin's average-case complexity theory in a nutshell.
Reference: [15] <author> Levin, L.A., </author> <title> "Average Case Complete Problems", </title> <journal> SIAM Jour. of Computing, 1986, </journal> <volume> Vol. 15, </volume> <pages> pp. 285-286. </pages> <note> Extended abstract appeared in Proc. 16th ACM Symp. on Theory of Computing, 1984, p. 465. </note>
Reference-contexts: However, this line of research has so far been applicable only to specific algorithms and with respect to specific, typically uniform, probability distributions. The general question of average case complexity was addressed for the first time by Levin <ref> [15] </ref>. Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's [2] (and Levin's [14]) works are the basis for the theory of NP-completeness. Subsequent works [7, 18, 8] have provided few additional complete problems. <p> Levin's average-case complexity theory in a nutshell. An average case complexity class consists of pairs, called distributional problems. Each such pair consists of a decision (resp., search) problem and a probability distribution on problem instances. We focus on the class DistNP def P-computablei, defined by Levin <ref> [15] </ref>, which is a distributional analogue of NP: It consists of NP decision problems coupled with distributions for which the accumulative measure is polynomail-time computable. <p> Reductions between distributional problems are defined in a way guaranteeing that if 1 is reducible to 2 and 2 is in average polynomial-time, then so is 1 . Finally, it is shown that the class DistNP contains a complete problem. Levin's average-case theory, revisited. Levin's laconic presentation <ref> [15] </ref> hides the fact that choices has been done in the development of the average-case complexity theory. We discuss some of this choices here. <p> distribution and is DistNP-complete with respect to randomized reduction. (Hint: replace the unary time bound by a string of equal length, assigning each such string the same probability.) 3 DistNP-completeness of BH The proof, presented here, is due to Guretich [7] (an alternative proof is implied by Levin's original paper <ref> [15] </ref>). In the traditional theory of N P-completeness, the mere existence of complete problems is almost immediate. For example, it is extremely simple to show that the Bounded Halting problem is N P-complete. <p> The notions of reducibility are both natural and adequate. 4. Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) [7], Combinatorics (e.g., Tiling <ref> [15] </ref> and a generalization of graph coloring [18]), Formal Languages (cf., [7, 4]), and Algebra (e.g., of matrix groups [8]). However the challenge of finding a really natural distributional problem which is complete in DistNP (e.g., subset sum with uniform distribution), has not been met so far. <p> Levin views the results in his paper <ref> [15] </ref> as an indication that all "simple" (i.e., P-computable) distributions are in fact related (or similar). Additional support to this statment is provided by his latter work [17].
Reference: [16] <author> Levin, L.A., </author> <title> "One-Way Function and Pseudorandom Generators", </title> <booktitle> Proc. 17th ACM Symp. on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 363-365. </pages>
Reference: [17] <author> Levin, L.A., </author> <title> "Homogeneous Measures and Polynomial Time Invariants", </title> <booktitle> Proc. 29th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1988, </year> <pages> pp. 36-41. </pages>
Reference-contexts: Levin views the results in his paper [15] as an indication that all "simple" (i.e., P-computable) distributions are in fact related (or similar). Additional support to this statment is provided by his latter work <ref> [17] </ref>.
Reference: [18] <author> Venkatesan, R., and L.A. Levin, </author> <title> "Random Instances of a Graph Coloring Problem are Hard", </title> <booktitle> Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 217-222. 11 </pages>
Reference-contexts: Levin's work can be viewed as the basis for a theory of average NP-completeness, much the same way as Cook's [2] (and Levin's [14]) works are the basis for the theory of NP-completeness. Subsequent works <ref> [7, 18, 8] </ref> have provided few additional complete problems. Other basic complexity problems, such as decision versus search, were studied in [1]. Levin's average-case complexity theory in a nutshell. An average case complexity class consists of pairs, called distributional problems. <p> It seems that the theory of average case complexity, initiated by Levin and further developed in <ref> [7, 18, 1, 10] </ref>, satisfies these expectations to some extent. Following is my evaluation regarding its "performance" with respect to each of the above. 1. The scope of the theory, originally restricted to P-computable distributions has been signifi cantly extended to cover all P-sampleable distributions (as suggested in [1]). <p> The notions of reducibility are both natural and adequate. 4. Results did follow, but here indeed much more is expected. Currently, DistNP-complete problems are known for the following areas: Computability (e.g., Bounded-Halting) [7], Combinatorics (e.g., Tiling [15] and a generalization of graph coloring <ref> [18] </ref>), Formal Languages (cf., [7, 4]), and Algebra (e.g., of matrix groups [8]). However the challenge of finding a really natural distributional problem which is complete in DistNP (e.g., subset sum with uniform distribution), has not been met so far.
References-found: 18

