URL: http://seclab.cs.ucdavis.edu/~puketza/Papers/watchers.ps
Refering-URL: http://seclab.cs.ucdavis.edu/~puketza/Papers/
Root-URL: http://www.cs.ucdavis.edu
Email: fbradley,cheung,puketza,mukherje,olssong@cs.ucdavis.edu  
Title: Detecting Disruptive Routers: A Distributed Network Monitoring Approach 1  
Author: Kirk A. Bradley Steven Cheung, Nick Puketza, Biswanath Mukherjee, and Ronald A. Olsson 
Note: This work has been submitted to the IEEE for possible publication. Copyright may be transferred without notice, after which this version may no longer be accessible.  
Date: September 4, 1998  
Web: http://www.cs.ucdavis.edu  
Address: Davis, CA 95616  
Affiliation: Department of Computer Science University of California, Davis  
Abstract: An attractive target for a computer system attacker is the router. An attacker in control of a router can disrupt communication by dropping or misrouting packets passing through the router. We present a protocol called WATCHERS that detects and reacts to routers that drop or misroute packets. WATCHERS is based on the principle of conservation of flow in a network: all data bytes sent into a node, and not destined for that node, are expected to exit the node. WATCHERS tracks this flow, and detects routers that violate the conservation principle. We show that WATCHERS has several advantages over existing network monitoring techniques. We discuss WATCHERS' response to several different types of bad router behavior. We demonstrate that in ideal conditions WATCHERS makes no false-positive diagnoses, and we describe how WATCHERS can be tuned to perform nearly as well in realistic conditions. Also, we argue that WATCHERS' impact on router performance and WATCHERS' memory requirements are reasonable for many environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. M. Bellovin. </author> <title> "Security Problems in the TCP/IP Protocol Suite". </title> <journal> ACM Computer Communication Review, </journal> <volume> 19(2) </volume> <pages> 32-48, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: A router may also alter or inspect the packets passing through it. Detailed examples of other malicious router behaviors appear in references <ref> [1] </ref> and [10]. 1.4 Current Router Monitoring Techniques Many router monitoring techniques already exist. Here we summarize several of them and comment on their abilities to detect bad routers. 1.4.1 Hop-by-Hop Acknowledgements Perlman first proposed the idea of intermediate hop acknowledgments [12].
Reference: [2] <author> K. A. Bradley. </author> <title> Detecting Disruptive Routers: A Distributed Network Monitoring Approach. </title> <type> Master's thesis, </type> <institution> University of California, Davis, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: Section 4 also shows that WATCHERS does not make any false-positive diagnoses when certain conditions hold, and it discusses WATCHERS' limitations. Section 5 describes future research tasks. For more details on this work, consult the comprehensive report <ref> [2] </ref>. 1.1 Our Model and Associated Terminology An internetwork is a group of networks connected together so that computers in different networks can communicate. The networks are connected by routers. Each communication between two computers across a network (or internetwork) is divided into segments of data called packets.
Reference: [3] <author> J. Case, M. Fedor, M. Schoffstall, and J. Davin. </author> <title> "A Simple Network Management Protocol (SNMP)", </title> <month> May </month> <year> 1990. </year> <note> RFC 1157. </note>
Reference-contexts: WATCHERS has four significant advantages over many other network monitoring techniques: * A network monitoring tool (e.g., traceroute [4] or an implementation of the Simple Network Management Protocol (SNMP) <ref> [3] </ref>) may fail to detect an attack because the attacker is able to disrupt messages sent by the tool, including messages between separate tool components. <p> can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, many network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [3, 4, 8, 12] </ref>. <p> have a weakness: A malicious router can avoid detection if it can distinguish testing probes from ordinary packets. 4 1.4.3 Network Management A network management tool monitors the routers and networks in an AS, and can be used to debug problems, control routing, and find computers that violate protocol standards <ref> [3, 6] </ref>. For a TCP/IP network, such a tool typically runs on a management station and communicates with network elements such as routers using a standard protocol (usually SNMP). The network elements log data and send it to the management tool.
Reference: [4] <author> W. R. Cheswick and S. M. Bellovin. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: WATCHERS cannot be used in such environments yet, but we expect that WATCHERS can be adapted in the future to cope with multicasts and other special events. WATCHERS has four significant advantages over many other network monitoring techniques: * A network monitoring tool (e.g., traceroute <ref> [4] </ref> or an implementation of the Simple Network Management Protocol (SNMP) [3]) may fail to detect an attack because the attacker is able to disrupt messages sent by the tool, including messages between separate tool components. <p> can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, many network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [3, 4, 8, 12] </ref>. <p> misroute packets, but we are not aware of an existing tool that matches WATCHERS' capabilities, including its protections against bad routers that attempt to escape detection (see Section 4). 1.4.4 Recording and Tracing Routes Route recording and route tracing are often the first methods used to isolate faults in routers <ref> [4] </ref>. For the Internet Protocol (IP), route recording is optional for each packet. When this option is selected, each router on the path to the packet's destination appends its IP address to a list in the packet's header. <p> Thus, route tracing reveals the routing decisions of the intermediate routers, and so the method can be used to detect a router that misroutes packets. (The traceroute program <ref> [4] </ref> is a popular implementation of route tracing.) Route tracing suffers from the same limitation as probing; a bad router might be able to identify a test packet, and thereby avoid detection.
Reference: [5] <author> S. Cheung and K. N. Levitt. </author> <title> "Protecting Routing Infrastructures from Denial of Service Using Cooperative Intrusion Detection". </title> <booktitle> In Proc. New Security Paradigms Workshop, </booktitle> <address> Cumbria, UK, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: Router 1 has shifted the blame away from router 4. 1.4.2 A Probing Technique Another way to detect misbehaving routers is a probing technique based on peer testing of routers <ref> [5] </ref>. Using this strategy, a router (the testing router) can test its peers along a suspicious route. The testing router sends a probe to the first router on the route. A probe is a packet that will follow a pre-determined path, ending back at the testing router. <p> Thus, using this new strategy, router 1 can detect router 3's bad behavior. The ability to detect such an attack by consorting routers is an improvement over the conservation-of-flow analysis technique as it first appeared in reference <ref> [5] </ref>. 2.4 Response During a round of WATCHERS, a testing router can diagnose a neighbor as a bad router for six reasons: 1. the testing router did not receive a response message from the neighbor during the RRR sub-protocol; 2. the testing router received more than one version of a response
Reference: [6] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP: </title> <booktitle> Principles, Protocols, and Architecture, </booktitle> <volume> Vol. 1, </volume> <booktitle> Third Edition. </booktitle> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: have a weakness: A malicious router can avoid detection if it can distinguish testing probes from ordinary packets. 4 1.4.3 Network Management A network management tool monitors the routers and networks in an AS, and can be used to debug problems, control routing, and find computers that violate protocol standards <ref> [3, 6] </ref>. For a TCP/IP network, such a tool typically runs on a management station and communicates with network elements such as routers using a standard protocol (usually SNMP). The network elements log data and send it to the management tool. <p> Second, the list can be altered by an intermediate router. Third, an intermediate router can simply drop the packet, so that the route list never reaches the destination <ref> [6] </ref>. Route tracing is similar to probing. The main difference is that probing tests the routers on a pre-selected path between two computers; route tracing identifies and tests the routers in the path that a packet would actually take between the computers. <p> In such a protocol, each router is aware of each other router and each link between pairs of routers in the AS. 5 Also, each router periodically broadcasts an update message to indicate which of its links to other routers are "up" and which are "down" <ref> [6] </ref>. 2. Good Neighbor Condition: Every router (good or bad) must be directly connected to at least one good router. 3. Good Path Condition: Each good router must be able to send a message to each other good router over a path of good routers. <p> Three reasons why counter values may be different from the ideal or expected values follow. * We have implicitly assumed that good routers never drop packets. However, typical network protocols, including several within the TCP/IP suite, drop packets due to errors in transmission or congestion in the network <ref> [6] </ref>. For these reasons routers with extremely heavy traffic may drop packets at significant rates. * Neighbors may not be perfectly synchronized when a new round of WATCHERS begins due to propagation delays for the request messages (Section 2.3.1).
Reference: [7] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: For a full AS, this task is equivalent to the problem of finding the shortest paths between all pairs of vertices in a graph. The Floyd-Warshall algorithm solves this problem in fi (R 3 ) time <ref> [7] </ref>. We compare this cost to the cost for a router that is running a link-state protocol, but is not running WATCHERS. Such a router must update only its own routing table when the topology changes. <p> Such a router must update only its own routing table when the topology changes. This task is equivalent to the problem of finding the shortest paths from a single vertex to every other vertex, and can be solved using Dijkstra's algorithm in O (R 2 ) time <ref> [7] </ref>.
Reference: [8] <author> S. Garfinkel and G. Spafford. </author> <title> Practical UNIX and Internet Security. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> second edition, </address> <year> 1996. </year>
Reference-contexts: can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, many network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [3, 4, 8, 12] </ref>.
Reference: [9] <author> C. Huitema. </author> <title> Routing in the Internet. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Since a good router sends routing updates whenever it changes its own routing table, and its good neighbors immediately change their own tables accordingly, any period of discrepancy between the routing tables of neighboring good routers should be brief <ref> [9] </ref>. Moreover, in modern link-state routing protocols, link costs are static and therefore link-state changes are infrequent [15]. Even so, a momentary disagreement over topology may cause a router to increment an M counter with the mistaken belief that a neighbor has misrouted a packet.
Reference: [10] <author> L. Joncheray. </author> <title> "A Simple Active Attack Against TCP". </title> <booktitle> In Proc. 5th USENIX UNIX Security Symposium, </booktitle> <pages> pages 7-19, </pages> <address> Salt Lake City, Utah, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: A router may also alter or inspect the packets passing through it. Detailed examples of other malicious router behaviors appear in references [1] and <ref> [10] </ref>. 1.4 Current Router Monitoring Techniques Many router monitoring techniques already exist. Here we summarize several of them and comment on their abilities to detect bad routers. 1.4.1 Hop-by-Hop Acknowledgements Perlman first proposed the idea of intermediate hop acknowledgments [12].
Reference: [11] <author> John Moy. </author> <note> "OSPF Version 2", </note> <month> July </month> <year> 1997. </year> <title> Internet RFC 2178. </title>
Reference-contexts: However, in at least one link-state routing protocol, the Open Shortest Path First (OSPF) protocol, when two neighbors advertise conflicting information about the status of their shared link, the other routers treat the link as down <ref> [11] </ref>.) Also, the testing router ceases to send packets along that link and acknowledge traffic received on that link.
Reference: [12] <author> R. Perlman. </author> <title> Network Layer Protocols with Byzantine Robustness. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, many network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [3, 4, 8, 12] </ref>. <p> Here we summarize several of them and comment on their abilities to detect bad routers. 1.4.1 Hop-by-Hop Acknowledgements Perlman first proposed the idea of intermediate hop acknowledgments <ref> [12] </ref>. Under this scheme, when a computer S sends a packet to computer D, S receives an acknowledgement (ACK) from D and from each router on the path from S to D. <p> S However, this security mechanism can be defeated by consorting bad routers (routers that cooperate to hide malicious behavior) <ref> [12] </ref>. In Figure 1, suppose router 4 drops a packet (from S and intended for D) while router 1 covers for router 4 by dropping the ACK from router 3.
Reference: [13] <author> R. Perlman. </author> <title> Interconnections: Bridges and Routers. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: Thus, the message eventually travels over every link and reaches every router in the AS. A router may receive more than one copy of a message, but it ignores the copies after the first <ref> [13] </ref>. 1.2 Routing The routers in an AS communicate with one another using a routing protocol to update their routing tables as the network topology changes. Each router in an AS runs the same routing protocol. Many routing protocols fit the following description.
Reference: [14] <author> B. Soh and T. Dillon. </author> <title> "Setting Optimal Intrusion-Detection Thresholds". </title> <journal> Computers and Security, </journal> <volume> 14(7) </volume> <pages> 621-31, </pages> <year> 1995. </year>
Reference-contexts: Such environments may require threshold values that change dynamically. While we have identified some of the issues involved in setting thresholds, this is an open research problem. Some related work on this problem appears in the intrusion detection literature <ref> [14] </ref>. 3 WATCHERS Costs WATCHERS can only be used if its memory, communication, and processing costs are reasonable. We now demonstrate that these costs depend heavily on the number of routers in the AS and the number of edges in the graph that models the AS (the router graph).
Reference: [15] <author> M. Steenstrup. </author> <title> Routing in Communications Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Moreover, in modern link-state routing protocols, link costs are static and therefore link-state changes are infrequent <ref> [15] </ref>. Even so, a momentary disagreement over topology may cause a router to increment an M counter with the mistaken belief that a neighbor has misrouted a packet. The threshold values are also dependent on the WATCHERS period (time between consecutive rounds).
References-found: 15

