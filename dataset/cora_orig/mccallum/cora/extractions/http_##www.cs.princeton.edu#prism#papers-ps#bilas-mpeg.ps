URL: http://www.cs.princeton.edu/prism/papers-ps/bilas-mpeg.ps
Refering-URL: http://www.cs.princeton.edu/prism/html/all-papers.html
Root-URL: http://www.cs.princeton.edu
Email: fbilas@cs, jefritts@ee, jps@csg.princeton.edu  
Title: Real-Time Parallel MPEG-2 Decoding in Software  
Author: Angelos Bilas, Jason Fritts, Jaswinder Pal Singh 
Keyword: Image processing, MPEG, parallel computing, video compression, real-time, shared memory.  
Address: Princeton NJ 08544  
Affiliation: Princeton University,  
Abstract: We present a parallel decoder for the MPEG standard, implemented on a shared memory multiprocessor. Goal of this work is to provide an all-software solution for real-time, high-quality video decoding and to investigate the important properties of this application as they pertain to multiprocessor systems. Both coarse and fine grained implementations are considered for parallelizing the decoder. The coarse-grained approach exploits parallelism at the group of pictures level, while the fine-grained approach parallelizes within pictures, at the slice level. A comparative evaluation of these methods is made, with results presented in terms of speedup, memory requirements, load balance, synchronization time, and temporal and spatial locality. Both methods demonstrate very good speedups and locality properties. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. C. D. </author> <month> 13818-2. </month> <title> Generic Coding of Moving Pictures and Associated Audio: Recommendation H.262. </title> <address> ISO/IEC JTC1/SC29 WG11/602, Seoul, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . . Group of Pictures tion, the MPEG standard provides high degrees of compression on video sequences. An important aspect of the versatility of MPEG is its layered structure <ref> [3, 1] </ref>. The hierarchy of layers in an MPEG bit-stream is arranged in the following order: Sequence, Group of Pictures (GOP), Picture, Slice, Macro-block, and Block. (see Figure 1). The different parts of the stream (except macro-blocks and blocks) are marked with unique, byte aligned codes called start-codes.
Reference: [2] <author> S. M. Akramullah, I. Ahmad, and M. L. Liou. </author> <title> A data-parallel approach for real-time MPEG-2 video encoding. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 30(2) </volume> <pages> 129-146, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Reported work has not analyzed the bottlenecks or the important data locality characteristics either. A parallel MPEG-2 encoder for large scale multiprocessors is presented in <ref> [2] </ref>. Parallelism is exploited at the block and macro-block level. A parallel decoder that exploits paral-lelization at the GOP level in a message-passing environment is presented in [7]. This work deals only with MPEG-1 streams. An MPEG-2 video encoder for a LAN of workstations is presented in [11].
Reference: [3] <author> V. Bhaskaran and K. Konstantinides. </author> <title> Image and Video Compression Standards: Algorithms and Architectures. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1995. </year>
Reference-contexts: Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . . Group of Pictures tion, the MPEG standard provides high degrees of compression on video sequences. An important aspect of the versatility of MPEG is its layered structure <ref> [3, 1] </ref>. The hierarchy of layers in an MPEG bit-stream is arranged in the following order: Sequence, Group of Pictures (GOP), Picture, Slice, Macro-block, and Block. (see Figure 1). The different parts of the stream (except macro-blocks and blocks) are marked with unique, byte aligned codes called start-codes.
Reference: [4] <author> A. Bilas, J. Fritts, and J. Singh. </author> <title> Real time parallel MPEG-2 decoding in software. </title> <type> Technical Report TR-516-96, </type> <institution> Computer Science Department, Princeton University, Princeton, NJ-08544, </institution> <year> 1996. </year>
Reference-contexts: Both methods demonstrate very good speedups and locality properties. Due to space limitations we omit most of the background information on MPEG. An expanded version of this paper can be found in <ref> [4] </ref>. Section 3 describes the test-bed that was used for implementing and benchmarking the different algorithms. In Section 4 we present the methodology for parallelizing the decoder and the parallel implementations with their results. In the same section we also study the locality properties through simulation.
Reference: [5] <author> P. R. </author> <title> Group. Berkeley MPEG-1 Video Encoder User's Guide. </title> <institution> Computer Science Division, University of California, Berkeley. </institution>
Reference-contexts: Successive pictures within the video sequence are examined for similarities, and these are used to remove temporal redundancies. By using both spatial and temporal correla 1 Other sequential software MPEG encoders-decoders (codecs) are publicly available as well <ref> [6, 10, 5, 9] </ref>. 2 A lossy compression scheme is one in which data are lost. Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . .
Reference: [6] <author> A. C. Hung. </author> <title> PVRG-MPEG CODEC 1.1. Portable Video Research Group (PRVG), </title> <institution> Stanford University, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Successive pictures within the video sequence are examined for similarities, and these are used to remove temporal redundancies. By using both spatial and temporal correla 1 Other sequential software MPEG encoders-decoders (codecs) are publicly available as well <ref> [6, 10, 5, 9] </ref>. 2 A lossy compression scheme is one in which data are lost. Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . .
Reference: [7] <author> M. K. Kwong, P. T. P. Tang, and B. Lin. </author> <title> A Real-Time MPEG Software Decoder Using a Portable Message-Passing Library. </title> <institution> Mathematics and Computer Science Division, ANL, Argonne, </institution> <address> IL 60439-4844. </address>
Reference-contexts: A parallel MPEG-2 encoder for large scale multiprocessors is presented in [2]. Parallelism is exploited at the block and macro-block level. A parallel decoder that exploits paral-lelization at the GOP level in a message-passing environment is presented in <ref> [7] </ref>. This work deals only with MPEG-1 streams. An MPEG-2 video encoder for a LAN of workstations is presented in [11]. They conclude that for their approach the best parallel scheme should be based on slices.
Reference: [8] <author> W. Lee, R. J. G. J. Golston, and Y. Kim. </author> <title> Real-time MPEG video codec on a single-chip multiprocessor. </title> <booktitle> Proceedings of the SPIE, Digital Video Compression on Personal Computers: Algorithms and Technologies, </booktitle> <volume> 2187 </volume> <pages> 32-42, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: They conclude that for their approach the best parallel scheme should be based on slices. Work has also been done in designing hardware or combined hardware-software codecs that achieve real-time performance. A software solution on the Multimedia Video Multiprocessor (TMS320C80) is presented in <ref> [8] </ref>. They report real-time results for small picture encoding-decoding. 6 Conclusions We have investigated the behavior of two parallel implementations of MPEG-2 decoding on shared memory multiprocessors. Parallelization was performed at the GOP and slice levels.
Reference: [9] <institution> MPEG Software Simulation Group. MPEG-2 Encoder/Decoder, </institution> <note> Version 1.1, </note> <year> 1994. </year>
Reference-contexts: In this paper, we examine how effectively increasingly popular cache-coherent bus-based shared memory multiprocessors can be used to speed up software MPEG decoding. We present two parallel implementations of the MPEG-2 decoder provided by the MPEG Software Simulations Group 1 <ref> [9] </ref>. The first version exploits very coarse-grained parallelism across groups of pictures in the video sequence, while the second exploits fine-grained parallelism within each picture. <p> Successive pictures within the video sequence are examined for similarities, and these are used to remove temporal redundancies. By using both spatial and temporal correla 1 Other sequential software MPEG encoders-decoders (codecs) are publicly available as well <ref> [6, 10, 5, 9] </ref>. 2 A lossy compression scheme is one in which data are lost. Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . . <p> As seen in Table 1, we use four different resolutions (176x120, 352x240, 704x480, 1408x960) 5 and four different numbers of pictures per GOP (4, 13, 16, 31) for a total of 16 streams. The public domain MPEG-2 encoder <ref> [9] </ref> we used to create the streams creates one slice for each row of a picture. Similarly, most public domain video sequences we found also have a small number of slices per picture (usually one per row).
Reference: [10] <author> K. Patel, B. C. Smith, and L. A. Rowe. </author> <title> Performance of a Software MPEG Video Decoder. </title> <institution> Computer Science Division-EECS, University of California, Berkeley. </institution>
Reference-contexts: Successive pictures within the video sequence are examined for similarities, and these are used to remove temporal redundancies. By using both spatial and temporal correla 1 Other sequential software MPEG encoders-decoders (codecs) are publicly available as well <ref> [6, 10, 5, 9] </ref>. 2 A lossy compression scheme is one in which data are lost. Only partial recovery of the original unencoded data is possible. 1 Video stream Sequence Picture Slice Macroblock Block . . .
Reference: [11] <author> Y. Yu and D. Anastassiou. </author> <title> Software implementation of MPEG-2 video encoding using socket programming in LAN. </title> <booktitle> Proceedings of the SPIE, Conference on Digital Video Compression on Personal Computers: Algorithms and Technologies, </booktitle> <volume> 2187 </volume> <pages> 229-240, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: Parallelism is exploited at the block and macro-block level. A parallel decoder that exploits paral-lelization at the GOP level in a message-passing environment is presented in [7]. This work deals only with MPEG-1 streams. An MPEG-2 video encoder for a LAN of workstations is presented in <ref> [11] </ref>. They conclude that for their approach the best parallel scheme should be based on slices. Work has also been done in designing hardware or combined hardware-software codecs that achieve real-time performance. A software solution on the Multimedia Video Multiprocessor (TMS320C80) is presented in [8].
References-found: 11

