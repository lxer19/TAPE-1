URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3475/3475.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: frich, ladang@cs.umd.edu  
Phone: Tel: (301) 405-2710  
Title: Benchmarking Digital Video: Measurements, Analysis, Improvements and Lessons Learned  
Author: Richard Gerber and Ladan Gharai 
Note: This research is supported in part by ONR grant N00014-94-10228, NSF grant CCR-9209333, and NSF Young Investigator Award CCR-9357850.  
Date: May 9, 1995  
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: Digital video applications can often push a computer's resources to their limit. They require massive amounts of storage, high IO transfer rates, and fast display refresh times. And if software is involved in the decompression process, the CPU will often end up over-utilized. Resource demands have a direct effect on the quality of the delivered video; this results in a complex "load-balancing" problem, which must be solved with both quantitative and qualitative metrics. In this paper we describe our experiments on media applications, specifically concentrating on the tradeoff analysis involved in tuning video systems. We first postulate a set of hypotheses, and then we describe the controlled set of 240 tests we ran to test them. Our observations confirmed that achieving smooth playback is mainly a problem of coordinating an operating system to the properties of the media. The first 120 test runs were drawn from a series of 60 videos, which we generated with our own Hi8 equipment. Each test video uniquely instantiated the following variables: codec, frame size, digitized rate, spatial quality and keyframe distribution. The tests were carried out on two Apple Macintosh platforms: at the lower end a Quadra 950, and at the high-end, a Power PC 7100/80. Our quantitative metrics included average playback rate, as well as the rate's variance over one-second intervals. This paper contains the results of these experiments, as well our analysis of each variable's importance. The first set of results unveiled some surprising anomalies, which seemed to substantiate our hypotheses even more than we expected. These anomalies forced us to run an additional 120 tests, whose analysis led to some broad conclusions about digital video specifi cally, and the capabilities of personal computers in general. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Apple Computer Corporation. Inside the Machintosh: </institution> <address> Quicktime. </address> <publisher> Addison Wesley, </publisher> <year> 1994. </year>
Reference-contexts: The observations were as follows: * Using several QuickTime <ref> [1] </ref> movies as samples, and Apple Macintosh computers as our platforms, we found that the selection of codec 1 , frame rate, and color quality had unpredictable consequences.
Reference: [2] <author> Kevin Fall and Joseph Pasquale. </author> <title> Improving Continuous-Media Playback Performance with In-Kernel Data Paths. </title> <booktitle> Proceedings of IEEE, </booktitle> <pages> pages 100-109, </pages> <year> 1994. </year>
Reference-contexts: Stone and Jeffay prescribe a queue monitoring policy for dyanamic adjustment of display latency, which supports low-latency conferences with acceptable gap-rates. Our focus on IO and data paths is echoed in <ref> [2] </ref>, which proposes a means of optimizing the transmission of compressed videos. While a network may be able to transmit the video frames, the destination station may end up being the bottleneck. <p> We are currently working to eliminating this problem, by implementing a direct, double 21 buffered channel between the disk driver and the decompression software. A direct, DMA'd "data pipe" will, for example, obviate the need for redundant copy-in/copy-out operations. (Fall and Pasqule came to the same conclusion in <ref> [2] </ref>.) Needless to say, a "Quicktime-aware" driver will have to be safe with respect other processes in the system. With this enhancement, and with a wider IO path, we are confident that we will have a software-only solution for displaying high-quality, full-screen videos
Reference: [3] <author> Gregory K.Wallace. </author> <title> The jpeg still picture compression standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4), </volume> <month> 4 </month> <year> 1991. </year>
Reference-contexts: Our test instances have labels like "C/30/3/half/75," which denotes a movie re-digitized in the Cinepak codec at 30 fps, with one keyframe every third frame, in a frame size of 320x160 with a 75% quality index. Codecs and Keyframes. JPEG <ref> [3] </ref> is basically a compression standard for still-pictures, which can produce nearly lossless digital copies.
Reference: [4] <author> Ralf Steinmetz. </author> <title> Compression Techniques in Multimedia Systems. </title> <type> Technical Report 43.9307, </type> <institution> IBM European Networking Center, </institution> <address> Vangerowstrabe 18, 69020 Heidelberg, Germany, </address> <year> 1993. </year>
Reference-contexts: Note that this is analogous (but not identical) to P-frames in MPEG <ref> [4] </ref>, which determines the fields of motion relative to last I-frame, and then stores the corresponding motion-vectors. While MPEG-compression can be a complex (and time-consuming) operation, re-compressing QuickTime movies in software can also require an enormous amount of CPU time.
Reference: [5] <author> Donald L. Stone and Kevin Jeffay. </author> <title> An Empirical Study of Delay Jitter Management Policies. </title> <journal> Multimedia Systems, </journal> <volume> 2(6) </volume> <pages> 267-279, </pages> <year> 1995. </year>
Reference-contexts: Nonetheless, some recent papers on distributed systems touch on many of the same issues, albiet from a different perspective. For example, Stone and Jeffay's study of delay and jitter management <ref> [5] </ref> is highly relevant to our focus. As they note, a network's display latency effectively determines client's frame rate, and that 7 latency is, for obvious reasons, inversely proportional to permissible display rates.
Reference: [6] <author> Toshiyuki Urabe, Hassan Afzal, Grace Ho, and Pramod Pancha Magda El Zarki. MPEGTool: </author> <title> An X Window-Based MPEG Encoder and Statistics Tool. </title> <journal> Multimedia Systems, </journal> <volume> 1(6) </volume> <pages> 220-229, </pages> <year> 1994. </year>
Reference-contexts: Finally, the abilities of our player-monitor are similar to that described in <ref> [6] </ref>, where MPEG-encoded video streams can be generated expressly for providing statistical information on the data, such as distribution of ATM cells per frame, auto-correclation and cell inter-arrival times. 3 Experiment Construction and Variable Instantiation In this section we provide an overview of the methods used in constructing our test videos.
References-found: 6

