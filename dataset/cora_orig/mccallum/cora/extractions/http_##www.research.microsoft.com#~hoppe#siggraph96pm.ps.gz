URL: http://www.research.microsoft.com/~hoppe/siggraph96pm.ps.gz
Refering-URL: http://www.research.microsoft.com/~hoppe/
Root-URL: http://www.research.microsoft.com
Title: Progressive Meshes  
Author: Hugues Hoppe 
Keyword: CR Categories and Subject Descriptors: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling surfaces and object representations. Additional Keywords: mesh simplification, level of detail, shape interpolation, progressive transmission, geometry compression.  
Affiliation: Microsoft Research  
Abstract: Highly detailed geometric models are rapidly becoming commonplace in computer graphics. These models, often represented as complex triangle meshes, challenge rendering performance, transmission bandwidth, and storage capacities. This paper introduces the progressive mesh (PM) representation, a new scheme for storing and transmitting arbitrary triangle meshes. This efficient, loss-less, continuous-resolution representation addresses several practical problems in graphics: smooth geomorphing of level-of-detail approximations, progressive transmission, mesh compression, and selective refinement. In addition, we present a new mesh simplification procedure for constructing a PM representation from an arbitrary mesh. The goal of this optimization procedure is to preserve not just the geometry of the original mesh, but more importantly its overall appearance as defined by its discrete and scalar appearance attributes such as material identifiers, color values, normals, and texture coordinates. We demonstrate construction of the PM representation and its applications using several practical models. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Apple Computer, Inc. </author> <title> 3D graphics programming with QuickDraw 3D. </title> <publisher> Addison Wesley, </publisher> <year> 1995. </year>
Reference-contexts: In simple cases, these scalar attributes are associated with vertices of the mesh. However, to represent discontinuities in the scalar fields, and because adjacent faces may have different shading functions, it is common to associate scalar attributes not with vertices, but with corners of the mesh <ref> [1] </ref>. A corner is defined as a (vertex,face) tuple. Scalar attributes at a corner (v; f ) specify the shading parameters for face f at vertex v.
Reference: [2] <author> Certain, A., Popovic, J., Duchamp, T., Salesin, D., Stuetzle, W., and DeRose, T. </author> <title> Interactive multi-resolution surface viewing. </title> <booktitle> Computer Graphics (SIGGRAPH '96 Proceedings) (1996), </booktitle> <pages> 91-98. </pages>
Reference-contexts: Multiresolution analysis (MRA) Lounsbery et al. [10, 11] generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. [7] describe how MRA can be applied to the approximation of an arbitrary mesh. Certain et al. <ref> [2] </ref> extend MRA to capture color, and present a multireso-lution Web viewer supporting progressive transmission. MRA has many similarities with the PM scheme, since both store a simple base mesh together with a stream of detail records, and both produce a continuous-resolution representation. <p> PM's can introduce surface creases anywhere and at any level of detail. * PM's capture continuous, piecewise-continuous, and discrete appearance attributes. MRA schemes can represent discontinuous functions using a piecewise-constant basis (such as the Haar basis as used in <ref> [2, 13] </ref>), but the resulting approximations have too many discontinuities since none of the basis functions meet continuously. Also, it is not clear how MRA could be extended to capture discrete attributes. <p> Our PM construction algorithm does not provide such bounds, although one could envision using simplification envelopes [4] to achieve this. * MRA allows geometry and color to be compressed indepen dently <ref> [2] </ref>. Other related work There has been relatively little work in simplifying arbitrary surfaces with functions defined over them. One special instance is image compression, since an image can be thought of as a set of scalar color functions defined on a quadrilateral surface.
Reference: [3] <author> Clark, J. </author> <title> Hierarchical geometric models for visible surface algorithms. </title> <journal> Communications of the ACM 19, </journal> <month> 10 (October </month> <year> 1976), </year> <pages> 547-554. </pages>
Reference-contexts: Mesh simplification tools can hope to automate this painstaking task, and permit the port ing of a single model to platforms of varying performance. * Level-of-detail (LOD) approximation: To further improve rendering performance, it is common to define several versions of a model at various levels of detail <ref> [3, 8] </ref>. A detailed mesh is used when the object is close to the viewer, and coarser approximations are substituted as the object recedes.
Reference: [4] <author> Cohen, J., Varshney, A., Manocha, D., Turk, G., Weber, H., Agarwal, P., Brooks, F., and Wright, W. </author> <title> Simplification envelopes. </title> <booktitle> Computer Graphics (SIGGRAPH '96 Proceedings) (1996), </booktitle> <pages> 119-128. </pages>
Reference-contexts: Turk [17] sprinkles a set of points on a mesh, with density weighted by estimates of local curvature, and then retriangulates based on those points. Both Schroeder et al. [14] and Cohen et al. <ref> [4] </ref> iteratively remove vertices from the mesh and retriangulate the resulting holes. Cohen et al. are able to bound the maximum error of the approximation by restricting it to lie between two offset surfaces. Hoppe et al. [9] find accurate approximations through a general mesh optimization process (Section 4.1). <p> Our PM construction algorithm does not provide such bounds, although one could envision using simplification envelopes <ref> [4] </ref> to achieve this. * MRA allows geometry and color to be compressed indepen dently [2]. Other related work There has been relatively little work in simplifying arbitrary surfaces with functions defined over them.
Reference: [5] <author> Curless, B., and Levoy, M. </author> <title> A volumetric method for building complex models from range images. </title> <booktitle> Computer Graphics (SIGGRAPH '96 Proceedings) (1996), </booktitle> <pages> 303-312. </pages>
Reference-contexts: For efficient display, these models must usually be tessellated into polygonal approximationsmeshes. Detailed meshes are also obtained by scanning physical objects using range scanning systems <ref> [5] </ref>.
Reference: [6] <author> Deering, M. </author> <title> Geometry compression. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (1995), </booktitle> <pages> 13-20. </pages>
Reference-contexts: i has 6 neighbors, and the number of permutations P 6 2 = 30 can be encoded in dlog 2 (P 6 2 )e = 5 bits. (dlog 2 (n)e + 2k)n bits, where vertices are back-referenced once on average and k ' 2 bits capture the vertex replacement codes <ref> [6] </ref>. By increasing the vertex buffer size to 16, Deering's generalized triangle mesh representation [6] further reduces storage to about ( 1 8 dlog 2 (n)e + 8)n bits. Turan [16] shows that planar graphs (and hence the connectivity of closed genus 0 meshes) can be encoded in 12n bits. <p> can be encoded in dlog 2 (P 6 2 )e = 5 bits. (dlog 2 (n)e + 2k)n bits, where vertices are back-referenced once on average and k ' 2 bits capture the vertex replacement codes <ref> [6] </ref>. By increasing the vertex buffer size to 16, Deering's generalized triangle mesh representation [6] further reduces storage to about ( 1 8 dlog 2 (n)e + 8)n bits. Turan [16] shows that planar graphs (and hence the connectivity of closed genus 0 meshes) can be encoded in 12n bits. Recent work by Taubin and Rossignac [15] addresses more general meshes. <p> Recent work by Taubin and Rossignac [15] addresses more general meshes. With the PM representation, each vsplit i requires specification of s i and its two neighbors, for a total storage of about (dlog 2 (n)e+5)n bits. Although not as concise as <ref> [6, 15] </ref>, this is comparable to generalized triangle strips. A traditional representation of the mesh geometry V requires storage of 3n coordinates, or 96n bits with IEEE single-precision floating point. <p> Although not as concise as [6, 15], this is comparable to generalized triangle strips. A traditional representation of the mesh geometry V requires storage of 3n coordinates, or 96n bits with IEEE single-precision floating point. Like Deering <ref> [6] </ref>, we assume that these coordinates can be quantized to 16-bit fixed precision values without significant loss of visual quality, thus reducing storage to 48n bits. Deering is able to further compress this storage by delta-encoding the quantized coordinates and Huffman compressing the variable-length deltas.
Reference: [7] <author> Eck, M., DeRose, T., Duchamp, T., Hoppe, H., Lounsbery, M., and Stuetzle, W. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (1995), </booktitle> <pages> 173-182. </pages>
Reference-contexts: Some of the above methods [12, 17] permit the construction of geomorphs between successive simplified meshes. Multiresolution analysis (MRA) Lounsbery et al. [10, 11] generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. <ref> [7] </ref> describe how MRA can be applied to the approximation of an arbitrary mesh. Certain et al. [2] extend MRA to capture color, and present a multireso-lution Web viewer supporting progressive transmission. <p> Advantages of MRA over PM: * The MRA framework provides a parametrization between meshes at various levels of detail, thus making possible multires-olution surface editing. PM's also offer such a parametrization, but it is not smooth, and therefore multiresolution editing may be non-intuitive. * Eck et al. <ref> [7] </ref> construct MRA approximations with guaranteed maximum error bounds to ^ M. Our PM construction algorithm does not provide such bounds, although one could envision using simplification envelopes [4] to achieve this. * MRA allows geometry and color to be compressed indepen dently [2].
Reference: [8] <author> Funkhouser, T., and S equin, C. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings) (1993), </booktitle> <pages> 247-254. </pages>
Reference-contexts: Mesh simplification tools can hope to automate this painstaking task, and permit the port ing of a single model to platforms of varying performance. * Level-of-detail (LOD) approximation: To further improve rendering performance, it is common to define several versions of a model at various levels of detail <ref> [3, 8] </ref>. A detailed mesh is used when the object is close to the viewer, and coarser approximations are substituted as the object recedes.
Reference: [9] <author> Hoppe, H., DeRose, T., Duchamp, T., McDonald, J., and Stuetzle, W. </author> <title> Mesh optimization. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings) (1993), </booktitle> <pages> 19-26. </pages>
Reference-contexts: As described in <ref> [9] </ref>, the mesh geometry can be denoted by a tuple (K; V ), where K is a simplicial complex specifying the connectivity of the mesh simplices (the adjacency of the vertices, edges, and faces), and V = fv 1 ; : : : ; v m g is the set of <p> More precisely (cf. <ref> [9] </ref>), we construct a parametric domain jKj R m by identifying each vertex of K with a canonical basis vector of R m , and define the mesh as the image V (jKj) where V : R m 3 is a linear map. <p> Together, the set of sharp edges define a set of discontinuity curves over the mesh (e.g. the yellow curves in 3 PROGRESSIVE MESH REPRESENTATION 3.1 Overview Hoppe et al. <ref> [9] </ref> describe a method, mesh optimization, that can be used to approximate an initial mesh ^ M by a much simpler one. <p> At one extreme, a crude and fast scheme for selecting edge collapses is to choose them completely at random. (Some local conditions must be satisfied for an edge collapse to be legal, i.e. manifold preserving <ref> [9] </ref>.) More sophisticated schemes can use heuristics to improve the edge selection strategy, for example the distance to plane metric of Schroeder et al. [14]. <p> At the other extreme, one can attempt to find approximating meshes that are optimal with respect to some appearance metric, for instance the E dist geometric metric of Hoppe et al. <ref> [9] </ref>. Since PM construction is a preprocess that can be performed offline, we chose to design a simplification procedure that invests some time in the selection of edge collapses. Our procedure is similar to the mesh optimization method introduced by Hoppe et al. [9], which is outlined briefly in Section 4.1. <p> dist geometric metric of Hoppe et al. <ref> [9] </ref>. Since PM construction is a preprocess that can be performed offline, we chose to design a simplification procedure that invests some time in the selection of edge collapses. Our procedure is similar to the mesh optimization method introduced by Hoppe et al. [9], which is outlined briefly in Section 4.1. <p> Section 4.2 presents an overview of our procedure, and Sections 4.3-4.6 present the details of our optimization scheme for preserving both the shape of the mesh and the scalar and discrete attributes which define its appearance. 4.1 Background: mesh optimization The goal of mesh optimization <ref> [9] </ref> is to find a mesh M = (K; V ) that both accurately fits a set X of points x i 2 R 3 and has a small number of vertices. <p> To avoid surface self-intersections, the edge collapse is disallowed if the maximum dihedral angle of edges in the resulting neighborhood exceeds some threshold. Hoppe et al. <ref> [9] </ref> find that the regularizing spring energy term E spring (M) is most important in the early stages of the optimization, and achieve best results by repeatedly invoking the nested optimization method described above with a schedule of decreasing spring constants . <p> Varying the setting of the representation constant c rep results in optimized meshes with different trade-offs of accuracy and size. The paths taken by these optimizations are shown illustratively in Figure 3. 4.2 Overview of the simplification algorithm As in mesh optimization <ref> [9] </ref>, we also define an explicit energy metric E (M) to measure the accuracy of simplified meshes M = (K; V; D; S) with respect to the original ^ M, and we also modify the mesh M starting from ^ M while minimizing E (M). <p> Our energy metric has the following form: E (M) = E dist (M) + E spring (M) + E scalar (M) + E disc (M) : The first two terms, E dist (M) and E spring (M) are identical to those in <ref> [9] </ref>. <p> attributes (Section 4.4), and E disc (M) measures the geometric accuracy of its discontinuity curves (Section 4.5). (To achieve scale invariance of the terms, the mesh is uniformly scaled to fit in a unit cube.) Our scheme for optimizing over the connectivity K of the mesh is rather different from <ref> [9] </ref>. We have discovered that a mesh can be effectively simplified using edge collapse transformations alone. The edge swap and edge split transformations, useful in the context of surface reconstruction (which motivated [9]), are not essential for simplification. <p> a unit cube.) Our scheme for optimizing over the connectivity K of the mesh is rather different from <ref> [9] </ref>. We have discovered that a mesh can be effectively simplified using edge collapse transformations alone. The edge swap and edge split transformations, useful in the context of surface reconstruction (which motivated [9]), are not essential for simplification. Although in principle our simplification algorithm can no longer traverse the entire space of meshes considered by mesh optimization, we find that the meshes generated by our algorithm are just as good. <p> In fact, because of the priority queue approach described below, our meshes are usually better. Moreover, considering only edge collapses simplifies the implementation, improves performance, and most importantly, gives rise to the PM representation (Section 3). Rather than randomly attempting mesh transformations as in <ref> [9] </ref>, we place all (legal) candidate edge collapse transformations into a priority queue, where the priority of each transformation is its estimated energy cost E. <p> This minimization is discussed in the next three sections. 4.3 Preserving surface geometry (E dist + E spring ) As in <ref> [9] </ref>, we record the geometry of the original mesh ^ M by sampling from it a set of points X. At a minimum, we sample a point at each vertex of ^ M. If requested by the user, additional points are sampled randomly over the surface of ^ M. <p> The energy terms E dist (M) and E spring (M) are defined as in Section 4.1. For a mesh of fixed connectivity, our method for optimizing the vertex positions to minimize E dist (V ) + E spring (V ) closely follows that of <ref> [9] </ref>. Evaluating E dist (V ) involves computing the distance of each point x i to the mesh. <p> For fixed parametrizations B, compute the optimal vertex posi tions V by solving a sparse linear least-squares problem. As in <ref> [9] </ref>, when considering ecol (fv s ; v t g), we optimize only one vertex position, v i s . We perform three different optimizations with different starting points, v i i+1 i+1 2 ; 1g, and accept the best one. <p> We perform three different optimizations with different starting points, v i i+1 i+1 2 ; 1g, and accept the best one. Instead of defining a global spring constant for E spring as in <ref> [9] </ref>, we adapt each time an edge collapse transformation is considered. Intuitively, the spring energy is most important when few points project onto a neighborhood of faces, since in this case finding the vertex positions minimizing E dist (V) may be an under-constrained problem. <p> In effect, we are solving a curve fitting problem embedded within the surface fitting problem. Since all boundaries of the surface are defined to be discontinuity curves, our procedure preserves bound ary geometry more accurately than <ref> [9] </ref>. <p> Both Schroeder et al. [14] and Cohen et al. [4] iteratively remove vertices from the mesh and retriangulate the resulting holes. Cohen et al. are able to bound the maximum error of the approximation by restricting it to lie between two offset surfaces. Hoppe et al. <ref> [9] </ref> find accurate approximations through a general mesh optimization process (Section 4.1). Rossignac and Borrel [12] merge vertices of a model using spatial binning. A unique aspect of their approach is that the topological type of the model may change in the process.
Reference: [10] <author> Lounsbery, J. M. </author> <title> Multiresolution analysis for surfaces of arbitrary topological type. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1994. </year>
Reference-contexts: Other geomorphing schemes <ref> [10, 11, 17] </ref> define well-behaved (invertible) parametriza-tions between meshes at different levels of detail, but these do not permit the construction of geomorphs between meshes with different discrete attributes. Scalar attributes defined on corners can be smoothly interpolated much like the vertex positions. <p> Their method is extremely fast, but since it ignores geometric qualities like curvature, the resulting approximations can be far from optimal. Some of the above methods [12, 17] permit the construction of geomorphs between successive simplified meshes. Multiresolution analysis (MRA) Lounsbery et al. <ref> [10, 11] </ref> generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. [7] describe how MRA can be applied to the approximation of an arbitrary mesh. Certain et al. [2] extend MRA to capture color, and present a multireso-lution Web viewer supporting progressive transmission.
Reference: [11] <author> Lounsbery, M., DeRose, T., and Warren, J. </author> <title> Mul-tiresolution analysis for surfaces of arbitrary topological type. </title> <note> Submitted for publication. (TR 93-10-05b, </note> <institution> Dept. of Computer Science and Engineering, U. of Washington, </institution> <month> January </month> <year> 1994.). </year>
Reference-contexts: Other geomorphing schemes <ref> [10, 11, 17] </ref> define well-behaved (invertible) parametriza-tions between meshes at different levels of detail, but these do not permit the construction of geomorphs between meshes with different discrete attributes. Scalar attributes defined on corners can be smoothly interpolated much like the vertex positions. <p> Their method is extremely fast, but since it ignores geometric qualities like curvature, the resulting approximations can be far from optimal. Some of the above methods [12, 17] permit the construction of geomorphs between successive simplified meshes. Multiresolution analysis (MRA) Lounsbery et al. <ref> [10, 11] </ref> generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. [7] describe how MRA can be applied to the approximation of an arbitrary mesh. Certain et al. [2] extend MRA to capture color, and present a multireso-lution Web viewer supporting progressive transmission.
Reference: [12] <author> Rossignac, J., and Borrel, P. </author> <title> Multi-resolution 3D approximations for rendering complex scenes. In Modeling in Computer Graphics, </title> <editor> B. Falcidieno and T. L. Kunii, Eds. </editor> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 455-465. </pages>
Reference-contexts: Cohen et al. are able to bound the maximum error of the approximation by restricting it to lie between two offset surfaces. Hoppe et al. [9] find accurate approximations through a general mesh optimization process (Section 4.1). Rossignac and Borrel <ref> [12] </ref> merge vertices of a model using spatial binning. A unique aspect of their approach is that the topological type of the model may change in the process. Their method is extremely fast, but since it ignores geometric qualities like curvature, the resulting approximations can be far from optimal. <p> A unique aspect of their approach is that the topological type of the model may change in the process. Their method is extremely fast, but since it ignores geometric qualities like curvature, the resulting approximations can be far from optimal. Some of the above methods <ref> [12, 17] </ref> permit the construction of geomorphs between successive simplified meshes. Multiresolution analysis (MRA) Lounsbery et al. [10, 11] generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. [7] describe how MRA can be applied to the approximation of an arbitrary mesh.
Reference: [13] <author> Schr oder, P., and Sweldens, W. </author> <title> Spherical wavelets: efficiently representing functions on the sphere. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (1995), </booktitle> <pages> 161-172. </pages>
Reference-contexts: PM's can introduce surface creases anywhere and at any level of detail. * PM's capture continuous, piecewise-continuous, and discrete appearance attributes. MRA schemes can represent discontinuous functions using a piecewise-constant basis (such as the Haar basis as used in <ref> [2, 13] </ref>), but the resulting approximations have too many discontinuities since none of the basis functions meet continuously. Also, it is not clear how MRA could be extended to capture discrete attributes. <p> One special instance is image compression, since an image can be thought of as a set of scalar color functions defined on a quadrilateral surface. Another instance is the framework of Schr oder and Sweldens <ref> [13] </ref> for simplifying functions defined over the sphere.
Reference: [14] <author> Schroeder, W., Zarge, J., and Lorensen, W. </author> <title> Decimation of triangle meshes. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings) 26, 2 (1992), </booktitle> <pages> 65-70. </pages>
Reference-contexts: selecting edge collapses is to choose them completely at random. (Some local conditions must be satisfied for an edge collapse to be legal, i.e. manifold preserving [9].) More sophisticated schemes can use heuristics to improve the edge selection strategy, for example the distance to plane metric of Schroeder et al. <ref> [14] </ref>. At the other extreme, one can attempt to find approximating meshes that are optimal with respect to some appearance metric, for instance the E dist geometric metric of Hoppe et al. [9]. <p> Turk [17] sprinkles a set of points on a mesh, with density weighted by estimates of local curvature, and then retriangulates based on those points. Both Schroeder et al. <ref> [14] </ref> and Cohen et al. [4] iteratively remove vertices from the mesh and retriangulate the resulting holes. Cohen et al. are able to bound the maximum error of the approximation by restricting it to lie between two offset surfaces.
Reference: [15] <author> Taubin, G., and Rossignac, J. </author> <title> Geometry compression through topological surgery. </title> <institution> Research Report RC-20340, IBM, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: Turan [16] shows that planar graphs (and hence the connectivity of closed genus 0 meshes) can be encoded in 12n bits. Recent work by Taubin and Rossignac <ref> [15] </ref> addresses more general meshes. With the PM representation, each vsplit i requires specification of s i and its two neighbors, for a total storage of about (dlog 2 (n)e+5)n bits. Although not as concise as [6, 15], this is comparable to generalized triangle strips. <p> Recent work by Taubin and Rossignac [15] addresses more general meshes. With the PM representation, each vsplit i requires specification of s i and its two neighbors, for a total storage of about (dlog 2 (n)e+5)n bits. Although not as concise as <ref> [6, 15] </ref>, this is comparable to generalized triangle strips. A traditional representation of the mesh geometry V requires storage of 3n coordinates, or 96n bits with IEEE single-precision floating point.
Reference: [16] <author> Turan, G. </author> <title> Succinct representations of graphs. </title> <booktitle> Discrete Applied Mathematics 8 (1984), </booktitle> <pages> 289-294. </pages>
Reference-contexts: By increasing the vertex buffer size to 16, Deering's generalized triangle mesh representation [6] further reduces storage to about ( 1 8 dlog 2 (n)e + 8)n bits. Turan <ref> [16] </ref> shows that planar graphs (and hence the connectivity of closed genus 0 meshes) can be encoded in 12n bits. Recent work by Taubin and Rossignac [15] addresses more general meshes.
Reference: [17] <author> Turk, G. </author> <title> Re-tiling polygonal surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings) 26, 2 (1992), </booktitle> <pages> 55-64. </pages>
Reference-contexts: Other geomorphing schemes <ref> [10, 11, 17] </ref> define well-behaved (invertible) parametriza-tions between meshes at different levels of detail, but these do not permit the construction of geomorphs between meshes with different discrete attributes. Scalar attributes defined on corners can be smoothly interpolated much like the vertex positions. <p> Turk <ref> [17] </ref> sprinkles a set of points on a mesh, with density weighted by estimates of local curvature, and then retriangulates based on those points. Both Schroeder et al. [14] and Cohen et al. [4] iteratively remove vertices from the mesh and retriangulate the resulting holes. <p> A unique aspect of their approach is that the topological type of the model may change in the process. Their method is extremely fast, but since it ignores geometric qualities like curvature, the resulting approximations can be far from optimal. Some of the above methods <ref> [12, 17] </ref> permit the construction of geomorphs between successive simplified meshes. Multiresolution analysis (MRA) Lounsbery et al. [10, 11] generalize the concept of multiresolution analysis to surfaces of arbitrary topological type. Eck et al. [7] describe how MRA can be applied to the approximation of an arbitrary mesh.
Reference: [18] <author> Upstill, S. </author> <title> The RenderMan Companion. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: These attributes can be categorized into two types: discrete attributes and scalar attributes. Discrete attributes are usually associated with faces of the mesh. A common discrete attribute, the material identifier, determines the shader function used in rendering a face of the mesh <ref> [18] </ref>. For instance, a trivial shader function may involve simple look-up within a specified texture map. Many scalar attributes are often associated with a mesh, including diffuse color (r; g; b), normal (n x ; n y ; n z ), and texture coordinates (u; v).

References-found: 18

