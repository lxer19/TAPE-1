URL: http://www.cs.umd.edu/users/kostas/Papers/PS/wosbis96.ps.gz
Refering-URL: http://www.cs.umd.edu/users/kostas/Papers/wosbis96.html
Root-URL: 
Email: kostas@cs.umd.edu nick@cs.umd.edu baras@isr.umd.edu  
Title: Adaptive Data Broadcasting Using Air-Cache Center for Satellite and Hybrid Communication Networks the Center for
Author: Konstantinos Stathatos Nick Roussopoulos John S. Baras 
Date: November 13, 1996  
Address: (WOSBIS), Rye, New York,  College Park, MD, 20742  
Affiliation: Information Services  Institute for Systems Research University of Maryland,  Dep. of Computer Science Also with the Dep. of Electrical Engineering  
Note: Presented in the First International Workshop on Satellite-based  This material is based upon work supported by  Networks under NASA grant NAGW-2777, by the National Science Foundation under Grants No. NSF EEC 94-02384 and No. ASC 9318183, and by ARPA under Grant No. F30602-93-C-0177 Also with the  
Abstract: In the Data AirWaves Project at University of Maryland, we are integrating Direct Broadcast Satellite (DBS) systems with terrestrial networks to provide a hybrid and effective communication substrate lying between data resources and remote/mobile user applications. Smooth integration of these two media balances the need for rapid data dissemination to very large numbers of clients and on-demand interactive data services. This paper describes the air-cache, a method for effective data broadcasting and an algorithm which rapidly adapts the content of the cache based on the "misses" which result in explicit (on-demand) data requests. Simulation results show that the hypothesis of adapting based only on the misses performs quite reasonably and has very little deviation from a system that has complete information both hits and misses. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Swarup Acharya, Rafael Alonso, Michael Franklin, and Stanley Zdonik. </author> <title> Broadcast Disks: Data Management for Asymmetric Communications Environments. </title> <editor> In Michael J. Carey and Dono-van A. Schneider, editors, </editor> <booktitle> Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: How to broadcast? Different structures for the broadcast program have been proposed, each optimizing different performance criteria. The simplest is flat broadcasting under which a set of self-identifying data objects are broadcasted sequentially. Clients have to listen to the broadcast channel until the object of interest arrives. Broadcast disks <ref> [1] </ref> improve average data access time, by grouping data into popularity groups and broadcasting each such group with different frequency. Proper client data caching and prefetching techniques can compensate for infrequently broadcasted data and mismatching access probabilities [3].
Reference: [2] <author> Swarup Acharya, Michael J. Franklin, and Stan Zdonik. </author> <title> Dissemination-based Data Delivery Using Broadcast Disks. </title> <journal> IEEE Personal Communications Magazine, </journal> <volume> 2(6), </volume> <month> December </month> <year> 1995. </year>
Reference-contexts: Generally, when it comes to data broadcasting the crucial questions are: What to broadcast? For environments without up-links (i.e. clients cannot transmit) the whole database has to be broadcasted <ref> [2] </ref>. The main problems of this approach are: (1) the database may be too big for the available bandwidth, (2) bandwidth may be wasted for broadcasting data never used, (3) it is static. <p> The main drawback is that access time may grow arbitrarily large (starvation problem). The second is periodic or cyclic broadcasting of (a selected set of) data <ref> [2] </ref>. It guarantees a maximum access time equal to the broadcast period, and it may be optimal in terms of minimizing the mean response time [11]. How to broadcast? Different structures for the broadcast program have been proposed, each optimizing different performance criteria.
Reference: [3] <author> Swarup Acharya, Michael J. Franklin, and Stanley B. Zdonik. </author> <title> Prefetching from Broadcast Disks. </title> <booktitle> In Proceedings of the 12th International Conference on Data Engineering, </booktitle> <pages> pages 276-285, </pages> <address> New Or-leans, LA, February 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Broadcast disks [1] improve average data access time, by grouping data into popularity groups and broadcasting each such group with different frequency. Proper client data caching and prefetching techniques can compensate for infrequently broadcasted data and mismatching access probabilities <ref> [3] </ref>.
Reference: [4] <author> A.D. Falk, Vivek Arora, Narin Supha-sindhu, Douglas Dilon, and John S. Baras. </author> <title> Hybrid Internet Access. In M.S. </title> <editor> El-Genk and R.P. Whitten, editors, </editor> <booktitle> Conference on NASA Centers for Commercial Development of Space, number 325 in AIP Conference Proceedings, </booktitle> <pages> pages 69-74, </pages> <address> New York, </address> <year> 1995. </year>
Reference-contexts: The rate of these requests implicitly suggests the number of clients to the system. The database is a collection of self-identifying objects each of equal size. For the initial set of experiments we set the communication parameters to match those of the DirecPC T M environment <ref> [5, 4] </ref>. We assumed a data broadcast rate of 12Mbps, and assymetric point-to-point connections with 400Kbps downstream and 19.2Kbps upstream rates. The database consists of 1000 large objects of size 100KB each to model multimedia information. The requests for data are exponentially distributed with a variable rate for different experiments.
Reference: [5] <institution> Hughes Network Systems, German-town, MD. DirecPC T M Hybrid Internet Technical Specification, </institution> <month> November </month> <year> 1994. </year> <month> Rev.1.2. </month>
Reference-contexts: The rate of these requests implicitly suggests the number of clients to the system. The database is a collection of self-identifying objects each of equal size. For the initial set of experiments we set the communication parameters to match those of the DirecPC T M environment <ref> [5, 4] </ref>. We assumed a data broadcast rate of 12Mbps, and assymetric point-to-point connections with 400Kbps downstream and 19.2Kbps upstream rates. The database consists of 1000 large objects of size 100KB each to model multimedia information. The requests for data are exponentially distributed with a variable rate for different experiments.
Reference: [6] <author> Tomasz Imielinski and B.R. Badrinath. </author> <title> Wireless Mobile Computing : Challenges in Data Management. </title> <journal> Communications of the ACM, </journal> <volume> 37(10) </volume> <pages> 18-28, </pages> <month> Octo-ber </month> <year> 1994. </year>
Reference-contexts: DBS systems are particularly attractive for networks with huge client population because they result in potentially unlimited cumulative bandwidth and reduce or eliminate individual client requests, data transmissions and the associated overhead <ref> [6] </ref>. However, passive DBS systems are limited because clients have no means of communicating neither their data needs which can be dynamically changing, nor how useful the content of the broadcast is. Neither hits nor misses on the content are reported.
Reference: [7] <author> Tomasz Imielinski and S. Vishwanathan. </author> <title> Adaptive Wireless Information Systems. </title> <booktitle> In Proceedings of SIGDBS (Special Interest Group in DataBase Systems) Conference, </booktitle> <address> Tokyo, Japan, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: The main problems of this approach are: (1) the database may be too big for the available bandwidth, (2) bandwidth may be wasted for broadcasting data never used, (3) it is static. If, however, up-links are available the system can choose to broadcast only the most frequently requested data <ref> [7] </ref>. But, techniques proposed so far rely mostly on some apriori knowledge about access probabilities which are assumed to be fairly static. When to broadcast? Two general techniques have been proposed. <p> When to broadcast? Two general techniques have been proposed. The first is probabilistic data selection, i.e. select the object to broadcast next using a predetermined randomized function based on data access probabilities <ref> [11, 7] </ref>. The main drawback is that access time may grow arbitrarily large (starvation problem). The second is periodic or cyclic broadcasting of (a selected set of) data [2].
Reference: [8] <author> Tomasz Imielinski, S. Viswanathan, and B. R. Badrinath. </author> <title> Power Efficient Filtering of Data an Air. </title> <editor> In Matthias Jarke, Janis A. Bubenko Jr., and Keith G. Jeffery, editors, </editor> <booktitle> Proceedings of the 4th International Conference on Extending Database Technology, </booktitle> <pages> pages 245-258, </pages> <address> Cambridge, United Kingdom, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: Last, special attribute indexing techniques that interleave data and (primary and secondary) index structures (e.g. trees, hash tables) have been proposed as a way of reducing client tuning time and energy consumption <ref> [8, 9] </ref>. 2 Effective Data Broad casting: Air-Cache Let us assume that we broadcast data with period T over a channel of bandwidth B.
Reference: [9] <author> Tomasz Imielinski, S. Viswanathan, and B.R. Badrinath. </author> <title> Energy Efficient Indexing on Air. </title> <editor> In Richard T. Snod-grass and Marianne Winslett, editors, </editor> <booktitle> Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 25-36, </pages> <address> Minneapolis, MN, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Last, special attribute indexing techniques that interleave data and (primary and secondary) index structures (e.g. trees, hash tables) have been proposed as a way of reducing client tuning time and energy consumption <ref> [8, 9] </ref>. 2 Effective Data Broad casting: Air-Cache Let us assume that we broadcast data with period T over a channel of bandwidth B.
Reference: [10] <author> Randy H. Katz and Eric A. Brewer. </author> <title> The Case for Wireless Overlay Networks. </title> <booktitle> In SPIE Multimedia and Networking Conference, </booktitle> <address> San Jose, CA, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Wireless connectivity is becoming increasingly important. Applications utilizing satellite wireless networks are emerging in the areas of multimedia communications and mobile computing <ref> [10] </ref>. Both of these areas are characterized by their increasing requirement for data to be "here and now". Direct Broadcast Satellite Systems (DBS) provide a very effective communication substrate lying between the data resources and the remote/mobile user applications.
Reference: [11] <author> John W. Wong. </author> <title> Broadcast Delivery. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76(12) </volume> <pages> 1566-1577, </pages> <month> December </month> <year> 1988. </year> <month> 8 </month>
Reference-contexts: When to broadcast? Two general techniques have been proposed. The first is probabilistic data selection, i.e. select the object to broadcast next using a predetermined randomized function based on data access probabilities <ref> [11, 7] </ref>. The main drawback is that access time may grow arbitrarily large (starvation problem). The second is periodic or cyclic broadcasting of (a selected set of) data [2]. <p> The second is periodic or cyclic broadcasting of (a selected set of) data [2]. It guarantees a maximum access time equal to the broadcast period, and it may be optimal in terms of minimizing the mean response time <ref> [11] </ref>. How to broadcast? Different structures for the broadcast program have been proposed, each optimizing different performance criteria. The simplest is flat broadcasting under which a set of self-identifying data objects are broadcasted sequentially. Clients have to listen to the broadcast channel until the object of interest arrives.
References-found: 11

