URL: http://www.cs.washington.edu/homes/ausland/papers/artfig.ps
Refering-URL: http://www.cs.washington.edu/homes/ausland/
Root-URL: 
Title: Further Experience with Controller-Based Automatic Motion Synthesis for Articulated Figures  
Author: Joel Auslander Alex Fukunaga Jon Christensen Lloyd Hsu Peter Reiss Andrew Shuman Joe Marks J. Thomas Ngo 
Affiliation: Harvard Univ.  UCLA Hadi Partovi Harvard Univ.  Harvard Univ.  Harvard Univ.  Harvard Univ.  Harvard Univ.  Mitsubishi Electric Research Labs  Interval Research  
Abstract: We extend an earlier automatic motion-synthesis algorithm for physically realistic articulated figures in several ways. First, we summarize several incremental improvements to the original algorithm that improve its efficiency significantly and provide the user with some ability to influence what motions are generated. These techniques can be used by an animator to achieve a desired movement style, or they can be used to guarantee variety in the motions synthesized over several runs of the algorithm. Second, we report on new mechanisms that support the concatenation of existing, automatically generated motion controllers to produce complex, composite movement. Finally, we describe initial work on generalizing the techniques from 2D to 3D articulated figures. Taken together, these results illustrate the promise and challenges afforded by the controller-based approach to automatic motion synthesis for computer animation. fl Much of the work described in this paper was done while JM was at Digital Equipment Corporation's Cambridge Research Lab and AF and JTN were at Harvard University. Current author affiliations (where different): JA is at the University of Washington; HP and AS are with Microsoft Corporation; LH is with Oracle Corporation; and PR is with D.E. Shaw & Co. Correspondence should be addressed to Joe Marks at MERL, 201 Broadway, Cambridge, MA 02139, U.S.A. (e-mail:marks@merl.com). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. I. Badler, B. A. Barsky, and D. Zeltzer, </author> <title> editors. Making Them Move: Mechanics, Control, and Animation of Articulated Figures. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1991. </year>
Reference-contexts: locomotion, though more general kinds of motion are also important for animation and should be included under the general rubric of motion synthesis [2, 14].) Animated characters are often modeled as articulated figures, comprising rigid rods connected by flexible joints; this is the kind of physical model we consider here <ref> [1] </ref>. In this context, the automatic motion-synthesis paradigm requires the animator to specify only the physical structure of an articulated figure and quantitative criteria for success in the desired locomotive task. <p> Indeed, the broad idea of concatenating motion controllers was proposed and investigated previously in a variety of contexts <ref> [1, 2] </ref>; our contribution is distinguished by the method we use for concatenating controllers automatically and the scope and generality of the motion controllers considered. 13 One possibility is that this is not a problem, due to the robustness intrinsic in standard sense-based BSR controllers.
Reference: [2] <author> N. I. Badler, C. B. Phillips, and B. L. Webber. </author> <title> Simulating Humans: Computer Graphics Animation and Control. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> England, </address> <year> 1993. </year>
Reference-contexts: in a visually plausible way that meets the animator's goals (see Figure 1). (In this paper and much of the cited literature, `movement' is taken to mean locomotion, though more general kinds of motion are also important for animation and should be included under the general rubric of motion synthesis <ref> [2, 14] </ref>.) Animated characters are often modeled as articulated figures, comprising rigid rods connected by flexible joints; this is the kind of physical model we consider here [1]. <p> Indeed, the broad idea of concatenating motion controllers was proposed and investigated previously in a variety of contexts <ref> [1, 2] </ref>; our contribution is distinguished by the method we use for concatenating controllers automatically and the scope and generality of the motion controllers considered. 13 One possibility is that this is not a problem, due to the robustness intrinsic in standard sense-based BSR controllers.
Reference: [3] <author> D. Baraff. </author> <title> Analytical methods for dynamic simulation of non-penetrating rigid bodies. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 223-231, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Finally, a simulation of standard rigid-body forward dynamics is performed that accounts for gravity and the forces and impulses that result from contact and collision with the ground. (Collisions between rods are ignored.) The contact forces and collision impulses are computed using a variant of Baraff's method <ref> [3, 4, 5] </ref> that accounts for additional contributions to the contact forces that can arise from internal deformation of the figure.
Reference: [4] <author> D. Baraff. </author> <title> Coping with friction for non-penetrating rigid body simulation. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 31-40, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Finally, a simulation of standard rigid-body forward dynamics is performed that accounts for gravity and the forces and impulses that result from contact and collision with the ground. (Collisions between rods are ignored.) The contact forces and collision impulses are computed using a variant of Baraff's method <ref> [3, 4, 5] </ref> that accounts for additional contributions to the contact forces that can arise from internal deformation of the figure.
Reference: [5] <author> D. Baraff. </author> <title> Issues in computing forces for non-penetrating rigid bodies. </title> <journal> Algorithmica, </journal> 10(2/3/4):292-352, August/September/October 1993. 
Reference-contexts: Finally, a simulation of standard rigid-body forward dynamics is performed that accounts for gravity and the forces and impulses that result from contact and collision with the ground. (Collisions between rods are ignored.) The contact forces and collision impulses are computed using a variant of Baraff's method <ref> [3, 4, 5] </ref> that accounts for additional contributions to the contact forces that can arise from internal deformation of the figure.
Reference: [6] <author> R. D. Beer and J. C. Gallagher. </author> <title> Evolving dynamical neural networks for adaptive behavior. </title> <booktitle> Adaptive Behavior, </booktitle> <volume> 1(1) </volume> <pages> 91-122, </pages> <month> Summer </month> <year> 1992. </year>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [7] <author> L. S. Brotman and A. N. Netravali. </author> <title> Motion interpolation by optimal control. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 309-315, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Another form of local optimization involves straightforward use of optimal-control theory to improve the motion with respect to the task criteria <ref> [7] </ref>. However, local optimization has inherent limitations for this problem: it will usually be confounded by the discontinuities and local optima found in the search space of a typical motion-synthesis problem, thus leaving primary responsibility for constructing coarse initial trajectories with the human animator.
Reference: [8] <author> M. F. Cohen. </author> <title> Interactive spacetime control for animation. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 293-302, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: One approach to automatic motion synthesis uses local optimization to refine initial articulated-figure trajectories by making them more compliant with physical law (the "Spacetime Constraints" approach) <ref> [8, 16, 31] </ref>. Another form of local optimization involves straightforward use of optimal-control theory to improve the motion with respect to the task criteria [7]. <p> The motion generated by a single controller is relatively simple|the only way to get complex, composite motion is to concatenate several problem instances in time and to generate separate motion controllers serially for each subproblem. (This time-consuming approach is similar to one proposed by Cohen <ref> [8] </ref> in the context of the original Spacetime Constraints paradigm [31].) 4. The existing algorithm works for 2D articulated figures only|generalizing to 3D would appear to be computationally formidable. We show how each of these problems can be addressed to some degree. <p> To address this limitation in the context of the Witkin-Kass approach [31], Cohen <ref> [8] </ref> implemented a system that permits a human animator to design and refine a trajectory by interactively submitting simple motion-synthesis subproblems for solution on-line. <p> A trajectory for Rex, depicted in Figure 16, is the result of separate motion-synthesis problems that were solved seriatim (i.e., using an approach analogous to Cohen's <ref> [8] </ref>): Rex learns to walk; then given the final state of that walk he learns to turn; then given the final state of the turn he learns to walk again. The fitness function for Cujo was simply the distance traveled by his center of mass.
Reference: [9] <author> H. de Garis. </author> <title> Genetic programming: Building artificial nervous systems using genetically programmed neural network modules. </title> <booktitle> In Proceedings of the Seventh International Conference on Machine Learning, </booktitle> <pages> pages 132-139, </pages> <address> Austin, Texas, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [10] <author> A. Fukunaga, J. Marks, and J. T. Ngo. </author> <title> Automatic control of physically realistic animated figures using evolutionary programming. </title> <booktitle> In Proceedings of the Third Annual Conference on Evolutionary Programming (EP94), </booktitle> <pages> pages 76-83, </pages> <address> San Diego, California, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: Thus these banked stimulus-response (BSR) controllers are similar in form to various state-machine control systems that have been designed by hand to animate articulated figures [13, 23]. The space of possible BSR controllers is searched by an evolutionary-computation strategy <ref> [10, 19, 20] </ref>. There are several reasons why the automatic synthesis of motion controllers is not yet a practical approach to motion synthesis. In this paper we focus on four of these limitations in the context of the previously reported BSR-controller work: 1. <p> In more recent work, Fukunaga et al. <ref> [10] </ref> demonstrated that a simpler, serial search algorithm, also based on the principles of evolutionary computation, exhibits far better performance.
Reference: [11] <author> C. J. Goh and K. L. Teo. </author> <title> Control parameterization: A unified approach to optimal control problems with general constraints. </title> <journal> Automatica, </journal> <volume> 24(1) </volume> <pages> 3-18, </pages> <year> 1988. </year>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [12] <author> J. K. Hahn. </author> <title> Realistic animation of rigid bodies. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 299-308, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Because of the demands of the search process (tens of thousands of physical simulations may be required to find a good BSR controller|see below), efficiency is our principal concern. Following the approach described by Hahn <ref> [12] </ref>, we handle the internal deformations of an articulated figure kinematically, without computing the forces and torques required for these deformations; the motion of the figure within its environment is determined dynamically, using the laws of physics as they apply to a fully rigid articulated figure. 5 More specifically, each internal
Reference: [13] <author> J. K. Hodgins, P. K. Sweeney, and D. G. Lawrence. </author> <title> Generating natural-looking motion for computer animation. </title> <booktitle> In Proceedings of Graphics Interface '92, </booktitle> <pages> pages 265-272, </pages> <address> Vancouver, British Columbia, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Which rule is active, and therefore which actuation response is performed, is determined by the current state of the physical environment (the stimulus). Thus these banked stimulus-response (BSR) controllers are similar in form to various state-machine control systems that have been designed by hand to animate articulated figures <ref> [13, 23] </ref>. The space of possible BSR controllers is searched by an evolutionary-computation strategy [10, 19, 20]. There are several reasons why the automatic synthesis of motion controllers is not yet a practical approach to motion synthesis.
Reference: [14] <author> Y. Koga, K. Kondo, J. Kuffner, and J.-C. Latombe. </author> <title> Planning motions with intentions. </title> <booktitle> In SIGGRAPH '94 Conference Proceedings, </booktitle> <pages> pages 395-408, </pages> <address> Orlando, Florida, </address> <month> July </month> <year> 1994. </year> <note> ACM SIGGRAPH. </note>
Reference-contexts: in a visually plausible way that meets the animator's goals (see Figure 1). (In this paper and much of the cited literature, `movement' is taken to mean locomotion, though more general kinds of motion are also important for animation and should be included under the general rubric of motion synthesis <ref> [2, 14] </ref>.) Animated characters are often modeled as articulated figures, comprising rigid rods connected by flexible joints; this is the kind of physical model we consider here [1]. <p> However, it seems clear that other approaches will be 11 However, van de Panne et al. have recently reported some positive experiences with modifying and concatenating time-based controllers [29]. 23 more useful for more involved manipulation tasks <ref> [14] </ref>. 6 Acknowledgments The support of the following companies and foundations is acknowledged: Digital Equipment Corporation, the Fannie and John Hertz Foundation, Walter Hewlett and Hewlett-Packard, and the National Science Foundation (NSF grant IRI 93-50192).
Reference: [15] <author> J. R. Koza and J. P. Rice. </author> <title> Automatic programming of robots using genetic programming. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 194-201, </pages> <address> San Jose, California, </address> <month> July </month> <year> 1992. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [16] <author> Z. Liu, S. J. Gortler, and M. F. Cohen. </author> <title> Hierarchical spacetime control. </title> <booktitle> In SIGGRAPH '94 Conference Proceedings, </booktitle> <pages> pages 35-42, </pages> <address> Orlando, Florida, </address> <month> July </month> <year> 1994. </year> <note> ACM SIGGRAPH. </note>
Reference-contexts: One approach to automatic motion synthesis uses local optimization to refine initial articulated-figure trajectories by making them more compliant with physical law (the "Spacetime Constraints" approach) <ref> [8, 16, 31] </ref>. Another form of local optimization involves straightforward use of optimal-control theory to improve the motion with respect to the task criteria [7].
Reference: [17] <author> P. Maes and R. A. Brooks. </author> <title> Learning to coordinate behaviors. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 796-802, </pages> <address> Boston, Massachusetts, </address> <year> 1990. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [18] <author> J. T. Ngo and J. Marks. </author> <title> Massively parallel genetic algorithm for physically correct articulated figure locomotion. </title> <booktitle> Working Notes for the AAAI Spring Symposium on Innovative Applications of Massive Parallelism, </booktitle> <institution> Stanford University, </institution> <month> March </month> <year> 1993. </year> <note> Available as Technical Report SS-93-04 from AAAI Press. 25 </note>
Reference-contexts: Although an earlier attempt to use massive parallelism for motion synthesis was not especially effective <ref> [18, 19, 20] </ref>, a renewed investigation of parallel search for motion synthesis may be worthwhile.
Reference: [19] <author> J. T. Ngo and J. Marks. </author> <title> Physically realistic motion synthesis in animation. </title> <journal> Evolutionary Computation, </journal> <volume> 1(3) </volume> <pages> 235-268, </pages> <year> 1993. </year>
Reference-contexts: Recently, an alternative approach to the motion-synthesis problem was proposed. This approach does 2 not use local optimization to refine a figure's initial trajectory, but instead computes trajectories de novo. This is done by automatically generating a motion controller that can actuate the figure to produce the desired motion <ref> [19, 20, 24, 25, 26] </ref>. 1 In any particular embodiment of this approach, two broad and nearly independent choices must be made: 1. how the motion controller is to be represented; and 2. how the space of possible controllers is to be searched. <p> Thus these banked stimulus-response (BSR) controllers are similar in form to various state-machine control systems that have been designed by hand to animate articulated figures [13, 23]. The space of possible BSR controllers is searched by an evolutionary-computation strategy <ref> [10, 19, 20] </ref>. There are several reasons why the automatic synthesis of motion controllers is not yet a practical approach to motion synthesis. In this paper we focus on four of these limitations in the context of the previously reported BSR-controller work: 1. <p> We discuss and demonstrate two different ideas for supporting interactive controller concatenation. We conclude by reporting initial results on automatic motion synthesis for 3D articulated figures. 2 The Original Approach and Extensions 2.1 Efficient automatic synthesis of BSR motion controllers The system described originally by Ngo and Marks <ref> [19, 20] </ref> searched in a space of BSR controllers using a massively parallel genetic algorithm (GA) that ran on a 4096-processor CM-2. In more recent work, Fukunaga et al. [10] demonstrated that a simpler, serial search algorithm, also based on the principles of evolutionary computation, exhibits far better performance. <p> This causes difficulties when the animator 4 Ngo and Marks originally reported running times of 30-60 minutes on a CM-2 Connection Machine to compute comparable BSR motion controllers <ref> [19, 20] </ref>. <p> de Panne et al. [30]. 11 Rule Stimulus Response 1 [0; t 1 ) ( ~ 0 2 [t 1 ; t 2 ) ( ~ 0 3 [t 2 ; t 3 ) ( ~ 0 4 [t 3 ; t per ) ( ~ 0 In recent papers <ref> [19, 20, 26] </ref> it has been argued or assumed that good closed-loop controllers with access to information about physical state should be more effective (i.e., produce better, more robust motions) and easier to find than good open-loop controllers based on time alone. <p> Although an earlier attempt to use massive parallelism for motion synthesis was not especially effective <ref> [18, 19, 20] </ref>, a renewed investigation of parallel search for motion synthesis may be worthwhile.
Reference: [20] <author> J. T. Ngo and J. Marks. </author> <title> Spacetime constraints revisited. </title> <booktitle> In SIGGRAPH '93 Conference Proceedings, </booktitle> <pages> pages 343-350, </pages> <address> Anaheim, California, </address> <month> August </month> <year> 1993. </year> <note> ACM SIGGRAPH. </note>
Reference-contexts: Recently, an alternative approach to the motion-synthesis problem was proposed. This approach does 2 not use local optimization to refine a figure's initial trajectory, but instead computes trajectories de novo. This is done by automatically generating a motion controller that can actuate the figure to produce the desired motion <ref> [19, 20, 24, 25, 26] </ref>. 1 In any particular embodiment of this approach, two broad and nearly independent choices must be made: 1. how the motion controller is to be represented; and 2. how the space of possible controllers is to be searched. <p> Thus these banked stimulus-response (BSR) controllers are similar in form to various state-machine control systems that have been designed by hand to animate articulated figures [13, 23]. The space of possible BSR controllers is searched by an evolutionary-computation strategy <ref> [10, 19, 20] </ref>. There are several reasons why the automatic synthesis of motion controllers is not yet a practical approach to motion synthesis. In this paper we focus on four of these limitations in the context of the previously reported BSR-controller work: 1. <p> We discuss and demonstrate two different ideas for supporting interactive controller concatenation. We conclude by reporting initial results on automatic motion synthesis for 3D articulated figures. 2 The Original Approach and Extensions 2.1 Efficient automatic synthesis of BSR motion controllers The system described originally by Ngo and Marks <ref> [19, 20] </ref> searched in a space of BSR controllers using a massively parallel genetic algorithm (GA) that ran on a 4096-processor CM-2. In more recent work, Fukunaga et al. [10] demonstrated that a simpler, serial search algorithm, also based on the principles of evolutionary computation, exhibits far better performance. <p> This causes difficulties when the animator 4 Ngo and Marks originally reported running times of 30-60 minutes on a CM-2 Connection Machine to compute comparable BSR motion controllers <ref> [19, 20] </ref>. <p> de Panne et al. [30]. 11 Rule Stimulus Response 1 [0; t 1 ) ( ~ 0 2 [t 1 ; t 2 ) ( ~ 0 3 [t 2 ; t 3 ) ( ~ 0 4 [t 3 ; t per ) ( ~ 0 In recent papers <ref> [19, 20, 26] </ref> it has been argued or assumed that good closed-loop controllers with access to information about physical state should be more effective (i.e., produce better, more robust motions) and easier to find than good open-loop controllers based on time alone. <p> Although an earlier attempt to use massive parallelism for motion synthesis was not especially effective <ref> [18, 19, 20] </ref>, a renewed investigation of parallel search for motion synthesis may be worthwhile.
Reference: [21] <author> J. T. Ngo and J. Marks. </author> <title> Spacetime constraints revisited. </title> <note> ACM SIGGRAPH Video Review, Issue 96: Video Supplement to the SIGGRAPH '93 Conference Proceedings, </note> <year> 1993. </year>
Reference-contexts: For example, BSR controllers produce motions that are qualitatively different from those produced by SANs, which tend to exhibit characteristic sinusoidal vibrations <ref> [21, 27] </ref>. Thus, another way to influence the style of generated motions might be to modify the form of the BSR controller.
Reference: [22] <author> M. G. Pandy, F. C. Anderson, and D. G. Hull. </author> <title> A parameter optimization approach for the optimal control of large-scale musculoskeletal systems. </title> <journal> Transactions of the ASME: Journal of Biomechanical Engineering, </journal> <volume> 114 </volume> <pages> 450-459, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: The first stage is a random generate-and-test procedure, and the second stage effects a subsequent refinement by simulated annealing or stochastic gradient 1 Before its introduction to the graphics community, various incarnations of what we call controller synthesis had been proposed in the AI, robotics, and optimal-control communities, e.g., <ref> [6, 9, 11, 15, 17, 22] </ref>. 3 ascent. More recently, Sims [25] described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [23] <author> M. H. Raibert and J. K. Hodgins. </author> <title> Animation of dynamic legged locomotion. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 349-358, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Which rule is active, and therefore which actuation response is performed, is determined by the current state of the physical environment (the stimulus). Thus these banked stimulus-response (BSR) controllers are similar in form to various state-machine control systems that have been designed by hand to animate articulated figures <ref> [13, 23] </ref>. The space of possible BSR controllers is searched by an evolutionary-computation strategy [10, 19, 20]. There are several reasons why the automatic synthesis of motion controllers is not yet a practical approach to motion synthesis.
Reference: [24] <author> G. Ridsdale. </author> <title> Connectionist modelling of skill dynamics. </title> <journal> The Journal of Visualization and Computer Animation, </journal> <volume> 1 </volume> <pages> 66-72, </pages> <year> 1990. </year>
Reference-contexts: Recently, an alternative approach to the motion-synthesis problem was proposed. This approach does 2 not use local optimization to refine a figure's initial trajectory, but instead computes trajectories de novo. This is done by automatically generating a motion controller that can actuate the figure to produce the desired motion <ref> [19, 20, 24, 25, 26] </ref>. 1 In any particular embodiment of this approach, two broad and nearly independent choices must be made: 1. how the motion controller is to be represented; and 2. how the space of possible controllers is to be searched. <p> An early example of this idea from the computer-graphics literature is provided by Ridsdale <ref> [24] </ref>, who used a neural network to control a simulated one-rod robot arm that could hit a ball against the wall of a handball court. Ridsdale's search strategy is an adaptation of the standard back-propagation algorithm for training neural networks, augmented with simulated annealing to avoid local minima.
Reference: [25] <author> K. Sims. </author> <title> Evolving virtual creatures. </title> <booktitle> In SIGGRAPH '94 Conference Proceedings, </booktitle> <pages> pages 15-22, </pages> <address> Orlando, Florida, </address> <month> July </month> <year> 1994. </year> <note> ACM SIGGRAPH. </note>
Reference-contexts: Recently, an alternative approach to the motion-synthesis problem was proposed. This approach does 2 not use local optimization to refine a figure's initial trajectory, but instead computes trajectories de novo. This is done by automatically generating a motion controller that can actuate the figure to produce the desired motion <ref> [19, 20, 24, 25, 26] </ref>. 1 In any particular embodiment of this approach, two broad and nearly independent choices must be made: 1. how the motion controller is to be represented; and 2. how the space of possible controllers is to be searched. <p> More recently, Sims <ref> [25] </ref> described a comparable approach to automatic motion synthesis as part of a system that generates both the structure of articulated figures and controllers that cause them to move in desired ways.
Reference: [26] <author> M. van de Panne and E. Fiume. </author> <title> Sensor-actuator networks. </title> <booktitle> In SIGGRAPH '93 Conference Proceedings, </booktitle> <pages> pages 335-342, </pages> <address> Anaheim, California, </address> <month> August </month> <year> 1993. </year> <note> ACM SIGGRAPH. </note>
Reference-contexts: Recently, an alternative approach to the motion-synthesis problem was proposed. This approach does 2 not use local optimization to refine a figure's initial trajectory, but instead computes trajectories de novo. This is done by automatically generating a motion controller that can actuate the figure to produce the desired motion <ref> [19, 20, 24, 25, 26] </ref>. 1 In any particular embodiment of this approach, two broad and nearly independent choices must be made: 1. how the motion controller is to be represented; and 2. how the space of possible controllers is to be searched. <p> Ridsdale's search strategy is an adaptation of the standard back-propagation algorithm for training neural networks, augmented with simulated annealing to avoid local minima. Van de Panne and Fiume <ref> [26] </ref> described a similar approach that is capable of solving more general motion-synthesis problems. In their work a motion controller is termed a sensor-actuator network (SAN). In a SAN, the actuators' responses are interdependent nonlinear functions of the figure's physical-state variables. <p> This causes difficulties when the animator 4 Ngo and Marks originally reported running times of 30-60 minutes on a CM-2 Connection Machine to compute comparable BSR motion controllers [19, 20]. Van de Panne and Fiume reported running times of 1-6 hours on a Sun SPARC IPC for their algorithm <ref> [26] </ref>. 8 Initialize a set of C random motion controllers Evaluate each motion controller in the set for i = 1 to G do for each individual controller in the set do Mutate (i.e., reinitialize or perturb) the controller Evaluate the new controller if the new controller is better than the <p> de Panne et al. [30]. 11 Rule Stimulus Response 1 [0; t 1 ) ( ~ 0 2 [t 1 ; t 2 ) ( ~ 0 3 [t 2 ; t 3 ) ( ~ 0 4 [t 3 ; t per ) ( ~ 0 In recent papers <ref> [19, 20, 26] </ref> it has been argued or assumed that good closed-loop controllers with access to information about physical state should be more effective (i.e., produce better, more robust motions) and easier to find than good open-loop controllers based on time alone.
Reference: [27] <author> M. van de Panne and E. Fiume. </author> <title> Sensor-actuator networks. </title> <note> ACM SIGGRAPH Video Review, Issue 96: Video Supplement to the SIGGRAPH '93 Conference Proceedings, </note> <year> 1993. </year>
Reference-contexts: For example, BSR controllers produce motions that are qualitatively different from those produced by SANs, which tend to exhibit characteristic sinusoidal vibrations <ref> [21, 27] </ref>. Thus, another way to influence the style of generated motions might be to modify the form of the BSR controller.
Reference: [28] <author> M. van de Panne, E. Fiume, and Z. Vranesic. </author> <title> Reusable motion synthesis using state-space controllers. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 225-234, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Step 3 can be supported: if a motion controller is invoked for an articulated figure that starts in a different configuration than the one for which the controller was designed, what happens? 7 This regimen is very similar in spirit to one described previously by van de Panne et al. <ref> [28] </ref>, though the motion-controller representations in both schemes are very different, and controllers can be concatenated automatically in our approach.
Reference: [29] <author> M. van de Panne, R. Kim, and E. Fiume. </author> <title> Synthesizing parameterized motions. </title> <booktitle> In Proceedings of the Fifth Eurographics Workshop on Animation and Simulation, </booktitle> <address> Oslo, Norway, </address> <month> September </month> <year> 1994. </year> <month> 26 </month>
Reference-contexts: However, it seems clear that other approaches will be 11 However, van de Panne et al. have recently reported some positive experiences with modifying and concatenating time-based controllers <ref> [29] </ref>. 23 more useful for more involved manipulation tasks [14]. 6 Acknowledgments The support of the following companies and foundations is acknowledged: Digital Equipment Corporation, the Fannie and John Hertz Foundation, Walter Hewlett and Hewlett-Packard, and the National Science Foundation (NSF grant IRI 93-50192).
Reference: [30] <author> M. van de Panne, R. Kim, and E. Fiume. </author> <title> Virtual wind-up toys for animation. </title> <booktitle> In Proceedings of Graphics Interface '94, </booktitle> <pages> pages 208-215, </pages> <address> Banff, Alberta, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: If, on the other hand, t per T , then the action sequence is not constrained to be periodic. 5 A functionally equivalent form of motion controller has also been described by van de Panne et al. <ref> [30] </ref>. 11 Rule Stimulus Response 1 [0; t 1 ) ( ~ 0 2 [t 1 ; t 2 ) ( ~ 0 3 [t 2 ; t 3 ) ( ~ 0 4 [t 3 ; t per ) ( ~ 0 In recent papers [19, 20, 26] it has
Reference: [31] <author> A. Witkin and M. Kass. </author> <title> Spacetime constraints. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 159-168, </pages> <month> August </month> <year> 1988. </year> <type> 27 28 29 30 31 32 33 </type>
Reference-contexts: One approach to automatic motion synthesis uses local optimization to refine initial articulated-figure trajectories by making them more compliant with physical law (the "Spacetime Constraints" approach) <ref> [8, 16, 31] </ref>. Another form of local optimization involves straightforward use of optimal-control theory to improve the motion with respect to the task criteria [7]. <p> single controller is relatively simple|the only way to get complex, composite motion is to concatenate several problem instances in time and to generate separate motion controllers serially for each subproblem. (This time-consuming approach is similar to one proposed by Cohen [8] in the context of the original Spacetime Constraints paradigm <ref> [31] </ref>.) 4. The existing algorithm works for 2D articulated figures only|generalizing to 3D would appear to be computationally formidable. We show how each of these problems can be addressed to some degree. <p> To address this limitation in the context of the Witkin-Kass approach <ref> [31] </ref>, Cohen [8] implemented a system that permits a human animator to design and refine a trajectory by interactively submitting simple motion-synthesis subproblems for solution on-line.
References-found: 31

