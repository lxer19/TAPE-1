URL: http://www.cs.umr.edu/techreports/94-20.ps
Refering-URL: http://www.cs.umr.edu/techreports/
Root-URL: 
Email: e-mail: ff@cs.umr.edu  
Title: How to Program in CCSP  
Author: Beth Arrowsmith and Bruce McMillin 
Note: This report replaces UMR  
Address: Rolla, MO 65401, USA  
Affiliation: Department of Computer Science University of Missouri-Rolla  Computer Science  
Date: August 30, 1994  93-30  
Pubnum: CSC 94-20  Technical Report  
Abstract: CCSP (C-CSP) provides an execution environment for CSP programs. CCSP consists of two parts, a parser and a run-time system using Berkeley sockets. The parser takes a CSP program as input and produces a C program as output. These C programs are then run as individual processes on a network of UNIX workstations. CCSP's run-time system contains procedures for operationally evaluating globally-specified axiomatic assertions embedded in the CCSP programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Arrowsmith and B. McMillin. </author> <title> Ccsp a formal system for distributed program debugging. </title> <booktitle> 2nd International Conference on Software for Multiprocessors and Supercomputers: Theory, Practice, Experience, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: In order to reduce traffic, a process only passes its value of the global variable, if the global variable changed since the last time those two processes communicated <ref> [1] </ref> 13 .
Reference: [2] <author> C. Hoare. </author> <title> Communicating sequential processes. </title> <journal> Communications of the ACM, </journal> <volume> 21(8) </volume> <pages> 666-677, </pages> <year> 1978. </year>
Reference-contexts: 1 Introduction CSP, Hoare's creation, is a programming language designed for communication between sequential processes <ref> [2] </ref>. Unlike many parallel programming languages, CSP assumes that memory is not shared, nor that a universal communication band exists. In fact, the only means for the transfer of data is for two processes to communicate. CCSP brings CSP from a theoretical language to a compilable language. <p> This parser always has the alternative command pick the first guarded statement that is true. Notice that the BNF definitions for these commands differ significantly from Hoare's <ref> [2] </ref>. Hoare's language requires that there not be a [] for the first guarded command in an alternative command. This parser sometimes will not so gracefully crash if you do not put a [] (box) in front of every guarded command, including the first one. <p> ] in the program, the error message would be as follows: Too many ] ERROR HAS OCCURRED at line number number 2.5.2 Repetitive Command The repetitive command only loops if at least one guard can be evaluated to true, which is how the repetitive command is defined in Hoare's paper <ref> [2] </ref>. If an infinite loop is necessary, place another repetitive loop whose single guard is always evaluated to true around the original loop. Example 2.6 Infinite Loop *[ if (TRUE) -&gt; *[ Rest of the program ] 8 A more interesting number guessing game follows using the repetitive loop.
References-found: 2

