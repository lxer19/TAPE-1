URL: ftp://cl-ftp.dfki.uni-sb.de/pub/papers/local/paper.ps.gz
Refering-URL: http://cl-www.dfki.uni-sb.de/cl/papers/cl-abstracts.html
Root-URL: 
Email: krieger@dfki.uni-sb.de  
Title: Derivation Without Lexical Rules  
Author: Hans-Ulrich Krieger 
Address: Stuhlsatzenhausweg 3 D-6600 Saarbrucken 11, Germany  
Affiliation: German Research Center for Artificial Intelligence (DFKI)  
Abstract: In Krieger and Nerbonne (1992) we showed how to get rid of lexical rules for derivation, as they are explicated by Pollard and Sag (1987) in HPSG I, Ch. 8.2. We proposed a treatment of derivation not by means of traditional lexical rules but instead in terms of principles, rules, and lexical entries entirely in the spirit of HPSG, together with unification-based inheritance of a very sophisticated kind. One major disadvantage of this approach was the employment of complex functions in certain principles. In this paper I first extend the old approach and then show how to eliminate these functional dependencies in the domain of derivational morphology by going back to simpler ones like cons, first, and rest. But this simplification is only achieved if we assume more complex feature structures than the ones described in Krieger and Nerbonne (e.g., by introducing two different SUBCAT features) and by proposing modified versions of the old Constituent Order Principle and the Subcategorization Principle for morphology. In addition, I postulate a hierarchy of affixes which is cross-classified, for instance, according to the effects these affixes contribute to the subcategorization information of a compound word. The structure of the paper is as follows. We start with a very short introduction about the residence of word-formation rules in modern feature-based theories. After that we present our approach to derivational morphology which is distinguished in that it gives up the notion of lexical rule as a single entity (operator). We describe the structure of affixes and words (e.g., which attributes are appropriate?) and introduce the relevant principles and the rule schema of our approach to derivational morphology. The section shows how to reduce functional dependencies to a minimum at the cost of the size of our feature structures. We also present a technique which allows us to state relational dependencies as they are called by HPSG in a functional manner. In the next section we show how the whole treatment works by applying it to tough phenomena from prefixation and suffixation. The section presents many examples, which might serve as a how to guide to a practitioner. After that we explain the idea which will lead us to the affix hierarchy. We will see that the affix hierarchy is inspired by the work of HPSG on structured lexicons (i.e., by the hierarchy of lexical types). A lot of examples will again be given throughout this section. We finish the paper by summarizing our approach and by saying a few words about the topics which we will tackle next. fl This work grew out from discussions with John Nerbonne at the DFKI. Thanks are due to Susanne Riehemann and C.J. Rupp for their critique and numerous comments on earlier versions of this paper. The paper has also benefited from numerous people at various workshops where parts of it have been presented, in particular at the ACQUILEX Workshop on Default Inheritance in the Lexicon (Cambridge), the ASL Workshop on DATR (Biele-feld), the Workshop on HPSG and German (Saarbrucken), the Workshop on Constraint Propagation, Linguistic Description, and Computation (Lugano), and the Sprachwissenschaftliches Kolloquium (Univ. of Tubingen). This work was supported by a research grant from the German Bundesministerium fur Forschung und Technologie to the DISCO project (FKZ ITW 9002 0). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Hassan At-Kaci. </author> <title> An algebraic semantics approach to the effective resolution of type equations. </title> <journal> Theoretical Computer Science, </journal> <volume> 45 </volume> <pages> 293-351, </pages> <year> 1986. </year>
Reference-contexts: a list of complements) like HPSG recommends for the sentence level, because a list append must not be seen necessarily as a function/relation but can be simulated through the difference list technique used in the logic programming community [32] or via a recursive type specification, as At-Kaci has shown in <ref> [1] </ref> (note that we won't stick to functions or even relations as long as possible). 14 MSCP* = 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; : complex DTRS affix-word-struct 2 6 6 complex SYNjLOCjSUBCAT 1 DTRS 2 4 AFFIX 3 SYNjLOCjSUBCAT 1 MORPHjSUBCAT 2 WORD 2 fi
Reference: [2] <author> Hassan At-Kaci and Roger Nasr. Residuation: </author> <title> A paradigm for integrating logic and functional programming. </title> <type> Technical Report AI-359-86, </type> <institution> MCC, Austin, TX, </institution> <year> 1986. </year>
Reference: [3] <author> Mark Aronoff. </author> <title> Word Formation in Generative Grammar. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1976. </year>
Reference: [4] <author> Steven Bird. </author> <title> Finite-state phonology in HPSG. </title> <booktitle> In Proceedings of the 14th International Conference on Computational Linguistics, COLING-92, </booktitle> <pages> pages 74-80, </pages> <year> 1992. </year>
Reference: [5] <author> Robert D. Borsley. </author> <title> Subjects and complements in HPSG. </title> <type> Technical Report CSLI-87-107, </type> <institution> Center for the Study of Language and Information, Stanford University, </institution> <year> 1987. </year>
Reference: [6] <author> Gosse Bouma. </author> <title> Feature structures and nonmonotonicity. </title> <journal> Computational Linguistics, </journal> <volume> 18(2) </volume> <pages> 183-203, </pages> <year> 1992. </year>
Reference-contexts: morphological complex with category adjective (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance <ref> [6] </ref>, [8], [12], [14], [16], [17], [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical <p> However, the closely related notion of slo unification (see [28]) which we would like to apply during processing, might fail|this is in contrast to other proposals which never yield ?, for instance Bouma's Default Unification <ref> [6] </ref>. 20 achieve under the assumption that haben doesn't belong to the bar verb class bar-V , but instead to another class (say ?-V ), thus preventing haben from combining with -bar |therefore hab+bar is disallowed. haben = : : : : : : (41) It is nevertheless possible to construct
Reference: [7] <author> Joan Bresnan, </author> <title> editor. The Mental Representation of Grammatical Relations. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1982. </year>
Reference: [8] <author> Jonathan Calder. </author> <title> Feature-value logic: Some limits on the role of defaults. </title> <editor> In Mike Rosner, C.J. Rupp, and Rod Johnson, editors, </editor> <booktitle> Proceedings of the Workshop on Constraint Propagation, Linguistic Description, and Computation, </booktitle> <pages> pages 20-32. </pages> <institution> Instituto Dalle Molle IDSIA, Lugano, </institution> <year> 1991. </year>
Reference-contexts: complex with category adjective (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], <ref> [8] </ref>, [12], [14], [16], [17], [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties,
Reference: [9] <author> Luca Cardelli. </author> <title> A semantics of multiple inheritance. </title> <journal> Information and Computation, </journal> <volume> 76 </volume> <pages> 138-164, </pages> <year> 1988. </year>
Reference: [10] <author> Luca Cardelli and Peter Wegner. </author> <title> On understanding types, data abstraction, </title> <journal> and polymor-phism. ACM Computing Surveys, </journal> <volume> 17(4) </volume> <pages> 471-522, </pages> <year> 1985. </year>
Reference: [11] <author> Bob Carpenter. </author> <title> The Logic of Typed Feature Structures. </title> <booktitle> Tracts in Theoretical Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1992. </year>
Reference: [12] <author> Bob Carpenter. </author> <title> Skeptical and credulous default unification with applications to templates and inheritance. </title> <editor> In Ted Briscoe, Ann Copestake, and Valeria de Paiva, editors, </editor> <title> Default Inheritance Within Unification-Based Approaches to the Lexicon. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: with category adjective (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], <ref> [12] </ref>, [14], [16], [17], [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and
Reference: [13] <author> Bob Carpenter and Carl Pollard. </author> <title> Inclusion, disjointness and choice: The logic of linguistic classification. </title> <booktitle> In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics, </booktitle> <pages> pages 9-16, </pages> <year> 1991. </year>
Reference-contexts: As a main result, we will show that a feature logic without functions or relations is too weak to characterize the SUBCAT dimension. 27 See Pollard and Sag [34] for a motivation and many examples and [43] or <ref> [13] </ref> for the logic underlying those hierarchies. 25 bar-suff . Dashed lines should indicate that there might be additional types which are however not shown in the picture.
Reference: [14] <author> Ann Copestake. </author> <title> Defaults in the LRL. </title> <editor> In Ted Briscoe, Ann Copestake, and Valeria de Paiva, editors, </editor> <title> Default Inheritance Within Unification-Based Approaches to the Lexicon. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: category adjective (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], <ref> [14] </ref>, [16], [17], [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv)
Reference: [15] <author> Ann Copestake, Valeria de Paiva, and Antonio Sanfilippo. </author> <title> Functionality of the LKB. </title> <type> Draft version, unpublished, </type> <institution> University of Cambridge, Computer Laboratory, </institution> <month> March </month> <year> 1991. </year> <month> 31 </month>
Reference: [16] <author> Walter Daelemans, Koenraad De Smedt, and Gerald Gazdar. </author> <title> Inheritance in natural language processing. </title> <journal> Computational Linguistics, </journal> <volume> 18(2) </volume> <pages> 205-218, </pages> <year> 1992. </year>
Reference-contexts: adjective (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], <ref> [16] </ref>, [17], [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it
Reference: [17] <author> Roger Evans and Gerald Gazdar. </author> <title> The DATR papers. </title> <type> Technical Report SCRP 139, </type> <institution> School of Cognitive and Computing Sciences, University of Sussex, </institution> <year> 1990. </year>
Reference-contexts: (A); it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], <ref> [17] </ref>, [19], [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is <p> The use of default specifications thus obtains the same advantages in derivation that Flickinger et al. [20] and Evans and Gazdar <ref> [17] </ref> have shown in word-class definitions. Defaults, together with the possibility of overwriting defaults in more specific definitions may turn out to be even more important in connection with the analysis of derivational relationships, since these are notoriously irregular in morphological form, syntactic feature assignment, and semantics.
Reference: [18] <author> Jens Erik Fenstad, Per-Kristian Halvorsen, Tore Langholm, and Johan van Benthem. </author> <title> Situations, Language and Logic. </title> <publisher> Reidel, </publisher> <address> Dordrecht, </address> <year> 1987. </year>
Reference: [19] <author> Daniel Flickinger. </author> <title> Lexical Rules in the Hierarchical Lexicon. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <year> 1987. </year>
Reference-contexts: it may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], <ref> [19] </ref>, [21], [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a
Reference: [20] <author> Daniel Flickinger, Carl Pollard, and Thomas Wasow. </author> <title> Structure-sharing in lexical representation. </title> <booktitle> In Proceedings of the 25th Annual Meeting of the Association for Computational Linguistics, </booktitle> <pages> pages 262-267, </pages> <year> 1985. </year>
Reference-contexts: The use of default specifications thus obtains the same advantages in derivation that Flickinger et al. <ref> [20] </ref> and Evans and Gazdar [17] have shown in word-class definitions.
Reference: [21] <author> Gerald Gazdar. </author> <title> Linguistic applications of default inheritance mechanisms. </title> <editor> In P. Whitelock, M.M. Wood, H.L. Somers, R. Johnson, and P. Bennett, editors, </editor> <booktitle> Linguistic Theory and Computer Applications, </booktitle> <pages> pages 37-67. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1987. </year> <note> Also available as Cognitive Science Research Paper CSRP 070, </note> <institution> University of Sussex. </institution>
Reference-contexts: may function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], [19], <ref> [21] </ref>, [23], [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very
Reference: [22] <author> Jack Hoeksema. </author> <title> Categorial Morphology. </title> <publisher> Garland, </publisher> <address> New York, </address> <year> 1985. </year>
Reference: [23] <author> Ronald M. Kaplan. </author> <title> Three seductions of computational psycholinguistics. </title> <editor> In P. Whitelock, M.M. Wood, H.L. Sommers, R. Johnson, and P. Bennett, editors, </editor> <booktitle> Linguistic Theory and Computer Applications, </booktitle> <pages> pages 149-188. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1987. </year>
Reference-contexts: function as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], [19], [21], <ref> [23] </ref>, [37], [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very conservative
Reference: [24] <author> Lauri Karttunen. D-PATR: </author> <title> A development environment for unification-based grammars. </title> <type> Technical Report CSLI-86-61, </type> <institution> Center for the Study of Language and Information, Stanford University, </institution> <year> 1986. </year>
Reference: [25] <author> Andreas Kathol. </author> <title> Passives without lexical rules. </title> <editor> In John Nerbonne, Klaus Netter, and Carl Pollard, editors, </editor> <title> HPSG and German. Center for the Study of Language and Information, </title> <booktitle> Stanford, 1993. CSLI Lecture Notes Series. </booktitle>
Reference: [26] <author> Kimmo Koskenniemi. </author> <title> A general computational model for word-form recognition and production. </title> <booktitle> In Proceedings of the 10th International Conference on Computational Linguistics, COLING-84, </booktitle> <pages> pages 178-181, </pages> <year> 1984. </year>
Reference: [27] <author> Hans-Ulrich Krieger. </author> <title> Representing and processing finite automata within typed feature formalisms. </title> <type> Technical report, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz, Saar-brucken, Germany, </institution> <year> 1993. </year> <month> Forthcoming. </month>
Reference: [28] <author> Hans-Ulrich Krieger. </author> <title> Single link overwriting|a conservative non-monotonic extension of unification-based inheritance networks. </title> <type> Technical report, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz, Saarbrucken, Germany, </institution> <year> 1993. </year> <month> Forthcoming. </month>
Reference-contexts: to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], [19], [21], [23], [37], [39]). 19 It is shown in <ref> [28] </ref> that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very conservative extension to the standard monotonic unification machinery. 20 <p> In our special case the syntax is of the following form: new-class := old-class & !overwrite-info. SLO will never fail during the definition of a new class under the assumption that the overwrite-info is consistent. However, the closely related notion of slo unification (see <ref> [28] </ref>) which we would like to apply during processing, might fail|this is in contrast to other proposals which never yield ?, for instance Bouma's Default Unification [6]. 20 achieve under the assumption that haben doesn't belong to the bar verb class bar-V , but instead to another class (say ?-V ),
Reference: [29] <author> Hans-Ulrich Krieger and John Nerbonne. </author> <title> Feature-based inheritance networks for computational lexicons. </title> <editor> In Ted Briscoe, Ann Copestake, and Valeria de Paiva, editors, </editor> <title> Default Inheritance Within Unification-Based Approaches to the Lexicon. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year> <note> A version of this paper is also available as DFKI Research Report RR-91-31. Also published in Proceedings of the ACQUILEX Workshop on Default Inheritance in the Lexicon, Technical Report No. 238, </note> <institution> University of Cambridge, Computer Laboratory, </institution> <month> October </month> <year> 1991. </year>
Reference: [30] <author> Hans-Ulrich Krieger, John Nerbonne, and Hannes Pirker. </author> <title> Feature-based allomorphy. </title> <booktitle> In Proceedings of the 31st Annual Meeting of the Association for Computational Linguistics, </booktitle> <year> 1993. </year> <note> A version of this paper is also available as DFKI Research Report RR-93-28. 32 </note>
Reference: [31] <author> John T. Maxwell III and Ronald M. Kaplan. </author> <title> The interface between phrasal and functional constraints. </title> <editor> In Mike Rosner, C.J. Rupp, and Rod Johnson, editors, </editor> <booktitle> Proceedings of the Workshop on Constraint Propagation, Linguistic Description, and Computation, </booktitle> <pages> pages 105-120. </pages> <institution> Instituto Dalle Molle IDSIA, Lugano, </institution> <year> 1991. </year>
Reference-contexts: be stated explicitly as typed implications in the style of HPSG and processed completely by the underlying unification machinery or should be factored out as context-free rewrite rules, i.e., as phrasal constraints, which can then be applied independently by a special purpose machinery to build up phrase structure trees (see <ref> [31] </ref> on the advantages of separating phrasal and functional constraints). 24 4 The Affix Hierarchy It is well known that HPSG was the first linguistic theory of the unification paradigm which incorporated the ideas on structured objects and inheritance, well known from computer science, semantic networks, and terminological knowledge representation systems,
Reference: [32] <author> Fernando C.N. Pereira and Stuart M. Shieber. </author> <title> Prolog and Natural-Language Analysis. CSLI Lecture Notes, Number 10. Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <year> 1987. </year>
Reference-contexts: This approach is also capable of working with non-binary trees (introduce a list of complements) like HPSG recommends for the sentence level, because a list append must not be seen necessarily as a function/relation but can be simulated through the difference list technique used in the logic programming community <ref> [32] </ref> or via a recursive type specification, as At-Kaci has shown in [1] (note that we won't stick to functions or even relations as long as possible). 14 MSCP* = 8 &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; : complex DTRS affix-word-struct 2 6 6 complex SYNjLOCjSUBCAT 1
Reference: [33] <author> Carl Pollard. </author> <title> The syntax-semantics interface in a unification-based phrase structure grammar. </title> <editor> In Stephan Busemann, Christa Hauenschild, and Carla Umbach, editors, </editor> <booktitle> Views of the Syntax-Semantics Interface: Proceedings of the Workshop on "GPSG and Semantics", </booktitle> <address> Technische Universitat Berlin, </address> <month> 22-24.Feb </month> <year> 1989, </year> <pages> pages 167-184. </pages> <address> KIT FAST, Technische Universitat Berlin, </address> <year> 1989. </year>
Reference: [34] <author> Carl Pollard and Ivan Sag. </author> <title> Information-Based Syntax and Semantics. Vol. I: Fundamentals. CSLI Lecture Notes, Number 13. Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <year> 1987. </year>
Reference-contexts: this assumption, we have two work with two ID rule schemata, one for prefixes and one for suffixes. 24 For expository purposes, the semantics of Version is stated as simple as possible, but in general a more complex one must be employed, e.g., the proposal given by Pollard and Sag <ref> [34] </ref>, Ch. 4, for (unsaturated) common nouns. 25 As we mentioned above, we have taken the prefix Vor- as an example to show how certain phenomena can be handled in our approach. <p> As a main result, we will show that a feature logic without functions or relations is too weak to characterize the SUBCAT dimension. 27 See Pollard and Sag <ref> [34] </ref> for a motivation and many examples and [43] or [13] for the logic underlying those hierarchies. 25 bar-suff . Dashed lines should indicate that there might be additional types which are however not shown in the picture.
Reference: [35] <author> Susanne Riehemann. </author> <title> Word formation in lexical type hierarchies. a case study of bar -adjectives in german. </title> <type> Master's thesis, </type> <institution> Eberhard-Karls-Universitat Tubingen, Seminar fur Sprachwis-senschaft, </institution> <year> 1993. </year>
Reference-contexts: SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very conservative extension to the standard monotonic unification machinery. 20 Riehemann <ref> [35] </ref> adopt the approach to German bar adjectives, using the Mannheim Zeitungskorpus as a basis. In addition, she poses several questions concerning the redundancy of the basic proposal, for instance that word syntax stated through (18) is not needed. 17 word.
Reference: [36] <author> Graeme D. Ritchie, Stephen G. Pulman, Alan W. Black, and Graham J. Russell. </author> <title> A computational framework for lexical description. </title> <booktitle> Computational Linguistics, </booktitle> <address> 13(3-4):290-307, </address> <year> 1987. </year>
Reference-contexts: In translating a principle|usually expressed as a conditional|into a type, we only use the the right side of the conditional, the consequent (for a motivation, see below). Note the similarity between principles here and completion rules in the Alvey tools project <ref> [36] </ref>. 15 principles and the rule. Note that we additionally impose local constraints on certain classes, especially on bar-comp-A; for motivation, see text.
Reference: [37] <author> Graham Russell, John Carroll, and Susan Warwick-Armstrong. </author> <title> Multiple default inheritance in a unification-based lexicon. </title> <booktitle> In Proceedings of the 29th Annual Meeting of the Association for Computational Linguistics, </booktitle> <pages> pages 215-221, </pages> <year> 1991. </year>
Reference-contexts: as a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], [19], [21], [23], <ref> [37] </ref>, [39]). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very conservative extension
Reference: [38] <author> Stuart Shieber, Hans Uszkoreit, Fernando Pereira, Jane Robinson, and Mabry Tyson. </author> <title> The formalism and implementation of PATR-II. </title> <editor> In Barbara J. Grosz and Mark E. Stickel, editors, </editor> <booktitle> Research on Interactive Acquisition and Use of Knowledge, </booktitle> <pages> pages 39-79. </pages> <institution> AI Center, SRI International, Menlo Park, Cal., </institution> <year> 1983. </year>
Reference: [39] <author> Stuart M. Shieber. </author> <title> An Introduction to Unification-Based Approaches to Grammar. CSLI Lecture Notes, Number 4. Center for the Study of Language and Information, </title> <publisher> Stanford, </publisher> <year> 1986. </year>
Reference-contexts: a head even though it fails to appear as a free 18 This paper neither discusses the pros and cons of non-monotonic extensions to the predominant monotonic unification paradigm of computational linguistics nor given proposals so far (see for instance [6], [8], [12], [14], [16], [17], [19], [21], [23], [37], <ref> [39] </ref>). 19 It is shown in [28] that SLO is interesting from different points of view, viz., (i) it is capable of expressing the relevant linguistic facts in a natural way, (ii) it is efficiently implementable, (iii) it has nice theoretical properties, and (iv) it is a very conservative extension to
Reference: [40] <author> Gert Smolka. </author> <title> A feature logic with subsorts. </title> <type> LILOG Report 33, </type> <institution> WT LILOG-IBM Germany, Stuttgart, </institution> <month> Mai </month> <year> 1988. </year>
Reference: [41] <author> Gert Smolka. </author> <title> Feature constraint logic for unification grammars. </title> <type> IWBS Report 93, </type> <institution> IWBS-IBM Germany, Stuttgart, </institution> <month> November </month> <year> 1989. </year>
Reference: [42] <author> Gert Smolka. </author> <title> Residuation and guarded rules for constraint-logic programming. </title> <note> Research Report RR-91-13, DFKI, Saarbrucken, </note> <year> 1991. </year>
Reference: [43] <author> Gert Smolka and Hassan At-Kaci. </author> <title> Inheritance hierarchies: Semantics and unification. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 7 </volume> <pages> 343-370, </pages> <year> 1989. </year> <month> 33 </month>
Reference-contexts: As a main result, we will show that a feature logic without functions or relations is too weak to characterize the SUBCAT dimension. 27 See Pollard and Sag [34] for a motivation and many examples and <ref> [43] </ref> or [13] for the logic underlying those hierarchies. 25 bar-suff . Dashed lines should indicate that there might be additional types which are however not shown in the picture.
References-found: 43

