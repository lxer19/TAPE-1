URL: ftp://mesquite.cs.panam.edu/pub/MENG/utpa-cs-tr95-8.ps
Refering-URL: http://www.cs.panam.edu/TR/cs-tr.html
Root-URL: 
Email: meng@panam.edu  
Title: Synchronizations and Rollbacks in Optimistic Distributed Simulation Scheme  
Author: Xiannong Meng 
Keyword: Key words: parallel and distributed simulation, discrete event simulation, synchronization  
Date: June 30, 1995  
Address: Edinburg, TX 78539  
Affiliation: Department of Mathematics and Computer Science University of Texas Pan American  
Abstract: This paper describes a study of coordination issues in optimistic distributed simulations that are implemented over a loosely coupled environment. Detailed study of relations among the factors such as the number, the depth and the frequency of rollbacks, the event intensity, and the speedup of the distributed simulations are studied. This study shows that centralized coordination can perform very effectively in certain types of simulation tasks; the rollbacks have different characteristics at different event intensities; and how the overall performance of optimistic distributed simulations is affected by message intensity, communications overhead, and rollback frequency. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.J. Baker, J.P. Hauser, </author> <title> and W.A. Thoet. A distributed simulation and prototyping testbed for radio communication networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(1), </volume> <month> January </month> <year> 1988. </year>
Reference-contexts: Mouftah and Sturgeon [10] discussed the design and implementation of DISDESNET, a distributed simulation package for general communication networks. The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment. Baker et. al. <ref> [1] </ref> described a package that simulates and prototypes radio communication networks in a loosely coupled environment. Carothers et.al. [2] studied explicitly the effect of communication overheads on the Time Warp performance.
Reference: [2] <author> Christopher Carothers, Richard Fujimoto, and Paul England. </author> <title> Effect of communication overheads on time warp performance: An experimental study. </title> <booktitle> In Proceedings of 1994 PADS Workshop, </booktitle> <year> 1994. </year> <month> 7 </month>
Reference-contexts: The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment. Baker et. al. [1] described a package that simulates and prototypes radio communication networks in a loosely coupled environment. Carothers et.al. <ref> [2] </ref> studied explicitly the effect of communication overheads on the Time Warp performance. The study of distributed simulation of computer networks can be traced back to as early as late 1970s [4]. [5] listed a brief survey of different mechanisms used to calculate GVC.
Reference: [3] <author> Arthur Chai and Sumit Ghosh. </author> <title> Modeling and distributed simulation of a broadband-isdn network. </title> <journal> IEEE Computer, </journal> <volume> 26(9), </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: Also recorded is the number of events affected by each rollback. At the end of the simulation, an average number of events per rollback (rollback depth) is calculated. 3 Related Works There have been many studies in simulating computer networks using distributed and parallel techniques. Chai and Ghosh <ref> [3] </ref> presented a detailed study of distributed simulation of large scale Broadband-ISDN network in a set of loosely coupled parallel processors. They used up to 50 workstations connected through a regular network.
Reference: [4] <author> K.M. Chandy, V. Holmes, and J. Misra. </author> <title> Distributed simulation of networks. </title> <journal> Computer Networks, </journal> <volume> 3, </volume> <year> 1979. </year>
Reference-contexts: Carothers et.al. [2] studied explicitly the effect of communication overheads on the Time Warp performance. The study of distributed simulation of computer networks can be traced back to as early as late 1970s <ref> [4] </ref>. [5] listed a brief survey of different mechanisms used to calculate GVC.
Reference: [5] <author> Alois Ferscha and Satish K. Tripathi. </author> <title> Parallel and distributed simulation of discrete systems. </title> <type> TR CS-TR-3336, </type> <institution> University of Maryland, Computer Science Department, University of Mary-land, College Park, MD 20742, </institution> <year> 1994. </year>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved. <p> A key to the success of a distributed simulation is how to coordinate all participating agents. 2 Typically in optimistic PADS, each agent proceeds at its own pace. If an external, out-of-chronological--order event (straggler) <ref> [5] </ref> is received by an agent, the agent performs a rollback by canceling all events generated after the timestamp of the straggler at this agent. This rollback may trigger more rollbacks on other agents. The rollbacks are carried out generally in a distributed manner, i.e. no central coordinator. <p> Simulation is complete when the GVC is greater than, or equal to the total simulation time specified. A GVC is defined as the minimum value of timestamps of all events including transit events in the system (for a general discussion of GVC, see, for example <ref> [5] </ref>). There are different ways of calculating GVC [5], de-centralized or centralized. The use of a bus LP enables centralized calculation of GVC in our 3 simulation. The protocol of calculating GVC is the following. <p> A GVC is defined as the minimum value of timestamps of all events including transit events in the system (for a general discussion of GVC, see, for example <ref> [5] </ref>). There are different ways of calculating GVC [5], de-centralized or centralized. The use of a bus LP enables centralized calculation of GVC in our 3 simulation. The protocol of calculating GVC is the following. Each agent sends a value of zero as local simulation clock (LSC) to the bus LP at the beginning of the simulation. <p> Carothers et.al. [2] studied explicitly the effect of communication overheads on the Time Warp performance. The study of distributed simulation of computer networks can be traced back to as early as late 1970s [4]. <ref> [5] </ref> listed a brief survey of different mechanisms used to calculate GVC.
Reference: [6] <author> Richard Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of ACM, </journal> <volume> 33(10), </volume> <month> Oc-tobor </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved. <p> These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved. The correctness of the simulation is provided by the Local Causality Constraint (LCC) <ref> [6] </ref>. There are two classes of distributed simulation algorithms that ensure this correctness: conservative and optimistic. In a conservative approach, an LP will not proceed unless it is certain that no LCC will be violated. In an optimistic approach, each LP can proceed at its own pace.
Reference: [7] <author> Yi-Bing Lin and Paul A. Fishwick. </author> <title> Asynchronous parallel discrete event simulation. </title> <type> TR tr95-005.ps, </type> <institution> Unviersity of Florida, Department of Computer and Information Sciences, University of Florida, Gainesville, Florida, </institution> <year> 1995. </year>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [8] <author> Xiannong Meng. </author> <title> Distributed simulation in a loosely coupled environment using the tcp/ip protocol. </title> <booktitle> In Proceedings of the Fourteenth Annual International Pheonix Conference on Computer and Communications, </booktitle> <pages> pages 122-127, </pages> <year> 1995. </year>
Reference-contexts: In our study, the simulation is divided into a number of LPs. Each LP represents one or more computers connected to the network being simulated. One LP represents the bus network. This LP acts as the central coordinator. For detailed description of the simulation set-up, see <ref> [8] </ref>. 2.1 The Central Coordinator The central contention point in our simulation is the bus to which every computer is connected. These computers compete for bus access. Each computer attached to the network has its own packet arrival stream. The access protocol is 1-persistent CSMA/CD.
Reference: [9] <author> Jayadev Misra. </author> <title> Distributed discrete-event simulation. Computing Survey, </title> <type> 18(1), </type> <month> March </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [10] <author> H.T. Mouftah and R.P. Sturgeon. </author> <title> Distributed discrete event simulation for communication networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(9), </volume> <month> December </month> <year> 1990. </year>
Reference-contexts: They used up to 50 workstations connected through a regular network. The simulation is based on the conservative mechanism in that each logical model will execute up to the minimum clock in all its incoming links. Mouftah and Sturgeon <ref> [10] </ref> discussed the design and implementation of DISDESNET, a distributed simulation package for general communication networks. The discussion was centered around multiprocessor environment. The tests were done on a two Sun-workstation network environment.
Reference: [11] <author> David Nicol and Richard Fujimoto. </author> <title> Parallel simulation today. </title> <type> tech report pdes-survey, </type> <institution> College of William & Mary, Department of Computer Science, College of William & Mary, </institution> <address> Williams-burg, VA 23187, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [12] <author> Rhonda Righter and Jean Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1), </volume> <month> January </month> <year> 1989. </year> <month> 8 </month>
Reference-contexts: 1 Introduction Theory and practice of parallel and distributed simulations (PADS) have made significant progresses in recent years <ref> [7, 5, 11, 6, 12, 9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP, which then are distributed to one or more processors. These LPs can execute the simulation in parallel. Thus a significant speedup often can be achieved.
References-found: 12

