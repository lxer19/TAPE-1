URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/CTDataMod.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Title: A Category Theory Approach to Conceptual Data Modeling  A Category Theory Approach to Conceptual Data Modeling.  
Author: E. Lippe and A.H.M. ter Hofstede E. Lippe and A.H.M. ter Hofstede. 
Keyword: Conceptual Data Modelling, Category Theory, Meta Modelling  
Note: Published as:  Classification: 68P99 (AMS-1991), H.1.0. (CR-1991)  
Address: Toernooiveld 1, 6525 ED Nijmegen The Netherlands  Nijmegen, Nijmegen, The Netherlands,  
Affiliation: Computing Science Institute Faculty of Mathematics and Informatics University of Nijmegen  Science Institute, University of  
Pubnum: Technical Report CSI-R9415, Computing  
Email: e-mail:fernstl,arthurg@cs.kun.nl  
Date: December 1994.  
Abstract: This paper describes a category theory semantics for conceptual data modeling. The conceptual data modeling technique used can be seen as a generalization of most existing conceptual data modeling techniques. It contains features such as specialization, generalization, and power types. The semantics uses only simple category theory constructs such as (co)limits and epi- and monomorphisms. Therefore, the semantics can be applied to a wide range of instance categories, it is not restricted to topoi or cartesian closed categories. By choosing appropriate instance categories, features such as missing values, multi-valued relations, and uncertainty can be added to conceptual data models. 
Abstract-found: 1
Intro-found: 1
Reference: [Abiteboul and Hull, 1987] <author> Abiteboul, S. and Hull, R. </author> <year> (1987). </year> <title> IFO: A Formal Semantic Database Model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(4) </volume> <pages> 525-565. </pages>
Reference-contexts: Complex application domains, such as hypermedia and CAD/CAM, have led to the introduction of advanced modeling concepts, such as those found in the various forms of Extended ER (see e.g. [Teory et al., 1986, Engels et al., 1992]), IFO <ref> [Abiteboul and Hull, 1987] </ref>, and object-role modeling extensions such as FORM [Halpin and Orlowska, 1992] and PSM [Hofstede and Weide, 1993]. Problem oriented data modeling techniques are usually referred to as conceptual data modeling techniques, a name which reflects an intention to abide by the Conceptualization Principle [Griethuysen, 1982].
Reference: [Adamek et al., 1990] <author> Adamek, J., Herlich, H., and Strecker, G. </author> <year> (1990). </year> <title> Abstract and Concrete Categories. Pure and applied mathematics. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, New York. </address>
Reference-contexts: A.1 The category Rel The objects in the category Rel are sets, and the arrows R: A ! B are binary relations such that dom R A and ran R B. Note that this category is different from a similar named category used by some other authors (e.g. <ref> [Adamek et al., 1990] </ref>) in which the objects themselves are relations. Definition A.1 1. dom R = fa j ha; bi 2 Rg 3. ID A = fha; ai j a 2 Ag 4. e R = fhb; ai j ha; bi 2 Rg 5. <p> For the equivalence refer to [Barr and Wells, 1990] and for the completeness refer to <ref> [Adamek et al., 1990] </ref>. 33 Lemma A.21 PartSet is a valid instance category.
Reference: [Avison and Fitzgerald, 1988] <author> Avison, D. and Fitzgerald, G. </author> <year> (1988). </year> <title> Information Systems Development: Methodologies, Techniques and Tools. </title> <publisher> Blackwell Scientific Publications, Oxford, </publisher> <address> United Kingdom. </address>
Reference-contexts: This emphasis on graphic representations has, however, a side-effect, building sound, formal foundations has been neglected. This lack of formal foundations in the field of information systems has led to a situation referred to as the "Methodology Jungle" <ref> [Avison and Fitzgerald, 1988] </ref>. In [Bubenko, 1986] it is estimated that during the past years, hundreds, if not thousands, of information system development methods have been introduced. Most organizations and research groups have defined their own methods. Hardly any of these has a formal syntax, let alone a formal semantics.
Reference: [Bachman, 1969] <author> Bachman, C. </author> <year> (1969). </year> <title> Data structure diagrams. </title> <journal> Data Base, </journal> <volume> 1(2) </volume> <pages> 4-10. </pages>
Reference-contexts: To improve this modeling process, data modeling techniques have been introduced. fl To whom correspondence should be addressed. 1 In the past decades, data modeling techniques have shifted from implementation oriented (such as the network model <ref> [Bachman, 1969] </ref> and the relational model [Codd, 1970]) to problem oriented.
Reference: [Baclawski et al., 1994] <author> Baclawski, K., Simovici, D., and White, W. </author> <year> (1994). </year> <title> A categorical approach to database semantics. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 4 </volume> <pages> 147-183. </pages>
Reference-contexts: For example if one wants to study uncertainty in a particular data modeling technique, it is natural to consider FuzzySet, the category of fuzzy sets, as an instance category. In this sense, the approach outlined is more general than approaches described in <ref> [Tuijn, 1994, Baclawski et al., 1994] </ref> where only topoi are possible instance categories. Interesting categories, such as Rel and FuzzySet [Pitts, 1982, Barr, 1986] are not topoi. Not every category can be used as instance category for data models. <p> The resulting model is similar to that of [Tuijn, 1994]. As a last advantage we should mention that the use of category theory has been very helpful in discovering the essence of concepts in conceptual data modeling. 26 7.1 Further research In <ref> [Tuijn, 1994, Baclawski et al., 1994] </ref> the standard relational database operations are defined using category theory constructs. These authors used topoi as instance categories. Even though the current framework uses simpler categories, it still appears possible to define most standard relational database operations.
Reference: [Barr, 1986] <author> Barr, M. </author> <year> (1986). </year> <title> Fuzzy sets and topos theory. </title> <journal> Canadian Mathematical Bulletin, </journal> <volume> 24 </volume> <pages> 501-508. </pages>
Reference-contexts: In this sense, the approach outlined is more general than approaches described in [Tuijn, 1994, Baclawski et al., 1994] where only topoi are possible instance categories. Interesting categories, such as Rel and FuzzySet <ref> [Pitts, 1982, Barr, 1986] </ref> are not topoi. Not every category can be used as instance category for data models. Appropriate categories should allow for certain constructions (e.g. coproducts should always be defined) and they should have certain special properties (e.g. coproducts have to be disjoint).
Reference: [Barr and Wells, 1990] <author> Barr, M. and Wells, C. </author> <year> (1990). </year> <title> Category Theory for Computing Science. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey. </address>
Reference-contexts: Definition 2.4 A subtype path P in a type graph G is a path in the subtype graph of G. 2 3 Mathematical Preliminaries This section introduces the mathematical terminology and notations, that are used in this paper. In general these are similar to those in <ref> [Barr and Wells, 1990] </ref>. This section also contains some category theory proofs that are used later on. 3.1 Basic definitions We start with some basic definitions and notations for some category theory properties. Iso-morphisms are very important in category theory. <p> Let D: G ! C be a diagram consisting of complementable monomorphisms. Then the colimit of D exists and its arrows are all complementable monomorphisms. Proof: All colimits can be constructed using the initial object and pushouts (e.g. see proposition 8.3.7 in <ref> [Barr and Wells, 1990] </ref>). The main proof goes by induction on this construction. The induction hypothesis is that all constructed arrows are complementable monomor-phisms. In the construction process two cases can be distinguished: * A pushout is constructed of two arrows from the initial object. <p> Although it has been omitted from this paper, it is possible to add these in a simple way to the type model. A more intriguing question is if it is possible to add arbitrary algebraic types, perhaps in a similar way to the "sketches" given in <ref> [Barr and Wells, 1990] </ref>. The current framework could also be extended to describe database updates and schema evolution. Acknowledgments We like to thank Miranda Aldham-Breary for improving the English of this paper. Comments by Paul Frederiks, Denis Verhoef, Hans Zantema, and Henk Barendregt are appreciated. <p> Proof: The proof is similar to that of lemma A.1. 2 Lemma A.12 An arrow R: A ! B in PartSet is an epimorphism iff it is a surjective total function. Proof: The proof is analogous to the proof of proposition 2.9.2 in <ref> [Barr and Wells, 1990] </ref>. 2 A.2.2 Limits and colimits Lemma A.13 The coproduct A + B in the category PartSet is equal to the disjoint sum (in Set) of A and B. <p> Let U be the set of equivalence classes modulo ~ R and let h: B ! U be the function that maps an element from B to its equivalence class. Then h is a coequalizer of f and g. Proof: See the proof of proposition 8.4.2 in <ref> [Barr and Wells, 1990] </ref>. 2 Lemma A.18 The equalizer in PartSet of two arrows f; g: A ! B is E = fa 2 A j f (jfagj) = g (jfagj)g and e: E ! A = ID E . <p> From the lemmas A.19, A.13, and A.17 we know that PartSet has an initial object, all sums and coequalizers, therefore it has all finite colimits. 2 This also follows from the equivalence between PartSet and the category pSet of pointed sets. For the equivalence refer to <ref> [Barr and Wells, 1990] </ref> and for the completeness refer to [Adamek et al., 1990]. 33 Lemma A.21 PartSet is a valid instance category.
Reference: [Brodie, 1984] <author> Brodie, M. </author> <year> (1984). </year> <title> On the development of data models. </title> <editor> In Brodie, M., My-lopoulos, J., and Schmidt, J., editors, </editor> <booktitle> On Conceptual Modelling, Perspectives from Artificial Intelligence, Databases and Programming Languages, </booktitle> <pages> pages 19-48. </pages> <publisher> Springer-Verlag, </publisher> <address> New York. </address>
Reference-contexts: Power typing corresponds to the notion of grouping as used in the IFO data model ([Abiteboul and Hull, 1987]), the notion of user-controllable grouping classes in SDM ([Hammer and McLeod, 1981]) and the notion of association in <ref> [Brodie, 1984] </ref>. A simple example of the application of power types can be found in the Convoy Problem ([Hammer and McLeod, 1981]), depicted in figure 5. In this diagram, the object type Convoy is a power type with element type Ship.
Reference: [Bubenko, 1986] <author> Bubenko, J. </author> <year> (1986). </year> <title> Information System Methodologies A Research View. </title> <editor> In Olle, T., Sol, H., and Verrijn-Stuart, A., editors, </editor> <booktitle> Information Systems Design Methodologies: Improving the Practice, </booktitle> <pages> pages 289-318. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands. </address>
Reference-contexts: This emphasis on graphic representations has, however, a side-effect, building sound, formal foundations has been neglected. This lack of formal foundations in the field of information systems has led to a situation referred to as the "Methodology Jungle" [Avison and Fitzgerald, 1988]. In <ref> [Bubenko, 1986] </ref> it is estimated that during the past years, hundreds, if not thousands, of information system development methods have been introduced. Most organizations and research groups have defined their own methods. Hardly any of these has a formal syntax, let alone a formal semantics.
Reference: [Chen, 1976] <author> Chen, P. </author> <year> (1976). </year> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36. </pages>
Reference-contexts: Some examples of problem oriented data modeling techniques are the Entity-Relationship Model (ER) and its many variants (see e.g. <ref> [Chen, 1976] </ref>), functional modeling techniques, such as FDM [Shipman, 1981], and object-role modeling techniques, such as NIAM [Nijssen and Halpin, 1989].
Reference: [Codd, 1970] <author> Codd, E. </author> <year> (1970). </year> <title> A Relational Model of Data for Large Shared Data Banks. </title> <journal> Communications of the ACM, </journal> <volume> 13(6) </volume> <pages> 377-387. </pages>
Reference-contexts: To improve this modeling process, data modeling techniques have been introduced. fl To whom correspondence should be addressed. 1 In the past decades, data modeling techniques have shifted from implementation oriented (such as the network model [Bachman, 1969] and the relational model <ref> [Codd, 1970] </ref>) to problem oriented. Some examples of problem oriented data modeling techniques are the Entity-Relationship Model (ER) and its many variants (see e.g. [Chen, 1976]), functional modeling techniques, such as FDM [Shipman, 1981], and object-role modeling techniques, such as NIAM [Nijssen and Halpin, 1989].
Reference: [Engels et al., 1992] <author> Engels, G., Gogolla, M., Hohenstein, U., Hulsmann, K., Lohr-Richter, P., Saake, G., and Ehrich, H.-D. </author> <year> (1992). </year> <title> Conceptual modelling of database applications using an extended ER model. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 9(4) </volume> <pages> 157-204. 35 </pages>
Reference-contexts: Complex application domains, such as hypermedia and CAD/CAM, have led to the introduction of advanced modeling concepts, such as those found in the various forms of Extended ER (see e.g. <ref> [Teory et al., 1986, Engels et al., 1992] </ref>), IFO [Abiteboul and Hull, 1987], and object-role modeling extensions such as FORM [Halpin and Orlowska, 1992] and PSM [Hofstede and Weide, 1993].
Reference: [Griethuysen, 1982] <author> Griethuysen, J. v., </author> <title> editor (1982). Concepts and Terminology for the Con--ceptual Schema and the Information Base. </title> <publisher> Publ. nr. ISO/TC97/SC5-N695. </publisher>
Reference-contexts: Problem oriented data modeling techniques are usually referred to as conceptual data modeling techniques, a name which reflects an intention to abide by the Conceptualization Principle <ref> [Griethuysen, 1982] </ref>. This principle states that data models should deal only and exclusively, with aspects of the problem domain. Any aspects irrelevant to that meaning should be avoided.
Reference: [Halpin and Orlowska, 1992] <author> Halpin, T. and Orlowska, M. </author> <year> (1992). </year> <title> Fact-oriented modelling for data analysis. </title> <journal> Journal of Information Systems, </journal> <volume> 2(2) </volume> <pages> 97-119. </pages>
Reference-contexts: Complex application domains, such as hypermedia and CAD/CAM, have led to the introduction of advanced modeling concepts, such as those found in the various forms of Extended ER (see e.g. [Teory et al., 1986, Engels et al., 1992]), IFO [Abiteboul and Hull, 1987], and object-role modeling extensions such as FORM <ref> [Halpin and Orlowska, 1992] </ref> and PSM [Hofstede and Weide, 1993]. Problem oriented data modeling techniques are usually referred to as conceptual data modeling techniques, a name which reflects an intention to abide by the Conceptualization Principle [Griethuysen, 1982].
Reference: [Hammer and McLeod, 1981] <author> Hammer, M. and McLeod, D. </author> <year> (1981). </year> <title> Database Description with SDM: A Semantic Database Model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(3) </volume> <pages> 351-386. </pages>
Reference: [Hofstede et al., 1993] <author> Hofstede, A. t., Proper, H., and Weide, T. v. d. </author> <year> (1993). </year> <title> Formal definition of a conceptual language for the description and manipulation of information models. </title> <journal> Information Systems, </journal> <volume> 18(7) </volume> <pages> 489-523. </pages>
Reference-contexts: The graphical representations of one technique, PSM <ref> [Hofstede and Weide, 1993, Hofstede et al., 1993] </ref>, will be employed, to avoid as much confusion as possible. PSM is sufficiently general for this purpose as it seems to contain all the essential concepts needed for conceptual data modeling.
Reference: [Hofstede and Weide, 1993] <author> Hofstede, A. t. and Weide, T. v. d. </author> <year> (1993). </year> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100. </pages>
Reference-contexts: and CAD/CAM, have led to the introduction of advanced modeling concepts, such as those found in the various forms of Extended ER (see e.g. [Teory et al., 1986, Engels et al., 1992]), IFO [Abiteboul and Hull, 1987], and object-role modeling extensions such as FORM [Halpin and Orlowska, 1992] and PSM <ref> [Hofstede and Weide, 1993] </ref>. Problem oriented data modeling techniques are usually referred to as conceptual data modeling techniques, a name which reflects an intention to abide by the Conceptualization Principle [Griethuysen, 1982]. This principle states that data models should deal only and exclusively, with aspects of the problem domain. <p> The graphical representations of one technique, PSM <ref> [Hofstede and Weide, 1993, Hofstede et al., 1993] </ref>, will be employed, to avoid as much confusion as possible. PSM is sufficiently general for this purpose as it seems to contain all the essential concepts needed for conceptual data modeling.
Reference: [Jones, 1986] <author> Jones, C. </author> <year> (1986). </year> <title> Systematic Software Development using VDM. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey. </address>
Reference-contexts: This is the reason why conceptual data modeling techniques offer graphical representations of their underlying concepts: as this facilitates understanding of the models. A lack of graphic representation, and the lack of certain specialized concepts, explains why formal specification languages, such as Z [Spivey, 1988] and VDM <ref> [Jones, 1986] </ref>, never gained much popularity in this particular field of study. This emphasis on graphic representations has, however, a side-effect, building sound, formal foundations has been neglected.
Reference: [Kim and Lochovsky, 1989] <editor> Kim, W. and Lochovsky, F., editors (1989). </editor> <title> Object-Oriented Concepts, Databases, and Applications. </title> <publisher> ACM Press, Frontier Series. Addison-Wesley, </publisher> <address> Reading, Massachusetts. </address>
Reference-contexts: This implies that two 25 persons with the same name must have different numbers, which was indeed the requirement we tried to express. In several object-oriented databases <ref> [Kim and Lochovsky, 1989, Zdonik and Maier, 1990] </ref>, objects can have multi-valued (or set-valued) attributes. This means that the value of an attribute can be a (possibly empty) set of attribute values. Models in the category Rel can be used to model this behavior.
Reference: [Nijssen and Halpin, 1989] <author> Nijssen, G. and Halpin, T. </author> <year> (1989). </year> <title> Conceptual Schema and Relational Database Design: a fact oriented approach. </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia. </address>
Reference-contexts: Some examples of problem oriented data modeling techniques are the Entity-Relationship Model (ER) and its many variants (see e.g. [Chen, 1976]), functional modeling techniques, such as FDM [Shipman, 1981], and object-role modeling techniques, such as NIAM <ref> [Nijssen and Halpin, 1989] </ref>.
Reference: [Pitts, 1982] <author> Pitts, A. </author> <year> (1982). </year> <title> Fuzzy sets do not form a topos. </title> <journal> Fuzzy Sets and Systems, </journal> <volume> 8 </volume> <pages> 101-104. </pages>
Reference-contexts: In this sense, the approach outlined is more general than approaches described in [Tuijn, 1994, Baclawski et al., 1994] where only topoi are possible instance categories. Interesting categories, such as Rel and FuzzySet <ref> [Pitts, 1982, Barr, 1986] </ref> are not topoi. Not every category can be used as instance category for data models. Appropriate categories should allow for certain constructions (e.g. coproducts should always be defined) and they should have certain special properties (e.g. coproducts have to be disjoint).
Reference: [Shipman, 1981] <author> Shipman, D. </author> <year> (1981). </year> <title> The Functional Data Model and the Data Language DAPLEX. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 6(1) </volume> <pages> 140-173. </pages>
Reference-contexts: Some examples of problem oriented data modeling techniques are the Entity-Relationship Model (ER) and its many variants (see e.g. [Chen, 1976]), functional modeling techniques, such as FDM <ref> [Shipman, 1981] </ref>, and object-role modeling techniques, such as NIAM [Nijssen and Halpin, 1989].
Reference: [Siebes, 1990] <author> Siebes, A. </author> <year> (1990). </year> <title> On Complex Objects. </title> <type> PhD thesis, </type> <institution> University of Twente, Enschede, The Netherlands. </institution>
Reference-contexts: The nodes of the graph correspond to the object types and the labeled arrows determine the way they participate in the various constructions. The notion of a type graph presented in the following definition can be compared to the definitions presented in <ref> [Siebes, 1990] </ref> and [Tuijn, 1994]. The set of nodes of a graph G is denoted as G 0 and its edges as G 1 . The source of an edge e: A ! B is denoted source (e) = A, and the target as target (e) = B.
Reference: [Spivey, 1988] <author> Spivey, J. </author> <year> (1988). </year> <title> Understanding Z: A Specification Language and its Formal Semantics. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, United Kingdom. </address>
Reference-contexts: This is the reason why conceptual data modeling techniques offer graphical representations of their underlying concepts: as this facilitates understanding of the models. A lack of graphic representation, and the lack of certain specialized concepts, explains why formal specification languages, such as Z <ref> [Spivey, 1988] </ref> and VDM [Jones, 1986], never gained much popularity in this particular field of study. This emphasis on graphic representations has, however, a side-effect, building sound, formal foundations has been neglected.
Reference: [Teory et al., 1986] <author> Teory, T., Yang, D., and Fry, J. </author> <year> (1986). </year> <title> A logical design methodology for relational databases using the extended entity-relationship model. </title> <journal> Computing Survey, </journal> <volume> 18(2) </volume> <pages> 197-222. </pages>
Reference-contexts: Complex application domains, such as hypermedia and CAD/CAM, have led to the introduction of advanced modeling concepts, such as those found in the various forms of Extended ER (see e.g. <ref> [Teory et al., 1986, Engels et al., 1992] </ref>), IFO [Abiteboul and Hull, 1987], and object-role modeling extensions such as FORM [Halpin and Orlowska, 1992] and PSM [Hofstede and Weide, 1993].
Reference: [Tuijn, 1994] <author> Tuijn, C. </author> <year> (1994). </year> <title> Data Modeling from a Categorical Perspective. </title> <type> PhD thesis, </type> <institution> University of Antwerpen, </institution> <address> Antwerpen, Belgium. </address>
Reference-contexts: For example if one wants to study uncertainty in a particular data modeling technique, it is natural to consider FuzzySet, the category of fuzzy sets, as an instance category. In this sense, the approach outlined is more general than approaches described in <ref> [Tuijn, 1994, Baclawski et al., 1994] </ref> where only topoi are possible instance categories. Interesting categories, such as Rel and FuzzySet [Pitts, 1982, Barr, 1986] are not topoi. Not every category can be used as instance category for data models. <p> The nodes of the graph correspond to the object types and the labeled arrows determine the way they participate in the various constructions. The notion of a type graph presented in the following definition can be compared to the definitions presented in [Siebes, 1990] and <ref> [Tuijn, 1994] </ref>. The set of nodes of a graph G is denoted as G 0 and its edges as G 1 . The source of an edge e: A ! B is denoted source (e) = A, and the target as target (e) = B. <p> The value of this subtype attribute arrow in the type model is the composition of the original attribute arrow with the subtype arrow from the subtype to the supertype. The resulting model is similar to that of <ref> [Tuijn, 1994] </ref>. <p> The resulting model is similar to that of [Tuijn, 1994]. As a last advantage we should mention that the use of category theory has been very helpful in discovering the essence of concepts in conceptual data modeling. 26 7.1 Further research In <ref> [Tuijn, 1994, Baclawski et al., 1994] </ref> the standard relational database operations are defined using category theory constructs. These authors used topoi as instance categories. Even though the current framework uses simpler categories, it still appears possible to define most standard relational database operations.
Reference: [Zdonik and Maier, 1990] <author> Zdonik, S. and Maier, D., </author> <title> editors (1990). Readings in Object Oriented Database Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Marcos, California. </address> <month> 36 </month>
Reference-contexts: This implies that two 25 persons with the same name must have different numbers, which was indeed the requirement we tried to express. In several object-oriented databases <ref> [Kim and Lochovsky, 1989, Zdonik and Maier, 1990] </ref>, objects can have multi-valued (or set-valued) attributes. This means that the value of an attribute can be a (possibly empty) set of attribute values. Models in the category Rel can be used to model this behavior.
References-found: 27

