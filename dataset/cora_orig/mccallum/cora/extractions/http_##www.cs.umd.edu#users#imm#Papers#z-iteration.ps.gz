URL: http://www.cs.umd.edu/users/imm/Papers/z-iteration.ps.gz
Refering-URL: http://www.cs.umd.edu/users/imm/publications.html
Root-URL: 
Email: imm@cs.umd.edu shankar@cs.umd.edu  
Title: Z-Iteration: A Simple Method for Throughput Estimation in Time-Dependent Multi-Class Systems  
Author: Ibrahim Matta A. Udaya Shankar 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: Multiple-class multiple-resource (MCMR) systems, where each class of customers requires a particular set of resources, are common. These systems are often analyzed under steady-state conditions. We describe a simple method, referred to as Z-iteration, to estimate both transient and steady-state performances of such systems. The method makes use of results and techniques available from queueing theory, network analysis, dynamic flow theory, and numerical analysis. We show the generality of the Z-iteration by applying it to an ATM network, a parallel disk system, and a distributed batch system. Validations against discrete-event simulations show the accuracy and computational advantages of the Z-iteration. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J-C. Bolot and A.U. Shankar. </author> <title> Analysis of a fluid approximation to flow control dynamics. </title> <booktitle> In IEEE INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Such models involve partial differential equations and are usually intractable. A third approach is that of fluid models, which utilize average quantities only <ref> [1] </ref>. Such models involve ordinary differential equations and are usually tractable.
Reference: [2] <author> H. Chen and A. Mandelbaum. </author> <title> Discrete flow networks: Diffusion approximations and bottlenecks. </title> <journal> Annals of Probability, </journal> <volume> 19(4) </volume> <pages> 1463-1519, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: One such approach is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [27], and com-putationally expensive to solve numerically [26]; A second approach is that of diffusion models, which utilize averages and variances <ref> [2, 23] </ref>. Such models involve partial differential equations and are usually intractable. A third approach is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable.
Reference: [3] <author> S-P. Chung and K. Ross. </author> <title> Reduced load approximations for multirate loss networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 41(8) </volume> <pages> 1222-1231, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [4] <author> D. DeWitt and J. Gray. </author> <title> Parallel database systems: The future of high performance database systems. </title> <journal> CACM, </journal> <volume> 35(6) </volume> <pages> 85-98, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The tandem network is used by several multi-hop connections representing main traffic, and several one-hop connections representing cross-traffic. 4 Application: Parallel Disk System Consider a system of multiple disks on which data is partitioned according to some scheme, e.g. round-robin, range partitioning, etc. <ref> [4] </ref>. Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. This parallelism typically leads to reduction in data access time [4, 13]. <p> Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. This parallelism typically leads to reduction in data access time <ref> [4, 13] </ref>. The collection of disks needed by a query is defined by the query's class. We assume an arriving query requires one unit of space in the queue of each disk it needs to access. <p> ing, we have 1 T r N r 1 + c 0 2C r N r Therefore, in the transient regime, we have T r N r 1 + c 0 2C r N r The above model can be used to study various data partitioning schemes for high-performance indexing <ref> [4] </ref>. Systems with single-server resources are validated (against discrete-event simulations) in Section 7. 5 Application: Distributed Batch System Consider a distributed batch system such as Condor [19]. Batch jobs (user programs) are submitted to a central manager (CM).
Reference: [5] <author> Z. Dziong and J. Roberts. </author> <title> Congestion probabilities in a circuit-switched integrated services network. Performance Evaluation, </title> <booktitle> 7 </booktitle> <pages> 267-284, </pages> <year> 1987. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [6] <author> J. Filipiak. </author> <title> Modeling and Control of Dynamic Flows in Communication Networks. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: MCMR systems have often been analyzed under steady-state conditions (e.g. [12, 14, 20, 5, 25, 3, 22, 10]). In this paper, we formulate a dynamic flow model <ref> [6] </ref> to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. Our solution method The generality and time-dependency of our model seem to preclude analytical closed-form solutions. <p> These two steady-state results are available for a variety of MCSR systems, including self-service systems where the customer is also the server, and single- or multiple-server queueing systems <ref> [17, 6] </ref>. We point out that the expressions do not have to be closed form and can be implicit. We make use of the concept of instantaneous fictitious offered load, originally introduced in [7], to obtain instantaneous versions of the above expressions. <p> Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. [12, 14, 20, 5, 25, 3, 22, 10]). In this paper, we formulated a dynamic flow model <ref> [6] </ref> to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying average behavior of a general MCMR system. <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity <ref> [7, 6, 26, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15]. We have shown the generality and validity of the Z-iteration by applying it to three systems, namely, an ATM network, a parallel disk system, and a distributed batch system.
Reference: [7] <author> F. Le Gall and J. Bernussou. </author> <title> An analytical formulation for grade of service determination in telephone networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-31(3):420-424, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: We point out that the expressions do not have to be closed form and can be implicit. We make use of the concept of instantaneous fictitious offered load, originally introduced in <ref> [7] </ref>, to obtain instantaneous versions of the above expressions. <p> To obtain the instantaneous admission rates, we adapt steady-state queueing formulas to yield the instantaneous blocking probability of each class in terms of instantaneous fictitious offered loads. The concept of fictitious offered load was originally introduced in <ref> [7] </ref>, where it was used to obtain steady-state blocking probability and carried load for a specific call routing and network topology. Reference [7] considered a network of source nodes, destination nodes, and intermediate nodes, with a link from every source node to every intermediate node, and a link from every intermediate <p> The concept of fictitious offered load was originally introduced in <ref> [7] </ref>, where it was used to obtain steady-state blocking probability and carried load for a specific call routing and network topology. Reference [7] considered a network of source nodes, destination nodes, and intermediate nodes, with a link from every source node to every intermediate node, and a link from every intermediate node to every destination node. Each link can carry a fixed total number of calls. <p> The call routing is not dynamic; a fixed fraction of the call arrivals is routed through every intermediate node. In addition, overflow traffic (due to blocking links) is routed through alternate available routes (from equation (15) in <ref> [7] </ref>, it appears that overflow from a blocking link is duplicated on all alternate available routes). Each call, once admitted, has an exponential holding time of fixed mean that is the same for all calls. <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity <ref> [7, 6, 26, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15]. We have shown the generality and validity of the Z-iteration by applying it to three systems, namely, an ATM network, a parallel disk system, and a distributed batch system.
Reference: [8] <author> M.R. </author> <title> Garzia and C.M. Lockhart. Nonhierarchical communications networks: An application of compartmental modeling. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 37 </volume> <pages> 555-564, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: This is not, in general, true since the composite traffic contains blocked batch jobs returned immediately at the next time step to the system for retry. This assumption is less restrictive if blocked batch jobs are returned to the system after waiting an independent random period <ref> [22, 8] </ref>. This waiting effect can be easily incorporated into the above model. <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity <ref> [7, 6, 26, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15]. We have shown the generality and validity of the Z-iteration by applying it to three systems, namely, an ATM network, a parallel disk system, and a distributed batch system.
Reference: [9] <author> A. Girard. </author> <title> Routing and Dimensioning in Circuit-Switched Networks. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1990. </year>
Reference-contexts: The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique <ref> [16, 9] </ref>; the dynamic flow technique used for approximating system dynamics and nonlinearity [7, 6, 26, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15].
Reference: [10] <author> A. Greenberg and P. Wright. </author> <title> Design and analysis of master/slave multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(8) </volume> <pages> 963-976, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [11] <author> R. Guerin, H. Ahmadi, and M. Naghshineh. </author> <title> Equivalent capacity and its application to bandwidth allocation in high-speed networks. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> SAC-9(7):968-981, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: This reservation amount can be thought of as either the peak transmission rate of the connection or its "effective bandwidth" <ref> [11] </ref> varying between its peak and average transmission rates. The set R c of a class-c connection would thus contain the links along the route of class c. The instantaneous arrival rate of class-c connections of service i, c (t), is a function of i and the routing algorithm.
Reference: [12] <author> S. Jordan and P. Varaiya. </author> <title> Throughput in multiple service, multiple resource communication networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 39(8) </volume> <pages> 1216-1222, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [13] <author> I. Kamel and C. Faloutsos. </author> <title> Parallel R-trees. </title> <booktitle> In ACM SIG-MOD, </booktitle> <pages> pages 195-204, </pages> <address> San Diego, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. This parallelism typically leads to reduction in data access time <ref> [4, 13] </ref>. The collection of disks needed by a query is defined by the query's class. We assume an arriving query requires one unit of space in the queue of each disk it needs to access.
Reference: [14] <author> F.P. Kelly. </author> <title> Blocking probabilities in large circuit-switched networks. </title> <journal> Adv. Appl. Prob., </journal> <volume> 18 </volume> <pages> 473-505, </pages> <year> 1986. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying average behavior of a general MCMR system. We use the well-known decomposition technique <ref> [16, 14] </ref> to approximate the system as a collection of MCSR systems. For each MCSR system, we describe the evolution of the instantaneous average number of customers of each class by relating its instantaneous admission rate to its instantaneous departure rate.
Reference: [15] <author> D. Kincaid and W. </author> <title> Cheney. Numerical Analysis: Mathematics of Scientific Computing. </title> <publisher> Brooks/Cole Publishing Company, </publisher> <year> 1991. </year>
Reference-contexts: The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity [7, 6, 26, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations <ref> [15] </ref>. We have shown the generality and validity of the Z-iteration by applying it to three systems, namely, an ATM network, a parallel disk system, and a distributed batch system. Future work remains to carry out further validations and detailed evaluation of such systems.
Reference: [16] <author> L. Kleinrock. </author> <title> Communication Nets: Stochastic Message Flow and Delay. </title> <address> New York: McGraw Hill, </address> <year> 1964. </year>
Reference-contexts: We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying average behavior of a general MCMR system. We use the well-known decomposition technique <ref> [16, 14] </ref> to approximate the system as a collection of MCSR systems. For each MCSR system, we describe the evolution of the instantaneous average number of customers of each class by relating its instantaneous admission rate to its instantaneous departure rate. <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique <ref> [16, 9] </ref>; the dynamic flow technique used for approximating system dynamics and nonlinearity [7, 6, 26, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15].
Reference: [17] <author> L. Kleinrock. </author> <title> Queueing Systems, volume I and II. </title> <address> New York: </address> <publisher> Wiley, </publisher> <year> 1976. </year>
Reference-contexts: These two steady-state results are available for a variety of MCSR systems, including self-service systems where the customer is also the server, and single- or multiple-server queueing systems <ref> [17, 6] </ref>. We point out that the expressions do not have to be closed form and can be implicit. We make use of the concept of instantaneous fictitious offered load, originally introduced in [7], to obtain instantaneous versions of the above expressions. <p> Let each admitted customer be served by one of the m servers for an average duration of 1= r c . Then S r c is the Erlang-B formula, i.e. S r c = E ( c ; m) = r c P m r c <ref> [17] </ref>: The instantaneous version of (1) is obtained by replacing B r c (t) and r by z r c 0 (t), yielding B c (t) = S c (fz c 0 (t) : c 2 C r g) for c 2 C r (2) Details of step 8 The second <p> This steady-state solution is well-known for the M=M=1=r.max queueing system, in particular, for c 2 C r : B c = P r ) r.max j=0 ( c 0 2C r c 0 <ref> [17] </ref> This steady-state solution can be used in equations (2) after replacing P r by c 0 2C r z r We employ the technique introduced in Section 2 to derive the function T r c (:) used in equations (4). <p> As suming steady-state and no blocking, we can treat the M=M=1=r.max system of r as an M=M=1=1 system. At steady-state, we know that <ref> [17] </ref> N c = r c 0 2C r c 0 From this and T r c (:) = c r , which holds assuming no block ing, we have 1 T r N r 1 + c 0 2C r N r Therefore, in the transient regime, we have T <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques <ref> [17] </ref>; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity [7, 6, 26, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15].
Reference: [18] <author> S. Leutenegger and X-H. Sun. </author> <title> Distributed computing feasibility in a non-dedicated homogeneous distributed system. </title> <booktitle> In Supercomputing '93, </booktitle> <month> November </month> <year> 1993. </year>
Reference-contexts: Otherwise, it is admitted for processing with mean processing time of 1= r c (t). This processing time includes the time during which the batch job is suspended due to owner processes <ref> [18] </ref>.
Reference: [19] <author> M. Litzkow, M. Livny, and M. </author> <title> Mutka. Condor ahunter of idle workstations. </title> <booktitle> In 8th International Conference on Distributed Computing Systems, </booktitle> <address> San Jose, CA, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Systems with single-server resources are validated (against discrete-event simulations) in Section 7. 5 Application: Distributed Batch System Consider a distributed batch system such as Condor <ref> [19] </ref>. Batch jobs (user programs) are submitted to a central manager (CM). Assume batch jobs of type i arrive to the CM according to a Poisson process of rate i .
Reference: [20] <author> G. Louth, M. Mitzenmacher, and F.P. Kelly. </author> <title> Computational complexity of loss networks. </title> <journal> Theoretical Computer Science, </journal> <volume> 125 </volume> <pages> 45-59, </pages> <year> 1994. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [21] <author> W. Lovegrove, J. Hammond, and D. Tipper. </author> <title> Simulation methods for studying nonstationary behavior of computer networks. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> 8(9) </volume> <pages> 1696-1708, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Then, the mean value of this measure at particular time instant t k is estimated as P N where N is the total number of replications. The larger N is, the more accurate the simulation estimates are <ref> [21] </ref>. In our simulations, the performance measures are periodically computed at t = 1; 2; 3; . The measures considered are precisely defined as they are introduced below. In all experiments, we start with empty systems.
Reference: [22] <author> D. Mitra and P. Weinberger. </author> <title> Probabilistic models of database locking: Solutions, computational algorithms, and asymptotics. </title> <journal> J. ACM, </journal> <volume> 31(4) </volume> <pages> 855-878, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> This is not, in general, true since the composite traffic contains blocked batch jobs returned immediately at the next time step to the system for retry. This assumption is less restrictive if blocked batch jobs are returned to the system after waiting an independent random period <ref> [22, 8] </ref>. This waiting effect can be easily incorporated into the above model. <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [23] <author> A. Mukherjee and J.C. Strikwerda. </author> <title> Analysis of dynamic congestion control protocols: A fokker-plank approach. </title> <booktitle> In ACM SIGCOMM '91, </booktitle> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: One such approach is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [27], and com-putationally expensive to solve numerically [26]; A second approach is that of diffusion models, which utilize averages and variances <ref> [2, 23] </ref>. Such models involve partial differential equations and are usually intractable. A third approach is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable.
Reference: [24] <author> K. Ogata. </author> <title> Discrete-Time Control Systems. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1987. </year>
Reference-contexts: Even if the system has a unique solu tion, the iteration may not converge to it and rather oscillate between different values. Although sufficient conditions for convergence can be obtained with techniques such as the control-theoretic Liapunov method <ref> [24] </ref>, they are very difficult to obtain even for moderately complex systems. Despite the lack of analytical results, our numerical computations indicate that the iteration converges quickly in many practical situations (see Sections 6 and 7).
Reference: [25] <author> J. Roberts. </author> <title> A service system with heterogeneous user requirements application to multi-services telecommunications systems. </title> <booktitle> In Performance of Data Communications Systems and Their Applications, </booktitle> <pages> pages 423-431. </pages> <editor> G. Pujolle (Editor). </editor> <publisher> North-Holland Publishing Company, </publisher> <year> 1981. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulate a dynamic flow model [6] to account for transient conditions as well. We solve our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures. <p> Let the state of r indicate the amount of bandwidth allocated. Thus, F r = f0; 1; ; r.maxg. Let Q r (j) denote the steady-state probability of r being in state j. Then Q r (:) satisfies the following recurrence relation <ref> [25] </ref>: j Q (j) = c 0 2C r r c :r:req Q (j c :r:req) where P r.max The steady-state blocking probability for class-c connec tions at r, B r c , is given by B c = j=r.maxc.r.req+1 Q (j) This steady-state solution, which defines S r c (:) <p> Time-varying arrivals. 0 0.04 0.08 0.12 0.16 Blocking probability Time BLOCKING PROBABILITY vs Time Simulation (20000 runs) Z-Iteration with single-server resources. Time-varying arrivals. 8 Related Work MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [12, 14, 20, 5, 25, 3, 22, 10] </ref>). In this paper, we formulated a dynamic flow model [6] to account for transient conditions as well. We solved our model by an iteration that differs from iterations used in steady-state analysis, which only solve for steady-state measures.
Reference: [26] <editor> D. Tipper and M.K. Sundareshan. </editor> <title> Numerical methods for modeling computer networks under nonstationary conditions. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> 8(9) </volume> <pages> 1682-1695, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: To obtain the instantaneous departure rates, we again adapt steady-state queueing formulas to yield the instantaneous average number of in-service customers of each class in terms of the instantaneous average numbers of customers waiting and in service. The same technique was used in <ref> [26] </ref>, where feedforward queueing networks were considered. Each service center is an M=M=1 infinite FCFS queue with the same average service time for all classes. The routing of each class is a time-dependent Bernoulli process. <p> Our approach has advantages over other approaches that might be used to analyze transient behaviors. One such approach is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [27], and com-putationally expensive to solve numerically <ref> [26] </ref>; A second approach is that of diffusion models, which utilize averages and variances [2, 23]. Such models involve partial differential equations and are usually intractable. A third approach is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable. <p> The Z-iteration integrates techniques from several areas, including standard queueing theory techniques [17]; the resource decomposition technique [16, 9]; the dynamic flow technique used for approximating system dynamics and nonlinearity <ref> [7, 6, 26, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [15]. We have shown the generality and validity of the Z-iteration by applying it to three systems, namely, an ATM network, a parallel disk system, and a distributed batch system.
Reference: [27] <author> S. Tripathi and A. Duda. </author> <title> Time-dependent analysis of queueing systems. </title> <journal> INFOR, </journal> <volume> 24(3) </volume> <pages> 199-219, </pages> <year> 1986. </year>
Reference-contexts: Our approach has advantages over other approaches that might be used to analyze transient behaviors. One such approach is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically <ref> [27] </ref>, and com-putationally expensive to solve numerically [26]; A second approach is that of diffusion models, which utilize averages and variances [2, 23]. Such models involve partial differential equations and are usually intractable. A third approach is that of fluid models, which utilize average quantities only [1].
References-found: 27

