URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/ORMKern.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: erikp@cs.kun.nl  
Title: A Unifying Object Role Modelling Theory  
Author: S.J. Brouwer C.L.J. Martens G.H.W.M. Bronts H.A. Proper 
Date: December 24, 1993  
Address: Toernooiveld 6525 ED Nijmegen The Netherlands  
Affiliation: Computing Science Institute University of Nijmegen  
Abstract: Published as: S.J. Brouwer, C.L.J. Martens, G.H.W.M. Bronts, and H.A. Proper. A Unifying Object Role Modelling Approach. Technical Report, to appear, Computing Science Institute, University of Nijmegen, The Netherlands, 1994. Abstract This article presents the idea of defining a kernel for object role modelling techniques, upon which different drawing styles can be based. We propose such a kernel (the ORM kernel) and define, as a case study, an ER and a NIAM drawing style on top of it. One of the prominent advantages of such a kernel is the possibility to build a CASE-tool supporting multiple methods. Such a CASE-tool would allow users with different methodological backgrounds to use it and view the modelled domains in terms of their favourite method. This is illustrated using a running example of a concrete domain in which we use the ORM kernel in combination with the NIAM and ER drawing style.
Abstract-found: 1
Intro-found: 1
Reference: [AF88] <author> D.E. Avison and G. Fitzgerald. </author> <title> Information Systems Development: Methodologies, 21 Techniques and Tools. </title> <publisher> Blackwell Scientific Publications, Oxford, </publisher> <address> United Kingdom, </address> <year> 1988. </year>
Reference: [AH87] <author> S. Abiteboul and R. Hull. </author> <title> IFO: A Formal Semantic Database Model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(4) </volume> <pages> 525-565, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: <ref> [AH87] </ref>. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. Even if there are fundamental differences, most modelling techniques have more common than differing aspects. <p> Therefore, a decision criterion as in the case of specialisation (the subtype defining rule) is not necessary. Furthermore, properties are inherited "upward" in a generalisation hierarchy instead of "downward", which is the case for specialisation (see also <ref> [AH87] </ref>). This also implies that the identification of a generalised object type depends on the identification of its specifiers. From the nature of generalisation, it is apparent that a non-entity type cannot be a generalised object type. The concept of generalisation is introduced as a partial order Gen.
Reference: [BHW91] <author> P. van Bommel, A.H.M. ter Hofstede, and Th.P. van der Weide. </author> <title> Semantics and verification of object-role models. </title> <journal> Information Systems, </journal> <volume> 16(5) </volume> <pages> 471-495, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], <ref> [BHW91] </ref>, [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. <p> This figure also illustrates the possibility of using the textual language LISA-D ([HPW93], [HPW92]) as a way to represent models. A further advantage of using a common ORM kernel is that research results based on this kernel may apply to all variants based on the kernel. In <ref> [BHW91] </ref> and [Hof93], theoretical results concerning identifiability of object types and populatability of data models are presented, which directly apply to the ORM kernel. Schema evolution of data models conforming to the ORM kernel is treated in [PW93].
Reference: [Bro93a] <author> G.H.W.M. Bronts. </author> <title> Formalization of an Object Model. </title> <type> Master's thesis, </type> <institution> University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1993. </year>
Reference-contexts: Furthermore, the completeness of the ORM kernel should be validated. e.g. can object oriented data models be `linked' into the kernel. The ORM kernel further illustrates that there is little difference in the way of modelling of ER and NIAM (more extensive comparisons can be found in <ref> [Bro93a] </ref>, [Mar93] and [Bro93b]).
Reference: [Bro93b] <author> S.J. Brouwer. </author> <title> PSM vs `the rest of the world', Vergelijking tussen ER en PSM. </title> <type> Master's thesis, </type> <institution> University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1993. </year> <note> (In Dutch). </note>
Reference-contexts: The ORM kernel further illustrates that there is little difference in the way of modelling of ER and NIAM (more extensive comparisons can be found in [Bro93a], [Mar93] and <ref> [Bro93b] </ref>). The main difference between ER and NIAM lies in their respective ways of working, any research concerned with the underlying way of modelling is interchangeable between both `worlds'. 20 construct symbol x Gen y s 2 S Table 7: Relation between the ORM constructs and the PSM symbols
Reference: [Bub86] <author> J.A. Bubenko. </author> <title> Information System Methodologies A Research View. </title> <editor> In T.W. Olle, H.G. Sol, and A.A. Verrijn-Stuart, editors, </editor> <booktitle> Information Systems Design Methodologies: Improving the Practice, </booktitle> <pages> pages 289-318. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1986. </year>
Reference-contexts: 1 Introduction In the last decades, a plethora of modelling techniques for the design of information systems has been developed (see e.g. <ref> [Bub86] </ref>). In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]).
Reference: [BW92] <author> P. van Bommel and Th.P. van der Weide. </author> <title> Reducing the search space for conceptual schema transformation. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 8 </volume> <pages> 269-292, </pages> <year> 1992. </year>
Reference-contexts: Schema evolution of data models conforming to the ORM kernel is treated in [PW93]. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in <ref> [BW92] </ref>, [Hal91] and [Hal92]. Finally, in [HPW93] and [HPW92] the query language LISA-D is presented, which allows for the formulation of queries in a semi-natural language format, closely following the naming conventions in the data model. The LISA-D language directly applies for data models conforming to the ORM kernel.
Reference: [Che76] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: <ref> [Che76] </ref>, [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. <p> Some of such extra rules are discussed in this section. We do not intend to be elaborate, but rather try to give an idea of such extra rules. 3.3.1 Pure ER The ER model presented in <ref> [Che76] </ref>, does not deal with constructs like power typing, sequence typing and schema typing. <p> In this article we will use the name pure ER for the modelling technique which was introduced in <ref> [Che76] </ref>. Taking this technique as a base, we will define ER + by adding new symbols, part of which are taken from the EER technique as presented in [EGH + 92]. 4.1 Pure ER As stated before, pure ER stands for the technique introduced in [Che76]. <p> technique which was introduced in <ref> [Che76] </ref>. Taking this technique as a base, we will define ER + by adding new symbols, part of which are taken from the EER technique as presented in [EGH + 92]. 4.1 Pure ER As stated before, pure ER stands for the technique introduced in [Che76]. In this technique the following ORM constructs can be identified: entity types, fact types, predicators, label types and bridge types. In table 1 these constructs and their pure ER representation are given. <p> In table 1 these constructs and their pure ER representation are given. For instance, an atomic non-label type (entity type) is represented as a rectangle, and an bridge type (attribute type) is represented by a line between the abstract part and the concrete part of the bridge type. Although <ref> [Che76] </ref> does not give a graphical notation for attributes (bridge types), we will consider the notation shown in table 1 to be pure ER.
Reference: [De 91] <author> O.M.F. De Troyer. </author> <title> The OO-Binary Relationship Model: A Truly Object Oriented Conceptual Model. </title> <editor> In R. Andersen, J.A. Bubenko, and A. Stlvberg, editors, </editor> <booktitle> Proceedings of the Third International Conference CAiSE'91 on Advanced Information Systems Engineering, volume 498 of Lecture Notes in Computer Science, </booktitle> <pages> pages 561-578, </pages> <address> Trondheim, Norway, May 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], <ref> [De 91] </ref>, [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [DMV88] <author> O.M.F. De Troyer, R. Meersman, and P. Verlinden. </author> <title> RIDL* on the CRIS Case: A Workbench for NIAM. </title> <editor> In T.W. Olle, A.A. Verrijn-Stuart, and L. Bhabuta, editors, </editor> <booktitle> Computerized Assistance during the Information Systems Life Cycle, </booktitle> <pages> pages 375 - 459, </pages> <address> Amsterdam, The Netherlands, </address> <year> 1988. </year> <month> North-Holland/IFIP. </month>
Reference-contexts: Since the identification hierarchy, and thus the specialisation hierarchy, is non-cyclic and finite, roots can be identified. For specialisation, these roots are referred to as pater familias (see <ref> [DMV88] </ref>), and are identified by: u (x; y) , (x Spec y _ x = y) ^ : spec (y) where spec (x) is a shorthand for 9 y [x Spec y]. Each specialisation hierarchy, contrary to generalisation, has a unique top element.
Reference: [EGH + 92] <author> G. Engels, M. Gogolla, U. Hohenstein, K. Hulsmann, P. Lohr-Richter, G. Saake, and H-D. Ehrich. </author> <title> Conceptual modelling of database applications using an extended ER model. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 9(4) </volume> <pages> 157-204, </pages> <year> 1992. </year>
Reference-contexts: It is our believe that the basis of an information modelling method or technique is formed by its way of modelling. To illustrate the elegance of the ORM kernel concept, we present the ORM kernel first, and then define an (E)ER ([Che76], <ref> [EGH + 92] </ref>) and a NIAM ([NH89]) way of communicating on top of it 3 as case studies. <p> In this article we will use the name pure ER for the modelling technique which was introduced in [Che76]. Taking this technique as a base, we will define ER + by adding new symbols, part of which are taken from the EER technique as presented in <ref> [EGH + 92] </ref>. 4.1 Pure ER As stated before, pure ER stands for the technique introduced in [Che76]. In this technique the following ORM constructs can be identified: entity types, fact types, predicators, label types and bridge types. In table 1 these constructs and their pure ER representation are given. <p> For the representation of power and sequence types we distinct between concrete and abstract types. This representation is based on the representation of multi- and data-valued attributes in <ref> [EGH + 92] </ref>. Except for generalisation and specialisation, all extra symbols are depicted in table 3. <p> This symbol is taken from <ref> [EGH + 92] </ref>, where the symbol represents only one single construct, called type construction. Despite that, it is possible to use this single symbol for representing the combination of the two constructs generalisation and specialisation. <p> In <ref> [EGH + 92] </ref>, the general case of type construction consists of n input types and m output types (the types drawn at the base and the top of the triangle respectively), where n and m are greater than 1. The notations given above do not result in this general construct.
Reference: [EWH85] <author> R. Elmasri, J. Weeldreyer, and A. Hevner. </author> <title> The category concept: An extension to the entity-relationship model. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 1 </volume> <pages> 75-116, </pages> <year> 1985. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], <ref> [EWH85] </ref>, [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques.
Reference: [Hal91] <author> T.A. Halpin. </author> <title> A Fact-Oriented Approach to Schema Transformation. </title> <editor> In B. Thalheim, J. Demetrovics, and H.-D. Gerhardt, editors, </editor> <booktitle> MFDBS 91, volume 495 of Lecture Notes in Computer Science, </booktitle> <pages> pages 342-356, </pages> <address> Rostock, Germany, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Schema evolution of data models conforming to the ORM kernel is treated in [PW93]. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in [BW92], <ref> [Hal91] </ref> and [Hal92]. Finally, in [HPW93] and [HPW92] the query language LISA-D is presented, which allows for the formulation of queries in a semi-natural language format, closely following the naming conventions in the data model. The LISA-D language directly applies for data models conforming to the ORM kernel.
Reference: [Hal92] <author> T.A. Halpin. </author> <title> Fact-oriented schema optimization. In A.K. </title> <editor> Majumdar and N. Prakash, editors, </editor> <booktitle> Proceedings of the International Conference on Information Systems and Management of Data (CISMOD 92), </booktitle> <pages> pages 288-302, </pages> <address> Bangalore, India, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: Schema evolution of data models conforming to the ORM kernel is treated in [PW93]. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in [BW92], [Hal91] and <ref> [Hal92] </ref>. Finally, in [HPW93] and [HPW92] the query language LISA-D is presented, which allows for the formulation of queries in a semi-natural language format, closely following the naming conventions in the data model. The LISA-D language directly applies for data models conforming to the ORM kernel.
Reference: [HE92] <author> U. Hohenstein and G. Engels. </author> <title> SQL/EER-syntax and semantics of an entity-relationship-based query Language. </title> <journal> Information Systems, </journal> <volume> 17(3) </volume> <pages> 209-242, </pages> <year> 1992. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], <ref> [HE92] </ref>, [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [HHO92] <author> T.A. Halpin, J. Harding, and C-H. Oh. </author> <title> Automated Support for Subtyping. </title> <editor> In B. Theodoulidis and A. Sutcliffe, editors, </editor> <booktitle> Proceedings of the Third Workshop on the Next Generation of CASE Tools, </booktitle> <pages> pages 99-113, </pages> <address> Manchester, United Kingdom, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Clearly this leads to a contradiction. No problems occur when non-entity types themselves are specialised. Consequently, non-entity types always act as pater familias. For an in depth discussion of specialisation, we refer to <ref> [HHO92] </ref>. The concept of specialisation is modelled as a partial order (asymmetric and transitive) Spec on object types, such that Spec is a part of the identification hierarchy.
Reference: [HNSE87] <author> U. Hohenstein, L. Neugebauer, G. Saake, and H-D. Ehrich. </author> <title> Three-Level-Specification of Databases using an extended Entity-Relationship Model. In R.R. </title> <editor> Wagner, R. Traunmuller, and H.C. Mayr, editors, </editor> <booktitle> Informationsbedarfsermittlung und -analyse fur den Entwurf von Informationssystemen, </booktitle> <pages> pages 58-88. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], <ref> [HNSE87] </ref>, [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [HO92] <author> T.A. Halpin and M.E. Orlowska. </author> <title> Fact-oriented modelling for data analysis. </title> <journal> Journal of Information Systems, </journal> <volume> 2(2) </volume> <pages> 97-119, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], <ref> [HO92] </ref>, InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [Hof93] <author> A.H.M. ter Hofstede. </author> <title> Information Modelling in Data Intensive Domains. </title> <type> PhD thesis, </type> <institution> University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1993. </year>
Reference-contexts: This figure also illustrates the possibility of using the textual language LISA-D ([HPW93], [HPW92]) as a way to represent models. A further advantage of using a common ORM kernel is that research results based on this kernel may apply to all variants based on the kernel. In [BHW91] and <ref> [Hof93] </ref>, theoretical results concerning identifiability of object types and populatability of data models are presented, which directly apply to the ORM kernel. Schema evolution of data models conforming to the ORM kernel is treated in [PW93].
Reference: [HPW92] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> A Conceptual Language for the Description and Manipulation of Complex Information Models. </title> <type> Technical Report 92-34, </type> <institution> Department of Information Systems, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1992. </year> <booktitle> To be presented at the 17th Australasian Computer Science Conference, </booktitle> <address> Christchurch, New Zealand, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: However, the idea of using a common repository to derive different views on the modelled domain is new. As an illustration of the relationship between the ORM kernel and other modelling techniques, consider figure 1. This figure also illustrates the possibility of using the textual language LISA-D ([HPW93], <ref> [HPW92] </ref>) as a way to represent models. A further advantage of using a common ORM kernel is that research results based on this kernel may apply to all variants based on the kernel. <p> Schema evolution of data models conforming to the ORM kernel is treated in [PW93]. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in [BW92], [Hal91] and [Hal92]. Finally, in [HPW93] and <ref> [HPW92] </ref> the query language LISA-D is presented, which allows for the formulation of queries in a semi-natural language format, closely following the naming conventions in the data model. The LISA-D language directly applies for data models conforming to the ORM kernel.
Reference: [HPW93] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Formal definition of a conceptual language for the description and manipulation of information models. </title> <journal> Information Systems, </journal> <volume> 18(7), </volume> <year> 1993. </year>
Reference-contexts: Schema evolution of data models conforming to the ORM kernel is treated in [PW93]. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in [BW92], [Hal91] and [Hal92]. Finally, in <ref> [HPW93] </ref> and [HPW92] the query language LISA-D is presented, which allows for the formulation of queries in a semi-natural language format, closely following the naming conventions in the data model. The LISA-D language directly applies for data models conforming to the ORM kernel. <p> The way of communicating describes how the abstract notions from the way of modelling are visualised (communicated) to human beings, for instance in the style of a conceptual language (such as LISA-D <ref> [HPW93] </ref>). Usually, the way of communicating provides a graphical notation. It may very well be the case that different methods are based on the same way of modelling, and yet use a different graphical notation. The arrows in figure 2 should be interpreted as: aspect x supports aspect y. <p> Assignments of sets of instances to object types are also valid instances. They are intended for the populations of composition types. 2 For populations, certain conditions must hold. Some of these conditions are given below, for a complete set of conditions, refer to <ref> [HPW93] </ref>. Root object types are object types that are neither generalised, nor specialised. This is formalised as: Root (x) , :gen (x) ^ :spec (x).
Reference: [HW92] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Formalisation of techniques: chopping down the methodology jungle. </title> <journal> Information and Software Technology, </journal> <volume> 34(1) </volume> <pages> 57-65, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: In some contexts, it can be stated that a person has a unique name. Such restrictions are called constraints, forming the set R. In this section we define three classes of constraints, which are usually modelled graphically in data models. For more (complex) constraints see <ref> [HW92] </ref>. The first class of constraints is the uniqueness constraint.
Reference: [HW93] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], <ref> [HW93] </ref>, [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. <p> In the ORM kernel <ref> [HW93] </ref>, an information structure I consists of the following basic components: 1. Two disjunct, nonempty, sets L and N of object types. Together (O , L [ N ), they form the set of all object types. <p> The Predicator Set Model, which is presented in <ref> [HW93] </ref>, is also such an extension of NIAM. <p> Therefore, NIAM was extended with some constructs, resulting in PSM (see <ref> [HW93] </ref>). In PSM, all concepts of the ORM kernel can be visualised. The additional concepts are: generalisation, power typing, sequence typing, and schema typing. In table 7 the PSM symbols corresponding to the ORM constructs are given.
Reference: [JG87] <author> D.A. Jardine and J.J. van Griethuysen. </author> <title> A logic-based information modelling language. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 2 </volume> <pages> 59-81, </pages> <year> 1987. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: <ref> [JG87] </ref> and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. Even if there are fundamental differences, most modelling techniques have more common than differing aspects.
Reference: [Ken84] <author> F. Kensing. </author> <title> Towards Evaluation of Methods for Property Determination: A Framework and a Critique of the Yourdon-DeMarco Approach. </title> <editor> In Th.M.A. Bemelmans, editor, </editor> <booktitle> Beyond Productivity: Information Systems Development for Organizational Effectiveness, </booktitle> <pages> pages 325-338. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1984. </year>
Reference-contexts: The way of controlling deals with managerial aspects of information system development. It includes such aspects as human resource management, quality and progress control, and evaluation of plans, i.e. overall project management (see <ref> [Ken84] </ref> and [Sol88]). 5. The way of supporting of a method, refers to the support of the method by (possibly automated) tools. A generally accepted name for computer based tools for methods is: CASE tools, see for instance [McC89]. 6.
Reference: [Lev79] <author> A. Levy. </author> <title> Basic Set Theory. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1979. </year>
Reference: [Mar93] <author> C.L.J. Martens. </author> <title> PSM vs `the rest of the world', Vergelijking tussen IFO en PSM. </title> <type> Master's thesis, </type> <institution> University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1993. </year> <note> (In Dutch). </note>
Reference-contexts: Furthermore, the completeness of the ORM kernel should be validated. e.g. can object oriented data models be `linked' into the kernel. The ORM kernel further illustrates that there is little difference in the way of modelling of ER and NIAM (more extensive comparisons can be found in [Bro93a], <ref> [Mar93] </ref> and [Bro93b]). The main difference between ER and NIAM lies in their respective ways of working, any research concerned with the underlying way of modelling is interchangeable between both `worlds'. 20 construct symbol x Gen y s 2 S Table 7: Relation between the ORM constructs and the PSM symbols
Reference: [Mat81] <author> L. Mathiassen. </author> <title> Systemudvikling og Systemudviklings-Metode. </title> <type> PhD thesis, </type> <institution> Aarhus University, Aarhus, Denmark, </institution> <year> 1981. </year> <note> (In Danish). </note>
Reference: [McC89] <author> C.L. McClure. </author> <title> CASE is Software Automation. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1989. </year>
Reference-contexts: The way of supporting of a method, refers to the support of the method by (possibly automated) tools. A generally accepted name for computer based tools for methods is: CASE tools, see for instance <ref> [McC89] </ref>. 6. The way of communicating describes how the abstract notions from the way of modelling are visualised (communicated) to human beings, for instance in the style of a conceptual language (such as LISA-D [HPW93]). Usually, the way of communicating provides a graphical notation.
Reference: [MSW92] <author> P. McBrien, A.H. Seltviet, and B. Wangler. </author> <title> An Entity-Relationship Model Extended to describe Historical Information. In A.K. </title> <editor> Majumdar and N. Prakash, editors, </editor> <booktitle> Proceedings of the International Conference on Information Systems and Management of Data (CISMOD 92), </booktitle> <pages> pages 244-260, </pages> <address> Bangalore, India, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], <ref> [MSW92] </ref>, NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [NH89] <author> G.M. Nijssen and T.A. Halpin. </author> <title> Conceptual Schema and Relational Database Design: a fact oriented approach. </title> <publisher> Prentice-Hall, </publisher> <address> Sydney, Australia, </address> <year> 1989. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], <ref> [NH89] </ref>, [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. <p> Finally, pure ER does not allow for generalisation and specialisation of object types: [ER4] IdfBy = ? 12 3.3.2 Pure NIAM The NIAM presented in <ref> [NH89] </ref>, does not deal with power typing, sequence typing and schema typing either: [NIAM1] G [ S [ C = ? Pure NIAM also does not support complex label types: [NIAM2] P L [ B Finally, pure NIAM does not allow for generalisation of object types: [NIAM3] Gen = ? 3.3.3 <p> Note that we did not depict all names of object types, and connectors, for reasons of clarity. 5 NIAM way of communicating The techniques, which use a NIAM way of communicating are mostly extensions of the NIAM modelling technique presented in <ref> [NH89] </ref>. The Predicator Set Model, which is presented in [HW93], is also such an extension of NIAM.
Reference: [Pro94] <author> H.A. Proper. </author> <title> A Theory for Conceptual Modelling of Evolving Application Domains. </title> <type> PhD thesis, </type> <institution> University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1994. </year> <month> Forthcoming. 23 </month>
Reference-contexts: Before introducing the ORM kernel, we first propose a terminological framework to find our way in the methodology jungle. In this article, the framework for information system development methods depicted in figure 2 is used (see also [PW93] and <ref> [Pro94] </ref>). It makes a distinction between a way of thinking, a way of working, a way of modelling, a way of communicating, and a way of supporting. The framework is based on the framework which was originally presented in [WH90] and [SWS89].
Reference: [PW93] <author> H.A. Proper and Th.P. van der Weide. EVORM: </author> <title> A Conceptual Modelling Tech--nique for Evolving Application Domains. </title> <type> Technical Report 93-16, </type> <institution> Information Systems Group, Computing Science Institute, University of Nijmegen, Nijmegen, </institution> <address> The Netherlands, </address> <year> 1993. </year>
Reference-contexts: In [BHW91] and [Hof93], theoretical results concerning identifiability of object types and populatability of data models are presented, which directly apply to the ORM kernel. Schema evolution of data models conforming to the ORM kernel is treated in <ref> [PW93] </ref>. Issues regarding internal representations of data models conforming to the ORM kernel have been studied in [BW92], [Hal91] and [Hal92]. <p> Before introducing the ORM kernel, we first propose a terminological framework to find our way in the methodology jungle. In this article, the framework for information system development methods depicted in figure 2 is used (see also <ref> [PW93] </ref> and [Pro94]). It makes a distinction between a way of thinking, a way of working, a way of modelling, a way of communicating, and a way of supporting. The framework is based on the framework which was originally presented in [WH90] and [SWS89].
Reference: [Sol83] <author> H.G. Sol. </author> <title> A Feature Analysis of Information Systems Design Methodologies: Methodological Considerations. </title> <editor> In T.W. Olle, H.G. Sol, and C.J. Tully, editors, </editor> <booktitle> Information Systems Design Methodologies: A Feature Analysis, </booktitle> <pages> pages 1-7. </pages> <address> North-Holland/IFIP, Amsterdam, The Netherlands, </address> <year> 1983. </year>
Reference: [Sol88] <author> H.G. Sol. </author> <title> Information Systems Development: A Problem Solving Approach. </title> <booktitle> In Proceedings of 1988 INTEC Symposium Systems Analysis and Design: A Research Strategy, </booktitle> <address> Atlanta, Georgia, </address> <year> 1988. </year>
Reference-contexts: The way of controlling deals with managerial aspects of information system development. It includes such aspects as human resource management, quality and progress control, and evaluation of plans, i.e. overall project management (see [Ken84] and <ref> [Sol88] </ref>). 5. The way of supporting of a method, refers to the support of the method by (possibly automated) tools. A generally accepted name for computer based tools for methods is: CASE tools, see for instance [McC89]. 6.
Reference: [SWS89] <author> P.S. Seligmann, G.M. Wijers, and H.G. Sol. </author> <title> Analyzing the structure of I.S. methodologies, an alternative approach. </title> <editor> In R. Maes, editor, </editor> <booktitle> Proceedings of the First Dutch Conference on Information Systems, </booktitle> <year> 1989. </year>
Reference-contexts: It makes a distinction between a way of thinking, a way of working, a way of modelling, a way of communicating, and a way of supporting. The framework is based on the framework which was originally presented in [WH90] and <ref> [SWS89] </ref>. In the framework, an information system development method is dissected in the following aspects: 1. The way of thinking verbalises the assumptions and viewpoints of the method on the kinds of problem domains, solutions and modellers.
Reference: [SZ91] <author> P. Shoval and S. Zohn. </author> <title> Binary-Relationship integration methodology. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 6(3) </volume> <pages> 225-250, </pages> <year> 1991. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], <ref> [SZ91] </ref>, [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues. <p> typing and schema typing either: [NIAM1] G [ S [ C = ? Pure NIAM also does not support complex label types: [NIAM2] P L [ B Finally, pure NIAM does not allow for generalisation of object types: [NIAM3] Gen = ? 3.3.3 Binary NIAM The NIAM version presented in <ref> [SZ91] </ref> differs from pure NIAM in the fact that it only allows for binary fact types: [NIAM4] f 2 F ) jfj = 2 3.4 Running example Now that we have defined the concepts in the ORM kernel, the naming of these concepts, the populations and constraints on the populations, we
Reference: [TMHY80] <author> D. Teichroew, P. Macasovic, E.A. Hershey, and Y. Yamamoto. </author> <title> Application of the entity-relationship approach to information processing systems modeling. </title> <note> In P.P. </note> <editor> Chen, editor, </editor> <booktitle> Entity-Relationship Approach to Systems Analysis and Design, </booktitle> <pages> pages 15-38, </pages> <address> Amsterdam, The Netherlands, 1980. </address> <publisher> North-Holland. </publisher>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], <ref> [TMHY80] </ref>, [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques.
Reference: [VB82] <author> G.M.A. Verheijen and J. van Bekkum. </author> <title> NIAM: an Information Analysis Method. </title> <editor> In T.W. Olle, H.G. Sol, and A.A. Verrijn-Stuart, editors, </editor> <booktitle> Information Systems Design Methodologies: A Comparative Review, </booktitle> <pages> pages 537-590. </pages> <address> North-Holland/IFIP, Amster-dam, The Netherlands, </address> <year> 1982. </year>
Reference-contexts: In general, these modelling techniques provide only a crude and incomplete description of their syntax, and semantics ([HW92]). This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: <ref> [VB82] </ref>, [NH89], [Win90], [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
Reference: [WH90] <author> G.M. Wijers and H. Heijes. </author> <title> Automated Support of the Modelling Process: A view based on experiments with expert information engineers. </title> <editor> In B. Steinholz, A. Stlvberg, and L. Bergman, editors, </editor> <booktitle> Proceedings of the Second Nordic Conference CAiSE'90 on Advanced Information Systems Engineering, volume 436 of Lecture Notes in Computer Science, </booktitle> <pages> pages 88-108, </pages> <address> Stockholm, Sweden, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It makes a distinction between a way of thinking, a way of working, a way of modelling, a way of communicating, and a way of supporting. The framework is based on the framework which was originally presented in <ref> [WH90] </ref> and [SWS89]. In the framework, an information system development method is dissected in the following aspects: 1. The way of thinking verbalises the assumptions and viewpoints of the method on the kinds of problem domains, solutions and modellers.
Reference: [Win90] <author> J.J.V.R. Wintraecken. </author> <title> The NIAM Information Analysis Method: Theory and Practice. </title> <publisher> Kluwer, </publisher> <address> Deventer, The Netherlands, </address> <year> 1990. </year>
Reference-contexts: This situation has led to the Methodology Jungle ([AF88]). In particular a wide range of data modelling techniques exists, for instance: ER versions: [Che76], [TMHY80], [EWH85], [HNSE87], [HE92], [MSW92], NIAM versions: [VB82], [NH89], <ref> [Win90] </ref>, [BHW91], [De 91], [SZ91], [HW93], [HO92], InfoMod: [JG87] and IFO: [AH87]. Modelling techniques like ER, NIAM, InfoMod and IFO can all be regarded as object role modelling techniques. Quite often, the difference between contemporary data modelling techniques is limited to `cosmetic' issues.
References-found: 41

