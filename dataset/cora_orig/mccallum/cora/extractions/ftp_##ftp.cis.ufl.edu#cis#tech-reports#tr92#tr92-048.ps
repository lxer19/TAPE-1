URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr92/tr92-048.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr92-abstracts.html
Root-URL: http://www.cis.ufl.edu
Abstract-found: 0
Intro-found: 1
Reference: [BaLe84] <author> Batini, C., M. Lenzerini, </author> <title> "Methodology for Data Schema Integration in the Entity-Relationship Model," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 10, No. 6, </volume> <pages> pp. 650-663, </pages> <month> November </month> <year> 1984. </year>
Reference-contexts: The component schemas themselves are assumed to be in the relational model. Among the four steps, clustering of relations with detection and resolution of conflicts in naming, structure and domain (steps 1 and 2) are not addressed in this paper. They have been addressed in <ref> [BaLe84, LaNE89, MoBu81] </ref>, and as pointed out in Navathe et al. [NaEL86] this process requires designer intervention as it is subjective and depends on naming conventions used by the designers. In this paper we present an algorithm and techniques for automating part of the merging process (steps 3 and 4).
Reference: [BaLN86] <author> Batini, C., M. Lenzerini, and S.B. Navathe, </author> <title> "A Comparative Analysis of Methodologies for Database Schema Integration," </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 18, No. 4, </volume> <pages> pp. 323-364, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Schema integration, which is referred to as merging of schemas that have been developed indepen dently, occurs in two different contexts <ref> [BaLN86, ShLa90, Jac85] </ref>: 1) View integration/reconciliation (in logical database design): During the design phase, several views of a database are merged to form a conceptual schema for the entire database. Note that the view here refers to an application's view (also termed an external view) of the database.
Reference: [BrOT86] <author> Breitbart, Y., P.L. Olson., and G.R. Thompson, </author> <title> "Database Integration in a Distributed Heterogeneous Database System," </title> <booktitle> In Proceedings of the 2nd International Conference on Data Engineering, </booktitle> <pages> pp. 301-310, </pages> <year> 1986. </year>
Reference: [CaVi83] <author> Casanova, M., and M. Vidal, </author> <title> "Towards a Sound View Integration Methodology," </title> <booktitle> In Proceedings of the 2nd ACM SIGACT/SIGMOD Conference on Principles of Database Systems (Atlanta, </booktitle> <address> Ga.), </address> <publisher> ACM, </publisher> <address> New York, </address> <pages> pp. 36-47, </pages> <month> March </month> <year> 1983. </year>
Reference: [ElLN86] <author> Elmasri, R., J. Larson, and S.B. Navathe, </author> <title> "Schema Integration Algorithms for Federated Databases and Logical Database Design," </title> <type> Tech. Rep. </type> <institution> No. CSC-86-9: 8212, Honeywell Corporate Systems Development Division, Camden, Minn. </institution>
Reference-contexts: The algorithm presented in this paper is similar to the algorithm developed by Elmasri et al. <ref> [ElLN86] </ref>. However, the algorithm developed in [ElLN86] is not complete in the sense that only four of the five types of relationships were considered. The OVERLAP relationship, which is perhaps one of the most commonly occurring relationship, was not considered at all. In addition, the algorithm in [ElLN86] cannot deal with <p> The algorithm presented in this paper is similar to the algorithm developed by Elmasri et al. <ref> [ElLN86] </ref>. However, the algorithm developed in [ElLN86] is not complete in the sense that only four of the five types of relationships were considered. The OVERLAP relationship, which is perhaps one of the most commonly occurring relationship, was not considered at all. In addition, the algorithm in [ElLN86] cannot deal with a set of relationships when a <p> Elmasri et al. <ref> [ElLN86] </ref>. However, the algorithm developed in [ElLN86] is not complete in the sense that only four of the five types of relationships were considered. The OVERLAP relationship, which is perhaps one of the most commonly occurring relationship, was not considered at all. In addition, the algorithm in [ElLN86] cannot deal with a set of relationships when a transitive rule is applied, but considers only the case when the transitive rule results in a definite value of relationship. <p> The algorithm also derives new ones from partially known relationships. Our work extends the work of <ref> [ElLN86] </ref> by considering more types of relationships and by giving results explicitly as a set when the derived relationship is not unique.
Reference: [ElNa84] <author> Elmasri, R., and S.B. Navathe, </author> <title> "Object Integration in Logical Database Design," </title> <booktitle> In Proceedings of the 1st International Conference on Data Engineering, </booktitle> <pages> pp. </pages> <address> 418- 425, </address> <year> 1984. </year>
Reference-contexts: Observe the similarity of the following definitions with those in <ref> [ElNa84] </ref> where the Extended ER model was used to define entities and relationships as objects and the domain of an object is the "set of real world entities." case 1: Identical domains (EQUAL) R 1 EQUAL R 2 (R 1 = R 2 ) def case 2: Containing domains (CONTAINS) R
Reference: [ElNa89] <author> Elmasri, R., and S.B. Navathe, </author> <title> Fundamentals of Database Systems, </title> <publisher> The Ben-jamin/Cummings Publishing Company, Inc, </publisher> <year> 1989. </year>
Reference: [Jac85] <author> Jacobs, B. E., </author> <title> Applied Database Logic: Fundamental Issues (Volume I), </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, </address> <year> 1985. </year>
Reference-contexts: 1 Introduction Schema integration, which is referred to as merging of schemas that have been developed indepen dently, occurs in two different contexts <ref> [BaLN86, ShLa90, Jac85] </ref>: 1) View integration/reconciliation (in logical database design): During the design phase, several views of a database are merged to form a conceptual schema for the entire database. Note that the view here refers to an application's view (also termed an external view) of the database. <p> Note that the view here refers to an application's view (also termed an external view) of the database. Reconciliation is generally required before a feasible conceptual schema that can support several external views can be arrived at. The view reconciliation problem is formally treated using database logic in <ref> [Jac85] </ref>. Inconsistencies that arise in this view reconciliation process can be resolved systematically and a sufficient condition for avoiding inconsistencies is also given in [Jac85]. 2) Schema integration (in federated databases): Schemas of pre-existing databases are merged to form a global schema that provides a unified or integrated conceptual view of <p> The view reconciliation problem is formally treated using database logic in <ref> [Jac85] </ref>. Inconsistencies that arise in this view reconciliation process can be resolved systematically and a sufficient condition for avoiding inconsistencies is also given in [Jac85]. 2) Schema integration (in federated databases): Schemas of pre-existing databases are merged to form a global schema that provides a unified or integrated conceptual view of the underlying databases. The integration process need to preserve the semantics of individual databases as well.
Reference: [LaNE89] <author> Larson, P., S.B. Navathe, and R. Elmasri, </author> <title> "A Theory of Attribute Equivalence in Databases with Application to Schema Integration," </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 15. No. 4, </volume> <pages> pp. 449-463, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: knowledge of relationships between every pair of relations in the cluster and the heuristics used for merging. 2.4 Merging After identifying the relationships, the designer needs to indicate the semantic relationships of attributes of the relations in the same cluster in order to merge similar attributes in the global schema <ref> [LaNE89, MaEf84, MoBu81] </ref>. Consider, for example, attributes GRADE and SCORE taken from two different student databases. GRADE is defined as a character type denoting a letter grade, while SCORE is defined as an integer type representing a value between 1 and 100. <p> The component schemas themselves are assumed to be in the relational model. Among the four steps, clustering of relations with detection and resolution of conflicts in naming, structure and domain (steps 1 and 2) are not addressed in this paper. They have been addressed in <ref> [BaLe84, LaNE89, MoBu81] </ref>, and as pointed out in Navathe et al. [NaEL86] this process requires designer intervention as it is subjective and depends on naming conventions used by the designers. In this paper we present an algorithm and techniques for automating part of the merging process (steps 3 and 4).
Reference: [MaEf84] <author> Mannino, M.V, and W. Effelsberg, </author> <title> "Matching Techniques in Global Schema Design," </title> <booktitle> In Proceedings of the 1st International Conference on Data Engineering, </booktitle> <pages> pp. </pages> <address> 418- 425, </address> <year> 1984. </year>
Reference-contexts: knowledge of relationships between every pair of relations in the cluster and the heuristics used for merging. 2.4 Merging After identifying the relationships, the designer needs to indicate the semantic relationships of attributes of the relations in the same cluster in order to merge similar attributes in the global schema <ref> [LaNE89, MaEf84, MoBu81] </ref>. Consider, for example, attributes GRADE and SCORE taken from two different student databases. GRADE is defined as a character type denoting a letter grade, while SCORE is defined as an integer type representing a value between 1 and 100.
Reference: [MoBu81] <author> Motro, A., P. Buneman, </author> <title> "Constructing Superviews," </title> <booktitle> In Proceedings of the ACM SIG-MOD International Conference on Management of Data, </booktitle> <pages> pp. 54-64, </pages> <month> May </month> <year> 1981. </year>
Reference-contexts: knowledge of relationships between every pair of relations in the cluster and the heuristics used for merging. 2.4 Merging After identifying the relationships, the designer needs to indicate the semantic relationships of attributes of the relations in the same cluster in order to merge similar attributes in the global schema <ref> [LaNE89, MaEf84, MoBu81] </ref>. Consider, for example, attributes GRADE and SCORE taken from two different student databases. GRADE is defined as a character type denoting a letter grade, while SCORE is defined as an integer type representing a value between 1 and 100. <p> The component schemas themselves are assumed to be in the relational model. Among the four steps, clustering of relations with detection and resolution of conflicts in naming, structure and domain (steps 1 and 2) are not addressed in this paper. They have been addressed in <ref> [BaLe84, LaNE89, MoBu81] </ref>, and as pointed out in Navathe et al. [NaEL86] this process requires designer intervention as it is subjective and depends on naming conventions used by the designers. In this paper we present an algorithm and techniques for automating part of the merging process (steps 3 and 4).
Reference: [Motr87] <author> Motro, A., "Superviews: </author> <title> A Virtual Integration of Multiple Databases," </title> <journal> IEEE Transactions on Software Eng., </journal> <volume> Vol. 13, No. 7., </volume> <pages> pp. 785-798, </pages> <month> July </month> <year> 1987. </year> <month> 23 </month>
Reference: [NaEL86] <author> Navathe, S.B., R. Elmasri, and J.A. Larson., </author> <title> "Integrating User Views in Database Design," </title> <journal> IEEE Computer, </journal> <volume> Vol. 19, No. 1, </volume> <pages> pp. 50-62, </pages> <month> January </month> <year> 1986. </year>
Reference-contexts: Among the four steps, clustering of relations with detection and resolution of conflicts in naming, structure and domain (steps 1 and 2) are not addressed in this paper. They have been addressed in [BaLe84, LaNE89, MoBu81], and as pointed out in Navathe et al. <ref> [NaEL86] </ref> this process requires designer intervention as it is subjective and depends on naming conventions used by the designers. In this paper we present an algorithm and techniques for automating part of the merging process (steps 3 and 4).
Reference: [NaGa82] <author> Navathe, S.B., and S.G. Gadgil, </author> <title> "A Methodology for View Integration in Logical Database Design," </title> <booktitle> In Proceedings of the 8th International Conference on Very Large Data Bases, </booktitle> <pages> pp. 142-164, </pages> <year> 1982. </year>
Reference-contexts: The results of these requests are then assembled to produce the result of the original query on the global/unified schema. Our approach for schema integration consists of four steps: 1) data model conversion, 2) clustering of related entities <ref> [NaGa82] </ref>, 3) identification of relationships among relations in a cluster, and 4) merging of relations into a unified/global schema. First, schemas from existing (possibly different) data models are transformed into a common data model to facilitate the integration process.
Reference: [ShLa90] <author> Sheth, A.P., and J.A. Larson, </author> <title> "Federated Database Systems for Managing Distributed, Heterogeneous, and Autonomous Databases," </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 22, No. 3, </volume> <pages> pp. 183-236, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Schema integration, which is referred to as merging of schemas that have been developed indepen dently, occurs in two different contexts <ref> [BaLN86, ShLa90, Jac85] </ref>: 1) View integration/reconciliation (in logical database design): During the design phase, several views of a database are merged to form a conceptual schema for the entire database. Note that the view here refers to an application's view (also termed an external view) of the database.
Reference: [SSGN91] <author> Savasere, A., A.P. Sheth, S. Gala, S.B. Navathe, and H. Marcus, </author> <title> "On Applying Classification to Schema Integration," </title> <booktitle> In the First International Workshop on Interoperability in Mutidatabase Systems, </booktitle> <address> Kyoto, Japan, </address> <pages> pp. 258-261, </pages> <year> 1991. </year>
Reference: [WhCN92] <author> Whang, W.K., S. Chakravarthy, and S.B. Navathe, </author> <title> "Query Processing using Logic-Based Queries in Federated Databases," </title> <note> in preparation, </note> <year> 1992. </year>
Reference-contexts: When a query is invoked, the integration represented internally is mapped to operations of component relations. Query processing and optimization of ESQL queries and the translation of ESQL queries into 16 queries on component relations is discussed in <ref> [WhNC91, WhCN92, Wha92] </ref>. Note that a complete knowledge of component relations is not required to express queries in ESQL; the relation-name field captures sufficient information to help formulate a query without having to know the details. <p> Set comparison 22 operator and "GROUP BY" clauses are applicable to the component relations, while set operations (i.e., union, difference and intersection) are applicable to the tuples of the component relations. For details on query processing and optimization of ESQL queries refer to <ref> [Wha92, WhCN92] </ref>.
Reference: [Wha92] <author> Whang, </author> <title> W.K., "A Logic-Based Approach to Federated Databases", </title> <type> Ph.D thesis, </type> <institution> Electrical Engineering Department, University of Florida, Gainesville, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: This grouping process, although ad hoc helps in reducing the complexity of the relationship determination problem. In the final analysis, a user assisted tool seems to be a good way of addressing this problem. 1 This is not a general requirement. In <ref> [Wha92] </ref>, Horn clauses have been used as a canonical representation into which relational, hierarchical, and network models are converted. 4 2.3 Identification of Relationships Once the relations from component databases are clustered by the designer, relationships among the relations in a cluster need to be identified. <p> When a query is invoked, the integration represented internally is mapped to operations of component relations. Query processing and optimization of ESQL queries and the translation of ESQL queries into 16 queries on component relations is discussed in <ref> [WhNC91, WhCN92, Wha92] </ref>. Note that a complete knowledge of component relations is not required to express queries in ESQL; the relation-name field captures sufficient information to help formulate a query without having to know the details. <p> Set comparison 22 operator and "GROUP BY" clauses are applicable to the component relations, while set operations (i.e., union, difference and intersection) are applicable to the tuples of the component relations. For details on query processing and optimization of ESQL queries refer to <ref> [Wha92, WhCN92] </ref>.
Reference: [WhNC91] <author> Whang, W.K., S.B. Navathe, and S. Chakravarthy, </author> <title> "Logic-Based Approach to Realizing a Federated Information System", </title> <booktitle> In Proc. of the First International Workshop on Interoperability in Multidatabase Systems, </booktitle> <address> Kyoto, </address> <year> 1991. </year>
Reference-contexts: When a query is invoked, the integration represented internally is mapped to operations of component relations. Query processing and optimization of ESQL queries and the translation of ESQL queries into 16 queries on component relations is discussed in <ref> [WhNC91, WhCN92, Wha92] </ref>. Note that a complete knowledge of component relations is not required to express queries in ESQL; the relation-name field captures sufficient information to help formulate a query without having to know the details.
Reference: [Zani83] <author> Zaniolo, C., </author> <title> "The Database Language GEM," </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management Data, </booktitle> <pages> pp. 207-218, </pages> <year> 1983. </year> <month> 24 </month>
Reference-contexts: A list (shown in square brackets) specifies the names of the component relations that participate in the global view relation. This is termed the "relation-name" attribute of the global view relation. This schema representation is similar to GEM <ref> [Zani83] </ref>. The arithmetic comparison operations, such as =, 6=, &lt;, , &gt;, are not applicable to the "relation-name" attribute, while set operations such as union, intersection and difference are allowed on this attribute.
References-found: 20

