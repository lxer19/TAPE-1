URL: ftp://ftp.csd.uu.se/pub/papers/reports/0128.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email anatoli@csd.uu.se  email gurevich@umich.edu  email voronkov@csd.uu.se  
Author: Yuri Gurevich Andrei Voronkov 
Keyword: Herbrand's Theorem and Equational Reasoning: Problems and Solutions Anatoli Degtyarev  
Note: Supported by a grant from the Swedish Royal Academy of Sciences and by TFR grant 92-818. Partially supported by grants from NSF, ONR and the Faculty of Science and Technology of Uppsala University. Partially supported by TFR grant 96-859.  
Address: Box 311, S 751 05 Uppsala, Sweden  Ann Arbor, MI, 48109-2122 USA  Box 311, S-751 05 Uppsala, Sweden  
Affiliation: Computing Science Department Uppsala University  EECS Department University of Michigan  Computing Science Department Uppsala University  
Abstract: UPMAIL Technical Report No. 128 September 14, 1996 ISSN 1100-0686 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Bibliography </institution>
Reference: [1] <author> P.B. Andrews. </author> <title> Theorem proving via general matings. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 193-214, </pages> <year> 1981. </year>
Reference-contexts: Let us now come back to Formula Instantiation. This problem has several reformulations which serve as a basis for automated deduction methods exploiting the matrix characterization of validity introduced by Prawitz [46]: in particular the method of matings (Andrews <ref> [1] </ref>) and the connection method (Bibel [6]). The Herbrand theorem in these methods is reformulated in terms of matrices and paths. It can also be formulated in a similar way in terms of tableaux and branches.
Reference: [2] <author> M. Baaz. </author> <title> Note on the existence of most general semi-unifiers. In Arithmetic, Proof Theory and Computation Complexity, </title> <booktitle> volume 23 of Oxford Logic Guides, </booktitle> <pages> pages 20-29. </pages> <publisher> Oxford University Press, </publisher> <year> 1993. </year>
Reference-contexts: In 1988-92, several papers gave faulty proofs of the decidability of simultaneous rigid E-unification. Finally, in 1995, the problem was proven to be undecidable by Degtyarev and Voronkov in [12] by a reduction from the monadic semi-unification problem whose undecidability was proven by Baaz <ref> [2] </ref>. Degtyarev and Voronkov gave more comprehensive undecidability proofs in [15, 14] using reductions from second-order unification, proven undecidable by Goldfarb [23], and from Hilbert's tenth problem. We shall explain the ideas of the undecidability proof in [15] and then consider further results on simultaneous rigid E-unification below.
Reference: [3] <author> G. Becher and U. Petermann. </author> <title> Rigid unification by completion and rigid paramodulation. </title> <editor> In B. Nebel and L. Dreschler-Fischer, editors, </editor> <booktitle> KI-94: Advances in Artificial Intelligence. 18th German Annual Conference on Artificial Intelligence, volume 861 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 319-330, </pages> <address> Saarbrucken, Germany, September 1994. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann <ref> [3] </ref>, De Kogel [18], Plaisted [45]). These newer algorithms have been presented as either more efficient or simpler than the original algorithm of [20]. Notice, however, that application-wise the more important problem is SREU, simultaneous rigid E-unification.
Reference: [4] <author> A.P. Beltyukov. </author> <title> Decidability of the universal theory of natural numbers with addition and divisibility (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 60 </volume> <pages> 15-28, </pages> <year> 1976. </year> <title> English translation in: </title> <journal> Journal of Soviet Mathematics. </journal>
Reference-contexts: The decision problem of satisfiability of conjunctions of atomic statements in the language f0; 1; +; j; 'g over natural numbers is known as the Diophantine problem for addition and divisibility. This problem has been shown decidable in Bel'tyukov <ref> [4] </ref>, Mart'yanov [42] and Lipshitz [37]. Thus, there is a reduction of the Diophantine problem for addition and divisibility to SREU 1 .
Reference: [5] <author> D. Benanav, D. Kapur, and P. Narendran. </author> <title> Complexity of matching problems. </title> <journal> Journal of Symbolic Computations, </journal> <volume> 3 </volume> <pages> 203-216, </pages> <year> 1987. </year>
Reference-contexts: No interesting upper bounds for complexity of this problem are yet known 2 . It is only known that the problem is NP-hard (see e.g. Benanav, D. Ka-pur and P. Narendran <ref> [5] </ref>). Makanin's algorithm [38] leads to a tower of several exponentials (see Koscielski and Pacholski [33]). In addition to word equations, some other relations on words can be represented by monadic simultaneous rigid E-unification.
Reference: [6] <author> W. Bibel. </author> <title> On matrices with connections. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28(4) </volume> <pages> 633-645, </pages> <year> 1981. </year>
Reference-contexts: Let us now come back to Formula Instantiation. This problem has several reformulations which serve as a basis for automated deduction methods exploiting the matrix characterization of validity introduced by Prawitz [46]: in particular the method of matings (Andrews [1]) and the connection method (Bibel <ref> [6] </ref>). The Herbrand theorem in these methods is reformulated in terms of matrices and paths. It can also be formulated in a similar way in terms of tableaux and branches.
Reference: [7] <author> E. Borger, E. Gradel, and Y. Gurevich. </author> <title> The Classical Decision Problem. </title> <publisher> Springer Verlag, </publisher> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: Herbrand's theorem and equational reasoning. function symbols), even for "tiny" fragments of pure predicate logic; see e.g. <ref> [7] </ref>. In intuitionistic logic, this is not the case which diminishes of course the role of prenex formulas. The explanation is that classical equivalences like ' 9x (x); where x does not occur in ', is equivalent to 9x (' (x)) do not hold in intuitionistic logic.
Reference: [8] <author> C.L. Chang. </author> <title> Theorem proving with variable-constrained resolution. </title> <journal> Information Sciences, </journal> <volume> 4 </volume> <pages> 217-231, </pages> <year> 1972. </year>
Reference-contexts: Which is right? Answer: Both are wrong. Andrei Voronkov, private email communication. Research on simultaneous rigid E-unification started in 1987 and most results have been proven in 1995-1996. Surprisingly, rigid variables in the context of resolution theorem proving have been used much earlier by Chang and Lee <ref> [8, 36] </ref> in the so-called V -resolution and V -paramodulation rules. They tried to use rigid variables in order to capture Prawitz's procedure by resolution and to formalize the idea of reasoning with bounded resources. In 1988-92, several papers gave faulty proofs of the decidability of simultaneous rigid E-unification.
Reference: [9] <author> A. Degtyarev, Yu. Gurevich, P. Narendran, M. Veanes, and A. Voronkov. </author> <title> The decidability of simultaneous rigid E-unification with one variable. </title> <type> UPMAIL Technical Report, </type> <institution> Uppsala University, Computing Science Department. </institution> <note> In preparation. </note>
Reference-contexts: These results leave open the decision problem for the one-variable case and for the case with function symbols of arity 1 only (we call it the monadic case). The monadic case will be addressed in the next subsection. The case of one variable has been proven decidable in <ref> [9] </ref>; the complexity of the one-variable case is addressed there as well. The decidability of the one-variable fragment of SREU gives rise to decidable fragments of the other decision problems.
Reference: [10] <author> A. Degtyarev, Yu. Matiyasevich, and A. Voronkov. </author> <title> Simultaneous rigid E-unification is not so simple. </title> <type> UPMAIL Technical Report 104, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: It is evident that is a solution to fR (c) j c 2 Cg if and only if satisfies all clauses in C. It has been noted in Degtyarev, Matiyasevich and Voronkov <ref> [10, 11] </ref> that the famous word equation problem has a simple reduction to SREU 2 .
Reference: [11] <author> A. Degtyarev, Yu. Matiyasevich, and A. Voronkov. </author> <title> Simultaneous rigid E-unification and related algorithmic problems. </title> <booktitle> In Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96), </booktitle> <pages> pages 494-502, </pages> <address> New Brunswick, NJ, July 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Herbrand's theorem and equational reasoning. 2.3 The monadic case We shall distinguish monadic languages by the number of unary function symbols. Following Degtyarev, Matiyasevich and Voronkov <ref> [11] </ref>, denote by n the signature with n unary function symbols and a countable number of constants. Let SREU n be the fragment of simultaneous rigid E-unification restricted to n . First, we note that the case n &gt; 2 is equivalent to the case n = 2. <p> Thus, it remains to consider the cases SREU 0 ; SREU 1 ; SREU 2 . For SREU 0 , simultaneous rigid E-unification is NP-complete (Degtyarev, Matiyasevich and Vo-ronkov <ref> [11] </ref>). There is a simple non-deterministic polynomial time algorithm for finding a solution to any SREU 0 system S of rigid equations. <p> It is evident that is a solution to fR (c) j c 2 Cg if and only if satisfies all clauses in C. It has been noted in Degtyarev, Matiyasevich and Voronkov <ref> [10, 11] </ref> that the famous word equation problem has a simple reduction to SREU 2 . <p> This problem has been shown decidable in Bel'tyukov [4], Mart'yanov [42] and Lipshitz [37]. Thus, there is a reduction of the Diophantine problem for addition and divisibility to SREU 1 . Degtyarev, Matiyasevich and Voronkov <ref> [11] </ref> give the converse reduction of SREU 1 to the Diophantine problem for addition and divisibility, thus establishing the decidability of SREU 1 . This reduction is not easy to explain here in detail, so we only describe some more essential ideas. <p> The algorithm of 2 A.Koscielski, G.Makanin, L.Pacholski, K.Schulz, J.Siekmann (private communications). 14 A.Degtyarev, Y.Gurevich and A.Voronkov. Herbrand's theorem and equational reasoning. <ref> [11] </ref> tries to find appropriate n i and c i for every such variable x i . Since only a finite number of constants occur in the system of equations, constants c i can be "guessed" in the beginning. Then the problem reduces to finding the numbers n i . <p> Since only a finite number of constants occur in the system of equations, constants c i can be "guessed" in the beginning. Then the problem reduces to finding the numbers n i . The algorithm of <ref> [11] </ref> "simplifies" rigid equations constructing some conditions on n i . We consider one case which illustrates how the divisibility predicate appears in the conditions.
Reference: [12] <author> A. Degtyarev and A. Voronkov. </author> <title> Simultaneous rigid E-unification is undecidable. </title> <type> UPMAIL Technical Report 105, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: In 1988-92, several papers gave faulty proofs of the decidability of simultaneous rigid E-unification. Finally, in 1995, the problem was proven to be undecidable by Degtyarev and Voronkov in <ref> [12] </ref> by a reduction from the monadic semi-unification problem whose undecidability was proven by Baaz [2]. Degtyarev and Voronkov gave more comprehensive undecidability proofs in [15, 14] using reductions from second-order unification, proven undecidable by Goldfarb [23], and from Hilbert's tenth problem.
Reference: [13] <author> A. Degtyarev and A. Voronkov. </author> <title> Decidability problems for the prenex fragment of intuitionistic logic. </title> <booktitle> In Eleventh Annual IEEE Symposium on Logic in Computer Science (LICS'96), </booktitle> <pages> pages 503-512, </pages> <address> New Brunswick, NJ, July 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: One way is to use the same skolemization that is used in classical logic. However, standard skolem-ization introduces new function symbols which one may want to avoid. (Some results explained in Section 2 depend on the signature). There is an alternative way of skolemizing given by Degtyarev and Voronkov <ref> [13] </ref>, where only new constants are introduced. We shall informally illustrate it here. Existential Intuitionistic obviously reduces to Prenex Intuitionistic. Let us take some instance of Prenex Intuitionistic and reduce it to an instance of Existential Intuitionistic.
Reference: [14] <author> A. Degtyarev and A. Voronkov. </author> <title> Simultaneous rigid E-unification is undecidable. </title> <editor> In H. Kleine Buning, editor, </editor> <booktitle> Computer Science Logic. 9th International Workshop, CSL'95, volume 1092 of Lecture Notes in Computer Science, </booktitle> <pages> pages 178-190, </pages> <address> Paderborn, Germany, </address> <month> September </month> <year> 1995, 1996. </year>
Reference-contexts: Finally, in 1995, the problem was proven to be undecidable by Degtyarev and Voronkov in [12] by a reduction from the monadic semi-unification problem whose undecidability was proven by Baaz [2]. Degtyarev and Voronkov gave more comprehensive undecidability proofs in <ref> [15, 14] </ref> using reductions from second-order unification, proven undecidable by Goldfarb [23], and from Hilbert's tenth problem. We shall explain the ideas of the undecidability proof in [15] and then consider further results on simultaneous rigid E-unification below.
Reference: [15] <author> A. Degtyarev and A. Voronkov. </author> <title> The undecidability of simultaneous rigid E-unification. </title> <booktitle> Theoretical Computer Science, 166:10, 1996. 16 A.Degtyarev, Y.Gurevich and A.Voronkov. Herbrand's theorem and equational reasoning. </booktitle>
Reference-contexts: Finally, in 1995, the problem was proven to be undecidable by Degtyarev and Voronkov in [12] by a reduction from the monadic semi-unification problem whose undecidability was proven by Baaz [2]. Degtyarev and Voronkov gave more comprehensive undecidability proofs in <ref> [15, 14] </ref> using reductions from second-order unification, proven undecidable by Goldfarb [23], and from Hilbert's tenth problem. We shall explain the ideas of the undecidability proof in [15] and then consider further results on simultaneous rigid E-unification below. <p> Degtyarev and Voronkov gave more comprehensive undecidability proofs in [15, 14] using reductions from second-order unification, proven undecidable by Goldfarb [23], and from Hilbert's tenth problem. We shall explain the ideas of the undecidability proof in <ref> [15] </ref> and then consider further results on simultaneous rigid E-unification below. The undecidability proof in [15] gives a direct encoding of second-order unification by simultaneous rigid E-unification. We shall present second-order unification rather informally; for more details see Goldfarb [23] or Degtyarev and Voronkov [15]. <p> We shall explain the ideas of the undecidability proof in <ref> [15] </ref> and then consider further results on simultaneous rigid E-unification below. The undecidability proof in [15] gives a direct encoding of second-order unification by simultaneous rigid E-unification. We shall present second-order unification rather informally; for more details see Goldfarb [23] or Degtyarev and Voronkov [15]. Second-order unification differs from ordinary unification in that it allows second-order variables. <p> ideas of the undecidability proof in <ref> [15] </ref> and then consider further results on simultaneous rigid E-unification below. The undecidability proof in [15] gives a direct encoding of second-order unification by simultaneous rigid E-unification. We shall present second-order unification rather informally; for more details see Goldfarb [23] or Degtyarev and Voronkov [15]. Second-order unification differs from ordinary unification in that it allows second-order variables. A second-order variable x of arity n may occur in terms in the form x (t 1 ; : : : ; t n ). <p> Among the admissible solutions for the example equation are: fw 1 w 2 :f (g (b); a; b)=x; b=y; b=zg (2.2) fw 1 w 2 :f (w 2 ; w 1 ; a)=x; a=y; a=zg (2.4) In order to encode second-order unification, we use some properties of simultaneous rigid E-unification <ref> [15] </ref>.
Reference: [16] <author> A. Degtyarev and A. Voronkov. </author> <title> What you always wanted to know about rigid E-unification. </title> <editor> In J.J. Alferes, L. Moniz Pereira, and E. Orlowska, editors, </editor> <booktitle> Logics in Artificial Intelligence (JELIA'96), volume 1126 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> 20 pages, </pages> <address> Evora, Portugal, </address> <year> 1996. </year>
Reference: [17] <author> A. Degtyarev and A. Voronkov. </author> <title> Equality reasoning in sequent-based calculi: a tutorial. </title> <type> UPMAIL Technical Report, </type> <institution> Uppsala University, Computing Science Department. </institution> <note> To appear. </note>
Reference-contexts: Herbrand's theorem and equational reasoning. Section 2 Solutions In this section we review recent results on the decidability of simultaneous rigid E-unification and its fragments. The relation of these results to automated reasoning may be found in the survey <ref> [17] </ref>. 2.1 The undecidability Question: We have seen papers asserting that simultaneous rigid E-unification is NP-complete and NEXPTIME-complete. Which is right? Answer: Both are wrong. Andrei Voronkov, private email communication. Research on simultaneous rigid E-unification started in 1987 and most results have been proven in 1995-1996.
Reference: [18] <author> E. De Kogel. </author> <title> Rigid E-unification simplified. </title> <editor> In P. Baumgartner, R. Hahnle, and J. Posegga, editors, </editor> <title> Theorem Proving with Analytic Tableaux and Related Methods, </title> <booktitle> number 918 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 17-30, </pages> <address> Schlo Rheinfels, St. Goar, Germany, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel <ref> [18] </ref>, Plaisted [45]). These newer algorithms have been presented as either more efficient or simpler than the original algorithm of [20]. Notice, however, that application-wise the more important problem is SREU, simultaneous rigid E-unification.
Reference: [19] <author> J.H. Gallier, S. Raatz, and W. Snyder. </author> <title> Theorem proving using rigid E-unification: Equational matings. </title> <booktitle> In Proc. IEEE Conference on Logic in Computer Science (LICS), </booktitle> <pages> pages 338-346. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year>
Reference-contexts: It follows that all six problems are decidable in the case of logic without equality. 1.2 Simultaneous rigid E-unification For logic with equality, the matrix instantiation problem naturally leads to the following combinatorial problem (Gallier, Raatz and Snyder <ref> [19] </ref>). 6 A.Degtyarev, Y.Gurevich and A.Voronkov. Herbrand's theorem and equational reasoning.
Reference: [20] <author> J.H. Gallier, P. Narendran, D. Plaisted, and W. Snyder. </author> <title> Rigid E-unification is NP-complete. </title> <booktitle> In Proc. IEEE Conference on Logic in Computer Science (LICS), </booktitle> <pages> pages 338-346. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> July </month> <year> 1988. </year>
Reference-contexts: When left-hand sides are non-ground, rigid E-unification is fundamentally different from E-unification. E-unification is in general undecidable. In contrast, rigid E-unification is decidable and NP-complete (Gallier et.al. <ref> [20, 21, 22] </ref>). The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted [45]). <p> When left-hand sides are non-ground, rigid E-unification is fundamentally different from E-unification. E-unification is in general undecidable. In contrast, rigid E-unification is decidable and NP-complete (Gallier et.al. [20, 21, 22]). The first procedure for rigid E-unification, described in <ref> [20] </ref>, was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted [45]). <p> Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted [45]). These newer algorithms have been presented as either more efficient or simpler than the original algorithm of <ref> [20] </ref>. Notice, however, that application-wise the more important problem is SREU, simultaneous rigid E-unification. The six decision problems of Subsection 1.1, equivalent to SREU, witness this fact. 8 A.Degtyarev, Y.Gurevich and A.Voronkov. Herbrand's theorem and equational reasoning.
Reference: [21] <author> J. Gallier, P. Narendran, D. Plaisted, and W. Snyder. </author> <title> Rigid E-unification: NP-completeness and applications to equational matings. </title> <journal> Information and Computation, </journal> 87(1/2):129-195, 1990. 
Reference-contexts: When left-hand sides are non-ground, rigid E-unification is fundamentally different from E-unification. E-unification is in general undecidable. In contrast, rigid E-unification is decidable and NP-complete (Gallier et.al. <ref> [20, 21, 22] </ref>). The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted [45]).
Reference: [22] <author> J. Gallier, P. Narendran, S. Raatz, and W. Snyder. </author> <title> Theorem proving using equational matings and rigid E-unification. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 39(2) </volume> <pages> 377-429, </pages> <year> 1992. </year>
Reference-contexts: When left-hand sides are non-ground, rigid E-unification is fundamentally different from E-unification. E-unification is in general undecidable. In contrast, rigid E-unification is decidable and NP-complete (Gallier et.al. <ref> [20, 21, 22] </ref>). The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted [45]).
Reference: [23] <author> W.D. Goldfarb. </author> <title> The undecidability of the second-order unification problem. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 225-230, </pages> <year> 1981. </year>
Reference-contexts: In the case of formal arithmetic, Skeleton Instantiation may lead to the second-order unification problem (Goldfarb <ref> [23] </ref>). However, for some cut-free sequent calculi and appropriate notions of skeleton, Skeleton Instantiation is equivalent to Prenex Intuitionistic. Their equivalence can be shown using the so-called constraint technique of Voronkov [50]. In the sequel, we speak about the version of Skeleton Instantiation which is equivalent to Prenex Intuitionistic. <p> Degtyarev and Voronkov gave more comprehensive undecidability proofs in [15, 14] using reductions from second-order unification, proven undecidable by Goldfarb <ref> [23] </ref>, and from Hilbert's tenth problem. We shall explain the ideas of the undecidability proof in [15] and then consider further results on simultaneous rigid E-unification below. The undecidability proof in [15] gives a direct encoding of second-order unification by simultaneous rigid E-unification. <p> We shall explain the ideas of the undecidability proof in [15] and then consider further results on simultaneous rigid E-unification below. The undecidability proof in [15] gives a direct encoding of second-order unification by simultaneous rigid E-unification. We shall present second-order unification rather informally; for more details see Goldfarb <ref> [23] </ref> or Degtyarev and Voronkov [15]. Second-order unification differs from ordinary unification in that it allows second-order variables. A second-order variable x of arity n may occur in terms in the form x (t 1 ; : : : ; t n ).
Reference: [24] <author> J. Goubault. </author> <title> A rule-based algorithm for rigid E-unification. </title> <editor> In Georg Gottlob, Alexander Leitsch, and Daniele Mundici, editors, </editor> <booktitle> Computational Logic and Proof Theory. Proceedings of the Third Kurt Godel Colloquium, KGC'93, volume 713 of Lecture Notes in Computer Science, </booktitle> <pages> pages 202-210, </pages> <address> Brno, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: In contrast, rigid E-unification is decidable and NP-complete (Gallier et.al. [20, 21, 22]). The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault <ref> [24] </ref>, Becher and Petermann [3], De Kogel [18], Plaisted [45]). These newer algorithms have been presented as either more efficient or simpler than the original algorithm of [20]. Notice, however, that application-wise the more important problem is SREU, simultaneous rigid E-unification.
Reference: [25] <author> J. Goubault. </author> <title> Rigid ~ E-unifiability is DEXPTIME-complete. </title> <booktitle> In Proc. IEEE Conference on Logic in Computer Science (LICS). </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: We have already used this property of rigid equations (and even sketched a proof of it) in Section 1 when we discussed the alternative Skolemization in intuitionistic logic (after presenting Problem 4). In fact, rigid equations allow one to represent any regular set (Goubault <ref> [25] </ref>, Plaisted [45] and Veanes [47]). Second, simultaneous rigid E-unification can be used to represent application of substitutions. We shall temporarily use substitution notation ft 1 =c 1 ; : : : ; t n =c n g where c i are constants.
Reference: [26] <author> Y. Gurevich and A. Voronkov. </author> <title> The monadic case of simultaneous rigid E-unification. </title> <type> Upmail technical report, </type> <institution> Uppsala University, Computing Science Department, </institution> <year> 1996. </year> <note> In preparation. </note>
Reference-contexts: Thus we can express that a word V is an exponent W m of the word W . In <ref> [26] </ref> Gurevich and Voronkov show the equivalence of SREU 2 to an extension of word equations with some extra relations. Now, let us consider SREU 1 .
Reference: [27] <author> Y. Gurevich and A. Voronkov. </author> <title> Simultaneous rigid E-unification in the case of one unary function. </title> <type> Upmail technical report, </type> <institution> Uppsala University, Computing Science Department, </institution> <year> 1996. </year> <note> In preparation. </note>
Reference-contexts: This yields Theorem 6 SREU 1 is decidable. This also implies the decidability of Problems 1-7 in the signature 1 . The complexity of SREU 1 is investigated in Gurevich and Voronkov <ref> [27] </ref>. Acknowledgments We thank Faron Moller for his remarks on the preliminary version of this article. We acknowledge the Faculty of Science and Technology of Uppsala University for providing funds for the visit of the second author to Uppsala University in 1996.
Reference: [28] <author> J. </author> <title> Herbrand. Logical Writings. </title> <publisher> Harvard University Press, </publisher> <year> 1972. </year>
Reference-contexts: Vaughan Pratt, private communication. We start with some decision problems having non-procedural definitions. Most of these problems naturally stem from the famous Herbrand theorem. 1.1 Herbrand's theorem and six decision problems The Herbrand theorem <ref> [28] </ref> asserts that an existential first-order formula 9x'(x) is provable (in classical first-order logic) if and only if a particular disjunction '( t 1 ) _ : : : _ '( t n ) is provable.
Reference: [29] <author> Ju.I. Hmelevski i. </author> <title> Equations in free semigroups (in Russian). </title> <journal> Dokl. Akad. Nauk SSSR, </journal> <volume> 156 </volume> <pages> 749-751, </pages> <year> 1964. </year> <note> English translation in Soviet Math. Dokl. 5 (1964). </note>
Reference-contexts: n g and U = V ? For example, the word equation f 2 f 3 xf 3 ' yf 1 y has solutions ff 1 f 2 =x; f 2 f 3 =yg Hmelevski i noticed that a finite system of word equations reduces to a single word equation <ref> [29] </ref>. The reduction of word equations to monadic simultaneous rigid E-unification is similar to the representation of second-order unification, but is restricted to monadic signatures.
Reference: [30] <author> J.M. Hullot. </author> <title> Canonical forms and unification. </title> <booktitle> In 5th CADE, volume 87 of Lecture Notes in Computer Science, </booktitle> <pages> pages 318-334, </pages> <year> 1980. </year>
Reference-contexts: Hence, several results proved for E-unification are also valid for rigid E-unification. For example, in Hullot <ref> [30] </ref> it is shown that in the case of ground left-hand sides there is a finite complete set of E-unifiers and in Kozen [35] it is shown that the E-unification problem is NP-complete in the case of ground left-hand sides.
Reference: [31] <author> S. Kanger. </author> <title> Provability in Logic, </title> <booktitle> volume 1 of Studies in Philosophy. Almquist and Wicksell, </booktitle> <address> Stockholm, </address> <year> 1957. </year>
Reference-contexts: This formula is provable if and only if the following is a valid derivation in a sequent calculus (for example, Kanger's calculus from <ref> [31, 32] </ref>): P (f (s)) ! P (r) (!) Q (s) ! Q (g (r)) _ Q (f (t)) ! Q (s) Q (g (r)) _ Q (f (t)) ! (P (f (s)) P (r)) ^ (Q (s) Q (g (r)) _ Q (f (t))) This is a valid derivation if
Reference: [32] <author> S. Kanger. </author> <title> A simplified proof method for elementary logic. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 364-371. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1963. </note>
Reference-contexts: This formula is provable if and only if the following is a valid derivation in a sequent calculus (for example, Kanger's calculus from <ref> [31, 32] </ref>): P (f (s)) ! P (r) (!) Q (s) ! Q (g (r)) _ Q (f (t)) ! Q (s) Q (g (r)) _ Q (f (t)) ! (P (f (s)) P (r)) ^ (Q (s) Q (g (r)) _ Q (f (t))) This is a valid derivation if <p> The if implication is provable by an easy induction on s. To prove the only if implication, use e.g. <ref> [32] </ref> according to which 1 (s) is provable if and only if s ' a can be derived from a ' a in a calculus with axioms f (a; a) ' a; c ' a and derivation rules that replace equals with equals. <p> Example 1.1 Figure 1.1 shows a derivation of the formula 8x (hx ' a) 9y ((ha 6' y _ y ' ghy) ^ (hb 6' f y _ y ' gf y)) in the cut-free sequent calculus of Kanger <ref> [32] </ref> (with some formulas omitted for simplicity) and its skeleton.
Reference: [33] <author> A. Koscielski and L. Pacholski. </author> <title> Complexity of unification in free groups and free semigroups. </title> <booktitle> In Proc. 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 824-829, </pages> <address> Los Alamitos, </address> <year> 1990. </year>
Reference-contexts: No interesting upper bounds for complexity of this problem are yet known 2 . It is only known that the problem is NP-hard (see e.g. Benanav, D. Ka-pur and P. Narendran [5]). Makanin's algorithm [38] leads to a tower of several exponentials (see Koscielski and Pacholski <ref> [33] </ref>). In addition to word equations, some other relations on words can be represented by monadic simultaneous rigid E-unification.
Reference: [34] <author> D. Kozen. </author> <title> Complexity of finitely presented algebras. </title> <booktitle> In Proc. of the 9th Annual Symposium on Theory of Computing, </booktitle> <pages> pages 164-177, </pages> <address> New York, 1977. </address> <publisher> ACM. </publisher>
Reference-contexts: a constant x among the constants of S; this gives you a candidate . (If there are no constants in S, then S is trivially solvable.) Then verify the ground system of rigid equations S using a known polynomial time algorithm (a congruence closure algorithm), e.g. the one of Kozen <ref> [34] </ref>. To demonstrate the NP-hardness of SREU 0 , we reduce the well-known SAT problem to SREU 0 . Let C be a set of propositional clauses with variables x 1 ; : : : ; x n .
Reference: [35] <author> D. Kozen. </author> <title> Positive first-order logic is NP-complete. </title> <journal> IBM J. of Research and Development, </journal> <volume> 25(4) </volume> <pages> 327-332, </pages> <year> 1981. </year> <note> 17 Bibliography </note>
Reference-contexts: Hence, several results proved for E-unification are also valid for rigid E-unification. For example, in Hullot [30] it is shown that in the case of ground left-hand sides there is a finite complete set of E-unifiers and in Kozen <ref> [35] </ref> it is shown that the E-unification problem is NP-complete in the case of ground left-hand sides. We demonstrate that this problem is NP-hard, even for some fixed left-hand side. Take any propositional formula p using only : and ^. The satisfiability problem for such formulas is NP-complete.
Reference: [36] <author> R.C.T. Lee and C.L. Chang. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <year> 1973. </year>
Reference-contexts: Which is right? Answer: Both are wrong. Andrei Voronkov, private email communication. Research on simultaneous rigid E-unification started in 1987 and most results have been proven in 1995-1996. Surprisingly, rigid variables in the context of resolution theorem proving have been used much earlier by Chang and Lee <ref> [8, 36] </ref> in the so-called V -resolution and V -paramodulation rules. They tried to use rigid variables in order to capture Prawitz's procedure by resolution and to formalize the idea of reasoning with bounded resources. In 1988-92, several papers gave faulty proofs of the decidability of simultaneous rigid E-unification.
Reference: [37] <author> L. Lipshitz. </author> <title> The Diophantine problem for addition and divisibility. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 235 </volume> <pages> 271-283, </pages> <month> January </month> <year> 1978. </year>
Reference-contexts: The decision problem of satisfiability of conjunctions of atomic statements in the language f0; 1; +; j; 'g over natural numbers is known as the Diophantine problem for addition and divisibility. This problem has been shown decidable in Bel'tyukov [4], Mart'yanov [42] and Lipshitz <ref> [37] </ref>. Thus, there is a reduction of the Diophantine problem for addition and divisibility to SREU 1 . Degtyarev, Matiyasevich and Voronkov [11] give the converse reduction of SREU 1 to the Diophantine problem for addition and divisibility, thus establishing the decidability of SREU 1 .
Reference: [38] <author> G.S. Makanin. </author> <title> The problem of solvability of equations in free semigroups. </title> <journal> Mat. Sbornik (in Russian), </journal> <volume> 103(2) </volume> <pages> 147-236, </pages> <year> 1977. </year> <journal> English Translation in American Mathematical Soc. </journal> <volume> Translations (2), vol. 117, </volume> <year> 1981. </year>
Reference-contexts: The problem happened to be very hard and its decidability has been proven only in 1977 by Makanin <ref> [38] </ref>. The precise definition may be found e.g. in [39, 40], we shall give here an informal definition of the word equation problem. 13 Section 2. <p> This theorem implies that there is hardly a simple decidability proof for SREU 2 because solvability of the word equations is a very hard combinatorial problem (a mathematically dense proof in Makanin <ref> [38] </ref> occupies 88 journal pages). No interesting upper bounds for complexity of this problem are yet known 2 . It is only known that the problem is NP-hard (see e.g. Benanav, D. Ka-pur and P. Narendran [5]). Makanin's algorithm [38] leads to a tower of several exponentials (see Koscielski and Pacholski <p> a very hard combinatorial problem (a mathematically dense proof in Makanin <ref> [38] </ref> occupies 88 journal pages). No interesting upper bounds for complexity of this problem are yet known 2 . It is only known that the problem is NP-hard (see e.g. Benanav, D. Ka-pur and P. Narendran [5]). Makanin's algorithm [38] leads to a tower of several exponentials (see Koscielski and Pacholski [33]). In addition to word equations, some other relations on words can be represented by monadic simultaneous rigid E-unification.
Reference: [39] <author> G.S. Makanin. </author> <title> Equations in a free semigroup. </title> <journal> American Mathematical Society Translations, </journal> <volume> 117 </volume> <pages> 1-6, </pages> <year> 1981. </year>
Reference-contexts: The problem happened to be very hard and its decidability has been proven only in 1977 by Makanin [38]. The precise definition may be found e.g. in <ref> [39, 40] </ref>, we shall give here an informal definition of the word equation problem. 13 Section 2.
Reference: [40] <author> G.S. Makanin. </author> <title> Investigations on equations in a free group. </title> <editor> In K.U. Schulz, editor, </editor> <title> Word Equations and Related Topics, </title> <booktitle> volume 572 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-12, </pages> <address> Tubingen, Germany, </address> <month> October </month> <year> 1990. </year>
Reference-contexts: The problem happened to be very hard and its decidability has been proven only in 1977 by Makanin [38]. The precise definition may be found e.g. in <ref> [39, 40] </ref>, we shall give here an informal definition of the word equation problem. 13 Section 2.
Reference: [41] <author> A. Martelli and U. Montanari. </author> <title> An efficient unification algorithm. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4(2) </volume> <pages> 258-282, </pages> <year> 1982. </year>
Reference-contexts: Solvability of such systems of equations can be checked in almost linear time by the unification algorithm of Martelli and Montanari <ref> [41] </ref> or in linear time by the unification algorithm of Paterson and Wegman [44] using more complicated data structures. For those unfamiliar with sequent calculi, we sketch an alternative reduction of formula instan-tiation to systems of term equations on the same example, i.e. formula (1.2).
Reference: [42] <author> V.I. Mart'janov. </author> <title> Universal extended theories of integers. </title> <journal> Algebra i Logika, </journal> <volume> 16(5) </volume> <pages> 588-602, </pages> <year> 1977. </year>
Reference-contexts: The decision problem of satisfiability of conjunctions of atomic statements in the language f0; 1; +; j; 'g over natural numbers is known as the Diophantine problem for addition and divisibility. This problem has been shown decidable in Bel'tyukov [4], Mart'yanov <ref> [42] </ref> and Lipshitz [37]. Thus, there is a reduction of the Diophantine problem for addition and divisibility to SREU 1 . Degtyarev, Matiyasevich and Voronkov [11] give the converse reduction of SREU 1 to the Diophantine problem for addition and divisibility, thus establishing the decidability of SREU 1 .
Reference: [43] <author> Yu.V. Matiyasevic. </author> <title> A connection between systems of word and length equations and Hilbert's tenth problem (in Russian). </title> <journal> Zap. Nauchn. Sem. Leningrad. Otdel. Mat. Inst. Steklov. (LOMI), </journal> <volume> 8 </volume> <pages> 132-144, </pages> <year> 1968. </year> <title> English Translation in: </title> <type> Sem. </type> <institution> Math. V.A. Steklov Math. Inst. </institution> <address> Leningrad 8 (1968). </address>
Reference-contexts: The study of word equations (also called equations in a free semigroup or unification under associativity) was initiated by Markov at the end of the 1950s in connection with the then still unsolved Hilbert'a tenth problem <ref> [43] </ref>. The problem happened to be very hard and its decidability has been proven only in 1977 by Makanin [38]. The precise definition may be found e.g. in [39, 40], we shall give here an informal definition of the word equation problem. 13 Section 2.
Reference: [44] <author> M. Paterson and M. Wegman. </author> <title> Linear unification. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 16 </volume> <pages> 158-167, </pages> <year> 1978. </year>
Reference-contexts: Solvability of such systems of equations can be checked in almost linear time by the unification algorithm of Martelli and Montanari [41] or in linear time by the unification algorithm of Paterson and Wegman <ref> [44] </ref> using more complicated data structures. For those unfamiliar with sequent calculi, we sketch an alternative reduction of formula instan-tiation to systems of term equations on the same example, i.e. formula (1.2).
Reference: [45] <author> D.A. Plaisted. </author> <title> Special cases and substitutes for rigid E-unification. </title> <type> Technical Report MPI-I-95-2-010, </type> <institution> Max-Planck-Institut fur Informatik, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: The first procedure for rigid E-unification, described in [20], was not intended to be most efficient; the purpose was to prove the NP-completeness. Later, several papers presented other algorithms for rigid E-unification (Goubault [24], Becher and Petermann [3], De Kogel [18], Plaisted <ref> [45] </ref>). These newer algorithms have been presented as either more efficient or simpler than the original algorithm of [20]. Notice, however, that application-wise the more important problem is SREU, simultaneous rigid E-unification. The six decision problems of Subsection 1.1, equivalent to SREU, witness this fact. 8 A.Degtyarev, Y.Gurevich and A.Voronkov. <p> We have already used this property of rigid equations (and even sketched a proof of it) in Section 1 when we discussed the alternative Skolemization in intuitionistic logic (after presenting Problem 4). In fact, rigid equations allow one to represent any regular set (Goubault [25], Plaisted <ref> [45] </ref> and Veanes [47]). Second, simultaneous rigid E-unification can be used to represent application of substitutions. We shall temporarily use substitution notation ft 1 =c 1 ; : : : ; t n =c n g where c i are constants. <p> Besides the proofs mentioned above, there are proofs of Voda and Komara [48], Plaisted <ref> [45] </ref> and Veanes [47]. Plaisted proved a stronger result. Theorem 3 (Plaisted [45]) Simultaneous rigid E-unification is undecidable even when the left-hand sides of rigid equations are ground. The technique used by Plaisted is different from the previously used techniques. <p> Besides the proofs mentioned above, there are proofs of Voda and Komara [48], Plaisted <ref> [45] </ref> and Veanes [47]. Plaisted proved a stronger result. Theorem 3 (Plaisted [45]) Simultaneous rigid E-unification is undecidable even when the left-hand sides of rigid equations are ground. The technique used by Plaisted is different from the previously used techniques.
Reference: [46] <author> D. Prawitz. </author> <title> An improved proof procedure. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 162-201. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1960. </note>
Reference-contexts: Early methods of automated theorem proving would check provability of instances of (1.3) generating, in some order, all possible values for r; s; t in the Herbrand universe. This proved to be inefficient. Later, starting with Prawitz <ref> [46] </ref>, people used free variable methods where instantiation of variables to terms is delayed until some extra information about instantiation is obtained. In our example, such extra information can be obtained by analysis of the top sequents of the derivation. <p> In the sequel, we speak about the version of Skeleton Instantiation which is equivalent to Prenex Intuitionistic. Let us now come back to Formula Instantiation. This problem has several reformulations which serve as a basis for automated deduction methods exploiting the matrix characterization of validity introduced by Prawitz <ref> [46] </ref>: in particular the method of matings (Andrews [1]) and the connection method (Bibel [6]). The Herbrand theorem in these methods is reformulated in terms of matrices and paths. It can also be formulated in a similar way in terms of tableaux and branches.
Reference: [47] <author> M. Veanes. </author> <title> Uniform representation of recursively enumerable sets with simultaneous rigid E-unification. </title> <type> UPMAIL Technical Report 126, </type> <institution> Uppsala University, Computing Science Department, </institution> <year> 1996. </year>
Reference-contexts: We have already used this property of rigid equations (and even sketched a proof of it) in Section 1 when we discussed the alternative Skolemization in intuitionistic logic (after presenting Problem 4). In fact, rigid equations allow one to represent any regular set (Goubault [25], Plaisted [45] and Veanes <ref> [47] </ref>). Second, simultaneous rigid E-unification can be used to represent application of substitutions. We shall temporarily use substitution notation ft 1 =c 1 ; : : : ; t n =c n g where c i are constants. <p> Besides the proofs mentioned above, there are proofs of Voda and Komara [48], Plaisted [45] and Veanes <ref> [47] </ref>. Plaisted proved a stronger result. Theorem 3 (Plaisted [45]) Simultaneous rigid E-unification is undecidable even when the left-hand sides of rigid equations are ground. The technique used by Plaisted is different from the previously used techniques. <p> The technique used by Plaisted is different from the previously used techniques. He reduced the Post correspondence problem to simultaneous rigid E-unification with ground left-hand sides; furthermore Plaisted uses only systems of six rigid equations with three variables for the reduction. Veanes <ref> [47] </ref> improved the construction of Plaisted. He has shown how to simulate arbitrary Turing machine using six equations and two variables. 11 Section 2. Solutions Theorem 4 (Veanes [47]) Simultaneous rigid E-unification remains undecidable under the following restrictions: 1. the signature contains, in addition to constants, only one function symbol and <p> Veanes <ref> [47] </ref> improved the construction of Plaisted. He has shown how to simulate arbitrary Turing machine using six equations and two variables. 11 Section 2. Solutions Theorem 4 (Veanes [47]) Simultaneous rigid E-unification remains undecidable under the following restrictions: 1. the signature contains, in addition to constants, only one function symbol and the arity of that symbol is 2; 2. the left-hand sides of the rigid equations are ground; 3. there are only two variables; 4. there are only six
Reference: [48] <author> P.J. Voda and J. Komara. </author> <title> On Herbrand skeletons. </title> <type> Technical report, </type> <institution> Institute of Informatics, Comenius University Bratislava, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Thus second-order unification effectively reduces to simultaneous rigid E-unification. This reduction, the Goldfarb result mentioned above and Theorem 1 yield Theorem 2 Problems 1-7 are undecidable. Voda and Komara <ref> [48] </ref> considered a specialization of Herbrand Skeleton of the following form. Suppose that n 1 is fixed. <p> Besides the proofs mentioned above, there are proofs of Voda and Komara <ref> [48] </ref>, Plaisted [45] and Veanes [47]. Plaisted proved a stronger result. Theorem 3 (Plaisted [45]) Simultaneous rigid E-unification is undecidable even when the left-hand sides of rigid equations are ground. The technique used by Plaisted is different from the previously used techniques.
Reference: [49] <author> A. Voronkov. </author> <title> Proof search in intuitionistic logic based on constraint satisfaction. </title> <editor> In P. Miglioli, U. Moscato, D. Mundici, and M. Ornaghi, editors, </editor> <title> Theorem Proving with Analytic Tableaux and Related Methods. </title> <booktitle> 5th International Workshop, TABLEAUX '96, volume 1071 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 312-329, </pages> <address> Terrasini, Palermo Italy, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: For example, applying this equivalence to intuitionistically unprovable formula (1.1), we obtain the intuitionistically provable formula P (a) _ P (b) 9xP (x). For formulas without equality, Prenex Intuitionistic is decidable and PSPACE-complete (Voronkov <ref> [49] </ref>). There are additional interesting problems that the Herbrand theorem gives rise to. One example is related to the derivation skeletons as defined in Voronkov [50].
Reference: [50] <author> A. Voronkov. </author> <title> Proof search in intuitionistic logic with equality, or back to simultaneous rigid E-unification. In M.A. </title> <editor> McRobbie and J.K. Slaney, editors, </editor> <booktitle> Automated Deduction | CADE-13, volume 1104 of Lecture Notes in Computer Science, </booktitle> <pages> pages 32-46, </pages> <address> New Brunswick, NJ, USA, </address> <year> 1996. </year>
Reference-contexts: For formulas without equality, Prenex Intuitionistic is decidable and PSPACE-complete (Voronkov [49]). There are additional interesting problems that the Herbrand theorem gives rise to. One example is related to the derivation skeletons as defined in Voronkov <ref> [50] </ref>. A derivation skeleton is obtained from a derivation by omitting all formulas (or sequents) and keeping only the names of inference rules (but ignoring the equality replacement rule (')) [50]. Consider an example. <p> One example is related to the derivation skeletons as defined in Voronkov <ref> [50] </ref>. A derivation skeleton is obtained from a derivation by omitting all formulas (or sequents) and keeping only the names of inference rules (but ignoring the equality replacement rule (')) [50]. Consider an example. In this and further examples we often omit parentheses in terms with unary function symbols (for example we write f f b instead of f (f (b))). <p> In the case of formal arithmetic, Skeleton Instantiation may lead to the second-order unification problem (Goldfarb [23]). However, for some cut-free sequent calculi and appropriate notions of skeleton, Skeleton Instantiation is equivalent to Prenex Intuitionistic. Their equivalence can be shown using the so-called constraint technique of Voronkov <ref> [50] </ref>. In the sequel, we speak about the version of Skeleton Instantiation which is equivalent to Prenex Intuitionistic. Let us now come back to Formula Instantiation.
References-found: 51

