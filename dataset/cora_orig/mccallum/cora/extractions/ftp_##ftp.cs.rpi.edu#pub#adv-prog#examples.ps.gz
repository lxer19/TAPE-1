URL: ftp://ftp.cs.rpi.edu/pub/adv-prog/examples.ps.gz
Refering-URL: http://www.cs.rpi.edu/~musser/Tecton/
Root-URL: http://www.cs.rpi.edu
Title: Examples of Tecton Concept Descriptions (Working Paper)  
Author: Deepak Kapur David R. Musser 
Note: Contents  
Date: June, 1992  
Address: Albany, New York 12222  Troy, New York 12180  
Affiliation: The University at Albany  Rensselaer Polytechnic Institute  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Deepak Kapur and David R. Musser, "Tecton: </author> <title> a framework for specifying and verifying generic system components," </title> <institution> Rensselaer Polytechnic Institute Computer Science TR 92-20, </institution> <month> July, </month> <booktitle> 1992 (presented at TPCD Conference 1992 (Theorem Provers in Circuit Design), </booktitle> <institution> University of Nijmegan, </institution> <address> The Netherlands, </address> <month> June 22-24, </month> <year> 1992). </year>
Reference-contexts: 1 Introduction As part of a high level specification language called Tecton we are developing a syntax and semantics of concept descriptions. Concept descriptions are to be used to express abstraction and specialization as structuring mechanisms in development of computational systems (both hardware designs and software). In <ref> [1] </ref> we proposed a syntax and semantics for concept descriptions, and gave an extended example of hardware description (a behavioral and structural description of a carry-lookahead adder circuit, with the circuit realization given in terms of a generic parallel-prefix circuit). <p> The present working paper gives more examples of concept descriptions, including an extended example of software specification (generic parallel-reduction and sorting algorithms). At present these examples are only loosely organized and are presented almost entirely without commentary. They are intended to conform to the syntax defined in <ref> [1] </ref>, but since a parser for the language is yet to be implemented, only hand-checking has been done. Similarly, it is intended that with the semantics defined in [1] these examples correspond to the familiar algebraic and programming concepts that are implied by our choice of concept names (Associative, Group, Sequence, <p> They are intended to conform to the syntax defined in <ref> [1] </ref>, but since a parser for the language is yet to be implemented, only hand-checking has been done. Similarly, it is intended that with the semantics defined in [1] these examples correspond to the familiar algebraic and programming concepts that are implied by our choice of concept names (Associative, Group, Sequence, etc.), but no mechanical checking of the semantics has yet been done.
Reference: [2] <author> Deepak Kapur, David R. Musser, and Xumin Nie, </author> <title> "The Tecton Proof System," </title> <booktitle> Proc. of a Workshop on Formal Methods in Databases and Software Engineering, </booktitle> <institution> Concordia University, Montreal, </institution> <month> May 15-16, </month> <year> 1992, </year> <note> to be published by Springer-Verlag, London. </note>
Reference-contexts: One potential use of these examples would be as test cases for theorem proving support for concept descriptions to be developed in an extension to the current Tecton Proof System <ref> [2] </ref>. 2 The examples Lines beginning with -- are comments. 2.1 Boolean and Natural concepts Definition: Boolean introduces bool, true -&gt; bool, false -&gt; bool; generates bool freely using true, false. Remark: The above concept is actually predefined by the semantics. Precedence: -implies- &lt; -or, xor- &lt; -and- &lt; -=-.
References-found: 2

