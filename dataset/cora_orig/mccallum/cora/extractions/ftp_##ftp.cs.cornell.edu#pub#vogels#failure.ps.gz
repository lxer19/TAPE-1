URL: ftp://ftp.cs.cornell.edu/pub/vogels/failure.ps.gz
Refering-URL: http://www.cs.cornell.edu/Info/Projects/HORUS/Papers.html
Root-URL: http://www.cs.brown.edu/
Email: vogels@cs.cornell.edu  
Title: World Wide Failures.  
Author: Werner Vogels 
Address: 4105a Upson Hall, Ithaca, NY 14853  
Affiliation: Dept. of Computer Science, Cornell University  
Abstract: The one issue that unites almost all approaches to distributed computing is the need to know whether certain components in the system have failed or are otherwise unavailable. When designing and building systems that will need to function at a global scale, failure management will need to be considered a fundamental building block. This paper describes the development of a system-independent failure management service, which allows systems and applications to incorporate accurate detection of failed processes, nodes and networks, without the need for making compromises in their particular design.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Amir, Y., Dolev D. , Kramer, S. and Maki, D., </author> <title> Transis a Communication Subsystem for High Availability, </title> <booktitle> Digest of Papers of 22 nd IEEE FTCS, </booktitle> <year> 1992 </year>
Reference: [2] <author> Amir, Y., et al. </author> <title> Fast Message Ordering and Membership Using a Logical Token-Passing Ring. </title> <booktitle> Proc. of ICDCS-13, </booktitle> <month> May </month> <year> 1993. </year>
Reference: [3] <author> Birman, K. and Joseph, T., </author> <title> Reliable communication in the presence of failure, </title> <journal> ACM TOCS, </journal> <month> Feb. </month> <year> 1987 </year>
Reference-contexts: Other systems, especially those designed to support high-availability, support fault-management in a more integrated way. Many of these systems are structured as groups of cooperating processes using some form of group membership, which requires fault-detection to be able to reach consensus. Various methods are used, of which fault monitors <ref> [3] </ref>, heartbeats [8,12] and polling [4] are the most popular. However in each of these systems the failure management is an integral part of the particular membership or transport system and not available for general use.
Reference: [4] <author> Babaoglu, O., Davoli, D. And Montresor, </author> <title> Failure Detectors, Group membership and ViewSynchronous Communication in Partitionable Asynchronous Systems, </title> <type> Technical Report UBLCS-95-18, </type> <institution> University of Bologna, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: Many of these systems are structured as groups of cooperating processes using some form of group membership, which requires fault-detection to be able to reach consensus. Various methods are used, of which fault monitors [3], heartbeats [8,12] and polling <ref> [4] </ref> are the most popular. However in each of these systems the failure management is an integral part of the particular membership or transport system and not available for general use.
Reference: [5] <author> Chandra, T. and Toueg, S., </author> <title> Unreliable Failure Detectors for Reliable Distributed Systems, </title> <note> to appear in Journal of the ACM. </note>
Reference-contexts: A first software release is planned for the summer of 1996. History. External failure detector modules originate in asynchronous distributed systems, where they were introduced to decouple the mechanism by which failures are detected from the protocols used to tolerate those failures. In <ref> [5] </ref> Chandra and Toueg successfully show that it is possible to develop consensus algorithms using failure detectors, even if these failure detectors make frequent mistakes in their observations. In [4,7,9] the failure detector work is extended to systems that also take network failure into account.
Reference: [6] <author> Fisher, J., Lynch., N. and Paterson M., </author> <title> Impossibility of distributed consensus with one faulty process, </title> <journal> Journal of the ACM, </journal> <month> April </month> <year> 1985. </year>
Reference-contexts: Instrumenting the Operating System. To achieve greater failure detection accuracy, it is necessary to instrument the operating environment with support for process investigation. It has always been argued that in a distributed system it is impossible to distinguish a crashed process from one that is slow <ref> [6] </ref>, but with the proper system support this is no longer true. If the node is reachable and operating correctly, the operating system can determine whether or not the process has crashed.
Reference: [7] <author> Guo, K., Renesse, R van and Vogels, W., </author> <title> Structured Virtual Synchrony: Support for Highly Reliable, Scaleable group Communication, </title> <institution> Cornell Univ. </institution> <note> CS Technical Report in preparation, </note> <month> Feb </month> <year> 1996 </year>
Reference: [8] <author> Holbrook, H., Singhal, S. And Cheriton, D., </author> <title> Log-Based Receiver-Reliable Multicast for Distributed Interactive Simulation, </title> <booktitle> Proc. of ACM SIGCOMM95, </booktitle> <month> Sept. </month> <year> 1995 </year>
Reference: [9] <author> Malloth, C. and A. Schiper, A., </author> <title> View Synchronous Communication in Large Scale, </title> <booktitle> Proc. 2nd Open BROADCAST Workshop, </booktitle> <month> July, </month> <year> 1995 </year>
Reference: [10] <author> Malloth, C., </author> <title> Increasing Reliability of Communication in Large Scale Distributed, </title> <booktitle> Proc. of, </booktitle> <address> PDCS-7, </address> <month> October, </month> <year> 1995 </year>
Reference: [11] <author> Powell, D., </author> <title> editor, Delta-4 - A Generic Architecture for Dependable Distributed Computing, ESPRIT Research Reports, </title> <publisher> Springer Verlag, </publisher> <month> Nov. </month> <year> 1991. </year>
Reference: [12] <author> Renesse, R. van, et al., Horus: </author> <title> A Flexible Group Communications System University Technical Report, </title> <address> TR95-1500, </address> <month> March, </month> <year> 1995. </year>
References-found: 12

