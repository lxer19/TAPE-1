URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3804/3804.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: fseonho, agrawalag@cs.umd.edu  leyuan@ie.engr.wisc.edu  
Title: Designing Dynamic Temporal Controls for Critical Systems  
Author: Seonho Choi Ashok K. Agrawala Leyuan Shi 
Date: May 28, 1997  
Address: College Park, MD 20742  Madison, WI 53706  
Affiliation: Institute for Advanced Computer Studies Department of Computer Science University of Maryland  Department of Industrial Engineering University of Wisconsin  
Abstract: Traditional control systems have been designed to exercise control at regularly spaced time instants. When a discrete version of the system dynamics is used, a constant sampling interval is assumed and a new control value is calculated and exercised at each time instant. In this paper, we propose a new control scheme, dynamic temporal control, in which we not only calculate the control value but also dynamically decide the time instants when the new control computations have to be calculated. Taking a discrete, linear, time-invariant system, and a cost function which reflects a cost for computation of the control values, as an example, we show the feasibility of using this scheme. We implement the dynamic temporal control scheme in a rigid body satellite control example and demonstrate the significant reduction in cost. The scheme proposed here can be implemented using real-time operating system, such as Maruti, which schedules activities along the time axis. The reduced computations for control permit the use of the same processor for higher level functions resulting in a significant improvement in the performance of the overall system. fl This work is supported in part by ONR and ARPA under contract N66001-95-C-8619 to the Computer Science Department at the University of Maryland. The views, opinions, and/or findings contained in this report are those of the author(s) and should not be interpreted as representing the official policies, either expressed or implied, of the Advanced Research Projects Agency, ONR or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Belleisle. </author> <title> "Stability of systems with nonlinear feedback through randomly time-varying delays". </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-20:67-75, </volume> <month> February </month> <year> 1975. </year>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
Reference: [2] <author> R. Bellman. </author> <title> Adaptive Control Process: A Guided Tour. </title> <publisher> Princeton,NJ: Princeton University Press, </publisher> <year> 1961. </year>
Reference-contexts: Control Input Cost State Cost time 1 2 3 n-m n-m+1 n-1 m+1 ...... ...... ... .... ... o u ( n n F n F n-1 -1n -m n +1 ) The principle of optimality, developed by Richard Bellman <ref> [2, 3] </ref> is the approach used here.
Reference: [3] <author> R. </author> <title> Bellman. </title> <journal> Bellman special issue. IEEE Transactions on Automatic Control, </journal> <volume> AC-26, </volume> <month> October </month> <year> 1981. </year>
Reference-contexts: Control Input Cost State Cost time 1 2 3 n-m n-m+1 n-1 m+1 ...... ...... ... .... ... o u ( n n F n F n-1 -1n -m n +1 ) The principle of optimality, developed by Richard Bellman <ref> [2, 3] </ref> is the approach used here.
Reference: [4] <author> Seonho Choi and Ashok K. Agrawala. </author> <title> Dynamic dispatching of cyclic real-time tasks with relative constraints. </title> <type> Technical Report CS-TR-3770, </type> <institution> UMIACS-TR-97-30, Department of Computer Science, University of Maryland, </institution> <month> March </month> <year> 1997. </year> <note> 21 0.275 0.525 0.775 0.4 0.65 0 0.1 0.4 0.65 </note>
Reference-contexts: Note that traditional real-time systems [14], which either operate as cyclic executives or manage resources based on static 1 or dynamic priorities, may not be able to implement the temporal control scheme. But, operating systems such as Maruti <ref> [4, 11, 9, 8] </ref>, which manage resources by using a dynamic time based scheduling scheme, can easily implement the scheme. Clearly, the reduction in overall computations for control results in the CPU being made available for other functions including higher level control and planning functions.
Reference: [5] <author> P. Dorato and A. Levis. </author> <title> "Optimal linear regulators: The discrete time case". </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-16:613-620, </volume> <month> December </month> <year> 1971. </year>
Reference-contexts: One unit of time represents the subinterval , whereas x 2 R n and u 2 R l are the state and input vectors, respectively. It is well known that there exists a steady state optimal control law <ref> [5] </ref> u o (i) = f i [x (i)] i = 0; 1; :::; M 1 (2) that minimizes the quadratic performance index function (Cost) J M = k=0 2 where Q 2 R nfin is positive semi-definite and R 2 R lfil is positive definite.
Reference: [6] <author> A. Gosiewski and A. Olbrot. </author> <title> "The effect of feedback delays on the performance of multivariable linear control systems". </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-25(4):729-734, </volume> <month> August </month> <year> 1980. </year>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
Reference: [7] <author> K. Hirai and Y. Satoh. </author> <title> "Stability of a system with variable time delay". </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-25(3):552-554, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
Reference: [8] <author> S. T. Levi, Satish K. Tripathi, Scott Carson, and Ashok K. Agrawala. </author> <title> "The MARUTI hard real-time operating system". </title> <booktitle> ACM Symp. on Op. Syst. Principles, Op. Syst. Review, </booktitle> <volume> 23(3), </volume> <month> July </month> <year> 1989. </year> <month> 22 </month>
Reference-contexts: Note that traditional real-time systems [14], which either operate as cyclic executives or manage resources based on static 1 or dynamic priorities, may not be able to implement the temporal control scheme. But, operating systems such as Maruti <ref> [4, 11, 9, 8] </ref>, which manage resources by using a dynamic time based scheduling scheme, can easily implement the scheme. Clearly, the reduction in overall computations for control results in the CPU being made available for other functions including higher level control and planning functions. <p> In order to implement temporal control we require an operating system that supports scheduling control computations at specific time instants, and allows dynamic selection of sampling periods. The Maruti system developed at the University of Maryland is a suitable host for the implementation of dynamic temporal control <ref> [11, 9, 8] </ref>. In Maruti, all executions are scheduled in time and the time of execution can be modified dynamically, if so desired.
Reference: [9] <author> Shem-Tov Levi and Ashok K. Agrawala. </author> <title> Real Time System Design. </title> <publisher> McGraw Hill, </publisher> <year> 1990. </year>
Reference-contexts: Note that traditional real-time systems [14], which either operate as cyclic executives or manage resources based on static 1 or dynamic priorities, may not be able to implement the temporal control scheme. But, operating systems such as Maruti <ref> [4, 11, 9, 8] </ref>, which manage resources by using a dynamic time based scheduling scheme, can easily implement the scheme. Clearly, the reduction in overall computations for control results in the CPU being made available for other functions including higher level control and planning functions. <p> In order to implement temporal control we require an operating system that supports scheduling control computations at specific time instants, and allows dynamic selection of sampling periods. The Maruti system developed at the University of Maryland is a suitable host for the implementation of dynamic temporal control <ref> [11, 9, 8] </ref>. In Maruti, all executions are scheduled in time and the time of execution can be modified dynamically, if so desired.
Reference: [10] <author> Z. Rekasius. </author> <title> "Stability of digital control with computer interruptions". </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-31:356-359, </volume> <month> April </month> <year> 1986. </year>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
Reference: [11] <author> Manas Saksena, James da Silva, and Ashok K. Agrawala. </author> <title> "Design and implementation of Maruti-II", chapter 4. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year> <title> In Advances in Real-Time Systems, edited by Sang H. </title> <publisher> Son. </publisher>
Reference-contexts: Note that traditional real-time systems [14], which either operate as cyclic executives or manage resources based on static 1 or dynamic priorities, may not be able to implement the temporal control scheme. But, operating systems such as Maruti <ref> [4, 11, 9, 8] </ref>, which manage resources by using a dynamic time based scheduling scheme, can easily implement the scheme. Clearly, the reduction in overall computations for control results in the CPU being made available for other functions including higher level control and planning functions. <p> In order to implement temporal control we require an operating system that supports scheduling control computations at specific time instants, and allows dynamic selection of sampling periods. The Maruti system developed at the University of Maryland is a suitable host for the implementation of dynamic temporal control <ref> [11, 9, 8] </ref>. In Maruti, all executions are scheduled in time and the time of execution can be modified dynamically, if so desired.
Reference: [12] <author> K. G. Shin and H. Kim. </author> <title> "Derivation and application of hard deadlines for real-time control systems". </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 22(6) </volume> <pages> 1403-1413, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
Reference: [13] <author> G.S. Virk. </author> <title> Digital Computer Control Systems, chapter 4. </title> <publisher> McGraw Hill, </publisher> <year> 1991. </year>
Reference-contexts: the system such as Maruti that allows us to consider the notion of dynamic temporal control, in which time becomes an emergent property of the system. 5 Example To illustrate the advantages of a dynamic temporal control scheme let us consider a simple example of rigid body satellite control problem <ref> [13] </ref>. The system state equations are as follows: x (k + 1) = 4 1 2 5 x (k) + 4 0:00125 5 u (k) h i where k represents the time index and one unit of time is the discretized subinterval of length = 0:05.
Reference: [14] <author> J. Xu and D. Parnas. </author> <title> "On satisfying timing constraints in hard real-time systems". </title> <booktitle> In ACM SIGSOFT '91 Conference on Software for Critical Systems, </booktitle> <pages> pages 132-146, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Clearly, the same idea can be extended to continuous time as well as non-linear system. In order to implement the dynamic temporal control scheme proposed here, the ability to carry out computations at dynamically decided time instants is required. Note that traditional real-time systems <ref> [14] </ref>, which either operate as cyclic executives or manage resources based on static 1 or dynamic priorities, may not be able to implement the temporal control scheme.
Reference: [15] <author> K. Zahr and C. Slivinsky. </author> <title> "Delay in multivariable computer controlled linear systems". </title> <journal> IEEE Transactions on Automatic Control, </journal> <pages> pages 442-443, </pages> <month> August </month> <year> 1974. </year> <month> 23 </month>
Reference-contexts: We term this dynamic temporal control. To the best of our knowledge this approach to the design and implementation of controls has not been studied in the past. However, taking computation time delay into consideration for real-time computer control has been studied in several research papers <ref> [1, 6, 7, 10, 12, 15] </ref>. But, all of these papers concentrated on examining computation time delay effects and compensating them while maintaining the assumption of exercising controls at regularly spaced time instants.
References-found: 15

