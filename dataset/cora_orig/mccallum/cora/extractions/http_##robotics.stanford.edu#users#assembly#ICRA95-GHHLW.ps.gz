URL: http://robotics.stanford.edu/users/assembly/ICRA95-GHHLW.ps.gz
Refering-URL: http://robotics.stanford.edu/users/assembly/pubs.html
Root-URL: http://www.cs.stanford.edu
Title: A Simple and Efficient  Procedure for Polyhedral Assembly Partitioning under Infinitesimal Motions  
Author: Leonidas J. Guibas Dan Halperin Hirohisa Hirukawa Jean-Claude Latombe Randall H. Wilson 
Note: To appear in Proc. IEEE ICRA '95  
Abstract: We study the following problem: Given a collection A of polyhedral parts in 3D, determine whether there exists a subset S of the parts that can be moved as a rigid body by an infinitesimal translation and rotation, without colliding with the rest of the parts, A n S. A negative result implies that the object whose constituent parts are the collection A cannot be taken apart with two hands. A positive result, together with the list of movable parts in S and a direction of motion for S, can be used by an assembly sequence planner. This problem has attracted considerable attention within and outside the robotics community. We devise an efficient algorithm to solve this problem. Our solution is based on the ability to focus on selected portions of the tangent space of rigid motions and efficiently access these portions. The algorithm is complete (in the sense that it is guaranteed to find a solution if one exists), simple, and improves significantly over the best previously known solutions. We report experimental results with an implementation of our algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Aronov, M. Bern and D. Eppstein, </author> <title> Arrangements of polytopes, </title> <type> manuscript, </type> <year> 1991. </year>
Reference-contexts: The overall number of cells in the subdivision A (Q) is fi (N 2 K 3 ) in the worst case <ref> [1] </ref>. The number of cells that our algorithm examines is fi (K 5 ). Note that K is never bigger than N ; in practical situations K is often much smaller than N .
Reference: [2] <author> T.A. Cass, </author> <title> Robust geometric matching for 3D object recognition, </title> <booktitle> Proc. Intl. Conf. on Pattern Recognition (ICPR), </booktitle> <address> Jerusalem, </address> <year> 1994, </year> <pages> pp. 477-482. </pages>
Reference-contexts: In terms of geometric features, this is a matching problem|but it is complicated by spurious image features, missing model features, and general geometric uncertainty in real data. An approach to this problem that has been developed by Cass <ref> [2] </ref> proceeds as follows. Define a match to be a pairing of a model feature and an image feature, and a match set as an arbitrary set of matches.
Reference: [3] <author> R. Dawson, </author> <title> On removing a ball without disturbing the others, </title> <journal> Mathematics Magazine 57 no. </journal> <volume> 1 (1984), </volume> <pages> pp. 27-30. </pages>
Reference-contexts: This is typical of several existing assembly planning techniques that rely on a "generate-and-test" approach; see, e.g., [7]. We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., <ref> [3] </ref>, [4], [12]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Mat-sui [17] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the nondirectional blocking graph (NDBG) concept [15]. See Section 2 below.
Reference: [4] <author> L. Fejes Toth and A. Heppes, </author> <note> Uber stabile Korpersysteme, Compositio Mathematica 15 no. </note> <month> 2 </month> <year> (1963), </year> <pages> pp. 119-126. </pages>
Reference-contexts: We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], <ref> [4] </ref>, [12]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Mat-sui [17] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the nondirectional blocking graph (NDBG) concept [15]. See Section 2 below.
Reference: [5] <author> H. Hirukawa, T. Matsui and K. Takase, </author> <title> Automatic determination of possible velocity and applicable force of frictionless objects in contact, </title> <journal> IEEE Trans. Robotics and Automation 10 no. </journal> <volume> 3 (1994), </volume> <pages> pp. 309-322. </pages>
Reference-contexts: Output e and movable subassembly 8. exit 9. Report "INTERLOCKED 00 A preliminary step, omitted in the algorithm description above, derives the point-plane contacts that are used to define the input hyperplane constraints. For that purpose, we use the algorithm devised by Hirukawa et al. <ref> [5] </ref>; see there for details. Note that the algorithm may produce points in cells that are not maximally covered. Also, the set of candidate points produced may change if we choose a different direction D along which we look for minimal vertices. <p> The contact constraints are computed by the algorithm described in <ref> [5] </ref>. The first example, given by Snoeyink and Stolfi [14], consists of six identical tetrahedra in contact and shown in Figure 2. They proved that no proper subset is separable by infinitesimal translation.
Reference: [6] <author> L.S. Homem de Mello and S. Lee, </author> <title> editors, Computer-Aided Mechanical Assembly Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference: [7] <author> L.S. Homem de Mello and A.C. Sanderson, </author> <title> A correct and complete algorithm for the generation of mechanical assembly sequences, </title> <journal> IEEE Trans. Robotics and Automation 7 no. </journal> <volume> 2 (1991), </volume> <pages> pp. 228-240. </pages>
Reference-contexts: Thus their algorithm for checking infinitesimal separability is exponential in the number of parts. This is typical of several existing assembly planning techniques that rely on a "generate-and-test" approach; see, e.g., <ref> [7] </ref>. We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [4], [12]).
Reference: [8] <author> N. Megiddo, </author> <title> Linear programming in linear time when the dimension is fixed, </title> <editor> J. </editor> <booktitle> ACM 31 (1984), </booktitle> <pages> pp. 114-127. </pages>
Reference-contexts: We will focus on the problems that arise when we take all possible combinations of exactly d polytopes; this will dominate the running time of solving all the other LP problems. We use Megiddo's algorithm that runs in time linear in the number of constraints <ref> [8] </ref>. Thus asymptotically the overall running time of all the LP problems equals the overall number of constraints given to all these problems. Let us fix one constraint h, belonging to one polytope T (i.e., to one set of constraints).
Reference: [9] <author> R.S. Mittikalli and P.K. Khosla, </author> <title> Motion constraints from contact geometry: Representation and analysis, </title> <booktitle> Proc. IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, </address> <year> 1992, </year> <pages> pp. 2178-2185. </pages>
Reference: [10] <author> K. Mulmuley, </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms, </title> <publisher> Prentice Hall, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: For one polytope with m facets in dimension d, the preprocessing takes O (m b d 2 c+* ) expected time, and allows for query time O (log m) <ref> [10] </ref>. Let m i be the number of facets of the ith polytope in the given collection.
Reference: [11] <author> B.A.Murtagh and M.A.Saunders, </author> <title> MINOS 5.4 USER'S GUIDE, </title> <type> Technical Report SOL 83-20R, </type> <institution> Department of Operations Research, Stanford University, </institution> <year> 1993. </year>
Reference-contexts: among the parts. 5 Experimental Results The algorithm described above has been implemented and in this section we present selected experimental results. (We have conducted more experiments and these will be reported in a forthcoming full version of the paper.) The linear programming problems are solved using the MINOS package <ref> [11] </ref>. The contact constraints are computed by the algorithm described in [5]. The first example, given by Snoeyink and Stolfi [14], consists of six identical tetrahedra in contact and shown in Figure 2. They proved that no proper subset is separable by infinitesimal translation.
Reference: [12] <author> B.K. Natarajan, </author> <title> On planning assemblies, </title> <booktitle> Proc. 4th ACM Symposium on Computational Geometry, </booktitle> <year> 1988, </year> <pages> pp. 299-308. </pages>
Reference-contexts: In spite of this shortcoming, infinitesimal motions are attractive in assembly planning because their analysis translates to handling linear constraints, even when allowing rotation (see, e.g., [5],[9],[17]). Fore more information on assembly planning see, e.g., [6],[16],[18]. In 1988, in his paper "On Planning Assemblies" <ref> [12] </ref>, Natarajan conjectured that "two hands suffice to assemble any composite comprised of convex polyhedra in 3-space". <p> We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [4], <ref> [12] </ref>). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Mat-sui [17] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the nondirectional blocking graph (NDBG) concept [15]. See Section 2 below.
Reference: [13] <author> M.S. Ohwovoriole and B. Roth, </author> <title> An extension of screw theory, </title> <journal> Trans. ASME, J. Mechanical Design 103 (1981), pp.725-735. </journal>
Reference: [14] <author> J. Snoeyink and J. Stolfi, </author> <title> Objects that cannot be taken apart with two hands, Discrete and Computational Geometry, </title> <booktitle> 12 (1994), </booktitle> <pages> pp. 367-384. </pages>
Reference-contexts: Fore more information on assembly planning see, e.g., [6],[16],[18]. In 1988, in his paper "On Planning Assemblies" [12], Natarajan conjectured that "two hands suffice to assemble any composite comprised of convex polyhedra in 3-space". In a surprising result, Snoeyink and Stolfi <ref> [14] </ref> have recently been able to disprove this conjecture: They gave an example consisting of thirty convex polyhedral parts that cannot be taken apart with two hands. <p> The contact constraints are computed by the algorithm described in [5]. The first example, given by Snoeyink and Stolfi <ref> [14] </ref>, consists of six identical tetrahedra in contact and shown in Figure 2. They proved that no proper subset is separable by infinitesimal translation. <p> We thank Jack Snoeyink and Jorge Stolfi for valuable discussions concerning the contents of the paper. Finally, we thank Jack Snoeyink for supplying us with data of the constructions in <ref> [14] </ref>.
Reference: [15] <author> R.H. Wilson, </author> <title> On Geometric Assembly Planning Ph.D. </title> <type> Dissertation, </type> <institution> Computer Science Department, Stanford University, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Mat-sui [17] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the nondirectional blocking graph (NDBG) concept <ref> [15] </ref>. See Section 2 below. In this paper we take a similar approach to that of Wilson and Matsui, but we derive a considerably more efficient algorithm. Our approach is based on the ability to efficiently access portions of the tangent space that are relevant to our problem.
Reference: [16] <author> R.H. Wilson and J.-C. Latombe, </author> <title> Geometric reasoning about mechanical assembly, </title> <journal> Journal of Artificial Intelligence, </journal> <volume> 71 no. 2, </volume> <year> 1994, </year> <pages> pp. 371-396. </pages>
Reference-contexts: 1 Introduction In this paper we study an instance of the assembly partitioning problem <ref> [16] </ref>: Given a collection A of nonoverlapping polyhedral parts, does there exist an in fl Work on this paper by L.J. Guibas, D. Halperin and J.- C. Latombe has been supported by NSF/ARPA Grant IRI-9306544, and by a grant from the Stanford Integrated Manufacturing Association (SIMA).
Reference: [17] <author> R.H. Wilson and T. Matsui, </author> <title> Partitioning an assembly for infinitesimal motions in translation and rotation, </title> <booktitle> Proc. IEEE International Conference on Intelligent Robots and Systems, </booktitle> <year> 1992, </year> <pages> pp. 1311-1318. </pages>
Reference-contexts: We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [4], [12]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Mat-sui <ref> [17] </ref> who devised a polynomial-time algorithm to solve this problem. Their solution is based on the nondirectional blocking graph (NDBG) concept [15]. See Section 2 below. In this paper we take a similar approach to that of Wilson and Matsui, but we derive a considerably more efficient algorithm. <p> In Section 6 we briefly review the application of the approach to model-based object recognition. Some concluding remarks and open problems are given in Section 7. 2 Background The starting point of our new approach is similar to that of Wilson and Matsui <ref> [17] </ref>. In this section we briefly review some of the ingredients of their analysis that are needed here as well. We refer the reader to their paper [17] for more details. <p> problems are given in Section 7. 2 Background The starting point of our new approach is similar to that of Wilson and Matsui <ref> [17] </ref>. In this section we briefly review some of the ingredients of their analysis that are needed here as well. We refer the reader to their paper [17] for more details. The non-directional blocking graph (NDBG, for short) is a subdivision of the space of all allowable motions of separation into a finite number of cells such that inside any single cell the blocking relation between all pairs of parts is fixed. <p> Since we do not construct the entire subdivision of the space of possible motion directions, we cannot use adjacency relations between cells of the subdivision to incrementally update the DBG as we move from one cell to another, as in <ref> [17] </ref>. Rather, we construct the DBG from scratch at each point. To do that we build, for every polytope in our collection, a data structure that will enable us to efficiently determine whether a point is contained in the polytope or not.
Reference: [18] <author> J.D. Wolter, </author> <title> On the automatic generation of plans for mechanical assembly, </title> <type> Ph.D. Thesis, </type> <institution> The University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1988. </year> <month> 8 </month>
References-found: 18

