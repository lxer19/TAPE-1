URL: http://info.internet.isi.edu:80/0/in-drafts/files/draft-frystyk-http-extensions-02.ps
Refering-URL: http://info.internet.isi.edu:80/in-drafts/id-abstracts.html
Root-URL: http://www.isi.edu
Author: draft-frystyk-http-extensions- P. Leach, Microsoft Scott Lawrence, Agranat Systems 
Date: Expires: Jul 20, 1999 Wed, Jan 20, 1999  
Web: W3C  ftp.is.co.za (Africa), nic.nordu.net (Europe), munnari.oz.au  
Note: INTERNET-DRAFT HTTP Extensions H. Frystyk Nielsen,  Frystyk et al [Page 1] HTTP Extension Framework Status of this Document To learn the current status of any Internet-Draft, please check the "1id-abstracts.txt" listing contained in the Internet-Drafts Shadow Directories on  (Pacific Rim), ds.internic.net (US East Coast), or ftp.isi.edu (US West Coast). Distribution of this document is unlimited. Please send comments to the &lt;ietf-http-ext@w3.org&gt; mailing list. This list is archived at "http://lists.w3.org/Archives/Public/ietf-http-ext/". Table of Contents  
Abstract: This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress". Abstract A wide range of applications have proposed various extensions of the HTTP protocol. Current efforts span an enormous range, including distributed authoring, collaboration, printing, and remote procedure call mechanisms. These HTTP extensions are not coordinated, since there has been no standard framework for defining extensions and thus, separation of concerns. This document describes a generic extension mechanism for HTTP, which is designed to address the tension between private agreement and public specification and to accommodate extension of applications using HTTP clients, servers, and proxies. The proposal associates each extension with a globally unique identifier, and uses HTTP header fields to carry the extension identifier and related information between the parties involved in the extended communication. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. H. Crocker. </author> <title> "Standard for the Format of ARPA Internet Text Messages", </title> <type> STD 11, RFC 822, </type> <institution> UDEL, </institution> <month> August </month> <year> 1982 </year>
Reference: [2] <author> T. Berners-Lee, R. Fielding, H. Frystyk, </author> <title> "Hypertext Transfer Protocol - HTTP/1.0", RFC 1945, </title> <institution> W3C/MIT, UC Irvine, W3C/MIT, </institution> <month> May </month> <year> 1996. </year>
Reference: [3] <author> S. Bradner, </author> <title> "The Internet Standards Process - Revision 3", RFC 2026, </title> <publisher> Harvard University, </publisher> <month> October </month> <year> 1996 </year>
Reference-contexts: A field-name MUST specify a header field uniquely defined in an IETF Standards Track RFC <ref> [3] </ref>. A URI can unambiguously be distinguished from a field-name by the presence of a colon (":").
Reference: [4] <author> N. Freed, N. Borenstein, </author> <title> "Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types", RFC 2046, </title> <booktitle> Innosoft, First Virtual, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: This opens the host party to a variety of "Trojan horse" attacks by the provider, or a malicious third party that forges implementations under a provider's name. See, for example RFC2046 <ref> [4] </ref>, section 4.5.2 for a discussion of these risks.
Reference: [5] <author> R. Fielding, J. Gettys, J. C. Mogul, H. Frystyk, T. Berners-Lee, </author> <title> "Hypertext Transfer Protocol - HTTP/1.1", RFC 2068, U.C. </title> <address> Irvine, DEC W3C/MIT, DEC, W3C/MIT, W3C/MIT, </address> <month> January </month> <year> 1997 </year>
Reference-contexts: Applications implementing this proposal MUST be based on HTTP/1.1 (or later versions of HTTP). 2. Notational Conventions This specification uses the same notational conventions and basic parsing constructs as RFC 2068 <ref> [5] </ref>. In particular the BNF constructs "token", "quoted-string", "Request-Line", "field-name", and "absoluteURI" in this document are to be interpreted as described in RFC 2068 [5]. <p> Notational Conventions This specification uses the same notational conventions and basic parsing constructs as RFC 2068 <ref> [5] </ref>. In particular the BNF constructs "token", "quoted-string", "Request-Line", "field-name", and "absoluteURI" in this document are to be interpreted as described in RFC 2068 [5]. The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [6]. <p> Clients SHOULD be as consistent as possible when generating header-prefix values as this facilitates use of the Vary header field in responses that vary as a function of the request extension declaration (s) (see <ref> [5] </ref>, section 13.6). Examples of header-prefix values are 12 23 Old applications may introduce header fields independent of this extension mechanism, potentially conflicting with header fields introduced by the prefix mechanism. In order to minimize this risk, prefixes MUST contain at least 2 digits. 4. <p> In HTTP/1.1, C-Man, COpt and all header fields with matching header-prefix values defined by C-Man and COpt MUST be protected by a Connection header field. That is, these header fields are to be included as Connection header field directives (see <ref> [5] </ref>, section 14.10). <p> INTERNET-DRAFT HTTP Extensions Wed, Jan 20, 1999 Frystyk, et al [Page 6] The C-Ext response header field is used to indicate that all hop-by-hop mandatory extension declarations in the request were fulfilled. c-ext = "C-Ext" ":" In HTTP/1.1, the C-Ext header fields MUST be protected by a Connection header (see <ref> [5] </ref>, section 14.10). The Ext and the C-Ext header fields are not mutually exclusive; they can both occur within the same message as described in section 5.1. 5. <p> If 2) did not result in a 510 (Not Extended) status code, then strip the "M-" prefix from the method name and process the remainder of the request according to the semantics of the extensions and of the existing HTTP method name as defined in HTTP/1.1 <ref> [5] </ref> or later versions of HTTP. 4. If the evaluation in 3) was successful and the mandatory request fulfilled, the server MUST respond as defined in section 5.1. A server MUST NOT fulfill a request without understanding and obeying all mandatory extension declaration (s) in a request. <p> HTTP proxies that do not understand the "M-" method name prefix SHOULD return 501 (Not Implemented) or turn themselves into a tunnel (see <ref> [5] </ref>) in which case they do not take any part in the communication. <p> If any hop-by-hop mandatory extension declarations were among the fulfilled extensions then the server MUST include a C-Ext response header field in the response. The C-Ext header field MUST be protected by a Connection header field (see <ref> [5] </ref>, section 14.10). HTTP/1.1 200 OK C-Ext: Connection: C-Ext Note, that the Ext and C-Ext header fields are not mutually exclusive; they can be both be present in a response when fulfilling mandatory request containing both hop-by-hop as well as end-to-end mandatory extension declarations. 6.
Reference: [6] <author> S. Bradner, </author> <title> "Key words for use in RFCs to Indicate Requirement Levels", </title> <type> RFC 2119, </type> <institution> Harvard University, </institution> <month> March </month> <year> 1997 </year>
Reference-contexts: The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 <ref> [6] </ref>. This proposal does not rely on particular features defined in URLs [8] that cannot potentially be expressed using URNs (see section 8). Therefore, the more generic term URI [8] is used throughout the specification. INTERNET-DRAFT HTTP Extensions Wed, Jan 20, 1999 Frystyk, et al [Page 3] 3.
Reference: [7] <author> L. Masinter, </author> <title> "Hyper Text Coffee Pot Control Protocol (HTCPCP/1.0)", </title> <type> RFC 2324, </type> <note> Xerox PARC, </note> <month> 1 April </month> <year> 1998 </year>
Reference-contexts: One agent may associate the identifier with the old semantics, and another might associate it with the new semantics. The extension definition may be made available in different representations ranging from o a human-readable specification defining the extension semantics (see for example <ref> [7] </ref>), o downloadable code which implements the semantics defined by the extension, o a formal interface description provided by the extension, to o a machine-readable specification defining the extension semantics.
Reference: [8] <author> T. Berners-Lee, R. Fielding, L. Masinter, </author> <title> "Uniform Resource Identifiers (URI): Generic Syntax", </title> <type> RFC 2396, </type> <month> August 12, </month> <year> 1998 </year>
Reference-contexts: The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119 [6]. This proposal does not rely on particular features defined in URLs <ref> [8] </ref> that cannot potentially be expressed using URNs (see section 8). Therefore, the more generic term URI [8] is used throughout the specification. INTERNET-DRAFT HTTP Extensions Wed, Jan 20, 1999 Frystyk, et al [Page 3] 3. <p> This proposal does not rely on particular features defined in URLs <ref> [8] </ref> that cannot potentially be expressed using URNs (see section 8). Therefore, the more generic term URI [8] is used throughout the specification. INTERNET-DRAFT HTTP Extensions Wed, Jan 20, 1999 Frystyk, et al [Page 3] 3.

References-found: 8

