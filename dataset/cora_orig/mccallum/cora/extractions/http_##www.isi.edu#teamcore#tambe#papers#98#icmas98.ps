URL: http://www.isi.edu/teamcore/tambe/papers/98/icmas98.ps
Refering-URL: http://www.isi.edu/soar/tambe/socteam.html
Root-URL: http://www.isi.edu
Email: ftambe,zhangg@isi.edu  
Title: Towards Flexible Teamwork in Persistent Teams  
Author: Milind Tambe and Weixiong Zhang 
Address: 4676 Admiralty Way, Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute and Computer Science Department University of Southern California  
Abstract: This paper focuses on flexible teamwork in such persistent teams. Unfortunately, while previous work has investigated flexible teamwork, persistent teams remain unexplored. For flexible tamwork, one promising approach that has emerged is model-based, i.e., providing agents with general models of teamwork that explicitly specify their commitments in teamwork. Such models enable agents to autonomously reason about coordination. Unfortunately, for persistent teams, such models may lead to coordination and communication actions that while locally optimal, are highly problematic for the team's long-term goals. We present a decision-theoretic technique to enable persistent teams to overcome such limitations of the model-based approach. In particular, agents reason about expected team utilities of future team states that are projected to result from actions recommended by the teamwork model, as well as lower-cost (or higher-cost) variations on these actions. To accomodate real-time constraints, this reasoning is done in an any-time fashion. Implemented examples from an analytic search tree and some real-world domains are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Boddy and T. Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 979-984. </pages> <publisher> IJCAI-89, Morgan Kaufmann, </publisher> <month> August </month> <year> 1989. </year>
Reference-contexts: A complete search of this state space is however impractical, since (i) a persistent team implies a search extending to all possible future team states; and (ii) hostile situations such as battlefields prohibit agents from prolonged deliberation with no action. Therefore, an any-time <ref> [1] </ref> search method is employed, based on bounded-lookahead search. The paper demonstrates the above approach in three domains, and analyzes situations involving persistent teams where this approach will dominate a pure teamwork-model-driven approach.
Reference: [2] <author> J. Firby. </author> <title> An investigation into reactive planning in complex domains. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1987. </year>
Reference-contexts: STEAM is currently implemented in Soar [17] as a set of about 280 production rules. For a concrete example, consider the operator (reactive-plan) hierarchy shown in Figure 1 for synthetic helicopter pilots developed using STEAM. This operator hierarchy is similar to reactive-plan hierarchies in architectures such as RAPS <ref> [2] </ref>. One key novelty however is team operators (reactive team plans), which explicitly express a team's joint activities, unlike the regular "individual operators" which express an agent's own activities. Thus, operators shown in [] such as [Engage] are team operators (others are individual operators).
Reference: [3] <author> S. Franklin and A. Graesser. </author> <title> Is this an agent or just a program? a taxonomy for autonomous agents. </title> <booktitle> In Proceedings of the third international workshop on agents, theories, architectures, and languages. </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: One example of the latter phenomenon is team reorganization in anticipation of future tasks, as seen in Section 3. Unfortunately, while previous work has recognized the importance of persistence in individual agents <ref> [3] </ref>, it has so far failed to explore the issues in persistent teams. Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork [15, 8, 14].
Reference: [4] <author> B. Grosz and S. Kraus. </author> <title> Collaborative plans for complex group actions. </title> <journal> Artificial Intelligence, </journal> <volume> 86 </volume> <pages> 269-358, </pages> <year> 1996. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork [15, 8, 14]. These models are based on previous theories of teamwork <ref> [12, 9, 4] </ref>. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. However, teamwork theories and models are not explicitly motivated by persistence. <p> STEAM-based soccer-players participated in the RoboCup'97 tournament, winning the third place prize in over 30 teams [16]. Nonetheless, our investigation has broader applicability. STEAM itself is based on the joint intentions theory [12], and is also influenced by the SharedPlans theory <ref> [4] </ref>. Thus, lessons learned here are applicable to other teamwork models based on such theories, such as the joint responsibility model [8] which is also based on joint intentions. 2. <p> Based on the above analysis, it appears STEAM-L becomes more effective in state space where resources are scarce and situation costs vary dramatically. Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork <ref> [4, 12, 9] </ref>, as well as implemented models of teamwork inspired by such theories [8, 14, 15], have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork. <p> STEAM-L leads to improved flexibility in the commitments in teamwork, motivated by long-term team interests. Given that STEAM is rooted in the joint intentions theory [12], and also borrows from SharedPlans <ref> [4] </ref>, the results bear upon other teamwork models based on such theories. While persistent agents and teams remain uninves-tigated in general, one exception is Horvitz's work on continual computation [7].
Reference: [5] <author> B. Hayes-Roth, L. Brownston, and R. V. </author> <title> Gen. </title> <booktitle> Mul-tiagent collaobration in directed improvisation. In Proceedings of the International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <year> 1995. </year>
Reference-contexts: 1. Introduction Teamwork is critical in many multi-agent environments, such as, interactive simulations for training and education [17], RoboCup robotic and synthetic soccer [10], interactive entertainment <ref> [5] </ref>, multi-robot deep sea or space exploration or reconnaissance, and internet-based information integration. A key requirement in many of these domains is team persistence or long-term existence. For instance, consider virtual environments for training [17].
Reference: [6] <author> T. Haynes, S. Sen, N. Arora, and R. Nadella. </author> <title> An automated meeting scheduling system that utilizes user preferences. </title> <booktitle> In Proceedings of the International Conference on Autonomous Agents (Agents'97), </booktitle> <year> 1997. </year>
Reference-contexts: While such persistence is a matter of degree (team longevity in different domains may vary), a persistent team contrasts with a team working together to accomplish a specific temporary joint goal, e.g., the interaction of personal software agents to set up a meeting among their users <ref> [6] </ref>. Persistent teams bring forth a range of research issues ranging from robust team performance over extended time periods (without requiring a human-in-the-loop) to more abstract issues such as maintenance of a team identity in the face of changing membership.
Reference: [7] <author> E. Horvitz. </author> <title> Models of continual computations. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI), </booktitle> <year> 1997. </year>
Reference-contexts: Given that STEAM is rooted in the joint intentions theory [12], and also borrows from SharedPlans [4], the results bear upon other teamwork models based on such theories. While persistent agents and teams remain uninves-tigated in general, one exception is Horvitz's work on continual computation <ref> [7] </ref>. He provides theoretical models for how persistent agents should expend idle time, particularly for solving future problems, given probability distributions of expected problems and their expected costs. He also models the issue of expending a fraction of the current problem-solving time for future problems.
Reference: [8] <author> N. Jennings. </author> <title> Controlling cooperative problem solving in industrial multi-agent systems using joint intentions. </title> <journal> Artificial Intelligence, </journal> <volume> 75, </volume> <year> 1995. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork <ref> [15, 8, 14] </ref>. These models are based on previous theories of teamwork [12, 9, 4]. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. <p> Nonetheless, our investigation has broader applicability. STEAM itself is based on the joint intentions theory [12], and is also influenced by the SharedPlans theory [4]. Thus, lessons learned here are applicable to other teamwork models based on such theories, such as the joint responsibility model <ref> [8] </ref> which is also based on joint intentions. 2. Background: STEAM STEAM is an implemented model of teamwork, aimed at enabling development of individual agents that can engage in flexible teamwork [15]. <p> Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork [4, 12, 9], as well as implemented models of teamwork inspired by such theories <ref> [8, 14, 15] </ref>, have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork.
Reference: [9] <author> D. Kinny, M. Ljungberg, A. Rao, E. Sonenberg, G. Tidhard, and E. Werner. </author> <title> Planned team activity. </title> <editor> In C. Castelfranchi and E. Werner, editors, </editor> <booktitle> Artificial Social Systems, Lecture notes in AI 830. </booktitle> <publisher> Springer, </publisher> <address> NY, </address> <year> 1992. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork [15, 8, 14]. These models are based on previous theories of teamwork <ref> [12, 9, 4] </ref>. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. However, teamwork theories and models are not explicitly motivated by persistence. <p> Based on the above analysis, it appears STEAM-L becomes more effective in state space where resources are scarce and situation costs vary dramatically. Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork <ref> [4, 12, 9] </ref>, as well as implemented models of teamwork inspired by such theories [8, 14, 15], have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork.
Reference: [10] <author> H. Kitano, M. Tambe, P. Stone, S. Coradesci, H. Mat-subara, M. Veloso, I. Noda, E. Osawa, and M. Asada. </author> <title> The robocup synthetic agents' challenge. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: 1. Introduction Teamwork is critical in many multi-agent environments, such as, interactive simulations for training and education [17], RoboCup robotic and synthetic soccer <ref> [10] </ref>, interactive entertainment [5], multi-robot deep sea or space exploration or reconnaissance, and internet-based information integration. A key requirement in many of these domains is team persistence or long-term existence. For instance, consider virtual environments for training [17]. <p> Teams of robotic vehicles for deep sea or space exploration or reconnaissance have similar requirements for persistence. The RoboCup soccer tournament also requires player teams (robotic or synthetic) to persist for at least a full game <ref> [10] </ref>. While such persistence is a matter of degree (team longevity in different domains may vary), a persistent team contrasts with a team working together to accomplish a specific temporary joint goal, e.g., the interaction of personal software agents to set up a meeting among their users [6].
Reference: [11] <author> R. E. Korf. </author> <title> Depth-first iterative-deepening: An optimal admissible tree search. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 97-109, </pages> <year> 1985. </year>
Reference-contexts: To this end, STEAM-L carries out an iterative-deepening lookahead search <ref> [11] </ref>. STEAM-L is always activated at an action state where a decision on the next CP or MR action needs to be made. The algorithm runs in iterations with each subsequent iteration searching to a deeper depth than the previous iteration.
Reference: [12] <author> H. J. Levesque, P. R. Cohen, and J. Nunes. </author> <title> On acting together. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence. </booktitle> <address> Menlo Park, Calif.: </address> <publisher> AAAI press, </publisher> <year> 1990. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork [15, 8, 14]. These models are based on previous theories of teamwork <ref> [12, 9, 4] </ref>. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. However, teamwork theories and models are not explicitly motivated by persistence. <p> For instance, pilot teams based on STEAM successfully participated in the ACTD exercise mentioned above [15]. STEAM-based soccer-players participated in the RoboCup'97 tournament, winning the third place prize in over 30 teams [16]. Nonetheless, our investigation has broader applicability. STEAM itself is based on the joint intentions theory <ref> [12] </ref>, and is also influenced by the SharedPlans theory [4]. Thus, lessons learned here are applicable to other teamwork models based on such theories, such as the joint responsibility model [8] which is also based on joint intentions. 2. <p> Based on the above analysis, it appears STEAM-L becomes more effective in state space where resources are scarce and situation costs vary dramatically. Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork <ref> [4, 12, 9] </ref>, as well as implemented models of teamwork inspired by such theories [8, 14, 15], have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork. <p> STEAM-L leads to improved flexibility in the commitments in teamwork, motivated by long-term team interests. Given that STEAM is rooted in the joint intentions theory <ref> [12] </ref>, and also borrows from SharedPlans [4], the results bear upon other teamwork models based on such theories. While persistent agents and teams remain uninves-tigated in general, one exception is Horvitz's work on continual computation [7]. <p> Such flexibility in teamwork commitments is important in uncertain environments. To formalize such flexible commitments, a reviewer for this paper suggests adding to the "relativizing clause" in the joint intentions framework <ref> [12] </ref>. However, this topic requires further investigation. Another major challenge is understanding the interaction between agent persistence and team persistence. Here it is useful to consider a categorization of teams along two dimensions: persistence of teams and persistence of members. We can thus consider at least four team types.
Reference: [13] <author> H. Raiffa. </author> <title> Decision analysis. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1968. </year>
Reference-contexts: As seen in the figure, action nodes are followed by outcome nodes, and vice versa. Associated with the leaf node in the tree is the final situation cost. The resulting search tree is essentially a decision tree <ref> [13] </ref>. The actions in this search are of two types. The first type are all teamwork-related actions suggested by STEAM, specifically CP actions and MR actions. In this paper, STEAM-L focuses on agents' decisions with respect to CP and MR actions, and it explores their variations in its lookahead search.
Reference: [14] <author> C. Rich and C. Sidner. COLLAGEN: </author> <title> When agents collaborate with people. </title> <booktitle> In Proceedings of the International Conference on Autonomous Agents (Agents'97), </booktitle> <year> 1997. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork <ref> [15, 8, 14] </ref>. These models are based on previous theories of teamwork [12, 9, 4]. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. <p> Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork [4, 12, 9], as well as implemented models of teamwork inspired by such theories <ref> [8, 14, 15] </ref>, have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork.
Reference: [15] <author> M. Tambe. </author> <title> Towards flexible teamwork. </title> <journal> Journal of Artificial Intelligence Research (JAIR), </journal> <volume> 7 </volume> <pages> 83-124, </pages> <year> 1997. </year>
Reference-contexts: Nonetheless, foundational issues in flexible teamwork in general are being investigated. One promising approach that has emerged focuses on providing agents with explicit models of teamwork <ref> [15, 8, 14] </ref>. These models are based on previous theories of teamwork [12, 9, 4]. They enable agents to autonomously reason about coordination and communication in teamwork, providing improved flexibility. Such reasoning is driven by the model's explicit specification of team members' ideal behaviors in teamwork. <p> The paper demonstrates the above approach in three domains, and analyzes situations involving persistent teams where this approach will dominate a pure teamwork-model-driven approach. While a general analysis is provided, the paper focuses in particular on the STEAM model of teamwork <ref> [15] </ref>. STEAM is chosen since it is a state-of-the-art teamwork model, that has been successfully deployed in several real-world domains. For instance, pilot teams based on STEAM successfully participated in the ACTD exercise mentioned above [15]. <p> general analysis is provided, the paper focuses in particular on the STEAM model of teamwork <ref> [15] </ref>. STEAM is chosen since it is a state-of-the-art teamwork model, that has been successfully deployed in several real-world domains. For instance, pilot teams based on STEAM successfully participated in the ACTD exercise mentioned above [15]. STEAM-based soccer-players participated in the RoboCup'97 tournament, winning the third place prize in over 30 teams [16]. Nonetheless, our investigation has broader applicability. STEAM itself is based on the joint intentions theory [12], and is also influenced by the SharedPlans theory [4]. <p> Background: STEAM STEAM is an implemented model of teamwork, aimed at enabling development of individual agents that can engage in flexible teamwork <ref> [15] </ref>. STEAM uses joint intentions as its basic building block and it builds up a hierarchy of joint intentions corresponding to a team's goal or plan hierarchy. STEAM facilitates flexible teamwork via two classes of domain-independent actions. <p> STEAM facilitates flexible teamwork via two classes of domain-independent actions. The first class of coherence preserving or CP actions is based on the commitments in the joint intentions theory, and aims to maintain coherence in the team. It includes the execution of the establish-commitments protocol <ref> [15] </ref> to establish a joint intention. Thus, given an arbitrary team plan OP, all team members execute the protocol to simultaneously select OP as their joint intention. <p> Thus, it would appear beneficial to invoke STEAM-L's looka-head selectively, only in such cases. 6. Summary, Discussion, Future Work Recent progress in theories of teamwork [4, 12, 9], as well as implemented models of teamwork inspired by such theories <ref> [8, 14, 15] </ref>, have led to an improved understanding of teamwork, and to complex teamwork applications. We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork. <p> We have begun to understand that teamwork is distinct from pure coordination, and the importance of commitments in teamwork. In our own previous work, we have applied STEAM <ref> [15] </ref>, a state-of-the-art teamwork model, in several real-world, synthetic domains. This paper takes a step beyond the state-of-the-art, by investigating an important novel phenomenon in teamwork, that of persistent teams. Although persistent teams remain unexplored, they are an important requirement in many multi-agent applications.
Reference: [16] <author> M. Tambe, J. Adibi, Y. Alonaizon, A. Erdem, G. Kaminka, S. Marsella, I. Muslea, and M. Tallis. </author> <title> ISIS: Using an explicit model of teamwork in Robocup97. In RoboCup-97: The first robot world cup soccer games and conferences. </title> <publisher> Springer-Verlag, </publisher> <address> Heidel-berg, Germany, </address> <year> 1998. </year>
Reference-contexts: For instance, pilot teams based on STEAM successfully participated in the ACTD exercise mentioned above [15]. STEAM-based soccer-players participated in the RoboCup'97 tournament, winning the third place prize in over 30 teams <ref> [16] </ref>. Nonetheless, our investigation has broader applicability. STEAM itself is based on the joint intentions theory [12], and is also influenced by the SharedPlans theory [4].
Reference: [17] <author> M. Tambe, W. L. Johnson, R. Jones, F. Koss, J. E. Laird, P. S. Rosenbloom, and K. Schwamb. </author> <title> Intelligent agents for interactive simulation environments. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <month> Spring </month> <year> 1995. </year>
Reference-contexts: 1. Introduction Teamwork is critical in many multi-agent environments, such as, interactive simulations for training and education <ref> [17] </ref>, RoboCup robotic and synthetic soccer [10], interactive entertainment [5], multi-robot deep sea or space exploration or reconnaissance, and internet-based information integration. A key requirement in many of these domains is team persistence or long-term existence. For instance, consider virtual environments for training [17]. <p> as, interactive simulations for training and education <ref> [17] </ref>, RoboCup robotic and synthetic soccer [10], interactive entertainment [5], multi-robot deep sea or space exploration or reconnaissance, and internet-based information integration. A key requirement in many of these domains is team persistence or long-term existence. For instance, consider virtual environments for training [17]. Here, the Advanced Concepts Technology Demonstration battlefield simulation exercise (henceforth, referred to as ACTD) jointly conducted in the US and Europe in October 1997, lasted for multiple days. Participating teams of synthetic pilots were required to persist for at least a single mission execution, which lasted several hours. <p> For instance, if a key individual team member fails to perform its activities, the joint intention itself may be unachievable. In such a case, STEAM's MR actions suggest an appropriate reorganization. STEAM is currently implemented in Soar <ref> [17] </ref> as a set of about 280 production rules. For a concrete example, consider the operator (reactive-plan) hierarchy shown in Figure 1 for synthetic helicopter pilots developed using STEAM. This operator hierarchy is similar to reactive-plan hierarchies in architectures such as RAPS [2].
Reference: [18] <author> W. Zhang and R. E. Korf. </author> <title> Performance of linear-space search algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 79 </volume> <pages> 241-292, </pages> <year> 1995. </year>
Reference-contexts: The artificial search tree is a variation of an incremental random tree <ref> [18] </ref>. One important property of situation costs in real world problems is their dependence. Two situation costs have some degree of dependence if their corresponding action nodes share common edges on the paths from the starting node to them.
References-found: 18

