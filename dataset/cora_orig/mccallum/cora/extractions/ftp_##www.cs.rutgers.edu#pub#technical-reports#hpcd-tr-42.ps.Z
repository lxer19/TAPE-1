URL: ftp://www.cs.rutgers.edu/pub/technical-reports/hpcd-tr-42.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Email: fellman,keane,murata,schwabacg@cs.rutgers.edu  
Title: A Transformation System for Interactive Reformulation of Design Optimization Strategies  
Author: Thomas Ellman John Keane Takahiro Murata Mark Schwabacher 
Note: Proceedings of the Tenth Knowledge-Based Software-Engineering Conference, Boston, MA, 1995  
Date: November 1995  
Address: Piscataway, New Jersey 08855  
Affiliation: Department of Computer Science, Hill Center for Mathematical Sciences Rutgers University,  
Pubnum: HPCD-TR-42  
Abstract: Numerical design optimization algorithms are highly sensitive to the particular formulation of the optimization problems they are given. The formulation of the search space, the objective function and the constraints will generally have a large impact on the duration of the optimization process as well as the quality of the resulting design. Furthermore, the best formulation will vary from one application domain to another, and from one problem to another within a given application domain. Unfortunately, a design engineer may not know the best formulation in advance of attempting to set up and run a design optimization process. In order to attack this problem, we have developed a software environment that supports interactive formulation, testing and reformulation of design optimization strategies. Our system represents optimization strategies in terms of second-order dataflow graphs. Reformulations of strategies are implemented as transformations between dataflow graphs. The system permits the user to interactively generate and search a space of design optimization strategies, and experimentally evaluate their performance on test problems, in order to find a strategy that is suitable for his application domain. The system has been implemented in a domain independent fashion, and is being tested in the domain of racing yacht design. 
Abstract-found: 1
Intro-found: 1
Reference: [ Char et al., 1992 ] <author> B.W. Char, K.O. Geddes, G.H. Gonnet, B.L. Leong, M.B. Monagan, and S.M. Watt. </author> <title> First Leaves: A Tutorial Introduction to Maple V. </title> <publisher> Springer-Verlag and Waterloo Maple Publishing, </publisher> <year> 1992. </year>
Reference-contexts: The transformation called "Solve Equality Constraint" allows the user to reduce the dimension 6 of the search space by solving for one (or more) parameters in terms of others. The transformation allows one to solve symbolically (at the time the strategy is being developed) using MAPLE <ref> [ Char et al., 1992 ] </ref> as an equation solver. The transformation also allows the equation to be solved numerically at run time using a numerical root finder like the Newton-Raphson algorithm.
Reference: [ Choy and Agogino, 1986 ] <author> J. Choy and A. Agogino. Symon: </author> <title> Automated symbolic monotonicity analysis system for qualitative design optimization. </title> <booktitle> In Proceedings ASME International Computers in Engineering Conference, </booktitle> <year> 1986. </year>
Reference-contexts: Nevertheless, we consider the choice of method and tolerance parameters to be significant, and expect our work to be complementary to this previous work. One particular type of search space reformulation, called "model reduction" has been described in [ Papalambros and 12 Wilde, 1988 ] and implemented in <ref> [ Choy and Agogino, 1986 ] </ref> . This work has focused on developing methods that are provably correct, i.e., methods that are guaranteed improve performance without any loss of design quality.
Reference: [ Hoeltzel and Chieng, 1987 ] <author> D. Hoeltzel and W. Chieng. </author> <title> Statistical machine learning for the cognitive selection of nonlinear programming algorithms in engineering design optimization. </title> <booktitle> In Advances in Design Automation, </booktitle> <address> Boston, MA, </address> <year> 1987. </year>
Reference: [ Lawrence et al., 1995 ] <author> C. Lawrence, J. Zhou, and A. </author> <title> Tits. User's guide for CFSQP version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical Report TR-94-16r1, </type> <institution> Institute for Systems Research, University of Maryland, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: We do not consider these strategies to be the final word in yacht design. We do intend that they illustrate the range of strategies that can be generated by our system. We are testing the yacht design strategies using CFSQP <ref> [ Lawrence et al., 1995 ] </ref> as the underlying numeric optimization method. CFSQP is a state-of-the-art implementation of the Sequential Quadratic Programming method.
Reference: [ Orelup et al., 1988 ] <author> M. F. Orelup, J. R. Dixon, P. R. Cohen, and M. K. Simmons. Dominic ii: </author> <title> Meta-level control in iterative redesign. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 25-30, </pages> <address> St. Paul, MN, </address> <year> 1988. </year>
Reference: [ Papalambros and Wilde, 1988 ] <author> P. Papalambros and J. Wilde. </author> <title> Principles of Optimal Design. </title> <publisher> Cam-bridge University Press, </publisher> <address> New York, NY, </address> <year> 1988. </year>
Reference: [ Powell, 1990 ] <author> D. Powell. Inter-gen: </author> <title> A hybrid approach to engineering design optimization. </title> <type> Technical report, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <month> December </month> <year> 1990. </year> <type> Ph.D. Thesis. </type>
Reference: [ Schwabacher et al., 1995 ] <author> M. Schwabacher, T. Ellman, and H. Hirsh. </author> <title> Learning when reformulation is appropriate for iterative design. </title> <booktitle> IJCAI-95 Workshop of Machine Learning in Engineering, </booktitle> <year> 1995. </year> <month> 13 </month>
Reference-contexts: This work is based on the belief that the best optimization strategy will vary from domain to domain, (e.g., in yacht design as compared to say, aircraft design), as well as from problem to problem within a domain. For example, in <ref> [ Schwabacher et al., 1995 ] </ref> we reported experimental results showing that the decision of whether to constrain intermediate quantities appearing in the N etRating constraint will depend on the particular yacht design problem at hand.
Reference: [ Tong, 1988 ] <author> S. S. Tong. </author> <title> Coupling symbolic manipulation and numerical simulation for complex engineering designs. </title> <booktitle> In International Association of Mathematics and Computers in Simulation Conference on Expert Systems for Numerical Computing, </booktitle> <institution> Purdue University, </institution> <year> 1988. </year> <month> 14 </month>
References-found: 9

