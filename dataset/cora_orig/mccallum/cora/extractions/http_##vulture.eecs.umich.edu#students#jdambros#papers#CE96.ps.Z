URL: http://vulture.eecs.umich.edu/students/jdambros/papers/CE96.ps.Z
Refering-URL: http://vulture.eecs.umich.edu/students/jdambros/prefdesign.html
Root-URL: http://www.eecs.umich.edu
Email: wpb@eecs.umich.edu, 313-936-1590,  
Phone: fax 313-763-1260  
Title: Hierarchical Concurrent Engineering  
Author: William Birmingham Joseph DAmbrosio, and Timothy Darr 
Date: Abstract  
Address: Ann Arbor, MI 48109  
Affiliation: Artificial Intelligence Lab, EECS Department, The University of Michigan,  
Note: To be presented at Concurrent Engineering 96 (CE 96)  1 contact author:  
Abstract: It has been our experience that the notion of flat concurrent-engineering organizations is not realistic. We have introduced hierarchical concurrent engineering (HCE) as a general line of research exploring alternate organizational forms and decision-making processes to support concurrent engineering and optimization processes for large engineering projects. In this paper we discuss the application of HCE to a design example involving interactive decision making, and describe two agents that we have developed to facilitate decision making for problems similar to this example. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. R. Cutkosky, et al. </author> <title> PACT: an Experiment i n Integrating Concurrent Engineering Systems, </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 28-37, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: An optimal solution is obtained by restricting the definition of optimality to the preferences of the global coordinator, and ignoring the preferences of domain (discipline) experts. Several agent-based systems focus on the needs of cooperative problem solving among domain experts. Examples of this approach include PACT <ref> [1] </ref>, MatchMaker [2], First-Link [15], and DesignWorld [16]. The focus of the above systems is on knowledge representation and communication for a peer-to-peer problem solving network; there is no concept of hierarchical control or preferences in these systems.
Reference: [2] <author> D. R. Kuokka, and L. T. Harada, </author> <title> Communication Infrastructure for Concurrent Engineering, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 9, No. 4, </volume> <pages> pp. 283-297, </pages> <year> 1995. </year>
Reference-contexts: An optimal solution is obtained by restricting the definition of optimality to the preferences of the global coordinator, and ignoring the preferences of domain (discipline) experts. Several agent-based systems focus on the needs of cooperative problem solving among domain experts. Examples of this approach include PACT [1], MatchMaker <ref> [2] </ref>, First-Link [15], and DesignWorld [16]. The focus of the above systems is on knowledge representation and communication for a peer-to-peer problem solving network; there is no concept of hierarchical control or preferences in these systems. Other agent-based systems have attempted to address the need for hierarchical control and preferences.
Reference: [3] <author> D. Bahler, C. Dupont, and J. Bowen, </author> <title> Mixed Quantitative/Qualitative method for evaluating compromise solutions to conflicts in collaborative design, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 9, No. 4, </volume> <pages> pp. 325-336, </pages> <year> 1995. </year>
Reference-contexts: The teams are typically considered peers in the decision-making process (in fact, some CE decision-support systems explicitly require egalitarianism <ref> [3] </ref>), and generally share control over all aspects of the design process. Being so organized and facilitated, teams typically are free to make various design decisions, with the only explicit requirement being that they respond to any problems that they may cause to other teams.
Reference: [4] <author> J. G. DAmbrosio, T. P. Darr, and W. P. </author> <title> Birmingham, Hierarchical Concurrent Engineering in a Multiagent Framework, Concurrent Engineering: Research and Applications, </title> <publisher> in press, </publisher> <year> 1996. </year>
Reference-contexts: It is unimaginable that, for example, the team designing the engine mounts would make informed decisions about fuel economy, and thus override the decisions of the architecture team. We have introduced hierarchical concurrent engineering (HCE) <ref> [4] </ref> as a general line of research exploring alternate organizational forms and decision-making processes to support concurrent-engineering and optimization processes for large engineering projects. Some of the fundamental concepts underlying HCE are the following: The recognition of hierarchical decision making as an integral and important element of the design process. <p> Thus, a hierarchy of preferences is applied during problem solving, providing global control and the ability to exploit local expertise. 3.1 The ACME multiagent framework We now describe a multiagent framework, ACME <ref> [4] </ref>, for supporting HCE. The use of agents is important in that we see agents as critical to support the complex decision making that designers need to perform. ACME is based on a clear, theoretical distinction between decisions about feasibility and decisions about preference or value.
Reference: [5] <author> D. Davis, and R. G. Smith, </author> <title> Negotiation as a Metaphor for Distributed Problem Solving, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 20, </volume> <pages> pp. 63-109, </pages> <year> 1983. </year>
Reference-contexts: ACME provides the ability for agents to subcontract tasks. The process of subcontracting, which has already been shown to be viable approach to subtask distribution <ref> [5] </ref>, creates a hierarchical, decision-making organization (such as the one in Figure 6). Coordination is accomplished by allowing general contractors, who have a global perspective, to provide direction to subcontractors, who have local expertise.
Reference: [6] <author> C. C. White, et al., </author> <title> A Model of Multi-Attribute Decision Making and TradeOff Weight Determination Under Uncertainty, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> Vol. SMC-14, No. 2, </volume> <pages> pp. 223-229, </pages> <month> March/April </month> <year> 1984. </year>
Reference-contexts: This allows a general contractor to guide a subcontractors action, while still allowing the subcontractor to exploit its expertise. In ACME, decisions related to value (preferences) are made by applying imprecise, multiattribute value functions <ref> [6] </ref>, while decisions related to feasibility are made by constraint satisfaction. A value function representation provides the ability to formally evaluate the desirability of design decisions, and provides a means to represent and resolve the conflicting attributes (cost vs. fuel economy) that characterize CE.
Reference: [7] <author> T. P. Darr and W. P. </author> <title> Birmingham, An AttributeSpace Representation and Algorithm for Concurrent Engineering, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 10, No. </volume> <pages> 1 , pp. 21-35, </pages> <year> 1996. </year>
Reference-contexts: Partitioning and routing are examples of other well-defined tasks that often need to be solved. We are in the process of developing several task-oriented agents to support these common tasks. In this paper, we describe two prototype component-design agents we have developed. The first agent, ACDS <ref> [7] </ref>, is actually a system of interacting agents that solve configuration-design problems based on distributed part catalogs. Catalog agents, one for each part catalog, interact with a system agent to identify a set of parts that implement the required component HW functions and satisfy all necessary constraints.
Reference: [8] <author> J. G. DAmbrosio and W. P. </author> <title> Birmingham, </title> <booktitle> Preference-Directed Design, Artificial Intelligence for Engineering Design, Analysis, and Manufacturing (AI EDAM), </booktitle> <volume> Vol. 9, </volume> <pages> pp. 219-230, </pages> <year> 1995. </year>
Reference-contexts: DesignMaker also has the ability to perform hardware/software (HW/SW) codesign, in that it can explore different combinations of hardware and software to implement a set of tasks, such as the ones given in Figure 2. DesignMaker is based on the configuration-design algorithm given by DAmbrosio and Birmingham <ref> [8] </ref> and the HW/SW codesign algorithm of DAmbrosio and Hu [9]. 3.3 Applying ACME to the design example To solve the example problem in the ACME environment, an agent is created for each decision maker.
Reference: [9] <author> J. G. DAmbrosio and X. Hu, </author> <title> Configuration-Level Hardware/Software Partitioning for Real-Time Embedded Systems, </title> <booktitle> Presented at The Third International Workshop on HardwareSoftware Codesign, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: DesignMaker is based on the configuration-design algorithm given by DAmbrosio and Birmingham [8] and the HW/SW codesign algorithm of DAmbrosio and Hu <ref> [9] </ref>. 3.3 Applying ACME to the design example To solve the example problem in the ACME environment, an agent is created for each decision maker.
Reference: [10] <institution> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing (AI EDAM), </institution> <note> Vol. 9, No. 4 , 1995. To be presented at Concurrent Engineering 96 (CE 96) </note>
Reference-contexts: To be presented at Concurrent Engineering 96 (CE 96) 4 D i sc u s si o n Decision-making support in concurrent engineering is a very active area of research, as indicated by a recent special issue of AI EDAM <ref> [10] </ref>. Currently, there exist two primary approaches for solving CE problems: multilevel optimization and agent-based systems. The multilevel optimization approach is based on mathematical-programming techniques for decomposing and optimizing large systems.
Reference: [11] <author> D. Macko, and Y. Y. Haimes, </author> <title> Overlapping Coordination of Hierarchical Structures, </title> <journal> IEEE Trans. on Systems, Man, and Cybernetics, </journal> <volume> Vol. SMC-8, No. 1 0, </volume> <pages> pp. 745-751, </pages> <year> 1978. </year>
Reference-contexts: Currently, there exist two primary approaches for solving CE problems: multilevel optimization and agent-based systems. The multilevel optimization approach is based on mathematical-programming techniques for decomposing and optimizing large systems. Examples of this approach include the work of Macko and Haimes <ref> [11] </ref>, Haimes [12], Azarm and Li [13], and Sobieski [14]. These approaches do not allow the local expertise of the participating disciplines to impact the value of the final design, since each discipline must solve the optimization problem specified by the global coordinator.
Reference: [12] <author> Y. Y. Haimes, </author> <title> Hierarchical Holographic Modeling, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> Vol. SMC-11, No. 9, </volume> <pages> pp. 606-617, </pages> <month> September </month> <year> 1981. </year>
Reference-contexts: Currently, there exist two primary approaches for solving CE problems: multilevel optimization and agent-based systems. The multilevel optimization approach is based on mathematical-programming techniques for decomposing and optimizing large systems. Examples of this approach include the work of Macko and Haimes [11], Haimes <ref> [12] </ref>, Azarm and Li [13], and Sobieski [14]. These approaches do not allow the local expertise of the participating disciplines to impact the value of the final design, since each discipline must solve the optimization problem specified by the global coordinator.
Reference: [13] <author> S. Azarm and W-C Li, </author> <title> A Two-Level Decomposition Method for Design Optimization, </title> <journal> Engineering Optimization, </journal> <volume> Vol. 13, </volume> <pages> pp. 211-224, </pages> <year> 1988. </year>
Reference-contexts: Currently, there exist two primary approaches for solving CE problems: multilevel optimization and agent-based systems. The multilevel optimization approach is based on mathematical-programming techniques for decomposing and optimizing large systems. Examples of this approach include the work of Macko and Haimes [11], Haimes [12], Azarm and Li <ref> [13] </ref>, and Sobieski [14]. These approaches do not allow the local expertise of the participating disciplines to impact the value of the final design, since each discipline must solve the optimization problem specified by the global coordinator.
Reference: [14] <author> J. Sobieszczanski-Sobieski, </author> <title> Sensitivity of Complex, Internally Coupled Systems, </title> <journal> AIAA Journal, </journal> <volume> Vol. 2 8, No. 1, </volume> <pages> pp. 153-160, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The multilevel optimization approach is based on mathematical-programming techniques for decomposing and optimizing large systems. Examples of this approach include the work of Macko and Haimes [11], Haimes [12], Azarm and Li [13], and Sobieski <ref> [14] </ref>. These approaches do not allow the local expertise of the participating disciplines to impact the value of the final design, since each discipline must solve the optimization problem specified by the global coordinator.
Reference: [15] <author> H. Park, et al., </author> <title> An Agent-Based Approach t o Concurrent Cable Harness Design, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 8, </volume> <pages> pp. 45-61, </pages> <year> 1994. </year>
Reference-contexts: Several agent-based systems focus on the needs of cooperative problem solving among domain experts. Examples of this approach include PACT [1], MatchMaker [2], First-Link <ref> [15] </ref>, and DesignWorld [16]. The focus of the above systems is on knowledge representation and communication for a peer-to-peer problem solving network; there is no concept of hierarchical control or preferences in these systems. Other agent-based systems have attempted to address the need for hierarchical control and preferences.
Reference: [16] <author> P. N., Huyn, M. R. Genesereth, and R. Letsinger, </author> <booktitle> Automated Concurrent Engineering in DesignWorld, IEEE Computer, </booktitle> <pages> pp. 74-76, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Several agent-based systems focus on the needs of cooperative problem solving among domain experts. Examples of this approach include PACT [1], MatchMaker [2], First-Link [15], and DesignWorld <ref> [16] </ref>. The focus of the above systems is on knowledge representation and communication for a peer-to-peer problem solving network; there is no concept of hierarchical control or preferences in these systems. Other agent-based systems have attempted to address the need for hierarchical control and preferences.
Reference: [17] <author> K .J. Werkman, </author> <title> Multiple Agent Cooperative Design Evaluation Using Negotiation, </title> <booktitle> Artificial Intelligence in Design 92, </booktitle> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Other agent-based systems have attempted to address the need for hierarchical control and preferences. Examples of these approaches are DFI <ref> [17] </ref>, ACDS [7,18], Redux [19] and AGENTS [20]. Although these systems attempt to address the needs for hierarchical control and preferences, they lack uniform approaches, general and concise models of utility, or prescribed methods for decision making, and thus are limited in their capabilities.
Reference: [18] <author> T. P. Darr and W. P. </author> <title> Birmingham, Automated Design for Concurrent Engineering, </title> <journal> IEEE Expert, </journal> <volume> Vol. 9, No. 5, </volume> <pages> pp. 35-42, </pages> <month> Oct. </month> <year> 1994. </year>
Reference: [19] <author> C. Petrie, </author> <title> Constrained Decision Revision, </title> <booktitle> Proc. Tenth National Conference on Artificial Intelligence (AAAI-92), p. </booktitle> <pages> 393-400, </pages> <year> (1992). </year>
Reference-contexts: Other agent-based systems have attempted to address the need for hierarchical control and preferences. Examples of these approaches are DFI [17], ACDS [7,18], Redux <ref> [19] </ref> and AGENTS [20]. Although these systems attempt to address the needs for hierarchical control and preferences, they lack uniform approaches, general and concise models of utility, or prescribed methods for decision making, and thus are limited in their capabilities.
Reference: [20] <author> G. Q. Huang, and J. A. Brandon, </author> <title> Agents for Cooperating Expert Systems in Concurrent Engineering Design, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 7, No. 3, </volume> <pages> pp. 145-158, </pages> <year> 1993. </year>
Reference-contexts: Other agent-based systems have attempted to address the need for hierarchical control and preferences. Examples of these approaches are DFI [17], ACDS [7,18], Redux [19] and AGENTS <ref> [20] </ref>. Although these systems attempt to address the needs for hierarchical control and preferences, they lack uniform approaches, general and concise models of utility, or prescribed methods for decision making, and thus are limited in their capabilities. Neither multilevel optimization nor agent-based systems provide a general framework for hierarchical preferences.
Reference: [21] <author> Y. Jin, R. E. Levitt, T. R. Christiansen, and J. Kunz, </author> <title> The Virtual Design Team: Modeling organizational behavior of concurrent design teams, </title> <journal> AI EDAM, </journal> <volume> Vol. 9, No. 2, </volume> <pages> p. 145-158, </pages> <year> (1995). </year>
Reference: [22] <author> S. Talukdar, </author> <title> Asynchronous Teams, </title> <booktitle> Fourth International Symposium on Expert Systems Application to Power Systems, </booktitle> <address> Melbourne, Australia, </address> <year> 1993. </year>
References-found: 22

