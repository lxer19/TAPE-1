URL: http://drl.cs.uiuc.edu/pubs/ssdbm96.ps
Refering-URL: http://drl.cs.uiuc.edu/pubs/ssdbm96.html
Root-URL: http://www.cs.uiuc.edu
Email: fying,winslett,ycho,s-kuo,subramang@cs.uiuc.edu  
Title: Persistent Array Access Using Server-Directed I/O  
Author: K. E. Seamons Y. Chen, M. Winslett, Y. Cho, Transarc Corporation S. Kuo, M. Subramaniam 
Address: Pittsburgh, PA 15219 USA  seamons@transarc.com Urbana, Illinois 61801 USA  
Affiliation: The Gulf Tower Computer Science Department  University of Illinois  
Abstract: Large multidimensional arrays are a common data type in high-performance scientific applications. Without special techniques for handling access to these arrays, i/o can easily become a large fraction of execution time for applications using these arrays, especially on parallel platforms. In this paper we show how to reduce the parallel i/o bottleneck for array data in closely-synchronized SPMD applications on distributed-memory platforms, through the use of server-directed i/o, a method for allowing array data requests on parallel platforms to be translated into long sequential disk reads and writes, while also minimizing the cost of rearranging data as they move between on-disk and in-memory schemas. We present experimental results from the implementation of server-directed i/o in Panda, showing that for i/o of large arrays, Panda utilizes nearly the maximum throughput of the underlying AIX file system on an IBM SP2. We also discuss Panda's user interface, an essential factor in Panda's high performance. 
Abstract-found: 1
Intro-found: 1
Reference: [Bell87] <author> J. L. Bell, G. S. Patterson, Jr., </author> <title> Data Organization in Large Numerical Computations, </title> <journal> The Journal of Supercomputing, </journal> <volume> Volume 1, Number 1, </volume> <year> 1987. </year>
Reference: [Bell88] <author> J. L. Bell, </author> <title> A Specialized Data Management System For Parallel Execution of Particle Physics Codes, </title> <booktitle> SIGMOD International Conference on Management of Data, </booktitle> <volume> Volume 17, Number 3, </volume> <month> September </month> <year> 1988. </year>
Reference-contexts: As building a general purpose scientific data management system for all types of parallel scientific applications is rather difficult, specialized data management systems have been built for certain types of parallel scientific applications. <ref> [Bell88] </ref> describes a specialized data management system for parallel execution of particle physics code on the CRAY-XMP. The system allows users to specify the data clustering, the block sizes and the grouping characteristics.
Reference: [Bennett94] <author> R. Bennett, K. Bryant, A. Sussman, R. Das, and J. Saltz, Jovian: </author> <title> A framework for optimizing parallel I/O, </title> <booktitle> Proceedings of the 1994 Scalable Parallel Libraries Conference, </booktitle> <pages> pages 10-20. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1994. </year>
Reference: [Bordawekar93] <author> R. Bordawekar, J. Miguel del Rosario, and A. Choudary, </author> <title> Design and Evaluation of Primitives for Parallel I/O, </title> <booktitle> Proceedings of Supercomputing '93, </booktitle> <pages> pages 452-461, </pages> <year> 1993. </year>
Reference: [Brezany95] <author> P. Brezany, T. Mueck, and E. Schikuta, </author> <title> Language, compiler and parallel database support for I/O intensive applications, </title> <booktitle> Proceedings of the High Performance Computing and Networking 1995 Europe Conference, </booktitle> <address> Milano, Italy, May 1995, </address> <publisher> Springer-Verlag. </publisher>
Reference: [Carey94] <author> M. Carey, D. DeWitt, M. Franklin, N. Hall, M. McAuliffe, J. Naughton, D. Schuh, M. Solomon, S. Tan, O. Tsatalos, S. White, and M. Zwiling, </author> <title> Shoring up Persistent Applications, </title> <booktitle> Proceedings of the 1994 ACM-SIGMOD Conference on the Management of Data, </booktitle> <address> Minneapolis, MN, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: The performance of Paradise was compared to other GIS databases using the Se-quoia 2000 benchmark [Stonebraker93] on a sequential workstation. Tiles in Paradise are comparable to Panda chunks for 2D arrays. The most interesting feature, though, is that Paradise runs on top of SHORE, a scalable heterogeneous object repository <ref> [Carey94] </ref>. SHORE supports sequential workstations, networks of workstations and shared-nothing multiprocessors. The servers communicate through an RPC facility. An important feature of SHORE is the support for a notion of `value-added' server, which allows users to build application-specific servers on top of SHORE.
Reference: [Corbett95] <author> P. Corbett, D. Feitelson, Y. Hsu, J. Prost, M. Snir, S. Fineberg, B. Nitzberg, B. Traver-sat, and P. Wong. </author> <title> MPI-IO: A Parallel File I/O Interface for MPI, </title> <type> Technical Report NAS-95-002, </type> <institution> NASA Ames Research Center, </institution> <month> January </month> <year> 1995. </year>
Reference: [DeWitt94] <author> D. DeWitt, N. Kabra, J. Luo, J. Patel, and J. Yu, </author> <title> Client-Server Paradise, </title> <booktitle> In Proceedings of the 29th VLDB Conference Sna-tiago, </booktitle> <address> Chile, </address> <year> 1994 </year>
Reference-contexts: and enhanced support for readers by the use of subchunks within each chunk to give fine-grained locality of access for typical applications that read the data, so that a small working set of data such as is needed for visualization can be assembled in memory without too many disk accesses. <ref> [DeWitt94] </ref> describes Paradise, a database system designed for GIS applications. Paradise supports 2D raster images and divides the images into tiles to be stored on disk. Paradise supports compression of individual tiles.
Reference: [del Rosario94] <author> J. M. del Rosario, M. Harry, A. Choudhary, </author> <title> The Design of VIP-FS: A Virtual, Parallel File System for High Performance Parallel and Distributed Computing, </title> <type> Technical Report SCCS-628, </type> <institution> NPAC, </institution> <address> Syra-cuse, NY, </address> <month> May </month> <year> 1994. </year>
Reference: [Galbreath93] <author> N. Galbreath, W. Gropp, and D. Levine, </author> <title> Applications-Driven Parallel I/O, </title> <booktitle> Proceedings of Supercomputing '93, </booktitle> <pages> pages 462-471, </pages> <year> 1993. </year>
Reference: [HPF93] <author> High Performance Fortran Forum, </author> <title> High Performance Fortran Language Specification Version 1.0, </title> <type> Technical Report CRPC-TR92225, CRPC, </type> <institution> Rice University, </institution> <month> January </month> <year> 1993. </year>
Reference: [Interbase90] <institution> Interbase Data Definition Guide, Inter-base Software Corporation, </institution> <year> 1990. </year>
Reference-contexts: However, work on scientific databases has produced helpful techniques. Our performance gains did not come only from server-directed i/o; support for chunked schemas on disk also offers benefits [Sarawagi94, Seamons95]. A few commercial DBMSes support multidimensional arrays, including Interbase <ref> [Interbase90] </ref>, Orion [Xidak91], and Stratum [Stratum89]. However, these systems organize arrays in traditional order on disk and provide an interface that supports reading an entire array or subarray into memory from disk. POSTGRES is an extended-relational DBMS with support for multidimensional arrays with chunked schemas [Sarawagi94].
Reference: [Kotz93] <author> D. Kotz, </author> <title> Throughput of Existing Multiprocessor File Systems (An Informal Study), </title> <institution> Dartmouth PCS-TR93-190, </institution> <year> 1993. </year>
Reference: [Kotz94a] <author> D. Kotz, and N. Nieuwejaar, </author> <title> Dynamic file-access characteristics of a production parallel scientific workload. </title> <booktitle> In Proceedings of Supercomputing '94, </booktitle> <pages> pages 640-649, </pages> <month> November </month> <year> 1994. </year>
Reference: [Kotz94b] <author> D. Kotz, </author> <title> Disk-Directed I/O for MIMD Multiprocessors, </title> <booktitle> First Symposium on Operating Systems Design and Implementation, </booktitle> <month> November </month> <year> 1994. </year>
Reference: [Kotz95a] <author> D. Kotz, </author> <title> Expanding Potential for Disk-Directed I/O. </title> <institution> Dartmouth PCS-TR95-254, </institution> <note> submitted to SPDP '95. </note>
Reference: [Kotz95b] <author> D. Kotz, </author> <title> Disk-Directed I/O for Out-of-Core Computation. </title> <note> Dartmouth TR PCS-TR95-251, submitted to HPDC '95. </note>
Reference: [Maier93] <author> David Maier and Bennet Vance, </author> <title> A Call to Order, </title> <booktitle> Proceedings of the Twelfth ACM Symposium on Principles of Database Systems, </booktitle> <address> Washington D.C., </address> <month> May </month> <year> 1993. </year>
Reference: [Moyer94] <author> S. A. Moyer and V. S. Sunderam, </author> <title> PIOUS: A Scalable Parallel I/O System for Distributed Computing Environments, </title> <booktitle> Proceedings of the Scalable High-Performance Computing Conference, </booktitle> <year> 1994. </year>
Reference: [Paleczny95] <author> Michael Paleczny, Ken Kennedy, and Charles Koelbel. </author> <title> Compiler support for out-of-core arrays on data parallel machines. </title> <booktitle> In Proceedings of the Seventh Symposium on the Frontiers of Massively Parallel Computation, </booktitle> <address> McLean, VA, </address> <month> February </month> <year> 1995. </year>
Reference: [Pasquale94] <author> B. Pasquale, and G. Polyzos, </author> <title> Dynamic I/O Characterization of I/O intensive Scientific Applications, </title> <type> Technical Report No. </type> <institution> CS94-364, University of California, </institution> <address> San Diego, </address> <month> April </month> <year> 1994. </year>
Reference: [Pierce93] <author> P. Pierce, </author> <title> A Concurrent File System for a Highly Parallel Mass Storage Subsystem, </title> <booktitle> Proceedings of the 4th Conference on Hypercube Computers and Applications, </booktitle> <address> Mon-terey, </address> <month> March </month> <year> 1989. </year> , <pages> pp. 155-160. </pages>
Reference: [Purakayastha94] <author> A. Purakayastha, C. Ellis, D. Kotz, N. Nieuwejaar, and M. </author> <title> Best, Characterizing Parallel File-Access Patterns on a Large-Scale Multiprocessor, </title> <institution> Duke University Technical Report CS-1994-33, </institution> <month> October </month> <year> 1994. </year>
Reference: [Sarawagi94] <author> S. Sarawagi and M. Stonebraker, </author> <title> Efficient Organization of Large Multidimensional Arrays, </title> <booktitle> Proceedings of the 10th International Conference on Data Engineering, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: However, work on scientific databases has produced helpful techniques. Our performance gains did not come only from server-directed i/o; support for chunked schemas on disk also offers benefits <ref> [Sarawagi94, Seamons95] </ref>. A few commercial DBMSes support multidimensional arrays, including Interbase [Interbase90], Orion [Xidak91], and Stratum [Stratum89]. However, these systems organize arrays in traditional order on disk and provide an interface that supports reading an entire array or subarray into memory from disk. <p> However, these systems organize arrays in traditional order on disk and provide an interface that supports reading an entire array or subarray into memory from disk. POSTGRES is an extended-relational DBMS with support for multidimensional arrays with chunked schemas <ref> [Sarawagi94] </ref>. There are three key distinctions between support for chunked schemas in POST-GRES and Panda.
Reference: [Seamons94] <author> K. E. Seamons and M. Winslett, </author> <title> An Efficient Abstract Interface for Multidimensional Array I/O, </title> <booktitle> Proceedings of Supercomputing '94, </booktitle> <address> Washington D.C., </address> <month> November </month> <year> 1994. </year>
Reference: [Seamons95] <author> K. E. Seamons and M. Winslett, </author> <title> A Data Management Approach for Handling Large Compressed Arrays in High Performance Computing, </title> <booktitle> Proceedings of Frontiers '95, </booktitle> <address> Washington D.C., </address> <month> February </month> <year> 1995. </year>
Reference-contexts: However, work on scientific databases has produced helpful techniques. Our performance gains did not come only from server-directed i/o; support for chunked schemas on disk also offers benefits <ref> [Sarawagi94, Seamons95] </ref>. A few commercial DBMSes support multidimensional arrays, including Interbase [Interbase90], Orion [Xidak91], and Stratum [Stratum89]. However, these systems organize arrays in traditional order on disk and provide an interface that supports reading an entire array or subarray into memory from disk.
Reference: [Seligman94] <author> E. Seligman, and A. Beguelin, </author> <title> High-Level Fault Tolerance in Distributed Programs, </title> <institution> School of Computer Science, Carnegie Mellon University, USA. </institution> <type> Technical report CMU-CS-94-223, </type> <month> December </month> <year> 1994. </year>
Reference: [Stonebraker93] <author> Michael Stonebraker, Jim Frew, Kenn Gardels, and Jeff Meredith. </author> <title> The SE-QUOIA 2000 storage benchmark. </title> <booktitle> In ACM SIGMOD International Conference on Management of Data, </booktitle> <year> 1993. </year>
Reference-contexts: Paradise supports 2D raster images and divides the images into tiles to be stored on disk. Paradise supports compression of individual tiles. The performance of Paradise was compared to other GIS databases using the Se-quoia 2000 benchmark <ref> [Stonebraker93] </ref> on a sequential workstation. Tiles in Paradise are comparable to Panda chunks for 2D arrays. The most interesting feature, though, is that Paradise runs on top of SHORE, a scalable heterogeneous object repository [Carey94]. SHORE supports sequential workstations, networks of workstations and shared-nothing multiprocessors.
Reference: [Stratum89] <institution> Stratum Technical Reference Manual, Scientific and Engineering Software, Austin, Texas, </institution> <month> October </month> <year> 1989. </year>
Reference-contexts: However, work on scientific databases has produced helpful techniques. Our performance gains did not come only from server-directed i/o; support for chunked schemas on disk also offers benefits [Sarawagi94, Seamons95]. A few commercial DBMSes support multidimensional arrays, including Interbase [Interbase90], Orion [Xidak91], and Stratum <ref> [Stratum89] </ref>. However, these systems organize arrays in traditional order on disk and provide an interface that supports reading an entire array or subarray into memory from disk. POSTGRES is an extended-relational DBMS with support for multidimensional arrays with chunked schemas [Sarawagi94].

References-found: 29

