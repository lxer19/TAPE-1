URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/able/ftp/hla-siw97.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/able/www/paper_abstracts/hla-siw97.html
Root-URL: http://www.cs.cmu.edu
Title: FORMAL MODELING AND ANALYSIS OF THE HLA RTI  
Author: Robert Allen David Garlan 
Keyword: Software Architecture, Formal Specification, HLA, Wright  
Address: Pittsburgh, PA 15213  
Affiliation: Carnegie Mellon University School of Computer Science Carnegie Mellon University  
Abstract: The HLA RTI is a complex artifact, supporting several classes of interaction (e.g., federation management, object management, time management). A critical challenge in producing an RTI architectural framework (and its associated simulation interface specifications) is to develop confidence that its specification is well-formed and complete. In this paper we describe on-going work in formally modelling the HLA both to document the standard more precisely, as well as to analyze it for anomalies, omissions, inconsistencies, and ambiguities. The technical basis for this work is the use of a formal architectural description language, called Wright, and its accompanying toolset.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Robert Allen. </author> <title> Formalizing Software Architecture. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon School of Computer Science, </institution> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: As discussed in [2], descriptions of connectors can be used to determine whether the glue constrains the 3 In this paper we will only be able to briefly describe the notation. Details of the semantic model and the supporting toolset can be found elsewhere <ref> [2, 1] </ref>. roles enough to guarantee critical properties such as local absence of deadlock. These descriptions can also be used to determine whether a configuration is properly constructed, e.g., whether the interfaces of a component are appropriate for use in a particular role.
Reference: [2] <author> Robert Allen and David Garlan. </author> <title> Formalizing architectural connection. </title> <booktitle> In Proceedings of the 16th International Conference on Software Engineering, </booktitle> <pages> pages 71-80, </pages> <address> Sorrento, Italy, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: As discussed in <ref> [2] </ref>, descriptions of connectors can be used to determine whether the glue constrains the 3 In this paper we will only be able to briefly describe the notation. <p> As discussed in [2], descriptions of connectors can be used to determine whether the glue constrains the 3 In this paper we will only be able to briefly describe the notation. Details of the semantic model and the supporting toolset can be found elsewhere <ref> [2, 1] </ref>. roles enough to guarantee critical properties such as local absence of deadlock. These descriptions can also be used to determine whether a configuration is properly constructed, e.g., whether the interfaces of a component are appropriate for use in a particular role.
Reference: [3] <author> DMSO. </author> <title> Web site, </title> <address> URL = http://www.dmso.mil/docslib/hla/. </address>
Reference-contexts: Finally we discuss the strengths and limitations of the approach. 2 overview and rationale The HLA defines a standard for the coordination of individual simulations through the communication of data object attributes and events <ref> [3] </ref>. In the HLA design, members of a federation the HLA term for a distributed simulation coordinate their models of parts of the world by sharing objects of interest and the attributes that define them.
Reference: [4] <author> C.A.R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice Hall, </publisher> <year> 1985. </year> <month> 9 </month>
Reference-contexts: CSP <ref> [4] </ref>. 3 For example, a simple client role might be defined by the CSP process: Role Client = (request !result?x ! Client) u x This defines a participant in an interaction that repeatedly makes a request and receives a result, or chooses to terminate successfully.
References-found: 4

