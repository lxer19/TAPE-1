URL: ftp://ftp.eecs.umich.edu/groups/gasm/crypt.ps
Refering-URL: http://www.eecs.umich.edu/gasm/papers.html
Root-URL: http://www.eecs.umich.edu
Email: Giampaolo.Bella@cl.cam.ac.uk  riccobene@dipmat.unict.it  
Phone: 2  
Title: A Realistic Environment for Crypto-Protocol Analyses by ASMs  
Author: Giampaolo Bella and Elvinia Riccobene 
Address: Cambridge, Cambridge CB2 3QG (UK)  ITALY  
Affiliation: 1 Computer Laboratory, University of  Dipartimento di Matematica, Universita di Catania,  
Abstract: The ASM formalism is tailored to develop a general, realistic environment | a computer network possibly monitored by an active eavesdropper | on which any crypto-protocols can be faithfully anal-ysed. The well known Needham-Schroeder protocol with public keys is considered as a case study, and is proven to establish secure sessions between honest agents. The eavesdropper model can reproduce Lowe's attack, and Lowe's correction to the protocol is shown to be effective. ASM proofs are based on induction, and can be carried out without automated tools. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Bella, G., Paulson, L. C.: </author> <title> Mechanising BAN Kerberos by the Inductive Method. </title> <booktitle> Proc. of Conference on Computer Aided Verification. Springer (1998) (to appear) </booktitle>
Reference-contexts: The approach deals with systems of infinite size, and considers multiple runs and accidental leaks of secrets. His model of spy is acknowledged amongst the most powerful ever proposed, and has been extended by the first author to handle timestamping <ref> [1] </ref>. Our operators analz and synth are inspired by his.
Reference: 2. <author> Bella, G., Riccobene, E.: </author> <title> Formal Analysis of the Kerberos Authentication System. </title> <journal> Journal of Universal Computer Science: </journal> <note> Special Issue on Gurevich's Abstract State Machine 3(12) (1997) 1337-1381 </note>
Reference-contexts: Therefore, it seems widely accepted that induction is suitable to formally specify the goals of a crypto-protocol. We believe that the little formal overhead of ASM models can galvanise the potentialities of induction. This is supported by the complete analysis of the Kerberos Authentication System <ref> [2] </ref>, which verifies a possible attack by the eavesdropper of the network (called spy below). We present a general ASM model of spy that is independent from the protocol being analysed.
Reference: 3. <author> Brackin, S. H.: </author> <title> A HOL Extension of GNY for Automatically Analyzing Cryptographic Protocols. </title> <booktitle> Proc. of Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Press (1996) </publisher>
Reference: 4. <author> Burrows, M., Abadi, M., Needham, R. M.: </author> <title> A logic of authentication. </title> <booktitle> Proceedings of the Royal Society of London 426 (1989) 233-271 </booktitle>
Reference-contexts: However, failure to discover flaws does not necessarily mean that a protocol is correct w.r.t. its goals. A suitable belief logic is defined by Burrows et al. <ref> [4] </ref> to express correctness in terms of the ability of parties to authenticate to each other, and to agree on certain information. Proofs are short and abstract. <p> Theorem 3 (Lowe's Correction). The computation ae does not exist in A 0 . Proof. Straightforward by remark 1. ut Theorem 3 shows that Lowe's correction to the original protocol prevents effectively the middle-person attack. 5 Related Work Burrows et al. <ref> [4] </ref> analyse the public-key Needham-Schroeder protocol by means of a suitable belief logic, stating that the protocol meets the expected authentication goals. They model no eavesdropper. Theorem 1 provides a stronger guarantee, showing the same results to hold in a network under the total control of an active eavesdropper.
Reference: 5. <author> Fabrega, F. J. T., Herzog, J. C., Guttman, J. D.: </author> <title> Strand Spaces: Why is a Security Protocol Correct?. </title> <booktitle> Proc. of Symposium on Security and Privacy. </booktitle> <publisher> IEEE Press (1998) </publisher>
Reference-contexts: Meadows uses state enumeration with inductive features [10], Paulson develops a purely inductive method based on theorem proving [12], and Fabrega et al. more recently propose the only (non-straightforward) application of induction by hand <ref> [5] </ref>. Therefore, it seems widely accepted that induction is suitable to formally specify the goals of a crypto-protocol. We believe that the little formal overhead of ASM models can galvanise the potentialities of induction. <p> Spy's illegal activity We formalise a spy able to send on the network all the fake messages he can build up, in order to analyse the protocols in the worst possible scenario (other models make the same choice | e.g. <ref> [12, 5] </ref>). <p> The traffic is modelled at a low level of abstraction: ns public is the set of all traces of events. The notion of strand space, developed by Fabrega et al. <ref> [5] </ref>, is based on induction carried out by hand. A strand space is a collection of strands (sequences of events) equipped with a graph structure that allows a detailed protocol analysis.
Reference: 6. <author> Kemmerer, R., Meadows, C., Millen, J.: </author> <title> Three Systems for Cryptographic Protocol Analysis. </title> <note> Journal of Cryptology 7(2) (1994) 79-130 </note>
Reference-contexts: State enumeration tools search for flaws (i.e. breach of security) by the exhaustive visit of all states reachable by the model. Despite the necessity of drastic simplifying assumptions to keep the state space at a manageable size, this approach has achieved brilliant results <ref> [6, 14] </ref>. Chief among them, the discovery of a flaw by Lowe [9] on the public-key version of the Needham-Schroeder protocol, after two decades from its publication [11]. However, failure to discover flaws does not necessarily mean that a protocol is correct w.r.t. its goals.
Reference: 7. <author> Gurevich, Y.: </author> <title> Evolving Algebras 1993: Lipari Guide. </title> <editor> In E. Borger (Ed.): </editor> <title> Specification and Validation Methods. </title> <publisher> Oxford University Press (1995) 9-36 </publisher>
Reference-contexts: Related work is illustrated in Sect.5, and Sect.6 concludes. 2 ASM Sketch The proposed model is a distributed Gurevich's Abstract State Machine. We assume that the reader is familiar with the semantics of the Abstract State Machine defined in <ref> [7] </ref> and updated in [8].
Reference: 8. <author> Gurevich, Y.: </author> <note> May 1997 Draft of the ASM Guide. Technical Report CSE-TR-336-97 (1997). </note> <institution> University of Michigan, EECS Department </institution>
Reference-contexts: Related work is illustrated in Sect.5, and Sect.6 concludes. 2 ASM Sketch The proposed model is a distributed Gurevich's Abstract State Machine. We assume that the reader is familiar with the semantics of the Abstract State Machine defined in [7] and updated in <ref> [8] </ref>.
Reference: 9. <author> Lowe, G.: </author> <title> Breaking and Fixing the Needham-Schroeder Public-Key Protocol using FDR. </title> <editor> In Margaria and Steffen (Eds.): </editor> <title> Tools and Algorithms for the Construction and Analysis of Systems. </title> <note> LNCS 1055 (1996) 147-166 </note>
Reference-contexts: Despite the necessity of drastic simplifying assumptions to keep the state space at a manageable size, this approach has achieved brilliant results [6, 14]. Chief among them, the discovery of a flaw by Lowe <ref> [9] </ref> on the public-key version of the Needham-Schroeder protocol, after two decades from its publication [11]. However, failure to discover flaws does not necessarily mean that a protocol is correct w.r.t. its goals. <p> State a non-clashing constraint on it, to formalise that the probability of generating the same nonce at different invocations may be considered zero (Lowe, Meadows, and Paulson make the same assumption <ref> [9, 10, 12] </ref>). Each agent saves the nonces he has generated into a private set, image of the controlled function Nonce : AGENT ! - (NONCE ) being the powerset operator. <p> We also show that the initiator of a conversation with the spy can be later impersonated by the spy to cheat other parties (Lowe's middle person attack <ref> [9] </ref>). Definition 1. Let N 2 NONCE. N is compromised, if and only if N 2 Nonce (Spy). Definition 2. Let N 2 NONCE. N is associated by X with Y , if and only if N 2 Nonce (X) and recipient (N ) = Y . Definition 3.
Reference: 10. <author> Meadows, C.: </author> <title> The NRL Protocol Analyzer: An Overview. </title> <note> Journal of Logic Programming 26(2) (1996) 113-131 </note>
Reference-contexts: The simple observation that a crypto-protocol attempts to keep certain properties true during its execution triggered the intuition that reasoning by induction could help a formal analysis in this field. Meadows uses state enumeration with inductive features <ref> [10] </ref>, Paulson develops a purely inductive method based on theorem proving [12], and Fabrega et al. more recently propose the only (non-straightforward) application of induction by hand [5]. Therefore, it seems widely accepted that induction is suitable to formally specify the goals of a crypto-protocol. <p> State a non-clashing constraint on it, to formalise that the probability of generating the same nonce at different invocations may be considered zero (Lowe, Meadows, and Paulson make the same assumption <ref> [9, 10, 12] </ref>). Each agent saves the nonces he has generated into a private set, image of the controlled function Nonce : AGENT ! - (NONCE ) being the powerset operator. <p> They model no eavesdropper. Theorem 1 provides a stronger guarantee, showing the same results to hold in a network under the total control of an active eavesdropper. The work of Meadows (e.g. <ref> [10] </ref>) is historically the first successful attempt to exceed the limits of state enumeration. The induction comes in her proofs that certain states are unreachable. More recently, Paulson has developed a purely inductive approach based on theorem proving [12].
Reference: 11. <author> Needham, R. M., Schroeder, M.: </author> <title> Using encryption for authentication in large networks of computers. </title> <booktitle> Communications of the ACM 21(12) (1978) 993-999 </booktitle>
Reference-contexts: Despite the necessity of drastic simplifying assumptions to keep the state space at a manageable size, this approach has achieved brilliant results [6, 14]. Chief among them, the discovery of a flaw by Lowe [9] on the public-key version of the Needham-Schroeder protocol, after two decades from its publication <ref> [11] </ref>. However, failure to discover flaws does not necessarily mean that a protocol is correct w.r.t. its goals. A suitable belief logic is defined by Burrows et al. [4] to express correctness in terms of the ability of parties to authenticate to each other, and to agree on certain information.
Reference: 12. <author> Paulson, L. C.: </author> <title> Proving properties of security protocols by induction. </title> <booktitle> Proc. of Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Press (1997) </publisher>
Reference-contexts: The simple observation that a crypto-protocol attempts to keep certain properties true during its execution triggered the intuition that reasoning by induction could help a formal analysis in this field. Meadows uses state enumeration with inductive features [10], Paulson develops a purely inductive method based on theorem proving <ref> [12] </ref>, and Fabrega et al. more recently propose the only (non-straightforward) application of induction by hand [5]. Therefore, it seems widely accepted that induction is suitable to formally specify the goals of a crypto-protocol. We believe that the little formal overhead of ASM models can galvanise the potentialities of induction. <p> State a non-clashing constraint on it, to formalise that the probability of generating the same nonce at different invocations may be considered zero (Lowe, Meadows, and Paulson make the same assumption <ref> [9, 10, 12] </ref>). Each agent saves the nonces he has generated into a private set, image of the controlled function Nonce : AGENT ! - (NONCE ) being the powerset operator. <p> Spy's illegal activity We formalise a spy able to send on the network all the fake messages he can build up, in order to analyse the protocols in the worst possible scenario (other models make the same choice | e.g. <ref> [12, 5] </ref>). <p> The work of Meadows (e.g. [10]) is historically the first successful attempt to exceed the limits of state enumeration. The induction comes in her proofs that certain states are unreachable. More recently, Paulson has developed a purely inductive approach based on theorem proving <ref> [12] </ref>. The approach deals with systems of infinite size, and considers multiple runs and accidental leaks of secrets. His model of spy is acknowledged amongst the most powerful ever proposed, and has been extended by the first author to handle timestamping [1].
Reference: 13. <author> Paulson, L. C.: </author> <title> Mechanized proofs of security protocols: Needham-Schroeder with public keys. </title> <institution> TR 432 (Jan 1997) Cambridge University Computer Laboratory </institution>
Reference: 14. <author> Schneider, S.: </author> <title> Verifying Authentication Protocols Using CSP. </title> <booktitle> Proc. of 10th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Press (1997) </publisher>
Reference-contexts: State enumeration tools search for flaws (i.e. breach of security) by the exhaustive visit of all states reachable by the model. Despite the necessity of drastic simplifying assumptions to keep the state space at a manageable size, this approach has achieved brilliant results <ref> [6, 14] </ref>. Chief among them, the discovery of a flaw by Lowe [9] on the public-key version of the Needham-Schroeder protocol, after two decades from its publication [11]. However, failure to discover flaws does not necessarily mean that a protocol is correct w.r.t. its goals.
References-found: 14

