URL: http://www.cs.utexas.edu/users/dmcl/papers/ps/ToN-GGR.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/allpapers.html
Root-URL: 
Title: Generalized Guaranteed Rate Scheduling Algorithms: A Framework  
Author: Pawan Goyal and Harrick M. Vin 
Abstract: In this paper, we define a class of generalized Guaranteed Rate (GR) scheduling algorithms that includes algorithms which allocate variable rate to packets of a flow. We define work conserving generalized Virtual Clock, Packet-by-Packet Generalized Processor Sharing and Self Clocked Fair Queuing scheduling algorithms that can allocate variable rate to the packets of a flow. We also define scheduling algorithms suitable for servers where packet fragmentation may occur. We demonstrate that if a class of rate controllers is employed for a flow in conjunction with any scheduling algorithm in GR, then the resulting non-work conserving algorithm also belongs to GR. This leads to the definition of several non-work conserving algorithms. We then present a method for deriving the delay guarantee of a network of servers when: (1) different rates are allocated to packets of a flow at different servers along the path and the bottleneck server for each packet may be different, and (2) packet fragmentation and/or reassembly may occur. This delay guarantee enables a network to provide various service guarantees to flows conforming to any specification. We illustrate this by utilizing delay guarantee to derive delay bounds for flows conforming to Leaky Bucket, Exponentially Bounded Burstiness, and Flow Specification. Our method for determining these bounds is valid in internetworks and leads to tighter results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.R. Bennett and H. Zhang. </author> <title> W F 2 Q: Worst-case Fair Weighted Fair Queuing. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 120-127, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: It also defines a scheduling algorithm that combines Delay EDD and a variant of Jitter EDD. 2.5 Discussion Several algorithms, other than those considered in the pre vious sections, also belong to GR. For example, since Frame-based Fair Queuing [20] and Worst-case Fair Weighted Fair Queuing <ref> [1] </ref> also guarantee that, regardless of behaviour of other flows in the network, the bound on departure time of a packet is the same as in PGPS, they also belong to GR.
Reference: [2] <author> R.L. Cruz. </author> <title> Service Burstiness and Dynamic Burstiness Measures: A Framework. </title> <journal> Journal of High Speed Networks, </journal> <volume> 2 </volume> <pages> 105-127, </pages> <year> 1992. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in <ref> [2, 8, 10, 24] </ref>. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. This approach has been generalized in [8] to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms. <p> To derive the delay guarantee of a network of servers, we will first relate the guaranteed rate clock value of a packet at two adjacent servers. A similar approach of analyzing two adjacent servers to analyze end-to-end behaviour of a network of servers has been used in <ref> [2, 18] </ref>.
Reference: [3] <author> R.L. Cruz. </author> <title> A Calculus for Network Delay, Part I : Network Elements in Isolation. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37 </volume> <pages> 114-131, </pages> <month> Jan </month> <year> 1991. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms <ref> [3, 4, 15, 18, 22] </ref>(see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24].
Reference: [4] <author> R.L. Cruz. </author> <title> A Calculus for Network Delay, Part II : Network Analysis. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37 </volume> <pages> 132-141, </pages> <month> Jan </month> <year> 1991. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms <ref> [3, 4, 15, 18, 22] </ref>(see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24].
Reference: [5] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and Simulation of a Fair Queueing Algorithm. </title> <booktitle> In Proceedings of ACM SIG-COMM, </booktitle> <pages> pages 1-12, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Whereas isolation of sources enables a network to provide stronger guarantees and is highly desirable, especially in large heterogeneous networks where sources may be malicious <ref> [5, 15] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification. <p> To show that a scheduling algorithm belongs to GR, we would be required to prove a bound on the departure time of a packet. As observed in <ref> [5, 12] </ref>, it is typically easier to bound the departure time of a packet in preemptive scheduling algorithms.
Reference: [6] <author> D. Ferrari. </author> <title> Client Requirements for Real-Time Communication Services. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 65-72, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: It was shown in <ref> [6, 27] </ref> that if certain schedulability con ditions are met and the minimum inter-arrival time of pack ets is at least l f f , then a packet would depart by D i (p j However, in a networking environment even if the mini mum inter-arrival time is at least l
Reference: [7] <author> L. Georgadis, R. Guerin, and A. Parekh. </author> <title> Optimal Multiplexing on a Single Link: Delay and Buffer Requirements. </title> <booktitle> In Proceeding of INFOCOM'94, </booktitle> <year> 1994. </year> <month> 11 </month>
Reference-contexts: Also, ^ l max is the maximum length of a packet fragment and C is the capacity of the server. Though Theorem 1 is superficially similar to Theorem 1 of [18], as illustrated in <ref> [7] </ref>, Theorem 1 of [18] is not applicable to some of the algorithms (for example, Virtual Clock) that we will be considering.
Reference: [8] <author> L. Georgiadis, R. Guerin, V. Peris, and K.N. Sivarajan. </author> <title> Efficient Network QoS Provisioning Based on per Node Traffic Shaping. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 102-110, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in <ref> [2, 8, 10, 24] </ref>. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. This approach has been generalized in [8] to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms. <p> This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. This approach has been generalized in <ref> [8] </ref> to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms.
Reference: [9] <author> S.J. Golestani. </author> <title> A Self-Clocked Fair Queueing Scheme for High Speed Applications. </title> <booktitle> In Proceedings of INFOCOM'94, </booktitle> <year> 1994. </year>
Reference-contexts: Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. To provide guaranteed QoS to flows, several rate-based scheduling algorithms have been proposed in the literature <ref> [9, 18, 25, 26, 27] </ref> (see [23] for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. <p> These algorithms have different delay and fairness properties as well as implementation complexity, and hence demonstrate that the GR class is broad (an exposition of these algorithms along these dimensions can be found in <ref> [9, 18] </ref>). We will analyze the algorithms assuming that rate allocation may vary with every packet. However, a particular network architecture may choose to allocate variable rate for every message [15], in response to change in reservation [13], or employ some other policy. <p> Self Clocked Fair Queuing The Self Clocked Fair Queu ing scheme, proposed in <ref> [9] </ref>, was designed to facilitate the implementation of a fair queuing scheme in broadband networks. We define a generalized SCFQ algorithm which can allocate variable rate to packets of a flow analogous to SCFQ as follows: 1.
Reference: [10] <author> P. Goyal, S. S. Lam, and H. M. Vin. </author> <title> Determining End-to-End Delay Bounds In Heterogeneous Networks. In ACM/Springer-Verlag Multimedia Systems Journal (to appear). </title> <booktitle> Also appeared in the Proceedings of the Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> Pages 287-298, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in <ref> [2, 8, 10, 24] </ref>. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. This approach has been generalized in [8] to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms. <p> A class of Guaranteed Rate scheduling algorithms (which was shown to include Virtual Clock, Packet-by-Packet Generalized Processor Sharing (PGPS), and Self Clocked Fair Queuing (SCFQ)), and a method for determining end-to-end delay bounds for sources with different characteristics in a network of Guaranteed Rate servers has been presented in <ref> [10] </ref>. <p> The delay guarantee of the GR class enables a single server to provide service guarantees to flows conforming to any specification. To enable a sequence of servers to provide similar service guarantees, we generalize the method presented in <ref> [10] </ref> to derive the delay guarantee of a network of servers, each of which employs a scheduling algorithm in the GR class, when: (1) different rates are allocated to the packets of a flow at different servers along the path and the bottleneck server for each packet may be different, and <p> Finally, Section 5 summarizes our results. 2 Generalized Guaranteed Rate Scheduling Algorithms Many of the scheduling algorithms proposed in the literature guarantee a deadline (referred to as delay guarantee [21]) to a packet of a flow based on its expected arrival time. In <ref> [10] </ref>, we defined the delay guarantee of a packet by associating a guaranteed rate clock value with each packet. The class of guaranteed rate scheduling algorithms was defined to consist of algorithms that guarantee that a packet would be transmitted by its guaranteed rate clock value plus some constant. <p> For example, it enables a server to guarantee an upper bound on delay and tail dis tribution of delay to packets of a flow conforming to leaky bucket and Exponentially Bounded Burstiness (EBB) pro cess, respectively <ref> [10] </ref>. In a network environment, however, packets of a flow are serviced by a sequence of servers. <p> This enables a network of servers, as in the case of a single server, to provide service guarantee to flows conforming to any specification. This methodology was employed in <ref> [10] </ref> when constant rate is allocated to the packets of a flow and packet fragmentation and reassembly does not occur. <p> For example: If a flow conforms to Leaky Bucket with param eters (; r) and br is the minimum rate allocated to the packets of the flow such that r br, then from <ref> [10] </ref> we get: GRC 1 (p j ; br) A 1 (p j ) br Substituting (16) in (16) gives an upper bound on the end-to-end delay. <p> If a flow conforms to Exponentially Bounded Burstiness (EBB) process with parameters (r; fl; fl) [22], and br is the minimum rate allocated to the packets of the flow such that r br, then from <ref> [10] </ref> we get: y (17) An upper bound on the tail distribution of the end-to-end delay is derived by substituting (17) in (16). An upper bound on tail distribution of end-to-end delay of a markovian process can be similarly derived.
Reference: [11] <author> P. Goyal and H. M. Vin. </author> <title> Generalized Guaranteed Rate Scheduling Algorithms: A Framework. </title> <type> Technical Report TR-95-30, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <year> 1995. </year> <note> Available via URL http://www.cs.utexas.edu/users/dmcl. </note>
Reference-contexts: In what follows, we establish a relationship between preemptive and non-preemptive scheduling algorithms. Due to lack of space, the proofs of the results are omitted and can be found in <ref> [11] </ref>. where l j;i f is the length of link-level header at server i. Consequently, guaranteed rate clock value of a packet with and without the link-level headers is the same. <p> Using Theorem 1 of [18], it has been shown in <ref> [11] </ref> that L i P GP S (p f ) L i j l i C i .
Reference: [12] <author> A. Greenberg and N. </author> <title> Madras. How Fair is Fair Queuing. </title> <journal> The Journal of ACM, </journal> <volume> 39(3) </volume> <pages> 568-598, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: We define work conserving generalized Virtual Clock, PGPS, and SCFQ scheduling algorithms that can allocate variable rate to the packets of a flow, and show that they belong to GR. To prove that many scheduling algorithms belong to GR, we employ a proof methodology (similar to that in <ref> [12, 18] </ref>) in which we first show that a preemptive equivalent of the algorithm belongs to GR, and then utilize a relationship (also derived in this paper) between preemptive and non-preemptive scheduling algorithms to show that the non-preemptive algorithm belongs to GR. <p> To show that a scheduling algorithm belongs to GR, we would be required to prove a bound on the departure time of a packet. As observed in <ref> [5, 12] </ref>, it is typically easier to bound the departure time of a packet in preemptive scheduling algorithms. <p> Hence, even though packet scheduling algorithms are inherently non-preemptive in nature, to show that a scheduling algorithm belongs to GR, we employ a proof methodology, similar to the methodology in <ref> [12, 18] </ref>, in which we first prove a bound on the departure time of a packet in preemptive scheduling algorithm, and then use a relationship between the departure times of a packet in equivalent preemptive and non-preemptive scheduling algorithm.
Reference: [13] <author> M. Grossglauser, S. Keshav, and D. Tse. RCBR: </author> <title> A Simple and Efficient Service for Multiple Time-Scale Traffic. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <year> 1995. </year>
Reference-contexts: We will analyze the algorithms assuming that rate allocation may vary with every packet. However, a particular network architecture may choose to allocate variable rate for every message [15], in response to change in reservation <ref> [13] </ref>, or employ some other policy. These policy issues are the subject of future investigation and beyond the scope of this paper. Virtual Clock We define generalized Virtual Clock (VC) scheduling algorithm analogous to the Virtual Clock algorithm [26]. The generalized VC algorithm is defined as follows: 1.
Reference: [14] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari. </author> <title> Real-Time Communication in Multihop Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(10) </volume> <pages> 1044-1056, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: This problem was addressed in <ref> [14, 27] </ref> by requiring the clocks of the servers to be synchronized.
Reference: [15] <author> S.S. Lam and G.G. Xie. </author> <title> Burst Scheduling: Architecture and Algorithm for Switching Packet Video. </title> <booktitle> In Proceedings of INFO-COM'95, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: To address this requirement, a nonwork conserving scheduling algorithm (referred to as Burst Scheduling), that combines the Virtual Clock scheduling algorithm with the concept of an active flow, was proposed in <ref> [15] </ref>. Work conserving algorithms that achieve the same objective, however, have not received much attention. In addition to a variety of scheduling algorithms, to provide QoS guarantees, a wide range of traffic specifications 1 have also been proposed in the literature [15, 18, 22, 25]. <p> Work conserving algorithms that achieve the same objective, however, have not received much attention. In addition to a variety of scheduling algorithms, to provide QoS guarantees, a wide range of traffic specifications 1 have also been proposed in the literature <ref> [15, 18, 22, 25] </ref>. However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. <p> However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms <ref> [3, 4, 15, 18, 22] </ref>(see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. <p> We utilize the delay guarantee of a network of servers to obtain an upper bound on end-to-end delay. We illustrate the end-to-end delay bound computation for flows conforming to Leaky Bucket, Exponentially Bounded Burstiness, and Flow Specification <ref> [15] </ref>. The rest of the paper is organized as follows: In Section 2, we define the class of generalized GR scheduling algorithms. The method for deriving delay guarantee for a network of servers is presented in Section 3. <p> Whereas isolation of sources enables a network to provide stronger guarantees and is highly desirable, especially in large heterogeneous networks where sources may be malicious <ref> [5, 15] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification. <p> We will analyze the algorithms assuming that rate allocation may vary with every packet. However, a particular network architecture may choose to allocate variable rate for every message <ref> [15] </ref>, in response to change in reservation [13], or employ some other policy. These policy issues are the subject of future investigation and beyond the scope of this paper. Virtual Clock We define generalized Virtual Clock (VC) scheduling algorithm analogous to the Virtual Clock algorithm [26]. <p> Observe that generalized Virtual Clock is work conserving and permits variable rate to be allocated to the packets of a flow as long as a servers capacity is not exceeded. This is in contrast to the non-work conserving Burst Scheduling algorithm presented in <ref> [15] </ref> in which Virtual Clock scheduling algorithm has been employed to allocate variable rate by defining the notion of an active flow. A flow has a constant rate allocated to it as long as it is active. <p> An upper bound on tail distribution of end-to-end delay of a markovian process can be similarly derived. If a flow conforms to the variable rate Flow Specification introduced in <ref> [15] </ref>, then for the first packet of a burst of a flow: GRC 1 (p j ; br j ) A 1 (p j ) br j (18) Substituting (18) in (16) gives an upper bound on end-to-end delay which is a generalization of the bound for constant length packets in <p> then for the first packet of a burst of a flow: GRC 1 (p j ; br j ) A 1 (p j ) br j (18) Substituting (18) in (16) gives an upper bound on end-to-end delay which is a generalization of the bound for constant length packets in <ref> [15] </ref>. This generalization can be exploited to design algorithms that, by appropriately selecting packet lengths, reduce the jitter of VBR video flows. In the above analysis, t i;i+1 is an upper bound on the propagation delay.
Reference: [16] <author> J. Mogul and S. Deering. </author> <note> Path MTU discovery. RFC 1191, </note> <year> 1990. </year>
Reference-contexts: Also using Theorem 1, Theorem 2 and Theorem 4, we know that partially preemptive generalized Virtual Clock and Delay EDD also belong to GR 3 In Internet packet fragmentation and reassembly can be avoided at the network layer by using path Maximum Transmission Unit (MTU) discovery <ref> [16] </ref>.
Reference: [17] <author> A. K. Parekh and R. G. Gallager. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: The Multiple Node Case. </title> <journal> IEEE/ACM Transactions On Networking, </journal> <volume> 2(2) </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: We illustrate the subtleties in (19) by comparing it with the seminal analysis presented in <ref> [17] </ref> for Rate Proportional Processor Sharing (RPPS) rate assignment of PGPS networks. The delay bound in [17] for a flow that conforms to Leaky Bucket with parameters (; r) and has minimum rate br r assigned to the packets (br r) is: d j br i=K1 X l max + n=1 <p> We illustrate the subtleties in (19) by comparing it with the seminal analysis presented in <ref> [17] </ref> for Rate Proportional Processor Sharing (RPPS) rate assignment of PGPS networks. The delay bound in [17] for a flow that conforms to Leaky Bucket with parameters (; r) and has minimum rate br r assigned to the packets (br r) is: d j br i=K1 X l max + n=1 10 where l max is the maximum length of a packet of the flow.
Reference: [18] <author> A.K. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, MIT, </institution> <year> 1992. </year>
Reference-contexts: Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. To provide guaranteed QoS to flows, several rate-based scheduling algorithms have been proposed in the literature <ref> [9, 18, 25, 26, 27] </ref> (see [23] for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. <p> Work conserving algorithms that achieve the same objective, however, have not received much attention. In addition to a variety of scheduling algorithms, to provide QoS guarantees, a wide range of traffic specifications 1 have also been proposed in the literature <ref> [15, 18, 22, 25] </ref>. However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. <p> However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms <ref> [3, 4, 15, 18, 22] </ref>(see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. <p> We define work conserving generalized Virtual Clock, PGPS, and SCFQ scheduling algorithms that can allocate variable rate to the packets of a flow, and show that they belong to GR. To prove that many scheduling algorithms belong to GR, we employ a proof methodology (similar to that in <ref> [12, 18] </ref>) in which we first show that a preemptive equivalent of the algorithm belongs to GR, and then utilize a relationship (also derived in this paper) between preemptive and non-preemptive scheduling algorithms to show that the non-preemptive algorithm belongs to GR. <p> Hence, even though packet scheduling algorithms are inherently non-preemptive in nature, to show that a scheduling algorithm belongs to GR, we employ a proof methodology, similar to the methodology in <ref> [12, 18] </ref>, in which we first prove a bound on the departure time of a packet in preemptive scheduling algorithm, and then use a relationship between the departure times of a packet in equivalent preemptive and non-preemptive scheduling algorithm. <p> Also, ^ l max is the maximum length of a packet fragment and C is the capacity of the server. Though Theorem 1 is superficially similar to Theorem 1 of <ref> [18] </ref>, as illustrated in [7], Theorem 1 of [18] is not applicable to some of the algorithms (for example, Virtual Clock) that we will be considering. <p> Also, ^ l max is the maximum length of a packet fragment and C is the capacity of the server. Though Theorem 1 is superficially similar to Theorem 1 of <ref> [18] </ref>, as illustrated in [7], Theorem 1 of [18] is not applicable to some of the algorithms (for example, Virtual Clock) that we will be considering. <p> These algorithms have different delay and fairness properties as well as implementation complexity, and hence demonstrate that the GR class is broad (an exposition of these algorithms along these dimensions can be found in <ref> [9, 18] </ref>). We will analyze the algorithms assuming that rate allocation may vary with every packet. However, a particular network architecture may choose to allocate variable rate for every message [15], in response to change in reservation [13], or employ some other policy. <p> Generalized Virtual Clock does not have any such requirements, and hence reduces the implementation complexity. Packet-by-Packet Generalized Processor Sharing The Packet-by-Packet Generalized Processor Sharing schedul ing algorithm is a practical realization of Generalized Processor Sharing (GPS) service discipline <ref> [18] </ref>. We first show that GPS belongs to GR and then show that a generalized virtual time implementation of PGPS belongs to GR. In GPS, each flow f is assigned a constant i f at server i. <p> From (4) and (1), it can be shown that L i j j j;i Hence, GPS belongs to GR. We now define a virtual time implementation of packet-by-packet GPS which is a 4 generalization of the implementation in <ref> [18] </ref>. Let v i (t) be the virtual time associated with server i at time t. Let v i (0) = 0 and v i (t) not change when no packet is backlogged. <p> Using Theorem 1 of <ref> [18] </ref>, it has been shown in [11] that L i P GP S (p f ) L i j l i C i . <p> Similarly, Theorem 1 of <ref> [18] </ref> can be generalized in a manner analogous to Theorem 1 to show that partially-preemptive PGPS also belongs to GR with fi i = ^ l i max . 2.4.2 Effect of Rate Control It has been observed that if a network employs a work conserving scheduling algorithm, then the burstiness <p> To derive the delay guarantee of a network of servers, we will first relate the guaranteed rate clock value of a packet at two adjacent servers. A similar approach of analyzing two adjacent servers to analyze end-to-end behaviour of a network of servers has been used in <ref> [2, 18] </ref>.
Reference: [19] <author> M. Shreedhar and G. Varghese. </author> <title> Efficient Fair Queuing Using Deficit Round Robin. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 231-242, </pages> <year> 1995. </year>
Reference-contexts: Similarly, since Deficit Round Robin (DRR <ref> [19] </ref>) also isolates flows and guarantees a minimum throughput, it can be shown that it also belongs to GR (although fi for DRR will be very high). Hence, the class of GR algorithms is broad.
Reference: [20] <author> D. Stiliadis and A. Varma. </author> <title> Design and Analysis of Frame-based Fair Queueing: A New Traffic Scheduling Algorithm for Packet Switched Networks. </title> <booktitle> In Proceedings of SIGMETRICS'96, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: It also defines a scheduling algorithm that combines Delay EDD and a variant of Jitter EDD. 2.5 Discussion Several algorithms, other than those considered in the pre vious sections, also belong to GR. For example, since Frame-based Fair Queuing <ref> [20] </ref> and Worst-case Fair Weighted Fair Queuing [1] also guarantee that, regardless of behaviour of other flows in the network, the bound on departure time of a packet is the same as in PGPS, they also belong to GR.
Reference: [21] <author> G.G. Xie and S.S. Lam. </author> <title> Delay Guarantee of Virtual Clock Server. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(6) </volume> <pages> 683-689, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: We utilize the delay guarantee to derive end-to-end delay bounds in Section 4. Finally, Section 5 summarizes our results. 2 Generalized Guaranteed Rate Scheduling Algorithms Many of the scheduling algorithms proposed in the literature guarantee a deadline (referred to as delay guarantee <ref> [21] </ref>) to a packet of a flow based on its expected arrival time. In [10], we defined the delay guarantee of a packet by associating a guaranteed rate clock value with each packet.
Reference: [22] <author> O. Yaron and M. Sidi. </author> <title> Generalized Processor Sharing Networks with Exponentially Bounded Burstiness Arrivals. </title> <booktitle> In Proceedings of INFOCOM'94, </booktitle> <year> 1994. </year>
Reference-contexts: Work conserving algorithms that achieve the same objective, however, have not received much attention. In addition to a variety of scheduling algorithms, to provide QoS guarantees, a wide range of traffic specifications 1 have also been proposed in the literature <ref> [15, 18, 22, 25] </ref>. However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. <p> However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms <ref> [3, 4, 15, 18, 22] </ref>(see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. <p> If a flow conforms to Exponentially Bounded Burstiness (EBB) process with parameters (r; fl; fl) <ref> [22] </ref>, and br is the minimum rate allocated to the packets of the flow such that r br, then from [10] we get: y (17) An upper bound on the tail distribution of the end-to-end delay is derived by substituting (17) in (16).
Reference: [23] <author> H. Zhang. </author> <title> Service Disciplines For Guaranteed Performance Service in Packet-Switching Networks. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 83(10), </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. To provide guaranteed QoS to flows, several rate-based scheduling algorithms have been proposed in the literature [9, 18, 25, 26, 27] (see <ref> [23] </ref> for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. <p> have been proposed in the literature [9, 18, 25, 26, 27] (see <ref> [23] </ref> for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. A fundamental characteristic of most of these scheduling algorithms is that they do not permit the rates allocated to flows to vary over time. The ability to vary rate allocation of a flow, however, is highly desirable to efficiently transmit VBR video streams. <p> However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see <ref> [23] </ref> for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24].
Reference: [24] <author> H. Zhang and D. Ferrari. </author> <title> Rate-controlled Service Disciplines. </title> <journal> Journal of High Speed Networks, </journal> <volume> 3(4) </volume> <pages> 389-412, </pages> <year> 1994. </year>
Reference-contexts: However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in <ref> [2, 8, 10, 24] </ref>. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in [24]. This approach has been generalized in [8] to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms. <p> This limitation has been partially addressed in [2, 8, 10, 24]. A general method for analysis of a network of servers employing heterogeneous non-work conserving algorithms has been developed in <ref> [24] </ref>. This approach has been generalized in [8] to analyze a network employing a larger class of work conserving as well as non-work conserving algorithms. <p> then one can similarly show that fi i is given as fi i = ( l f f f ). 2.3 Non-Work Conserving Algorithms A general framework for reasoning about the end-to-end performance guarantee of a class of non-work conserving algorithms termed Rate Controlled Service Disciplines has been presented in <ref> [24] </ref>. In this section, we show that rate controlled service disciplines also belong to the GR class. Rate controlled service disciplines consist of a rate regulator and a scheduler (see Figure 1). <p> Several non-work conserving scheduling algorithms have been proposed to address this limitation <ref> [24] </ref>. Though non-work conserving algorithms reduce the buffer requirement in the network, they increase the average delay for all the flows. Even though this may be desirable for some flows, it may not be desirable for other flows. <p> In the above analysis, t i;i+1 is an upper bound on the propagation delay. Hence, the delay bounds also hold in networks where the propagation delay may be variable but is bounded. This property is desirable in internetworks <ref> [24] </ref>. The above method also leads to tighter results.
Reference: [25] <author> H. Zhang and S. Keshav. </author> <title> Comparison of Rate-Based Service Disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 113-121, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. To provide guaranteed QoS to flows, several rate-based scheduling algorithms have been proposed in the literature <ref> [9, 18, 25, 26, 27] </ref> (see [23] for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. <p> Work conserving algorithms that achieve the same objective, however, have not received much attention. In addition to a variety of scheduling algorithms, to provide QoS guarantees, a wide range of traffic specifications 1 have also been proposed in the literature <ref> [15, 18, 22, 25] </ref>. However, most of the techniques for providing QoS guarantees have only investigated specific combinations of traffic specification and scheduling algorithms [3, 4, 15, 18, 22](see [23] for description of the analysis methods). This limitation has been partially addressed in [2, 8, 10, 24].
Reference: [26] <author> L. Zhang. VirtualClock: </author> <title> A New Traffic Control Algorithm for Packet Switching Networks. </title> <booktitle> In Proceedings of ACM SIG-COMM'90, </booktitle> <pages> pages 19-29, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: A framework for meeting these requirements is the subject matter of this paper. 1.2 Relation to Previous Work The sequence of packets transmitted by a source is referred to as a flow <ref> [26] </ref>. Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. <p> Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network. To provide guaranteed QoS to flows, several rate-based scheduling algorithms have been proposed in the literature <ref> [9, 18, 25, 26, 27] </ref> (see [23] for an in-depth exposition and of the algorithms and their characteristics). Most of these algorithms can be classified as being either work conserving or non-work conserving and either allocating only rate or separating rate and delay allocation [23]. <p> This definition of guaranteed rate clock is based on virtual clock <ref> [26] </ref>. Guaranteed rate clock value and virtual clock value of a packet are same when constant rate is allocated to the packets of a flow. <p> These policy issues are the subject of future investigation and beyond the scope of this paper. Virtual Clock We define generalized Virtual Clock (VC) scheduling algorithm analogous to the Virtual Clock algorithm <ref> [26] </ref>. The generalized VC algorithm is defined as follows: 1.

References-found: 26

