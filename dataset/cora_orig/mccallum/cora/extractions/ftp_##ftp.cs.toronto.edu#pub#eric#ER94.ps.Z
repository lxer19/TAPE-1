URL: ftp://ftp.cs.toronto.edu/pub/eric/ER94.ps.Z
Refering-URL: http://www.cs.toronto.edu/~eric/
Root-URL: 
Title: From E-R to A-R Modelling Strategic Actor Relationships for Business Process Reengineering  
Author: Eric S. K. Yu and John Mylopoulos 
Address: Toronto, Ontario, Canada M5S 1A4  
Affiliation: Department of Computer Science, University of Toronto  
Abstract: As information systems are increasingly being called upon to play vital roles in organizations, conceptual modelling techniques need to be extended to relate information structures and processes to business and organizational objectives. We propose a framework which focuses on the modelling of strategic actor relationships (A-R) for a richer conceptual model of business processes in their organizational settings. Organizations are viewed as being made up of social actors who are intentional have motivations, wants, and beliefs and strategic they evaluate their relationships to each other in terms of opportunities and vulnerabilities. The framework supports formal modelling of the network of dependency relationships among actors, and the systematic exploration and assessment of alternative process designs in reengineering. The semantics of the modelling concepts are axiomatically characterized. By embedding the framework in the Telos language, the framework can also potentially serve as an early-requirements phase tool in a comprehensive information system development environment.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Borgida, S. Greenspan, J. Mylopoulos, </author> <title> Knowledge Representation as the Basis for Requirements Specifications, </title> <booktitle> IEEE Computer, </booktitle> <month> April </month> <year> 1985, </year> <pages> pp. 82-91. 16 </pages>
Reference-contexts: 1 Introduction The need to model and understand the organizational or business environment within which an information system is intended to operate is well recognized (e.g., <ref> [2, 1] </ref>). The recent concept of business reengineering further highlights the need to relate information systems to business objectives. When used innovatively, information technology can bring about dramatic improvements in organizational performance, such as increased speed, reduced costs, and improved quality and service.
Reference: 2. <author> J. A. Bubenko, </author> <title> Information Modeling in the Context of System Development, </title> <booktitle> Proc. IFIP, </booktitle> <year> 1980, </year> <pages> pp. 395-411. </pages>
Reference-contexts: 1 Introduction The need to model and understand the organizational or business environment within which an information system is intended to operate is well recognized (e.g., <ref> [2, 1] </ref>). The recent concept of business reengineering further highlights the need to relate information systems to business objectives. When used innovatively, information technology can bring about dramatic improvements in organizational performance, such as increased speed, reduced costs, and improved quality and service.
Reference: 3. <author> J. A. Bubenko, </author> <title> Extending the Scope of Information Modeling, </title> <booktitle> Proc. 4th Int. Workshop on the Deductive Approach to Information Systems and Databases, </booktitle> <address> Lloret-Costa Brava, Catalonia, </address> <month> Sept. </month> <pages> 20-22, </pages> <year> 1993, </year> <pages> pp. 73-98. </pages>
Reference-contexts: The three types of functional intentional elements are derived from the three basic ontological categories supported by the requirements modelling language RML [12] assertion, activity, and entity. The enterprise modelling framework of <ref> [3] </ref> also makes extensive use of conceptual modelling techniques to model business goals and rationales behind information system development. The need to understand why, and to deal with fuzzy, informal, and non-functional issues are emphasized. The process handbook project [20] also uses conceptual modelling to organize knowledge for reengineering.
Reference: 4. <author> P. P. Chen, </author> <title> The Entity-Relationship Model Toward a Unified View of Data, </title> <journal> ACM Trans. Database Sys., </journal> <volume> vol. 1, no. 1, </volume> <year> 1976, </year> <pages> pp. 9-38. </pages>
Reference-contexts: In our earlier papers, the SD model was called the Actor Dependency model. The 15 SR model was separated into a Functional Rationales model and a Non-Functional Rationales model. 7 Conclusion E-R modelling has made important contributions to the conceptual modelling field since its introduction almost two decades ago <ref> [4] </ref>. It has proved to be a useful technique despite its simple ontology. As information system applications become more sophisticated, conceptual modelling needs to deal with richer domains with specialized ontologies [13]. One example is the need to deal with the modelling of organizations, as in business process reengineering.
Reference: 5. <author> K. L. Chung, </author> <title> Representing and Using Non-Functional Requirements for Information System Development: A Process-Oriented Approach, </title> <type> Ph.D. Thesis, </type> <institution> Dept. of Comp. Sci., Univ. of Toronto, </institution> <year> 1993. </year>
Reference-contexts: Typically, the dependee has a number of ways for achieving the goal. The depender indicates which combination of choices would sufficiently meet the desired softgoal. We say that a softgoal is satisficed rather than satisfied <ref> [5] </ref>. A dependency can be open, committed, or critical, reflecting the degree of dependency [35]. A Strategic Dependency model presents a richer picture of an organization than conventional workflow models that are based on non-intentional entity and activity relationships. <p> These links, however, have additional attributes which indicate the sense (positive or negative) and extent of the contribution. Following <ref> [5] </ref>, we use a notion of satisficing to distinguish between contributions that sufficiently or insufficiently address or fulfil a softgoal. These are marked as and r respectively in the graphical notation. Fig. 4. <p> Pay-when-invoiced contributes negatively to prompt payment, but not excessively so. Each softgoal node has a satisficing status. The status of a softgoal node can be computed by a labelling procedure from the statuses of descendent nodes in the network <ref> [5] </ref>. 7 4 Using Strategic Actor-Relationship Modelling in Reengineering Reengineering involves developing a good understanding of the current process, generation of new alternatives, and the evaluation of alternatives. The set of modelling concepts in the i fl framework facilitates these aspects of reengineering. Understanding the current process. <p> The vulnerability aspect of dependency relationships is also characterized axiomatically. The axioms for open, committed, and critical dependency (on the depender side) are based on how badly the depender is affected if the dependum is not delivered. The details are given in [38]. Reference <ref> [5] </ref> provides a formal scheme for generating a network of softgoal nodes and links and for evaluating softgoal statuses. 11 Fig. 6. A partial schema, showing task decomposition links and some classes of dependency links The i fl framework is embedded in the conceptual modelling language Telos [22]. <p> This framework may be seen as a specialization of design rationales and decision support frameworks (e.g., <ref> [28, 19, 5] </ref>) by providing an ontology for dealing more specifically with organization modelling and design. The qualitative reasoning scheme of [5] for dealing with nonfunctional requirements in software development is adapted and applied to organization modelling, complementing the functional components of the framework (goals, tasks, and resources). <p> This framework may be seen as a specialization of design rationales and decision support frameworks (e.g., [28, 19, 5]) by providing an ontology for dealing more specifically with organization modelling and design. The qualitative reasoning scheme of <ref> [5] </ref> for dealing with nonfunctional requirements in software development is adapted and applied to organization modelling, complementing the functional components of the framework (goals, tasks, and resources). <p> The modelling framework has been applied to examples from the literature in several areas, but has yet to be tested in actual use. Tools to support the framework remain to be implemented, although some of the underlying components already exist (Telos [22], NFR Assistant <ref> [5, 26] </ref>). Further conceptual development would include exploration of other types of actor relationships.
Reference: 6. <author> P. R. Cohen and H. J. Levesque, </author> <title> Intention is Choice with Commitment, </title> <journal> Artif. Intell., </journal> <volume> 42 (3), </volume> <year> 1990. </year>
Reference-contexts: This knowledge would also facilitate on-going software and business process evolution. The i fl framework draws on concepts of social organization from organization theory (e.g., [21, 30]), adapts formal agent modelling techniques from AI (e.g., <ref> [6, 32] </ref>, which in turn draws on work in logic dealing with intentional concepts), and builds on existing conceptual modelling frameworks ([12, 22]). Although a number of basic concepts of the framework are derived from AI concepts, the framework differs from AI frameworks in several significant ways.
Reference: 7. <institution> Second International Conference on Cooperative Information Systems (CoopIS-94), Toronto, Canada, </institution> <month> May 17-20, </month> <year> 1994. </year>
Reference-contexts: Tools to support the framework remain to be implemented, although some of the underlying components already exist (Telos [22], NFR Assistant [5, 26]). Further conceptual development would include exploration of other types of actor relationships. As information systems <ref> [7] </ref> as well as human organizations [29] progress increasingly toward cooperative and distributed, networked configurations, it is becoming ever more important to have models that can help reason how complex, interlinked systems contribute to business and organizational objectives.
Reference: 8. <author> A. Dardenne, A. van Lamsweerde and S. Fickas, </author> <title> Goal-Directed Requirements Acquisition, </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 20, </volume> <year> 1993, </year> <pages> pp. 3-50. </pages>
Reference-contexts: objectives, and provides a model of organizational structure based on intentional dependencies. (The name i fl refers to the distributed intentionality perspective offered by the framework.) In the requirements engineering area, the goal-oriented, composite system design approach makes use of means-ends reasoning to derive requirements from overall system goals (e.g., <ref> [8, 11] </ref>), where the overall system includes humans and computer systems. Global goals are decomposed and reduced primarily in a top-down fashion, until they can be assigned to agents. Our framework emphasizes a distributed, modelling approach.
Reference: 9. <author> T. H. Davenport, </author> <title> Process Innovation: Reengineering Work Through Information Technology, </title> <institution> Harvard Business School Press, </institution> <year> 1993. </year>
Reference-contexts: When used innovatively, information technology can bring about dramatic improvements in organizational performance, such as increased speed, reduced costs, and improved quality and service. By enabling people to work in ways that were not possible before, information systems often play key roles in reengineered business processes (e.g., <ref> [18, 9, 15] </ref>). Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., [12, 10, 22, 31]).
Reference: 10. <author> E. Dubois, J. Hagelstein, E. Lahou, F. Ponsaert and A. Rifaut, </author> <title> A Knowledge Representation Language for Requirements Engineering, </title> <journal> Proc. IEEE, </journal> <volume> 74 (10), </volume> <month> Oct. </month> <year> 1986, </year> <pages> pp. 1431-1444. </pages>
Reference-contexts: Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., <ref> [12, 10, 22, 31] </ref>). However, to more fully support the types of knowledge and reasoning involved in business redesign, a specialized ontology with additional concepts would be helpful.
Reference: 11. <author> M. S. Feather, </author> <title> Language Support for the Specification and Development of Composite Systems, </title> <journal> ACM Trans. Prog. Lang. and Sys. </journal> <volume> 9(2), </volume> <month> April </month> <year> 1987, </year> <pages> pp. 198-234. </pages>
Reference-contexts: objectives, and provides a model of organizational structure based on intentional dependencies. (The name i fl refers to the distributed intentionality perspective offered by the framework.) In the requirements engineering area, the goal-oriented, composite system design approach makes use of means-ends reasoning to derive requirements from overall system goals (e.g., <ref> [8, 11] </ref>), where the overall system includes humans and computer systems. Global goals are decomposed and reduced primarily in a top-down fashion, until they can be assigned to agents. Our framework emphasizes a distributed, modelling approach.
Reference: 12. <author> S. J. Greenspan, </author> <title> Requirements Modelling: A Knowledge Representation Approach to Software Requirements Definition, </title> <type> Ph. D. Thesis, </type> <institution> Dept. of Comp. Sci., Univ. of Toronto, </institution> <year> 1984. </year>
Reference-contexts: Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., <ref> [12, 10, 22, 31] </ref>). However, to more fully support the types of knowledge and reasoning involved in business redesign, a specialized ontology with additional concepts would be helpful. <p> The three types of functional intentional elements are derived from the three basic ontological categories supported by the requirements modelling language RML <ref> [12] </ref> assertion, activity, and entity. The enterprise modelling framework of [3] also makes extensive use of conceptual modelling techniques to model business goals and rationales behind information system development. The need to understand why, and to deal with fuzzy, informal, and non-functional issues are emphasized.
Reference: 13. <author> S. J. Greenspan, J. Mylopoulos, A. Borgida, </author> <title> On Formal Requirements Modeling Languages: RML Revisited, (invited plenary talk), </title> <booktitle> Proc. 16th Int. Conf. Software Engineering, </booktitle> <month> May 16-21 </month> <year> 1994, </year> <title> Sorrento, </title> <booktitle> Italy, </booktitle> <pages> pp. 135-147. </pages>
Reference-contexts: It has proved to be a useful technique despite its simple ontology. As information system applications become more sophisticated, conceptual modelling needs to deal with richer domains with specialized ontologies <ref> [13] </ref>. One example is the need to deal with the modelling of organizations, as in business process reengineering. Reengineering presents considerable challenges. On the one hand, there is promise of potentially dramatic benefits in organizational effectiveness. On the other hand, it involves substantial efforts and risks.
Reference: 14. <author> M. Hammer, </author> <title> Reengineering Work: Don't Automate, Obliterate, Harvard Business Review, </title> <booktitle> July-August 1990, </booktitle> <pages> pp. 104-112. </pages>
Reference-contexts: In the reengineering literature, it has been argued that without an understanding of why things are done the way they are, one is likely to use computers simply to automate outdated processes, and thus unable to realize the true potential that information technology has to offer <ref> [14] </ref>. Business processes, unlike processes that are executed by machines, exist in social organizational settings. Organizations are made up of social actors who have goals and interests, which they pursue through a network of relationships with other actors. <p> It also further clarifies how the framework assists in the understanding of business processes, and the generation and evaluation of alternatives. A popular reengineering example from the goods acquisition domain (from <ref> [14] </ref>) is used to illustrate the framework throughout. In section 2, we briefly review the features of the SD model. Section 3 presents the features of the SR model. In section 4, we illustrate how the framework can be used to assist in a business process reengineering effort.
Reference: 15. <author> M. Hammer and J. Champy, </author> <title> Reengineering the Corporation: A Manifesto for Business Revolution, </title> <address> HarperBusiness, </address> <year> 1993. </year>
Reference-contexts: When used innovatively, information technology can bring about dramatic improvements in organizational performance, such as increased speed, reduced costs, and improved quality and service. By enabling people to work in ways that were not possible before, information systems often play key roles in reengineered business processes (e.g., <ref> [18, 9, 15] </ref>). Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., [12, 10, 22, 31]).
Reference: 16. <author> M. Jarke, J. Mylopoulos, J. W. Schmidt, Y. Vassiliou, DAIDA: </author> <title> An Environment for Evolving Information Systems, </title> <journal> ACM Trans. Information Systems, </journal> <volume> 10(1), </volume> <month> Jan. </month> <year> 1992, </year> <pages> pp. 1-50. </pages>
Reference: 17. <author> M. Jarke, T. Rose, </author> <title> Specification Management with CAD o , Conceptual Modelling, Databases, and CASE, </title> <editor> P. Loucopoulos, R. Zicari, eds., </editor> <publisher> Wiley, </publisher> <year> 1992, </year> <pages> pp. 489-505. </pages>
Reference-contexts: Reference [36] presented an early, informal version of the SR model, which we have developed more fully and formally in this paper. The modelling of software processes also has commonalities with the modelling of business processes. One framework that uses conceptual modelling to advantage is <ref> [17] </ref>. However, a majority of software process models tend to be intended for process execution or enaction in some process-centred software engineering environment (the technology infrastructure).
Reference: 18. <author> P. Keen, </author> <title> Shaping the Future: Business Design Through Information Technology, </title> <institution> Harvard Business School Press, </institution> <year> 1991. </year>
Reference-contexts: When used innovatively, information technology can bring about dramatic improvements in organizational performance, such as increased speed, reduced costs, and improved quality and service. By enabling people to work in ways that were not possible before, information systems often play key roles in reengineered business processes (e.g., <ref> [18, 9, 15] </ref>). Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., [12, 10, 22, 31]).
Reference: 19. <author> J. Lee, </author> <title> A Decision Rationale Management System: Capturing, Reusing, and Managing the Reasons for Decisions, </title> <type> Ph.D. thesis, </type> <institution> MIT, </institution> <year> 1992. </year>
Reference-contexts: This framework may be seen as a specialization of design rationales and decision support frameworks (e.g., <ref> [28, 19, 5] </ref>) by providing an ontology for dealing more specifically with organization modelling and design. The qualitative reasoning scheme of [5] for dealing with nonfunctional requirements in software development is adapted and applied to organization modelling, complementing the functional components of the framework (goals, tasks, and resources).
Reference: 20. <author> T. W. Malone, K. Crowston, J. Lee, B. Pentland, </author> <title> Tools for Inventing Organizations: Toward a Handbook of Organizational Processes, </title> <booktitle> Proc. 2nd Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993, </year> <pages> pp. 72-82. </pages>
Reference-contexts: The enterprise modelling framework of [3] also makes extensive use of conceptual modelling techniques to model business goals and rationales behind information system development. The need to understand why, and to deal with fuzzy, informal, and non-functional issues are emphasized. The process handbook project <ref> [20] </ref> also uses conceptual modelling to organize knowledge for reengineering.
Reference: 21. <author> J. G. March and H. A. Simon, </author> <title> Organizations, </title> <publisher> Wiley, </publisher> <year> 1958. </year>
Reference-contexts: Libraries of knowledge containing case experiences and general principles can be collected, organized, and applied to new cases with computer support. This knowledge would also facilitate on-going software and business process evolution. The i fl framework draws on concepts of social organization from organization theory (e.g., <ref> [21, 30] </ref>), adapts formal agent modelling techniques from AI (e.g., [6, 32], which in turn draws on work in logic dealing with intentional concepts), and builds on existing conceptual modelling frameworks ([12, 22]).
Reference: 22. <author> J. Mylopoulos, A. Borgida, M. Jarke, M. Koubarakis, </author> <title> Telos: Representing Knowledge about Information Systems, </title> <journal> ACM Trans. Info. Sys., </journal> <volume> 8 (4), </volume> <year> 1991. </year>
Reference-contexts: Conceptual modelling techniques can potentially be applied to help understand and redesign business processes. Basic concepts for modelling the world such as entities, activities, assertions, and time have been formalized in a number of modelling frameworks (e.g., <ref> [12, 10, 22, 31] </ref>). However, to more fully support the types of knowledge and reasoning involved in business redesign, a specialized ontology with additional concepts would be helpful. <p> Reference [5] provides a formal scheme for generating a network of softgoal nodes and links and for evaluating softgoal statuses. 11 Fig. 6. A partial schema, showing task decomposition links and some classes of dependency links The i fl framework is embedded in the conceptual modelling language Telos <ref> [22] </ref>. In doing so, we obtain an object-oriented representational framework, with classification, generalization, aggregation, attribution, and time. <p> Our work is still at an exploratory stage. The modelling framework has been applied to examples from the literature in several areas, but has yet to be tested in actual use. Tools to support the framework remain to be implemented, although some of the underlying components already exist (Telos <ref> [22] </ref>, NFR Assistant [5, 26]). Further conceptual development would include exploration of other types of actor relationships.
Reference: 23. <author> J. Mylopoulos, </author> <title> Representing Knowledge About Information Systems, </title> <booktitle> Int. Workshop on Development of Intelligent Information Systems, </booktitle> <address> Niagara-on-the-Lake, Ontario, Canada, </address> <month> April 21-23, </month> <year> 1991, </year> <pages> pp. 94-96. </pages>
Reference-contexts: The conceptual mod-elling approach to software engineering and information system development emphasizes the need to represent and utilize pertinent knowledge to support each phase of development and on-going evolution <ref> [23] </ref>. The i fl framework aims to add to this line of research ([12, 22, 16, 24, 5, 26]) by elaborating on the link between business redesign and technical system development.
Reference: 24. <author> J. Mylopoulos, L. Chung, B. Nixon, </author> <title> Representing and Using Non-Functional Requirements: </title>
References-found: 24

