URL: http://www.isi.edu/~gts/paps/jty94.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Title: Scalability and Flexibility in Authentication Services: The KryptoKnight Approach construction of basic network security functions
Author: Philippe Janson Gene Tsudik Moti Yung 
Note: The central goal of the KryptoKnight project was the  
Abstract: This paper studies the issues of flexibility and scalability in the context of network security. In particular, it concentrates on authentication and key distribution services suited for a variety of communication paradigms, network environments, and end-devices. We present the design criteria, specification, and step-by-step construction of authentication and key distribution services based on experience in the KryptoKnight project. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. K. Bauer, T. A. Berson, R. J. Feiertag, </author> <title> "A key distribution protocol using event markers," </title> <note> ACM TOCS 1 3 (1983) 249-255. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [2] <author> S. Bellovin and M. Merritt, </author> <title> Augmented Encrypted Key Exchange: a password-based protocol secure against dictionary attacks and password file compromise, </title> <journal> ACM Symp. on Comp. and Comm. </journal> <volume> Sec., </volume> <year> 1993, </year> <pages> 244-250. </pages>
Reference-contexts: Finally, we remark that the protocol can be combined with a hard-to-compute function like Diffie-Hellman key exchange [12], to achieve better security (i.e., breaking the shared key does not give away the distributed key as in <ref> [2] </ref>). For example N a and N k may be the (authenticated) exchange messages of the key-exchange protocol (assuming the MAC is large enough, as for this technology, a larger key size is required). 3.5 Protocol Scenarios We now proceed with the design of 3-party protocols. <p> In its minimal form (user only has a weak password) it is susceptible to so-called dictionary attacks unless stronger techniques (e.g., encrypted-key-exchange <ref> [2] </ref>, public-key encryption, or smartcards/tokencards) are used in conjunction. The KryptoKnight SSO protocol is discussed in [22]. * Single Sign-On for Mobile Users: protocol that handles the case of a mobile user attempting to log in from a foreign domain.
Reference: [3] <author> M. Bellare, P. Rogaway, </author> <title> "Entity authentication and key distribution", </title> <booktitle> Proc. Crypto'93, Advances in Cryptology, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: The basic 2-party protocol [5] influenced the ISO basic authentication standard [17], and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks <ref> [5, 11, 3, 4] </ref>. This paper, on the other hand, discusses other issues experienced and learned in the course of the KryptoKnight project. In particular, we consider the issues of flexibility and scalability in both intra- and inter-domain protocol design. <p> They were shown resistant to a wide set of attacks known as interleaving attacks. In addition, essential ideas for formal model and proofs of correctness for these and similar protocols were suggested initially in [5] and further developed in <ref> [11, 3] </ref>. Simple design eases these complexity-theoretic proofs. Conceptually, we attempted to have a uniform design basing our protocols on similar basic operation; this eases the design's conceptual complexity and its validation, while making it widely (and incrementally) applicable to numerous scenarios. <p> Elegant formal complexity arguments have recently been developed based on the above intuition experienced in the project, see <ref> [3, 4] </ref>.
Reference: [4] <author> M. Bellare, P. Rogaway, </author> <title> Provably Secure Session Key Distribution- The Three Party Case, </title> <publisher> STOC'95. </publisher>
Reference-contexts: The basic 2-party protocol [5] influenced the ISO basic authentication standard [17], and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks <ref> [5, 11, 3, 4] </ref>. This paper, on the other hand, discusses other issues experienced and learned in the course of the KryptoKnight project. In particular, we consider the issues of flexibility and scalability in both intra- and inter-domain protocol design. <p> Elegant formal complexity arguments have recently been developed based on the above intuition experienced in the project, see <ref> [3, 4] </ref>.
Reference: [5] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva, M. Yung, </author> <title> "Systematic design of 2-party authentication protocols," </title> <booktitle> Proc. Crypto 91, </booktitle> <address> Santa Barbara, CA (Aug.91) 44-61. </address> <booktitle> Lecture Notes in Comp. </booktitle> <address> Sc. 576, </address> <publisher> Springer Verlag (1991). </publisher>
Reference-contexts: Early aspects of this work have been already reported on and have had their impact. The basic 2-party protocol <ref> [5] </ref> influenced the ISO basic authentication standard [17], and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks [5, 11, 3, 4]. <p> The basic 2-party protocol [5] influenced the ISO basic authentication standard [17], and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks <ref> [5, 11, 3, 4] </ref>. This paper, on the other hand, discusses other issues experienced and learned in the course of the KryptoKnight project. In particular, we consider the issues of flexibility and scalability in both intra- and inter-domain protocol design. <p> This is in contrast with the Kerberos inter-domain model which puts the burden on the client by making it responsible for searching and accessing the appropriate security server outside its own domain. 2.2 Basic Building Block: 2-Party Authentication A family of simple 2-party authentication protocols was presented in <ref> [5, 6] </ref>. The protocols are efficient in message size and computation overhead and minimal in use of cryptography (e.g., can use a block cipher or even a one-way hash function employing a common key as a private portion of the message). <p> They were shown resistant to a wide set of attacks known as interleaving attacks. In addition, essential ideas for formal model and proofs of correctness for these and similar protocols were suggested initially in <ref> [5] </ref> and further developed in [11, 3]. Simple design eases these complexity-theoretic proofs. Conceptually, we attempted to have a uniform design basing our protocols on similar basic operation; this eases the design's conceptual complexity and its validation, while making it widely (and incrementally) applicable to numerous scenarios. <p> Conceptually, we attempted to have a uniform design basing our protocols on similar basic operation; this eases the design's conceptual complexity and its validation, while making it widely (and incrementally) applicable to numerous scenarios. A B &gt; &lt; &gt; One of the protocols derived from the work of <ref> [5] </ref> is called 2PAP and is represented in figure 1. In this figure, the letters A and B stand for the identifiers of two network entities performing mutual authentication.
Reference: [6] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva, M. Yung, </author> <title> "Systematic design of a family of attack-resistant authentication protocols," </title> <journal> IEEE JSAC special issue on secure communications (1992). </journal>
Reference-contexts: This is in contrast with the Kerberos inter-domain model which puts the burden on the client by making it responsible for searching and accessing the appropriate security server outside its own domain. 2.2 Basic Building Block: 2-Party Authentication A family of simple 2-party authentication protocols was presented in <ref> [5, 6] </ref>. The protocols are efficient in message size and computation overhead and minimal in use of cryptography (e.g., can use a block cipher or even a one-way hash function employing a common key as a private portion of the message).
Reference: [7] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva, M. Yung, </author> <title> "The KryptoKnight Family of authentication and key distribution protocols", </title> <journal> IEEE/ACM Trans. on Netw. </journal> <month> (March 95). </month>
Reference-contexts: In fact, the KDC may be unavailable and the entire second flow can be concocted by the intruder. We note that the original design of the protocol family relied on such non-authenticated exchange and further verified the distributed key via subsequent 2-party mutual authentication handshake <ref> [7] </ref>; here we base the entire system on more novel authenticated key exchanges while not compromising the minimality achieved earlier. In summary, 2PKDP lacks two features: i) integrity of the new key and ii) timeliness of the KDC's response. <p> As mentioned before, two of our main guiding principles are i) protocol minimality, and ii) flexibility with respect to network configurations and connectivity patterns. We present optimized design that achieves authenticated key distribution in a minimal fashion (improving on the previous unauthenticated design in <ref> [7] </ref> where it was implicitly assumed that authentication is followed by key distribution). The common setting for all protocol scenarios discussed below is exemplified by two entities A and B that want to authenticate with each other and, perhaps, subsequently engage in secure communication.
Reference: [8] <author> D. E. Denning, G. M. Sacco, </author> <title> "Time-stamps in key distribution systems", CACM 24 8 (Aug.81) 533-536. [9] "Data Encryption Standard", </title> <type> FIPS 46, </type> <institution> NBS (Jan.77). </institution>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [10] <editor> Research Issues in Ubiquitous Computing, </editor> <booktitle> The 13-th ACM Symp. on Principles of Distributed Computing (PODC), </booktitle> <year> 1994, </year> <pages> 2-8. </pages>
Reference-contexts: Such components increasingly find their way into various areas, e,g., office, field, home, entertainment and education. Moreover, resarch on "ubiquitous computing" is advancing rapidly <ref> [10] </ref>. Unlike a workstation in a client-server setting, these limited-ability devices still require security features: device authentication to prevent wireless fraud, calling and called address identification to keep intruders out, low-level authentication to secure booting from a LAN adapter and so on.
Reference: [11] <author> W. Diffie, P. Van Oorschot, M. Weiner, </author> <title> Authentication and Authenticated Key Exchange Designs, Codes and Cryptography,2, </title> <booktitle> 1992, </booktitle> <pages> 107-125. </pages>
Reference-contexts: The basic 2-party protocol [5] influenced the ISO basic authentication standard [17], and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks <ref> [5, 11, 3, 4] </ref>. This paper, on the other hand, discusses other issues experienced and learned in the course of the KryptoKnight project. In particular, we consider the issues of flexibility and scalability in both intra- and inter-domain protocol design. <p> They were shown resistant to a wide set of attacks known as interleaving attacks. In addition, essential ideas for formal model and proofs of correctness for these and similar protocols were suggested initially in [5] and further developed in <ref> [11, 3] </ref>. Simple design eases these complexity-theoretic proofs. Conceptually, we attempted to have a uniform design basing our protocols on similar basic operation; this eases the design's conceptual complexity and its validation, while making it widely (and incrementally) applicable to numerous scenarios.
Reference: [12] <author> W. Diffie and M. Hellman, </author> <title> New Directions in Cryptography, </title> <journal> IEEE Transactions on Information Theory, </journal> <month> November </month> <year> 1976. </year>
Reference-contexts: Also, 2PAKDP requires only one additional (on top of 2PAP) block encryption operation in order to hide the key. Finally, we remark that the protocol can be combined with a hard-to-compute function like Diffie-Hellman key exchange <ref> [12] </ref>, to achieve better security (i.e., breaking the shared key does not give away the distributed key as in [2]).
Reference: [13] <author> O. Goldreich, S. Goldwasser, S. Micali, </author> <title> How to Construct Random Functions, </title> <journal> J. of the ACM, V. </journal> <volume> 33, </volume> <year> 1986, </year> <pages> 210-217. </pages>
Reference-contexts: Using a plain one-way hash function (under the assumption that it is pseudo-random <ref> [13] </ref>) instead of an encryption function has the added advantage that even the source code or the detailed design of the resulting implementation are not subject to the export controls applicable to cryptographic technology in many countries (i.e., one can argue that using this function for bulk data encryption is either
Reference: [14] <author> L.Gong, </author> <title> Using One-Way Functions for Authentication, </title> <journal> ACM Com. Comm. </journal> <note> Review 19 5 (Oct.89) 8-11. </note>
Reference-contexts: Related minimization ideas have been independently developed by Gong <ref> [14, 15] </ref>. 2.1.2 Freedom from Export Restrictions The usability of global networks connecting numerous users across many businesses requires that authentication services be unrestricted between countries. In a mobile environment where users move from country to country, the situation can easily become intractable if authentication protocols were restricted.

Reference: [16] <author> R. Hauser, P. Janson, R. Molva, G. Tsudik and E. Van Her-reweghen, </author> <title> "Robust and Secure Password/Key Change Method", </title> <booktitle> 1994 European Symposium on Research in Computer Security, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: Like mobile SSO, this protocol has some special requirements (mainly in terms of fault-tolerance) that influence protocol construction. An in-depth treatment of the subject and the description of the KryptoKnight password change protocol can be found in <ref> [16] </ref>. 5 Summary The protocols presented in this paper form a comprehensive family that addresses most authentication and key distribution requirements for any network environment.
Reference: [17] <author> ISO CD 9798-2, </author> <title> Information Technology: Security Techniques-Entity Authentication Mechanisms. Part 2: Entity Authentication Using Symmetric Techniques. </title> <month> July </month> <year> 1993. </year> <title> [18] "Banking Key management (wholesale)" ISO 8732, Geneva (1988). [19] "OSI Directory Part 8: Authentication Framework", </title> <type> ISO 9594-8, </type> <address> Geneva (1988). </address>
Reference-contexts: Early aspects of this work have been already reported on and have had their impact. The basic 2-party protocol [5] influenced the ISO basic authentication standard <ref> [17] </ref>, and [7]-the ISO key management standard. The early work also initiated a research topic of proof correctness in cryptographic protocols based on matching of protocol histories and defending against replay and interleaving attacks [5, 11, 3, 4].
Reference: [20] <author> P. Janson and G. Tsudik, </author> <title> "Secure and Minimal Protocols for Authenticated Key Distribution", </title> <journal> Computer Communications, </journal> <month> September </month> <year> 1995. </year>
Reference-contexts: In fact, the only difference is that the KDC's nonce N k in flow 2 (which also happens to be the new key K new a ) is hidden. The technique used to construct message flow 2 is called braiding <ref> [20] </ref>. Upon receiving the message, A first performs block encryption on the MAC value and factors out the new key N k . <p> The security of 2PAKDP is based directly on the security of the more basic 2PAP. Moreover, it is not difficult to see that 2PAKDP is, essentially, a superset of 2PAP. The arguments for supporting these assertions as well as the detailed derivation of 2PAKDP can be found in <ref> [20] </ref>. A remark on 2PAKDP is that, like its ancestors 2PKDP and 2PAP, it is a minimal protocol.
Reference: [21] <author> A. Kehne, J. Schoenwaelder, H. Langendoerfer, </author> <title> "A nonce-based protocol for multiple authentications", </title> <note> ACM OSR 26 4 (Oct.92) 84-89. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [22] <author> R. Molva, G. Tsudik, E. Van Herreweghen, S. Zatti, </author> <title> "Kryp-toKnight authentication and key distribution system," </title> <booktitle> Proc. </booktitle> <address> ES-ORICS 92, Toulouse, France (23-25 Nov.92). </address>
Reference-contexts: In its minimal form (user only has a weak password) it is susceptible to so-called dictionary attacks unless stronger techniques (e.g., encrypted-key-exchange [2], public-key encryption, or smartcards/tokencards) are used in conjunction. The KryptoKnight SSO protocol is discussed in <ref> [22] </ref>. * Single Sign-On for Mobile Users: protocol that handles the case of a mobile user attempting to log in from a foreign domain.
Reference: [23] <author> R. Molva, D. Samfat and G. Tsudik, </author> <title> "Authentication of Mobile Users" IEEE Network, </title> <journal> Special Issue on Mobile Communications, </journal> <month> March/April </month> <year> 1994. </year>
Reference-contexts: In spite of the operational scenario being similar to the A-B-K protocol, mobile SSO has some rather esoteric requirements (see <ref> [23] </ref> for a complete discussion of this topic and KryptoKnight mobile SSO protocol.) * Password Change: protocol for changing users' long-term passwords and keys. Like mobile SSO, this protocol has some special requirements (mainly in terms of fault-tolerance) that influence protocol construction.
Reference: [24] <author> M. Naor, M. Yung, </author> <title> "Universal One-Way Hash Functions and Their Cryptographic Applications," </title> <booktitle> ACM Sym on Theo. of Computing, </booktitle> <year> 1989. </year>
Reference-contexts: We note that constructing cryptographic primitives on top of basic functions is an on-going research effort in theoretical cryptography (e.g., digital signature schemes have been shown to require only one-way functions <ref> [24, 31] </ref>).
Reference: [25] <author> R. M. Needham, M. D. Schroeder, </author> <title> "Using encryption for authentication in large networks of computers," </title> <note> CACM 21 12 (1978) 993-998. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology. <p> The KryptoKnight concept and resulting architecture differ from the above mainly owing to the specific computing restrictions and the general flexibility/scalability requirements we next discuss. As a private-key based system, a scalable design must be based on trusted servers <ref> [25] </ref>, which assure that various parties are able to undergo mutual authentication without initially sharing cryptographic keys and based solely on the established trust with the server (s). 2.1 Basic Concepts and Design Issues Before delving into the actual protocols, we begin (in the next subsection) with the review of the
Reference: [26] <author> R. M. Needham, M. D. Schroeder, </author> <title> "Authentication revisited", </title> <note> ACM OSR 21 1 (Jan.87) 7. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [27] <author> B. C. Neuman, S. G. Stubblebine, </author> <title> "A note on the use of time-stamps as nonces", </title> <note> ACM OSR 27 2 (Apr.93) 10-14. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [28] <author> B. C. Neuman, T. </author> <title> Ts'O "Kerberos: An Authentication Service for Computer Networks", </title> <journal> IEEE Communication Magazine, </journal> <month> Sep. </month> <year> 1994. </year>
Reference-contexts: Some of these have lead to implementations or standards, e.g. the Kerberos <ref> [32, 28] </ref> and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology. Kerberos is the basis for the security component provided by the Open Software Foundation (OSF) as part of its Distributed Computing Environment (DCE) offering.
Reference: [29] <author> D. Otway, O. Rees, </author> <title> "Efficient and timely mutual authentication", </title> <note> ACM OSR 21 1 (Jan.87) 8-10. </note>
Reference-contexts: provisions of the copyright laws protecting it. 1 This point is best illustrated by considering what it takes to "se cure" IP, Telnet or ATM networks. 2 Basic Concepts and Preliminaries A number of schemes have been designed for authentication and key distribution services in distributed systems and networks, e.g., <ref> [25, 8, 1, 26, 29, 21, 27] </ref>. Some of these have lead to implementations or standards, e.g. the Kerberos [32, 28] and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology.
Reference: [30] <author> R. Rivest, </author> <title> "The MD5 Message Digest Algorithm", Internet draft, </title> <publisher> RSA Co. (Jul.91). </publisher>
Reference-contexts: Instead of using an encryption function to implement the MACs, one can also use a plain one-way hash function (e.g. the MD5 algorithm employed on fixed size blocks <ref> [30] </ref> is believed to be such a function, another function is SHA1) applied a number of times in some way to the authenticated string concatenated with the secret key (see, e.g., [33]).
Reference: [31] <author> J. Rompel. </author> <title> "One-Way Functions are Necessary and Sufficient for Digital Signature," </title> <booktitle> ACM Sym. on Theo. of Computing, </booktitle> <year> 1990. </year>
Reference-contexts: We note that constructing cryptographic primitives on top of basic functions is an on-going research effort in theoretical cryptography (e.g., digital signature schemes have been shown to require only one-way functions <ref> [24, 31] </ref>).
Reference: [32] <author> G. Steiner, C. Neuman, J. I. Schiller, </author> <title> "Kerberos: an authentication server for open network systems", </title> <booktitle> Proc. Usenix Conf. (Winter 88). </booktitle>
Reference-contexts: Some of these have lead to implementations or standards, e.g. the Kerberos <ref> [32, 28] </ref> and ANSI X9.17 [18] schemes, which use DES technology, or the ISO-CCITT X.509 Directory Authentication scheme [19], which relies on public key technology. Kerberos is the basis for the security component provided by the Open Software Foundation (OSF) as part of its Distributed Computing Environment (DCE) offering.
Reference: [33] <author> G. Tsudik, </author> <title> "Message authentication with one-way hash functions," </title> <booktitle> Proc. IEEE Infocom 92, </booktitle> <address> Florence, Italy (May 92). </address>
Reference-contexts: MACs, one can also use a plain one-way hash function (e.g. the MD5 algorithm employed on fixed size blocks [30] is believed to be such a function, another function is SHA1) applied a number of times in some way to the authenticated string concatenated with the secret key (see, e.g., <ref> [33] </ref>).
Reference: [34] <author> G. Tsudik, E. van Herreweghen, </author> <title> On Simple and Secure Key Distribution, </title> <booktitle> 1-st ACM Conf. on Compu. and Comm. Security, </booktitle> <year> 1993, </year> <pages> 49-57. </pages>
Reference-contexts: The protocol is secure in the sense of key confidentiality, i.e., no one other than A and the KDC is able to obtain K new a . (The security of this protocol is discussion in detail in <ref> [34] </ref>.) However, it is clearly not secure with respect to key integrity. This means that any intruder can modify the key distribution and cause A to extract a key not issued by the KDC.
References-found: 30

