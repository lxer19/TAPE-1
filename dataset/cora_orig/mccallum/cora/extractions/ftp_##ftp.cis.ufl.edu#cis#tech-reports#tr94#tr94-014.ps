URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr94/tr94-014.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr94-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Simulation-Based Planning for Computer Generated Forces  
Author: Jin Joo Lee Paul A. Fishwick 
Affiliation: Department of Computer and Information Sciences University of Florida  
Abstract: Planning in AI has been an active research topic for more than thirty years but only recently has it started to move in the direction of combining planning and execution to achieve what is sometimes called as `Intelligent Reactive Planning'. We propose simulation-based planning as a new way to perform intelligent reactive planning. Simulation-based planning |unlike most other planning systems|integrates simulation into the planning process. Once a set of plans is generated, simulations are used to test and evaluate the plans to choose the most applicable plan for that current situation. In most planning systems, plan evaluation depends on rules alone and because rules must be designed general enough to cover all possible cases, the evaluation is not specific enough for some individual cases. However, when the plan evaluation is done through simulations, the evaluation can be more fine-tuned to individual cases and can allow better plans to be chosen for that individual case. From the military planning perspective, the simulation-based planner is also quite useful due to its ability to perform adversarial and multiagent planning. This is a natural consequence of using simulation in the planning process. By allowing other entities such as the enemy to simulate in parallel with the planner's forces, the planner is able to observe, prior to the actual execution, the effects of adversarial and multiagent actions against its own plans. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Braudaway. </author> <title> A Blackboard Approach to Computer Generated Forces. </title> <booktitle> In Proceedings of the Third Conference on Computer Generated Forces and Behavioral Representation, </booktitle> <pages> pages 11-20, </pages> <address> Or-lando, FL., </address> <year> 1993. </year>
Reference-contexts: To overcome this increase in complexity of reasoning, many new approaches have been introduced [14, 3, 10, 9]. Apart from the differences in methodology, some properties exist that are common to many planning systems which have been built for real applications such as <ref> [1] </ref>. One property is that the planning process divided into two major phases. During the first phase, a set of candidate plans that satisfy some subset of constraints is generated (called plan generation).
Reference: [2] <author> M. Czigler and S. Downes-Martin. </author> <title> Fast Futures Contingency Simulation: A "What If" Tool for Exploring Alternative Plans. </title> <booktitle> In Proceedings of the 1994 SCS Simulation MultiConference, </booktitle> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: The wargame approach to planning is simulation-based, where the model is aggregate and the simulation is discrete and "turn" oriented (in a game fashion). Related work by Czigler et al. <ref> [2] </ref> demonstrates the usefulness of simulation as a decision tool. Our approach is to extend this method by using more detailed models, where the models simulate entity queuing at fords and bridges as well as engagements.
Reference: [3] <author> T.L. Dean and K. </author> <title> Kanazawa. Persistence and probablistic inference. </title> <type> Technical Report CS-87-23, </type> <institution> Brown University Department of Computer Science, </institution> <year> 1987. </year>
Reference-contexts: As more variables are introduced, a large increase in complexity of reasoning is unavoidable, especially when one central system is responsible for reasoning about all possible changes in the environment. To overcome this increase in complexity of reasoning, many new approaches have been introduced <ref> [14, 3, 10, 9] </ref>. Apart from the differences in methodology, some properties exist that are common to many planning systems which have been built for real applications such as [1]. One property is that the planning process divided into two major phases.
Reference: [4] <author> T.L. Dean and M.P. Wellman. </author> <title> Planning and Control. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: In the simulation literature, simulation is defined as " the discipline of designing a model of an actual or theoretical physical system, executing the model on a digital computer, and analyzing the execution output"; Fishwick [8]. In Dean <ref> [4] </ref>, it states that the idea of using model to formulate sequences of actions is central to planning and given a sequence of actions, a robot can use the model to simulate the future as it would occur if the actions were carried out.
Reference: [5] <author> R.E. Fikes, P.E. Hart, and N.J. Nilsson. </author> <title> Learning and Executing Generalized Robot Plans. </title> <journal> Aritifi-cial Intelligence, </journal> <volume> 3, </volume> <year> 1972. </year>
Reference-contexts: Many of the early planners had a different view of planning than how we view planning recently. They viewed planning mainly as a separate entity from execution and assumed there is only one active agent in the world at any time. Some of these earlier classical planners are STRIPS <ref> [5, 6] </ref>, NOAH [13] and SIPE [15]. These classical planning approaches will work well when one can assume that the planner has complete knowledge of the current state and the cause-and-effect relationships of every action in that world.
Reference: [6] <author> R.E. Fikes, P.E. Hart, and N.J. Nilsson. </author> <title> Some New Directions in Robot Problem Solving. </title> <booktitle> In Machine Intelligence 7. </booktitle> <publisher> Edinburgh University Press, </publisher> <year> 1972. </year>
Reference-contexts: Many of the early planners had a different view of planning than how we view planning recently. They viewed planning mainly as a separate entity from execution and assumed there is only one active agent in the world at any time. Some of these earlier classical planners are STRIPS <ref> [5, 6] </ref>, NOAH [13] and SIPE [15]. These classical planning approaches will work well when one can assume that the planner has complete knowledge of the current state and the cause-and-effect relationships of every action in that world.
Reference: [7] <author> P. A. Fishwick. </author> <title> An Integrated Approach to System Modelling using a Synthesis of Artificial Intelligence, </title> <booktitle> Software Engineering and Simulation Methodologies. ACM Transactions on Modeling and Computer Simulation, </booktitle> <volume> 2(4):307 - 330, </volume> <year> 1992. </year>
Reference-contexts: This method would be quite realistic, but it can be quite time consuming. In general, a complete simulation is more time consuming than a temporal projection using rules. If computing capabilities are limited, we can perform simulation at different levels of abstraction <ref> [12, 7] </ref> where each higher level will use less computational power. Another solution is to let the enemy units follow a less sophisticated planning process allowing limited intelligence. This is the approach we are taking for this particular application due to limited computing capabilities.
Reference: [8] <author> P.A. Fishwick. </author> <title> Simulation Model Design and Execution: Building Digital Worlds. </title> <publisher> Prentice-Hall, Inc, </publisher> <year> 1994. </year>
Reference-contexts: In the simulation literature, simulation is defined as " the discipline of designing a model of an actual or theoretical physical system, executing the model on a digital computer, and analyzing the execution output"; Fishwick <ref> [8] </ref>. In Dean [4], it states that the idea of using model to formulate sequences of actions is central to planning and given a sequence of actions, a robot can use the model to simulate the future as it would occur if the actions were carried out.
Reference: [9] <author> K. Hammond. </author> <title> Cased-based planning. </title> <booktitle> In Perspectives in Aritificial Intelligence, </booktitle> <volume> volume 1. </volume> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: As more variables are introduced, a large increase in complexity of reasoning is unavoidable, especially when one central system is responsible for reasoning about all possible changes in the environment. To overcome this increase in complexity of reasoning, many new approaches have been introduced <ref> [14, 3, 10, 9] </ref>. Apart from the differences in methodology, some properties exist that are common to many planning systems which have been built for real applications such as [1]. One property is that the planning process divided into two major phases.
Reference: [10] <author> K. Kanazawa and T. Dean. </author> <title> A Model for Pro--jection and Action. </title> <booktitle> In Proceedings of IJCAI-89, </booktitle> <pages> pages 985-999, </pages> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: As more variables are introduced, a large increase in complexity of reasoning is unavoidable, especially when one central system is responsible for reasoning about all possible changes in the environment. To overcome this increase in complexity of reasoning, many new approaches have been introduced <ref> [14, 3, 10, 9] </ref>. Apart from the differences in methodology, some properties exist that are common to many planning systems which have been built for real applications such as [1]. One property is that the planning process divided into two major phases.
Reference: [11] <author> C.R. Karr, R.W. Franceschini, K.R.S. Perumalla, and M.D. Petty. </author> <title> Integrating Aggregate and Vehicle Level Simulations. </title> <booktitle> In Proceedings of the Third Conference on Computer Generated Forces and Behavioral Representation, </booktitle> <pages> pages 231-239, </pages> <address> Or-lando, FL., </address> <year> 1993. </year>
Reference-contexts: The planner supplies the TA with a center point and a radius and the TA returns one or more of the following types as a terrain feature: ROAD, FORD, GROUND, CHOKE POINT. 3.2 Planner Architecture relation to the IST CGF Testbed <ref> [11] </ref>. Each commander in the IST testbed is simulated by a Command Entity (CE). The Planner performs major functions of this entity. The planner has two phases: the Reactive phase and the Planning phase. A Phase is a group of states that collectively display a behavior.
Reference: [12] <author> J.J. Lee, W.D. Norris, </author> <title> and P.A. Fishwick. An object-oriented mutlimodeling design for integrating simulation and planning tasks. </title> <journal> Journal of Systems Engineering, </journal> <volume> 3 </volume> <pages> 220-235, </pages> <year> 1993. </year>
Reference-contexts: This method would be quite realistic, but it can be quite time consuming. In general, a complete simulation is more time consuming than a temporal projection using rules. If computing capabilities are limited, we can perform simulation at different levels of abstraction <ref> [12, 7] </ref> where each higher level will use less computational power. Another solution is to let the enemy units follow a less sophisticated planning process allowing limited intelligence. This is the approach we are taking for this particular application due to limited computing capabilities. <p> If machine power permits, we can use simulation for all phases of planning; however when we have a limited computing resource, the best practical alternative is to combine rule-based with simulation-based elements as we have done here, or to perform simulation at different levels of abstraction <ref> [12] </ref>. 6 Acknowledgements This research has been supported by a sub-contract, under the direction of Mikel Petty of IST, to the University of Florida for mission planning. We would like to acknowledge conversations with Clark Karr and Doug Reece of IST.
Reference: [13] <author> E.D. Sacerdoti. </author> <title> A Structure for Plans and Be-haviour. </title> <publisher> Elsevier-North Holland, </publisher> <year> 1977. </year>
Reference-contexts: They viewed planning mainly as a separate entity from execution and assumed there is only one active agent in the world at any time. Some of these earlier classical planners are STRIPS [5, 6], NOAH <ref> [13] </ref> and SIPE [15]. These classical planning approaches will work well when one can assume that the planner has complete knowledge of the current state and the cause-and-effect relationships of every action in that world.
Reference: [14] <author> M. Schoppers. </author> <title> Universal Plans for Reactive Robots in Unpredictable Domains. </title> <booktitle> In Int. Joint Conference on Artificial Intelligence, </booktitle> <year> 1987. </year>
Reference-contexts: As more variables are introduced, a large increase in complexity of reasoning is unavoidable, especially when one central system is responsible for reasoning about all possible changes in the environment. To overcome this increase in complexity of reasoning, many new approaches have been introduced <ref> [14, 3, 10, 9] </ref>. Apart from the differences in methodology, some properties exist that are common to many planning systems which have been built for real applications such as [1]. One property is that the planning process divided into two major phases.

References-found: 14

