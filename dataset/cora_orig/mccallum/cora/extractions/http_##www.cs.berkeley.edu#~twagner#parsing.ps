URL: http://www.cs.berkeley.edu/~twagner/parsing.ps
Refering-URL: http://www.cs.berkeley.edu/~twagner/
Root-URL: http://www.cs.berkeley.edu
Title: Efficient and Flexible Incremental Parsing  
Author: TIM A. WAGNER and SUSAN L. GRAHAM 
Keyword: Categories and Subject Descriptors: D.2.6 [Software Engineering]: Programming Environ-mentsinteractive; D.2.7 [Software Engineering]: Distribution and Maintenanceversion control; D.3.4 [Programming Languages]: Processorscompilers; parsing; translator writing systems and compiler generators; E.1 [Data]: Data Structurestrees General Terms: Algorithms, Languages, Performance, Theory Additional Key Words and Phrases: Incremental parsing, optimal reuse, operator precedence, ambiguity, balanced structure, abstract syntax  
Address: Berkeley  
Affiliation: University of California,  
Abstract: Previously published algorithms for LR(k) incremental parsing are inefficient, unnecessarily restrictive, and in some cases incorrect. We present a simple algorithm based on parsing LR(k) sentential forms that can incrementally parse an arbitrary number of textual and/or structural modifications in optimal time and with no storage overhead. The central role of balanced sequences in achieving truly incremental behavior from analysis algorithms is described, along with automated methods to support balancing during parse table generation and parsing. Our approach extends the theory of sentential-form parsing to allow for ambiguity in the grammar, exploiting it for notational convenience, to denote sequences, and to construct compact (`abstract') syntax trees directly. Combined, these techniques make the use of automatically generated incremental parsers in interactive software development environments both practical and effective. In addition, we address information preservation in these environments: optimal node reuse is defined, previous definitions are shown to be insufficient, and a method for detecting node reuse is provided that is both simpler and faster than existing techniques. A program representation based on self-versioning documents is used to detect changes in the program, generate efficient change reports for subsequent analyses, and allow the parsing transformation itself to be treated as a reversible modification in the edit log. 
Abstract-found: 1
Intro-found: 1
Reference: <author> AASA, A. </author> <year> 1995. </year> <title> Precedences in specifications and implementations of programming languages. </title> <journal> Theor. Comput. Sci. </journal> <volume> 142, </volume> <month> 1 (May), 326. </month>
Reference: <author> AGRAWAL, R. AND DETRO, K. D. </author> <year> 1983. </year> <title> An efficient incremental LR parser for grammars with epsilon productions. </title> <journal> Acta Inf. </journal> <volume> 19, </volume> <pages> 369376. </pages>
Reference: <author> AHO, A. V., JOHNSON, S. C., AND ULLMAN, J. D. </author> <year> 1975. </year> <title> Deterministic parsing of ambiguous grammars. </title> <journal> Commun. ACM 18, </journal> <volume> 8 (Aug.), </volume> <pages> 441452. </pages>
Reference: <author> AHO, A. V., SETHI, R., AND ULLMAN, J. D. </author> <year> 1986. </year> <title> Compilers: Principles, Techniques, and Tools. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference: <author> BALLANCE, R. A., BUTCHER, J., AND GRAHAM, S. L. </author> <year> 1988. </year> <title> Grammatical abstraction and incremental syntax analysis in a language-based editor. </title> <booktitle> In Proceedings of the ACM SIGPLAN '88 Symposium on Compiler Construction. </booktitle> <publisher> ACM Press, </publisher> <address> Atlanta, Ga., </address> <month> 185198. </month>
Reference: <author> BEETEM, J. F. AND BEETEM, A. F. </author> <year> 1991. </year> <title> Incremental scanning and parsing with Galaxy. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 17, </volume> <month> 7 (Jul.), 641651. </month>
Reference: <author> BURKE, M. G. AND FISHER, G. A. </author> <year> 1987. </year> <title> A practical method for LR and LL syntactic error diagnosis and recovery. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 9, </volume> <month> 2 (Apr.), 164197. </month>
Reference: <author> CORBETT, R. </author> <year> 1992. </year> <note> bison release 1.24. </note>
Reference: <author> DEGANO, P., MANNUCCI, S., AND MOJANA, B. </author> <year> 1988. </year> <title> Efficient incremental LR parsing for syntax-directed editors. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 10, </volume> <month> 3 (Jul.), 345373. </month>
Reference: <author> GAFTER, N. M. </author> <year> 1990. </year> <title> Parallel incremental compilation. </title> <type> Ph.D. dissertation, </type> <institution> University of Rochester, Rochester, N.Y. </institution>
Reference: <author> GHEZZI, C. AND MANDRIOLI, D. </author> <year> 1980. </year> <title> Augmenting parsers to support incrementality. </title> <journal> Journal of the ACM 27, </journal> <volume> 3 (Jul.), </volume> <pages> 564579. </pages>
Reference: <author> HEDIN, G. </author> <year> 1992. </year> <title> Incremental semantic analysis. </title> <type> Ph.D. dissertation, </type> <institution> Department of Computer Science, Lund University. </institution>
Reference: <author> HEERING, J., HENDRIKS, P. R. H., KLINT, P., AND REKERS, J. </author> <year> 1992. </year> <title> The syntax definition formalism SDF Reference Manual. ASF+SDF Project. </title>
Reference: <author> HEILBRUNNER, S. </author> <year> 1979. </year> <title> On the definition of elr(k) and ell(k) grammars. </title> <journal> Acta Inf. </journal> <volume> 11, </volume> <pages> 169176. </pages>
Reference: <author> JALILI, F. AND GALLIER, J. H. </author> <year> 1982. </year> <title> Building friendly parsers. </title> <booktitle> In 9th ACM Symp. Principles of Prog. </booktitle> <publisher> Lang. ACM Press, </publisher> <address> Albuquerque, N.Mex., 196206. </address>
Reference: <author> KLINT, P. AND VISSER, E. </author> <year> 1994. </year> <title> Using filters for the disambiguation of context-free grammars. </title> <booktitle> In Proc. ASMICS Workshop on Parsing Theory. </booktitle> <address> Milan, Italy. </address>
Reference: <author> LALONDE, W. R. </author> <year> 1977. </year> <title> Regular right part grammars and their parsers. </title> <journal> Commun. ACM 20, </journal> <volume> 10, </volume> <pages> 731740. </pages>
Reference: <author> LARCHEV EQUE, J. M. </author> <year> 1995. </year> <title> Optimal incremental parsing. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 17, 1, </volume> <pages> 115. </pages>
Reference: <author> LI, W. X. </author> <year> 1995a. </year> <title> A simple and efficient incremental LL(1) parsing [sic]. </title> <booktitle> In SOFSEM '95: Theory and Practice of Informatics (Milovy, </booktitle> <address> Czech Republic). </address> <publisher> LNCS. Springer-Verlag, </publisher> <address> Berlin, </address> <month> 399404. </month>
Reference: <author> LI, W. X. </author> <year> 1995b. </year> <title> Towards generating practical language-based editing systems. </title> <type> Ph.D. dissertation, </type> <institution> University of Western Australia. </institution>
Reference: <author> MADDOX, W. </author> <year> 1997. </year> <title> Incremental static semantic analysis. </title> <type> Ph.D. dissertation, </type> <institution> University of California, Berkeley. </institution> <note> Available as technical report UCB/CSD97948. </note>
Reference: <author> MAVERICK, V. </author> <year> 1997. </year> <title> Presentation by tree transformation. </title> <type> Ph.D. dissertation, </type> <institution> University of California, Berkeley. </institution> <note> Available as technical report UCB/CSD97947. </note>
Reference: <author> MURCHING, A. M., PRASAD, Y. V., AND SRIKANT, Y. N. </author> <year> 1990. </year> <title> Incremental recursive descent parsing. </title> <booktitle> Computer Languages 15, </booktitle> <volume> 4, </volume> <year> 193204. </year>
Reference: <author> PETRONE, L. </author> <year> 1995. </year> <title> Reusing batch parsers as incremental parsers. </title> <booktitle> In Proc. 15th Conf. Foundations Softw. </booktitle> <institution> Tech. and Theor. Comput. Sci. (Bangalore, India). </institution> <note> Number 1026 in LNCS. Springer-Verlag, Berlin, 111123. written for ACM Transactions on Programming Languages and Systems, August 30, 1997 at 16 : 54. </note> <author> 36 T. Wagner and S. Graham REPS, T. W. AND TEITELBAUM, T. </author> <year> 1989. </year> <title> The Synthesizer Generator: A System for Constructing Language-Based Editors. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> SASSA, M. AND NAKATA, I. </author> <year> 1987. </year> <title> A simple realization of LR-parsers for regular right part grammars. </title> <journal> Information Processing Letters 24, </journal> <volume> 113120. </volume>
Reference: <author> SHILLING, J. J. </author> <year> 1992. </year> <title> Incremental LL(1) parsing in language-based editors. </title> <journal> IEEE Trans. Softw. Eng. </journal> <volume> 19, </volume> <month> 9 (Sep.), 935940. </month>
Reference: <author> TARJAN, R. E. </author> <year> 1983. </year> <title> Data Structures and Network Algorithms. </title> <institution> Society for Industrial and Applied Mathematics, Philadelphia, Penn. </institution>
Reference: <author> THORUP, M. </author> <year> 1994. </year> <title> Controlled grammatic ambiguity. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 16, </volume> <month> 3 (May), 10241050. </month>
Reference: <author> VAN DE VANTER, M. L., GRAHAM, S. L., AND BALLANCE, R. A. </author> <year> 1992. </year> <title> Coherent user interfaces for language-based editing systems. </title> <journal> Intl. J. Man-Machine Studies 37, </journal> <volume> 431466. </volume>
Reference: <author> VISSER, E. </author> <year> 1995. </year> <title> A case study in optimizing parsing schemata by disambiguation filters. </title> <type> Tech. Rep. </type> <institution> P9507, Programming Research Group, University of Amsterdam. </institution> <month> Jul. </month>
Reference: <author> WAGNER, T. A. </author> <year> 1997. </year> <title> Practical algorithms for incremental software development environments. </title> <type> Ph.D. dissertation, </type> <institution> University of California, Berkeley. </institution> <note> Available as technical report UCB/CSD97946. </note>
Reference: <author> WAGNER, T. A. AND GRAHAM, S. L. </author> <year> 1997a. </year> <title> Efficient self-versioning documents. </title> <booktitle> In CompCon '97. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> San Jose, Calif., </address> <month> 6267. </month>
Reference: <author> WAGNER, T. A. AND GRAHAM, S. L. </author> <year> 1997b. </year> <title> History-sensitive error recovery. </title> <note> In preparation. </note>
Reference: <author> WEGMAN, M. N. </author> <year> 1980. </year> <title> Parsing for structural editors. </title> <booktitle> In Proc. of 21st Annual IEEE Symposium on Foundations of Computer Science. </booktitle> <publisher> IEEE Press, </publisher> <address> Syracuse, N.Y., </address> <year> 320327. </year>
Reference: <author> YANG, W. </author> <year> 1994. </year> <title> Incremental LR parsing. </title> <booktitle> In 1994 International Computer Symposium Conference Proceedings. </booktitle> <institution> National Chiao Tung University, Hsinchu, Taiwan, </institution> <note> 577583 vol. 1. </note>
Reference: <author> YEH, D. AND KASTENS, U. </author> <year> 1988. </year> <title> Automatic construction of incremental LR(1) parsers. </title> <journal> ACM SIGPLAN Notices 23, </journal> <note> 3 (Mar.), 3342. written for ACM Transactions on Programming Languages and Systems, August 30, 1997 at 16 : 54. </note>
References-found: 36

