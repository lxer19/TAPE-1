URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/formal-DAI.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/
Root-URL: http://www.csc.ncsu.edu
Title: Contents 8 Formal Methods in DAI: Logic-Based Representation and Reasoning  
Note: 1 8.1 Introduction 1 8.2 Logical Background 2 8.2.1 Basic Concepts 3 8.2.2 Propositional and Predicate Logic 4 8.2.3 Modal Logic 5 8.2.4 Deontic Logic 6 8.2.5 Dynamic Logic 7 8.2.6 Temporal Logic 8 8.3 Cognitive Primitives 12 8.3.1 Knowledge and Beliefs 13 8.3.2 Desires and Goals 13 8.3.3 Intentions 13 8.3.4 Commitments 15 8.3.5 Know-How 16 8.3.6 Sentential and Hybrid Approaches 18 8.3.7 Reasoning with Cognitive Concepts 19 8.4 BDI Implementations 19 8.4.1 Abstract Architecture 20 8.4.2 Practical System 21 8.5 Coordination 26 8.5.1 Architecture 26 8.5.2 Specification Language 28 8.5.3 Common Coordination Relationships 29 8.6 Communications 30 8.6.1 Semantics 30 8.6.2 Ontologies 31 8.7 Social Primitives 32 8.7.1 Teams and Organizational Structure 32 8.7.2 Mutual Beliefs and Joint Intentions 32 8.7.3 Social Commitments 33 8.7.4 Group Know-How and Intentions 33 8.8 Tools and Systems 34  
Abstract-found: 0
Intro-found: 0
Reference: 1. <author> Alfred V. Aho and Jeffrey D. Ullman. </author> <title> Principles of Compiler Design. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1977. </year>
Reference-contexts: The following exposition defines a series of formal languages to capture some pretheoretic intuitions about concepts such as truth, possibility, action, time, beliefs, desires, and intentions. The typical formal languages of interest are context-free, and hence can be specified in the traditional Backus-Naur Form (BNF) <ref> [1, chapter 4] </ref>. However, for simplicity, and in keeping with most works on logic, we specify their syntax as a set of informal rules. Also, for most of the logics we present, syntactic variants are possible, but it won't be worth our while to discuss them here.
Reference: 2. <author> Alan Ross Anderson and Nuel D. Belnap. </author> <title> Entailment: The Logic of Relevance and Necessity. </title> <publisher> Princeton University Press, Princeton, </publisher> <year> 1975. </year>
Reference-contexts: For example, p!q is true if p is false irrespective of q|thus it identifies potentially irrelevant connections. Alternative, more faithful, formalizations of "implies" do exist, e.g., in relevance 8.2 Logical Background 5 logic <ref> [2] </ref>. We will refer to a simple variant in Section 8.2.3. However, most current research in logic and computer science ignores the subtlety and uses the above definition.
Reference: 3. <author> John L. Austin. </author> <title> How to Do Things with Words. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1962. </year>
Reference-contexts: Communications is discussed in detail in Chapter 2. Speech act theory, which originated in the philosophy of language, gives the basis for communications. Speech act theory is founded on the idea that with language you not only make statements, but also perform actions <ref> [3] </ref>. For example, when you request something you do not just report on a request, but you actually effect the request; when a justice of the peace declares a couple man and wife, she is not reporting on their marital status, but changing it. <p> The stylized syntactic form for speech acts that begins "I hereby request . . . " or "I hereby declare . . . " is called a performative. With a performative, literally, saying it makes it so! <ref> [3, p. 7] </ref>. Interestingly, verbs that cannot be put in this form are not speech acts.
Reference: 4. <author> Nuel Belnap and Michael Perloff. </author> <title> Seeing to it that: A canonical form for agentives. </title> <journal> Theoria, </journal> <volume> 54(3) </volume> <pages> 175-199, </pages> <year> 1988. </year>
Reference-contexts: A number of technical approaches to concepts of the know-how family exist. Some of the leading ones are Segerberg's bringing it about [68] and Belnap & Perloff's seeing to it that (STIT) <ref> [4] </ref> theories. 8.3.6 Sentential and Hybrid Approaches The above approaches have used modal logics to formalize various cognitive concepts. Although technically intuitive and elegant, modal approaches have the undesirable feature that they over-estimate the reasoning capabilities of an agent.
Reference: 5. <author> Michael E. Bratman. </author> <title> Intention, Plans, and Practical Reason. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1987. </year>
Reference-contexts: Other important constraints on intentions include (a) the absence of closure of intentions under beliefs, (b) the consistency of intentions with beliefs about reality, and (c) the non-entailment of beliefs about reality. Of these, (a) and (b) are jointly termed the asymmetry thesis by Bratman <ref> [5, p. 38] </ref>. He argues that they are among the more basic constraints on the intentions and beliefs of rational agents. 8.3.4 Commitments As presented, goals and intentions are quite similar in their semantic structure. <p> The difference in these modalities arises in their relationships with other modalities and in terms of how they may evolve over time. One of the properties that separates them is commitment. An agent is typically treated as being committed to its intentions <ref> [5] </ref>. Such commitments apply within a given individual agent, and are accordingly also termed psychological commitments [10, 74]. An agent's commitment governs whether it will persist with its intentions and if so, for how long. <p> It illustrates the main components of practical reasoning: option generation, deliberation, execution, and intention handling <ref> [5] </ref>. However, it is not practical. The architecture assumes a (logically) closed set 22 Formal Methods in DAI: Logic-Based Representation and Reasoning of beliefs, goals, and intentions.
Reference: 6. <author> Frances M. T. Brazier, Barbara M. Dunin-Keplicz, Nick Jennings, and Jan Treur. Desire: </author> <title> Modelling multi-agent systems in a compositional formal framework. </title> <journal> International Journal of Cooperative Information Systems, </journal> <volume> 6(1) </volume> <pages> 67-94, </pages> <year> 1997. </year>
Reference-contexts: We include these here, because as we have maintained in this Chapter, DAI requires the careful synthesis of traditional and new techniques. 8.8.3.1 DESIRE Design and Specification of Interacting Reasoning Components, better known as DESIRE, is a framework for the design and specification of multiagent systems <ref> [6] </ref>. DESIRE can be thought of as an object modeling framework with enhancements for DAI. The primary unit of representation in DESIRE is a task.
Reference: 7. <author> Phillipe Breiter and M. David Sadek. </author> <title> A rational agent as a kernel of a cooperative dialogue system: Implementing a logical theory of interaction. </title> <booktitle> In ECAI-96 Workshop on Agent Theories, Architectures, and Languages, </booktitle> <pages> pages 261-276. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Enhancements with explicit BDI operators are beginning to be developed [30]. 8.8.1.5 ARTIMIS Breiter & Sadek have implemented a formal theory of beliefs and intentions in the ARTIMIS system <ref> [7] </ref>. The ARTIMIS system carries out intelligent dialogue with a user in assisting the user in tasks such as information access. This system, being designed as a user interface, applies the Gricean maxims, whereby the computer attempts to infer the user's intentions and act accordingly.
Reference: 8. <author> Omran A. Bukhres and Ahmed K. Elmagarmid, </author> <title> editors. Object-Oriented Multidatabase Systems: A Solution for Advanced Applications. </title> <publisher> Prentice-Hall, </publisher> <year> 1996. </year>
Reference: 9. <author> J. R. Burch, E. C. Clarke, K. L. McMillan, D. L. Dill, and L. J. Hwang. </author> <title> Symbolic model checking: 10 20 states and beyond. </title> <booktitle> In Proceedings of the 5th International Symposium on Logic in Computer Science, </booktitle> <pages> pages 428-439, </pages> <year> 1990. </year>
Reference-contexts: The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints [24, 52]. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking <ref> [9, 14] </ref>. Both of the above classes of techniques are now being extended and applied in DAI. Rao has developed some tableau-based decision procedures for variants of the above BDI logics [64].
Reference: 10. <author> Cristiano Castelfranchi. </author> <title> Commitments: From individual intentions to groups and organizations. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems, </booktitle> <pages> pages 41-48, </pages> <year> 1995. </year>
Reference-contexts: One of the properties that separates them is commitment. An agent is typically treated as being committed to its intentions [5]. Such commitments apply within a given individual agent, and are accordingly also termed psychological commitments <ref> [10, 74] </ref>. An agent's commitment governs whether it will persist with its intentions and if so, for how long. There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics [36, 65, 76]. <p> Here we consider social commitments, which are the commitments that an agent toward another agent <ref> [10, 74] </ref>. Such commitments related to directed obligations [55] as studied in deontic logic (see Section 8.2.4). Social commitments are a genuinely multiagent concept, since they have no analog in a single-agent system. <p> Although concepts such as social commitments have long been identified, this topic has drawn much interest recently <ref> [10, 16, 23, 66, 80] </ref>. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80]. <p> Although concepts such as social commitments have long been identified, this topic has drawn much interest recently [10, 16, 23, 66, 80]. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation <ref> [10] </ref>. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80]. The formalization of social commitments involves defining an independent primitive.
Reference: 11. <author> K. M. Chandy and Jayadev Misra. </author> <title> How processes learn. </title> <journal> Distributed Computing, </journal> <volume> 1 </volume> <pages> 40-52, </pages> <year> 1986. </year>
Reference-contexts: On the one hand, mutual beliefs play a role in several theories; on the other hand, it is well-known that if communications among the agents are not reliable (in terms of delivery and delay), then mutual beliefs cannot be attained <ref> [11, 37] </ref>. In other words, the mutual beliefs are limited to the beliefs that the designer hard-wires into the agents at the start, but additional mutual beliefs cannot be attained.
Reference: 12. <author> Brian F. Chellas. </author> <title> Modal Logic. </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1980. </year>
Reference-contexts: In the literature, these are termed the T , D, 4, B, and 5 schemas, respectively <ref> [12] </ref>. 8.2.4 Deontic Logic Deontic logic is about what ought to be the case or what an agent is obliged to do. Traditional deontic logic introduces an operator Obl for obliged, whose dual is Per for permitted. <p> Traditionally, to model belief, B is assumed to be serial, symmetric, and euclidean (as defined in Section 8.2.3). To model knowledge, it is in addition also assumed to be reflexive. In that case, it becomes an equivalence relation, resulting in K t being an S5 modal logic operator <ref> [12] </ref>. When 2 is treated as belief (or knowledge), the schemas 4 and 5 of Section 8.2.3 have an interesting interpretation. The former means that if an agent believes a condition, it believes that it believes it.
Reference: 13. <author> Herbert H. Clark and Thomas B. Carlson. </author> <title> Speech acts and hearer's beliefs. </title> <booktitle> In [85], </booktitle> <pages> pages 1-36. </pages> <year> 1982. </year>
Reference-contexts: Mutual belief thus provides a means to achieve the effect of a perfectly shared mental state. It has been argued the mutual beliefs can account for various aspects of human communication <ref> [13, 39] </ref> and social conventions [58]. Levesque & Cohen developed an approach that generalizes the notion of intentions to joint intentions [57]. This theory is extremely complicated, and our presentation can at best be thought of an intuitive approximation of the original.
Reference: 14. <author> E. Clarke, O. Grumberg, and D. </author> <title> Long. Model checking. </title> <booktitle> In Proceedings of the International Summer School on Deductive Program Design, </booktitle> <pages> pages 428-439, </pages> <year> 1990. </year>
Reference-contexts: The other approach, which was invented in logics of programs and is finding increasing application in AI, is model checking. This involves checking if a given formula is satisfied at a given model and index. For certain logics, model checking can be a lot more tractable than theorem proving <ref> [24, 14] </ref>. However, model checking requires additional inputs in the form of the model and index. This does not prove to be a problem in several cases, where one if trying to validate a given agent design in a given environment. <p> The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints [24, 52]. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking <ref> [9, 14] </ref>. Both of the above classes of techniques are now being extended and applied in DAI. Rao has developed some tableau-based decision procedures for variants of the above BDI logics [64].
Reference: 15. <author> Philip R. Cohen and Hector J. Levesque. </author> <title> Intention is choice with commitment. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 213-261, </pages> <year> 1990. </year>
Reference-contexts: Technically, two main ingredients are missing. The agent must know how to achieve the intended condition and must act on its intentions. We include this here to point out that in the theory of <ref> [15] </ref>, persistence is sufficient for success (p. 233). This is a major conceptual weakness, since it violates the usual understanding that intentions do not entail know-how [75]. <p> There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics [36, 65, 76]. A contrasting approach is to include commitment in the core semantical definition of intentions <ref> [15] </ref>; this approach is criticized by [65, 73, 75]. Constraint IC4 shows how commitment may be expressed in the present framework. This version of commitment is purely qualitative. 16 Formal Methods in DAI: Logic-Based Representation and Reasoning IC4.
Reference: 16. <author> Rosaria Conte and Cristiano Castelfranchi. </author> <title> Cognitive and Social Action. </title> <publisher> UCL Press, </publisher> <address> London, </address> <year> 1995. </year>
Reference-contexts: Although concepts such as social commitments have long been identified, this topic has drawn much interest recently <ref> [10, 16, 23, 66, 80] </ref>. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80].
Reference: 17. <author> Giuseppe De Giacomo and Xiao Jun Chen. </author> <title> Reasoning about nondeterministic and concurrent actions: A process algebra approach. </title> <booktitle> In Proceedings of the National 42 Formal Methods in DAI: Logic-Based Representation and Reasoning Conference on Artificial Intelligence, </booktitle> <pages> pages 658-663, </pages> <year> 1996. </year>
Reference-contexts: Both of the above classes of techniques are now being extended and applied in DAI. Rao has developed some tableau-based decision procedures for variants of the above BDI logics [64]. The -calculus is recently being applied to reasoning about the actions of agents <ref> [17, 79] </ref>. 8.4 BDI Implementations We now consider some possible ways to realize the above theories of BDI concepts in a computational system. 20 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.4.1 Abstract Architecture We first characterize a BDI architecture abstractly and then show how a concrete practical instantiation may
Reference: 18. <editor> Yves Demazeau and Jean-Pierre Muller, editors. </editor> <booktitle> Decentralized Artificial Intelligence, Volume 2. </booktitle> <address> Elsevier/North-Holland, Amsterdam, </address> <year> 1991. </year>
Reference: 19. <author> Mark d'Inverno, David Kinny, Michael Luck, and Michael Wooldridge. </author> <title> A formal specification of dMARS. In Intelligent Agents IV: Agent Theories, Architectures, </title> <booktitle> and Languages, </booktitle> <year> 1998. </year>
Reference-contexts: Another use involves formalizing existing systems after the fact to give a mathematical characterization of their behavior that may be more faithful than a pure knowledge-level BDI treatment <ref> [19] </ref>. 8.9 Conclusions As DAI matures and its applications expand into increasingly critical settings, we will need sophisticated approaches for engineering DAI systems. As in other branches of computer science, these approaches will involve a combination of tools and methodologies.
Reference: 20. <author> Mark d'Inverno and Michael Luck. </author> <title> Understanding autonomous interaction. </title> <booktitle> In Proceedings of the European Conference on Artificial Intelligence, </booktitle> <year> 1996. </year>
Reference-contexts: It has found application in DAI as well. One class of uses of Z involves formally specifying properties such as the autonomy and dependence of agents in multiagent systems, as well as the cognitive concepts discussed above <ref> [20] </ref>.
Reference: 21. <author> Mark d'Inverno, Michael Luck, and Michael Wooldridge. </author> <title> Cooperation structures. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 600-605, </pages> <year> 1997. </year>
Reference-contexts: We emphasize, however, that some of this work is still in an early stage, and the descriptions below, although moderately stable, should not be taken as final. Some good work has focused on formalizing cooperative problem solving [92], and the representations needed for effective cooperation <ref> [21] </ref>. 8.7.2 Mutual Beliefs and Joint Intentions One of the oldest ways of lifting single-agent concepts to multiagent concepts is through the use of mutual beliefs.
Reference: 22. <author> Michael L. Dowell, Larry M. Stephens, and Ronald D. Bonnell. </author> <title> Using a domain-knowledge ontology as a semantic gateway among information resources. </title> <booktitle> In [45], </booktitle> <pages> pages 255-260. </pages> <year> 1997. </year> <booktitle> (Reprinted from Proceedings of the IJCAI Workshop on Basic Ontological Issues in Knowledge Sharing, </booktitle> <year> 1995). </year>
Reference-contexts: Thus, they can build a shared understanding of their content language. It is this fact that makes ontologies interesting. They found much application in DAI systems, especially those involving access to, or interactions among, information systems and databases <ref> [22, 90] </ref>. Consequently, ontologies are included in several multiagent architectures. Ontologies are amenable to formal methods in two main places. One place is in the algorithms for processing ontologies, which exploit the connection between lattice theory and taxonomies [43].
Reference: 23. <author> Barbara Dunin-Keplicz and Rineke Verbrugge. </author> <title> Collective commitments. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems, </booktitle> <pages> pages 56-63, </pages> <year> 1996. </year>
Reference-contexts: Although concepts such as social commitments have long been identified, this topic has drawn much interest recently <ref> [10, 16, 23, 66, 80] </ref>. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80].
Reference: 24. <author> E. Allen Emerson. </author> <title> Temporal and modal logic. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 995-1072. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: It builds on top of L L and L D , and especially uses the ideas of the well-known language CTL* <ref> [24] </ref>. L B captures the essential properties of actions and time that are of value in specifying agents. Formally, L is the minimal set closed under the rules given below. Here L s is the set of "path-formulas," which is used as an auxiliary definition. <p> The other approach, which was invented in logics of programs and is finding increasing application in AI, is model checking. This involves checking if a given formula is satisfied at a given model and index. For certain logics, model checking can be a lot more tractable than theorem proving <ref> [24, 14] </ref>. However, model checking requires additional inputs in the form of the model and index. This does not prove to be a problem in several cases, where one if trying to validate a given agent design in a given environment. <p> The model can be derived given knowledge of the agent and its environment. Temporal logics and modal logics of knowledge have been studied for some time, and their complexity issues are well-understood. We lack the space to discuss complexity issues in much detail here, and refer the reader to <ref> [24, 28, 53] </ref> for details. The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints [24, 52]. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking [9, 14]. <p> We lack the space to discuss complexity issues in much detail here, and refer the reader to [24, 28, 53] for details. The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints <ref> [24, 52] </ref>. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking [9, 14]. Both of the above classes of techniques are now being extended and applied in DAI.
Reference: 25. <author> E. Allen Emerson and Edmund C. Clarke. </author> <title> Using branching time temporal logic to synthesize synchronization skeletons. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 2 </volume> <pages> 241-266, </pages> <year> 1982. </year>
Reference-contexts: In other words, the only events we speak of are those publicly known|the rest are of no concern to the coordination service. These events are organized into skeletons that characterize the coordination behavior of the agents. The idea of using events and skeletons is well-known from logics of programs <ref> [25] </ref>. 8.5 Coordination 27 8.5.1.1 Event Classes We allow four classes of events, which have different properties with respect to coordination.
Reference: 26. <author> Herbert B. Enderton. </author> <title> A Mathematical Introduction to Logic. </title> <publisher> Academic Press, </publisher> <address> San Diego, </address> <year> 1972. </year>
Reference-contexts: Formulas in this language are built up from atomic propositions, which intuitively express atomic facts about the world and truth-functional connectives. The connectives ^, _, :, and ! denote "and," "or," "not," and "implies," respectively. The reader may consult a textbook, such as <ref> [26] </ref> for additional details. Example 8.1 The facts "it rains" and "road is wet" can be captured as atomic propositions rains and wet-road, respectively. The implication that "if it rains, then the road is wet" can be captured by the propositional formula rain !wet-road. <p> There are two main approaches for reasoning with a logic. The more traditional one in logic and AI is theorem proving, which essentially involves establishing that a given formula (the purported theorem) follows through a finite sequence of applications of axioms and inferences rules of a given logic <ref> [26] </ref>. The other approach, which was invented in logics of programs and is finding increasing application in AI, is model checking. This involves checking if a given formula is satisfied at a given model and index. <p> 1344 will repeatedly be getting cold and hot 3. [Level 1] Formalize the following conditions in dynamic logic: (a) turning on the air conditioner makes room 1344 cold (b) turning off the air conditioner does not make room 1344 hot 4. [Level 2] Formalize the following conditions in predicate logic <ref> [26] </ref> (requires extra reading): (a) every room with an air conditioner is cold 40 Formal Methods in DAI: Logic-Based Representation and Reasoning (b) the agent x feels cold in every room that has an air conditioner (c) some agent feels cold in every room that has an air conditioner 5. [Level
Reference: 27. <author> Ronald Fagin and Joseph Y. Halpern. </author> <title> Belief, awareness, and limited reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 39-76, </pages> <year> 1988. </year>
Reference-contexts: This too is undesirable, and has accounted for the lack of attention paid to these approaches. Some hybrid approaches the give a possible worlds semantics, but restrict it via some representational mechanism have also been developed, e.g., <ref> [27, 82] </ref>, but these two have not been intensively pursued in the literature. One way to understand the above issue is as a natural consequence of the knowledge level [63].
Reference: 28. <author> Ronald Fagin, Joseph Y. Halpern, Yoram Moses, and Moshe Y. Vardi. </author> <title> Reasoning About Knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1995. </year>
Reference-contexts: The model can be derived given knowledge of the agent and its environment. Temporal logics and modal logics of knowledge have been studied for some time, and their complexity issues are well-understood. We lack the space to discuss complexity issues in much detail here, and refer the reader to <ref> [24, 28, 53] </ref> for details. The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints [24, 52]. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking [9, 14].
Reference: 29. <author> Michael Fisher. </author> <title> A survey of concurrent MetateM the language and its applications. </title> <booktitle> In Proceedings of the 1st International Conference on Temporal Logic (ICTL), </booktitle> <year> 1994. </year>
Reference-contexts: However, it does not offer the reactivity offered by the BDI architecture because of its inability to indirectly invoke the execution of plans. 8.8.1.4 Concurrent MetateM An alternative approach uses temporal logic to specify the behavior of agents. A Concurrent MetateM system <ref> [29] </ref> consists of a set of objects each executing temporal specifications.
Reference: 30. <author> Michael Fisher and Michael Wooldridge. </author> <title> On the formal specification and verification of multi-agent systems. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 6(1) </volume> <pages> 37-65, </pages> <year> 1997. </year>
Reference-contexts: Enhancements with explicit BDI operators are beginning to be developed <ref> [30] </ref>. 8.8.1.5 ARTIMIS Breiter & Sadek have implemented a formal theory of beliefs and intentions in the ARTIMIS system [7]. The ARTIMIS system carries out intelligent dialogue with a user in assisting the user in tasks such as information access.
Reference: 31. <author> Les Gasser. </author> <title> Social conceptions of knowledge and action: DAI foundations and open systems semantics. </title> <booktitle> In [45], </booktitle> <pages> pages 389-404. </pages> <year> 1997. </year> <note> (Reprinted from Artificial Intelligence, </note> <year> 1991). </year>
Reference-contexts: based on algebraic techniques [89]; however, this work is still in its infancy. 32 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.7 Social Primitives Arguably, it is the active use of social concepts in its design and implementation that distinguish a DAI system from a traditional distributed computing system <ref> [31] </ref>. We lump into the category of social primitives those that concern societies of agents as well as those that concern smaller and more heavily structured organizations.
Reference: 32. <author> Michael P. Georgeff and F. Felix Ingrand. </author> <title> Decision-making in an embedded reasoning system. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <year> 1989. </year>
Reference-contexts: Such deliberation can be achieved by including metalevel plans in the plan library. Thus the deliberate procedure may select, and thus form an intention towards, metalevel plans for performing more complex deliberation than it itself is capable. We give a simplified version of the procedure implemented in PRS <ref> [32] </ref>. deliberate (options) if length (options) 1 then return (options); else metalevel-options := option-generator (b-add (option-set (options))); selected-options := deliberate (metalevel-options); if null (selected-options) then return (random-choice (options)); else return (selected-options).
Reference: 33. <author> Michael P. Georgeff and Amy L. Lansky. </author> <title> Procedural knowledge. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 74 </volume> <pages> 1383-1398, </pages> <year> 1986. </year>
Reference-contexts: essentially traditional techniques applied to DAI, and those that were informally influenced by the DAI approaches. 8.8.1 Direct Implementations We now review some of the popular systems that are fairly directly based on the above ideas. 8.8 Tools and Systems 35 8.8.1.1 PRS and dMARS The Procedural Reasoning System (PRS) <ref> [33] </ref> was one of the first implemented systems to be based on a BDI architecture. As described in the foregoing, PRS provides goal-oriented as well as reactive behavior.
Reference: 34. <author> Michael P. Georgeff and Anand S. Rao. </author> <title> The semantics of intention maintenance for rational agents. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <pages> pages 704-710, </pages> <year> 1995. </year> <note> 8.10 Exercises 43 </note>
Reference-contexts: 2 I (x; t) and [S; t; t 0 ] 2 [[a]] x )) (8S 0 2 I (x; t 0 )) (9S 00 2 I (x; t) and However, it is believed that handling commitment and the update of intentions will involve greater subtlety than the above, e.g., see <ref> [34, 81] </ref> for logic-based and probabilistic approaches, respectively. 8.3.5 Know-How Intentions have an obvious connection with actions|agents act to satisfy their intentions. However, intentions do not ensure success; IC3 above showed that even persistence is not sufficient for success. A key ingredient is know-how, which we now formalize.
Reference: 35. <author> Barbara J. Grosz and Sarit Kraus. </author> <title> Collaborative plans for complex group action. </title> <journal> Artificial Intelligence, </journal> <volume> 86(2) </volume> <pages> 269-357, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: Grosz & Kraus develop a formal theory of shared plans <ref> [35] </ref>. This theory relates the cooperative activities of agents via their individual and shared plans. A distinction is sometimes made between an agent intending to achieve something and an 8.7 Social Primitives 33 agent intending that some condition be obtained.
Reference: 36. <author> Afsaneh Haddadi. </author> <title> Communication and Cooperation in Agent Systems : A Pragmatic Theory. </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1996. </year>
Reference-contexts: An agent's commitment governs whether it will persist with its intentions and if so, for how long. There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics <ref> [36, 65, 76] </ref>. A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by [65, 73, 75]. Constraint IC4 shows how commitment may be expressed in the present framework. <p> Table 8.1 shows the trace. In the above we showed how the logics of the BDI concepts can be mapped into realistic implementations of systems. Although we didn't discuss the interactional aspects in the above, those can be worked in as well <ref> [36, 66] </ref>. We now our attention to some direct ways of capturing the interactional aspects of multiagent systems. 26 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.5 Coordination Coordination is one of the key functionalities needed to implement a multiagent system. <p> variety of operational environments, including paint shop scheduling in car manufacturing, air combat simulation, resource exploration, malfunction handling on NASA's space shuttle, and management of business processes in Internet and call center applications [49]. 8.8.1.2 COSY COSY is also a BDI architecture, and bears several similarities to PRS and dMARS <ref> [36] </ref>. It involves the same concepts, and uses plans as its core representation. However, in addition, COSY has gives importance to both psychological and social commitments. COSY has a strong component of cooperation, which is based on formal protocols built on top of an agent communication language.
Reference: 37. <author> Joseph Y. Halpern and Yoram O. Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 37 </volume> <pages> 549-587, </pages> <year> 1990. </year>
Reference-contexts: On the one hand, mutual beliefs play a role in several theories; on the other hand, it is well-known that if communications among the agents are not reliable (in terms of delivery and delay), then mutual beliefs cannot be attained <ref> [11, 37] </ref>. In other words, the mutual beliefs are limited to the beliefs that the designer hard-wires into the agents at the start, but additional mutual beliefs cannot be attained.
Reference: 38. <editor> C. L. Hamblin. Imperatives. </editor> <publisher> Basil Blackwell, Oxford, </publisher> <year> 1987. </year>
Reference-contexts: This approach sought to give the objective criteria under which speech acts of different illocutionary forces could be said to be satisfied. The idea was to identify the conditions in a framework that highlighted the proof-obligations of a designer in showing that different speech acts were satisfied. Following Hamblin <ref> [38] </ref>, Singh defined a notion of whole-hearted satisfaction. This was formalized using a modal operator; truth conditions for this operator corresponded to satisfaction conditions for the corresponding speech acts.
Reference: 39. <author> Gilbert Harman. </author> <title> Review of Jonathan Bennett's Linguistic Behaviour. </title> <booktitle> Language, </booktitle> <volume> 53(2) </volume> <pages> 417-424, </pages> <year> 1977. </year>
Reference-contexts: Mutual belief thus provides a means to achieve the effect of a perfectly shared mental state. It has been argued the mutual beliefs can account for various aspects of human communication <ref> [13, 39] </ref> and social conventions [58]. Levesque & Cohen developed an approach that generalizes the notion of intentions to joint intentions [57]. This theory is extremely complicated, and our presentation can at best be thought of an intuitive approximation of the original.
Reference: 40. <editor> Risto Hilpinen, editor. </editor> <title> Deontic Logic: Introductory and Systematic Readings, volume 33 of Synthese Library. </title> <address> D. </address> <publisher> Reidel, Dordrecht, Holland, </publisher> <year> 1971. </year>
Reference-contexts: Unfortunately, this formulation suffers from a number of paradoxes. We shall not study it in detail here, nor the more sophisticated approaches of dyadic deontic logic and logics of directed obligation. Instead, we refer the reader to some important collections of essays on this subject <ref> [40, 41, 62] </ref>. 8.2.5 Dynamic Logic Dynamic logic can be thought of as the modal logic of action [53]. Unlike traditional modal logics, however, the necessity and possibility operators of dynamic logic are based upon the kinds of actions available.
Reference: 41. <editor> Risto Hilpinen, editor. </editor> <title> New Studies in Deontic Logic: Norms, </title> <booktitle> Actions, and the Foundations of Ethics, volume 152 of Synthese Library. </booktitle> <address> D. </address> <publisher> Reidel, Dordrecht, Holland, </publisher> <year> 1981. </year>
Reference-contexts: Unfortunately, this formulation suffers from a number of paradoxes. We shall not study it in detail here, nor the more sophisticated approaches of dyadic deontic logic and logics of directed obligation. Instead, we refer the reader to some important collections of essays on this subject <ref> [40, 41, 62] </ref>. 8.2.5 Dynamic Logic Dynamic logic can be thought of as the modal logic of action [53]. Unlike traditional modal logics, however, the necessity and possibility operators of dynamic logic are based upon the kinds of actions available.
Reference: 42. <author> Jaakko Hintikka. </author> <title> Knowledge and Belief: An Introduction to the Logic of the Two Notions. </title> <publisher> Cornell University Press, </publisher> <address> Ithaca, </address> <year> 1962. </year>
Reference-contexts: For example, an agent who knows (or intends) p is automatically assumed to know (or intend) all logical consequences of p. For knowledge, this is termed the problem of logical omniscience <ref> [42] </ref>. Real-life agents cannot be logical omniscient. Consequently, alternative approaches have been proposed to formalizing the cognitive concepts. These approaches include the explicit representations that an agent has for its beliefs or intentions, e.g., [50, 51].
Reference: 43. <author> Michael N. Huhns, Christine Collet, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in Carnot. </title> <journal> IEEE Computer, </journal> <volume> 24(12) </volume> <pages> 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Consequently, ontologies are included in several multiagent architectures. Ontologies are amenable to formal methods in two main places. One place is in the algorithms for processing ontologies, which exploit the connection between lattice theory and taxonomies <ref> [43] </ref>. Another place is in approaches to help interlink ontologies developed by different vendors, or incorporated by different agents, who must reconcile them in order to communicate. <p> Carnot was applied on accessing information from legacy databases, automating workflow for service-order processing, and retrieving related information from structured and text databases [83]. In these applications, Carnot adapted formal techniques for ontology management <ref> [43] </ref> and transaction management [84].
Reference: 44. <author> Michael N. Huhns and Munindar P. Singh. </author> <title> Ontologies for agents. </title> <journal> IEEE Internet Computing, </journal> <volume> 1(6) </volume> <pages> 81-83, </pages> <month> December </month> <year> 1997. </year> <title> Instance of the column Agents on the Web. </title>
Reference-contexts: Ontologies are thus of interest to knowledge representation. Although ontologies in themselves are not a social concept, they can provide a shared "virtual world" that can serve as the basis for communications <ref> [44] </ref>. In fact, when many people talk of the "semantics" of a communication, they mean understanding the concepts and terms used in it. Ontologies provide a natural, declarative way of identifying concepts and terms.
Reference: 45. <editor> Michael N. Huhns and Munindar P. Singh, editors. </editor> <booktitle> Readings in Agents. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, </address> <year> 1997. </year>
Reference: 46. <author> F. Felix Ingrand, Michael P. Georgeff, and Anand S. Rao. </author> <title> An architecture for real-time reasoning and system control. </title> <journal> IEEE Expert, </journal> <volume> 7(6), </volume> <year> 1992. </year>
Reference-contexts: We now make a number of additional representational choices which, while constraining expressive power, provide a more practical system. The resulting system is a simplified version of the Procedural Reasoning System (PRS) <ref> [46] </ref>. 8.4.2.1 Beliefs and Goals The system operates only on explicit beliefs and goals and not on their consequential closure. Further, we identify a subset of the agent's beliefs and goals, which we call current. <p> As described in the foregoing, PRS provides goal-oriented as well as reactive behavior. It was implemented in LISP and has been used for a wide range of applications in problem diagnosis for the Space Shuttle <ref> [46] </ref>, air-traffic management [59], and network management [46]. dMARS is a faster, more robust reimplementation of PRS in C++. <p> As described in the foregoing, PRS provides goal-oriented as well as reactive behavior. It was implemented in LISP and has been used for a wide range of applications in problem diagnosis for the Space Shuttle <ref> [46] </ref>, air-traffic management [59], and network management [46]. dMARS is a faster, more robust reimplementation of PRS in C++.
Reference: 47. <author> Suguru Ishizaki. </author> <title> Multiagent model of dynamic design: Visualization as an emergent behavior of active design agents. </title> <booktitle> In [45], </booktitle> <pages> pages 172-179. </pages> <year> 1997. </year> <booktitle> (Reprinted from Proceedings of the ACM Conference on Computer Human Interaction, </booktitle> <year> 1996). </year>
Reference-contexts: It also included a framework for information access similar to Carnot's. 8.8.2.4 maDes Ishizaki develops maDes, a multiagent model of dynamic design. Design is understood as the creative activity in which a designer constructs a suitable representation for a message <ref> [47] </ref>. Ishizaki's model is interesting to the design community, because it emphasizes the dynamic or active aspects of modern media, such as computers. It is interesting to the agent community, because it finds a novel application of agents.
Reference: 48. <author> Nick R. Jennings, E. H. Mamdani, Jose Manuel Corera, Inaki Laresgoiti, Fabien Perriollat, Paul Skarek, and Laszlo Zsolt Varga. </author> <title> Using Archon to develop real-world DAI applications, part 1. </title> <journal> IEEE Expert, </journal> <volume> 11(6) </volume> <pages> 64-70, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: The latter were a precursor of the formal theory later extended to coordinating autonomous agents, as described in Section 8.5. 8.8.2.3 ARCHON The ARCHON project developed a domain-independent architecture of multiagent systems, which was applied in an electricity transportation management system and a particle accelerator <ref> [48] </ref>. This architecture emphasized the role of cooperation among agents through a declarative representation of cooperation, which was reasoned about explicitly. The agents autonomously detected the need to cooperate| this generalizes distributed problem solving, and enhances the autonomy of the agents.
Reference: 49. <author> David Kinny and Michael P. Georgeff. </author> <title> Modelling and design of multi-agent systems. In Intelligent Agents III: Agent Theories, Architectures, </title> <booktitle> and Languages, </booktitle> <pages> pages 1-20, </pages> <year> 1997. </year>
Reference-contexts: It has been used in a variety of operational environments, including paint shop scheduling in car manufacturing, air combat simulation, resource exploration, malfunction handling on NASA's space shuttle, and management of business processes in Internet and call center applications <ref> [49] </ref>. 8.8.1.2 COSY COSY is also a BDI architecture, and bears several similarities to PRS and dMARS [36]. It involves the same concepts, and uses plans as its core representation. However, in addition, COSY has gives importance to both psychological and social commitments.
Reference: 50. <author> Kurt Konolige. </author> <title> A Deduction Model of Belief. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1986. </year>
Reference-contexts: For knowledge, this is termed the problem of logical omniscience [42]. Real-life agents cannot be logical omniscient. Consequently, alternative approaches have been proposed to formalizing the cognitive concepts. These approaches include the explicit representations that an agent has for its beliefs or intentions, e.g., <ref> [50, 51] </ref>. Unfortunately, although these approaches solve the problem of logical omniscience, they do not naturally support any inferences among the cognitive concepts. This too is undesirable, and has accounted for the lack of attention paid to these approaches.
Reference: 51. <author> Kurt G. Konolige and Martha E. Pollack. </author> <title> A representationalist theory of intentions. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <year> 1989. </year>
Reference-contexts: For knowledge, this is termed the problem of logical omniscience [42]. Real-life agents cannot be logical omniscient. Consequently, alternative approaches have been proposed to formalizing the cognitive concepts. These approaches include the explicit representations that an agent has for its beliefs or intentions, e.g., <ref> [50, 51] </ref>. Unfortunately, although these approaches solve the problem of logical omniscience, they do not naturally support any inferences among the cognitive concepts. This too is undesirable, and has accounted for the lack of attention paid to these approaches.
Reference: 52. <author> Dexter Kozen. </author> <title> Results on the propositional -calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 27 </volume> <pages> 333-354, </pages> <year> 1983. </year>
Reference-contexts: We lack the space to discuss complexity issues in much detail here, and refer the reader to [24, 28, 53] for details. The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints <ref> [24, 52] </ref>. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking [9, 14]. Both of the above classes of techniques are now being extended and applied in DAI.
Reference: 53. <author> Dexter Kozen and Jerzy Tiurzyn. </author> <title> Logics of program. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <volume> volume B, </volume> <pages> pages 789-840. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: Instead, we refer the reader to some important collections of essays on this subject [40, 41, 62]. 8.2.5 Dynamic Logic Dynamic logic can be thought of as the modal logic of action <ref> [53] </ref>. Unlike traditional modal logics, however, the necessity and possibility operators of dynamic logic are based upon the kinds of actions available. As a consequence of this flexibility, it has found use in a number of areas of DAI. <p> M 2 j= w [a]p iff (8w 0 : R a (w; w 0 )) M 2 j= w 0 p) We refer the reader to the survey by Kozen & Tiurzyn <ref> [53] </ref> for additional details. 8.2.6 Temporal Logic Temporal logic is, naturally enough, the logic of time. There are several variants. Of these, the most important distinctions are the following: Linear versus Branching: whether time is viewed as a single course of history or as multiple possible courses of history. <p> The model can be derived given knowledge of the agent and its environment. Temporal logics and modal logics of knowledge have been studied for some time, and their complexity issues are well-understood. We lack the space to discuss complexity issues in much detail here, and refer the reader to <ref> [24, 28, 53] </ref> for details. The -calculus is a logical language that has explicit operators for computing greatest and least fixpoints [24, 52]. This can be used to specify various modal and temporal logics in uniform framework, which can be naturally used for model checking [9, 14].
Reference: 54. <author> Saul A. Kripke. </author> <title> Semantical analysis of modal logic I: Normal modal propositional calculi. </title> <journal> Zeitschrift fur Mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 9 </volume> <pages> 67-96, </pages> <year> 1963. </year> <title> 44 Formal Methods in DAI: Logic-Based Representation and Reasoning </title>
Reference-contexts: However, in this chapter, we treat a world (in the technical sense) usually as a state of affairs, and sometimes corresponding to a possible history. With sets of worlds as primitive, the structure of the model is captured by relating the different worlds via a binary accessibility relation <ref> [54] </ref>. Intuitively, this relation tells us what worlds are within the realm of possibility from the standpoint of a given world.
Reference: 55. <author> Christen Krogh and Henning Herrestad. </author> <title> Getting personal some notes on the relationship between personal and impersonal obligation. </title> <booktitle> In Proceedings of the 3rd International Workshop on Deontic Logic in Computer Science (DEON), </booktitle> <year> 1996. </year>
Reference-contexts: Here we consider social commitments, which are the commitments that an agent toward another agent [10, 74]. Such commitments related to directed obligations <ref> [55] </ref> as studied in deontic logic (see Section 8.2.4). Social commitments are a genuinely multiagent concept, since they have no analog in a single-agent system.
Reference: 56. <author> Yves Lesperance, Hector J. Levesque, Fangzhen Lin, Daniel Marcu, Raymond Reiter, and Richard B. Scherl. </author> <title> Foundations of a logical approach to agent programming. In Intelligent Agents II: Agent Theories, Architectures, </title> <booktitle> and Languages, </booktitle> <pages> pages 331-346, </pages> <year> 1996. </year>
Reference-contexts: The language was subsequently extended by Thomas [88] to include planning capability similar to that of BDI architectures. Agent-oriented languages based on alternative formalisms are also gaining ground. Golog and ConGolog <ref> [56] </ref> are logic programming languages that allow explicit reasoning about actions. The system is based on situation calculus to represent and reason about change [61]. As the Golog interpreter can reason about actions it can avoid "dead paths" that the BDI interpreter cannot.
Reference: 57. <author> H. J. Levesque, P. R. Cohen, and J. T. Nunes. </author> <title> On acting together. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 94-99, </pages> <year> 1990. </year>
Reference-contexts: It has been argued the mutual beliefs can account for various aspects of human communication [13, 39] and social conventions [58]. Levesque & Cohen developed an approach that generalizes the notion of intentions to joint intentions <ref> [57] </ref>. This theory is extremely complicated, and our presentation can at best be thought of an intuitive approximation of the original.
Reference: 58. <author> David K. Lewis. </author> <title> Convention: A Philosophical Study. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1969. </year>
Reference-contexts: Mutual belief thus provides a means to achieve the effect of a perfectly shared mental state. It has been argued the mutual beliefs can account for various aspects of human communication [13, 39] and social conventions <ref> [58] </ref>. Levesque & Cohen developed an approach that generalizes the notion of intentions to joint intentions [57]. This theory is extremely complicated, and our presentation can at best be thought of an intuitive approximation of the original.
Reference: 59. <author> Magnus Ljungberg and Andrew Lucas. </author> <booktitle> The OASIS air-traffic management system. In Proceedings of the 2nd Pacific Rim International Conference on Artificial Intelligence (PRICAI), </booktitle> <year> 1992. </year>
Reference-contexts: As described in the foregoing, PRS provides goal-oriented as well as reactive behavior. It was implemented in LISP and has been used for a wide range of applications in problem diagnosis for the Space Shuttle [46], air-traffic management <ref> [59] </ref>, and network management [46]. dMARS is a faster, more robust reimplementation of PRS in C++.
Reference: 60. <author> John McCarthy. </author> <title> Ascribing mental qualities to machines. </title> <editor> In Martin Ringle, editor, </editor> <booktitle> Philosophical Perspectives in Artificial Intelligence. </booktitle> <publisher> Harvester Press, </publisher> <year> 1979. </year>
Reference-contexts: This is described as taking an intentional stance toward agents <ref> [60] </ref> or viewing agents at the knowledge level [63]. There is sometimes disagreement as to the similarity of the two doctrines, but for our purposes, they are essentially interchangeable.
Reference: 61. <author> John McCarthy and Patrick J. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <booktitle> In Machine Intelligence 4. </booktitle> <publisher> American Elsevier, </publisher> <year> 1969. </year>
Reference-contexts: Agent-oriented languages based on alternative formalisms are also gaining ground. Golog and ConGolog [56] are logic programming languages that allow explicit reasoning about actions. The system is based on situation calculus to represent and reason about change <ref> [61] </ref>. As the Golog interpreter can reason about actions it can avoid "dead paths" that the BDI interpreter cannot.
Reference: 62. <editor> John-Jules Ch. Meyer and Roel J. Wieringa, editors. </editor> <booktitle> Deontic Logic in Computer Science: Normative System Specification. </booktitle> <publisher> Wiley, </publisher> <address> Chichester, UK, </address> <year> 1993. </year>
Reference-contexts: Unfortunately, this formulation suffers from a number of paradoxes. We shall not study it in detail here, nor the more sophisticated approaches of dyadic deontic logic and logics of directed obligation. Instead, we refer the reader to some important collections of essays on this subject <ref> [40, 41, 62] </ref>. 8.2.5 Dynamic Logic Dynamic logic can be thought of as the modal logic of action [53]. Unlike traditional modal logics, however, the necessity and possibility operators of dynamic logic are based upon the kinds of actions available.
Reference: 63. <author> Allen Newell. </author> <title> The knowledge level. </title> <journal> Artificial Intelligence, </journal> <volume> 18(1) </volume> <pages> 87-127, </pages> <year> 1982. </year>
Reference-contexts: This is described as taking an intentional stance toward agents [60] or viewing agents at the knowledge level <ref> [63] </ref>. There is sometimes disagreement as to the similarity of the two doctrines, but for our purposes, they are essentially interchangeable. The high-level cognitive specifications involve concepts such as beliefs, knowledge, desires, and intentions (the terms intentional stance and knowledge level apply to more than just intentions and knowledge). <p> One way to understand the above issue is as a natural consequence of the knowledge level <ref> [63] </ref>.
Reference: 64. <author> Anand S. Rao. </author> <title> Decision procedures for propositional linear-time belief-desire-intention logics. In Intelligent Agents II: Agent Theories, Architectures, </title> <booktitle> and Languages, </booktitle> <pages> pages 33-48. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Both of the above classes of techniques are now being extended and applied in DAI. Rao has developed some tableau-based decision procedures for variants of the above BDI logics <ref> [64] </ref>.
Reference: 65. <author> Anand S. Rao and Michael P. Georgeff. </author> <title> Modeling rational agents within a BDI-architecture. </title> <booktitle> In [45], </booktitle> <pages> pages 317-328. </pages> <year> 1997. </year> <booktitle> (Reprinted from Proceedings of the International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <year> 1991). </year>
Reference-contexts: An agent's commitment governs whether it will persist with its intentions and if so, for how long. There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics <ref> [36, 65, 76] </ref>. A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by [65, 73, 75]. Constraint IC4 shows how commitment may be expressed in the present framework. <p> A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by <ref> [65, 73, 75] </ref>. Constraint IC4 shows how commitment may be expressed in the present framework. This version of commitment is purely qualitative. 16 Formal Methods in DAI: Logic-Based Representation and Reasoning IC4.
Reference: 66. <author> Anand S. Rao, Michael P. Georgeff, and Elizabeth Sonenberg. </author> <title> Social plans: A preliminary report. </title> <booktitle> In Proceedings of the 3rd European Workshop on Modelling Autonomous Agents in a Multi-Agent World (MAAMAW), </booktitle> <pages> pages 57-76, </pages> <address> Amsterdam, 1992. </address> <publisher> Elsevier. </publisher>
Reference-contexts: Table 8.1 shows the trace. In the above we showed how the logics of the BDI concepts can be mapped into realistic implementations of systems. Although we didn't discuss the interactional aspects in the above, those can be worked in as well <ref> [36, 66] </ref>. We now our attention to some direct ways of capturing the interactional aspects of multiagent systems. 26 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.5 Coordination Coordination is one of the key functionalities needed to implement a multiagent system. <p> Although concepts such as social commitments have long been identified, this topic has drawn much interest recently <ref> [10, 16, 23, 66, 80] </ref>. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80].
Reference: 67. <author> Stanley J. Rosenschein and Leslie Pack Kaelbling. </author> <title> A situated view of representation and control. </title> <journal> Artificial Intelligence, </journal> <volume> 7, </volume> <year> 1995. </year>
Reference-contexts: This abstract interpreter can be used as a basis for different situated systems, including those in which most of the deliberation is precompiled <ref> [67] </ref>. 8.4 BDI Implementations 21 8.4.1.2 An Abstract BDI Interpreter We now consider the special case of a BDI architecture by refining both the system state and interpreter. The system state comprises three dynamic data structures representing the agent's beliefs, desires, and intentions.
Reference: 68. <author> Krister Segerberg. </author> <title> Bringing it about. </title> <journal> Journal of Philosophical Logic, </journal> <volume> 18 </volume> <pages> 327-347, </pages> <year> 1989. </year>
Reference-contexts: S 3 . . . . . . . . . b k c a k c b k c . . . A number of technical approaches to concepts of the know-how family exist. Some of the leading ones are Segerberg's bringing it about <ref> [68] </ref> and Belnap & Perloff's seeing to it that (STIT) [4] theories. 8.3.6 Sentential and Hybrid Approaches The above approaches have used modal logics to formalize various cognitive concepts. Although technically intuitive and elegant, modal approaches have the undesirable feature that they over-estimate the reasoning capabilities of an agent.
Reference: 69. <author> Yoav Shoham. </author> <title> Agent-oriented programming. </title> <booktitle> In [45], </booktitle> <pages> pages 329-349. </pages> <year> 1997. </year> <note> (Reprinted from Artificial Intelligence, </note> <year> 1993). </year>
Reference-contexts: The above protocols involve commitments among the agents, and include rules through which tasks may be delegated to and adopted by different agents. 8.8.1.3 Agent-Oriented Languages The concepts discussed in the chapter are also finding their way into programming language constructs. Shoham <ref> [69] </ref> in his proposal for an agent-oriented language called AGENT0 made extensive use of notions such as beliefs, commitments, and know-how. The language was subsequently extended by Thomas [88] to include planning capability similar to that of BDI architectures. Agent-oriented languages based on alternative formalisms are also gaining ground.
Reference: 70. <author> Jaime Sim~ao Sichman, Rosaria Conte, Yves Demazeau, and Cristiano Castelfranchi. </author> <title> A social reasoning mechanism based on dependence networks. </title> <booktitle> In [45], </booktitle> <pages> pages 416-420. </pages> <year> 1997. </year> <booktitle> (Reprinted from Proceedings of the 11th European Conference on Artificial Intelligence, </booktitle> <year> 1994). </year>
Reference-contexts: It also uses an agent communication language, Arcol, to carry out a dialogue with the user. 8.8.1.6 DEPNET DEPNET is an interpreter for agents who can perform social reasoning <ref> [70] </ref>. Agents in DEPNET represent knowledge about one another to determine their relative autonomy or dependence for various goals. Dependence leads to joint plans for achieving the intended goals. The underlying theory is based on dependence rather than social commitments.
Reference: 71. <author> Munindar P. Singh. </author> <title> Group intentions. </title> <booktitle> In Proceedings of the 10th Workshop on Distributed Artificial Intelligence, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: The structure may itself be formalized in several ways. One way is through a combination of the reactive and the strategic interactions among the members that are called for by the group <ref> [71, 72] </ref>. For reasons of space, we only consider group intentions below. Recall the scenarios selected by the model component I in formalizing intentions. <p> However, this notion is potentially weaker than traditional notions, which always require some form of mutual belief among the members. Interestingly, when formalized, the above definitions lead to some algebraic properties of group intentions that relate to the underlying structure of the given groups <ref> [71] </ref>. 8.8 Tools and Systems Now we present a variety of implemented tools and systems for DAI that bear some significant connection with the formal techniques introduced above.
Reference: 72. <author> Munindar P. Singh. </author> <title> Group ability and structure. </title> <booktitle> In [18], </booktitle> <pages> pages 127-145. </pages> <year> 1991. </year> <note> 8.10 Exercises 45 </note>
Reference-contexts: The structure may itself be formalized in several ways. One way is through a combination of the reactive and the strategic interactions among the members that are called for by the group <ref> [71, 72] </ref>. For reasons of space, we only consider group intentions below. Recall the scenarios selected by the model component I in formalizing intentions. <p> It considers a number of agents with different abilities who come together to create a composite design. This model uses the theory of group ability as its basis for defining the reactive interaction among design agents <ref> [72] </ref>. 38 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.8.3 Traditional Approaches This section reviews some formal approaches that initially were designed for traditional software engineering, but which are being applied to DAI systems.
Reference: 73. <author> Munindar P. Singh. </author> <title> Intentions, commitments and rationality. </title> <booktitle> In Proceedings of the 13th Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 493-498, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by <ref> [65, 73, 75] </ref>. Constraint IC4 shows how commitment may be expressed in the present framework. This version of commitment is purely qualitative. 16 Formal Methods in DAI: Logic-Based Representation and Reasoning IC4.
Reference: 74. <author> Munindar P. Singh. </author> <title> Social and psychological commitments in multiagent systems. </title> <booktitle> In AAAI Fall Symposium on Knowledge and Action at Social and Organizational Levels, </booktitle> <pages> pages 104-106, </pages> <year> 1991. </year>
Reference-contexts: One of the properties that separates them is commitment. An agent is typically treated as being committed to its intentions [5]. Such commitments apply within a given individual agent, and are accordingly also termed psychological commitments <ref> [10, 74] </ref>. An agent's commitment governs whether it will persist with its intentions and if so, for how long. There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics [36, 65, 76]. <p> Here we consider social commitments, which are the commitments that an agent toward another agent <ref> [10, 74] </ref>. Such commitments related to directed obligations [55] as studied in deontic logic (see Section 8.2.4). Social commitments are a genuinely multiagent concept, since they have no analog in a single-agent system.
Reference: 75. <author> Munindar P. Singh. </author> <title> A critical examination of the Cohen-Levesque theory of intentions. </title> <booktitle> In Proceedings of the 10th European Conference on Artificial Intelligence, </booktitle> <pages> pages 364-368, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: We include this here to point out that in the theory of [15], persistence is sufficient for success (p. 233). This is a major conceptual weakness, since it violates the usual understanding that intentions do not entail know-how <ref> [75] </ref>. The need to state the conditions under which an agent can succeed with its intentions is one of the motivations for the concept of know-how. <p> A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by <ref> [65, 73, 75] </ref>. Constraint IC4 shows how commitment may be expressed in the present framework. This version of commitment is purely qualitative. 16 Formal Methods in DAI: Logic-Based Representation and Reasoning IC4.
Reference: 76. <author> Munindar P. Singh. </author> <title> Multiagent Systems: A Theoretical Framework for Intentions, Know-How, and Communications. </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1994. </year>
Reference-contexts: An agent's commitment governs whether it will persist with its intentions and if so, for how long. There is general agreement that commitment be treated as constraining how intentions are revised and updated, and resides in their processing rather than in their core semantics <ref> [36, 65, 76] </ref>. A contrasting approach is to include commitment in the core semantical definition of intentions [15]; this approach is criticized by [65, 73, 75]. Constraint IC4 shows how commitment may be expressed in the present framework.
Reference: 77. <author> Munindar P. Singh. </author> <title> A customizable coordination service for autonomous agents. </title> <booktitle> In Proceedings of the 4th International Workshop on Agent Theories, Architectures, and Languages (ATAL), </booktitle> <month> July </month> <year> 1997. </year>
Reference-contexts: A logical account would have the usual benefits of formal methods: a declarative, high-level specification independent of its ultimate realization, and the possibility of rigorously validating the implementations with respect to the specifications. One formal approach to coordination was developed by Singh <ref> [77] </ref>. This approach represents each agent as a small skeleton, which includes only the events or transitions made by the agent that are significant for coordination. Coordination requirements are stated as temporal logic formulas involving the events. <p> From the above, it is possible that a trace o may satisfy neither nor . In this way, negation in L C is stronger than in traditional logics. means that it is definite that will never occur. Consequently, maximal traces will satisfy _ . Singh <ref> [77] </ref> presents a set of equations that enable symbolic reasoning on L C to determine when a certain event may be permitted, prevented, or triggered. 8.5.3 Common Coordination Relationships Coordinations are specified by expressing appropriate relationships among the events of different agents.
Reference: 78. <author> Munindar P. Singh. </author> <title> A semantics for speech acts. </title> <booktitle> In [45], </booktitle> <pages> pages 458-470. </pages> <year> 1997. </year> <note> (Reprinted from Annals of Mathematics and Artificial Intelligence, </note> <year> 1993). </year>
Reference-contexts: There is considerable subtlety involved in this reasoning, but for the most part, it is specific to human languages and can be avoided in DAI. A different approach was developed by Singh <ref> [78] </ref>. This approach sought to give the objective criteria under which speech acts of different illocutionary forces could be said to be satisfied. The idea was to identify the conditions in a framework that highlighted the proof-obligations of a designer in showing that different speech acts were satisfied.
Reference: 79. <author> Munindar P. Singh. </author> <title> Applying the mu-calculus in planning and reasoning about action. </title> <journal> Journal of Logic and Computation, </journal> <note> 1998. In press. </note>
Reference-contexts: Both of the above classes of techniques are now being extended and applied in DAI. Rao has developed some tableau-based decision procedures for variants of the above BDI logics [64]. The -calculus is recently being applied to reasoning about the actions of agents <ref> [17, 79] </ref>. 8.4 BDI Implementations We now consider some possible ways to realize the above theories of BDI concepts in a computational system. 20 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.4.1 Abstract Architecture We first characterize a BDI architecture abstractly and then show how a concrete practical instantiation may
Reference: 80. <author> Munindar P. Singh. </author> <title> An ontology for commitments in multiagent systems: Toward a unification of normative concepts. </title> <journal> Artificial Intelligence and Law, </journal> <note> 1998. In press. </note>
Reference-contexts: Although concepts such as social commitments have long been identified, this topic has drawn much interest recently <ref> [10, 16, 23, 66, 80] </ref>. Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists [80]. <p> Castelfranchi introduced the idea of a witness of a commitment, which certifies to its creation [10]. Singh generalizes notion to a context group, which is usually the multiagent system within which the given commitment exists <ref> [80] </ref>. The formalization of social commitments involves defining an independent primitive. They also involve the description of associated notions such as the roles that may exist in the given multiagent system, and what capabilities and authorities (or authorizations) agents would need to play specific roles.
Reference: 81. <author> Munindar P. Singh. </author> <title> Semantical considerations on intention dynamics for BDI agents. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <note> 1998. In press. </note>
Reference-contexts: 2 I (x; t) and [S; t; t 0 ] 2 [[a]] x )) (8S 0 2 I (x; t 0 )) (9S 00 2 I (x; t) and However, it is believed that handling commitment and the update of intentions will involve greater subtlety than the above, e.g., see <ref> [34, 81] </ref> for logic-based and probabilistic approaches, respectively. 8.3.5 Know-How Intentions have an obvious connection with actions|agents act to satisfy their intentions. However, intentions do not ensure success; IC3 above showed that even persistence is not sufficient for success. A key ingredient is know-how, which we now formalize.
Reference: 82. <author> Munindar P. Singh and Nicholas M. Asher. </author> <title> A logic of intentions and beliefs. </title> <journal> Journal of Philosophical Logic, </journal> <volume> 22(5) </volume> <pages> 513-544, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: This too is undesirable, and has accounted for the lack of attention paid to these approaches. Some hybrid approaches the give a possible worlds semantics, but restrict it via some representational mechanism have also been developed, e.g., <ref> [27, 82] </ref>, but these two have not been intensively pursued in the literature. One way to understand the above issue is as a natural consequence of the knowledge level [63].
Reference: 83. <author> Munindar P. Singh, Philip E. Cannata, Michael N. Huhns, Nigel Jacobs, Tomasz Ksiezyk, Kayliang Ong, Amit P. Sheth, Christine Tomlinson, and Darrell Woelk. </author> <title> The Carnot heterogeneous database project: Implemented applications. Distributed and Parallel Databases: </title> <journal> An International Journal, </journal> <volume> 5(2) </volume> <pages> 207-225, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Carnot was applied on accessing information from legacy databases, automating workflow for service-order processing, and retrieving related information from structured and text databases <ref> [83] </ref>. In these applications, Carnot adapted formal techniques for ontology management [43] and transaction management [84].
Reference: 84. <author> Munindar P. Singh and Michael N. Huhns. </author> <title> Automating workflows for service provisioning: Integrating AI and database technologies. </title> <journal> IEEE Expert, </journal> <volume> 9(5) </volume> <pages> 19-23, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Carnot was applied on accessing information from legacy databases, automating workflow for service-order processing, and retrieving related information from structured and text databases [83]. In these applications, Carnot adapted formal techniques for ontology management [43] and transaction management <ref> [84] </ref>. The latter were a precursor of the formal theory later extended to coordinating autonomous agents, as described in Section 8.5. 8.8.2.3 ARCHON The ARCHON project developed a domain-independent architecture of multiagent systems, which was applied in an electricity transportation management system and a particle accelerator [48].
Reference: 85. <author> N. V. Smith, </author> <title> editor. Mutual Knowledge. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year>
Reference: 86. <author> J. M. Spivey. </author> <title> The Z Notation. </title> <booktitle> Prentice-Hall International, Hemel Hempstead, UK, 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: This has the advantage that any external events can be handled during the execution of a plan. 8.8.3.2 The Z Specification Language The Z language was developed for the formal specification of software systems <ref> [86] </ref>. It has found application in DAI as well. One class of uses of Z involves formally specifying properties such as the autonomy and dependence of agents in multiagent systems, as well as the cognitive concepts discussed above [20].
Reference: 87. <author> Milind Tambe. </author> <title> Agent architectures for flexible, practical teamwork. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 22-28, </pages> <year> 1997. </year>
Reference-contexts: They are, however, full systems in their own right. 8.8.2.1 STEAM STEAM is an architecture for teamwork by agents <ref> [87] </ref>. STEAM offers abstractions for teams, based on the work on joint intentions and shared plans. STEAM also uses some coordination abstractions. One of STEAM's features is the specification of 8.8 Tools and Systems 37 team plan operators in terms of role operators|that is, plan operators for member agents.
Reference: 88. <author> S. Rebecca Thomas. </author> <title> The PLACA agent programming language. In Intelligent Agents: Agent Theories, Architectures, </title> <booktitle> and Languages, </booktitle> <pages> pages 355-370, </pages> <year> 1995. </year>
Reference-contexts: Shoham [69] in his proposal for an agent-oriented language called AGENT0 made extensive use of notions such as beliefs, commitments, and know-how. The language was subsequently extended by Thomas <ref> [88] </ref> to include planning capability similar to that of BDI architectures. Agent-oriented languages based on alternative formalisms are also gaining ground. Golog and ConGolog [56] are logic programming languages that allow explicit reasoning about actions. The system is based on situation calculus to represent and reason about change [61].
Reference: 89. <author> Gio Wiederhold. </author> <title> Value-added mediation. </title> <booktitle> In Proceedings of the IFIP TC2/WG2.6 Conference on Database Application Semantics (DS-6). </booktitle> <publisher> Chapman and Hall, </publisher> <year> 1995. </year>
Reference-contexts: Another place is in approaches to help interlink ontologies developed by different vendors, or incorporated by different agents, who must reconcile them in order to communicate. An interesting class of approaches may be based on algebraic techniques <ref> [89] </ref>; however, this work is still in its infancy. 32 Formal Methods in DAI: Logic-Based Representation and Reasoning 8.7 Social Primitives Arguably, it is the active use of social concepts in its design and implementation that distinguish a DAI system from a traditional distributed computing system [31].
Reference: 90. <author> Gio Wiederhold. </author> <booktitle> Mediators in the architecture of future information systems. In [45], </booktitle> <pages> pages 185-196. </pages> <year> 1997. </year> <note> (Reprinted from IEEE Computer, </note> <year> 1992). </year>
Reference-contexts: Thus, they can build a shared understanding of their content language. It is this fact that makes ontologies interesting. They found much application in DAI systems, especially those involving access to, or interactions among, information systems and databases <ref> [22, 90] </ref>. Consequently, ontologies are included in several multiagent architectures. Ontologies are amenable to formal methods in two main places. One place is in the algorithms for processing ontologies, which exploit the connection between lattice theory and taxonomies [43].
Reference: 91. <author> Darrell Woelk, Philip Cannata, Michael Huhns, Nigel Jacobs, Tomasz Ksiezyk, Greg Lavender, Greg Meredith, Kayliang Ong, Wei-Min Shen, Munindar Singh, and Christine Tomlinson. </author> <title> Carnot prototype. </title> <booktitle> In [8], chapter 18, </booktitle> <pages> pages 621-648. </pages> <year> 1996. </year> <title> 46 Formal Methods in DAI: Logic-Based Representation and Reasoning </title>
Reference-contexts: STEAM has been applied in domains such as military helicopter missions and simulated soccer. 8.8.2.2 Carnot Carnot was a research project primarily focused on accessing and updating information from heterogeneous databases, such as are common in large enterprises <ref> [91] </ref>. Carnot was applied on accessing information from legacy databases, automating workflow for service-order processing, and retrieving related information from structured and text databases [83]. In these applications, Carnot adapted formal techniques for ontology management [43] and transaction management [84].
Reference: 92. <author> Michael Wooldridge and Nick Jennings. </author> <title> Formalizing the cooperative problem solving process. </title> <booktitle> In [45], </booktitle> <pages> pages 430-440. </pages> <year> 1997. </year> <booktitle> (Reprinted from Proceedings of the 13th International Workshop on Distributed Artificial Intelligence, </booktitle> <year> 1994). </year>
Reference-contexts: We emphasize, however, that some of this work is still in an early stage, and the descriptions below, although moderately stable, should not be taken as final. Some good work has focused on formalizing cooperative problem solving <ref> [92] </ref>, and the representations needed for effective cooperation [21]. 8.7.2 Mutual Beliefs and Joint Intentions One of the oldest ways of lifting single-agent concepts to multiagent concepts is through the use of mutual beliefs.
References-found: 92

