URL: http://www.media.mit.edu/~woja/ArchTeleCMCS98.ps
Refering-URL: http://woja.www.media.mit.edu/people/woja/
Root-URL: http://www.media.mit.edu
Email: jgemmell@microsoft.com  schooler@cs.caltech.edu  woja@media.mit.edu  
Title: A Scalable Multicast Architecture for One-to-many Telepresentations  
Author: Jim Gemmell Eve Schooler Roger Kermode 
Address: Technology  
Affiliation: Microsoft Research  California Institute of  MIT Media Lab  
Abstract: We have developed a scalable reliable multicast architecture for delivering one-to-many telepresentations. In contrast to audio and video, which are often transmitted unreliably, other media, such as slides, images and animations require reliability. Our approach transmits the data in two layers. One layer is for session-persistent data, with reliability achieved by FEC alone, using the Fcast protocol. The other layer is for dynamic data, with reliability achieved using the ECSRM protocol, which combines FEC with NACK suppression. Our approach is scalable to large heterogeneous receiver sets, and supports late-joining receivers. We have implemented our approach in a multicast version of PowerPoint, a graphical slide presentation tool. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, M. Luby, </author> <title> A Linear Time Erasure-Resilient Code With Nearly Optimal Recovery. </title> <journal> IEEE Transactions on Information Theory, </journal> <month> 42:6 (Nov </month> <year> 1996) </year> <month> 1732-1736. </month>
Reference: [2] <author> S. Achera, M. Franklin, S. Zdonik, </author> <title> Dissemination-Based Data Delivery Using Broadcast Disks. </title> <journal> IEEE Personal Communications, </journal> <month> (Dec </month> <year> 1995), </year> <pages> 50-60. </pages>
Reference: [3] <author> K. Birman, A. Schiper, P. Stephenson, </author> <title> Lightweight Causal and Atomic Group Multicast. </title> <journal> ACM Transactions on Computer Systems, </journal> <month> 9:3 (Aug </month> <year> 1991), </year> <pages> 272-314. </pages>
Reference: [4] <author> J.C. Bolot, H, Crepin, A. Vega Garcia, </author> <title> Analysis of Audio Packet Loss in the Internet. </title> <booktitle> Proceedings of 5 th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> (Apr </month> <year> 1995) </year> <month> 163-174, </month> <institution> Durham, </institution> <address> New Hampshire. </address>
Reference-contexts: Although there are reliable protocols that exist for real-time media [16], at the present time the mainstream approach for robustness is to add forward error correction to the data stream <ref> [4] </ref>. We assume in this paper that solutions exist to transmit audio and video in telepresentations, and focus our attention on the presentation graphics. In contrast to individual video frames, some presentation graphics may be displayed for a considerable length of time.
Reference: [5] <author> J.C. Bolot, T. Turletti, I. Wakeman, </author> <title> Scalable Feedback Control for Multicast Video Distribution in the Internet. </title> <booktitle> Proceedings of ACM SIGCOMM94, </booktitle> <address> (Oct 1994) 58-67 London, England. </address>
Reference: [6] <author> J. M. Chang, N. F. Maxemchuck, </author> <title> Reliable Broadcast Protocols. </title> <journal> ACM Transactions on Computing Systems, </journal> <month> 2:3 (Aug </month> <year> 1984) </year> <month> 251-273. </month>
Reference: [7] <author> D.D. Clark, </author> <title> D.L. Tennenhouse, Architectural Considerations for a New Generation of Protocols. </title> <booktitle> Proceedings of ACM SIGCOMM 90, </booktitle> <address> (Sept 1990) 201-208 Philadelphia, PA. </address>
Reference-contexts: Therefore, the problem is one of identifying the persistence of data: when is it created and for how long does it remains valid? A popular approach in the reliable multicast research community uses Application Level Framing (ALF) <ref> [7] </ref>. With ALF, the application is responsible for recovering lost data. Data is broken down for transmission into Application Data Units (ADUs), which are self-identifying so that they may be interpreted even if received out of order.
Reference: [8] <author> J. Crowcroft, K. Paliwoda, </author> <title> A Multicast Transport Protocol. </title> <booktitle> Proceedings of ACM SIGCOMM 88, </booktitle> <address> (1988) 247-256, Stanford, CA. </address>
Reference: [9] <author> H. Erikson, MBONE: </author> <title> The Multicast Backbone. </title> <journal> Communications of the ACM, </journal> <month> 37:8 (Aug </month> <year> 1994) </year> <month> 54-60. </month>
Reference-contexts: However, it provides an unreliable datagram service, where there are no delivery guarantees. This is not an issue for some telepresentation media. For example, demonstrations of real-time audio and video transmissions regularly take place on the Multicast Backbone (MBone), a multicast-capable portion of the Internet <ref> [9] </ref>. Occasional packet loss is acceptable, both visually and audibly. If a lost packet were retransmitted, it often would arrive too late for the receiver to process the missing data.
Reference: [10] <author> S. Floyd, V. Jacobson, C. Liu, S. McCanne, L. Zhang, </author> <title> A Reliable Multicast Framework for Lightweight Sessions and Application Level Framing. </title> <booktitle> ACM SIGCOMM 95, </booktitle> <address> (Aug 1995) 342-356 Cambridge, MA. </address>
Reference-contexts: Additionally, the static nature of the session data allows us to utilize the Fcast protocol, as explained below. 3 Architecture of Multicast PowerPoint One of the most successful demonstrations of scalable reliable multicast to date has been the MBone whiteboard tool, wb, which uses the SRM reliable multicast framework <ref> [10] </ref>. SRM stands for the Scalable Reliable Multicast protocol, which is constructed on top of IP multicast. <p> No messages are sent back in the direction from receiver to sender. In the simplest case the data is simply looped as a data carousel or broadcast disk. A more effective approach uses forward error correction (FEC) to encode packets. Local Repair <ref> [10] </ref>: NACKs and repairs are not sent to the whole group, but are kept within a restricted area. Any member of the group may perform a resend. This method keeps losses in one topological region from impacting the rest of the group. <p> Such loss must reduce any scheme to retransmission of the same number of packets. At any rate, as the receiver set scales, the number of links and subnetworks involved must increase, so some measure of independence is to be expected. 7.2 Other work related to ECSRM SRM <ref> [10] </ref> uses suppression of NACKs and suppression of resends to avoid implosion. Any host with the data required by a NACK may resend the packet. A goal in SRM is to increase the probability that a host close to the point of loss is most likely to perform the resend. <p> Simulation results for 112 receivers and loss rates from 2% to 28.3% Floyd et al. include simulation results for SRM performance <ref> [10] </ref>. The performance gains yielded by integrated FEC with NACK suppression are described in detail by Nonnenmacher et. al. [20]. They show how adding FEC produces performance gains, and how integration of FEC into the protocol results in even more dramatic gains.
Reference: [11] <author> J. </author> <title> Gemmell, Scalable Reliable Multicast Using Erasure-Correcting Resends. </title> <type> Technical Report, </type> <institution> MSR-TR-97-20, Microsoft Research, </institution> <address> Redmond, WA (June 1997). </address>
Reference-contexts: 1 Introduction A telepresentation is a presentation in which the presenter and/or some of the audience members, are not physically and temporally co-located but are telepresent, distributed in different locations and/or are participating at different times <ref> [11] </ref>. We believe that telepresentations have begun to revolutionize education, conferences, training, etc. by reducing associated costs and making the material available to much larger audiences. In this paper, we describe a scalable architecture for live multicast telepresentations, consisting of audio, video and presentation graphics. <p> Our solution uses two transport protocols built on top of IP multicast to achieve these goals: Erasure-Correcting Scalable Reliable Multicast (ECSRM) and FEC-multicasting (Fcast). ECSRM is used for sliding-window persistence, while Fcast is used for session-persistent data. Non-persistent data is sent unreliably. While ECSRM <ref> [11] </ref> and Fcast [25] are useful in many applications, in this paper we are particularly concerned with their applicability to one-to-many telepresentations. We have designed a Multicast PowerPoint prototype that utilizes ECSRM and Fcast. PowerPoint is a presentation graphics application built on a slideshow metaphor. <p> If no time is available for decoding, it should be deferred until after all necessary blocks have been received. 7 Dynamic session data For the dynamic session data, we employ ECSRM <ref> [11] </ref>. The ECSRM protocol combines NACK suppression with erasure correction. In Multicast PowerPoint, dynamic session data consists of the current slide, its annotations, and the anticipated next slide.
Reference: [12] <author> J. Gemmell, J. Liebeherr, D. Bassett, </author> <title> An API for Scalable Reliable Multicast. </title> <booktitle> International Conference on Computer Communications and Networks, </booktitle> <address> (Sept 1997) 60-64 Las Vegas, NV. </address>
Reference-contexts: In a scalable reliable multicast, this simple scheme is often infeasible. If the receiver set is unknown or new receivers are allowed to join in mid-session, then it is impossible for the sender to determine when a packet may be flushed <ref> [12] </ref>. An obvious solution is to cache everything for the duration of the session. However, all session data would be treated as if it were equally useful throughout the session, even though some data may become stale later in the session.
Reference: [13] <author> M. Handley, J. Crowcroft, </author> <title> Network Text Editor (NTE): A Scalable Shared Text Editor for the Mbone. </title> <booktitle> Proceedings of ACM SIGCOMM97, </booktitle> <address> (Aug 1997) 197-208 Canne, France. </address>
Reference: [14] <author> H.W. Holbrook, S.K. Singhal, D.R. Cheriton, </author> <title> D.R. Log-based Receiver-Reliable Multicast for Distributed Interactive Simulation. </title> <booktitle> Proceedings of SIGCOMM '95, </booktitle> <address> (Aug 1995) 328-341 Cambridge, MA. </address>
Reference: [15] <author> S.K. Kasera, J. Kurose, D. </author> <title> Towsley Scalable, Reliable Multicast Using Multiple Multicast Groups. </title> <booktitle> Proceedings of ACM SIGMETRICS 97, </booktitle> <address> (1997) 64-74 Seattle, WA. </address>
Reference-contexts: Even so, correlation may be avoided by a number of techniques, including randomly perturbing the group order in each cycle. An alternate approach (that we do not use) is to take advantage of correlation and to split FEC onto different channels <ref> [15] </ref>. For more detailed analysis, we refer the reader to [23] and simply point out that without correlation the number of unnecessary packets received is quite low.
Reference: [16] <author> R. Kermode, </author> <title> Smart Network Caches: Localized Content and Application Negotiated Recovery Mechanisms for Multicast Media Distribution, </title> <type> PhD Dissertation, </type> <institution> MIT, </institution> <year> 1998. </year>
Reference-contexts: Consequently, packet audio and video typically are carried by a real-time transport protocol, such as RTP, which concerns itself more with timely delivery rather than reliable delivery. Although there are reliable protocols that exist for real-time media <ref> [16] </ref>, at the present time the mainstream approach for robustness is to add forward error correction to the data stream [4]. We assume in this paper that solutions exist to transmit audio and video in telepresentations, and focus our attention on the presentation graphics. <p> Figure 8 shows data packet traffic and Figure 9 shows NACK traffic. Note that ECSRM generates much less traffic, and completes much sooner. For more details about this particular simulation and related simulations, see <ref> [16] </ref>. 8 Conclusion We have presented a scalable multicast architecture for live telepresentations, as exemplified by Multicast PowerPoint. Our approach splits the telepresentation into its underlying components: the slide master; individual slides; real-time annotations; and control information for advancing the presentation and triggering graphic effects.
Reference: [17] <author> R. Malpani, L.A. </author> <title> Rowe Floor Control for Large-Scale MBONE Seminars. </title> <booktitle> Proceedings of The Fifth Annual ACM International Multimedia Conference, </booktitle> <address> (Nov 1997) 155-163 Seattle, WA. </address>
Reference-contexts: There has been some work in this area, for example, the UC Berkeley question board <ref> [17] </ref>. Having a scalable floor control mechanism allows us to trivially extend our singlesender scheme to share the session bandwidth among a dynamic, but limited number of senders. We consider this issue beyond the scope of this paper.
Reference: [18] <author> S. McCanne, M. Vetterli, V. Jacobson, </author> <title> Low-complexity Video Coding for Receiver-driven Layered Multicast. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> 16:6 (Aug </month> <year> 1997) </year> <month> 983-1001. </month>
Reference-contexts: Then, even if part of a slide has been lost, the remainder could still be rendered quickly. Additionally, we would like to examine layered transmission, where data is split up across a number of multicast addresses. Multiple layers have been used, for example, in video applications <ref> [18] </ref>. The idea is that if the number of addresses subscribed to by the receiver increases, then the overall data quality increases. Joining and leaving layers allows receivers to throttle the received data rate, and therefore may be used for multicast congestion control, which is an important open research question.
Reference: [19] <author> J. Metzner, </author> <title> An Improved Broadcast Retransmission Protocol. </title> <journal> IEEE Transactions on Communications, </journal> <month> 32:6 (Jun </month> <year> 1984) </year> <month> 679-683. </month>
Reference-contexts: At a given time several nodes may be sending NACKs, several may be resending data, and the sender may be sending new data. This may lead to an aggregate traffic level that is higher than some nodes can handle. Integration of FEC and reliability was first proposed by Metzner <ref> [19] </ref>. Another approach that combines NACK suppression with FEC is Protocol NP [20]. Protocol NP proceeds in rounds. In each round the sender sends its data, polls receivers for the number of missing packets, and then sends that number of EC packets.
Reference: [20] <author> J. Nonnenmacher, E. Biersack, J. </author> <title> Towsley Parity-Based Loss Recovery for Reliable Multicast Transmission. </title> <type> Technical Report, </type> <institution> TR-97-17, Department of Computer Science, University of Massachusetts, </institution> <month> Mar </month> <year> 1997. </year>
Reference-contexts: This may lead to an aggregate traffic level that is higher than some nodes can handle. Integration of FEC and reliability was first proposed by Metzner [19]. Another approach that combines NACK suppression with FEC is Protocol NP <ref> [20] </ref>. Protocol NP proceeds in rounds. In each round the sender sends its data, polls receivers for the number of missing packets, and then sends that number of EC packets. <p> Simulation results for 112 receivers and loss rates from 2% to 28.3% Floyd et al. include simulation results for SRM performance [10]. The performance gains yielded by integrated FEC with NACK suppression are described in detail by Nonnenmacher et. al. <ref> [20] </ref>. They show how adding FEC produces performance gains, and how integration of FEC into the protocol results in even more dramatic gains. Figure 8 and Figure 9 show simulation results for SRM and ECSRM with 112 receivers, k=16, and receiver loss rates from 2% to 28.3%.
Reference: [21] <author> S. Paul, K.K. Sabnani, J.C.-H. Lin, S. </author> <title> Bhattacharyya Reliable Multicast Transport Protocol (RMTP). </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> 15:3 (Apr </month> <year> 1997) </year> <month> 407-421. </month>
Reference: [22] <author> S. Ramakrishnan, B.N. Jain, </author> <title> A Negative Acknowledgement With Periodic Polling Protocol for Multicast over LANs. </title> <booktitle> Proceedings of IEEE Infocom 87, </booktitle> <month> (Mar/Apr </month> <year> 1987) </year> <month> 502-511. </month>
Reference: [23] <author> L. Rizzo, L. Vicisano, </author> <title> A Reliable Multicast Data Distribution protocol based on software FEC techniques. </title> <booktitle> Proceedings of the Fourth IEEE Workshop on the Architecture and Implementation of High Performance Communication Systems, </booktitle> <address> HPCS97, (June 1997) Chalkidiki, Greece. </address>
Reference-contexts: Because it uses no back-channel, it is as scalable as IP Multicast. In most regards, the Fcast protocol is a straightforward adaptation of the algorithms presented in <ref> [23] </ref>[27]. Fcast has network and codec performance essentially like the one-layer case in [23]. <p> Therefore a packet is sent from each group in turn. Because k and n are values constrained by software complexity, an object of size N blocks is partitioned into G=N/k groups. Thus, the typical transmission order for an N block object, with G groups might be as suggested by <ref> [23] </ref> and shown in Figure 6: block 0 from each group, block 1 from each group, block n-1 from each group. When the last packet of the last group is sent, the next transmission cycle begins again with block 0. <p> An alternate approach (that we do not use) is to take advantage of correlation and to split FEC onto different channels [15]. For more detailed analysis, we refer the reader to <ref> [23] </ref> and simply point out that without correlation the number of unnecessary packets received is quite low. Furthermore, while a packet may be unnecessary to one given receiver it is likely to be useful to some other receiver within the session. Fcast can be used to convey multiple objects.
Reference: [24] <author> L. </author> <title> Rizzo, Effective Erasure Codes for Reliable Computer Communication Protocols. </title> <journal> Computer Communication Review, </journal> <month> 27:2 (Apr </month> <year> 1997a) </year> <month> 24-36. </month>
Reference-contexts: algorithms have been developed that are efficient enough to be used by general purpose personal computers [1]<ref> [24] </ref>[15]. For example, Rizzos public domain codec has been shown to operate at rates of over 11 MB/s on a 133 MHz Pentium and at rates over 350 KB/s on a 25 MHz 386 [24]. 1 2 k. . .Original packets 1 2 k . . . k+1 n. . . encode take any k . . .. . . decode 1 2 k. . .Original packets reconstructed from any k encoded packets. In practice, k cannot be arbitrarily large. <p> In practice, k cannot be arbitrarily large. For example, typical k values are 16 and 32, and n is generally less than 255 <ref> [24] </ref>. The basic EC unit is a block and a typical block size is 1024 bytes. We use the terms block and packet interchangeably, because the transmission payload is one and the same as an EC block.
Reference: [25] <author> E. Schooler, J. </author> <title> Gemmell, Using Multicast FEC to Solve the Midnight Madness Problem. </title> <type> Technical Report MSR-TR-97-25, </type> <institution> Microsoft Research, </institution> <address> Redmond, WA (Sept 1997). </address>
Reference-contexts: Our solution uses two transport protocols built on top of IP multicast to achieve these goals: Erasure-Correcting Scalable Reliable Multicast (ECSRM) and FEC-multicasting (Fcast). ECSRM is used for sliding-window persistence, while Fcast is used for session-persistent data. Non-persistent data is sent unreliably. While ECSRM [11] and Fcast <ref> [25] </ref> are useful in many applications, in this paper we are particularly concerned with their applicability to one-to-many telepresentations. We have designed a Multicast PowerPoint prototype that utilizes ECSRM and Fcast. PowerPoint is a presentation graphics application built on a slideshow metaphor. <p> The only overhead introduced in the packet header is the need to indicate the index and group (40 bits in our prototype). 6 Persistent session data For the persistent session data, we employ Fcast <ref> [25] </ref>. The Fcast protocol combines (n,k) encoding with a data carousel; its use of (n,k) encoding reduces the time taken for a receiver to receive a missing packet, as compared to a plain data carousel.
Reference: [26] <author> R. Talpade, M.H. Ammar, </author> <title> Single Connection Emulation: An Architecture for Providing a Reliable Multicast Transport Service. </title> <booktitle> Proceedings of the 15 th IEEE International Conference on Distributed Computing Systems, </booktitle> <address> (June 1995) 144-151 Vancouver, Canada. </address>
Reference: [27] <author> L. Vicisano, J. Crowcroft, </author> <title> One to Many Reliable Bulk-Data Transfer in the Mbone. </title> <booktitle> Proceedings of the Third International Workshop on High Performance Protocol Architectures, </booktitle> <address> HIPPARCH 97, (June 1997) Uppsala, Sweden. </address>
Reference-contexts: Joining and leaving layers allows receivers to throttle the received data rate, and therefore may be used for multicast congestion control, which is an important open research question. Layering has already been shown to be very effective for an Fcast type scenario <ref> [27] </ref>. A future direction for ECSRM is to dynamically adjust suppression times based on the observation of NACK traffic. This could be accomplished independently by receivers or via a polling and key matching method. Statistics also could be collected from the receivers, similar to RTCP.
Reference: [28] <author> B. Whetten, T. Montgomery, S. Kaplan, </author> <title> A High Performance Totally Ordered Multicast Protocol. </title> <booktitle> Proceedings of the International Workshop on Theory and Practice in Distributed Systems, </booktitle> <publisher> (Sept 1994) Springer-Verlag, </publisher> <pages> 33-57. </pages>
Reference: [29] <author> R. Yavatkar, J. Griffioen, M. Sudan, </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications. </title> <booktitle> ACM Multimedia 95, </booktitle> <address> (Nov 1995) 333-343 San Francisco, CA. </address>
References-found: 29

