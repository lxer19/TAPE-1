URL: ftp://ftp.aic.nrl.navy.mil/pub/papers/1995/AIC-95-027.ps
Refering-URL: http://www.aic.nrl.navy.mil/~schultz/research/adap-testing/
Root-URL: 
Title: G3.5 Learning to break things: adaptive testing of intelligent controllers  
Author: Alan C. Schultz, John J. Grefenstette, and Kenneth A. De Jong 
Note: G3.5.1 Introduction c 1995 IOP Publishing Ltd and Oxford University Press Handbook of Evolutionary Computation G3.5:1  
Affiliation: Naval Research Laboratory  
Abstract: Autonomous vehicles require sophisticated software controllers to maintain vehicle performance in the presence of vehicle faults. The test and evaluation of complex software controllers is a challenging task. The goal of this effort is to apply machine learning techniques to the general problem of evaluating an intelligent controller for an autonomous vehicle. The approach involves subjecting a controller to an adaptively chosen set of fault scenarios within a vehicle simulator, and searching for combinations of faults that produce noteworthy performance by the vehicle controller. The search employs a genetic algorithm. The evidence suggests that this approach is an effective supplement to manual and other forms of automated testing of sophisticated software controllers. Several intelligent controllers were tested in this project using several different genetic algorithm-based learning programs. Over the course of this research, the representation, evaluation function, genetic operators and the basic algorithm evolved as we tailored the algorithm to this class of problems. This section presents this work from the point of view of describing the process that the authors followed in applying these learning algorithms to this real-world problem. Autonomous vehicles require sophisticated software controllers to maintain vehicle performance in the presence of faults. The test and evaluation of such a software controller is a challenging task, given both the complexity of the software system and the richness of the test environment. The goal of this effort is to apply machine learning techniques to the general problem of evaluating a controller for an autonomous vehicle. The approach involves subjecting a controller to an adaptively chosen set of fault scenarios within a vehicle simulator, and searching for combinations of faults that produce noteworthy performance by the vehicle controller. The search employs a genetic algorithm (GA), i.e., an algorithm that simulates the dynamics of population genetics (Holland 1975, De Jong 1980, Grefenstette et al 1990, Schultz and Grefenstette 1992), to evolve sets of test cases for the vehicle controller. We have illustrated the approach by evaluating the performance of two different intelligent controllers, one for an autonomous aircraft and the other for an autonomous underwater vehicle. The evidence suggests that this approach offers advantages over other forms of automated and manual testing of sophisticated software controllers, although this technique should supplement, not replace, other forms of software validation. This research is significant because it provides new techniques for the evaluation of complex software systems, and for the identification of classes of vehicle faults that are most likely to impact negatively on the performance of a proposed autonomous vehicle controller. In this section, we concentrate on describing the process of designing the learning approach as we apply it to this task, with particular emphasis on the evolution of the representation, the 
Abstract-found: 1
Intro-found: 0
References-found: 0

