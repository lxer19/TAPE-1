URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-33.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: A Unified Approach to Evaluation Algorithms for Multivariate Polynomials  
Author: Suresh Lodha Ron Goldman 
Keyword: algorithms, Bezier, change of basis, duality, evaluation, Lagrange, multi-variate, Newton, polynomials, recurrence, Taylor.  
Address: Santa Cruz, CA 95064 USA  Houston, TX 77251  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  Rice University,  
Date: July 23, 1995  
Pubnum: UCSC-CRL 95-33  
Abstract: We present a unified framework for most of the known and a few new evaluation algorithms for multivariate polynomials expressed in a wide variety of bases including the Bezier, multinomial (or Taylor), Lagrange and Newton bases. This unification is achieved by considering evaluation algorithms for multivariate polynomials expressed in terms of L-bases, a class of bases that include the Bezier, multinomial, and a rich subclass of Lagrange and Newton bases. All of the known evaluation algorithms can be generated either by considering recursive evaluation algorithms for L-bases or by examining change of basis algorithms for L-bases. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [Ait32] <author> A. G. Aitken. </author> <title> On interpolation by iteration of proportional parts without the use of differences. </title> <booktitle> Proceedings of Edinburgh Mathematical Society, </booktitle> <pages> pages 56-76, </pages> <year> 1932. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied. <p> Then we can express the solution to the point interpolation problem as an affine combination of the three subproblems of point interpolation and thus generalize the Aitken-Neville algorithm for the evaluation of Lagrange polynomials from univariate to bivariate polynomials <ref> [Ait32, Nev34] </ref>. Theorem 1: L (u) = L 11 (v n00 ) L 21 M 2 (u) + L 31 (v 00n ) Proof: The proof is by induction.
Reference: [BG93a] <author> P. Barry and R. Goldman. </author> <title> Algorithms for progressive curves: Extending B-spline and blossoming techniques to the monomial, power, and Newton dual bases. </title> <editor> In R. Goldman and T. Lyche, editors, </editor> <title> Knot Insertion and Deletion Algorithms for B-Spline Curves and Surfaces, </title> <address> pages 11-64. </address> <publisher> SIAM, </publisher> <year> 1993. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [BG93b] <author> P. Barry and R. Goldman. </author> <title> Factored knot insertion. </title> <editor> In R. Goldman and T. Lyche, editors, </editor> <title> Knot insertion and deletion algorithms for B-spline curves and surfaces, </title> <address> pages 65-88. </address> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1993. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s+1 ) for multivariate polynomials of degree n in s variables expressed in terms of B-bases have been derived in [Sei91] using blossoming. Barry and Goldman <ref> [BG93b] </ref> and Sankar, Silbermann and Ferrari [SSF94] have discussed a technique for speeding up knot insertion and evaluation of univariate polynomials expressed in terms of univariate progressive or B-spline bases by factoring through the Newton dual basis, that is, the dual to the univariate Newton basis.
Reference: [BGD91] <author> P. Barry, R. Goldman, and T. DeRose. B-splines, </author> <title> Polya curves and duality. </title> <journal> Journal of Approximation Theory, </journal> <volume> 65(1) </volume> <pages> 3-21, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [Boe80] <author> W. Boehm. </author> <title> Inserting new knots into B-spline curves. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 12 </volume> <pages> 199-201, </pages> <year> 1980. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [CdB80] <author> S. D. Conte and C. de Boor. </author> <title> Elementary Numerical Analysis. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1980. </year> <note> Third Edition. </note>
Reference-contexts: This goal is achieved by premultiplying the divided differences by appropriate constants, which depend upon the fixed distance between successive points, and then reducing the rest of the computation to pure addition as shown on the right diagram of <ref> [CdB80] </ref>. We refer the readers to [Muh73, GLC82] for a generalization of divided differences to the multivariate setting. We now describe how a bivariate version of the divided difference and forward difference algorithms can be obtained by specializing the change of basis algorithms between L-bases described in Section 4.1.1.
Reference: [CG90a] <author> J. Carnicer and M. Gasca. </author> <title> Evaluation of multivariate polynomials and their derivatives. </title> <journal> Mathematics of Computation, </journal> (189):231-243, January 1990. 
Reference-contexts: The de Casteljau algorithm with computational complexity O (n s+1 ) is well-known for evaluating multivariate Bezier polynomials [dC85, Far86]. Several algorithms for evaluating multivariate polynomials in Bezier or multinomial (Taylor) form with computational complexity O (n s ) have been described <ref> [CG90a, dBR92, SV86] </ref>. Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed [CG90b, Muh78, TM60]. <p> This algorithm specializes to the standard de Casteljau algorithm for evaluation of bivariate Bezier surfaces [dC85, Far86]. The up recurrence also specializes to O (n 2 ) algorithms for the evaluation of multinomial (Taylor) bases, that include the algorithms proposed earlier by Carnicer-Gasca <ref> [CG90a] </ref> and de Boor-Ron [dBR92]. In addition, the up recurrence specializes to an algorithm for evaluating Newton polynomials, that has been previously discussed by Carnicer and Gasca [CG90a, Gas90]. <p> In addition, the up recurrence specializes to an algorithm for evaluating Newton polynomials, that has been previously discussed by Carnicer and Gasca <ref> [CG90a, Gas90] </ref>. The up recurrence also yields a new generalization of the Aitken-Neville algorithm with computational complexity O (n 3 ) for the evaluation of bivariate Lagrange L-bases. <p> However, although the number of arrows is reduced with this choice, the computational complexity of the algorithm still remains O (n 3 ) because we have removed slightly less than 2 3 of the arrows. Carnicer and Gasca <ref> [CG90a] </ref> describe a class of evaluation algorithms for those multivariate polynomials that are expressed as the sum of a constant plus some other polynomials, each of which can be written as a product of a linear polynomial with a polynomial of degree strictly lower than the degree of the original polynomial. <p> We shall refer to this class of algorithms, including up recurrence algorithms and algorithms described by Carnicer and Gasca, as nested multiplication algorithms because these algorithms can clearly be viewed as nested multiplication. Both Carnicer and Gasca <ref> [CG90a] </ref> and de Boor and Ron [dBR92] describe this class of nested multiplication algorithms as the generalization of Horner's nested multiplication algorithm for the evaluation of univariate polynomials. <p> The right diagram of format. Since the triangular format has only n 2 nodes, this figure shows that the computational complexity of this evaluation algorithm is O (n 2 ). Although Carnicer and Gasca <ref> [CG90a] </ref> do not explicitly discuss the evaluation of multivariate polynomials expressed in the multinomial bases, the right diagram of Figure 3.5 is very similar to the diagram in [CG90b], which appears in an analogous but slightly different context. <p> Therefore, this evaluation algorithm can be construed to be equivalent to the one proposed by Carnicer and Gasca <ref> [CG90a, CG90b] </ref>. Interestingly, de Boor and Ron [dBR92] describe an evaluation algorithm for multinomial bases that is closely related to these algorithms, although not quite the same. <p> In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [CG90b] <author> J. Carnicer and M. Gasca. </author> <title> On the evaluation of multivariate Lagrange formulae. </title> <booktitle> In Proceedings of the Conference Mehrdimensionale Knostruktive Funktiontheorie, </booktitle> <pages> pages 65-72. </pages> <address> Oberwalch, </address> <publisher> Birkhauser Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed <ref> [CG90b, Muh78, TM60] </ref>. Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed [Vol88, dB78, Vol90, LSP87, Sch81]. <p> Therefore, the evaluation algorithms of Carnicer and Gasca can be applied to L-bases. However their algorithm and the resulting computational complexity depend upon the way the polynomial is represented. In general, the computational complexity of their algorithm for bivariate polynomial bases including bivariate Lagrange bases <ref> [CG90b] </ref> is O (n 3 ). We shall refer to this class of algorithms, including up recurrence algorithms and algorithms described by Carnicer and Gasca, as nested multiplication algorithms because these algorithms can clearly be viewed as nested multiplication. <p> Although Carnicer and Gasca [CG90a] do not explicitly discuss the evaluation of multivariate polynomials expressed in the multinomial bases, the right diagram of Figure 3.5 is very similar to the diagram in <ref> [CG90b] </ref>, which appears in an analogous but slightly different context. Therefore, this evaluation algorithm can be construed to be equivalent to the one proposed by Carnicer and Gasca [CG90a, CG90b]. <p> Therefore, this evaluation algorithm can be construed to be equivalent to the one proposed by Carnicer and Gasca <ref> [CG90a, CG90b] </ref>. Interestingly, de Boor and Ron [dBR92] describe an evaluation algorithm for multinomial bases that is closely related to these algorithms, although not quite the same. <p> In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [CLR80] <author> E. Cohen, T. Lyche, and R. F. Riesenfeld. </author> <title> Discrete B-splines and subdivision techniques in computer-aided geometric design and computer graphics. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 14 </volume> <pages> 87-111, </pages> <year> 1980. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [CM92] <author> A. S. Cavaretta and C. A. Micchelli. </author> <title> Pyramid patches provide potential polynomial paradigms. </title> <editor> In T. Lyche and L. L. Schumaker, editors, </editor> <booktitle> Mathematical Methods in CAGD and Image Processing, </booktitle> <pages> pages 1-40. </pages> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: n+2 bivariate polynomials defined as follows: l n ff 1 Y L 1i j=1 ff 3 Y L 3k : (2.1) It is well-known that fl n ff ; jffj = ng is, in fact, an affine basis for the space of affine polynomials of degree n on R 2 <ref> [CM92] </ref>.
Reference: [CY77] <author> C. K. Chung and T. H. Yao. </author> <title> On lattices admitting unique Lagrange interpolations. </title> <journal> Siam Journal on Numerical Analysis, </journal> <volume> 14 </volume> <pages> 735-743, </pages> <year> 1977. </year>
Reference-contexts: These are precisely the n+2 points that give rise to Lagrange interpolation conditions. In our earlier work, we described several interesting lattice or point-line configurations that generate Lagrange L-bases [LG95b]. Here we simply describe one interesting lattice, known as a principal lattice or geometric mesh <ref> [CY77] </ref>, that admits unique interpolation by a Lagrange L-basis. Figure 2.1 is an example of a principal lattice or geometric mesh [CY77] of order n, which can be described by three sets of n lines ffL 1i g, fL 2j g, fL 3k g, 1 i; j; k ng such that <p> Here we simply describe one interesting lattice, known as a principal lattice or geometric mesh <ref> [CY77] </ref>, that admits unique interpolation by a Lagrange L-basis. Figure 2.1 is an example of a principal lattice or geometric mesh [CY77] of order n, which can be described by three sets of n lines ffL 1i g, fL 2j g, fL 3k g, 1 i; j; k ng such that each set of three lines fL 1;i+1 ; L 2;j+1 ; L 3;k+1 , i + j + k = ng
Reference: [dB78] <author> C. de Boor. </author> <title> A practical guide to splines. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1978. </year> <journal> Applied Mathematical Sciences, </journal> <volume> Volume 27. </volume>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed <ref> [Vol88, dB78, Vol90, LSP87, Sch81] </ref>. Most of these evaluation algorithms seem to have been discovered independently from one another and, therefore, the literature as cited above is scattered and the various algorithms appear to be unrelated.
Reference: [dBR92] <author> C. de Boor and Amos Ron. </author> <title> Computational aspects of polynomial interpolation in several variables. </title> <booktitle> Mathematics of Computation, </booktitle> <pages> pages 705-727, </pages> <year> 1992. </year>
Reference-contexts: The de Casteljau algorithm with computational complexity O (n s+1 ) is well-known for evaluating multivariate Bezier polynomials [dC85, Far86]. Several algorithms for evaluating multivariate polynomials in Bezier or multinomial (Taylor) form with computational complexity O (n s ) have been described <ref> [CG90a, dBR92, SV86] </ref>. Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed [CG90b, Muh78, TM60]. <p> This algorithm specializes to the standard de Casteljau algorithm for evaluation of bivariate Bezier surfaces [dC85, Far86]. The up recurrence also specializes to O (n 2 ) algorithms for the evaluation of multinomial (Taylor) bases, that include the algorithms proposed earlier by Carnicer-Gasca [CG90a] and de Boor-Ron <ref> [dBR92] </ref>. In addition, the up recurrence specializes to an algorithm for evaluating Newton polynomials, that has been previously discussed by Carnicer and Gasca [CG90a, Gas90]. <p> We shall refer to this class of algorithms, including up recurrence algorithms and algorithms described by Carnicer and Gasca, as nested multiplication algorithms because these algorithms can clearly be viewed as nested multiplication. Both Carnicer and Gasca [CG90a] and de Boor and Ron <ref> [dBR92] </ref> describe this class of nested multiplication algorithms as the generalization of Horner's nested multiplication algorithm for the evaluation of univariate polynomials. <p> Therefore, this evaluation algorithm can be construed to be equivalent to the one proposed by Carnicer and Gasca [CG90a, CG90b]. Interestingly, de Boor and Ron <ref> [dBR92] </ref> describe an evaluation algorithm for multinomial bases that is closely related to these algorithms, although not quite the same. In fact, their algorithm is a hybrid of the parallel up recurrence and the efficient parallel up recurrence algorithm, where some duplicate paths have not been removed.
Reference: [dC85] <author> P. de Casteljau. </author> <title> Formes a poles. </title> <publisher> Hermes, </publisher> <address> Paris, </address> <year> 1985. </year>
Reference-contexts: Several algorithms for evaluating multivariate polynomials, represented in these bases, have been proposed. The de Casteljau algorithm with computational complexity O (n s+1 ) is well-known for evaluating multivariate Bezier polynomials <ref> [dC85, Far86] </ref>. Several algorithms for evaluating multivariate polynomials in Bezier or multinomial (Taylor) form with computational complexity O (n s ) have been described [CG90a, dBR92, SV86]. <p> We begin by describing a general parallel up recurrence algorithm with computational complexity O (n 3 ) for the evaluation of bivariate L-bases. This algorithm specializes to the standard de Casteljau algorithm for evaluation of bivariate Bezier surfaces <ref> [dC85, Far86] </ref>. The up recurrence also specializes to O (n 2 ) algorithms for the evaluation of multinomial (Taylor) bases, that include the algorithms proposed earlier by Carnicer-Gasca [CG90a] and de Boor-Ron [dBR92]. <p> This algorithm has computational complexity P n k=1 O (klgk) = O (n 2 lgn). 3.3.2 Bezier Evaluation The parallel up recurrence algorithm specializes to the de Casteljau evaluation algorithm for Bezier surfaces with computational complexity O (n 3 ) <ref> [dC85, Far86] </ref>. In this case, observe that C 0 n! S ff are indeed the coefficients of the multivariate polynomials in Bezier form.
Reference: [DMS92] <author> W. Dahmen, C. A. Micchelli, and H. P. Seidel. </author> <title> Blossoming begets B-spline bases built better by B-patches. </title> <journal> Mathematics of Computation, </journal> <volume> 59 </volume> <pages> 97-115, </pages> <year> 1992. </year>
Reference-contexts: Another important class of bases are B-bases, bases that are dual to L-bases. B-bases are blending functions for B-patches which were introduced by Seidel [Sei91] and shown to agree with certain multivariate B-splines on a special region of the parameter domain <ref> [DMS92] </ref>. Evaluation algorithms with computational complexity O (n s+1 ) for multivariate polynomials of degree n in s variables expressed in terms of B-bases have been derived in [Sei91] using blossoming.
Reference: [Far86] <author> G. Farin. </author> <title> Triangular Bernstein-Bezier patches. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 3(2) </volume> <pages> 83-128, </pages> <year> 1986. </year> <note> References 33 </note>
Reference-contexts: Several algorithms for evaluating multivariate polynomials, represented in these bases, have been proposed. The de Casteljau algorithm with computational complexity O (n s+1 ) is well-known for evaluating multivariate Bezier polynomials <ref> [dC85, Far86] </ref>. Several algorithms for evaluating multivariate polynomials in Bezier or multinomial (Taylor) form with computational complexity O (n s ) have been described [CG90a, dBR92, SV86]. <p> We begin by describing a general parallel up recurrence algorithm with computational complexity O (n 3 ) for the evaluation of bivariate L-bases. This algorithm specializes to the standard de Casteljau algorithm for evaluation of bivariate Bezier surfaces <ref> [dC85, Far86] </ref>. The up recurrence also specializes to O (n 2 ) algorithms for the evaluation of multinomial (Taylor) bases, that include the algorithms proposed earlier by Carnicer-Gasca [CG90a] and de Boor-Ron [dBR92]. <p> This algorithm has computational complexity P n k=1 O (klgk) = O (n 2 lgn). 3.3.2 Bezier Evaluation The parallel up recurrence algorithm specializes to the de Casteljau evaluation algorithm for Bezier surfaces with computational complexity O (n 3 ) <ref> [dC85, Far86] </ref>. In this case, observe that C 0 n! S ff are indeed the coefficients of the multivariate polynomials in Bezier form.
Reference: [Far91] <author> R. Farouki. </author> <title> On the stability of transformations between power and Bernstein form. </title> <booktitle> Computer Aided Geometric Design, </booktitle> (1):29-36, 1991. 
Reference-contexts: This algorithm extracts univariate polynomials along isoparameter lines and then performs the evaluation algorithms for univariate polynomials using a forward difference or dual nested multiplication algorithm. We have not addressed the very important considerations of stability in numerical computations, for which we refer the reader to <ref> [FR88, Far91, FR87] </ref>, because rather than stability the focus of this work has been to provide a conceptual framework for the unification of a large variety of evaluation algorithms for multivariate polynomials. 5.2 Factored Algorithms By factored algorithms we mean algorithms where an intermediate basis is used to perform evaluation.
Reference: [FR87] <author> R. Farouki and V. Rajan. </author> <title> On the numerical condition of polynomials in Bernstein form. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 4 </volume> <pages> 191-216, </pages> <year> 1987. </year>
Reference-contexts: This algorithm extracts univariate polynomials along isoparameter lines and then performs the evaluation algorithms for univariate polynomials using a forward difference or dual nested multiplication algorithm. We have not addressed the very important considerations of stability in numerical computations, for which we refer the reader to <ref> [FR88, Far91, FR87] </ref>, because rather than stability the focus of this work has been to provide a conceptual framework for the unification of a large variety of evaluation algorithms for multivariate polynomials. 5.2 Factored Algorithms By factored algorithms we mean algorithms where an intermediate basis is used to perform evaluation.
Reference: [FR88] <author> R. Farouki and V. Rajan. </author> <title> Algorithms for polynomials in Bernstein form. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5(1) </volume> <pages> 1-26, </pages> <year> 1988. </year>
Reference-contexts: This algorithm extracts univariate polynomials along isoparameter lines and then performs the evaluation algorithms for univariate polynomials using a forward difference or dual nested multiplication algorithm. We have not addressed the very important considerations of stability in numerical computations, for which we refer the reader to <ref> [FR88, Far91, FR87] </ref>, because rather than stability the focus of this work has been to provide a conceptual framework for the unification of a large variety of evaluation algorithms for multivariate polynomials. 5.2 Factored Algorithms By factored algorithms we mean algorithms where an intermediate basis is used to perform evaluation.
Reference: [Gas90] <author> M. Gasca. </author> <title> Multivariate polynomial interpolation. </title> <editor> In W. Dahmen, M. Gasca, and C. A. Micchelli, editors, </editor> <booktitle> Computation of Curves and Surfaces, </booktitle> <pages> pages 215-236. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described <ref> [Gas90] </ref>. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed [Vol88, dB78, Vol90, LSP87, Sch81]. <p> In addition, the up recurrence specializes to an algorithm for evaluating Newton polynomials, that has been previously discussed by Carnicer and Gasca <ref> [CG90a, Gas90] </ref>. The up recurrence also yields a new generalization of the Aitken-Neville algorithm with computational complexity O (n 3 ) for the evaluation of bivariate Lagrange L-bases. <p> Since the triangular format has only O (n 2 ) nodes, this figure shows that the computational complexity of this evaluation algorithm is O (n 2 ). 16 3. Up Recurrence Algorithms This algorithm is exactly the same as the evaluation algorithm described by Gasca in <ref> [Gas90] </ref>. 3.3.4 Lagrange Evaluation: Generalization of the Aitken-Neville Algorithm We now derive a variation of the parallel up recurrence diagram for the evaluation of Lagrange L-bases, which gives rise to a bivariate generalization of the univariate Aitken-Neville algorithm. <p> In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [GB92] <author> R. N. Goldman and P. J. Barry. </author> <title> Wonderful triangle: A simple, unified, algorithmic approach to change of basis procedures in computer aided geometric design. </title> <editor> In T. Ly-che and L. Schumaker, editors, </editor> <booktitle> Mathematical Methods in CAGD II, </booktitle> <pages> pages 297-320. </pages> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Sometimes the terminology Taylor basis or power basis is also used instead of monomial or multinomial basis. However, we shall refer to this basis as the multinomial basis in accordance with <ref> [GB92] </ref> and reserve the term power basis for the basis each element of which is an n-th power of some linear polynomial [GB92]. <p> However, we shall refer to this basis as the multinomial basis in accordance with <ref> [GB92] </ref> and reserve the term power basis for the basis each element of which is an n-th power of some linear polynomial [GB92]. The standard multinomial basis is realized as a special case of an L-basis by choosing the knot-net of polynomials L i;j = L i ; 1 j n, L 1 = x, L 2 = y and L 3 = 1. <p> Up Recurrence Algorithms basis functions <ref> [GB92] </ref>. The computational complexity of this algorithm is O (n 3 ), because there are 6 nodes in the tetrahedron. A careful examination of the algorithm reveals that the label along the edge from the node ff + e i to the node ff is L i;ff i +1 . <p> This technique of unifying evaluation algorithms and derivative algorithms has been discussed for univariate polynomials by Goldman and Barry <ref> [GB92] </ref>. Here we briefly indicate how this extension from evaluation algorithms to derivative algorithms can be derived.
Reference: [GL87] <author> M. Gasca and E. Lebron. </author> <title> On Aitken-Neville formulae for multivariate interpolation. In Numerical Approximation of Partial Differential Equations, </title> <address> pages 133-140. </address> <publisher> Elsevier Science Publication, North Holland, </publisher> <year> 1987. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [GLC82] <author> M. Gasca and A. Lopez-Carmona. </author> <title> A general recurrence interpolation formula and its applications to multivariate interpolation. </title> <journal> Journal of Approximation Theory, </journal> <pages> pages 361-374, </pages> <year> 1982. </year>
Reference-contexts: This goal is achieved by premultiplying the divided differences by appropriate constants, which depend upon the fixed distance between successive points, and then reducing the rest of the computation to pure addition as shown on the right diagram of [CdB80]. We refer the readers to <ref> [Muh73, GLC82] </ref> for a generalization of divided differences to the multivariate setting. We now describe how a bivariate version of the divided difference and forward difference algorithms can be obtained by specializing the change of basis algorithms between L-bases described in Section 4.1.1.
Reference: [GM89] <author> M. Gasca and J. I. Maeztu. </author> <title> On Lagrange and Hermite interpolation in R k . Numer. </title> <journal> Math., </journal> <pages> pages 1-14, </pages> <year> 1989. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [HG95] <author> A. Habib and R. Goldman. </author> <title> Bivariate Hermite interpolation over triangular grids. </title> <institution> Rice University, </institution> <note> In preparation., </note> <year> 1995. </year>
Reference-contexts: It would be satisfying to integrate into our formulation evaluation algorithms for multivariate polynomials expressed in terms of other useful bases such as multivariate Hermite bases. A generalization of the Aitken-Neville recurrence for Hermite bases defined over geometric meshes is currently under investigation by Habib and Goldman <ref> [HG95] </ref>. Acknowledgments: This work was partially supported by National Science Foundation grants 31 CCR-9309738, CCR-9113239, IRI-9423881 and by faculty research funds granted by the Univer sity of California, Santa Cruz.
Reference: [LG95a] <author> S. Lodha and R. Goldman. </author> <title> Change of basis algorithms for surfaces in CAGD. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: In this section we describe dual evaluation algorithms with computational complexity O (n 2 ), O (n), and O (1) per point. This class of algorithms is based upon certain change of basis algorithms between L-bases which we discuss next. 4.1 Change of Basis Algorithms In our earlier work <ref> [LG95a] </ref>, we derived change of basis algorithms with computational complexity O (n 3 ) between any two bivariate L-bases. Here we establish how these change of basis algorithms can be used to derive evaluation algorithms with computational complexity O (n) or O (1) per point for bivariate L-bases. <p> Dual Evaluation Algorithms 4.2 Dual Nested Multiplication Evaluation Algorithm We now describe the dual nested multiplication evaluation algorithm for an L-basis that is obtained from the dual formulation of the de Boor evaluation algorithm for a B-basis <ref> [LG95a] </ref>. To evaluate a polynomial expressed in terms of an L-basis at a point u, let M and N be two polynomials that vanish at u, that is, M (u) = N (u) = 0. <p> It is shown in <ref> [LG95a] </ref> that for polynomials written in terms of the multinomial basis, this algorithm specializes to a bivariate generalization of Horner's evaluation algorithm for univariate polynomials expressed in the monomial (Taylor) basis, and agrees with the algorithm for evaluation of multi-variate polynomials proposed by Schumaker and Volk [SV86]. <p> Although in this work we have focused solely on evaluation algorithms, it follows in conjunction with our earlier work <ref> [LG95a, LG95b] </ref> that the principles of blossoming, duality, and homogenization can be extended to provide a similar unification in the multivariate setting. 30 6. Conclusions and Future Work 6.
Reference: [LG95b] <author> S. Lodha and R. Goldman. </author> <title> Lattices and algorithms for bivariate Bernstein, Lagrange, Newton and other related polynomial bases based on duality between L-bases and B-bases. </title> <note> Submitted for publication, </note> <month> January </month> <year> 1995. </year>
Reference-contexts: We also provide very brief geometric interpretations for the algebraic entities associated with the L-bases in order to explain how certain bivariate Lagrange and Newton bases arise as special cases of L-bases. Complete details are provided in <ref> [LG95b] </ref>. Throughout this paper, we shall adopt the following notation. A multi-index ff is a 3-tuple of non-negative integers. <p> We assign to each affine polynomial ax + by + c the corresponding line in the affine plane defined by the equation ax + by + c = 0. ( The polynomial c corresponds to the line at infinity in the projective plane.) For full details, please refer to <ref> [LG95b] </ref>. Observe that this correspondence between lines and polynomials depends on the coordinate system and is unique only up to constant multiples. <p> This yields: l n ff = x ff 1 y ff 2 : More general multinomial bases can also be realized as L-bases <ref> [LG95b] </ref>. 2.3 Lagrange Bases Let f fL ij g, fL 2j g, fL 3j g, j = 1; ; n g be a knot-net of polynomials. <p> Suppose that the polynomials (L 1;ff 1 +1 ,L 2;ff 2 +1 ,L 3;ff 3 +1 ) are affinely dependent for jffj = n, 0 ff k n 1. It has been established in <ref> [LG95b] </ref> that, up to constant multiples, the corresponding L-basis is a Lagrange basis; that is, there exist points v ff such that l n ff (v fi ) = l n ff (v ff )ffi fffi . Therefore, f l n ff forms a Lagrange basis. <p> To these points, we shall add three more points: v n00 = L 31 T T T L 21 . These are precisely the n+2 points that give rise to Lagrange interpolation conditions. In our earlier work, we described several interesting lattice or point-line configurations that generate Lagrange L-bases <ref> [LG95b] </ref>. Here we simply describe one interesting lattice, known as a principal lattice or geometric mesh [CY77], that admits unique interpolation by a Lagrange L-basis. <p> In our earlier work <ref> [LG95b] </ref>, we established that each Newton L-basis can be associated with a point and derivative interpolation problem with the following properties: (i) there exists a unique solution to the general interpolation problem expressed in this basis and (ii) the coefficients a ff of the interpolant L (u) = P jffj=n a <p> In <ref> [LG95b] </ref>, we also exhibited a rich collection of lattices or point-line configurations that admit unique and natural solutions to an appropriate interpolation problem by means of a Newton L-basis. <p> The corresponding Newton L-bases solve the Lagrange interpolation problem at the associated n+2 distinct points of intersection. Figure 2.2 shows a natural lattice of order 3. 6 2. L-bases <ref> [LG95b] </ref> also presents some examples of lattices usually associated with Hermite interpolation problems [M 84, NR92] that can be solved uniquely with Newton L-bases. 7 3. <p> Although in this work we have focused solely on evaluation algorithms, it follows in conjunction with our earlier work <ref> [LG95a, LG95b] </ref> that the principles of blossoming, duality, and homogenization can be extended to provide a similar unification in the multivariate setting. 30 6. Conclusions and Future Work 6.
Reference: [LGW94] <author> S. Lodha, R. Goldman, and J. Warren. </author> <title> A ladder recurrence algorithm for the evaluation of L-patches. </title> <booktitle> To appear in the Proceedings of the International Conference on Computer Aided Geometric Design, Penang, Malaysia, </booktitle> <year> 1994. </year>
Reference-contexts: The computation proceeds upwards and the value of L (u) emerges at the apex node of the triangle, shown as a black circle in Figure 3.11. A more formal description of this algorithm for arbitrary degree n can be found in <ref> [LGW94] </ref>. Since a ladder with p steps requires O (p) computations, the computational complexity of this algorithm is P n p=1 O (p) = O (n 2 ). Observe that in contrast to other algorithms described in this work, this algorithm employs coefficients as labels along the edges. 19 4.
Reference: [LM86] <author> T. Lyche and K. Morken. </author> <title> Making the Oslo algorithm more efficient. </title> <journal> SIAM Journal of Numerical Analysis, </journal> <pages> pages 663-675, </pages> <year> 1986. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [LSP87] <author> S. L. Lien, M. Shantz, and V. Pratt. </author> <title> Adaptive forward differencing for rendering curves and surfaces. </title> <journal> Computer Graphics, </journal> <volume> 21 </volume> <pages> 111-118, </pages> <year> 1987. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed <ref> [Vol88, dB78, Vol90, LSP87, Sch81] </ref>. Most of these evaluation algorithms seem to have been discovered independently from one another and, therefore, the literature as cited above is scattered and the various algorithms appear to be unrelated. <p> algorithms that are closely related to the evaluation algorithms discussed so far. 5.1 Hybrid Algorithms In addition to the algorithms for evaluating multivariate polynomials discussed so far, we are aware of some different algorithms for evaluating multivariate polynomials, most of which are spurred by considerations of stability in numerical computations <ref> [LSP87, Vol90, Pet94] </ref>. First, Volk [Vol88] has proposed a hybrid univariate nested multiplication and divided difference algorithm. Volk [Vol90] has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points.
Reference: [M 84] <author> A. Le Mehaute. </author> <title> Approximation of derivatives in R n . Applications: construction of surfaces in R 2 . In S. </title> <editor> P. Singh, J. H. W. Burry, and B. Watson, editors, </editor> <booktitle> Multivariate Approximation, </booktitle> <pages> pages 361-378. </pages> <publisher> Reidel, </publisher> <year> 1984. </year> <note> 34 References </note>
Reference-contexts: The corresponding Newton L-bases solve the Lagrange interpolation problem at the associated n+2 distinct points of intersection. Figure 2.2 shows a natural lattice of order 3. 6 2. L-bases [LG95b] also presents some examples of lattices usually associated with Hermite interpolation problems <ref> [M 84, NR92] </ref> that can be solved uniquely with Newton L-bases. 7 3.
Reference: [Mar70] <author> M. J. Marsden. </author> <title> An identity for spline functions with applications to variation-diminishing spline approximation. </title> <journal> Journal of Approximation Theory, </journal> <pages> pages 663-675, </pages> <year> 1970. </year>
Reference-contexts: Using principles of homogenization, blossoming, and duality <ref> [BGD91, BG93a, CLR80, LM86, Mar70, Boe80] </ref> univariate evaluation and differentiation algorithms have been unified with several other very well-known algorithms, formulas, and identities, including the Oslo algorithm, Boehm's knot-insertion and derivative algorithms, Marsden's identity, the binomial theorem, Ramshaw's blossoming algorithm, a two-term differentiation algorithm, and a two-term degree elevation formula.
Reference: [Muh73] <author> G. Muhlbach. </author> <title> A recurrence formula for generalized divided differences and some applications. </title> <journal> Journal of Approximation Theory, </journal> <pages> pages 165-172, </pages> <year> 1973. </year>
Reference-contexts: This goal is achieved by premultiplying the divided differences by appropriate constants, which depend upon the fixed distance between successive points, and then reducing the rest of the computation to pure addition as shown on the right diagram of [CdB80]. We refer the readers to <ref> [Muh73, GLC82] </ref> for a generalization of divided differences to the multivariate setting. We now describe how a bivariate version of the divided difference and forward difference algorithms can be obtained by specializing the change of basis algorithms between L-bases described in Section 4.1.1.
Reference: [Muh74] <author> G. Muhlbach. </author> <title> Newton and Hermite interpolation mit Cebysev-systemen. </title> <journal> Z. Angew. Math. Mech., </journal> <pages> pages 97-110, </pages> <year> 1974. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [Muh78] <author> G. Muhlbach. </author> <title> The general Neville-Aitken algorithm and some applications. </title> <journal> Numerische Mathematik, </journal> <pages> pages 97-110, </pages> <year> 1978. </year>
Reference-contexts: Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed <ref> [CG90b, Muh78, TM60] </ref>. Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed [Vol88, dB78, Vol90, LSP87, Sch81]. <p> In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [Muh88] <author> G. Muhlbach. </author> <title> On multivariate interpolation by generalized polynomials in subsets of grids. </title> <booktitle> Computing, </booktitle> <year> 1988. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [Nev34] <author> E. H. Neville. </author> <title> Iterative interpolation. </title> <journal> Journal of Indiana Mathematical Society, </journal> <pages> pages 87-120, </pages> <year> 1934. </year>
Reference-contexts: In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied. <p> Then we can express the solution to the point interpolation problem as an affine combination of the three subproblems of point interpolation and thus generalize the Aitken-Neville algorithm for the evaluation of Lagrange polynomials from univariate to bivariate polynomials <ref> [Ait32, Nev34] </ref>. Theorem 1: L (u) = L 11 (v n00 ) L 21 M 2 (u) + L 31 (v 00n ) Proof: The proof is by induction.
Reference: [NR92] <author> G. Nurnberger and Th. Riessinger. </author> <title> Lagrange and Hermite interpolation by bivariate splines. </title> <journal> Numerical Functional Anaalysis and Optimization, </journal> <volume> 13(1) </volume> <pages> 75-96, </pages> <year> 1992. </year>
Reference-contexts: The corresponding Newton L-bases solve the Lagrange interpolation problem at the associated n+2 distinct points of intersection. Figure 2.2 shows a natural lattice of order 3. 6 2. L-bases [LG95b] also presents some examples of lattices usually associated with Hermite interpolation problems <ref> [M 84, NR92] </ref> that can be solved uniquely with Newton L-bases. 7 3.
Reference: [Pet94] <author> J. Peters. </author> <title> Evaluation of the multivariate bernstein-bezier form on a regular lattice. </title> <journal> ACM Transactions on Mathematical Software, </journal> <year> 1994. </year>
Reference-contexts: algorithms that are closely related to the evaluation algorithms discussed so far. 5.1 Hybrid Algorithms In addition to the algorithms for evaluating multivariate polynomials discussed so far, we are aware of some different algorithms for evaluating multivariate polynomials, most of which are spurred by considerations of stability in numerical computations <ref> [LSP87, Vol90, Pet94] </ref>. First, Volk [Vol88] has proposed a hybrid univariate nested multiplication and divided difference algorithm. Volk [Vol90] has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points. <p> In order to improve the stability of the forward difference evaluation algorithm, Volk reduces the level of indirection in the computation by solving an upper triangular system [Vol90]. A second method, discussed by Peters <ref> [Pet94] </ref>, is again motivated by concerns of stability and efficiency. This algorithm extracts univariate polynomials along isoparameter lines and then performs the evaluation algorithms for univariate polynomials using a forward difference or dual nested multiplication algorithm.
Reference: [Ram87] <author> L. Ramshaw. </author> <title> Blossoming: A connect the dots approach to splines. Digital Systems Reserach Center, </title> <type> Report 19, </type> <institution> Palo Alto, California., </institution> <year> 1987. </year>
Reference-contexts: each of which we shall now describe. 4.1.1 Lagrange Evaluation Algorithm The general change of basis algorithm between any two L-bases was derived using the duality between B-bases and L-bases and is dual to the general change of basis algorithm between any two B-bases [Sei91], derived using the blossoming principle <ref> [Ram87, Ram89] </ref>.
Reference: [Ram89] <author> L. Ramshaw. </author> <title> Blossoms are polar forms. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 6 </volume> <pages> 323-358, </pages> <year> 1989. </year>
Reference-contexts: each of which we shall now describe. 4.1.1 Lagrange Evaluation Algorithm The general change of basis algorithm between any two L-bases was derived using the duality between B-bases and L-bases and is dual to the general change of basis algorithm between any two B-bases [Sei91], derived using the blossoming principle <ref> [Ram87, Ram89] </ref>.
Reference: [Sch81] <author> L. L. Schumaker. </author> <title> Spline Functions: Basic Theory. </title> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed <ref> [Vol88, dB78, Vol90, LSP87, Sch81] </ref>. Most of these evaluation algorithms seem to have been discovered independently from one another and, therefore, the literature as cited above is scattered and the various algorithms appear to be unrelated.
Reference: [Sei91] <author> H. P. Seidel. </author> <title> Symmetric recursive algorithms for surfaces: B-patches and the de Boor algorithm for polynomials over triangles. Constructive Approximation, </title> <booktitle> 7 </booktitle> <pages> 259-279, </pages> <year> 1991. </year>
Reference-contexts: algorithm, and a forward difference algorithm, each of which we shall now describe. 4.1.1 Lagrange Evaluation Algorithm The general change of basis algorithm between any two L-bases was derived using the duality between B-bases and L-bases and is dual to the general change of basis algorithm between any two B-bases <ref> [Sei91] </ref>, derived using the blossoming principle [Ram87, Ram89]. <p> We have concentrated on evaluation algorithms for multivariate polynomials that are expressed in terms of L-bases. Another important class of bases are B-bases, bases that are dual to L-bases. B-bases are blending functions for B-patches which were introduced by Seidel <ref> [Sei91] </ref> and shown to agree with certain multivariate B-splines on a special region of the parameter domain [DMS92]. Evaluation algorithms with computational complexity O (n s+1 ) for multivariate polynomials of degree n in s variables expressed in terms of B-bases have been derived in [Sei91] using blossoming. <p> which were introduced by Seidel <ref> [Sei91] </ref> and shown to agree with certain multivariate B-splines on a special region of the parameter domain [DMS92]. Evaluation algorithms with computational complexity O (n s+1 ) for multivariate polynomials of degree n in s variables expressed in terms of B-bases have been derived in [Sei91] using blossoming.
Reference: [SSF94] <author> P. Sankar, M. Silbermann, and L. Ferrari. </author> <title> Curve and surface generation and refinement based on a high speed derivative algorithm. CVGIP: </title> <booktitle> Graphical Models and Image Processing, </booktitle> <pages> pages 94-101, </pages> <year> 1994. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s+1 ) for multivariate polynomials of degree n in s variables expressed in terms of B-bases have been derived in [Sei91] using blossoming. Barry and Goldman [BG93b] and Sankar, Silbermann and Ferrari <ref> [SSF94] </ref> have discussed a technique for speeding up knot insertion and evaluation of univariate polynomials expressed in terms of univariate progressive or B-spline bases by factoring through the Newton dual basis, that is, the dual to the univariate Newton basis.
Reference: [SV86] <author> L. L. Schumaker and W. Volk. </author> <title> Efficient evaluation of multivariate polynomials. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <pages> pages 149-154, </pages> <year> 1986. </year>
Reference-contexts: The de Casteljau algorithm with computational complexity O (n s+1 ) is well-known for evaluating multivariate Bezier polynomials [dC85, Far86]. Several algorithms for evaluating multivariate polynomials in Bezier or multinomial (Taylor) form with computational complexity O (n s ) have been described <ref> [CG90a, dBR92, SV86] </ref>. Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed [CG90b, Muh78, TM60]. <p> The change of basis algorithm can be specialized into a new dual nested multiplication algorithm with computational complexity O (n 2 ) for the evaluation of bivariate L-bases. This class of algorithms include an algorithm for evaluating multivariate polynomials in multinomial (Taylor) form described earlier by Schumaker and Volk <ref> [SV86] </ref>. This paper is organized in the following manner. Section 2 reviews the definition of L-bases and presents examples of Bezier, multinomial, Lagrange and Newton bases as L-bases. <p> It is shown in [LG95a] that for polynomials written in terms of the multinomial basis, this algorithm specializes to a bivariate generalization of Horner's evaluation algorithm for univariate polynomials expressed in the monomial (Taylor) basis, and agrees with the algorithm for evaluation of multi-variate polynomials proposed by Schumaker and Volk <ref> [SV86] </ref>. Notice that in this algorithm, one performs computations only for two tetrahedra in contrast to computations for three tetrahedra in the general change of basis algorithm.
Reference: [TM60] <author> H. C. Jr. Thacher and W. E. Milne. </author> <title> Interpolation in several variables. </title> <journal> J. SIAM, </journal> <pages> pages 33-42, </pages> <year> 1960. </year>
Reference-contexts: Generalizations with computational complexity O (n s+1 ) of the Aitken-Neville algorithm for evaluating univariate Lagrange polynomials to certain subclasses of multivariate Lagrange polynomials have been proposed <ref> [CG90b, Muh78, TM60] </ref>. Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed [Vol88, dB78, Vol90, LSP87, Sch81]. <p> In the past the Aitken-Neville algorithm has been generalized to some restricted classes of bivariate Lagrange polynomials <ref> [Ait32, Nev34, Gas90, CG90b, CG90a, Muh78, GL87, GM89, Muh74, TM60, Muh88] </ref>. This new generalization extends the class of multivariate Lagrange polynomials to which an Aitken-Neville algorithm can be applied.
Reference: [Vol88] <author> W. Volk. </author> <title> An efficient raster evaluation method for univariate polynomials. </title> <journal> Computing, </journal> <volume> 40 </volume> <pages> 163-173, </pages> <year> 1988. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed <ref> [Vol88, dB78, Vol90, LSP87, Sch81] </ref>. Most of these evaluation algorithms seem to have been discovered independently from one another and, therefore, the literature as cited above is scattered and the various algorithms appear to be unrelated. <p> First, Volk <ref> [Vol88] </ref> has proposed a hybrid univariate nested multiplication and divided difference algorithm. Volk [Vol90] has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points.
Reference: [Vol90] <author> W. Volk. </author> <title> Making the difference interpolation method for splines more stable. </title> <journal> J. of Computing and Applied Mathematics, </journal> <pages> pages 53-59, </pages> <year> 1990. </year>
Reference-contexts: Evaluation algorithms with computational complexity O (n s ) for multivariate polynomials expressed in Newton bases have also been described [Gas90]. In addition, evaluation algorithms related to the generalizations of forward and divided difference algorithms to multivariate polynomials have also been discussed <ref> [Vol88, dB78, Vol90, LSP87, Sch81] </ref>. Most of these evaluation algorithms seem to have been discovered independently from one another and, therefore, the literature as cited above is scattered and the various algorithms appear to be unrelated. <p> algorithms that are closely related to the evaluation algorithms discussed so far. 5.1 Hybrid Algorithms In addition to the algorithms for evaluating multivariate polynomials discussed so far, we are aware of some different algorithms for evaluating multivariate polynomials, most of which are spurred by considerations of stability in numerical computations <ref> [LSP87, Vol90, Pet94] </ref>. First, Volk [Vol88] has proposed a hybrid univariate nested multiplication and divided difference algorithm. Volk [Vol90] has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points. <p> First, Volk [Vol88] has proposed a hybrid univariate nested multiplication and divided difference algorithm. Volk <ref> [Vol90] </ref> has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points. In order to improve the stability of the forward difference evaluation algorithm, Volk reduces the level of indirection in the computation by solving an upper triangular system [Vol90]. <p> Volk <ref> [Vol90] </ref> has also proposed a slightly different evaluation algorithm based on the forward difference algorithm for evaluation of polynomials at several points. In order to improve the stability of the forward difference evaluation algorithm, Volk reduces the level of indirection in the computation by solving an upper triangular system [Vol90]. A second method, discussed by Peters [Pet94], is again motivated by concerns of stability and efficiency. This algorithm extracts univariate polynomials along isoparameter lines and then performs the evaluation algorithms for univariate polynomials using a forward difference or dual nested multiplication algorithm.
Reference: [War92] <author> J. Warren. </author> <title> Creating rational multi-sided Bezier surfaces using base points. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(2) </volume> <pages> 127-139, </pages> <year> 1992. </year>
Reference-contexts: There is another interesting way of evaluating polynomials of total degree n expressed in terms of Bezier bases by viewing the polynomial as a tensor product of bi-degree n fi n <ref> [War92] </ref>. This tensor product evaluation algorithm can be derived by modifying the evaluation algorithm 3.3. Examples 15 discussed in the previous section and described in Figure 3.7.
Reference: [War94] <author> J. Warren. </author> <title> An efficient evaluation algorithm for polynomials in the Polya basis. </title> <booktitle> Computing, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: By modifying the structure of the univariate parallel up recurrence, Warren developed a ladder recurrence algorithm for the evaluation of univariate L-bases (or Polya bases) with computational complexity O (n) <ref> [War94] </ref>. Since each triangle in triangle of height p by a ladder of height p. The recurrence starts at the bottom of Figure 3.11, at all the nodes shown as cross-hatched circles. These nodes have values 1.
References-found: 51

