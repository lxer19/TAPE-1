URL: http://www.cs.washington.edu/homes/fix/papers/cg98.ps
Refering-URL: http://www.cs.washington.edu/homes/fix/papers/
Root-URL: 
Title: Multiresolution Banded Refinement to Accelerate Surface Reconstruction from Polygons  
Author: James D. Fix Richard E. Ladner 
Abstract: We propose a method for constructing a tiling between a pair of planar polygons. Our technique uses multiresolution: tilings of lower resolution polygons are used to construct a tiling for the full resolution polygons. The tilings are constructed using restricted dynamic programming called banded refinement in roughly linear time and space. By contrast, the optimal dynamic programming method requires quadratic time and space. In our empirical study of surface reconstruction of brain contours our algorithm exhibited significant speedup over the optimal dynamic program, yet nearly always achieved the optimal reconstruction. Our approach appears to be generalizable to other geometric problems solvable by dynamic programming, and flexible enough to be tuned to varying data set characteristics.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Cohen, T. DeRose, D. Salesin, P. Schroder, W. Sweldens. </author> <title> Wavelets in Computer Graphics. </title> <booktitle> ACM SIGGRAPH Course Notes, </booktitle> <year> 1996. </year>
Reference-contexts: We provide empirical results that show that our method almost always finds the optimal tiling using a small band width. 1.1 Related Work Multiresolution analysis has had a strong impact on computer algorithms, most notably in the areas of signal processing and compression, numerical methods, and computer graphics <ref> [1, 9] </ref>. Used for compression and function approximation, multiresolution and wavelet analysis finds compact representations that mostly characterize the original function. When applied to numerical optimization problems, multiresolution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [2].
Reference: [2] <author> Z. Liu, S. Gortler, M. Cohen. </author> <title> Heirarchical spacetime control. </title> <booktitle> Proceedings of SIGGRAPH 94, in Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1994. </year>
Reference-contexts: Used for compression and function approximation, multiresolution and wavelet analysis finds compact representations that mostly characterize the original function. When applied to numerical optimization problems, multiresolution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail <ref> [2] </ref>. Our method is a synthesis of the optimal tiling method of Fuchs et al. [3] and a multires-olution tiling method of Meyers [5]. Meyers' tiling algorithm was one of the first compelling applications of multiresolution and wavelet analysis to computational geometry and computer graphics.
Reference: [3] <author> H. Fuchs, </author> <title> Z.M. Kedem, S.P. Uselton. Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> <volume> Volume 20, Number 10, </volume> <pages> pp. 693-702, </pages> <month> October </month> <year> 1977. </year>
Reference-contexts: Oftentimes, the contours are modeled as polygons, and the problem is reduced to the polygon tiling problem: find a surface composed of triangular tiles between adjacent polygonal slices <ref> [4, 3, 5] </ref>. Fuchs, Kedem, and Uselton [3] devised a dynamic programming algorithm that computes an optimal tiling in O (n 2 log n) time and O (n 2 ) space. <p> Oftentimes, the contours are modeled as polygons, and the problem is reduced to the polygon tiling problem: find a surface composed of triangular tiles between adjacent polygonal slices [4, 3, 5]. Fuchs, Kedem, and Uselton <ref> [3] </ref> devised a dynamic programming algorithm that computes an optimal tiling in O (n 2 log n) time and O (n 2 ) space. For data sets that are large in number of polygons and size of polygons, especially in interactive applications, the optimal method can be too costly. <p> When applied to numerical optimization problems, multiresolution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [2]. Our method is a synthesis of the optimal tiling method of Fuchs et al. <ref> [3] </ref> and a multires-olution tiling method of Meyers [5]. Meyers' tiling algorithm was one of the first compelling applications of multiresolution and wavelet analysis to computational geometry and computer graphics. <p> Our discussion of the polygon tiling problem and its optimal solution follows that of Fuchs et al. <ref> [3] </ref>. Let P = fp 0 ; p 1 ; : : : ; p m1 g and Q = fq 0 ; q 1 ; : : : ; q n1 g be polygons in R 3 lying in parallel planes. <p> By some clever observations about optimal paths in G (P; Q), Fuchs, Kedem, and Uselton discovered a dynamic programming strategy that used only O (mn log m) time <ref> [3] </ref>. 3 Multiresolution Tiling Our tiling method hinges on the ability to construct approximations of polygons, and construct a tiling based on the tilings of those approximations. 3.1 Multiresolution Analysis of Polygons Multiresolution analysis provides a fast and effective way for computing approximations of a polygon, where the points of a <p> We compared the three tiling methods described in this paper: Banded: our multiresolution tiling algorithm that refines tilings using banded dynamic programming. The band width was fixed at some value b at all resolution levels. Optimal: our implementation of the optimal dynamic programming tiling algorithm <ref> [3] </ref>. Local search: our implementation of the multiresolution algorithm that uses local search by edge flip operations [5].
Reference: [4] <author> E. Keppel. </author> <title> Approximating complex surfaces by triangulation of contour lines. </title> <journal> IBM Journal of Research and Development 19, </journal> <pages> pp. 2-11, </pages> <month> January </month> <year> 1975. </year>
Reference-contexts: Oftentimes, the contours are modeled as polygons, and the problem is reduced to the polygon tiling problem: find a surface composed of triangular tiles between adjacent polygonal slices <ref> [4, 3, 5] </ref>. Fuchs, Kedem, and Uselton [3] devised a dynamic programming algorithm that computes an optimal tiling in O (n 2 log n) time and O (n 2 ) space.
Reference: [5] <author> D. Meyers. </author> <title> Multiresolution tiling. </title> <journal> Computer Graphics Forum, </journal> <volume> Vol. 13, No. 5, </volume> <pages> pp. 325-340, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: Oftentimes, the contours are modeled as polygons, and the problem is reduced to the polygon tiling problem: find a surface composed of triangular tiles between adjacent polygonal slices <ref> [4, 3, 5] </ref>. Fuchs, Kedem, and Uselton [3] devised a dynamic programming algorithm that computes an optimal tiling in O (n 2 log n) time and O (n 2 ) space. <p> When applied to numerical optimization problems, multiresolution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [2]. Our method is a synthesis of the optimal tiling method of Fuchs et al. [3] and a multires-olution tiling method of Meyers <ref> [5] </ref>. Meyers' tiling algorithm was one of the first compelling applications of multiresolution and wavelet analysis to computational geometry and computer graphics. Like our method, his method constructed tilings from lower resolution tilings, but employed a local search heuristic to refine the tilings. <p> Sweldens and Schroder [10] describe techniques for designing analysis filters a for various applications. For polygons, we use the analysis filter of Meyers: fa 0 = 19=28; a 1 = 9=28; a 2 = 1=8; a 3 = 1=14; a 4 = 1=28g <ref> [5] </ref>. This was chosen so that the polygon P i is nearly a least squares approximation of P i+1 . Example approximations given by this scheme can be seen in the polygons of figure 1. Performing a multiresolution analysis of P is very efficient. <p> In our multiresolution tiling algorithm, we use the path of a lower resolution tiling to guide dynamic programming to construct a higher resolution tiling. Meyers <ref> [5] </ref> multiresolution tiling algorithm provides a framework for our technique. The algorithm works as follows: let P and Q be polygons with m and n points, and let k be a non-negative integer. Assume that m and n are divisible by 2 k . <p> Meyers gave a straightforward way of tiling P i and Q i by simply splitting each tile of T i1 <ref> [5] </ref>. In the tiling graph, this corresponds to splitting the edges of the corresponding solution path in the tiling graph. 4 Banded Refinement The key to the multiresolution approach is the ability to construct good solutions based on a solution to a lower resolution version of the problem. <p> The RefineTiling step remedies this. One approach to refinement would be to make local improvements to a tiling| for example, one could apply "edge flips" (see figure 4a) that improve the tiling, until no improvement can be made. This was the method applied by Meyers <ref> [5] </ref>. Figure 4b illustrates the weakness of this technique: it is possible for a tiling to be close to an optimal tiling, yet have an edge flip operation lead the refinement to a sub-optimal tiling that is locally optimal with respect to the edge flip operation. <p> The band width was fixed at some value b at all resolution levels. Optimal: our implementation of the optimal dynamic programming tiling algorithm [3]. Local search: our implementation of the multiresolution algorithm that uses local search by edge flip operations <ref> [5] </ref>. The left side of Figure 5 shows the quality of the tilings produced by the tiling algorithms: for local search (the first bar) and for various choices of the band width parameter b (the remaining bars).
Reference: [6] <author> D. Sankoff, J. Kruskal. </author> <title> Time warps, string edits, and macromolecules: the theory and practice of sequence comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address> <year> 1983. </year>
Reference-contexts: There are numerous problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: in measuring the resemblance of polygonal curves [8], finding figure correspondences [7], and dynamic time-warping for handwriting and speech recognition <ref> [6] </ref>. All of these can be formulated and solved using dynamic programming| there seems to be great potential in generalizing our method to accelerate their solutions as well. 2 an intermediate resolution tiling; and a full resolution tiling.
Reference: [7] <author> T.W. Sederberg, E. Greenwood. </author> <title> A physically based approach to 2D shape blending. </title> <booktitle> Proceedings of SIGGRAPH 92, in Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1992. </year>
Reference-contexts: There are numerous problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: in measuring the resemblance of polygonal curves [8], finding figure correspondences <ref> [7] </ref>, and dynamic time-warping for handwriting and speech recognition [6]. All of these can be formulated and solved using dynamic programming| there seems to be great potential in generalizing our method to accelerate their solutions as well. 2 an intermediate resolution tiling; and a full resolution tiling.
Reference: [8] <author> H. Alt, M. Godau. </author> <title> Measuring the resemblance of polygonal curves. </title> <booktitle> Proceedings of the 7th ACM Symposium on Computational Geometry, </booktitle> <year> 1991, </year> <pages> pp. 102-109. </pages>
Reference-contexts: There are numerous problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: in measuring the resemblance of polygonal curves <ref> [8] </ref>, finding figure correspondences [7], and dynamic time-warping for handwriting and speech recognition [6].
Reference: [9] <author> E. Stollnitz, T. DeRose, D. Salesin. </author> <title> Wavelets for computer graphics: Theory and Applications. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco. </address> <year> 1996. </year>
Reference-contexts: We provide empirical results that show that our method almost always finds the optimal tiling using a small band width. 1.1 Related Work Multiresolution analysis has had a strong impact on computer algorithms, most notably in the areas of signal processing and compression, numerical methods, and computer graphics <ref> [1, 9] </ref>. Used for compression and function approximation, multiresolution and wavelet analysis finds compact representations that mostly characterize the original function. When applied to numerical optimization problems, multiresolution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [2].
Reference: [10] <author> W. Sweldens and P. Schroder. </author> <title> Building your own wavelets at home. </title> <type> Technical Report 1995:5, </type> <institution> Department of Mathematics, University of South Carolina, </institution> <year> 1995. </year> <month> 10 </month>
Reference-contexts: For example, in the "midpoint" multiresolution scheme above, a would be defined by: fa 1 = 0; a 0 = 1=2; a 1 = 1=2g. Sweldens and Schroder <ref> [10] </ref> describe techniques for designing analysis filters a for various applications. For polygons, we use the analysis filter of Meyers: fa 0 = 19=28; a 1 = 9=28; a 2 = 1=8; a 3 = 1=14; a 4 = 1=28g [5].
References-found: 10

