URL: ftp://www.cs.umass.edu/pub/lesser/wagner_aaai97_ws.ps
Refering-URL: http://dis.cs.umass.edu/~wagner/pubs.html
Root-URL: 
Email: Email: wagner@cs.umass.edu  Email: garvey@cs.umass.edu  Email: lesser@cs.umass.edu  
Title: Design-to-Criteria Scheduling: Managing Complexity through Goal-Directed Satisficing  
Author: Thomas Wagner Alan Garvey Victor Lesser 
Address: Amherst, MA 01003  Kirksville, MO 63501  Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  Div. of Math Computer Science Truman State University  Computer Science Department University of Massachusetts  
Abstract: Scheduling complex problem solving tasks, where tasks are interrelated and there are multiple different ways to go about achieving a particular task, is an imprecise science and the justification for this lies soundly in the combinatorics of the scheduling problem. Intractable problems require approximate solutions. We have developed a new domain- independent approach to task scheduling called Design-to- Criteria that controls the combinatorics via a satisficing methodology and custom designs schedules to meet a particular client's goal criteria. In Design-to-Criteria, criteria- directed focusing, approximation, and heuristics, in conjunction with soft client goal criteria are used to make the scheduling problem tractable. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Callan, J. P.; Croft, W. B.; and Harding, S. M. </author> <year> 1992. </year> <title> The INQUERY retrieval system. </title> <booktitle> In Proceedings of the 3rd International Conference on Database and Expert Systems Applications, </booktitle> <pages> 7883. </pages>
Reference-contexts: A typical information gathering task is to gather information to support a decision of whether to purchase WordPerfect, Microsoft Word, or WordPro, or some yet unidentified word processor. The project utilizes supporting technology from both the information retrieval <ref> (Callan, Croft, & Harding 1992) </ref> and information extraction (Fisher et al. 1996) disciplines to process retrieved documents. The inevitable advent of structured WWW data will also assist with the data interpretation task. The instantiation of the generic agent architecture for the information gathering project is shown in Figure 5.
Reference: <author> Carver, N., and Lesser, V. </author> <year> 1995. </year> <title> The DRESUN testbed for research in FA/C distributed situation assessment: Extensions to the model of external evidence. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle>
Reference-contexts: Research Applications TMS and the Design-to-Criteria scheduler, and its predecessor, Design-to-Time (Garvey & Lesser 1995), are being used in a wide range of research projects including cooperative information gathering (Oates, Nagendra Prasad, & Lesser 1994; Decker et al. 1995), distributed collaborative design (Decker & Lesser 1995), and distributed situation assessment <ref> (Carver & Lesser 1995) </ref>. The software architectures for the various research projects are related and based on a generic architecture consisting of scheduling, coordination, planning/problem solving, and execution/monitoring modules. <p> In this project, the execution subsystem and monitoring components are integrated with the problem solver. The problem solving functionality is provided by a RESUN <ref> (Carver & Lesser 1995) </ref> blackboard planner that explicitly represents sources-of-uncertainty associated with hypothesis and uses bottom-up and top-down processing to achieve goals and resolve sources-of-uncertainty.
Reference: <author> Dean, T., and Boddy, M. </author> <year> 1988. </year> <title> An analysis of timedependent planning. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> 4954. </pages>
Reference: <author> Decker, K. S., and Lesser, V. R. </author> <year> 1995. </year> <title> Coordination assis-tance for mixed human and computational agent systems. </title> <booktitle> In Proceedings of Concurrent Engineering 95, 337348. </booktitle> <address> McLean, VA: </address> <institution> Concurrent Technologies Corp. </institution> <note> Also avail-able as UMASS CS TR-95-31. </note>
Reference-contexts: Research Applications TMS and the Design-to-Criteria scheduler, and its predecessor, Design-to-Time (Garvey & Lesser 1995), are being used in a wide range of research projects including cooperative information gathering (Oates, Nagendra Prasad, & Lesser 1994; Decker et al. 1995), distributed collaborative design <ref> (Decker & Lesser 1995) </ref>, and distributed situation assessment (Carver & Lesser 1995). The software architectures for the various research projects are related and based on a generic architecture consisting of scheduling, coordination, planning/problem solving, and execution/monitoring modules.
Reference: <author> Decker, K.; Lesser, V.; Prasad, M. N.; and Wagner, T. </author> <year> 1995. </year> <title> MACRON: an architecture for multi-agent cooper-ative information gathering. </title> <booktitle> In Proccedings of the CIKM95 Workshop on Intelligent Information Agents. </booktitle>
Reference-contexts: Research Applications TMS and the Design-to-Criteria scheduler, and its predecessor, Design-to-Time (Garvey & Lesser 1995), are being used in a wide range of research projects including cooperative information gathering (Oates, Nagendra Prasad, & Lesser 1994; Decker et al. 1995), distributed collaborative design <ref> (Decker & Lesser 1995) </ref>, and distributed situation assessment (Carver & Lesser 1995). The software architectures for the various research projects are related and based on a generic architecture consisting of scheduling, coordination, planning/problem solving, and execution/monitoring modules.
Reference: <author> Decker, K. S. </author> <year> 1995a. </year> <title> Environment Centered Analysis and Design of Coordination Mechanisms. </title> <type> Ph.D. Dissertation, </type> <institution> University of Massachusetts. </institution>
Reference-contexts: The scheduler, coordination, and problem solving components interact by exchanging TMS task structures and the execution subsystem receives as input schedules augmented with TMS features. In our work, the coordination module modulates <ref> (Decker 1995a) </ref> the local scheduler-centric control mechanism rather than replacing it. Cooperative information gathering is a multi-agent solution to search, discovery, and assimilation of information via the WWW.
Reference: <author> Decker, K. S. </author> <year> 1995b. </year> <title> TMS: A framework for analysis and design of coordination mechanisms. </title> <editor> In O'Hare, G., and Jennings, N., eds., </editor> <booktitle> Foundations of Distributed Artificial Intelligence. </booktitle> <publisher> Wiley Inter-Science. </publisher> <address> chapter 16. </address>
Reference-contexts: The input to the scheduling system is a model describing such task structures in the TMS <ref> (Decker 1995b) </ref> domain-independent hierarchical task modeling framework. In TMS primitive actions, called methods, are modeled statistically via discrete probability distributions in three dimensions, quality, cost, and duration. Quality is a deliberately abstract domain-independent concept that describes the contribution of a particular action to the overall problem solving objective.
Reference: <author> Fisher, D.; Soderland, S.; McCarthy, J.; Feng, F.; and Lehnert, W. </author> <year> 1996. </year> <title> Description of the UMass Systems as Used for MUC-6. </title> <booktitle> In Proceedings of the 6th Message Understanding Conference. </booktitle>
Reference-contexts: A typical information gathering task is to gather information to support a decision of whether to purchase WordPerfect, Microsoft Word, or WordPro, or some yet unidentified word processor. The project utilizes supporting technology from both the information retrieval (Callan, Croft, & Harding 1992) and information extraction <ref> (Fisher et al. 1996) </ref> disciplines to process retrieved documents. The inevitable advent of structured WWW data will also assist with the data interpretation task. The instantiation of the generic agent architecture for the information gathering project is shown in Figure 5.
Reference: <author> Garvey, A., and Lesser, V. </author> <year> 1995. </year> <title> Representing and scheduling satisficing tasks. </title> <editor> In Natarajan, S., ed., </editor> <title> Imprecise and Approximate Computation. </title> <publisher> Norwell, </publisher> <address> MA: </address> <publisher> Kluwer Academic Publishers. </publisher> <pages> 2334. </pages>
Reference-contexts: The schedules produced from the two different alternative set likewise have similar quality and duration characteristics. Research Applications TMS and the Design-to-Criteria scheduler, and its predecessor, Design-to-Time <ref> (Garvey & Lesser 1995) </ref>, are being used in a wide range of research projects including cooperative information gathering (Oates, Nagendra Prasad, & Lesser 1994; Decker et al. 1995), distributed collaborative design (Decker & Lesser 1995), and distributed situation assessment (Carver & Lesser 1995).
Reference: <author> Garvey, A.; Decker, K.; and Lesser, V. </author> <year> 1994. </year> <title> A negotiation-based interface between a real-time scheduler and a decision-maker. In AAAI Workshop on Models of Conflict Management. </title> <note> Also UMASS CS TR9408. </note>
Reference-contexts: An area of future work related to meta-analysis is the refinement of the interface between the scheduler and other complex problem solving components and/or humans. In teractive negotiation <ref> (Garvey, Decker, & Lesser 1994) </ref> be-tween the client and the scheduler could control and refine satisficing activities as they happen.
Reference: <author> Horvitz, E., and Lengyel, J. </author> <year> 1996. </year> <title> Flexible Rendering of 3D Graphics Under Varying Resources: Issues and Directions. </title> <booktitle> In Proceedings of the AAAI Symposium on Flexible Computation in Intelligent Systems. </booktitle>
Reference-contexts: This work falls into the general area of flexible computation (Horvitz, Cooper, & Heckerman 1989), but differs from most flexible computation approaches in its use of multiple actions for task achievement (one exception is <ref> (Horvitz & Lengyel 1996) </ref>), in its first class treatment of uncertainty, and in its ability to use uncertainty information in the selection of methods for execution.
Reference: <author> Horvitz, E.; Cooper, G.; and Heckerman, D. </author> <year> 1989. </year> <title> Reflection and action under scarce resources: Theoretical prin-ciples and empirical study. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: Schedule D is meets the criteria of a client who wants the highest possible quality, is willing to spend $10, and wants the gathered data in 15 minutes or less. This work falls into the general area of flexible computation <ref> (Horvitz, Cooper, & Heckerman 1989) </ref>, but differs from most flexible computation approaches in its use of multiple actions for task achievement (one exception is (Horvitz & Lengyel 1996)), in its first class treatment of uncertainty, and in its ability to use uncertainty information in the selection of methods for execution.
Reference: <author> Oates, T.; Nagendra Prasad, M. V.; and Lesser, V. R. </author> <year> 1994. </year> <title> Cooperative Information Gathering: A Distributed Problem Solving Approach. </title> <institution> Computer Science Technical Report 9466, University of Massachusetts. </institution> <note> To appear in Journal of Software Engineering, Special Issue on Developing Agent Based Systems, </note> <year> 1997. </year>
Reference: <author> Russell, S. J., and Zilberstein, S. </author> <year> 1991. </year> <title> Composing realtime systems. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 212217. </pages>
Reference: <author> Wagner, T.; Garvey, A.; and Lesser, V. </author> <year> 1997a. </year> <title> Complex Goal Criteria and Its Application in Design-to-Criteria Scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence. </booktitle> <institution> Also available as UMASS Department of Computer Science Technical Report TR-1997-10. </institution>
Reference-contexts: This methodology is effective because several aspects of the scheduling problem are soft and amenable to a satisficing approach. For example, portions of the client goal specification <ref> (Wagner, Garvey, & Lesser 1997a) </ref> express soft client objectives or soft constraints. Solutions often do not need to meet absolute requirements because clients cannot know a priori what types of solutions are possible for a given task structure due to the combinatorics.
Reference: <author> Wagner, T.; Garvey, A.; and Lesser, V. </author> <year> 1997b. </year> <title> Leveraging Uncertainty in Design-to-Criteria Scheduling. </title> <institution> UMASS Department of Computer Science Technical Report TR97-11. </institution>
Reference-contexts: Un- like most work in anytime algorithms that focuses on the propagation of uncertainty (Zilberstein 1996), we can also include uncertainty and uncertainty reduction in the goal criteria and focus work on reducing uncertainty when important to the client <ref> (Wagner, Garvey, & Lesser 1997b) </ref>. This ability stems from our task model's representation of alternative ways to perform various tasks.
Reference: <author> Zilberstein, S., and Lesser, V. </author> <year> 1996. </year> <title> Intelligent Information Gathering for Decision Models. </title> <institution> UMASS Department of Computer Science Technical Report TR-96-35. </institution>
Reference-contexts: In our work, uncertainty is a first class concept that both appears in the statistical descriptions of the available methods and is propagated and related as schedules and schedule approximations are generated. Un- like most work in anytime algorithms that focuses on the propagation of uncertainty <ref> (Zilberstein 1996) </ref>, we can also include uncertainty and uncertainty reduction in the goal criteria and focus work on reducing uncertainty when important to the client (Wagner, Garvey, & Lesser 1997b). This ability stems from our task model's representation of alternative ways to perform various tasks. <p> In the cooperative information gathering project, the high-level information gathering task, the goal criteria, and a portion of the resource constraints originate with the decision maker module. The decision maker can be any high-level problem solving entity or agent, e.g., humans or controllers based on decision theoretic inference networks <ref> (Zilberstein & Lesser 1996) </ref>. In this project, the execution subsystem and monitoring components are integrated with the problem solver.
Reference: <author> Zilberstein, S., and Russell, S. J. </author> <year> 1995. </year> <title> Optimal composi-tion of real-time systems. </title> <booktitle> Artificial Intelligence 79(2). </booktitle>
Reference: <author> Zilberstein, S. </author> <year> 1996. </year> <title> Using anytime algorithms in intelli-gent systems. </title> <journal> AI Magazine 17(3):7383. </journal>
Reference-contexts: In our work, uncertainty is a first class concept that both appears in the statistical descriptions of the available methods and is propagated and related as schedules and schedule approximations are generated. Un- like most work in anytime algorithms that focuses on the propagation of uncertainty <ref> (Zilberstein 1996) </ref>, we can also include uncertainty and uncertainty reduction in the goal criteria and focus work on reducing uncertainty when important to the client (Wagner, Garvey, & Lesser 1997b). This ability stems from our task model's representation of alternative ways to perform various tasks. <p> In the cooperative information gathering project, the high-level information gathering task, the goal criteria, and a portion of the resource constraints originate with the decision maker module. The decision maker can be any high-level problem solving entity or agent, e.g., humans or controllers based on decision theoretic inference networks <ref> (Zilberstein & Lesser 1996) </ref>. In this project, the execution subsystem and monitoring components are integrated with the problem solver.
Reference: <author> Zweben, M.; Daun, B.; Davis, E.; and Deale, M. </author> <year> 1994. </year> <title> Scheduling and rescheduling with iterative repair. In Zweben, </title> <editor> M., and Fox, M., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher> <address> chapter 8. </address>
Reference-contexts: This can be caused by an overconstrained problem, but also by complex task interactions that are glossed over by the alternative approximation and not considered by the action ordering heuristics. A secondary set of improvement <ref> (Zweben et al. 1994) </ref> heuristics act as a safety net to catch the errors that are correctable.
References-found: 20

