URL: ftp://ftp.cse.cuhk.edu.hk/pub/techreports/93/tr-93-8.ps.gz
Refering-URL: ftp://ftp.cs.cuhk.hk/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Scheduling Algorithms for a Chain-like Task System  
Author: Chan, Chi-Lok ,Gilbert, Young 
Keyword: bottleneck processor, chain-like task system, completion time, contiguity constraint, feasible length-K schedule, layered graph, merged mod ule, optimal schedule, schedule length, un-mergeable modules.  
Date: March 21, 1995  
Affiliation: The Chinese University of Hong Kong  
Abstract: The optimal allocation of a chain-like task system on the chain-like network computers was first presented by Bokhari with time complexity O(m 3 n)[1], where m and n denote the number of modules and the number of processors respectively. Sheu and Chiang improved it and gave an O(minfm; ngm 2 ) algorithm[2]. Hsu had further developed a two phase approach with the worst case time complexity of O(m+ (m 0 n) 2 n)[3] where m 0 denotes the number of the remaining modules after the merge phase. For all of these papers, none of them answers the decision version of this problem, that is whether there exists a schedule with schedule length less than a given deadline. In this paper, two algorithms are presented. The first one answers the decision problem and gives a feasible schedule if there exists one. It is an optimal algorithm with time complexity of O(m). The second one finds an optimal schedule in O(m+m 0 log m 0 +m 02 n 2 ) time using the first algorithm. It is shown that our approach is more efficient than Hsu's one if m 0 n = !( log n). Furthermore, our algorithm returns an optimal schedule which uses the minimal number of processors. p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Shahid H. Bokhari. </author> <title> Partitioning problems in parallel, pipelined, </title> <journal> and distributed computing. IEEE Transactions on Computers, </journal> <volume> 37 </volume> <pages> 48-57, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: 1 Introduction The problem we investigate in this paper is the allocation of a chain-like task system on the chain-like network computers which was first presented by Bokhari <ref> [1] </ref>. A chain-like task system consists of m modules scheduled on n processors. Each module is associated with an execution time and each module communicates with its neighboring modules with a communication cost (Fig. 1). <p> The optimal allocation problem is to find a schedule in which the bottleneck processor has the minimal execution time. Bokhari had presented an algorithm with time complexity O (m 3 n) <ref> [1] </ref>. Sheu and Chiang showed that a more general assignment problem can be solved with time complexity O (minfm; ngm 2 ) [2]. Hsu proposed an approach which is composed of two phases: merge phase and assignment phase [3]. <p> All of execution times and communication times are positive except that C 0;1 and C m;m+1 equal zero. 2. Adjacent modules must be assigned to adjacent processors or the same pro cessor, which is called contiguity constraint <ref> [1] </ref>. 3. If adjacent modules are assigned to the same processor, their communication (intra-communication) time is assumed to be zero. 4. The elapsed time required to complete the execution and communication for a module (may be a sequence of adjacent modules) on a processor is called completion time.
Reference: [2] <author> J.P. Sheu and Z.F. Chaing. </author> <title> Efficient allocation of chain-like task on chain-like network computers. </title> <journal> Information Processing Letters, </journal> <volume> 36 </volume> <pages> 241-245, </pages> <year> 1990. </year>
Reference-contexts: Bokhari had presented an algorithm with time complexity O (m 3 n) [1]. Sheu and Chiang showed that a more general assignment problem can be solved with time complexity O (minfm; ngm 2 ) <ref> [2] </ref>. Hsu proposed an approach which is composed of two phases: merge phase and assignment phase [3]. <p> The time complexity of the algorithm for the decision problem is O (m) where m is the number of modules in the system. This is an optimal algorithm which returns a feasible schedule if there exists one. For optimal schedule, Hsu has improved the Sheu and Chiang's algorithm <ref> [2] </ref> and solved this problem by a two phase algorithm with time complexity O (m + (m 0 n) 2 ) if m 0 &gt; n where m 0 is the number of modules after the merge phase [3]. If m 0 n, the time complexity is O (m).
Reference: [3] <author> C.C. Hsu. </author> <title> A two-phase approach for the optimal assignment of a chain-like task on a chain-like network computer. </title> <type> Technical report, </type> <institution> National Taiwan Institute of Technology, </institution> <year> 1993. </year> <month> 10 </month>
Reference-contexts: Sheu and Chiang showed that a more general assignment problem can be solved with time complexity O (minfm; ngm 2 ) [2]. Hsu proposed an approach which is composed of two phases: merge phase and assignment phase <ref> [3] </ref>. The time complexity of the merge phase is O (m) and the overall complexity is O (m+(m 0 n) 2 n) where m 0 denotes the number of the remaining modules after the merge phase (m 0 m). These three algorithms use a similar approach, a layered graph method. <p> Since each module is examined only once and there are m 0 modules (line 2), the time complexity of Algorithm 1 is O (m 0 ). For a mergeable chain-like task system 4 with m modules, O (m) time is needed for merging <ref> [3] </ref> and O (m 0 )(m 0 m) time is used for Algorithm 1, the overall time complexity is O (m). The following example illustrates the above algorithm for a chain-like task system with 4 modules and K equals 25. <p> We can construct a set, fl 0 , which contains all possible values of schedule length, By Hsu's result, we can only consider a chain-like task system with un-mergeable modules only <ref> [3] </ref> and fl 0 = fCM P ij : 1 i j m 0 g By Hsu's result, for m 0 un-mergeable modules scheduled on n processors, if m 0 n, we can obtain an optimal schedule by assigning one merged module to one processor [3]. <p> system with un-mergeable modules only <ref> [3] </ref> and fl 0 = fCM P ij : 1 i j m 0 g By Hsu's result, for m 0 un-mergeable modules scheduled on n processors, if m 0 n, we can obtain an optimal schedule by assigning one merged module to one processor [3]. On the other hand, if m 0 &gt; n, it can be shown that ,for any optimal schedule, there exists a bottleneck processor such that at most m 0 n + 1 modules have been scheduled on it. <p> By Hsu's algorithm <ref> [3] </ref>, all n processors must be utilized. The following diagrams show the difference, 8 In the first example, there is one large merged module (the 6th module) so that more than m 0 n + 1 modules can be scheduled on other processor (p1). <p> ) = O (m 0 log m 0 + m 02 n 2 ) As a result, the total time complexity of Algorithm 2 is T (m; n) = O (m + m 0 log m 0 + m 02 n 2 ) The time complexity of Hsu's algorithm is <ref> [3] </ref> T 0 (m; n) = O (m + (m 0 n) 2 n) Comparison between the two algorithms If m 0 n, Algorithm 2 is identical to Hsu's algorithm and the time complexity is O (m). <p> For optimal schedule, Hsu has improved the Sheu and Chiang's algorithm [2] and solved this problem by a two phase algorithm with time complexity O (m + (m 0 n) 2 ) if m 0 &gt; n where m 0 is the number of modules after the merge phase <ref> [3] </ref>. If m 0 n, the time complexity is O (m). All of the existing algorithms use a layered graph approach. In this paper, we use a new approach which is based on a searching strategy to find an optimal schedule.
Reference: [4] <author> Manuel Blum, Robert W. Floyd, Vaughan Pratt, Rivest Ronald L., and Robert E. Tarjan. </author> <title> Time bounds for selection. </title> <journal> Journal of Computer and System Science, </journal> <volume> 7(4) </volume> <pages> 448-461, </pages> <year> 1973. </year>
Reference: [5] <author> C.A.R. Hoare. </author> <title> Algorithm 63(partition) and algorithm 65(find). </title> <journal> Communication of ACM, </journal> <volume> 4(7) </volume> <pages> 321-322, </pages> <year> 1961. </year>
Reference: [6] <author> Robert W. Floyd and Ronald L. Rivest. </author> <title> Expected time bounds of selection. </title> <journal> Communication of ACM, </journal> <volume> 18(3) </volume> <pages> 165-172, </pages> <year> 1975. </year> <month> 11 </month>
References-found: 6

