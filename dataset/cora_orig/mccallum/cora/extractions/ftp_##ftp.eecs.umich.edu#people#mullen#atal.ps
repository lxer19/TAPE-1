URL: ftp://ftp.eecs.umich.edu/people/mullen/atal.ps
Refering-URL: http://ai.eecs.umich.edu/people/mullen/pubs.html
Root-URL: http://www.eecs.umich.edu
Email: fmullen,wellmang@umich.edu  
Title: Some Issues in the Design of Market-Oriented Agents  
Author: Tracy Mullen and Michael P. Wellman 
Address: 1101 Beal Avenue, Ann Arbor, MI 48109-2110 USA  
Affiliation: Artificial Intelligence Laboratory, University of Michigan  
Abstract: In a computational market, distributed market agents interact with other agents primarily through the exchange of goods and services. Thanks to a well-developed underlying economic framework, we can draw on a rich source of analytic tools and theoretical techniques for designing individual agents and predicting aggregate behavior. For many narrowly scoped static problems, design of a computational market is relatively straightforward. We consider some issues that arise in attempting to design computational economies for broadly scoped, dynamic environments. These issues include how to specify the goods and services being exchanged, how these market-oriented agents should set their exchangepol-icies, and how computational market mechanisms appropriate for idealized environments can be adapted to work in a larger class of non-ideal environments. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Agorics, Inc. </author> <title> Real-time video delivery with market-based resource allocation. </title> <type> Technical Report ADd004P, </type> <institution> Agorics, Inc., </institution> <year> 1994. </year>
Reference: 2. <author> William P. Birmingham, Karen M. Drabenstott, Carolyn O. Frost, Amy J. Warner, and Katherine Willis. </author> <title> The University of Michigan Digital Library: This is not your father's library. </title> <booktitle> In Proceedings of Digital Libraries '94, </booktitle> <pages> pages 53-60, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Consumers in the computational economy correspond to end users of information services, and producers correspond to companies, individuals, or software agents supplying these services. An example of such an environment is the University of Michigan Digital Library, (UMDL) <ref> [2, 3] </ref>, which aims to provide end users with access to a multitude of highly distributed and constantly changing information sources and services. The design of UMDL is based on a distributed agent architecture, depicted in Figure 1. The users in this figure users collections mediators Fig. 1.
Reference: 3. <author> William P. Birmingham, Edmund H. Durfee, Tracy Mullen, and Michael P. Wellman. </author> <title> The distributed agent architecture of the University of Michigan Digital Library (extended abstract). </title> <booktitle> In AAAI Spring Symposium on Information Gathering in Heterogeneous, Distributed Environments, </booktitle> <address> Stanford, CA, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Consumers in the computational economy correspond to end users of information services, and producers correspond to companies, individuals, or software agents supplying these services. An example of such an environment is the University of Michigan Digital Library, (UMDL) <ref> [2, 3] </ref>, which aims to provide end users with access to a multitude of highly distributed and constantly changing information sources and services. The design of UMDL is based on a distributed agent architecture, depicted in Figure 1. The users in this figure users collections mediators Fig. 1.
Reference: 4. <author> Nathaniel Rockwood Bogan. </author> <title> Economic allocation of computation time with computation markets. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, Department of Electrical Engineering and Computer Science, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Areas where the market-oriented programming ap-proach has been applied to date include transportation planning [32], distributed engineering design [35], and allocation of computational resources <ref> [4, 10, 18] </ref>. Although experience with the approach is still limited, some general understanding of the technique's characteristics is beginning to emerge [33]. 2.2 Information Network Example One natural application of computational economies is to networked information services, which are highly distributed and face significant resource allocation problems.
Reference: 5. <author> John Cheng and Michael P. Wellman. </author> <title> The WALRAS algorithm: A convergent distributed implementation of general-equilibrium outcomes. </title> <note> In preparation. </note>
Reference-contexts: Since the prices for those other goods are simultaneously undergoing price changes themselves, it is clear that the bidding process must be iterative. 2 Given a few technical assumptions, the computational economy will indeed eventually converge to an equilibrium <ref> [5] </ref>. Discussion of these assumptions and computational properties can be found elsewhere. In this paper we focus on one of these assumptions, namely that the agents must be rational. 3 Rational Agents It is inherent in the economic perspective that the participating entities be conceived as rational agents.
Reference: 6. <author> Scott H. Clearwater, </author> <title> editor. Market-Based Control: A Paradigm for Distributed Resource Allocation. </title> <publisher> World Scientific, </publisher> <year> 1995. </year>
Reference-contexts: One metaphor gaining increasing currency is that of a collection of distributed agents as an economic system [15]. Numerous projects have applied market mechanisms to particular problems in distributed resource allocation <ref> [6] </ref>. In our work, we have been applying the economic metaphor literally, conceiving of the market-price system as an architecture for multiagent systems. In this approach, agents are participants in a computational economy, interacting in the market to further their own interests.
Reference: 7. <author> Scott H. Clearwater, Rick Costanza, Mike Dixon, and Brian Schroeder. </author> <title> Saving energy using market-based control. </title> <booktitle> In Clearwater [6]. </booktitle>
Reference: 8. <author> Randall Davis and Reid G. Smith. </author> <title> Negotiation as a metaphor for distributed problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 20 </volume> <pages> 63-109, </pages> <year> 1983. </year>
Reference: 9. <author> Daniel C. Dennett. </author> <title> Intentional systems. </title> <editor> In John Haugeland, editor, </editor> <title> Mind Design. </title> <publisher> MIT Press, </publisher> <year> 1981. </year>
Reference-contexts: The key idea is that agent rationality makes it more convenient to design systems built of agents. Why should this be true? For the same reason that the rational-agent perspective (or as Dennett calls it, the intentional stance <ref> [9] </ref>) is often the simplest and most accurate way to characterize a complex computational system. Furthermore, getting the agents to believe or want particular things may be the most direct way to influence their behavior.
Reference: 10. <author> Jon Doyle. </author> <title> A reasoning economy for planning and replanning. </title> <booktitle> In Technical Papers of the ARPA Planning Initiative Workshop, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: Areas where the market-oriented programming ap-proach has been applied to date include transportation planning [32], distributed engineering design [35], and allocation of computational resources <ref> [4, 10, 18] </ref>. Although experience with the approach is still limited, some general understanding of the technique's characteristics is beginning to emerge [33]. 2.2 Information Network Example One natural application of computational economies is to networked information services, which are highly distributed and face significant resource allocation problems.
Reference: 11. <author> Donald F. Ferguson, Christos Nikolaou, Jakka Sairamesh, and Yechiam Yemini. </author> <title> Economic models for allocating resources in computer systems. </title> <booktitle> In Clearwater [6]. </booktitle>
Reference: 12. <author> P. J. Gmytrasiewicz. </author> <title> On reasoning about other agents. </title> <editor> In M. Wooldridge, J. P. Muller, and M. Tambe, editors, </editor> <booktitle> Intelligent Agents Volume II Proceedings of the 1995 Workshop on Agent Theories, Architectures, and Languages (ATAL-95), Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> (In this volume). </note>
Reference-contexts: Indeed, the quest to build a rational agency can be seen as a common thread throughout the field of AI [21]. In fact, several papers in this volume are based on the notion of rational agency, including <ref> [12, 29, 27] </ref>. Why should we be concerned with rational computational agents? In addressing this question, we start from the most basic view of what computation is for.
Reference: 13. <author> Steve Hanks, Stuart Russell, and Michael P. Wellman, </author> <title> editors. </title> <booktitle> AAAI Spring Symposium on Decision-Theoretic Planning. </booktitle> <publisher> AAAI Press, </publisher> <month> March </month> <year> 1994. </year>
Reference-contexts: The name for this enterprise is decision-theoretic planning <ref> [13, 31] </ref>. Just as decision theory is an appropriate abstraction for single-agent behavior, economics can provide a framework for decentralization of decision making across rational agents. The key idea is that agent rationality makes it more convenient to design systems built of agents. <p> Despite the centrality of decision-theoretic rationality in our view of computational economies, at present we have little to say (beyond ideas in the current literature <ref> [13, 17] </ref>) about how to make economic agents rational in the decision-theoretic sense. The reason is that there is no difference in the problem of achieving computational rationality in this context compared to any other context.
Reference: 14. <author> Kieran Harty and David Cheriton. </author> <title> A market approach to operating system memory allocation. </title> <booktitle> In Clearwater [6]. </booktitle>
Reference: 15. <author> Bernardo A. Huberman and Tad Hogg. </author> <title> Distributed computation as an economic system. </title> <journal> Journal of Economic Perspectives, </journal> <volume> 9(1) </volume> <pages> 141-152, </pages> <year> 1995. </year>
Reference-contexts: However, the distributed agent approach does present additional challenges, namely how to determine at design time how well the various possible configurations of agents and available resources will achieve our desired results. One metaphor gaining increasing currency is that of a collection of distributed agents as an economic system <ref> [15] </ref>. Numerous projects have applied market mechanisms to particular problems in distributed resource allocation [6]. In our work, we have been applying the economic metaphor literally, conceiving of the market-price system as an architecture for multiagent systems.
Reference: 16. <author> James F. Kurose and Rahul Simha. </author> <title> A microeconomic approach to optimal resource allocation in distributed computer systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(5) </volume> <pages> 705-717, </pages> <month> May </month> <year> 1989. </year>
Reference: 17. <editor> Joerg Mueller et al., editors. </editor> <booktitle> ECAI Workshop on Decision Theory for DAI Applications, </booktitle> <year> 1994. </year> <note> Unpublished working notes. </note>
Reference-contexts: Despite the centrality of decision-theoretic rationality in our view of computational economies, at present we have little to say (beyond ideas in the current literature <ref> [13, 17] </ref>) about how to make economic agents rational in the decision-theoretic sense. The reason is that there is no difference in the problem of achieving computational rationality in this context compared to any other context.
Reference: 18. <author> Tracy Mullen and Michael P. Wellman. </author> <title> A simple computational economy for network information services. </title> <booktitle> In First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 283-289, </pages> <address> San Francisco, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Areas where the market-oriented programming ap-proach has been applied to date include transportation planning [32], distributed engineering design [35], and allocation of computational resources <ref> [4, 10, 18] </ref>. Although experience with the approach is still limited, some general understanding of the technique's characteristics is beginning to emerge [33]. 2.2 Information Network Example One natural application of computational economies is to networked information services, which are highly distributed and face significant resource allocation problems. <p> Thus, depending on design requirements, goods may either be decomposed according to various properties such as location, quality, and timeliness, or else they can be combined to hide relatively unimportant distinctions. For example, consider the goods in a simple network information services economy <ref> [18] </ref>, which modeled provision of a single service (a weather service, called Blue-Skies [22]), with a single service level, to several sites.
Reference: 19. <author> Allen Newell. </author> <title> The knowledge level. </title> <journal> Artificial Intelligence, </journal> <volume> 18 </volume> <pages> 87-127, </pages> <year> 1982. </year>
Reference-contexts: Indeed, the rationality abstraction is one of the main features distinguishing economics from other social science disciplines. In that sense economics and artificial intelligence are natural allies, as AI is the branch of computer science that takes the rationality abstraction (viewing computational systems at the knowledge level <ref> [19] </ref>) seriously. Indeed, the quest to build a rational agency can be seen as a common thread throughout the field of AI [21]. In fact, several papers in this volume are based on the notion of rational agency, including [12, 29, 27].
Reference: 20. <author> Jeffrey S. Rosenschein and Gilad Zlotkin. </author> <title> Rules of Encounter: Designing Conventions for Automated Negotiation among Computers. </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: At the other end of the spectrum (the distributed agent approach), rather than specify the required behavior under given resources, we design protocols or mechanisms <ref> [20] </ref> whereby a set of relatively autonomous software modules can, through their interaction and run-time allocation of resources, achieve some desirable aggregate behavior using available system resources. This second approach has several advantages. It is more flexible, allowing for a dynamically changing configuration of agents.
Reference: 21. <author> Stuart Russell and Peter Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Indeed, the quest to build a rational agency can be seen as a common thread throughout the field of AI <ref> [21] </ref>. In fact, several papers in this volume are based on the notion of rational agency, including [12, 29, 27]. Why should we be concerned with rational computational agents? In addressing this question, we start from the most basic view of what computation is for.
Reference: 22. <author> Perry J. Samson, Ken Hay, and Jeffrey Ferguson. Blue-skies: </author> <title> Curriculum development for k-12 education. </title> <booktitle> In American Meterological Society Conference on Interactive Information and Processing Systems, </booktitle> <address> Nashville, TN, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: For example, consider the goods in a simple network information services economy [18], which modeled provision of a single service (a weather service, called Blue-Skies <ref> [22] </ref>), with a single service level, to several sites. In this model, we chose to represent an amalgamation of network characteristics such as throughput and reliability, which were not important distinctions for this economy, as a single Network Resource good.
Reference: 23. <author> Tuomas Sandholm. </author> <title> An implementation of the contract net protocol based on marginal cost calculations. </title> <booktitle> In Proceedingsof the National Conferenceon Artificial Intelligence, </booktitle> <pages> pages 256-262, </pages> <address> Washington, DC, 1993. </address> <publisher> AAAI. </publisher>
Reference: 24. <author> Yoav Shoham. </author> <title> Agent-oriented programming. </title> <journal> Artificial Intelligence, </journal> <volume> 60 </volume> <pages> 51-92, </pages> <year> 1993. </year>
Reference-contexts: Furthermore, getting the agents to believe or want particular things may be the most direct way to influence their behavior. This is a primary motivation for Shoham's agent-oriented programming approach <ref> [24] </ref>, where the agents interact through speech-act communication. In the economic context, it corresponds to the methodology of mechanism design, or achieving overall objectives by incentive engineering. 2 Unless, of course, there is only one good, in which case no iteration is necessary.
Reference: 25. <author> John B. Shoven and John Whalley. </author> <title> Applying General Equilibrium. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: Since these computational economies are instances of general-equilibrium systems, the analytical tools and results of general equilibrium theory are directly applicable <ref> [25, 28] </ref>.
Reference: 26. <author> Michael Stonebraker, Robert Devine, Marcel Kornacker, Witold Litwin, Avi Pfeffer, Adam Sah, and Carl Staelin. </author> <title> An economic paradigm for query processing and data migration in Mariposa. </title> <booktitle> In Third International Conf. on Parallel and Distributed Information Systems, </booktitle> <address> Las Vegas, NV, </address> <year> 1994. </year>
Reference: 27. <author> B. van Linder, W. van der Hoek, and J. J. Ch. Meyer. </author> <title> How to motivate your agents. </title> <editor> In M. Wooldridge, J. P. Muller, and M. Tambe, editors, </editor> <booktitle> Intelligent Agents Volume II Proceedings of the 1995 Workshop on Agent Theories, Architectures, and Languages (ATAL-95), Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> (In this volume). </note>
Reference-contexts: Indeed, the quest to build a rational agency can be seen as a common thread throughout the field of AI [21]. In fact, several papers in this volume are based on the notion of rational agency, including <ref> [12, 29, 27] </ref>. Why should we be concerned with rational computational agents? In addressing this question, we start from the most basic view of what computation is for.
Reference: 28. <author> Hal R. </author> <title> Varian. Microeconomic Analysis. </title> <editor> W. W. </editor> <publisher> Norton & Company, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1984. </year>
Reference-contexts: Since these computational economies are instances of general-equilibrium systems, the analytical tools and results of general equilibrium theory are directly applicable <ref> [25, 28] </ref>.
Reference: 29. <author> J. M. Vidal and E. H. Durfee. </author> <title> Recursive agent modeling using limited rationality. </title> <editor> In M. Wooldridge, J. P. Muller, and M. Tambe, editors, </editor> <booktitle> Intelligent Agents Volume II Proceedings of the 1995 Workshop on Agent Theories, Architectures, and Languages (ATAL-95), Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> (In this volume). </note>
Reference-contexts: Indeed, the quest to build a rational agency can be seen as a common thread throughout the field of AI [21]. In fact, several papers in this volume are based on the notion of rational agency, including <ref> [12, 29, 27] </ref>. Why should we be concerned with rational computational agents? In addressing this question, we start from the most basic view of what computation is for.
Reference: 30. <author> Carl A. Waldspurger, Tad Hogg, Bernardo A. Huberman, Jeffrey O. Kephart, and Scott Stor--netta. Spawn: </author> <title> A distributed computational economy. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 18 </volume> <pages> 103-117, </pages> <year> 1992. </year>
Reference: 31. <author> Michael P. Wellman. </author> <title> Challenges of decision-theoretic planning. </title> <booktitle> In AAAI Spring Symposium on Foundations of Automatic Planning, </booktitle> <pages> pages 156-160, </pages> <year> 1993. </year>
Reference-contexts: The name for this enterprise is decision-theoretic planning <ref> [13, 31] </ref>. Just as decision theory is an appropriate abstraction for single-agent behavior, economics can provide a framework for decentralization of decision making across rational agents. The key idea is that agent rationality makes it more convenient to design systems built of agents.
Reference: 32. <author> Michael P. Wellman. </author> <title> A market-oriented programming environment and its application to distributed multicommodity flow problems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 1-22, </pages> <year> 1993. </year>
Reference-contexts: For example, in some well-defined circumstances, one can demonstrate that markets produce efficient allocations with minimal communication overhead. In that sense, we can sometimes reason about the mechanism in a principled way to decide whether it is appropriate. Indeed, one of the primary motivations of this market-oriented programming approach <ref> [32, 33] </ref> is to exploit the analytical framework of economic theory as a design tool for multiagent systems. 1 The idea of market-oriented programming is to solve a distributed resource allocation problem by formulating a computational economy and finding its competitive equilibrium. <p> Areas where the market-oriented programming ap-proach has been applied to date include transportation planning <ref> [32] </ref>, distributed engineering design [35], and allocation of computational resources [4, 10, 18].
Reference: 33. <author> Michael P. Wellman. </author> <title> Market-oriented programming: Some early lessons. </title> <booktitle> In Clearwater [6]. </booktitle>
Reference-contexts: For example, in some well-defined circumstances, one can demonstrate that markets produce efficient allocations with minimal communication overhead. In that sense, we can sometimes reason about the mechanism in a principled way to decide whether it is appropriate. Indeed, one of the primary motivations of this market-oriented programming approach <ref> [32, 33] </ref> is to exploit the analytical framework of economic theory as a design tool for multiagent systems. 1 The idea of market-oriented programming is to solve a distributed resource allocation problem by formulating a computational economy and finding its competitive equilibrium. <p> Areas where the market-oriented programming ap-proach has been applied to date include transportation planning [32], distributed engineering design [35], and allocation of computational resources [4, 10, 18]. Although experience with the approach is still limited, some general understanding of the technique's characteristics is beginning to emerge <ref> [33] </ref>. 2.2 Information Network Example One natural application of computational economies is to networked information services, which are highly distributed and face significant resource allocation problems. In information network environments, the exchange of various information services is the primary activity.
Reference: 34. <author> Michael P. Wellman. </author> <title> Rationality in decision machines. </title> <booktitle> In AAAI Fall Symposium on Rational Agency, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: Our fundamental premise is that much of what computers do and will be called on to do in the future is best viewed as decision making, and that to effectively control the behavior of these decision machines <ref> [34] </ref>, we require a body of engineering principles that expressly relates the structure and content of a computational system to the nature and value of the decisions it produces.
Reference: 35. <author> Michael P. Wellman. </author> <title> A computational market model for distributed configuration design. AI EDAM, to appear. This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Areas where the market-oriented programming ap-proach has been applied to date include transportation planning [32], distributed engineering design <ref> [35] </ref>, and allocation of computational resources [4, 10, 18].
References-found: 35

