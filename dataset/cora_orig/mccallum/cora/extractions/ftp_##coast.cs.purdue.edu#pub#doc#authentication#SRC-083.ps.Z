URL: ftp://coast.cs.purdue.edu/pub/doc/authentication/SRC-083.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ9.html
Root-URL: http://www.cs.purdue.edu
Author: BUTLER LAMPSON, MARTN ABADI, MICHAEL BURROWS, and EDWARD WOBBER 
Keyword: General Terms: Security, Theory, Verification Additional Key Words and Phrases: Certification authority, delegation, group, interprocess com munication, key distribution, loading programs, path name, principal, role, secure channel, speaks for, trusted computing base  
Affiliation: Digital Equipment Corporation  
Note: Theory and Practice  
Abstract: Lampson et al, Authentication in Distributed Systems 1 A preliminary version of this paper appeared in the Proceedings of the Thirteenth ACM Sympos - ium on Operating Systems Principles. Authors address: Digital Equipment Corp., Systems Research Center, 130 Lytton Ave, Palo Alto, CA 94301. Internet address: lampson@src.dec.com. Permission to copy without fee all of part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 1992 ACM 07342071/92/1100-0000 $01.50 Authentication in Distributed Systems: We describe a theory of authentication and a system that implements it. Our theory is based on the notion of principal and a speaks for relation between principals. A simple principal either has a name or is a communication channel; a compound principal can express an adopted role or delegated authority. The theory shows how to reason about a principals authority by deducing the other principals that it can speak for; authenticating a channel is one important application. We use the theory to explain many existing and proposed security mechanisms. In particular, we describe the system we have built. It passes principals efficiently as arguments or results of re - mote procedure calls, and it handles public and shared key encryption, name lookup in a large name space, groups of principals, program loading, delegation, access control, and revocation. Categories and Subject Descriptors: C.2.4 [ Computer-Communication Networks ]: General Security and Protection , Distributed Systems; D.4.6 [ Operating Systems ]: Security and Protec - tion access controls, authentication, cryptographic controls; K.6.5 [ Management of Comput - ing and Information Systems ]: Security and Protectionauthentication ; E.3 [ Data]: Data Encryption 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> ABADI, M., B URROWS , M., K AUFMAN , C., AND LAMPSON, B. </author> <title> Authentication and delegation with smart-cards. </title> <booktitle> In Theoretical Aspects of Computer Software , LNCS 526, </booktitle> <publisher> Springer, </publisher> <year> 1991, </year> <pages> pp. 326-345. </pages> <institution> Also Res. </institution> <type> Rep. 67, </type> <institution> Systems Research Center, Digital Equipment Corp., Palo Alto, Calif., </institution> <month> Oct. </month> <year> 1990. </year> <note> To appear in Science of Computer Programming </note> . 
Reference-contexts: When B wants to speak for B for A it can quote A and appeal to the joint authority rule (P12). This is simpler but less explicit. Lampson et al, Authentication in Distributed Systems 32 protocols are discussed elsewhere <ref> [1, 26, 27] </ref>. Hence the users delegation to the workstation at login must have a rather long lifetime, so that it doesnt need to be refreshed very often.
Reference: 2. <author> ABADI, M., B URROWS, M., L AMPSON , B., AND PLOTKIN , G. </author> <title> A calculus for access control in distributed systems. </title> <booktitle> In Advances in Cryptology Crypto 91 , LNCS 576, </booktitle> <publisher> Springer, </publisher> <year> 1992, </year> <pages> pp. </pages> <editor> Lampson et al, </editor> <title> Authentication in Distributed Systems 46 1-23. Also Res. </title> <type> Rep. 70, </type> <institution> Systems Research Center, Digital Equipment Corp., Palo Alto, Calif., </institution> <month> March </month> <year> 1991. </year> <note> To appear in ACM Trans. </note> <institution> Program. Lang. Syst. </institution>
Reference-contexts: THEORY Our theory deals with principals and statements; all principals can do is to Lampson et al, Authentication in Distributed Systems 7 say things, and statements are the things they say. Here we present the es - sentials of the theory, leaving a fuller description to another paper <ref> [2] </ref>. A reader who knows the authentication logic of Burrows, Abadi, and Needham [4] will find some similarities here, but its scope is narrower and its treatment of the matters within that scope correspondingly more detailed. For in stance, secrecy and timeliness are fundamental there; neither appears in our theory. <p> The intuitive idea of delegation is imprecise, but our formal treatment gives Lampson et al, Authentication in Distributed Systems 31 it a precise meaning; we discuss other possible meanings elsewhere <ref> [2] </ref>. We express delegation with one more operator on principals, B for A. Intuitively this principal is B acting on behalf of A, who has delegated to B the right to do so. <p> So A has to be able to do Ds job; in other words, A fi D|A. Formally, we add the axioms: B for A = B|A D|A (D5) Now (D1)(D4) become theorems. So do some other statements of more debatable merit. Our other paper goes into more detail <ref> [2] </ref>. 25 Using D, A can delegate to B by making A says B|A fi D|A. When B wants to speak for B for A it can quote A and appeal to the joint authority rule (P12). This is simpler but less explicit. <p> One role or properPrincipal A speaks for another B if there is a chain of premises A = P 0 fi ... fi P n = B. Another paper discusses algorithms for access checking in more detail <ref> [2] </ref>. Our theory of authentication is compatible with other theories of access con - trol, for example, one in which the order of delegation hops (operands of for ) is less important. The inputs to the algorithm are the ACL , the requesting principal, and the premises.
Reference: 3. <author> BIRRELL , A., L AMPSON , B., N EEDHAM , R., AND SCHROEDER, M. </author> <title> Global authentication without global trust. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy (Oakland, Calif., </booktitle> <month> May </month> <year> 1986), </year> <pages> pp. 223-230. </pages>
Reference-contexts: Figure 6 shows the path from /dec/burrows to /mit/clark ; the numbers stand for public keys. The basic idea is described in Birrell et al. <ref> [3] </ref>; it is also implemented in SPX [27]. We can formalize this idea with a new kind of compound principal, written P except N, and some axioms that define its meaning.
Reference: 4. <author> BURROWS, M., A BADI, M., AND NEEDHAM , R. </author> <title> A logic of authentication. </title> <journal> ACM Trans. Comput. Syst. </journal> <volume> 8 , 1 (Feb. </volume> <year> 1990), </year> <pages> 18-36. </pages> <note> An expanded version appeared in Proc. Royal Society A 426, 1871 (Dec. </note> <year> 1989), </year> <title> 233-271 and as Res. </title> <type> Rep. 39, </type> <institution> Systems Research Center, Digital Equipment Corp., Palo Alto, Calif., </institution> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: Here we present the es - sentials of the theory, leaving a fuller description to another paper [2]. A reader who knows the authentication logic of Burrows, Abadi, and Needham <ref> [4] </ref> will find some similarities here, but its scope is narrower and its treatment of the matters within that scope correspondingly more detailed. For in stance, secrecy and timeliness are fundamental there; neither appears in our theory. <p> It also uses the fact that the shared key channel between two nodes depends on two random numbers, one from each node; therefore each node knows that any message on the channel was sent since the node chose its random number. The details are not new <ref> [4] </ref>, and we omit them here. 5.2 Path Names and Multiple Authorities In a large system there cant be just one certification authorityits adminis - tratively impractical, and there may not be anyone who is trusted by every - body in the system.
Reference: 5. <author> CCITT. </author> <title> Information Processing Systems Open Systems Interconnection The Directory Authentication Framework . CCITT 1988 Recommendation X.509. </title> <note> Also ISO/IEC 9594-8:1989. </note>
Reference-contexts: A straightforward alternative to an on line agent that asserts O|K a says K a fi O|K a is a blacklist agent or recent certificate that asserts all of CA s certificates are valid except the ones for the following keys: K 1 , K 2 , ... <ref> [5] </ref>. For obvious reasons this must be said in a single mouthful. Such revocation lists are used with Internet privacy-enhanced mail. Changing a principals key is easy. The principal chooses a new key pair and tells the certification authority its public key. <p> C mit | clark says C clark fi /mit/clark except .. The certificates quoting .. can be thought of as parent certificates pointing upward in the tree, those quoting mit and clark as child certificates pointing downward. They are similar to the certificates specified by CCITT X.509 <ref> [5] </ref>.
Reference: 6. <author> COMBA , P. </author> <title> Exponentiation cryptosystems on the IBM PC . IBM Syst. </title> <journal> J. </journal> <volume> 28 , 4 (Jul. </volume> <year> 1990), </year> <pages> 526-538. </pages>
Reference-contexts: But public key en - cryption is not normally used in this way. Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K [25] .5 K <ref> [6] </ref> 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K [22] DES 1.2 G [11] 400 K [6] Software uses a 64 KB table per key encryption algorithm. <p> But public key en - cryption is not normally used in this way. Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K [25] .5 K <ref> [6] </ref> 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K [22] DES 1.2 G [11] 400 K [6] Software uses a 64 KB table per key encryption algorithm. <p> Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K [25] .5 K <ref> [6] </ref> 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K [22] DES 1.2 G [11] 400 K [6] Software uses a 64 KB table per key encryption algorithm.
Reference: 7. <author> DAVIS , D. AND SWICK , R. </author> <title> Network security via private-key certificates. </title> <journal> ACM Oper. Syst. Rev. </journal> <volume> 24 , 4 (Oct. </volume> <year> 1990), </year> <pages> 64-67. </pages>
Reference-contexts: The simulation requires the relay to be working and not overloaded, and all other schemes that use shared keys share this property as well. Davis and Swick give a more detailed account of the scheme from a some - what different point of view <ref> [7] </ref>. 4.4 Node-to-Node Secure Channels A node is a machine running an operating system, connected to other ma - chines by wires that are not physically secure.
Reference: 8. <author> DENNING , D. </author> <title> A lattice model of secure information flow. </title> <journal> Commun. </journal> <note> ACM 19 , 5 (May 1976), 236-243. </note>
Reference-contexts: Heterogeneity : The system may have different kinds of channels that are secured in different ways. Some examples are encrypted messages, physi - 1 The access control model is less useful for availability, which is not considered in this paper. Information flow <ref> [8] </ref> is an alternative model which is also not considered, so we have nothing to say about mandatory security policies that can enforce nondisclosure of secrets.
Reference: 9. <institution> DEPARTMENT OF DEFENSE. Trusted Computer System Evaluation Criteria . DOD 5200.28-STD , 1985. </institution>
Reference-contexts: Lampson et al, Authentication in Distributed Systems 6 idea lets a short name stand for a long one; this pays if its used often. Another important concept is the trusted computing base or TCB <ref> [9] </ref>, a small amount of software and hardware that security depends on and that we distinguish from a much larger amount that can misbehave without affecting security. Gathering information to justify an access control decision may re - quire searching databases and communicating with far-flung servers.
Reference: 10. <author> DIFFIE , W. AND HELLMAN, M. </author> <title> New directions in cryptography. </title> <journal> IEEE Trans. Inf. Theor. </journal> <volume> IT - 22 , 6 (Nov. </volume> <year> 1976), </year> <pages> 644-654. </pages>
Reference-contexts: The checksum should provide enough redundancy to make it very unlikely that decrypting with K will succeed on a message not produced by encrypting with K 1 . Achieving this property requires some care <ref> [10, 28] </ref>. For integrity it is enough to encrypt a digest of the message. The digest is Lampson et al, Authentication in Distributed Systems 12 the result of applying a function Digest to the message. <p> In this respect our system differs from the Needham-Schroeder proto - col and its descendants [15, 19, 26], which combine key exchange with au - thentication, but is similar to the Diffie-Hellman key exchange protocol <ref> [10] </ref>. We set up a node-to-node channel between nodes A and B in three phases; see Table III. In the first phase each node sends its public RSA key to the other node.
Reference: 11. <author> EBERLE , H. AND THACKER , C. </author> <title> A 1 Gbit/second GaAs DES chip. </title> <booktitle> In Proceedings of the IEEE 1992 Custom Integrated Circuit Conference (Boston, </booktitle> <address> Mass., </address> <month> May </month> <year> 1992), </year> <pages> pp. </pages> <month> 19.7.1-19.7.4. </month>
Reference-contexts: Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K [25] .5 K [6] 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K [22] DES 1.2 G <ref> [11] </ref> 400 K [6] Software uses a 64 KB table per key encryption algorithm.
Reference: 12. <author> GASSER, M., G OLDSTEIN , A., KAUFMAN , C., AND LAMPSON , B. </author> <title> The Digital distributed sys - tem security architecture. </title> <booktitle> In Proceedings of the 12th National Computer Security Conference ( Baltimore, </booktitle> <address> Md., </address> <month> Oct. </month> <year> 1989), </year> <pages> pp. 305-319. </pages>
Reference-contexts: Pull: The receiver looks up A in some database to get credentials for A when it needs to authenticate the sender; we call this name lookup . Our system uses the pull method, like DSSA <ref> [12] </ref> and unlike most other au - thentication protocols. But the credentials dont depend on the method. <p> R for all R Roles (R1) A fi A as R for all R Roles (R2) as is commutative and idempotent on roles (R3) Delegation B for A = B|A D|A (D5) ACKNOWLEDGEMENTS Many of the ideas discussed here were developed as part of the Digital Distributed System Security Architecture <ref> [12, 13, 17] </ref> or were greatly influ - enced by it. Morrie Gasser, Andy Goldstein, and Charlie Kaufman made ma - jor contributions to that work.
Reference: 13. <author> GASSER, M., AND MCDERMOTT , E. </author> <title> An architecture for practical delegation in a distributed system. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy (Oakland, Calif., </booktitle> <month> May </month> <year> 1990), </year> <pages> pp. 20-30. </pages>
Reference-contexts: R for all R Roles (R1) A fi A as R for all R Roles (R2) as is commutative and idempotent on roles (R3) Delegation B for A = B|A D|A (D5) ACKNOWLEDGEMENTS Many of the ideas discussed here were developed as part of the Digital Distributed System Security Architecture <ref> [12, 13, 17] </ref> or were greatly influ - enced by it. Morrie Gasser, Andy Goldstein, and Charlie Kaufman made ma - jor contributions to that work.
Reference: 14. <author> HERBISON, B. </author> <title> Low cost outboard cryptographic support for SILS and SP 4. </title> <booktitle> In Proceedings of the 13th National Computer Security Conference ( Baltimore, </booktitle> <address> Md., </address> <month> Oct. </month> <year> 1990), </year> <pages> pp. 286-295. </pages>
Reference-contexts: 3 K = Hash (J a , J b ) , K a = Encrypt (K am , K) K b K ab key identifier for the channel, map the identifier to a DES key, and decrypt the packet on the fly as it moves from the wire into memory <ref> [14] </ref>. This makes it practical to secure all the communication in a distributed system, since en - cryption does not reduce the bandwidth or much increase the latency. Our key identifier is the channel key encrypted by a master key that only the receiving node knows.
Reference: 15. <author> KOHL , J., N EUMAN , C., AND STEINER , J. </author> <title> The Kerberos network authentication service. </title> <type> Version 5, draft 3, </type> <institution> Project Athena, </institution> <address> MIT , Cambridge, Mass., </address> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: In this respect our system differs from the Needham-Schroeder proto - col and its descendants <ref> [15, 19, 26] </ref>, which combine key exchange with au - thentication, but is similar to the Diffie-Hellman key exchange protocol [10]. We set up a node-to-node channel between nodes A and B in three phases; see Table III. <p> Finally, the old certificates can be removed from the database. During the entire period that the new key is being distributed, cer - tificates signed by both keys must be in the database. The formalization of Figure 5 also describes the Kerberos protocol <ref> [15, 26] </ref>. Kerberos uses shared rather than public key encryption. Although its design - ers didnt know about the relay simulation described in Section 4.3, the proto - col can be explained as an application of that idea to public key certificates. <p> It is justified by the notion that there are only a few servers and they are friendly with R, but its unfortunate because asymmetry is bad and because R has to have some state for each B. There is an option (called ENC -TKT-IN -SKEY in <ref> [15] </ref>) for A to get K ca says K b br fi B from B and give it to R, which can now be symmetric and stateless. 17 The ticket lacks the K ca r says that a true relay would include because in Kerberos R han dles only statements from
Reference: 16. <author> LAMPSON , B. </author> <title> Protection. </title> <journal> ACM Oper. Syst. Rev. </journal> <volume> 8 , 1 (Jan. </volume> <year> 1974), </year> <pages> 18-24. </pages>
Reference-contexts: 1. INTRODUCTION Most computer security uses the access control model <ref> [16] </ref>, which provides a basis for secrecy and integrity security policies. Figure 1 shows the elements of this model: Principals: sources for requests. Requests to perform operations on objects. Lampson et al, Authentication in Distributed Systems 2 Reference monitor Object Do operation Principal GuardRequestSource Resource Fig. 1.
Reference: 17. <author> LINN , J. </author> <title> Practical authentication for distributed systems. </title> <booktitle> Proceedings of the IEEE Symposium on Security and Privacy (Oakland, Calif., </booktitle> <month> May </month> <year> 1990), </year> <pages> pp. 31-40. </pages>
Reference-contexts: R for all R Roles (R1) A fi A as R for all R Roles (R2) as is commutative and idempotent on roles (R3) Delegation B for A = B|A D|A (D5) ACKNOWLEDGEMENTS Many of the ideas discussed here were developed as part of the Digital Distributed System Security Architecture <ref> [12, 13, 17] </ref> or were greatly influ - enced by it. Morrie Gasser, Andy Goldstein, and Charlie Kaufman made ma - jor contributions to that work.
Reference: 18. <institution> NATIONAL BUREAU OF STANDARDS . Data Encryption Standard . FIPS Pub. </institution> <month> 46, Jan. </month> <year> 1977. </year> <note> 1 9 . NEEDHAM , R. </note> <author> AND SCHROEDER, M. </author> <title> Using encryption for authentication in large networks of computers. </title> <month> 12 (Dec. </month>
Reference-contexts: The most popular shared key encryption scheme is the Data Encryption Standard or DES <ref> [18] </ref>. We denote an encryption channel with the DES key K by DES (K), or simply by K when the meaning is clear; the channel speaks for the set of principals that know K .
Reference: 20. <author> NEUMAN , C. </author> <title> Proxy-based authorization and accounting for distributed systems. </title> <type> Tech. Rep. </type> <institution> 91-02-01, University of Washington, </institution> <address> Seattle, Wash., </address> <month> March </month> <year> 1991. </year>
Reference-contexts: For instance, we could have speaks for reads which applies only to state - ments that request reading from a file, or speaks for file foo which applies Lampson et al, Authentication in Distributed Systems 9 only to statements about file foo. Neuman discusses various applications of this idea <ref> [20] </ref>. Or we can use roles (see Section 6) to compensate for the strength of fi, for instance by saying A fi ( B as reader) instead of A fi B. The operators and fi satisfy the usual laws of the propositional calculus.
Reference: 21. <author> RIVEST , R., S HAMIR, A., AND ADLEMAN , L. </author> <title> A method for obtaining digital signatures and public-key cryptosystems. </title> <journal> Comm u . ACM 21 , 2 (Feb. </journal> <year> 1978), </year> <pages> 120-126. </pages>
Reference-contexts: The most popular public key en - cryption scheme is Rivest-Shamir-Adleman or RSA <ref> [21] </ref>.
Reference: 22. <author> RIVEST , R. </author> <title> The M D 4 message digest algorithm. </title> <booktitle> In Advances in CryptologyCrypto 90 , Springer, </booktitle> <year> 1991, </year> <pages> pp. 303-311. </pages>
Reference-contexts: Furthermore, it is a one-way function; this means that you cant invert the function and compute a message with a given digest. Two practical digest functions are MD 4 <ref> [22] </ref> and MD5 [23]. An algorithm that provides integrity without secrecy is said to implement digital signatures. <p> Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K [25] .5 K [6] 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K <ref> [22] </ref> DES 1.2 G [11] 400 K [6] Software uses a 64 KB table per key encryption algorithm.
Reference: 23. <author> RIVEST , R. AND D USSE, S. </author> <title> The MD 5 MessageDigest Algorithm . Internet Draft [MD5-A]: </title> <address> draft-rsadsi-rivest-md5-01.txt, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: Furthermore, it is a one-way function; this means that you cant invert the function and compute a message with a given digest. Two practical digest functions are MD 4 [22] and MD5 <ref> [23] </ref>. An algorithm that provides integrity without secrecy is said to implement digital signatures.
Reference: 24. <author> SALTZER , J., REED , D., AND CLARK , D. </author> <title> End-to-end arguments in system design. </title> <journal> ACM Trans. Comput. Syst. </journal> <volume> 2 , 4 (Nov. </volume> <year> 1984), </year> <pages> 277-288. </pages>
Reference-contexts: These are examples of an end-to-end argument <ref> [24] </ref>, which is closely related to the idea of a TCB . Its not quite true that components outside the TCB can fail without affect - ing security.
Reference: 25. <author> SHAND , M., B ERTIN , P., AND VUILLEMIN , J. </author> <title> Resource tradeoffs in fast long integer multi - plication. </title> <booktitle> In 2nd ACM Symposium on Parallel Algorithms and Architectures (Crete, </booktitle> <month> July </month> <year> 1990). </year>
Reference-contexts: But public key en - cryption is not normally used in this way. Lampson et al, Authentication in Distributed Systems 13 Table I. Speeds of Cryptographic Operations 8 Hardware, bits/sec Software, bits/sec/ MIPS Notes RSA encrypt 220 K <ref> [25] </ref> .5 K [6] 500 bit modulus RSA decrypt 32 K [6] Exponent=3 MD4 1300 K [22] DES 1.2 G [11] 400 K [6] Software uses a 64 KB table per key encryption algorithm.
Reference: 26. <author> STEINER , J., N EUMAN , C., AND SCHILLER, J. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> In Proceedings of the Usenix Winter Conference (Berkeley, Calif., </booktitle> <month> Feb. </month> <year> 1988), </year> <pages> pp. 191-202. </pages> <editor> Lampson et al, </editor> <booktitle> Authentication in Distributed Systems 47 </booktitle>
Reference-contexts: An encrypted key may be weaker cryptographically than a table index, but we believe that it is safe to use it as a key identifier, since it is established practice to distribute session keys encrypted by master keys <ref> [19, 26, 28] </ref>. 4.3 Broadcast Encryption Channels We conclude the general treatment of encryption channels by explaining the special role of public keys, and showing how to get the same effect using shared keys. <p> In this respect our system differs from the Needham-Schroeder proto - col and its descendants <ref> [15, 19, 26] </ref>, which combine key exchange with au - thentication, but is similar to the Diffie-Hellman key exchange protocol [10]. We set up a node-to-node channel between nodes A and B in three phases; see Table III. <p> Finally, the old certificates can be removed from the database. During the entire period that the new key is being distributed, cer - tificates signed by both keys must be in the database. The formalization of Figure 5 also describes the Kerberos protocol <ref> [15, 26] </ref>. Kerberos uses shared rather than public key encryption. Although its design - ers didnt know about the relay simulation described in Section 4.3, the proto - col can be explained as an application of that idea to public key certificates. <p> When B wants to speak for B for A it can quote A and appeal to the joint authority rule (P12). This is simpler but less explicit. Lampson et al, Authentication in Distributed Systems 32 protocols are discussed elsewhere <ref> [1, 26, 27] </ref>. Hence the users delegation to the workstation at login must have a rather long lifetime, so that it doesnt need to be refreshed very often.
Reference: 27. <author> TARDO , J. AND ALAGAPPAN, K. </author> <title> SPX : Global authentication using public key certificates. </title> <booktitle> Proceedings of the IEEE Symposium on Security and Privacy (Oakland, Calif., </booktitle> <month> May </month> <year> 1991), </year> <pages> pp. 232-244. </pages>
Reference-contexts: Figure 6 shows the path from /dec/burrows to /mit/clark ; the numbers stand for public keys. The basic idea is described in Birrell et al. [3]; it is also implemented in SPX <ref> [27] </ref>. We can formalize this idea with a new kind of compound principal, written P except N, and some axioms that define its meaning. Here M or N is any simple name and P is any path name, that is, any sequence of simple names. <p> When B wants to speak for B for A it can quote A and appeal to the joint authority rule (P12). This is simpler but less explicit. Lampson et al, Authentication in Distributed Systems 32 protocols are discussed elsewhere <ref> [1, 26, 27] </ref>. Hence the users delegation to the workstation at login must have a rather long lifetime, so that it doesnt need to be refreshed very often.
Reference: 28. <author> VOYDOCK, V. AND KENT , S. </author> <title> Security mechanisms in high-level network protocols. </title> <journal> ACM Comput. Surv. </journal> <volume> 15 , 2 (Jun. </volume> <year> 1983), </year> <pages> 135-171. </pages> <note> Received December 1991; revised June 1992; accepted August 1992 </note>
Reference-contexts: The checksum should provide enough redundancy to make it very unlikely that decrypting with K will succeed on a message not produced by encrypting with K 1 . Achieving this property requires some care <ref> [10, 28] </ref>. For integrity it is enough to encrypt a digest of the message. The digest is Lampson et al, Authentication in Distributed Systems 12 the result of applying a function Digest to the message. <p> An encrypted key may be weaker cryptographically than a table index, but we believe that it is safe to use it as a key identifier, since it is established practice to distribute session keys encrypted by master keys <ref> [19, 26, 28] </ref>. 4.3 Broadcast Encryption Channels We conclude the general treatment of encryption channels by explaining the special role of public keys, and showing how to get the same effect using shared keys.
References-found: 27

