URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/vieri-mit.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Title: A Fully Reversible Asymptotically Zero Energy Microprocessor  
Author: Carlin Vieri M. Josephine Ammer Michael Frank Norman Margolus Tom Knight 
Address: 545 Technology Square, Cambridge MA 02139, USA  
Affiliation: MIT Artificial Intelligence Laboratory,  
Abstract: The only way to compute with asymptotically zero power is reversibly. Recent implementations of reversible and adiabatic [17, 8] logic in standard CMOS silicon processes have motivated further research into reversible computing. The application of reversible computing techniques to reduce energy dissipation of current generation CMOS circuits has so far been found to be limited, but the techniques used to design reversible computers are interesting in and of themselves, and other technologies, such as Josephson Junctions and quantum computers, as well as future CMOS technologies, may require fully reversible logic. This paper discusses the design of a fully reversible microprocessor architecture. Computing with reversible logic is the only way to avoid dissipating the energy associated with bit erasure since no bits are erased in a reversible computation. Low energy techniques such as voltage scaling lower the cost of erasing information. Techniques such as clock gating effectively reduce the number of bits erased. Reversible techniques have already been used to lower the cost of bit erasure for nodes that have a high cost of erasure, but the present work is directed at saving every bit, computing fully reversibly. The goal is to convert a conventional RISC processor to completely reversible operation. This investigation indicates where bit erasure happens in a conventional machine and the varying difficulty across datapath modules of computing without erasing bits. The initial motivation for reversible computing research came from an investigation of fundamental limits of energy dissipation during computation [9]. The link between entropy in the information science sense and entropy in the thermodynamics sense, exhibited by Maxwell's demon [10], requires a minimum energy dissipation of k B T ln 2, where k B is Boltzmann's constant, when a bit is erased. Erasing a bit is a logically irreversible operation with a physically irreversible effect. A reversible computer avoids bit erasure. Judicious application of reversibility in adiabatic circuits has already proven its usefulness in reducing energy dissipation [2]. This paper examines the complexity and difficulty in avoiding bit erasure entirely and discusses a set of techniques for designing reversible systems. fl This work is supported by DARPA contract DABT63-95-C-0130
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Athas, L. Svensson, and N. Tzartzanis. </author> <title> A resonant signal driver for two-phase, almost-nonoverlapping clocks. </title> <booktitle> In International Symposium on Circuits and Systems, </booktitle> <year> 1996. </year>
Reference-contexts: Such a processor theoretically requires asymptotically zero dissipation, with dissipation per operation falling to zero as the clock period is increased to infinity. This assumes that an appropriate energy-recycling, constant-current power supply could be developed. The ISI blip circuit <ref> [1] </ref>, stepwise capacitor charging [12], and MIT's transmission line clock drivers [3], are steps toward this end. This paper assumes that the clock drivers exist and the datapath currently being constructed uses Younis and Knight's [16] three-phase SCRL logic family in all circuits.
Reference: [2] <author> W. Athas, N. Tzartzanis, L. Svensson, L. Peterson, H. Li, X. Jiang, P. Wang, and W-C. Liu. AC-1: </author> <title> A clock-powered microprocessor. </title> <booktitle> In International Symposium on Low Power Electronics and Design, </booktitle> <pages> pages 1820, </pages> <year> 1997. </year>
Reference-contexts: So-called adiabatic techniques, in which the dissipation per compute operation is proportional to the operation frequency, have shown themselves to be useful in practical applications <ref> [13, 2] </ref>. As mentioned above, adiabatic operation requires that the circuits perform logically reversible operations. If one attempts to implement a conventional instruction set in a reversible logic family, reversibility will be broken at the circuit level when the instruction set specifies an irreversible operation.
Reference: [3] <author> Matthew E. Becker and Thomas F. Knight, Jr. </author> <title> Transmission line clock driver. </title> <booktitle> In Proceedings of the 1998 ISCA Power Driven Microarchitecture Workshop, </booktitle> <year> 1998. </year>
Reference-contexts: This assumes that an appropriate energy-recycling, constant-current power supply could be developed. The ISI blip circuit [1], stepwise capacitor charging [12], and MIT's transmission line clock drivers <ref> [3] </ref>, are steps toward this end. This paper assumes that the clock drivers exist and the datapath currently being constructed uses Younis and Knight's [16] three-phase SCRL logic family in all circuits.
Reference: [4] <author> Michael Frank and Scott Rixner. Tick: </author> <title> A simple reversible processor (6.371 project report). Online term paper, </title> <month> may </month> <year> 1996. </year> <note> http://www.ai.mit.- edu/mpf/rc/tick-report.ps. </note>
Reference-contexts: A particular design may be reversible at one or more levels and irreversible at other levels. For example, an instruction set may be reversible and yet be implemented in an irreversible technology. The test chip Tick <ref> [4] </ref> was an eight-bit implementation of an early version of the reversible Pendulum instruction set in an irreversible standard CMOS technology. The specific implementation of a reversible computing system may vary greatly. Numerous mechanical structures have been proposed, including Drexler's Rod Logic and Merkle's clockwork schemes [11].
Reference: [5] <author> Michael P. Frank. </author> <title> Modifications to PISA architecture to support guaranteed reversibility and other fetures. </title> <note> Online draft memo, July 1997. http://www.ai.mit.edu/mpf/ rc/memos/M07/M07_revarch.html. </note>
Reference-contexts: Requiring branches to target particular types of instructions to ensure branch reversibility, however, is a convenient technique for reversible processor design. Early designs proposed explicit come-from instructions [15] or a branch register and branch bit <ref> [5] </ref>. Space does not permit a complete discussion of possible techniques for performing jumps and branches reversibly, but the literature contains a number of examples that differ from the scheme presented here [6].
Reference: [6] <author> J. Storrs Hall. </author> <title> A reversible instruction set architecture and algorithms. </title> <booktitle> In Physics and Computation, </booktitle> <pages> pages 128134, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: Early designs proposed explicit come-from instructions [15] or a branch register and branch bit [5]. Space does not permit a complete discussion of possible techniques for performing jumps and branches reversibly, but the literature contains a number of examples that differ from the scheme presented here <ref> [6] </ref>. The discussion below refers only to the particular scheme used in the current version of the Pendulum processor.
Reference: [7] <author> Gerry Kane and Joe Heinrich. </author> <title> MIPS RISC Architecture. </title> <publisher> Prentice Hall, </publisher> <year> 1992. </year>
Reference-contexts: The Pendulum processor was originally based on the elegantly simple MIPS RISC architecture <ref> [7] </ref>. The register-to-register operations, fixed instruction length, and simple memory access instructions make it a good starting point for a radically different approach to instruction set design. For ease of implementation, and of course to maintain reversibility, the instruction set has been substantially modified.
Reference: [8] <author> J. G. Koller and W. C. Athas. </author> <title> Adiabatic switching, low energy computing, and the physics of storing and erasing information. </title> <booktitle> In Physics of Computation Workshop, </booktitle> <year> 1992. </year>
Reference: [9] <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM J. Research and Development, </journal> <volume> 5:183191, </volume> <year> 1961. </year>
Reference: [10] <author> J. C. Maxwell. </author> <title> Theory of Heat. </title> <address> Longmans, Green & Co., London, 4th edition, </address> <month> 1875. </month>
Reference: [11] <author> Ralph C. Merkle. </author> <title> Towards practical reversible logic. </title> <booktitle> In Physics and Computation, </booktitle> <pages> pages 227 228, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: The specific implementation of a reversible computing system may vary greatly. Numerous mechanical structures have been proposed, including Drexler's Rod Logic and Merkle's clockwork schemes <ref> [11] </ref>. Younis and Knight's SCRL is a reversible electronic circuit style suitable for use in the implementation of a reversible computer. Many papers refer to dissipationless computing. This is a misnomer and generally may be interpreted as shorthand for asymptotically dissipationless computing.
Reference: [12] <author> L.J. Svensson and J.G. Koller. </author> <title> Adiabatic charging without inductors. </title> <type> Technical Report ACMOS-TR-3a, </type> <institution> USC Information Sciences Institute, </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: Such a processor theoretically requires asymptotically zero dissipation, with dissipation per operation falling to zero as the clock period is increased to infinity. This assumes that an appropriate energy-recycling, constant-current power supply could be developed. The ISI blip circuit [1], stepwise capacitor charging <ref> [12] </ref>, and MIT's transmission line clock drivers [3], are steps toward this end. This paper assumes that the clock drivers exist and the datapath currently being constructed uses Younis and Knight's [16] three-phase SCRL logic family in all circuits.
Reference: [13] <author> Nestoras Tzartzanis and William C. Athas. </author> <title> Energy recovery for the design of high-speed, low power static RAMs. </title> <booktitle> In International Symposium on Low Power Electronics and Design, </booktitle> <pages> pages 5560, </pages> <year> 1996. </year>
Reference-contexts: So-called adiabatic techniques, in which the dissipation per compute operation is proportional to the operation frequency, have shown themselves to be useful in practical applications <ref> [13, 2] </ref>. As mentioned above, adiabatic operation requires that the circuits perform logically reversible operations. If one attempts to implement a conventional instruction set in a reversible logic family, reversibility will be broken at the circuit level when the instruction set specifies an irreversible operation.
Reference: [14] <author> Carlin Vieri, M. Josephine Ammer, Amory Wake-field, Lars Johnny Svensson, William Athas, and Thomas F. Knight, Jr. </author> <title> Designing reversible memory. </title> <editor> In C. S. Calude, J. Casti, and M. J. Dinneen, editors, </editor> <booktitle> Unconventional Models of Computation, </booktitle> <pages> pages 386405. </pages> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: The system was intended to be a prototype of the Pendulum register file. Reversible memory system design is discussed in more depth elsewhere <ref> [14] </ref>, and this section draws heavily on previous work by the authors. From a system point of view, the only additional requirement of a reversible memory, beyond a traditional memory system's function, is that it not erase bits when it is read from and written to.
Reference: [15] <author> Carlin J. Vieri. Pendulum: </author> <title> A reversible computer architecture. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1995. </year>
Reference-contexts: The dynamic instruction stream may be executed both forwards and backwards. The instruction set described here is a modification of the one designed in Vieri's master's thesis <ref> [15] </ref>. A reversible circuit implementation is one in which, in the asymptotic limit, charge flows through the circuit in a thermodynamically reversible way at all times. This is only possible if the circuit is performing a logically reversible operation in which no information is lost. <p> Requiring branches to target particular types of instructions to ensure branch reversibility, however, is a convenient technique for reversible processor design. Early designs proposed explicit come-from instructions <ref> [15] </ref> or a branch register and branch bit [5]. Space does not permit a complete discussion of possible techniques for performing jumps and branches reversibly, but the literature contains a number of examples that differ from the scheme presented here [6].
Reference: [16] <author> Saed G. Younis and Thomas F.. Knight, Jr. </author> <title> Practical implementation of charge recovering asymptotically zero power CMOS. </title> <booktitle> In Proceedings of the 1993 Symposium in Integrated Systems, </booktitle> <pages> pages 234250. </pages> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: The ISI blip circuit [1], stepwise capacitor charging [12], and MIT's transmission line clock drivers [3], are steps toward this end. This paper assumes that the clock drivers exist and the datapath currently being constructed uses Younis and Knight's <ref> [16] </ref> three-phase SCRL logic family in all circuits. Any complete analysis of power dissipation in an adiabatic circuit must include the dissipation in the power supply and control logic.
Reference: [17] <author> Saed G. Younis and Thomas F. Knight, Jr. </author> <title> Asymptotically zero energy split-level charge recovery logic. </title> <booktitle> In International Workshop on Low Power Design, </booktitle> <pages> pages 177182, </pages> <year> 1994. </year> <month> 5 </month>
References-found: 17

