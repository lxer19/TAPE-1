URL: ftp://ftp.cs.dartmouth.edu/TR/TR98-338.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/reports/abstracts/TR98-338/
Root-URL: http://www.cs.dartmouth.edu
Title: The Effects of Singular Value Decomposition on Collaborative Filtering  
Author: Michael H. Pryor 
Degree: Senior Honors Thesis  
Date: June 1998  
Note: Pryor Page 1 6/5/98  
Abstract: Computer Science Technical Report Dartmouth College PCS-TR98-338 Abstract As the information on the web increases exponentially, so do the efforts to automatically filter out useless content and to search for interesting content. Through both explicit and implicit actions, users define where their interests lie. Recent efforts have tried to group similar users together in order to better use this data to provide the best overall filtering capabilities to everyone. This thesis discusses ways in which linear algebra, specifically the singular value decomposition, can be used to augment these filtering capabilities to provide better user feedback. The goal is to modify the way users are compared with one another, so that we can more efficiently predict similar users. Using data collected from the PhDs.org website, we tested our hypothesis on both explicit web page ratings and implicit visits data. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Balabanovic and Y. Shoham, Fab: </author> <title> Content-Based, Collaborative Recommendation, </title> <journal> Communications of the ACM, </journal> <volume> vol. 40, </volume> <pages> pp. 66-72, </pages> <year> 1997. </year>
Reference-contexts: Although the system Pryor Page 7 6/5/98 does not supply user specific information, PHOAKS is able to effectively form a core group of pages that interest a subsection of users. Fab & Slider The Fab <ref> [1] </ref> system is a web based recommendation service that incorporates both collaborative and content-based filtering methods. Users profiles are constructed as a collection of keywords contained in those documents that each user rates highly.
Reference: [2] <author> M. W. Berry, S. T. Dumais, and G. W. O'Brien, </author> <title> Using Linear Algebra for Intelligent Information Retrieval, </title> <institution> in Department of Computer Science. Tennessee, Knoxville: University of Tennessee, </institution> <year> 1994, </year> <pages> pp. 24. </pages>
Reference-contexts: In addition, when modeling a document as a vector, there will only be one term for the word mouse, regardless of the context of that word, since no automatic methods exist to detect these ambiguities. Naturally, information can be lost in the vector model structure <ref> [2] </ref>. The information retrieval field uses linear algebra to overcome both of these problems. In particular Latent Semantic Indexing (LSI) [3] is used in discovering the underlying structure and context present in each document. <p> A significant performance benefit has been discovered in using these methods for information retrieval of up to 30% better than keyword searching methods <ref> [2] </ref>. Pryor Page 11 6/5/98 Collaborative Filtering Collaborative filtering methods form profiles of users based on individual user data. In our case, user profiles are based on visits to a defined set of web documents, and if applicable the users rating of those documents.
Reference: [3] <author> S. Deerwester, S. T. Dumais, G. W. Furnas, T. K. Landauer, and R. Harshman, </author> <title> Indexing by Latent Semantic Analysis, </title> <journal> Journal of the American Society for Information Science, </journal> <volume> vol. 41, </volume> <pages> pp. 391-407, </pages> <year> 1990. </year>
Reference-contexts: Naturally, information can be lost in the vector model structure [2]. The information retrieval field uses linear algebra to overcome both of these problems. In particular Latent Semantic Indexing (LSI) <ref> [3] </ref> is used in discovering the underlying structure and context present in each document. Rather than searching by terms, LSI methods have allowed people to represent documents through the main factors that describe the document, and to find related documents based on those factors. <p> In information retrieval, keyword components are quite suitable for matching similar documents. Shardanand demonstrates, through research with Ringo [15], that vector space modeling is also quite suitable for collaborative filtering methods. Since Dumais has shown that LSI methods can enhance standard information retrieval methods <ref> [3] </ref>, we feel that LSI methods will also be able to enhance collaborative filtering methods. Users can be compared with each other based on how similar their responses to a set of web documents are. <p> We use singular value decomposition to factor ratings into features, and their observed importance. Research on Latent Semantic Indexing (LSI) for information retrieval has shown that LSI methods provide a moderate performance benefit over standard cosine analysis retrieval techniques <ref> [3] </ref>. This research indicates that LSI methods may also provide a moderate performance benefit for collaborative filtering techniques which use the standard cosine analysis for finding neighbors. <p> In two experiments done by Dumais using LSI analysis to improve standard IR techniques, one experiment performed as well as the IR techniques and the other performed moderately better <ref> [3] </ref>. Dumais mentions that by adding standard enhancements to these techniques could improve the results even more, and so our other experiments focus on weighting neighbor input and using ratings to weight visit data. Pryor Page 32 6/5/98 Neighbor Weighted Cosine Analysis vs.
Reference: [4] <author> P. W. Foltz and S. T. Dumais, </author> <title> Personalized Information Delivery: An Analysis of Information Filtering Methods, </title> <journal> Communications of the ACM, </journal> <volume> vol. 35, </volume> <pages> pp. 51-60, </pages> <year> 1992. </year>
Reference: [5] <author> D. Goldberg, D. Nichols, B. M. Oki, and D. Terry, </author> <title> Using Collaborative Filtering to Weave an Information Tapestry, </title> <journal> Communications of the ACM, </journal> <volume> vol. 35, </volume> <pages> pp. 61-70, </pages> <year> 1992. </year>
Reference-contexts: Introduction Standard content-based query filtering methods use keywords and word matching to find relevant documents for users. In contrast, collaborative filtering <ref> [5] </ref>, also known as Social Information Filtering [15], attempts to filter objects based on personal taste by grouping similar people together in neighborhoods. By aligning the interests of several users, collaborative filtering methods can choose documents relevant to a group of people rather than a single user. <p> Siteseers success suggests that bookmarks provide a valuable form of implicit feedback that could be quite useful to other filtering systems. Tapestry Tapestry <ref> [5] </ref> uses collaborative filtering for delivering mail to mailing lists. As messages arrive, users can annotate the messages and later query for similar messages that others were interested in.
Reference: [6] <author> K. S. Jones, </author> <title> Search Term Relevance Weighting Given Little Relevance Information, </title> <journal> Journal of Documentation, </journal> <volume> vol. 35, </volume> <pages> pp. 329-338, </pages> <year> 1979. </year>
Reference: [7] <author> H. Kautz, B. Selman, and M. Shah, </author> <title> Referral Web: Combining Social Networks and Collaborative Filtering, </title> <journal> Communications of the ACM, </journal> <volume> vol. 40, </volume> <pages> pp. 63-65, </pages> <year> 1997. </year>
Reference: [8] <author> J. A. Konstan, B. N. Miller, D. Maltz, J. L. Herlocker, L. R. Gordon, and J. Riedl, GroupLens: </author> <title> Applying Collaborative Filtering to Usenet News, </title> <journal> Communications of the ACM, </journal> <volume> vol. 40, </volume> <pages> pp. 77-87, </pages> <year> 1997. </year>
Reference-contexts: Later when the user is browsing, Letizia does a breadth first search from the current page to find documents that contain those keywords, and notifies the user that they might be interested in following a particular link. GroupLens GroupLens <ref> [8] </ref> was developed to use collaborative filtering for helping users find interesting Usenet news articles. The system is implemented using a source server that Pryor Page 6 6/5/98 holds ratings and predictions for each user. These ratings are propagated to each Usenet newsreader by the GroupLens API.
Reference: [9] <author> H. Lieberman, Letizia: </author> <title> An Agent That Assists Web Browsing, in MIT Media Lab. </title> <address> Cambridge, MA: </address> <publisher> MIT, </publisher> <year> 1996, </year> <pages> pp. 6. </pages>
Reference-contexts: New users were given a set of artists consisting of the most often rated artists and others randomly generated from the artist database, allowing Ringo to immediately establish overlap in comparing different users. Pryor Page 5 6/5/98 Letizia & Lets Browse Let's Browse [10] and its predecessor, Letizia <ref> [9] </ref>, are web agents that assist a user during their browsing experience. By watching the user's behavior, Letizia learns the person's interests and browses ahead from the current web page to see how interested the user would be in documents linked to from that site.
Reference: [10] <author> H. Lieberman, N. V. Dyke, and A. Vivacqua, </author> <title> Let's Browse: A Collaborative Web Browsing Agent, in MIT Media Lab. </title> <address> Cambridge, MA: </address> <publisher> MIT, </publisher> <year> 1997, </year> <pages> pp. </pages> <note> 5. Pryor Page 43 6/5/98 </note>
Reference-contexts: New users were given a set of artists consisting of the most often rated artists and others randomly generated from the artist database, allowing Ringo to immediately establish overlap in comparing different users. Pryor Page 5 6/5/98 Letizia & Lets Browse Let's Browse <ref> [10] </ref> and its predecessor, Letizia [9], are web agents that assist a user during their browsing experience. By watching the user's behavior, Letizia learns the person's interests and browses ahead from the current web page to see how interested the user would be in documents linked to from that site.
Reference: [11] <author> J. Rucker and M. J. Polanco, Siteseer: </author> <title> Personalized Navigation on the Web, </title> <journal> Communications of the ACM, </journal> <volume> vol. 40, </volume> <pages> pp. 73-75, </pages> <year> 1997. </year>
Reference-contexts: One potential shortcoming is Fab's reliance on explicit user feedback. The success with the initial project has led Fabs creators to begin working on a new project Pryor Page 8 6/5/98 called Slider, which adds the advantage of using implicit feedback methods to determine user profiles. Siteseer Siteseer <ref> [11] </ref> is a collaborative system using web browser bookmarks to find neighbors and recommend sites. Users with significant overlap in bookmark listings are determined to be close to one another, allowing previously unvisited sites to be recommended to one another.
Reference: [12] <author> G. Salton and C. Buckley, </author> <title> Improving Retrieval Performance by Relevance Feedback </title>
Reference: [13] <author> G. Salton and M. J. McGill, </author> <title> The SMART and SIRE Experimental Retrieval Systems </title>
Reference-contexts: Many retrieval systems model documents as vectors in space and model user queries in the same space to find similar documents. Salton and McGill <ref> [13] </ref> discuss this representation in their paper on the SMART retrieval system, perhaps one of the most famous and earliest information retrieval systems. Distances between documents are measured by the cosine of the angle between the document vectors. <p> defined as the distance between the users vectors, computed as the length of U V. dist (U,V ) = U - V = (u - v) (u - v) = (u 1 - v 1 ) 2 2 2 In some cases, a more reliable metric, as used by Salton <ref> [13] </ref>, may be the cosine of the angle between the vectors U and V, which ignores the length of the vectors: cos Q = U V Users with similar ratings will be near each other; users with dissimilar ratings will be far from each other.
Reference: [14] <author> B. Shapira, P. Shoval, and U. Hanani, </author> <title> Stereotypes in Information Filtering Systems, </title> <booktitle> Information Processing & Management, </booktitle> <volume> vol. 33, </volume> <pages> pp. 273-287, </pages> <year> 1997. </year>
Reference: [15] <author> U. Shardanand, </author> <title> Social Information Filtering for Music Recommendation, </title> <institution> in Department of Electrical Engineering and Computer Science. </institution> <address> Cambridge, MA: </address> <publisher> MIT, </publisher> <year> 1995, </year> <pages> pp. 93. </pages>
Reference-contexts: Introduction Standard content-based query filtering methods use keywords and word matching to find relevant documents for users. In contrast, collaborative filtering [5], also known as Social Information Filtering <ref> [15] </ref>, attempts to filter objects based on personal taste by grouping similar people together in neighborhoods. By aligning the interests of several users, collaborative filtering methods can choose documents relevant to a group of people rather than a single user. <p> Pryor Page 4 6/5/98 Related Works Ringo The term Social Information Filtering was coined at the MIT Media Lab by U . Shardanand to describe a project he developed known as Ringo <ref> [15] </ref>. Ringo was a music recommendation service which generated user profiles based on explicit feedback on artists through the web and an email gateway. <p> Shardanand experimented with many different metrics for measuring closeness. In each method, users were represented by a vector consisting of their ratings, and compared using the Mean Squared Difference algorithm and the Pearson correlation algorithm <ref> [15] </ref>. Shardanand considered any pair of users with a distance less than a given threshold to be close. Predictions were then generated using a weighted average of the predictions made by the users neighbors. <p> Shardanands methods relate directly to Saltons information retrieval methods. Both methods represent objects as a vector of their components and attempt to find similar objects based on those components. In information retrieval, keyword components are quite suitable for matching similar documents. Shardanand demonstrates, through research with Ringo <ref> [15] </ref>, that vector space modeling is also quite suitable for collaborative filtering methods. Since Dumais has shown that LSI methods can enhance standard information retrieval methods [3], we feel that LSI methods will also be able to enhance collaborative filtering methods. <p> The Ringo system uses this weighting system to allow closer neighbors more Pryor Page 22 6/5/98 input on which artists a user may or may not like <ref> [15] </ref>. We can make a prediction of the users ratings by taking a weighted average of the n closest neighbors ratings as follows: R w w w user n n = + + + 1 2 ... where w i is the i th users measured closeness to the subject.
Reference: [16] <author> L. Terveen, W. Hill, B. Amento, D. McDonald, and J. Creter, PHOAKS: </author> <title> A System for Sharing Recommendations, </title> <journal> Communications of the ACM, </journal> <volume> vol. 40, </volume> <pages> pp. 59-62, </pages> <year> 1997. </year>
Reference-contexts: Research regarding implicit feedback methods is extremely important since obtaining a significant amount of data explicitly from users is quite difficult. PHOAKS PHOAKS (People Helping One Another Know Stuff) <ref> [16] </ref> finds informative URLs in Usenet news postings. The system uses implicit feedback mechanisms to determine URLs that will be interesting to readers of specific newsgroups.
References-found: 16

