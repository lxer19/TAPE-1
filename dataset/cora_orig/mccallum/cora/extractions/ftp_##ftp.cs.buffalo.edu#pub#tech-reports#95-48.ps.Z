URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/95-48.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: A Sampling Technique for Diagnostic Fault Simulation  
Author: Sreejit Chakravarty Bell Hall 
Address: New York Buffalo, NY 14260  
Affiliation: Dept. of Computer Science State University of  
Abstract: Technical Report Number 95-48, Department of Computer Science State University of New York, Buffalo, NY 14260. ABSTRACT The quality of diagnostic test sets (DTS) are determined using diagnostic fault simulation(DFS). Approximation algorithms, based on "sampling", for this computationally difficult problem are explored. "Fault sampling", used very effectively for fault simulation, cannot be used for DFS. As an alternative, we propose using "EC/IC Sampling" for DFS. It samples the set of equivalence classes (EC)/ indistinguishible classes (IC). An approach to sample ECs/ICs implicitly, without explicity enumerating the set of ECs/ICs, is presented. Experimental evaluation of the proposed technique show it to be very effective. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ATALANTA. </author> <note> Sofware available from Prof. </note> <author> D. S. </author> <type> Ha, </type> <institution> Bradley Department of Electrical Engineering, VPISU, Blacksberg, Va. </institution>
Reference-contexts: In this paper we present one method to compute P (f i ) selectively. 3 A Case Study To evaluate the proposed strategy we performed a case study. The case study consist of computing the diagnostic measures for the stuck-at test sets computed using <ref> [1] </ref>. These test sets were evaluated as to their effectiveness in diagnosing BFs in combinational circuits assuming I DDQ measurement. I DDQ measurement based detection of BFs and classes of BFs considered in our experiments are discussed below. <p> END (* ApproxIddqDiagSim *) 4 Experimental results Table 2 lists ISCAS85 [3] and ISCAS89 [5] circuits used in our experiment. Only combinational versions of ISCAS89 circuits were used. Vectors is the size of the stuck-at detection test set from <ref> [1] </ref> used in our experiment. Sample is the number of fault sample used. Gates (Nodes) is the number of gates ( nodes ) in the circuit. The number of faults in the sample equals the number of nodes in the circuit.
Reference: [2] <author> V. D. Agrawal, </author> <title> "Sampling Techniques for Determining Fault Coverage in LSI Circuits," </title> <journal> Journal of Digital Systems, </journal> <volume> Vol. 5, No. 3, </volume> <pages> pp. 189 - 202, </pages> <month> Fall </month> <year> 1981. </year>
Reference: [3] <author> F. Brglez, D. Bryan, and K. Kozminski, </author> <title> "Combinational Profiles of Sequential Benchmark Circuits," </title> <booktitle> Int'l Symp. Circuits and Systems, </booktitle> <pages> pp. </pages> <year> 1929 </year> <month> - 34, May </month> <year> 1989. </year>
Reference-contexts: END END Traverse EC (S; T N ) and compute DR app , ERS app , M AXECS app defined in section 2. END (* ApproxIddqDiagSim *) 4 Experimental results Table 2 lists ISCAS85 <ref> [3] </ref> and ISCAS89 [5] circuits used in our experiment. Only combinational versions of ISCAS89 circuits were used. Vectors is the size of the stuck-at detection test set from [1] used in our experiment. Sample is the number of fault sample used.
Reference: [4] <author> T. T. Butler, T. G. Hallin, J. J. Kulzer, K. W. Johnson, "LAMP: </author> <title> Application to Switching System Development," </title> <journal> Bell Systems Technical Journal, </journal> <volume> Vol. 53, </volume> <pages> pp. 1535 - 1555, </pages> <month> Oct. </month> <year> 1974. </year> <month> 9 </month>
Reference: [5] <author> F. Brglez and H. Fujiwara, </author> <title> "A Neural Netlist of 10 Combinational Benchmark Circuits and a Target Trans--lator in FORTRAN", Special Session on ATPG and Fault SImulation, </title> <booktitle> IEEE Int'l Symposium on Circuits and Systems 1985. </booktitle>
Reference-contexts: END END Traverse EC (S; T N ) and compute DR app , ERS app , M AXECS app defined in section 2. END (* ApproxIddqDiagSim *) 4 Experimental results Table 2 lists ISCAS85 [3] and ISCAS89 <ref> [5] </ref> circuits used in our experiment. Only combinational versions of ISCAS89 circuits were used. Vectors is the size of the stuck-at detection test set from [1] used in our experiment. Sample is the number of fault sample used.
Reference: [6] <author> P. Camurati, D. Medine, P. Prinetto, M. S. Reorda, </author> <title> "A Diagnostic Test Pattern Generation Algorithm," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <pages> pp. 52 - 58, </pages> <year> 1990. </year>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits.
Reference: [7] <author> S. Chakravarty, Y. Gong, </author> <title> "Diagnostic Simulation of Stuck-at Faults in Combinational Circuits," </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 128 - 133, </pages> <year> 1994. </year>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in <ref> [7, 8, 13, 17, 18] </ref>. Not withstanding recent advances to speed up such algorithms [12, 19] diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping. <p> The use of Eqn (2) to Eqn (5) is referred to as UpdateEquivClasses and uses "list splitting", a paradigm used earlier for diagnostic simulation of stuck-at faults <ref> [7, 8, 18, 19] </ref>. 3.2.4 Outline of the Algorithm Note that as the number of vectors simulated increases the number of pairs of partition pointers in each SOPS representing an EC increases. However, it will never be worse than explicitly enumerating all the faults in the EC.
Reference: [8] <author> S. Chakravarty, Y. Gong, S. Venkataraman, </author> <title> "Diagnostic Simulation of Stuck-at Faults in Combinational Circuits," </title> <note> Submitted to Journal of Electronic Testing: Theory and Applications. </note>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in <ref> [7, 8, 13, 17, 18] </ref>. Not withstanding recent advances to speed up such algorithms [12, 19] diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping. <p> The use of Eqn (2) to Eqn (5) is referred to as UpdateEquivClasses and uses "list splitting", a paradigm used earlier for diagnostic simulation of stuck-at faults <ref> [7, 8, 18, 19] </ref>. 3.2.4 Outline of the Algorithm Note that as the number of vectors simulated increases the number of pairs of partition pointers in each SOPS representing an EC increases. However, it will never be worse than explicitly enumerating all the faults in the EC.
Reference: [9] <author> S. Chakravarty and M. Liu, </author> <title> "Algorithms for Current Monitor Based Diagnosis of Bridging Faults in Combinational Circuits," </title> <journal> Journal of Electronic Testing: Theory and Applications, </journal> <volume> Vol. 3, </volume> <pages> pp. 377 - 385, </pages> <year> 1992. </year>
Reference: [10] <author> S. Chakravarty and S. Suresh, </author> <title> "I DDQ Measurement Based Diagnosis of Bridging Faults in Full Scan Circuits," </title> <booktitle> IEEE Int'l Conference on VLSI Design, </booktitle> <pages> pp. 179 - 182, </pages> <year> 1994. </year>
Reference: [11] <author> S. Chakravarty and P. J. Thadikaran, </author> <title> "Simulation and Generation of I DDQ Tests for Bridging Faults in Combinational Circuits," </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 25 - 32, </pages> <year> 1993. </year>
Reference-contexts: The node partition of circuit C with respect to a test set T can be computed by first computing a table similar to Table 1. Followed by pairwise comparison of the values assigned to each node. This is an expensive algorithm. A faster algorithm is discussed in <ref> [11] </ref> and explained with the example of Table 1 and Figure 1. It is illustrated using Figure 2. <p> The process uses O (N ) space and computing P art (T i1 ) from P art (T i ) takes time O (N ) where N is the number of nodes <ref> [11] </ref>.
Reference: [12] <author> J. M. Jou and S. C. Chen, </author> <title> "A Fast and Memory Efficient Diagnostic Fault Simulation Algorithm for Sequential Circuits," </title> <booktitle> 1994 IEEE/ACM Int'l Conf. on Comput.-Aided Design, </booktitle> <pages> pp. 723-726. </pages>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in [7, 8, 13, 17, 18]. Not withstanding recent advances to speed up such algorithms <ref> [12, 19] </ref> diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping. The trend to diagnose larger circuits and consider fault models like bridging faults, leakage faults etc. tend to increase the number of faults to be analysed.
Reference: [13] <author> K. Kubiak, S. Parkes, W. K. Fuchs and R. Saleh, </author> <title> "Exact Evaluation of Diagnostic Test Resolution," </title> <journal> IEEE/ACM Design Automation Conference, pp. </journal> <volume> 347 - 352, </volume> <month> June </month> <year> 1992. </year>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in <ref> [7, 8, 13, 17, 18] </ref>. Not withstanding recent advances to speed up such algorithms [12, 19] diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping.
Reference: [14] <author> K. J. Lee, M. Breuer, </author> <title> "Design and Test Rules to Facilitate I DDQ Test of Bridging Faults," </title> <journal> IEEE Trans. on Comput.-Aided Design, </journal> <volume> Vol. 11, No. 5, </volume> <pages> pp. 659 - 669, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Hence T 2 will not detect any of these BFs. Thus, we declare an input vector T to be an I DDQ test for a BF &lt; X; Y &gt; if and only if T (X) 6= T (Y ); &T (X); T (Y ) 2 f0; 1g <ref> [14, 15, 16] </ref>. Several classes of BF can be defined. We use two of them in our experiment. Metal nodes are nodes that are either primary inputs or gate outputs. They are usually implemented in the metal layer. MetalBFs is the set of all BFs between metal nodes.
Reference: [15] <author> W. Maly, </author> <title> "Realistic Fault Modeling for VLSI Testing," </title> <journal> IEEE/ACM Design Automation Conference, pp. </journal> <volume> 173 - 180, </volume> <year> 1987. </year>
Reference-contexts: Hence T 2 will not detect any of these BFs. Thus, we declare an input vector T to be an I DDQ test for a BF &lt; X; Y &gt; if and only if T (X) 6= T (Y ); &T (X); T (Y ) 2 f0; 1g <ref> [14, 15, 16] </ref>. Several classes of BF can be defined. We use two of them in our experiment. Metal nodes are nodes that are either primary inputs or gate outputs. They are usually implemented in the metal layer. MetalBFs is the set of all BFs between metal nodes.
Reference: [16] <author> P. Nigh, W. Maly, </author> <title> "Test Generation for Current Testing," </title> <journal> IEEE Design and Test of Computers, pp. </journal> <volume> 26 - 38, </volume> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: Hence T 2 will not detect any of these BFs. Thus, we declare an input vector T to be an I DDQ test for a BF &lt; X; Y &gt; if and only if T (X) 6= T (Y ); &T (X); T (Y ) 2 f0; 1g <ref> [14, 15, 16] </ref>. Several classes of BF can be defined. We use two of them in our experiment. Metal nodes are nodes that are either primary inputs or gate outputs. They are usually implemented in the metal layer. MetalBFs is the set of all BFs between metal nodes.
Reference: [17] <author> E. Rudnick, W. K. Fuchs, J. H. Patel, </author> <title> "Diagnostic Fault Simulation of Sequential Circuits," </title> <booktitle> IEEE Int'l Test Conference, </booktitle> <pages> pp. 178 - 186, </pages> <year> 1992. </year>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> For sequential circuits, when we assume an unknown initial state, the logic level of some of the primary outputs may not be defined. For this reason the binary relation defined above on S need not be an equivalence relation <ref> [17] </ref>. So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. <p> So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in <ref> [7, 8, 13, 17, 18] </ref>. Not withstanding recent advances to speed up such algorithms [12, 19] diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping.
Reference: [18] <author> G. Ryan, W. K. Fuchs and I. Pomerantz, </author> <title> "Fault Dictionary Compression and Equivalence Class Computation for Sequential Circuits," </title> <booktitle> IEEE/ACM Int'l Conf. on Comput.-Aided Design, </booktitle> <pages> pp. 508 - 511, </pages> <year> 1993. </year>
Reference-contexts: So, E 1 ; : : : ; E m , may not be mutually disjoint and is more appropriately called Indistinguishible Classes (IC)[17]. Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in <ref> [7, 8, 13, 17, 18] </ref>. Not withstanding recent advances to speed up such algorithms [12, 19] diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping. <p> The use of Eqn (2) to Eqn (5) is referred to as UpdateEquivClasses and uses "list splitting", a paradigm used earlier for diagnostic simulation of stuck-at faults <ref> [7, 8, 18, 19] </ref>. 3.2.4 Outline of the Algorithm Note that as the number of vectors simulated increases the number of pairs of partition pointers in each SOPS representing an EC increases. However, it will never be worse than explicitly enumerating all the faults in the EC.
Reference: [19] <author> S. Venkataraman, et. al., </author> <title> "Rapid Diagnostic Fault Simulation of stuck-at faults in Sequential Circuits Using Compact Lists," </title> <booktitle> IEEE/ACM 32nd Design Automation Conference, </booktitle> <pages> pp. 133-138, </pages> <year> 1995. </year>
Reference-contexts: Analogous to detection test sets, diagnosis requires diagnostic test sets (DTS). Diagnostic fault simulation is the process of evaluating the capability of a DTS to diagnose a circuit. Like fault coverage and fault efficiency computed by fault simulation algorithms diagnostic fault simulation algorithms compute quantitative measures <ref> [6, 7, 8, 13, 17, 19, 12] </ref>, called diagnostic measures, defined below. The diagnostic measures assume a set F of faults like stuck-at, etc. First consider only combinational circuits. <p> Besides this difference, the definition of the above diagnostic measures remain unchanged. Diagnostic simulation algorithms for stuck-at faults has been discussed in [7, 8, 13, 17, 18]. Not withstanding recent advances to speed up such algorithms <ref> [12, 19] </ref> diagnostic fault simulation remains a computationally difficult problem. The primary reason is the need to perform fault simulation without fault dropping. The trend to diagnose larger circuits and consider fault models like bridging faults, leakage faults etc. tend to increase the number of faults to be analysed. <p> This approach has been used very effectively. The question we ask is: how can "sampling" be used for diagnostic simulation ? This question is important because diagnostic simulation is computationally more difficult than fault simulation. The primary reason being that, except in some special cases <ref> [19] </ref>, no fault dropping is possible. Therefore, there is an even greater urgency to develop approximate diagnostic fault simulation algorithms. Note that for diagnostic simulation the sample space to be used is the set of EC/ICs of the set of faults F with respect to the test set T . <p> The use of Eqn (2) to Eqn (5) is referred to as UpdateEquivClasses and uses "list splitting", a paradigm used earlier for diagnostic simulation of stuck-at faults <ref> [7, 8, 18, 19] </ref>. 3.2.4 Outline of the Algorithm Note that as the number of vectors simulated increases the number of pairs of partition pointers in each SOPS representing an EC increases. However, it will never be worse than explicitly enumerating all the faults in the EC.

References-found: 19

