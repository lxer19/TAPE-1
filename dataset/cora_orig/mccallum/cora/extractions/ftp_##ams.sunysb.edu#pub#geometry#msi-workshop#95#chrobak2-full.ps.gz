URL: ftp://ams.sunysb.edu/pub/geometry/msi-workshop/95/chrobak2-full.ps.gz
Refering-URL: http://ams.sunysb.edu/~held/proc_usb_comp_geo-95.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Paths Among Points Inside a Simple Polygon (Extended Abstract) (n m)) algorithm for finding a
Author: Marek Chrobak Gopalakrishnan Sundaram 
Note: O(n 4  
Abstract: In this paper we consider two problems in finding paths among a set X of points inside a simple polygon P . First, given two distinguished points s; t 2 X, we provide an algorithm which finds a simple path from s to t with vertices in X that does not intersect P in O(m 2 n(m+ n)) time, where jP j = m and jXj = n. We also show that finding simple paths among arbitrary obstacles is NP-Complete. Secondly, we consider the problem of finding a hamiltonian traversal in X. We show that finding an arbitrary traversal is NP-Complete. Also, we provide a 
Abstract-found: 1
Intro-found: 1
Reference: [AAGHI86] <author> T.Asano, T.Asano, L.Guibas, J.Hershberger, H.Imai: </author> <title> Visibility of disjoint polygons. </title> <note> Algorithmica 1 (1986) 49-63. </note>
Reference: [CH90] <author> B.Chazelle: </author> <title> Triangulating a simple polygon in linear time. </title> <booktitle> Proc. 31st Symposium on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 220-229. </pages>
Reference-contexts: t) path inside P is equivalent to finding a path from s to t in the visibility graph G X;P , and thus can be done in time O (e + (m + n) log (m + n)) using the algorithm of Hershberger [He89] and the triangulation algorithm of Chazelle <ref> [CH90] </ref>. In this paper we study other versions of the problem, in which we require that the path is simple, or that it is a traversal, or both.
Reference: [CG85] <author> B.Chazelle, L.Guibas: </author> <title> Visibility and intersection problems in plane geometry. </title> <booktitle> Proc. ACM Symposium on Computational Geometry, </booktitle> <year> 1985, </year> <pages> pp. 135-146. </pages>
Reference: [GM91] <author> S.Ghosh, D.Mount: </author> <title> An output-sensitive algorithm for computing visibility graphs. </title> <journal> SIAM J. Comput. </journal> <month> 20 </month> <year> (1991) </year> <month> 888-910. </month>
Reference: [GH89] <author> L.J. Guibas, J. Hershberger: </author> <title> Optimal shortest path queries in a simple polygon. </title> <note> Journal of Computer and System Sciences39 (1989 126-52. </note>
Reference-contexts: The status of this problem for arbitrary simple polygons remains open. 2 Finding Simple (s; X; t)-Paths Some relaxations of our problem have been well studied in the literature. If we just want to find any simple path between s and t withing P , <ref> [GHLST87, GH89] </ref> provide very efficient algorithms for that problem. Unfortunately, none of those methods seem applicable when we insist that those paths have given points as its vertex set. Similarly, we could relax the condition that the path is simple, and look for any X-path from s to t.
Reference: [GHLST87] <author> L.Guibas, J.Hershberger, D.Leven, M.Sharir, R.Tarjan: </author> <title> Linear-time algorithms for visibility and shortest path problems inside triangulated simple polygons. </title> <note> Algorithmica 2 (1987) 209-233. </note>
Reference-contexts: The status of this problem for arbitrary simple polygons remains open. 2 Finding Simple (s; X; t)-Paths Some relaxations of our problem have been well studied in the literature. If we just want to find any simple path between s and t withing P , <ref> [GHLST87, GH89] </ref> provide very efficient algorithms for that problem. Unfortunately, none of those methods seem applicable when we insist that those paths have given points as its vertex set. Similarly, we could relax the condition that the path is simple, and look for any X-path from s to t.
Reference: [He89] <author> J.Hershberger: </author> <title> An optimal visibility graph algorithm for triangulated simple polygons. </title> <note> Algorithmica 4 (1989) 141-155. </note>
Reference-contexts: Finding an arbitrary (s; X; t) path inside P is equivalent to finding a path from s to t in the visibility graph G X;P , and thus can be done in time O (e + (m + n) log (m + n)) using the algorithm of Hershberger <ref> [He89] </ref> and the triangulation algorithm of Chazelle [CH90]. In this paper we study other versions of the problem, in which we require that the path is simple, or that it is a traversal, or both.
Reference: [Ke85] <author> Keil: </author> <title> Finding Hamiltonian circuits in interval graphs. </title> <note> Information Processing Letters 20 (1985) </note>
Reference-contexts: Finding a hamiltonian cycle in an interval graph if exists can be done in linear time, by the algorithm of Keil <ref> [Ke85] </ref>. Thus we obtain: Theorem 4 In a spiral polygon a non-restricted cyclic traversal, if exists, can be found in O (e + (m + n) lg (m + n)) time. 6 4 Simple Traversals Convex polygons.
Reference: [TV88] <author> R.Tarjan, C. Van Wyk: </author> <title> An O(n log log n)-time algorithm for triangulating a simple polygon. </title> <journal> SIAM J. Comput. </journal> <month> 17 </month> <year> (1988) </year> <month> 143-178. </month>
Reference: [T86] <author> G.T. Toussaint, </author> <title> An optimal algorithm for computing the relative convex hull of a set of points in a polygon. </title> <booktitle> In: Signal Processing III: Theories and Applications. Proceedings of EUSIPCO-86: Third European Signal Processing Conference. I.T. </booktitle> <editor> Young, R.P.W. Duin, J. Biemond, J.J. Gerbrands, eds, </editor> <address> Amsterdam, Netherlands: </address> <publisher> North-Holland, </publisher> <year> 1986. </year> <note> p. 853-6 vol.2. </note>
Reference: [We85] <author> E. Welzl, </author> <title> Constructing the visibility graph for n line segments in O(n 2 ) time. </title> <note> Information Processing Letters 20 (1985) 167-171. 11 </note>
References-found: 11

