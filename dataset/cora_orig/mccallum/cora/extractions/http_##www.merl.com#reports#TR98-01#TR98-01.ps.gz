URL: http://www.merl.com/reports/TR98-01/TR98-01.ps.gz
Refering-URL: http://www.merl.com/reports/TR98-01/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Rigid Body Contact: Collision Detection to Force Computation  
Author: Brian Mirtich 
Address: 1998 201 Broadway, Cambridge, Massachusetts 02139  
Affiliation: Mitsubishi Electric Information Technology Center America,  
Date: March 1998  May 1998  
Web: http://www.merl.com  
Note: MERL A MITSUBISHI ELECTRIC RESEARCH LABORATORY  Presented at Workshop on Contact Analysis and Simulation, IEEE International Conference on Robotics and Automation,  Copyright c  
Pubnum: TR-98-01  
Abstract: The most difficult aspect of rigid-body simulation is contact modeling. Two major subproblems of contact modeling are detecting contacts and computing contact forces. Although typically studied in isolation, these problems are tightly intertwined in simulation. This paper describes a method for fitting the pieces together. It gives an overview of the V-Clip collision detection algorithm, which can rapidly and robustly locate pairs of closest features between polyhedral models. Using the results from multiple invocations of V-Clip, persistent, one- and two-dimensional contact regions can be modeled. The paper briefly describes several methods for computing contact forces that act between bodies. It also presents a new, easy to implement method, based on the singular value decomposition of the contact matrix. This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies include the following: a notice that such copying is by permission of Mitsubishi Electric Information Technology Center America; an acknowledgment of the authors and individual contributions to the work; and all applicable portions of the copyright notice. Copying, reproduction, or republishing for any other purpose shall require a license with payment of fee to Mitsubishi Electric Information Technology Center America. All rights reserved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Ayala, P. Brunet, R. Juan, and I. Navazo. </author> <title> Object representation by means of nonminimal division quadtrees and octrees. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 4(1) </volume> <pages> 41-59, </pages> <month> January </month> <year> 1985. </year>
Reference-contexts: Nonconvex models are allowed if they are specified as a hierarchy of convex pieces. Some objects are difficult to represent in this manner. For these, other types of collision detection algorithms are more suitable, such as those based on octrees <ref> [1] </ref>, binary space partitioning trees [24], sphere hierarchies [14], or oriented bounding boxes [12, 15]. Many of these algorithms, however, do not return an accurate estimate of the distance between objects nor the closest points between them, which is a drawback for simulation applications.
Reference: [2] <author> David Baraff. </author> <title> Coping with friction for non-penetrating rigid body simulation. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 31-40, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Frictional constraints destroy the convexity of the LCP and admit the possibility of having no valid solution. Baraff showed that the problem of determining the existence of a valid set of contact forces that obey Coulomb friction laws at the contacts is NP-hard when there is sliding friction <ref> [2, 3] </ref>. Pang and Trinkle [25] and Trinkle, et. al. [30] give comprehensive results on the existence and uniqueness of solutions for rigid body contact forces under the Coulomb friction model. Roughly speaking, existence and uniqueness can be guaranteed if the coefficients of friction are small enough.
Reference: [3] <author> David Baraff. </author> <title> Dynamic Simulation of Non-Penetrating Rigid Bodies. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>. <p> Frictional constraints destroy the convexity of the LCP and admit the possibility of having no valid solution. Baraff showed that the problem of determining the existence of a valid set of contact forces that obey Coulomb friction laws at the contacts is NP-hard when there is sliding friction <ref> [2, 3] </ref>. Pang and Trinkle [25] and Trinkle, et. al. [30] give comprehensive results on the existence and uniqueness of solutions for rigid body contact forces under the Coulomb friction model. Roughly speaking, existence and uniqueness can be guaranteed if the coefficients of friction are small enough.
Reference: [4] <author> David Baraff. </author> <title> Fast contact force computation for nonpenetrating rigid bodies. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, Proceedings of SIGGRAPH 94. ACM SIG-GRAPH, </booktitle> <year> 1994. </year>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>.
Reference: [5] <author> Vivek Bhatt and Jeff Koechling. </author> <title> Classifying dynamic behavior during three dimensional frictional rigid body impact. </title> <booktitle> In Proceedings of International Conference on Robotics and Automation. IEEE, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: See [6] for a good survey of methods for computing collision impulses algebraically, and <ref> [5, 16, 21, 29, 31] </ref> for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact.
Reference: [6] <author> Raymond M. Brach. </author> <title> Mechanical Impact Dynamics; Rigid Body Collisions. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1991. </year>
Reference-contexts: If the relative normal velocity between these points is above some small threshold, the interaction is treated as a collision, and applied collision impulses instantaneously change the body velocities, causing the bodies to separate at the collision points. See <ref> [6] </ref> for a good survey of methods for computing collision impulses algebraically, and [5, 16, 21, 29, 31] for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact.
Reference: [7] <author> Stephen Cameron. </author> <title> Enhancing GJK: Computing minimum penetration distances between convex polyhedra. </title> <booktitle> In Proceedings of International Conference on Robotics and Automation. IEEE, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Given two polyhedra, GJK searches for a simplex, defined by four vertices of the Minkowski difference polyhedron, that either encloses or is nearest to the origin. Others have made several improvements on the basic GJK algorithm, mostly to improve efficiency <ref> [27, 8, 7] </ref>. GJK algorithms are more robust than Lin-Canny, and handle the penetration case, but the implementations generally require more floating point operations. <p> V-Clip's operation count is comparable with Lin-Canny's and generally lower than that of Cameron's Enhanced GJK algorithm <ref> [7] </ref>. The remainder of this section briefly motivates the V-Clip algorithm; more details are given in [22]. 2.1 Features and Voronoi regions The boundary of a convex polyhedron comprises vertices, edges, and faces; these features are convex sets. The neighbors of a vertex are the edges incident to that vertex.
Reference: [8] <author> Kelvin Chung. </author> <title> An efficient collision detection algorithm for polytopes in virtual environments. </title> <type> Master's thesis, </type> <institution> University of Hong Kong, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: Given two polyhedra, GJK searches for a simplex, defined by four vertices of the Minkowski difference polyhedron, that either encloses or is nearest to the origin. Others have made several improvements on the basic GJK algorithm, mostly to improve efficiency <ref> [27, 8, 7] </ref>. GJK algorithms are more robust than Lin-Canny, and handle the penetration case, but the implementations generally require more floating point operations.
Reference: [9] <author> Jonathan D. Cohen, Ming C. Lin, Dinesh Manocha, and Madhav K. Ponamgi. I-collide: </author> <title> An interactive and exact collision detection system for large-scaled environments. </title> <booktitle> In Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 189-196. </pages> <note> ACM Siggraph, ACM Siggraph, </note> <month> April </month> <year> 1995. </year>
Reference-contexts: Lin-Canny is prone to cycling behavior when presented with models in degenerate configurations. The algorithm is difficult to code, and it is also difficult to tune the various floating point tolerances. Despite these problems, Lin-Canny's speed, and availability through the I-Collide package <ref> [9] </ref> have made it a popular choice for collision detection applications. Gilbert, Johnson and Keerthi developed a simplex-based algorithm for finding the distance between two disjoint convex polyhedra, or the distance by which they penetrate [11].
Reference: [10] <author> P. Faloutsos, M. van de Panne, and D. Terzopoulos. </author> <title> Dynamic free-form deformations for animation synthesis. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 3(3) </volume> <pages> 201-214, </pages> <month> July </month> <year> 1997. </year>
Reference-contexts: The more penetration, the stronger the restoring force. If the bodies move apart, the spring is destroyed. Penalty methods are used for rigid body simulation [20, 23, 28] but are most useful in deformable body simulation <ref> [10] </ref>. Penalty methods can produce stiff equations of motion due to the large spring constants needed to keep penetrations small. Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited.
Reference: [11] <author> Elmer G. Gilbert, Daniel W. Johnson, and S. Sathiya Keerthi. </author> <title> A fast procedure for computing the distance between complex objects in three-dimensional space. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(2) </volume> <pages> 193-203, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Despite these problems, Lin-Canny's speed, and availability through the I-Collide package [9] have made it a popular choice for collision detection applications. Gilbert, Johnson and Keerthi developed a simplex-based algorithm for finding the distance between two disjoint convex polyhedra, or the distance by which they penetrate <ref> [11] </ref>. Given two polyhedra, GJK searches for a simplex, defined by four vertices of the Minkowski difference polyhedron, that either encloses or is nearest to the origin. Others have made several improvements on the basic GJK algorithm, mostly to improve efficiency [27, 8, 7].
Reference: [12] <author> S. Gottschalk, M. C. Lin, and D. Manocha. Obb-tree: </author> <title> A hierarchical structure for rapid interference detection. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, Proceedings of SIGGRAPH 96. ACM SIGGRAPH, </booktitle> <year> 1996. </year>
Reference-contexts: Some objects are difficult to represent in this manner. For these, other types of collision detection algorithms are more suitable, such as those based on octrees [1], binary space partitioning trees [24], sphere hierarchies [14], or oriented bounding boxes <ref> [12, 15] </ref>. Many of these algorithms, however, do not return an accurate estimate of the distance between objects nor the closest points between them, which is a drawback for simulation applications.
Reference: [13] <author> James K. Hahn. </author> <title> Realistic animation of rigid bodies. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 299-308, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: In general, the reliability of the algorithms decrease as the number of contact points increases, or as friction increases. MERL-TR-98-01 March 1998 12 Impulse-based methods were pioneered by Hahn <ref> [13] </ref> and extended by Mir-tich [21]. The fundamental strategy of this approach is to model all contact between bodies by collisions at contact points. Between collisions, the bodies move along ballistic trajectories.
Reference: [14] <author> Philip M. Hubbard. </author> <title> Approximating polyhedra with spheres for time-critical collision detection. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 15(3), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: Nonconvex models are allowed if they are specified as a hierarchy of convex pieces. Some objects are difficult to represent in this manner. For these, other types of collision detection algorithms are more suitable, such as those based on octrees [1], binary space partitioning trees [24], sphere hierarchies <ref> [14] </ref>, or oriented bounding boxes [12, 15]. Many of these algorithms, however, do not return an accurate estimate of the distance between objects nor the closest points between them, which is a drawback for simulation applications.
Reference: [15] <author> T. Hudson, M. Lin, J. Cohen, S. Gottschalk, and D. Manocha. V-collide: </author> <title> Accelerated collision detection for VRML. </title> <booktitle> In Proceedings of VRML, </booktitle> <year> 1997. </year>
Reference-contexts: Some objects are difficult to represent in this manner. For these, other types of collision detection algorithms are more suitable, such as those based on octrees [1], binary space partitioning trees [24], sphere hierarchies [14], or oriented bounding boxes <ref> [12, 15] </ref>. Many of these algorithms, however, do not return an accurate estimate of the distance between objects nor the closest points between them, which is a drawback for simulation applications.
Reference: [16] <author> J. B. Keller. </author> <title> Impact with friction. </title> <journal> Journal of Applied Mechanics, </journal> <volume> 53, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: See [6] for a good survey of methods for computing collision impulses algebraically, and <ref> [5, 16, 21, 29, 31] </ref> for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact.
Reference: [17] <author> Ming C. Lin. </author> <title> Efficient Collision Detection for Animation and Robotics. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: The most recent algorithms cache witnesses that are used to verify disjointness or penetration in constant time. By exploiting the coherence properties of bodies moving continuously through space, these algorithms achieve near constant time performance. MERL-TR-98-01 March 1998 2 The popular Lin-Canny closest features algorithm <ref> [17] </ref> computes the distance between disjoint polyhedra; it is among the fastest solutions for this problem. Convex polyhedra are decomposed into vertex, edge and face features. The algorithm tracks and caches the closest features between a pair of convex polyhedra.
Reference: [18] <author> Per Lotstedt. </author> <title> Coulomb friction in two-dimensional rigid body systems. </title> <journal> Zeitschrift fur Ange-wandte Mathematik und Mechanik, </journal> <volume> 61(12) </volume> <pages> 605-15, </pages> <year> 1981. </year> <month> MERL-TR-98-01 March </month> <year> 1998 </year> <month> 16 </month>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>.
Reference: [19] <author> Per Lotstedt. </author> <title> Numerical simulation of time-dependent contact and friction problems in rigid body mechanics. </title> <journal> SIAM Journal of Scientific Statistical Computing, </journal> <volume> 5(2) </volume> <pages> 370-93, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>.
Reference: [20] <author> Michael McKenna and David Zeltzer. </author> <title> Dynamic simulation of autonomous legged locomotion. </title> <journal> Computer Graphics, </journal> <pages> pages 29-38, </pages> <year> 1990. </year>
Reference-contexts: The more penetration, the stronger the restoring force. If the bodies move apart, the spring is destroyed. Penalty methods are used for rigid body simulation <ref> [20, 23, 28] </ref> but are most useful in deformable body simulation [10]. Penalty methods can produce stiff equations of motion due to the large spring constants needed to keep penetrations small. Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations.
Reference: [21] <author> Brian Mirtich. </author> <title> Impulse-based Dynamic Simulation of Rigid Body Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: In some situations, surface curvature plays a significant role in contact dynamics, but polyhedral models do not admit accurate curvature measurements. Nonetheless, previous experience suggests that highly tesselated polyhedral models are sufficient to model phenomena such as rolling spheres and cylinders <ref> [21] </ref>. A more significant limitation of the algorithms presented here is that they are designed for piecewise convex models. Nonconvex models are allowed if they are specified as a hierarchy of convex pieces. Some objects are difficult to represent in this manner. <p> See [6] for a good survey of methods for computing collision impulses algebraically, and <ref> [5, 16, 21, 29, 31] </ref> for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact. <p> In general, the reliability of the algorithms decrease as the number of contact points increases, or as friction increases. MERL-TR-98-01 March 1998 12 Impulse-based methods were pioneered by Hahn [13] and extended by Mir-tich <ref> [21] </ref>. The fundamental strategy of this approach is to model all contact between bodies by collisions at contact points. Between collisions, the bodies move along ballistic trajectories.
Reference: [22] <author> Brian Mirtich. V-Clip: </author> <title> fast and robust polyhedral collision detection. </title> <type> Technical Report TR97-05, </type> <institution> Mitsubishi Electric Research Lab, </institution> <address> Cambridge, MA, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: V-Clip's operation count is comparable with Lin-Canny's and generally lower than that of Cameron's Enhanced GJK algorithm [7]. The remainder of this section briefly motivates the V-Clip algorithm; more details are given in <ref> [22] </ref>. 2.1 Features and Voronoi regions The boundary of a convex polyhedron comprises vertices, edges, and faces; these features are convex sets. The neighbors of a vertex are the edges incident to that vertex. The neighbors of a face are the edges bounding the face. <p> Vertex-edge planes contain the vertex and are normal to the edge, while face-edge planes contain the edge and are parallel to the face normal (Figure 1). 2.2 Algorithm overview The V-Clip algorithm is based on a fundamental theorem that is proved in <ref> [22] </ref>: Theorem 1 Let X and Y be a pair of features from disjoint convex polyhedra, and let x 2 X and y 2 Y be the closest points between X and Y .
Reference: [23] <author> Matthew Moore and Jane Wilhems. </author> <title> Collision detection and response for computer animation. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 289-298, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The more penetration, the stronger the restoring force. If the bodies move apart, the spring is destroyed. Penalty methods are used for rigid body simulation <ref> [20, 23, 28] </ref> but are most useful in deformable body simulation [10]. Penalty methods can produce stiff equations of motion due to the large spring constants needed to keep penetrations small. Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations.
Reference: [24] <author> Bruce F. Naylor. </author> <title> Interactive solid modeling via partitioning trees. </title> <booktitle> In Graphics Interface, </booktitle> <pages> pages 11-18, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Nonconvex models are allowed if they are specified as a hierarchy of convex pieces. Some objects are difficult to represent in this manner. For these, other types of collision detection algorithms are more suitable, such as those based on octrees [1], binary space partitioning trees <ref> [24] </ref>, sphere hierarchies [14], or oriented bounding boxes [12, 15]. Many of these algorithms, however, do not return an accurate estimate of the distance between objects nor the closest points between them, which is a drawback for simulation applications.
Reference: [25] <author> J.S. Pang and J.C. Trinkle. </author> <title> Complementarity formulations and existence of solutions of dynamic multi-rigid-body contact problems with coulomb friction. </title> <booktitle> Mathematical Programming, </booktitle> <year> 1996. </year> <note> (To appear). </note>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>. <p> Baraff showed that the problem of determining the existence of a valid set of contact forces that obey Coulomb friction laws at the contacts is NP-hard when there is sliding friction [2, 3]. Pang and Trinkle <ref> [25] </ref> and Trinkle, et. al. [30] give comprehensive results on the existence and uniqueness of solutions for rigid body contact forces under the Coulomb friction model. Roughly speaking, existence and uniqueness can be guaranteed if the coefficients of friction are small enough.
Reference: [26] <author> William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian R. Flannery. </author> <title> Numerical Recipes in C: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <note> second edition, </note> <year> 1992. </year>
Reference-contexts: Often A is rank deficient, and so f is solved for by f = A I b; (3) where A I is the "inverse" of A computed by SVD <ref> [26] </ref>. Assuming b is in the column space of A, which is the case in practice, the vector f obtained from (3) is the vector of minimum norm that satisfies (2) with a set to 0.
Reference: [27] <author> Rich Rabbitz. </author> <title> Fast collision detection of moving convex polyhedra. </title> <editor> In Paul S. Heckbert, editor, </editor> <booktitle> Graphics Gems IV, </booktitle> <pages> pages 83-109, </pages> <address> Cambridge, 1994. </address> <publisher> Academic Press, Inc. </publisher>
Reference-contexts: Given two polyhedra, GJK searches for a simplex, defined by four vertices of the Minkowski difference polyhedron, that either encloses or is nearest to the origin. Others have made several improvements on the basic GJK algorithm, mostly to improve efficiency <ref> [27, 8, 7] </ref>. GJK algorithms are more robust than Lin-Canny, and handle the penetration case, but the implementations generally require more floating point operations.
Reference: [28] <author> Marc H. Raibert and Jessica K. Hodgins. </author> <title> Animation of dynamic legged locomotion. </title> <journal> Computer Graphics, </journal> <pages> pages 349-358, </pages> <year> 1991. </year>
Reference-contexts: The more penetration, the stronger the restoring force. If the bodies move apart, the spring is destroyed. Penalty methods are used for rigid body simulation <ref> [20, 23, 28] </ref> but are most useful in deformable body simulation [10]. Penalty methods can produce stiff equations of motion due to the large spring constants needed to keep penetrations small. Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations.
Reference: [29] <author> W. J. Stronge. </author> <title> Unraveling paradoxical theories for rigid body collisions. </title> <journal> Journal of Applied Mechanics, </journal> <volume> 58 </volume> <pages> 1049-1055, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: See [6] for a good survey of methods for computing collision impulses algebraically, and <ref> [5, 16, 21, 29, 31] </ref> for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact.
Reference: [30] <author> J.C. Trinkle, J.S. Pang, S. Sudarsky, and G. Lo. </author> <title> On dynamic multi-rigid-body contact problems with coulomb friction. </title> <institution> Zeitschrift fur Angewandte Mathematik und Mechanik, </institution> <year> 1996. </year> <note> (To appear). </note>
Reference-contexts: Choosing the spring constants is done in an ad-hoc way, and must be tailored to specific situations. Because of these drawbacks, their use use in general settings is limited. LCP methods cast the contact force problem as a linear complementarity problem (LCP) <ref> [3, 4, 18, 19, 25, 30] </ref>. <p> Baraff showed that the problem of determining the existence of a valid set of contact forces that obey Coulomb friction laws at the contacts is NP-hard when there is sliding friction [2, 3]. Pang and Trinkle [25] and Trinkle, et. al. <ref> [30] </ref> give comprehensive results on the existence and uniqueness of solutions for rigid body contact forces under the Coulomb friction model. Roughly speaking, existence and uniqueness can be guaranteed if the coefficients of friction are small enough.
Reference: [31] <author> Yu Wang and Matthew T. Mason. </author> <title> Modeling impact dynamics for robotic operations. </title> <booktitle> In Proceedings of International Conference on Robotics and Automation, </booktitle> <pages> pages 678-685. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1987. </year> <month> MERL-TR-98-01 March </month> <year> 1998 </year>
Reference-contexts: See [6] for a good survey of methods for computing collision impulses algebraically, and <ref> [5, 16, 21, 29, 31] </ref> for more sophisticated methods. When the relative normal velocity between two bodies about to collide is below the threshold, the interaction is more naturally modeled as a contact.
References-found: 31

