URL: http://www.cs.utexas.edu/users/vl/mypapers/ae.ps
Refering-URL: http://www.cs.utexas.edu/users/vl/papers.html
Root-URL: 
Title: Extended Logic Programs as Autoepistemic Theories  
Author: Vladimir Lifschitz Grigori Schwarz 
Address: Austin, TX 78712, USA  Stanford, CA 94305, USA  
Affiliation: Department of Computer Sciences and Department of Philosophy University of Texas  Robotics Laboratory Computer Science Department Stanford University  
Abstract: Recent research on applications of nonmonotonic reasoning to the semantics of logic programs demonstrates that some nonmonotonic formalisms are better suited for such use than others. Circumscription is applicable as long as the programs under consideration are stratified. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic or default logic. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain. In this paper we show that programs with classical negation can be, in fact, easily represented by autoepistemic theories. We also prove that an even simpler embedding is possible if reflexive autoepistemic logic is used. Both translations are applicable to disjunctive programs as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Bidoit and C. Froidevaux. </author> <title> Minimalism subsumes default logic and circumscription. </title> <booktitle> In Proceedings of LICS-87, </booktitle> <pages> pages 89-97, </pages> <year> 1987. </year>
Reference-contexts: Circumscription is applicable as long as the programs under consideration are stratified [10]. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic [4], [5] or default logic <ref> [1] </ref>, [2]. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain.
Reference: [2] <author> N. Bidoit and C. Froidevaux. </author> <title> Negation by default and nonstratifiable logic programs. </title> <type> Technical Report 437, </type> <institution> Universite Paris XI, </institution> <year> 1988. </year>
Reference-contexts: Circumscription is applicable as long as the programs under consideration are stratified [10]. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic [4], [5] or default logic [1], <ref> [2] </ref>. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain.
Reference: [3] <institution> Jianhua Chen Minimal knowledge + negation as failure = only knowing (sometimes). </institution> <note> In this volume. </note>
Reference-contexts: They also analyze translations (6) and (7) in detail, and stress the special role of reflexive autoepistemic logic for the analysis of the semantics of extended logic programs. The correspondence between logic programs and autoepistemic logic, given by translation (6), was independently found by Jianhua Chen <ref> [3] </ref>. Interestingly, he also uses logic MBNF as a starting point of his considerations. In Section 2, we give a brief review of three modal nonmonotonic systems: autoepistemic logic, reflexive autoepistemic logic, and the propositional fragment of the logic of minimal belief and negation as failure. <p> Jianhua Chen and Miros law Truszczynski have sent us drafts of the closely related papers <ref> [3] </ref> and [16]. This work was partially supported by National Science Foundation under grant IRI-9101078. Notes 1. In [18], this operator is denoted by L. 2.
Reference: [4] <author> M. Gelfond. </author> <title> On stratified autoepistemic theories. </title> <booktitle> In Proceedings of AAAI-87, </booktitle> <pages> pages 207-211, </pages> <year> 1987. </year>
Reference-contexts: Circumscription is applicable as long as the programs under consideration are stratified [10]. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic <ref> [4] </ref>, [5] or default logic [1], [2]. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain. <p> Moreover, each consistent stable (reflexive) expansion of a (of r ) has the form T h (Mod (M )) for some consistent set M of literals. Corollary 3.1 applies, in particular, to general logic programs, when Gel-fond's translation, transforming (1) into (2) <ref> [4] </ref>, is applicable also. In this special case, there is an essential difference between Gelfond's translation G and our translation 7! a .
Reference: [5] <author> M. Gelfond and V. Lifschitz. </author> <title> The stable model semantics for logic pro gramming. </title> <editor> In R. Kowalski and K. Bowen, editors, </editor> <booktitle> Logic Programming: Proceedings of the Fifth International Conference and Symposium, </booktitle> <pages> pages 1070-1080, </pages> <year> 1988. </year>
Reference-contexts: Circumscription is applicable as long as the programs under consideration are stratified [10]. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic [4], <ref> [5] </ref> or default logic [1], [2]. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain. <p> : ^ A m ^ :BA m+1 ^ : : : ^ :BA n A 0 ; (2) where B is the "belief" operator of autoepistemic logic. 1 The declarative semantics of a program can be characterized in terms of the autoepistemic theory obtained by this transformation ([4], Theorem 5; <ref> [5] </ref>, Theorem 3). An extended logic program consists of rules of the same form (1), except that each A i is allowed to be a literal (an atom possibly preceded by :). Thus an extended rule may contain two kinds of negation|classical negation: and negation as failure not .
Reference: [6] <author> M. Gelfond and V. Lifschitz. </author> <title> Classical negation in logic programs and disjunctive databases. </title> <journal> New Generation Computing, </journal> <volume> 9 </volume> <pages> 365-385, </pages> <year> 1991. </year>
Reference-contexts: Thus an extended rule may contain two kinds of negation|classical negation: and negation as failure not . Such rules are useful for representing incomplete information. Their semantics, defined in terms of "answer sets" <ref> [6] </ref>, is noncontrapositive, in the sense that it distinguishes between the rules P Q and :Q :P . The former is, intuitively, an "inference rule" allowing us to derive P from Q; the latter allows us to derive :Q from :P . <p> However, this idea does not work: The program consisting of just one rule with the empty body, P , would correspond to the autoepistemic theory fBP g, which has no stable expansions. 2 Considerations of this sort have led the authors of <ref> [6] </ref> to the rejection of autoepistemic logic as an instrument for the study of logic programming. We prove, however, in this paper that a simple hybrid of (2) and (3) does the job. <p> For our purposes, the exact definition of this concept is inessential. We only need to know that it is a generalization of the definition of an answer set for disjunctive logic programs <ref> [6] </ref>, provided that we agree to identify a rule (5) with the bimodal formula BA l+1 ^ : : : ^ BA m ^ not A m+1 ^ : : : ^ not A n BA 1 _ : : : _ BA l : 4 (8) The property of answer
Reference: [7] <author> M. Gelfond, V. Lifschitz, H. Przymusinska, and M. Truszczynski. </author> <title> Dis junctive defaults. </title> <editor> In J. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Second International Conference, </booktitle> <pages> pages 230-237, </pages> <year> 1991. </year>
Reference-contexts: In this paper we show that programs with classical negation can be, in fact, easily represented by autoepistemic theories. The new translation is applicable to disjunctive programs as well. This last fact is particularly striking, because disjunctive rules do not seem to be reducible to defaults <ref> [7] </ref>. Recall that a general logic program is a set of rules of the form A 0 A 1 ; : : :; A m ; not A m+1 ; : : :; not A n ; (1) where each A i is an atom.
Reference: [8] <author> H.J. Levesque. </author> <title> All I know: a study in autoepistemic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 263-309, </pages> <year> 1990. </year>
Reference-contexts: This fact may be extracted from [17]. It is also presented in <ref> [8] </ref>, in somewhat different terms, and is discussed in [20] in more detail. 2.2 Reflexive Autoepistemic Logic For any sets T , E of unimodal formulas, E is said to be a reflexive expansion of T if it satisfies the equation E = f : T [ f:B' : ' =2
Reference: [9] <author> V. Lifschitz. </author> <title> Pointwise circumscription. </title> <editor> In M. Ginsberg, editor, </editor> <booktitle> Read ings in Nonmonotonic Reasoning, </booktitle> <pages> pages 179-193, </pages> <address> Los Altos, CA., 1987. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This is reminiscent of the relationship between circumscription and point-wise circumscription <ref> [9] </ref>.
Reference: [10] <author> V. Lifschitz. </author> <title> On the declarative semantics of logic programs with nega tion. </title> <editor> In J. Minker, editor, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming, </booktitle> <pages> pages 177-192. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Recent research on applications of nonmonotonic reasoning to the semantics of logic programs demonstrates that some nonmonotonic formalisms are better suited for such use than others. Circumscription is applicable as long as the programs under consideration are stratified <ref> [10] </ref>. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic [4], [5] or default logic [1], [2].
Reference: [11] <author> V. Lifschitz. </author> <title> Minimal belief and negation as failure. </title> <note> Submitted for publication, </note> <year> 1992. </year>
Reference-contexts: (I; S) j= ae ' ^ B', (b) If S 6= ; then (I; S) j= ae B' if and only if (I; S) j= rae :B:B'. 2.3 The Logic of Minimal Belief and Negation as Failure MBNF, the logic of minimal belief and negation as failure, is defined in <ref> [11] </ref> 3 . Here we only consider its propositional fragment.
Reference: [12] <author> V. Lifschitz and T.Y.C. Woo. </author> <title> Answer sets in general nonmonotonic reasoning. </title> <booktitle> In Principles of Knowledge Representation and Reasoning, </booktitle> <address> San Mateo, CA, </address> <year> 1992. </year> <note> Morgan Kaufmann. To appear. </note>
Reference-contexts: They are stated in terms of propositional combinations of "protected literals" of the logic of minimal belief and negation as failure (MBNF) <ref> [12] </ref>, which include disjunctive programs as a special case. The correspondence between logic programs and reflexive autoepistemic theories, given by translation (7), was independently found by Marek and Truszczynski [16]. <p> make the formulas from M true.) Moreover, one can define, for any such T , when a set of literals is an "answer set" of T , so that the models of T can be characterized as the pairs (I; Mod (M )) for all answer sets M of T <ref> [12] </ref>. For our purposes, the exact definition of this concept is inessential. <p> In the statement of the lemma, every axiom F is required to satisfy the following condition: Each occurrence of an atom in F is a part of a protected literal. Such formulas are called formulas with protected literals, or PL-formulas <ref> [12] </ref>. Alternatively, PL-formulas can be characterized as the formulas built from protected literals using propositional connectives and the operators B and not. Obviously, this includes propositional combinations of protected literals as a special case. <p> If ' is a propositional combination of protected literals in which not occurs only negatively, then it can be written as a conjunction of (formulas corresponding to) disjunctive rules. If, as in <ref> [12] </ref>, the language is assumed to include the logical constant "true", then the use of this constant in the scope of modal operators is another source of formulas that do not correspond to disjunctive rules. 5. This is reminiscent of the relationship between circumscription and point-wise circumscription [9].
Reference: [13] <author> F. Lin and Y. Shoham. </author> <title> A logic of knowledge and justified assumptions. </title> <journal> Artificial Intelligence, </journal> <volume> 57 </volume> <pages> 271-290, </pages> <year> 1992. </year>
Reference-contexts: But if we apply it to the trivial rule P P , the result will be the axiom BP P , which has two stable expansions. 3. MBNF was developed as a generalization to the full predicate language of the system GK, proposed by Lin and Shoham <ref> [13] </ref>. The propositional fragment of MBNF is essentially equivalent to GK, as long as nested modalities are not involved. 4. Propositional combinations of protected literals are more general than disjunctive rules, because they may include positive occurrences of not.
Reference: [14] <author> W. Marek, G.F. Shvarts, and M. Truszczynski. </author> <title> Modal nonmonotonic logics: ranges, characterization, computation. </title> <type> Technical Report 187-91, </type> <institution> Department of Computer Science, University of Kentucky, </institution> <year> 1991. </year> <note> A revised version is to appear in the Journal of ACM. </note>
Reference-contexts: detail. 2.2 Reflexive Autoepistemic Logic For any sets T , E of unimodal formulas, E is said to be a reflexive expansion of T if it satisfies the equation E = f : T [ f:B' : ' =2 Eg [ f' B' : ' 2 Eg ` g [19], <ref> [14] </ref>. Note the difference between this definition and Moore's definition of a stable expansion: Positive introspection for a formula ' 2 E is represented by the term ' B', rather than B'. Reflexive expansions admit a semantical characterization similar to the one given above for stable expansions.
Reference: [15] <author> W. Marek and V.S. Subrahmanian. </author> <title> The relationship between logic program semantics and non-monotonic reasoning. </title> <editor> In G. Levi and M. Martelli, editors, </editor> <booktitle> Logic Programming: Proceedings of the Sixth International Conference, </booktitle> <pages> pages 600-617, </pages> <year> 1989. </year>
Reference-contexts: This work was partially supported by National Science Foundation under grant IRI-9101078. Notes 1. In [18], this operator is denoted by L. 2. Inserting B in front of every literal in the body of the rule, but not in the head <ref> [15] </ref>, is another idea that may first seem promising. But if we apply it to the trivial rule P P , the result will be the axiom BP P , which has two stable expansions. 3.
Reference: [16] <author> W. Marek and M. Truszczynski. </author> <title> The modal nonmonotonic logic of negation as failure. </title> <booktitle> In this volume. </booktitle>
Reference-contexts: The correspondence between logic programs and reflexive autoepistemic theories, given by translation (7), was independently found by Marek and Truszczynski <ref> [16] </ref>. They also analyze translations (6) and (7) in detail, and stress the special role of reflexive autoepistemic logic for the analysis of the semantics of extended logic programs. The correspondence between logic programs and autoepistemic logic, given by translation (6), was independently found by Jianhua Chen [3]. <p> Jianhua Chen and Miros law Truszczynski have sent us drafts of the closely related papers [3] and <ref> [16] </ref>. This work was partially supported by National Science Foundation under grant IRI-9101078. Notes 1. In [18], this operator is denoted by L. 2.
Reference: [17] <author> R.C. Moore. </author> <title> Possible-world semantics autoepistemic logic. </title> <editor> In R. Re iter, editor, </editor> <booktitle> Proceedings of the workshop on non-monotonic reasoning, </booktitle> <pages> pages 344-354, </pages> <year> 1984. </year> <note> (Reprinted in: </note> <editor> M. Ginsberg, editor, </editor> <booktitle> Readings on nonmonotonic reasoning. </booktitle> <pages> pages 137-142, </pages> <address> 1990, </address> <publisher> Morgan Kaufmann.). </publisher>
Reference-contexts: Intuitively, T is a "theory," the elements of T are its "axioms," and the elements of E are the "theorems" that follow from the axioms in autoepis-temic logic. Autoepistemic logic can be also described in terms of models <ref> [17] </ref>. The satisfaction relation j= ae between a unimodal structure and a unimodal formula is defined inductively, as follows. For an atom ', (I; S) j= ae ' iff ' 2 I. <p> This fact may be extracted from <ref> [17] </ref>.
Reference: [18] <author> R.C. Moore. </author> <title> Semantical considerations on non-monotonic logic. </title> <journal> Artifi cial Intelligence, </journal> <volume> 25 </volume> <pages> 75-94, </pages> <year> 1985. </year>
Reference-contexts: are sets of interpretations. 2.1 Autoepistemic Logic For any sets T , E of unimodal formulas, E is said to be a stable expansion of T if it satisfies the equation E = f : T [ f:B' : ' =2 Eg [ fB' : ' 2 Eg ` g <ref> [18] </ref>. Intuitively, T is a "theory," the elements of T are its "axioms," and the elements of E are the "theorems" that follow from the axioms in autoepis-temic logic. Autoepistemic logic can be also described in terms of models [17]. <p> Jianhua Chen and Miros law Truszczynski have sent us drafts of the closely related papers [3] and [16]. This work was partially supported by National Science Foundation under grant IRI-9101078. Notes 1. In <ref> [18] </ref>, this operator is denoted by L. 2. Inserting B in front of every literal in the body of the rule, but not in the head [15], is another idea that may first seem promising.
Reference: [19] <author> G.F. Schwarz. </author> <title> Autoepistemic logic of knowledge. </title> <editor> In W. Marek, A. Nerode and V.S. Submarahmanian, editors, </editor> <booktitle> Logic programming and non-monotonic reasoning. Proceedings of the First International Workshop, </booktitle> <pages> pages 260-274, </pages> <address> Cambridge, MA, 1991. </address> <publisher> MIT Press. </publisher>
Reference-contexts: transformed into the autoepistemic axiom (A l+1 ^ BA l+1 ) ^ : : : ^ (A m ^ BA m ) ^ :BA m+1 ^ : : : ^ :BA n (6) Logic programs can be also translated into reflexive autoepistemic logic| the modification of autoepistemic logic introduced in <ref> [19] </ref>. <p> more detail. 2.2 Reflexive Autoepistemic Logic For any sets T , E of unimodal formulas, E is said to be a reflexive expansion of T if it satisfies the equation E = f : T [ f:B' : ' =2 Eg [ f' B' : ' 2 Eg ` g <ref> [19] </ref>, [14]. Note the difference between this definition and Moore's definition of a stable expansion: Positive introspection for a formula ' 2 E is represented by the term ' B', rather than B'. Reflexive expansions admit a semantical characterization similar to the one given above for stable expansions. <p> There exist simple translations from reflexive autoepistemic logic into autoepistemic logic and back <ref> [19] </ref>.
Reference: [20] <author> G.F. Schwarz. </author> <title> Minimal model semantics for nonmonotonic modal logics. </title> <booktitle> In Proceedings of LICS-92, </booktitle> <pages> pages 34-43, </pages> <year> 1992. </year>
Reference-contexts: This fact may be extracted from [17]. It is also presented in [8], in somewhat different terms, and is discussed in <ref> [20] </ref> in more detail. 2.2 Reflexive Autoepistemic Logic For any sets T , E of unimodal formulas, E is said to be a reflexive expansion of T if it satisfies the equation E = f : T [ f:B' : ' =2 Eg [ f' B' : ' 2 Eg ` <p> It follows that Th (S) can be equivalently described as the set of all formulas ' such that, for every I 2 S, (I; S) j= rae '. The following counterpart of Proposition 2.1 is proved in <ref> [20] </ref>. Proposition 2.2 For any sets T , E of unimodal formulas, E is a consistent reflexive expansion of T if and only if E = Th (S) for some nonempty reflexive autoepistemic model S of T .
References-found: 20

