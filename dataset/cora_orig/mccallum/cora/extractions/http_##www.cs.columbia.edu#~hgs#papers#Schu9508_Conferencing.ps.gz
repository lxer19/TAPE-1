URL: http://www.cs.columbia.edu/~hgs/papers/Schu9508_Conferencing.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/resume/resume.html
Root-URL: http://www.cs.columbia.edu
Email: hgs@fokus.gmd.de  
Title: Conferencing and Collaborative Computing  
Author: Henning Schulzrinne 
Date: August 10, 1995  
Address: Fokus, Berlin  
Affiliation: GMD  
Abstract: Despite their long research history, few synchronous conferencing tools have found widespread deployment and use. In the area of application sharing, the diversity of platforms and issues of security and state maintenance are predominant. The paper discusses some of the areas where further research and engineering work is necessary, particularly for the audio and video components of multimedia conferences. Hardware support needs to be designed to avoid unnecessary high-rate data transfer through system bus or memory. Operating systems need to be aware of the scheduling requirements of continuous-media applications, which differ from both those of classical computing applications and industrial real-time systems. Networks need to be designed to provide end-to-end quality of service assurance and scalable multicast. Since the diversity of conferencing applications far exceeds that of small-group sessions, mechanisms to reuse conferencing applications in a variety of settings have to be developed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Gale, </author> <title> Adding audio and video to an office environment, in Studies in computer supported cooperative work (J. </title> <editor> M. Bowers and S. D. Benford, eds.), </editor> <booktitle> Human Factors in Information Technology, </booktitle> <pages> pp. 49-62, </pages> <address> Amsterdam: </address> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference-contexts: However, both practical experience and formal experiments <ref> [1] </ref> seem to show that the use of video in conferencing applications is somewhat secondary. Video does not affect task performance; at least in technical discussions, it is often used to display viewgraphs (rather poorly) and to indicate how many people are still physically present within the conference.
Reference: [2] <author> T. Becker, </author> <title> Konzeption und realisierung eines virtuellen konferenztisches, </title> <type> Master's thesis, </type> <institution> Technische Universit t Berlin, </institution> <address> Berlin, Germany, </address> <month> Dec. </month> <year> 1993. </year> <pages> Studienarbeit. </pages>
Reference: [3] <author> S. Hayashi, </author> <title> Increase in binaural articulation score by simulated localization using head-related transfer function, </title> <journal> IEICE Transactions on Fundamentals, </journal> <volume> vol. E75-A, </volume> <pages> pp. 149-154, </pages> <month> Feb. </month> <year> 1992. </year> <month> 8 </month>
Reference: [4] <author> S. Masaki, T. Arikawa, H. Ichihara, M. Tanbara, and K. Shimamura, </author> <title> A promising group--ware system for broadband ISDN: </title> <journal> PMTC, ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 55-56, </pages> <month> Mar. </month> <year> 1992. </year>
Reference: [5] <author> R. Frederick, </author> <title> Experiences with real-time software video compression, </title> <booktitle> in Sixth International Workshop on Packet Video, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: On the other hand, it is far easier to introduce a new video coding if it can be distributed as software. For encoding, particularly motion estimation, only hardware-assisted solutions with low-level parallelism appear to be feasible. Work in developing video codecs suited for software encoding and decoding continues <ref> [5] </ref>, but high coding gains seem to require motion estimation. Interoperation between dedicated circuit-switched codecs and workstation-based video conferencing is feasible with software-implementations of video coding standards like H.261.
Reference: [6] <author> M. B. Jones, </author> <title> Adaptive real-time resource management supporting modular composition of digital multimedia services, </title> <booktitle> in Proceedings of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video, (Lancaster, U.K.), </booktitle> <pages> pp. 11-18, </pages> <institution> Lancaster University, </institution> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: It has been proposed to make applications learn about their resource needs <ref> [6] </ref>, but the success of that appears doubtful, given that for a video application, for example, CPU usage depends, among other factors, on the frame rates and number of sending sources, which may be changing constantly.
Reference: [7] <author> J. Nieh, J. G. Hanko, J. D. Northcutt, and G. A. Wall, </author> <title> SVR4 UNIX scheduler unacceptable for multimedia applications, </title> <booktitle> in Proceedings of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video, (Lancaster, U.K.), </booktitle> <pages> pp. 35-47, </pages> <address> Lan-caster University, </address> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Attempts to modify existing operating systems by adding a real-time scheduling class have caused system instabilities and had to be abandoned <ref> [7] </ref>. While ideally many real-time sources are periodic, network delays may cause bunching of packets. If CPU resources are made available only periodically, only parts of these packet bursts will be processed, leading to unacceptable quality degradation. Other real-time sources like slow-scan video may not be periodic at all.
Reference: [8] <author> C. Topolcic, </author> <title> Experimental internet stream protocol, version 2 (ST-II), Request for Comments (Experimental) RFC 1190, </title> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: The interoperation of receiver-oriented IP multicast with sender-rooted multicast found in ATM remains unsolved for anything but small, local domains. Diagnostic tools are just starting to appear. ST-II <ref> [8] </ref> has been proposed as an alternative solution, but it suffers from implementation complexity and poor scaling since the sender has to explicitly establish a connection to every end point.
Reference: [9] <author> O. Hagsand and S. Pink, </author> <title> ATM as a link in an ST-2 internet, </title> <booktitle> in Proceedings of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video, (Lancaster, U.K.), </booktitle> <pages> pp. 189-198, </pages> <institution> Lancaster University, </institution> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Using ST-II over ATM, both being connection-oriented, would appear to be a promising approach, but the two intertwined connection establishment phases add further delay and complication <ref> [9] </ref>. From the beginning, ATM was billed as a true multimedia service, with guaranteed quality of service.
Reference: [10] <author> M. Laubach, </author> <title> Classical IP and ARP over ATM, Request for Comments (Proposed Standard) RFC 1577, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: the combined peak rates of all VCs is less than capacity. (Clearly, any network technology can offer good service under those conditions.) The debate over the proper role of ATM continues, with approaches ranging from treating ATM 4 like adjustable-rate point-to-point links in a connectionless internetwork (classical IP over ATM <ref> [10] </ref>) to connectionless servers, i.e., yet another network-layer protocol, to dynamic connection establishment similar to the approaches used for routing IP over X.25 and ISDN, and finally pure ATM end-to-end solutions, possibly directly carrying MPEG streams, without any network layer protocol.
Reference: [11] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, Rsvp: </author> <title> a new resource ReSerVation protocol, </title> <journal> IEEE Network, </journal> <volume> vol. 7, </volume> <pages> pp. 8-18, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Initial multicast support of switches and signaling protocols appears to be poor, with at best only homogeneous 1-to-N multicast in the offing. (Also, while theoretically supported, parallel connection establishment seems to be rather limited in scope, leading to extremely long connection-establishment times.) Receiver-initiated signaling as proposed for IP (RSVP, <ref> [11] </ref>), ST-II and ATM could relieve hosts from the burden of managing dynamically changing multicast groups of several hundred end systems. RSVP, in particular, offers an interesting approach to establishing state in datagram networks, but its error recovery properties and interaction with routing need to be explored.
Reference: [12] <author> B. Metzler and I. Miloucheva, </author> <title> Specification of the broadband transport protocol XTPX. </title> <address> R2060/TUB/CIO/DS/P/001/b2, </address> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: RSVP, in particular, offers an interesting approach to establishing state in datagram networks, but its error recovery properties and interaction with routing need to be explored. At the transport level, all-in-one combined network/transport protocols like various derivatives of XTP <ref> [12] </ref> compete with simple special-purpose protocols like RTP [13] for the unreliable delivery of real-time data. The complexity, large header size and lack of routing support for protocols like XTP (without being encapsulated) have limited their use to demonstrations.
Reference: [13] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> A transport protocol for real-time applications. Internet draft (work-in-progress) draft-ietf-avt-rtp-*.txt, </title> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: RSVP, in particular, offers an interesting approach to establishing state in datagram networks, but its error recovery properties and interaction with routing need to be explored. At the transport level, all-in-one combined network/transport protocols like various derivatives of XTP [12] compete with simple special-purpose protocols like RTP <ref> [13] </ref> for the unreliable delivery of real-time data. The complexity, large header size and lack of routing support for protocols like XTP (without being encapsulated) have limited their use to demonstrations.
Reference: [14] <author> S. Ramanathan and V. P. Rangan, </author> <title> Adaptive feedback techniques for synchronized multimedia retrieval over integrated networks, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 246-260, </pages> <month> Apr. </month> <year> 1993. </year>
Reference: [15] <author> D. C. A. Bulterman, </author> <title> Synchronization of multi-sourced multimedia data for heterogeneous target systems, </title> <booktitle> in Third International Workshop on network and operating system support for digital audio and video, </booktitle> <address> (San Diego, California), </address> <pages> pp. 110-120, </pages> <publisher> IEEE Communications Society, </publisher> <month> Nov. </month> <year> 1992. </year>
Reference: [16] <author> T. D. C. Little, A. Ghafoor, C. Y. R. Chen, C. S. Chang, and P. B. Berra, </author> <title> Multimedia synchronization, </title> <journal> The Quarterly Bulletin of the IEEE Computer Society Technical Committe on Data Engineering, </journal> <volume> vol. 14, </volume> <pages> pp. 26-35, </pages> <month> Sept. </month> <year> 1991. </year> <month> 9 </month>
Reference: [17] <author> D. L. Mills, </author> <title> Internet time synchronization: the network time protocol, </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1482-1493, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: Synchronization between media streams has been the topic of a large body of research [14-16]. It appears, however, that once synchronized clocks are available with clock differences of a few milliseconds <ref> [17] </ref>, the problem is largely solved. Explicit synchronization algorithms appear to provide special-case multi-party clock synchronization. Some further experimental work on playout synchronization in different networks is useful, although the need for sophisticated algorithms arises primarily in lower speed packet networks like the Internet [18].
Reference: [18] <author> R. Ramjee, J. Kurose, D. Towsley, and H. Schulzrinne, </author> <title> Adaptive playout mechanisms for packetized audio applications in wide-area networks, </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Toronto, Canada), </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Explicit synchronization algorithms appear to provide special-case multi-party clock synchronization. Some further experimental work on playout synchronization in different networks is useful, although the need for sophisticated algorithms arises primarily in lower speed packet networks like the Internet <ref> [18] </ref>. The integration of resource discovery tools like the World-Wide Web with multimedia conferencing and collaborative computing is just beginning to be explored. 6 Structure Beyond providing for individual media sessions, a number of researchers have explored metaphors for conferences to provide structure and navigation.
Reference: [19] <author> S. R. Ahuja and J. R. </author> <title> Ensor, Call and connection management: making desktop conferencing systems a real service, </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 10-11, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: The integration of resource discovery tools like the World-Wide Web with multimedia conferencing and collaborative computing is just beginning to be explored. 6 Structure Beyond providing for individual media sessions, a number of researchers have explored metaphors for conferences to provide structure and navigation. Examples are virtual meeting rooms <ref> [19, 20] </ref> and hierarchical conferences, where a conference can itself be a member of a conference [21].
Reference: [20] <author> T. O'Grady and S. Greenberg, </author> <title> A groupware environment for complete meetings, </title> <booktitle> in Proceedings CHI'94, </booktitle> <pages> pp. </pages> -, <year> 1994. </year>
Reference-contexts: The integration of resource discovery tools like the World-Wide Web with multimedia conferencing and collaborative computing is just beginning to be explored. 6 Structure Beyond providing for individual media sessions, a number of researchers have explored metaphors for conferences to provide structure and navigation. Examples are virtual meeting rooms <ref> [19, 20] </ref> and hierarchical conferences, where a conference can itself be a member of a conference [21].
Reference: [21] <author> H. M. Vin and P. V. Rangan, </author> <title> System support for computer mediated multimedia collaborations, </title> <booktitle> in Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), </booktitle> <address> (Toronto, Canada), </address> <pages> pp. 203-209, </pages> <publisher> ACM, </publisher> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Examples are virtual meeting rooms [19, 20] and hierarchical conferences, where a conference can itself be a member of a conference <ref> [21] </ref>. <p> WWW pages [22], with the additional ability to use proximity on the page to indicate full or partial communication. (Participants normally communicate only with those they touch on the WWW page, but can shout to anyone on the page.) Also, operations on conferences as objects, such as adding or merging, <ref> [21] </ref> have been studied. It remains to be seen whether these models are flexible enough to encompass most real-life communication situations and whether the additional complexity is warranted and can be represented to the user in meaningful terms.
Reference: [22] <author> E. Shapiro, </author> <title> Virtual places a foundation for human interaction, </title> <booktitle> in Proc. of the Second World Wide Web Conference'94, </booktitle> <address> (Chicago, Illinois), </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Examples are virtual meeting rooms [19, 20] and hierarchical conferences, where a conference can itself be a member of a conference [21]. Room-based conferences can readily be represented by the mapping of conferences onto WWW pages <ref> [22] </ref>, with the additional ability to use proximity on the page to indicate full or partial communication. (Participants normally communicate only with those they touch on the WWW page, but can shout to anyone on the page.) Also, operations on conferences as objects, such as adding or merging, [21] have been
Reference: [23] <author> C. Elliott, </author> <title> A 'sticky' conference control protocol, Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 5, </volume> <pages> pp. </pages> -, <year> 1994. </year>
Reference-contexts: Rather than terminating the conference, it will usually be more desirable to continue with as many participants as possible. The sticky conference control protocol <ref> [23] </ref> puts particular emphasis on such robustness. It appears that in many cases it is unrealistic to expect to have a universally agreed-upon state.
Reference: [24] <author> H. Schulzrinne, </author> <title> Voice communication across the Internet: A network voice terminal, </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: The sticky conference control protocol [23] puts particular emphasis on such robustness. It appears that in many cases it is unrealistic to expect to have a universally agreed-upon state. Internet multimedia conferencing, exemplified by applications like vat, nv, NeVoT <ref> [24] </ref> and wb, take this to the extreme of simply periodically announcing the presence and state of participants via multicast. The announcement period is varied randomly to avoid synchronization, with increasing mean as the number of participants increases.
Reference: [25] <author> S. Shenker and A. Weinrib, </author> <title> Managing shared ephemeral teleconferencing state: policy and mechanism. </title> <type> memorandum, </type> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: Given the wide diversity of collaboration styles, it appears difficult to arrive at a canonical, all-encompassing conference control protocol or application. Rather more promising appear attempts to distill common, underlying control functions and allow combining these in appropriate ways. The agreement protocols <ref> [25, 26] </ref> formalizes the problem of agreeing on shared state and modifying it based on voting rules. If eventual consistency is desired, some form of reliable multicast is necessary, an area where many protocols have been proposed [?,28,29].
Reference: [26] <author> B. Rajagopalan, </author> <title> Consensus and control in wide-area group communication. </title> <note> unpublished memorandum, </note> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Given the wide diversity of collaboration styles, it appears difficult to arrive at a canonical, all-encompassing conference control protocol or application. Rather more promising appear attempts to distill common, underlying control functions and allow combining these in appropriate ways. The agreement protocols <ref> [25, 26] </ref> formalizes the problem of agreeing on shared state and modifying it based on voting rules. If eventual consistency is desired, some form of reliable multicast is necessary, an area where many protocols have been proposed [?,28,29].
Reference: [27] <author> M. Handley and I. Wakeman, CCCP: </author> <title> conference control channel protocol a scalable base for building conference control applications. </title> <address> V1.4, </address> <month> Mar. </month> <year> 1994. </year>
Reference: [28] <author> L. L. Peterson, N. C. Bucholz, and R. D. Schlicting, </author> <title> Preserving and using context information in interprocess communication, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> vol. 7, </volume> <pages> pp. 217-246, </pages> <month> Aug. </month> <year> 1989. </year>
Reference: [29] <author> R. Aiello, E. Pagani, and G. P. Rossi, </author> <title> Causal ordering in reliable group communications, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols (D. </booktitle> <editor> P. Sidhu, ed.), </editor> <address> (San Francisco, California), </address> <pages> pp. 106-115, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1993. </year> <note> also in Computer Communication Review 23 (4), </note> <month> Oct. </month> <year> 1992. </year>
Reference: [30] <author> H. Abdel-Wahab and K. Jeffay, </author> <title> Issues, problems and solutions in sharing X clients on multiple displays, Internetworking: </title> <journal> Research and Experience, </journal> <volume> vol. 5, </volume> <pages> pp. 1-15, </pages> <month> Jan. </month> <year> 1994. </year> <month> 10 </month>
Reference-contexts: The latter is generally desirable as conferences are not the most opportune time to experiment with unfamiliar applications. Generic mechanisms for application sharing have been developed for X11 <ref> [30] </ref>. Even if special multi-user tools are used, the same tools should be usable for both small and large conferences. Having to switch tools because a small discussion turned into a seminar is rather undesirable.
Reference: [31] <author> J. Crowcroft, </author> <title> Remote procedure call: not a panacea for distributed computing problems. </title> <institution> University College London, </institution> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: In Unix-like systems, either linking libraries or communicating processes may be used, but only the latter is usually configurable by the user. Traditional interprocess communication is not suitable since in many cases, there is no clear 'client' and 'server' relationship <ref> [31, 32] </ref>. Also, the same kind of information, say, about new sessions or participants, may be of interest to a number of applications. This suggests multicast. However, local IP multicast requires a clear division of messages into classes by the sender, something which appears to be difficult for conference control.
Reference: [32] <author> M. Roseman and S. Greenberg, </author> <title> Building flexible groupware through open protocols, </title> <booktitle> in Proceedings COSC'93, </booktitle> <pages> pp. </pages> -, <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: In Unix-like systems, either linking libraries or communicating processes may be used, but only the latter is usually configurable by the user. Traditional interprocess communication is not suitable since in many cases, there is no clear 'client' and 'server' relationship <ref> [31, 32] </ref>. Also, the same kind of information, say, about new sessions or participants, may be of interest to a number of applications. This suggests multicast. However, local IP multicast requires a clear division of messages into classes by the sender, something which appears to be difficult for conference control.
Reference: [33] <author> H. Schulzrinne, </author> <title> Dynamic configuration of conferencing applications using pattern-matching multicast, </title> <booktitle> in Proc. International Workshop on Network and Operating System Support for for Digital Audio and Video (NOSSDAV), </booktitle> <address> (Durham, New Hampshire), </address> <pages> pp. 231-242, </pages> <month> Apr. </month> <year> 1995. </year> <month> 11 </month>
Reference-contexts: Applications connect to the replicator, which forwards messages to interested parties. Messages describe operations on objects such as conferences, media sessions, and the like. This approach allows to built conferencing applications without source modification or to attach new tools to existing conferencing systems <ref> [33] </ref>. 9 Conclusion Multimedia conferencing has long been considered a prime application for high-performance workstations and networks. However, actual use has consistently fallen short of expectations.
References-found: 33

