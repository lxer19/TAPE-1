URL: http://daphne.cs.ucla.edu/elias/publications/paper-kp94b.ps
Refering-URL: http://daphne.cs.ucla.edu/elias/publications/index.html
Root-URL: http://www.cs.ucla.edu
Email: elias@@cs.ucla.edu  christos@@cs.berkeley.edu  
Title: Beyond Competitive Analysis  
Author: Elias Koutsoupias Christos Papadimitriou 
Abstract: The competitive analysis of on-line algorithms has been criticized as being too crude and unrealistic. We propose refinements of competitive analysis in two directions: The first restricts the power of the adversary by allowing only certain input distributions, while the other allows for comparisons between information regimes for on-line decision-making. We illustrate the first with an application to the paging problem; as a byproduct we characterize completely the work functions of this important special case of the k-server problem. We use the second refinement to explore the power of lookahead in server and task systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Ben-David and A. Borodin. </author> <title> A new measure for the study of on-line algorithms. </title> <journal> Algorithmica, </journal> <volume> 11(1) </volume> <pages> 73-91, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Admittedly, there have been several interesting variants of the framework that were at least partially successful in addressing some of these concerns. Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in <ref> [1, 14] </ref> for the general case and in [2, 6, 7, 17] specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above. <p> However, in this work, we deal only with deterministic on-line algorithms. In the case of the paging problem with a set of pages M , may be any set of functions of the form D : M fl fi M 7! <ref> [0; 1] </ref>, where for all 2 M fl P a2M D (aj) = 1. In the game-theoretic interpretation, as the sequence of requests develops, the adversary chooses the values of D (aj) from those available in to maximize the ratio.
Reference: [2] <author> A. Borodin, S. Irani, P. Raghavan, and B. Schieber. </author> <title> Competitive paging with locality of reference. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50(2) </volume> <pages> 244-58, </pages> <month> April </month> <year> 1995. </year> <booktitle> Also in Proceedings 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 249-59, </pages> <year> 1991. </year>
Reference-contexts: Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in <ref> [2, 6, 7, 17] </ref> specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above. <p> It is indicative of the power of the diffuse adversary model that most of the proposals for a more realistic competitive analysis are simply special cases of it. For example, the locality of reference in the paging problem <ref> [2, 6] </ref> is captured by the diffuse adversary model where consists of the following conditional probability distributions: D (ajb) = 0 if there is no edge from b to a in the access graph and D (ajb) = 0 or 1 otherwise.
Reference: [3] <author> A. Borodin, N. Linial, and M. E. Saks. </author> <title> An optimal on-line algorithm for metrical task systems. </title> <journal> Journal of the ACM, </journal> <volume> 39(4) </volume> <pages> 745-63, </pages> <year> 1992. </year> <booktitle> Also in Proceedings 19th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 373-82, </pages> <year> 1987. </year>
Reference-contexts: by attacking the question of the power of lookahead in on-line problems of the "server" type: If L ` is the class of all algorithms with lookahead `, and L 0 is the class of on-line algorithms, then we show that, in the very general context of metrical task systems <ref> [3] </ref> we have R (L 0 ; L ` ) = 2` + 1; (that is, the ratio is at most 2` + 1 for all metrical task systems, and it is exactly 2` + 1 for some), while in the more restricted context of paging R (L 0 ; L <p> All on-line algorithms with lookahead ` comprise the information regime L ` . Thus, L 0 is the class of all traditional on-line algorithms. Metrical task systems <ref> [3] </ref> are defined on some metric space M; a server resides on some point of the metric space and can move from point to point.
Reference: [4] <author> M. Chrobak and L. L. Larmore. </author> <title> The server problem and on-line games. On-line algorithms: </title> <booktitle> proceedings of a DIMACS workshop. DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> 7 </volume> <pages> 11-64, </pages> <year> 1992. </year>
Reference-contexts: But first, we diverge in order to give a useful characterization of work functions for the paging problem. 2.1 The structure of paging work functions Since the paging problem is the k-server problem on uniform metric spaces, certain key concepts from the k-server theory will be very useful (see <ref> [8, 4] </ref> for a more detailed exposition). 6 Definition 1 Let k denote the number of page slots in fast memory, and let M be the set of pages. A configuration is a k-subset of M ; we denote the set of all configurations by C.
Reference: [5] <author> A. Fiat, R. M. Karp, M. Luby, L. A. McGeoch, D. D. Sleator, and N. E. Young. </author> <title> Competitive paging algorithms. </title> <journal> Journal of Algorithms, </journal> <volume> 12(4) </volume> <pages> 685-99, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Even algorithms within more powerful information regimes|for example, any algorithm with lookahead ` &gt; 0 pages|provably can fare no better. Admittedly, there have been several interesting variants of the framework that were at least partially successful in addressing some of these concerns. Randomized paging algorithms have more realistic performance <ref> [5, 11, 15] </ref>. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in [2, 6, 7, 17] specifically for the paging problem.
Reference: [6] <author> S. Irani, A. R. Karlin, and S. Phillips. </author> <title> Strongly competitive algorithms for paging with locality of reference. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23 25(3) </volume> <pages> 477-497, </pages> <month> June </month> <year> 1996. </year> <booktitle> Also in Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 228-36, </pages> <year> 1992. </year>
Reference-contexts: Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in <ref> [2, 6, 7, 17] </ref> specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above. <p> It is indicative of the power of the diffuse adversary model that most of the proposals for a more realistic competitive analysis are simply special cases of it. For example, the locality of reference in the paging problem <ref> [2, 6] </ref> is captured by the diffuse adversary model where consists of the following conditional probability distributions: D (ajb) = 0 if there is no edge from b to a in the access graph and D (ajb) = 0 or 1 otherwise.
Reference: [7] <author> A. R. Karlin, S. J. Phillips, and P. Raghavan. </author> <title> Markov paging. </title> <booktitle> Proceedings 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 208-17, </pages> <year> 1992. </year>
Reference-contexts: Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in <ref> [2, 6, 7, 17] </ref> specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above. <p> Similarly, the Markov paging model <ref> [7] </ref> and the statistical adversary model [14] are also special cases of the diffuse adversary model.
Reference: [8] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> On the k-server conjecture. </title> <journal> Journal of the ACM, </journal> <volume> 45(5) </volume> <pages> 971-83, </pages> <year> 1995. </year> <booktitle> Also in Proc. 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 507-11, </pages> <year> 1994. </year>
Reference-contexts: It is noteworthy that LRU emerges from the analysis as the unique "natural" optimal algorithm, although there are other algorithms that may also be optimal. An important byproduct of our analysis is that, extending the work in <ref> [8] </ref>, we completely characterize the work functions of the paging special case of the k-server problem. <p> But first, we diverge in order to give a useful characterization of work functions for the paging problem. 2.1 The structure of paging work functions Since the paging problem is the k-server problem on uniform metric spaces, certain key concepts from the k-server theory will be very useful (see <ref> [8, 4] </ref> for a more detailed exposition). 6 Definition 1 Let k denote the number of page slots in fast memory, and let M be the set of pages. A configuration is a k-subset of M ; we denote the set of all configurations by C. <p> Proof. Towards a contradiction assume that there is a configuration A in the support of w such that w (A) &gt; min X w (X). Choose now a configuration B with w (B) &lt; w (A) that minimizes jB Aj. By the quasiconvexity condition in <ref> [8] </ref>, there is a 2 A B and b 2 B A such that w (A) + w (B) &gt; w (A a + b) + w (B b + a): This can hold only if either w (A) &gt; w (A a + b) or w (A) &gt; w (B
Reference: [9] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> Beyond competitive analysis. </title> <booktitle> Proceedings 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 394-400, </pages> <year> 1994. </year>
Reference-contexts: An important byproduct of our analysis is that, extending the work in [8], we completely characterize the work functions of the paging special case of the k-server problem. In a preliminary version of this work that appeared in <ref> [9] </ref>, we incorrectly stated that the competitive ratio R ( * ) is given by a simple Markov chain of (k + 1 * ) k1 states. In fact, the answer is more complicated. <p> Elaborating on this observation we get that R * is in the interval [1 + p p Numerical evaluations suggest that the value of R * is approximately 1 + 0:8 *, when * ! 0. A preliminary version of this work <ref> [9] </ref> had an incorrect proof of optimality of LRU. The proof was based on the unjustified assumption that a conservative adversary that achieves optimal competitive ratio against LRU assigns probability * to exactly one page in the on-line fast memory.
Reference: [10] <author> M. S. Manasse, L. A. McGeoch, and D. D. Sleator. </author> <title> Competitive algorithms for server problems. </title> <journal> Journal of Algorithms, </journal> <volume> 11(2) </volume> <pages> 208-230, </pages> <month> June </month> <year> 1990. </year> <booktitle> Also appeared as "Competitive algorithms for on-line problems" in Proceedings 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 322-33, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The area of On-Line Algorithms <ref> [16, 10] </ref> shares with Complexity Theory the following characteristic: Although its importance cannot be reasonably denied (an algorithmic theory of decision-making under uncertainty is of obvious foundational significance and practical relevance), certain aspects of its basic premises, modeling assumptions, and results have been widely criticized with respect to their realism and
Reference: [11] <author> L. A. McGeoch and D. D. Sleator. </author> <title> A strongly competitive randomized paging algorithm. </title> <journal> Algorithmica, </journal> <volume> 6(6) </volume> <pages> 816-25, </pages> <year> 1991. </year>
Reference-contexts: Even algorithms within more powerful information regimes|for example, any algorithm with lookahead ` &gt; 0 pages|provably can fare no better. Admittedly, there have been several interesting variants of the framework that were at least partially successful in addressing some of these concerns. Randomized paging algorithms have more realistic performance <ref> [5, 11, 15] </ref>. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in [2, 6, 7, 17] specifically for the paging problem. <p> The following lemmata, specific to the paging problem and not true in general for the k-server problem, characterize all possible work functions by determining the structure of their support. A similar, but more complicated, characterization is implicit in the work of <ref> [11] </ref>. The first lemma states that all configurations in the support have the same value, and hence what matters is the support itself, not the values of w on it. Lemma 1 The support of a work function w contains only configurations on which w achieves its minimum value. Proof.
Reference: [12] <author> C. H. Papadimitriou. </author> <title> On the value of information. </title> <booktitle> World Congress of Economics, </booktitle> <address> Moscow, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: How can we use competitive analysis to evaluate its power? Notice that this is not a question about the effectiveness of a single algorithm, but about classes of algorithms, about the power of information regimes|ultimately, about the value of information <ref> [12] </ref>. To formulate and answer this and similar questions we introduce our second refinement of competitive analysis, which we call comparative analysis.
Reference: [13] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Shortest paths without a map. </title> <journal> Theoretical Computer Science, </journal> <volume> 84(1) </volume> <pages> 127-150, </pages> <month> 22 July </month> <year> 1991. </year> <booktitle> In 16th International Colloquium on Automata, Languages, and Programming, Lecture Notes in Computer Science vol. </booktitle> <volume> 372, </volume> <pages> pages 610-20. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference: [14] <author> P. Raghavan. </author> <title> A statistical adversary for on-line algorithms. On-line algorithms: </title> <booktitle> proceedings of a DIMACS workshop. DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> 7 </volume> <pages> 79-83, </pages> <year> 1992. </year>
Reference-contexts: Admittedly, there have been several interesting variants of the framework that were at least partially successful in addressing some of these concerns. Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in <ref> [1, 14] </ref> for the general case and in [2, 6, 7, 17] specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above. <p> Similarly, the Markov paging model [7] and the statistical adversary model <ref> [14] </ref> are also special cases of the diffuse adversary model. In the first case, the class of distributions contains only one conditional distribution D with D (jb) = D (jb), and in the latter case D 2 assigns probability 1 to some request sequence that satisfies the statistical adversary restriction.
Reference: [15] <author> P. Raghavan and M. Snir. </author> <title> Memory versus randomization in on-line algorithms. </title> <journal> IBM Journal of Research and Development, </journal> <month> November </month> <year> 1994, </year> <pages> 38(6) 683-707. </pages> <booktitle> Also in Proceedings 16th International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 687-703, </pages> <year> 1989. </year> <month> 24 </month>
Reference-contexts: Even algorithms within more powerful information regimes|for example, any algorithm with lookahead ` &gt; 0 pages|provably can fare no better. Admittedly, there have been several interesting variants of the framework that were at least partially successful in addressing some of these concerns. Randomized paging algorithms have more realistic performance <ref> [5, 11, 15] </ref>. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in [2, 6, 7, 17] specifically for the paging problem.
Reference: [16] <author> D. D. Sleator and R. E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Comm. ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction The area of On-Line Algorithms <ref> [16, 10] </ref> shares with Complexity Theory the following characteristic: Although its importance cannot be reasonably denied (an algorithmic theory of decision-making under uncertainty is of obvious foundational significance and practical relevance), certain aspects of its basic premises, modeling assumptions, and results have been widely criticized with respect to their realism and
Reference: [17] <author> N. Young. </author> <title> The k-server dual and loose competitiveness for paging. </title> <journal> Al-gorithmica, </journal> <volume> 11(6) </volume> <pages> 525-41, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Randomized paging algorithms have more realistic performance [5, 11, 15]. Some alternative approaches to evaluating on-line algorithms were proposed in [1, 14] for the general case and in <ref> [2, 6, 7, 17] </ref> specifically for the paging problem. In this paper we propose and study two refinements of competitive analysis which seem to go a long way towards addressing the concerns expressed above.
Reference: [18] <author> N. Young. </author> <title> Cross-input Amortization Captures the Diffuse Adversary. </title> <type> Technical Report PCS-TR96-302, </type> <institution> Dartmouth College, Computer Science, </institution> <address> Hanover, NH, </address> <month> December </month> <year> 1996. </year> <month> 25 </month>
Reference-contexts: For the extreme values of *, we know that R ( 1 ) = k and lim *!0 R ( * ) = 1. In the first case, the adversary has complete power and in the second case, it suffers a page fault in almost every step. Recently, Young <ref> [18] </ref> estimated R ( * ) within a factor of two; R ( * ) = fi (ln (1=(1 k*))) when * 6 1=(k + 1), and R ( * ) = fi (k 1=*) otherwise. <p> The proof was based on the unjustified assumption that a conservative adversary that achieves optimal competitive ratio against LRU assigns probability * to exactly one page in the on-line fast memory. As was pointed out to us by Neal Young (see also <ref> [18] </ref>), this assumption does not hold in general. A major open problem is to determine the competitive ratio of known paging algorithms against a diffuse adversary. The most important direction is to estimate the competitive ratio of FIFO.
References-found: 18

