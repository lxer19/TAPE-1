URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P607.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Email: ffreitag,goochg@mcs.anl.gov  
Title: A Comparison of Tetrahedral Mesh Improvement Techniques  
Author: Lori A. Freitag and Carl Ollivier-Gooch 
Keyword: Mesh Improvement, Mesh Smoothing  
Address: Argonne, Illinois 60439  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: Automatic mesh generation and adaptive refinement methods for complex three-dimensional domains have proven to be very successful tools for the efficient solution of complex applications problems. These methods can, however, produce poorly shaped elements that cause the numerical solution to be less accurate and more difficult to compute. Fortunately, the shape of the elements can be improved through several mechanisms, including face-swapping techniques that change local connectivity and optimization-based mesh smoothing methods that adjust grid point location. We consider several criteria for each of these two methods and compare the quality of several meshes obtained by using different combinations of swapping and smoothing. Computational experiments show that swapping is critical to the improvement of general mesh quality and that optimization-based smoothing is highly effective in eliminating very small and very large angles. The highest quality meshes are obtained by using a combination of swapping and smoothing techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Amezua, M. V. Hormaza, A. Hernandez, and M. B. G. Ajuria. </author> <title> A method of the improvement of 3d solid finite-element meshes. </title> <booktitle> Advances in Engineering Software, </booktitle> <volume> 22 </volume> <pages> 45-53, </pages> <year> 1995. </year>
Reference-contexts: three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology <ref> [1] </ref>, [4], [15]. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes. We start by swapping mesh faces to improve the connectivity and follow with mesh smoothing to adjust grid point position.
Reference: [2] <author> I. Babuska and A. Aziz. </author> <title> On the angle condition in the finite element method. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 13 </volume> <pages> 214-226, </pages> <year> 1976. </year>
Reference-contexts: Unfortunately, meshes generated in this way can contain poorly shaped or distorted elements, which cause numerical difficulties during the solution process. For example, we know that as element dihedral angles become too large, the discretization error in the finite element solution increases <ref> [2] </ref>; and as angles become too small, the condition number of the element matrix increases [9]. Thus, for meshes with highly distorted elements, the solution is both less accurate and more difficult to compute.
Reference: [3] <author> Randolph E. Bank, Andrew H. Sherman, and Alan Weiser. </author> <title> Refinement algorithms and data structures for regular local mesh refinement. </title> <editor> In R. Stepleman et al., editor, </editor> <booktitle> Scientific Computing, </booktitle> <pages> pages 3-17. </pages> <publisher> IMACS/North-Holland Publishing Company, </publisher> <address> Amsterdam, </address> <year> 1983. </year>
Reference-contexts: Compared with triangular meshes, tetrahedral meshes tend to have a larger proportion of poor quality elements and to have elements that are more severely distorted. The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh <ref> [3] </ref>, [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15].
Reference: [4] <author> Scott Canann, Michael Stephenson, and Ted Blacker. Optismoothing: </author> <title> An optimization-driven approach to mesh smoothing. Finite Elements in Analysis and Design, </title> <booktitle> 13 </booktitle> <pages> 185-190, </pages> <year> 1993. </year>
Reference-contexts: basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], <ref> [4] </ref>, [15]. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes. We start by swapping mesh faces to improve the connectivity and follow with mesh smoothing to adjust grid point position.
Reference: [5] <author> C. Charalambous and A. Conn. </author> <title> An efficient method to solve the minimax problem directly. </title> <journal> SIAM Journal of Numerical Analysis, </journal> <volume> 15(1) </volume> <pages> 162-187, </pages> <year> 1978. </year>
Reference-contexts: We require that function and gradient evaluations dependent on free vertex position be provided by the user. The optimization algorithm for each local subproblem is similar to a minimax technique used to solve circuit design problems <ref> [5] </ref>. We briefly review the formulation of the problem here and refer interested readers to a more complete description in our previous paper [8]. <p> number of iterations is exceeded; (3) the achieved improvement of any given step is less than some user-defined tolerance; or (4) the Kuhn-Tucker conditions of nonlinear programming X i g i (x fl ) = 0 i2A fl are satisfied indicating that we have found a local maximum x fl <ref> [5] </ref>. 4. Computational Experiments This paper presents results for five test cases: two randomly generated meshes and three meshes generated for application problems. For each test mesh, a standard starting mesh was generated, and all comparison cases began with that same mesh.
Reference: [6] <author> H. Edelsbrunner and N. Shah. </author> <title> Incremental topological flipping works for regular triangulations. </title> <booktitle> In Proceedings of the 8th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 43-52, </pages> <year> 1992. </year>
Reference-contexts: The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices <ref> [6] </ref>, [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15]. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes.
Reference: [7] <author> David A Field. </author> <title> Laplacian smoothing and Delaunay triangulations. </title> <journal> Communications and Applied Numerical Methods, </journal> <volume> 4 </volume> <pages> 709-712, </pages> <year> 1988. </year>
Reference-contexts: We start by swapping mesh faces to improve the connectivity and follow with mesh smoothing to adjust grid point position. Face swapping techniques are widely used, and we give only a brief overview of the methods used. The most common approaches to mesh smoothing are variants on Laplacian smoothing <ref> [7] </ref>. While these smoothers are often effective, they operate heuristically with no effort to locate points specifically to improve some quality measure. In this article, we present an optimization-based smoothing algorithm for tetrahedral meshes. This algorithm is an extension of a highly effective and efficient two-dimensional smoothing algorithm [8]. <p> This approach notwithstanding, however, it is not known whether the global optimum can be reached by any series of local transformations. 3. An Optimization Approach to Mesh Smoothing Perhaps the most commonly used mesh-smoothing technique is a local algorithm called Laplacian smoothing <ref> [7] </ref>, [13].
Reference: [8] <author> Lori A. Freitag, Mark T. Jones, and Paul E. Plassmann. </author> <title> An efficient parallel algorithm for mesh smoothing. </title> <booktitle> In Proceedings of the Fourth International Meshing Roundtable, </booktitle> <pages> pages 47-58, </pages> <address> Albuquerque, New Mexico, </address> <year> 1995. </year> <institution> Sandia National Laboratories. </institution>
Reference-contexts: While these smoothers are often effective, they operate heuristically with no effort to locate points specifically to improve some quality measure. In this article, we present an optimization-based smoothing algorithm for tetrahedral meshes. This algorithm is an extension of a highly effective and efficient two-dimensional smoothing algorithm <ref> [8] </ref>. The remainder of the article is organized as follows. In Section 2, we briefly summarize face-swapping techniques. In Section 3, we describe a mesh smoothing algorithm using local optimization. We then present the results of numerical experiments on several test meshes. <p> In fact, it is possible to produce an invalid mesh containing elements that are inverted or have negative volume. Freitag et. al. proposed a low-cost, optimization-based alternative to Laplacian smoothing that guarantees valid elements in the final mesh <ref> [8] </ref>. Several results were given that demonstrated the effectiveness of this method compared with Laplacian smoothing for two-dimensional, triangular meshes. Like Laplacian smoothing, the optimization algorithm is local and uses the union of elements that are adjacent to the free vertex as the solution space. <p> The optimization algorithm for each local subproblem is similar to a minimax technique used to solve circuit design problems [5]. We briefly review the formulation of the problem here and refer interested readers to a more complete description in our previous paper <ref> [8] </ref>. To facilitate the discussion of problem formulation, we first introduce some useful notation: * x: the position of the free vertex * f i (x): an analytic function for a mesh quality measure that in general is nonlinear. <p> Two optimization passes give nearly all the improvement that is possible. For comparison, the two-dimensional version of this algorithm typically requires one to two optimization passes to improve meshes of reasonable quality <ref> [8] </ref>. <p> This software is currently being incorporated into the SUMAA3d [12] and GRUMMP projects at Argonne National Laboratory, which will provide an integrated framework for parallel unstructured mesh applications. Therefore we are working to develop parallel algorithms similar to the framework given previously <ref> [8] </ref> for three-dimensional mesh smoothing and face swapping methods. Acknowledgments This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38.
Reference: [9] <author> I Fried. </author> <title> Condition of finite element matrices generated from nonuniform meshes. </title> <journal> AIAA Journal, </journal> <volume> 10 </volume> <pages> 219-221, </pages> <year> 1972. </year>
Reference-contexts: For example, we know that as element dihedral angles become too large, the discretization error in the finite element solution increases [2]; and as angles become too small, the condition number of the element matrix increases <ref> [9] </ref>. Thus, for meshes with highly distorted elements, the solution is both less accurate and more difficult to compute. This problem is more severe in three dimensions than in two dimensions, because tetrahedra can be distorted to poor quality in more ways than triangles can.
Reference: [10] <author> Barry Joe. </author> <title> Three-dimensional triangulations from local transformations. </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 10 </volume> <pages> 718-741, </pages> <year> 1989. </year>
Reference-contexts: The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], <ref> [10] </ref>, [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15]. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes.
Reference: [11] <author> Barry Joe. </author> <title> Construction of three-dimensional improved quality triangulations using local transformations. </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 16 </volume> <pages> 1292-1307, </pages> <year> 1995. </year>
Reference-contexts: The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], <ref> [11] </ref>, and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15]. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes. <p> For either criterion, however, the optimum reached by this face-swapping algorithm will probably be local rather than global. Recent work by Joe <ref> [11] </ref> describes a more advanced technique for improving mesh quality by local transformations. This approach notwithstanding, however, it is not known whether the global optimum can be reached by any series of local transformations. 3. <p> We are also interested in examining optimization-based smoothing with other measures including aspect ratio and solid angles and in developing smoothing measures appropriate for use on anisotropic meshes. Finally, we intend to investigate the use of more sophisticated local reconnection algorithms, such as that of Joe <ref> [11] </ref>, and various other swapping criteria, including swapping to maximize the minimum sine of dihedral angle. This software is currently being incorporated into the SUMAA3d [12] and GRUMMP projects at Argonne National Laboratory, which will provide an integrated framework for parallel unstructured mesh applications.
Reference: [12] <author> Mark T. Jones and Paul E. Plassmann. </author> <title> Computational results for parallel unstructured mesh computations. </title> <booktitle> Computing Systems in Engineering, </booktitle> <address> 5(4-6):297-309, </address> <year> 1994. </year>
Reference-contexts: Finally, we intend to investigate the use of more sophisticated local reconnection algorithms, such as that of Joe [11], and various other swapping criteria, including swapping to maximize the minimum sine of dihedral angle. This software is currently being incorporated into the SUMAA3d <ref> [12] </ref> and GRUMMP projects at Argonne National Laboratory, which will provide an integrated framework for parallel unstructured mesh applications. Therefore we are working to develop parallel algorithms similar to the framework given previously [8] for three-dimensional mesh smoothing and face swapping methods.
Reference: [13] <author> S. H. Lo. </author> <title> A new mesh generation scheme for arbitrary planar domains. </title> <journal> International Journal for Numerical Methods in Engineering, </journal> <volume> 21 </volume> <pages> 1403-1426, </pages> <year> 1985. </year>
Reference-contexts: This approach notwithstanding, however, it is not known whether the global optimum can be reached by any series of local transformations. 3. An Optimization Approach to Mesh Smoothing Perhaps the most commonly used mesh-smoothing technique is a local algorithm called Laplacian smoothing [7], <ref> [13] </ref>.
Reference: [14] <author> Carl F. Ollivier-Gooch. </author> <title> Multigrid acceleration of an upwind Euler solver on unstructured meshes. </title> <journal> AIAA Journal, </journal> <volume> 33(10) </volume> <pages> 1822-1827, </pages> <year> 1995. </year>
Reference-contexts: Compared with triangular meshes, tetrahedral meshes tend to have a larger proportion of poor quality elements and to have elements that are more severely distorted. The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], <ref> [14] </ref>, [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15].
Reference: [15] <author> V. N. Parthasarathy and Srinivas Kodiyalam. </author> <title> A constrained optimization approach to finite element mesh smoothing. Finite Elements in Analysis and Design, </title> <booktitle> 9 </booktitle> <pages> 309-320, </pages> <year> 1991. </year>
Reference-contexts: categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], [16], 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], <ref> [15] </ref>. In this article, we follow a two-pronged approach to improve the quality of tetrahedral meshes. We start by swapping mesh faces to improve the connectivity and follow with mesh smoothing to adjust grid point position.
Reference: [16] <author> M. Rivara. </author> <title> Mesh refinement processes based on the generalized bisection of simplices. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 21 </volume> <pages> 604-613, </pages> <year> 1984. </year>
Reference-contexts: Compared with triangular meshes, tetrahedral meshes tend to have a larger proportion of poor quality elements and to have elements that are more severely distorted. The algorithms for unstructured mesh improvement fall into three basic categories: 1. point insertion/deletion to refine or coarsen a mesh [3], [14], <ref> [16] </ref>, 2. local reconnection or face swapping to change mesh topology for a given set of vertices [6], [10], [11], and 3. mesh smoothing to relocate grid points to improve mesh quality without changing mesh topology [1], [4], [15].
References-found: 16

