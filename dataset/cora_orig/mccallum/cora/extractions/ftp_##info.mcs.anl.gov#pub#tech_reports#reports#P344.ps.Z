URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P344.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts93.htm
Root-URL: http://www.mcs.anl.gov
Title: A Superlinear Infeasible-Interior-Point Algorithm for Monotone Complementarity Problems  
Author: Stephen Wright and Daniel Ralph 
Affiliation: MATHEMATICS AND COMPUTER SCIENCE DIVISION, ARGONNE NATIONAL LABORATORY  
Note: PREPRINT MCS-P344-1292,  
Abstract: We use the globally convergent framework proposed by Kojima, Noma, and Yoshise to construct an infeasible-interior-point algorithm for monotone nonlinear complementarity problems. Superlinear convergence is attained when the solution is nondegenerate and also when the problem is linear. Numerical experiments confirm the efficacy of the proposed approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. Du Croz, A. Greenbaum, S. Hammarling, A. McKenney, S. Ostrouchov, and D. Sorensen, </author> <title> LAPACK User's Guide, </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: The coefficient matrix in (3) is the same for both fast and safe steps, so only one matrix factorization is required per iteration. The safe step procedure is defined as follows. safe (x; y): choose ~oe 2 [oe; 1 2 ], ff 0 2 <ref> [ ff; 1] </ref>; solve (3) to find (x; y); calculate ~fl = min ( min x i y i =; fl max ); (8) choose ff to be the first element in the sequence ff 0 ; Off 0 ; O 2 ff 0 ; , such that the following conditions <p> We start with the condition (13a). Using (3), (4), (5), (8), (24), (25), (26), and Assumption 1, we have for ff 2 <ref> [0; 1] </ref> that x i (ff)y i (ff) = (x i + ffx i )(y i + ffy i + f i (x + ffx) f i (x) ffDf i (x)x) x i y i + ff (x i y i ) + ff 2 x i y i + ff <p> In our code, the LAPACK band solve routines DGBTRF and DGBTRS <ref> [1] </ref> are used to solve this linear system. We tested our algorithm on modifications of the random stagewise ELQPs that are described in Section 6 of Zhu and Rockafellar [13]. <p> Therefore we can define a constant C 1 &gt; 0 such that k (x; y)k C 1 for all (x; y) 2 B ((x; y); ^ ffi) and ~oe 2 [oe; 1=2]. Taking ff 2 <ref> [0; 1] </ref> and (x; y) 2 B ((x; y); ^ ffi), we have x (ff) T y (ff) = (x + ffx) T (y + ffy + f (x + ffx) f (x) ffDf (x)x) = x T y ff (1 ~oe)x T y + ff 2 x T y +
Reference: [2] <author> S. P. Dirkse, </author> <title> Solving complementarity problems via GAMS: A model library. </title> <type> Manuscript, </type> <month> May </month> <year> 1993. </year>
Reference-contexts: Then Assumption 1 is satisfied. 6 Computational Results The method described here has been implemented and tested on some small NCPs from the collection of Dirkse <ref> [2] </ref> and some larger extended linear-quadratic programming problems from Zhu and Rockafellar [13]. <p> Successful termination is declared when the criteria kr k k n max (TOL; 10 9 ); k TOL are both satisfied, where TOL = 10 10 in our examples. We experimented with three nonlinear problems from Dirkse <ref> [2] </ref>. We omit the details of these problems here, but refer the reader to [2] and the references therein for further details. <p> We experimented with three nonlinear problems from Dirkse <ref> [2] </ref>. We omit the details of these problems here, but refer the reader to [2] and the references therein for further details.
Reference: [3] <author> O. G uler, </author> <title> Existence of interior points and interior paths in nonlinear monotone complementarity problems, </title> <journal> Mathematics of Operations Research, </journal> <volume> 18 (1993), </volume> <pages> pp. 128-147. </pages>
Reference-contexts: We use S to denote the solution set for (1). Interior-point algorithms for problems of this type have been considered recently by Kojima, Noma, and Yoshise [4], Guler <ref> [3] </ref>, and Potra and Ye [6].
Reference: [4] <author> M. Kojima, T. Noma, and A. Yoshise, </author> <title> Global convergence and detecting infeasibility in interior-point algorithms, </title> <journal> Research Reports on Information Sciences, Series B: </journal> <note> Operations Research B-257, </note> <institution> Department of Information Sciences, Tokyo Institute of Technology, </institution> <address> Tokyo, Japan, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: We use S to denote the solution set for (1). Interior-point algorithms for problems of this type have been considered recently by Kojima, Noma, and Yoshise <ref> [4] </ref>, Guler [3], and Potra and Ye [6]. In [4], the authors consider a broad class of infeasible-interior-point algorithms for (1) and show that, assuming continuous differentiability of f , at least one of three scenarios eventually occurs: The algorithm reaches the vicinity of a solution to (1), it reaches the <p> We use S to denote the solution set for (1). Interior-point algorithms for problems of this type have been considered recently by Kojima, Noma, and Yoshise <ref> [4] </ref>, Guler [3], and Potra and Ye [6]. In [4], the authors consider a broad class of infeasible-interior-point algorithms for (1) and show that, assuming continuous differentiability of f , at least one of three scenarios eventually occurs: The algorithm reaches the vicinity of a solution to (1), it reaches the vicinity of a solution to a nearby problem, or <p> Department of Energy, under Contract W-31-109-Eng-38. y Department of Mathematics, The University of Melbourne, Parkville, Victoria 3052, Australia. The work of this author supported by the Australian Research Council. 1 the class considered in <ref> [4] </ref>, and so this global convergence result holds. Under additional assumptions on f and S, our algorithm exhibits superlinear convergence. <p> First, the step generated by the algorithm of [9] depends on the entire iteration history through its use of a parameter t k , which counts the number of fast steps taken prior to iteration k. However, in order to fit the framework of <ref> [4] </ref>, the mapping from one iterate to the next must be determined completely by the current iterate (x k ; y k ), so this explicit dependence on t k must be eliminated. <p> Instead, we use Armijo conditions in conjunction with a backtracking line search technique, in which the initial trial step length is chosen judiciously. We present some notation and define the algorithm in Section 2. In Section 3, we state the results from Kojima, Noma, and Yoshise <ref> [4] </ref> and show that the algorithm of Section 2 fits this framework. In Section 4, we prove the rate-of-convergence results under the assumption that the step lengths are of the same order as the current duality gap estimate x T y=n. <p> The purposes of the right inequality in (9b) is to prevent improvement in the complementarity gap from outpacing improvement in the infeasibility, measured by r. The relevant result is proved in Lemma (2.2). Fast-step calculations are a little more complicated. Since it is not permissible in the framework of <ref> [4] </ref> to maintain a counter t k of the number of fast steps taken prior to iteration k, we form an estimate ~ t of its value by examining the properties of the current iterate. <p> The first inequality follows from (9b), (13b), and (6), with similar arguments to those in the proof of Lemma 2.1, which we do not repeat here. The inequality fi L &gt; e 3=2 is proved in [10, Lemma 3.1]. 6 3 Global Convergence Kojima, Noma, and Yoshise <ref> [4, Section 4.1] </ref> analyze an algorithm that would be equivalent to our algorithm if we allowed only safe steps to be taken. They show that it fits into the framework that allows their global convergence result to hold. <p> They show that it fits into the framework that allows their global convergence result to hold. We show in this section that the use of fast steps does not disqualify our algorithm from the framework of <ref> [4] </ref>, and so the main global convergence result of that paper holds. Throughout the section we assume only that f is continuously differentiable and monotone. <p> In our case, A is the fast step calculation whenever it produces a decrease factor of at least ae in ; otherwise, A is the safe-step calculation. The main result of <ref> [4] </ref> is obtained if the following condition is satisfied. (Note that the items in this condition are obtained by combining Conditions 2.1 and 2.3 of [4].) Condition 1 The admissible set , merit function , and algorithmic mapping A satisfy the following conditions: (i) (x 0 ; y 0 ) 2 <p> The main result of <ref> [4] </ref> is obtained if the following condition is satisfied. (Note that the items in this condition are obtained by combining Conditions 2.1 and 2.3 of [4].) Condition 1 The admissible set , merit function , and algorithmic mapping A satisfy the following conditions: (i) (x 0 ; y 0 ) 2 ; (ii) = ++ [ S is a subset of (IR n ++ fi IR n ++ ) [ S and is closed in (IR <p> The first of these lemmas essentially shows that the requirements (9) on the step length ff k in a safe-step calculation are satisfied for all ff k sufficiently small. In keeping with the definition of the generic algorithm of <ref> [4] </ref>, in which the mapping A does not depend explicitly on the iteration history, we state the result without reference to the iteration counter k. The proof of the first result can be found in the appendix. Lemma 3.1 Suppose that (x; y) 2 ++ . <p> The result of the lemma follows by taking * = min (* (1) ; * (2) ). Having shown that Condition 1 holds in our case, we can state the main results, both of which follow immediately from results in Kojima, Noma, and Yoshise <ref> [4] </ref>. The first result is essentially [4, Lemma 2.2]. <p> Having shown that Condition 1 holds in our case, we can state the main results, both of which follow immediately from results in Kojima, Noma, and Yoshise [4]. The first result is essentially <ref> [4, Lemma 2.2] </ref>. <p> The second result follows immediately from <ref> [4, Theorem 2.5] </ref>. Theorem 3.4 Let * be any small positive number and M be any positive number.
Reference: [5] <author> R. D. C. Monteiro and S. J. Wright, </author> <title> Local convergence of interior-point algorithms for degenerate monotone LCP, </title> <journal> Computational Optimization and Applications, </journal> <volume> 3 (1994), </volume> <pages> pp. 131-155. </pages>
Reference-contexts: In this case, we require only existence of a strictly complementary solution for k (x; y)k = O () to hold. Monteiro and Wright <ref> [5] </ref> show that the strict complementarity assumption is necessary for superlinear convergence of methods that behave like Newton's method near the solution.
Reference: [6] <author> F. A. Potra and Y. Ye, </author> <title> Interior point methods for nonlinear complementarity problems, </title> <type> Technical Report 15, </type> <institution> Department of Mathematics, University of Iowa, Iowa City, </institution> <month> July </month> <year> 1991. </year>
Reference-contexts: We use S to denote the solution set for (1). Interior-point algorithms for problems of this type have been considered recently by Kojima, Noma, and Yoshise [4], Guler [3], and Potra and Ye <ref> [6] </ref>.
Reference: [7] <author> R. T. Rockafellar, </author> <title> Linear-quadratic programming and optimal control, </title> <journal> SIAM Journal on Control and Optimization, </journal> <volume> 25 (1987), </volume> <pages> pp. </pages> <month> 781-814. </month> <title> [8] , Computational schemes for large-scale problems in extended linear-quadratic programming, </title> <journal> Mathematical Programming, </journal> <volume> 48 (1990), </volume> <pages> pp. 447-474. 25 </pages>
Reference-contexts: A few obvious modifications to the algorithm are required to take account of the mixed nature of the problem, and we do not discuss these here. We obtain the problems by reformulating the stagewise extended linear-quadratic programming (ELQP) problems considered by Rockafellar <ref> [7] </ref> and Zhu and Rockafellar [13]. The motivation for these stagewise problems comes from optimal control, and we refer the reader to the cited references for more details. Stagewise ELQPs are quite complicated to state. <p> The polyhedra U i and V i are rectangles, that is, Cartesian products of intervals on the real line. In [13], the matrices Q i and P i are all strictly positive definite, but we modify them here by setting Q i j 0. As discussed in Rockafellar <ref> [7] </ref>, this choice corresponds to "hard" constraints on the primal variables u i ; in fact, the primal problem above reduces to a quadratic program. The algorithms described by Rockafellar [8] and Zhu and Rockafellar [13] tend not to perform well in this important case, however.
Reference: [9] <author> S. J. Wright, </author> <title> An infeasible-interior-point algorithm for linear complementarity prob-lems, </title> <type> Preprint MCS-P331-1092, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <month> October </month> <year> 1992. </year> <note> To appear in Mathematical Programming, </note> <author> Series A. </author> <title> [10] , A path-following infeasible-interior-point algorithm for linear complementarity problems, Optimization Methods and Software, </title> <booktitle> 2 (1993), </booktitle> <pages> pp. </pages> <month> 79-106. </month> <title> [11] , A path-following interior-point algorithm for linear and quadratic optimization problems, </title> <type> Preprint MCS-P401-1293, </type> <institution> Mathematics and Computer Science Division, Ar-gonne National Laboratory, Argonne, Ill., </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: The work of this author supported by the Australian Research Council. 1 the class considered in [4], and so this global convergence result holds. Under additional assumptions on f and S, our algorithm exhibits superlinear convergence. Our algorithm is based on the one described in <ref> [9] </ref> for linear complementarity problems (for which f has the form f (x) = Ax + q for some n fi n positive semidefinite matrix A). It differs in two main respects. First, the step generated by the algorithm of [9] depends on the entire iteration history through its use of <p> Our algorithm is based on the one described in <ref> [9] </ref> for linear complementarity problems (for which f has the form f (x) = Ax + q for some n fi n positive semidefinite matrix A). It differs in two main respects. First, the step generated by the algorithm of [9] depends on the entire iteration history through its use of a parameter t k , which counts the number of fast steps taken prior to iteration k. <p> Superlinear convergence of k with Q-order at least 1 + ^o follows by standard arguments; see Wright <ref> [9, Theorem 6.3] </ref> and Wright and Zhang [12, Theorem 5.2].
Reference: [12] <author> S. J. Wright and Y. Zhang, </author> <title> A superquadratic infeasible-interior-point method for linear complementarity problems, </title> <type> Preprint MCS-P418-0294, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: Superlinear convergence of k with Q-order at least 1 + ^o follows by standard arguments; see Wright [9, Theorem 6.3] and Wright and Zhang <ref> [12, Theorem 5.2] </ref>.
Reference: [13] <author> C. Zhu and R. T. Rockafellar, </author> <title> Primal-dual projected gradient algorithms for extended linear-quadratic programming, </title> <journal> SIAM Journal on Optimization, </journal> <volume> 3 (1993), </volume> <pages> pp. 751-783. </pages>
Reference-contexts: Then Assumption 1 is satisfied. 6 Computational Results The method described here has been implemented and tested on some small NCPs from the collection of Dirkse [2] and some larger extended linear-quadratic programming problems from Zhu and Rockafellar <ref> [13] </ref>. The following parameter settings are used in our code: O = :9; oe = :01; ff = :95; = :1; fl = :5; We modify the algorithm slightly to use a different value for the reduction factor O for the fast steps. <p> A few obvious modifications to the algorithm are required to take account of the mixed nature of the problem, and we do not discuss these here. We obtain the problems by reformulating the stagewise extended linear-quadratic programming (ELQP) problems considered by Rockafellar [7] and Zhu and Rockafellar <ref> [13] </ref>. The motivation for these stagewise problems comes from optimal control, and we refer the reader to the cited references for more details. Stagewise ELQPs are quite complicated to state. <p> In our code, the LAPACK band solve routines DGBTRF and DGBTRS [1] are used to solve this linear system. We tested our algorithm on modifications of the random stagewise ELQPs that are described in Section 6 of Zhu and Rockafellar <ref> [13] </ref>. <p> The matrices P i and Q i are chosen to be diagonal and positive semidefinite, while the remaining matrices and vectors in the problem are dense. The polyhedra U i and V i are rectangles, that is, Cartesian products of intervals on the real line. In <ref> [13] </ref>, the matrices Q i and P i are all strictly positive definite, but we modify them here by setting Q i j 0. <p> As discussed in Rockafellar [7], this choice corresponds to "hard" constraints on the primal variables u i ; in fact, the primal problem above reduces to a quadratic program. The algorithms described by Rockafellar [8] and Zhu and Rockafellar <ref> [13] </ref> tend not to perform well in this important case, however. They lend themselves better to fully quadratic problems in which P i and Q i are all positive definite. On the other hand, our interior-point algorithm seems indifferent to this property. <p> Our aim is to demonstrate that the algorithm that we analyze in this paper is quite effective for both linear and nonlinear problems. We use the code discussed in <ref> [13] </ref> to generate the data and starting points for our test problems. Besides resetting each Q i to 0, we modify the starting points slightly to ensure strict interiority. We use the odd-numbered data sets from the problem generator, which accounts for our numbering scheme for the test problems. <p> In the case of Df () merely continuous near x fl , we still have global convergence, from the analysis of Section 3. Acknowledgments We are grateful to Ciyou Zhu for numerous discussions of ELQPs and for providing the code for the algorithm described in <ref> [13] </ref>. 20 Appendix Proof of Lemma 2.1. We deal only with the case of r 0 6= 0, since the proofs for the case of r 0 = 0 are simple specializations. We prove (17) and (18) by induction on l.
References-found: 10

