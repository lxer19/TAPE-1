URL: http://www-cse.ucsd.edu/users/elkan/papers/chatkb.ps
Refering-URL: http://www-cse.ucsd.edu/users/elkan/
Root-URL: 
Title: Categorization-Based Diagnostic Problem Solving in the VLSI Design Domain  
Author: Amir Hekmatpour Charles Elkan 
Address: Mail Code B21/975-1 University of California, San Diego Essex Junction, Vermont 05452 La Jolla, California 92093-0114  
Affiliation: IBM Computer Science and Engineering  
Note: Published in Proceedings of the IEEE Conference on Artificial Intelligence for Applications, (CAIA'93), Orlando, Florida, March 1993, pp. 121-127. (Best paper award.)  
Abstract: This paper introduces a novel architecture for expert systems performing diagnostic problem-solving. The architecture is called "categorization-based" because problems are solved by relating them to relevant categories of known cases using deep knowledge about the application domain. The effectiveness of the architecture has been validated by an implemented expert system called CHATKB, which does troubleshooting for users of IBM computer-aided VLSI design tools. Experiments show that CHATKB provides advice of the same quality as human experts. The deep, general knowledge in CHATKB about the VLSI design domain was developed by studying versions of SPICE. The success of CHATKB now shows that this knowledge is applicable to quite different VLSI design tools. With the categorization-based architecture, it therefore provides a sound, transferable basis for creating expert systems to help the users of most VLSI design tools. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Cain, M. Pazzani, and G. Silverstein. </author> <title> Using domain knowledge to influence similarity judgement. </title> <booktitle> In Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 191-199. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <month> May </month> <year> 1991. </year>
Reference-contexts: Moreover, similar cases were combined when possible into a single case, with non-identical features accommodated as multiple values. Similarity assessment is loosely based on the nearest neighbor metric [5] as extended in <ref> [1] </ref>. This metric says that the similarity between two cases is proportional to the number of matching predictive features that are relevant for the two cases. Importantly, different features are classified as relevant for different cases.
Reference: [2] <author> R. R. Cantone, W. B. Lander, M. P. Marrone, and M. W. Gaynor. IN-ATE/e: </author> <title> interpreting high-level fault modes. </title> <booktitle> In Proceedings of the First IEEE Conference on Artificial Intelligence for Applications (CAIA), </booktitle> <pages> pages 470-475, </pages> <month> December </month> <year> 1984. </year>
Reference-contexts: CHATKB uses a heuristic algorithm to recursively update the tool module leaf corresponding to 3 Several other diagnosis and recovery expert systems use various entropy measures. Cost is not taken into account in FIS (Fault Isolation System) [19] or in GDE (General Diagnostic Engine [4]). Cost is considered in <ref> [2] </ref> but no combined entropy measure is used. An entropy measure taking into account cost is used in [14]. the rejected templates, all ancestors of this leaf, the top-level leaf corresponding to the active tool module, and all ancestors of this top-level leaf. After updating, case retrieval is attempted again.
Reference: [3] <author> W. J. Clancey. </author> <title> Heuristic classification. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 289-350, </pages> <year> 1985. </year>
Reference-contexts: The architecture of CHATKB thus has both a heuristic classification aspect <ref> [3] </ref> and a case-based aspect [24]. The deep, general knowledge about the VLSI design domain possessed by CHATKB is an extension of a framework for understanding errors in the VLSI design process developed in previous work by studying three versions of SPICE.
Reference: [4] <author> Johan de Kleer and Brian C. Williams. </author> <title> Diagnosing multiple faults. </title> <journal> Artificial Intelligence, </journal> <volume> 32 </volume> <pages> 97-130, </pages> <year> 1987. </year>
Reference-contexts: CHATKB uses a heuristic algorithm to recursively update the tool module leaf corresponding to 3 Several other diagnosis and recovery expert systems use various entropy measures. Cost is not taken into account in FIS (Fault Isolation System) [19] or in GDE (General Diagnostic Engine <ref> [4] </ref>). Cost is considered in [2] but no combined entropy measure is used. An entropy measure taking into account cost is used in [14]. the rejected templates, all ancestors of this leaf, the top-level leaf corresponding to the active tool module, and all ancestors of this top-level leaf.
Reference: [5] <author> Richard O. Duda and Peter E. Hart. </author> <title> Pattern classification and scene analysis. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1973. </year>
Reference-contexts: Moreover, similar cases were combined when possible into a single case, with non-identical features accommodated as multiple values. Similarity assessment is loosely based on the nearest neighbor metric <ref> [5] </ref> as extended in [1]. This metric says that the similarity between two cases is proportional to the number of matching predictive features that are relevant for the two cases. Importantly, different features are classified as relevant for different cases.
Reference: [6] <author> Douglas H. Fisher and Jungsoon Yoo. </author> <title> Categorization, concept learning, and problem-solving: A unifying view. In Categorization by Humans and Machines. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: The categorization-based architecture appears to be well-suited for diagnostic problem-solving in general, and we have also used it in other expert systems [9]. Interestingly, it is very similar to an architecture proposed recently as a model of human problem-solving <ref> [6] </ref>. The deepest knowledge in CHATKB is the classifica-tion scheme for episodes of error interpretation and recovery that is part of our framework for understanding such episodes. Like some previous theories of human information-processing [8], this framework treats systematic errors and correct performance as two sides of the same coin.
Reference: [7] <author> D. E. Forsythe, B. G. Buchanan, J. A. Osheroff, and R. A. Miller. </author> <title> Expanding the concept of medical information: an observational study of physicians' information needs. </title> <journal> Computers and Biomedical Research, </journal> <volume> 25(2) </volume> <pages> 181-200, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: In conjunction, these two facts are a window of opportunity for CHATKB. A stable knowledge base can contain solutions to most user problems, and these solutions can be delivered much faster than with CHAT. A common problem with expert systems (especially medical ones <ref> [7] </ref>) is that users do not like using them, so their benefits are not realized. The experiment reported in the previous section indicates that on the whole, users like CHATKB, so we are confident the system will be used.
Reference: [8] <author> L.P. Goodstein, H.B. Andersen, and S.E. Olsen, </author> <title> editors. Tasks, errors, and mental models: </title> <note> A festschrift to celebrate the 60th birthday of Professor Jens Ras-mussen. </note> <author> Taylor & Francis, </author> <year> 1988. </year>
Reference-contexts: A large number of problems come directly to Burlington, and all questions not resolved locally end up in Burlington. 3 A framework for analyzing errors in the VLSI design process In preparation for work on CHATKB, we studied existing theories of error closely <ref> [17, 20, 16, 21, 8] </ref>. An attempt to map these to the domain of VLSI design revealed some limitations and mismatches. <p> The deepest knowledge in CHATKB is the classifica-tion scheme for episodes of error interpretation and recovery that is part of our framework for understanding such episodes. Like some previous theories of human information-processing <ref> [8] </ref>, this framework treats systematic errors and correct performance as two sides of the same coin. It extends previous theories to accommodate environment errors also, and most important, human and system initiatives to recover from errors.
Reference: [9] <author> Amir Hekmatpour and Charles Elkan. </author> <title> A multimedia expert system for wafer polisher maintenance (abstract). </title> <booktitle> In Proceedings of the IEEE International Conference on Artificial Intelligence for Applications, </booktitle> <month> March </month> <year> 1993. </year>
Reference-contexts: Other systems for fault diagnosis and repair have used somewhat similar hierarchical organizations of knowledge, with inference using domain knowledge first, then similarity between cases [15, 14]. The categorization-based architecture appears to be well-suited for diagnostic problem-solving in general, and we have also used it in other expert systems <ref> [9] </ref>. Interestingly, it is very similar to an architecture proposed recently as a model of human problem-solving [6]. The deepest knowledge in CHATKB is the classifica-tion scheme for episodes of error interpretation and recovery that is part of our framework for understanding such episodes.
Reference: [10] <author> Amir Hekmatpour, Alex Orailoglu, and Paul Chau. </author> <title> Hierarchical modeling of the VLSI design process. </title> <journal> IEEE Expert, </journal> <volume> 6(2) </volume> <pages> 56-70, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Intermediate level knowledge modules concern individual VLSI design tools, while knowledge at the lowest level consists of UPERIT templates. What the top-level module specifically contains is knowledge about how different tools and stages of the VLSI design process are related to each other. We follow <ref> [10] </ref> in partitioning the design process into algorithm, architectural, structural, functional, logical, transistor, technology, physical, package, and fabrication stages. This module includes, for example, the knowledge that ETE is involved in the tasks of functional and logical design.
Reference: [11] <author> Janet L. Kolodner. </author> <title> Retrieval and organizational strategies in conceptual memory: A computer model. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1984. </year>
Reference-contexts: Identifying deep features and finding their values, on the other hand, requires domain knowledge and is time-consuming. On the whole, symptom and initiative fields are surface, while task and condition fields are deep. Case features are also classified as predictive or non-predictive, as in CYRUS <ref> [11] </ref> and UNIMEM [13]. A distinctive feature of CHATKB is that cases were assessed for similarity and merged if possible during knowledge acquisition.
Reference: [12] <author> Phyllis Koton. </author> <title> Reasoning about evidence in causal explanation. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1988. </year>
Reference-contexts: Node strengths make each knowledge module resemble the causal inference network used in <ref> [12] </ref> where the node for each condition is linked to nodes for other conditions caused by it, with associated probabilities. Each node also has a second attribute called cost.
Reference: [13] <author> M. Lebowitz. </author> <title> Concept learning in a rich input domain: Generalization-based memory. </title> <editor> In Ryszard S. Michalski, Jaime G. Carbonell, and Tom M. Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <volume> volume 2. </volume> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1986. </year>
Reference-contexts: Identifying deep features and finding their values, on the other hand, requires domain knowledge and is time-consuming. On the whole, symptom and initiative fields are surface, while task and condition fields are deep. Case features are also classified as predictive or non-predictive, as in CYRUS [11] and UNIMEM <ref> [13] </ref>. A distinctive feature of CHATKB is that cases were assessed for similarity and merged if possible during knowledge acquisition.
Reference: [14] <author> W. Y. Lee, S. M. Alexander, and J. H. Graham. </author> <title> A diagnostic expert system prototype for CIM. </title> <journal> Computers and Industrial Engineering, </journal> <volume> 22(3) </volume> <pages> 337-352, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Cost is not taken into account in FIS (Fault Isolation System) [19] or in GDE (General Diagnostic Engine [4]). Cost is considered in [2] but no combined entropy measure is used. An entropy measure taking into account cost is used in <ref> [14] </ref>. the rejected templates, all ancestors of this leaf, the top-level leaf corresponding to the active tool module, and all ancestors of this top-level leaf. After updating, case retrieval is attempted again. <p> The architecture of CHATKB combines problem-solving by classification and by case retrieval. Other systems for fault diagnosis and repair have used somewhat similar hierarchical organizations of knowledge, with inference using domain knowledge first, then similarity between cases <ref> [15, 14] </ref>. The categorization-based architecture appears to be well-suited for diagnostic problem-solving in general, and we have also used it in other expert systems [9]. Interestingly, it is very similar to an architecture proposed recently as a model of human problem-solving [6].
Reference: [15] <author> C. A. Marsh. </author> <title> The ISA expert system: a prototype system for failure diagnosis on the space station. </title> <booktitle> In Proceedings of the First International Conference on Industrial and Engineering Applications of Artificial Intelligence and Expert Systems (IEA/AIE-88), </booktitle> <pages> pages 60-74, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: The architecture of CHATKB combines problem-solving by classification and by case retrieval. Other systems for fault diagnosis and repair have used somewhat similar hierarchical organizations of knowledge, with inference using domain knowledge first, then similarity between cases <ref> [15, 14] </ref>. The categorization-based architecture appears to be well-suited for diagnostic problem-solving in general, and we have also used it in other expert systems [9]. Interestingly, it is very similar to an architecture proposed recently as a model of human problem-solving [6].
Reference: [16] <author> Donald A. Norman. </author> <title> Position paper on human error. </title> <booktitle> In NATO Advanced Research Workshop on Human Error, </booktitle> <address> Italy, </address> <year> 1983. </year>
Reference-contexts: A large number of problems come directly to Burlington, and all questions not resolved locally end up in Burlington. 3 A framework for analyzing errors in the VLSI design process In preparation for work on CHATKB, we studied existing theories of error closely <ref> [17, 20, 16, 21, 8] </ref>. An attempt to map these to the domain of VLSI design revealed some limitations and mismatches.
Reference: [17] <author> Donald A. Norman and Tim Shallice. </author> <title> Attention to action: Willed and automated control of behavior. </title> <type> Technical Report CHIP99, </type> <institution> Center for Human Information Processing, University of California, </institution> <address> San Diego, </address> <year> 1980. </year>
Reference-contexts: A large number of problems come directly to Burlington, and all questions not resolved locally end up in Burlington. 3 A framework for analyzing errors in the VLSI design process In preparation for work on CHATKB, we studied existing theories of error closely <ref> [17, 20, 16, 21, 8] </ref>. An attempt to map these to the domain of VLSI design revealed some limitations and mismatches.
Reference: [18] <author> Michael Pazzani. </author> <title> Creating a memory of causal relationships: An integration of empirical and explanation-based learning methods. </title> <publisher> Lawrence Erl-baum Associates, </publisher> <year> 1990. </year>
Reference-contexts: This is because deciding which features are genuinely predictive for complex case structures such as UPERIT templates is difficult. Automatically inferred predictiveness can be misleading when there are coincidental similarities among cases, which is especially likely with large cases or with a small set of cases <ref> [18] </ref>. 6 The CHATKB system We selected Knowledge Director as the main tool for implementing CHATKB. Knowledge Director is a classification and decision expert system shell which runs on OS/2 under Presentation Manager. Knowledge Director was chosen for two reasons.
Reference: [19] <author> F. Pipitone. </author> <title> The Fault Isolation System electronic troubleshooting system. </title> <journal> IEEE Computer, </journal> <volume> 19 </volume> <pages> 68-76, </pages> <year> 1985. </year>
Reference-contexts: CHATKB uses a heuristic algorithm to recursively update the tool module leaf corresponding to 3 Several other diagnosis and recovery expert systems use various entropy measures. Cost is not taken into account in FIS (Fault Isolation System) <ref> [19] </ref> or in GDE (General Diagnostic Engine [4]). Cost is considered in [2] but no combined entropy measure is used.
Reference: [20] <author> J. Rasmussen. </author> <title> Human errors: a taxonomy for describing human malfunction in industrial installations. </title> <journal> Journal of Occupational Accidents, </journal> <volume> 4 </volume> <pages> 311-335, </pages> <year> 1982. </year>
Reference-contexts: A large number of problems come directly to Burlington, and all questions not resolved locally end up in Burlington. 3 A framework for analyzing errors in the VLSI design process In preparation for work on CHATKB, we studied existing theories of error closely <ref> [17, 20, 16, 21, 8] </ref>. An attempt to map these to the domain of VLSI design revealed some limitations and mismatches.
Reference: [21] <author> J. </author> <title> Reason. A framework for classifying errors. </title> <editor> In J. Rasmussen, K. Duncan, and J. Leplat, editors, </editor> <title> New Technology and Human Error. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1987. </year>
Reference-contexts: A large number of problems come directly to Burlington, and all questions not resolved locally end up in Burlington. 3 A framework for analyzing errors in the VLSI design process In preparation for work on CHATKB, we studied existing theories of error closely <ref> [17, 20, 16, 21, 8] </ref>. An attempt to map these to the domain of VLSI design revealed some limitations and mismatches.
Reference: [22] <author> B. D. Sharma, J. Mitter, and M. Mohan. </author> <title> On measures of `useful' information. </title> <journal> Information and Control, </journal> <volume> 39 </volume> <pages> 323-336, </pages> <year> 1987. </year>
Reference-contexts: This represents the relative expense (in time or other resources) of verifying the symptoms or performing the actions described at the node. Node strength and node cost are combined into a weighted entropy measure of useful information similar to that of <ref> [22] </ref>. 3 This measure is used to identify the best child node when the user cannot answer the questions necessary to select a child with certainty. The CHATKB inference algorithm identifies solution cases by searching through the top-level knowledge module first, and then through tool-level modules.
Reference: [23] <author> E. Simoudis and J. S. Miller. </author> <title> The application of CBR to help desk applications. </title> <booktitle> In Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 25-36. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <month> May </month> <year> 1991. </year>
Reference-contexts: In addition, some of these cases were still under investigation at the time the CHAT database was backed up. Each field of a UPERIT template is classified as surface or deep. A surface feature is a low-level feature, whose value is inexpensive to obtain <ref> [23] </ref>. Identifying deep features and finding their values, on the other hand, requires domain knowledge and is time-consuming. On the whole, symptom and initiative fields are surface, while task and condition fields are deep. Case features are also classified as predictive or non-predictive, as in CYRUS [11] and UNIMEM [13].
Reference: [24] <author> Stephen Slade. </author> <title> Case-based reasoning: A research paradigm. </title> <journal> AI Magazine, </journal> <volume> 12(1) </volume> <pages> 42-55, </pages> <year> 1991. </year>
Reference-contexts: The architecture of CHATKB thus has both a heuristic classification aspect [3] and a case-based aspect <ref> [24] </ref>. The deep, general knowledge about the VLSI design domain possessed by CHATKB is an extension of a framework for understanding errors in the VLSI design process developed in previous work by studying three versions of SPICE.
References-found: 24

