URL: http://www.ai.mit.edu/~mpf/rc/flattop/newpaper/flattop.ps
Refering-URL: 
Root-URL: 
Title: A scalable reversible computer in silicon Revision: 1.9  
Author: M. Josephine Ammer, Michael Frank, Tom Knight, Nicole Love, Norm Margolus, Carlin Vieri 
Address: Cambridge, MA 02139, USA  
Affiliation: MIT Artificial Intelligence Laboratory,  
Abstract: The reversible and "adiabatic" transfer of charge in digital circuits has recently been a subject of interest in the low-power electronics community, but no one has yet created a complete, purely reversible CPU using this technology. Fundamental physical scaling laws imply that a fully-reversible processing element would permit unboundedly greater efficiency at some tasks, by several different metrics, than can be achieved with any possible irreversible computer. In this paper we describe the design of Flattop, a simple fully-adiabatic chip, now in fabrication, which can serve as a general-purpose parallel processor when tiled in large arrays. Flattop implements the Billiard Ball Cellular Automaton, a uni-veral and reversible model of computation. Flattop is implemented in a standard silicon 0.5 m CMOS process using the Split-Level Charge Recovery Logic (SCRL) circuit family developed at our lab. Calculations indicate that our circuit can operate with about 2000 times the energy efficiency of an equivalent chip based on standard circuit techniques. Although Flattop is itself not a very practical architecture for performing arbitrary computations, it is an important proof-of-concept, demonstrating that physically reversible universal computers can actually be built using current technology.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Michael P. Frank. </author> <title> Ultimate theoretical models of nanocomputers. </title> <booktitle> Nanotechnol-ogy. To be presented at the Fifth Foresight Conference on Molecular Nanotech-nology, </booktitle> <address> Palo Alto, California, </address> <month> Nov. </month> <year> 1997. </year> <note> http://www.ai.mit.edu/~mpf/Nano97/ abstract.html. </note>
Reference-contexts: For further discussion of scaling issues see <ref> [1, 2] </ref>. 1.3 Flattop Despite the interest in reversible and adiabatic computation, nobody has yet carried through the exercise of designing a complete computer based on totally reversible adiabatic technology.
Reference: 2. <author> Michael P. Frank, Jr. Thomas F. Knight, and Norman H. Margolus. </author> <title> Reversibil-ity in optimally scalable computer architectures. </title> <booktitle> In proc. of the First International Conference on Unconventional Models of Computation (UMC-98), </booktitle> <address> Auckland, New Zealand, </address> <month> January </month> <year> 1998. </year> <note> http://www.ai.mit.edu/~mpf/rc/scaling_paper/ scaling.html. </note>
Reference-contexts: For further discussion of scaling issues see <ref> [1, 2] </ref>. 1.3 Flattop Despite the interest in reversible and adiabatic computation, nobody has yet carried through the exercise of designing a complete computer based on totally reversible adiabatic technology.
Reference: 3. <author> J. G. Koller and W. C. Athas. </author> <title> Adiabatic switching, low energy computing, and the physics of storing and erasing information. </title> <booktitle> In Physics of Computation Workshop, </booktitle> <year> 1992. </year>
Reference-contexts: In the technology we are using, this energy is about 10 8 times higher than kT ln 2. 1.1 Adiabatic circuits The recent development of so-called "adiabatic" circuits (e.g., see <ref> [3] </ref>) has shown that this large 1 2 CV 2 energy per bit-change is not strictly necessary. If circuit nodes are charged and discharged gradually, under the control of redundant information stored in other circuit nodes, then the circuit can change state in an arbitrarily adiabatic fashion.
Reference: 4. <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM J. Research and Development, </journal> <volume> 5 </volume> <pages> 183-191, </pages> <year> 1961. </year>
Reference-contexts: Adding one bit of entropy to a thermal system having temperature T requires injecting at least k B T ln 2 energy into the system, where k B is Boltzmann's constant, in order to increase the number of available states <ref> [4] </ref>. This rule can even be considered to be a definition of temperature in terms of energy and entropy. ? This work was supported by DARPA contract DABT63-95-C-0130.
Reference: 5. <author> K. K. Likharev. </author> <title> Classical and quantum limitations on energy consumption in computation. </title> <journal> Int'l J. Theoretical Physics, </journal> 21(3/4):311-326, 1982. 
Reference-contexts: However, this limit can be made exponentially small by operating with higher voltages or lower temperatures. Problems due to resistance will diminish as technology improves. Circuits built from exotic but existing low-temperature superconducting switches, such as Josephson junctions <ref> [5] </ref>, offer extremely low resistance to fast reversible changes of state, and negligible leakage effects. Moreover, even with the high resistance and measurable leakage of conventional transistors at ordinary voltages and temperatures, SCRL is still capable of much greater energy-efficiencies than traditional uses of CMOS technology.
Reference: 6. <author> N. H. Margolus. </author> <title> Physics and Computation. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1988. </year>
Reference-contexts: To make the project most feasible, we chose the simplest parallel universal computer model we knew about, namely that of Margolus's Billiard Ball Model Cellular Automaton (BBMCA) <ref> [6] </ref>. The BBMCA is not exactly the most convenient computer to program, but it is simple, universal, reversible, and scalable.
Reference: 7. <author> S. G. Younis. </author> <title> Asymptotically Zero Energy Computing Using Split-Level Charge Recovery Logic. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Here, as in the study of heat engines, an adiabatic process is one that takes place without any heat flow into or out of the system. A few years ago, members of our group discovered SCRL <ref> [8, 7] </ref>, a particularly simple and elegant adiabatic circuit technique that allows constructing integrated purely-reversible pipelined sequential circuits using only the ordinary CMOS transitors available in commercial VLSI fabrication processes. We will describe SCRL's operation in more detail in section 3. <p> The wires going off the edges of the array can be folded back into the array to connect the two bit-planes, or fed out to neighboring chips in a larger array. Fig. 1. BBMCA block update rules. 3 SCRL SCRL <ref> [8, 7] </ref> has several advantages over its predecessors in adiabatic logic. The main one is that SCRL can be pipelined, allowing for continuously-running, sequential adiabatic circuits. This pipelining requires that each gate that computes a function be paired with another gate to compute the inverse function. <p> Normal SCRL stages cannot compute non-inverting logic functions, but it is actually possible to compute non-inverting functions by providing an extra pair of "fast" rails that split before the main rails do, and re-combine after the main ones. (See <ref> [8, 7] </ref>.) These rails can be used to drive an extra level of logic (such as inverters) to feed the inputs of the main logic. In this way, a single SCRL stage can compute any logic function. We used this trick to help make our circuits simpler. <p> If the power supplies do not have enough efficiency, that will limit our power savings. The development of a satisfactory power supply is an active research topic, but in this paper we assume it's given. 4 Circuit Design We decided to focus on so-called "3-phase SCRL" <ref> [7] </ref> for implementing our array because it is the simplest version of SCRL that doesn't depend on dynamic charge storage, and we wanted to be able to run the clocks arbitrarily slowly or stop them altogether without worrying about losing our logic values, in order to make testing easier.
Reference: 8. <author> S. G. Younis and T. F. Knight, Jr. </author> <title> Asymptotically zero energy split-level charge recovery logic. </title> <booktitle> In International Workshop on Low Power Design, </booktitle> <pages> pages 177-182, </pages> <year> 1994. </year>
Reference-contexts: Here, as in the study of heat engines, an adiabatic process is one that takes place without any heat flow into or out of the system. A few years ago, members of our group discovered SCRL <ref> [8, 7] </ref>, a particularly simple and elegant adiabatic circuit technique that allows constructing integrated purely-reversible pipelined sequential circuits using only the ordinary CMOS transitors available in commercial VLSI fabrication processes. We will describe SCRL's operation in more detail in section 3. <p> The wires going off the edges of the array can be folded back into the array to connect the two bit-planes, or fed out to neighboring chips in a larger array. Fig. 1. BBMCA block update rules. 3 SCRL SCRL <ref> [8, 7] </ref> has several advantages over its predecessors in adiabatic logic. The main one is that SCRL can be pipelined, allowing for continuously-running, sequential adiabatic circuits. This pipelining requires that each gate that computes a function be paired with another gate to compute the inverse function. <p> Normal SCRL stages cannot compute non-inverting logic functions, but it is actually possible to compute non-inverting functions by providing an extra pair of "fast" rails that split before the main rails do, and re-combine after the main ones. (See <ref> [8, 7] </ref>.) These rails can be used to drive an extra level of logic (such as inverters) to feed the inputs of the main logic. In this way, a single SCRL stage can compute any logic function. We used this trick to help make our circuits simpler.
References-found: 8

