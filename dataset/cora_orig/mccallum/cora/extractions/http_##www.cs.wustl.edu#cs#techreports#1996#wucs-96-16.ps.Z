URL: http://www.cs.wustl.edu/cs/techreports/1996/wucs-96-16.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Email: jst@cs.wustl.edu  
Title: Extending ATM Networks for Efficient Reliable Multicast  
Author: Jonathan S. Turner wucs-- 
Note: 0 This work was supported by the Advanced Research Projects Agency.  
Address: Campus Box 1045  One Brookings Drive St. Louis, MO 63130-4899  
Affiliation: Department of Computer Science  Washington University  
Date: January 13, 1997  
Abstract: One of the important features of ATM networks is their ability to support multicast communication. This facilitates the efficient distribution of multimedia information streams (such as audio and video) to large groups of receivers (potentially millions). Because ATM networks do not provide reliable delivery mechanisms, it is up to end systems to provide end-to-end reliability where it is needed. While this is straightforward for point-to-point virtual circuits, it is more difficult for one-to-many and many-to-many virtual circuits. In this report, we propose some minimal extensions to the hardware of ATM switches that enables end systems to implement reliable multicast in a more efficient and scalable manner than is otherwise possible. Our approach makes the amount of work that must be done by any end system essentially independent of of the number of multicast participants, while requiring no complex processing at the switches. We propose solutions for both one-to-many and many-to-many multicast virtual circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Armstrong, S. A. Freier and K. Marzullo. </author> <title> "Multicast Transport Protocol," </title> <type> RFC 1301, 2/92. </type>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [2] <author> Bhagwat, P., P. Mishra and S. Tripathi. </author> <title> "Effect of Topology on Performance of Reliable Multicast Communication," </title> <booktitle> Proceedings of Infocom, </booktitle> <pages> 6/94. </pages>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [3] <author> Braudes, R and S. Zabele, </author> <title> "Requirements for Multicast Protocols," </title> <type> RFC 1458, 5/93. </type>
Reference: [4] <author> Chang, J. and N. Maxemchuk. </author> <title> "Reliable Broadcast Protocols," </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8/84. </volume>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was <ref> [4] </ref>. More recent contributions include [1, 2, 6, 8, 10, 9, 11, 12, 13]. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [5] <author> Chaney, Tom, J. Andrew Fingerhut, Margaret Flucke and Jonathan S. Turner. </author> <title> "Design of a Gigabit ATM Switch," </title> <institution> Washington University Computer Science Department, WUCS-96-07, </institution> <month> 2/96. </month>
Reference-contexts: Through this process, a connection with f destinations can be handled in log 2 f passes through the network. Further details on the WUGS switch architecture can be found in references <ref> [5, 14, 15, 16] </ref>. Because the WUGS architecture breaks a large multicast into binary copy steps, it can 12 Extending ATM Networks for Efficient Reliable Multicast be easily extended to implement the reliable multicast protocol.
Reference: [6] <author> Crowcroft, J. and K. Paliwoda. </author> <title> "A Multicast Transport Protocol," </title> <booktitle> Proceedings ACM SIGCOMM, </booktitle> <year> 1988. </year>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [7] <author> Floyd, S., V. Jacobson, S. McCanne, L. Zhang, C. Liu. </author> <title> "A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing," </title> <booktitle> Proceedings of ACM SIGCOMM, </booktitle> <pages> 9/95. </pages>
Reference-contexts: Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers. The recent paper by Floyd, Jacobson, et. al. <ref> [7] </ref> is a good example of the receiver-based recovery. This paper also advocates the use of application-specific reliable multicast mechanisms, rather than more general mechanisms supported at lower levels. <p> For distributed computing applications, this may well be the right thing to do. For information distribution applications, it's not clear that this is an appropriate approach. Indeed, there may be no single approach that is really suitable for all applications, as argued in <ref> [7] </ref>. We have neglected the problem of dynamically updating a reliable multicast connection in progress. Adding a new endpoint requires proper initialization of the acknowledgement state information for the new branch. Andy Fingerhut has developed a technique for doing this, which will be described in a forthcoming technical report.
Reference: [8] <author> Holbrook, H., S. Singhal and D. Cheriton. </author> <title> "Log-Based Receiver-Reliable Multicast for Distributed Interactive Simulation," </title> <booktitle> Proceedings of ACM SIGCOMM, </booktitle> <pages> 9/95. </pages>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [9] <author> Papadopoulos, Christos and Guru Parulkar. </author> <title> "Error Control for Continuous Media and Multipoint Applications," </title> <institution> Washington University Computer Science Department, WUCS-95-35, </institution> <month> 12/95. </month>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [10] <author> Paul, S., K. Sabnani, R. Buskens, S. Muhammad, J. Lin and S. Bhattacharyya. "RMTP: </author> <title> A Reliable Multicast Transport Protocol for High Speed Networks," </title> <booktitle> Proceedings of the IEEE Workshop on Computer Communications, </booktitle> <pages> 9/95. </pages>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [11] <author> Pingali, S., D. Towsley and J. Kurose. </author> <title> "A Comparison of Sender-initiated and Receiver-initiated Reliable Multicast Protocols," </title> <booktitle> Proceedings of SIGMETRICS, </booktitle> <year> 1994. </year>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [12] <author> Shacham, N. </author> <title> "The Design of a Heterogeneous Multicast System and its Implementation Over ATM," </title> <booktitle> Proceedings of the IEEE Workshop on Computer Communications, </booktitle> <pages> 9/95. </pages>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [13] <author> Whetten, B., S. Kaplan and T. Montgomery. </author> <title> "A High Performance Totally Ordered Multicast Protocol," </title> <booktitle> Proceedings of Infocom, </booktitle> <year> 1995. </year> <title> 26 Extending ATM Networks for Efficient Reliable Multicast </title>
Reference-contexts: Our restrictions on the role of end systems are motivated by our desire to provide the highest possible performance and the lowest possible latency. There is a substantial literature on providing reliable multicast mechanisms in networks. One of the earliest contributions was [4]. More recent contributions include <ref> [1, 2, 6, 8, 10, 9, 11, 12, 13] </ref>. Much of this more work is directed toward multicast in the context of the internet protocol suite and shifts much of the responsibility for recovering lost data onto the receivers.
Reference: [14] <author> Turner, Jonathan S. </author> <title> "An Optimal Nonblocking Multicast Virtual Circuit Switch," </title> <booktitle> Proceedings of Infocom, </booktitle> <pages> 6/94. </pages>
Reference-contexts: Through this process, a connection with f destinations can be handled in log 2 f passes through the network. Further details on the WUGS switch architecture can be found in references <ref> [5, 14, 15, 16] </ref>. Because the WUGS architecture breaks a large multicast into binary copy steps, it can 12 Extending ATM Networks for Efficient Reliable Multicast be easily extended to implement the reliable multicast protocol.
Reference: [15] <author> Turner, Jonathan S. </author> <title> "Multicast Virtual Circuit Switch Using Cell Recycling," </title> <type> U.S. Patent #5,402,415, </type> <month> March 28, </month> <year> 1995. </year>
Reference-contexts: Through this process, a connection with f destinations can be handled in log 2 f passes through the network. Further details on the WUGS switch architecture can be found in references <ref> [5, 14, 15, 16] </ref>. Because the WUGS architecture breaks a large multicast into binary copy steps, it can 12 Extending ATM Networks for Efficient Reliable Multicast be easily extended to implement the reliable multicast protocol.
Reference: [16] <author> Turner, Jonathan S. and the ARL and ANG staff. </author> <title> "A Gigabit Local ATM Testbed for Multimedia Applications," </title> <institution> Washington University Applied Research Lab ARL-WN-94-11. </institution>
Reference-contexts: Through this process, a connection with f destinations can be handled in log 2 f passes through the network. Further details on the WUGS switch architecture can be found in references <ref> [5, 14, 15, 16] </ref>. Because the WUGS architecture breaks a large multicast into binary copy steps, it can 12 Extending ATM Networks for Efficient Reliable Multicast be easily extended to implement the reliable multicast protocol. <p> Implementation of Reliable Multicast in WUGS This section details how the reliable multicast mechanism can be implemented in the Wash-ington University Gigabit Switch (WUGS). This section assumes the reader is familiar with <ref> [16] </ref>. As discussed above, there are several cell types that make up the reliable multicast protocol: start cells, end cells, acknowledgement cells, negative acknowledgement cells, burst reject cells and data cells. <p> The first two bytes of the entry include the four bit TYP field plus several flag fields, most of which are defined as in the current WUGS system architecture document <ref> [16] </ref>. The Cell Counter (CC), Address field (ADR), Virtual Path/Circuit Identifier (VXI) and Block Discard Index (BDI) are also as in [16]. The Upstream Discard field (UD) is different than in [16]. <p> first two bytes of the entry include the four bit TYP field plus several flag fields, most of which are defined as in the current WUGS system architecture document <ref> [16] </ref>. The Cell Counter (CC), Address field (ADR), Virtual Path/Circuit Identifier (VXI) and Block Discard Index (BDI) are also as in [16]. The Upstream Discard field (UD) is different than in [16]. The changes described here are needed when a switch is implementing reliable many-to-many multicast in which there is no global funneling through a common point. <p> TYP field plus several flag fields, most of which are defined as in the current WUGS system architecture document <ref> [16] </ref>. The Cell Counter (CC), Address field (ADR), Virtual Path/Circuit Identifier (VXI) and Block Discard Index (BDI) are also as in [16]. The Upstream Discard field (UD) is different than in [16]. The changes described here are needed when a switch is implementing reliable many-to-many multicast in which there is no global funneling through a common point. The UD field is a single bit, although the UD field in the internal cell format is still two bits.
References-found: 16

