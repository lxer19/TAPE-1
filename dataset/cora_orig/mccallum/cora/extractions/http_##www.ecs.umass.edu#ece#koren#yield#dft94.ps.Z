URL: http://www.ecs.umass.edu/ece/koren/yield/dft94.ps.Z
Refering-URL: http://www.ecs.umass.edu/ece/koren/yield/
Root-URL: 
Title: A Yield Study of VLSI Adders  
Author: Zhan Chen and Israel Koren 
Address: Amherst, MA 01003, USA  
Affiliation: Department of Electrical and Computer Engineering University of Massachusetts,  
Abstract: Several 64-bit adders have been designed and their expected yield has been estimated. Our results show that the yield of VLSI adders can be improved by modifying the layout of the original design and/or by choosing a different layout and circuit structure. In certain situations, these approaches can improve the yield by 10% to 17%. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V.K.R. Chiluvuri and I. Koren, </author> <title> "New Routing and Compaction Strategies for Yield Enhancement," </title> <booktitle> IEEE Int. Workshop on Defect and Fault Tolerance in VLSI Systems, </booktitle> <pages> pp. 325-334, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: The MAGIC standard cell library, like any other cell library, contains a layout of a FA. Keeping the whole layout structure unchanged, we used the method introduced in <ref> [1] </ref> to modify the layout of this standard cell: redistributing the spacing between the conducting lines to reduce the sensitivity of the circuit to short-circuit type defects, and increasing the width of the conducting lines to reduce the sensitivity to open-circuit type defects.
Reference: [2] <author> H. Walker and S. W. Director, "VLASIC: </author> <title> A Catastrophic Fault Yield Simulator for Integrated Circuits," </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> CAD-5(4), </volume> <pages> pp. 541-556, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: The modifications are all in the poly and metal1 layers, and the active areas and the critical path are kept unchanged. SPICE simulations showed that there is no difference in speed between the original and the modified full adders. The yield, as estimated by VLASIC <ref> [2] </ref>, has improved only by about 0.01% compared with the original standard cell.
Reference: [3] <author> I. Koren, </author> <title> Computer Arithmetic Algorithms, </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference-contexts: The adders we have designed include: (1) Carry-look-ahead adder We designed two types of carry look-ahead adders: (i) Ordinary 64-bit carry look-ahead adder This type of adder has a three-level carry-look-ahead generation with the same blocking factor of 4 at each level <ref> [3] </ref>. <p> It combines three types of fast addition techniques: Manchester carry chain, carry-select and conditional-sum <ref> [3] </ref>. 2.3 Results and Analysis In our study, MAGIC was used to generate the layouts, the performance was analyzed using SPICE, and the yield was calculated using VLASIC. The defect statistics file that we have used was based on the data reported in [7].
Reference: [4] <author> T.F. Ngai, M.J. Irwin and S. Rawat, </author> <title> "Regular, Area-time Efficient Carry -look-ahead Adders," </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 3(1986), </volume> <pages> pp. 92-105, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: Partial layouts of carry-look-ahead1 (a), carry-look-ahead1 (b), and carry-look-ahead1 (d) are shown in Figure 1. (ii) Area-efficient 64-bit carry-look-ahead adder Using the structure presented in <ref> [4] </ref>, carry-look-ahead2 (a) has four levels of carry-look-ahead, with blocking factors of 2, 4, 4 and 2. carry-look-ahead2 (b) is the yield enhanced version of carry-look-ahead2 (a), using both layout modification techniques. (2) Carry-skip adder Following the design reported in [5], this 64-bit adder is divided into four blocks of 16-bit
Reference: [5] <author> T. Sato et al., </author> <title> "An 8.5-ns 112-b Transmission Gate Adder with a Conflict- Free Bypass Circuit," </title> <journal> IEEE Journal of Solid-state Circuits, </journal> <volume> 27(4), pp.657-659, </volume> <month> April </month> <year> 1992. </year>
Reference-contexts: (ii) Area-efficient 64-bit carry-look-ahead adder Using the structure presented in [4], carry-look-ahead2 (a) has four levels of carry-look-ahead, with blocking factors of 2, 4, 4 and 2. carry-look-ahead2 (b) is the yield enhanced version of carry-look-ahead2 (a), using both layout modification techniques. (2) Carry-skip adder Following the design reported in <ref> [5] </ref>, this 64-bit adder is divided into four blocks of 16-bit adder each, with an additional block-carry generator. Each 16-bit adder block and the block-carry generator consist of multi-carry-skip paths.
Reference: [6] <author> D.W. </author> <title> Dobberpuhl et al.,"A 200-MHz 64-b Dual-Issue CMOS Microprocessor," </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 27(11), pp.1555-1565, </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: The improved version of carry-skip (b), carry-skip (c) were obtained from carry-skip (a), in the same way as carry-look-ahead1 (b), carry-look-ahead1 (d) were obtained from carry-look-ahead1 (a), respectively. (3) DEC's ALPHA adder This is the hybrid adder which was used in the DEC's ALPHA chip and reported in <ref> [6] </ref>. It combines three types of fast addition techniques: Manchester carry chain, carry-select and conditional-sum [3]. 2.3 Results and Analysis In our study, MAGIC was used to generate the layouts, the performance was analyzed using SPICE, and the yield was calculated using VLASIC.
Reference: [7] <editor> R.S. Collica et al., </editor> <title> "A Yield Enhancement Methodology for Custom VLSI Manufacturing," </title> <journal> Digital Technical Journal, </journal> <volume> 4(2), pp.83-99, </volume> <month> Spring </month> <year> 1992. </year> <title> (a) Original layout (b) Modified layout using method 1 (c) Modified layout using both methods 1 and 2 </title>
Reference-contexts: Secondly, sometimes it can reduce the number of vias, which results in yield improvement. In our examples, we assumed that a via's fault probability is equal to the open-circuit type fault probability of a poly line of length 13 microns and width 2 microns <ref> [7] </ref>, while performance wise, a via is equivalent to a 7.5-micron-long and 3-micron-wide poly line (according to SPICE simulation results). <p> The defect statistics file that we have used was based on the data reported in <ref> [7] </ref>. The area and delay of the eleven types of adders are shown in Table 2. <p> 0:87; 1:31; 3:80; 0:31; 3:79; 2:90; 1:28; 0:66; 0:66; 0:66i per cm 2 , corresponding to the defect types of metal1 short, metal1 open, poly short, poly open, metal2 short, metal2 open, poly-metal1 contact open, metal1-metal2 contact open, metal1-active contact open, poly-metal1 pinhole, gate oxide pinhole, and metal1-metal2 pinhole, respectively <ref> [7] </ref>. As expected, the yield difference of adders increases as the defect density increases. For ex ample, carry-look-ahead2 (a) and carry-look-ahead1 (a) have a yield difference of 0.8% when the defect density is D 0 , while their difference increases to 9% when the defect density is 10D 0 .
References-found: 7

