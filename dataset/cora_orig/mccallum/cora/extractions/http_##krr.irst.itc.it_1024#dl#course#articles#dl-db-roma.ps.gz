URL: http://krr.irst.itc.it:1024/dl/course/articles/dl-db-roma.ps.gz
Refering-URL: http://krr.irst.itc.it:1024/dl/course/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Contents Description Logics for Conceptual Data Modeling 1 1.3 Semantic Data Models 7 1.3.1 The
Author: Diego Calvanese, Maurizio Lenzerini, Daniele Nardi 
Note: 1.1 Introduction 1 1.2 Description Logics 4 1.2.1 Syntax and Semantics of the Logic ALCQI 4 1.2.2 Knowledge Bases in ALCQI 6  28 1.6 Conclusions 30 References 31 v  
Abstract-found: 0
Intro-found: 0
Reference: [Abr74] <author> J. R. </author> <title> Abrial. Data semantics. </title> <editor> In J. W. Klimbie and K. L. Koffeman, editors, </editor> <booktitle> Data Base Management, </booktitle> <pages> pages 1-59. </pages> <publisher> North-Holland Publ. Co., </publisher> <address> Amsterdam, </address> <year> 1974. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in <ref> [Abr74] </ref> and subsequently studied in [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a]. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one.
Reference: [ACS96] <author> Alessandro Artale, Francesca Cesarini, and Giovanni Soda. </author> <title> Describing database objects in a concept language environment. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8(2) </volume> <pages> 345-351, </pages> <year> 1996. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in [BHR90; LNS91; Bor92], while in <ref> [BS92; PSS92; Bor95; ACS96] </ref> frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [AGO91] <author> A. Albano, G. Ghelli, and R. Orsini. </author> <title> A relationship mechanism for strongly typed Object-Oriented database programming languages. </title> <booktitle> In Proc. of the 17th Int. Conf. on Very Large Data Bases (VLDB-91), </booktitle> <pages> pages 565-575, </pages> <year> 1991. </year>
Reference-contexts: However, this strongly limits the expressive power of the data model, as pointed out in recent papers (see e.g. <ref> [AGO91] </ref>).
Reference: [AHV95] <author> Serge Abiteboul, Richard Hull, and Victor Vianu. </author> <title> Foundations of Databases. </title> <publisher> Addison Wesley Publ. Co., </publisher> <address> Reading, Massachussetts, </address> <year> 1995. </year>
Reference-contexts: There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. <ref> [CFP84; CK86; GM85; CKV90; AHV95] </ref>), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work [CTF88; LN90] addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework.
Reference: [AK89] <author> Serge Abiteboul and Paris Kanellakis. </author> <title> Object identity as a query language primitive. </title> <booktitle> In Proc. of the ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 159-173, </pages> <year> 1989. </year>
Reference-contexts: We show that these features make ALCQI powerful enough to provide a unified framework for object-oriented languages and semantic data models. This is done by establishing a precise correspondence with the Entity Relationship model [Che76], and with an object-oriented language in the style of <ref> [AK89] </ref>. Moreover, we demonstrate that the 4 LOGICS FOR DATABASES AND INFORMATION SYSTEMS formalism proposed in this paper provides important features that are currently missing in each family, although their relevance has often been stressed. <p> we do not refer DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 17 Class Teacher type-is Union Professor, GradStudent End Class GradStudent is-a Student type-is Record degree: String End Class Course type-is Record enrolls: Set-of Student, taughtby: Teacher End to any specific formalism, our model is inspired by the one presented in <ref> [AK89] </ref>, where a formal characterization is presented, but embodies the basic features of the static part of the ODMG standard [CB97]. <p> Thus we are using an open semantics for records, which is typical of object-oriented data models (see e.g. <ref> [AK89] </ref>). In order to characterize object-oriented data models we define which instances are admissible for a schema. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic [CFP84; LN90; DL93; HK87] and object-oriented data models <ref> [AK89; BS92; BN94] </ref>. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here.
Reference: [Baa96] <author> Franz Baader. </author> <title> Using automata theory for characterizing the semantics of terminological cycles. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 18 </volume> <pages> 175-219, </pages> <year> 1996. </year>
Reference-contexts: Assumption (2) is seldom made in existing concept-based knowledge representation systems, since terminological cycles increase the computational complexity of reasoning <ref> [Baa96] </ref>, and can be interpreted under different semantics [Neb91; Sch94; DGL94]. From a data modeling perspective it is however unrealistic to assume the absence of cycles. DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 7 The semantics of a knowledge base is specified through the notion of satisfaction of assertions.
Reference: [BCN92] <author> Carlo Batini, Stefano Ceri, and Sham B. Navathe. </author> <title> Conceptual Database Design, an Entity-Relationship Approach. </title> <publisher> Benjamin and Cummings Publ. Co., </publisher> <address> Menlo Park, California, </address> <year> 1992. </year>
Reference-contexts: The ER model was introduced in [Che76], and subsequently several variants and extensions have been proposed, which 8 LOGICS FOR DATABASES AND INFORMATION SYSTEMS differ in minor aspects in expressiveness and in notation <ref> [Teo89; BCN92; Tha92; Tha93] </ref>. In the ER model the domain of interest is modeled by means of an ER schema, usually represented in a graphical notation which is particularly useful for an easy visualization of the data dependencies. <p> The only direct relationship between entities that can be expressed in the basic ER model is the is-a relation. A common extension is by so called generalization hierarchies (see e.g. <ref> [BCN92] </ref>), which allow one to express that the extension of an entity should be the disjoint union of the extensions of other entities. Such construct can easily be translated by making use of union and negation of Description Logics.
Reference: [BDNS94] <author> Martin Buchheit, Francesco M. Donini, Werner Nutt, and Andrea Schaerf. </author> <title> Terminological systems revisited: Terminology = schema + views. </title> <booktitle> In Proc. of the 12th Nat. Conf. on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 199-204, </pages> <year> 1994. </year> <note> 32 LOGICS FOR DATABASES AND INFORMATION SYSTEMS </note>
Reference-contexts: Observe, however, that views are usually not considered to be part of the schema, but are built on top of it in order to define how the data present in the schema is used <ref> [BDNS94] </ref> (see [CDGL95] for a different "view" on this aspect). We pose no restrictions at all on the form of the assertions in a knowledge base. In particular: 1. Each atomic concept may appear more than once on the left side of an assertion. 2.
Reference: [BDS93] <author> Martin Buchheit, Francesco M. Donini, and Andrea Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: Both these assumptions have a strong impact on the expressiveness of our formalism, although this is paid by an increased computational complexity of reasoning. Making assumption (1) is equivalent to allowing for the use of so called free inclusion assertions <ref> [BDS93] </ref>, which have the form C 1 _ C 2 , with C 1 and C 2 arbitrary concept expressions.
Reference: [BHR90] <editor> K. H. Blasius, U. Hedstuck, and C.-R. Rollinger, editors. </editor> <booktitle> Sorts and Types in Artificial Intelligence. Number 418 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in <ref> [BHR90; LNS91; Bor92] </ref>, while in [BS92; PSS92; Bor95; ACS96] frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [BN94] <author> Sonia Bergamaschi and Bernhard Nebel. </author> <title> Acquisition and validation of complex object database schemata supporting multiple inheritance. </title> <journal> Applied Intelligence, </journal> <volume> 4(2) </volume> <pages> 185-203, </pages> <year> 1994. </year>
Reference-contexts: Second, one can analogously exploit the ability of expressing class definitions in addition to the inclusion statements that are typical of object-oriented modeling languages <ref> [BN94] </ref>. However, there are several additional features that can be specifically addressed in the framework of object-oriented languages, as shown below. 1.4.3.1 Cardinality Constraints. Cardinality Constraints that are typical of semantic data models become expressible in object-oriented schemata. <p> It is also the basis for a classification of all the classes that appear in a schema within a lattice. Such a classification, as in any object-oriented approach, can be exploited in several ways within the modeling process <ref> [BN94] </ref>. Example 6 Suppose we extend now the ER schema in Figure 1.1 as shown in and with role Sof to Student. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic [CFP84; LN90; DL93; HK87] and object-oriented data models <ref> [AK89; BS92; BN94] </ref>. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here. <p> Similar considerations apply with respect to the proposals to perform type consistency and inheritance reasoning on object-oriented data models. As an example, the type consistency and type subsumption algorithms in <ref> [BN94] </ref> for an expressive object-oriented formalism, which allows for the definition of classes by means of necessary and sufficient conditions, could further be extended in order to take into account also union types and inverse attributes.
Reference: [Bor92] <author> Alexander Borgida. </author> <title> From type systems to knowledge representation: Natural semantics specifications for description logics. </title> <journal> Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(1) </volume> <pages> 93-126, </pages> <year> 1992. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in <ref> [BHR90; LNS91; Bor92] </ref>, while in [BS92; PSS92; Bor95; ACS96] frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [Bor95] <author> Alexander Borgida. </author> <title> Description logics in data management. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7(5) </volume> <pages> 671-682, </pages> <year> 1995. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in [BHR90; LNS91; Bor92], while in <ref> [BS92; PSS92; Bor95; ACS96] </ref> frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [BS85] <author> Ronald J. Brachman and James G. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: The usage in object-oriented modeling languages of constructs corresponding to quantified role restrictions is limited to the translation of record and set structures. Adding general forms of quantified role restrictions amounts to admitting more flexible structures, whose closer counterpart are possibly frames in knowledge representation systems (see e.g. <ref> [BS85; CLN94] </ref>). In a frame structure one can for example specify that a slot, which is the counterpart of a record attribute, can have restrictions on the number and type of fillers.
Reference: [BS92] <author> Sonia Bergamaschi and Claudio Sartori. </author> <title> On taxonomic reasoning in conceptual design. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 385-422, </pages> <year> 1992. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in [BHR90; LNS91; Bor92], while in <ref> [BS92; PSS92; Bor95; ACS96] </ref> frame-based languages are used to enrich the deductive capabilities of data models. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic [CFP84; LN90; DL93; HK87] and object-oriented data models <ref> [AK89; BS92; BN94] </ref>. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here.
Reference: [BW97] <author> Alexander Borgida and Grant E. Weddell. </author> <title> Adding functional dependencies to description logics. </title> <booktitle> In Proc. of the 5th Int. Conf. on Deductive and Object-Oriented Databases (DOOD-97), </booktitle> <year> 1997. </year>
Reference-contexts: We do not consider keys in our formalization, which are essential for a mapping of ER schemas into relational schemas, but lose their relevance when reasoning on a conceptual specification. For a treatment of reasoning on keys in a logic based framework see <ref> [BW97; CDGL95] </ref>. We define now in a more formal way syntax and semantics of ER schemata. An ER schema S is constructed starting from pairwise disjoint sets of entity symbols, relationship symbols (each with an arity), ER-role symbols, attribute symbols, and domain symbols.
Reference: [Cal96a] <author> Diego Calvanese. </author> <title> Finite model reasoning in description logics. </title> <booktitle> In Proc. of the 5th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 292-303. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1996. </year>
Reference-contexts: The assumption of dealing with finite structures is, however, by no means common in Description Logics, and needs to be taken explicitly into account when devising reasoning procedures <ref> [CLN94; Cal96a] </ref>. In fact, the constructs present in ALCQI, and in particular functionality, inverse roles and cycles in the knowledge base may interact in such a way that a knowledge base admits no finite model, although it admits one with an infinite domain [CKV90; CLN94]. <p> an arbitrary concept expression C is satisfiable in K, if and only if a newly introduced atomic concept A is satisfiable in K [ fA : Checking the satisfiability of a single atomic concept A in an ALCQI knowledge base K can be done by exploiting the technique developed in <ref> [Cal96a] </ref>. The method extends the one developed in [CLN94] for a simpler logic, and is based on the construction of a particular system A K of linear inequations, and the search for particular (acceptable) solutions of A K (see [Cal96b] for full details).
Reference: [Cal96b] <author> Diego Calvanese. </author> <title> Unrestricted and Finite Model Reasoning in Class-Based Representation Formalisms. </title> <type> PhD thesis, </type> <institution> Dipartimento di In-formatica e Sistemistica, Universita di Roma "La Sapienza", </institution> <year> 1996. </year>
Reference-contexts: Indeed, if a concept expression C of the knowledge base (S) obtained from an ER schema S is satisfiable in (S), then there is a relation-descriptive model of (S) in which C has a nonempty extension <ref> [Cal96b] </ref>. This can be exploited since relation-descriptive models of an ALCQI knowledge base (S) can be put in correspondence with legal database states for S. <p> For each entity E, E B = ((E)) I . The existence of the mappings ff S and fi S , allows us to reduce the problem of checking properties that hold for an ER schema to the problem of reasoning on the corresponding ALCQI knowledge base <ref> [Cal96b] </ref>. Indeed, given a relation-descriptive model I of (S) in which a concept (E) corresponding to an entity E is satisfiable, fi S (I) is a legal database state in which entity E is populated. <p> The method extends the one developed in [CLN94] for a simpler logic, and is based on the construction of a particular system A K of linear inequations, and the search for particular (acceptable) solutions of A K (see <ref> [Cal96b] </ref> for full details). The size of A K is in the worst case doubly exponential in the size of K, while the search for acceptable solutions can be done in polynomial time in the size of the system.
Reference: [CB97] <author> R.G.G Cattell and Douglas K. Barry, </author> <title> editors. The Object Database Standard: ODMG 2.0. </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1997. </year>
Reference-contexts: is-a Student type-is Record degree: String End Class Course type-is Record enrolls: Set-of Student, taughtby: Teacher End to any specific formalism, our model is inspired by the one presented in [AK89], where a formal characterization is presented, but embodies the basic features of the static part of the ODMG standard <ref> [CB97] </ref>. We recall that we restrict our attention to the structural component of object-oriented models and do not consider those aspects related to the definition of methods associated to the classes. <p> However, this strongly limits the expressive power of the data model, as pointed out in recent papers (see e.g. [AGO91]). On the other hand, we recall that inverse roles have been included in the ODGM standard <ref> [CB97] </ref>. 1.5 SUPPORT FOR DATA MODELING The logical formalization of data models in terms of Description Logics is a first step towards the development of logic-based modeling tools that can support DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 25 the database designer in his activity, by taking over certain tasks that in
Reference: [CDGL95] <author> Diego Calvanese, Giuseppe De Giacomo, and Maurizio Lenzerini. </author> <title> Structured objects: Modeling and reasoning. </title> <booktitle> In Proc. of the 4th Int. Conf. on Deductive and Object-Oriented Databases (DOOD-95), number 1013 in Lecture Notes in Computer Science, </booktitle> <pages> pages 229-246. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <note> REFERENCES 33 </note>
Reference-contexts: Observe, however, that views are usually not considered to be part of the schema, but are built on top of it in order to define how the data present in the schema is used [BDNS94] (see <ref> [CDGL95] </ref> for a different "view" on this aspect). We pose no restrictions at all on the form of the assertions in a knowledge base. In particular: 1. Each atomic concept may appear more than once on the left side of an assertion. 2. <p> We do not consider keys in our formalization, which are essential for a mapping of ER schemas into relational schemas, but lose their relevance when reasoning on a conceptual specification. For a treatment of reasoning on keys in a logic based framework see <ref> [BW97; CDGL95] </ref>. We define now in a more formal way syntax and semantics of ER schemata. An ER schema S is constructed starting from pairwise disjoint sets of entity symbols, relationship symbols (each with an arity), ER-role symbols, attribute symbols, and domain symbols.
Reference: [CFP84] <author> Marco A. Casanova, Ronald Fagin, and Christos H. Papadimitriou. </author> <title> Inclusion dependencies and their interaction with functional dependencies. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28(1) </volume> <pages> 29-59, </pages> <year> 1984. </year>
Reference-contexts: Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic <ref> [CFP84; LN90; DL93; HK87] </ref> and object-oriented data models [AK89; BS92; BN94]. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here. <p> There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. <ref> [CFP84; CK86; GM85; CKV90; AHV95] </ref>), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work [CTF88; LN90] addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework.
Reference: [Che76] <author> P. P. Chen. </author> <title> The Entity-Relationship model: Toward a unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: We show that these features make ALCQI powerful enough to provide a unified framework for object-oriented languages and semantic data models. This is done by establishing a precise correspondence with the Entity Relationship model <ref> [Che76] </ref>, and with an object-oriented language in the style of [AK89]. Moreover, we demonstrate that the 4 LOGICS FOR DATABASES AND INFORMATION SYSTEMS formalism proposed in this paper provides important features that are currently missing in each family, although their relevance has often been stressed. <p> For simplicity of presentation, we concentrate our attention on one of the most widespread semantic data models, which has by now become a standard, extensively used in the design phase of commercial applications, namely the Entity-Relationship (ER) model. The ER model was introduced in <ref> [Che76] </ref>, and subsequently several variants and extensions have been proposed, which 8 LOGICS FOR DATABASES AND INFORMATION SYSTEMS differ in minor aspects in expressiveness and in notation [Teo89; BCN92; Tha92; Tha93].
Reference: [CK86] <author> S. S. Cosmadakis and P. C. Kanellakis. </author> <title> Functional and inclusion dependencies A graph theoretical approach. </title> <editor> In P. C. Kanellakis and F. P. Preparata, editors, </editor> <booktitle> Advances in Computing Research, </booktitle> <volume> Vol. 3, </volume> <pages> pages 163-184. </pages> <publisher> JAI Press, </publisher> <year> 1986. </year>
Reference-contexts: Cardinal-ity constraints can be attached to an ER-role in order to restrict the number of times each instance of an entity is allowed to participate via that ER-role in instances of the relationship. Such constraints can be used to specify both existence dependencies and functionality of relations <ref> [CK86] </ref>. They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. <p> There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. <ref> [CFP84; CK86; GM85; CKV90; AHV95] </ref>), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work [CTF88; LN90] addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework.
Reference: [CKV90] <author> S. S. Cosmadakis, P. C. Kanellakis, and M. Vardi. </author> <title> Polynomial-time implication problems for unary inclusion dependencies. </title> <journal> Journal of the ACM, </journal> <volume> 37(1) </volume> <pages> 15-46, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: In fact, the constructs present in ALCQI, and in particular functionality, inverse roles and cycles in the knowledge base may interact in such a way that a knowledge base admits no finite model, although it admits one with an infinite domain <ref> [CKV90; CLN94] </ref>. In other words, ALCQI lacks the finite model property, and reasoning in the finite and in the unrestricted case are different. 1.3 SEMANTIC DATA MODELS Semantic data models were introduced primarily as formalisms for database schema design. <p> In addition, it is worth emphasizing that DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 11 the definition of database state reflects the usual assumption that database states are finite structures (see also <ref> [CKV90] </ref>). <p> There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. <ref> [CFP84; CK86; GM85; CKV90; AHV95] </ref>), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work [CTF88; LN90] addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework.
Reference: [CL93] <author> Tiziana Catarci and Maurizio Lenzerini. </author> <title> Representing and using interschema knowledge in cooperative information systems. </title> <journal> Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(4) </volume> <pages> 375-398, </pages> <year> 1993. </year>
Reference-contexts: ALCQI may be used as a unifying formalism in which to express schemata in different data models for the purpose of integration. In this case, additional assertions may be added to those resulting from the individual schemata in order to express so called interschema constraints <ref> [CL93; Hul97] </ref>. Once a formalization of a schema in terms of ALCQI is provided, the checking of properties which ensure correctness and optimality of a design, can be turned into reasoning tasks in ALCQI.
Reference: [CL94a] <author> Diego Calvanese and Maurizio Lenzerini. </author> <title> Making object-oriented schemas more expressive. </title> <booktitle> In Proc. of the 13th ACM SIGACT SIG-MOD SIGART Sym. on Principles of Database Systems (PODS-94), </booktitle> <pages> pages 243-254. </pages> <publisher> ACM Press and Addison Wesley, </publisher> <year> 1994. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one. <p> Such a case is of particular interest, since the basic constructs of semantic and object-oriented data models can be expressed in this language. A discussion on the optimization techniques for the proposed framework is presented in <ref> [CL94a] </ref>. 1.5.2.2 Reasoning in Semantic and Object-Oriented Data Models. The decidability of reasoning in ALCQI together with the characterization of semantic and object-oriented data models developed in Sections 1.3.2 and 1.4.2 provides a method to reason in these data models.
Reference: [CL94b] <author> Diego Calvanese and Maurizio Lenzerini. </author> <title> On the interaction between ISA and cardinality constraints. </title> <booktitle> In Proc. of the 10th IEEE Int. Conf. on Data Engineering (ICDE-94), </booktitle> <pages> pages 204-213. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one.
Reference: [CLN94] <author> Diego Calvanese, Maurizio Lenzerini, and Daniele Nardi. </author> <title> A unified framework for class based representation formalisms. </title> <booktitle> In Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pages 109-120. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1994. </year>
Reference-contexts: DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 3 In this paper, we make a step towards a unified view of class-based languages by establishing a relationship between semantic and object-oriented data models, rephrasing them in terms of the knowledge representation framework of Description Logics. Specifically, building on the results of <ref> [CLN94] </ref>, we present a class-based representation formalism, of the family of Description Logics [SS91; DLNN91], and show that it is able to capture the most popular data modeling formalisms presently used in Databases and Information System Analysis, providing powerful reasoning techniques. <p> The assumption of dealing with finite structures is, however, by no means common in Description Logics, and needs to be taken explicitly into account when devising reasoning procedures <ref> [CLN94; Cal96a] </ref>. In fact, the constructs present in ALCQI, and in particular functionality, inverse roles and cycles in the knowledge base may interact in such a way that a knowledge base admits no finite model, although it admits one with an infinite domain [CKV90; CLN94]. <p> In fact, the constructs present in ALCQI, and in particular functionality, inverse roles and cycles in the knowledge base may interact in such a way that a knowledge base admits no finite model, although it admits one with an infinite domain <ref> [CKV90; CLN94] </ref>. In other words, ALCQI lacks the finite model property, and reasoning in the finite and in the unrestricted case are different. 1.3 SEMANTIC DATA MODELS Semantic data models were introduced primarily as formalisms for database schema design. <p> The usage in object-oriented modeling languages of constructs corresponding to quantified role restrictions is limited to the translation of record and set structures. Adding general forms of quantified role restrictions amounts to admitting more flexible structures, whose closer counterpart are possibly frames in knowledge representation systems (see e.g. <ref> [BS85; CLN94] </ref>). In a frame structure one can for example specify that a slot, which is the counterpart of a record attribute, can have restrictions on the number and type of fillers. <p> The method extends the one developed in <ref> [CLN94] </ref> for a simpler logic, and is based on the construction of a particular system A K of linear inequations, and the search for particular (acceptable) solutions of A K (see [Cal96b] for full details). <p> Thus we obtain a decision procedure for all reasoning tasks that works in deterministic double exponential time. We notice that in the case discussed in <ref> [CLN94] </ref>, where the schema contains no equality assertions and certain constructs are used only in a restricted way (negation is allowed only in front of atomic concepts, and all number restrictions are non-qualified, i.e. of the form 9 n R or 9 n R) the size of the system can be
Reference: [CLN97] <author> Diego Calvanese, Maurizio Lenzerini, and Daniele Nardi. </author> <title> Foundations of class-based representation formalisms. </title> <type> Technical report, </type> <institution> Dipartimento di Informatica e Sistemistica, Universita di Roma "La Sapienza", </institution> <year> 1997. </year>
Reference-contexts: First of all observe that the knowledge base (S) resulting from the translation of an object-oriented schema S may admit models that do not have a direct counterpart among legal database instances of S. More precisely, by characterizing the interpretations as directed labeled graphs <ref> [CLN97] </ref>, one finds that the concepts that translate type expressions involving record and set structures admit certain cyclic models in which values, which have a tree-like structure, have no direct counterpart.
Reference: [CTF88] <author> Marco A. Casanova, Luiz Tucherman, and Antonio L. Furtado. </author> <title> Enforcing inclusion dependencies and referencial integrity. </title> <booktitle> In Proc. of the 14th Int. Conf. on Very Large Data Bases (VLDB-88), </booktitle> <pages> pages 38-49, </pages> <year> 1988. </year> <note> 34 LOGICS FOR DATABASES AND INFORMATION SYSTEMS </note>
Reference-contexts: There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work <ref> [CTF88; LN90] </ref> addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework. Similar considerations apply with respect to the proposals to perform type consistency and inheritance reasoning on object-oriented data models.
Reference: [DGL94] <author> Giuseppe De Giacomo and Maurizio Lenzerini. </author> <title> Concept language with number restrictions and fixpoints, and its relationship with -calculus. </title> <booktitle> In Proc. of the 11th European Conf. on Artificial Intelligence (ECAI-94), </booktitle> <pages> pages 411-415, </pages> <year> 1994. </year>
Reference-contexts: Assumption (2) is seldom made in existing concept-based knowledge representation systems, since terminological cycles increase the computational complexity of reasoning [Baa96], and can be interpreted under different semantics <ref> [Neb91; Sch94; DGL94] </ref>. From a data modeling perspective it is however unrealistic to assume the absence of cycles. DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 7 The semantics of a knowledge base is specified through the notion of satisfaction of assertions.
Reference: [DL93] <author> Giuseppe Di Battista and Maurizio Lenzerini. </author> <title> Deductive entity-relationship modeling. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(3) </volume> <pages> 439-450, </pages> <year> 1993. </year>
Reference-contexts: n1 ) _ (E) u :(E n ) More generally, exploiting the possibility to construct general boolean expressions in ALCQI we can make use of arbitrary boolean combinations of entities in a schema, thus expressing in particular disjointness and disjunction of entities, which are forms of negative and incomplete knowledge <ref> [DL93] </ref>. 1.3.3.2 Refinement of Properties along an ISA Hierarchy. Another important extension that should be considered is the possibility to specify more complex forms of refinement of properties of entities along ISA hierarchies, than the mere addition of attributes. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic <ref> [CFP84; LN90; DL93; HK87] </ref> and object-oriented data models [AK89; BS92; BN94]. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here.
Reference: [DLNN91] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Werner Nutt. </author> <title> The complexity of concept languages. </title> <booktitle> In Proc. of the 2nd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-91), </booktitle> <pages> pages 151-162. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference-contexts: Specifically, building on the results of [CLN94], we present a class-based representation formalism, of the family of Description Logics <ref> [SS91; DLNN91] </ref>, and show that it is able to capture the most popular data modeling formalisms presently used in Databases and Information System Analysis, providing powerful reasoning techniques. In Description Logics, structured knowledge is described by means of so called concepts and roles, which denote unary and binary predicates, respectively.
Reference: [Fer91] <author> S. Ferg. </author> <title> Cardinality concepts in entity-relationship modeling. </title> <booktitle> In Proc. of the 10th Int. Conf. on the Entity-Relationship Approach (ER-91), </booktitle> <pages> pages 1-30, </pages> <year> 1991. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one.
Reference: [GM84] <author> John Grant and Jack Minker. </author> <title> Numerical dependencies. </title> <editor> In H. Gal-laire, J. Minker, and J.-M. Nicolas, editors, </editor> <booktitle> Advances in Database Theory II. </booktitle> <publisher> Plenum Publ. Co., </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one.
Reference: [GM85] <author> John Grant and Jack Minker. </author> <title> Inferences for numerical dependencies. </title> <journal> Theoretical Computer Science, </journal> <volume> 41 </volume> <pages> 271-287, </pages> <year> 1985. </year>
Reference-contexts: There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. <ref> [CFP84; CK86; GM85; CKV90; AHV95] </ref>), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work [CTF88; LN90] addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework.
Reference: [HB91] <author> Bernhard Hollunder and Franz Baader. </author> <title> Qualifying number restrictions in concept languages. </title> <type> Technical Report RR-91-03, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz (DFKI), Kaiserslautern, Germany, </institution> <year> 1991. </year> <title> An abridged version appeared in Proc. </title> <booktitle> of the 2nd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-91). </booktitle>
Reference-contexts: Number restrictions are used to constrain the number of instances that are in a certain relationship. For example, 9 =2 child.Male characterizes the set of parents with exactly two male children. The form used here (called qualified number restrictions <ref> [HB91] </ref>) is a very general one, allowing one to pose restrictions on the number of instances connected through a certain role, counting only those objects that satisfy a certain condition.
Reference: [HK87] <author> R. B. Hull and R. King. </author> <title> Semantic database modelling: Survey, applications and research issues. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(3) </volume> <pages> 201-260, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: of a large body of work in several areas, including Databases, Information Systems, Software Engineering, and Knowledge Representation. 1 2 LOGICS FOR DATABASES AND INFORMATION SYSTEMS In particular, recent approaches to conceptual data modeling advocate the use of abstract formalisms for describing data, mostly based on the notion of class <ref> [HK87] </ref>. In this paper, we concentrate on such class-based formalisms for data modeling, with the aim of demonstrating that they can be profitably reconstructed within a logical framework. We argue that the reasoning techniques available in the logical framework provide valuable support for the data modeling activity. <p> Two main families of class-based formalisms for data modeling are addressed in this paper. The first one originates in the field of databases and in particular from the work on semantic data models (see e.g. <ref> [HK87] </ref>). The second one arises from the work on types in programming languages and object-oriented systems (see e.g. [KL89]). <p> A rich variety of semantic data models have been introduced with various degrees of expressiveness (see <ref> [HK87] </ref> for an extensive survey). They provide by means of classes an explicit representation of objects with their attributes and the relationships to other objects. An important feature of semantic data models is the possibility to specify subtype/supertype relationships (also called is-a) which provide for the inheritance of properties. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic <ref> [CFP84; LN90; DL93; HK87] </ref> and object-oriented data models [AK89; BS92; BN94]. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here.
Reference: [Hul97] <author> Richard Hull. </author> <title> Managing semantic heterogeneity in databases: A theoretical perspective. </title> <booktitle> In Proc. of the 16th ACM SIGACT SIGMOD SIGART Sym. on Principles of Database Systems (PODS-97), </booktitle> <year> 1997. </year>
Reference-contexts: ALCQI may be used as a unifying formalism in which to express schemata in different data models for the purpose of integration. In this case, additional assertions may be added to those resulting from the individual schemata in order to express so called interschema constraints <ref> [CL93; Hul97] </ref>. Once a formalization of a schema in terms of ALCQI is provided, the checking of properties which ensure correctness and optimality of a design, can be turned into reasoning tasks in ALCQI.
Reference: [Kim90] <author> Won Kim. </author> <title> Introduction to Object-Oriented Databases. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Student u 9degree _ GradStudent 1.4 OBJECT-ORIENTED DATA MODELS Object-oriented data models have been proposed with the goal of devising database formalisms that could be integrated with object-oriented programming systems <ref> [Kim90] </ref>.
Reference: [KL89] <author> Won Kim and Frederick H. </author> <title> Lochovsky, editors. Object-Oriented Concepts, Databases, and Applications. </title> <publisher> ACM Press and Addison Wesley, </publisher> <address> New York, </address> <year> 1989. </year> <note> REFERENCES 35 </note>
Reference-contexts: The first one originates in the field of databases and in particular from the work on semantic data models (see e.g. [HK87]). The second one arises from the work on types in programming languages and object-oriented systems (see e.g. <ref> [KL89] </ref>). In the past, there have been several attempts to establish relationships among class-based formalisms used in knowledge representation (e.g. semantic networks and frames [Leh92; Sow91]) and the above two families of class-based formalisms.
Reference: [KLW95] <author> Michael Kifer, Georg Lausen, and James Wu. </author> <title> Logical foundations of Object-Oriented and frame-based languages. </title> <journal> Journal of the ACM, </journal> <volume> 42(3), </volume> <year> 1995. </year>
Reference-contexts: Other formalisms have been recently proposed with the aim of integrating the object-oriented and the logic programming paradigms. A notable example of this effort is F-Logic <ref> [KLW95] </ref>, which provides an elegant framework equipped with a sound and complete resolution based proof procedure. However, the goal of these proposals is to provide a sophisticated environment for computing with objects, rather than a system supporting reasoning over a conceptual specification.
Reference: [Leh92] <author> Fritz Lehmann, </author> <title> editor. </title> <booktitle> Semantic Networks in Artificial Intelligence. </booktitle> <publisher> Pergamon Press, Oxford, </publisher> <year> 1992. </year>
Reference-contexts: The second one arises from the work on types in programming languages and object-oriented systems (see e.g. [KL89]). In the past, there have been several attempts to establish relationships among class-based formalisms used in knowledge representation (e.g. semantic networks and frames <ref> [Leh92; Sow91] </ref>) and the above two families of class-based formalisms. One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas.
Reference: [LN90] <author> Maurizio Lenzerini and Paolo Nobili. </author> <title> On the satisfiability of dependency constraints in entity-relationship schemata. </title> <journal> Information Systems, </journal> <volume> 15(4) </volume> <pages> 453-461, </pages> <year> 1990. </year>
Reference-contexts: They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one. <p> A schema is consistent, if there is a (nonempty) database that satisfies (all constraints specified in) the schema. Although the problem of checking schema consistency arises already in relatively simple data models (e.g. the ER model without is-a relations <ref> [LN90] </ref>), it becomes much more difficult to solve if the expressiveness of the formalism is increased. Example 5 Consider augmenting the ER schema in Figure 1.1 with a new relationship SUPERVISING, which is linked with role Sby to Professor and with role Sof to GradStudent, each with suitable cardinality constraints. <p> Moreover, type consistency, i.e. checking whether a type is consistent in a legal instance of the schema, can be reduced to concept consistency. A number of attempts have been previously made to characterize reasoning problems and devise reasoning techniques for semantic <ref> [CFP84; LN90; DL93; HK87] </ref> and object-oriented data models [AK89; BS92; BN94]. There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here. <p> There is also significant work on reasoning about dependencies in the relational model (see 30 LOGICS FOR DATABASES AND INFORMATION SYSTEMS e.g. [CFP84; CK86; GM85; CKV90; AHV95]), although it has no tight relationship to the framework addressed here. With respect to reasoning on Entity-Relationship schemata, previous work <ref> [CTF88; LN90] </ref> addressed less expressive formalisms, and therefore the reasoning techniques for Description Logics can provide extensions towards a a significantly more expressive framework. Similar considerations apply with respect to the proposals to perform type consistency and inheritance reasoning on object-oriented data models.
Reference: [LNS91] <editor> Maurizio Lenzerini, Daniele Nardi, and Maria Simi, editors. </editor> <title> Inheritance Hierarchies in Knowledge Representation and Programming Languages. </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in <ref> [BHR90; LNS91; Bor92] </ref>, while in [BS92; PSS92; Bor95; ACS96] frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [MM92] <author> R. Motschnig-Pitrik and J. Mylopoulous. </author> <title> Classes and instances. </title> <journal> Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(1), </volume> <year> 1992. </year>
Reference-contexts: Generally speaking, a class denotes a subset of the domain of discourse, and a class-based representation formalism allows one to express several kinds of relationships and constraints (e.g. subclass constraints) holding among classes <ref> [MM92] </ref>. Moreover, class-based formalisms aim at taking advantage of the class structure in order to provide various information, such as whether an element belongs to a class, whether a class is a subclass of another class, and more generally, whether a given constraint holds among a given set of classes.
Reference: [Neb91] <author> Bernhard Nebel. </author> <title> Terminological cycles: Semantics and computational properties. </title> <editor> In John F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 331-361. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference-contexts: Assumption (2) is seldom made in existing concept-based knowledge representation systems, since terminological cycles increase the computational complexity of reasoning [Baa96], and can be interpreted under different semantics <ref> [Neb91; Sch94; DGL94] </ref>. From a data modeling perspective it is however unrealistic to assume the absence of cycles. DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 7 The semantics of a knowledge base is specified through the notion of satisfaction of assertions.
Reference: [PSS92] <author> Barbara Piza, Klaus-Dieter Schewe, and Joachim W. Schmidt. </author> <title> Term subsumption with type constructors. </title> <editor> In Y. Yesha, editor, </editor> <booktitle> Proc. of the Int. Conf. on Information and Knowledge Management (CIKM-92), </booktitle> <pages> pages 449-456, </pages> <year> 1992. </year>
Reference-contexts: One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas. The relationship between frame-based languages and types has been addressed in [BHR90; LNS91; Bor92], while in <ref> [BS92; PSS92; Bor95; ACS96] </ref> frame-based languages are used to enrich the deductive capabilities of data models.
Reference: [Sch94] <author> Klaus Schild. </author> <title> Terminological cycles and the propositional - calculus. </title> <booktitle> In Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pages 509-520. </pages> <publisher> Mor-gan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1994. </year>
Reference-contexts: Assumption (2) is seldom made in existing concept-based knowledge representation systems, since terminological cycles increase the computational complexity of reasoning [Baa96], and can be interpreted under different semantics <ref> [Neb91; Sch94; DGL94] </ref>. From a data modeling perspective it is however unrealistic to assume the absence of cycles. DESCRIPTION LOGICS FOR CONCEPTUAL DATA MODELING 7 The semantics of a knowledge base is specified through the notion of satisfaction of assertions.
Reference: [Sow91] <editor> John F. Sowa, editor. </editor> <booktitle> Principles of Semantic Networks. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference-contexts: The second one arises from the work on types in programming languages and object-oriented systems (see e.g. [KL89]). In the past, there have been several attempts to establish relationships among class-based formalisms used in knowledge representation (e.g. semantic networks and frames <ref> [Leh92; Sow91] </ref>) and the above two families of class-based formalisms. One significant aspect of this work is the identification of reasoning problems, where one can take advantage of techniques for reasoning on hierarchical structures that have been developed in different areas.
Reference: [SS91] <author> Manfred Schmidt-Schau and Gert Smolka. </author> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48(1) </volume> <pages> 1-26, </pages> <year> 1991. </year>
Reference-contexts: Specifically, building on the results of [CLN94], we present a class-based representation formalism, of the family of Description Logics <ref> [SS91; DLNN91] </ref>, and show that it is able to capture the most popular data modeling formalisms presently used in Databases and Information System Analysis, providing powerful reasoning techniques. In Description Logics, structured knowledge is described by means of so called concepts and roles, which denote unary and binary predicates, respectively.
Reference: [Teo89] <author> J. T. Teorey. </author> <title> Database Modeling and Design: The Entity-Relationship Approach. </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1989. </year>
Reference-contexts: The ER model was introduced in [Che76], and subsequently several variants and extensions have been proposed, which 8 LOGICS FOR DATABASES AND INFORMATION SYSTEMS differ in minor aspects in expressiveness and in notation <ref> [Teo89; BCN92; Tha92; Tha93] </ref>. In the ER model the domain of interest is modeled by means of an ER schema, usually represented in a graphical notation which is particularly useful for an easy visualization of the data dependencies.
Reference: [Tha92] <author> Bernhard Thalheim. </author> <title> Fundamentals of cardinality constraints. </title> <editor> In G. Pernoul and A. M. Tjoa, editors, </editor> <booktitle> Proc. of the 11th Int. Conf. on the Entity-Relationship Approach (ER-92), </booktitle> <pages> pages 7-23. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The ER model was introduced in [Che76], and subsequently several variants and extensions have been proposed, which 8 LOGICS FOR DATABASES AND INFORMATION SYSTEMS differ in minor aspects in expressiveness and in notation <ref> [Teo89; BCN92; Tha92; Tha93] </ref>. In the ER model the domain of interest is modeled by means of an ER schema, usually represented in a graphical notation which is particularly useful for an easy visualization of the data dependencies. <p> They are often used only in a restricted form, where the minimum cardinality is either 0 or 1 and the maximum cardinality is either 1 or 1. Cardinality constraints in the form considered here have been introduced already in [Abr74] and subsequently studied in <ref> [GM84; LN90; Fer91; YPS94; Tha92; CL94b; CL94a] </ref>. Additionally, so called is-a relations are used to represent inclusion assertions between entities, and therefore the inheritance of properties from a more general entity to a more specific one.
Reference: [Tha93] <author> Bernhard Thalheim. </author> <title> Fundamentals of the Entity Relationship Model. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <note> 36 LOGICS FOR DATABASES AND INFORMATION SYSTEMS </note>
Reference-contexts: The ER model was introduced in [Che76], and subsequently several variants and extensions have been proposed, which 8 LOGICS FOR DATABASES AND INFORMATION SYSTEMS differ in minor aspects in expressiveness and in notation <ref> [Teo89; BCN92; Tha92; Tha93] </ref>. In the ER model the domain of interest is modeled by means of an ER schema, usually represented in a graphical notation which is particularly useful for an easy visualization of the data dependencies.

References-found: 54

