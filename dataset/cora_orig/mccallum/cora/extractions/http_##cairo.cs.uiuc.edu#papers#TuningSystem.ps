URL: http://cairo.cs.uiuc.edu/papers/TuningSystem.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: e-mail: klara,l-qiao@cs.uiuc.edu  
Title: A Tuning System for Distributed Multimedia Applications  
Author: Klara Nahrstedt and Lintian Qiao 
Affiliation: University of Illinois  
Abstract: Distributed multimedia applications such as Video-On-Demand (VOD) will need user-friendly graphical interfaces to specify and control compressed continuous media and their service behavior according to the quality perceived by the human user. This requires a new extension of the Quality of Service (QoS) concept to incorporate the perceptual quality. In this paper, we investigate services for supporting perceptual quality and propose a user-friendly and robust tuning system. Our tuning system extends adaptive and tuning services currently used at the application subsystem level and it enables the specification, monitoring and user-controlled adaptation of perceptual QoS. Furthermore, all services in the tuning system have the goal of (1) modularity so that they can be plugged and played in a distributed multimedia application, and (2) graceful degradation of perceptual QoS. The paper discusses in detail the QoS concepts, services and protocols, which are the basis of our tuning system design and implementation, and architectural issues. Two algorithms are presented: the Probe-based Algorithm used at the beginning of the call set up phase for QoS specification, and the Adaptation Algorithm used to adjust to user-specified parameter changes while taking into account dynamics and non-determinism caused by the OS and underlying network protocols. Our experimental results show the effectiveness of the probe and adaptation mechanisms, good results for perceptual QoS provision, fast response to user requests, and the feasibility of our services to accommodate user specified changes with respect to non-deterministic behavior of underlying system.
Abstract-found: 1
Intro-found: 1
Reference: [ACH96] <author> C. Aurrecoechea, A. Campbell, and L. Hauw. </author> <title> A review of quality of service architectures. </title> <note> Multimedia Systems Journal,to appear, </note> <year> 1996. </year>
Reference: [BFM + 96] <author> A. Banerjea, D. Ferrari, B.A. Mah, M. Moran, D.C. Verma, and H. Zhang. </author> <title> The Tenet Real-Time Protocol Suite: Design, Implementation and Experiences. </title> <journal> ACM Transaction on Networking, </journal> <volume> 4(1) </volume> <pages> 1-10, </pages> <month> February </month> <year> 1996. </year>
Reference: [CCH93] <author> A. Campbell, G. Coulson, and D. Hutchison. </author> <title> A Multimedia Enhanced Transport Service in a Quality of Service Architecture. In Workshop on Network and Operating System Support for Digital Audio and Video '93, </title> <address> Lancaster, England, </address> <month> November </month> <year> 1993. </year> <month> 24 </month>
Reference: [CCR + 95] <author> G. Coulson, A. Campbell, P. Robin, G. Blair, M. Papathomas, and D. </author> <title> Shepherd. </title> <journal> The De--sign of a QoS-Controlled ATM-Based Communications Sytem in Chorus. IEEE JSAC, </journal> <volume> 13(4) </volume> <pages> 686-699, </pages> <month> May </month> <year> 1995. </year>
Reference: [Cha89] <author> C. Chatfield. </author> <title> The Analysis of Time Series An Introduction. </title> <publisher> Chapman and Hall, </publisher> <address> fourth edition, </address> <year> 1989. </year>
Reference-contexts: In the algorithms described below we show only the storage of measured values which contribute to finding the degradation point. Note that our algorithm aims to bound the difference between measured values, which is applicable to time series <ref> [Cha89] </ref>. For example, when a video stream shows a frame rate of 10-12 9 frames/second, we want to bound the frame rate difference (degradation) to 5 frames/second be-cause degradation between 12 frames and 6 frames/second is noticeable and may disturb the viewer (Figure 5).
Reference: [CSZ92] <author> D.D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism. </title> <booktitle> In SIGCOMM'92, </booktitle> <pages> pages 14-22, </pages> <address> Baltimore, MD, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: In our tuning system we aim towards guaranteed services working with first order moments (average values) of frame services times. A predictive service (historical service) is based on past network behavior; hence, the QoS parameters are estimates of past behavior which the service tries to match <ref> [CSZ92] </ref>. Best-effort services are services based on either no guarantees or on partial guarantees. There is either no specification of QoS parameters required, or some bounds in deterministic or statistical forms are given.
Reference: [CTCL95] <author> Z. Chen, S-M. Tan, R.H. Campbell, and Y. Li. </author> <title> Real Time Video and Audio in the World Wide Web. </title> <note> In WWW 95, </note> <year> 1995. </year>
Reference: [Fer90] <author> D. Ferrari. </author> <title> Client Requirements for Real-Time Communication Servoces. </title> <type> Technical Report 90-007, </type> <institution> International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> March </month> <year> 1990. </year>
Reference: [FV90] <author> D. Ferrari and D. C. Verma. </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Networks. </title> <journal> IEEE JSAC, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Thus, the task processing time will be accepted if it is in the interval bounded by the pair of values &lt; best value; worst value &gt;. Guaranteed services may also deal with statistical bounds of QoS parameters <ref> [FV90] </ref>, such as statistical bound on error rate, etc. In our tuning system we aim towards guaranteed services working with first order moments (average values) of frame services times.
Reference: [JM92] <author> V. Jacobson and S. McCanne. vat, </author> <title> Video Audio Tool. UNIX manual page, </title> <year> 1992. </year>
Reference: [KBC95] <author> H.T. Kung, T. Blackwell, and A. Chapman. </author> <title> Credit Update Protocol for Flow-Controlled ATM Networks: Statistical Multiplexing and Adaptive Credit Allocation. </title> <booktitle> In ACM SIGCOMM, </booktitle> <pages> pages 101-115, </pages> <address> London, UK, </address> <year> 1995. </year>
Reference: [KMR93] <author> H. Kanakia, P. P. Mishra, and A. Reibman. </author> <title> An Adaptive Congestion Control Scheme for Real-Time Packet Video Transport. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <address> Baltimore, MD, </address> <month> August </month> <year> 1993. </year>
Reference: [KS95] <author> S. Keshav and H. Saran. </author> <title> Semantics and Implementation of a Native-Mode ATM Protocol Stack. </title> <type> Internal technical memo, </type> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, NJ, </address> <month> January </month> <year> 1995. </year>
Reference: [LLSY91] <author> J. W. S. Liu, K.-J. Lin, W.-K. Shin, and A. C. Yu. </author> <title> Algorithms for Scheduling Imprecise Computations. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 58-68, </pages> <month> May </month> <year> 1991. </year>
Reference: [Nah95] <author> K. Nahrstedt. </author> <title> An Architecture for End-to-End Quality of Service Provision and its Experimental Validation. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: on the client/server sides, (2) the transport protocol stack used by the VOD service, (3) CPU utilization by other applications during runtime of the actual application, and (4) the underlying network. 2.3.2 Off-line Testing Another approach to QoS specification is to run extensive off-line tests to pre-determine the QoS parameters <ref> [Nah95] </ref>. The QoS parameters are then stored in configuration files and retrieved when the negotiation phase begins. The problem with this approach is that it does not take into account the actual load when a VOD service runs.
Reference: [NHK96] <author> K. Nahrstedt, A. Hossain, and S. Kang. </author> <title> A probe-based algorithm for qos specification and adaptation. </title> <booktitle> In Proceedings of 4th IFIP Workshop on Quality of Service, </booktitle> <pages> pages 89-100, </pages> <address> Paris, France, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: This means that the client side adapts to the system load caused by the uncontrolled server. Sending adaptive feedback from the client to the server at different time intervals around the degradation point is discussed in <ref> [NHK96] </ref>. The results show that the server load heavily fluctuates under adaptation and the adaptation overhead is high. Hence, this is not a good scheme to incorporate into a tuning system when the tuning system should accommodate user-initiated adaptation changes of QoS. Under this situation, a second approach is utilized.
Reference: [NS95] <author> K. Nahrstedt and R. Steinmetz. </author> <title> Resource management in networked multimedia systems. </title> <booktitle> IEEE COMPUTER, </booktitle> <pages> pages 52-63, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: The parameterization also includes an application-oriented specification of the required transmission characteristics for end-to-end delivery (e.g., end-to-end delay bounds). Table 1 shows examples of possible QoS parameters common for MPEG compressed video characteristics <ref> [NS95] </ref>. The media relations specify relations among the media streams. Synchronization skew represents an upper bound on time offset between two streams in a single direction. This information can be used for a finer granularity scheduling decision of multimedia streams than a sample rate information of periodic streams provides. <p> Communication relation defines the communication topology, such as unicast (peer-to-peer), multi-cast (peer-to-group), or broadcast (peer-to-all). Conversion relation specifies transformations of a medium (e.g., conversion from audio to text in a speech recognition application). Table 2 shows examples of media relations <ref> [NS95] </ref>.
Reference: [NS96] <author> K. Nahrstedt and J. M. Smith. </author> <title> Design, Implementation and Experiences of the OMEGA End-Point Architecture. </title> <journal> Journal on Selected Areas in Communication, Special Issue on Distributed Multimedia Systems and Technology, </journal> <note> (to appear), 1996. 25 </note>
Reference-contexts: They are not controlled and manipulated in the underlying system hence they are not explicitly part of our algorithms. However, implicitly they influence the performance and decisions within our specification, monitoring and adaptation services in major way. A more detailed description can be found in <ref> [NS96] </ref>. System QoS parameters describe requirements on the communication services and OS services resulting from the application QoS. They may be specified in terms of both quantitative (e.g., number of errors) and qualitative criteria (e.g., inter-stream synchronization). Network QoS parameters describe requirements on network services.
Reference: [OT93] <author> S. Oikawa and H. Tokuda. </author> <title> User-Level Real-Time Threads: An Approach towards High Performance Multimedia Threads. </title> <booktitle> In Proceedings of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 61 -71, </pages> <month> November </month> <year> 1993. </year>
Reference: [SK94] <author> R. Sharma and S. Keshav. </author> <title> Signalling and Operating System Support for Native-Mode ATM Applications. </title> <booktitle> In ACM SIGCOMM, </booktitle> <pages> pages 149-157, </pages> <address> London, UK, </address> <month> September </month> <year> 1994. </year>
Reference: [SN95] <author> R. Steinmetz and K. Nahrstedt. Multimedia:Computing, </author> <title> Communications, and Applications. </title> <publisher> Prentice Hall, Inc., </publisher> <year> 1995. </year>
Reference-contexts: monitor the processing times of these tasks for each frame (t j j recv ). r s is the rate which the OS (at the client and server side) and network can support under the current 4 A more detailed description of MPEG compression can be found, for example, in <ref> [SN95] </ref>. 5 For example, UDP queue buffer size on client host is an important factor in determination of the number of frames in one group 12 Notation Meaning r s system rate r u user rate t w waiting time t dis display time of frame j (processing time of Display
Reference: [TM89] <author> H. Tokuda and C. W. Mercer. </author> <title> ARTS: A Distributed Real-Time Kernel. </title> <journal> ACM Press, Operating Systems Review, </journal> <volume> 23(3) </volume> <pages> 29-53, </pages> <month> July </month> <year> 1989. </year>
Reference: [TNR90] <author> H. Tokuda, T. Nakajima, and P. Rao. </author> <title> Real-Time Mach: Towards a Predictable Real-Time System. </title> <booktitle> In Proceedings of the USENIX Mach Workshop, </booktitle> <month> October </month> <year> 1990. </year>
Reference: [WH94] <author> L. Wolf and R. G. Herrtwich. </author> <title> The System Architecture of the Heidelberg Transport System. </title> <journal> ACM Operating Systems Review, </journal> <volume> 28(2), </volume> <month> April </month> <year> 1994. </year> <month> 26 </month>
Reference-contexts: Since monitoring can add overhead during multimedia transmission, it is preferable that it is flexible. This flexibility means that most of the monitoring variables should be optional and monitoring should be able to turn on and off <ref> [WH94] </ref>. In general, QoS monitoring consists of two modes: an query mode and a report mode. The former requests a status report about resource utilization and QoS guarantees; the latter regularly reports the QoS and resource status. In our tuning system, we use the report mode .
References-found: 24

