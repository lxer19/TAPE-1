URL: http://www.cs.columbia.edu/~hgs/papers/Schu9406_Evaluation.ps.Z
Refering-URL: http://www.cs.columbia.edu/~hgs/resume/resume.html
Root-URL: http://www.cs.columbia.edu
Email: hgs@fokus.gmd.de fkurose,towsleyg@cs.umass.edu  
Title: An Evaluation of Scheduling Mechanisms for Providing Best-Effort, Real-Time Communication in Wide-Area Networks  
Author: Henning Schulzrinne Jim Kurose and Don Towsley 
Address: Amherst  
Affiliation: GMD-Fokus Department of Computer Science Berlin, Germany University of Massachusetts at  
Date: June 12-16, 1994  
Note: Infocom 1994: Toronto, Canada;  
Abstract: We distinguish between four types of service that may be provided to real-time traffic by packet-switched networks, ranging from "need-blind" and "need-based best-effort" to "guaranteed throughput" and "bounded delay jitter" services. We evaluate a number of scheduling policies that offer need-based, best-effort service. We introduce hop-laxity (HL) scheduling which is based on the time remaining until the packet must reach its destination as well as the number of hops separating it from the destination. HL scheduling is evaluated through simulation and has been implemented within a BSD-based kernel and tested on the DARTnet network. The results indicate that HL scheduling tends to equalize delays between calls with large and small number of hops as compared to a FIFO discipline, reducing the 99.9% percentile of delay and the fraction of late packets. We compare HL scheduling to the FIFO+ discipline suggested by Clark et al.., and find that their delay properties are similar. Other disciplines, such as minimum laxity or transit priority, may actually do more harm than good. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Casner and S. Deering, </author> <title> "First IETF Internet au-diocast," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 92-97, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: significant increase in interest in the use of packetized audio and video over wide-area, packet-switched networks, as exemplified by the live audio- and (slow scan) video-cast of the Internet Engineering Task Force (IETF) meetings since early 1992 over the Internet to participants at several hundred sites in a dozen countries <ref> [1] </ref>. Traditional communication applications such as file transfers and electronic mail are examples of "non-real-time" traffic. The performance metric for such applications is typically average delay and throughput. The characteristics of real-time communication applications differ significantly.
Reference: [2] <author> DARPA/ISI, </author> <title> DARTnet planning and review workshop, (Marina del Ray, </title> <address> California), </address> <month> Dec. </month> <year> 1991. </year> <booktitle> Infocom 1994: </booktitle> <address> Toronto, Canada; June 12-16, </address> <year> 1994 </year>
Reference-contexts: The role of a scheduling policy is to choose a packet to send from among those queued for transmission on an outgoing link at a network routing/multiplexing point. We evaluate several scheduling algorithms through implementation and experimentation in a cross-country T1-rate network (known as DARTnet <ref> [2] </ref>), and through simulation. Our results show that in some circumstances, policies that schedule packets on the basis of deadline information can provide better performance than a simple FIFO discipline. <p> Section 3.3 then describes the audio traffic sources used in the experiments. The experimental results are summarized and discussed in Section 3.4. 3.1 The Experimental Network All network experiments were performed within DARTnet, the ARPA-sponsored research IP network <ref> [2] </ref> spanning the continental United States. This network does not carry regular Internet traffic and can be reserved for the exclusive use of individual research groups.
Reference: [3] <author> D. D. Clark, S. Shenker, and L. Zhang, </author> <title> "Supporting real-time applications in an integrated services packet network: architecture and mechanism," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Baltimore, Maryland), </address> <pages> pp. 14-26, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1992. </year> <journal> Computer Communication Review, </journal> <volume> Volume 22, Number 4. </volume>
Reference-contexts: In Section 4 we use simulation to compare the performance of HL and several other policies, including the recently-proposed FIFO+ algorithm <ref> [3] </ref>, and in Section 5 we examine the effect of an increasing number of hops on the performance of the real-time scheduling algorithms, in a symmetrically loaded net work. <p> Implemented as two queues, the complexity for enqueueing and de queuing is independent of the queue length [14]. FIFO+: This policy is proposed by Clark, Shenker, and Zhang <ref> [3] </ref>. Each node estimates the average delay for all packets of a given class passing through it, for example, by using a first-order estimator. Each packet carries a priority field that is initialized to zero as the packet enters the network. <p> Of course, the shorter delays received by the five-hop traffic is "balanced" by an increase in delay in the few-hop traffic flows, as illustrated in the second experiment. In a second experiment, DARTnet was used to provide the topology described in <ref> [3] </ref>. The network configuration is shown in Fig. 4. Twenty-two statistically identical flows (the same flows described above) traverse the network, all flowing in the same direction. <p> In this section we compare the performance of HL, FIFO+, FIFO, ML and TP scheduling using simulation. We again consider the networks and associated flows shown in Figure 4 (see also Figure 1 in <ref> [3] </ref>). The two-state Markov source, described in [3], is used to generate the audio traffic for each connection. We use this model order to directly compare our results, with the FIFO+ results in [3] 2 . In this source model, a source alternates between idle and active periods. <p> In this section we compare the performance of HL, FIFO+, FIFO, ML and TP scheduling using simulation. We again consider the networks and associated flows shown in Figure 4 (see also Figure 1 in <ref> [3] </ref>). The two-state Markov source, described in [3], is used to generate the audio traffic for each connection. We use this model order to directly compare our results, with the FIFO+ results in [3] 2 . In this source model, a source alternates between idle and active periods. <p> We again consider the networks and associated flows shown in Figure 4 (see also Figure 1 in <ref> [3] </ref>). The two-state Markov source, described in [3], is used to generate the audio traffic for each connection. We use this model order to directly compare our results, with the FIFO+ results in [3] 2 . In this source model, a source alternates between idle and active periods. The idle period is exponentially distributed with a mean of 29.4 ms, while packets arrive deterministically at the end of 5.88 ms time slots. <p> For the FIFO+ policy, a first-order recursive filter with a weighting constant of 0:001 estimated the mean queueing delay. (The value was chosen to coincide with that used by Clark et al..) We could only achieve results close to those published in <ref> [3] </ref> by combining FIFO+ with transit priority. The queueing delays, i.e., not including transmission times or propagation delays, determined by our simulations are displayed in Table 4. The number after HL indicates the laxity parameter chosen, in milliseconds. <p> The queueing delays, i.e., not including transmission times or propagation delays, determined by our simulations are displayed in Table 4. The number after HL indicates the laxity parameter chosen, in milliseconds. For easier comparison, the 99.9 percentiles for the 2 Note, however, that the delays reported in <ref> [3] </ref> differ somewhat, apparently due to a problem with the random number generator used (L. Zhang, private communication). delay from Table 4 are also shown in Fig. 5. <p> 36.05 7.76 35.65 HL 30 4.87 30.85 4.94 32.75 4.99 35.25 4.03 39.35 HL 100 5.50 59.25 4.92 56.06 4.82 53.15 3.10 27.25 ML 4.14 58.45 4.88 101.8 5.43 119.4 5.21 128.0 Table 3: Delays (in ms) for tandem network of Fig. 4 with two-state Markov source (M); results from <ref> [3] </ref> marked with "M (CSZ)" vide different classes of service to different real-time streams according to their urgency; FIFO+ can only achieve this indirectly through a strict scheduling priority mechanism.
Reference: [4] <author> C. R. Kalmanek, H. Kanakia, and S. Keshav, </author> <title> "Rate controlled servers for very high-speed networks," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, California), </address> <pages> pp. </pages> <note> 12-20 (paper 300.3), IEEE, </note> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-work-conserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin <ref> [4] </ref>, jitter-earliest-due-date [5] and Stop-and-go [6] are examples of jitter-bounding policies. 2. Guaranteed throughput: In this case, the network assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [5] <author> D. Ferrari and D. C. Verma, </author> <title> "Scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 8, </volume> <pages> pp. 368-379, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-work-conserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin [4], jitter-earliest-due-date <ref> [5] </ref> and Stop-and-go [6] are examples of jitter-bounding policies. 2. Guaranteed throughput: In this case, the network assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [6] <author> S. J. Golestani, </author> <title> "Congestion-free communication in high-speed packet networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1802-1812, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Barring the degenerate case of all lower bounds being zero, the node has to implement a non-work-conserving queueing discipline, where packets are delayed even if the channel is idle. Hierarchical round-robin [4], jitter-earliest-due-date [5] and Stop-and-go <ref> [6] </ref> are examples of jitter-bounding policies. 2. Guaranteed throughput: In this case, the network assures that each flow can obtain its guaranteed throughput regardless of the behavior of other flows.
Reference: [7] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorithm," </title> <booktitle> in Proceedings of Sigcomm'89: Communication Architectures and Protocols, </booktitle> <address> (Austin, Texas), </address> <pages> pp. 1-12, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: In addition, such policies have to limit the time period over which a flow can claim accumulated bandwidth credit, so as to avoid unduly delaying other streams. Weighted fair queueing (WFQ) <ref> [7] </ref>, Virtual Clock [8] and similar algorithms fall into this category. These scheduling policies are generally work-conserving. For traffic that is shaped by a leaky bucket at the edge of the network, the per-flow delay can be upper-bounded.
Reference: [8] <author> L. Zhang, "VirtualClock: </author> <title> A new traffic control algorithm for packet switching networks," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Philadelphia, Pennsylvania), </address> <pages> pp. 19-29, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: In addition, such policies have to limit the time period over which a flow can claim accumulated bandwidth credit, so as to avoid unduly delaying other streams. Weighted fair queueing (WFQ) [7], Virtual Clock <ref> [8] </ref> and similar algorithms fall into this category. These scheduling policies are generally work-conserving. For traffic that is shaped by a leaky bucket at the edge of the network, the per-flow delay can be upper-bounded. <p> If all deadlines are the same, the policy of selecting the packet Infocom 1994: Toronto, Canada; June 12-16, 1994 with the largest accumulated queueing delay is equivalent to ML. Variations on local earliest-deadline-first or minimum-laxity (ML) scheduling are quite common <ref> [8, 17-20] </ref>, as ML is known to be an optimal policy in many single-queue circumstances. Note, however, that the ML policy we consider here is meant to be end-to-end, rather than hop-by-hop.
Reference: [9] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks | the single node case," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> (Florence, Italy), </address> <pages> pp. </pages> <address> 915-924 (7A.3), </address> <publisher> IEEE, </publisher> <month> May </month> <year> 1992. </year>
Reference-contexts: These scheduling policies are generally work-conserving. For traffic that is shaped by a leaky bucket at the edge of the network, the per-flow delay can be upper-bounded. The bound is tight in the sense that some packets may actually experience the delay bound for certain traffic patterns <ref> [9] </ref>. 3. Best-effort, "need-based": While making no guarantees about its performance, the network tries to provide the performance best suited for the particular type of carried traffic. No upper bounds have been put forward for policies implementing this class. Subsequently, we will only consider this class. 4.
Reference: [10] <author> R. L. Cruz, </author> <title> "A calculus for network delay, part I: Network elements in isolation," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 37, </volume> <pages> pp. 114-131, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: Under certain restrictions on the source traffic and its peak rates, even for FIFO scheduling, deterministic and probabilistic delay bounds can be computed <ref> [10, 11] </ref>. Why would a real-time application request anything but the first class of service, i.e., guaranteed jitter? The first reason is that a network guaranteeing jitter bounds has to set aside bandwidth based on the application's peak needs.
Reference: [11] <author> J. F. Kurose, </author> <title> "On computing per-session performance bounds in high-speed multi-hop computer networks," </title> <booktitle> in Sigmetrics 1992, </booktitle> <address> (New Port, Rhode Island), </address> <pages> pp. 128-139, </pages> <publisher> ACM, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: Under certain restrictions on the source traffic and its peak rates, even for FIFO scheduling, deterministic and probabilistic delay bounds can be computed <ref> [10, 11] </ref>. Why would a real-time application request anything but the first class of service, i.e., guaranteed jitter? The first reason is that a network guaranteeing jitter bounds has to set aside bandwidth based on the application's peak needs.
Reference: [12] <author> D. Yates, J. Kurose, D. Towsley, and M. G. Hluchyj, </author> <title> "On per-session end-to-end delay distributions and the call admission problem for real-time applications with QOS requirements," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols (D. </booktitle> <editor> P. Sidhu, ed.), </editor> <address> (San Francisco, California), </address> <pages> pp. 2-12, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1993. </year> <note> also in Computer Communication Review 23 (4), </note> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Also, the guaranteed QOS provided by the first class service may actually be worse than the QOS provided by second or third class service, since for first class service, the channel may be idle even though a packet is ready to be transmitted. For example, in <ref> [12] </ref> all non-zero values of the delay distribution under Stop-and-go queueing were found to lie far beyond the end of the delay distribution under FIFO scheduling. Clearly, all four classes of service will have their place in an integrated-services network, with decreasing cost from jitter-controlled to need-blind, best-effort service.
Reference: [13] <author> C. Partridge, </author> <title> "Isochronous applications do not require jitter-controlled networks," Network Working Group Request for Comment RFC 1257, </title> <institution> Swedish Institute of Computer Science (SICS), Kista, Sweden, </institution> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: However, it should be emphasized that better service, higher network utilization, and higher call acceptance rates may result by not automatically assigning real-time services to the jitter-controlled class. (See also <ref> [13] </ref> for a more elaborate argument why isochronous services do not require an isochronous, that is, jitter-free network.) 2.2 Objectives for Scheduling Policies As indicated above, the primary performance metric for evaluating packet scheduling disciplines for real-time traffic is the fraction of packets arriving at their destination after their deadline has
Reference: [14] <author> F. Kamoun, </author> <title> "A drop and throttle control policy for computer networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. </volume> <pages> COM-29, pp. 444-452, </pages> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Transit priority (TP): Packets that enter the network at a given multiplexing point defer to those passing through that multiplexing point (so-called transit traffic). Implemented as two queues, the complexity for enqueueing and de queuing is independent of the queue length <ref> [14] </ref>. FIFO+: This policy is proposed by Clark, Shenker, and Zhang [3]. Each node estimates the average delay for all packets of a given class passing through it, for example, by using a first-order estimator.
Reference: [15] <author> J. Kobza and S. Liu, </author> <title> "A head-of-line approximation to delay-dependent scheduling in integrated packet-switched networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), (Ot-tawa, Canada), </booktitle> <pages> pp. 1106-1113, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: Thus, packets tend to be "compensated" by a higher priority for above-average delays suffered at earlier nodes. This policy is identical to the "Budgeted Residual-Life Dependent Discipline" (BURD) in <ref> [15] </ref>, developed independently of our HL policy [16]. Minimum laxity (ML): The earliest-extinction-first "seniority" discipline is similar to HL, but based solely on laxity, without regard to the number of hops left to travel, i.e., d i = d + M a.
Reference: [16] <author> H. Schulzrinne, J. F. Kurose, and D. Towsley, </author> <title> "Congestion control for real-time traffic in high-speed networks," </title> <type> Technical Report TR 89-92, </type> <institution> Department of Computer and Information Science, University of Massachusetts, Amherst, Massachusetts, </institution> <year> 1989. </year>
Reference-contexts: Thus, packets tend to be "compensated" by a higher priority for above-average delays suffered at earlier nodes. This policy is identical to the "Budgeted Residual-Life Dependent Discipline" (BURD) in [15], developed independently of our HL policy <ref> [16] </ref>. Minimum laxity (ML): The earliest-extinction-first "seniority" discipline is similar to HL, but based solely on laxity, without regard to the number of hops left to travel, i.e., d i = d + M a. Again, the packet with the lowest value of d i is transmitted.
Reference: [17] <author> T. M. Chen, J. Walrand, and D. G. Messer-schmitt, </author> <title> "Dynamic priority protocols for packet voice," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-7, </volume> <pages> pp. 632-643, </pages> <month> June </month> <year> 1989. </year>
Reference: [18] <author> Y. Lim and J. Kobza, </author> <title> "Analysis of a delay-dependent priority discipline in a multi-class traffic switching node," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Or-leans, </address> <publisher> Louisiana), </publisher> <pages> pp. 889-898, </pages> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference: [19] <author> J. M. Peha and F. A. Tobagi, </author> <title> "Evaluating scheduling algorithms for traffic with heterogeneous performance objectives," </title> <booktitle> in Proceedings of the Conference on Global Communications (GLOBECOM), </booktitle> <address> (San Diego, California), </address> <pages> pp. 21-27, </pages> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference: [20] <author> H. Zhang and S. Keshav, </author> <title> "Comparison of rate-based service disciplines," </title> <booktitle> in Sigcomm '91 Symposium Communications Architectures and Protocols, </booktitle> <address> (Zurich, Switzerland), </address> <pages> pp. 113-121, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1991. </year>
Reference: [21] <author> J. Postel, </author> <title> "Internet protocol," Network Working Group Request for Comments RFC 791, </title> <journal> Information Sciences Institute, </journal> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: Nodes within DARTnet are connected by T1-lines running at 1.344 Mb/s. 3.2 Protocol and Operating System Sup port for Laxity-Based Scheduling 3.2.1 Extensions to the Internet Protocol The HL scheduling mechanism was implemented under the Internet Protocol (IP) <ref> [21] </ref>. The standard IP protocol does not support time stamp or hop count information, but is extensible through options. Since none of the standard options convey the needed information, we define a new experimental IP option.
Reference: [22] <author> D. L. Mills, </author> <title> "Network time protocol (version 3) - specification, implementation and analysis," Network Working Group Request for Comments RFC 1305, </title> <institution> University of Delaware, </institution> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: Note that carrying an absolute deadline value requires clocks to be synchronized to within a few milliseconds. This is well within the current state-of-the Infocom 1994: Toronto, Canada; June 12-16, 1994 art, as evidenced by the sub-millisecond synchronization found within DARTnet <ref> [22] </ref>. The deadline value uses the middle 32 bits of the 64-bit timestamps of the network time protocol (NTP) [22], with a resolution of about 15 s. 3.2.2 Kernel Modifications Before describing the actual kernel implementation, we briefly outline the procedures a data packet traverses before leaving the network interface. <p> This is well within the current state-of-the Infocom 1994: Toronto, Canada; June 12-16, 1994 art, as evidenced by the sub-millisecond synchronization found within DARTnet <ref> [22] </ref>. The deadline value uses the middle 32 bits of the 64-bit timestamps of the network time protocol (NTP) [22], with a resolution of about 15 s. 3.2.2 Kernel Modifications Before describing the actual kernel implementation, we briefly outline the procedures a data packet traverses before leaving the network interface. A general description of the BSD networking code can be found in [23].
Reference: [23] <author> S. J. Le*er, M. K. McKusick, M. J. Karels, and J. S. Quarterman, </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System. </title> <address> Reading, Mas-sachusetts: </address> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: A general description of the BSD networking code can be found in <ref> [23] </ref>. The data flow is also depicted in Fig. 2. For our purposes, we are only concerned with transmitting an IP packet. The actual implementation of the scheduling algorithm consists of two functions.
Reference: [24] <author> H. Schulzrinne, </author> <title> "Voice communication across the Internet: A network voice terminal," </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: The audio traffic was derived from a packet trace recorded during a 52 minute packet voice conversation across the Internet. The conversation was recorded Infocom 1994: Toronto, Canada; June 12-16, 1994 using the NeVoT network voice terminal <ref> [24] </ref>. Each packet of length 180 bytes (plus headers) represented 22.5 ms of 8-bit -law audio sampled at 8,000 Hz. For experimental reasons, the packet length was increased to 300 and 600 bytes (to increase link utilization), including headers.
References-found: 24

