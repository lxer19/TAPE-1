URL: http://www.cse.psu.edu/~furer/Papers/cfi.ps
Refering-URL: http://www.cse.psu.edu/~furer/Papers/bib.html
Root-URL: http://www.cse.psu.edu
Email: jyc@princeton.edu  furer@cs.psu.edu  immerman@cs.umass.edu  
Title: An Optimal Lower Bound on the Number of Variables for Graph Identification  
Author: Jin-yi Cai Martin Furer Neil Immerman 
Note: AMS subject classification code (1991): 03B10 05C60 05C85 Research supported by NSF grant CCR-8709818. Research supported by NSF grant CCR-8805978 and Pennsylvania State University Research Initiation grant 428-45. Research supported by NSF grants DCR-8603346 and CCR-8806308.  
Address: Princeton, NJ 08540  Park, PA 16802  Amherst, MA 01003  
Affiliation: Computer Science Dept. Princeton University  Computer Science Dept. Pennsylvania State University University  Computer Science Dept. University. of Massachusetts  
Abstract: In this paper we show that (n) variables are needed for first-order logic with counting to identify graphs on n vertices. The k-variable language with counting is equivalent to the (k1)-dimensional 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V. Aho, J.E. Hopcroft and J.D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley (1974). </publisher>
Reference-contexts: If Player II does not have the right number of elements in one of these classes then she will lose, and Player I need only have selected his elements from that class. Each of these classes is monochromatic. It is not hard to see using standard coloring algorithms, cf. <ref> [1, x4.13] </ref>, that Fact 5.4 ([27]) The stable colorings of k-tuples may be computed in O (k 2 n k+1 log n) steps on a RAM.
Reference: [2] <author> M. Ajtai, </author> <title> "Recursive Construction for 3-Regular Expanders," </title> <booktitle> 28th IEEE Symp. on Foundations of Computer Science (1987), </booktitle> <pages> 295-304. </pages>
Reference-contexts: Such graphs are well known to exist, see for example <ref> [2] </ref>. 25 7 Corollaries A long time ago, one of us showed that there is a polynomial-time property of graphs that requires (2 p log n ) quantifiers to be expressed in first-order logic without ordering.
Reference: [3] <author> Laszlo Babai, </author> <title> "Monte Carlo Algorithms in Graph Isomorphism Testing," </title> <type> Tech. Rep. </type> <institution> DMS 79-10, Universite de Montreal, </institution> <year> 1979. </year> <month> 28 </month>
Reference-contexts: Individualization followed by a low (1 or 2) dimensional refinement (i.e., the special W-L method) has produced pioneer results in the areas of bounded valence as well as general graph isomorphism and canonical labeling. Babai's technical report <ref> [3] </ref> started to use group theoretical algorithms to obtain provable upper bounds for isomorphism problems. Not only did he get his well known probabilistic polynomial time isomorphism test for graphs of bounded color class size, he also started the work on bounded valence graphs.
Reference: [4] <author> Laszlo Babai, </author> <title> "On the Complexity of Canonical Labeling of Strongly Regular Graphs," </title> <journal> SIAM J. Computing 9 (1980), </journal> <pages> 212-216. </pages>
Reference-contexts: Finally the canonical labeling problem for graphs of bounded valence has been solved in polynomial time by [11] and [18] independently. Individualization followed by naive refinement has also been the tool used by Babai to handle strongly regular graphs <ref> [4] </ref> and primitive coherent configurations [6]. He used individualization of k = 2 p n log n vertices. Strongly regular graphs and more generally, coherent configurations are stable under 2-dim W-L. While strongly regular graphs are just undirected graphs, coherent configurations are edge-colored complete directed graphs.
Reference: [5] <author> Laszlo Babai, </author> <title> "Moderately Exponential Bound for Graph Isomorphism," </title> <booktitle> Proc. Conf. on Fundamentals of Computation Theory, Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <year> 1981, </year> <pages> 34-50. </pages>
Reference-contexts: If a transitive automorphism group is primitive, then 2-dim W-L produces necessarily a primitive coherent configuration. For tournaments, the isomorphism problems of primitive and arbitrary coherent configurations are polynomial time equivalent [11]. The general graph isomorphism problem has been attacked by Zemly-achenko. The method is described in <ref> [5] </ref> and [41]. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). Combining this with the method of Luks [33], Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). <p> is described in <ref> [5] </ref> and [41]. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). Combining this with the method of Luks [33], Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). His bound is exp (n 1c ) for some positive constant c. This has subsequently been improved by Babai and Luks [11] to exp (n 1=2+o (1) ).
Reference: [6] <author> Laszlo Babai, </author> <title> "On the Order of Uniprimitive Permutation Groups," </title> <journal> Annals of Math. </journal> <volume> 113 (1981), </volume> <pages> 553-568. </pages>
Reference-contexts: Finally the canonical labeling problem for graphs of bounded valence has been solved in polynomial time by [11] and [18] independently. Individualization followed by naive refinement has also been the tool used by Babai to handle strongly regular graphs [4] and primitive coherent configurations <ref> [6] </ref>. He used individualization of k = 2 p n log n vertices. Strongly regular graphs and more generally, coherent configurations are stable under 2-dim W-L. While strongly regular graphs are just undirected graphs, coherent configurations are edge-colored complete directed graphs.
Reference: [7] <author> Laszlo Babai, </author> <title> "Permutation Groups, Coherent Configurations, and Graph Isomorphism," D.Sc. </title> <type> Thesis, </type> <institution> Hungarian Acad. Sci., </institution> <note> 1984 (in Hun-garian). </note>
Reference-contexts: This has subsequently been improved by Babai and Luks [11] to exp (n 1=2+o (1) ). Instead of measuring the reduction in the valence, one could ask about the effect of these methods on the color class size. Babai <ref> [7] </ref> has investigated this splitting power of Zemlyachenko's method combined with 2-dim W-L.
Reference: [8] <author> Laszlo Babai, Paul Erd-os, and Stanley M. Selkow, </author> <title> "Random Graph Isomorphism," </title> <journal> SIAM J. on Comput. </journal> <volume> 9 (1980), </volume> <pages> 628-635. </pages>
Reference-contexts: The naive vertex classification algorithm, which we want to call the one dimensional Weisfeiler-Lehman method (1-dim W-L), does not solve the worst cases of the graph isomorphism problem. Nevertheless, it is usually a good start, and in fact it succeeds most of the time. Babai, Erd-os and Selkow <ref> [8] </ref> have shown that the 1-dim W-L algorithm already produces normal forms 3 for all but an n 1=7 fraction of the n-vertex graphs.
Reference: [9] <author> L. Babai, W.M. Kantor, </author> <title> and E.M. Luks, "Computational Complexity and the Classification of Finite Simple Groups," </title> <booktitle> 24th IEEE Symp. on Foundations of Computer Science (1983), </booktitle> <pages> 162-171. </pages>
Reference: [10] <author> Laszlo Babai and Ludek Kucera, </author> <title> "Canonical Labelling of Graphs in Linear Average Time," </title> <booktitle> 20th IEEE Symp. on Foundations of Computer Science (1979), </booktitle> <pages> 39-46. </pages>
Reference-contexts: These graphs have O (n) vertices each, have color class size 4, and admit a linear time canonical labeling algorithm. This contrasts sharply with results in <ref> [10, 27] </ref> where it is shown that two variables suffice to identify all trees and almost all graphs, and that three variables suffice to identify all graphs of color class size 3. Another way to interpret our results is with stable colorings of k-tuples of vertices. <p> Sometimes, this approach is called, the k-dimensional Weisfeiler-Lehman method (k-dim W-L). In the late seventies and early eighties, this method was developed by many researchers, including Farad^zev, Zemlyachenko, Babai, and Mathon. With k = 1, this method gives a linear-time graph isomorphism algorithm that works for almost all graphs <ref> [10] </ref>. Furthermore, the fastest known general graph isomorphism algorithms make use of this method with k = O ( p n) [11]. <p> Babai, Erd-os and Selkow [8] have shown that the 1-dim W-L algorithm already produces normal forms 3 for all but an n 1=7 fraction of the n-vertex graphs. This has been improved to a c n log n= log log n fraction <ref> [10] </ref> producing an average linear time canonical labeling algorithm by handling the few exceptions with a slow algorithm. Vertex classification is probably the basis of every practical implementation of a graph isomorphism test.
Reference: [11] <author> Laszlo Babai and Eugene M. Luks, </author> <title> "Canonical Labeling of Graphs," </title> <booktitle> 15th ACM Symposium on Theory of Computing (1983), </booktitle> <pages> 171-183. </pages>
Reference-contexts: With k = 1, this method gives a linear-time graph isomorphism algorithm that works for almost all graphs [10]. Furthermore, the fastest known general graph isomorphism algorithms make use of this method with k = O ( p n) <ref> [11] </ref>. It had been conjectured that this method would provide a polynomial time graph isomorphism test at least for graphs of bounded valence. (Valence is a synonym for degree.) Our result disposes of such conjectures. Up until now, most lower bounds in this area were proved using random graphs. <p> Subsequently Luks [33] proved, using group theory to greater depth, that isomorphism for graphs of bounded valence is in polynomial time. Finally the canonical labeling problem for graphs of bounded valence has been solved in polynomial time by <ref> [11] </ref> and [18] independently. Individualization followed by naive refinement has also been the tool used by Babai to handle strongly regular graphs [4] and primitive coherent configurations [6]. He used individualization of k = 2 p n log n vertices. <p> If a transitive automorphism group is primitive, then 2-dim W-L produces necessarily a primitive coherent configuration. For tournaments, the isomorphism problems of primitive and arbitrary coherent configurations are polynomial time equivalent <ref> [11] </ref>. The general graph isomorphism problem has been attacked by Zemly-achenko. The method is described in [5] and [41]. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). <p> Combining this with the method of Luks [33], Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). His bound is exp (n 1c ) for some positive constant c. This has subsequently been improved by Babai and Luks <ref> [11] </ref> to exp (n 1=2+o (1) ). Instead of measuring the reduction in the valence, one could ask about the effect of these methods on the color class size. Babai [7] has investigated this splitting power of Zemlyachenko's method combined with 2-dim W-L.
Reference: [12] <author> David Mix Barrington, Neil Immerman, and Howard Straubing, </author> <title> "On Uniformity Within NC 1 ," J. </title> <journal> Comput. System Sci. </journal> <volume> 41, No. 3 (1990), </volume> <pages> 274-306. </pages>
Reference-contexts: Remark 7.2 In particular, inductive logic with counting, but without ordering does not contain all the polynomial-time computable graph properties. In fact, it does not even contain all such properties computable by a uniform sequence of bounded-depth, polynomial-size Boolean circuits that include parity gates, cf. <ref> [12] </ref>. Proof We have seen in Corollary 6.5 that the graphs X (T n ) and ~ X (T n ) are indistinguishable in C *n for some constant * &gt; 0.
Reference: [13] <author> Laszlo Babai and Rudi Mathon, </author> <booktitle> Talk at the South-East Conference on Combinatorics and Graph Theory, </booktitle> <year> 1980. </year>
Reference-contexts: The algorithm stops when no color class is split any more. A modification of this algorithm has been shown to produce normal forms for all regular graphs in linear average time [29]. The k-tuple coloring algorithm (named k-dim W-L by Babai <ref> [13] </ref>) classifies k-tuples of vertices. It might color vertices and edges implicitly by using k-tuples with repetition of components. It could start with some encoding of the graph into the labels assigned to the k-tuples.
Reference: [14] <author> P.J. Cameron, </author> <title> "6-Transitive Graphs," </title> <journal> J. Combinat. Theory B 28, </journal> <year> (1980), </year> <pages> 168-179. </pages>
Reference-contexts: There was actually good reason to conjecture k = O (log n) or even O (1) to be sufficient. The second hope was partly based on the following result of Cameron <ref> [14] </ref>, obtained independently by Gol'fand (cf. [19, 31]).
Reference: [15] <author> Ashok Chandra and David Harel, </author> <title> "Structure and Complexity of Relational Queries," </title> <journal> J. Comput. System Sci. </journal> <volume> 25 (1982), </volume> <pages> 99-128. </pages>
Reference-contexts: Since the notion of "natural" is not well defined, some readers may prefer the more precise question: Question 3.3 Is there a recursively enumerable listing of a set of Turing machines that accept exactly all the polynomial-time graph properties? These questions were first asked with respect to database query languages <ref> [15] </ref>. See [28] for a discussion of the role of ordering in the database context.
Reference: [16] <author> A. Ehrenfeucht, </author> <title> "An Application of Games to the Completeness Problem for Formalized Theories," </title> <journal> Fund. Math. </journal> <volume> 49 (1961), </volume> <pages> 129-141. 29 </pages>
Reference-contexts: These games are variants of the games of Ehren 11 feucht and Fraisse, <ref> [16, 17] </ref>. The results in this section concerning the L k game and the C k game originally appeared in [23] and [27], respectively. Let G and H be two graphs, and let m and k be natural numbers.
Reference: [17] <author> R. Fraisse, </author> <title> "Sur quelques classifications des systems de relations," </title> <type> Publ. </type> <institution> Sci. Univ. </institution> <month> Alger 1 </month> <year> (1954), </year> <pages> 35-182. </pages>
Reference-contexts: These games are variants of the games of Ehren 11 feucht and Fraisse, <ref> [16, 17] </ref>. The results in this section concerning the L k game and the C k game originally appeared in [23] and [27], respectively. Let G and H be two graphs, and let m and k be natural numbers.
Reference: [18] <author> Martin Furer, Walter Schnyder, and Ernst Specker, </author> <title> "Normal Forms for Trivalent Graphs and Graphs of Bounded Valence," </title> <booktitle> 15th ACM Symposium on Theory of Computing (1983), </booktitle> <pages> 161-170. </pages>
Reference-contexts: Subsequently Luks [33] proved, using group theory to greater depth, that isomorphism for graphs of bounded valence is in polynomial time. Finally the canonical labeling problem for graphs of bounded valence has been solved in polynomial time by [11] and <ref> [18] </ref> independently. Individualization followed by naive refinement has also been the tool used by Babai to handle strongly regular graphs [4] and primitive coherent configurations [6]. He used individualization of k = 2 p n log n vertices.
Reference: [19] <author> Ya. Yu. Gol'fand and M.H. Klin, </author> <title> "On k-Regular Graphs," </title> <booktitle> in Algorithmic Research in Combinatorics, </booktitle> <publisher> Nauka Publ., </publisher> <address> Moscow, </address> <year> 1978, </year> <pages> 76-85. </pages>
Reference-contexts: There was actually good reason to conjecture k = O (log n) or even O (1) to be sufficient. The second hope was partly based on the following result of Cameron [14], obtained independently by Gol'fand (cf. <ref> [19, 31] </ref>).
Reference: [20] <author> Yuri Gurevich, </author> <booktitle> "Logic and the Challenge of Computer Science," in Current Trends in Theoretical Computer Science, </booktitle> <editor> ed. Egon Borger, </editor> <publisher> Computer Science Press, </publisher> <year> 1988, </year> <pages> 1-57. </pages>
Reference-contexts: We have shown in Corollary 6.5 that first-order logic plus counting and least fixed point, but without ordering, fails badly. The question,"What besides counting must be added to FO + LFP to get all polynomial time graph problems?" is worthy of much study, cf. <ref> [27, 20] </ref>. 2. Planar graphs have separators of size O ( p n), and thus by Proposition 7.3 they can be identified in C p n . However, Theorem 6.4 does not give a matching lower bound because even if G is planar, the graph X (G) need not be.
Reference: [21] <author> D.G. Higman, </author> <title> "Coherent Configurations I.: Ordinary Representation Theory," </title> <booktitle> Geometriae Dedicata 4 (1975), </booktitle> <pages> 1-32. </pages>
Reference-contexts: The Russians have built a huge algebraic theory with extensive applications around the notion of stable colorings of pairs. The key notion is that of a cellular algebra (see [39, 30]), which has been discovered in another context and called coherent configuration by Higman <ref> [21] </ref>. Weisfeiler and Lehman have asked whether the special k-dim W-L method with a slowly growing value of k would be sufficient to solve the graph isomor-phism problem. There was actually good reason to conjecture k = O (log n) or even O (1) to be sufficient.
Reference: [22] <author> Neil Immerman, </author> <title> "Number of Quantifiers is Better than Number of Tape Cells," </title> <journal> J. Comput. System Sci. </journal> <volume> 22, No. 3 (1981), </volume> <pages> 384-406. </pages>
Reference-contexts: That proof also used the graphs X (D n ) and ~ X (D n ), for a certain sequence of degree three graphs fD n g <ref> [22, Theorem 7] </ref>. Now, Corollary 6.5 improves that lower bound to (n) variables. 10 It also shows graphically that if we exclude the ordering relation from inductive first-order logic, then the addition of counting does not suffice to express all polynomial-time graph properties.
Reference: [23] <author> Neil Immerman, </author> <title> "Upper and Lower Bounds for First Order Expressibil-ity," </title> <journal> J. Comput. System Sci. </journal> <volume> 25, No. 1 (1982), </volume> <pages> 76-98. </pages>
Reference-contexts: The result is that individualizing k = O (n 2=3 log n) vertices, and applying Zemlyachenko's method and the 2-dim W-L method, he obtains color classes which have k vertices in each connected component of the resulting graph. 3 Logical Background In <ref> [23, 24, 25] </ref> one of us has pursued an alternate view of complexity theory in which the complexity of a problem is characterized in terms of the complexity of the simplest first-order sentences expressing the problem. <p> For example, it is shown in <ref> [23] </ref> that the polynomial-time properties are exactly the properties expressible by first-order sentences iterated 1 polynomially many times: Fact 3.1 ([23]) P = k=1 The notation FO ()[n k ] denotes the set of properties describable by a very uniform sequence of sentences f' n g such that each sentence ' <p> has length O (n k ) and has a bounded number of variables independent of n. 2 The 1 More precisely, the sentence expressing the property for structures of size n consists of a fixed block of restricted quantifiers written p (n) times, followed by a fixed formula. 2 In <ref> [23] </ref> the notation Var&Sz [O (1); n k ] instead of FO [n k ] was used. 7 symbol is included to emphasize the presence of a total ordering on the universe of the input structures. <p> These games are variants of the games of Ehren 11 feucht and Fraisse, [16, 17]. The results in this section concerning the L k game and the C k game originally appeared in <ref> [23] </ref> and [27], respectively. Let G and H be two graphs, and let m and k be natural numbers. Define the m-move L k game on G and H as follows.
Reference: [24] <author> Neil Immerman, </author> <title> "Relational Queries Computable in Polynomial Time," </title> <booktitle> Information and Control 68 (1986), </booktitle> <pages> 86-104. </pages>
Reference-contexts: The result is that individualizing k = O (n 2=3 log n) vertices, and applying Zemlyachenko's method and the 2-dim W-L method, he obtains color classes which have k vertices in each connected component of the resulting graph. 3 Logical Background In <ref> [23, 24, 25] </ref> one of us has pursued an alternate view of complexity theory in which the complexity of a problem is characterized in terms of the complexity of the simplest first-order sentences expressing the problem. <p> In <ref> [24] </ref> and in [38] it is also shown that this uniform sequence of formulas can be represented by a least fixed point operator (LFP) applied to a single formula. <p> Previous to this paper, the only polynomial-time graph properties known not to be expressible in FO + LFP (without ordering) were "counting problems". For example, that a graph has an even number of edges is not expressible in FO+LFP. In <ref> [24] </ref> a language which we now call "FO+LFP+COUNT" was proposed as an answer to Question 3.2. This language describes two-sorted structures consisting of an unordered domain of vertices together with an edge predicate, plus an ordered domain of numbers. The domains are joined via counting quantifiers as in Section 3.2.
Reference: [25] <author> Neil Immerman, </author> <title> "Languages That Capture Complexity Classes," </title> <journal> SIAM J. Computing 16, </journal> <volume> No. 4 (1987), </volume> <pages> 760-778. </pages>
Reference-contexts: The result is that individualizing k = O (n 2=3 log n) vertices, and applying Zemlyachenko's method and the 2-dim W-L method, he obtains color classes which have k vertices in each connected component of the resulting graph. 3 Logical Background In <ref> [23, 24, 25] </ref> one of us has pursued an alternate view of complexity theory in which the complexity of a problem is characterized in terms of the complexity of the simplest first-order sentences expressing the problem.
Reference: [26] <author> Neil Immerman and Dexter Kozen, </author> <title> "Definability with Bounded Number of Bound Variables," </title> <booktitle> Information and Computation 83 (1989), </booktitle> <pages> 121-139. </pages>
Reference-contexts: The domains are joined via counting quantifiers as in Section 3.2. We show in Corollary 7.1 that this language fails badly on certain linear time properties of graphs. In [27] and <ref> [26] </ref> the exact number of variables needed to identify various classes of trees with and without counting, respectively, is determined. 8 @ @ @ * 1 3 2 * (Without counting this number increases linearly with the arity of the trees; with counting two variables suffice.) The question of how many <p> @ * 1 3 2 * (Without counting this number increases linearly with the arity of the trees; with counting two variables suffice.) The question of how many variables are needed to identify various classes of graphs is interesting in its own right, and also has applications to temporal logic <ref> [26] </ref>. In the remainder of this section we explain the logical background we need. Some of this material is described in more detail in [27]. 3.1 First-Order Logic For our purposes, a graph will be defined as a finite first-order structure, G = hV G ; E G i. <p> By 7 We are presenting the proof here for the language with no constant or function symbols. The proof goes through when function symbols are present, under the additional assumption that the cardinality of any finitely generated set is finite <ref> [26] </ref>. 15 the definition of oe it follows that G; u 1 j L k;m H; v 1 Thus it follows by induction that Player II has a winning strategy for the remaining m-move game and thus also for the original m + 1-move game. 4.1 The C k Game A
Reference: [27] <author> Neil Immerman and Eric S. Lander, </author> <title> "Describing Graphs: A First-Order Approach to Graph Canonization," in Complexity Theory Retrospective, </title> <editor> Alan Selman, ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> 59-81. </pages>
Reference-contexts: These graphs have O (n) vertices each, have color class size 4, and admit a linear time canonical labeling algorithm. This contrasts sharply with results in <ref> [10, 27] </ref> where it is shown that two variables suffice to identify all trees and almost all graphs, and that three variables suffice to identify all graphs of color class size 3. Another way to interpret our results is with stable colorings of k-tuples of vertices. <p> The domains are joined via counting quantifiers as in Section 3.2. We show in Corollary 7.1 that this language fails badly on certain linear time properties of graphs. In <ref> [27] </ref> and [26] the exact number of variables needed to identify various classes of trees with and without counting, respectively, is determined. 8 @ @ @ * 1 3 2 * (Without counting this number increases linearly with the arity of the trees; with counting two variables suffice.) The question of <p> In the remainder of this section we explain the logical background we need. Some of this material is described in more detail in <ref> [27] </ref>. 3.1 First-Order Logic For our purposes, a graph will be defined as a finite first-order structure, G = hV G ; E G i. V G is the universe, (the vertices). E G is a binary relation on V G , (the edges). <p> Note: For the languages L k ; C k which we consider in this paper, and any graph G, the set of sentences in the language that are true about G has a polynomial size description which may be computed in polynomial-time <ref> [27] </ref>. Thus any set of graphs identified by L k or C k has a polynomial-time canonization algorithm. Of course the First-Order Language of Colored Graphs identifies all colored graphs. <p> Define a color class to be the set of vertices which satisfy a particular set of color relations. The color class size of a graph is the cardinality of its largest color class. In <ref> [27] </ref> it is shown that L 3 identifies the set of graphs of color class size 3. As noted above, the languages L k are too weak to count, or even to express the parity of the number of edges. <p> In Section 5 it is shown that testing C k equivalence corresponds to the (k 1)-dimensional Weisfeiler-Lehman Method. It thus follows that the language C 2 identifies all trees and almost all graphs. In <ref> [27] </ref>, TIME (n k log n) algorithms for testing L k or C k equivalence of graphs on n vertices are presented. 4 Pebbling Games We next describe two pebbling games that are equivalent to testing L k and C k equivalence, respectively. <p> These games are variants of the games of Ehren 11 feucht and Fraisse, [16, 17]. The results in this section concerning the L k game and the C k game originally appeared in [23] and <ref> [27] </ref>, respectively. Let G and H be two graphs, and let m and k be natural numbers. Define the m-move L k game on G and H as follows. <p> We have shown in Corollary 6.5 that first-order logic plus counting and least fixed point, but without ordering, fails badly. The question,"What besides counting must be added to FO + LFP to get all polynomial time graph problems?" is worthy of much study, cf. <ref> [27, 20] </ref>. 2. Planar graphs have separators of size O ( p n), and thus by Proposition 7.3 they can be identified in C p n . However, Theorem 6.4 does not give a matching lower bound because even if G is planar, the graph X (G) need not be.
Reference: [28] <author> N. Immerman, S. Patnaik, and D. Stemple, </author> <title> "The Expressiveness of a Family of Finite Set Languages," </title> <booktitle> Tenth ACM Symposium on Principles of Database Systems (1991), </booktitle> <pages> 37-52. </pages>
Reference-contexts: See <ref> [28] </ref> for a discussion of the role of ordering in the database context.
Reference: [29] <author> Ludek Kucera, </author> <title> "Canonical Labeling of Regular Graphs in Linear Average Time," </title> <booktitle> 28th IEEE Symp. on Foundations of Computer Science (1987), </booktitle> <pages> 271-279. </pages>
Reference-contexts: The algorithm stops when no color class is split any more. A modification of this algorithm has been shown to produce normal forms for all regular graphs in linear average time <ref> [29] </ref>. The k-tuple coloring algorithm (named k-dim W-L by Babai [13]) classifies k-tuples of vertices. It might color vertices and edges implicitly by using k-tuples with repetition of components. It could start with some encoding of the graph into the labels assigned to the k-tuples.
Reference: [30] <author> M.H. Klin, </author> <title> M.E. Muzichuk, and I.A. Farad^zev, "Cellular Rings and Groups of Automorphisms of Graphs," Introductory Article to a Book to be Published by D. </title> <publisher> Reidel Publ. Co. </publisher>
Reference-contexts: Significant results have been obtained by Farad^zev's group, which contributed many papers to Weisfeiler's book [39]. The Russians have built a huge algebraic theory with extensive applications around the notion of stable colorings of pairs. The key notion is that of a cellular algebra (see <ref> [39, 30] </ref>), which has been discovered in another context and called coherent configuration by Higman [21]. Weisfeiler and Lehman have asked whether the special k-dim W-L method with a slowly growing value of k would be sufficient to solve the graph isomor-phism problem.
Reference: [31] <author> M.Ch. Klin, R. Poschel, and K. Rosenbaum, </author> <title> "Angewandte Algebra," </title> <publisher> Vieweg & Sohn Publ., </publisher> <address> Braunschweig 1988. </address>
Reference-contexts: There was actually good reason to conjecture k = O (log n) or even O (1) to be sufficient. The second hope was partly based on the following result of Cameron [14], obtained independently by Gol'fand (cf. <ref> [19, 31] </ref>).
Reference: [32] <author> R. Lipton, </author> <title> "The Beacon Set Approach to Graph Isomorphism," </title> <institution> Yale Dept. Comp. Sci. </institution> <type> preprint No. 135, </type> <year> 1978. </year>
Reference-contexts: Therefore, they are immune to k-dim W-L refinements for 5 any k: No refinement beyond the isomorphism type of k-tuples will follow. However, for any other graph, the Cameron-Gol'fand result assures us that the 5-dim W-L method will give at least some nontrivial partitioning of the 5-tuples. Lipton <ref> [32] </ref> has proved that a special k-dim W-L method with a fixed k is sufficient for canonical labeling of trivalent (degree 3) graphs with arc-transitive automorphism groups. (An arc is an ordered pair of adjacent vertices.) Support for the k = O (log n) conjecture has been provided by Gary Miller
Reference: [33] <author> Eugene M. Luks, </author> <title> "Isomorphism of Graphs of Bounded Valence Can be Tested in Polynomial Time," </title> <journal> J. Comput. System Sci. </journal> <volume> 25 (1982), </volume> <pages> 42-65. </pages>
Reference-contexts: Individualization of k = p n (log n) c vertices splits a bounded valence graph into color classes of size at most p n resulting in an exp ( p n (log n) c ) isomorphism test. Subsequently Luks <ref> [33] </ref> proved, using group theory to greater depth, that isomorphism for graphs of bounded valence is in polynomial time. Finally the canonical labeling problem for graphs of bounded valence has been solved in polynomial time by [11] and [18] independently. <p> The general graph isomorphism problem has been attacked by Zemly-achenko. The method is described in [5] and [41]. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). Combining this with the method of Luks <ref> [33] </ref>, Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). His bound is exp (n 1c ) for some positive constant c. This has subsequently been improved by Babai and Luks [11] to exp (n 1=2+o (1) ).
Reference: [34] <author> R. Mathon, </author> <title> "A Note On the Graph Isomorphism Counting Problem," </title> <journal> Inform. Proc. Let. </journal> <volume> 8 (1979), </volume> <pages> 131-132. </pages>
Reference-contexts: Previously, such graphs have been considered to be difficult examples for isomorphism testing, because of their high degree of regularity and symmetry. The importance of symmetries for graph isomorphism testing has been pointed out by Babai and by Mathon <ref> [34] </ref> who showed that the graph iso-morphism problem is equivalent to computing the order of automorphism groups of graphs.
Reference: [35] <author> B.D. McKay, </author> <title> "Nauty User's Guide (Version 1.2)," </title> <type> Tech. Rep. </type> <institution> TR-CS-87-03, Dept. Computer Science, Austral. National Univ., Melbourne, </institution> <year> 1987. </year>
Reference-contexts: Vertex classification is probably the basis of every practical implementation of a graph isomorphism test. For example, this is the case for the "nauty" package <ref> [35] </ref>, which is said to be the fastest practical graph isomor-phism package.
Reference: [36] <author> G.L. Miller, </author> <title> "On the n log n Isomorphism Technique," </title> <booktitle> 10th ACM Symposium on Theory of Computing (1978), </booktitle> <pages> 51-58. </pages>
Reference-contexts: has proved that a special k-dim W-L method with a fixed k is sufficient for canonical labeling of trivalent (degree 3) graphs with arc-transitive automorphism groups. (An arc is an ordered pair of adjacent vertices.) Support for the k = O (log n) conjecture has been provided by Gary Miller <ref> [36] </ref>. He has shown that for certain classes of strongly regular graphs and other combinatorial objects such as Latin squares k = log n is sufficient. Previously, such graphs have been considered to be difficult examples for isomorphism testing, because of their high degree of regularity and symmetry.
Reference: [37] <author> R.C. Read and D.G. Corneil, </author> <title> "The Graph Isomorphism Disease," </title> <editor> J. </editor> <booktitle> Graph Theory 1 (1977), </booktitle> <pages> 339-363. </pages>
Reference-contexts: Section 7 describes some corollaries and extensions of this work. 2 History of the Weisfeiler-Lehman Method An old basic idea in graph isomorphism testing and canonical labeling is the naive vertex classification algorithm as described in Read and Corneil <ref> [37] </ref>. First, the vertices are labeled or colored with their valences. During the iteration, all labels are extended by the multiset ("set" with possibly multiple elements) of the labels of their neighbors.
Reference: [38] <author> M. Vardi, </author> <title> "Complexity of Relational Query Languages," </title> <booktitle> 14th ACM Symposium on Theory of Computing (1982), </booktitle> <pages> 137-146. </pages>
Reference-contexts: In [24] and in <ref> [38] </ref> it is also shown that this uniform sequence of formulas can be represented by a least fixed point operator (LFP) applied to a single formula. Thus, P = FO () + LFP = k=1 Fact 3.1 gives a natural language expressing exactly the polynomial-time properties of ordered graphs.
Reference: [39] <author> Boris Weisfeiler, ed., </author> <title> On Construction and Identification of Graphs, </title> <booktitle> Lecture Notes in Mathematics 558, </booktitle> <publisher> Springer, </publisher> <year> 1976. </year>
Reference-contexts: Another way to interpret our results is with stable colorings of k-tuples of vertices. The work of Weisfeiler and Lehman <ref> [40, 39] </ref> on combinatorial and group theoretic properties of colored graphs, has inspired the idea of separating the orbits of the automorphism group of a graph by coloring k-tuples of vertices. Sometimes, this approach is called, the k-dimensional Weisfeiler-Lehman method (k-dim W-L). <p> A more formal description of the k-dim W-L method is given in Section 5. Possibly weaker algorithms have been considered. We might call them special k-dim W-L algorithms. In Weisfeiler's book <ref> [39] </ref> only such a method is mentioned and called deep stabilization. It consists of individualization followed by a low dimensional (1-dim or 2-dim) W-L algorithm. <p> Later, we have learned that such conjectures have been around before in the Soviet Union, where the k-dim W-L algorithm (or maybe sometimes a special k-dim W-L algorithm) has been investigated for two decades. Significant results have been obtained by Farad^zev's group, which contributed many papers to Weisfeiler's book <ref> [39] </ref>. The Russians have built a huge algebraic theory with extensive applications around the notion of stable colorings of pairs. The key notion is that of a cellular algebra (see [39, 30]), which has been discovered in another context and called coherent configuration by Higman [21]. <p> Significant results have been obtained by Farad^zev's group, which contributed many papers to Weisfeiler's book [39]. The Russians have built a huge algebraic theory with extensive applications around the notion of stable colorings of pairs. The key notion is that of a cellular algebra (see <ref> [39, 30] </ref>), which has been discovered in another context and called coherent configuration by Higman [21]. Weisfeiler and Lehman have asked whether the special k-dim W-L method with a slowly growing value of k would be sufficient to solve the graph isomor-phism problem.
Reference: [40] <author> B. Weisfeiler and A.A. Lehman, </author> <title> "A Reduction of a Graph to a Canonical Form and an Algebra Arising during this Reduction," (in Russian), </title> <journal> Nauchno-Technicheskaya Informatsia, </journal> <volume> Seriya 2, 9 (1968), </volume> <pages> 12-16. </pages>
Reference-contexts: Another way to interpret our results is with stable colorings of k-tuples of vertices. The work of Weisfeiler and Lehman <ref> [40, 39] </ref> on combinatorial and group theoretic properties of colored graphs, has inspired the idea of separating the orbits of the automorphism group of a graph by coloring k-tuples of vertices. Sometimes, this approach is called, the k-dimensional Weisfeiler-Lehman method (k-dim W-L).
Reference: [41] <author> V.N. Zemlyachenko, N. Kornienko, and R.I. Tyshkevich, </author> <title> "Graph Iso-morphism Problem," (in Russian), The Theory fo Computation I, </title> <journal> Notes Sci. Sem. </journal> <volume> LOMI 118, </volume> <year> 1982. </year> <month> 31 </month>
Reference-contexts: If a transitive automorphism group is primitive, then 2-dim W-L produces necessarily a primitive coherent configuration. For tournaments, the isomorphism problems of primitive and arbitrary coherent configurations are polynomial time equivalent [11]. The general graph isomorphism problem has been attacked by Zemly-achenko. The method is described in [5] and <ref> [41] </ref>. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). Combining this with the method of Luks [33], Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). <p> The method is described in [5] and <ref> [41] </ref>. By individualization of O ( n) vertices and canonical edge-switching, he has been able to reduce the valence to O ( p n). Combining this with the method of Luks [33], Zemly-achenko obtained the first interesting upper bound for general graph isomor-phism [41] (cf. [5]). His bound is exp (n 1c ) for some positive constant c. This has subsequently been improved by Babai and Luks [11] to exp (n 1=2+o (1) ).
References-found: 41

