URL: http://robotics.eecs.berkeley.edu/~emiris/papers/issac93.ps.gz
Refering-URL: http://robotics.eecs.berkeley.edu/~emiris/
Root-URL: 
Email: emiris@cs.Berkeley.edu jfc@cs.Berkeley.edu  
Author: Ioannis Emiris John Canny 
Address: 571 Evans Hall  Berkeley CA 94720  
Affiliation: Computer Science Division  University of California at Berkeley  
Note: (Extended Abstract)  
Abstract: A Practical Method for the Sparse Resultant Abstract We propose an efficient method for computing the sparse resultant of a system of n + 1 polynomial equations in n unknowns. Our approach improves upon [CE93] and constructs a smaller matrix whose determinant is a non-zero multiple of the resultant and from which the latter is easily recovered. For certain classes of systems, it attains optimality by expressing the resultant as a single determinant. An implementation of the algorithm is described and empirical results presented and compared with those from [CE93] and [SZ94]. In addition, the important subproblem of computing Mixed Volumes is examined and an efficient algorithm is implemented. 
Abstract-found: 1
Intro-found: 1
Reference: [Ber75] <author> D.N. Bernstein. </author> <title> The Number of Roots of a System of Equations. </title> <journal> Funct. Anal. and Appl., </journal> <volume> 9(2) </volume> <pages> 183-185, </pages> <year> 1975. </year>
Reference-contexts: Before formally introducing the sparse resultant, we mention the BKK bound on the number of common roots of a system, which is the cornerstone of sparse elimination theory, due to work in <ref> [Ber75] </ref>, [Kus75] and [Kho78]. Theorem 2.5 [Ber75] For polynomials f 1 ; : : :; f n 2 C [x; x 1 ] the number of solutions of the system in (C fl ) n is either infinite, or does not exceed the Mixed Volume M V (Q 1 ; : <p> Before formally introducing the sparse resultant, we mention the BKK bound on the number of common roots of a system, which is the cornerstone of sparse elimination theory, due to work in <ref> [Ber75] </ref>, [Kus75] and [Kho78]. Theorem 2.5 [Ber75] For polynomials f 1 ; : : :; f n 2 C [x; x 1 ] the number of solutions of the system in (C fl ) n is either infinite, or does not exceed the Mixed Volume M V (Q 1 ; : : : ; Q n ).
Reference: [BGW88] <author> C. Bajaj, T. Garrity, and J. Warren. </author> <title> On the applications of multi-equational resultants. </title> <type> Technical Report 826, </type> <institution> Purdue Univ., </institution> <year> 1988. </year>
Reference-contexts: Its main use lies in eliminating variables, thus it is also called the eliminant, as well as in solving the system via the u-resultant. Resultant-based methods offer the most efficient solution to different problems in areas ranging from robotics [Can88] to graphics and modeling <ref> [BGW88] </ref>. A concrete example is the inverse kinematics problem for a 6R robot [MC92c], which is solved using a customized resultant in the order of milliseconds.
Reference: [Can88] <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> M.I.T. Press, </publisher> <address> Cambridge, Mass., </address> <year> 1988. </year>
Reference-contexts: Its main use lies in eliminating variables, thus it is also called the eliminant, as well as in solving the system via the u-resultant. Resultant-based methods offer the most efficient solution to different problems in areas ranging from robotics <ref> [Can88] </ref> to graphics and modeling [BGW88]. A concrete example is the inverse kinematics problem for a 6R robot [MC92c], which is solved using a customized resultant in the order of milliseconds. <p> Another approach, related to Cayley's and also to the algorithm in this article, is to define the homogeneous resultant via a Koszul complex, see for instance [Cha92]. Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's [Laz81] and Canny's <ref> [Can88] </ref>. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in [Kus75] and [KSZ92]. <p> In the optimal case the minor D equals the sparse resultant. In general this is not true, and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients, discussed in a general context in <ref> [Can88] </ref> and adapted in [CE93]. 5 Mixed Volume For unmixed systems it is only needed to calculate the volume of one Newton polytope and then use Definition 2.4.
Reference: [CE93] <author> J. Canny and I. Emiris. </author> <title> An Efficient Algorithm for the Sparse Mixed Resultant. </title> <editor> In G. Cohen, T. Mora, and O. Moreno, editors, </editor> <booktitle> Proc. 10th Intern. Symp. on Applied Algebra, Algebraic Algorithms and Error-Correcting Codes, Lect. Notes in Comp. Science 263, </booktitle> <pages> pages 89-104, </pages> <address> Puerto Rico, </address> <month> May </month> <year> 1993. </year> <note> Springer Verlag. Submitted to SIAM J. Computing. </note>
Reference-contexts: So, ideally, we would like to have a sparse resultant for every problem, which calls for a general algorithm to construct sparse resultants. The first efficient algorithm was proposed in <ref> [CE93] </ref>, while here we take a different tack at obtaining more compact formulae. <p> The asymptotic complexity analysis is presented in Section 6 and the implementation in the following section. Section 8 discusses our experiments, in particular for multihomo-geneous and multigraded systems, and compares some of these results with a greedy implementation of the algorithm from <ref> [CE93] </ref>. The paper concludes with our directions for future work and some open questions. 2 Preliminaries This section defines the problem and the necessary concepts in order to exploit sparseness in polynomial systems. <p> An explicit formula for the sparse mixed resultant was given in [PS93] as a Poisson product, but it does not amount to an efficient algorithm. The first efficient method that applies to the general mixed case was proposed in <ref> [CE93] </ref>. Its complexity for unmixed systems as well as "well-behaved" mixed systems is polynomial in the degree of the resultant and exponential in n with a linear exponent. <p> A more general way of associating each point to a monomial and a polynomial is presented by Sturmfels [Stu92], thus removing one of the assumptions in <ref> [CE93] </ref>. The lattice points index the rows and columns of the matrix; the contents of row p correspond to the product of the monomial with the polynomial associated with p. <p> Minkowski Sum of the input Newton polytopes; consider all n-fold partial Minkowski Sums Q i = Q Q i = j6=i and let We shall restrict our choice of B i by requiring that it is a subset of T i ; notice that this is also the case in <ref> [CE93] </ref>, although described in different terms. One consequence is that the supports of all products g i f i lie within the Minkowski Sum Q, i.e. supp (g i f i ) Q, therefore supp (g) Q. <p> If, after repeatedly incrementing the supports, we have for all i &gt; 1, B i = T i then we have failed to find a smaller matrix than that from <ref> [CE93] </ref> and we have two choices. Either try another direction ^u or set B 1 = T 1 which implies that M contains a nonzero minor of the proper degree in the coefficients of each polynomial, since it contains, as a submatrix, the matrix defined in [CE93]. <p> matrix than that from <ref> [CE93] </ref> and we have two choices. Either try another direction ^u or set B 1 = T 1 which implies that M contains a nonzero minor of the proper degree in the coefficients of each polynomial, since it contains, as a submatrix, the matrix defined in [CE93]. In practice the algorithm stops well before all B i = T i and tries a different direction ^u. We summarize now the main algorithm, under the assumption that a direction ^u has been chosen. 1. <p> Support sets B i are initialized (only the first time) or incremented, with B 1 fixed; if B i = T i ; 8i &gt; 1 then pick a different ^u or look for the matrix of <ref> [CE93] </ref>. 2. <p> In the optimal case the minor D equals the sparse resultant. In general this is not true, and there are two alternative ways to proceed in order to obtain the resultant under a specific specialization of the coefficients, discussed in a general context in [Can88] and adapted in <ref> [CE93] </ref>. 5 Mixed Volume For unmixed systems it is only needed to calculate the volume of one Newton polytope and then use Definition 2.4. <p> Mahalingam [Mah92]. A more efficient algorithm is sketched below and its implementation is discussed in the next section. The algorithm, which we call the Lifting algorithm, is due to B. Sturmfels; more details are found in [HS92] and <ref> [CE93] </ref>. Given are convex polytopes Q 1 ; : : : ; Q n R n . <p> For mixed systems, finding the Mixed Volumes has exponential cost in n. If the mixed system is "well-behaved" then the rest of the algorithm has again complexity polynomial in n and the matrix order. There is an example of a mixed system in <ref> [CE93] </ref> that would cause the complexity of this algorithm to be significantly higher that predicted in the theorem. However, this is an artificial system and we do not expect to encounter many such systems in practice. 7 Implementation Our implementation is in ANSI-C and relies on two existing packages. <p> For a system of type (2; 1; 2; 1) we obtained a non-zero minor of order 56 in about 20 minutes, while the total degree of the resultant is 48 and the order of the matrix constructed by a greedy version of the algorithm in <ref> [CE93] </ref> is 103. This matrix was obtained by mimicking the construction in the case of multigraded systems; here ^u was [50; 50; 1]. For a system of type (2; 1; 2; 2), a non-zero minor of order 120 was obtained while the total degree of the resultant is 96. <p> The method seemed to be less efficient with small mixed systems. For a system of 3 equations in 2 unknowns we obtained a non-singular matrix of order 32, while the resultant's degree is 26 and the greedy version of <ref> [CE93] </ref> gave an optimal matrix. The algorithm should perform best for large systems. 9 Future Work There are several related problems, some of independent interest, whose solution may offer room for improvement, such as computing Mixed Volumes and enumerating lattice points in convex polytopes.
Reference: [Cha92] <author> M. Chardin. </author> <title> The resultant via a Koszul complex. </title> <editor> In F. Eyssette and A. Galligo, editors, </editor> <booktitle> Proc. </booktitle> <volume> MEGA '92, </volume> <pages> pages 29-39, </pages> <address> Nice, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: Another approach, related to Cayley's and also to the algorithm in this article, is to define the homogeneous resultant via a Koszul complex, see for instance <ref> [Cha92] </ref>. Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's [Laz81] and Canny's [Can88]. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in [Kus75] and [KSZ92].
Reference: [EC92] <author> I. Emiris and J. Canny. </author> <title> An efficient approach to removing geometric degeneracies. </title> <booktitle> In Proc. 8th ACM Symp. on Computational Geome--try, </booktitle> <pages> pages 74-82, </pages> <address> Berlin, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: The complexity of the Convex Hull algorithm, used to obtain the facets of a polytope, is proportional to the cardinality of the input point set raised to d (n + 1)=2e and to a polynomial factor in n <ref> [EC92] </ref>. Finding the supports B i has cost polynomial in n and the matrix order. Once matrix M is defined, all linear algebra operations have cost polynomial in its order, which is polynomial in the resultant's degree. <p> In addition, a Convex Hull program is needed to compute the facet structure and volume of the convex hull of a lattice point set in arbitrary dimension; for this, a package developed by the first author in ANSI-C is used, implementing the Beneath-Beyond algorithm and the perturbation of <ref> [EC92] </ref> for eliminating degenerate configurations. The input consists of n + 1 supports A i , each represented by an array of m i n-dimensional integer vectors. The first step is to compute the vertices of each Newton polytope Q i .
Reference: [HS92] <author> B. Huber and B. Sturmfels. </author> <title> A polyhedral method for solving sparse polynomial systems. </title> <note> To appear in Mathematics of Computation. A preliminary version presented at the "Workshop on Real Algebraic Geometry", </note> <month> August </month> <year> 1992. </year>
Reference-contexts: Mahalingam [Mah92]. A more efficient algorithm is sketched below and its implementation is discussed in the next section. The algorithm, which we call the Lifting algorithm, is due to B. Sturmfels; more details are found in <ref> [HS92] </ref> and [CE93]. Given are convex polytopes Q 1 ; : : : ; Q n R n .
Reference: [Kho78] <author> A.G. Khovanskii. </author> <title> Newton Polyhedra and the Genus of Complete Intersections. </title> <journal> Funktsio-nal'nyi Analiz i Ego Prilozheniya, </journal> <volume> 12(1) </volume> <pages> 51-61, </pages> <address> Jan.-Mar. </address> <year> 1978. </year>
Reference-contexts: Before formally introducing the sparse resultant, we mention the BKK bound on the number of common roots of a system, which is the cornerstone of sparse elimination theory, due to work in [Ber75], [Kus75] and <ref> [Kho78] </ref>.
Reference: [KSZ92] <editor> M.M. Kapranov, B. Sturmfels, and A.V. Zelevinsky. </editor> <title> Chow polytopes and general resultants. </title> <journal> Duke Math. J., </journal> <volume> 67 </volume> <pages> 189-218, </pages> <year> 1992. </year>
Reference-contexts: Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's [Laz81] and Canny's [Can88]. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in [Kus75] and <ref> [KSZ92] </ref>. Algorithms for its computation and evaluation were proposed in [Stu93], the fastest having complexity super-polynomial in the degree of the resultant and exponential in n with a quadratic exponent, which makes it very expensive for large systems.
Reference: [Kus75] <author> A.G. Kushnirenko. </author> <title> The Newton polyhedron and the number of solutions of a system of k equations in k unknowns. </title> <journal> Uspekhi Mat. Nauk., </journal> <volume> 30 </volume> <pages> 266-267, </pages> <year> 1975. </year>
Reference-contexts: Before formally introducing the sparse resultant, we mention the BKK bound on the number of common roots of a system, which is the cornerstone of sparse elimination theory, due to work in [Ber75], <ref> [Kus75] </ref> and [Kho78]. <p> Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's [Laz81] and Canny's [Can88]. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in <ref> [Kus75] </ref> and [KSZ92]. Algorithms for its computation and evaluation were proposed in [Stu93], the fastest having complexity super-polynomial in the degree of the resultant and exponential in n with a quadratic exponent, which makes it very expensive for large systems.
Reference: [Laz81] <author> D. Lazard. </author> <title> Resolution des systemes d'equations algebriques. </title> <journal> Theor. Comp. Science, </journal> <volume> 15 </volume> <pages> 77-110, </pages> <year> 1981. </year>
Reference-contexts: Another approach, related to Cayley's and also to the algorithm in this article, is to define the homogeneous resultant via a Koszul complex, see for instance [Cha92]. Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's <ref> [Laz81] </ref> and Canny's [Can88]. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in [Kus75] and [KSZ92].
Reference: [Mac02] <author> F.S. </author> <title> Macaulay. Some formulae in elimination. </title> <journal> Proc. London Math. Soc., </journal> <volume> 1(33) </volume> <pages> 3-27, </pages> <year> 1902. </year>
Reference-contexts: The multivariate resultant for a system of n + 1 homogeneous polynomials can be defined in several alternative ways. Hurwitz expressed it as the Greatest Common Divisor (GCD) of n + 1 inertia forms [vdW50], Cayley [Sal85] via a series of n divisions of determinants, while Macaulay <ref> [Mac02] </ref> defined it as the quotient of a determinant divided by one of its minors. Another approach, related to Cayley's and also to the algorithm in this article, is to define the homogeneous resultant via a Koszul complex, see for instance [Cha92].
Reference: [Mah92] <author> E. Mahalingam. </author> <title> A way to compute mixed volumes. </title> <type> Master's thesis, </type> <institution> U.C. Berkeley, </institution> <month> Oc-tober </month> <year> 1992. </year>
Reference-contexts: For general cases, there already exist implementations of certain algorithms computing the Mixed Volume of n polytopes in n dimensions, namely of the inclusion/exclusion formula by the first author and an improved one by E. Mahalingam <ref> [Mah92] </ref>. A more efficient algorithm is sketched below and its implementation is discussed in the next section. The algorithm, which we call the Lifting algorithm, is due to B. Sturmfels; more details are found in [HS92] and [CE93].
Reference: [MC92a] <author> D. Manocha and J. Canny. </author> <title> The impicit representation of rational parametric surfaces. </title> <journal> J. Symbolic Computation, </journal> <volume> 13 </volume> <pages> 485-510, </pages> <year> 1992. </year>
Reference-contexts: the Dixon resultant of a perturbed system leads to an algorithm that terminates successfully in about 30 minutes, while all major Grobner bases methods seem to run out of memory after running for a few days, even when working on a homomorphic image of the problem over a finite field <ref> [MC92a] </ref>. In general, Grobner bases algorithms can also exploit sparseness; yet, when a sparse resultant is known, the solution is much faster, as seen in these applications.
Reference: [MC92b] <author> D. Manocha and J. Canny. </author> <title> Multipolyno-mial Resultants and Linear Algebra. </title> <booktitle> In Proc. ACM Intern. Symp. on Symbolic and Algebr. Computation, </booktitle> <pages> pages 96-102, </pages> <address> Berkeley, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: For a bicubic surface, methods based on sparse resultants have been shown to run faster by a factor of at least 10 3 , compared to Grobner bases and the Ritt-Wu method <ref> [MC92b] </ref>.
Reference: [MC92c] <author> D. Manocha and J. Canny. </author> <title> Real Time Inverse Kinematics of General 6R Manipulators. </title> <booktitle> In Proc. IEEE Intern. Conf. Robotics and Automation, </booktitle> <pages> pages 383-389, </pages> <address> Nice, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Resultant-based methods offer the most efficient solution to different problems in areas ranging from robotics [Can88] to graphics and modeling [BGW88]. A concrete example is the inverse kinematics problem for a 6R robot <ref> [MC92c] </ref>, which is solved using a customized resultant in the order of milliseconds. This consists of finding the angles by which each of the six links of the robot must be rotated in order to attain a given final position.
Reference: [PS93] <author> P. Pedersen and B. Sturmfels. </author> <title> Product Formulas for Resultants and Chow Forms. </title> <journal> Math. Zeitschrift, </journal> <volume> 214 </volume> <pages> 377-396, </pages> <year> 1993. </year>
Reference-contexts: In general, the resultant is a necessary and generically sufficient condition for such a system to have a solution in (C fl ) n . We adopt the following definition for the sparse resultant from <ref> [PS93] </ref>. Regard a polynomial f i as a generic point (c i1 ; : : :; c im i ) 2 C m i in the space of all possible polynomials with the given supports A i . <p> A consequence of Bernstein's theorem is Proposition 2.7 <ref> [PS93] </ref> The sparse resultant is separately homogeneous in the coefficients (c i1 ; : : : ; c im i ) of each f i and its degree in these coefficients equals the mixed volume of the other n Newton polytopes, i.e. deg f i R = MV (i). 3 Background <p> Examples of systems with a Sylvester-type formula were examined with our implementation and several such formulae were indeed obtained; in addition, instances of systems satisfying the conjecture's conditions were tested and the results support the conjecture. An explicit formula for the sparse mixed resultant was given in <ref> [PS93] </ref> as a Poisson product, but it does not amount to an efficient algorithm. The first efficient method that applies to the general mixed case was proposed in [CE93]. <p> The matrix is defined via a linear transformation. To exploit sparseness and achieve the degree bounds of proposition 2.7 we must work on the sublattice L Z n generated by the union of all input supports [A i <ref> [PS93] </ref>, i.e. on the coarsest common refinement of the sublattices generated by each A i .
Reference: [Sal85] <author> G. Salmon. </author> <title> Modern Higher Algebra. G.E. </title> <publisher> Stechert and Co., </publisher> <address> New York, </address> <note> 1885. reprinted 1924. </note>
Reference-contexts: the other n Newton polytopes, i.e. deg f i R = MV (i). 3 Background and the Present Approach The simplest system is that of two homogeneous polynomials in two unknowns, which was studied by Sylvester who defined the resultant as the determinant of a matrix in the polynomial coefficients <ref> [Sal85] </ref>. The multivariate resultant for a system of n + 1 homogeneous polynomials can be defined in several alternative ways. Hurwitz expressed it as the Greatest Common Divisor (GCD) of n + 1 inertia forms [vdW50], Cayley [Sal85] via a series of n divisions of determinants, while Macaulay [Mac02] defined it <p> defined the resultant as the determinant of a matrix in the polynomial coefficients <ref> [Sal85] </ref>. The multivariate resultant for a system of n + 1 homogeneous polynomials can be defined in several alternative ways. Hurwitz expressed it as the Greatest Common Divisor (GCD) of n + 1 inertia forms [vdW50], Cayley [Sal85] via a series of n divisions of determinants, while Macaulay [Mac02] defined it as the quotient of a determinant divided by one of its minors.
Reference: [Sch80] <author> J.T. Schwartz. </author> <title> Fast probabilistic algorithms for verification of polynomial identities. </title> <journal> J. ACM, </journal> <volume> 27(4) </volume> <pages> 701-717, </pages> <year> 1980. </year>
Reference-contexts: To search, with high probability, for a non-zero maximal minor it suffices to choose a random specialization of the coefficients and test the resulting integer matrix. The randomization makes the method only more conservative. Sufficient random bits, as given by Schwartz's lemma <ref> [Sch80] </ref> will make the probability of missing some acceptable submatrix arbitrarily low. We have also implemented the Lifting algorithm in ANSI-C for computing Mixed Volumes.
Reference: [Stu92] <author> B. Sturmfels. </author> <title> Combinatorics of the sparse resultant. </title> <type> Technical Report 020-93, </type> <institution> MSRI, Berkeley, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: The algorithm constructs the Minkowski Sum of the n + 1 Newton polytopes and associates a monomial and an input polynomial to each lattice point p in it. A more general way of associating each point to a monomial and a polynomial is presented by Sturmfels <ref> [Stu92] </ref>, thus removing one of the assumptions in [CE93]. The lattice points index the rows and columns of the matrix; the contents of row p correspond to the product of the monomial with the polynomial associated with p. <p> It is possible to identify L with Z n <ref> [Stu92] </ref>; in what follows, it is assumed that this has already been done. 4.1 The Linear Transformation The entries of the matrix have to be among the coefficients of the original polynomials which are thought of as indeterminates. In the very last step, they will be specialized to their values.
Reference: [Stu93] <author> B. Sturmfels. </author> <title> Sparse elimination theory. </title> <editor> In D. Eisenbud and L. Robbiano, editors, </editor> <booktitle> Proc. Computat. Algebraic Geom. and Commut. Algebra 1991, </booktitle> <pages> pages 377-396, </pages> <address> Cortona, Italy, 1993. </address> <publisher> Cambridge Univ. Press. </publisher>
Reference-contexts: Various modern algorithms exist to construct the multivariate homogeneous resultant including, for instance, Lazard's [Laz81] and Canny's [Can88]. The unmixed sparse resultant was defined as the Chow form of a projective toric variety in [Kus75] and [KSZ92]. Algorithms for its computation and evaluation were proposed in <ref> [Stu93] </ref>, the fastest having complexity super-polynomial in the degree of the resultant and exponential in n with a quadratic exponent, which makes it very expensive for large systems. For the case of multigraded systems Sylvester-type formulations of the resultant exist [SZ94].
Reference: [SZ94] <author> B. Sturmfels and A. Zelevinsky. </author> <title> Multigraded Resultants of Sylvester Type. </title> <journal> J. of Algebra, </journal> <volume> 163(1) </volume> <pages> 115-127, </pages> <year> 1994. </year>
Reference-contexts: In Section 8 we discuss in detail some of these results; in particular we study the class of multigraded systems for which a determinantal formula always exists <ref> [SZ94] </ref> and is obtained with our method; our results also support the conjecture in that paper. The rest of this paper is organized as follows. The next section provides all definitions and Section 3 puts the new approach into perspective by outlining previous work in the area. <p> Algorithms for its computation and evaluation were proposed in [Stu93], the fastest having complexity super-polynomial in the degree of the resultant and exponential in n with a quadratic exponent, which makes it very expensive for large systems. For the case of multigraded systems Sylvester-type formulations of the resultant exist <ref> [SZ94] </ref>. These are unmixed systems of polynomials that are homogeneous of degree d j in each group of l j +1 variables, where there are r groups of variables and j 2 f1; : : : rg. <p> In addition, for each j, l j = 1 or d j = 1. The same paper presented the following Conjecture 3.1 <ref> [SZ94] </ref> If l j 2 and d j 2 for some j, then the multigraded resultant has no Sylvester-type formula. <p> Sturmfels and Zelevinsky <ref> [SZ94] </ref> studied in particular the subclass of multigraded systems for which, for every k 2 f1; : : :; rg, we have l k = 1 or d k = 1. <p> P = k=1 It is proven in <ref> [SZ94] </ref> that there exists one matrix M for every permutation of the indices f1; : : :; rg, such that the determinant of M is the resultant. Clearly all supports B i are identical, of cardinality equal to the unique n-fold Mixed Volume. <p> Proof It follows from the lemma that the first set of supports B i constructed are all identical, since the system is unmixed, and equal to B " Z n , hence they are exactly those required by <ref> [SZ94] </ref> to define a Sylvester-type formula for the resultant. Note that the formula obtained corresponds to the permutation used in the definition of m k . 2 We have been able to produce all possible Sylvester-type formulae for various multigraded examples, including the one from [SZ94] with type (1; 2; 2; <p> are exactly those required by <ref> [SZ94] </ref> to define a Sylvester-type formula for the resultant. Note that the formula obtained corresponds to the permutation used in the definition of m k . 2 We have been able to produce all possible Sylvester-type formulae for various multigraded examples, including the one from [SZ94] with type (1; 2; 2; 1). This ran on a Sun-4 for less than 10 CPU minutes; as with all running times reported here, the complexity is almost entirely due to our MAPLE implementation of Linear Programming.
Reference: [vdW50] <author> B.L. van der Waerden. </author> <title> Modern Algebra. </title> <publisher> Un-gar Publishing Co., </publisher> <address> New York, </address> <note> 3rd edition, </note> <year> 1950. </year>
Reference-contexts: The multivariate resultant for a system of n + 1 homogeneous polynomials can be defined in several alternative ways. Hurwitz expressed it as the Greatest Common Divisor (GCD) of n + 1 inertia forms <ref> [vdW50] </ref>, Cayley [Sal85] via a series of n divisions of determinants, while Macaulay [Mac02] defined it as the quotient of a determinant divided by one of its minors.
References-found: 23

