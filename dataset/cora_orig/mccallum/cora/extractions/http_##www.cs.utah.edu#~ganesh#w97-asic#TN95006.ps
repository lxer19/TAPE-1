URL: http://www.cs.utah.edu/~ganesh/w97-asic/TN95006.ps
Refering-URL: http://www.cs.utah.edu/~ganesh/w97-asic/
Root-URL: 
Title: Derivation of a Low-Power Reed-Solomon Decoder for the DCC Player  
Note: Nat.Lab. Technical Note Nr. UR 006/95 Joep Kessels  c Philips Electronics N.V. 1995 All rights are reserved. Reproduction in whole or in part is prohibited without the written consent of the copyright owner.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Kees van Berkel. </author> <title> Handshake circuits: an asynchronous architecture for VLSI programming. </title> <booktitle> International Series on Parallel Computation. </booktitle> <publisher> Cambridge University Press 1993. </publisher>
Reference-contexts: Asynchronous circuits are, however, difficult to design at the level of gates and registers. For that reason, the high-level design language Tangram [11] has been defined and a so-called silicon compiler <ref> [1, 2] </ref> has been implemented, which translates Tangram programs into circuit layouts. Tangram is a conventional programming language, like C or Pascal, extended to include constructs for expressing concurrency and communication in a way similar to CSP [6].
Reference: [2] <author> Kees van Berkel, Joep Kessels, Marly Roncken, Ronald Saeijs and Frits Schalij. </author> <title> The VLSI-programming language Tangram and its translation into handshake circuits. </title> <booktitle> Proc. Eur. Conf. on Design Automation, Amsterdam (1991), </booktitle> <pages> 384-389. </pages>
Reference-contexts: Asynchronous circuits are, however, difficult to design at the level of gates and registers. For that reason, the high-level design language Tangram [11] has been defined and a so-called silicon compiler <ref> [1, 2] </ref> has been implemented, which translates Tangram programs into circuit layouts. Tangram is a conventional programming language, like C or Pascal, extended to include constructs for expressing concurrency and communication in a way similar to CSP [6].
Reference: [3] <author> Kees van Berkel, Ronan Burgess, Joep Kessels, Ad Peeters, Marly Roncken and Frits Schalij. </author> <title> Asynchronous Circuits for low power: a DCC error corrector, </title> <journal> IEEE Design and Test, </journal> <volume> vol. 11, no 2, </volume> <pages> pp. 22-32, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In order to show the potential of designing VLSI circuits in Tangram, an error corrector for the DCC player has been designed, which consists of three chips <ref> [3, 4] </ref>. The Reed-Solomon decoder is one of these chips. It has been chosen as the main demonstrator in Esprit contract 6143 Exact, where it will be used to compare several different asynchronous circuit techniques.
Reference: [4] <author> Kees van Berkel, Ronan Burgess, Joep Kessels, Ad Peeters, Marly Roncken and Frits Schalij. </author> <title> A Fully Asynchronous Low-power Error Corrector for the DCC Player. </title> <journal> IEEE Journal of Solid-State Circuits vol. </journal> <volume> 29, </volume> <pages> pp. 1429-1439, </pages> <month> DEC </month> <year> 1994. </year>
Reference-contexts: In order to show the potential of designing VLSI circuits in Tangram, an error corrector for the DCC player has been designed, which consists of three chips <ref> [3, 4] </ref>. The Reed-Solomon decoder is one of these chips. It has been chosen as the main demonstrator in Esprit contract 6143 Exact, where it will be used to compare several different asynchronous circuit techniques.
Reference: [5] <author> Kees van Berkel, Ronan Burgess, Ferry Huberts, Joep Kessels, Ad Peeters, Marly Roncken, Frits Schalij and Rik van der Wiel, </author> <title> A Single-Rail Implementation of a DCC Error Corrector, Submitted to Asynchronous Design Methodologies </title>
Reference-contexts: An evaluation of the single-rail chip together with an detailed comparison of the two chips is given in <ref> [5] </ref>. Below we only discuss the single-rail chip. The chip contains 22,000 transistors and its core size is 4 mm 2 in a 0.8 CMOS technology.
Reference: [6] <author> C.A.R. Hoare, </author> <title> Communicating Sequential Processes (Series in Computer Science, </title> <booktitle> Prentice-Hall International, </booktitle> <year> 1985). </year>
Reference-contexts: Tangram is a conventional programming language, like C or Pascal, extended to include constructs for expressing concurrency and communication in a way similar to CSP <ref> [6] </ref>. In order to show the potential of designing VLSI circuits in Tangram, an error corrector for the DCC player has been designed, which consists of three chips [3, 4]. The Reed-Solomon decoder is one of these chips.
Reference: [7] <author> Joep Kessels, Kees van Berkel, Ronan Burgess, Marly Roncken and Frits Schalij. </author> <title> An Error Decoder for the Compact Disc Player as an example of VLSI Programming. </title> <booktitle> Proc. Eur. Conf. on Design Automation, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1992, </year> <pages> pp 69-74. </pages>
Reference-contexts: The Tangram program for a similar but much simpler design for the CD player is given in <ref> [7] </ref>. 3 Coding theory The Reed-Solomon decoder handles so-called words, which are lists of 8-bit symbols. The symbols in a word, say w 0 ; w 1 ; :::; w N1 , can be considered as the coefficients of a polynomial W .
Reference: [8] <author> Gerard C.P. Lokhoff. </author> <title> DCC-Digital Compact Cassette. </title> <journal> IEEE Transactions on Consumer Electronics, </journal> <month> 37(3) August </month> <year> 1991, </year> <pages> 702-706. </pages>
Reference-contexts: The auxiliary information is protected only once by a code in which the words contain 24 symbols, including six parity symbols. The speed of the DCC player is such that the error decoder has to handle about 3000 C1, 2300 C2, and 50 auxiliary words per second <ref> [8] </ref>. The task we set ourselves is to design a low-power Reed-Solomon decoder for the DCC player. Conventional error decoders transform words into corrected code words. The merit of such decoders is that they do not need an external memory containing the words being handled.
Reference: [9] <author> F.J. MacWilliams and N.J.A. Sloane, </author> <title> The theory of error-correcting codes, </title> <address> North Holland (1977) 294-315. </address>
Reference-contexts: Note that for any symbol s in this field s + s = 0 and therefore the symbols + and denote the same operation. 3.2 Reed-Solomon codes In Reed-Solomon encoding <ref> [9] </ref>, lists of N P symbols are extended with P parity symbols to form so-called code words of N symbols. These code words constitute the set of correct words, where a word is any list of N symbols.
Reference: [10] <author> Marly Roncken, </author> <title> Partial Scan Test for Asynchronous Circuits, Illustrated on a DCC Error Corrector. </title> <booktitle> International Symposium on Advanced Research in Asynchronous Circuits and Systems, </booktitle> <address> Salt Lake City, USA (1994), </address> <pages> 247-256. </pages>
Reference-contexts: The rotate, swap and copy operations presented in fig. 3 have also been used in test 12 c fl Philips Electronics N.V. 1995 UR 006/95 design. Based on these operations partial scan techniques as described in <ref> [10] </ref> have been applied which gave 99.8% stuck-at coverage for 4% extra hardware. The fault-simulation tool described in [12] has been used for test pattern generation. 6 Discussion of decoder design In the section on VLSI programming we gave some general guidelines to obtain cost-effective chip designs.
Reference: [11] <author> Frits Schalij, </author> <title> Tangram Manual. </title> <type> Technical Report UR 008/93, </type> <institution> Philips Research Laboratories Eindhoven, </institution> <address> P.O. Box 80.000, 5600 JA Eindhoven, The Netherlands, </address> <year> 1993. </year>
Reference-contexts: Asynchronous CMOS circuits have the potential for very low power consumption, since they only dissipate when and where active. Asynchronous circuits are, however, difficult to design at the level of gates and registers. For that reason, the high-level design language Tangram <ref> [11] </ref> has been defined and a so-called silicon compiler [1, 2] has been implemented, which translates Tangram programs into circuit layouts. Tangram is a conventional programming language, like C or Pascal, extended to include constructs for expressing concurrency and communication in a way similar to CSP [6].
Reference: [12] <author> Rik van de Wiel, </author> <title> High-Level Test Evaluation of Asynchronous Circuits, Submitted to Asynchronous Design Methodologies c fl Philips Electronics N.V. </title> <booktitle> 1995 17 UR 006/95 18 c fl Philips Electronics N.V. 1995 UR 006/95 APPENDICES </booktitle>
Reference-contexts: Based on these operations partial scan techniques as described in [10] have been applied which gave 99.8% stuck-at coverage for 4% extra hardware. The fault-simulation tool described in <ref> [12] </ref> has been used for test pattern generation. 6 Discussion of decoder design In the section on VLSI programming we gave some general guidelines to obtain cost-effective chip designs. In the case of the decoder not only the design but also the specification has been influenced by cost/performance considerations.
References-found: 12

