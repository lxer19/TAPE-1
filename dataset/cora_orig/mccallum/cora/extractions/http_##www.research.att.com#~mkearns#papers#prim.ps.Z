URL: http://www.research.att.com/~mkearns/papers/prim.ps.Z
Refering-URL: http://www.research.att.com/~mkearns/
Root-URL: 
Title: Cryptographic Primitives Based on Hard Learning Problems  
Author: Avrim Blum Merrick Furst Michael Kearns Richard J. Lipton 
Address: Pittsburgh, Pennsylvania  Pittsburgh, Pennsylvania  Murray Hill, New Jersey  Princeton, New Jersey  
Affiliation: Carnegie-Mellon University  Carnegie-Mellon University  AT&T Bell Laboratories  Princeton University  
Abstract: Modern cryptography has had considerable impact on the development of computational learning theory. Tools from cryptography have been used in proving nearly all of the strong negative results for learning. In this paper, we give results in the reverse direction by showing how to construct several cryptographic primitives based on certain assumptions on the difficulty of learning. Thus we develop further a line of thought introduced by Impagliazzo and Levin [5]. As we describe, standard definitions in learning theory and cryptography do not appear to correspond perfectly in their original forms. In particular, a learning algorithm is generally required to be much more successful than a "statistical test" in cryptography. However, we show that natural modifications to standard learning definitions can yield a strong correspondence between hardness for learning and cryptography. The particular cryptographic primitives we consider are pseudorandom bit generators, one-way functions, and private-key cryptosystems. We give transformations of hard learning problems into cryptographic primitives with the desirable property that the complexity of the resulting primitive is not much greater than that of the hard-to-learn functions and distributions. In particular, our constructions are especially adept in preserving the degree of parallelism inherent in the hard functions and distributions. Thus, "simple" functions that are apparently difficult to learn (such as DNF formulae) may lead to cryptographic primitives of considerably reduced parallel complexity. In addition to generic transformations, we also describe a very simple pseudorandom bit generator based on the assumption that the class of parity functions is hard to learn in the presense of random noise (an assumption similar to the intractability of decoding random linear codes). Our construction is simpler than related constructions that have been described previously. A similar construction is apparently already known to some researchers in the cryptography community as a "folk theorem". 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dana Angluin and Michael Kharitonov. </author> <booktitle> When won't membership queries help? In Proceedings of the Twenty-Third Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 444-454, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction and Motivation The contribution of modern cryptography to research in computational learning theory has been significant: ideas and constructions from cryptography have been essential in proving many of the strongest negative results for efficient learning <ref> [4, 8, 1, 9] </ref>.
Reference: [2] <author> E. Berlekamp, R. McEliece, and H. van Tilborg. </author> <title> On the inherent intractability of certain coding problems. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 24, </volume> <year> 1978. </year>
Reference-contexts: It is known that the problem of finding the parity function that minimizes the number of disagreements with an input set of labeled examples is N P-hard <ref> [2] </ref> (and easy to show it is MAX-SNP hard), and this optimization problem was used by McEliece [10] as the core of a proposed public-key cryptosystem with informal security arguments in which the matrix of examples must be carefully chosen.
Reference: [3] <author> O. Goldreich, H. Krawczyk, and M. Luby. </author> <title> On the existence of pseudorandom generators. </title> <booktitle> In 29th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 12-21, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: The generator is very similar to a one-way function proposed by Goldreich, Krawczyk and Luby <ref> [3] </ref>, who then apply a generic transformation to obtain a bit generator. Here we modify this function slightly and provide an analysis showing that the output of the modified function is already pseudorandom. <p> Based on the (unproven) parity assumption, we now propose a rather simple and natural pseudorandom bit generator. Our generator is quite similar to a proposed one-way function due to Goldreich, Krawczyk and Luby <ref> [3] </ref>, who then obtain a generator by running the one-way function through a generic transformation. Essentially, our contribution is to prove that the output of this one-way function is already pseudorandom. This stronger assertion is apparently already known to some researchers in the cryptography community as a "folk theorem".
Reference: [4] <author> Oded Goldreich, Shafi Goldwasser, and Silvio Micali. </author> <title> How to construct random functions. </title> <journal> Journal of the ACM, </journal> <volume> 33(4) </volume> <pages> 792-807, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: 1 Introduction and Motivation The contribution of modern cryptography to research in computational learning theory has been significant: ideas and constructions from cryptography have been essential in proving many of the strongest negative results for efficient learning <ref> [4, 8, 1, 9] </ref>.
Reference: [5] <author> R. Impagliazzo and L. Levin. </author> <title> No better ways to generate hard NP instances than picking uniformly at random. </title> <booktitle> In 31st Annual Symposium on Foundations of Computer Science, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: These primitives are an example of the potential contribution of learning theory to cryptography, and demonstrate in further detail principles first articulated by Impagliazzo and Levin <ref> [5] </ref>. We obtain our results using an average-case model of learning, and we describe our cryptographic primitives as uniform circuit families rather than polynomial time algorithms, since this allows us to make more precise statements about the complexity and depth of these primitives. <p> These difficulties were first noted by Impagliazzo and Levin <ref> [5] </ref>. Roughly speaking, in most learning theory models, a learning algorithm is required for every value of n to learn all functions over f0; 1g n that meet some (usually strong) constraints known to the algorithm. <p> A related result is given by Impagliazzo and Levin <ref> [5] </ref>. Definition 7 Let F = fF n g be a uniform sequence of circuits F n : f0; 1g n ! f0; 1g s (n) for some polynomial s (n).
Reference: [6] <author> R. Impagliazzo, L. Levin, and M. Luby. </author> <title> Pseudorandom generation from one-way functions. </title> <booktitle> In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: Here we modify this function slightly and provide an analysis showing that the output of the modified function is already pseudorandom. Note that while it is well-known that some of the primitives above imply the existence of others (for instance, the equivalence of bit generators and one-way functions) <ref> [13, 6] </ref>, we are interested in the separate results because the equivalences between primitives often do not preserve complexity measures such as circuit depth (parallelism). For instance, it is not known how to construct a bit generator in N C given a one-way function in N C.
Reference: [7] <author> Michael Kearns. </author> <title> Efficient noise-tolerant learning from statistical queries. </title> <booktitle> In Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Our assumption appears to be somewhat stronger than just the intractability of the optimization problem since we use an average-case setting; however, the arguments given below suggest (but do not formally prove) that our assumption may not be considerably stronger. Recent results <ref> [7] </ref> provide some evidence in favor of the parity assumption by proving that parity functions cannot be learned using a certain class of statistical algorithms that include all known noise-tolerant learning algorithms in the Valiant model.
Reference: [8] <author> Michael Kearns and Leslie G. Valiant. </author> <title> Cryptographic limitations on learning Boolean formulae and finite automata. </title> <booktitle> In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 433-444, </pages> <month> May </month> <year> 1989. </year> <note> To appear, Journal of the Association for Computing Machinery. </note>
Reference-contexts: 1 Introduction and Motivation The contribution of modern cryptography to research in computational learning theory has been significant: ideas and constructions from cryptography have been essential in proving many of the strongest negative results for efficient learning <ref> [4, 8, 1, 9] </ref>.
Reference: [9] <author> M. Kharitonov. </author> <title> Cryptographic hardness of distribution-specific learning. </title> <booktitle> In Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction and Motivation The contribution of modern cryptography to research in computational learning theory has been significant: ideas and constructions from cryptography have been essential in proving many of the strongest negative results for efficient learning <ref> [4, 8, 1, 9] </ref>.
Reference: [10] <author> R. J. </author> <title> McEliece. A Public-Key System Based on Algebraic Coding Theory, </title> <type> pages 114-116. </type> <institution> Jet Propulsion Lab, </institution> <year> 1978. </year> <note> DSN Progress Report 44. </note>
Reference-contexts: It is known that the problem of finding the parity function that minimizes the number of disagreements with an input set of labeled examples is N P-hard [2] (and easy to show it is MAX-SNP hard), and this optimization problem was used by McEliece <ref> [10] </ref> as the core of a proposed public-key cryptosystem with informal security arguments in which the matrix of examples must be carefully chosen.
Reference: [11] <author> N. Nisan and A. Wigderson. </author> <title> Hardness vs. randomness. </title> <booktitle> In 29th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: We then describe an improved version of this generator that achieves significantly increased expansion and is based on ideas of Nisan and Wigderson <ref> [11] </ref>. <p> There are standard methods which can be used to amplify the expansion of any generator. However, these methods iterate the generator and therefore significantly increase the resulting circuit depth. By applying a result due to Nisan and Wigderson <ref> [11] </ref> we can improve our generator to obtain a much greater expansion ratio without a correspondingly large increase in circuit depth (or size). In order to prove security, we must increase our intractability assumption for learning. <p> It is described by Nisan and Wigderson <ref> [11] </ref> how to uniformly construct a family of n 4 sets S 1 ; : : :; S n 4 such that: (1) S i fv 1 ; : : :; v n 2 g; (2) jS i j = n for all i; and (3) jS i S j j
Reference: [12] <author> L. G. Valiant. </author> <title> A theory of the learnable. </title> <journal> Communications of the ACM, </journal> <volume> 27(11) </volume> <pages> 1134-1142, </pages> <month> November </month> <year> 1984. </year>
Reference-contexts: 1 Introduction and Motivation The contribution of modern cryptography to research in computational learning theory has been significant: ideas and constructions from cryptography have been essential in proving many of the strongest negative results for efficient learning [4, 8, 1, 9]. In fact, virtually every intractability result in Valiant's model <ref> [12] </ref> (that is representation-independent in the sense that it fl Supported in part by an NSF Postdoctoral Fellowship. y Supported in part by NSF grant CCR-9119319. does not rely on an artificial syntactic restriction on the learning algorithm's hypotheses) has at its heart a cryptographic construction (and therefore a cryptographic assumption).

References-found: 12

