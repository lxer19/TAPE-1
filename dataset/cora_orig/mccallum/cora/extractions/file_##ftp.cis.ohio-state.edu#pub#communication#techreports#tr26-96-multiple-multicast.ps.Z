URL: file://ftp.cis.ohio-state.edu/pub/communication/techreports/tr26-96-multiple-multicast.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/wormhole_pub.html
Root-URL: 
Title: Multiple Multicast with Minimized Node Contention on Wormhole k-ary n-cube Networks  
Author: Ram Kesavan and Dhabaleswar K. Panda 
Abstract: Technical Report OSU-CISRC-4/96-TR26 A preliminary version of this paper has been presented in International Conference on Parallel Processing, Aug. 1996. Manuscript is under review by IEEE Transactions on Parallel and Distributed Systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Bar-Noy and S. Kipnis. </author> <title> Multiple Message Broadcasting in the Postal Model. </title> <booktitle> In International Parallel Processing Symposium, </booktitle> <pages> pages 463-470, </pages> <year> 1993. </year>
Reference-contexts: Efficient multicast algorithms are typically hierarchical in nature, i.e. some destinations serve as intermediate sources and forward copies of the message to other destinations, when they receive it. Typically, tree-based algorithms are used to minimize the number of communication start-ups (steps) required for multicast <ref> [1, 5, 11, 14] </ref>. These algorithms are also generally contention-free for single multicast. In order to implement multiple multicast in current parallel systems, each source node uses the same algorithm designed for single multicast and constructs its multicast tree independently.
Reference: [2] <author> M. Barnett, S. Gupta, D. G. Payne, L. Shuler, R. van de Geijn, and J. Watts. </author> <title> Interproces-sor Collective Communication Library (Intercom). </title> <booktitle> In Scalable High Performance Computing Conference, </booktitle> <pages> pages 357-364, </pages> <year> 1994. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [3] <author> N. J. Boden, D. Cohen, and et al. Myrinet: </author> <title> A Gigabit-per-Second Local Area Network. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 29-35, </pages> <month> Feb </month> <year> 1995. </year>
Reference-contexts: IBM SP1/SP2, Intel Paragon, Cray T3D, Ncube, J-Machine, and Stanford DASH are representative systems falling into this category. Gradually variations of this technique, knows as cut-through routing, are being used in networks of workstations, like Myrinet <ref> [3] </ref> as well. Distributed-memory or distributed-shared memory programming paradigms are supported on these systems. For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15].
Reference: [4] <author> R. V. Boppana, S. Chalasani, and C. S. Raghavendra. </author> <title> On Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 722-729, </pages> <year> 1994. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [5] <author> J. Bruck, R. Cypher, and C.-T. Ho. </author> <title> Multiple Message Broadcasting with Generalized Fibonacci Trees. </title> <booktitle> In Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 424-430, </pages> <year> 1992. </year>
Reference-contexts: Efficient multicast algorithms are typically hierarchical in nature, i.e. some destinations serve as intermediate sources and forward copies of the message to other destinations, when they receive it. Typically, tree-based algorithms are used to minimize the number of communication start-ups (steps) required for multicast <ref> [1, 5, 11, 14] </ref>. These algorithms are also generally contention-free for single multicast. In order to implement multiple multicast in current parallel systems, each source node uses the same algorithm designed for single multicast and constructs its multicast tree independently.
Reference: [6] <author> L. De Coster, N. Dewulf, and C.-T. Ho. </author> <title> Efficient Multi-packet Multicast Algorithms on Meshes with Wormhole and Dimension-Ordered Routing. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <pages> pages III:137-141, </pages> <month> Aug </month> <year> 1995. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems. <p> This effect lowers node contention and latency for multiple multicast as compared to the Umesh algorithm. It is to be noted that a similar reordering of the dimension-order chain has been used in [20] to develop multicast algorithms for the torus network and in <ref> [6] </ref> for multipacket multicast. However, here we use such reordering on meshes to reduce node contention for multiple multicast. Since the multicast tree is generated in exactly the same way as in the Umesh algorithm, the SPUmesh algorithm takes no more than dlog 2 De start-ups for a single multicast.
Reference: [7] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is becoming the trend in building future parallel systems due to its inherent advantages like low-latency communication and reduced communication hardware overhead <ref> [7, 16] </ref>. IBM SP1/SP2, Intel Paragon, Cray T3D, Ncube, J-Machine, and Stanford DASH are representative systems falling into this category. Gradually variations of this technique, knows as cut-through routing, are being used in networks of workstations, like Myrinet [3] as well. <p> us analyze how node contention affects the latency of multiple multicasts while using the Umesh algorithm [14] and the HL scheme [18]. 6 2.2 Contention in Existing Algorithms 2.2.1 The Umesh Algorithm The Umesh algorithm [14] uses the concept of a dimension-ordered chain () on meshes that use e-cube routing <ref> [7] </ref>. The chain is a total ordering of the elements of the set which consists of the source and all the destination nodes of the multicast. The ordering ensures zero contention for links between messages of a multicast.
Reference: [8] <author> J. Duato. </author> <title> A New Theory of Deadlock-Free Adaptive Routing in Wormhole Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(12) </volume> <pages> 1320-1331, </pages> <year> 1993. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [9] <author> S. L. Johnsson and C.-T. Ho. </author> <title> Optimum Broadcasting and Personalized Communication in Hypercubes. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 1249-1268, </pages> <month> September </month> <year> 1989. </year> <month> 41 </month>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [10] <author> Ram Kesavan and D. K. Panda. </author> <title> Minimizing Node Contention in Multiple Multicast on Worm--hole k-ary n-cube Networks. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year>
Reference: [11] <author> Y. Lan, A.-H. Esfahanian, and L. Ni. </author> <title> Multicast in Hypercube Multiprocessors. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 8 </volume> <pages> 30-41, </pages> <year> 1990. </year>
Reference-contexts: Efficient multicast algorithms are typically hierarchical in nature, i.e. some destinations serve as intermediate sources and forward copies of the message to other destinations, when they receive it. Typically, tree-based algorithms are used to minimize the number of communication start-ups (steps) required for multicast <ref> [1, 5, 11, 14] </ref>. These algorithms are also generally contention-free for single multicast. In order to implement multiple multicast in current parallel systems, each source node uses the same algorithm designed for single multicast and constructs its multicast tree independently.
Reference: [12] <author> X. Lin and L. M. Ni. </author> <title> Deadlock-free Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 116-124, </pages> <year> 1991. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [13] <author> P. K. McKinley and D. F. Robinson. </author> <title> Collective Communication in Wormhole-Routed Massively Parallel Computers. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 39-50, </pages> <month> Dec </month> <year> 1995. </year>
Reference-contexts: Distributed-memory or distributed-shared memory programming paradigms are supported on these systems. For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems <ref> [13, 16, 17] </ref>. Many multicast/broadcast algorithms have been proposed in the literature in recent years [2, 4, 6, 8, 9, 12, 14, 19]. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [14] <author> P. K. McKinley, H. Xu, A.-H. Esfahanian, and L. M. Ni. </author> <title> Unicast-based Multicast Communication in Wormhole-routed Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12) </volume> <pages> 1252-1265, </pages> <month> Dec </month> <year> 1994. </year>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems. <p> Efficient multicast algorithms are typically hierarchical in nature, i.e. some destinations serve as intermediate sources and forward copies of the message to other destinations, when they receive it. Typically, tree-based algorithms are used to minimize the number of communication start-ups (steps) required for multicast <ref> [1, 5, 11, 14] </ref>. These algorithms are also generally contention-free for single multicast. In order to implement multiple multicast in current parallel systems, each source node uses the same algorithm designed for single multicast and constructs its multicast tree independently. <p> Next, we develop algorithms for multiple multicast. For unicast-based systems, we propose a new SPUmesh (Source-Partitioned Umesh) algorithm, which uses source-position information to construct the multicast tree. This new algorithm is contention free and is as efficient as the Umesh algorithm <ref> [14] </ref> for single multicast, but clearly superior for multiple multicast. For systems supporting multidestination message-passing, we propose two different algorithms, SQHL (Source-Quadrant-based Hierarchical Leader) and SCHL (Source-Centered Hierarchical Leader). <p> Concluding remarks are made in Section 6. 2 Contention in Existing Multicast Algorithms In this section we describe how node and link contention arises when existing multicast algorithms are used to implement multiple multicast. The Umesh algorithm <ref> [14] </ref>, using unicast message passing and the HL scheme [18], using multidestination message passing, are examined. Analytical models to estimate node contention under multiple multicast are developed. <p> The destination sets of various concurrent multicasts may overlap. Efficient multicast algorithms are typically hierarchical in nature <ref> [14, 18] </ref>, where some intermediate destinations are used to forward the message to other destinations in the set. Therefore, a node participating in multiple multicasts may need to forward multiple messages during a given period of time. <p> The overall latency of the multiple multicast pattern will depend on these nodes and the degree of node contention they experience. Let us analyze how node contention affects the latency of multiple multicasts while using the Umesh algorithm <ref> [14] </ref> and the HL scheme [18]. 6 2.2 Contention in Existing Algorithms 2.2.1 The Umesh Algorithm The Umesh algorithm [14] uses the concept of a dimension-ordered chain () on meshes that use e-cube routing [7]. <p> Let us analyze how node contention affects the latency of multiple multicasts while using the Umesh algorithm <ref> [14] </ref> and the HL scheme [18]. 6 2.2 Contention in Existing Algorithms 2.2.1 The Umesh Algorithm The Umesh algorithm [14] uses the concept of a dimension-ordered chain () on meshes that use e-cube routing [7]. The chain is a total ordering of the elements of the set which consists of the source and all the destination nodes of the multicast. <p> We prove below that the SPUmesh algorithm, like the Umesh algorithm, guarantees zero link contention among the messages for a single multicast. 3.2 Contention Free Property for Single Multicast The Umesh algorithm guarantees zero link contention among messages of a single multicast <ref> [14] </ref> for wormhole systems with dimension ordering. Let us use the binary relation "dimension order", 17 denoted as &lt; d , as defined in [14]. <p> the messages for a single multicast. 3.2 Contention Free Property for Single Multicast The Umesh algorithm guarantees zero link contention among messages of a single multicast <ref> [14] </ref> for wormhole systems with dimension ordering. Let us use the binary relation "dimension order", 17 denoted as &lt; d , as defined in [14]. According to the definition, if u &lt; d v &lt; d x &lt; d y, then the path taken by a message from u to v and the path taken by a message from x to y are arc disjoint.
Reference: [15] <author> Message Passing Interface Forum. </author> <title> MPI: A Message-Passing Interface Standard, </title> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Distributed-memory or distributed-shared memory programming paradigms are supported on these systems. For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) <ref> [15] </ref>. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years [2, 4, 6, 8, 9, 12, 14, 19]. These algorithms have been primarily developed for single multicast.
Reference: [16] <author> L. Ni and P. K. McKinley. </author> <title> A Survey of Wormhole Routing Techniques in Direct Networks. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 62-76, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is becoming the trend in building future parallel systems due to its inherent advantages like low-latency communication and reduced communication hardware overhead <ref> [7, 16] </ref>. IBM SP1/SP2, Intel Paragon, Cray T3D, Ncube, J-Machine, and Stanford DASH are representative systems falling into this category. Gradually variations of this technique, knows as cut-through routing, are being used in networks of workstations, like Myrinet [3] as well. <p> Distributed-memory or distributed-shared memory programming paradigms are supported on these systems. For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems <ref> [13, 16, 17] </ref>. Many multicast/broadcast algorithms have been proposed in the literature in recent years [2, 4, 6, 8, 9, 12, 14, 19]. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems. <p> In this paper we take on these challenges. We develop efficient multicast algorithms on k-ary n-cube wormhole networks, which satisfy the above objectives. We consider systems with unicast as well as multidestination message-passing <ref> [16, 18] </ref>. First we identify and analyze the severity of node contention when algorithms designed for single multicast are applied to multiple multicast. We develop analytical models for estimating such node contention for completely and randomly overlapped destination sets.
Reference: [17] <author> D. K. Panda. </author> <title> Issues in Designing Efficient and Practical Algorithms for Collective Communication in Wormhole-Routed Systems. </title> <booktitle> In 1995 Workshop on Challenges for Parallel Processing, </booktitle> <pages> pages 8-15, </pages> <year> 1995. </year>
Reference-contexts: Distributed-memory or distributed-shared memory programming paradigms are supported on these systems. For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems <ref> [13, 16, 17] </ref>. Many multicast/broadcast algorithms have been proposed in the literature in recent years [2, 4, 6, 8, 9, 12, 14, 19]. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [18] <author> D. K. Panda, S. Singal, and P. Prabhakaran. </author> <title> Multidestination Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pages 131-145, </pages> <year> 1994. </year>
Reference-contexts: In this paper we take on these challenges. We develop efficient multicast algorithms on k-ary n-cube wormhole networks, which satisfy the above objectives. We consider systems with unicast as well as multidestination message-passing <ref> [16, 18] </ref>. First we identify and analyze the severity of node contention when algorithms designed for single multicast are applied to multiple multicast. We develop analytical models for estimating such node contention for completely and randomly overlapped destination sets. <p> The SCHL algorithm uses source-position information as well as load-balancing techniques on network links along different directions to minimize multiple multicast latency. Both these algorithms are significantly better than the HL scheme <ref> [18] </ref> for multiple multicast. We also compare the best of both kinds of algorithms (SPUmesh and SCHL) to study the benefits of multi-destination message-passing over unicast message-passing for multiple multicast. It is demonstrated that, similar to the HL scheme [18] for single multicast, the SCHL scheme is also capable of reducing <p> Both these algorithms are significantly better than the HL scheme <ref> [18] </ref> for multiple multicast. We also compare the best of both kinds of algorithms (SPUmesh and SCHL) to study the benefits of multi-destination message-passing over unicast message-passing for multiple multicast. It is demonstrated that, similar to the HL scheme [18] for single multicast, the SCHL scheme is also capable of reducing multiple multicast latency as the degree of multicast increases. The rest of the paper is organized as follows. <p> Concluding remarks are made in Section 6. 2 Contention in Existing Multicast Algorithms In this section we describe how node and link contention arises when existing multicast algorithms are used to implement multiple multicast. The Umesh algorithm [14], using unicast message passing and the HL scheme <ref> [18] </ref>, using multidestination message passing, are examined. Analytical models to estimate node contention under multiple multicast are developed. <p> The destination sets of various concurrent multicasts may overlap. Efficient multicast algorithms are typically hierarchical in nature <ref> [14, 18] </ref>, where some intermediate destinations are used to forward the message to other destinations in the set. Therefore, a node participating in multiple multicasts may need to forward multiple messages during a given period of time. <p> The overall latency of the multiple multicast pattern will depend on these nodes and the degree of node contention they experience. Let us analyze how node contention affects the latency of multiple multicasts while using the Umesh algorithm [14] and the HL scheme <ref> [18] </ref>. 6 2.2 Contention in Existing Algorithms 2.2.1 The Umesh Algorithm The Umesh algorithm [14] uses the concept of a dimension-ordered chain () on meshes that use e-cube routing [7]. <p> The nodes with contention are highlighted. 2.2.2 The HL Scheme Multicasting with multidestination message passing while using the HL scheme <ref> [18] </ref> also has node contention problem for multiple multicast. Let us consider two concurrent multicasts, A and B, with identical source-destination sets on a 2D mesh. Let their respective sources be at (2,3) and (4,4), as shown in Fig. 3. <p> Let their respective sources be at (2,3) and (4,4), as shown in Fig. 3. It can be observed that with multidestination message passing A and B have the same level 2 and level 1 leader sets (L 2 and L 1 ) <ref> [18] </ref>. Sequentialization of worms (unicast as well as multidestination) corresponding to multicasts A and B at the L 2 and L 1 nodes leads to high latency for the overall multiple multicast operation. <p> Proof: Based on a given source-destination set, let us consider a node x from the highest level leader set, L g , 1 g n <ref> [18] </ref>. This node undergoes some start-ups when every source uses the Umesh algorithm to multicast to nodes of L g . In the worst case, if x is the half-node for the Umesh phase of each multicast, x undergoes dlog 2 jL g j 2 e start-ups for each multicast. <p> They are shown to be better than the HL scheme <ref> [18] </ref> for multiple multicast. 4.1 The Source Quadrant-based Hierarchical Leader (SQHL) Scheme 4.1.1 The Algorithm Let us consider a multicast pattern from source s to a destination set D. Let L 0 = D [ fsg. <p> A 16 fi 16 mesh was used for the 2D simulations and 6 fi 6 fi 6 mesh for the 3D simulations. The t node parameter for the multidestination simulations was fixed at 40 nanoseconds, to take care of the additional routing overhead compared to unicast message passing <ref> [18] </ref>. To keep the comparison fair, the number of consumption channels was fixed at 4 for 2D and 6 for 3D in both unicast and multidestination schemes [18]. Each experiment was carried out 30 times to obtain average results. <p> parameter for the multidestination simulations was fixed at 40 nanoseconds, to take care of the additional routing overhead compared to unicast message passing <ref> [18] </ref>. To keep the comparison fair, the number of consumption channels was fixed at 4 for 2D and 6 for 3D in both unicast and multidestination schemes [18]. Each experiment was carried out 30 times to obtain average results. For each simulation we considered the two cases: a) worst case scenario of total overlap of destination sets and b) random overlap of destination sets. <p> It can be observed in Fig. 17 (a), that for large d, the SCHL scheme is about 2 times better than the the SQHL scheme, and about 6-7 times better than the HL scheme. A property of the HL scheme is that latency reduces with increase in d <ref> [18] </ref>. This can be noted from Fig. 17 (a), as the graphs for d = 200 are lower than the graphs for d = 128. This basic property of the HL scheme is best exploited by the SCHL scheme.
Reference: [19] <author> J. Y. L. Park, H. A. Choi, N. Nupairoj, and L. M. Ni. </author> <title> Construction of Optimal Multicast Trees Based on the Parameterized Communication Model. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <address> Chicago, IL, </address> <month> Aug </month> <year> 1996. </year> <month> 42 </month>
Reference-contexts: For efficient support of the above paradigms, these systems require fast implementation of collective communication operations (broadcast, multicast, global combine and barrier synchronization) [15]. Multicast/broadcast is a common collective communication operation in parallel systems [13, 16, 17]. Many multicast/broadcast algorithms have been proposed in the literature in recent years <ref> [2, 4, 6, 8, 9, 12, 14, 19] </ref>. These algorithms have been primarily developed for single multicast. However, multiple multicast operations (i.e. two or more multicasts executing simultaneously) occur frequently in parallel systems.
Reference: [20] <author> D. F. Robinson, P. K. McKinley, and B. H. C. Cheng. </author> <title> Optimal Multicast Communication in Wormhole-Routed Torus Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pages 1029-1042, </pages> <month> Oct </month> <year> 1995. </year>
Reference-contexts: Changing to 1 causes the multicast pattern to be dependent on the position of the source. This effect lowers node contention and latency for multiple multicast as compared to the Umesh algorithm. It is to be noted that a similar reordering of the dimension-order chain has been used in <ref> [20] </ref> to develop multicast algorithms for the torus network and in [6] for multipacket multicast. However, here we use such reordering on meshes to reduce node contention for multiple multicast.
Reference: [21] <author> H.D. Schwetman. </author> <title> Using CSIM to Model Complex Systems. </title> <booktitle> In Proceedings of the 1988 Winter Simulation Conference, </booktitle> <pages> pages 246-253, </pages> <year> 1988. </year> <month> 43 </month>
Reference-contexts: A flit-level wormhole-routed simulator WORMULSim (built using CSIM <ref> [21] </ref>) was used to model the communication steps and evaluate the algorithms. For all the experiments, we assumed system parameters representing the current trend in technology.
References-found: 21

