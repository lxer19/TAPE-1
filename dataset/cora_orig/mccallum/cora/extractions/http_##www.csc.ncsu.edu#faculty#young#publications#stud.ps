URL: http://www.csc.ncsu.edu/faculty/young/publications/stud.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/young/publications/papers.html
Root-URL: http://www.csc.ncsu.edu
Title: Characterizing Formal Properties of Discourse Planning Systems  
Note: Subject Areas: Discourse Planning  
Abstract: Summary: Previous work in discourse planning has made use of domain-independent planning techniques without providing a characterization of the formal properties of their planning algorithms. This paper describes two formal properties of discourse planners and their relevance to discourse generation. We describe previous systems in terms of these properties and suggest that an adequate formal characterization of discourse planning systems is essential to understanding their limitations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Philip E. Agre and David Chapman. Pengi: </author> <title> An implementation of a theory of activity. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 268-272, </pages> <address> Seattle, WA, </address> <year> 1987. </year> <title> 4 Formally, DPOCL is primitive complete, that is, it can generate plans to account for all possible executable-step solutions to a problem. </title>
Reference-contexts: As has been shown [14, 15], a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems <ref> [1, 5, 11] </ref> or systems that rely on plan schemas [13]. STEP1 a b STEP2 bd STEP3 e STEP4 d f STEP6 g not (a) STEP7 h a STEP5 h STEP8 h e cannot be constructed by a particular algorithm, those solutions cannot be provided when replanning is necessary.
Reference: [2] <author> Richard Alterman. </author> <title> Adaptive planning. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 393-421, </pages> <year> 1988. </year>
Reference-contexts: As has been shown [14, 15], a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners <ref> [8, 2] </ref>, reactive systems [1, 5, 11] or systems that rely on plan schemas [13].
Reference: [3] <author> Anonymous authors. </author> <title> Decomposition and causality in partial order planning. </title> <note> Submitted to AAAI94. </note>
Reference-contexts: Second, the planner must consider the manner in which the steps of a subplan achieve the goals of the parent <ref> [17, 3] </ref>. <p> Our current work centers on the use of the DPOCL plan representation to provide a definition for the intentional and informational relationships between communicative acts in discourse plans. For a formal description of the DPOCL algorithm including proofs of soundness and completeness, see <ref> [3] </ref>.
Reference: [4] <author> Anonymous authors. </author> <title> Towards a principled representation for discourse plans. </title> <note> Submitted to ACL94. </note>
Reference-contexts: A formal and exhaustive description of the ways that discourse planners can be unsound or incomplete is beyond the scope of this paper. We have presented a partial characterization of these properties for several existing systems. Our recent work <ref> [4] </ref> describes a discourse planning algorithm, called DPOCL, that is provably sound and complete. 4 The algorithm is a hierarchical extension to recent domain-independent planning work, providing an explicit representation of the causal and decompo-sitional structure of discourse plans.
Reference: [5] <author> Rodney A. Brooks. </author> <title> Intelligence without representation. </title> <journal> Artificial Intelligence, </journal> <volume> 47 </volume> <pages> 139-159, </pages> <year> 1991. </year>
Reference-contexts: As has been shown [14, 15], a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems <ref> [1, 5, 11] </ref> or systems that rely on plan schemas [13]. STEP1 a b STEP2 bd STEP3 e STEP4 d f STEP6 g not (a) STEP7 h a STEP5 h STEP8 h e cannot be constructed by a particular algorithm, those solutions cannot be provided when replanning is necessary.
Reference: [6] <author> Allison Cawsey. </author> <title> Explanation and Interactionb: The Computer Generation of Explanatory Dialogs. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: Finally, we briefly discuss a discourse planner that demonstrates these properties. Representing Discourse Plans and Communicative Actions Many previous discourse planning systems have been loosely based on the original NOAH [16] approach to hierarchical planning <ref> [6, 10, 12, 14] </ref>. As a result, these systems share a basic model of planning. In these systems, an action is represented by an operator describing the action's preconditions and effects as well as the ways that the effects of the action can be achieved by sub-plans for the action. <p> Unless the connection between the effects of an abstract action and the effects of its sub-plan is made explicit the planner cannot ensure that the abstract action's effects are achieved. Properties of Discourse Planning Systems While a complete analysis of the planning algorithms used by previous systems <ref> [6, 10, 12, 14] </ref> is beyond the scope of this paper, several properties of these algorithms are straightforward to characterize. 3 This figure represents a plan schematically as a tree. The communicative actions in the plan are the nodes in the tree. <p> The hierarchical structure of the plan is indicated by the arcs of the graph. First, these planners do not guarantee that the modal truth criteria hold prior to a step's execution and thus they are not sound. Only Maybury [12] and Cawsey <ref> [6] </ref> discuss the need to satisfy an action's preconditions. However, Maybury's algorithm does not attempt to establish preconditions and, as Cawsey points out, her system does not explicitly represent the effects of actions, making modal truth criteria impossible to determine.
Reference: [7] <author> David Chapman. </author> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32, </volume> <year> 1987. </year>
Reference-contexts: While these systems have been successful at generating appropriately structured plans for specific domains, this work has ignored the analysis of the formal properties of the planning algorithms that produce them. As has been pointed out by Sacerdoti and others <ref> [16, 7] </ref>, NOAH, and consequently those discourse planners based on it, use ad hoc procedures for the construction of plans. As a result, the formal properties of these planning algorithms are difficult to characterize. This paper makes two claims about the formal properties of discourse planning algorithms. <p> First, for every step S n in a plan, the planner must determine the modal truth criterion <ref> [7] </ref> of each of S n 's precondition's. That is, the conditions under which each precondition will be true just prior to S n 's execution.
Reference: [8] <author> Kristian Hammond. </author> <title> Explaining and repairing plans that fail. </title> <journal> Artificial Intelligence, </journal> <volume> 45(1-2):172-228, </volume> <year> 1990. </year>
Reference-contexts: As has been shown [14, 15], a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners <ref> [8, 2] </ref>, reactive systems [1, 5, 11] or systems that rely on plan schemas [13].
Reference: [9] <author> Jerry Hobbs. </author> <title> On the coherence and structure of discourse. </title> <type> Technical Report CSLI-85-37, </type> <institution> Center for the Study of Language and Information, </institution> <year> 1985. </year>
Reference-contexts: STEP1 a b STEP2 bd STEP3 e STEP4 d f STEP6 g not (a) STEP7 h a STEP5 h STEP8 h e cannot be constructed by a particular algorithm, those solutions cannot be provided when replanning is necessary. Consider those discourses in which individual utterances play several roles. Hobbs <ref> [9, pages 28-30] </ref>, for instance, provides a lengthy example of such a discourse. We provide a somewhat shorter example below: Lucentio has asked for Bianca's hand. He always considered her Signior Baptista's fairest daughter. That is also why Lucentio always chose her to model for his paintings.
Reference: [10] <author> Eduard Hovy. </author> <title> Approaches to the planning of coherent text. In Cecile Paris, </title> <editor> William Swartout, and Mann, editors, </editor> <booktitle> Natural Language Generation in Artificial Intelligence and Computational Linguistics. </booktitle> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year>
Reference-contexts: Finally, we briefly discuss a discourse planner that demonstrates these properties. Representing Discourse Plans and Communicative Actions Many previous discourse planning systems have been loosely based on the original NOAH [16] approach to hierarchical planning <ref> [6, 10, 12, 14] </ref>. As a result, these systems share a basic model of planning. In these systems, an action is represented by an operator describing the action's preconditions and effects as well as the ways that the effects of the action can be achieved by sub-plans for the action. <p> Unless the connection between the effects of an abstract action and the effects of its sub-plan is made explicit the planner cannot ensure that the abstract action's effects are achieved. Properties of Discourse Planning Systems While a complete analysis of the planning algorithms used by previous systems <ref> [6, 10, 12, 14] </ref> is beyond the scope of this paper, several properties of these algorithms are straightforward to characterize. 3 This figure represents a plan schematically as a tree. The communicative actions in the plan are the nodes in the tree. <p> Second, these planners are not complete. As mentioned above, all of these systems use tree-structured plan representations. As a result, they cannot produce discourse plans where individual components play a role in more than one subplan. In addition, Maybury and Hovy <ref> [10] </ref> restrict steps in subplans to be totally ordered with respect to one another. For total-order planners to be complete they must be able to construct every possible step ordering. Unless operators for every ordering of steps in every subplan are provided, these systems cannot be complete.
Reference: [11] <author> Leslie P. Kaelbling and Stanley J. Rosenschein, </author> <title> Actions and Planning in Embedded Agents, </title> <editor> In Pattie Maes, editor, </editor> <title> Designing Autonomous Agents: Theory and Practice from Biology to Engineering and Back, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <pages> pages 35-48. </pages>
Reference-contexts: As has been shown [14, 15], a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems <ref> [1, 5, 11] </ref> or systems that rely on plan schemas [13]. STEP1 a b STEP2 bd STEP3 e STEP4 d f STEP6 g not (a) STEP7 h a STEP5 h STEP8 h e cannot be constructed by a particular algorithm, those solutions cannot be provided when replanning is necessary.
Reference: [12] <author> Mark Maybury. </author> <title> Communicative acts for explanation generation. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 37, </volume> <year> 1992. </year>
Reference-contexts: Finally, we briefly discuss a discourse planner that demonstrates these properties. Representing Discourse Plans and Communicative Actions Many previous discourse planning systems have been loosely based on the original NOAH [16] approach to hierarchical planning <ref> [6, 10, 12, 14] </ref>. As a result, these systems share a basic model of planning. In these systems, an action is represented by an operator describing the action's preconditions and effects as well as the ways that the effects of the action can be achieved by sub-plans for the action. <p> Unless the connection between the effects of an abstract action and the effects of its sub-plan is made explicit the planner cannot ensure that the abstract action's effects are achieved. Properties of Discourse Planning Systems While a complete analysis of the planning algorithms used by previous systems <ref> [6, 10, 12, 14] </ref> is beyond the scope of this paper, several properties of these algorithms are straightforward to characterize. 3 This figure represents a plan schematically as a tree. The communicative actions in the plan are the nodes in the tree. <p> The hierarchical structure of the plan is indicated by the arcs of the graph. First, these planners do not guarantee that the modal truth criteria hold prior to a step's execution and thus they are not sound. Only Maybury <ref> [12] </ref> and Cawsey [6] discuss the need to satisfy an action's preconditions. However, Maybury's algorithm does not attempt to establish preconditions and, as Cawsey points out, her system does not explicitly represent the effects of actions, making modal truth criteria impossible to determine.
Reference: [13] <author> Kathleen R. McKeown. </author> <title> Discourse strategies for generating natural-language text. </title> <journal> Artificial Intelligence, </journal> <volume> 27, </volume> <year> 1985. </year>
Reference-contexts: Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems [1, 5, 11] or systems that rely on plan schemas <ref> [13] </ref>. STEP1 a b STEP2 bd STEP3 e STEP4 d f STEP6 g not (a) STEP7 h a STEP5 h STEP8 h e cannot be constructed by a particular algorithm, those solutions cannot be provided when replanning is necessary. Consider those discourses in which individual utterances play several roles.
Reference: [14] <author> Johanna Moore and Cecile Paris. </author> <title> Planning text for advisory dialogs: Capturing intentional and rhetorical information. </title> <journal> Computational Linguistics, </journal> <volume> 19(4), </volume> <year> 1993. </year>
Reference-contexts: Finally, we briefly discuss a discourse planner that demonstrates these properties. Representing Discourse Plans and Communicative Actions Many previous discourse planning systems have been loosely based on the original NOAH [16] approach to hierarchical planning <ref> [6, 10, 12, 14] </ref>. As a result, these systems share a basic model of planning. In these systems, an action is represented by an operator describing the action's preconditions and effects as well as the ways that the effects of the action can be achieved by sub-plans for the action. <p> Second, discourse planners are often called upon to find more than one solution for a planning problem. As has been shown <ref> [14, 15] </ref>, a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems [1, 5, 11] or systems that rely on plan schemas [13]. <p> Unless the connection between the effects of an abstract action and the effects of its sub-plan is made explicit the planner cannot ensure that the abstract action's effects are achieved. Properties of Discourse Planning Systems While a complete analysis of the planning algorithms used by previous systems <ref> [6, 10, 12, 14] </ref> is beyond the scope of this paper, several properties of these algorithms are straightforward to characterize. 3 This figure represents a plan schematically as a tree. The communicative actions in the plan are the nodes in the tree.
Reference: [15] <author> Johanna Moore and Martha Pollack. </author> <title> A problem for RST: The need for multi-level discourse analysis. </title> <journal> Computational Linguistics, </journal> <volume> 18(4), </volume> <year> 1993. </year>
Reference-contexts: Second, discourse planners are often called upon to find more than one solution for a planning problem. As has been shown <ref> [14, 15] </ref>, a discourse planning system must be capable of effective replanning in cases where previous discourse plans have not succeeded. Again, if a class of solutions 1 This is in contrast to case-based planners [8, 2], reactive systems [1, 5, 11] or systems that rely on plan schemas [13].
Reference: [16] <author> Earl Sacerdoti. </author> <title> A Structure for Plans and Behavior. </title> <type> PhD thesis, </type> <institution> Stanford University Department of Computer Science, </institution> <year> 1975. </year>
Reference-contexts: While these systems have been successful at generating appropriately structured plans for specific domains, this work has ignored the analysis of the formal properties of the planning algorithms that produce them. As has been pointed out by Sacerdoti and others <ref> [16, 7] </ref>, NOAH, and consequently those discourse planners based on it, use ad hoc procedures for the construction of plans. As a result, the formal properties of these planning algorithms are difficult to characterize. This paper makes two claims about the formal properties of discourse planning algorithms. <p> After describing these properties and their relevance to discourse planners, we discuss the formal properties of several previous implementations. Finally, we briefly discuss a discourse planner that demonstrates these properties. Representing Discourse Plans and Communicative Actions Many previous discourse planning systems have been loosely based on the original NOAH <ref> [16] </ref> approach to hierarchical planning [6, 10, 12, 14]. As a result, these systems share a basic model of planning.
Reference: [17] <author> Q. Yang. </author> <title> Formalizing planning knowledge for a hierarchical planner. </title> <journal> Computational Intelligence, </journal> <volume> 6, </volume> <year> 1990. </year>
Reference-contexts: Second, the planner must consider the manner in which the steps of a subplan achieve the goals of the parent <ref> [17, 3] </ref>.
References-found: 17

