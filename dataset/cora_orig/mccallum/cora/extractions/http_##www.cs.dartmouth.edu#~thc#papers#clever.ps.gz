URL: http://www.cs.dartmouth.edu/~thc/papers/clever.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~thc/papers.html
Root-URL: http://www.cs.dartmouth.edu
Email: thc@cs.dartmouth.edu kristin@monitor.com  
Title: Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2  
Author: Thomas H. Cormen Kristin Bruhl 
Address: Cambridge, Massachusetts  
Affiliation: Dartmouth College Monitor Company Department of Computer Science  
Abstract: fl Supported in part by funds from Dartmouth College and in part by the National Science Foundation under Grant CCR-9308667. y Work performed while the author was at Dartmouth College [3]. A preliminary version of this work appeared in the 7th Annual ACM Symposium on Parallel Algorithms and Architectures, July 1995. Send correspondence concerning this paper to Tom Cormen, Department of Computer Science, Dartmouth Col lege, 6211 Sudikoff Laboratory, Hanover, NH 03755-3510. Email address: thc@cs.dartmouth.edu. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, A. K. Chandra, and M. Snir. </author> <title> Hierarchical memory with block transfer. </title> <booktitle> In Proceedings of the 28th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 204-216, </pages> <month> Oct. </month> <year> 1987. </year>
Reference-contexts: Suppose we wish to compute the target index corresponding to each source index, but we are free to choose any order for the N source 3 BPC permutations, described by Nassimi and Sahni [15] are also known as dimension permutations [12] or, when the complement vector is 0, rational permutations <ref> [1] </ref>. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 9 indices. This situation is in fact similar to what we encounter in performing BMMC permutations on the MasPar MP-2.
Reference: [2] <author> R. Boppana and C. S. Raghavendra. </author> <title> Optimal self routing of linear-complement permutations in hypercubes. </title> <booktitle> In Proceedings of the 5th Distributed Memory Conference, </booktitle> <pages> pages 800-808, </pages> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: To the best of our knowledge, this is the first study of BMMC permutation methods on a machine such as the MasPar MP-2, and it is the first experimental study of BMMC permutation methods on any platform. Algorithms have appeared for performing BMMC permutations on hypercubes <ref> [2, 11] </ref>, meshes [17], Omega networks 1 [13], and expanded delta networks [19], and on parallel disk systems [8]. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. <p> Note that there are two matrices|quite different from each 2 BMMC permutations are also known as affine permutations [11, 17] or linear-complement permutations <ref> [2] </ref>. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 7 other|in this example. The matrix of data is 16 fi 4 (and hence it has 64 entries), and the type of each entry is unspecified.
Reference: [3] <author> K. Bruhl. </author> <title> BMMC permutations on a DECmpp 12000/Sx 2000. </title> <type> Technical Report PCS-TR94-224, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> July </month> <year> 1994. </year> <title> Senior thesis. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 37 </title>
Reference: [4] <author> S. Chawla and D. Healy. </author> <title> The wavelet packet best basis algorithm: A fast parallel implementation on the MP-2 for real-time MRI. </title> <type> Technical Report PCS-TR96-271, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Finally, we are pleased to note that the PE method has been adapted to speed up a real-time magnetic resonance imaging (MRI) program. Chawla and Healy <ref> [4] </ref> perform a fixed BMMC permutation within their MRI code, and a simple variation of the PE method sped up their code. Acknowledgments The authors are indebted to Raghu Subramanian and Brian Alleyne for their help in understanding the MasPar MP-2 global router.
Reference: [5] <author> T. H. Cormen. </author> <title> Virtual Memory for Data-Parallel Computing. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1992. </year> <note> Available as Technical Report MIT/LCS/TR-559. </note>
Reference-contexts: This method speeds up target virtual-processor calculation in that each target virtual-processor number is formed from the previous one by a simple calculation. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 4 3. The PE method adapts a block BMMC algorithm <ref> [5, 6] </ref> that was originally designed for parallel disk systems to treat the PEs, rather than disks, as independent devices. It produces less congestion at ports of the global router than the naive method. 4. <p> Block BMMC algorithm for independent devices The remaining methods adapt the block BMMC algorithm <ref> [5, 6] </ref> for parallel disk systems. This algorithm performs BMMC permutations on data that reside on D independent devices. By independent, we mean that we can access data from a different location within each device simultane Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 18 ously. <p> We won't prove the correctness of this method here; see <ref> [5, 6] </ref> for a proof. We find a 1-permutable set in four steps: 1. Find a set S of "basis" columns for the last d rows of A. <p> Given T and U , define a permutation R on f0; 1; : : : ; D 1g. See <ref> [5, 6] </ref> for details. 4.
Reference: [6] <author> T. H. Cormen. </author> <title> Fast permuting in disk arrays. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 17(1-2):41-57, </volume> <month> Jan. and Feb. </month> <year> 1993. </year>
Reference-contexts: This method speeds up target virtual-processor calculation in that each target virtual-processor number is formed from the previous one by a simple calculation. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 4 3. The PE method adapts a block BMMC algorithm <ref> [5, 6] </ref> that was originally designed for parallel disk systems to treat the PEs, rather than disks, as independent devices. It produces less congestion at ports of the global router than the naive method. 4. <p> Block BMMC algorithm for independent devices The remaining methods adapt the block BMMC algorithm <ref> [5, 6] </ref> for parallel disk systems. This algorithm performs BMMC permutations on data that reside on D independent devices. By independent, we mean that we can access data from a different location within each device simultane Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 18 ously. <p> We won't prove the correctness of this method here; see <ref> [5, 6] </ref> for a proof. We find a 1-permutable set in four steps: 1. Find a set S of "basis" columns for the last d rows of A. <p> Given T and U , define a permutation R on f0; 1; : : : ; D 1g. See <ref> [5, 6] </ref> for details. 4.
Reference: [7] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1990. </year>
Reference-contexts: The total time for this code, therefore, is bounded Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 10 above by n1 X N 1 X i ! using the identity P 1 i=0 ia i = a=(1 a) 2 <ref> [7, p. 44] </ref> with a = 1=2. Thus, the amortized time to compute each target index is O (1). 3 Machine architecture In this section, we describe the MasPar MP-2, paying special attention to its array of parallel processors [10].
Reference: [8] <author> T. H. Cormen, T. Sundquist, and L. F. Wisniewski. </author> <title> Asymptotically tight bounds for performing BMMC permutations on parallel disk systems. </title> <type> Technical Report PCS-TR94-223, </type> <institution> Dart-mouth College Department of Computer Science, </institution> <month> July </month> <year> 1994. </year> <note> Preliminary version appeared in Proceedings of the 5th Annual ACM Symposium on Parallel Algorithms and Architectures. Revised version to appear in SIAM Journal on Computing. </note>
Reference-contexts: Algorithms have appeared for performing BMMC permutations on hypercubes [2, 11], meshes [17], Omega networks 1 [13], and expanded delta networks [19], and on parallel disk systems <ref> [8] </ref>. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. The time to compute the communication patterns is so high, however, that their method is practical only as an offline algorithm. <p> We also adopt the notation R (A) c = fz : z = y c for some y 2 R (A)g : That is, R (A) c is the exclusive-or of the range of A and a fixed vector c. From <ref> [8] </ref>, we have the following lemma. Lemma 1 Let A be any p fi q matrix whose entries are drawn from f0; 1g, let c be any p-vector whose entries are drawn from f0; 1g, and let r = rank A. Then jR (A) cj = 2 r .
Reference: [9] <institution> Digital Equipment Corporation, Maynard, Massachusetts. </institution> <note> DECmpp Programming Language (ANSI) Reference Manual, </note> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: The results might have been rather different had the authors been able to program the Mas-Par MP-2 at a different level. All our code is written in either C or MPL <ref> [9] </ref>, a data-parallel derivative of ANSI C used on the MP-2. Ultimately, decisions about the order in which data are actually admitted to the global router are made by low-level system code. <p> If more than one PE in a cluster is sending or receiving data through the global router, communications for these PEs are "serialized in a deterministically repeatable but unspecified way" Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 12 <ref> [9, p. 1-30] </ref>. (The MPL reference manual uses this description only for one-to-many or many-to-one connections among PEs, but it is true for communications among clusters, too.) The serialization order is decided by the system; the programmer has no control over it other than to make separate requests to the router.
Reference: [10] <institution> Digital Equipment Corporation, Maynard, Massachusetts. </institution> <note> DECmpp Programming Language (ANSI) User's Guide, </note> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Thus, the amortized time to compute each target index is O (1). 3 Machine architecture In this section, we describe the MasPar MP-2, paying special attention to its array of parallel processors <ref> [10] </ref>. For concrete examples, we will use the 2048-processor machine (named cascade) installed at Dartmouth. (The machine used at Dartmouth was actually a DECmpp 12000/Sx 2000, which is identical to a MasPar MP-2.
Reference: [11] <author> A. Edelman, S. Heller, and S. L. Johnsson. </author> <title> Index transformation algorithms in a linear algebra framework. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12) </volume> <pages> 1302-1309, </pages> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: To the best of our knowledge, this is the first study of BMMC permutation methods on a machine such as the MasPar MP-2, and it is the first experimental study of BMMC permutation methods on any platform. Algorithms have appeared for performing BMMC permutations on hypercubes <ref> [2, 11] </ref>, meshes [17], Omega networks 1 [13], and expanded delta networks [19], and on parallel disk systems [8]. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. <p> Note that there are two matrices|quite different from each 2 BMMC permutations are also known as affine permutations <ref> [11, 17] </ref> or linear-complement permutations [2]. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 7 other|in this example. The matrix of data is 16 fi 4 (and hence it has 64 entries), and the type of each entry is unspecified.
Reference: [12] <author> S. L. Johnsson and C.-T. Ho. </author> <title> Generalized shu*e permutations on boolean cubes. </title> <type> Technical Report TR-04-91, </type> <institution> Harvard University Center for Research in Computing Technology, </institution> <month> Feb. </month> <year> 1991. </year> <title> Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 38 </title>
Reference-contexts: Suppose we wish to compute the target index corresponding to each source index, but we are free to choose any order for the N source 3 BPC permutations, described by Nassimi and Sahni [15] are also known as dimension permutations <ref> [12] </ref> or, when the complement vector is 0, rational permutations [1]. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 9 indices. This situation is in fact similar to what we encounter in performing BMMC permutations on the MasPar MP-2.
Reference: [13] <author> J. Keohane and R. E. Stearns. </author> <title> Routing linear permutations though the Omega network in two passes. </title> <booktitle> In Proceedings of the 2nd Symposium on the Frontiers of Massively Parallel Computation, </booktitle> <pages> pages 479-482, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: Algorithms have appeared for performing BMMC permutations on hypercubes [2, 11], meshes [17], Omega networks 1 <ref> [13] </ref>, and expanded delta networks [19], and on parallel disk systems [8]. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. <p> A permutation is a one-to-one mapping of a source vector to a target vector. A BMMC permutation on N elements, where N is an integer power of 2, is defined by an affine transformation 1 The algorithm in <ref> [13] </ref> is for linear permutations, which are a large subclass of BMMC permutations.
Reference: [14] <author> H. Munthe-Kaas. </author> <title> An algebraic theory for regular data mappings on parallel computers. </title> <type> Unpublished manuscript, </type> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Both these strategies apply only to the cluster method, however, since they assume only one element per network port. Because of the cluster method's high loop overhead, these strategies do not pay off. They may be worthwhile if they are implemented at the level of pp_rsend (). Munthe-Kaas <ref> [14] </ref> has investigated using the X-Net for routing BMMC permutations. This approach has the advantage of bypassing the cluster bottleneck, and so it may yet be possible to improve the routing time from the level of MPL.
Reference: [15] <author> D. Nassimi and S. Sahni. </author> <title> An optimal routing algorithm for mesh-connected parallel computers. </title> <journal> J. ACM, </journal> <volume> 27(1) </volume> <pages> 6-29, </pages> <month> Jan. </month> <year> 1980. </year>
Reference-contexts: Gray-code ordering of source indices The column-major representation has one additional advantage. Suppose we wish to compute the target index corresponding to each source index, but we are free to choose any order for the N source 3 BPC permutations, described by Nassimi and Sahni <ref> [15] </ref> are also known as dimension permutations [12] or, when the complement vector is 0, rational permutations [1]. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 9 indices. This situation is in fact similar to what we encounter in performing BMMC permutations on the MasPar MP-2.
Reference: [16] <author> I. D. Scherson and R. Subramanian. </author> <title> Efficient off-line routing of permutations on restricted access expanded delta networks. </title> <booktitle> In Proceedings of the 7th International Parallel Processing Symposium, </booktitle> <pages> pages 284-290, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Algorithms have appeared for performing BMMC permutations on hypercubes [2, 11], meshes [17], Omega networks 1 [13], and expanded delta networks [19], and on parallel disk systems [8]. Scherson and Subramanian <ref> [16] </ref> developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. The time to compute the communication patterns is so high, however, that their method is practical only as an offline algorithm. <p> Scherson and Subramanian <ref> [16] </ref> have investigated how to perform general permutations quickly on the MasPar MP-2 global routing network, and the present authors, along with Len Wisniewski and Tom Sundquist at Dartmouth, have fast methods for performing BMMC permutations on the global router.
Reference: [17] <author> J. F. Sibeyn. </author> <title> Algorithms for Routing on Meshes. </title> <type> PhD thesis, </type> <institution> Utrecht University, </institution> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: To the best of our knowledge, this is the first study of BMMC permutation methods on a machine such as the MasPar MP-2, and it is the first experimental study of BMMC permutation methods on any platform. Algorithms have appeared for performing BMMC permutations on hypercubes [2, 11], meshes <ref> [17] </ref>, Omega networks 1 [13], and expanded delta networks [19], and on parallel disk systems [8]. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. <p> Note that there are two matrices|quite different from each 2 BMMC permutations are also known as affine permutations <ref> [11, 17] </ref> or linear-complement permutations [2]. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 7 other|in this example. The matrix of data is 16 fi 4 (and hence it has 64 entries), and the type of each entry is unspecified.
Reference: [18] <author> L. F. Wisniewski. </author> <title> Efficient Design and Implementation of Permutation Algorithms on the Memory Hierarchy. </title> <type> PhD thesis, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> Mar. </month> <year> 1996. </year>
Reference-contexts: There can be no congestion at the clusters or PEs. Although it is relatively rare, there may be congestion within the global router itself. (See <ref> [18] </ref> for the probability distribution of router congestion with the cluster method.) The cluster method has setup and calculation times that are asymptotically the same as the PE method, since the number of independent devices differs by a constant factor (16).
Reference: [19] <author> L. F. Wisniewski, T. H. Cormen, and T. Sundquist. </author> <title> Performing BMMC permutations in two passes through the expanded delta network and MasPar MP-2. </title> <booktitle> In Proceedings of the Sixth Symposium on The Frontiers of Massively Parallel Computation, </booktitle> <pages> pages 282-289, </pages> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Algorithms have appeared for performing BMMC permutations on hypercubes [2, 11], meshes [17], Omega networks 1 [13], and expanded delta networks <ref> [19] </ref>, and on parallel disk systems [8]. Scherson and Subramanian [16] developed a method for performing arbitrary permutations on restricted-access expanded delta networks. An algorithm for the MasPar MP-2 falls out as a special case. <p> As mentioned above, congestion also may occur internal to the global router. That is, even if only one PE in each cluster is sending or receiving, more than one router cycle may be necessary. It is possible to eliminate such congestion <ref> [19] </ref>. In practice, however, congestion within the global router occurs infrequently and has little effect. Don't Be Too Clever: Routing BMMC Permutations on the MasPar MP-2 13 PE addressing There are two ways to address individual PEs.
References-found: 19

