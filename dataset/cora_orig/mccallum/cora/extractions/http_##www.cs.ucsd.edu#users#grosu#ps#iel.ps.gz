URL: http://www.cs.ucsd.edu/users/grosu/ps/iel.ps.gz
Refering-URL: http://www.cs.ucsd.edu/users/grosu/pubs/
Root-URL: http://www.cs.ucsd.edu
Title: Axiomatizability in Inclusive Equational Logic  
Author: Grigore Ro~su 
Affiliation: Department of Computer Science Engineering, University of California at San Diego and Fundamentals of Computer Science, Faculty of Mathematics, University of Bucharest, Romania.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Hajnal Andreka and Istvan Nemeti. </author> <title> A general axiomatizability theorem formulated in terms of cone-injective subcategories. </title> <editor> In B. Csakany, E. Fried, and E.T. Schmidt, editors, </editor> <booktitle> Universal Algebra, </booktitle> <pages> pages 13-35. </pages> <publisher> North-Holland, </publisher> <year> 1981. </year> <note> Colloquia Mathematics Societas Janos Bolyai, 29. </note>
Reference-contexts: The purpose of this paper is not to develop a new logic including new relevant examples for computer science, but to create a general framework suitable for Birkhoff-like theorems, including all the equational approaches, especially CBEL. In this spirit we mention the work by Andreka, Nemeti and Sain <ref> [1, 24] </ref> that was a great source of inspiration for us. 1 Acknowledgments: Many thanks to Professor Cazanescu who introduced me to the world of category theory and encouraged me in applying inclusion systems to axiomatizability. <p> A class of objects definable by projective (unconditional) equations is a variety. 2 4.2 Definability of Quasi-varieties Our treatment of definability for quasi-varieties and varieties uses the following technical concept that first appeared in [22] (see also [19] and <ref> [1] </ref>): Definition 14 If E is a class of morphisms from C, then the category C is E-co-well-powered iff for any object B and for any class of morphisms from E having source B, let us say fe j j j 2 J g, there is a subset M of J <p> The following lemma modifies a result from <ref> [1] </ref> (see also [25]) in the spirit of our approach. We use the following Framework 2: * I is an inclusion system. * C has products. * C is E-co-well-powered. Proposition 15 In Framework 2, any quasi-variety is definable by (unconditional) equations. <p> In its unconditional case, our IEL satisfaction says nothing else but M j= IEL (8A) e iff M is injective w.r.t. e. This injectivity approach was intensively used by Andreka, Nemeti and Sain in their work on axiomatizability (for example see <ref> [1, 24] </ref>). They first generalized the standard injectivity by introducing the notion of cone injectivity, and then they proved some Birkhoff-like theorems making use of very sophisticated technical tools. Remarkably, cone injectivity is strong enough to have first order formulas as a special case. <p> Inclusive equational logic can be seen as a bridge between CBEL and the logic based on injectivity as validity of formulas, for which axiomatizability results are given in <ref> [1, 24] </ref>.
Reference: [2] <author> Bernhard Banaschewski and Horst Herrlich. </author> <title> Subcategories defined by implications. </title> <journal> Houston Journal Mathematics, </journal> <volume> 2 </volume> <pages> 149-171, </pages> <year> 1976. </year>
Reference-contexts: iff B j= LEL (8A) u = v if u 1 = v 1 ; : : : ; u n = v n 2 6.2 Injectivity Our definition of satisfaction is very similar to the definition of injectivity which, according to [24] was first used for representing validity in <ref> [2] </ref>. Basically, an object M is injective w.r.t. a morphism f : A ! * iff for any morphism h : A ! M there is some g such that f ; g = h.
Reference: [3] <author> Garrett Birkhoff. </author> <title> On the structure of abstract algebras. </title> <booktitle> Proceedings of the Cambridge Philosophical Society, </booktitle> <volume> 31 </volume> <pages> 433-454, </pages> <year> 1935. </year>
Reference-contexts: Birkhoff-like axiomatizability results say that a class of models (usually universal algebras) is definable by a set of equations iff that class is closed under certain operations, such as products, quotients, and submodels. Such results have been proved separately for many different formulations of equational logic, beginning with Birkhoff <ref> [3] </ref> in 1935. The aim of this paper is to prove general results that give as many special cases as possible; so far as we know, all special cases are included in the results presented here. <p> C has products (this is not required in the framework of this subsection) we can conclude that a class of objects is a quasi-variety iff it is defined by projective conditional equations iff it is defined by free conditional equations. 4.5 The Definability of Varieties In the traditional Birkhoff theorem <ref> [3] </ref>, a class of objects is a variety iff it is definable by ordinary equations, quantified by variables, which means a term algebra in our approach.
Reference: [4] <author> Virgil Cazanescu. </author> <title> Local equational logic. </title> <editor> In Zoltan Esik, editor, </editor> <booktitle> Proceedings, 9th International Conference on Fundamentals of Computation Theory FCT'93, </booktitle> <pages> pages 162-170. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 710. </volume>
Reference-contexts: 1 Introduction This paper presents axiomatizability results for Inclusive Equational Logic, a categorical generalization of equational logic that further generalizes the local equational logic of Cazanescu <ref> [4] </ref>. The word "inclusive" is motivated by our pervasive use of inclusion systems, invented by Diaconescu, Goguen and Stefaneas [13], and further developed by Hilberdink [20] and by Cazanescu and Ro~su [5]; these are categories with extra structure to capture the notion of "inclusion". <p> Following <ref> [4] </ref>, quantifiers of equations as objects play a central role in this paper. <p> If the quantifier is E-projective, then we call the equation E-projective. 2 The idea of quantifying equations by objects that are not necessarily free is due to Cazanescu <ref> [4] </ref> in his local equational logic. More about this logic can be found in Setion 6.1. 4 Definition 9 An object M satisfies a conditional equation (8A) e if e 0 iff any interpretation h : A ! M which is e 0 -factorizable is also e-factorizable. <p> In addition, for local equational logic <ref> [4] </ref> (where equations may be quantified by any algebra), the definitional power of projective quantified equations is the same as that of classical free equations, and the definitional power of conditional equations is the same as that of the unconditional equations (without any other hypotheses). 2 Using the second inclusion system <p> Each of them generalizes the standard equational logic (and not only) in an original way and they were the main sources of inspiration for IEL. 6.1 Local Equational Logic The idea of quantifying equations by objects that are not necessary free is due to Cazanescu <ref> [4] </ref> in his local equational logic, where a conditional equation has the form (8A) u = v if u 1 = v 1 ; : : : ; u n = v n where A is a -algebra and u; v; u 1 ; v 1 ; : : : ;
Reference: [5] <author> Virgil Emil Cazanescu and Grigore Ro~su. </author> <title> Weak inclusion systems. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 7(2), </volume> <year> 1997. </year>
Reference-contexts: The word "inclusive" is motivated by our pervasive use of inclusion systems, invented by Diaconescu, Goguen and Stefaneas [13], and further developed by Hilberdink [20] and by Cazanescu and Ro~su <ref> [5] </ref>; these are categories with extra structure to capture the notion of "inclusion". Inclusion systems can be very useful in computing science, e.g., in specification theory [13]. <p> The potential value of inclusion systems was suggested in [17], and 2 a first definition was given in [13] in the context of modularization. The papers [20] and <ref> [5] </ref> further simplify and generalize inclusion systems. We now review definitions and properties used later, omitting the proofs, which may be found with other details in [5]. <p> The papers [20] and <ref> [5] </ref> further simplify and generalize inclusion systems. We now review definitions and properties used later, omitting the proofs, which may be found with other details in [5]. Definition 2 hI; Ei is a weak inclusion system for a category C if I and E are two subcategories of C having the same objects as C such that: 1. <p> Also, the category Alg (S;;) of order-sorted algebras [14], has a natural inclusion system with E the surjective morphisms; however, the reader is warned that in this case some epimorphisms are also inclusions. 2 Example 2 Topological Spaces: Two different inclusion systems for topological spaces are given in <ref> [5] </ref>; this shows that a category may admit more than one inclusion system. Let T op be the category with topological spaces as objects and continuous functions as mor-phisms. <p> The second inclusion system for T op is hJ ; E J i, where J = f (T; ) ,! (T 0 0 ) j T T 0 and is the induced topologyg and E J consists of the continuous surjections. 2 The following results proved in <ref> [5] </ref> and/or [20] are useful technical tools in this paper: Fact 3 If hI; Ei is a weak inclusion system for C then: 1. I contains only monics. 3 2. I " E contains only identities. 3. If f ; g is an E-morphism then g is an E-morphism. 4. <p> In addition, if I 1 ( I 2 , then E 2 ( E 1 . 2 This implies that I unambiguously determines E. For this reason, we sometimes denote a (weak) inclusion system by just I. A construction of E from just I is given in <ref> [5] </ref>.
Reference: [6] <author> Razvan Diaconescu. </author> <title> Completeness of category-based equational deduction. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 5(1) </volume> <pages> 9-40, </pages> <year> 1995. </year>
Reference-contexts: Even so, much of our work was inspired from Andreka, Nemeti and Sain's results. 6.3 Category Based Equational Logic As we have already said, CBEL (Category Based Equational Logic) is a categorical generalization of equational logic and it is mainly developed by Diaconescu <ref> [11, 6] </ref>. There are many interesting results related to this logic, especially in connection with constraint logic [8, 12] and behavior specifications [7, 10].
Reference: [7] <author> Razvan Diaconescu. </author> <title> Behavioural rewriting logic: </title> <booktitle> semantic foundations and proof theory, </booktitle> <month> October </month> <year> 1996. </year> <note> Submitted for publication. </note>
Reference-contexts: There are many interesting results related to this logic, especially in connection with constraint logic [8, 12] and behavior specifications <ref> [7, 10] </ref>. In this section we establish some relations between CBEL and inclusive logics, showing that each of them may be semantically seen as a special case of the other under some hypotheses.
Reference: [8] <author> Razvan Diaconescu. </author> <title> A category-based equational logic semantics to constraint programming. </title> <editor> In Magne Haveraaen, Olaf Owe, and Ole-Johan Dahl, editors, </editor> <title> Recent Trends in Data Type Specification, </title> <booktitle> volume 1130 of Lecture Notes in Computer Science, </booktitle> <pages> pages 200-221. </pages> <publisher> Springer, </publisher> <year> 1996. </year> <booktitle> Proceedings of 11th Workshop on Specification of Abstract Data Types. </booktitle> <address> Oslo, Norway, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: There are many interesting results related to this logic, especially in connection with constraint logic <ref> [8, 12] </ref> and behavior specifications [7, 10]. In this section we establish some relations between CBEL and inclusive logics, showing that each of them may be semantically seen as a special case of the other under some hypotheses. <p> One further direction of research is to apply our results to constraint logic, the logic which underlies constraint logic programming. The fact that this logic is a sub-institution of CBEL (see <ref> [8] </ref>) gives hope that it admits nice axiomatizability characterizations.
Reference: [9] <author> Razvan Diaconescu. </author> <title> Category-based modularisation for equational logic programming. </title> <journal> Acta Informat-ica, </journal> <volume> 33(5) </volume> <pages> 477-510, </pages> <year> 1996. </year>
Reference-contexts: Again we apply the lemma above and obtain that h " is (e 0 )-factorizable. this implies that h " is (e)-factorizable and furthermore h is e-factorizable. 2 The institution of CBEL is given in <ref> [9] </ref>.
Reference: [10] <author> Razvan Diaconescu. </author> <title> Foundations of behavioural specification in rewriting logic. </title> <booktitle> In Proceedings, First International Workshop on Rewriting Logic and its Applications. Asilomar, </booktitle> <address> California, </address> <month> September </month> <year> 1996, </year> <booktitle> volume 4 of Electronic Notes in Theoretical Computer Science. </booktitle> <publisher> Elsevier Science, </publisher> <year> 1996. </year> <title> 5 Only those which respect the hypotheses under which CBEL and IEL have the same definitional power (see Propositions 37 and 40), but this seems to include all examples of practical interest. </title> <type> 20 </type>
Reference-contexts: There are many interesting results related to this logic, especially in connection with constraint logic [8, 12] and behavior specifications <ref> [7, 10] </ref>. In this section we establish some relations between CBEL and inclusive logics, showing that each of them may be semantically seen as a special case of the other under some hypotheses.
Reference: [11] <author> Razvan Diaconescu. </author> <title> Category-based Semantics for Equational and Constraint Logic Programming. </title> <type> PhD thesis, </type> <institution> University of Oxford, </institution> <year> 1994. </year>
Reference-contexts: Therefore, we try to keep them distinct as long as possible in this paper. A different categorical generalization of equational logic, called Category-Based Equational Logic (abbreviated CBEL), was given by Diaconescu in his thesis <ref> [11] </ref> (see also Goguen and Diaconescu [18]) to deal with computational aspects of equational logic, such as paramodulation. The relationship between our framework and CBEL is discussed in Section 6.3. <p> Fact 1 implies that h = (f ; eU ) " = f " ; e, where f " : DF ! M . Therefore DF is E-projective. 2 13 Other similar results in which a free object is projective appeared in <ref> [19, 11] </ref>. <p> The importance of (an abstract form of) the axiom of choice is also shown in <ref> [11] </ref> for equational logics, especially for completeness. Assuming the axiom of choice, it can be shown that any set is projective. <p> Even so, much of our work was inspired from Andreka, Nemeti and Sain's results. 6.3 Category Based Equational Logic As we have already said, CBEL (Category Based Equational Logic) is a categorical generalization of equational logic and it is mainly developed by Diaconescu <ref> [11, 6] </ref>. There are many interesting results related to this logic, especially in connection with constraint logic [8, 12] and behavior specifications [7, 10]. <p> From the definability point of view (see Definition 11) any class of models which can be defined by equations in CBEL can also be defined by equations in the associated IEL. As Diaconescu proved <ref> [11] </ref>, Many Sorted Algebras, Order Sorted Algebras, Horn Clause Logic and Equational Logic Modulo Axioms are CBELs, and because the associated forgetful functors admit left adjoints and the model categories are inclusive and have coequalizers, we deduce that all of them are also IELs.
Reference: [12] <author> Razvan Diaconescu. </author> <title> Constraint logics, </title> <month> December </month> <year> 1996. </year> <note> Submitted for publication. </note>
Reference-contexts: There are many interesting results related to this logic, especially in connection with constraint logic <ref> [8, 12] </ref> and behavior specifications [7, 10]. In this section we establish some relations between CBEL and inclusive logics, showing that each of them may be semantically seen as a special case of the other under some hypotheses.
Reference: [13] <author> Razvan Diaconescu, Joseph Goguen, and Petros Stefaneas. </author> <title> Logical support for modularisation. </title> <editor> In Gerard Huet and Gordon Plotkin, editors, </editor> <booktitle> Logical Environments, </booktitle> <pages> pages 83-130. </pages> <address> Cambridge, </address> <year> 1993. </year> <title> Proceedings of a Workshop held in Edinburgh, </title> <address> Scotland, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction This paper presents axiomatizability results for Inclusive Equational Logic, a categorical generalization of equational logic that further generalizes the local equational logic of Cazanescu [4]. The word "inclusive" is motivated by our pervasive use of inclusion systems, invented by Diaconescu, Goguen and Stefaneas <ref> [13] </ref>, and further developed by Hilberdink [20] and by Cazanescu and Ro~su [5]; these are categories with extra structure to capture the notion of "inclusion". Inclusion systems can be very useful in computing science, e.g., in specification theory [13]. <p> our pervasive use of inclusion systems, invented by Diaconescu, Goguen and Stefaneas <ref> [13] </ref>, and further developed by Hilberdink [20] and by Cazanescu and Ro~su [5]; these are categories with extra structure to capture the notion of "inclusion". Inclusion systems can be very useful in computing science, e.g., in specification theory [13]. Birkhoff-like axiomatizability results say that a class of models (usually universal algebras) is definable by a set of equations iff that class is closed under certain operations, such as products, quotients, and submodels. <p> The potential value of inclusion systems was suggested in [17], and 2 a first definition was given in <ref> [13] </ref> in the context of modularization. The papers [20] and [5] further simplify and generalize inclusion systems. We now review definitions and properties used later, omitting the proofs, which may be found with other details in [5].
Reference: [14] <author> Joseph Goguen. </author> <title> Order sorted algebra. </title> <type> Technical Report 14, </type> <institution> UCLA Computer Science Department, </institution> <year> 1978. </year> <title> Semantics and Theory of Computation Series. </title>
Reference-contexts: Example 1 Algebras: The category Alg (S;) of many sorted algebras over a signature (S; ) has a natural inclusion system with I the inclusions of (S; )-algebras and E the epimorphisms of (S; )-algebras. Also, the category Alg (S;;) of order-sorted algebras <ref> [14] </ref>, has a natural inclusion system with E the surjective morphisms; however, the reader is warned that in this case some epimorphisms are also inclusions. 2 Example 2 Topological Spaces: Two different inclusion systems for topological spaces are given in [5]; this shows that a category may admit more than one
Reference: [15] <author> Joseph Goguen and Rod Burstall. </author> <title> Some fundamental algebraic tools for the semantics of computation, part 1: Comma categories, colimits, signatures and theories. </title> <journal> Theoretical Computer Science, </journal> <volume> 31(2) </volume> <pages> 175-209, </pages> <year> 1984. </year>
Reference-contexts: Many useful properties of adjoint functors are known <ref> [21, 15, 16] </ref>, including the following: Proposition 1 Let U : C ! D be a functor with a left adjoint F , and let f , g be morphisms such that the expressions below make sense, then 1. f [" = f , 3. (f ; g) [ = f
Reference: [16] <author> Joseph Goguen and Rod Burstall. </author> <title> Some fundamental algebraic tools for the semantics of computation, part 2: Signed and abstract theories. </title> <journal> Theoretical Computer Science, </journal> <volume> 31(3) </volume> <pages> 263-295, </pages> <year> 1984. </year>
Reference-contexts: Many useful properties of adjoint functors are known <ref> [21, 15, 16] </ref>, including the following: Proposition 1 Let U : C ! D be a functor with a left adjoint F , and let f , g be morphisms such that the expressions below make sense, then 1. f [" = f , 3. (f ; g) [ = f
Reference: [17] <author> Joseph Goguen and Rod Burstall. Institutions: </author> <title> Abstract model theory for specification and programming. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 39(1) </volume> <pages> 95-146, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The potential value of inclusion systems was suggested in <ref> [17] </ref>, and 2 a first definition was given in [13] in the context of modularization. The papers [20] and [5] further simplify and generalize inclusion systems. We now review definitions and properties used later, omitting the proofs, which may be found with other details in [5]. <p> Therefore, under the second inclusion system hJ ; E J i, T op is U -reachable. 2 The following proposition shows that the previous two concepts are equivalent. Similar results, but for factorization systems, are given in <ref> [17, 25] </ref>. Proposition 27 An object is U -reachable iff it is U -generated. Proof: Let B ,! C be an inclusion such that (B ,! C)U is an isomorphism. <p> Proof: This follows from Propositions 37 and 40. 2 7 The Institution of Inclusive Equational Logic The concept of institution was introduced by Goguen and Burstall <ref> [17] </ref> to formalize the abstract notion of "logical system". <p> Again we apply the lemma above and obtain that h " is (e 0 )-factorizable. this implies that h " is (e)-factorizable and furthermore h is e-factorizable. 2 The institution of CBEL is given in [9]. According to the definition of a morphism of institutions <ref> [17] </ref>, Proposition 38 gives a translation from IEL to CBEL which is a morphism of institutions, whereas Proposition 37 gives a translation which is not a morphism. 8 Conclusions and Future Work We developed a framework suitable for axiomatizability results in the spirit of Birkhoff.
Reference: [18] <author> Joseph Goguen and Razvan Diaconescu. </author> <title> An introduction to category-based equational logic. In V.S. </title> <editor> Alagar and Maurice Nivat, editors, Proceeedings, </editor> <volume> AMAST 95, </volume> <pages> pages 91-126. </pages> <publisher> Springer, </publisher> <year> 1995. </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 936. </volume>
Reference-contexts: Therefore, we try to keep them distinct as long as possible in this paper. A different categorical generalization of equational logic, called Category-Based Equational Logic (abbreviated CBEL), was given by Diaconescu in his thesis [11] (see also Goguen and Diaconescu <ref> [18] </ref>) to deal with computational aspects of equational logic, such as paramodulation. The relationship between our framework and CBEL is discussed in Section 6.3.
Reference: [19] <author> Horst Herrlich and George Strecker. </author> <title> Category Theory. </title> <publisher> Allyn and Bacon, </publisher> <year> 1973. </year>
Reference-contexts: A weak inclusion system I is called an inclusion system if E contains only epics. 2 Inclusion systems are an alternative of factorization systems (e.g. see <ref> [19, 23] </ref>). We prefer them as a technical tool because the proofs tend to be smoother than using factorization systems, still having the same power of expressiveness. <p> A class is closed under E-morphisms if for any E-morphism having its source in the class, its target is also in the class. An object P is E-projective (see also <ref> [22, 19] </ref>) iff for any E-morphism e : A ! B and any f : P ! B, there is some g : P ! A such that g; e = f . <p> A class of objects definable by conditional equations is a quasi-variety. 2. A class of objects definable by projective (unconditional) equations is a variety. 2 4.2 Definability of Quasi-varieties Our treatment of definability for quasi-varieties and varieties uses the following technical concept that first appeared in [22] (see also <ref> [19] </ref> and [1]): Definition 14 If E is a class of morphisms from C, then the category C is E-co-well-powered iff for any object B and for any class of morphisms from E having source B, let us say fe j j j 2 J g, there is a subset M <p> For this reason, we prefer to keep the notions of projective and free object distinct and to get results which hold for both of them. The reader interested in more about free and projective objects is referred to <ref> [19] </ref>. Fact 19 In Framework 0, let (8J ) e if e 0 be a conditional equation and let e J : K ! J be a morphism in E. <p> Fact 1 implies that h = (f ; eU ) " = f " ; e, where f " : DF ! M . Therefore DF is E-projective. 2 13 Other similar results in which a free object is projective appeared in <ref> [19, 11] </ref>.
Reference: [20] <author> Hendrik Hilberdink. </author> <title> Inclusion systems, </title> <note> 1996. Unpublished paper. </note>
Reference-contexts: The word "inclusive" is motivated by our pervasive use of inclusion systems, invented by Diaconescu, Goguen and Stefaneas [13], and further developed by Hilberdink <ref> [20] </ref> and by Cazanescu and Ro~su [5]; these are categories with extra structure to capture the notion of "inclusion". Inclusion systems can be very useful in computing science, e.g., in specification theory [13]. <p> The potential value of inclusion systems was suggested in [17], and 2 a first definition was given in [13] in the context of modularization. The papers <ref> [20] </ref> and [5] further simplify and generalize inclusion systems. We now review definitions and properties used later, omitting the proofs, which may be found with other details in [5]. <p> The second inclusion system for T op is hJ ; E J i, where J = f (T; ) ,! (T 0 0 ) j T T 0 and is the induced topologyg and E J consists of the continuous surjections. 2 The following results proved in [5] and/or <ref> [20] </ref> are useful technical tools in this paper: Fact 3 If hI; Ei is a weak inclusion system for C then: 1. I contains only monics. 3 2. I " E contains only identities. 3. If f ; g is an E-morphism then g is an E-morphism. 4.
Reference: [21] <author> Saunders Mac Lane. </author> <title> Categories for the Working Mathematician. </title> <publisher> Springer, </publisher> <year> 1971. </year>
Reference-contexts: We assume that the reader knows the concepts of category, functor, product and pushout; see <ref> [21] </ref> for this and other background. This section reviews some notation and results that are used later. We denote categories and functors by caligraphic letters. Let C be a category and let f : A ! B, g : B ! C be two morphisms in C. <p> Many useful properties of adjoint functors are known <ref> [21, 15, 16] </ref>, including the following: Proposition 1 Let U : C ! D be a functor with a left adjoint F , and let f , g be morphisms such that the expressions below make sense, then 1. f [" = f , 3. (f ; g) [ = f
Reference: [22] <author> B. Mitchell. </author> <title> Theory of categories. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1965. </year>
Reference-contexts: A class is closed under E-morphisms if for any E-morphism having its source in the class, its target is also in the class. An object P is E-projective (see also <ref> [22, 19] </ref>) iff for any E-morphism e : A ! B and any f : P ! B, there is some g : P ! A such that g; e = f . <p> A class of objects definable by conditional equations is a quasi-variety. 2. A class of objects definable by projective (unconditional) equations is a variety. 2 4.2 Definability of Quasi-varieties Our treatment of definability for quasi-varieties and varieties uses the following technical concept that first appeared in <ref> [22] </ref> (see also [19] and [1]): Definition 14 If E is a class of morphisms from C, then the category C is E-co-well-powered iff for any object B and for any class of morphisms from E having source B, let us say fe j j j 2 J g, there is <p> j j 2 J g, there is a subset M of J such that for any j in J there is some m in M such that e j and e m are isomorphic, i.e., there is an isomorphism ff with e j = e m ; ff. 2 Mitchell <ref> [22] </ref> called such a category (with E containing just the epics) co-locally small. The following lemma modifies a result from [1] (see also [25]) in the spirit of our approach. We use the following Framework 2: * I is an inclusion system. * C has products. * C is E-co-well-powered.
Reference: [23] <author> Istvan Nemeti. </author> <title> On notions of factorisation systems and their applications to cone-injective subcategories. </title> <journal> Periodica Mathematica Hungarica, </journal> <volume> 13(3) </volume> <pages> 229-335, </pages> <year> 1982. </year>
Reference-contexts: A weak inclusion system I is called an inclusion system if E contains only epics. 2 Inclusion systems are an alternative of factorization systems (e.g. see <ref> [19, 23] </ref>). We prefer them as a technical tool because the proofs tend to be smoother than using factorization systems, still having the same power of expressiveness.
Reference: [24] <editor> Istvan Nemeti and Ildicko Sain. Cone-implicational subcategories and some birkhoff-type theorems. In B. Csakany, E. Fried, and E.T. Schmidt, editors, </editor> <booktitle> Universal Algebra, </booktitle> <pages> pages 535-578. </pages> <publisher> North-Holland, </publisher> <year> 1981. </year> <note> Colloquia Mathematics Societas Janos Bolyai, 29. </note>
Reference-contexts: The purpose of this paper is not to develop a new logic including new relevant examples for computer science, but to create a general framework suitable for Birkhoff-like theorems, including all the equational approaches, especially CBEL. In this spirit we mention the work by Andreka, Nemeti and Sain <ref> [1, 24] </ref> that was a great source of inspiration for us. 1 Acknowledgments: Many thanks to Professor Cazanescu who introduced me to the world of category theory and encouraged me in applying inclusion systems to axiomatizability. <p> B, we have B j= IEL (8A) ee' iff B j= LEL (8A) u = v if u 1 = v 1 ; : : : ; u n = v n 2 6.2 Injectivity Our definition of satisfaction is very similar to the definition of injectivity which, according to <ref> [24] </ref> was first used for representing validity in [2]. Basically, an object M is injective w.r.t. a morphism f : A ! * iff for any morphism h : A ! M there is some g such that f ; g = h. <p> In its unconditional case, our IEL satisfaction says nothing else but M j= IEL (8A) e iff M is injective w.r.t. e. This injectivity approach was intensively used by Andreka, Nemeti and Sain in their work on axiomatizability (for example see <ref> [1, 24] </ref>). They first generalized the standard injectivity by introducing the notion of cone injectivity, and then they proved some Birkhoff-like theorems making use of very sophisticated technical tools. Remarkably, cone injectivity is strong enough to have first order formulas as a special case. <p> Inclusive equational logic can be seen as a bridge between CBEL and the logic based on injectivity as validity of formulas, for which axiomatizability results are given in <ref> [1, 24] </ref>.
Reference: [25] <author> Andrzej Tarlecki. </author> <title> On the existence of free models in abstract algebraic institutions. </title> <journal> Theoretical Computer Science, </journal> <volume> 37 </volume> <pages> 269-304, </pages> <year> 1986. </year> <note> Preliminary version, </note> <institution> University of Edinburgh, Computer Science Department, Report CSR-165-84, </institution> <year> 1984. </year> <month> 21 </month>
Reference-contexts: The following lemma modifies a result from [1] (see also <ref> [25] </ref>) in the spirit of our approach. We use the following Framework 2: * I is an inclusion system. * C has products. * C is E-co-well-powered. Proposition 15 In Framework 2, any quasi-variety is definable by (unconditional) equations. <p> Therefore, under the second inclusion system hJ ; E J i, T op is U -reachable. 2 The following proposition shows that the previous two concepts are equivalent. Similar results, but for factorization systems, are given in <ref> [17, 25] </ref>. Proposition 27 An object is U -reachable iff it is U -generated. Proof: Let B ,! C be an inclusion such that (B ,! C)U is an isomorphism.
References-found: 25

