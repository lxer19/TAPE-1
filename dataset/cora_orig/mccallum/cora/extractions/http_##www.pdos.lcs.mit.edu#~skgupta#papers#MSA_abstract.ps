URL: http://www.pdos.lcs.mit.edu/~skgupta/papers/MSA_abstract.ps
Refering-URL: http://www.pdos.lcs.mit.edu/~skgupta/papers/index.html
Root-URL: 
Email: skgupta@pdos.lcs.mit.edu  kece@cs.uga.edu schaffer@cs.rice.edu  
Phone: Phone: (713) 527-8101 x3813 FAX: (713) 285-5930  
Title: Making the Shortest-Paths Approach to Sum-of-Pairs Multiple Sequence Alignment More Space Efficient in Practice  
Author: Sandeep K. Gupta John Kececioglu Alejandro A. Schaffer 
Note: Address for correspondence: Alejandro A. Schaffer  Present address:  Some of the work of this author was carried out at the  
Address: Houston, TX 77005-1892  Athens, GA 30602-7404  Houston, TX 77005-1892  6100 Main Street, Houston, TX 77005-1892.  Technology Square, Cambridge, MA 02139;  Davis;  
Affiliation: Department of Computer Science Rice University  Department of Computer Science University of Georgia  Department of Computer Science Rice University  Department of Computer Science, Rice University  Laboratory for Computer Science, Massachusetts Institute of Technology, 545  Department of Computer Science of the University of California at  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. F. Altschul, R. J. Carroll, and D. J. Lipman. </author> <title> Weights for data related by a tree. </title> <journal> J. Mol. Biol., </journal> <volume> 207 </volume> <pages> 647-653, </pages> <year> 1989. </year>
Reference-contexts: However, by default, MSA solves a variation where each pairwise alignment cost is multiplied by a weight, denoted by scale (S i ; S j ), and the weights are chosen via an evolutionary tree of the input sequences. MSA uses a heuristic described in <ref> [1] </ref> to compute the pairwise weights. We have not modified the code that computes the pairwise weights because it is not space- or time-intensive.
Reference: [2] <author> G. J. Barton and M. J. E. Sternberg. </author> <title> Evaluation and improvements in the automatic alignment of protein sequences. </title> <journal> J. Mol. Biol., </journal> <volume> 198 </volume> <pages> 327-337, </pages> <year> 1987. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT <ref> [3, 2] </ref>, DFALIGN [8], MULTAL [16, 17], TULLA [15], CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [3] <author> G. J. Barton and M. J. E. Sternberg. </author> <title> A strategy for the rapid multiple alignment of protein sequences. </title> <journal> Protein Engineering, </journal> <volume> 1 </volume> <pages> 89-94, </pages> <year> 1987. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT <ref> [3, 2] </ref>, DFALIGN [8], MULTAL [16, 17], TULLA [15], CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [4] <author> H. Bodlaender, R. G. Downey, M. R. Fellows, and H. T. Wareham. </author> <title> The parameterized complexity of sequence alignment and consensus. </title> <booktitle> In Proc. of the 5th Symp. on Combinatorial Pattern Matching, Lecture Notes Comp. Sci. </booktitle> <volume> 807, </volume> <pages> pages 15-30, </pages> <year> 1994. </year>
Reference-contexts: A variety of combinatorial definitions of the alignment problem are used in practice. Finding an optimal multiple sequence alignment seems to take time and space exponential in the number of sequences for all definitions, and is provably hard for a few <ref> [13, 4, 18] </ref>. Nevertheless it is often useful to align a small (but larger than 2) number of sequences optimally. One of the existing programs that attempts to construct an optimal alignment for some definition is MSA [5, 12].
Reference: [5] <author> H. Carrillo and D. Lipman. </author> <title> The multiple sequence alignment problem in biology. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 48 </volume> <pages> 1073-1082, </pages> <year> 1988. </year>
Reference-contexts: Nevertheless it is often useful to align a small (but larger than 2) number of sequences optimally. One of the existing programs that attempts to construct an optimal alignment for some definition is MSA <ref> [5, 12] </ref>. MSA (version 1.0) was completed and distributed in 1989; most of the implementation of the resource intensive part was performed by the second author of this paper. The paper [12] gives a short overview of the program, but no detailed description of the implementation has ever been published. <p> Again, this method may yield an upper bound U that is too low. Carrillo and Lipman <ref> [5] </ref> realized that not all alignments A need to be considered. Define d (S 1 ; S 2 ; : : :; S K ) := min A c (A).
Reference: [6] <author> S. C. Chan, A. K. C. Wong, and D. K. Y. Chiu. </author> <title> A survey of multiple sequence comparison methods. </title> <journal> Bull. Math. Biol., </journal> <volume> 54 </volume> <pages> 563-598, </pages> <year> 1992. </year>
Reference-contexts: The methods other than MSA and MWT tend to use much less space because they do not claim to search for an optimal alignment. Two surveys of these programs and other issues in multiple sequence alignment are <ref> [6, 14] </ref>. In the second survey, MSA was not tested extensively, precisely because it exhausted the space on the computer that the authors of [14] used. The stimulus for this paper is a successful attempt to reduce the space usage of MSA by significant multiplicative factors.
Reference: [7] <author> E. W. Dijkstra. </author> <title> A note on two problems in connexion with graphs. </title> <journal> Numerische Mathematik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: Our approach to improving the MSA program uses algorithmic techniques that are well-known in sectors of the computer science research community, but not well-known in the biology research community. The resource intensive part of MSA is 3 an implementation of a complex variant of Dijkstra's single-source shortest-paths algorithm <ref> [7] </ref>. The version of multiple sequence alignment that MSA solves can be formulated as a single-source, single-destination shortest paths problem on a mesh-shaped dynamic programming graph. The dimension of the mesh is the number of sequences, and the number of vertices is the product of the sequence lengths. <p> The algorithm used to compute the shortest path from s to t is a variant of Dijkstra's algorithm <ref> [7] </ref>. In Dijkstra's algorithm, as used in the next section, each vertex v has a label v:D which is the current cost of a shortest path from s to v. Each edge e = v ! w has a cost, denoted by cost (e).
Reference: [8] <author> D. Feng and R. Doolittle. </author> <title> Progressive sequence alignment as a prerequisite to correct phylogenetic trees. </title> <journal> J. Mol. Evol., </journal> <volume> 25 </volume> <pages> 351-360, </pages> <year> 1987. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN <ref> [8] </ref>, MULTAL [16, 17], TULLA [15], CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [9] <author> D. G. Higgins, A. J. Bleasby, and R. Fuchs. Clustal V: </author> <title> improved software for multiple sequence alignment. </title> <journal> CABIOS, </journal> <volume> 8 </volume> <pages> 189-191, </pages> <year> 1992. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL [16, 17], TULLA [15], CLUSTAL V <ref> [9] </ref>, and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [10] <author> J. Kececioglu. </author> <title> Notes on an approach of carrillo and lipman to minimum sum of pairs multiple sequence alignment. </title> <booktitle> unpublished notes, </booktitle> <year> 1989. </year>
Reference-contexts: The paper [12] gives a short overview of the program, but no detailed description of the implementation has ever been published. The description of the shortest paths computation in this paper is derived from notes circulated by the second author <ref> [10] </ref>. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL [16, 17], TULLA [15], CLUSTAL V [9], and MWT [11].
Reference: [11] <author> J. Kececioglu. </author> <title> The maximum weight trace problem in multiple sequence alignment. </title> <booktitle> In Proc. of the 4th Symp. on Combinatorial Pattern Matching, Lecture Notes Comp. Sci. </booktitle> <volume> 684, </volume> <pages> pages 106-119, </pages> <year> 1993. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL [16, 17], TULLA [15], CLUSTAL V [9], and MWT <ref> [11] </ref>. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score. In practice, MSA rarely produces a provably optimal alignment; the reasons for lack of optimality are discussed at length at the end of Section 2.
Reference: [12] <author> D. J. Lipman, S. F. Altschul, and J. D. Kececioglu. </author> <title> A tool for multiple sequence alignment. </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci. USA., </institution> <month> 86 </month> <pages> 4412-4415, </pages> <year> 1989. </year>
Reference-contexts: Nevertheless it is often useful to align a small (but larger than 2) number of sequences optimally. One of the existing programs that attempts to construct an optimal alignment for some definition is MSA <ref> [5, 12] </ref>. MSA (version 1.0) was completed and distributed in 1989; most of the implementation of the resource intensive part was performed by the second author of this paper. The paper [12] gives a short overview of the program, but no detailed description of the implementation has ever been published. <p> One of the existing programs that attempts to construct an optimal alignment for some definition is MSA [5, 12]. MSA (version 1.0) was completed and distributed in 1989; most of the implementation of the resource intensive part was performed by the second author of this paper. The paper <ref> [12] </ref> gives a short overview of the program, but no detailed description of the implementation has ever been published. The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10].
Reference: [13] <author> D. Maier. </author> <title> The complexity of some problems on subsequences and superse-quences. </title> <journal> J. ACM, </journal> <volume> 25 </volume> <pages> 322-336, </pages> <year> 1978. </year> <month> 21 </month>
Reference-contexts: A variety of combinatorial definitions of the alignment problem are used in practice. Finding an optimal multiple sequence alignment seems to take time and space exponential in the number of sequences for all definitions, and is provably hard for a few <ref> [13, 4, 18] </ref>. Nevertheless it is often useful to align a small (but larger than 2) number of sequences optimally. One of the existing programs that attempts to construct an optimal alignment for some definition is MSA [5, 12].
Reference: [14] <author> M. A. McClure, T. K. Vasi, and W. M. Fitch. </author> <title> Comparative analysis of multiple protein-sequence alignment methods. Mol. </title> <journal> Biol. Evol., </journal> <volume> 11 </volume> <pages> 571-592, </pages> <year> 1994. </year>
Reference-contexts: The methods other than MSA and MWT tend to use much less space because they do not claim to search for an optimal alignment. Two surveys of these programs and other issues in multiple sequence alignment are <ref> [6, 14] </ref>. In the second survey, MSA was not tested extensively, precisely because it exhausted the space on the computer that the authors of [14] used. The stimulus for this paper is a successful attempt to reduce the space usage of MSA by significant multiplicative factors. <p> Two surveys of these programs and other issues in multiple sequence alignment are [6, 14]. In the second survey, MSA was not tested extensively, precisely because it exhausted the space on the computer that the authors of <ref> [14] </ref> used. The stimulus for this paper is a successful attempt to reduce the space usage of MSA by significant multiplicative factors. On some runs we achieve an order of magnitude reduction in space usage and a significant multiplicative improvement in running time. <p> In general, the input sequences can be of varying lengths. The four sequences in this figure are the first 30 characters of each of the four globin sequences HAHU, HBHU, MYHU, IGLOB from the globin data set in <ref> [14] </ref>. The default setting in MSA does not penalize gaps at the end of the sequence, which explains why the alignment it computed puts most of the gaps at the end. <p> To measure space usage we ran the top command while MSA was running and noted the peak amount of space usage that it reported. We used data sets extracted from the data sets in <ref> [14] </ref>. That paper uses 4 data sets consisting of 12 globin sequences, 12 kinase sequences, 12 protease sequences, and 12 RH sequences respectively. We extracted subsets of these 12-element sets that would give rise to MSA runs of moderate time and space usage. <p> An alignment matches the motif if we can find columns that look exactly like the designated columns in the predetermined alignment. We checked the alignments produced by MSA for all the motifs used in <ref> [14] </ref>. MSA essentially found all the motifs correctly, except that in two cases one sequence was shifted slightly in the region of one motif. The data sets we used, expressed in the notation of [14] are: * Globins A: HUMA (human hemoglobin, ff chain), HBHU (human hemoglobin fi chain), MYHU (human <p> We checked the alignments produced by MSA for all the motifs used in <ref> [14] </ref>. MSA essentially found all the motifs correctly, except that in two cases one sequence was shifted slightly in the region of one motif. The data sets we used, expressed in the notation of [14] are: * Globins A: HUMA (human hemoglobin, ff chain), HBHU (human hemoglobin fi chain), MYHU (human myoglobin), IGLOB (insect hemoglobin from Chi-ronomus thummi), GPUGNI (nonlegume hemoglobin from swamp oak), GG ZLB (bacteria, Viteoscilla sp.), GPYL (legume, yellow lupine). * Globins B: HAOR (duckbill platypus, ff-chain hemoglobin), HADK (duck, ff-chain hemoglobin), <p> Acknowledgments The first and third authors thank Dr. Sandhya Dwarkadas for useful discussions about MSA and Prof. Willy Zwaenepoel for his encouragement. The second author thanks Prof. Marcella McClure for providing her data sets from <ref> [14] </ref>. Research of the first author was supported by grants from the National Science Foundation and the Texas Advanced Technology Program. Research of the second author was supported by a Department of Energy Human Genome Distinguished Postdoctoral 20 Fellowship.
Reference: [15] <author> S. Subbiah and S. C. Harrison. </author> <title> A method for multiple sequence alignment with gaps. </title> <journal> J. Mol. Biol., </journal> <volume> 209 </volume> <pages> 539-548, </pages> <year> 1989. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL [16, 17], TULLA <ref> [15] </ref>, CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [16] <author> W. R. Taylor. </author> <title> Multiple sequence alignment by a pairwise algorithm. </title> <journal> CABIOS, </journal> <volume> 3 </volume> <pages> 81-87, </pages> <year> 1987. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL <ref> [16, 17] </ref>, TULLA [15], CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [17] <author> W. R. Taylor. </author> <title> A felxible mathod to align large numbers of biological sequences. </title> <journal> Journal of Molecular Evolution, </journal> <volume> 28 </volume> <pages> 161-169, </pages> <year> 1988. </year>
Reference-contexts: The description of the shortest paths computation in this paper is derived from notes circulated by the second author [10]. Some other programs that attempt to compute a global multiple sequence alignment include: AMULT [3, 2], DFALIGN [8], MULTAL <ref> [16, 17] </ref>, TULLA [15], CLUSTAL V [9], and MWT [11]. Of these methods, MWT is the only one other than MSA that attempts to compute an optimal alignment based on some well-defined score.
Reference: [18] <author> L. Wang and T. Jiang. </author> <title> On the complexity of multiple sequence alignment. </title> <note> 1993. To appear in J. Computational Biol.. 22 </note>
Reference-contexts: A variety of combinatorial definitions of the alignment problem are used in practice. Finding an optimal multiple sequence alignment seems to take time and space exponential in the number of sequences for all definitions, and is provably hard for a few <ref> [13, 4, 18] </ref>. Nevertheless it is often useful to align a small (but larger than 2) number of sequences optimally. One of the existing programs that attempts to construct an optimal alignment for some definition is MSA [5, 12].
References-found: 18

