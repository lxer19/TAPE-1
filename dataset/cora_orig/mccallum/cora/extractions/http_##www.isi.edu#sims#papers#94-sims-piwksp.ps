URL: http://www.isi.edu/sims/papers/94-sims-piwksp.ps
Refering-URL: http://karna.cs.umd.edu:3264/people/godfrey/cites.html
Root-URL: 
Email: farens,chee,chunnan,hohin,knoblockg@isi.edu  
Title: Query Processing in an Information Mediator  
Author: Yigal Arens, Chin Chee, Chun-Nan Hsu, Hoh In, and Craig A. Knoblock 
Address: 4676 Admiralty Way Marina del Rey, CA 90292, USA  
Affiliation: Information Sciences Institute and Department of Computer Science University of Southern California  
Abstract: A critical problem in building an information mediator is how to translate a domain-level queries into an efficient query plan for accessing the required data. We have built a flexible and efficient information mediator, called SIMS. SIMS takes a domain-level query and dynamically selects the appropriate information sources based on their content and availability, generates a query access plan that specifies the operations and their order for processing the data, and then performs semantic query reformulation to minimize the overall execution time. This paper describes these three basic components of the query processing in SIMS.
Abstract-found: 1
Intro-found: 1
Reference: [ Adam et al., 1993 ] <author> N.R. Adam, A. Gangopadhyay, and J. Geller. </author> <title> Design and implementation of a knowledge-based query processor. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 107-125, </pages> <year> 1993. </year> <month> 11 </month>
Reference: [ Arens et al., 1993 ] <author> Yigal Arens, Chin Y. Chee, Chun-Nan Hsu, and Craig A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction SIMS <ref> [ Arens et al., 1993 ] </ref> is an information retrieval system that provides an intelligent mediator between information sources and humans users or applications programs. Queries are expressed in a uniform language, independent of the distribution of information over sources, of the various query languages, the location of sources, etc.
Reference: [ Barrett et al., 1993 ] <author> Anthony Barrett, Keith Golden, Scott Penberthy, and Daniel Weld. </author> <note> Ucpop user's manual (version 2.0). Technical Report 93-09-06, </note> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1993. </year>
Reference-contexts: Each of these operations manipulates one or more sets of data, where the data is specified in the same terms that are used for communicating with SIMS. This simplifies the input/output since there is no conversion between languages. The planner is implemented in a version of UCPOP <ref> [ Penberthy and Weld, 1992, Barrett et al., 1993 ] </ref> that has been modified to generate parallel execution plans [ Knoblock, 1994 ] . The system searches through the space of possible plans using a best-first search until a complete plan is found.
Reference: [ Batini and Lenzerini, 1986 ] <author> Carlo Batini and Maurizio Lenzerini. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computer Survey, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <year> 1986. </year>
Reference-contexts: However, building tightly-coupled federated system requires constructing a global schema for the databases to be combined and then hard-wiring the mapping between the global schema and the local schemas. 10 The information source selection in SIMS is used instead of the standard schema integration used in database systems <ref> [ Batini and Lenzerini, 1986 ] </ref> . Our approach requires constructing a general domain model that encompasses the relevant parts of the database schemas. Then each of the database models is related to this general domain model.
Reference: [ Collet et al., 1991 ] <author> Christine Collet, Michael N. Huhns, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in carnot. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Instead, our algorithm considers all possible reformulations by firing all applicable rules and collecting candidate constraints in an inferred set. Then the system selects the most efficient set of the constraints from the inferred set to form the reformulated subqueries. The Carnot project <ref> [ Collet et al., 1991 ] </ref> is similar to SIMS in that it uses a knowledge base to integrate a variety of information sources. Carnot integrates heterogeneous databases using a set of articulation axioms that describe how to map between SQL queries and domain concepts.
Reference: [ Hsu and Knoblock, 1993a ] <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Learning database abstractions for query reformulation. </title> <booktitle> In Proceedings of the AAAI Workshop on Knowledge Discovery in Databases, </booktitle> <year> 1993. </year>
Reference-contexts: The reformulation from one query to another is done through logical inference using database abstractions, the abstracted knowledge of the contents of relevant databases. See <ref> [ Hsu and Knoblock, 1993a ] </ref> for an explanation of how rules like these are automatically learned. The database abstractions describe the databases in terms of the set of closed formulas of first-order logic.
Reference: [ Hsu and Knoblock, 1993b ] <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Reformulating query plans for multi-database systems. </title> <booktitle> In Proceedings of the Second International Conference of Information and Knowledge Management, </booktitle> <address> Washington, D.C., </address> <year> 1993. </year>
Reference-contexts: The system will then select a subset of constraints in the inferred set to complete the reformulation. The selection is based on two criteria: reducing the total evaluation cost, and retaining the semantic equivalence. Detailed description of the algorithm is in <ref> [ Hsu and Knoblock, 1993b ] </ref> . In this example, the input query is reformulated into a new query where the constraint on the attribute range is replaced with a constraint on the attribute max draft, on which there is a secondary index in the database. <p> The inferred set turns out to be useful information for extending the algorithm to reformulate an entire query plan. Previous work only reformulates single database queries. In addition, our algorithm is polynomial in terms of the number of database abstraction rules and the syntactic length of the input query <ref> [ Hsu and Knoblock, 1993b ] </ref> . A large number of rules may slow down the reformulation.
Reference: [ King, 1981 ] <author> Jonathan Jay King. </author> <title> Query Optimization by Semantic Reasoning. </title> <type> Ph.D. Thesis, </type> <institution> Stanford University, Department of Computer Science, </institution> <year> 1981. </year>
Reference-contexts: The semantic reformulation approach to query optimization was first developed by King <ref> [ King, 1981 ] </ref> and has since been extended in a number of systems [ Adam et al., 1993, Shenoy and Ozsoyoglu, 1989, Shekhar et al., 1988, Siegel, 1988 ] .
Reference: [ Knoblock, 1994 ] <author> Craig A. Knoblock. </author> <title> Generating parallel execution plans with a partial-order planner. </title> <institution> Information Sciences Institute,University of Southern California, </institution> <year> 1994. </year>
Reference-contexts: This simplifies the input/output since there is no conversion between languages. The planner is implemented in a version of UCPOP [ Penberthy and Weld, 1992, Barrett et al., 1993 ] that has been modified to generate parallel execution plans <ref> [ Knoblock, 1994 ] </ref> . The system searches through the space of possible plans using a best-first search until a complete plan is found. The plan generated for the example query in Figure 8 is shown in Figure 9.
Reference: [ Landers and Rosenberg, 1982 ] <author> Terry Landers and Ronni L. Rosenberg. </author> <title> An overview of multibase. </title> <editor> In H.J. Schneider, editor, </editor> <booktitle> Distributed Data Bases. </booktitle> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: Of these approaches, the tightly-coupled federated systems (e.g., Multibase <ref> [ Landers and Rosenberg, 1982 ] </ref> ) are the most closely related to SIMS in that they attempt to support total integration of all information sources in the sense that SIMS provides.
Reference: [ Lenat and Guha, 1990 ] <author> D. Lenat and R.V. Guha. </author> <title> Building Large Knowledge-Based Systems: Representation and Inference in the Cyc Project. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: Carnot integrates heterogeneous databases using a set of articulation axioms that describe how to map between SQL queries and domain concepts. Carnot uses the Cyc knowledge base <ref> [ Lenat and Guha, 1990 ] </ref> to build the articulation axioms, but after the axioms are built the domain model is no longer used or needed.
Reference: [ MacGregor, 1988 ] <author> R. MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of AAAI-88, The National Conference on Artificial Intelligence, </booktitle> <address> St. Paul, MN, </address> <year> 1988. </year>
Reference-contexts: The largest application domain that we have to date is a transportation planning domain, with information about the movement of personnel and materiel from one location to another using aircraft, ships, trucks, etc. The application domain models are defined using a hierarchical terminological knowledge base (Loom) <ref> [ MacGregor, 1988, MacGregor, 1990 ] </ref> with nodes representing each class of objects, and relations between nodes that define the relationships between the objects. For example, Figure 2 shows a fragment of the domain model in the transportation planning domain.
Reference: [ MacGregor, 1990 ] <author> R. MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: The largest application domain that we have to date is a transportation planning domain, with information about the movement of personnel and materiel from one location to another using aircraft, ships, trucks, etc. The application domain models are defined using a hierarchical terminological knowledge base (Loom) <ref> [ MacGregor, 1988, MacGregor, 1990 ] </ref> with nodes representing each class of objects, and relations between nodes that define the relationships between the objects. For example, Figure 2 shows a fragment of the domain model in the transportation planning domain.
Reference: [ Penberthy and Weld, 1992 ] <author> J. Scott Penberthy and Daniel S. Weld. Ucpop: </author> <title> A sound, complete, partial order planner for adl. </title> <booktitle> In Proceedings of KR-92, </booktitle> <pages> pages 189-197, </pages> <year> 1992. </year>
Reference-contexts: Each of these operations manipulates one or more sets of data, where the data is specified in the same terms that are used for communicating with SIMS. This simplifies the input/output since there is no conversion between languages. The planner is implemented in a version of UCPOP <ref> [ Penberthy and Weld, 1992, Barrett et al., 1993 ] </ref> that has been modified to generate parallel execution plans [ Knoblock, 1994 ] . The system searches through the space of possible plans using a best-first search until a complete plan is found.
Reference: [ Reddy et al., 1989 ] <author> M.P. Reddy, B.E. Prasad, and P.G. Reddy. </author> <title> Query processing in heterogeneous distributed database management systems. </title> <editor> In Amar Gupta, editor, </editor> <booktitle> Integration of Information Systems: Bridging Heterogeneous Databases, </booktitle> <pages> pages 264-277. </pages> <publisher> IEEE Press, </publisher> <address> NY, </address> <year> 1989. </year>
Reference-contexts: On a set of 32 example queries, the query reformulation yielded significant performance improvements with an average reduction in execution time of 43%. 6 Related Work In the database community, there are a variety of approaches to handling distributed, heterogeneous, and autonomous databases <ref> [ Reddy et al., 1989, Sheth and Larson, 1990 ] </ref> .
Reference: [ Shekhar et al., 1988 ] <author> Shashi Shekhar, Jaideep Srivastava, and Soumitra Dutta. </author> <title> A formal model of trade-off between optimization and execution costs in semantic query optimization. </title> <booktitle> In Proceedings of the 14th VLDB Conference, </booktitle> <address> Los Angeles, CA, </address> <year> 1988. </year>
Reference: [ Shenoy and Ozsoyoglu, 1989 ] <author> S.T. Shenoy and Z.M. Ozsoyoglu. </author> <title> Design and implementation of a semantic query optimizer. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> I(3):344-361, </volume> <year> 1989. </year>
Reference: [ Sheth and Larson, 1990 ] <author> Amit P. Sheth and James A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: On a set of 32 example queries, the query reformulation yielded significant performance improvements with an average reduction in execution time of 43%. 6 Related Work In the database community, there are a variety of approaches to handling distributed, heterogeneous, and autonomous databases <ref> [ Reddy et al., 1989, Sheth and Larson, 1990 ] </ref> .
Reference: [ Siegel, 1988 ] <author> Michael D. Siegel. </author> <title> Automatic rule derivation for semantic query optimization. </title> <editor> In Larry Kerschberg, editor, </editor> <booktitle> Proceedings of the Second International Conference on Expert Database Systems, </booktitle> <pages> pages 371-385. </pages> <institution> George Mason Foundation, Fairfax, VA, </institution> <year> 1988. </year> <month> 12 </month>
References-found: 19

