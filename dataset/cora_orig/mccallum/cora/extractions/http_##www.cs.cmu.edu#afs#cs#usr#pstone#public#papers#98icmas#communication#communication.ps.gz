URL: http://www.cs.cmu.edu/afs/cs/usr/pstone/public/papers/98icmas/communication/communication.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs/usr/pstone/mosaic/pstone-papers.html
Root-URL: 
Title: Communication in Domains with Unreliable, Single-Channel, Low-Bandwidth Communication  DARPA/RL Knowledge Based Planning and Scheduling  
Author: Peter Stone and Manuela Veloso 
Keyword: Topic Areas: Communication languages and protocols; Organization and social structure  
Note: Submitted to ICMAS'98 in  This research is sponsored in part by the  Initiative under grant number F30602-95-1-0018. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies or endorsements, either expressed or implied, of the U. S. Government.  
Address: Pittsburgh, PA 15213  
Affiliation: Computer Science Department Carnegie Mellon University  
Email: fpstone,velosog@cs.cmu.edu  
Web: http://www.cs.cmu.edu/fpstone,mmvg  
Date: November 1997  
Abstract: In most multiagent systems with communicating agents, the agents have the luxury of using reliable, multi-step negotiation protocols. They can do so primarily when communication is reliable and the cost of communication relative to other actions is small. Conversely, this paper considers multiagent environments with unreliable, high-cost communication. This paper presents techniques for dealing with the obstacles to inter-agent communication in such environments. A successful prototype system is fully implemented and tested in the simulated robotic soccer domain. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mihai Barbuceanu and Mark S. Fox. </author> <title> Cool: A language for describing coordination in multi 11 agent systems. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <pages> pages 1724, </pages> <address> Menlo Park, California, June 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: 1 Introduction In most multiagent systems with communicating agents, the agents have the luxury of using reliable, multi-step negotiation protocols (see <ref> [1] </ref> for instance). They can do so primarily when communication is reliable and the cost of communication relative to other actions is small.
Reference: [2] <author> Philip R. Cohen, Hector J. Levesque, and Ira Smith. </author> <title> On team formation. </title>
Reference-contexts: 1 Introduction In most multiagent systems with communicating agents, the agents have the luxury of using reliable, multi-step negotiation protocols (see [1] for instance). They can do so primarily when communication is reliable and the cost of communication relative to other actions is small. For example, in Cohen's convoy example <ref> [2] </ref>, the communication time required to form and maintain a convoy of vehicles is insignificant compared to the time it takes the convoy to drive to its destination. Similarly, message passing among distributed information agents is typically very quick compared to the searches and services that they are performing.
Reference: [3] <author> Tim Finin, Don McKay, Rich Fritzson, and Robin McEntire. </author> <title> Kqml: An information and knowledge exchange protocol. </title> <editor> In Kazuhiro Fuchi and Toshio Yokoi, editors, </editor> <title> Knowledge Building and Knowledge Sharing. </title> <publisher> Ohmsha and IOS Press, </publisher> <year> 1994. </year>
Reference-contexts: In addition, they must choose a set of acceptable message-types. The messages can use any syntactic and semantic codes (KQML <ref> [3] </ref> and KIF [5] for example). The only requirement is that the agents also agree on a mapping from message type to response requirements. Finally, the &lt;target&gt; field can be used to indicate the intended recipient (s) of the message. <p> In particular, KQML assumes point-to-point message passing, possibly with the aid of facilitator agents <ref> [3] </ref>. Nonetheless, KQML performatives could be used for the content portions of our proposed communication 6 scheme. KQML does not address the problems raised by having a single, low-bandwidth communication channel. With only a single team present, a situation similar to the one considered here is examined in [7].
Reference: [4] <author> Masahiro Fujita and Koji Kageyama. </author> <title> An open architecture for robot entertainment. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <pages> pages 435442, </pages> <address> Marina del Rey, CA, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: We use this domain for the research reported here. Another example domain is one that uses aural communication in crowded settings. Both people and robots using aural sensors ( <ref> [4] </ref>) must contend with multiple simultaneous audible streams. They also have a limit to the amount of sound they can process in a given amount of time, as well as to the range within which communication is possible. A third example of such an environment is arbitrarily expandable systems. <p> A possible application of the method described here is to robots using audio communication. This type of communication is inherently single-channel and low-bandwidth. An example of such a system is the Robot Entertainment Systems which uses a tonal language <ref> [4] </ref>. Agents can communicate by emitting and recognizing a range of audible pitches.
Reference: [5] <author> M. R. Genesereth and R. E. Fikes. </author> <title> Knowledge interchange format, version 3.0 reference manual. </title> <type> Technical Report Logic-92-1, </type> <institution> Computer Science Department, Stanford University, </institution> <year> 1992. </year>
Reference-contexts: In addition, they must choose a set of acceptable message-types. The messages can use any syntactic and semantic codes (KQML [3] and KIF <ref> [5] </ref> for example). The only requirement is that the agents also agree on a mapping from message type to response requirements. Finally, the &lt;target&gt; field can be used to indicate the intended recipient (s) of the message.
Reference: [6] <author> H. Kitano, Y. Kuniyoshi, I. Noda, M. Asada, H. Matsubara, and E. Osawa. </author> <title> Robocup: A challenge problem for AI. </title> <journal> AI Magazine, </journal> <volume> 18(1):7385, </volume> <month> Spring </month> <year> 1997. </year>
Reference-contexts: In such a system, the number of bits per message would have to be lowered, but the general techniques presented above still apply. 4 Implementation in the Robotic Soccer Domain The soccer server [8] system used successfully at RoboCup'97 <ref> [6] </ref> during IJCAI'97 models a communication environment appropriate in a time-pressured, crowded environment. All 22 agents (11 on each team) use a single, unreliable communication channel. When one agent speaks, agents on both teams can hear the message immediately along with the (relative) direction from which it came.
Reference: [7] <author> Dario Maio and Stefano Rizzi. </author> <title> Unsupervised multi-agent exploration of structured environments. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <pages> pages 269275, </pages> <address> Menlo Park, California, June 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Nonetheless, KQML performatives could be used for the content portions of our proposed communication 6 scheme. KQML does not address the problems raised by having a single, low-bandwidth communication channel. With only a single team present, a situation similar to the one considered here is examined in <ref> [7] </ref>. In that case, like in ours, messages sent are only heard by agents within a circular region of the sender. Communication is used for cooperation and for knowledge sharing.
Reference: [8] <editor> Itsuki Noda and Hitoshi Matsubara. </editor> <booktitle> Soccer server and researches on multi-agent systems. In Proceedings of the IROS-96 Workshop on RoboCup, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: One clear example of such an environment is the Soccer Servera widely used robotic soccer simulatorwith a single, low-bandwidth, unreliable communication channel for all 22 agents and with high communication costs <ref> [8] </ref>. We use this domain for the research reported here. Another example domain is one that uses aural communication in crowded settings. Both people and robots using aural sensors ( [4]) must contend with multiple simultaneous audible streams. <p> Agents can communicate by emitting and recognizing a range of audible pitches. In such a system, the number of bits per message would have to be lowered, but the general techniques presented above still apply. 4 Implementation in the Robotic Soccer Domain The soccer server <ref> [8] </ref> system used successfully at RoboCup'97 [6] during IJCAI'97 models a communication environment appropriate in a time-pressured, crowded environment. All 22 agents (11 on each team) use a single, unreliable communication channel.
Reference: [9] <author> Peter Stone and Manuela Veloso. </author> <title> The cmunited'97 simulator team. </title> <editor> In H. Kitano, editor, RoboCup-97: </editor> <title> The First Robot World Cup Soccer Games and Conferences. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1998, </year> <month> forthcoming. </month>
Reference-contexts: Since agents are all completely autonomous, such coordination is not guaranteed. For more details on the issues relating to this team structure, see <ref> [9] </ref>. As proposed in Section 3, all of our agent messages are of the form: (CMUnited &lt;Uniform-number&gt; &lt;Encoded-stamp&gt; &lt;Formation-number&gt; &lt;Formation-set-time&gt; &lt;Position-number&gt; &lt;target&gt; &lt;Message-type&gt; [&lt;Message data&gt;]) For example, player 8 might want to pass to player 6 but not know precisely where player 6 is at the moment.
Reference: [10] <author> Milind Tambe. </author> <title> Teamwork in real-world, dynamic environments. </title> <booktitle> In Proceedings of the Second International Conference on Multi-Agent Systems (ICMAS-96), </booktitle> <address> Menlo Park, California, </address> <month> December </month> <year> 1996. </year> <note> AAAI Press. 12 </note>
Reference-contexts: Communication should be structured so that it helps agents update their world and internal states. But agents should not stop acting while waiting for communications from teammates. As brought up in <ref> [10] </ref>, such a case could cause infinite looping if a critical teammate fails to respond for any reason. <p> Even when communication time is insignificant compared to action execution, such as in a helicopter fighting domain, it can be risky for agents to absolutely rely on communication. As pointed out in <ref> [10] </ref>, if the teammate with whom an agent is communicating gets shot down, the agent could be incapacitated if it requires a response from the teammate.
References-found: 10

