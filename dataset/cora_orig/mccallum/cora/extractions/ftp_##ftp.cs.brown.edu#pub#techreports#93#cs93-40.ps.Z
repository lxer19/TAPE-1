URL: ftp://ftp.cs.brown.edu/pub/techreports/93/cs93-40.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-93-40.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Stuart K. Card, George G. Robertson, and Jock D. Mackinlay. </author> <title> The Information Visualizer, an information workspace. </title> <booktitle> In Proc. ACM SIGCHI '91 Conf. on Human Factors in Computing Systems, </booktitle> <pages> pages 189-194, </pages> <month> April </month> <year> 1991. </year>
Reference: [2] <author> Peter Eades and Roberto Tamassia. </author> <title> Algorithms for drawing graphs: An annotated bibliography. </title> <type> Technical Report CS-89-90, </type> <institution> Department of Computer Science, Brown University, Providence, RI, </institution> <year> 1989. </year>
Reference-contexts: 1 Introduction Graphs with hundreds of vertices and edges are common in many application areas of computer science, such as network topology, VLSI circuits, and graph theory. There are literally hundreds of algorithms for positioning nodes to produce an aesthetic and informative display <ref> [2] </ref>.
Reference: [3] <author> Kim M. Fairchild, Steven E. Poltrok, and George W. Furnas. SemNet: </author> <title> Three-dimensional graphic representations of large knowledge bases. </title> <booktitle> In Cognitive Science and Its Applications for Human Computer Interaction, </booktitle> <pages> pages 201-233, </pages> <year> 1988. </year>
Reference-contexts: For example, related nodes in a graph can be combined to form cluster nodes, and the member nodes of a cluster node can be thought of as the detail of the cluster node, as done in the SemNet system <ref> [3] </ref>. Our framework of Section 3 allows one to combine fisheye views with hierarchical abstraction simply using a more sophisticated F 3 function than we used. Indeed, a recent experiment by Schaffer et. al. compared fisheye views to traditional zooming on a hierarchically clustered network [12].
Reference: [4] <author> William Augustus Farrand. </author> <title> Information display in interactive design. </title> <type> Ph.D. Thesis, </type> <institution> Department of Engineering, UCLA, </institution> <address> Los Angeles, CA, </address> <year> 1973. </year>
Reference-contexts: The utility of this method has not been established yet. 17 8 Other Related Work Furnas cites a 1973 doctoral thesis by William Farrand <ref> [4] </ref> as one of the earliest uses of fisheye views of information on a computer screen. The thesis suggests transformations similar to our cartesian and polar transformations, but provides few details. In 1982, Spence and Apperley [13] developed a technique called the Bifocal Display for visualizing office information.
Reference: [5] <author> George W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> In Proc. ACM SIGCHI '86 Conf. on Human Factors in Computing Systems, </booktitle> <pages> pages 16-23, </pages> <year> 1986. </year>
Reference-contexts: All figures in this paper are screen dumps of views generated by our prototype system. Our work extends Furnas's pioneering work on fisheye views <ref> [5] </ref> by providing a graphical interpretation to fisheye views. <p> Computing the fisheye transformations takes an insignificant amount of time compared to the time required for painting the graph. 7 Logical Fisheye Views Our work follows from the generalized fisheye views by Furnas <ref> [5] </ref>. We will call this type of fisheye views as logical fisheye views as the latter seems more appropriate to us. Furnas gave many compelling arguments describing the advantages of fisheye views. <p> Here, the API is as before, but the distance function not geometrical; it is the length of the shortest path between a vertex and the vertex defining the focus, as proposed by Furnas <ref> [5] </ref>. Notice that in the logical fisheye view, each vertex is either displayed or omitted; there is no explicit way to vary size and level of detail. This causes both space and time discontinuity in the information space, vertices appear and disappear from the view as the viewer changes focus.
Reference: [6] <author> J. G. Hollands, T. T. Carey, M. L. Matthews, and C. A. McCann. </author> <title> Presenting a Graphical Network: A Comparison of Performance Using Fisheye and 22 Scrolling Views. </title> <booktitle> In Proc. of 3rd Int'l Conf. on Human-Computer Interaction, </booktitle> <pages> pages 313-320, </pages> <month> September, </month> <year> 1989. </year>
Reference-contexts: Alternatively, zooming into a part of the graph and panning to other parts does show local details but loses the overall structure of the graph. Researchers have observed that browsing a large layout by scrolling and arc traversing tends to obscure the global structure of the graph <ref> [6] </ref>. Using two or more views one view of the entire graph and the other of a zoomed portion has the advantage of seeing both local detail and overall structure, but has the drawbacks of requiring extra screen space and of forcing the viewer to mentally integrate the views. <p> Their system always moves the focus to the center of the screen, whereas our prototype preserves the position of the focus. Studies by Hollands, Carey, Matthews, and McCann indicate that preserving focus position is important to help maintain the user's orientation <ref> [6] </ref>. Another factor contributing to the perceived unnaturalness of the fisheye view is that the shapes of vertices remain undistorted and edges remain straight lines (ignoring bend points). <p> Users completed the task faster and with fewer unnecessary traversals in the structure. 18 We are aware of one formal study that investigated the efficacy of using graphi-cal fisheye views (without hierarchy and clustering) rather than scrolling a zoomed image was done by Hollands, Carey, Matthews, and McCann <ref> [6] </ref>. Subjects located stations, selected optimal routes, and constructed optimal itinerary between stations on some imaginary subway network. The results of the study favors fisheye views only slightly. The fisheye viewer used in the study moved the focal point to the center in abrupt motion causing disorientation.
Reference: [7] <author> Hideki Koike, </author> <title> Generalized Fractal Views, </title> <booktitle> In Proc. of Advanced Visual Interfaces, </booktitle> <year> 1992. </year>
Reference-contexts: In general, discontinuities disturb the orientation of the viewer, and make navigation more difficult [10]. Recently Koike proposed a type of logical fisheye view, called a Generalized Fractal View, that keeps the total number of nodes constant, and this constant can be set by the user <ref> [7] </ref>. The utility of this method has not been established yet. 17 8 Other Related Work Furnas cites a 1973 doctoral thesis by William Farrand [4] as one of the earliest uses of fisheye views of information on a computer screen.
Reference: [8] <author> Bob Johnson and Ben Schneiderman. </author> <title> Space-filling approach to the visualization of hierarchical information structures. </title> <booktitle> In Proc. IEEE Visualization '91, </booktitle> <pages> pages 284-291, </pages> <year> 1991. </year>
Reference-contexts: Cone tree displays however look cluttered as the number of nodes go beyond a couple of hundred, so other, specialized, views of large trees may be more appropriate <ref> [8] </ref>. Also for viewing large amounts of data, it may be fruitful to combine fisheye views with hierarchical abstraction.
Reference: [9] <author> Karlis Kaugars, and Alvis Brazma. CATGraph: </author> <title> Visualizing Large Labeled Graphs. </title> <type> Technical Report 92-CS-08, </type> <institution> Computer Science Department, New Mexico State University. </institution> <month> April, </month> <year> 1992. </year>
Reference-contexts: It is instructive to compare these mappings with the cartesian transformations of the same nearly-symmetric graph in Figure 8. Kaugars and Brazma describe a graphical fisheye viewer of graphs that uses the arc tangent function to implement the function F 1 of our framework <ref> [9] </ref>. Their system always moves the focus to the center of the screen, whereas our prototype preserves the position of the focus. Studies by Hollands, Carey, Matthews, and McCann indicate that preserving focus position is important to help maintain the user's orientation [6].
Reference: [10] <author> Jock D. Mackinlay, George G. Robertson, and Stuart K. Card. </author> <title> The perspective wall: Detail and context smoothly integrated. </title> <booktitle> In Proc. ACM SIGCHI '91 Conf. on Human Factors in Computing Systems, </booktitle> <pages> pages 173-179, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: This causes both space and time discontinuity in the information space, vertices appear and disappear from the view as the viewer changes focus. In general, discontinuities disturb the orientation of the viewer, and make navigation more difficult <ref> [10] </ref>. Recently Koike proposed a type of logical fisheye view, called a Generalized Fractal View, that keeps the total number of nodes constant, and this constant can be set by the user [7]. <p> The Bifocal Display is the conceptual ancestor of the Perspective Wall system described below. At CHI '91, Card, Mackinlay, and Robertson presented two views of structured information that have fisheye properties. The perspective wall <ref> [10] </ref> maps a large linear information base into a 3-dimensional visualization. The center panel shows detail, while the two side panels, receding in the distance, show the context.
Reference: [11] <author> George G. Robertson, Jock D. Mackinlay, and Stuart K. Card. </author> <title> Cone Trees: Animated 3D visualizations of hierarchical information. </title> <booktitle> In Proc. ACM SIGCHI '91 Conf. on Human Factors in Computing Systems, </booktitle> <pages> pages 189-194, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The perspective wall [10] maps a large linear information base into a 3-dimensional visualization. The center panel shows detail, while the two side panels, receding in the distance, show the context. The cone tree <ref> [11] </ref> displays a tree in 3-D with each node the apex of a cone, and the children of the node positioned around the rim of the cone. Nodes close to the synthetic camera appears larger than those nodes far away from the synthetic camera, thereby providing a fisheye effect.
Reference: [12] <editor> Schaffer et. al. </editor> <title> Comparing fisheye and full zoom techniques for navigation of hierarchically clustered networks. </title> <booktitle> In Proc. of Graphics Interface. </booktitle> <year> 1993. </year>
Reference-contexts: Our framework of Section 3 allows one to combine fisheye views with hierarchical abstraction simply using a more sophisticated F 3 function than we used. Indeed, a recent experiment by Schaffer et. al. compared fisheye views to traditional zooming on a hierarchically clustered network <ref> [12] </ref>. Subjects were given a problem that required them to navigate a network and to reroute some edges. The study found that using fisheye views significantly improved a user's performance.
Reference: [13] <author> Robert Spence and Mark Apperley. </author> <title> Database navigation: An office environment for the professional. </title> <journal> Behavior and Information Technology, </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 43-54, </pages> <year> 1982. </year>
Reference-contexts: The thesis suggests transformations similar to our cartesian and polar transformations, but provides few details. In 1982, Spence and Apperley <ref> [13] </ref> developed a technique called the Bifocal Display for visualizing office information. Briefly, in their system the workspace is a set of information items positioned in a horizontal strip.
References-found: 13

