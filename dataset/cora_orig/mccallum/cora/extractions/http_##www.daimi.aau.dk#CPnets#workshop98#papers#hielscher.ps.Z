URL: http://www.daimi.aau.dk/CPnets/workshop98/papers/hielscher.ps.Z
Refering-URL: http://www.daimi.aau.dk/CPnets/workshop98/papers/
Root-URL: http://www.daimi.aau.dk
Email: E-mail: wk@informatik.uni-kiel.de  
Title: On Modelling Train Traffic in a Model Train System  
Author: Wolfgang Hielscher, Lars Urbszat, Claus Reinke, and Werner Kluge 
Date: May 15, 1998  
Address: D-24105 Kiel, Germany  
Affiliation: Department of Computer Science University of Kiel  
Abstract: The paper describes the design of a coloured Petri net model for a rather complex model train system. The purpose of this system is to teach graduate CS students net modelling and analysis techniques, and the systematic concersion of non-trivial net models into fully operational real systems. The track layout of this system currently includes three main cyclic tracks, each subdivided into several sections, three switchyards of several sidings, and also interconnecting tracks via which trains may change main tracks and directions. The idea is to equip each of several trains currently up to ten with its own travel plan. It specifies a sequence of tracks through which the train must be routed in the given order. Execution of these plans must be dynamically coordinated based on locally made decisions about the allocation of track sections to requesting trains so that essential safety and liveness properties are met. The paper first introduces the basic net components necessary to model train movement along track sections and across branching and merging switches, then describes the composition of a complete track model from these components, including the controls necessary to enforce an orderly behaviour, and then outlines the composition of the complete system model. It also addresses some of the as yet unsolved problems of deadlock prevention in the system. 
Abstract-found: 1
Intro-found: 1
Reference: [Ass95] <author> Amann, C.: </author> <title> A Coordination Language for Systems of Cooperating Processes, </title> <booktitle> Proc. of the International Conference on Parallel and Distributed Processing Techniques and Applications (PDPTA'95), </booktitle> <pages> pp. 738 - 747 </pages>
Reference-contexts: of sand t-invariants could be verified by analytical methods at least on the level of plain Petri-nets, i.e., without regard for the constraints imposed by inscriptions (which would be partially sufficient in the case of our train system model and presumably also in many other areas, e.g., process coordination languages <ref> [CaGe89, Ass95] </ref>). This being a problem which, for complexity reasons, may be hard to crack if the nets become large, one could alternatively think of simply checking whether or not invariants pre-specified by the designer do indeed hold.
Reference: [CaGe89] <author> Carriero, N.; Gelernter, D.: </author> <title> Linda in Context, </title> <journal> CACM Vol. </journal> <volume> 32, No. 4, </volume> <year> 1989, </year> <pages> pp. 444-458 </pages>
Reference-contexts: of sand t-invariants could be verified by analytical methods at least on the level of plain Petri-nets, i.e., without regard for the constraints imposed by inscriptions (which would be partially sufficient in the case of our train system model and presumably also in many other areas, e.g., process coordination languages <ref> [CaGe89, Ass95] </ref>). This being a problem which, for complexity reasons, may be hard to crack if the nets become large, one could alternatively think of simply checking whether or not invariants pre-specified by the designer do indeed hold.
Reference: [GeLa78] <author> Genrich, H.J.; Lautenbach, K.: </author> <title> The Analysis of Distributed Systems by Means of Predicate/Transition-Nets, in: Semantics of Concurrent Computation, </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> No. 70, </volume> <publisher> Springer, </publisher> <year> 1979, </year> <pages> pp. 123-146 </pages>
Reference-contexts: Such parameters may be priorities, e.g., of passenger trains over freight trains, time tables which need to be followed (with trains falling behind getting their priorities dynamically stepped up), or pre-specified speed profiles along the travel routes. It takes higher-order Petri-nets <ref> [GeLa78, GeLa81, Rei85, Jen90, Jen92] </ref> to represent trains as tokens which carry along with them inscriptions to this effect and to have the firing of transitions in some consistent form controlled by these parameters, and the parameters changed if necessary.
Reference: [GeLaTh80] <author> Genrich, H.J.; Lautenbach, K., Thiagarajan, </author> <title> P.S.: Elements of General Net Theory, </title> <booktitle> in: Net Theory and Applications Lecture Notes in Computer Science, </booktitle> <volume> No. 84, </volume> <publisher> Springer, </publisher> <year> 1980, </year> <pages> pp. 21-163 </pages>
Reference-contexts: A system which meets these essentials can usually be modelled as an ordinary Petri-net and by proving that it satisfies certain invariance properties <ref> [GeLaTh80, KlLa82] </ref>. However, things are not that simple if, in addition to these essentials, individual travel plans and other train-specific parameters have to be included into the model. <p> Directions may also freely be changed if the track is empty and neither of the limits is exhausted. This measure in fact establishes a finite synchronic distance between trains going in opposite directions <ref> [GeLaTh80, KlLa82] </ref>.
Reference: [GeLa81] <author> Genrich, H.J.; Lautenbach, K.: </author> <title> System Modelling with High-Level Petri-Nets, </title> <booktitle> Theoretical Computer Science 13, </booktitle> <year> 1981, </year> <pages> pp. 109-136 </pages>
Reference-contexts: Such parameters may be priorities, e.g., of passenger trains over freight trains, time tables which need to be followed (with trains falling behind getting their priorities dynamically stepped up), or pre-specified speed profiles along the travel routes. It takes higher-order Petri-nets <ref> [GeLa78, GeLa81, Rei85, Jen90, Jen92] </ref> to represent trains as tokens which carry along with them inscriptions to this effect and to have the firing of transitions in some consistent form controlled by these parameters, and the parameters changed if necessary.
Reference: [Jen90] <author> Jensen, K.: </author> <title> Coloured Petri Nets: A High-Level Language For System Design and Analysis, </title> <editor> in: Rozenberg, G. (Ed.): </editor> <booktitle> Advances in Petri Nets 1990, Lecture Notes in Computer Science, </booktitle> <volume> No. 483, </volume> <publisher> Springer 1991, </publisher> <pages> pp. 342-416 </pages>
Reference-contexts: Such parameters may be priorities, e.g., of passenger trains over freight trains, time tables which need to be followed (with trains falling behind getting their priorities dynamically stepped up), or pre-specified speed profiles along the travel routes. It takes higher-order Petri-nets <ref> [GeLa78, GeLa81, Rei85, Jen90, Jen92] </ref> to represent trains as tokens which carry along with them inscriptions to this effect and to have the firing of transitions in some consistent form controlled by these parameters, and the parameters changed if necessary.
Reference: [Jen92] <author> Jensen, K.: </author> <title> Coloured Petri Nets, </title> <booktitle> Monographs on Theoretical Computer Science, </booktitle> <publisher> Springer 1992 </publisher>
Reference-contexts: Such parameters may be priorities, e.g., of passenger trains over freight trains, time tables which need to be followed (with trains falling behind getting their priorities dynamically stepped up), or pre-specified speed profiles along the travel routes. It takes higher-order Petri-nets <ref> [GeLa78, GeLa81, Rei85, Jen90, Jen92] </ref> to represent trains as tokens which carry along with them inscriptions to this effect and to have the firing of transitions in some consistent form controlled by these parameters, and the parameters changed if necessary.
Reference: [KlLa82] <author> Kluge, W., Lautenbach, K.: </author> <title> On the Orderly Resolution of Memory Access Conflicts among Competing Channel Processes, </title> <journal> IEEE-TC Vol. </journal> <volume> C-31, No. 3, </volume> <year> 1982, </year> <pages> pp. 191-207 </pages>
Reference-contexts: A system which meets these essentials can usually be modelled as an ordinary Petri-net and by proving that it satisfies certain invariance properties <ref> [GeLaTh80, KlLa82] </ref>. However, things are not that simple if, in addition to these essentials, individual travel plans and other train-specific parameters have to be included into the model. <p> Directions may also freely be changed if the track is empty and neither of the limits is exhausted. This measure in fact establishes a finite synchronic distance between trains going in opposite directions <ref> [GeLaTh80, KlLa82] </ref>.
Reference: [Kl98] <author> Kluge, W.: </author> <title> The Kicking Horse Pass Problem, </title> <note> to be published in Petri-Net News Letters </note>
Reference-contexts: Controls to this effect may be realized by means of ordinary Petri-nets attached to the station model as they merely require keeping track of the number of trains that have left the station to cross the pass in one of the two possible direction (and have not yet returned) <ref> [Kl98] </ref>. <p> A control structure similar to the one that needs to be realized inside the direction and fairness controller transition is, on the basis of an ordinary Petri-net model, described in <ref> [Kl98] </ref>. In a larger context, the complete kicking horse pass model can be abstracted to another substitution transition kickinghorsepass which interfaces with its surroundings, the inner and outer circle net models, essentially via the places khic ln, ickh ln and kh st 10, kh st 20, respectively.
Reference: [Po95] <author> Pole, G.: </author> <title> The Spiral Tunnels and the Big Hill, </title> <publisher> Altitude Publishing Canada Ltd. </publisher> <year> 1995 </year>
Reference-contexts: circle station (labeled ic st) and the kicking horse pass station (labeled kh st)), and also 1 This name is adopted from a section of the Canadian Pacific Railways mainline in the Rocky Mountains which includes a similarly spiral-shaped track layout to negotiate a rather steep uphill / downhill passage <ref> [Po95] </ref>. 1 KH_ST_2 KH_ST_4 KH_ST_0 OC_JCT OC_SPL OC_LN_3 OC_LN_5OC_LN_5 OC_LN_6 IC_LN_2 IC_LN_4 KH_LN_1 KH_LN_3 KH_LN_5 KHIC_LN ICOC_LN_1 ICKH_LN ICOC_LN_3 OCIC_LN_1OCIC_LN_2 OCIC_LN_3 OC_ST_0 Kicking Horse Pass Kicking Horse Pass Station Inner Circle Station OC_ST_1 OC_ST_3 IC_ST_2 Outer Circle Station Inner Circle Junction Outer Circle Split Outer Circle Merge Outer Circle Junction ICOC_LN_2
Reference: [Rei85] <author> Reisig, W.: </author> <title> Petri Nets, </title> <journal> EATCS Monographs on Theoretical Computer Science, </journal> <volume> Vol. 4, </volume> <publisher> Springer, </publisher> <year> 1985 </year> <month> 19 </month>
Reference-contexts: Such parameters may be priorities, e.g., of passenger trains over freight trains, time tables which need to be followed (with trains falling behind getting their priorities dynamically stepped up), or pre-specified speed profiles along the travel routes. It takes higher-order Petri-nets <ref> [GeLa78, GeLa81, Rei85, Jen90, Jen92] </ref> to represent trains as tokens which carry along with them inscriptions to this effect and to have the firing of transitions in some consistent form controlled by these parameters, and the parameters changed if necessary.
References-found: 11

