URL: http://http.cs.berkeley.edu/~fateman/integrate.ps
Refering-URL: http://www.cs.berkeley.edu/~fateman/ocrchallenge.html
Root-URL: 
Title: Searching Techniques for Integral Tables  
Author: T. H. Einwohner Richard J. Fateman 
Address: Berkeley  
Affiliation: Computer Science Division, EECS Department University of California at  
Abstract: We describe the design of data structures and a computer program for storing a table of symbolic indefinite or definite integrals and retrieving user-requested integrals on demand. Typical times are so short that a preliminary look-up attempt prior to any algorithmic integration approach seems justified. In one such test for a table with around 700 entries, matches were found requiring an average of 2.8 milliseconds per request, on a Hewlett Packard 9000/712 workstation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Berman, Benjamin and Richard Fateman. </author> <title> "Optical Character recognition for typeset mathematics", </title> <booktitle> Proc. ISSAC-94, ACM. </booktitle> <pages> 348|352. </pages>
Reference-contexts: We hope that the availability of large amounts of such information will allow vendors of such systems to change their systems so that they can make use of this in further computations. 1.6 Reading published tables In developments described elsewhere <ref> [1] </ref>, and in continuing work at Berkeley, we are exploring the reading of entries in standard tables by computer (OCR: optical character recognition). <p> [ dx |a+b*x^2] MULTIRESULT: "frac [1|2*"sqrt [-a*b]]*"log ["frac [a+x* "sqrt [-a*b]|a-x*"sqrt [-a*b]]] CONSTRAINT: "InequalityLT [a*b|0] MULTIRESULT: "frac [1|"sqrt [-a*b]]* "arctanh ["frac [x*"sqrt [-a*b]|a]] CONSTRAINT: "InequalityLT [a*b|0] The kind of information Zwillinger found necessary for recording the CRC integral table demonstrates the kind of information we must extract from typeset tables <ref> [1] </ref>, and must encode in our database. 6 Relation to Other Work The classification into leaders can be thought of as an elaboration of the chapter headings in traditional books of integral tables, and so our historical precedents start with the traditional design for such books.
Reference: [2] <author> Dingle, Adam and Richard Fateman. </author> <title> "Branch cuts in computer algebra", </title> <booktitle> Proc. ISSAC-94, ACM. </booktitle> <pages> 250|257. </pages>
Reference-contexts: To date, most systems make minimal concessions to encoding information of this nature, although we can point to some preliminary work by Dingle and Fateman <ref> [2] </ref>.
Reference: [3] <author> Geddes, K. O., S. R. Czapor, G. Labahn: </author> <title> Algorithms for Computer Algebra Kluwer Scientific, </title> <year> 1992. </year>
Reference-contexts: review the reasons for supplementing computer algebra systems. * Algorithmic calculation of integrals, though decisive, is incomplete, with the most progress being confined to the (mostly "elementary") indefinite integrals of (mostly) elementary functions (There is a large literature on this; for explicit algorithmic presentations see, for example Geddes et al. <ref> [3] </ref>). (Elementary here means composed of well-known functions, not necessarily small expressions).
Reference: [4] <author> Gradshteyn, </author> <title> I.S. and I.M. Ryzhik. Table of Integrals, Series, and Products, (4th ed.) </title> <publisher> Academic Press 1980. </publisher>
Reference-contexts: Grant number CCR 9214963 and by NSF Infrastructure Grant number CDA-8722788. ity of tabulated entries are of definite integrals (often improper), of mostly non-elementary forms. * Even when an answer can be determined algorithmically, the form of the result may not be as simplified as that in a well-researched table <ref> [4] </ref> [6]. Additionally, some algorithms are ignorant of side-conditions that must be satisfied for meaningful results. Some table entries provide such details. The automated table should contain at least the entire collection of entries in various large standard integral tables. <p> This suggests that the reason that the integrals of the second set could not be obtained algorithmically is not the complexity of the integrand but rather the rarity of the leaders. The third data set of integrals was taken from one section of Gradshteyn's table <ref> [4] </ref>. It focused on products of Bessel functions. These integrands were considered complicated and involved plurals of multivariate functions.
Reference: [5] <author> Norvig, Peter. </author> <booktitle> Paradigms of Artificial Intelligence Programming, </booktitle> <publisher> Morgan Kaufmann Publ. </publisher> <year> 1992. </year>
Reference-contexts: The computer technique of breadth-first search is well-known and has widespread application in artificial intelligence, game-playing, optimization, etc. Hashing storage and pattern matching, as well, are also discussed in (among other places) Norvig's <ref> [5] </ref> book. Augmenting existing integration facilities with lookup table has been suggested and/or implemented by J. Moses for his SIN program (1967), and has been used by programs in Reduce, Mathematica, and probably other computer algebra systems.
Reference: [6] <author> Prudnikov, A. P., Yu A. Brichkov, O. I. Marichev. </author> <title> Integrals and Series (in Russian) Moscow) 1983. </title> <type> 4 volumes </type>
Reference-contexts: number CCR 9214963 and by NSF Infrastructure Grant number CDA-8722788. ity of tabulated entries are of definite integrals (often improper), of mostly non-elementary forms. * Even when an answer can be determined algorithmically, the form of the result may not be as simplified as that in a well-researched table [4] <ref> [6] </ref>. Additionally, some algorithms are ignorant of side-conditions that must be satisfied for meaningful results. Some table entries provide such details. The automated table should contain at least the entire collection of entries in various large standard integral tables.
Reference: [7] <author> Guy L. Steele Jr. </author> <title> Common Lisp the Language (second edition) Digital Press. </title> <booktitle> 1990. </booktitle> <pages> 7 </pages>
Reference-contexts: Our programs have been written entirely in ANSI standard Common Lisp <ref> [7] </ref>, and can therefore be run on a wide variety of computers.
References-found: 7

