URL: http://cs.jhu.edu/~baruch/PACKET/PACKET_ROUTING/FIXED-PATH/AdversQueStoc96.ps
Refering-URL: http://cs.jhu.edu/~baruch/PACKET/PACKET_ROUTING/FIXED-PATH/
Root-URL: http://www.cs.jhu.edu
Title: Adversarial Queueing Theory  
Author: Allan Borodin Jon Kleinberg Prabhakar Raghavan Madhu Sudan David P. Williamson 
Date: November, 1995  
Abstract: We consider packet routing when packets are injected continuously into a network. We develop an adversarial theory of queueing aimed at addressing some of the restrictions inherent in probabilistic analysis and queueing theory based on stochastic generation. Our approach sheds light on various queueing policies in simple networks, and paves the way for the systematic study of queueing with few or no probabilistic assumptions.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Harchol-Balter and P. E. Black. </author> <title> Queueing analysis of oblivious packet-routing algorithms. </title> <booktitle> Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: Since the expected number of insertions is 1 *, we conclude that E <ref> [ 1 ] </ref> 1 1 *: (5) For the second sub-phase, let k be any index which achieves 1 2 1 n. We will show for any such k that 1 2 (i; k; t) = (i; k; t) + 1 and in turn we get 1 1. <p> Clearly extending the adversarial approach to more general queueing networks offers additional challenges. As was stated in the introduction, prior work on packet routing that assumed constant time per edge traversal also usually assumed random destinations. Our goal (and the goal of Harchol-Balter and Black <ref> [1] </ref>) was to extend these results to specified destinations and paths. For stability, it is obviously a necessary condition that the arrival rate of packets is such that the induced arrival rate on any edge is less than one.
Reference: [2] <author> M. Harchol-Balter and D. Wolfe. </author> <title> Bounding delays in packet-routing networks. </title> <booktitle> Proceedings of the Twenty-Seventh Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1995. </year>
Reference: [3] <author> K. Mani Chandy, J. Howard and D. Towsley. </author> <title> Product form and local balance in queuing networks Journal of the ACM, </title> <month> April </month> <year> 1977, </year> <pages> pp 250-263. </pages>
Reference: [4] <author> L. Kleinrock. </author> <title> Queueing systems. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1975. </year>
Reference: [5] <author> F. P. Kelly. </author> <title> Reversibility and Stochastic Networks. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [6] <author> N. Kahale and T. Leighton. </author> <title> Greedy dynamic routing on arrays. </title> <booktitle> Proceedings of the Sixth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1995. </year>
Reference: [7] <author> T. Leighton. </author> <title> Average case analysis of greedy routing algorithms on arrays. </title> <booktitle> Prooceed-ing of the Second Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1990. </year>
Reference-contexts: This apparently slight difference poses a world of subtle difficulties in adapting queueing theory to continuous packet routing. 2. Probabilistic analyses in which a Poisson or Bernoulli process generates packets bound for random destinations; the passage time through an edge is a constant as in packet routing. (See <ref> [7] </ref>, for example). The resulting analyses are technically difficult, and yield results that are specific to particular networks and queueing disciplines; moreover, as in queueing-theoretic approaches, they rely heavily on the underlying probabilistic assumptions which determine the injection process. We present our new model in the following section. <p> Then LIS is stable against S. 5 Meshes, Trees, and DAG's An argument that builds on Lemmas 2 and 4 in Leighton <ref> [7] </ref> yields the following: 1 The proof of Lemma 2 may appear to be independent of the variance of the stochastic adversary. Actually, this is not really the case.
Reference: [8] <author> Y. Mansour, B. Patt-Shamir. </author> <title> Greedy packet scheduling on shortest paths. </title> <booktitle> Proceedings of the Tenth Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1991. </year>
Reference-contexts: For this, we need to prove the following strengthening of the result in <ref> [8] </ref>, for the case of the ring. This is the content of the following claim. Claim 1 Let G, as above, denote the n-node ring. Let p be a packet at distance d from its destination. <p> If there are no future absorptions, then the time until absorption of p is at most d + m 1, where m denotes the number of active color classes. 8 Proof: Our proof is based on a construction from <ref> [8] </ref>; we sketch it briefly in the next paragraph and refer the reader to this paper for more extensive details. [8] defines a time path to be a function t mapping time steps to packets, in such a way that if t (t) 6= t (t + 1), then the two <p> until absorption of p is at most d + m 1, where m denotes the number of active color classes. 8 Proof: Our proof is based on a construction from <ref> [8] </ref>; we sketch it briefly in the next paragraph and refer the reader to this paper for more extensive details. [8] defines a time path to be a function t mapping time steps to packets, in such a way that if t (t) 6= t (t + 1), then the two packets t (t) and t (t + 1) reside at the same node at time t + 1. <p> Consider taking an initial time path which follows a packet p from start to destination, and then repeatedly invoking the Switch operation as long as it is applicable. <ref> [8] </ref> shows that such a sequence of Switches must terminate; when it does, the resulting time path is never blocked by the same packet twice, and the number of nodes it traverses remains the same. <p> We must show that this sequence of operations terminates; here, the argument is very similar the one in <ref> [8] </ref>. For a time path t , define 2 (t ) to be the minimal time step at which Switch is applicable to t , or the minimal time step at which S 2 is applicable to t if Switch is not applicable; and it is undefined otherwise. <p> Finally, by an argument in <ref> [8] </ref>, this implies that the sequence t 0 ; t 1 ; : : : is finite. So when this sequence of transformations terminates, we have a time path t which is only blocked at most by every color class but one (which doesn't block it at all). <p> Here, we have a deterministic adversary that injects single shortest paths at rate 1 ". We use the same potential function as in the proof of Theorem 4. Note that now each packing consists of single packet, so we can apply the theorem of Mansour and Patt-Shamir <ref> [8] </ref> directly to conclude that the potential drops whenever k = (" 1 diam (G) + " 2 ).
Reference: [9] <author> D. Mitra and R. Cieslak. </author> <title> Randomized parallel communications. </title> <booktitle> Proceedings of the International Conference on Parallel Processing, </booktitle> <year> 1986. </year>
Reference: [10] <author> M. Mitzenmacher. </author> <title> Bounds on the Greedy Routing Algorithm for Array Networks. </title> <booktitle> Proceedings of the Sixth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1994. </year>
Reference: [11] <author> G. D. Stamoulis and J. N. Tsitsiklis. </author> <title> The efficiency of greedy routing in hyper-cubes and butterflies. </title> <booktitle> Proceedings of the Third Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1991. </year> <note> i </note>
References-found: 11

