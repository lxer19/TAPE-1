URL: http://www.cs.rpi.edu/~fryp/papers/wip/metasystem.ps
Refering-URL: http://www.cs.rpi.edu/~fryp/papers/wip/
Root-URL: http://www.cs.rpi.edu
Email: ffryp, szymanskg@cs.rpi.edu  
Title: Metacomputing: Parallel Computation Over the Internet  
Author: Patrick H. Fry and Boleslaw K. Szymanski 
Address: Troy, NY 12180-3590, USA  
Affiliation: Department of Computer Science Rensselaer Polytechnic Institute  
Abstract: This paper describes metasystems designed for parallel computing over the Internet. We classify such systems into two categories and describe in detail basic features of four of them. We present also our framework for distributed parallel computing of computationally intensive applications using idle cycles and the Internet as the interconnection network. We applied this framework to computing a distribution of twin primes and Brun's Constant and report the most recent results here. We outline also how our framework can be extended to allow participation of mobile computers, therefore supporting nomadic computations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. E. Anderson, D. E. Culler, and D. A. Patterson. </author> <title> A case for NOW (Network Of Workstations). </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 54-64, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Up until about 10 years ago, high performance computing relied almost exclusively on supercomputers and massively parallel machines. However, the exponentially increasing processing power of relatively inexpensive PC's and workstations has made Network of Workstation (NOWs) a feasible and highly economical platform for high performance parallel computing <ref> [1] </ref>. Libraries, like PVM [21] and MPI [18], are now commonly used by the HPC community for cluster-based computing. Another type of parallel computing that has recently become popular is web-based metacom-puting.
Reference: [2] <author> J. Eric Baldeschwieler, Robert D. Blumofe, and Eric A. Brewer. </author> <title> ATLAS: An infrastructure for global computing. </title> <booktitle> In Proceedings of the Seventh ACM SIGOPS European Workshop on System Support for Worldwide Applications, </booktitle> <year> 1996. </year>
Reference-contexts: For example, a broker who has more work than hosts to give it out to might transfer not yet assigned work to less loaded brokers. 2.5 Other Metasystems Other Java based metasystems include Popcorn [22], ATLAS <ref> [2] </ref>, ParaWeb [4], and DOGMA [9]. Popcorn is applet based and uses economic methods for distribution of work. A Popcorn programmer divides the application into subcomputations, or computelets. The Buyer computer submits these computelets to a market web server. Seller computers download these computelets from the market and execute them.
Reference: [3] <author> Arash Baratloo, Mehmet Karaul, Zvi Kedem, and Peter Wyckoff. </author> <title> Charlotte: Metacomputing on the Web. </title> <note> To appear in Future Generation Computer Systems. </note>
Reference-contexts: Running the metasystem client as a Java applet in a web browser helps alleviate some of these concerns. The remainder of this article is organized as follows. In Section 2, we provide a short description of four emerging metasystems: Legion [15], Globus [12], Charlotte <ref> [3] </ref>, and Javelin [6]. Section 3 describes a distributed system we constructed for enumeration of twin primes and calculation of Brun's constant using the farmer-worker paradigm [13]. <p> In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. Section 5 provides a summary and conclusions. 2 Metasystems In this section we present four metasystems: Legion [15], Globus [12], Charlotte <ref> [3] </ref>, and Javelin [6]. At this point there are two main types of metasystems being developed. <p> This is an especially difficult issue because the the system must support N-way security, or any-to-any security, in contrast with traditional client-server application authentication. 2.3 Charlotte Charlotte <ref> [3] </ref> is a metasystem based solely on Java without any native code.
Reference: [4] <author> T. Brecht, H. Sandhu, M. Shan, and J. Talbot. ParaWeb: </author> <title> Towards world-wide supercomputing. </title> <booktitle> In Proceedings of the Seventh ACM SIGOPS European Workshop on System Support for Worldwide Applications, </booktitle> <year> 1996. </year>
Reference-contexts: For example, a broker who has more work than hosts to give it out to might transfer not yet assigned work to less loaded brokers. 2.5 Other Metasystems Other Java based metasystems include Popcorn [22], ATLAS [2], ParaWeb <ref> [4] </ref>, and DOGMA [9]. Popcorn is applet based and uses economic methods for distribution of work. A Popcorn programmer divides the application into subcomputations, or computelets. The Buyer computer submits these computelets to a market web server. Seller computers download these computelets from the market and execute them.
Reference: [5] <editor> Compositional C++ (CC++). </editor> <address> http://globus.isi.edu/ccpp. </address>
Reference-contexts: difficult Post-mortem playback using off-the-shelf debuggers Host/network failures Automatic system reconfiguration and limited applica tion fault tolerance Table 1: Common problems facing metasystems and Legion's proposed solutions [15]. historically, are those that rely on extensions to existing parallel programming libraries and cluster management systems like PVM [21], MPI [18], CC++ <ref> [5] </ref>, LoadLeveler, and Condor [8]. Legion and Globus fall in this category. One major difficulty for this type of system is maintaining current and correct binaries of the application codes. Each supported computer architecture needs its own set of binaries for each parallel application (and the underlying metasystem).
Reference: [6] <author> Bernd Oliver Christiansen, Peter Cappello, Mihai F. Ionescu, Michael O. Neary, Klaus E. Schauser, and Daniel Wu. Javelin: </author> <title> Internet-based parallel computing using Java. </title> <journal> Concur-rency: Practice and Experience, </journal> <volume> 9(11) </volume> <pages> 1139-60, </pages> <year> 1997. </year>
Reference-contexts: Running the metasystem client as a Java applet in a web browser helps alleviate some of these concerns. The remainder of this article is organized as follows. In Section 2, we provide a short description of four emerging metasystems: Legion [15], Globus [12], Charlotte [3], and Javelin <ref> [6] </ref>. Section 3 describes a distributed system we constructed for enumeration of twin primes and calculation of Brun's constant using the farmer-worker paradigm [13]. In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. <p> In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. Section 5 provides a summary and conclusions. 2 Metasystems In this section we present four metasystems: Legion [15], Globus [12], Charlotte [3], and Javelin <ref> [6] </ref>. At this point there are two main types of metasystems being developed. <p> The code is then loaded to the machine and it joins the ongoing computation. In the future, Charlotte will be extended to automate this process by using "manager lookup services." 2.4 Javelin Like Charlotte, Javelin's <ref> [6] </ref> workers, called hosts, are executed entirely as a Java applet. Javelin focuses on ease of use not only from the host's perspective, but also from the machine which is submitting work to the system, called clients.
Reference: [7] <institution> The Cilk project. </institution> <note> http://supertech.lcs.mit.edu/cilk. </note>
Reference-contexts: If there is work in one of them, it will take a task from the front of the dequeue (like a queue). This model is similar to the work stealing architecture used in Cilk <ref> [7] </ref>. Javelin's brokers currently use a very simple load balancing scheme. Brokers can communicate with each other and transfer client work between them based on their host loads. <p> Seller computers download these computelets from the market and execute them. Sellers earn popcoins based on the number of JOPs, Java Operations, performed. The motivation behind Popcorn is to provide an incentive for participation in the system. Similar to Javelin, Atlas uses the Cilk <ref> [7] </ref> programming model. Atlas also has a URL based file system implemented as a native library (non Java). The Atlas system architecture has clients, managers, and compute servers. Clients submit work to the system. Managers maintain a directory of their compute servers. The compute servers perform the parallel computation. <p> JPVM [11] and MPIJ [9] provide the popular PVM and MPI message passing environments for Java applications without using any native code. Condor [8] is an application scheduling environment for execution of sequential batch programs in a cluster of 9 heterogeneous resources. Cilk <ref> [7] </ref> provides multithreaded parallel extensions to ANSI C. Cilk's "work stealing" method of load balancing is used by some Java based metasystems including Javelin and Atlas. The Virtual BSP Computer library [19] supports BSP computations over a network of non-dedicated workstations.
Reference: [8] <author> Condor: </author> <title> High throughput computing. </title> <address> http://www.cs.wisc.edu/condor. </address>
Reference-contexts: off-the-shelf debuggers Host/network failures Automatic system reconfiguration and limited applica tion fault tolerance Table 1: Common problems facing metasystems and Legion's proposed solutions [15]. historically, are those that rely on extensions to existing parallel programming libraries and cluster management systems like PVM [21], MPI [18], CC++ [5], LoadLeveler, and Condor <ref> [8] </ref>. Legion and Globus fall in this category. One major difficulty for this type of system is maintaining current and correct binaries of the application codes. Each supported computer architecture needs its own set of binaries for each parallel application (and the underlying metasystem). Access control is another issue. <p> For resource management, GRAM provides an interface between Globus and local resource managers, among which the following are currently supported: Network Queuing Environment (NQE), EASY-LL, LSF, LoadLeveler, Condor <ref> [8] </ref>, and a "fork" daemon. For security, the Globus toolkit currently focuses only on authentication with the thought that the other security issues, such as authorization and privacy will eventually be built on top of the authentication layer. <p> Many metasystems use existing or slightly modified parallel programming methods commonly used in cluster computing. JPVM [11] and MPIJ [9] provide the popular PVM and MPI message passing environments for Java applications without using any native code. Condor <ref> [8] </ref> is an application scheduling environment for execution of sequential batch programs in a cluster of 9 heterogeneous resources. Cilk [7] provides multithreaded parallel extensions to ANSI C. Cilk's "work stealing" method of load balancing is used by some Java based metasystems including Javelin and Atlas.
Reference: [9] <author> DOGMA: </author> <title> Distributed object group metacomputing architecture. </title> <address> http://zodiac.cs.byu.edu/DOGMA. </address>
Reference-contexts: For example, a broker who has more work than hosts to give it out to might transfer not yet assigned work to less loaded brokers. 2.5 Other Metasystems Other Java based metasystems include Popcorn [22], ATLAS [2], ParaWeb [4], and DOGMA <ref> [9] </ref>. Popcorn is applet based and uses economic methods for distribution of work. A Popcorn programmer divides the application into subcomputations, or computelets. The Buyer computer submits these computelets to a market web server. Seller computers download these computelets from the market and execute them. <p> DOGMA also provides a screen saver version of the application. The primary supported language is MPIJ, a Java based MPI created by this group. Many metasystems use existing or slightly modified parallel programming methods commonly used in cluster computing. JPVM [11] and MPIJ <ref> [9] </ref> provide the popular PVM and MPI message passing environments for Java applications without using any native code. Condor [8] is an application scheduling environment for execution of sequential batch programs in a cluster of 9 heterogeneous resources. Cilk [7] provides multithreaded parallel extensions to ANSI C.
Reference: [10] <author> Garance A. Drosehn. </author> <title> SCATTERS a Simple Cool Admin Tool To Everywhere Run Something. </title> <address> http://www.rpi.edu/drosehn/Projects/SCATTERS.html. </address>
Reference-contexts: We have a relay agent which creates a hierarchical communication structure. Our server, the farmer, is at the top. Intermediate nodes are relays and leaf nodes are clients, or workers. The relay allows nodes behind a firewall to contribute idle cycles. The SCATTERS <ref> [10] </ref> tool is used to start computation on a group of idle nodes at once. We have added new levels of reliability in the farmer to support the years necessary to complete this computation.
Reference: [11] <author> Adam J. Ferrari. JPVM: </author> <title> Network parallel computing in Java. </title> <type> Technical Report CS-97-29, </type> <institution> Department of Computer Science, University of Virginia, </institution> <year> 1997. </year> <month> 14 </month>
Reference-contexts: DOGMA also provides a screen saver version of the application. The primary supported language is MPIJ, a Java based MPI created by this group. Many metasystems use existing or slightly modified parallel programming methods commonly used in cluster computing. JPVM <ref> [11] </ref> and MPIJ [9] provide the popular PVM and MPI message passing environments for Java applications without using any native code. Condor [8] is an application scheduling environment for execution of sequential batch programs in a cluster of 9 heterogeneous resources. Cilk [7] provides multithreaded parallel extensions to ANSI C.
Reference: [12] <author> Ian Foster and Carl Kesselman. </author> <title> The Globus project: A status report. </title> <booktitle> In Proceedings of the Seventh Heterogeneous Computing Workshop, </booktitle> <pages> pages 4-18, </pages> <year> 1998. </year>
Reference-contexts: Issues include authorization, authentication, and encryption. Running the metasystem client as a Java applet in a web browser helps alleviate some of these concerns. The remainder of this article is organized as follows. In Section 2, we provide a short description of four emerging metasystems: Legion [15], Globus <ref> [12] </ref>, Charlotte [3], and Javelin [6]. Section 3 describes a distributed system we constructed for enumeration of twin primes and calculation of Brun's constant using the farmer-worker paradigm [13]. <p> In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. Section 5 provides a summary and conclusions. 2 Metasystems In this section we present four metasystems: Legion [15], Globus <ref> [12] </ref>, Charlotte [3], and Javelin [6]. At this point there are two main types of metasystems being developed. <p> security services Information MDS Distributed access to structure and state information Health and status HBM Monitoring of health and status of system components Remote data access GASS Remote access to data via sequential and parallel interfaces Executable management GEM Construction, caching, and location of executables Table 2: Core Globus services <ref> [12] </ref>. "plug in" existing parallel languages by writing libraries which translate parallel procedures in the parallel language into calls to the Legion core system. As new parallel languages are created, they can be supported by Legion with limited effort. System support for "off-the-shelf" debuggers like dbx is also planned. <p> Legion also provides automatic binary selection. For support of heterogeneous resources, Legion must provide an application binary for each system architecture under which the application will run. 2.2 Globus The Globus Project <ref> [12] </ref> is a research program for developing "large-scale high performance distributed computing environments, or computational grids that provide dependable, consistent, and pervasive access to high-end computational resources." The Globus authors are interested in creating middleware to support dynamic resource allocation, heterogeneous and dynamic computation environments, and process level security.
Reference: [13] <author> Patrick H. Fry, Jeffrey Nesheiwat, and Boleslaw K. Szymanski. </author> <title> Experiences with distributed computation of twin primes distribution. </title> <note> To appear in Parallel and Distributed Computing Practices. </note>
Reference-contexts: In Section 2, we provide a short description of four emerging metasystems: Legion [15], Globus [12], Charlotte [3], and Javelin [6]. Section 3 describes a distributed system we constructed for enumeration of twin primes and calculation of Brun's constant using the farmer-worker paradigm <ref> [13] </ref>. In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. Section 5 provides a summary and conclusions. 2 Metasystems In this section we present four metasystems: Legion [15], Globus [12], Charlotte [3], and Javelin [6]. <p> which become unavailable and supports scalability and tightly synchronized parallel computations. 3 Twin Primes Distribution This section outlines our experiences in applying a distributed heterogeneous environment to computing Brun's Constant and twin primes distribution over a range of integers that is two orders of magnitude larger than any previously traversed <ref> [13, 14, 20] </ref>. Although we used the well known farmer worker paradigm, this specific application to twin primes computation has led to several novel contributions. We have a relay agent which creates a hierarchical communication structure. Our server, the farmer, is at the top.
Reference: [14] <author> Patrick H. Fry, Jeffrey Nesheiwat, and Boleslaw K. Szymanski. </author> <title> Computing twin primes and Brun's constant: A distributed approach. </title> <booktitle> In Proceedings of the Seventh IEEE International Symposium on High Performance Distributed Computing, </booktitle> <pages> pages 42-49, </pages> <address> Chicago, IL, </address> <month> July </month> <year> 1998. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: which become unavailable and supports scalability and tightly synchronized parallel computations. 3 Twin Primes Distribution This section outlines our experiences in applying a distributed heterogeneous environment to computing Brun's Constant and twin primes distribution over a range of integers that is two orders of magnitude larger than any previously traversed <ref> [13, 14, 20] </ref>. Although we used the well known farmer worker paradigm, this specific application to twin primes computation has led to several novel contributions. We have a relay agent which creates a hierarchical communication structure. Our server, the farmer, is at the top.
Reference: [15] <author> Andrew S. Grimshaw and Wm. A. Wulf. </author> <title> The Legion vision of a worldwide virtual computer. </title> <journal> Communications of the ACM, </journal> <volume> 40(1) </volume> <pages> 39-45, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: Issues include authorization, authentication, and encryption. Running the metasystem client as a Java applet in a web browser helps alleviate some of these concerns. The remainder of this article is organized as follows. In Section 2, we provide a short description of four emerging metasystems: Legion <ref> [15] </ref>, Globus [12], Charlotte [3], and Javelin [6]. Section 3 describes a distributed system we constructed for enumeration of twin primes and calculation of Brun's constant using the farmer-worker paradigm [13]. <p> In Section 4 we outline an extension of this system which will support participation of mobile computers in metasystem computations by allowing disconnected-mode operation. Section 5 provides a summary and conclusions. 2 Metasystems In this section we present four metasystems: Legion <ref> [15] </ref>, Globus [12], Charlotte [3], and Javelin [6]. At this point there are two main types of metasystems being developed. <p> binary selection and migration, application specific scheduling tools Multiple resource owners Owner control of resource consumption, detailed resource consumption accounting Debugging parallel programs difficult Post-mortem playback using off-the-shelf debuggers Host/network failures Automatic system reconfiguration and limited applica tion fault tolerance Table 1: Common problems facing metasystems and Legion's proposed solutions <ref> [15] </ref>. historically, are those that rely on extensions to existing parallel programming libraries and cluster management systems like PVM [21], MPI [18], CC++ [5], LoadLeveler, and Condor [8]. Legion and Globus fall in this category. <p> Section 2.5 describes some other metasystems which may be of interest. All are similar to one or more of the four systems described below. For brevity of space we do not discuss them in detail, but provide short descriptions and references for interested readers. 2.1 Legion Legion <ref> [15] </ref>, begun in 1993, is a metasystem software project at the University of Virginia. Legion is an ambitious project whose goal is nothing less than creating a "worldwide virtual computer" providing location transparent access to resources available in the system. Legion is still in the early stages of development.
Reference: [16] <author> Richard K. Guy. </author> <title> Unsolved Problems in Number Theory. </title> <publisher> Springer-Verlag, </publisher> <address> 2 edition, </address> <year> 1994. </year>
Reference-contexts: Two subsequent odd numbers that are both primes are called twin primes or twins for short. (3; 5), (5; 7), (11; 13), and (41; 43) are all twins. The Twin Primes Conjecture proposes that twin primes occur infinitely often <ref> [16] </ref>.
Reference: [17] <author> David Kotz, Robert Gray, Saurab Nog, Daniela Rus, Sumit Chawla, and George Cybenko. </author> <title> Agent Tcl: Targeting the needs of mobile computers. </title> <journal> IEEE Internet Computing, </journal> <volume> 1(4) </volume> <pages> 58-67, </pages> <month> July/August </month> <year> 1997. </year>
Reference-contexts: Docking stations are used in AgentJava <ref> [17] </ref>, a system for mobile agents. Docking plays a similar role to our twin prime computation relay; they both are a proxy for a client.
Reference: [18] <institution> Message Passing Interface (MPI). </institution> <note> http://www.mcs.anl.gov/mpi. </note>
Reference-contexts: However, the exponentially increasing processing power of relatively inexpensive PC's and workstations has made Network of Workstation (NOWs) a feasible and highly economical platform for high performance parallel computing [1]. Libraries, like PVM [21] and MPI <ref> [18] </ref>, are now commonly used by the HPC community for cluster-based computing. Another type of parallel computing that has recently become popular is web-based metacom-puting. Metacomputing systems, also referred to as metasystems, are designed to use the idle CPU cycles of machines using the Internet as the interconnection network. <p> parallel programs difficult Post-mortem playback using off-the-shelf debuggers Host/network failures Automatic system reconfiguration and limited applica tion fault tolerance Table 1: Common problems facing metasystems and Legion's proposed solutions [15]. historically, are those that rely on extensions to existing parallel programming libraries and cluster management systems like PVM [21], MPI <ref> [18] </ref>, CC++ [5], LoadLeveler, and Condor [8]. Legion and Globus fall in this category. One major difficulty for this type of system is maintaining current and correct binaries of the application codes. Each supported computer architecture needs its own set of binaries for each parallel application (and the underlying metasystem).
Reference: [19] <author> Mohan Nibhanupudi and Boleslaw K. Szymanski. </author> <title> Runtime support for virtual BSP computer. </title> <booktitle> In Proc. Workshops at 12th Intern. Parallel Processing Symposium. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1998. </year>
Reference-contexts: Cilk [7] provides multithreaded parallel extensions to ANSI C. Cilk's "work stealing" method of load balancing is used by some Java based metasystems including Javelin and Atlas. The Virtual BSP Computer library <ref> [19] </ref> supports BSP computations over a network of non-dedicated workstations.
Reference: [20] <author> Thomas R. </author> <title> Nicely. Enumeration to 1e14 of the twin primes and Brun's constant. </title> <journal> Virginia Journal of Science, </journal> <volume> 46(3) </volume> <pages> 195-204, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: which become unavailable and supports scalability and tightly synchronized parallel computations. 3 Twin Primes Distribution This section outlines our experiences in applying a distributed heterogeneous environment to computing Brun's Constant and twin primes distribution over a range of integers that is two orders of magnitude larger than any previously traversed <ref> [13, 14, 20] </ref>. Although we used the well known farmer worker paradigm, this specific application to twin primes computation has led to several novel contributions. We have a relay agent which creates a hierarchical communication structure. Our server, the farmer, is at the top. <p> B is known as Brun's Constant. This value has been estimated by summing the inverses of twin primes over ever increasing ranges <ref> [20] </ref> with the current upper limit of 10 14 . For this application, our goal is to refine this estimate by enumerating twin primes two orders of magnitude further, up to 10 16 .
Reference: [21] <institution> Parallel Virtual Machine (PVM). </institution> <note> http://www.epm.ornl.gov/pvm. </note>
Reference-contexts: However, the exponentially increasing processing power of relatively inexpensive PC's and workstations has made Network of Workstation (NOWs) a feasible and highly economical platform for high performance parallel computing [1]. Libraries, like PVM <ref> [21] </ref> and MPI [18], are now commonly used by the HPC community for cluster-based computing. Another type of parallel computing that has recently become popular is web-based metacom-puting. <p> accounting Debugging parallel programs difficult Post-mortem playback using off-the-shelf debuggers Host/network failures Automatic system reconfiguration and limited applica tion fault tolerance Table 1: Common problems facing metasystems and Legion's proposed solutions [15]. historically, are those that rely on extensions to existing parallel programming libraries and cluster management systems like PVM <ref> [21] </ref>, MPI [18], CC++ [5], LoadLeveler, and Condor [8]. Legion and Globus fall in this category. One major difficulty for this type of system is maintaining current and correct binaries of the application codes.
Reference: [22] <author> Ori Regev and Noam Nisan. </author> <title> The POPCORN market an online market for computational resources. </title> <booktitle> In Proceedings of The First International Conference on Information and Computational Resources, </booktitle> <year> 1998. </year>
Reference-contexts: For example, a broker who has more work than hosts to give it out to might transfer not yet assigned work to less loaded brokers. 2.5 Other Metasystems Other Java based metasystems include Popcorn <ref> [22] </ref>, ATLAS [2], ParaWeb [4], and DOGMA [9]. Popcorn is applet based and uses economic methods for distribution of work. A Popcorn programmer divides the application into subcomputations, or computelets. The Buyer computer submits these computelets to a market web server.
Reference: [23] <author> Luis Moura Silva, Paulo Martins, and Joao Gabriel Silva. </author> <title> Merging web-based with cluster-based computing. </title> <booktitle> In Computing in Object-Oriented Parallel Environments, volume 1505 of Lecture Notes in Computer Science, </booktitle> <pages> pages 119-126. </pages> <publisher> Springer, </publisher> <pages> 98. </pages>
Reference-contexts: Cluster-based systems are used for parallel execution of applications on a singly administered network (e.g., educational institution or corporation). Metasystems target long running applications of universal interest, like cryptography, mathematics and computational science <ref> [23] </ref>. Because of the high latency and low end-to-end throughput of the Internet, metasystems are best suited for parallel applications in which each subcomputation needs only a limited or constant volume of data to initiate and/or synchronize execution and reports a constant amount of data as a result.
Reference: [24] <author> Rocke Verser. </author> <title> The $10,000 DES challenge. </title> <note> http://www.frii.com/rcv/deschall.htm. 15 </note>
Reference-contexts: Minimal host requirements open the problem up to a greater number of potential contributors. Similar goals and means were used by the DESCHALL project which cracked the code in the RSA DES Challenge <ref> [24] </ref>. Our framework is best suited to parallel applications with modest synchronization requirements. The ratio of computation time to amount of data needed to define a portion of the problem domain space should be high. The amount of data returned to the farmer should be small as well.
References-found: 24

