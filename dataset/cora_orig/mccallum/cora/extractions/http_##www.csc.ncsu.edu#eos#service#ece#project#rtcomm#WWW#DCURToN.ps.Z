URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/DCURToN.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/routing.html
Root-URL: http://www.csc.ncsu.edu
Title: A Distributed Algorithm for Delay-Constrained Unicast Routing  
Author: Douglas S. Reeves Hussein F. Salama 
Keyword: Routing, Delay Constraints, Quality of Service, Distributed Algorithms  
Address: Box 8206, Raleigh, NC 27695.  San Jose, CA 95134.  
Affiliation: Departments of Computer Science and Electrical and Computer Engineering, North Carolina State University,  
Note: Address:  Address: Cisco Systems,  
Email: Email: reeves@csc.ncsu.edu  Email: hsalama@cisco.com  
Date: February 18, 1998  
Abstract: In this paper, we study the NP-hard delay-constrained least-cost path problem. A solution to this problem is needed to provide real-time communication service to connection-oriented applications, such as video and voice. We propose a simple, distributed heuristic solution, called the delay-constrained unicast routing (DCUR) algorithm. DCUR requires limited network state information to be kept at each node: a cost vector and a delay vector. We prove DCUR's correctness by showing that it is always capable of constructing a loop-free delay-constrained path within finite time, if such a path exists. The worst case message complexity of DCUR is O(jV j 2 ) messages, where jV j is the number of nodes. However, simulation results show that, on the average, DCUR requires much fewer messages. Therefore, DCUR scales well to large networks. We also use simulation to compare DCUR to the optimal algorithm, and to the least-delay path algorithm. Our results show that DCUR's path costs are within 10% from those of the optimal solution. fl This work was supported in part by the Center for Advanced Computing and Communication at North Carolina State University, and by AFOSR grant F49620-96-1-0061. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of the AFOSR or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Hedrick, </author> <title> Routing Information Protocol. Internet RFC 1058, </title> <note> http://ds.internic.net/rfc/rfc1058.txt, June 1988. </note>
Reference-contexts: In this paper, we consider the class of applications having only a single destination. Unicast routing protocols can be classified into two general types: distance-vector protocols (such as the routing information protocol, RIP <ref> [1] </ref>), and link-state protocols (such as the open shortest path first protocol, OSPF [2]). Distance-vector protocols are based on a distributed version of Bellman-Ford's shortest path (SP) algorithm [3], which requires only a modest amount of information to be stored at each node. <p> The cost vectors and delay vectors are similar to the distance vectors of some existing routing protocols <ref> [1] </ref>. Distance-vector-based protocols such as RIP discuss in detail how to update the distance vectors in response to topology changes, and how to prevent instability. <p> We also assume that the link costs, the link delays, the contents of the cost vectors, and the contents of the delay vectors do not change during the execution of the routing algorithm. 5 The specification of RIP <ref> [1] </ref> discourages the use of dynamic metrics, such as link utilization. The reason is that dynamic metrics make it difficult for the nodes to converge to correct, consistent vector values.
Reference: [2] <author> J. Moy, </author> <note> OSPF Version 2. Internet RFC 1583, http://ds.internic.net/ rfc/rfc1583.txt, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: In this paper, we consider the class of applications having only a single destination. Unicast routing protocols can be classified into two general types: distance-vector protocols (such as the routing information protocol, RIP [1]), and link-state protocols (such as the open shortest path first protocol, OSPF <ref> [2] </ref>). Distance-vector protocols are based on a distributed version of Bellman-Ford's shortest path (SP) algorithm [3], which requires only a modest amount of information to be stored at each node. Link-state protocols use a non-distributed algorithm due to Dijkstra [3].
Reference: [3] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks. </title> <booktitle> Prentice-Hall, 2nd ed., </booktitle> <year> 1992. </year>
Reference-contexts: Unicast routing protocols can be classified into two general types: distance-vector protocols (such as the routing information protocol, RIP [1]), and link-state protocols (such as the open shortest path first protocol, OSPF [2]). Distance-vector protocols are based on a distributed version of Bellman-Ford's shortest path (SP) algorithm <ref> [3] </ref>, which requires only a modest amount of information to be stored at each node. Link-state protocols use a non-distributed algorithm due to Dijkstra [3]. With a link-state protocol, each node maintains complete information about the network topology. <p> Distance-vector protocols are based on a distributed version of Bellman-Ford's shortest path (SP) algorithm <ref> [3] </ref>, which requires only a modest amount of information to be stored at each node. Link-state protocols use a non-distributed algorithm due to Dijkstra [3]. With a link-state protocol, each node maintains complete information about the network topology. Considering the message complexity, distance-vector routing protocols scale well to large networks, since each node exchanges information only with its direct neighbors, and the amount of information stored at each node is smaller.
Reference: [4] <author> J. Garcia-Luna-Aceves and J. Behrens, </author> <title> Distributed, Scalable Routing Based on Vectors of Link States, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 13, no. 8, </volume> <pages> pp. 1383-1395, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Link-state protocols do not scale as well, because flooding is used to update the nodes' topology information, and the amount of information stored at each node is larger. They do not suffer from looping problems, however, because of their centralized nature. In 1995, Garcia-Luna-Aceves and Behrens <ref> [4] </ref> proposed a distributed protocol based on link vectors, that avoids looping problems and scales well to large networks. Both Bellman-Ford's and Dijkstra's SP algorithms are exact and run in polynomial time.
Reference: [5] <author> M. Garey and D. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <address> New York: </address> <publisher> W.H. Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: In this paper, we study the problem of unicast routing of real-time traffic subject to an end-to-end delay constraint in connection-oriented networks. We term this the Delay-Constrained Least Cost (DCLC) path problem. The DCLC problem has been shown to be NP-hard <ref> [5] </ref>. Widyono [6] proposed an optimal centralized delay-constrained algorithm to solve the DCLC problem. His algorithm, called the constrained Bellman-Ford (CBF) algorithm, performs a breadth-first search to find the optimal DCLC path. Due to its worst-case exponential running time, CBF is not practical for large networks. <p> Therefore P 0 (s; d) P (s; d). If P i 2 P (s; d) then P i 2 P 0 (s; d) if and only if Delay (P i ) D: (4) The DCLC problem is NP-hard <ref> [5] </ref> (p.214). It remains NP-hard in the case of undirected networks.
Reference: [6] <author> R. Widyono, </author> <title> The Design and Evaluation of Routing Algorithms for Real-Time Channels, </title> <type> Tech. Rep. </type> <institution> ICSI TR-94-024, University of California at Berkeley, International Computer Science Institute, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: In this paper, we study the problem of unicast routing of real-time traffic subject to an end-to-end delay constraint in connection-oriented networks. We term this the Delay-Constrained Least Cost (DCLC) path problem. The DCLC problem has been shown to be NP-hard [5]. Widyono <ref> [6] </ref> proposed an optimal centralized delay-constrained algorithm to solve the DCLC problem. His algorithm, called the constrained Bellman-Ford (CBF) algorithm, performs a breadth-first search to find the optimal DCLC path. Due to its worst-case exponential running time, CBF is not practical for large networks.
Reference: [7] <author> J. Jaffe, </author> <title> Algorithms for Finding Paths With Multiple Constraints, </title> <journal> Networks, </journal> <volume> vol. 14, </volume> <pages> pp. 95-116, </pages> <year> 1984. </year>
Reference-contexts: Widyono [6] proposed an optimal centralized delay-constrained algorithm to solve the DCLC problem. His algorithm, called the constrained Bellman-Ford (CBF) algorithm, performs a breadth-first search to find the optimal DCLC path. Due to its worst-case exponential running time, CBF is not practical for large networks. Jaffe <ref> [7] </ref> studied a variation of the problem in which the path cost and the path delay are defined as two constraints. He proposed a pseudo-polynomial-time heuristic and a polynomial-time heuristic for solving the problem.
Reference: [8] <author> Z. Wang and J. Crowcroft, </author> <title> Quality of Service Routing for supporting Multimedia Applications, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 14, no. 7, </volume> <pages> pp. 1228-1234, </pages> <month> September </month> <year> 1996. </year> <month> 23 </month>
Reference-contexts: This variation of the shortest-path problem can fail to find a delay-constrained solution when one exists. Wang and Crowcroft <ref> [8] </ref> investigated routing subject to multiple quality of service constraints in datagram networks. They considered multiplicative and concave constraints in addition to additive constraints. They presented algorithms for delay-constrained, minimum-bandwidth-constrained routing. Aida et al. [9] presented a method for optimal delay-constrained 2 routing when the delay is a random variable.
Reference: [9] <author> M. Aida, I. Nakamura, and T. Kubo, </author> <title> Optimal Routing in Communication Networks with Delay Variations, </title> <booktitle> in Proceedings of IEEE INFOCOM '92, </booktitle> <pages> pp. 153-159, </pages> <year> 1992. </year>
Reference-contexts: Wang and Crowcroft [8] investigated routing subject to multiple quality of service constraints in datagram networks. They considered multiplicative and concave constraints in addition to additive constraints. They presented algorithms for delay-constrained, minimum-bandwidth-constrained routing. Aida et al. <ref> [9] </ref> presented a method for optimal delay-constrained 2 routing when the delay is a random variable. Cost, however, was not considered in this work. Rampal and Reeves [10] investigated routing algorithms for real-time traffic. Their focus was on the call admission probability, rather than the minimum cost.
Reference: [10] <author> S. Rampal and D. Reeves, </author> <title> An Evaluation of Routing and Admission Control Algorithms for Multimedia Traffic, </title> <journal> Computer Communications, </journal> <volume> vol. 18, no. 10, </volume> <pages> pp. 755-768, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: They considered multiplicative and concave constraints in addition to additive constraints. They presented algorithms for delay-constrained, minimum-bandwidth-constrained routing. Aida et al. [9] presented a method for optimal delay-constrained 2 routing when the delay is a random variable. Cost, however, was not considered in this work. Rampal and Reeves <ref> [10] </ref> investigated routing algorithms for real-time traffic. Their focus was on the call admission probability, rather than the minimum cost. Delay-constrained unicast routing is a special case of the delay-constrained multicast routing problem which has received a lot of attention in recent years [11].
Reference: [11] <author> H. Salama, D. Reeves, and Y. Viniotis, </author> <title> Evaluation of Multicast Routing Algorithms for Real-Time Communication on High-Speed Networks, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 15, no. 3, </volume> <pages> pp. 332-345, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Rampal and Reeves [10] investigated routing algorithms for real-time traffic. Their focus was on the call admission probability, rather than the minimum cost. Delay-constrained unicast routing is a special case of the delay-constrained multicast routing problem which has received a lot of attention in recent years <ref> [11] </ref>. Thus, delay-constrained multicast routing heuristics can be used to solve the DCLC problem. However, these delay-constrained multicast heuristics require complete information about the network topology to be available at every node, and their running times grow at fast rates with the network size [11]. <p> lot of attention in recent years <ref> [11] </ref>. Thus, delay-constrained multicast routing heuristics can be used to solve the DCLC problem. However, these delay-constrained multicast heuristics require complete information about the network topology to be available at every node, and their running times grow at fast rates with the network size [11]. Therefore, the delay-constrained multicast routing heuristics cannot be applied to large networks. We present in this paper a new solution to the DCLC problem. Our solution is called the delay-constrained unicast routing (DCUR) algorithm.
Reference: [12] <author> H. Salama, </author> <title> Multicast Routing for Real-time Communication on High-Speed Networks. </title> <type> PhD thesis, </type> <institution> North Carolina State University, Department of Electrical and Computer Engineering, </institution> <month> November </month> <year> 1996. </year> <note> (also available from ftp://ftp.csc.ncsu.edu/pub/rtcomm/SalamaThesis.ps.Z). </note>
Reference-contexts: The positions of the nodes were fixed in a rectangle of size 4000 fl 2400 Km 2 , roughly the area of the continental USA. A random generator was used to create links interconnecting the nodes <ref> [12] </ref>. The output of this random generator is always a connected network in which each node's degree is at least 2.
References-found: 12

