URL: ftp://ftp.cs.washington.edu/tr/PRE-1991/UW-CSE-87-12-07.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Title: Adding Packet Radio to the Ultrix Kernel  
Author: Clifford Neuman Wayne Yamamoto 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science, FR-35 University of Washington  
Abstract: This paper describes the results of a project in which the standard Amateur Packet Radio network link layer protocol, AX.25 (a modified version of X.25), was added to the Ultrix kernel. By implementing AX.25 under Ultrix, and by taking advantage of the IP implementations that already exist for PCs, it is possible for packet radio users with PCs to access IP-based services running on our server and on the Internet. A MicroVAX is being used as an IP gateway for an Amateur Packet Radio network that stretches from Seattle to Tacoma. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Beattie, J. Gordon Jr., and Moulton, Thomas. </author> <title> ``OSI: A Plan Comes Together''. </title> <booktitle> Sixth ARRL Computer Networking Conference, </booktitle> <address> Redondo Beach, CA, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: As a result, network layer protocols became a topic of much discussion. A number of network layer protocols were proposed, and work has proceeded on many of them in parallel. The approach taken by COSI <ref> [1] </ref> and NET/ROM involved the establishment of networks of servers within which routing was taken care of automatically. With NET/ROM, users would connect to a node on the network. They would then connect to the NET/ROM node nearest their destination. Finally, they would connect to their destination. <p> This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical <ref> [1] </ref> Link [2] Network [3] Transport [4] Application [7] Presentation [6] Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3.
Reference: 2. <author> Chepponis, Mike, and Karn, Phil. </author> <title> ``The KISS TNC: A Simple Host-to-TNC Communications Protocol''. </title> <booktitle> Sixth ARRL Computer Networking Conference, </booktitle> <address> Redondo Beach, CA, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: Instead, one communicates with it though a serial line. Since we did not require the higher software layers of the TNC, we used a stripped down version of the software for it known as the KISS 3 <ref> [2] </ref> TNC code. This code, which may be downloaded into the TNC, sends and receives data and calculates the necessary checksums. Unlike the normal code that resides in the ROM of the TNC, the KISS TNC code does not worry about the packet format at all. 2.2. <p> This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link <ref> [2] </ref> Network [3] Transport [4] Application [7] Presentation [6] Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3.
Reference: 3. <author> Fox, Terry L. ``AX.25 Amateur Packet-Radio Link-Layer Protocol. </author> <title> Version 2.0.'' </title> <booktitle> American Radio Relay league, </booktitle> <month> October </month> <year> 1984. </year>
Reference-contexts: This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link [2] Network <ref> [3] </ref> Transport [4] Application [7] Presentation [6] Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3.
Reference: 4. <author> Karn, Phil. ``TCP/IP, </author> <title> A Proposal for Amateur Packet Radio Levels 3 and 4''. </title> <booktitle> Fourth ARRL Computer Networking Conference, </booktitle> <address> San Fran-cisco, </address> <month> March </month> <year> 1985. </year>
Reference-contexts: At the same time that development was proceeding with NET/ROM and COSI, work was proceeding on supporting a packet radio implementation of TCP/IP for the IBM PC. This work was being done primarily by Karn <ref> [4] </ref>. One advantage of TCP/IP over the other approaches is that the user's computer becomes part of the network: one connects to the ultimate destination, rather than connecting to a network node and from there connecting to the destination. <p> This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link [2] Network [3] Transport <ref> [4] </ref> Application [7] Presentation [6] Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3. Setup and Testing Once the packet radio driver was running, our final task was to translate Internet addresses into AX.25 addresses.
Reference: 5. <author> Karn, Phil. </author> <title> ``The KA9Q Internet (TCP/IP) Package: A Progress Report''. </title> <booktitle> Sixth ARRL Computer Networking Conference, </booktitle> <address> Redondo Beach, CA, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link [2] Network [3] Transport [4] Application [7] Presentation [6] Session <ref> [5] </ref> ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3. Setup and Testing Once the packet radio driver was running, our final task was to translate Internet addresses into AX.25 addresses. <p> AX.25 addresses look like amateur radio callsigns followed by a 4 bit system ID. Things are complicated by the fact that some entries may contain additional callsigns for digipeaters. Thus, a different set of ARP routines is needed for packet radio. Karn's IBM-PC code <ref> [5] </ref> includes an ARP implementation that supports both AX.25 and Ethernet addresses. Because we did not want to modify the code for our system that is used on the Ethernet side of the gateway, this code was not taken.
Reference: 6. <author> Leffler, S., Joy, W., Fabry, R., and Karels, M. </author> <title> ``Networking Implementation Notes 4.3 BSD Edition''. </title> <institution> Computer Systems Research Group, University of California, Berkeley, </institution> <month> June </month> <year> 1986. </year>
Reference-contexts: This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link [2] Network [3] Transport [4] Application [7] Presentation <ref> [6] </ref> Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3. Setup and Testing Once the packet radio driver was running, our final task was to translate Internet addresses into AX.25 addresses.
Reference: 7. <author> Neuman, Clifford. </author> <title> ``Packet Radio and IP for the Unix Operating System''. </title> <booktitle> Sixth ARRL Computer Networking Conference, </booktitle> <address> Redondo Beach, CA, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: This approach to handling incoming packets allows other layer three protocols to be handled in an interesting manner, described later in this paper. Physical [1] Link [2] Network [3] Transport [4] Application <ref> [7] </ref> Presentation [6] Session [5] ISO/OSI model Radio AX.25 TCP UDP SMTP Telnet FTP Protocol Radio TNC/KISS Packet Radio Driver Existing Ultrix Network Support Implementation 2.3. Setup and Testing Once the packet radio driver was running, our final task was to translate Internet addresses into AX.25 addresses.
Reference: 8. <author> Plummer, David C. </author> <title> ``An Ethernet Address Resolution Protocol''. Network Information Center, </title> <address> RFC826. </address> <month> September </month> <year> 1982. </year>
Reference-contexts: Setup and Testing Once the packet radio driver was running, our final task was to translate Internet addresses into AX.25 addresses. This is done using the address resolution protocol (ARP) <ref> [8] </ref> in a manner similar to the way that IP addresses are translated into Ethernet addresses. AX.25 addresses look like amateur radio callsigns followed by a 4 bit system ID. Things are complicated by the fact that some entries may contain additional callsigns for digipeaters.
References-found: 8

