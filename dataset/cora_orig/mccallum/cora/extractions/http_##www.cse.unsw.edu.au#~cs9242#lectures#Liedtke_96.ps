URL: http://www.cse.unsw.edu.au/~cs9242/lectures/Liedtke_96.ps
Refering-URL: http://www.cse.unsw.edu.au/~cs9242/lectures/
Root-URL: http://www.cse.unsw.edu.au
Email: e-mail: jochen.liedtke@gmd.de  
Title: Towards Real -Kernels The -Kernel story is full of good ideas and blind alleys. The
Author: Jochen Liedtke plication malfunction. 
Address: Schlo Birlinghoven, 53754 Sankt Augustin, Germany,  
Affiliation: GMD German National Research Center for Information Technology,  
Date: Sep 1996  
Note: CACM 39(9), to appear  Do not cite! Do not copy!  this changed to disappointment because the first-generation -kernels turned out to be inefficient and inflexible. The -Kernel Vision Traditionally, the word `kernel' is used to denote the part of the operating system that is mandatory and  When the idea was introduced, the software-technological advantages seemed manifold and obvi  can be made and tested on line. All servers can use the mechanisms provided by the -kernel, e.g. multi-threading and IPC.  All this also holds  are no longer required to be absolutely trustworthy.) Although these advantages seemed obvious, the first-generation -kernels could not substantiate them.  
Abstract: At present, we are observing radically new approaches to the -kernel idea which try to avoid the past mistakes and to overcome the old flexibility and performance constraints. The second-generation - kernels might be a basis for all types of operating systems: timesharing, multi-media, soft and hard real-time. In contrast to this, the basic idea of the -kernel approach is to minimize the kernel and to implement whatever possible as servers outside of the kernel. Ideally, the kernel implements only address spaces, inter-process communication (IPC) and basic scheduling. All servers, even device drivers, run in user mode and are treated exactly like any other application by the kernel. Since each server has its own address space, all these objects are protected against each other. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bernabeu-Auban, J. M., Hutto, P. W., and Khalidi, Y. A.. </author> <title> The architecture of the Ra kernel. </title> <type> Technical Report GIT-ICS-87/35, </type> <institution> Georgia Institute of Technology, </institution> <address> Atlanta, GA, </address> <month> January </month> <year> 1988. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra <ref> [1] </ref>, V [7], some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels.
Reference: [2] <author> Bershad, B. N., Savage, S., Pardyak, P., Sirer, E. G., Fi-uczynski, M., Becker, D., Eggers, S., and Chambers, C.. </author> <title> Extensibility, safety and performance in the Spin operating system. </title> <booktitle> In 15th ACM Symposium on Operating System Principles (SOSP), </booktitle> <pages> pages 267-284, </pages> <address> Copper Mountain Resort, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Both approaches seem to overcome the performance problem. Exokernel's and L4's communication is up to 20 times faster than first-generation IPC. Some non--kernel systems are trying to reduce communication costs by avoiding IPC. As with Chorus and Mach, Solaris and Linux support kernel-loadable modules. The Spin system <ref> [2] </ref> extends the Synthesis [20] idea and uses a kernel-integrated compiler to generate safe code inside the kernel space. Communicating with servers of this kind requires less address-space switches.
Reference: [3] <author> Bricker, A., Gien, M., Guillemont, M., Lipkis, J., Orr, D., and Rozier, M.. </author> <title> A new look at microkernel-based Unix operating systems. </title> <type> Technical Report CS/TR-91-7, </type> <institution> Chorus systemes, Paris, </institution> <year> 1991. </year>
Reference-contexts: The measured -kernel penalty is too large to be ignored. From a practical point of view, the pure -kernel approach of the first generation failed. As a consequence, both Chorus and Mach decided to re-integrate the most critical servers and drivers in the kernel <ref> [3; 8] </ref>. Chorus' "supervisor actors" as well as Mach's "kernel-loaded tasks" run in kernel mode, can freely access kernel space and can freely interact with each other. Gaining performance by saving user-kernel and address-space switches looked reasonable and seemed to be successful.
Reference: [4] <author> Campbell, R., Islam, N., Madany, P., and Raila, D. </author> <title> Designing and implementing Choices: an object-oriented system in C++. </title> <journal> Communications of the ACM, </journal> <volume> 36(9) </volume> <pages> 117-126, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices <ref> [4] </ref>, Ra [1], V [7], some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels.
Reference: [5] <author> Cao, P., Felten, E. W., and Li, K.. </author> <title> Implementation and performance of application-controlled file caching. </title> <booktitle> In 1st USENIX Symposium on Operating Systems Design and Implementation (OSDI), </booktitle> <pages> pages 165-178, </pages> <address> Monterey, CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Pagers can be used to implement traditional paged virtual memory and file/database mapping as well as unpaged resident memory for device drivers, real-time or multimedia systems. User-supplied paging strategies <ref> [14; 5] </ref> are handled at the user level and are in no way restricted by the -kernel. Stacked address spaces like in Grasshopper [18] and stacked file systems [13] can be realized in the same fashion.
Reference: [6] <author> Chen, J. B. and Bershad, B. N. </author> <title> The impact of operating system structure on memory system performance. </title> <booktitle> In 14th ACM Symposium on Operating System Principles (SOSP), </booktitle> <pages> pages 120-133, </pages> <address> Asheville, NC, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: Some applications performed as well under a - kernel as under a monolithic kernel, a few even slightly better. Unfortunately, other applications were substantially degraded. Chen et al. <ref> [6] </ref> compared applications under Ultrix and Mach on a DS 5000/200 and found peak degradations of up to 66% (see Figure 2).
Reference: [7] <author> Cheriton, D. R., Whitehead, G. R., and Sznyter, E. W. </author> <title> Binary emulation of Unix using the V kernel. </title> <booktitle> In Usenix Summer Conference, </booktitle> <pages> pages 73-86, </pages> <address> Anaheim, CA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra [1], V <ref> [7] </ref>, some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels.
Reference: [8] <author> Condict, M., Bolinger D., McManus, E., Mitchell, D., and Lewontin, S. </author> <title> Microkernel modularity with integrated kernel performance. </title> <type> Technical report, </type> <institution> OSF Research Institute, </institution> <address> Cambridge, MA, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: The measured -kernel penalty is too large to be ignored. From a practical point of view, the pure -kernel approach of the first generation failed. As a consequence, both Chorus and Mach decided to re-integrate the most critical servers and drivers in the kernel <ref> [3; 8] </ref>. Chorus' "supervisor actors" as well as Mach's "kernel-loaded tasks" run in kernel mode, can freely access kernel space and can freely interact with each other. Gaining performance by saving user-kernel and address-space switches looked reasonable and seemed to be successful.
Reference: [9] <author> Engler, D., Kaashoek, M. F., and O'Toole, J. Exokernel, </author> <title> an operating system architecture for application-level resource management. </title> <booktitle> In 15th ACM Symposium on Operating System Principles (SOSP), </booktitle> <pages> pages 251-266, </pages> <address> Copper Mountain Resort, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Perhaps reducing a large monolithic kernel does not lead to a real -kernel? New Radical Designs A new radical (from Latin radicalis: "from the root") approach, designing a -kernel architecture from scratch, seemed promising and necessary. We discuss Exokernel <ref> [9] </ref> and L4 [16] which both concentrate on a minimal and clean new architecture and support highly extensible operating systems. Exokernel developed at MIT is a small and hardware-dependent -kernel. It is based on the the sis that * Abstractions are costly and restrict flexibility.
Reference: [10] <author> Golub, D., Dean, R., Forin, A., and Rashid, R. </author> <title> Unix as an application program. </title> <booktitle> In Usenix Summer Conference, </booktitle> <pages> pages 87-96, </pages> <address> Anaheim, CA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra [1], V [7], some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach <ref> [10] </ref>, the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels. Its basic idea is that the kernel manages physical and virtual memory but forwards page faults to specific user-level tasks.
Reference: [11] <author> Guillemont, M. </author> <title> The chorus distributed operating system: </title> <booktitle> Design and implementation. In ACM International Symposium on Local Computer Networks, </booktitle> <pages> pages 207-223, Firenze, </pages> <month> April </month> <year> 1982. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra [1], V [7], some even moved to commercial use, in particular Chorus <ref> [11] </ref>, L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels. Its basic idea is that the kernel manages physical and virtual memory but forwards page faults to specific user-level tasks.
Reference: [12] <author> Kessler, R. and Hill, M. D. </author> <title> Page placement algorithms for large real-indexed caches. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(4) </volume> <pages> 11-22, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Multi-media and timesharing resource allocators can coexist if the servers cooperate. Memory-based devices like bitmap displays are realized by a memory manager holding the screen memory in its address space. Improving the hit rates of a secondary cache by means of page allocation or reallocation <ref> [12; 21] </ref> can be implemented by means of a pager which applies cache-dependent policies for allocating virtual pages in physical memory. Remote IPC is implemented by communication servers which translate local messages to external communication protocols and vice versa. The communication hardware is accessed by device drivers.
Reference: [13] <author> Khalidi, Y. A. and Nelson, M. N. </author> <title> Extensible file systems in Spring. </title> <booktitle> In 14th ACM Symposium on Operating System Principles (SOSP), </booktitle> <pages> pages 1-14, </pages> <address> Asheville, NC, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: User-supplied paging strategies [14; 5] are handled at the user level and are in no way restricted by the -kernel. Stacked address spaces like in Grasshopper [18] and stacked file systems <ref> [13] </ref> can be realized in the same fashion. Multi-media and other real-time applications require memory resources to be allocated in a way that allows predictable execution times.
Reference: [14] <author> Lee, C. H., Chen, M. C., and Chang, R. C. </author> <title> HiPEC: high performance external virtual memory caching. </title> <booktitle> In 1st USENIX Symposium on Operating Systems Design and Implementation (OSDI), </booktitle> <pages> pages 153-164, </pages> <address> Monterey, CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Pagers can be used to implement traditional paged virtual memory and file/database mapping as well as unpaged resident memory for device drivers, real-time or multimedia systems. User-supplied paging strategies <ref> [14; 5] </ref> are handled at the user level and are in no way restricted by the -kernel. Stacked address spaces like in Grasshopper [18] and stacked file systems [13] can be realized in the same fashion.
Reference: [15] <editor> Liedtke, J. </editor> <booktitle> A persistent system in real use experiences of the first 13 years -. In 3rd International Workshop on Object Orientation in Operating Systems (IWOOOS), </booktitle> <pages> pages 2-11, </pages> <address> Asheville, NC, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra [1], V [7], some even moved to commercial use, in particular Chorus [11], L3 <ref> [15] </ref> and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels. Its basic idea is that the kernel manages physical and virtual memory but forwards page faults to specific user-level tasks.
Reference: [16] <editor> Liedtke, J. </editor> <booktitle> On -kernel construction. In 15th ACM Symposium on Operating System Principles (SOSP), </booktitle> <pages> pages 237-250, </pages> <address> Copper Mountain Resort, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Surprisingly, a deeper analysis shows that the three points mentioned cannot be the real reasons: the hardware-inherited costs of mode and address-space switching are only 3% to 7% of the measured costs (see Figure 4). A detailed discussion can be found in <ref> [16] </ref>. A strange situation: on the one hand we knew that the kernels could run at least ten times faster; on the other hand, after optimizing them for years, we no longer saw new significant optimization possibilities. <p> Perhaps reducing a large monolithic kernel does not lead to a real -kernel? New Radical Designs A new radical (from Latin radicalis: "from the root") approach, designing a -kernel architecture from scratch, seemed promising and necessary. We discuss Exokernel [9] and L4 <ref> [16] </ref> which both concentrate on a minimal and clean new architecture and support highly extensible operating systems. Exokernel developed at MIT is a small and hardware-dependent -kernel. It is based on the the sis that * Abstractions are costly and restrict flexibility. <p> It is based on the theses that * Efficiency and flexibility require a minimal set of general -kernel abstractions. * -kernels are processor dependent. 5 In <ref> [16] </ref> we show that even compatible processors like 486 and Pentium need different -kernel implementations (with the same API), not only different coding but different algorithms and data structures. Like optimizing code generators, -kernels are inherently not portable, although they improve the portability of the whole system. <p> Granting is only used in special situations to avoid double bookkeeping and address-space overflow. (For a more detailed description see <ref> [16] </ref>.) initial space (physical memory) @ @ @ @ mem server 1 P P P P P mem server 2 fi fi pager 1 pager 2 driver driver application application application application In contrast to the external-pager concept, the kernel confines itself to mechanisms.
Reference: [17] <author> Liedtke, J., Bartling, U., Beyer, U., Heinrichs, D., Ruland, R., and Szalay, G. </author> <title> Two years of experience with a -kernel based OS. </title> <journal> Operating Systems Review, </journal> <volume> 25(2) </volume> <pages> 51-62, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Furthermore, different systems can be used simultaneously. Application-specific memory sharing and distributed shared memory can also be implemented by user-level servers outside of the kernel. The second conceptional step towards -kernels was the idea of handling hardware interrupts as IPC messages <ref> [17] </ref> (and including IO-ports in address spaces). The kernel captures the interrupt but does not handle it. Instead, it generates a message for the Application Pager -kernel page fault resume user-level process currently associated with this interrupt.
Reference: [18] <author> Lindstrom, A., Rosenberg, J., and Dearle, A. </author> <title> The grand unified theory of address spaces. </title> <booktitle> In 5th Workshop on Hot Topics in Operating Systems (HotOS-V), pages xx-xx, </booktitle> <address> Orcas Island, WA, </address> <month> May </month> <year> 1995. </year> <month> 8 </month>
Reference-contexts: User-supplied paging strategies [14; 5] are handled at the user level and are in no way restricted by the -kernel. Stacked address spaces like in Grasshopper <ref> [18] </ref> and stacked file systems [13] can be realized in the same fashion. Multi-media and other real-time applications require memory resources to be allocated in a way that allows predictable execution times.
Reference: [19] <author> Mullender, A. J. </author> <title> The amoeba distributed operating system: Selected papers 1984-1987. </title> <type> Technical Report Tract. No. 41, </type> <institution> CWI, </institution> <address> Amsterdam, </address> <year> 1987. </year>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba <ref> [19] </ref>, Choices [4], Ra [1], V [7], some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager [22] was the first conceptual breakthrough towards real -kernels.
Reference: [20] <author> Pu, C., Massalin, H., and Ioannidis, J. </author> <title> The Synthesis kernel. </title> <journal> Computing Systems, </journal> <volume> 1(1) </volume> <pages> 11-32, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Exokernel's and L4's communication is up to 20 times faster than first-generation IPC. Some non--kernel systems are trying to reduce communication costs by avoiding IPC. As with Chorus and Mach, Solaris and Linux support kernel-loadable modules. The Spin system [2] extends the Synthesis <ref> [20] </ref> idea and uses a kernel-integrated compiler to generate safe code inside the kernel space. Communicating with servers of this kind requires less address-space switches. The strongly-reduced IPC costs of second-generation -kernels might make this technique obsolete or even disqualify it, since kernel-compilers impose a certain overhead on the kernel.
Reference: [21] <author> Romer, T. H., Lee, D. L., Bershad, B. N., and Chen, B. </author> <title> Dynamic page mapping policies for cache conflict resolution on standard hardware. </title> <booktitle> In 1st USENIX Symposium on Operating Systems Design and Implementation (OSDI), </booktitle> <pages> pages 255-266, </pages> <address> Monterey, CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Multi-media and timesharing resource allocators can coexist if the servers cooperate. Memory-based devices like bitmap displays are realized by a memory manager holding the screen memory in its address space. Improving the hit rates of a secondary cache by means of page allocation or reallocation <ref> [12; 21] </ref> can be implemented by means of a pager which applies cache-dependent policies for allocating virtual pages in physical memory. Remote IPC is implemented by communication servers which translate local messages to external communication protocols and vice versa. The communication hardware is accessed by device drivers.
Reference: [22] <author> Young, M., Tevanian, A., Rashid, R., Golub, D., Eppinger, J., Chew, J., W. Bolosky, D. Black, and R. Baron. </author> <title> The duality of memory and communication in the implementation of a multiprocessor operating system. </title> <booktitle> In 11th ACM Symposium on Operating System Principles (SOSP), </booktitle> <address> Austin, TE, </address> <month> November </month> <year> 1987. </year> <month> 9 </month>
Reference-contexts: Many academic projects trod this path, e.g. Amoeba [19], Choices [4], Ra [1], V [7], some even moved to commercial use, in particular Chorus [11], L3 [15] and Mach [10], the latter becoming the industrial -kernel flagship. Innovations Mach's invention of the external pager <ref> [22] </ref> was the first conceptual breakthrough towards real -kernels. Its basic idea is that the kernel manages physical and virtual memory but forwards page faults to specific user-level tasks. These pagers implement the mapping from virtual memory to backing store by writing back and loading page images.
References-found: 22

