URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1997/1997-20.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Dynamic Motion Planning in Low Obstacle Density Environments  
Author: Robert-Paul Berretty Mark Overmars A. Frank van der Stappen 
Keyword: Motion planning, low obstacle density, moving obstacles, cell decomposition.  
Address: P.O. Box 80.089, 3508 TB Utrecht, The Netherlands.  
Affiliation: Department of Computer Science, Utrecht University,  
Abstract: A fundamental task for an autonomous robot is to plan its own motions. Exact approaches to the solution of this motion planning problem suffer from high worst-case running times. The weak and realistic low obstacle density (L.O.D.) assumption results in linear complexity in the number of obstacles of the free space [11]. In this paper we address the dynamic version of the motion planning problem in which a robot moves among moving polygonal obstacles. The obstacles are assumed to move along constant complexity polylines, and to respect the low density property at any given time. We will show that in this situation a cell decomposition of the free space of size O(n 2 ff(n) log 2 n) can be computed in O(n 2 ff(n) log 2 n) time. The dynamic motion planning problem is then solved in O(n 2 ff(n) log 3 n) time. We also show that these results are close to optimal. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. de Berg, L. Guibas, and D. Halperin. </author> <title> Vertical decomposition for triangles in 3-space. Discrete & Computational Geometry, </title> <address> 15:3561, </address> <year> 1996. </year>
Reference-contexts: To this end, we construct a vertical decomposition of the arrangement. Since the vertical decomposition refines the cells of the arrangement, the subcells of the final decomposition still have constant-size coverage. The approach we use <ref> [1] </ref> requires that the columns in the work-time space, as described in Section 3.2, are in general position. This can be achieved by an appropriate perturbation of the vertices of the columns. Before we can calculate a vertical decomposition we have to triangulate the 2-faces of the columns. <p> The vertical decomposition of the arrangement A (S) decomposes each cell of A (S) into subcells, and is defined as follows (see <ref> [1] </ref>): from every point on an edge of A (S) this can be a part of a triangle edge or of the intersection of two triangleswe extend a vertical ray in positive and negative x 3 -direction to the first triangle above and the first triangle below this point. <p> Application of this result to the arrangement of grown obstacle column boundaries A (col ffi H ), which satisfies K = O (n 2 ), yields the complexity bound. We can compute the vertical decomposition using an algorithm by De Berget al. <ref> [1] </ref>. This algorithm runs in time O (n 2 log n + V log n), where V is the combinatorial complexity of the vertical decomposition.
Reference: [2] <author> M. de Berg, M. Katz, A.F. van der Stappen, and J. Vleugels. </author> <title> Realistic input models for geometric algorithms. </title> <booktitle> In Proc. of the 13th ACM Symp. on Computational Geometry pages 294303, </booktitle> <year> 1997. </year>
Reference-contexts: For a robot B moving amidst n stationary obstacles the cell decomposition of the free space has O (n) size and is computable in O (n log n) time. Vleugels [12] extended these results to multiple robots simultaneously operating in the same workspace. De Berg et al. <ref> [2] </ref> gave an overview of several realistic input models and gave experimental results on scenes based on real input data, which showed that the `hidden' constant in the low obstacle density assumption was indeed low.
Reference: [3] <author> J. Canny and J. Reif. </author> <title> New lower bound techniques for robot motion planning problems. </title> <booktitle> In Proc. 28th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 4960, </pages> <address> Los Angeles, </address> <year> 1987. </year>
Reference-contexts: For example, Reif and Sharir [6] showed that, when obstacles in a 3-dimensional workspace are allowed to rotate, the motion planning problem is PSPACE-hard if the velocity modulus is bounded, and NP-hard otherwise. (A similar result was obtained by Sutner and Maass [8].) Canny and Reif <ref> [3] </ref> showed that dynamic motion planning for a point in the plane, with a bounded velocity modulus and an arbitrary number of convex polygonal obstacles, is NP-hard, even when the obstacles are convex and translate at constant linear velocities.
Reference: [4] <author> J. Hershberger and S. Suri. </author> <title> A pedestrian approach to ray shooting: Shoot a ray, take a walk. </title> <editor> J. </editor> <booktitle> Algorithms, </booktitle> <address> 18:403431, </address> <year> 1995. </year>
Reference-contexts: This is crucial here.) We again add a Steiner triangulation T m of P between T t and T b . In the non-convex case we have to use a more sophisticated Steiner triangulation. For this we use a triangulation by Hershberger and Suri <ref> [4] </ref> that was originally designed for ray shooting in simple polygons. This triangulation t m has three important properties. Let k be the number of edges of P : 1. <p> The triangulation can be computed in O (k) time. We can derive the following lemma from the properties of T m . Lemma 4.3 Let P be a polygon with k vertices and without holes, Let T m be the triangulation of P as described in <ref> [4] </ref>. <p> It follows that the whole arrangement A has complexity O (log k). 2 This immediately results in the following corollary. Corollary 4.4 Let P be a polygon without holes. Let T m be the triangulation described in <ref> [4] </ref>. Let T a be another triangulation of P with complexity m. The arrangement we obtain by overlaying T a and T m has O (m log m) constant complexity faces.
Reference: [5] <author> J. Reif. </author> <title> Complexity of the generalized mover's problem. In Planning, Geometry and Complexity of Robot Motion, </title> <editor> J.T. Schwartz, M. Sharir, J. Hopcroft (Eds.), </editor> <booktitle> pages 267281, </booktitle> <publisher> Ablex Pub., </publisher> <address> Norwood, NJ, </address> <year> 1987. </year>
Reference-contexts: A feasible motion for the robot corresponds to a curve from Z 0 to Z 1 in FP (or its closure). Motion planning is a difficult problem. In general, many instances of the robot motion planning problem are P-SPACE-complete, even if the obstacles are stationary <ref> [5] </ref>. For a constant-complexity robot moving amidst stationary obstacles polynomial time algorithms have been shown to exist. The running time is exponential in the number of degrees of freedom of the robot [7].
Reference: [6] <author> J. Reif and M. Sharir. </author> <title> Motion planning in the presence of moving obstacles. </title> <journal> In J. ACM 41, </journal> <volume> 4, </volume> <pages> pages 764-790, </pages> <year> 1994. </year>
Reference-contexts: This problem is also referred to as the dynamic motion planning problem. In general, when the obstacles in the workspace are allowed to move, the motion planning problem becomes even more complicated. For example, Reif and Sharir <ref> [6] </ref> showed that, when obstacles in a 3-dimensional workspace are allowed to rotate, the motion planning problem is PSPACE-hard if the velocity modulus is bounded, and NP-hard otherwise. (A similar result was obtained by Sutner and Maass [8].) Canny and Reif [3] showed that dynamic motion planning for a point in
Reference: [7] <author> J. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: II. general techniques for computing topological properties of real algebraic manifolds. </title> <booktitle> Advances in Applied Mathematics, </booktitle> <address> 4:289351, </address> <year> 1983. </year>
Reference-contexts: For a constant-complexity robot moving amidst stationary obstacles polynomial time algorithms have been shown to exist. The running time is exponential in the number of degrees of freedom of the robot <ref> [7] </ref>.
Reference: [8] <author> K. Sutner and W. Maass. </author> <title> Motion planning among time dependent obstacles. </title> <journal> Acta Informatica, </journal> <volume> 26:93133, </volume> <year> 1988. </year>
Reference-contexts: For example, Reif and Sharir [6] showed that, when obstacles in a 3-dimensional workspace are allowed to rotate, the motion planning problem is PSPACE-hard if the velocity modulus is bounded, and NP-hard otherwise. (A similar result was obtained by Sutner and Maass <ref> [8] </ref>.) Canny and Reif [3] showed that dynamic motion planning for a point in the plane, with a bounded velocity modulus and an arbitrary number of convex polygonal obstacles, is NP-hard, even when the obstacles are convex and translate at constant linear velocities.
Reference: [9] <author> B. Tagansky. </author> <title> A new technique for analyzing substructures in arrangements. </title> <booktitle> In Proc. 11th Annual ACM Symp. on Computational Geometry, </booktitle> <year> 1995. </year>
Reference-contexts: top and bottom faces.) Theorem 4.1 The vertical decomposition of the arrangement A (col ffi H ) in the work-time space consists of O (n 2 ff (n) log n) constant complexity subcells, and can be computed in time O (n 2 ff (n) log 2 n). 9 Proof: Tagansky <ref> [9] </ref> proved that the vertical decomposition of the entire arrange-ment of a set of n triangles in IR 3 consists of O (K + n 2 ff (n) log n) subcells where K is the complexity of the arrangement.
Reference: [10] <author> A.F. van der Stappen. </author> <title> Motion planning amidst fat obstacles. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Utrecht University, </institution> <year> 1994. </year>
Reference-contexts: However, their algorithm takes exponential time in the number of moving obstacles. Van der Stappen et al. [11] (see also <ref> [10] </ref>) showed that modelling robots in realistic workspaces has a profound influence on the complexity of solving the static motion planning problem, mainly independent of the number of degrees of freedom of the robot.
Reference: [11] <author> A.F. van der Stappen, M.H. Overmars, M. de Berg and J. Vleugels. </author> <title> Motion planning in environments with low obstacle density. </title> <type> Technical report, </type> <institution> UU-CS-1997-19, Dept. of Computer Science, Utrecht University, </institution> <year> 1997. </year> <month> 17 </month>
Reference-contexts: However, their algorithm takes exponential time in the number of moving obstacles. Van der Stappen et al. <ref> [11] </ref> (see also [10]) showed that modelling robots in realistic workspaces has a profound influence on the complexity of solving the static motion planning problem, mainly independent of the number of degrees of freedom of the robot. <p> In this paper we will first present an overview of the method used in the paper of Van der Stappen et al. <ref> [11] </ref>. The computation of the cell decomposition for the dynamic low obstacle density motion planning problem is treated in Sections 3 and 4; the algorithm to compute a feasible path through the cell decomposition is presented Section 5. <p> Section 6 concludes the paper. 2 2 Low Obstacle Density In this section we recall some of the definitions and results from the paper by Van der Stappen et al. <ref> [11] </ref> on motion planning in low density environments. The authors focus in particular on the large class of motion planning problems with configuration spaces of the form C = W fi D, where W is the d-dimensional workspace and D is some (f d)-dimensional rest space. <p> Van der Stappen et al. <ref> [11] </ref> showed that, under the circumstances outlined above, the complexity of the free space is linear in the number of obstacles. <p> The arrangement of all (constant-complexity) constraint hyper-surfaces f ; ( 2 f B; 2 f E) divides the higher-dimensional configuration space into free cells and forbidden cells. Van der Stappen et al. <ref> [11] </ref> considered so-called cylindri-fiable configuration spaces C = B fi D which have the property that the subspace Breferred to as the base spacecan be partitioned into constant complexity regions R satisfying jff ; j 2 f B ^ 2 f E ^ f ; " (R fi D) 6= ;gj <p> Theorem 2.2 states that the transformation of a cylindrical partition of the base space into a cell decomposition of the free space can be accomplished in time proportional to the size of the cylindrical partition. Theorem 2.2 <ref> [11] </ref> Let V be the set of regions of a cylindrical partition of a base space B and let E be the set of region adjacencies. Let the regions of B be of constant complexity. <p> Small and efficiently computable cylindrical partitions of W have led to optimal cell decompositions and thus efficient solutions to the motion planning problem (see <ref> [11] </ref> for details). In this paper, we show that the configuration space of the dynamic version of the low obstacle density motion planning problem is cylindrifiable as well. <p> The arrangements on the newly introduced planes are cross sections of the work-time space. They are arrangements of possibly intersecting grown obstacle boundaries and have linear complexity because the obstacles statisfy the low obstacle density property at any time <ref> [11] </ref>. We compute a triangulation of these 2-dimensional arrangements to assure that their faces have no holes. Since we have O (n) polyline vertices, the total added complexity is O (n 2 ). <p> Lemma 3.7 shows that the partition of the base space into regions R with jCov (R)j = O (1) is a cylindrical partition. The proof is very similar to the proof of Lemma 3.6 of Van der Stappen et al. <ref> [11] </ref> and has been omitted. Lemma 3.7 Let R B be such that jCov (R)j = O (1). <p> This can, for example, be accomplished by a breadth first search. Now, we can use the same approach as in <ref> [11] </ref> to compute the complete cell decomposition of the free space (Theorem 2.2). This result is a graph CG. Each node of CG corresponds to a constant complexity subcell in the free part of the configuration-time space. Each edge corresponds to an adjacency between two such subcells.
Reference: [12] <author> J. Vleugels. </author> <title> On fatness and fitness realistic input models for geometric algo-rithms. </title> <institution> PhD-thesis, Dept. of Computer Science, Utrecht University, </institution> <year> 1997. </year> <month> 18 </month>
Reference-contexts: For a robot B moving amidst n stationary obstacles the cell decomposition of the free space has O (n) size and is computable in O (n log n) time. Vleugels <ref> [12] </ref> extended these results to multiple robots simultaneously operating in the same workspace.
References-found: 12

