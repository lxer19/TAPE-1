URL: ftp://mighp0.cs.man.ac.uk/pub/theses/horrocks/dl96.ps.gz
Refering-URL: http://www.cs.man.ac.uk/mig/people/horrocks/publications.html
Root-URL: http://www.cs.man.ac.uk
Email: (horrocks|rector@cs.man.ac.uk)  
Title: Using a Description Logic with Concept Inclusions  
Author: Ian Horrocks and Alan Rector 
Address: Oxford Road, Manchester M13 9PL, UK  
Affiliation: Medical Informatics Group Department of Computer Science University of Manchester  
Abstract: The Galen project is constructing a conceptual schema for medical terminology using a Description Logic (DL) which supports transitive roles and general concept inclusions. Tableaux calculus subsumption testing algorithms for such a DL are well understood but serious worst case intractability would appear to limit their practical applicability. However by using heuristic speedup techniques adapted from constraint satisfaction problem solving procedures it is possible to dramatically improve performance with a realistic knowledge base. 
Abstract-found: 1
Intro-found: 1
Reference: [ Baader et al., 1991 ] <author> F. Baader, H.-J. Heinsohn, B. Hol-lunder, J. Muller, B. Nebel, W. Nutt, and H.-J. Profitlich. </author> <title> Terminological knowledge representation: A proposal for a terminological logic. </title> <type> Technical Memo TM-90-04, </type> <institution> Deutsches Forschungszentrum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <year> 1991. </year>
Reference-contexts: of intractability, the large numbers of disjunctive constraints introduced by GCIs. 2 Subsumption testing Most DLs restrict terminological axioms to acyclic concept introductions 1 of the form PN v C or CN : where PN (CN ) is a new primitive (non-primitive) concept name and C is a concept term <ref> [ Baader et al., 1991 ] </ref> . Concept terms can be expanded until they contain only primitives and subsumption between fully expanded terms can then be evaluated independently of the remainder of the terminology.
Reference: [ Baader et al., 1992 ] <editor> F. Baader, B. Hollunder, B. Nebel, and H.-J. </editor> <title> Profitlich. An empirical analysis of optimization techniques for terminological representation systems. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <pages> pages 270-281. </pages> <publisher> Morgan-Kaufmann, </publisher> <year> 1992. </year> <note> Also available as DFKI RR-93-03. </note>
Reference-contexts: A naive backtracking strategy would try all possible combinations of these intervening disjunctions before getting back to the real cause of the unsatisfiability. 4 Optimisation techniques Standard optimisation techniques <ref> [ Baader et al., 1992 ] </ref> do little to tackle the major cause of intractability in DLs which support GCIs|searching the large number of possible expansions offered by sets of disjunctive constraints. <p> For example (C uD )u (:D t :C ) ) C 0 u :C 0 ) ?. The pre-processing has two additional advantages: it allows search guiding heuristics to operate much more efficiently; it maximises the effect of the optimisation described in <ref> [ Baader et al., 1992 ] </ref> , which uses a combination of delayed expansion and the retention of expanded names to provide earlier unsatis-fiability detection. The tableaux expansion algorithm proceeds normally through the deterministic expansion and constraint propagation phases. <p> constraint's own label and the dependency lists generated by all the clashes with the value n removed. 4.4 Obvious satisfiability While optimisations which enhance the detection of obvious subsumption relations (unsatisfiable concept terms) are well known, it is difficult for tableaux algorithms to detect obvious non-subsumption relations (satisfiable concept terms) <ref> [ Baader et al., 1992 ] </ref> .
Reference: [ Baader et al., 1996 ] <author> F. Baader, M. Buchheit, and B. </author> <title> Hollunder. Cardinality restrictions on concepts. </title> <journal> Artificial Intelligence, </journal> <note> 1996. To appear. </note>
Reference-contexts: The most constraining disjunctions are estimated to be those containing concept terms with the highest MOMS value. The search strategy, applied to variable x in a constraint system S, would proceed by expanding deterministic constraints (using the enhanced blocking strategy described in <ref> [ Baader et al., 1996 ] </ref> ) and performing constraint propagation|disjunctive constraints x : (C 1 t : : : t C n ) are eliminated when one of x : C 1 ; : : : ; x : C n is in S and concept terms C are eliminated
Reference: [ Baader, 1990 ] <author> F. Baader. </author> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <institution> Research Report RR-90-13, Deutsches Forschungszentrum fur Kunstliche Intelli-genz GmbH (DFKI), </institution> <year> 1990. </year>
Reference-contexts: These constraints can be added either directly, using a new type of constraint and expansion rule [ Buchheit et al., 1993 ] , or indirectly, by extending the logic to include role union and transitive reflexive closure <ref> [ Baader, 1990; Schild, 1991 ] </ref> .
Reference: [ Baker, 1996 ] <author> A. B. Baker. </author> <title> Intelligent backtracking in the hardest constraint problems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <note> 1996. To appear. </note>
Reference-contexts: Critically constrained problems are consistently hard to solve due to subtle interactions between constraints. Under-constrained problems on the other hand, while generally easy to solve, can also prove extremely difficult in a small number of cases due to a phenomenon called thrashing <ref> [ Gent and Walsh, 1996; Baker, 1996 ] </ref> . Thrashing occurs when the order in which nondeterministic constraints are expanded results in large amounts of unproductive backtracking. <p> Freeman, 1995 ] ) and branching is then performed by recursively testing satisfiability with the chosen term added as a positive or negated constraint|the heuristic also determines in which order the two possibilities are explored. 4.3 Intelligent backtracking The thrashing problem can be addressed by using a form of backjumping <ref> [ Baker, 1996; Ginsberg, 1993 ] </ref> to return rapidly to a branching point where a different choice could remove the source of the conflict. In backjumping constraints are labeled to indicate the disjunctive expansion choices from which they were derived.
Reference: [ Bresciani et al., 1995 ] <author> P. Bresciani, E. Franconi, and S. Tessaris. </author> <title> Implementing and testing expressive description logics: a preliminary report. </title> <editor> In Gerard El-lis, Robert A. Levinson, Andrew Fall, and Veronica Dahl, editors, </editor> <title> Knowledge Retrieval, Use and Storage for Efficiency: </title> <booktitle> Proceedings of the First International KRUSE Symposium, </booktitle> <pages> pages 28-39, </pages> <year> 1995. </year>
Reference-contexts: concept term in an introduction may not refer, either directly or indirectly, to the concept name being introduced. 2 A concept equation A : = B is equivalent to a pair of GCIs, A v B and B v A. nor so many constraints that unsatisfiability is easily demonstrated (over-constrained) <ref> [ Bresciani et al., 1995; Hogg et al., 1996 ] </ref> . Critically constrained problems are consistently hard to solve due to subtle interactions between constraints.
Reference: [ Buchheit et al., 1993 ] <author> M. Buchheit, F. M. Donini, and A. Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: GCIs act as constraints x : (B t :A) which apply to every variable x in a constraint system. These constraints can be added either directly, using a new type of constraint and expansion rule <ref> [ Buchheit et al., 1993 ] </ref> , or indirectly, by extending the logic to include role union and transitive reflexive closure [ Baader, 1990; Schild, 1991 ] .
Reference: [ Freeman, 1995 ] <author> J. W. Freeman. </author> <title> Improvements to propositional satisfiability search algorithms. </title> <type> PhD thesis, </type> <institution> Department of Computer and Information Science, University of Pennsylvania, </institution> <address> Philadelphia, PA, USA, </address> <year> 1995. </year>
Reference-contexts: A variation on the MOMS 5 heuristic <ref> [ Freeman, 1995 ] </ref> can be used to estimate the degree to which each concept term in a disjunction constrains possible solutions. <p> The tableaux expansion algorithm proceeds normally through the deterministic expansion and constraint propagation phases. Heuristics are then used to select a term from one of the disjunction constraints (the current algorithm uses a combination of MOMS and Jeroslow and Wang heuristics with binary constraint propagation look-ahead as described in <ref> [ Freeman, 1995 ] </ref> ) and branching is then performed by recursively testing satisfiability with the chosen term added as a positive or negated constraint|the heuristic also determines in which order the two possibilities are explored. 4.3 Intelligent backtracking The thrashing problem can be addressed by using a form of backjumping
Reference: [ Freeman, 1996 ] <author> J. W. Freeman. </author> <title> Hard random 3-SAT problems and the Davis-Putnam procedure. </title> <journal> Artificial Intelligence, </journal> <volume> 81 </volume> <pages> 183-198, </pages> <year> 1996. </year>
Reference-contexts: However it seems worthwhile to investigate how well such an algorithm performs with a real knowledge base when a range of optimisations are employed. The adaption of heuristic speed up techniques from constraint satisfaction problems (CSPs), and in particular propositional satisfiability (SAT) testing procedures <ref> [ Freeman, 1996 ] </ref> , seems to be a promising method for dealing the most serious cause of intractability, the large numbers of disjunctive constraints introduced by GCIs. 2 Subsumption testing Most DLs restrict terminological axioms to acyclic concept introductions 1 of the form PN v C or CN : where <p> There are two steps to this procedure: firstly the pruning effect of earlier expansion choices is maximised by eliminating `obviously satisfiable' disjunctions and `obvious clashes' from the remaining disjunctions 4 ; secondly the pruning effect of future expansion choices is maximised by preferentially expanding highly constraining disjunctions <ref> [ Freeman, 1996 ] </ref> . A variation on the MOMS 5 heuristic [ Freeman, 1995 ] can be used to estimate the degree to which each concept term in a disjunction constrains possible solutions.
Reference: [ Gent and Walsh, 1996 ] <author> I. P. Gent and T. Walsh. </author> <title> The satisfiability constraint gap. </title> <journal> Artificial Intelligence, </journal> <volume> 81 </volume> <pages> 59-80, </pages> <year> 1996. </year>
Reference-contexts: Critically constrained problems are consistently hard to solve due to subtle interactions between constraints. Under-constrained problems on the other hand, while generally easy to solve, can also prove extremely difficult in a small number of cases due to a phenomenon called thrashing <ref> [ Gent and Walsh, 1996; Baker, 1996 ] </ref> . Thrashing occurs when the order in which nondeterministic constraints are expanded results in large amounts of unproductive backtracking.
Reference: [ Ginsberg, 1993 ] <author> M. L. Ginsberg. </author> <title> Dynamic backtracking. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 25-46, </pages> <year> 1993. </year>
Reference-contexts: Freeman, 1995 ] ) and branching is then performed by recursively testing satisfiability with the chosen term added as a positive or negated constraint|the heuristic also determines in which order the two possibilities are explored. 4.3 Intelligent backtracking The thrashing problem can be addressed by using a form of backjumping <ref> [ Baker, 1996; Ginsberg, 1993 ] </ref> to return rapidly to a branching point where a different choice could remove the source of the conflict. In backjumping constraints are labeled to indicate the disjunctive expansion choices from which they were derived. <p> A considerable amount of work remains to be done to evaluate and improve the optimisation procedures but early results show considerable promise. The introduction of backjumping seems to be particularly effective and it may be worth using more sophisticated backtracking procedures, such as dynamic backtracking <ref> [ Ginsberg, 1993 ] </ref> , which try to preserve useful work while returning to the source of discovered contradictions. Caching of partial constraint systems also proved a useful technique and allowed large numbers of failed subsumption tests to be avoided|extending this technique to tableaux sub-problems should provide further performance improvements.
Reference: [ Giunchiglia and Sebastiani, 1996a ] <author> F. Giunchiglia and R. Sebastiani. </author> <title> Building decision procedures for modal logics from propositional decision procedures|the case study of modal K. </title> <editor> In Michael McRobbie and John Slaney, editors, </editor> <booktitle> Proceedings of the Thirteenth International Conference on Automated Deduction (CADE-13), number 1104 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: The most constraining disjunctive constraint is then selected for expansion. 4.2 SAT based search Recent work has shown how SAT procedures can be used directly in a decision procedure for ALC <ref> [ Giunchiglia and Sebastiani, 1996a; 1996b ] </ref> . This technique can also be used to provide a more efficient mechanism for dealing with disjunctive constraints in tableaux algorithms. A pre-processing step is performed which lexically sorts, simplifies and explicitly encodes concept sub-terms.
Reference: [ Giunchiglia and Sebastiani, 1996b ] <author> F. Giunchiglia and R. Sebastiani. </author> <title> A SAT-based decision procedure for ALC. </title> <booktitle> In Principals of Knowledge Representation and Reasoning: Proceedings of the Fifth International Conference (KR'96). </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1996. </year>
Reference-contexts: chosen from 6 This is computationally expensive without the preprocessing step described in section 4.2. 7 If this results in any zero length disjunctions the algorithm can backtrack immediately. 8 This was one of the major causes of the performance improvement exhibited by the SAT based ALC algorithm described in <ref> [ Giunchiglia and Sebastiani, 1996b ] </ref> . the nth disjunction expanded is labeled fng and con-straints derived from deterministic expansion rules are labeled with the (union of the) label (s) from the triggering constraint (s). <p> The analysis of SAT based search is still at an early stage but improvements only seem to be in the region of 20% and are certainly not of the magnitude demonstrated for random K-SAT problems in <ref> [ Giunchiglia and Sebastiani, 1996b ] </ref> . This may be explained by the structure of the KB: easy over-constrained problems are rare and the number of concept terms 10 is large. This means that cases which flatter the SAT procedure occur only infrequently.
Reference: [ Hogg et al., 1996 ] <author> T. Hogg, B. A. Huberman, and C. P. Williams. </author> <title> Phase transitions and the search problem. </title> <journal> Artificial Intelligence, </journal> <volume> 81 </volume> <pages> 1-15, </pages> <address> 1996. </address> <publisher> Editorial. </publisher>
Reference-contexts: concept term in an introduction may not refer, either directly or indirectly, to the concept name being introduced. 2 A concept equation A : = B is equivalent to a pair of GCIs, A v B and B v A. nor so many constraints that unsatisfiability is easily demonstrated (over-constrained) <ref> [ Bresciani et al., 1995; Hogg et al., 1996 ] </ref> . Critically constrained problems are consistently hard to solve due to subtle interactions between constraints.
Reference: [ Horrocks et al., 1996 ] <author> I. Horrocks, A. Rector, and C. Goble. </author> <title> A description logic based schema for the classification of medical data. </title> <editor> In F. Baader, M. Buch-heit, M.A. Jeusfeld, and W. Nutt, editors, </editor> <title> Reasoning about structured objects|knowledge representation meets databases. </title> <booktitle> Proceedings of the 3rd Workshop KRDB'96, </booktitle> <pages> pages 24-28, </pages> <year> 1996. </year>
Reference-contexts: The algorithm being studied uses the former mechanism as it has a simple control structure which is amenable to the proposed op-timisation techniques. 3 Performance In practice most of the GCI constraints can be eliminated using a filtering technique which makes use of negated primitives in disjunctions <ref> [ Horrocks et al., 1996 ] </ref> , leaving satisfiability problems which are easily solved. However the performance of classification as a whole is still dominated by a relatively small number of `hard cases' of which there are two distinct sorts: critically constrained problems and under-constrained problems. <p> This problem is similar to searching possible variable assignments in SAT problems and adapted SAT optimisation techniques can be used to improve the performance of tableaux concept satisfiability testing algorithms. In fact it can be seen that the GCI constraint filtering technique <ref> [ Horrocks et al., 1996 ] </ref> corresponds to a common DPL 3 SAT optimisation, the deletion of clauses containing pure literals whose complements do not occur in the formula. 4.1 Heuristic guided search Heuristic guided search can be used to try to increase the effectiveness of pruning and minimise the number <p> It may also be worth maintaining a temporary cache to try and avoid the repeated solution of sub-problems during a single tableaux expansion or across the set of tableaux expansions required to classify of a concept. 5 Preliminary results In spite of the filtering technique <ref> [ Horrocks et al., 1996 ] </ref> some satisfiability tests still produce constraint systems in which variables are subject to a considerable number of disjunctive constraints introduced by GCIs.
Reference: [ Nowlan, 1993 ] <author> W. A. Nowlan. </author> <title> Structured methods of information management for medical records. </title> <type> PhD thesis, </type> <institution> University of Manchester, </institution> <year> 1993. </year>
Reference-contexts: The concept model is being built using a Description Logic (DL) which, due to the identification of critical design requirements <ref> [ Nowlan, 1993 ] </ref> , supports transitive roles and general concept inclusions (GCIs).
Reference: [ Rector et al., 1993 ] <author> A. L. Rector, </author> <title> W A Nowlan, </title> <publisher> and </publisher>
Reference-contexts: 1 Introduction The European Galen project aims to promote the sharing and re-use of medical data by using a concept model as a flexible and extensible classification schema <ref> [ Rector et al., 1993 ] </ref> . The concept model is being built using a Description Logic (DL) which, due to the identification of critical design requirements [ Nowlan, 1993 ] , supports transitive roles and general concept inclusions (GCIs).
References-found: 17

