URL: http://www.cse.unsw.edu.au/~achim/PostScripts/Hoffmann-ISCAS94.ps
Refering-URL: http://www.cse.unsw.edu.au/~achim/index.html
Root-URL: http://www.cse.unsw.edu.au
Email: E-mail: achim@cs.unsw.oz.au  
Title: The dynamic locking heuristic anew graph partitioning algorithm  
Author: Achim G. Hoffmann 
Address: P.O. Box 1, Sydney, NSW 2033, Australia  
Affiliation: University of New South Wales School of Computer Science and Engineering  
Abstract: In layout design finding efficiently good solutions to the hypergraph bipartitioning problem is of great importance. This paper introduces a new algorithm, the dynamic locking algorithm, which has empirically shown a significant improvement in the partitioning result compared to known algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Bui, C. Heigham, C. Jones, and T. Leighton. </author> <title> Improving the performance of the Kernighan-Lin and Simulated Annealing graph bisection algorithms. </title> <booktitle> In Proceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 775-778, </pages> <year> 1989. </year>
Reference-contexts: Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. Dunlop and Kernighan [2] developed a sophisticated application of FM for recursively partitioning a circuit into many parts for the placement problem in circuit design. Bui et al. <ref> [1] </ref> suggested to build clusters of nodes before bisecting the graph in order to improve the performance of the Kernighan-Lin heuristic. This paper introduces a new hypergraph bipartitioning algorithm.
Reference: [2] <author> A. E. Dunlop and B. W. Kernighan. </author> <title> A procedure for placement of standard-cell VLSI circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 1(CAD-4):92-98, </volume> <month> January </month> <year> 1985. </year>
Reference-contexts: Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. Dunlop and Kernighan <ref> [2] </ref> developed a sophisticated application of FM for recursively partitioning a circuit into many parts for the placement problem in circuit design. Bui et al. [1] suggested to build clusters of nodes before bisecting the graph in order to improve the performance of the Kernighan-Lin heuristic.
Reference: [3] <author> C. M. Fiduccia and R. M. Mattheyses. </author> <title> A linear-time heuristic for improving network partitions. </title> <booktitle> In Proceedings of the 19 th Design Automation Conference, </booktitle> <pages> pages 175-181, </pages> <year> 1982. </year>
Reference-contexts: 1 Introduction The problem of graph partitioning occurs in many domains of significant practical importance and economic impact. Among them is the design of VLSI chips. Unfortunately, graph bipartitioning has been proved to be NP-hard [4]. However, fast heuristic algorithms for the problem have been developed <ref> [6, 3] </ref>. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses [3] (in short FM) which is a fastened form of the heuristic of Kernighan & Lin [6] (in short KL). Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. <p> Among them is the design of VLSI chips. Unfortunately, graph bipartitioning has been proved to be NP-hard [4]. However, fast heuristic algorithms for the problem have been developed [6, 3]. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses <ref> [3] </ref> (in short FM) which is a fastened form of the heuristic of Kernighan & Lin [6] (in short KL). Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. <p> The FM heuristic has fastened KL by abandoning the idea of interchanging two nodes in a single step. Instead, Fiduccia and Mattheyses proposed to move a single node at a time <ref> [3] </ref>. Consequently, only for each single node its gain for moving to the opposite partition has to be computed. The node with the highest gain is selected and moved to the opposite partition. <p> The entire process is tried a few times with different randomly generated initial partitionings. 4 Empirical comparison The new Dynamic Locking Algorithm has been implemented in C and experimentally compared to a C implementation of the Fiduccia & Mattheyses <ref> [3] </ref> algorithm. FM has been chosen for comparison because it is known to be much faster than KL and still achieves usually results which are not much worse than the results by KL. The netlists used for the performance comparisons of DLA and FM contained between 250 and 10,000 nodes.
Reference: [4] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability. </title> <publisher> Freeman, </publisher> <address> San Francisco, CA, </address> <year> 1979. </year>
Reference-contexts: 1 Introduction The problem of graph partitioning occurs in many domains of significant practical importance and economic impact. Among them is the design of VLSI chips. Unfortunately, graph bipartitioning has been proved to be NP-hard <ref> [4] </ref>. However, fast heuristic algorithms for the problem have been developed [6, 3]. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses [3] (in short FM) which is a fastened form of the heuristic of Kernighan & Lin [6] (in short KL).
Reference: [5] <author> A. G. Hoffmann. </author> <title> Towards optimizing global Min-Cut partitioning. </title> <booktitle> In Proceedings of the 2 nd Euro-pean Design Automation Conference, </booktitle> <pages> pages 167-171. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: Also, the dynamic locking algorithm will be generalized in order to be used for multi-partitioning. Multi-partitioning has been shown to produce superior performance for the placement problem in VLSI layout design as opposed to recursive bipartitioning, see e.g. in <ref> [5, 8] </ref>.
Reference: [6] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell Systems Technical Journal, </journal> <volume> 49(2) </volume> <pages> 291-297, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: 1 Introduction The problem of graph partitioning occurs in many domains of significant practical importance and economic impact. Among them is the design of VLSI chips. Unfortunately, graph bipartitioning has been proved to be NP-hard [4]. However, fast heuristic algorithms for the problem have been developed <ref> [6, 3] </ref>. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses [3] (in short FM) which is a fastened form of the heuristic of Kernighan & Lin [6] (in short KL). Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. <p> However, fast heuristic algorithms for the problem have been developed [6, 3]. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses [3] (in short FM) which is a fastened form of the heuristic of Kernighan & Lin <ref> [6] </ref> (in short KL). Krishnamurthy [7] proposed a class of possible improvements of the FM heuristic. Dunlop and Kernighan [2] developed a sophisticated application of FM for recursively partitioning a circuit into many parts for the placement problem in circuit design.
Reference: [7] <author> B. Krishnamurthy. </author> <title> An improved min-cut algorithm for partitioning VLSI networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-33(5):438-446, </volume> <month> May </month> <year> 1984. </year>
Reference-contexts: However, fast heuristic algorithms for the problem have been developed [6, 3]. One of the most popular heuristics among them is the heuristic of Fiduccia & Mattheyses [3] (in short FM) which is a fastened form of the heuristic of Kernighan & Lin [6] (in short KL). Krishnamurthy <ref> [7] </ref> proposed a class of possible improvements of the FM heuristic. Dunlop and Kernighan [2] developed a sophisticated application of FM for recursively partitioning a circuit into many parts for the placement problem in circuit design.
Reference: [8] <author> G. Vijayan. </author> <title> Min-cost partitioning on a tree structure and applications. </title> <booktitle> In Proceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 771-774, </pages> <year> 1989. </year>
Reference-contexts: Also, the dynamic locking algorithm will be generalized in order to be used for multi-partitioning. Multi-partitioning has been shown to produce superior performance for the placement problem in VLSI layout design as opposed to recursive bipartitioning, see e.g. in <ref> [5, 8] </ref>.
References-found: 8

