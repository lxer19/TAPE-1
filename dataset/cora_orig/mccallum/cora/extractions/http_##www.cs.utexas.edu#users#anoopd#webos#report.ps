URL: http://www.cs.utexas.edu/users/anoopd/webos/report.ps
Refering-URL: http://www.cs.utexas.edu/users/anoopd/webos/report.html
Root-URL: 
Title: User Level Resource Management using Janus Report  
Author: by Manish Gupta and Anoopkumar Dawar 
Date: May 10, 1998  
Abstract: Janus is an architecture for running untrusted applications. We add to this architecture so that it provides a user level resource management mechanism. Using this mechanism one can specify which resources and in what amount can an application consume. The resources of primary interest are CPU, Memory, Disk and Network Bandwidth. Using this mechanism one can specify hard and soft limits on these resources. In the current implementation if an application tries to exceed its resource specification it is either killed or blocked depending upon the resource which it is trying to exceed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Cao, E. Felten, K. </author> <title> Li Implementation and Performance of Application-Controlled File Caching </title>
Reference-contexts: For instance providing application level control over file caching has been shown to reduce the application running time by 45 % <ref> [1] </ref> The high cost of having general virtual memory 1 primitives have been demonstrated by [3]. The advantage of using a bare bone operating system has been demonstrated by [2] The rest of the report is structured as follows. Section 2 ponders over the choices for realizing our basic belief.
Reference: [2] <author> D. Engler, M. Kaashoek and J. O'Toole Jr. Exokernel: </author> <title> An Operating System for Application Level Resource Management </title>
Reference-contexts: The advantage of using a bare bone operating system has been demonstrated by <ref> [2] </ref> The rest of the report is structured as follows. Section 2 ponders over the choices for realizing our basic belief. Section 3 gives an introduction to janus and justifies its choice for our project. Section 4 focuses on the design and implementation.
Reference: [3] <author> A. W. Appel and K. </author> <title> Li Virtual memory primitives for user programs </title>
Reference-contexts: For instance providing application level control over file caching has been shown to reduce the application running time by 45 % [1] The high cost of having general virtual memory 1 primitives have been demonstrated by <ref> [3] </ref>. The advantage of using a bare bone operating system has been demonstrated by [2] The rest of the report is structured as follows. Section 2 ponders over the choices for realizing our basic belief. Section 3 gives an introduction to janus and justifies its choice for our project.
Reference: [4] <author> Thomas. Anderson. </author> <title> The case for Application Specific Operating Systems </title>
Reference: [5] <author> Michael. Jones, Daniela. Rosu and Marcel-Catalin. </author> <title> Rosu CPU Reservations and Time Constraints : Efficient Predictable Scheduling of Independent Activities </title>
Reference: [6] <editor> Michael. Jones et al. </editor> <title> An Overview of the Rialto Real-Time Architecture </title>
Reference: [7] <author> Renu. Tewari, Harrick. Vin, Asit. Dan and Dinkar. </author> <title> Sitaram Resource-based Caching for Web Servers </title>
References-found: 7

