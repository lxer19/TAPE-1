URL: http://www.cs.ucsb.edu/conferences/java98/papers/rc5.ps
Refering-URL: http://www.cs.ucsb.edu/conferences/java98/program.html
Root-URL: http://www.cs.ucsb.edu
Email: email:  email: Donal.OMahony@cs.tcd.ie  
Title: Cracking RC5 with Java applets  
Author: Pavel Gladychev Ahmed Patel and Donal OMahony 
Web: -pavel,apatel-@net-cs.ucd.ie  
Address: College Dublin, Belfield, Dublin 4, Ireland;  College Dublin, Dublin 2, Ireland;  
Affiliation: CNDSRG, Dept. of Computer Science, University  Dept. of Computer Science, Trinity  
Abstract: The paper describes a distributed brute-force attack on RC5 cipher using Java applets. It introduces a novel model for long-term parallel computing based on the abstraction of solvers with limited lifetime. The associated problems and scheduling policy are discussed. The paper comments on the inherent performance problems of Java Virtual Machine and presents performance measurements of the cipher breaking applet for several computing platforms.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A.D.Alexandrov, M.Ibel, K.E.Schauser, K.E.Scheiman. SuperWeb: </author> <title> Research issues in Java-Based Global Computing. </title> <booktitle> In proceedings of the Workshop on Java for High performance Scientific and Engineering Computing Simulation and Modelling. </booktitle> <address> Syracuse University, New York, </address> <year> 1996. </year>
Reference-contexts: Multiple instances of the applet can run in parallel on different computers. If their work is properly coordinated, the joint processing power can be enormous. Several recent research projects proposed the use of Java applets for high-performance computing (see <ref> [1] </ref>, [3]). The basic architecture of an applet based parallel computation consists of a Web server and multiple instances of the applet downloaded from that server. Each instance run on a separate computer and solves some part of the larger problem.
Reference: 2. <editor> R.Baldwin, R.Rivest. RFC-2040: </editor> <booktitle> The RC5, RC5-CBC, RC5-CBC-Pad, and RC5-CTS Algorithms. </booktitle> <year> 1996 </year>
Reference-contexts: The implementation of KernelContext is based on the freely available Java HTTP server. 4. Lessons of RC5 implementation RSA Challenge presented 13 encrypted messages for the public contest. One message was encrypted using DES, others were encrypted using variations of RC5 cipher <ref> [2] </ref>. According to the RSA challenge rules, each encrypted message is prefixed with 24 known bytes: The unknown message is: . The brute-force attack then can simply test all possible keys against the known cipher text to find the right key.
Reference: 3. <author> A.Bartaloo, M.Karaul, Z.Kedm, and P.Wyckoff. </author> <title> Charlotte: Metacomputing on the Web. </title> <booktitle> In proceedings of the 9 th conference on parallel and Distributed Computing Systems, </booktitle> <year> 1996. </year>
Reference-contexts: Multiple instances of the applet can run in parallel on different computers. If their work is properly coordinated, the joint processing power can be enormous. Several recent research projects proposed the use of Java applets for high-performance computing (see [1], <ref> [3] </ref>). The basic architecture of an applet based parallel computation consists of a Web server and multiple instances of the applet downloaded from that server. Each instance run on a separate computer and solves some part of the larger problem. <p> It seems reasonable to design a runtime library which isolates applications from the complexity of the parallel environment. Besides, it is a natural way to implement well known parallel programming paradigms. Several experimental frameworks have been proposed recently. Those include Charlotte, WebCrunch, Javelin and a few others. Charlotte framework <ref> [3] </ref> provides programmers with the abstraction of a shared memory system. The shared data resides on the server while the parallel processes are scheduled one by one for executing in applet instances. Charlotte provides fault tolerance, but it does not try to minimise network traffic.
Reference: 4. <institution> Bovine RC5 Cracking Effort Home Page. </institution> <note> http://www.distributed.net/ </note>
Reference-contexts: Computing Platform Average performance (keys per second) Windows 95 + Pentium-II / 300MHz (JIT) 56,300 MacOS + Power Macintosh / 300 MHz 1,787 Solaris + Sun Ultra Sparc / 167 MHz 642 Despite the best efforts, RC5 implementation in Java is significantly slower than similar implementations used in Bovine effort <ref> [4] </ref> or by its competitors. There are at least three objective reasons: 1) Lack of rotations in the Java Virtual Machine instruction set Java Virtual Machine does not implement rotations. Rotations of 32 bit values are basic operations in RC5. They have been implemented using logical shifts.
Reference: 5. <author> P.Capello, B.Christiansen, M.F.Ionescu, M.O.Neary, K.E.Schauser, and D.Wu. Javelin: </author> <title> Internet-Based Parallel Computing Using Java. </title> <type> Technical Report, </type> <institution> University College of Santa Barbara, </institution> <year> 1997. </year>
Reference-contexts: The programmer must specify how to divide, transmit, and solve a sub-problem; and how to assemble sub-results into the overall computation result. The framework is basic but functional. Unfortunately, it may lose data under circumstances. Javelin <ref> [5] </ref> provides the most advanced runtime support. It aims to create a commercial base for parallel computing with Java applets. Javelin supports multiple programming paradigms including data parallel programming, message passing, and LINDA tuple space. The runtime support for a distributed brute-force attack has specific requirements.
Reference: 6. <author> C.Daly. WebCrunch. </author> <title> Client/server distributed problem solving harness in Java. </title> <address> http://www.oasis.leo.com/java/classes/parallel/cdaly.WC.dsc.html. </address>
Reference-contexts: Charlotte framework [3] provides programmers with the abstraction of a shared memory system. The shared data resides on the server while the parallel processes are scheduled one by one for executing in applet instances. Charlotte provides fault tolerance, but it does not try to minimise network traffic. WebCrunch framework <ref> [6] </ref> employs the abstraction of a problem which can be divided into sub-problems. The programmer must specify how to divide, transmit, and solve a sub-problem; and how to assemble sub-results into the overall computation result. The framework is basic but functional. Unfortunately, it may lose data under circumstances.
Reference: 7. <author> RSA Data Security, Inc. </author> <title> The RSA Data Security Secret-Key Challenge. </title> <address> http://www.rsa.com/rsalabs/97challenge/ </address>
Reference-contexts: They are as simple to download as browsing a Web page. It makes the attack much easier to distribute and increases the number of potential participants. A suitable cipher breaking contest was started by RSA Data Security on 28 January 1997 <ref> [7] </ref>. The contest enabled a very straightforward implementation of the brute-force attack in Java. Although our software did not win the contest, it was able to find the 40-bit RC5 key in reasonable time. Besides, the experiment brought up several important aspects of the Web based parallel processing.
References-found: 7

