URL: http://www.cs.berkeley.edu/~daw/twofish-aes98.ps
Refering-URL: http://www.cs.berkeley.edu/~daw/me.html
Root-URL: 
Title: Twofish: A 128-Bit Block Cipher  
Author: Bruce Schneier John Kelsey Doug Whiting David Wagner Chris Hall Niels Ferguson k 
Keyword: Twofish, cryptography, cryptanalysis, block cipher, AES.  
Address: Minnehaha Parkway, Minneapolis, MN 55419, USA;  5973 Avenida Encinas, Suite 110, Carlsbad, CA 92008, USA;  Berkeley, Soda Hall, Berkeley, CA 94720, USA;  
Affiliation: Systems, 101 E  Hi/fn, Inc.,  University of California  
Note: Current web site:  Counterpane Systems;  Counterpane Systems; hall@counterpane.com. k Counterpane Systems; niels@counterpane.com.  
Email: schneier@counterpane.com.  kelsey@counterpane.com.  dwhiting@hifn.com.  daw@cs.berkeley.edu.  
Phone: Counterpane  
Date: 15 June 1998  
Web: http://www.counterpane.com/twofish.html  
Abstract: Twofish is a 128-bit block cipher that accepts a variable-length key up to 256 bits. The cipher is a 16-round Feistel network with a bijective F function made up of four key-dependent 8-by-8-bit S-boxes, a fixed 4-by-4 maximum distance separable matrix over GF(2 8 ), a pseudo-Hadamard transform, bitwise rotations, and a carefully designed key schedule. A fully optimized implementation of Twofish encrypts on a Pentium Pro at 17.8 clock cycles per byte, and an 8-bit smart card implementation encrypts at 1820 clock cycles per byte. Twofish can be implemented in hardware in 14000 gates. The design of both the round function and the key schedule permits a wide variety of tradeoffs between speed, software size, key setup time, gate count, and memory. We have extensively cryptanalyzed Twofish; our best attack breaks 5 rounds with 2 22:5 chosen plaintexts and 2 51 effort. 
Abstract-found: 1
Intro-found: 1
Reference: [AB96a] <author> R. Anderson and E. Biham, </author> <title> "Two Practical and Provably Secure Block Ciphers: BEAR and LION," Fast Software Encryption, </title> <booktitle> Third International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 113-120. </pages>
Reference: [AB96b] <author> R. Anderson and E. Biham, "Tiger: </author> <title> A Fast New Hash Function," Fast Software Encryption, </title> <booktitle> Third International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 89-97. </pages>
Reference-contexts: has been modified once. 2 1 A non-surjective F function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion <ref> [AB96b] </ref>, and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]). <p> Serpent [BAK98] reused the DES S-boxes. GOST [GOST89] navigated a middle course: each application has different fixed S-boxes, turning them into an application-specific family key. 6.4.1 Large S-boxes S-boxes vary in size, from GOST's 4-by-4-bit S-boxes to Tiger's 8-by-64-bit S-boxes <ref> [AB96b] </ref>. Large S-boxes are generally assumed to be more secure than smaller ones|a view we share|but at the price of increased storage requirements; DES' eight 6-by-4-bit S-boxes require 256 bytes of storage, while Blowfish's four 8-by-32-bit S-boxes require 4 kilobytes.
Reference: [Ada97a] <author> C. Adams, </author> <title> "Constructing Symmetric Ciphers Using the CAST Design Procedure," Designs, Codes and Cryptography, </title> <address> v.12, n.3, </address> <month> Nov </month> <year> 1997, </year> <pages> pp. 71-104. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 <ref> [Ada97a] </ref>, Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> This research has culminated in strong cipher designs|CAST-128 <ref> [Ada97a] </ref> and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. <p> Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES [KPL93, Knu93c, KLPL95], CAST <ref> [MA96, Ada97a] </ref>|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [Ada97b] <author> C. Adams, "DES-80," </author> <booktitle> Workshop on Selected Areas in Cryptography (SAC '97) Workshop Record, </booktitle> <institution> School of Computer Science, Car-leton University, </institution> <year> 1997, </year> <pages> pp. 160-171. </pages>
Reference-contexts: At 32 rounds, it looks better. At 128 rounds, even the worst designs look very good. 11 The closest idea is an alternate DES key schedule that uses the DES round function, both the 32-bit block input and 48-bit key input, to create round subkeys <ref> [Ada97b] </ref>. 20 same blocks. That is, it is simple to build a hardware or software module that does both encryption and decryption without duplicating much functionality, but the exact same module cannot both encrypt and decrypt.
Reference: [AGMP96] <author> G. Alvarez, D. De la Guia, F. Montoya, and A. Peinado, "Akelarre: </author> <title> A New Block Cipher Algorithm," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '96) Workshop Record, </booktitle> <institution> Queens University, </institution> <year> 1996, </year> <pages> pp. 1-14. </pages>
Reference-contexts: We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB [DGV93]) or data-dependent rotations (as in RC5 8 or Akelarre <ref> [AGMP96] </ref> 9 ) for non-linearity. The most novel design elements we used|MDS matrices and PHTs|are only intended for diffusion (and are used in Square [DKR97] and SAFER, respectively).
Reference: [Anon95] <author> Anonymous, </author> <title> "this looked like it might be interesting," </title> <address> sci.crypt Usenet posting, </address> <month> 9 Aug </month> <year> 1995. </year>
Reference-contexts: These properties can often aid an attacker in a real-world attack. For example, the DES weak (self-inverse) keys have been exploited in many attacks on larger cryptographic mechanisms built from DES [Knu95a], and the S-1 <ref> [Anon95] </ref> cipher was broken due to a bad key-schedule design [Wag95a]. Even worse, they can make attacks on the cipher easier, and some attacks on the cipher will be focused directly at the key schedule, such as related-key differential attacks [KSW96, KSW97]. <p> An attacker can look at two encryptions, and can slide the rounds forward in one of them relative to another. S-1 <ref> [Anon95] </ref> can be broken with a slide attack [Wag95a]. Travois [Yuv97] has identical round functions, and can also be broken with a slide attack.
Reference: [AT93] <author> C.M. Adams and S.E. Tavares, </author> <title> "Designing S-boxes for Ciphers Resistant to Differential Cryptanalysis," </title> <booktitle> Proceedings of the 3rd Symposium on State and Progress of Research in Cryptography, </booktitle> <address> Rome, Italy, </address> <month> 15-16 Feb </month> <year> 1993, </year> <pages> pp. 181-190. </pages>
Reference-contexts: The CAST cipher cryptanalyzed in [MSK98a] is not CAST-128, but it does illustrate that while the CAST design procedure <ref> [AT93, HT94] </ref> can create ciphers resistant to differential and linear cryptanalysis, it does not create ciphers resistant to whatever form of cryptanalysis comes next. SNAKE [LC97], another cipher provably secure against differential and linear cryptanalysis, was successfully broken using the interpolation attack [MSK98b].
Reference: [BAK98] <author> E. Biham, R. Anderson, and L. Knud-sen, "Serpent: </author> <title> A New Block Cipher Proposal," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 222-238. </pages>
Reference-contexts: However, there is still plenty of parallelism in Twofish that can be well-utilized in an optimized VLIW software implementation. Equally important, the alternative of not using large S-boxes, while it may allow greater parallelism, also naturally involves less non-linearity and thus generally requires more rounds. For example, Serpent <ref> [BAK98] </ref>, based on "inline" computation of 4-bit S-boxes, may experience a relatively larger speedup than Twofish on a VLIW CPU, but Serpent also requires 32 rounds, and is considerably slower to start with. <p> We took a slightly different approach in our design. Instead of trying to optimize Twofish against known attacks, we tried to make Twofish strong against both known and unknown attacks. While it is impossible to optimize a cipher design for resisting 7 One AES submission, Serpent <ref> [BAK98] </ref>, uses ideas from bitslice implementations to create a cipher that is very efficient on 32-bit processors while sacrificing performance on 8-bit microprocessors. 19 attacks that are unknown, conservative design and over-engineering can instill some confidence. Many elements of Twofish reflect this philosophy. <p> Serpent <ref> [BAK98] </ref> reused the DES S-boxes. GOST [GOST89] navigated a middle course: each application has different fixed S-boxes, turning them into an application-specific family key. 6.4.1 Large S-boxes S-boxes vary in size, from GOST's 4-by-4-bit S-boxes to Tiger's 8-by-64-bit S-boxes [AB96b]. <p> Either the round subkey itself is used to generate the other round sub-keys in some cryptographically secure manner, as in RC5 and CS-Cipher, or a one-way function is used to generate the sound subkeys (sometimes the block cipher itself): e.g., Blowfish, Serpent <ref> [BAK98] </ref>, ICE [Kwa97], and Shark. Some simple design principles guided our development of the key schedule for Twofish: * Design the Key Schedule for the Cipher.
Reference: [BB93] <author> I. Ben-Aroya and E. Biham, </author> <title> "Differential Cryptanalysis of Lucifer," </title> <booktitle> Advances in Cryptology | CRYPTO '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 187-199. </pages>
Reference-contexts: We have found no simple relations for Twofish, and strongly doubt that they exist. 7.11.12 Key-dependent Characteristics and Weak Keys The concept of a key-dependent characteristic seems to have been introduced in <ref> [BB93] </ref> in their cryptanalysis of Lucifer, and also appears in [DGV94a] in an analysis of IDEA. 18 The idea is that certain iterative properties of the block cipher useful to an attacker become more effective against the cipher for a specific subset of keys.
Reference: [BB94] <author> E. Biham and A. Biryukov, </author> <title> "How to Strengthen DES Using Existing Hardware," </title> <booktitle> Advances in Cryptology | ASIACRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 398-412. </pages>
Reference-contexts: The latter results in a simpler key schedule, but may result in weaknesses (e.g., a weakness in reduced-round variants of Blowfish [Vau96a]). Another strategy is to generate key-dependent S-boxes from a known secure S-box and a series of strict mathematical rules: e.g., Biham-DES <ref> [BB94] </ref>. Most key-dependent S-boxes are created by some process completely orthogonal to the underlying cipher. SEAL, for example, uses SHA [NIST93] to create its key-dependent S-boxes. Blowfish uses repeated iterations of itself.
Reference: [BB95] <author> E. Biham and A. Biryukov, </author> <title> "An Improvement of Davies' Attack on DES," </title> <booktitle> Advances in Cryptology | EUROCRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 461-467. </pages>
Reference-contexts: It is our belief that while random key-dependent S-boxes can offer acceptable security if used correctly, the benefits of a surjective S-box are worth the additional complexities that constructing them entails. So, to avoid attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref>, we made the 8-by-8-bit S-boxes, as well as the 8-by-32-bit S-boxes, bijective. However, there is really no such thing as a key-dependent S-box. <p> That way, iterative 2-round differential characteristics cannot exist; when they do exist, they often result in the highest-probability multi-round characteristic, so avoiding them should help to reduce the risk of a successful differential attack. Also, attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref> are sure to fail when the 64-bit Feistel round function is bijective. 22 We argue here that this was a good design decision, by showing that a Twofish variant which uses non-bijective S-boxes is likely to be much easier to break.
Reference: [BB96] <author> U. Blumenthal and S. Bellovin, </author> <title> "A Better Key Schedule for DES-Like Ciphers," </title> <booktitle> Pragocrypt '96 Proceedings, </booktitle> <year> 1996, </year> <pages> pp. 42-54. </pages>
Reference-contexts: The use of the RS code to derive the key material for g adds substantial resistance to related-key attacks. While many algorithms reuse the encryption operation in their key schedule (e.g., Blowfish, Panama [DC98], RC4, CRISP [Lee96], YTH [YTH96]), and several alternative DES key schedules reuse the DES operation <ref> [Knu94b, BB96] </ref>, we are unaware of any that reuse the same primitives in exactly this manner. 11 We feel that doing so greatly simplifies the analysis of Twofish, since the same kinds of analysis can apply to the cipher in two different ways. 6.3.2 Reversibility While it is essential that any
Reference: [BCK96] <author> M. Bellare, R. Canetti, and H. Karwczyk, </author> <title> "Keying Hash Functions for Message Authentication," </title> <booktitle> Advances in Cryptology | CRYPTO '96 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 1-15. </pages>
Reference-contexts: As keys that are non-standard sizes have equivalent keys that are longer, any use of Twofish in a Davies-Meyer construction must ensure that only a single key length is used. 11.3 Message Authentication Codes Any one-way hash function can be used to build a message authentication code using existing techniques <ref> [BCK96] </ref>.
Reference: [BDL97] <author> D. Boneh, R.A. DeMillo, </author> <title> and R.J. Lipton "On the Importance of Checking Cryptographic Protocols for Faults," </title> <booktitle> Advances in Cryptology | EUROCRYPT '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 37-51. </pages>
Reference-contexts: While total resistance to side-channel cryptanalysis is probably impossible, we note that Twofish executes in constant time on most processors. Fault analysis <ref> [BDL97, BS97] </ref> can be used to successfully cryptanalyze this cipher. Again, we believe that total resistance to fault analysis is an impossible design constraint for a cipher.
Reference: [BDR+96] <author> M. Blaze, W. Diffie, R. Rivest, B. Schneier, T. Shimomura, E. Thompson, and M. Weiner, </author> <title> "Minimal Key Lengths for Symmetric Ciphers to Provide Adequate Commercial Security," </title> <month> Jan </month> <year> 1996. </year>
Reference-contexts: The debate about whether DES' key is too short for acceptable commercial security has raged for many years [DH79], but recent advances in distributed key search techniques have left no doubt in anyone's mind that its key is simply too short for today's security applications <ref> [Wie94, BDR+96] </ref>. Triple-DES has emerged as an interim solution in many high-security applications, such as banking, but it is too slow for some uses.
Reference: [BFL96] <author> M. Blaze, J. Feigenbaum, and F. T. Leighton, </author> <title> Master-Key Cryptosystems, </title> <type> DI-MACS Technical Report 96-02, </type> <institution> Rutgers University, </institution> <address> Piscataway, </address> <year> 1996. </year>
Reference-contexts: Again, we cannot prove that this is not true. However, it has been shown that this type of cipher, called a "master-key cryptosystem," is equivalent to a public-key cryp-tosystem <ref> [BFL96] </ref>. Again, as cryptographers we 52 would achieve far greater recognition by publishing a public-key cryptosystem that is not dependent on factoring [RSA78] or the discrete logarithm problem [DH76, ElG85, NIST94].
Reference: [Bih94] <author> E. Biham, </author> <title> "New Types of Cryptanalytic Attacks Using Related Keys," </title> <journal> Journal of Cryptology, v. </journal> <volume> 7, </volume> <editor> n. </editor> <volume> 4, </volume> <year> 1994, </year> <pages> pp. 229-246. </pages>
Reference-contexts: been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96], such as differential [BS93], linear [Mat94], and related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref>. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. <p> The differential attack described in Section 8.1 is the best way we were able to find to test such a partial key guess. We can see no way to test a guess of S on the full sixteen round Twofish. 8.7 Related-key Cryptanalysis Related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref> uses a cipher's key schedule to break plaintexts encrypted with related keys. In its most advanced form, differential related-key cryptanalysis, both plaintexts and keys with chosen differentials are used to recover the keys. <p> Conventional slide attacks allow one to break the cipher with only known-or chosen-plaintext queries; however, as we shall see next, there is a generalization to related-key attacks as well. Related-key slide attacks were first discovered by Bi-ham in his attack on a DES variant <ref> [Bih94] </ref>. To mount a related-key slide attack on Twofish, an attacker must find a pair of keys M; M fl such that the key-dependent S-boxes in g are unchanged, but the subkey sequences slide down one round. <p> When we have a triple with the desired properties, we get (L N ; R N ) from the first encryption, and (L N+1 ; L N ) from the second encryption. We use a trick by Biham <ref> [Bih94] </ref> to get such a pair of plaintexts with only 2 33 chosen plaintexts: we choose a fixed L 0 , and encrypt it with 2 32 randomly selected R 0 values as (L 0 ; R 0 ).
Reference: [Bih95] <author> E. Biham, </author> <title> "On Matsui's Linear Cryptanalysis," </title> <booktitle> Advances in Cryptology | EURO-CRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 398-412. </pages>
Reference-contexts: S-boxes with small input size and very large output size tend to have very good linear approximations; S-boxes with sufficiently large outputs relative to input size are guaranteed to have at least one perfect linear approximation <ref> [Bih95] </ref>.) Twofish used the same solution as Square: mid-sized S-boxes (8-by-8-bit) used to construct a large S-box (8-by-32-bit). 6.4.2 Algorithmic S-boxes S-boxes can either be large tables, like DES, Khufu/Khafre, and YLCY [YLCY98], or derived algebraically, like FEAL, LOKI-89/LOKI-91 (and LOKI97 [Bro98]), IDEA, and SAFER.
Reference: [Bih97] <author> E. Biham, </author> <title> "A Fast New DES Implementation in Software," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 260-271. 58 </pages>
Reference-contexts: Yesterday's top-of-the-line CPUs are currently in smart cards. Today's CPUs will eventually be in smart cards, while the 8-bit microprocessors will move to devices even smaller. The only thing we did not consider in our performance metrics are bitslice implementations <ref> [Bih97, SAM97, NM97] </ref>, since these can only be used in very specialized applications and often require unrealistic implementations: e.g., 32 simultaneous ECB encryptions, or 32 interleaved IVs. 7 6.1.1 Performance-driven Tradeoffs During our design, we constantly evaluated the relative performance of different modifications to our round function.
Reference: [BK98] <author> A. Biryukov and E. Kushilevitz, </author> <title> "Improved Cryptanalysis of RC5," </title> <booktitle> Advances in Cryptology | EUROCRYPT '98 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 85-99. </pages>
Reference-contexts: Also, complicated round functions are harder to analyze and rely on more ad-hoc arguments for security (e.g., REDOC-II [CW91]). However, with enough rounds, even bad round functions can be made to be secure. 10 Even a simple round function like TEA's [WN95] or RC5's seems secure after 32 rounds <ref> [BK98] </ref>. In Twofish, we tried to create a simple round function and then iterate it more than enough times for security. 6.3.1 Reusing Primitives One of the ways to simplify a design is to reuse the same primitives in multiple parts of a cipher. <p> The Twofish encryption and decryption round functions are slightly different, but are built from the 8 RC5's security is almost wholly based on data-dependent rotations. Although initial cryptanalysis was promising [KY95] (see also [Sel98]), subsequent research <ref> [KM97, BK98] </ref> suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in [FS97, KR97]. 10 Student cryptography projects bear this observation out. At 16 rounds, the typical student cipher fares rather badly against a standard suite of statistical tests.
Reference: [BKPS93] <author> L. Brown, M. Kwan, J. Pieprzyk, and J. Se-berry, </author> <title> "Improving Resistance to Differential Cryptanalysis and the Redesign of LOKI," </title> <booktitle> Advances in Cryptology | ASIACRYPT '91 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 36-50. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI <ref> [BPS90, BKPS93] </ref>, CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> The early post-DES cipher designs would often compete on the number of rounds in the cipher. The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 <ref> [BKPS93] </ref>, IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones.
Reference: [BPS90] <author> L. Brown, J. Pieprzyk, and J. Seberry, </author> <title> "LOKI: A Cryptographic Primitive for Authentication and Secrecy Applications," </title> <booktitle> Advances in Cryptology | AUSCRYPT '90 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 229-236. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI <ref> [BPS90, BKPS93] </ref>, CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> The early post-DES cipher designs would often compete on the number of rounds in the cipher. The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI <ref> [BPS90] </ref> and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example.
Reference: [Bro98] <author> L. Brown, </author> <title> "Design of LOK97," </title> <type> draft AES submission, </type> <year> 1998. </year>
Reference-contexts: guaranteed to have at least one perfect linear approximation [Bih95].) Twofish used the same solution as Square: mid-sized S-boxes (8-by-8-bit) used to construct a large S-box (8-by-32-bit). 6.4.2 Algorithmic S-boxes S-boxes can either be large tables, like DES, Khufu/Khafre, and YLCY [YLCY98], or derived algebraically, like FEAL, LOKI-89/LOKI-91 (and LOKI97 <ref> [Bro98] </ref>), IDEA, and SAFER. The advantage of the former is that there is no mathematical structure that can potentially be used for cryptanalysis.
Reference: [BS92] <author> E. Biham and A. Shamir, </author> <title> "Differential Cryptanalysis of Snefru, Khafre, REDOC II, LOKI, and Lucifer," </title> <booktitle> Advances in Cryptology | CRYPTO '91 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992, </year> <pages> pp. 156-171. </pages>
Reference-contexts: Ciphers invented before the public discovery of differential cryptanalysis sometimes used arbitrary sources for their S-box entries. Randomly constructed known S-boxes are unlikely to be secure. Khafre uses S-boxes taken from the RAND tables [RAND55], and it is vulnerable to differential cryptanalysis <ref> [BS92] </ref>. NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97].
Reference: [BS93] <author> E. Biham and A. Shamir, </author> <title> Differential Cryptanalysis of the Data Encryption Standard, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96], such as differential <ref> [BS93] </ref>, linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. <p> Khafre uses S-boxes taken from the RAND tables [RAND55], and it is vulnerable to differential cryptanalysis [BS92]. NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak <ref> [BS93, Mat95] </ref>, and CMEA was weakened extensively because of a poor S-box choice [WSK97].
Reference: [BS95] <author> M. Blaze and B. Schneier, </author> <title> "The MacGuf-fin Block Cipher Algorithm," Fast Software Encryption, </title> <booktitle> Second International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 97-110. </pages>
Reference-contexts: every bit of the text block has been modified once. 2 1 A non-surjective F function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin <ref> [BS95] </ref> (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]).
Reference: [BS97] <author> E. Biham and A. Shamir, </author> <title> "Differential Fault Analysis of Secret Key Cryptosystems," </title> <booktitle> Advances in Cryptology | CRYPTO '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 513-525. </pages>
Reference-contexts: While total resistance to side-channel cryptanalysis is probably impossible, we note that Twofish executes in constant time on most processors. Fault analysis <ref> [BDL97, BS97] </ref> can be used to successfully cryptanalyze this cipher. Again, we believe that total resistance to fault analysis is an impossible design constraint for a cipher.
Reference: [CDN95] <author> G. Carter, E. Dawson, and L. Nielsen, "DESV: </author> <title> A Latin Square Variation of DES," </title> <booktitle> Proceedings of the Workshop on Selected Areas in Cryptography (SAC '95), </booktitle> <address> Ottawa, Canada, </address> <year> 1995, </year> <pages> pp. 158-172. </pages>
Reference-contexts: This is done primarily for simplicity; xor is the most efficient operation in both hardware and software. We chose not to use addition (used in MD4 [Riv91], MD5 [Riv92], RIPEMD-160 [DBP96] and SHA [NIST93]), or a more complicated combining function like Latin squares (used in DESV <ref> [CDN95] </ref>). We did not implement dynamic swapping [KKT94] or any additional complexity. 7.7 Use of Different Groups By design, the general ordering of operations in Twofish alternates as follows: 8-by-8 S-box, MDS matrix, addition, and xor.
Reference: [CDN98] <author> G. Carter, E. Dawson, and L. Nielsen,, </author> <title> "Key Schedules of Iterative Block Ciphers," </title> <booktitle> Third Australian Conference, </booktitle> <address> ACISP '98, </address> <note> Springer-Verlag, to appear. </note>
Reference-contexts: These attacks can be especially devastating when the cipher is used in a hash function construction. Key schedules can be divided into several broad categories <ref> [CDN98] </ref>. In some key schedules, knowledge of a round subkey uniquely specifies bits of other round subkeys.
Reference: [Cla97] <author> C.S.K. Clapp, </author> <title> "Optimizing a Fast Stream Cipher for VLIW, SIMD, and Superscalar Processors," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 273-287. </pages>
Reference-contexts: This idea is similar to the one used in CS-cipher [SV98]. 12 Despite the algorithm name, NewDES is neither a DES variant nor a new algorithm based on DES. 13 The WAKE design has several variants <ref> [Cla97, Cla98] </ref>; neither the basic algorithm nor its variants have been extensively cryptanalyzed. 21 6.4.3 Key-dependent S-boxes S-boxes are either fixed for all keys or key dependent. It is our belief that ciphers with key-dependent S-boxes are, in general, more secure than fixed S-boxes.
Reference: [Cla98] <author> C.S.K. Clapp, </author> <title> "Joint Hardware/Software Design of a Fast Stream Cipher," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 75-92. </pages>
Reference-contexts: This idea is similar to the one used in CS-cipher [SV98]. 12 Despite the algorithm name, NewDES is neither a DES variant nor a new algorithm based on DES. 13 The WAKE design has several variants <ref> [Cla97, Cla98] </ref>; neither the basic algorithm nor its variants have been extensively cryptanalyzed. 21 6.4.3 Key-dependent S-boxes S-boxes are either fixed for all keys or key dependent. It is our belief that ciphers with key-dependent S-boxes are, in general, more secure than fixed S-boxes.
Reference: [CM98] <author> H. Chabanne and E. Michon, </author> <title> "JEROBOAM" Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 49-59. </pages>
Reference: [Cop94] <author> D. Coppersmith, </author> <title> "The Data Encryption Standard (DES) and its Strength Against Attacks," </title> <journal> IBM Journal of Research and Development, v. </journal> <volume> 38, </volume> <editor> n. </editor> <volume> 3, </volume> <month> May </month> <year> 1994, </year> <pages> pp. 243-250. </pages>
Reference-contexts: DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97]. Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES <ref> [Cop94] </ref>, s n DES [KPL93, Knu93c, KLPL95], CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [Cop98] <author> D. Coppersmith, </author> <type> personal communication, </type> <year> 1998. </year>
Reference-contexts: Note that having the cipher work essentially the same way in both directions is a nice feature in terms of analysis, since it lets analysts consider chosen-plaintext and chosen-ciphertext attacks at once, rather than considering them as separate attacks with potentially radically different levels of difficulty <ref> [Cop98] </ref>. 6.4 S-boxes The security of a cipher can be very sensitive to the particulars of its S-boxes: size, number, values, usage. Ciphers invented before the public discovery of differential cryptanalysis sometimes used arbitrary sources for their S-box entries. Randomly constructed known S-boxes are unlikely to be secure.
Reference: [CW91] <author> T. Cusick and M.C. Wood, </author> <title> "The REDOC-II Cryptosystem," </title> <booktitle> Advances in Cryptology | CRYPTO '90 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 545-563. </pages>
Reference-contexts: The early post-DES cipher designs would often compete on the number of rounds in the cipher. The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II <ref> [CW91] </ref>, LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. <p> Anecdotal evidence from algorithms like FEAL [SM88], CAST, and Blowfish indicates that complicated round functions are not always better than simple ones. Also, complicated round functions are harder to analyze and rely on more ad-hoc arguments for security (e.g., REDOC-II <ref> [CW91] </ref>). However, with enough rounds, even bad round functions can be made to be secure. 10 Even a simple round function like TEA's [WN95] or RC5's seems secure after 32 rounds [BK98]. <p> There are two different philosophies regarding key-dependent S-boxes. In some ciphers, the S-box is constructed specifically to ensure that no two entries are identical|Khufu and WAKE|while others simply create the S-box randomly and hope for the best: REDOC II <ref> [CW91] </ref> and Blowfish [Sch94]. The latter results in a simpler key schedule, but may result in weaknesses (e.g., a weakness in reduced-round variants of Blowfish [Vau96a]). Another strategy is to generate key-dependent S-boxes from a known secure S-box and a series of strict mathematical rules: e.g., Biham-DES [BB94].
Reference: [CWSK98] <author> D. Coppersmith, D. Wagner, B. Schneier, and J. Kelsey, </author> <title> "Cryptanalysis of TWOPRIME," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 32-48. </pages>
Reference-contexts: It is our belief that while random key-dependent S-boxes can offer acceptable security if used correctly, the benefits of a surjective S-box are worth the additional complexities that constructing them entails. So, to avoid attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref>, we made the 8-by-8-bit S-boxes, as well as the 8-by-32-bit S-boxes, bijective. However, there is really no such thing as a key-dependent S-box. <p> That way, iterative 2-round differential characteristics cannot exist; when they do exist, they often result in the highest-probability multi-round characteristic, so avoiding them should help to reduce the risk of a successful differential attack. Also, attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref> are sure to fail when the 64-bit Feistel round function is bijective. 22 We argue here that this was a good design decision, by showing that a Twofish variant which uses non-bijective S-boxes is likely to be much easier to break.
Reference: [Dae95] <author> J. Daemen, </author> <title> "Cipher and Hash Function Design," </title> <type> Ph.D. thesis, </type> <institution> Katholieke Universiteit Leuven, </institution> <month> Mar 95. </month>
Reference: [DBP96] <author> H. Dobbertin, A. Bosselaers, and B. Pre-neel, "RIPEMD-160: </author> <title> A Strengthened Version of RIPEMD," Fast Software Encryption, </title> <booktitle> Third International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 71-82. </pages>
Reference-contexts: This is done primarily for simplicity; xor is the most efficient operation in both hardware and software. We chose not to use addition (used in MD4 [Riv91], MD5 [Riv92], RIPEMD-160 <ref> [DBP96] </ref> and SHA [NIST93]), or a more complicated combining function like Latin squares (used in DESV [CDN95]).
Reference: [DC98] <author> J. Daemen and C. Clapp, </author> <title> "Fast Hashing and Stream Encryption with PANAMA," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 60-74. </pages>
Reference-contexts: The use of the RS code to derive the key material for g adds substantial resistance to related-key attacks. While many algorithms reuse the encryption operation in their key schedule (e.g., Blowfish, Panama <ref> [DC98] </ref>, RC4, CRISP [Lee96], YTH [YTH96]), and several alternative DES key schedules reuse the DES operation [Knu94b, BB96], we are unaware of any that reuse the same primitives in exactly this manner. 11 We feel that doing so greatly simplifies the analysis of Twofish, since the same kinds of analysis can
Reference: [DGV93] <author> J. Daemen, R. Govaerts, and J. Vandewalle, </author> <title> "Block Ciphers Based on Modular Arithmetic," </title> <booktitle> Proceedings of the 3rd Symposium on: State and Progress of Research in Cryptography, </booktitle> <address> Fondazione Ugo Bordoni, </address> <year> 1993, </year> <pages> pp. 80-89. </pages>
Reference-contexts: We started with a Feistel network, probably the most studied block-cipher structure, instead of something newer like an unbalanced Feis-tel network [SK96, ZMI90] or a generalized Feistel network [Nyb96]. We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB <ref> [DGV93] </ref>) or data-dependent rotations (as in RC5 8 or Akelarre [AGMP96] 9 ) for non-linearity. The most novel design elements we used|MDS matrices and PHTs|are only intended for diffusion (and are used in Square [DKR97] and SAFER, respectively).
Reference: [DGV94a] <author> J. Daemen, R. Govaerts, and J. Vande-walle, </author> <title> "Weak Keys for IDEA," </title> <booktitle> Advances in Cryptology | EUROCRYPT '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 159-167. </pages>
Reference-contexts: We have found no simple relations for Twofish, and strongly doubt that they exist. 7.11.12 Key-dependent Characteristics and Weak Keys The concept of a key-dependent characteristic seems to have been introduced in [BB93] in their cryptanalysis of Lucifer, and also appears in <ref> [DGV94a] </ref> in an analysis of IDEA. 18 The idea is that certain iterative properties of the block cipher useful to an attacker become more effective against the cipher for a specific subset of keys. A differential attack on Twofish may consider xor-based differences, additive differences, or both.
Reference: [DGV94b] <author> J. Daemen, R. Govaerts, and J. Vandewalle, </author> <title> "A New Approach to Block Cipher Design," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 18-32. </pages>
Reference: [DH76] <author> W. Diffie and M. Hellman, </author> <title> "New Directions in Cryptography," </title> <journal> IEEE Transactions on Information Theory, v. IT-22, n. </journal> <volume> 6, </volume> <month> Nov </month> <year> 1976, </year> <pages> pp. 644-654. </pages>
Reference-contexts: However, it has been shown that this type of cipher, called a "master-key cryptosystem," is equivalent to a public-key cryp-tosystem [BFL96]. Again, as cryptographers we 52 would achieve far greater recognition by publishing a public-key cryptosystem that is not dependent on factoring [RSA78] or the discrete logarithm problem <ref> [DH76, ElG85, NIST94] </ref>. And the resulting algorithm's dual capabilities as both a symmetric and public-key algorithm would make it far more flexible than the AES competition. There is a large gap between a weakness that is exploitable in theory and one that is exploitable in practice.
Reference: [DH79] <author> W. Diffie and M. Hellman, </author> <title> "Exhaustive Cryptanalysis of the NBS Data Encryption Standard," </title> <booktitle> Computer, v. </booktitle> <volume> 10, </volume> <editor> n. </editor> <volume> 3, </volume> <month> Mar </month> <year> 1979, </year> <pages> pp. 74-84. </pages>
Reference-contexts: Despite its popularity, DES has been plagued with controversy. Some cryptographers objected to the "closed-door" design process of the algorithm. The debate about whether DES' key is too short for acceptable commercial security has raged for many years <ref> [DH79] </ref>, but recent advances in distributed key search techniques have left no doubt in anyone's mind that its key is simply too short for today's security applications [Wie94, BDR+96].
Reference: [DK85] <author> C. Deavours and L.A. Kruh, </author> <title> Machine Cryptography and Modern Cryptanalysis, </title> <publisher> Artech House, </publisher> <address> Dedham MA, </address> <year> 1985. </year>
Reference: [DKR97] <author> J. Daemen, L. Knudsen, and V. Rijmen, </author> <title> "The Block Cipher Square," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 149-165. </pages>
Reference-contexts: A necessary and sufficient condition for an a fi b matrix to be MDS is that all possible square submatrices, obtained by discarding rows or columns, are non-singular. Serge Vaudenay first proposed MDS matrices as a cipher design element [Vau95]. Shark [RDP+96] and Square <ref> [DKR97] </ref> use MDS matrices (see also [YMT97]), although we first saw the construction used in the unpublished cipher Manta 3 [Fer96]. Twofish uses a single 4-by-4 MDS matrix over GF (2 8 ). 3.4 Pseudo-Hadamard Transforms A pseudo-Hadamard transform (PHT) is a simple mixing operation that runs quickly in software. <p> We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB [DGV93]) or data-dependent rotations (as in RC5 8 or Akelarre [AGMP96] 9 ) for non-linearity. The most novel design elements we used|MDS matrices and PHTs|are only intended for diffusion (and are used in Square <ref> [DKR97] </ref> and SAFER, respectively). We used key-dependent S-boxes, because they offer adequate protection against known statistical attacks and are likely to offer protection to any unknown similar attacks. We defined Twofish at 16 rounds, even though our analysis cannot break anywhere near that number. <p> For software implementation on a modern microprocessor, the MDS matrix multiply is normally implemented using four lookup tables, each consisting of 256 32-bit words, so the particular coefficients used in the matrix do not affect performance. However, for smart cards and in hardware, "simple" coefficients, as in Square <ref> [DKR97] </ref>, can make implementations cheaper and faster. Unlike the MDS matrix used in Square, Twofish does not use the inverse matrix for decryption because of its Feistel structure, nor is there a requirement that the matrix be a cir-culant matrix.
Reference: [ElG85] <author> T. ElGamal, </author> <title> "A Public-Key Cryptosystem and a Signature Scheme Based on Discrete Logarithms," </title> <journal> IEEE Transactions on Information Theory, v. IT-31, n. </journal> <volume> 4, </volume> <year> 1985, </year> <pages> pp. 469-472. </pages>
Reference-contexts: However, it has been shown that this type of cipher, called a "master-key cryptosystem," is equivalent to a public-key cryp-tosystem [BFL96]. Again, as cryptographers we 52 would achieve far greater recognition by publishing a public-key cryptosystem that is not dependent on factoring [RSA78] or the discrete logarithm problem <ref> [DH76, ElG85, NIST94] </ref>. And the resulting algorithm's dual capabilities as both a symmetric and public-key algorithm would make it far more flexible than the AES competition. There is a large gap between a weakness that is exploitable in theory and one that is exploitable in practice.
Reference: [Fei73] <author> H. Feistel, </author> <title> "Cryptography and Computer Privacy," </title> <publisher> Scientific American, v. </publisher> <address> 228, n. 5, </address> <month> May </month> <year> 1973, </year> <pages> pp. 15-23. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer <ref> [Fei73] </ref>, and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. <p> function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures <ref> [Fei73] </ref>) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]).
Reference: [Fer96] <author> N. Ferguson, </author> <type> personal communication, </type> <year> 1996. </year>
Reference-contexts: Serge Vaudenay first proposed MDS matrices as a cipher design element [Vau95]. Shark [RDP+96] and Square [DKR97] use MDS matrices (see also [YMT97]), although we first saw the construction used in the unpublished cipher Manta 3 <ref> [Fer96] </ref>. Twofish uses a single 4-by-4 MDS matrix over GF (2 8 ). 3.4 Pseudo-Hadamard Transforms A pseudo-Hadamard transform (PHT) is a simple mixing operation that runs quickly in software.
Reference: [FNS75] <author> H. Feistel, W.A. Notz, and J.L. Smith, </author> <title> "Some Cryptographic Techniques for Machine-to-Machine Data Communications, </title> <booktitle> Proceedings on the IEEE, v. </booktitle> <volume> 63, </volume> <editor> n. </editor> <volume> 11, </volume> <year> 1975, </year> <pages> pp. 1545-1554. </pages>
Reference-contexts: We feel we have met all of these goals in the design of Twofish. 3 Twofish Building Blocks 3.1 Feistel Networks A Feistel network is a general method of transforming any function (usually called the F function) into a permutation. It was invented by Horst Feistel <ref> [FNS75] </ref> in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95].
Reference: [FS97] <author> N. Ferguson and B. Schneier, </author> <title> "Cryptanalysis of Akelarre," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '97) Workshop Record, </booktitle> <institution> School of Computer Science, Carleton University, </institution> <year> 1997, </year> <pages> pp. 201-212. </pages>
Reference-contexts: Although initial cryptanalysis was promising [KY95] (see also [Sel98]), subsequent research [KM97, BK98] suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in <ref> [FS97, KR97] </ref>. 10 Student cryptography projects bear this observation out. At 16 rounds, the typical student cipher fares rather badly against a standard suite of statistical tests. At 32 rounds, it looks better.
Reference: [GC94] <author> H. Gilbert and P. Chauvaud, </author> <title> "A Chosen-Plaintext Attack on the 16-Round Khufu Cryptosystem," </title> <booktitle> Advances in Cryptology | CRYPTO '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 359-368. </pages>
Reference-contexts: Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES [KPL93, Knu93c, KLPL95], CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds <ref> [GC94] </ref>, while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [GOST89] <author> GOST, </author> <title> Gosudarstvennyi Standard 28147-89, "Cryptographic Protection for Data Processing Systems," </title> <institution> Government Committee of the USSR for Standards, </institution> <year> 1989. </year>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST <ref> [GOST89] </ref>, Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> Serpent [BAK98] reused the DES S-boxes. GOST <ref> [GOST89] </ref> navigated a middle course: each application has different fixed S-boxes, turning them into an application-specific family key. 6.4.1 Large S-boxes S-boxes vary in size, from GOST's 4-by-4-bit S-boxes to Tiger's 8-by-64-bit S-boxes [AB96b]. <p> In its most advanced form, differential related-key cryptanalysis, both plaintexts and keys with chosen differentials are used to recover the keys. This type of analysis has had considerable success against ciphers with simplistic key schedules|e.g., GOST <ref> [GOST89] </ref> and 3-Way [DGV94b]|and is a realistic attack in some circumstances.
Reference: [Gut98] <author> P. Gutmann, </author> <title> "Software Generation of Random Numbers for Cryptographic Purposes," </title> <booktitle> Proceedings of the 1998 Usenix Security Symposium, </booktitle> <year> 1998, </year> <pages> pp. 243-257. </pages>
Reference-contexts: Again, we believe Twofish's strong key schedule makes it very suitable for these constructions. 11.4 Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on <ref> [Plu94, KSWH98a, Gut98, KSWH98c] </ref>. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions [SW97, PRB98]. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16
Reference: [Har96] <author> C. Harpes, </author> <title> Cryptanalysis of Iterated Block Ciphers, </title> <booktitle> ETH Series on Information Processing, v. 7, </booktitle> <address> Hartung-Gorre Verlang Kon-stanz, </address> <year> 1996. </year>
Reference-contexts: improve the best linear attack against DES a minute amount [SK98], we do not believe it can be brought to bear against Twofish for the same reasons that it is immune to linear cryptanalysis. 8.4.3 Generalized Linear Cryptanalysis This generalization of linear cryptanalysis uses the notion of binary I/O sums <ref> [HKM95, Har96, JH96] </ref>. An attacker attempts to find a statistical imbalance that can be described as the result of some group operation on some function of the plaintext and some function of the ciphertext. <p> We have not found any such statistical imbalances, and believe Twofish to be immune to this kind of analysis. 8.4.4 Partitioning Cryptanalysis Partitioning cryptanalysis is another generalization of linear cryptanalysis <ref> [Har96, JH96, HM97] </ref>. 20 An attacker trying to carry out a partitioning attack is generally trying to find some way of partitioning the input and output spaces of the round function so that knowledge of which partition the input to a round is in gives some information about which partition the <p> The other possibility is that we have embedded a trap door into the Twofish magic constants and then transformed them by some means so that finding them would be a statistical impossibility (see <ref> [Har96] </ref> for some discussion of this possibility). The resulting construction would seem immune to current cryptanalytic techniques, but we as designers would know a secret transformation rule that we could apply to facilitate cryptanalysis. Again, we cannot prove that this is not true.
Reference: [Haw98] <author> P. Hawkes, </author> <title> "Differential-Linear Weak Key Classes of IDEA," </title> <booktitle> Advances in Cryptology | EUROCRYPT '98 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 112-126. </pages>
Reference-contexts: in Twofish is such that such attacks appear to generally require good characteristics through at least three of the four key-dependent S-boxes (if not all four), so a single high-probability differential or linear characteristic for one S-box will not create a weakness in the cipher as a whole. 18 See <ref> [Haw98] </ref> for further cryptanalysis of IDEA weak keys. 35 7.12 Reed-Solomon Code The RS structure helps defend against many possible related-key attacks by diffusing the key material in a direction "orthogonal" to the flow used in computing the 8-by-8-bit S-boxes of Twofish.
Reference: [HKM95] <author> C. Harpes, G. Kramer, and J. Massey, </author> <title> "A Generalization of Linear Cryptanalysis and the Applicability of Matsui's Piling-up Lemma," </title> <booktitle> Advances in Cryptology | EURO-CRYPT '95 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 24-38. </pages>
Reference-contexts: improve the best linear attack against DES a minute amount [SK98], we do not believe it can be brought to bear against Twofish for the same reasons that it is immune to linear cryptanalysis. 8.4.3 Generalized Linear Cryptanalysis This generalization of linear cryptanalysis uses the notion of binary I/O sums <ref> [HKM95, Har96, JH96] </ref>. An attacker attempts to find a statistical imbalance that can be described as the result of some group operation on some function of the plaintext and some function of the ciphertext.
Reference: [HKR+98] <author> C. Hall, J. Kelsey, V. Rijmen, B. Schneier, and D. Wagner, </author> <title> "Cryptanalysis of SPEED," </title> <type> unpublished manuscript, </type> <year> 1998. </year>
Reference-contexts: In designing Twofish, we tried to evaluate all design decisions in terms of performance. 5 Speed has been cryptanalyzed in <ref> [HKSW98, HKR+98] </ref>. 6 Here we use the term "round" in the traditional sense: as it was defined by DES [NBS77] and has been used to describe Feistel-network ciphers ever since.
Reference: [HKSW98] <author> C. Hall, J. Kelsey, B. Schneier, and D. Wagner, </author> <title> "Cryptanalysis of SPEED," </title> <booktitle> Financial Cryptography '98 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <note> to appear. </note>
Reference-contexts: In designing Twofish, we tried to evaluate all design decisions in terms of performance. 5 Speed has been cryptanalyzed in <ref> [HKSW98, HKR+98] </ref>. 6 Here we use the term "round" in the traditional sense: as it was defined by DES [NBS77] and has been used to describe Feistel-network ciphers ever since.
Reference: [HM97] <author> C. Harpes and J. Massey, </author> <title> "Partitioning Cryptanalysis," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 13-27. </pages>
Reference-contexts: We have not found any such statistical imbalances, and believe Twofish to be immune to this kind of analysis. 8.4.4 Partitioning Cryptanalysis Partitioning cryptanalysis is another generalization of linear cryptanalysis <ref> [Har96, JH96, HM97] </ref>. 20 An attacker trying to carry out a partitioning attack is generally trying to find some way of partitioning the input and output spaces of the round function so that knowledge of which partition the input to a round is in gives some information about which partition the
Reference: [HT94] <author> H.M. Heys and S.E. Tavares, </author> <title> "On the Security of the CAST Encryption Algorithm," </title> <booktitle> Canadian Conference on Electrical and Computer Engineering, </booktitle> <year> 1994, </year> <pages> pp. 332-335. </pages>
Reference-contexts: The CAST cipher cryptanalyzed in [MSK98a] is not CAST-128, but it does illustrate that while the CAST design procedure <ref> [AT93, HT94] </ref> can create ciphers resistant to differential and linear cryptanalysis, it does not create ciphers resistant to whatever form of cryptanalysis comes next. SNAKE [LC97], another cipher provably secure against differential and linear cryptanalysis, was successfully broken using the interpolation attack [MSK98b].
Reference: [Jeff+76] <author> T. Jefferson et al., </author> <title> "Declaration of Independence," </title> <address> Philadelphia PA, </address> <month> 4 Jul 1776. </month>
Reference-contexts: Randomly constructed known S-boxes are unlikely to be secure. Khafre uses S-boxes taken from the RAND tables [RAND55], and it is vulnerable to differential cryptanalysis [BS92]. NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence <ref> [Jeff+76] </ref>, could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97].
Reference: [JH96] <author> T. Jakobsen and C. Harpes, </author> <title> "Bounds on Non-Uniformity Measures for Generalized Linear Cryptanalysis and Partitioning Cryptanalysis," </title> <booktitle> Pragocrypt '96 Proceedings, </booktitle> <year> 1996, </year> <pages> pp. 467-479. </pages>
Reference-contexts: improve the best linear attack against DES a minute amount [SK98], we do not believe it can be brought to bear against Twofish for the same reasons that it is immune to linear cryptanalysis. 8.4.3 Generalized Linear Cryptanalysis This generalization of linear cryptanalysis uses the notion of binary I/O sums <ref> [HKM95, Har96, JH96] </ref>. An attacker attempts to find a statistical imbalance that can be described as the result of some group operation on some function of the plaintext and some function of the ciphertext. <p> We have not found any such statistical imbalances, and believe Twofish to be immune to this kind of analysis. 8.4.4 Partitioning Cryptanalysis Partitioning cryptanalysis is another generalization of linear cryptanalysis <ref> [Har96, JH96, HM97] </ref>. 20 An attacker trying to carry out a partitioning attack is generally trying to find some way of partitioning the input and output spaces of the round function so that knowledge of which partition the input to a round is in gives some information about which partition the
Reference: [JK97] <author> T. Jakobsen and L. Knudsen, </author> <title> "The Interpolation Attack on Block Ciphers," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 28-40. </pages>
Reference-contexts: However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack <ref> [JK97] </ref>: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in <ref> [JK97, SMK98] </ref>, Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack <ref> [JK97] </ref>: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: [Mur90] against FEAL, and [Knu93a, Knu93b] against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes <ref> [Knu95b, JK97, SMK98] </ref>. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm. In Twofish we tried to do both: we chose to build our 8-by-8-bit S-boxes algorithmically out of random 4-by-4-bit S-boxes. <p> Therefore, we feel that differential-linear cryptanalysis is unlikely to be successful against the Twofish structure. In our analysis, we have found no differential-linear attacks that work against Twofish. 8.5 Interpolation Attack The interpolation attack <ref> [JK97, MSK98b] </ref> is effective against ciphers that use simple alegbraic functions.
Reference: [Kie96] <author> K. Kiefer, </author> <title> "A New Design Concept for Building Secure Block Ciphers," </title> <booktitle> Proceedings of the 1st International Conference on the Theory and Applications of Cryptography, Pragocrypt '96, </booktitle> <publisher> CTU Publishing House, </publisher> <year> 1996, </year> <pages> pp. 30-41. </pages>
Reference-contexts: However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer <ref> [Kie96] </ref> in [JK97], and a version of CAST in [MSK98a].
Reference: [KKT94] <author> T. Kaneko, K. Koyama, and R. Terada, </author> <title> "Dynamic Swapping Schemes and Differential Cryptanalysis," </title> <editor> IEICE Tranactions, v. E77-A, </editor> <year> 1994, </year> <pages> pp. 1328-1336. </pages>
Reference-contexts: We chose not to use addition (used in MD4 [Riv91], MD5 [Riv92], RIPEMD-160 [DBP96] and SHA [NIST93]), or a more complicated combining function like Latin squares (used in DESV [CDN95]). We did not implement dynamic swapping <ref> [KKT94] </ref> or any additional complexity. 7.7 Use of Different Groups By design, the general ordering of operations in Twofish alternates as follows: 8-by-8 S-box, MDS matrix, addition, and xor.
Reference: [KLPL95] <author> K. Kim, S. Lee, S. Park, and D. Lee, </author> <title> "Se--curing DES S-boxes Against Three Robust Cryptanalysis," </title> <booktitle> Proceedings of the Workshop on Selected Areas in Cryptography (SAC '95), </booktitle> <address> Ottawa, Canada, </address> <year> 1995, </year> <pages> pp. 145-157. </pages>
Reference-contexts: DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97]. Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES <ref> [KPL93, Knu93c, KLPL95] </ref>, CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [KM97] <author> L.R. Knudsen and W. Meier, </author> <title> "Differential Cryptanalysis of RC5," </title> <journal> European Transactions on Communication, v. </journal> <volume> 8, </volume> <editor> n. </editor> <volume> 5, </volume> <year> 1997, </year> <pages> pp. 445-454. </pages>
Reference-contexts: The Twofish encryption and decryption round functions are slightly different, but are built from the 8 RC5's security is almost wholly based on data-dependent rotations. Although initial cryptanalysis was promising [KY95] (see also [Sel98]), subsequent research <ref> [KM97, BK98] </ref> suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in [FS97, KR97]. 10 Student cryptography projects bear this observation out. At 16 rounds, the typical student cipher fares rather badly against a standard suite of statistical tests.
Reference: [Knu93a] <author> L.R. Knudsen, </author> <title> "Cryptanalysis of LOKI," </title> <booktitle> Advances in Cryptology | ASIACRYPT '91, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 22-35. </pages>
Reference-contexts: The advantage of the latter is that the S-boxes are more compact, and can be more easily implemented in applications where the ROM or RAM for large tables is not available. Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: [Mur90] against FEAL, and <ref> [Knu93a, Knu93b] </ref> against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes [Knu95b, JK97, SMK98]. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm.
Reference: [Knu93b] <author> L.R. Knudsen, </author> <title> "Cryptanalysis of LOKI91," </title> <booktitle> Advances in Cryptology | AUSCRYPT '92, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 196-208. </pages>
Reference-contexts: The advantage of the latter is that the S-boxes are more compact, and can be more easily implemented in applications where the ROM or RAM for large tables is not available. Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: [Mur90] against FEAL, and <ref> [Knu93a, Knu93b] </ref> against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes [Knu95b, JK97, SMK98]. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm.
Reference: [Knu93c] <author> L.R. Knudsen, </author> <title> "Iterative Characteristics of DES and s 2 DES," </title> <booktitle> Advances in Cryptology | CRYPTO '92, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 497-511. </pages>
Reference-contexts: DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97]. Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES <ref> [KPL93, Knu93c, KLPL95] </ref>, CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [Knu94a] <author> L.R. Knudsen, </author> <title> "Block Ciphers | Analysis, Design, Applications," </title> <type> Ph.D. dissertation, </type> <institution> Aarhus University, </institution> <month> Nov </month> <year> 1994. </year>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [Knu94b] <author> L.R. Knudsen, </author> <title> "Practically Secure Feis-tel Ciphers," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 211-221. </pages>
Reference-contexts: The use of the RS code to derive the key material for g adds substantial resistance to related-key attacks. While many algorithms reuse the encryption operation in their key schedule (e.g., Blowfish, Panama [DC98], RC4, CRISP [Lee96], YTH [YTH96]), and several alternative DES key schedules reuse the DES operation <ref> [Knu94b, BB96] </ref>, we are unaware of any that reuse the same primitives in exactly this manner. 11 We feel that doing so greatly simplifies the analysis of Twofish, since the same kinds of analysis can apply to the cipher in two different ways. 6.3.2 Reversibility While it is essential that any <p> No such property has been observed for Twofish. More generally, a simple relation <ref> [Knu94b] </ref> is defined as: where f , g, and h are simple functions.
Reference: [Knu95a] <author> L.R. Knudsen, </author> <title> "New Potentially `Weak' Keys for DES and LOKI," </title> <booktitle> Advances in Cryptology | EUROCRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 419-424. </pages>
Reference-contexts: These properties can often aid an attacker in a real-world attack. For example, the DES weak (self-inverse) keys have been exploited in many attacks on larger cryptographic mechanisms built from DES <ref> [Knu95a] </ref>, and the S-1 [Anon95] cipher was broken due to a bad key-schedule design [Wag95a]. Even worse, they can make attacks on the cipher easier, and some attacks on the cipher will be focused directly at the key schedule, such as related-key differential attacks [KSW96, KSW97].
Reference: [Knu95b] <author> L.R. Knudsen, </author> <title> "Truncated and Higher Order Differentials," Fast Software Encryption, </title> <booktitle> 2nd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 196-211. </pages>
Reference-contexts: This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials <ref> [Lai94, Knu95b] </ref> or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: [Mur90] against FEAL, and [Knu93a, Knu93b] against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes <ref> [Knu95b, JK97, SMK98] </ref>. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm. In Twofish we tried to do both: we chose to build our 8-by-8-bit S-boxes algorithmically out of random 4-by-4-bit S-boxes. <p> to improve the number of plaintexts required by a factor of several thousand, because we now know the difference tables for our S-boxes. 8.2 Extensions to Differential Crypt analysis 8.2.1 Higher-Order Differential Cryptanaly sis Higher-order differential cryptanalysis looks at higher order relations (e.g., quadratic) between pairs of plaintext and ciphertexts <ref> [Lai94, Knu95b] </ref>. These attacks seem to work best against algorithms with simple algebraic functions, only a few rounds, and poor short-term diffusion. In particular, we are not aware of any higher-order differential attack reported in the open literature that is successful against more than 6 rounds of the target cipher. <p> We cannot find any higher-order differentials that can be exploited in the cryptanalysis of Twofish. 8.2.2 Truncated Differentials Attacks using truncated differentials apply a differential attack to only a partial block <ref> [Knu95b] </ref>. We have not found any truncated attacks against Twofish. The almost complete diffusion within a round function makes it very difficult to isolate a portion of the block and ignore the rest of the block.
Reference: [Knu95c] <author> L.R. Knudsen, </author> <title> "A Key-Schedule Weakness in SAFER K-64," </title> <booktitle> Advances in Cryptology| CRYPTO '95 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 274-286. </pages>
Reference-contexts: An early draft of the Square paper proposed a very simple and powerful attack, based solely on such byte statistics, that forced the authors to increase the number of rounds from six to eight. Also, an attack against SAFER is based on the cipher's reliance on a byte structure <ref> [Knu95c] </ref>. Choosing a rotation by an odd number of bits ensures that each of the four 32-bit words are used as input to the g function in each of the eight possible bit positions within a byte.
Reference: [Koc96] <author> P. Kocher, </author> <title> "Timing Attacks on Implementations of Diffie-Hellman, RSA, DSS, and Other Systems," </title> <booktitle> Advances in Cryptology | CRYPTO '96 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 104-113. </pages>
Reference-contexts: However, we do have these comments to make on the design. Side-channel cryptanalysis [KSWH98b] uses information about the cipher in addition to the plaintext or ciphertext. Examples include timing <ref> [Koc96] </ref>, power consumption (including differential power analysis [Koc98]), NMR scanning, and electronic emanations. 21 With many algorithms it is possible to reconstruct the key from these side channels. While total resistance to side-channel cryptanalysis is probably impossible, we note that Twofish executes in constant time on most processors.
Reference: [Koc98] <author> P. </author> <title> Kocher, </title> <type> personal communication, </type> <year> 1998. </year>
Reference-contexts: However, we do have these comments to make on the design. Side-channel cryptanalysis [KSWH98b] uses information about the cipher in addition to the plaintext or ciphertext. Examples include timing [Koc96], power consumption (including differential power analysis <ref> [Koc98] </ref>), NMR scanning, and electronic emanations. 21 With many algorithms it is possible to reconstruct the key from these side channels. While total resistance to side-channel cryptanalysis is probably impossible, we note that Twofish executes in constant time on most processors.
Reference: [KPL93] <author> K. Kim, S. Park, and S. Lee, </author> <title> "Reconstruction of s 2 DES S-Boxes and their Immunity to Differential Cryptanalysis," </title> <booktitle> Proceedings of the 1993 Japan-Korea Workshop on Information Security and Cryptography, </booktitle> <address> Seoul, Korea, </address> <month> 24-26 October </month> <year> 1993, </year> <pages> pp. 282-291. </pages>
Reference-contexts: DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97]. Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES <ref> [KPL93, Knu93c, KLPL95] </ref>, CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [KR94] <author> B. Kaliski Jr., and M. Robshaw, </author> <title> "Linear Cryptanalysis Using Multiple Approximations," </title> <booktitle> Advances in Cryptology | CRYPTO '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 26-39. </pages>
Reference-contexts: These results are only heuristic estimates, and probably overestimate the probability of the best linear characteristic. Nonetheless, they present some useful evidence for the security of Twofish against linear cryptanalysis. 8.4.1 Multiple Linear Approximations Multiple linear approximations <ref> [KR94, KR95] </ref> allow one to combine the bias of several high-probability linear approximations. However, it only provides a significant advantage over traditional linear cryptanalysis when there are a number of linear approximations whose bias is close to that of the best linear approximation. <p> Hence, we do not feel that Twofish is vulnerable to this kind of cryptanalysis. 8.4.2 Non-linear Cryptanalysis Another generalization of linear cryptanalysis looks at non-linear relations [KR96a]: e.g., quadratic relations. While this attack, combined with the technique of multiple approximations <ref> [KR94] </ref>, managed to improve the best linear attack against DES a minute amount [SK98], we do not believe it can be brought to bear against Twofish for the same reasons that it is immune to linear cryptanalysis. 8.4.3 Generalized Linear Cryptanalysis This generalization of linear cryptanalysis uses the notion of binary
Reference: [KR95] <author> B. Kaliski Jr., and M. Robshaw, </author> <title> "Linear Cryptanalysis Using Multiple Approximations and FEAL," Fast Software Encryption, </title> <booktitle> Second International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 249-264. </pages>
Reference-contexts: These results are only heuristic estimates, and probably overestimate the probability of the best linear characteristic. Nonetheless, they present some useful evidence for the security of Twofish against linear cryptanalysis. 8.4.1 Multiple Linear Approximations Multiple linear approximations <ref> [KR94, KR95] </ref> allow one to combine the bias of several high-probability linear approximations. However, it only provides a significant advantage over traditional linear cryptanalysis when there are a number of linear approximations whose bias is close to that of the best linear approximation.
Reference: [KR96a] <author> L. Knudsen and M. Robshaw, </author> <title> "Non-Linear Approximations in Linear Cryptanalysis," </title> <booktitle> Advances in Cryptology | EUCROCRYPT '96, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 224-236. </pages>
Reference-contexts: In practice, this seems to improve linear attacks by a small constant factor. Hence, we do not feel that Twofish is vulnerable to this kind of cryptanalysis. 8.4.2 Non-linear Cryptanalysis Another generalization of linear cryptanalysis looks at non-linear relations <ref> [KR96a] </ref>: e.g., quadratic relations.
Reference: [KR96] <author> J. Kilian and P. Rogaway, </author> <title> "How to Protect DES Against Exhaustive Key Search," </title> <booktitle> Advances in Cryptology | CRYPTO '96 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 252-267. </pages>
Reference-contexts: This PHT can be executed in two opcodes on most modern microprocessors, including the Pentium family. 3.5 Whitening Whitening, the technique of xoring key material before the first round and after the last round, was used by Merkle in Khufu/Khafre, and independently invented by Rivest for DES-X <ref> [KR96] </ref>. In [KR96], it was shown that whitening substantially increases the difficulty of keysearch attacks against the remainder of the cipher. <p> This PHT can be executed in two opcodes on most modern microprocessors, including the Pentium family. 3.5 Whitening Whitening, the technique of xoring key material before the first round and after the last round, was used by Merkle in Khufu/Khafre, and independently invented by Rivest for DES-X <ref> [KR96] </ref>. In [KR96], it was shown that whitening substantially increases the difficulty of keysearch attacks against the remainder of the cipher.
Reference: [KR97] <author> L.R. Knudsen and V. Rijmen, </author> <title> "Two Rights Sometimes Make a Wrong," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '97) Workshop Record, </booktitle> <institution> School of Computer Science, Carleton University, </institution> <year> 1997, </year> <pages> pp. 213-223. </pages>
Reference-contexts: Although initial cryptanalysis was promising [KY95] (see also [Sel98]), subsequent research [KM97, BK98] suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in <ref> [FS97, KR97] </ref>. 10 Student cryptography projects bear this observation out. At 16 rounds, the typical student cipher fares rather badly against a standard suite of statistical tests. At 32 rounds, it looks better.
Reference: [KRRR98] <author> L.R. Knudsen, V. Rijmen, R. Rivest, and M. Robshaw, </author> <title> "On the Design and Security of RC2," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 206-221. </pages>
Reference-contexts: Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 <ref> [Riv97, KRRR98] </ref> was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. Two 1997 designs, SPEED [Zhe97] 5 and Zhu-Guo [ZG97], are significantly slower than alternatives that existed years previous.
Reference: [KSHW98] <author> J. Kelsey, B. Schneier, C. Hall, and D. Wag-ner, </author> <title> "Secure Applications of Low-Entropy Keys," Information Security. </title> <booktitle> First International Workshop ISW '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> 121-134. </pages>
Reference-contexts: The cynical reader would immediately conclude that the NSA is concerned with the efficiency of their brute-force keysearch machines. However, there are implementations where key agility is a valid concern. Key-stretching techniques can always be used to frustrate brute-force attacks <ref> [QDD86, KSHW98] </ref>.
Reference: [KSW96] <author> J. Kelsey, B. Schneier, and D. Wagner, </author> <title> "Key-Schedule Cryptanalysis of IDEA, </title> <editor> G-DES, GOST, SAFER, and Triple-DES," </editor> <booktitle> Advances in Cryptology | CRYPTO '96 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 237-251. </pages>
Reference-contexts: been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96], such as differential [BS93], linear [Mat94], and related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref>. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. <p> Even worse, they can make attacks on the cipher easier, and some attacks on the cipher will be focused directly at the key schedule, such as related-key differential attacks <ref> [KSW96, KSW97] </ref>. These attacks can be especially devastating when the cipher is used in a hash function construction. Key schedules can be divided into several broad categories [CDN98]. In some key schedules, knowledge of a round subkey uniquely specifies bits of other round subkeys. <p> When this happens, and there are k bits in that xor difference, there is a 2 k probability that the 19 We have discussed the relevance of related-key attacks to practical implementations of a block cipher in <ref> [KSW96, KSW97] </ref>. Most importantly, related-key attacks affect a cipher's ability to be used as a one-way hash function. 36 output of the PHT will be unchanged in one of its two words. <p> The differential attack described in Section 8.1 is the best way we were able to find to test such a partial key guess. We can see no way to test a guess of S on the full sixteen round Twofish. 8.7 Related-key Cryptanalysis Related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref> uses a cipher's key schedule to break plaintexts encrypted with related keys. In its most advanced form, differential related-key cryptanalysis, both plaintexts and keys with chosen differentials are used to recover the keys.
Reference: [KSW97] <author> J. Kelsey, B. Schneier, and D. Wag-ner, </author> <title> "Related-Key Cryptanalysis of 3-WAY, </title> <editor> Biham-DES, CAST, DES-X, NewDES, RC2, and TEA," </editor> <booktitle> Information and Communications Security, First International Conference Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 203-207. </pages>
Reference-contexts: been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96], such as differential [BS93], linear [Mat94], and related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref>. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. <p> Even worse, they can make attacks on the cipher easier, and some attacks on the cipher will be focused directly at the key schedule, such as related-key differential attacks <ref> [KSW96, KSW97] </ref>. These attacks can be especially devastating when the cipher is used in a hash function construction. Key schedules can be divided into several broad categories [CDN98]. In some key schedules, knowledge of a round subkey uniquely specifies bits of other round subkeys. <p> When this happens, and there are k bits in that xor difference, there is a 2 k probability that the 19 We have discussed the relevance of related-key attacks to practical implementations of a block cipher in <ref> [KSW96, KSW97] </ref>. Most importantly, related-key attacks affect a cipher's ability to be used as a one-way hash function. 36 output of the PHT will be unchanged in one of its two words. <p> The differential attack described in Section 8.1 is the best way we were able to find to test such a partial key guess. We can see no way to test a guess of S on the full sixteen round Twofish. 8.7 Related-key Cryptanalysis Related-key cryptanalysis <ref> [Bih94, KSW96, KSW97] </ref> uses a cipher's key schedule to break plaintexts encrypted with related keys. In its most advanced form, differential related-key cryptanalysis, both plaintexts and keys with chosen differentials are used to recover the keys.
Reference: [KSWH98a] <author> J. Kelsey, B. Schneier, D. Wagner, and C. Hall, </author> <title> "Cryptanalytic Attacks on Pseudorandom Number Generators," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 168-188. </pages>
Reference-contexts: Again, we believe Twofish's strong key schedule makes it very suitable for these constructions. 11.4 Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on <ref> [Plu94, KSWH98a, Gut98, KSWH98c] </ref>. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions [SW97, PRB98]. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16
Reference: [KSWH98b] <author> J. Kelsey, B. Schneier, D. Wagner, and C. Hall, </author> <title> "Side Channel Cryptanalysis of Product Ciphers," </title> <booktitle> ESORICS '98 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <note> to appear. </note>
Reference-contexts: However, we do have these comments to make on the design. Side-channel cryptanalysis <ref> [KSWH98b] </ref> uses information about the cipher in addition to the plaintext or ciphertext. Examples include timing [Koc96], power consumption (including differential power analysis [Koc98]), NMR scanning, and electronic emanations. 21 With many algorithms it is possible to reconstruct the key from these side channels.
Reference: [KSWH98c] <author> J. Kelsey, B. Schneier, D. Wagner, and C. Hall, "Yarrow: </author> <title> A Pseudorandom Number Generator," </title> <note> in preparation. </note>
Reference-contexts: Again, we believe Twofish's strong key schedule makes it very suitable for these constructions. 11.4 Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on <ref> [Plu94, KSWH98a, Gut98, KSWH98c] </ref>. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions [SW97, PRB98]. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16
Reference: [Kwa97] <author> M. Kwan, </author> <title> "The Design of ICE Encryption Algorithm," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 69-82. </pages>
Reference-contexts: Either the round subkey itself is used to generate the other round sub-keys in some cryptographically secure manner, as in RC5 and CS-Cipher, or a one-way function is used to generate the sound subkeys (sometimes the block cipher itself): e.g., Blowfish, Serpent [BAK98], ICE <ref> [Kwa97] </ref>, and Shark. Some simple design principles guided our development of the key schedule for Twofish: * Design the Key Schedule for the Cipher.
Reference: [KY95] <author> B.S. Kaliski and Y.L. Yin, </author> <title> "On Differential and Linear Cryptanalysis of the RC5 Encryption Algorithm," </title> <booktitle> Advances in Cryptology|CRYPTO '95 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 445-454. </pages>
Reference-contexts: The Twofish encryption and decryption round functions are slightly different, but are built from the 8 RC5's security is almost wholly based on data-dependent rotations. Although initial cryptanalysis was promising <ref> [KY95] </ref> (see also [Sel98]), subsequent research [KM97, BK98] suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in [FS97, KR97]. 10 Student cryptography projects bear this observation out.
Reference: [Lai94] <author> X. Lai, </author> <title> "Higher Order Derivations and Differential Cryptanalysis," Communications and Cryptography: Two Sides of One Tapestry, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994, </year> <pages> pp. 227-233. </pages>
Reference-contexts: This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials <ref> [Lai94, Knu95b] </ref> or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> to improve the number of plaintexts required by a factor of several thousand, because we now know the difference tables for our S-boxes. 8.2 Extensions to Differential Crypt analysis 8.2.1 Higher-Order Differential Cryptanaly sis Higher-order differential cryptanalysis looks at higher order relations (e.g., quadratic) between pairs of plaintext and ciphertexts <ref> [Lai94, Knu95b] </ref>. These attacks seem to work best against algorithms with simple algebraic functions, only a few rounds, and poor short-term diffusion. In particular, we are not aware of any higher-order differential attack reported in the open literature that is successful against more than 6 rounds of the target cipher.
Reference: [LC97] <author> C.-H. Lee and Y.-T. Cha, </author> <title> "The Block Cipher: SNAKE with Provable Resistance Against DC and LC Attacks," </title> <booktitle> Proceedings of JW-ISC '97, KIISC and ISEC Group of IEICE, </booktitle> <year> 1997, </year> <pages> pp. 3-17. </pages>
Reference-contexts: The CAST cipher cryptanalyzed in [MSK98a] is not CAST-128, but it does illustrate that while the CAST design procedure [AT93, HT94] can create ciphers resistant to differential and linear cryptanalysis, it does not create ciphers resistant to whatever form of cryptanalysis comes next. SNAKE <ref> [LC97] </ref>, another cipher provably secure against differential and linear cryptanalysis, was successfully broken using the interpolation attack [MSK98b]. When designing a cipher, it is prudent to assume that new attacks will be developed in order to break it. We took a slightly different approach in our design.
Reference: [Lee96] <author> M. Leech, </author> <title> "CRISP: A Feistel Network with Hardened Key Scheduling," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '96) Workshop Record, </booktitle> <institution> Queens University, </institution> <year> 1996, </year> <pages> pp. 15-29. </pages>
Reference-contexts: The use of the RS code to derive the key material for g adds substantial resistance to related-key attacks. While many algorithms reuse the encryption operation in their key schedule (e.g., Blowfish, Panama [DC98], RC4, CRISP <ref> [Lee96] </ref>, YTH [YTH96]), and several alternative DES key schedules reuse the DES operation [Knu94b, BB96], we are unaware of any that reuse the same primitives in exactly this manner. 11 We feel that doing so greatly simplifies the analysis of Twofish, since the same kinds of analysis can apply to the
Reference: [LH94] <author> S. Langford and M. Hellman, </author> <title> "Differential-Linear Cryptanalysis," </title> <booktitle> Advances in Cryptology | CRYPTO '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 17-26. </pages>
Reference-contexts: We are not aware of any general way to partition F 's inputs and outputs to facilitate such attacks. 8.4.5 Differential-linear Cryptanalysis Differential-linear cryptanalysis uses a combination of techniques from both differential and linear cryptanalysis <ref> [LH94] </ref>.
Reference: [LM91] <author> X. Lai and J. Massey, </author> <title> "A Proposal for a New Block Encryption Standard," </title> <booktitle> Advances in Cryptology | EUROCRYPT '90 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 389-404. </pages>
Reference-contexts: The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA <ref> [LM91, LMM91] </ref>|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones.
Reference: [LMM91] <author> X. Lai, J. Massey, and S. Murphy, </author> <title> "Markov Ciphers and Differential Cryptanalysis," </title> <booktitle> Advances in Cryptology | CRYPTO '91 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 17-38. </pages>
Reference-contexts: The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA <ref> [LM91, LMM91] </ref>|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones.
Reference: [MA96] <author> S. Mister and C. Adams, </author> <title> "Practical S-Box Design," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '96) Workshop Record, </booktitle> <institution> Queens University, </institution> <year> 1996, </year> <pages> pp. 61-76. </pages>
Reference-contexts: Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES [KPL93, Knu93c, KLPL95], CAST <ref> [MA96, Ada97a] </ref>|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [Mad84] <author> W.E. Madryga, </author> <title> "A High Performance Encryption Algorithm," Computer Security: A Global Challenge, </title> <publisher> Elsevier Science Publishers, </publisher> <year> 1984, </year> <pages> pp. 557-570. </pages>
Reference: [Mas94] <author> J.L. Massey, "SAFER K-64: </author> <title> A Byte-Oriented Block-Ciphering Algorithm," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 1-17. </pages>
Reference-contexts: Given two inputs, a and b, the 32-bit PHT is defined as: b 0 = a + 2b mod 2 32 SAFER <ref> [Mas94] </ref> uses 8-bit PHTs extensively for diffusion. Twofish uses a 32-bit PHT to mix the outputs from its two parallel 32-bit g functions. <p> And we would be foolish to even try. 10 When is a Cipher Insecure? More and more recent ciphers are being defined with a variable number of rounds: e.g., SAFER-K64 <ref> [Mas94] </ref>, RC5, and Speed [Zhe97]. This means that it is impossible to categorically state that a given cipher construction is insecure: there might always be a number of rounds n for which the cipher is still secure.
Reference: [Mat94] <author> M. Matsui, </author> <title> "Linear Cryptanalysis Method for DES Cipher," </title> <booktitle> Advances in Cryptology | EUROCRYPT '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 386-397. </pages>
Reference-contexts: the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96], such as differential [BS93], linear <ref> [Mat94] </ref>, and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers.
Reference: [Mat95] <author> M. Matsui, </author> <title> "On Correlation Between the Order of S-Boxes and the Strength of DES," </title> <booktitle> Advances in Cryptology | EUROCRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 366-375. </pages>
Reference-contexts: Khafre uses S-boxes taken from the RAND tables [RAND55], and it is vulnerable to differential cryptanalysis [BS92]. NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak <ref> [BS93, Mat95] </ref>, and CMEA was weakened extensively because of a poor S-box choice [WSK97]. <p> In this approach, we can count the minimum number of S-boxes over all differential characteristic by fully searching the set of all patterns of active bytes. Our implementation used Matsui's algorithm for pruned search of all differential characteristics <ref> [Mat95] </ref>. We conservatively assumed that a good analyst might be able to bypass the first round of Twofish and mount a 3-R attack, thus needing to cover only rounds 2-13. Therefore, we concentrated our efforts on 12-round characteristics.
Reference: [Mat96] <author> M. Matsui, </author> <title> "New Structure of Block Ciphers with Provable Security Against Differential and Linear Cryptanalysis," Fast Software Encryption, </title> <booktitle> 3rd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 205-218. </pages>
Reference-contexts: The q 0 and q 1 permutations were chosen by random search, constructing random 4-bit permutations t 0 , t 1 , t 2 , and t 3 for each. Using the notation of Matsui <ref> [Mat96] </ref>, we define DP max (q) = max Pr [q (X a) q (X) = b] LP max (q) = max X 2 where q is the mapping DP max and LP max are being computed for, the probabilities are taken over a uniformly distributed X, and the operator computes the
Reference: [Mat97] <author> M. Matsui, </author> <title> "New Block Encryption Algorithm MISTY," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 54-68. </pages>
Reference-contexts: This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY <ref> [Mat97] </ref> are probably the most noteworthy|as well as some excellent cryptanalytic theory. However, it is dangerous to rely solely on theory when designing ciphers.
Reference: [McD97] <author> T.J. McDermott, </author> <title> "NSA comments on criteria for AES," letter to NIST, </title> <booktitle> National Security Agency, </booktitle> <month> 2 Apr 97. </month>
Reference-contexts: For even higher levels of performance, multiple independent engines can be used to achieve linear speedups at a linear cost in gates. We see no problem meeting NSA's requirement to "be able to encrypt data at a minimum of 1 Gb/s, pipelined if necessary, in existing technology" <ref> [McD97] </ref>. Table 3 gives hardware size and speed estimates for the case of 128-bit keys. <p> its encryption function in both the forward and backward directions. 15 In its comments on the AES criteria, the NSA suggested that "a goal should be that two blocks could be enciphered with different keys in virtually the same time as two blocks could be enciphered with the same key" <ref> [McD97] </ref>. The cynical reader would immediately conclude that the NSA is concerned with the efficiency of their brute-force keysearch machines. However, there are implementations where key agility is a valid concern. Key-stretching techniques can always be used to frustrate brute-force attacks [QDD86, KSHW98].
Reference: [Mer91] <author> R.C. Merkle, </author> <title> "Fast Software Encryption Functions," </title> <booktitle> Advances in Cryptology | CRYPTO '90 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 476-501. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre <ref> [Mer91] </ref>, LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre <ref> [Mer91] </ref> was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones.
Reference: [MS77] <author> F.J. MacWilliams and N.J.A. Sloane, </author> <title> "The Theory of Error-Correcting Codes," </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1977. </year>
Reference-contexts: A maximum distance separable (MDS) code over a field is a linear mapping from a field elements to b field elements, producing a composite vector of a + b elements, with the property that the minimum number of non-zero elements in any non-zero vector is at least b + 1 <ref> [MS77] </ref>. Put another way, the "distance" (i.e., the number of elements that differ) between any two distinct vectors produced by the MDS mapping is at least b + 1. <p> For example, a single byte change in the key is guaranteed to affect all four key-dependent S-boxes in g. Since RS codes are MDS <ref> [MS77] </ref>, the minimum number of different bytes between distinct 12-byte vectors generated by the RS code is guaranteed to be at least five.
Reference: [MSK98a] <author> S. Moriai, T. Shimoyama, and T. Kaneko, </author> <title> "Higher Order Differential Attack of a CAST Cipher," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 17-31. </pages>
Reference-contexts: However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in <ref> [MSK98a] </ref>. The CAST cipher cryptanalyzed in [MSK98a] is not CAST-128, but it does illustrate that while the CAST design procedure [AT93, HT94] can create ciphers resistant to differential and linear cryptanalysis, it does not create ciphers resistant to whatever form of cryptanalysis comes next. <p> Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in <ref> [MSK98a] </ref>. The CAST cipher cryptanalyzed in [MSK98a] is not CAST-128, but it does illustrate that while the CAST design procedure [AT93, HT94] can create ciphers resistant to differential and linear cryptanalysis, it does not create ciphers resistant to whatever form of cryptanalysis comes next.
Reference: [MSK98b] <author> S. Moriai, T. Shimoyama, and T. Kaneko, </author> <title> "Interpolation Attacks of the Block Cipher: SNAKE," </title> <type> unpublished manuscript, </type> <year> 1998. </year>
Reference-contexts: SNAKE [LC97], another cipher provably secure against differential and linear cryptanalysis, was successfully broken using the interpolation attack <ref> [MSK98b] </ref>. When designing a cipher, it is prudent to assume that new attacks will be developed in order to break it. We took a slightly different approach in our design. <p> Therefore, we feel that differential-linear cryptanalysis is unlikely to be successful against the Twofish structure. In our analysis, we have found no differential-linear attacks that work against Twofish. 8.5 Interpolation Attack The interpolation attack <ref> [JK97, MSK98b] </ref> is effective against ciphers that use simple alegbraic functions.
Reference: [Mur90] <author> S. Murphy, </author> <title> "The Cryptanalysis of FEAL-4 with 20 Chosen Plaintexts," </title> <journal> Journal of Cryptology, v. </journal> <volume> 2, </volume> <editor> n. </editor> <volume> 3, </volume> <year> 1990, </year> <pages> pp. 145-154. </pages>
Reference-contexts: The advantage of the latter is that the S-boxes are more compact, and can be more easily implemented in applications where the ROM or RAM for large tables is not available. Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: <ref> [Mur90] </ref> against FEAL, and [Knu93a, Knu93b] against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes [Knu95b, JK97, SMK98]. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm.
Reference: [NBS77] <institution> National Bureau of Standards, </institution> <note> NBS FIPS PUB 46, "Data Encryption Standard," </note> <institution> National Bureau of Standards, U.S. Department of Commerce, </institution> <month> Jan </month> <year> 1977. </year> <month> 62 </month>
Reference-contexts: 1 Introduction In 1972 and 1974, the National Bureau of Standards (now the National Institute of Standards and Technology, or NIST) issued the first public request for an encryption standard. The result was DES <ref> [NBS77] </ref>, arguably the most widely used and successful encryption algorithm in the world. Despite its popularity, DES has been plagued with controversy. Some cryptographers objected to the "closed-door" design process of the algorithm. <p> It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES <ref> [NBS77] </ref>. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. <p> In designing Twofish, we tried to evaluate all design decisions in terms of performance. 5 Speed has been cryptanalyzed in [HKSW98, HKR+98]. 6 Here we use the term "round" in the traditional sense: as it was defined by DES <ref> [NBS77] </ref> and has been used to describe Feistel-network ciphers ever since. The RC5 documentation [Riv95] uses the term "round" differently: one RC5-defined round equals two Feistel rounds. 18 Since NIST's platform of choice was the Intel Pen--tium Pro [NIST97b], we concentrated on that platform.
Reference: [NBS80] <institution> National Bureau of Standards, </institution> <note> NBS FIPS PUB 46, </note> <institution> "DES Modes of Operation," National Bureau of Standards, U.S. Department of Commerce, </institution> <month> Dec </month> <year> 1980. </year>
Reference-contexts: With that in mind, Table 9 gives performance met-rics for block and stream ciphers on the Pentium processor. 23 11 Using Twofish 11.1 Chaining Modes All standard block-cipher chaining modes work with Twofish: CBC, CFB, OFB, counter <ref> [NBS80] </ref>.
Reference: [NIST93] <institution> National Institute of Standards and Technology, "Secure Hash Standard," U.S. Department of Commerce, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Another strategy is to generate key-dependent S-boxes from a known secure S-box and a series of strict mathematical rules: e.g., Biham-DES [BB94]. Most key-dependent S-boxes are created by some process completely orthogonal to the underlying cipher. SEAL, for example, uses SHA <ref> [NIST93] </ref> to create its key-dependent S-boxes. Blowfish uses repeated iterations of itself. The results are S-boxes that are effectively random, but the cost is an enormous performance penalty in key-setup time. 14 An alternative is to build the S-boxes using fairly simple operations from the key. <p> This is done primarily for simplicity; xor is the most efficient operation in both hardware and software. We chose not to use addition (used in MD4 [Riv91], MD5 [Riv92], RIPEMD-160 [DBP96] and SHA <ref> [NIST93] </ref>), or a more complicated combining function like Latin squares (used in DESV [CDN95]). We did not implement dynamic swapping [KKT94] or any additional complexity. 7.7 Use of Different Groups By design, the general ordering of operations in Twofish alternates as follows: 8-by-8 S-box, MDS matrix, addition, and xor.
Reference: [NIST94] <institution> National Institute of Standards and Technologies, </institution> <note> NIST FIPS PUB 186, </note> <institution> "Digital Signature Standard," U.S. Department of Commerce, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: However, it has been shown that this type of cipher, called a "master-key cryptosystem," is equivalent to a public-key cryp-tosystem [BFL96]. Again, as cryptographers we 52 would achieve far greater recognition by publishing a public-key cryptosystem that is not dependent on factoring [RSA78] or the discrete logarithm problem <ref> [DH76, ElG85, NIST94] </ref>. And the resulting algorithm's dual capabilities as both a symmetric and public-key algorithm would make it far more flexible than the AES competition. There is a large gap between a weakness that is exploitable in theory and one that is exploitable in practice.
Reference: [NIST97a] <author> National Institute of Standards and Technology, </author> <title> "Announcing Development of a Federal Information Standard for Advanced Encryption Standard," Federal Register, </title> <editor> v. </editor> <volume> 62, </volume> <editor> n. </editor> <volume> 1, </volume> <month> 2 Jan </month> <year> 1997, </year> <pages> pp. 93-94. </pages>
Reference-contexts: More fundamentally, the 64-bit block length shared by DES and most other well-known ciphers opens it up to attacks when large amounts of data are encrypted under the same key. In response to a growing desire to replace DES, NIST announced the Advanced Encryption Standard (AES) program in 1997 <ref> [NIST97a] </ref>. NIST solicited comments from the public on the proposed standard, and eventually issued a call for algorithms to satisfy the standard [NIST97b].
Reference: [NIST97b] <author> National Institute of Standards and Technology, </author> <title> "Announcing Request for Candidate Algorithm Nominations for the Advanced Encryption Standard (AES)," Federal Register, </title> <editor> v. </editor> <volume> 62, </volume> <editor> n. </editor> <volume> 117, </volume> <month> 12 Sep </month> <year> 1997, </year> <pages> pp. 48051-48058. </pages>
Reference-contexts: In response to a growing desire to replace DES, NIST announced the Advanced Encryption Standard (AES) program in 1997 [NIST97a]. NIST solicited comments from the public on the proposed standard, and eventually issued a call for algorithms to satisfy the standard <ref> [NIST97b] </ref>. The intention is for NIST to make all submissions public and eventually, through a process of public review and comment, choose a new encryption standard to replace DES. NIST's call requested a block cipher. <p> Section 10 compares Twofish with some other ciphers. Section 11 discusses various modes of using Twofish, including a family-key variant. Section 12 contains historical remarks, and Section 13 our conclusions and directions for future analysis. 2 Twofish Design Goals Twofish was designed to meet NIST's design criteria for AES <ref> [NIST97b] </ref>. <p> The RC5 documentation [Riv95] uses the term "round" differently: one RC5-defined round equals two Feistel rounds. 18 Since NIST's platform of choice was the Intel Pen--tium Pro <ref> [NIST97b] </ref>, we concentrated on that platform. However, we did not ignore performance on other 32-bit CPUs, as well as 8-bit and 16-bit CPUs. If there is any lesson from the past twenty years of microprocessors, it is that the high end gets better and the low end never goes away.
Reference: [NK95] <author> K. </author> <title> Nyberg and L.R. Knudsen, "Provable Security Against Differential Cryptanalysis," </title> <journal> Journal of Cryptology, v. </journal> <volume> 8, </volume> <editor> n. </editor> <volume> 1, </volume> <year> 1995, </year> <pages> pp. 27-37. </pages>
Reference-contexts: However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher <ref> [NK95] </ref> was attacked in [JK97, SMK98], Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a].
Reference: [NM97] <author> J. Nakajima and M. Matsui, </author> <title> "Fast Software Implementation of MISTY on Alpha Processors," </title> <booktitle> Proceedings of JW-ISC '97, KIISC and ISEC Group of IEICE, </booktitle> <year> 1997, </year> <pages> pp. 55-63. </pages>
Reference-contexts: Yesterday's top-of-the-line CPUs are currently in smart cards. Today's CPUs will eventually be in smart cards, while the 8-bit microprocessors will move to devices even smaller. The only thing we did not consider in our performance metrics are bitslice implementations <ref> [Bih97, SAM97, NM97] </ref>, since these can only be used in very specialized applications and often require unrealistic implementations: e.g., 32 simultaneous ECB encryptions, or 32 interleaved IVs. 7 6.1.1 Performance-driven Tradeoffs During our design, we constantly evaluated the relative performance of different modifications to our round function.
Reference: [Nyb91] <author> K. Nyberg, </author> <title> "Perfect Nonlinear S-boxes," </title> <booktitle> Advances in Cryptology | EUROCRYPT '91 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 378-386. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [Nyb93] <author> K. Nyberg, </author> <title> "On the Construction of Highly Nonlinear Permutations," </title> <booktitle> Advances in Cryptology | EUROCRYPT '92 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 92-98. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [Nyb94] <author> K. Nyberg, </author> <title> "Differentially Uniform Mappings for Cryptography," </title> <booktitle> Advances in Cryptology | EUROCRYPT '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 55-64. </pages>
Reference: [Nyb95] <author> K. Nyberg, </author> <title> "Linear Approximation of Block Ciphers," </title> <booktitle> Advances in Cryptology | EURO-CRYPT '94 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 439-444. </pages>
Reference: [Nyb96] <author> K. Nyberg, </author> <title> "Generalized Feistel Networks," </title> <booktitle> Advances in Cryptology | ASIACRYPT '96 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 91-104. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory. <p> Many elements of Twofish reflect this philosophy. We used well-studied design elements throughout the algorithm. We started with a Feistel network, probably the most studied block-cipher structure, instead of something newer like an unbalanced Feis-tel network [SK96, ZMI90] or a generalized Feistel network <ref> [Nyb96] </ref>. We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB [DGV93]) or data-dependent rotations (as in RC5 8 or Akelarre [AGMP96] 9 ) for non-linearity.
Reference: [OCo94a] <author> L. O'Connor, </author> <title> "Enumerating Nondegenerate Permutations," </title> <booktitle> Advances in Cryptology | EUROCRYPT '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 368-377. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [OCo94b] <author> L. O'Connor, </author> <title> "On the Distribution of Characteristics in Bijective Mappings," </title> <booktitle> Advances in Cryptology | EUROCRYPT '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 360-370. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [OCo94c] <author> L. O'Connor, </author> <title> "On the Distribution of Characteristics in Composite Permutations," </title> <booktitle> Advances in Cryptology | CRYPTO '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 403-412. </pages>
Reference-contexts: diffusion, instead of a 4-by-4 MDS matrix over GF (2 8 ); the former would have been no slower on a Pentium but at least twice as slow on a low-memory smart card. 6.2 Conservative Design There has been considerable research in designing ciphers to be resistant to known attacks <ref> [Nyb91, Nyb93, OCo94a, OCo94b, OCo94c, Knu94a, Nyb96] </ref>, such as differential [BS93], linear [Mat94], and related-key cryptanalysis [Bih94, KSW96, KSW97]. This research has culminated in strong cipher designs|CAST-128 [Ada97a] and MISTY [Mat97] are probably the most noteworthy|as well as some excellent cryptanalytic theory.
Reference: [Plu94] <author> C. Plumb, </author> <title> "Truly Random Numbers," </title> <journal> Dr. Dobbs Journal, v. </journal> <volume> 19, </volume> <editor> n. </editor> <volume> 13, </volume> <month> Nov </month> <year> 1994, </year> <pages> pp. 113-115. </pages>
Reference-contexts: Again, we believe Twofish's strong key schedule makes it very suitable for these constructions. 11.4 Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on <ref> [Plu94, KSWH98a, Gut98, KSWH98c] </ref>. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions [SW97, PRB98]. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16
Reference: [Pre93] <author> B. Preneel, </author> <title> Analysis and Design of Cryptographic Hash Functions, </title> <type> Ph.D. dissertation, </type> <institution> Katholieke Universiteit Leuven, </institution> <month> Jan </month> <year> 1993. </year>
Reference-contexts: Twofish may collapse the pre- and post-xor of key material into a single xor, but does not appear to benefit much from this. 11.2 One-Way Hash Functions The most common way of using a block cipher as a hash function is a Davies-Meyer construction [Win84]: There are fifteen other variants <ref> [Pre93] </ref>. We believe that Twofish can be used securely in any of these formats; note, however, that the key schedule has been analyzed mainly for related-key attacks, not for the class of chosen-key attack that hash functions must resist.
Reference: [PRB98] <author> B. Preneel, V. Rijmen, A. Bosselaers, </author> <title> "Recent Developments in the Design of Conventional Cryptographic Algorithms," State of the Art and Evolution of Computer Security and Industrial Cryptography, </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <editor> B. Preneel, R. Gov-aerts, J. Vandewalle, Eds., </editor> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <note> to appear. </note>
Reference-contexts: Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on [Plu94, KSWH98a, Gut98, KSWH98c]. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions <ref> [SW97, PRB98] </ref>. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16 variable 64 32 16 24.8 CAST-128 128 64 16 8 29.5 DES 56 64 16 8 43 Serpent 128, 192, 256
Reference: [QDD86] <author> J.-J. Quisquater, Y. Desmedt, and M. Davio, </author> <title> "The Importance of `Good' Key Scheduling Schemes," </title> <booktitle> Advances in Cryptology | CRYPTO '85 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1986, </year> <pages> pp. 537-542. </pages>
Reference-contexts: The cynical reader would immediately conclude that the NSA is concerned with the efficiency of their brute-force keysearch machines. However, there are implementations where key agility is a valid concern. Key-stretching techniques can always be used to frustrate brute-force attacks <ref> [QDD86, KSHW98] </ref>.
Reference: [RAND55] <author> RAND Corporation, </author> <title> A Million Random Digits with 100,000 Normal Deviates, </title> <address> Glencoe, IL, </address> <publisher> Free Press Publishers, </publisher> <year> 1955. </year>
Reference-contexts: Ciphers invented before the public discovery of differential cryptanalysis sometimes used arbitrary sources for their S-box entries. Randomly constructed known S-boxes are unlikely to be secure. Khafre uses S-boxes taken from the RAND tables <ref> [RAND55] </ref>, and it is vulnerable to differential cryptanalysis [BS92]. NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes.
Reference: [RC94] <author> P. Rogaway and D. Coppersmith, </author> <title> "A Software-Optimized Encryption Algorithm," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 56-63. </pages>
Reference-contexts: Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL <ref> [RC94, RC97] </ref> is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. <p> Even when cryptographers made efforts to use efficient 32-bit operations, they often lacked a full appreciation of low-level software optimization principles associated with high-performance CPUs. Thus, many algorithms are not as efficient as they could be. Minor modifications in the design of Blowfish [Sch94], SEAL <ref> [RC94, RC97] </ref>, and RC4 [Sch96] could improve performance without affecting security [SW97] (or, alternatively, increase the algorithms' complexity without affecting performance).
Reference: [RC97] <author> P. Rogaway and D. Coppersmith, </author> <title> "A Software-Optimized Encryption Algorithm," </title> <note> full version of [RC94], available at http://www.cs.ucdavis.edu/~rogaway/ papers/seal.ps, </note> <year> 1997. </year>
Reference-contexts: Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL <ref> [RC94, RC97] </ref> is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. <p> Even when cryptographers made efforts to use efficient 32-bit operations, they often lacked a full appreciation of low-level software optimization principles associated with high-performance CPUs. Thus, many algorithms are not as efficient as they could be. Minor modifications in the design of Blowfish [Sch94], SEAL <ref> [RC94, RC97] </ref>, and RC4 [Sch96] could improve performance without affecting security [SW97] (or, alternatively, increase the algorithms' complexity without affecting performance).
Reference: [RDP+96] <author> V. Rijmen, B. Preneel, A. Bosselaers, and E. DeWin, </author> <title> "The Cipher SHARK," Fast Software Encryption, </title> <booktitle> 3rd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 99-111. </pages>
Reference-contexts: outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark <ref> [RDP+96] </ref> (see also [YTH96]). Thus, 8-cycle (8-round) IDEA is comparable to 8-cycle (16-round) DES and 8-cycle (32-round) Skipjack. 4 Twofish is a 16-round Feistel network with a bijec--tive F function. 3.2 S-boxes An S-box is a table-driven non-linear substitution operation used in most block ciphers. <p> A necessary and sufficient condition for an a fi b matrix to be MDS is that all possible square submatrices, obtained by discarding rows or columns, are non-singular. Serge Vaudenay first proposed MDS matrices as a cipher design element [Vau95]. Shark <ref> [RDP+96] </ref> and Square [DKR97] use MDS matrices (see also [YMT97]), although we first saw the construction used in the unpublished cipher Manta 3 [Fer96].
Reference: [Rij97] <author> V. Rijmen, </author> <title> Cryptanalysis and Design of Iterated Block Ciphers, </title> <type> Ph.D. thesis, </type> <institution> Katholieke Universiteit Leuven, </institution> <month> Oct </month> <year> 1997. </year> <month> 63 </month>
Reference-contexts: by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES [KPL93, Knu93c, KLPL95], CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE [Whe94]. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four <ref> [Rij97] </ref>. Serpent [BAK98] reused the DES S-boxes. GOST [GOST89] navigated a middle course: each application has different fixed S-boxes, turning them into an application-specific family key. 6.4.1 Large S-boxes S-boxes vary in size, from GOST's 4-by-4-bit S-boxes to Tiger's 8-by-64-bit S-boxes [AB96b].
Reference: [RIPE92] <editor> Research and Development in Advanced Communication Technologies in Europe, </editor> <title> RIPE Integrity Primitives: Final Report of RACE Integrity Primitives Evaluation (R1040), RACE, </title> <month> June </month> <year> 1992. </year>
Reference: [Riv91] <author> R.L. Rivest, </author> <title> "The MD4 Message Digest Algorithm," </title> <booktitle> Advances in Cryptology | CRYPTO '90 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 303-311. </pages>
Reference-contexts: This is done primarily for simplicity; xor is the most efficient operation in both hardware and software. We chose not to use addition (used in MD4 <ref> [Riv91] </ref>, MD5 [Riv92], RIPEMD-160 [DBP96] and SHA [NIST93]), or a more complicated combining function like Latin squares (used in DESV [CDN95]).
Reference: [Riv92] <author> R.L. Rivest, </author> <title> "The MD5 Message Digest Algorithm," </title> <type> RFC 1321, </type> <month> Apr </month> <year> 1992. </year>
Reference-contexts: This is done primarily for simplicity; xor is the most efficient operation in both hardware and software. We chose not to use addition (used in MD4 [Riv91], MD5 <ref> [Riv92] </ref>, RIPEMD-160 [DBP96] and SHA [NIST93]), or a more complicated combining function like Latin squares (used in DESV [CDN95]).
Reference: [Riv95] <author> R.L. Rivest, </author> <title> "The RC5 Encryption Algorithm," Fast Software Encryption, </title> <booktitle> 2nd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 86-96. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 <ref> [Riv95] </ref>. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> The RC5 documentation <ref> [Riv95] </ref> uses the term "round" differently: one RC5-defined round equals two Feistel rounds. 18 Since NIST's platform of choice was the Intel Pen--tium Pro [NIST97b], we concentrated on that platform. However, we did not ignore performance on other 32-bit CPUs, as well as 8-bit and 16-bit CPUs.
Reference: [Riv97] <author> R. Rivest, </author> <title> "A Description of the RC2(r) Encryption Algorithm," Internet-Draft, </title> <booktitle> work in progress, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 <ref> [Riv97, KRRR98] </ref> was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. Two 1997 designs, SPEED [Zhe97] 5 and Zhu-Guo [ZG97], are significantly slower than alternatives that existed years previous.
Reference: [Ros98] <author> G. Rose, </author> <title> "A Stream Cipher Based on Linear Feedback over GF(2 8 )," Third Australian Conference, </title> <note> ACISP '98, Springer-Verlag, to appear. </note>
Reference-contexts: Khufu/Khafre [Mer91] was the first published algorithm that explicitly used operations that were efficient on 32-bit microprocessors; SEAL [RC94, RC97] is a more recent example. RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER <ref> [Ros98] </ref> for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. Two 1997 designs, SPEED [Zhe97] 5 and Zhu-Guo [ZG97], are significantly slower than alternatives that existed years previous. Arbitrary metrics, such as the number of rounds, are not good measures of performance.
Reference: [RP95a] <author> V. Rijmen and B. Preneel, </author> <title> "Cryptanalysis of MacGuffin," Fast Software Encryption, </title> <booktitle> Second International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 353-358. </pages>
Reference-contexts: the text block has been modified once. 2 1 A non-surjective F function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin [BS95] (cryptanalyzed in <ref> [RP95a] </ref>) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]).
Reference: [RP95b] <author> V. Rijmen and B. Preneel, </author> <title> "On Weaknesses of Non-surjective Round Functions," </title> <booktitle> Proceedings of the Workshop on Selected Areas in Cryptography (SAC '95), </booktitle> <address> Ottawa, Canada, </address> <year> 1995, </year> <pages> pp. 100-106. </pages>
Reference-contexts: It is our belief that while random key-dependent S-boxes can offer acceptable security if used correctly, the benefits of a surjective S-box are worth the additional complexities that constructing them entails. So, to avoid attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref>, we made the 8-by-8-bit S-boxes, as well as the 8-by-32-bit S-boxes, bijective. However, there is really no such thing as a key-dependent S-box. <p> That way, iterative 2-round differential characteristics cannot exist; when they do exist, they often result in the highest-probability multi-round characteristic, so avoiding them should help to reduce the risk of a successful differential attack. Also, attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref> are sure to fail when the 64-bit Feistel round function is bijective. 22 We argue here that this was a good design decision, by showing that a Twofish variant which uses non-bijective S-boxes is likely to be much easier to break.
Reference: [RPD97] <author> V. Rijman, B. Preneel and E. DeWin, </author> <title> "On Weaknesses of Non-surjective Round Functions," Designs, Codes, and Cryptography, </title> <editor> v. </editor> <volume> 12, </volume> <editor> n. </editor> <volume> 3, </volume> <year> 1997, </year> <pages> pp. 253-266. </pages>
Reference-contexts: It is our belief that while random key-dependent S-boxes can offer acceptable security if used correctly, the benefits of a surjective S-box are worth the additional complexities that constructing them entails. So, to avoid attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref>, we made the 8-by-8-bit S-boxes, as well as the 8-by-32-bit S-boxes, bijective. However, there is really no such thing as a key-dependent S-box. <p> That way, iterative 2-round differential characteristics cannot exist; when they do exist, they often result in the highest-probability multi-round characteristic, so avoiding them should help to reduce the risk of a successful differential attack. Also, attacks based on non-surjective round functions <ref> [BB95, RP95b, RPD97, CWSK98] </ref> are sure to fail when the 64-bit Feistel round function is bijective. 22 We argue here that this was a good design decision, by showing that a Twofish variant which uses non-bijective S-boxes is likely to be much easier to break.
Reference: [RSA78] <author> R. Rivest, A. Shamir, and L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public-Key Cryptosystems," </title> <journal> Communications of the ACM, v. </journal> <volume> 21, </volume> <editor> n. </editor> <volume> 2, </volume> <month> Feb </month> <year> 1978, </year> <pages> pp. 120-126. </pages>
Reference-contexts: However, it has been shown that this type of cipher, called a "master-key cryptosystem," is equivalent to a public-key cryp-tosystem [BFL96]. Again, as cryptographers we 52 would achieve far greater recognition by publishing a public-key cryptosystem that is not dependent on factoring <ref> [RSA78] </ref> or the discrete logarithm problem [DH76, ElG85, NIST94]. And the resulting algorithm's dual capabilities as both a symmetric and public-key algorithm would make it far more flexible than the AES competition.
Reference: [SAM97] <author> T. Shimoyama, S. Amada, and S. Moriai, </author> <title> "Improved Fast Software Implementation of Block Ciphers," Information and Communications Security, </title> <booktitle> First International Conference, ICICS '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 203-207. </pages>
Reference-contexts: Yesterday's top-of-the-line CPUs are currently in smart cards. Today's CPUs will eventually be in smart cards, while the 8-bit microprocessors will move to devices even smaller. The only thing we did not consider in our performance metrics are bitslice implementations <ref> [Bih97, SAM97, NM97] </ref>, since these can only be used in very specialized applications and often require unrealistic implementations: e.g., 32 simultaneous ECB encryptions, or 32 interleaved IVs. 7 6.1.1 Performance-driven Tradeoffs During our design, we constantly evaluated the relative performance of different modifications to our round function.
Reference: [Sch94] <author> B. Schneier, </author> <title> "Description of a New Variable-Length Key, 64-Bit Block Cipher (Blowfish)," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 191-204. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL [SM88], GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish <ref> [Sch94] </ref>, and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> Even when cryptographers made efforts to use efficient 32-bit operations, they often lacked a full appreciation of low-level software optimization principles associated with high-performance CPUs. Thus, many algorithms are not as efficient as they could be. Minor modifications in the design of Blowfish <ref> [Sch94] </ref>, SEAL [RC94, RC97], and RC4 [Sch96] could improve performance without affecting security [SW97] (or, alternatively, increase the algorithms' complexity without affecting performance). <p> There are two different philosophies regarding key-dependent S-boxes. In some ciphers, the S-box is constructed specifically to ensure that no two entries are identical|Khufu and WAKE|while others simply create the S-box randomly and hope for the best: REDOC II [CW91] and Blowfish <ref> [Sch94] </ref>. The latter results in a simpler key schedule, but may result in weaknesses (e.g., a weakness in reduced-round variants of Blowfish [Vau96a]). Another strategy is to generate key-dependent S-boxes from a known secure S-box and a series of strict mathematical rules: e.g., Biham-DES [BB94].
Reference: [Sch96] <author> B. Schneier, </author> <title> Applied Cryptography, Second Edition, </title> <publisher> John Wiley & Sons, </publisher> <year> 1996. </year>
Reference-contexts: Even when cryptographers made efforts to use efficient 32-bit operations, they often lacked a full appreciation of low-level software optimization principles associated with high-performance CPUs. Thus, many algorithms are not as efficient as they could be. Minor modifications in the design of Blowfish [Sch94], SEAL [RC94, RC97], and RC4 <ref> [Sch96] </ref> could improve performance without affecting security [SW97] (or, alternatively, increase the algorithms' complexity without affecting performance). <p> We are aware of no problems with using Twofish with any commonly used chaining mode. (See <ref> [Sch96] </ref> for a detailed comparison of the various modes of operation.) A cryptanalyst considering OFB-, CFB-, or CBC-mode encryption with Twofish may collapse the pre- and post-xor of key material into a single xor, but does not appear to benefit much from this. 11.2 One-Way Hash Functions The most common way
Reference: [Sco85] <author> R. Scott, </author> <title> "Wide Open Encryption Design Offers Flexible Implementation," </title> <editor> Cryptolo-gia, v. </editor> <volume> 9, </volume> <editor> n. </editor> <volume> 1, </volume> <month> Jan </month> <year> 1985, </year> <pages> pp. 75-90. </pages>
Reference-contexts: Ciphers invented before the public discovery of differential cryptanalysis sometimes used arbitrary sources for their S-box entries. Randomly constructed known S-boxes are unlikely to be secure. Khafre uses S-boxes taken from the RAND tables [RAND55], and it is vulnerable to differential cryptanalysis [BS92]. NewDES <ref> [Sco85] </ref>, 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice [WSK97].
Reference: [Sel98] <author> A.A. Sel~cuk, </author> <title> "New Results in Linear Cryptanalysis of RC5," Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 1-16. </pages>
Reference-contexts: The Twofish encryption and decryption round functions are slightly different, but are built from the 8 RC5's security is almost wholly based on data-dependent rotations. Although initial cryptanalysis was promising [KY95] (see also <ref> [Sel98] </ref>), subsequent research [KM97, BK98] suggests that there is considerably more to learn about the security properties of data-dependent rotations. 9 Akelarre was severely broken in [FS97, KR97]. 10 Student cryptography projects bear this observation out.
Reference: [SK96] <author> B. Schneier and J. Kelsey, </author> <title> "Unbalanced Feistel Networks and Block Cipher Design," Fast Software Encryption, </title> <booktitle> 3rd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 121-144. </pages>
Reference-contexts: The idea here is to take an F function, which may be a weak encryption algorithm when taken by itself, and repeatedly iterate it to create a strong encryption algorithm. Two rounds of a Feistel network is called a "cycle" <ref> [SK96] </ref>. <p> In one cycle, every bit of the text block has been modified once. 2 1 A non-surjective F function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks <ref> [SK96, ZMI90] </ref> such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]). <p> Many elements of Twofish reflect this philosophy. We used well-studied design elements throughout the algorithm. We started with a Feistel network, probably the most studied block-cipher structure, instead of something newer like an unbalanced Feis-tel network <ref> [SK96, ZMI90] </ref> or a generalized Feistel network [Nyb96]. We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB [DGV93]) or data-dependent rotations (as in RC5 8 or Akelarre [AGMP96] 9 ) for non-linearity.
Reference: [SK98] <author> T. Shimoyama and T. Kaneko, </author> <title> "Quadratic Relation of S-box and Its Application to the Linear Attack of Full Round DES," </title> <booktitle> Advances in Cryptology | CRYPTO '98 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <note> in preparation. </note>
Reference-contexts: While this attack, combined with the technique of multiple approximations [KR94], managed to improve the best linear attack against DES a minute amount <ref> [SK98] </ref>, we do not believe it can be brought to bear against Twofish for the same reasons that it is immune to linear cryptanalysis. 8.4.3 Generalized Linear Cryptanalysis This generalization of linear cryptanalysis uses the notion of binary I/O sums [HKM95, Har96, JH96]. <p> There is a large gap between a weakness that is exploitable in theory and one that is exploitable in practice. Even the best attack against DES (a linear-cryptanalysis-like attack combining quadratic approximations and a multiple-approximation method) requires just under 2 43 plaintext/ciphertext blocks <ref> [SK98] </ref>, which is equivalent to about 64 terabytes of plaintext/ciphertext encrypted under a single key. A useful trap door would need to work with much less plaintext|a few thousand blocks|or it would have to reduce the effective keyspace to something on the order of 2 72 .
Reference: [SM88] <author> A. Shimizu and S. Miyaguchi, </author> <title> "Fast Data Encipherment Algorithm FEAL," </title> <booktitle> Advances in Cryptology | EUROCRYPT '87 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1988, </year> <pages> pp. 267-278. </pages>
Reference-contexts: It was invented by Horst Feistel [FNS75] in his design of Lucifer [Fei73], and popularized by DES [NBS77]. It is the basis of most block ciphers published since then, including FEAL <ref> [SM88] </ref>, GOST [GOST89], Khufu and Khafre [Mer91], LOKI [BPS90, BKPS93], CAST-128 [Ada97a], Blowfish [Sch94], and RC5 [Riv95]. The fundamental building block of a Feistel network is the F function: a key-dependent mapping of an input string onto an output string. <p> The early post-DES cipher designs would often compete on the number of rounds in the cipher. The original FEAL paper <ref> [SM88] </ref>, for example, discussed the benefits of a stronger round function and fewer rounds. Other cipher designs of the period| REDOC II [CW91], LOKI [BPS90] and LOKI 93 [BKPS93], IDEA [LM91, LMM91]|only considered performance as an afterthought. <p> We designed a very thorough key schedule to prevent related-key and weak-key attacks. 6.3 Simple Design A guiding design principle behind Twofish is that the round function should be simple enough for us to keep in our heads. Anecdotal evidence from algorithms like FEAL <ref> [SM88] </ref>, CAST, and Blowfish indicates that complicated round functions are not always better than simple ones. Also, complicated round functions are harder to analyze and rely on more ad-hoc arguments for security (e.g., REDOC-II [CW91]).
Reference: [SMK98] <author> T. Shimoyama, S. Moriai, and T. Kaneko, </author> <title> "Improving the Higher Order Differential Attack and Cryptanalysis of the KN Cipher," Information Security. </title> <booktitle> First International Workshop ISW '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 32-42. </pages>
Reference-contexts: However, it is dangerous to rely solely on theory when designing ciphers. Ciphers provably secure against differential cryptanalysis have been attacked with higher-order differentials [Lai94, Knu95b] or the interpolation attack [JK97]: KN -cipher [NK95] was attacked in <ref> [JK97, SMK98] </ref>, Kiefer [Kie96] in [JK97], and a version of CAST in [MSK98a]. <p> Algebraic S-boxes can result in S-boxes that are vulnerable to differential cryptanalysis: [Mur90] against FEAL, and [Knu93a, Knu93b] against LOKI. Higher-order differential cryptanalysis is especially powerful against algorithms with simple algebraic S-boxes <ref> [Knu95b, JK97, SMK98] </ref>. Both tabular and algebraic techniques, however, can be used to generate S-boxes with given cryptographic properties, simply by testing the results of the generation algorithm. In Twofish we tried to do both: we chose to build our 8-by-8-bit S-boxes algorithmically out of random 4-by-4-bit S-boxes.
Reference: [SV98] <author> J. Stern and S. Vaudenay, "CS-Cipher," </author> <title> Fast Software Encryption, </title> <booktitle> 5th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> pp. 189-205. </pages>
Reference-contexts: However, we chose the 4-by-4-bit S-boxes randomly and then extensively tested the resulting 8-by-8-bit S-boxes against the cryptographic properties we required. This idea is similar to the one used in CS-cipher <ref> [SV98] </ref>. 12 Despite the algorithm name, NewDES is neither a DES variant nor a new algorithm based on DES. 13 The WAKE design has several variants [Cla97, Cla98]; neither the basic algorithm nor its variants have been extensively cryptanalyzed. 21 6.4.3 Key-dependent S-boxes S-boxes are either fixed for all keys or
Reference: [SW97] <author> B. Schneier and D. Whiting, </author> <title> "Fast Software Encryption: Designing Encryption Algorithms for Optimal Speed on the Intel Pentium Processor," Fast Software Encryption, </title> <booktitle> 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 242-259. </pages>
Reference-contexts: These principles were applied not only to the overall design of Twofish, but to the design of the S-boxes and the key schedule. 6.1 Performance-Driven Design The goal of performance-driven design is to build and evaluate ciphers on the basis of performance <ref> [SW97] </ref>. The early post-DES cipher designs would often compete on the number of rounds in the cipher. The original FEAL paper [SM88], for example, discussed the benefits of a stronger round function and fewer rounds. <p> Arbitrary metrics, such as the number of rounds, are not good measures of performance. What is important is the cipher's speed: the number of clock cycles per byte encrypted. When ciphers are analyzed according to this property, the results can be surprising <ref> [SW97] </ref>. RC5 might have twice the number of rounds of DES, 6 but since its round function is more than twice as fast as DES', RC5 is faster than DES on most microprocessors. <p> Thus, many algorithms are not as efficient as they could be. Minor modifications in the design of Blowfish [Sch94], SEAL [RC94, RC97], and RC4 [Sch96] could improve performance without affecting security <ref> [SW97] </ref> (or, alternatively, increase the algorithms' complexity without affecting performance). <p> Pseudo-Random Number Gen erators Twofish can also be used as a primitive in a pseudo-random number generator suitable for generating session keys, public-key parameters, protocol nonces, and so on [Plu94, KSWH98a, Gut98, KSWH98c]. 23 These metrics are based on theoretical analyses of the algorithms and actual hand-tooled assembly-language implementa tions <ref> [SW97, PRB98] </ref>. 53 Algorithm Key Length Width (bits) Rounds Cycles Clocks/Byte Twofish variable 128 16 8 18.1 Blowfish variable 64 16 8 19.8 Square 128 128 8 8 20.3 RC5-32/16 variable 64 32 16 24.8 CAST-128 128 64 16 8 29.5 DES 56 64 16 8 43 Serpent 128, 192, 256
Reference: [Vau95] <author> S. Vaudenay, </author> <title> "On the Need for Multi-permutations: Cryptanalysis of MD4 and SAFER," Fast Software Encryption, </title> <booktitle> Second International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 286-297. </pages>
Reference-contexts: Reed-Solomon (RS) error-correcting codes are known to be MDS. A necessary and sufficient condition for an a fi b matrix to be MDS is that all possible square submatrices, obtained by discarding rows or columns, are non-singular. Serge Vaudenay first proposed MDS matrices as a cipher design element <ref> [Vau95] </ref>. Shark [RDP+96] and Square [DKR97] use MDS matrices (see also [YMT97]), although we first saw the construction used in the unpublished cipher Manta 3 [Fer96].
Reference: [Vau96a] <author> S. Vaudenay, </author> <title> "On the Weak Keys in Blowfish," Fast Software Encryption, </title> <booktitle> 3rd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 27-32. 64 </pages>
Reference-contexts: The latter results in a simpler key schedule, but may result in weaknesses (e.g., a weakness in reduced-round variants of Blowfish <ref> [Vau96a] </ref>). Another strategy is to generate key-dependent S-boxes from a known secure S-box and a series of strict mathematical rules: e.g., Biham-DES [BB94]. Most key-dependent S-boxes are created by some process completely orthogonal to the underlying cipher. SEAL, for example, uses SHA [NIST93] to create its key-dependent S-boxes. <p> As for the distribution of m, empirically E m 11:7=256; experiments suggest Pr (m 10=256) 0:975, Pr (m 16=256) :04, and Pr (m 22=256) 0:0002. 22 Vaudenay's attack on Blowfish took advantage of non-bijectivity in the Blowfish round function <ref> [Vau96a] </ref>. 51 Consider a Twofish variant with non-bijective S--boxes and no rotations. We obtain a 2-round iterative differential characteristic with probability m, and thus a 13-round differential characteristic with probability m 6 .
Reference: [Vau96b] <author> S. Vaudenay, </author> <title> "An Experiment on DES Sta--tistical Cryptanalysis," </title> <booktitle> 3rd ACM Conference on Computer and Communications Security, </booktitle> <publisher> ACM Press, </publisher> <year> 1996, </year> <pages> pp. 139-147. </pages>
Reference-contexts: The principle of the attack is simple: if the cipher-text can be represented as a polynomial or rational expresson (with N coefficients) of the plaintext, then the polynomial or rational expression can be recon structed using N plaintext/ciphertext pairs. 20 Similar ideas can be found in <ref> [Vau96b] </ref>. 45 However, interpolation attacks are often only work-able against ciphers with a very small number of rounds, or against ciphers whose rounds functions have very low algebraic degree.
Reference: [Wag95a] <author> D. Wagner, </author> <title> "Cryptanalysis of S-1," </title> <address> sci.crypt Usenet posting, </address> <month> 27 Aug </month> <year> 1995. </year>
Reference-contexts: These properties can often aid an attacker in a real-world attack. For example, the DES weak (self-inverse) keys have been exploited in many attacks on larger cryptographic mechanisms built from DES [Knu95a], and the S-1 [Anon95] cipher was broken due to a bad key-schedule design <ref> [Wag95a] </ref>. Even worse, they can make attacks on the cipher easier, and some attacks on the cipher will be focused directly at the key schedule, such as related-key differential attacks [KSW96, KSW97]. These attacks can be especially devastating when the cipher is used in a hash function construction. <p> An attacker can look at two encryptions, and can slide the rounds forward in one of them relative to another. S-1 [Anon95] can be broken with a slide attack <ref> [Wag95a] </ref>. Travois [Yuv97] has identical round functions, and can also be broken with a slide attack. Conventional slide attacks allow one to break the cipher with only known-or chosen-plaintext queries; however, as we shall see next, there is a generalization to related-key attacks as well.
Reference: [Wag95b] <author> D. Wagner, </author> <type> personal communication, </type> <year> 1995. </year>
Reference-contexts: This is necessary for three reasons: * There are fewer key bits provided as input to the cipher than are needed by the cipher. * The key bits used in each round must be unique to the round, in order to avoid "slide" attacks <ref> [Wag95b] </ref>. * The cipher must be secure against an attacker with partial knowledge or control over some key bits. When key schedules are poorly designed, they often lead to strange properties of the cipher: large classes of equivalent keys, self-inverse keys, etc.
Reference: [WH87] <author> R. Winternitz and M. Hellman, </author> <title> "Chosen-key Attacks on a Block Cipher," </title> <journal> Cryptologia, v. </journal> <volume> 11, </volume> <editor> n. </editor> <volume> 1, </volume> <month> Jan </month> <year> 1987, </year> <pages> pp. 16-20. </pages>
Reference: [Whe94] <author> D. Wheeler, </author> <title> "A Bulk Data Encryption Algorithm," Fast Software Encryption, </title> <booktitle> Cambridge Security Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 127-134. </pages>
Reference-contexts: Some cipher designers responded to this threat by carefully crafting S-boxes to resist known attacks| DES [Cop94], s n DES [KPL93, Knu93c, KLPL95], CAST [MA96, Ada97a]|while others relied on random key-dependent S-boxes for security|Khufu, Blowfish, WAKE <ref> [Whe94] </ref>. 13 The best existing attack on Khufu breaks 16 rounds [GC94], while the best attack on Blowfish breaks only four [Rij97]. Serpent [BAK98] reused the DES S-boxes.
Reference: [Wie94] <author> M.J. Wiener, </author> <title> "Efficient DES Key Search," </title> <institution> TR-244, School of Computer Science, Car-leton University, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: The debate about whether DES' key is too short for acceptable commercial security has raged for many years [DH79], but recent advances in distributed key search techniques have left no doubt in anyone's mind that its key is simply too short for today's security applications <ref> [Wie94, BDR+96] </ref>. Triple-DES has emerged as an interim solution in many high-security applications, such as banking, but it is too slow for some uses.
Reference: [Win84] <author> R.S. Winternitz, </author> <title> "Producing One-Way Hash Functions from DES," </title> <booktitle> Advances in Cryptology: Proceedings of Crypto 83, </booktitle> <publisher> Plenum Press, </publisher> <year> 1984, </year> <pages> pp. 203-207. </pages>
Reference-contexts: OFB-, CFB-, or CBC-mode encryption with Twofish may collapse the pre- and post-xor of key material into a single xor, but does not appear to benefit much from this. 11.2 One-Way Hash Functions The most common way of using a block cipher as a hash function is a Davies-Meyer construction <ref> [Win84] </ref>: There are fifteen other variants [Pre93]. We believe that Twofish can be used securely in any of these formats; note, however, that the key schedule has been analyzed mainly for related-key attacks, not for the class of chosen-key attack that hash functions must resist.
Reference: [WN95] <author> D. Wheeler and R. Needham, </author> <title> "TEA, a Tiny Encryption Algorithm," Fast Software Encryption, </title> <booktitle> 2nd International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 97-110. </pages>
Reference-contexts: Also, complicated round functions are harder to analyze and rely on more ad-hoc arguments for security (e.g., REDOC-II [CW91]). However, with enough rounds, even bad round functions can be made to be secure. 10 Even a simple round function like TEA's <ref> [WN95] </ref> or RC5's seems secure after 32 rounds [BK98].
Reference: [WSK97] <author> D. Wagner, B. Schneier, and J. Kelsey, </author> <title> "Cryptanalysis of the Cellular Message Encryption Algorithm," </title> <booktitle> Advances in Cryptology | CRYPTO '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 526-537. </pages>
Reference-contexts: NewDES [Sco85], 12 with S-boxes derived from the Declaration of Independence [Jeff+76], could be made much stronger with good S-boxes. DES variants with random fixed S-boxes are very likely to be weak [BS93, Mat95], and CMEA was weakened extensively because of a poor S-box choice <ref> [WSK97] </ref>.
Reference: [YLCY98] <author> X. Yi, K.Y. Lam, S.X. Cheng, and X.H. </author> <title> You, "A New Byte-Oriented Block Cipher," Information Security. </title> <booktitle> First International Workshop ISW '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998, </year> <pages> 209-220. </pages>
Reference-contexts: with sufficiently large outputs relative to input size are guaranteed to have at least one perfect linear approximation [Bih95].) Twofish used the same solution as Square: mid-sized S-boxes (8-by-8-bit) used to construct a large S-box (8-by-32-bit). 6.4.2 Algorithmic S-boxes S-boxes can either be large tables, like DES, Khufu/Khafre, and YLCY <ref> [YLCY98] </ref>, or derived algebraically, like FEAL, LOKI-89/LOKI-91 (and LOKI97 [Bro98]), IDEA, and SAFER. The advantage of the former is that there is no mathematical structure that can potentially be used for cryptanalysis.
Reference: [YMT97] <author> A.M. Youssef, S. Mister, and S.E. Tavares, </author> <title> "On the Design of Linear Transformations for Substitution Permutation Encryption Networks," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '97) Workshop Record, </booktitle> <institution> School of Computer Science, Carleton University, </institution> <year> 1997, </year> <pages> pp. 40-48. </pages>
Reference-contexts: Serge Vaudenay first proposed MDS matrices as a cipher design element [Vau95]. Shark [RDP+96] and Square [DKR97] use MDS matrices (see also <ref> [YMT97] </ref>), although we first saw the construction used in the unpublished cipher Manta 3 [Fer96]. Twofish uses a single 4-by-4 MDS matrix over GF (2 8 ). 3.4 Pseudo-Hadamard Transforms A pseudo-Hadamard transform (PHT) is a simple mixing operation that runs quickly in software.
Reference: [YTH96] <author> A.M. Youssef, S.E. Tavares, and H.M. Heys, </author> <title> "A New Class of Substitution-Permutation Networks," </title> <booktitle> Workshop on Selected Areas in Cryptography (SAC '96) Workshop Record, </booktitle> <institution> Queens University, </institution> <year> 1996, </year> <pages> pp. 132-147. </pages>
Reference-contexts: output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks [SK96, ZMI90] such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also <ref> [YTH96] </ref>). Thus, 8-cycle (8-round) IDEA is comparable to 8-cycle (16-round) DES and 8-cycle (32-round) Skipjack. 4 Twofish is a 16-round Feistel network with a bijec--tive F function. 3.2 S-boxes An S-box is a table-driven non-linear substitution operation used in most block ciphers. <p> The use of the RS code to derive the key material for g adds substantial resistance to related-key attacks. While many algorithms reuse the encryption operation in their key schedule (e.g., Blowfish, Panama [DC98], RC4, CRISP [Lee96], YTH <ref> [YTH96] </ref>), and several alternative DES key schedules reuse the DES operation [Knu94b, BB96], we are unaware of any that reuse the same primitives in exactly this manner. 11 We feel that doing so greatly simplifies the analysis of Twofish, since the same kinds of analysis can apply to the cipher in
Reference: [Yuv97] <editor> G. Yuval, </editor> <booktitle> "Reinventing the Travois: Encry-tion/MAC in 30 ROM Bytes," Fast Software Encryption, 4th International Workshop Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 205-209. </pages>
Reference-contexts: An attacker can look at two encryptions, and can slide the rounds forward in one of them relative to another. S-1 [Anon95] can be broken with a slide attack [Wag95a]. Travois <ref> [Yuv97] </ref> has identical round functions, and can also be broken with a slide attack. Conventional slide attacks allow one to break the cipher with only known-or chosen-plaintext queries; however, as we shall see next, there is a generalization to related-key attacks as well.
Reference: [ZG97] <author> F. Zhu and B.-A. Guo, </author> <title> "A Block-Ciphering Algorithm Based on Addition-Multiplication Structure in GF(2 n )," Workshop on Selected Areas in Cryptography (SAC '97) Workshop Record, </title> <institution> School of Computer Science, Car-leton University, </institution> <year> 1997, </year> <pages> pp. 145-159. </pages>
Reference-contexts: RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. Two 1997 designs, SPEED [Zhe97] 5 and Zhu-Guo <ref> [ZG97] </ref>, are significantly slower than alternatives that existed years previous. Arbitrary metrics, such as the number of rounds, are not good measures of performance. What is important is the cipher's speed: the number of clock cycles per byte encrypted.
Reference: [Zhe97] <author> Y. Zheng, </author> <title> "The SPEED Cipher," </title> <booktitle> Financial Cryptography '97 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 71-89. </pages>
Reference-contexts: RC2 [Riv97, KRRR98] was designed for 16-bit microprocessors, SOBER [Ros98] for 8-bit ones. Other, more recent designs, do not seem to take performance into account at all. Two 1997 designs, SPEED <ref> [Zhe97] </ref> 5 and Zhu-Guo [ZG97], are significantly slower than alternatives that existed years previous. Arbitrary metrics, such as the number of rounds, are not good measures of performance. What is important is the cipher's speed: the number of clock cycles per byte encrypted. <p> And we would be foolish to even try. 10 When is a Cipher Insecure? More and more recent ciphers are being defined with a variable number of rounds: e.g., SAFER-K64 [Mas94], RC5, and Speed <ref> [Zhe97] </ref>. This means that it is impossible to categorically state that a given cipher construction is insecure: there might always be a number of rounds n for which the cipher is still secure.
Reference: [ZMI90] <author> Y. Zheng, T. Matsumoto, and H. Imai, </author> <title> "On the Construction of Block Ciphers Provably Secure and Not Relying on Any Unproved Hypotheses," </title> <booktitle> Advances in Cryptology | CRYPTO '89 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 461-480. </pages>
Reference-contexts: In one cycle, every bit of the text block has been modified once. 2 1 A non-surjective F function is one in which not all outputs in the output space can occur. 2 The notion of a cycle allows Feistel networks to be compared with unbalanced Feistel networks <ref> [SK96, ZMI90] </ref> such as MacGuffin [BS95] (cryptanalyzed in [RP95a]) and Bear/Lion [AB96b], and with SP-networks (also called uniform transformation structures [Fei73]) such as IDEA, SAFER, and Shark [RDP+96] (see also [YTH96]). <p> Many elements of Twofish reflect this philosophy. We used well-studied design elements throughout the algorithm. We started with a Feistel network, probably the most studied block-cipher structure, instead of something newer like an unbalanced Feis-tel network <ref> [SK96, ZMI90] </ref> or a generalized Feistel network [Nyb96]. We did not implement multiplication mod 2 16 + 1 (as in IDEA or MMB [DGV93]) or data-dependent rotations (as in RC5 8 or Akelarre [AGMP96] 9 ) for non-linearity.
Reference: [ZPS93] <editor> Y. Zheng, J. Pieprzyk, and J. Seberry, </editor> <title> "HAVAL | A One-Way Hashing Algorithm with Variable Length of Output," </title> <booktitle> Advances in Cryptology | AUSCRYPT '92 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 83-104. </pages>
References-found: 177

