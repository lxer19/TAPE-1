URL: http://www-csag.cs.uiuc.edu/projects/concert/compiler-runtime.ps
Refering-URL: http://www-csag.cs.uiuc.edu/individual/pakin/history.html
Root-URL: http://www.cs.uiuc.edu
Title: Using the Concert Compiler and Runtime on Sun workstations and the CM5  
Author: Julian Dolby Vijay Karamcheti John Plevyak 
Date: March 5, 1994  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. A. Chien, W. Feng, V. Karamcheti, and J. Plevyak. </author> <title> Techniques for Efficient Execution of Fine-grained Concurrent Programs. </title> <booktitle> In Proceedings of the Fifth Workshop on Compilers and Languages for Parallel Computing, </booktitle> <pages> pages 103-13, </pages> <address> New Haven, Connecticut, </address> <year> 1992. </year> <note> YALEU/DCS/RR-915, Springer-Verlag Lecture Notes in Computer Science, </note> <year> 1993. </year>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs. <p> that must be supplied by the user is shown in italics): % &gt; genProctrace Usage: genProcTrace trace filename record number smoothing factor 1 number of objects 2 number of ready contexts 3 number of waiting contexts 4 number of locked contexts trace file: prog.trace record number [2]: 2 smoothing factor <ref> [1] </ref>: 10 % &gt; The name of the trace file must be suffixed with .trace. The record number indicates the record of interest.
Reference: [2] <author> Andrew Chien, Vijay Karamcheti, and John Plevyak. </author> <title> The Concert System Compiler and Runtime Support for Efficient Fine-Grained Concurrent Object-Oriented Programs. </title> <type> Technical Report UIUCDCS-R-93-1815, </type> <institution> Department of Computer Science, University of Illinois, Urbana, Illinois, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: 1 Introduction This document is a reference for compiling and running programs using the Concert system (see <ref> [2] </ref>) on Sun workstations and the CM5. For first time users we suggest the Concert Tutorial which provides step by step instructions and hints for getting started with the Concert System. <p> shown below (the information that must be supplied by the user is shown in italics): % &gt; genProctrace Usage: genProcTrace trace filename record number smoothing factor 1 number of objects 2 number of ready contexts 3 number of waiting contexts 4 number of locked contexts trace file: prog.trace record number <ref> [2] </ref>: 2 smoothing factor [1]: 10 % &gt; The name of the trace file must be suffixed with .trace. The record number indicates the record of interest.
Reference: [3] <author> Andrew A. Chien. </author> <title> Concurrent Aggregates: Supporting Modularity in Massively-Parallel Programs. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1993. </year>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs.
Reference: [4] <author> Andrew A. Chien. </author> <title> Research Directions in Object-Based Concurrency, chapter "Supporting Modularity in Highly Parallel Programs". </title> <publisher> MIT Press, </publisher> <year> 1993. </year> <note> To Appear. </note>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs.
Reference: [5] <author> Andrew A. Chien, Vijay Karamcheti, John Plevyak, and Xingbin Zhang. </author> <title> Concurrent Aggregates Language Report 2.0. </title> <note> Available via anonymous ftp from cs.uiuc.edu in /pub/csag, </note> <month> September </month> <year> 1993. </year>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs.
Reference: [6] <author> J. Dolby. </author> <title> Using the Concert Debugger. CSA Group Memo, </title> <month> October </month> <year> 1993. </year>
Reference-contexts: Then press enter and Emacs will invoke the compiler on the buffer's file. 1 The emulator, which is invoked by the -e option, is described in [10], and the debugger, which requires that programs be compiled with the -g option, is described in <ref> [6] </ref> 3 Compiling Programs for the CM5 In order to generate and run CM5 executables, ensure that the environment variable CONCERT ROOT PATH contains the location where the Concert system has been installed (see installation notes), and that the concertCM5 driver script is in your path.
Reference: [7] <author> Julian Dolby, Vijay Karamcheti, John Plevyak, and Xingbin Zhang. </author> <title> Concert Tutorial. CSA Group Memo, </title> <month> March </month> <year> 1994. </year> <month> 7 </month>
Reference-contexts: The maximum value of this option is limited on the simulator by the configured swap space, and by the per-node memory on the CM5. The following additional command line arguments can be used along with the statistics and debugging tools to change the simulator's behavior. The Concert Tutorial <ref> [7] </ref> contains examples of using these switches. -t turns on message level tracing. This option is intended for use with the debugger, and is described fully in "Using the Concert Debugger" document. -p enables performance statistics reporting, as described below. -s RATE controls the rate of sampling for performance statistics.
Reference: [8] <author> Vijay Karamcheti and Andrew Chien. </author> <title> Concert Efficient Runtime Support for Concurrent Object-Oriented Programming Languages on Stock Hardware. </title> <booktitle> In Proceedings of Supercomputing'93, </booktitle> <year> 1993. </year>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs.
Reference: [9] <author> John Plevyak, Vijay Karamcheti, and Andrew Chien. </author> <title> Analysis of Dynamic Structures for Efficient Parallel Execution. </title> <booktitle> In Proceedings of the Sixth Workshop for Languages and Compilers for Parallel Machines, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: This document assumes that the reader is familiar with the Concurrent Aggregates language and (at least a little) with using the workstations. Additional information about the Concert system and Concurrent Aggregates can be found in <ref> [5, 3, 4, 1, 8, 9] </ref>. Please report all bugs found while using the Concert system to concert-bugs@red-herring.cs.uiuc.edu. 2 Compiling Programs for the Workstation Based Simulator The compiler can be run either from the command line or from within emacs.
Reference: [10] <author> Mahesh Subramaniam. </author> <title> Using the Concert Emulator. CSA Group Memo, </title> <booktitle> Feburary 1994. </booktitle> <pages> 8 </pages>
Reference-contexts: Typing M-c will cause Emacs to display the default compile command "concert" which you can edit to add whatever flags you desire. Then press enter and Emacs will invoke the compiler on the buffer's file. 1 The emulator, which is invoked by the -e option, is described in <ref> [10] </ref>, and the debugger, which requires that programs be compiled with the -g option, is described in [6] 3 Compiling Programs for the CM5 In order to generate and run CM5 executables, ensure that the environment variable CONCERT ROOT PATH contains the location where the Concert system has been installed (see
References-found: 10

