URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-264.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An O(n log n) Algorithm for finding Dissimilar Strings  
Author: Sarmad Abbasi Anirvan Sengupta 
Keyword: Key words: algorithms, analysis of algorithms, combinatorial problems, computational molecular biology, probabilistic method, Lovasz local lemma.  
Address: Piscataway NJ 08855, U.S.A.  Murray Hill, NJ 07974 U.S.A.  
Affiliation: Department of Computer Science, Rutgers University,  Theory Group, Bell Laboratories, Lucent Technologies,  
Abstract: Let be a finite alphabet and x 2 n . A string y 2 m is said to be k-dissimilar to x, if no k length substring of x is equal to any k length substring of y. We present an O(n log n) algorithm which on input x 2 n and an integer m n outputs an integer k and y 2 m such that: - y is k-dissimilar to x. There does not exist a string z of length m which is k 1 dissimilar to 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon and J. Spencer, </author> <title> The Probabilistic Method, </title> <publisher> (1992) John Wiley, </publisher> <address> New York. </address>
Reference-contexts: The analysis of our algorithm depends on upper bounding the following combinatorial function. max This function seems to be of independent interest. We describe a log C n + log C log C n+O (1) upper bound on this function using the Probabilistic Method <ref> [1] </ref> (where C denotes the size of the alphabet ). This bound is fairly close to the log C n + O (1) lower bound. However, closing the gap between these bounds seems to an intriguing and challenging combinatorial problem. <p> Our algorithm is a an example of such an application. However, in our case proving the existence dissimilar strings actually proves the efficiency of our algorithm. 5 For our purpose we only state the symmetric form of the Local Lemma. For a more general setting see <ref> [1] </ref>. Lemma 3 (Lovasz Local Lemma) Let S = fB 1 ; : : : ; B N g be a set events in an arbitrary probability space with Pr [B i ] p. <p> Furthermore, if ep (d + 1) &lt; 1 then Pr [ V N PROOF. See <ref> [1] </ref>. 2 Theorem 4 For every x 2 n and for every m 1 D (x; m) log C n + log C log C n + O (1): PROOF. As in Theorem 1 we choose y 2 m by choosing each y i in uniformly and independently.
Reference: [2] <author> J. Beck, </author> <title> An algorithmic approach to the Lovasz Local Lemma I., Random Structures and Algorithms 2, </title> <type> 343-365. </type>
Reference-contexts: To this end we make use of the Lovasz local lemma [4], which deals with events which are mostly independent of each other. In a typical application the Local Lemma proves the existence of certain structures without supplying any efficient way of finding these structure. Beck <ref> [2] </ref> has converted some these applications into polynomial time algorithms. Our algorithm is a an example of such an application. However, in our case proving the existence dissimilar strings actually proves the efficiency of our algorithm. 5 For our purpose we only state the symmetric form of the Local Lemma.
Reference: [3] <author> B. Bollobas, </author> <title> Graph Theory, </title> <publisher> (1979) Springer-Verlag, </publisher> <address> New York. </address>
Reference-contexts: Assume that n = k 1 + C k1 and consider the graph G k defined in section 3. G k is connected and the indegree of each vertex is equal to the outdegree of each vertex. Therefore by Euler's theorem <ref> [3] </ref> G k contains an Euler tour. Let x be a the string corresponding to the Euler tour. Recall that an Euler tour is a walk on G k which contains all the edges. Hence x contains all the strings of length k.
Reference: [4] <author> P. Erd-os and L. Lovasz, </author> <title> Problems and results on 3-chromatic hypergraphs and some related questions, </title> <editor> in A. Hajnal et. al., eds, </editor> <title> Infinite and Finite Sets, </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> (1975) </year> <month> 609-628. </month>
Reference-contexts: However, if we take advantage of the fact that each event A i;j is independent of most of the other events, the above bound can be improved significantly: in fact the bound can be made independent of m. To this end we make use of the Lovasz local lemma <ref> [4] </ref>, which deals with events which are mostly independent of each other. In a typical application the Local Lemma proves the existence of certain structures without supplying any efficient way of finding these structure. Beck [2] has converted some these applications into polynomial time algorithms.
Reference: [5] <author> D. M. Freifelder, </author> <title> Molecular Biology, </title> <publisher> (1987) Jones and Bartlett, </publisher> <address> Boston. </address>
Reference-contexts: This area offers many interesting and challenging problems in computer science [6]. The motivation of our problem also comes from molecular biology. A DNA molecule is a polymer consisting of two interwound helical strands <ref> [5] </ref>. Each strand is a sequence of nucleotides drawn from the set fA; T; G; Cg. The two strands are complementary in the sense that each A on one strand is bonded to its complementary nucleotide T on the other, and each C is bonded to a G.
Reference: [6] <author> R. Karp, </author> <title> Mapping the Genome: Some Combinatorial Problems Arising in Molecular Biology, </title> <booktitle> STOC 1993, </booktitle> <pages> 278-284. </pages>
Reference-contexts: The last section discusses some further aspects of this problem and gives some concluding remarks. 2 Motivation Computational Molecular Biology is an extremely fast growing field. This area offers many interesting and challenging problems in computer science <ref> [6] </ref>. The motivation of our problem also comes from molecular biology. A DNA molecule is a polymer consisting of two interwound helical strands [5]. Each strand is a sequence of nucleotides drawn from the set fA; T; G; Cg.
Reference: [7] <author> D. Norris and V. H. </author> <title> Nagaraj, </title> <type> Personal Communication 1996. 8 </type>
Reference-contexts: The two strands are complementary in the sense that each A on one strand is bonded to its complementary nucleotide T on the other, and each C is bonded to a G. In certain experiments performed by Norris and Nagaraj <ref> [7] </ref>, a strand of DNA is given: One is asked to design an oligonucleotide (a smaller strand of DNA) of a certain length, which will not easily bind to the given DNA. <p> This actually proved to be useful <ref> [7] </ref>, since we can apply further heuristics to output k-dissimilar strings which satisfy some other constraints or have some desired properties. Two extensions of our algorithm are immediate.
References-found: 7

