URL: http://www.cs.sunysb.edu/~davulcu/ve.ps
Refering-URL: http://www.cs.sunysb.edu/~davulcu/
Root-URL: http://www.cs.sunysb.edu
Title: Modeling and Analysis of Interactions in Virtual Enterprises  
Author: Hasan Davulcu, Michael Kifer, L. Robert Pokorny C.R. Ramakrishnan, I.V. Ramakrishnan Steven Dawson 
Address: NY 11794.  333 Ravenswood Avenue, Menlo Park, CA 94025.  
Affiliation: Dept. of Computer Science SUNY at Stony Brook Stony Brook,  Computer Science Laboratory SRI International  
Abstract: In this paper we describe a formal framework for modeling and reasoning about interactions in a virtual enterprise. Such a framework will form the basis for tools that provide automated support for creation and operation of virtual enterprises. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Adam, V. Atluri, and W. Huang. </author> <title> Modeling and analysis of workflows using petri nets. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 10(2):131158, </volume> <month> March </month> <year> 1998. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [2] <author> P. Attie, M. Singh, A. Sheth, and M. Rusinkiewicz. </author> <title> Specifying and enforcing intertask dependencies. </title> <booktitle> In Intl. Conference on Very Large Data Bases, </booktitle> <year> 1993. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [3] <author> W. Chen, M. Kifer, and D. Warren. HiLog: </author> <title> A foundation for higher-order logic programming. </title> <journal> Journal of Logic Programming, </journal> <volume> 15(3):187230, </volume> <month> February </month> <year> 1993. </year>
Reference-contexts: XSB is our choice for several reasons: it is currently known as the most efficient implementation of deductive databases that outperforms other similar systems by one to two orders of magnitude [13]; it extends logic programming with higher-order programming (HiLog <ref> [3] </ref>); it provides support for non-monotonic reasoning (through its support for well-founded semantics for negation); and it incorporates special indexing structures that considerably simplify the implementation of CT R. Furthermore, XSB is well-integrated into the overall computing infrastructure.
Reference: [4] <author> P. Chrysanthis and K. Ramamritham. </author> <title> ACTA: A framework for specifying and reasoning about transaction structure and behavior. </title> <booktitle> In ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 194203, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [5] <author> H. Davulcu, M. Kifer, C. Ramakrishnan, and I. Ramakrish-nan. </author> <title> Logic based modeling and analysis of workflows. </title> <booktitle> In ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 2533, </pages> <address> Seattle, Washington, </address> <month> June </month> <year> 1998. </year>
Reference-contexts: Our contention is that representation of complex enterprises can and should be done using logic as a unifying principle. Furthermore, the very same language should be used for modeling, reasoning, and coordination of these enterprises. We have already shown in <ref> [5] </ref> that a logic-based formalism for workflows is as expressive as any current method. The advantage of using a common logical framework is that scheduling of activities in a virtual enterprise as well as verifying its operational properties naturally reduce to one and the same problem logical unsatisfiabil-ity. <p> The problem is that it is not easy to get the different approaches to work together (see <ref> [5] </ref> for detailed comparisons). It is therefore desirable to find a formalism where all three tasks can be done in a uniform way. <p> Suppose we can transform the workflow representation (2) into an equivalent formula but one that has a more efficient proof. Then, in view of the above discussion, we can obtain a more efficient run-time scheduling algorithm for (2). This line of research was pursued in <ref> [5] </ref>, where it was shown that (2) can be transformed into equivalent formula of the form 2 Indeed, suppose that the bid prices the job under $1000 and activity E recommends hiring a consultant.
Reference: [6] <author> A. Dewey et. al. </author> <title> The impact of NIIIP virtual enterprise technology on next generation manufacturing. </title> <booktitle> In Proceedings of Conference on Agile and Intelligent Manufacturing Systems, </booktitle> <year> 1996. </year>
Reference-contexts: 1. Introduction Advances in computer networking technology and open system standards have made it practically feasible to create and manage virtual enterprises. A virtual enterprise <ref> [6, 7] </ref> is a temporary consortium of autonomous, diverse, and possibly geographically dispersed organizations that pool their resources to meet short-term objectives and exploit fast-changing market trends. Upon realizing the objective, the enterprise can possibly disband.
Reference: [7] <author> C. Gilman, M. Aparicio, J. Barry, T. Durniak, H. Lam, and R. Ramnath. </author> <title> Integration of design and manufacturing in a virtual enterprise using enterprise rules, intelligent agents, STEP, and workflow. </title> <booktitle> In Proceedings of SPIE Vol. </booktitle> <volume> 3203, </volume> <pages> pages 160171, </pages> <year> 1997. </year>
Reference-contexts: 1. Introduction Advances in computer networking technology and open system standards have made it practically feasible to create and manage virtual enterprises. A virtual enterprise <ref> [6, 7] </ref> is a temporary consortium of autonomous, diverse, and possibly geographically dispersed organizations that pool their resources to meet short-term objectives and exploit fast-changing market trends. Upon realizing the objective, the enterprise can possibly disband.
Reference: [8] <author> R. Gunthor. </author> <title> Extended transaction processing based on dependency rules. </title> <booktitle> In Proceedings of the RIDE-IMS Workshop, </booktitle> <year> 1993. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [9] <author> L. Haas, D. Kossmann, E. Wimmers, and J. Yang. </author> <title> Optimizing queries across diverse data sources. </title> <booktitle> In Proceedings of the 23rd International Conference on Very Large Data Bases (VLDB '97), </booktitle> <year> 1997. </year>
Reference-contexts: Furthermore, virtual enterprise wrappers will be specified at a high level in a uniform logical framework that supports their automated generation. The idea of using wrappers (and even wrapper generators) to integrate heterogeneous systems is not new; it has been explored previously, e.g., in <ref> [10, 9] </ref>. In addition, our ongoing research effort at SRI on Secure Access Wrappers (SAW) involves the development of wrapping techniques for integrating multilevel secure (MLS) databases in high-assurance information systems.
Reference: [10] <author> J. Hammer, H. Garcia-Molina, S. Nestorov, R. Yerneni, M. Breunig, and V. Vassalos. </author> <title> Template-based wrappers in the TSIMMIS system. </title> <booktitle> In Proceedings ACM SIGMOD International Conference on Management of Data (SIGMOD '97), </booktitle> <pages> pages 532535, </pages> <year> 1997. </year>
Reference-contexts: Furthermore, virtual enterprise wrappers will be specified at a high level in a uniform logical framework that supports their automated generation. The idea of using wrappers (and even wrapper generators) to integrate heterogeneous systems is not new; it has been explored previously, e.g., in <ref> [10, 9] </ref>. In addition, our ongoing research effort at SRI on Secure Access Wrappers (SAW) involves the development of wrapping techniques for integrating multilevel secure (MLS) databases in high-assurance information systems.
Reference: [11] <author> M. Orlowska, J. Rajapakse, and A. ter Hofstede. </author> <title> Verification problems in conceptual workflow specifications. </title> <booktitle> In Intl. Conference on Conceptual Modelling, volume 1157 of Lecture Notes in Computer Science, Cottbus, </booktitle> <address> Germany, 1996. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [12] <author> R.Hopkins, D.Warren, A.Kahn, I. Ramakrishnan, J.Jones, M.Kifer, T.Swift, and L. Pokorny. CASP: </author> <title> A virtual parts supplier. </title> <booktitle> In Proceedings of International Conference on Agile Manufacturing, </booktitle> <year> 1997. </year>
Reference-contexts: The Defense Logistics Agency uses CASP to identify and contract with these manufacturers for parts that are no longer available from their original sources. At SUNY Stony Brook, we have developed tools to support this identification process <ref> [12] </ref>. a request for the assembly is made to the Defense Logis--tics Agency's (DLA) On-Demand Manufacturing Program (ODM). To rapidly supply the needed assembly, the ODM management team assembles a virtual enterprise made up of several collaborating manufacturers, DLA engineers, auditors, and assorted information providers.
Reference: [13] <author> K. Sagonas, T. Swift, and D. Warren. </author> <title> XSB as an efficient deductive database engine. </title> <booktitle> In ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 442453, </pages> <address> New York, </address> <month> May </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: The XSB system is a deductive engine developed here at Stony Brook. XSB is our choice for several reasons: it is currently known as the most efficient implementation of deductive databases that outperforms other similar systems by one to two orders of magnitude <ref> [13] </ref>; it extends logic programming with higher-order programming (HiLog [3]); it provides support for non-monotonic reasoning (through its support for well-founded semantics for negation); and it incorporates special indexing structures that considerably simplify the implementation of CT R. Furthermore, XSB is well-integrated into the overall computing infrastructure.
Reference: [14] <author> M. Singh. </author> <title> Semantical considerations on workflows: An algebra for intertask dependencies. </title> <booktitle> In Proceedings of the International Workshop on Database Programming Languages, </booktitle> <address> Gubbio, Umbria, Italy, </address> <month> September 68 </month> <year> 1995. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
Reference: [15] <author> M. Singh. </author> <title> Synthesizing distributed constrained events from transactional workflow specifications. </title> <booktitle> In Proceedings of 12th IEEE Intl. Conference on Data Engineering, </booktitle> <pages> pages 616 623, </pages> <address> New Orleans, LA, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: Consequently, there is no need to devise distinct, complicated algorithms to deal with these seemingly unrelated tasks. Example 2.1 illustrates the potential of using powerful logical formalisms, such as CT R, for workflow management. A number of formal approaches have been proposed <ref> [14, 15, 11, 2, 8, 1, 4] </ref>, but, unfortunately, most are incomplete: one approach might be appropriate for modeling workflows, another might be able to reason, and yet another one to schedule.
References-found: 15

