URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/papers/cyclic-web.ps
Refering-URL: http://www.cs.gatech.edu/fac/Mostafa.Ammar/MCAST.html
Root-URL: 
Email: fkevin,ammar,feig@cc.gatech.edu  
Title: Scalable Delivery of Web Pages Using Cyclic Best-Effort (UDP) Multicast  
Author: Kevin C. Almeroth Mostafa H. Ammar Zongming Fei 
Note: This work is supported in part by research grants from IBM, Intel, and NSF under contract number NCR-9628379  
Web: (404)894-3292(office) (404)894-0272(FAX)  
Address: Atlanta, Georgia 30332-0280  
Affiliation: Networking and Telecommunications Group Georgia Institute of Technology  
Abstract: The World Wide Web (WWW) has gained tremendously in popularity over the last several years. Solutions to the problem of overloaded web servers have included buying more hardware, the use of transparent server replication and mirroring, and caching of hot pages. Another technique that can be used in conjunction with these other solutions is the use of multicast for the delivery of web pages. In this work we explore the use of UDP, best-effort multicast as a delivery option. Reliability is achieved through repetitive, cyclic transmission of a requested page. This solution is expected to be most efficient when used for highly requested pages. We view this cyclic multicast technique as a delivery option that can be integrated with the traditional reliable unicast and recently proposed reliable multicast options. We first describe the architecture of an integrated web server employing all three delivery options. We then describe the cyclic multicast technique and consider the various procedures needed for its successful operation. We characterize the gains in performance achieved by our proposal through an extensive performance analysis and simulation of our technique by itself, and when integrated with the other delivery options. We also describe our experience with an implementation of a prototype cyclic multicast server and its performance over the Multicast Backbone (MBone). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Berners-Lee, R. Fielding, and H. Nielson, </author> <title> "Hypertext transfer protocol - HTTP/1.0," Tech. </title> <type> Rep. </type> <institution> RFC 1945, IETF RFC, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: One straightforward approach to handling the large volume of requests has been to simply buy more hardware. This solution is neither cost effective nor scalable, and will cease to be an option as the WWW continues its growth. Other solutions have been investigated including improvements in the HTTP protocol <ref> [1] </ref>, the use of transparent server replication [2] and caching of hot pages [3]. At issue is how WWW pages can be delivered to increasing numbers of users given limited server capacity and network bandwidth.
Reference: [2] <author> E. D. Katz, M. Butler, and R. McGrath, </author> <title> "A scalable HTTP server: the NCSA prototype," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 27, </volume> <pages> pp. 155-164, </pages> <year> 1994. </year>
Reference-contexts: This solution is neither cost effective nor scalable, and will cease to be an option as the WWW continues its growth. Other solutions have been investigated including improvements in the HTTP protocol [1], the use of transparent server replication <ref> [2] </ref> and caching of hot pages [3]. At issue is how WWW pages can be delivered to increasing numbers of users given limited server capacity and network bandwidth.
Reference: [3] <author> H. Braun and K. Claffy, </author> <title> "Web traffic characterization: an assessment of the impact of caching documents from NCSA's web server," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 28, </volume> <pages> pp. 37-51, </pages> <month> Dec </month> <year> 1995. </year>
Reference-contexts: This solution is neither cost effective nor scalable, and will cease to be an option as the WWW continues its growth. Other solutions have been investigated including improvements in the HTTP protocol [1], the use of transparent server replication [2] and caching of hot pages <ref> [3] </ref>. At issue is how WWW pages can be delivered to increasing numbers of users given limited server capacity and network bandwidth.
Reference: [4] <author> R. Clark and M. Ammar, </author> <title> "Providing scalable web service using multicast delivery," </title> <booktitle> in IEEE Workshop on Services in Distributed and Networked Environments, </booktitle> <address> (Whistler, Canada), </address> <month> June </month> <year> 1995. </year> <note> (to appear in Computer Networks and ISDN Systems). </note>
Reference-contexts: Another technique that can be used in conjunction with caching and replication to improve the scalability of web access is the use of multicast for the delivery of web pages. One specific approach that closely addresses the problem of end-to-end scalability has been proposed in our earlier work <ref> [4] </ref>. The proposed approach uses a reliable multicast protocol [5] to transmit popular pages to groups of users who make the same page request. In this approach requests reaching the server for the same page can sometimes be aggregated and responded to by one multicast out of the server. <p> This may happen if a user does not have multicast capability or has not been able to successfully receive a page via multicast. Servicing of requests using reliable multicast in conjunction with reliable unicast is described in <ref> [4] </ref>. The operation of the cyclic multicast component of this server is described next. 3 3 Cyclic Multicast The cyclic multicast engine is most effectively used to deliver a site's most popular and heavily requested pages. The engine is capable of delivering multiple pages simultaneously using multiple multicast groups. <p> A 4 compromise solution would have receivers immediately join a multicast group (thereby achieving very fast response if the server is actually transmitting) and then actually make the request to the server. Additional merits and limitations of these methods are discussed extensively in <ref> [4] </ref>. In either case, the TCP connection can be closed soon after the request is made and the resources used to handle other incoming requests. 3.3 Requester Operation The initial challenge for requesters is determining how the server will deliver a page.
Reference: [5] <author> R. Talpade and M. Ammar, </author> <title> "Single connectin emulation: An architecture for providing a reliable multicast transport service," </title> <booktitle> in Proceedings of the Int. Conference on Distributed Co-muting Systems, IEEE, </booktitle> <year> 1995. </year>
Reference-contexts: One specific approach that closely addresses the problem of end-to-end scalability has been proposed in our earlier work [4]. The proposed approach uses a reliable multicast protocol <ref> [5] </ref> to transmit popular pages to groups of users who make the same page request. In this approach requests reaching the server for the same page can sometimes be aggregated and responded to by one multicast out of the server.
Reference: [6] <author> S. Deering and D. Cheriton, </author> <title> "Multicast routing in datagram internetworks and extended LANs," </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pp. 85-111, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Using multicast means the server needs to make fewer page retrievals and the network needs to carry fewer copies of the page. In this work we explore the use of UDP multicast <ref> [6] </ref> as an alternate delivery option. Reliability is achieved through repetitive, cyclic transmission of a requested page. This solution is expected to be most efficient when used for highly requested pages, typically a popular site's top level page, for example, CNN Interactive at http://cnn.com.
Reference: [7] <author> S. Casner, </author> <title> Frequently Asked Questions(FAQ) on the Multicast Backbone(MBone). </title> <address> USC/ISI, </address> <month> December </month> <year> 1994. </year> <note> Available from ftp://ftp.isi.edu/mbone/faq.txt. </note>
Reference: [8] <author> M. Ammar and J. Wong, </author> <title> "On the optimality of cyclic transmission in teletext systems," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 35, </volume> <pages> pp. 68-73, </pages> <month> January </month> <year> 1987. </year>
Reference: [9] <author> M. Ammar and J. Wong, </author> <title> "Design of teletext broadcast cycles," </title> <journal> Performance Evaluation, </journal> <volume> vol. 5, </volume> <pages> pp. 235-242, </pages> <month> November </month> <year> 1985. </year> <month> 19 </month>
Reference: [10] <author> G. Herman, G. Gopal, K. Lee, and A. Weinrib, </author> <title> "The datacycle architecture for very high throughput database systems," </title> <booktitle> in Proceedings of SIGMOD, ACM, </booktitle> <year> 1987. </year>
Reference-contexts: Examples of such work are: 1) the studies on the performance of cyclic multicast in the context of teletext systems (an early technology designed to deliver information over TV channels)[8, 9], 2) the work on the Datacycle Architecture as a means to provide scalable access to a large database <ref> [10] </ref>, and 3) the use of cyclic delivery over a broadcast media to provide a Broadcast Disk [11]. We view this UDP cyclic multicast delivery as a third delivery option that can be integrated with the reliable unicast and multicast options explored earlier.
Reference: [11] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Dissemination-based data delivery using broadcast disks," </title> <journal> IEEE Personal Communications, </journal> <volume> vol. 2, </volume> <pages> pp. 50-60, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: context of teletext systems (an early technology designed to deliver information over TV channels)[8, 9], 2) the work on the Datacycle Architecture as a means to provide scalable access to a large database [10], and 3) the use of cyclic delivery over a broadcast media to provide a Broadcast Disk <ref> [11] </ref>. We view this UDP cyclic multicast delivery as a third delivery option that can be integrated with the reliable unicast and multicast options explored earlier. We first describe in Section 2 how these three delivery options may be integrated in a web server.
Reference: [12] <author> J. Metzner, </author> <title> "An improved broadcast retransmission protocol," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 32, </volume> <pages> pp. 679-683, </pages> <month> June </month> <year> 1984. </year>
Reference: [13] <author> C. Huitema, </author> <title> "The case for packet level FCE," </title> <booktitle> in Proceedings of IFIP 5th International Workshop on Protocols for High Speed Networks, </booktitle> <institution> (Sophia Antipolis, France), </institution> <month> October </month> <year> 1996. </year>
Reference: [14] <author> J. Nonnenmacher, E. Biersack, and D. Towsley, </author> <title> "Parity-based loss recovery for reliable mul-ticast transmission," </title> <type> Tech. Rep. 97-17, </type> <institution> Department of Computer Science, University of Mas-sachusetts, </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: In addition to chunking, Forward Error Correction (FEC)[12, 13] can be used to re-construct lost chunks. In an FEC protocol, data is transmitted with redundancy across chunks so that if some chunks are lost, redundancy in other chunks can be used to reconstruct the original data <ref> [14] </ref>. 3.2 Multicast Address Determination The multicast group address is chosen using one of two methods. When the first request for a particular page is received, the server chooses a random address. As requests are made, the server informs requesters explicitly via the TCP connection used to make the request.
Reference: [15] <author> W. Fenner, </author> <title> "Internet group management protocol, </title> <type> version 2," Tech. Rep. </type> <institution> draft-ietf-idmr-igmp-v2-*.txt, Internet Engineering Task Force (IETF), </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: If the browser is capable, the page may be displayed in noncontiguous segments. After receiving all chunks, each requester will leave the multicast group. In response, routers will prune the receiver from the multicast tree, thereby preventing the delivery of unwanted packets <ref> [15] </ref>. 3.4 Transmission Duration If all receivers have been satisfied and there are no outstanding requests, the cyclic multicast server should stop transmitting. However, without explicit feedback, the server cannot know for certain if there are still any receivers.
Reference: [16] <author> M. Ammar, </author> <title> "Probabilistic multicast: Generalizing the multicast paradigm to improve scalability," </title> <booktitle> in Proceedings of Infocom '94, </booktitle> <address> (Toronto, Canada), </address> <pages> pp. 848-855, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In order to determine fl we use an analysis technique similar to <ref> [16] </ref>. A discrete time Markov chain is used to represent the progress of the system. The state of the system is the number of receivers that have received a particular chunk.
Reference: [17] <author> K. Almeroth and M. Ammar, </author> <title> "Multicast group behavior in the internet's multicast backbone (MBone)," </title> <journal> IEEE Communications, </journal> <month> June </month> <year> 1997. </year>
Reference-contexts: Determining estimates of network resources consumed by unicast versus multicast is beyond the scope of this paper but results based on data collected from MBone groups are given in <ref> [17] </ref>.
Reference: [18] <author> H. Schulzrinne, S. Casner, R. Frederick, and J. V., "Rtp: </author> <title> A transport protocol for real-time applications," </title> <type> Tech. Rep. RFC 1889, </type> <institution> Internet Engineering Task Force, </institution> <month> January </month> <year> 1996. </year>
Reference: [19] <author> G. Zipf, </author> <title> Human Behavior and the Principle of Least Effort. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1949. </year>
Reference-contexts: Each server will have a number of pages L that it can serve. We assume that the probability that a request is for a particular page follows a Zipf distribution <ref> [19] </ref>.
References-found: 19

