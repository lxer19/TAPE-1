URL: ftp://ftp.cs.utexas.edu/pub/darshan/cs.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/darshan/abstracts/abstracts.html
Root-URL: 
Email: Email: fdarshan, fussellg@cs.utexas.edu  
Title: Optimization of Delay-Insensitive Circuits a Case Study  
Author: Priyadarsan Patra Donald Fussell 
Address: Austin, TX 78712-1188, USA  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract: We explore ways of constructing efficient delay-insensitive (DI) networks from a set of primitive DI elements by means of a case study. Several approaches that improve on recent designs of a modulo-N counter in the literature are illustrated. We obtain low constant latency, low constant response time, constant power consumption and optimal area-complexity designs for this circuit. For moderately large N , the area complexity compares well even with standard designs under synchronous (clocked) discipline. Many of these efficiencies derive from the exploitation of the powerful property of timing-independent composability of DI circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [BM91] <author> Steven M. Burns and Alain J. Martin. </author> <title> Performance analysis and optimization of asynchronous circuits. </title> <editor> In Carlo H. Sequin, editor, </editor> <booktitle> Advanced Research in VLSI: Proceedings of the 1991 UC Santa Cruz Conference, </booktitle> <pages> pages 71-86. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Bro90] <author> Geoffrey M. Brown. </author> <title> Towards truly delay-insensitive circuit realizations of process algebras. </title> <editor> In Geraint Jones and Mary Sheeran, editors, </editor> <booktitle> Proceedings of the Workshop on Designing Correct Circuits, </booktitle> <pages> pages 120-131. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [Bru91] <author> Erik Brunvand. </author> <title> A cell set for self-timed design using Actel FPGAs. </title> <type> Technical Report UUCS-91-013, </type> <institution> Dept. of Comp. Science, Univ. of Utah, </institution> <address> Salt Lake City, </address> <month> August </month> <year> 1991. </year>
Reference: [Chu87] <author> Tam-Anh Chu. </author> <title> Synthesis of Self-Timed VLSI Circuits from Graph-Theoretic Specifications. </title> <type> PhD thesis, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> June </month> <year> 1987. </year>
Reference: [CLR92] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: LRT refers to the worst-case response time of an operation. ART is the average response time of an operation, in the worst-case <ref> [CLR92] </ref>. We also define SRT as the Shortest Response Time for an operation. Moreover, we will ignore delays in wires and F orks interconnecting primitive modules realizing a circuit in our calculations.
Reference: [Dil89] <author> David L. Dill. </author> <title> Trace Theory for Automatic Hierachical Verification of Speed-Independent Circuits. </title> <publisher> ACM Distinguished Dissertations. MIT Press, </publisher> <year> 1989. </year>
Reference: [Ebe89] <author> Jo C. Ebergen. </author> <title> Translating Programs into Delay-Insensitive Circuits, volume 56 of CWI Tract. </title> <institution> Centre for Mathematics and Computer Science, </institution> <year> 1989. </year>
Reference: [Ebe91] <author> Jo C. Ebergen. </author> <title> A formal approach to designing delay-insensitive circuits. </title> <journal> Distributed Computing, </journal> <volume> 5(3) </volume> <pages> 107-119, </pages> <year> 1991. </year>
Reference-contexts: introduction to trace theory for specifying circuits, see <ref> [Ebe91] </ref>. 3 Name Schematic Specification Fork pref (a?( b!k c!)) ? Merge pref ((a? jb?) c!) ? Toggle pref (a? c! a? d!) ? 1fi2-Join pref (((a?kb0?) c0!) j ((a?kb1?)c1!)) ? Table 1: A Set of DI Primitives used here Some invalid traces are: (1) a b0 b1, (2) a a,
Reference: [EP92] <author> Jo C. Ebergen and Ad M. G. Peeters. </author> <title> Modulo-N counters: Design and analysis of delay-insensitive circuits. </title> <editor> In Jtrgen Staunstrup and Robin Sharp, editors, </editor> <title> Designing Correct Circuits, </title> <journal> volume A-5 of IFIP Transactions, </journal> <pages> pages 27-46. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1992. </year> <month> 14 </month>
Reference-contexts: The independently developed circuit in Figure 3 is similar to the best decomposition for a mod-N counter given in <ref> [EP92] </ref>, which does not discuss the power consumption issue. Nonetheless, our final design gives a much better figure even for area as discussed above. 4 9 Switch-level Implementation In the following we show area and time efficient and, yet, robust transistor-design schemes by examples. <p> The few principles of optimization and design methods illustrated here in have lead to many improved circuit properties such as area, response times, 1g 4 <ref> [EP92] </ref> (page 44) suggests that counters for arbitrary N using decompositions shown in their figures 5 and 6 (a) yield constant response time.
Reference: [Hoa85] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference: [JU90] <author> Mark B. Josephs and Jan Tijmen Udding. </author> <title> An algebra for delay-insensitive circuits. </title> <editor> In Robert P. Kurshan and Edmund M. Clarke, editors, </editor> <booktitle> Proc. International Workshop on Computer Aided Verification, volume 531 of Lecture Notes in Computer Science, </booktitle> <pages> pages 343-352. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [Kel74] <author> Robert M. Keller. </author> <title> Towards a theory of universal speed-independent modules. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-23(1):21-33, </volume> <month> January </month> <year> 1974. </year>
Reference: [LMBSV92] <author> L. Lavagno, C. Moon, R. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Solving the state assignment problem for signal transition graphs. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 568-572. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1992. </year>
Reference: [Mar92] <author> Alain J. Martin. </author> <title> Asynchronous datapaths and the design of an asynchronous adder. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 1(1) </volume> <pages> 119-137, </pages> <month> July </month> <year> 1992. </year>
Reference: [Men88] <author> Teresa H.-Y. Meng. </author> <title> Asynchronous Design for Digital Signal Processing Architectures. </title> <type> PhD thesis, </type> <institution> UC Berkely, </institution> <year> 1988. </year>
Reference: [NDDH93] <author> Steven M. Nowick, Mark E. Dean, David L. Dill, and Mark Horowitz. </author> <title> The design of a high-performance cache controller: a case study in asynchronous synthesis. </title> <booktitle> In Proc. Hawaii International Conf. System Sciences, </booktitle> <volume> volume I, </volume> <pages> pages 419-427. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> January </month> <year> 1993. </year>
Reference: [PF93] <author> P. Patra and D.S. Fussell. </author> <title> Building-blocks for designing DI circuits. </title> <type> Technical report tr93-23, </type> <institution> Dept. of Computer Sciences, Univ of Texas at Austin, </institution> <month> November </month> <year> 1993. </year>
Reference: [Sut89] <author> Ivan E. Sutherland. </author> <title> Micropipelines. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 720-738, </pages> <month> June </month> <year> 1989. </year>
Reference: [Udd84] <author> Jan Tijmen Udding. </author> <title> Classification and Composition of Delay-Insensitive Circuits. </title> <type> PhD thesis, </type> <institution> Dept. of Math. and C.S., Eindhoven Univ. of Technology, </institution> <year> 1984. </year>
Reference-contexts: Hence, our first trace-theoretic behavioral specification of the counter is S0 = pref ((a N ; b) ? ). 3.1 Refinement based on choice of handshake protocol Under the requirement of "delay-insensitivity" a transition on a port must be acknowledged, before another can follow, to avoid transmission interference <ref> [Udd84] </ref>. This makes a protocol for `handshake' necessary for synchronization. Each input need not be individually acknowledged, but in our case we have two independent interfaces and hence, two independent handshake protocols. Usually two physical wires, logically directed opposite to each other, are used to implement such a channel. <p> But, S1 is not a delay-insensitive specification as may be checked against Udding's conditions of delay-insensitivity <ref> [Udd84] </ref>, because the two input signals b 1 ? and a 0 ? are allowed only in one sequential order. (Informally, because of possible arbitrary delays in the interface it cannot be guaranteed that b 1 ? is received before the next a 0 ? if they are causally unrelated.) Considering
Reference: [vB92] <author> Kees van Berkel. </author> <title> Handshake Circuits: An Intermediary between Communicating Processes and VLSI. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, </institution> <year> 1992. </year>
Reference-contexts: For conventional clocked circuits, a `global' clock serves to synchronize, while the asynchronous communication requires some form of handshake for synchronization among the communicating modules. Therefore, it is sometimes convenient, though not necessary, to think of circuits as communicating along handshake channels <ref> [vB92] </ref> as a way of `modularizing' the interface, i.e. a logical communication link is encapsulated by defining hardware components that control/realize it. But, we will not insist on "channels" for internal communication to avoid inefficiency.
Reference: [vB93] <author> Kees van Berkel. </author> <title> VLSI programming of a modulo-N counter with constant response time and constant power. </title> <editor> In S. Furber and M. Edwards, editors, </editor> <title> Asynchronous Design Methodologies, </title> <journal> volume A-28 of IFIP Transactions, </journal> <pages> pages 1-11. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Moreover, the clocked synchronous counters cause transitions at clock inputs of all the O (log N ) flip-flops for every clock tick giving O (log N ) power dissipation, while for a DI counter the amortized number of signal transitions is only O (1). <ref> [vB93] </ref> shows a design using 4-phase protocol obtained starting from a CSP-based language, Tangram. Optimized implementation therein uses about 26 + 120blog N c transistors. The latency in that implementation is O (log N ), but, the response time afterwards is a constant. <p> Optimized implementation therein uses about 26 + 120blog N c transistors. The latency in that implementation is O (log N ), but, the response time afterwards is a constant. The power consumption is O (1) per external communication, as in our design. Our designs considerably improve upon <ref> [vB93] </ref> by reducing the initial response time to a constant simultaneously maintaining all other complexity bounds while making them even tighter by multiplicative constants | e.g., our 2-phase signalling reduces the time to count N by a factor of 2, compared to 4-phase communication.
Reference: [vdS85] <author> Jan L. A. van de Snepscheut. </author> <title> Trace Theory and VLSI Design, </title> <booktitle> volume 200 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference: [WE88] <author> N. Weste and K. Eshraghian. </author> <title> Principles of CMOS VLSI Design. </title> <publisher> Addison Wesley, </publisher> <year> 1988. </year> <month> 15 </month>
Reference-contexts: The last term is virtually a constant for large N . Compare this with the synchronous clocked counter suggested in Figure 8.26 of <ref> [WE88] </ref>. Even when an adder circuit is used to implement a synchronous clocked modulo counter, our design certainly compares well in area. But, the response time of our DI counter does not increase with increasing N , unlike in the synchronous designs.
References-found: 23

