URL: ftp://nimbus.anu.edu.au/pub/tridge/HiDIOS/hidios.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/pario/new.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The HiDIOS filesystem  
Author: Andrew Tridgell David Walsh 
Abstract: This paper describes the design and implementation of version 1.0 of the HiDIOS parallel file system for the AP1000 multicomputer. A brief justification is given for the central design decisions along with initial performance results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.A. </author> <title> Hawking `A PADRE in MUFTI (A Multi User Free Text retrieval Intermediary)', </title> <booktitle> in Proceedings of the Fourth Parallel Computing Workshop paper 26, </booktitle> <institution> Imperial College, </institution> <address> London, </address> <month> (Sep </month> <year> 1995). </year>
Reference-contexts: We have implemented one such operation in the current version of the HiDIOS file system and are investigating two others. 5.1 O PARALLEL mode The one we have implemented was initially designed with the Padre text processing application in mind <ref> [1] </ref>. A file opened with the O PARALLEL option is partitioned so that each processor sees a fixed partitioning of the file, with its own length field. <p> The Padre text processing system <ref> [1] </ref> regularly achieves more than 50Mb/sec while using the HiDIOS file system.
Reference: [2] <author> H. Ishihata, T. Horie, S. Inano, T. Shimizu and S. Kato, </author> <booktitle> "CAP-II Architecture", Proceedings of the First Fujitsu-ANU CAP Workshop, </booktitle> <institution> Fujitsu Research Laboratories, Kawasaki, </institution> <address> Japan, </address> <month> November </month> <year> 1990. </year>
Reference-contexts: Out of this project has come the HiDIOS 1 file system, which has addressed the problems using quite simple but effective design ideas. The HiDIOS file system itself is targeted at the Fujitsu AP1000 <ref> [2] </ref> multicomputer.
Reference: [3] <author> K. Ooe, </author> <title> "Overview of the AP1000 Parallel file system", </title> <booktitle> Proceedings of the Fujitsu-ANU CAP Workshop, </booktitle> <institution> Australian National University, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: While the current implementation of the option board kernel is largely based on the Fujitsu "DDV Local File System" option board kernel <ref> [3] </ref>, a local copy-back file cache has been added. This cache uses a tagging scheme to hold accessed blocks in the local fast static RAM, with dirty blocks written back to disk while the option CPU is not busy.
Reference: [4] <author> B. Broom and R. Cohe, </author> <title> "Acacia: A Distributed, Parallel File System for the CAP II", </title> <booktitle> Proceedings of the First Fujitsu-ANU CAP Workshop, </booktitle> <institution> Fujitsu Research Laboratories, Kawasaki, </institution> <address> Japan, </address> <month> November </month> <year> 1990. </year> <pages> 20-11 </pages>
References-found: 4

