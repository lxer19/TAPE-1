URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1997/tr-97-043.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1997.html
Root-URL: http://www.icsi.berkeley.edu
Email: fortino@icsi.berkeley.edu  
Title: Java Multimedia Studio  
Author: v. Giancarlo Fortino Eduardo R. 
Note: The author was sponsored by the International Institute for Advanced Scientific Studies  
Date: November 1997  
Address: Berkeley, CA  Mare (SA), Italy.  
Affiliation: International Computer Science Institute,  Caianiello, Vietri sul  
Pubnum: TR-97-043  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> McCanne S., Jacobson V., </author> <title> vic: a flexible framework for packet video, </title> <booktitle> Proceedings of ACM Multimedia 95, ACM, </booktitle> <pages> pp. 511-522, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: MBone has evolved over the time and now is a stable platform for world wide delivery of seminars, conferences, working group meetings, virtual worlds and even games. A lot of standalone and distributed multimedia tools (e.g., vic <ref> [1] </ref>, vat, wb, MBone VCR [2], Mvote, MVoD [3], mMOD [4]) exist enabling the users to handle several kinds of multimedia sessions consisting of video, audio, text, and graphical images.
Reference: [2] <author> Holfelder W., </author> <booktitle> MBone VCR - Video Conference on the MBone, Proc. Of ACM Multimedia 95, ACM, </booktitle> <pages> 237-238, </pages> <year> 1995. </year>
Reference-contexts: MBone has evolved over the time and now is a stable platform for world wide delivery of seminars, conferences, working group meetings, virtual worlds and even games. A lot of standalone and distributed multimedia tools (e.g., vic [1], vat, wb, MBone VCR <ref> [2] </ref>, Mvote, MVoD [3], mMOD [4]) exist enabling the users to handle several kinds of multimedia sessions consisting of video, audio, text, and graphical images. <p> It is independent from tools originating the multimedia sessions under the form of RTP streams. The presentation of video and audio might be done by whatever tool understands RTP protocol (e.g., VIC/VAT, IP/TV, ICast Broadcaster, and so forth). It follows the characteristics of a typical MBone Session <ref> [2] </ref> consisting of a number of multicast channels on which a media stream (e.g., audio, video, text) might be present. The design is favored by the inherent simplicity of Java programming which allows to take great advantage of the objectoriented paradigm.
Reference: [3] <author> Holfelder W., </author> <title> Interactive remote recording and playback of multicast videoconferences, </title> <address> IDMS97, </address> <year> 1997. </year>
Reference-contexts: MBone has evolved over the time and now is a stable platform for world wide delivery of seminars, conferences, working group meetings, virtual worlds and even games. A lot of standalone and distributed multimedia tools (e.g., vic [1], vat, wb, MBone VCR [2], Mvote, MVoD <ref> [3] </ref>, mMOD [4]) exist enabling the users to handle several kinds of multimedia sessions consisting of video, audio, text, and graphical images. In the scenario of real-virtual conferencing and automatic content generation, Java Multimedia Studio enables the multimedia users to edit, record, playback, browse and filter multimedia sessions.
Reference: [4] <author> Parnes P., & others, mMOD: </author> <title> the multicast Media-on-Demand system, </title> <note> 12 http://www.cdt.luth.se/~peppar/progs/mMOD/. </note>
Reference-contexts: MBone has evolved over the time and now is a stable platform for world wide delivery of seminars, conferences, working group meetings, virtual worlds and even games. A lot of standalone and distributed multimedia tools (e.g., vic [1], vat, wb, MBone VCR [2], Mvote, MVoD [3], mMOD <ref> [4] </ref>) exist enabling the users to handle several kinds of multimedia sessions consisting of video, audio, text, and graphical images. In the scenario of real-virtual conferencing and automatic content generation, Java Multimedia Studio enables the multimedia users to edit, record, playback, browse and filter multimedia sessions.
Reference: [5] <author> Fortino G., Nigro L., </author> <title> QoS centred Java and actor based framework for real/virtual teleconferences, </title> <institution> accepted for SCS EuroMedia 98 (MEDIATEC), Leicester UK, </institution> <month> Jan 5-7, </month> <year> 1998. </year>
Reference-contexts: It is completely written in Java to guarantee multi-platform portability. Java Multimedia Studio is founded on a QoS centered Java and Actor-based Framework (JAF) for real-virtual teleconferencing <ref> [5] </ref> providing the management of local and distributed synchronization of streams by the mixing, translating and filtering of RTP packets. JAF is a variant of the Actor model, which rests on timing predictability, customizable scheduling and a modular specification of QoS constraints [5,6,7,17]. <p> Finally, conclusions are presented which clarify the overall status of the project and furnish an indication of some directions of further work. 2. Design issues and Architecture Java Multimedia Studio is completely objectoriented and founded on Java and Actor-based Framework <ref> [5] </ref>. It is independent from tools originating the multimedia sessions under the form of RTP streams. The presentation of video and audio might be done by whatever tool understands RTP protocol (e.g., VIC/VAT, IP/TV, ICast Broadcaster, and so forth).
Reference: [6] <author> Kirk B., Nigro L., Pupo F., </author> <title> Using real time constraints for modularisation, </title> <publisher> Springer-Verlag, LNCS 1204, </publisher> <pages> 236-251, </pages> <year> 1997. </year>
Reference: [7] <author> Ren S., Venkatasubramanian N., Agha G., </author> <title> Formalising multimedia QoS constraints using actors, Formal Methods for Open Object-based Distributed Systems, </title> <journal> Vol. </journal> <volume> 2, </volume> <editor> Bowman H. And Derrik J. (eds), </editor> <publisher> Chapman & Hall, </publisher> <pages> 139-153, </pages> <year> 1997. </year>
Reference: [8] <author> Steinmetz R., Nahrstedt K., </author> <title> Multimedia: computing, communications and applications, </title> <publisher> Prentice-Hall, </publisher> <year> 1995. </year>
Reference-contexts: A multimedia application is modeled as a collection of autonomous, distributed, concurrent and mobile multimedia and inter-media actors interacting one to another to achieve their common goal, e.g., real-virtual multimedia conferencing sessions <ref> [8] </ref>, automatic contents generation or video-on demand services [9]. The tool handles multimedia sessions under the form of RTP packets [10,11]. All the recorded multimedia sessions constitute the basic content background. Java Multimedia Studio can operate on this background by using the concept of added content layer.
Reference: [9] <author> Rowe L. A., Berger D. A., and Baldeschwieler J. E., </author> <title> The Berkeley Distributed Video-on-Demand System, </title> <booktitle> Multimedia Computing, Proceedings of the Sixth NEC Research Symposium, </booktitle> <editor> Ed. T. Ishiguro, </editor> <publisher> SIAM, </publisher> <year> 1995. </year>
Reference-contexts: A multimedia application is modeled as a collection of autonomous, distributed, concurrent and mobile multimedia and inter-media actors interacting one to another to achieve their common goal, e.g., real-virtual multimedia conferencing sessions [8], automatic contents generation or video-on demand services <ref> [9] </ref>. The tool handles multimedia sessions under the form of RTP packets [10,11]. All the recorded multimedia sessions constitute the basic content background. Java Multimedia Studio can operate on this background by using the concept of added content layer.
Reference: [10] <author> Schulzrinne H., </author> <title> RTP Profile for Audio and Video Conferences with Minimal Control, </title> <journal> IETF RFC1890, </journal> <volume> 01/25/1996. </volume>
Reference: [11] <author> Schulzrinne H., Casner S., Frederick R., Jacobson V., RTP: </author> <title> a Transport Protocol for Real-Time Applications, </title> <institution> IETF RFC1889, </institution> <month> January </month> <year> 1996. </year>
Reference: [12] <author> Pazandak P., Srivastava J., </author> <title> MultiUser Interactive Presentation Environments on the Internet: An Overview of DAMSEL and It's Implementation, </title> <booktitle> IEEE Conference On Multimedia Computing and Systems ( IEEE MMS '96 ) June 1996, </booktitle> <address> Hiroshima, Japan. </address>
Reference-contexts: All the recorded multimedia sessions constitute the basic content background. Java Multimedia Studio can operate on this background by using the concept of added content layer. A layer is a sort of index built both on the background and on another layer. The editor <ref> [12] </ref> makes possible to graphically specify the points of synchronization or relations among the media streams constituting the multimedia session (layer) which is being edited.
Reference: [13] <author> Handley M., </author> <title> SAP: Session Announcement Protocol, Internet Draft, IETF, Multiparty Multimedia Session Control Working Group, </title> <type> 09/09/1997. </type>
Reference-contexts: Background (streams: audio, video, text, ...) Layer #1 Layer #2 Multimedia Session #1 Multimedia Session #2 Added-content Multimedia Session #i 5 2.4 Java Session Directory The Java Session Directory implements a SDR (MBone Session directory tool) using the Session Announcement Protocol <ref> [13] </ref> and the Session Description Protocol [14] to listen to and announce multimedia sessions over MBone. 2.5 Filter The Filter implements a QoS Filter (see fig. 3) based on JAF enabling the filtering and translating of RTP packets.
Reference: [14] <author> Handley M., Jacobson V., SDP: </author> <title> Session Description Protocol, Internet Draft, IETF, Multiparty Multimedia Session Control Working Group, </title> <type> 09/09/1997. </type>
Reference-contexts: Background (streams: audio, video, text, ...) Layer #1 Layer #2 Multimedia Session #1 Multimedia Session #2 Added-content Multimedia Session #i 5 2.4 Java Session Directory The Java Session Directory implements a SDR (MBone Session directory tool) using the Session Announcement Protocol [13] and the Session Description Protocol <ref> [14] </ref> to listen to and announce multimedia sessions over MBone. 2.5 Filter The Filter implements a QoS Filter (see fig. 3) based on JAF enabling the filtering and translating of RTP packets.
Reference: [15] <author> Fortino G., Grimaldi D., Nigro L., </author> <title> Multicast control of Mobile Measurement Systems based on JAF, </title> <note> Submitted, </note> <year> 1998. </year>
Reference-contexts: The toolkit consists of several components: Player, Recorder, Editor, Session Directory, Filter. A first implementation of the JAF Filter is under test. Prosecution of the research activity aims at extending the toolkit with a multicast service to restore a posteriori recorded multimedia sessions by using mobile agents <ref> [15] </ref>, an implementation of the RTSP protocol and a program scheduler agent to automatically record and playback multimedia sessions. In addition the next version is being currently designed towards a collaborative media on demand (CMoD). It will be completely distributed by integrating MBone and WEB technologies [4,16].
Reference: [16] <author> Fortino G., Grimaldi D., Nigro L., </author> <title> Distributed measurement patterns using Java and web tools, </title> <booktitle> Proc. of IEEE AutoTestCon97, </booktitle> <address> Anaheim (CA), 624-628, </address> <year> 1997. </year> <month> 13 </month>
Reference: [17] <author> Nigro L., Pupo F., </author> <title> A modular approach to real-time programming using actors and Java, Proc. Of 22 nd IFAC/IFIP Workshop on Real-Time Programming, </title> <note> (to be published by Elsevier), </note> <month> Sep. </month> <pages> 15-17, </pages> <address> Lyon (Fr), 83-88, </address> <year> 1997. </year>
Reference: [18] <author> Jacobson V., </author> <title> Multimedia Conferencing on the Internet, </title> <type> SIGCOMM 94 Tutorial, </type> <institution> University College of London, </institution> <address> England, </address> <month> 30 August </month> <year> 1994. </year> <pages> Acronyms </pages>
Reference-contexts: On the basis of the arrival time of latest packets, stored into local variables, the observed arrival time of the current received packet, the available information on the JAF control channel, and the technique of buffer-delay adaptation <ref> [18] </ref>, the Filter can calculate JITTER and SKEW values and apply a suitable policy to synchronize the media streams.
Reference: [CMoD] <institution> Collaborative Media on Demand </institution>
Reference: [EED] <institution> End to End Delay </institution>
Reference: [GUI] <institution> Graphical User Interface </institution>
Reference: [JAF] <institution> Java and Actor-based Framework </institution>
Reference: [JSD] <institution> Java Session Directory </institution>
Reference: [MBone] <institution> The Internet Multicast Backbone [mMOD] multicast Media-on-Demand </institution>
Reference: [MVoD] <institution> MBone Video conference recording on Demand </institution>
Reference: [QoS] <institution> Quality of Service </institution>
Reference: [RTCP] <institution> Real-Time Control Protocol </institution>
Reference: [RTP] <institution> Real-Time Protocol </institution>
Reference: [RTSP] <institution> Real-Time Streaming Protocol </institution>
Reference: [SAP] <institution> Session Announcement Protocol </institution>
Reference: [SDP] <institution> Session Description Protocol </institution>
Reference: [SDR] <institution> Session Directory </institution>
References-found: 32

