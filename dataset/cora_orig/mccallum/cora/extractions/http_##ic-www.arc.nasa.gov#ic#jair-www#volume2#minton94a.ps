URL: http://ic-www.arc.nasa.gov/ic/jair-www/volume2/minton94a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/volume2/minton94a-html/paper.html
Root-URL: 
Email: minton@ptolemy.arc.nasa.gov  bresina@ptolemy.arc.nasa.gov  med@ptolemy.arc.nasa.gov  
Title: Total-Order and Partial-Order Planning: A Comparative Analysis  
Author: Steven Minton John Bresina Mark Drummond 
Address: Moffett Field, CA 94035 USA  
Affiliation: Recom Technologies NASA Ames Research Center, Mail Stop: 269-2  
Note: Journal of Artificial Intelligence Research 2 (1994) 227-262 Submitted 10/94; published 12/94  
Abstract: For many years, the intuitions underlying partial-order planning were largely taken for granted. Only in the past few years has there been renewed interest in the fundamental principles underlying this paradigm. In this paper, we present a rigorous comparative analysis of partial-order and total-order planning by focusing on two specific planners that can be directly compared. We show that there are some subtle assumptions that underly the wide-spread intuitions regarding the supposed efficiency of partial-order planning. For instance, the superiority of partial-order planning can depend critically upon the search strategy and the structure of the search space. Understanding the underlying assumptions is crucial for constructing efficient planners.
Abstract-found: 1
Intro-found: 1
Reference: <author> Backstrom, C. </author> <year> (1993). </year> <title> Finding least constrained plans and optimal parallel executions is harder than we thought. </title> <booktitle> In Proceedings of the Second European Workshop on Planning. </booktitle>
Reference: <author> Barrett, A., Soderland, S., & Weld, D. </author> <year> (1991). </year> <title> The effect of step-order representations on planning. </title> <type> Tech. rep. </type> <institution> 91-05-06, Univ. of Washington, Computer Science Dept. </institution>
Reference: <author> Barrett, A., & Weld, D. </author> <year> (1994). </year> <title> Partial-order planning: Evaluating possible efficiency gains. </title> <journal> Artificial Intelligence, </journal> <volume> 67 (1), </volume> <pages> 71-112. </pages>
Reference: <author> Chapman, D. </author> <year> (1987). </year> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32, </volume> <pages> 333-377. </pages>
Reference-contexts: Choice point: both alternatives must be considered for completeness. Let P 0 be the resulting plan. 5. Goal updating: Let G 0 be the set of preconditions in P 0 that are not necessarily true. 6. Recursive invocation: MT (P 0 ; G 0 ). nor Tweak <ref> (Chapman, 1987) </ref>, for example. How do these less-committed planners compare to ua and to? One might expect a less-committed planner to have the same advantages over ua that ua has over to. However, this is not necessarily true. <p> However, this is not necessarily true. As an example, in this section we introduce a Tweak-like planner, called mt, and show that its search space is larger than even to's in some circumstances. 16 Modal Truth Criterion <ref> (Chapman, 1987) </ref>, the formal statement that characterizes Tweak's search space. It is straightforward to see that mt is less committed than ua. The algorithms are quite similar; however, in Step 4, whereas ua orders all interacting steps, mt does not.
Reference: <author> Chen, P. </author> <year> (1989). </year> <title> Heuristic Sampling on Backtrack Trees. </title> <type> Ph.D. thesis, </type> <institution> Dept. of Computer Science, Stanford Univ., Stanford, </institution> <address> CA. </address>
Reference: <author> Collins, G., & Pryor, L. </author> <year> (1992). </year> <title> Achieving the functionality of filter conditions in a partial order planner. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence. </booktitle>
Reference: <author> Crawford, J., & Baker, A. </author> <year> (1994). </year> <title> Experimental results on the application of satisfiability algorithms to scheduling problems. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence. </booktitle>
Reference: <author> Dean, T., & Boddy, M. </author> <year> (1988). </year> <title> Reasoning about partially ordered events. </title> <journal> Artificial Intelligence, </journal> <volume> 36, </volume> <pages> 375-399. </pages>
Reference: <author> Drummond, M., & Currie, K. </author> <year> (1989). </year> <title> Goal-ordering in partially ordered plans. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Ginsberg, M., & Harvey, W. </author> <year> (1992). </year> <title> Iterative broadening. </title> <journal> Artificial Intelligence, </journal> <volume> 55, </volume> <pages> 367-383. </pages>
Reference-contexts: For distribution-insensitive strategies, such as iterative sampling, non-uniform distributions will have no effect. We note that while iterative sampling is a rather simplistic strategy, there are more sophisticated search strategies, such as iterative broadening <ref> (Ginsberg & Harvey, 1992) </ref>, that are also relatively distribution insensitive. We further explore such strategies in Section 8.2. 8. The Role of Heuristics In the preceding sections, we have shown that a partial-order planner can be more efficient simply because its search tree is smaller.
Reference: <author> Godefroid, P., & Kabanza, F. </author> <year> (1991). </year> <title> An efficient reactive planner for synthesizing reactive plans. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence. </booktitle>
Reference-contexts: While total-order planners are commonly associated with world-based planners, such as Strips, several well-known total-order planners have been plan-based, such as Waldinger's regression planner (Waldinger, 1975), Interplan (Tate, 1974) and Warplan (Warren, 1974). Similarly, partial-order planners are commonly plan-based, but it is possible to have a world-based partial-order planner <ref> (Godefroid & Kabanza, 1991) </ref>. In this paper, we focus solely on the total-order/partial-order distinction in order to avoid complicating the analysis. We claim that the only significant difference between partial-order and total-order planners is planning efficiency.
Reference: <author> Hertzberg, J., & Horz, A. </author> <year> (1989). </year> <title> Towards a theory of conflict detection and resolution in nonlinear plans. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Kambhampati, S. </author> <year> (1994a). </year> <title> Design tradeoffs in partial order (plan space) planning. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems. 260 Total-Order and Partial-Order Planning Kambhampati, S. </booktitle> <year> (1994b). </year> <title> Multi contributor causal structures for planning: A formalization and evaluation. </title> <journal> Artificial Intelligence, </journal> <volume> 69, </volume> <pages> 235-278. </pages>
Reference-contexts: Thus, the properties we discussed in this paper should provide a basis for analyzing how differences in subgoal serializibility manifest their effect on the search. This subject, however, is not as simple as it might seem and deserves further study. In other related work, Kambhampati has written several papers <ref> (Kambhampati, 1994a, 1994b, 1994c) </ref> that analyze the design space of partial-order planners, including the ua planner presented here. Kambhampati compares ua, Tweak, snlp (McAllester & Rosen-blitt, 1991), ucpop (Penberthy & Weld, 1992), and several other planners along a variety of dimensions. <p> Kambhampati also carries out an empirical comparison of the various planning algorithms on a particular problem <ref> (Kambhampati, 1994a) </ref>, showing how the differences in commitment strategies affects the efficiency of the planning process.
Reference: <author> Kambhampati, S. </author> <year> (1994c). </year> <title> Refinement search as a unifying framework for analyzing plan space planners. </title> <booktitle> In Proceedings of the Fourth International Conference on Principles of Knowledge Representation and Reasoning. </booktitle>
Reference: <author> Kambhampati, S., & Chen, J. </author> <year> (1993). </year> <title> Relative utility of EBG-based plan reuse in partial ordering vs. total ordering planning. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence. </booktitle>
Reference: <author> Korf, R. </author> <year> (1985). </year> <title> Depth-first iterative deepening: An optimal admissible tree search. </title> <journal> Artificial Intelligence, </journal> <volume> 27, </volume> <pages> 97-109. </pages>
Reference-contexts: For example, there might be a single totally ordered solution plan in ua's search tree and a large number of highly unordered failed 7. Since the depth-limit is equal to the length of the shortest solution, an iterative deepening <ref> (Korf, 1985) </ref> approach would yield similar results. Additionally, we note that increasing the depth-limit past the depth of the shortest solution does not significantly change the outcome of these experiments. 8.
Reference: <author> Korf, R. </author> <year> (1987). </year> <title> Planning as search: A quantitative approach. </title> <journal> Artificial Intelligence, </journal> <volume> 33, </volume> <pages> 65-88. </pages>
Reference-contexts: Their study focuses on how the goal structure of the problem affects the efficiency of partial-order planning. Specifically, they examine how partial-order and total-order planning compare for problems with independent, serializable, and non-serializable goals, when using a resource-bounded depth-first search. They refine Korf 's work on serializable goals <ref> (Korf, 1987) </ref>, introducing a distinction between trivially serializable subgoals, where the subgoals can be solved in any order without violating a previously solved subgoal, and laboriously serializable subgoals, where the subgoals are serializable, but at least 1=n of the orderings can cause a previously solved subgoal to be violated.
Reference: <author> Langley, P. </author> <year> (1992). </year> <title> Systematic and nonsystematic search strategies. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems. </booktitle>
Reference-contexts: The dramatic success of combining min-goals with iterative sampling led us to consider another search strategy, iterative broadening, which combines the best aspects of depth-first search and iterative sampling. This more sophisticated search strategy initially behaves like iterative sampling, but evolves into depth-first search as the breadth-cutoff increases <ref> (Langley, 1992) </ref>. Assuming that the solution is within the specified depth bound, iterative broadening is complete. In its early stages iterative broadening is distribution-insensitive; in its later stages it behaves like depth-first search and, thus, becomes increasingly sensitive to solution distribution.
Reference: <author> McAllester, D., & Rosenblitt, D. </author> <year> (1991). </year> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence. </booktitle>
Reference-contexts: This subject, however, is not as simple as it might seem and deserves further study. In other related work, Kambhampati has written several papers (Kambhampati, 1994a, 1994b, 1994c) that analyze the design space of partial-order planners, including the ua planner presented here. Kambhampati compares ua, Tweak, snlp <ref> (McAllester & Rosen-blitt, 1991) </ref>, ucpop (Penberthy & Weld, 1992), and several other planners along a variety of dimensions.
Reference: <author> Minton, S., Bresina, J., & Drummond, M. </author> <year> (1991a). </year> <title> Commitment strategies in planning: A comparative analysis. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: For example, do the advantages of partial-order planning hold regardless of the search strategy used? Do the advantages hold when the planning language is so expressive that reasoning about partially ordered plans is intractable (e.g., if the language allows conditional effects)? Our work <ref> (Minton et al., 1991a, 1992) </ref> has shown that the situation is much more interesting than might be expected. We have found that there are some "unstated assumptions" underlying the supposed efficiency of partial-order planning. <p> Since U 1 is a 1-step ua-extension of U 0 , it has length n + 1. Q.E.D. 259 Minton, Bresina, & Drummond Acknowledgements Most of the work present in this paper was originally described in two conference papers <ref> (Minton et al., 1991a, 1992) </ref>. We thank Andy Philips for his many contributions to this project. He wrote the code for the planners and helped conduct the experiments. We also thank the three anonymous reviewers for their excellent comments.
Reference: <author> Minton, S., Bresina, J., Drummond, M., & Philips, A. </author> <year> (1991b). </year> <title> An analysis of commitment strategies in planning: The details. </title> <type> Tech. rep. 91-08, </type> <institution> NASA Ames, AI Research Branch. </institution>
Reference-contexts: After the preprocessing stage, the procedure orders each interacting step with respect to O add , updating the labels after each iteration. Since each edge in the graph need be traversed no more than once, the entire ordering process takes at most O (e) time <ref> (as described in Minton et al., 1991b) </ref>. To see this, note that the process of labeling the steps before (or after) O int can stop as soon as a labeled step is encountered. <p> The same "trick" can be used for other languages as well, provided that we can devise a simple test to detect interacting operators. For example, in previous work <ref> (Minton et al., 1991b) </ref> we showed how this can be done for a language where operators can have variables in their preconditions and effects.
Reference: <author> Minton, S., Drummond, M., Bresina, J., & Philips, A. </author> <year> (1992). </year> <title> Total order vs. partial order planning: Factors influencing performance. </title> <booktitle> In Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning. </booktitle>
Reference: <author> Pednault, E. </author> <year> (1988). </year> <title> Synthesizing plans that contain actions with context-dependent effects. </title> <journal> Computational Intelligence, </journal> <volume> 4, </volume> <pages> 356-372. </pages>
Reference: <author> Penberthy, J., & Weld, D. </author> <year> (1992). </year> <title> UCPOP: A sound, complete, partial-order planner for adl. </title> <booktitle> In Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning. </booktitle>
Reference-contexts: In other related work, Kambhampati has written several papers (Kambhampati, 1994a, 1994b, 1994c) that analyze the design space of partial-order planners, including the ua planner presented here. Kambhampati compares ua, Tweak, snlp (McAllester & Rosen-blitt, 1991), ucpop <ref> (Penberthy & Weld, 1992) </ref>, and several other planners along a variety of dimensions.
Reference: <author> Regnier, P., & Fade, B. </author> <year> (1991). </year> <title> Complete determination of parallel actions and temporal optimization in linear plans of action. </title> <editor> In Hertzberg, J. (Ed.), </editor> <booktitle> European Workshop on Planning, Vol. 522 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 100-111 Sankt Augustin, Germany. </address> <publisher> Springer. </publisher>
Reference: <author> Rosenbloom, P., Lee, S., & Unruh, A. </author> <year> (1993). </year> <title> Bias in planning and explanation-based learning. </title> <editor> In Minton, S. (Ed.), </editor> <title> Machine Learning Methods for Planning. </title> <publisher> Morgan Kaufmann Publishers. 261 Minton, </publisher> <editor> Bresina, & Drummond Sacerdoti, E. </editor> <booktitle> (1975). The nonlinear nature of plans. In Proceedings of the Fourth International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: Figure 10 shows the impact of min-goals on the behavior of ua and to under depth-first search. Although the heuristic biases the order in which the two planners' search spaces are explored <ref> (cf. Rosenbloom, Lee, & Unruh, 1993) </ref>, it appears that its effect is largely independent of the partial-order/total-order distinction, since both planners are improved by a similar percentage. For example, under depth-first search on the problems with solutions at depth six, ua improved 88% and to improved 87%.
Reference: <author> Sacerdoti, E. </author> <year> (1977). </year> <title> A Structure for Plans and Behavior. </title> <publisher> American Elsivier, </publisher> <address> New York. </address>
Reference-contexts: Compared to many well-known planners, ua is conservative since it requires each plan to be unambiguous. This is not required by noah <ref> (Sacerdoti, 1977) </ref>, NonLin (Tate, 1977), 250 Total-Order and Partial-Order Planning MT (P; G) 1. Termination check: If G is empty, report success and stop. 2. Goal selection: Let c = select-goal (G), and let O need be the plan step for which c is a precondition. 3.
Reference: <author> Tate, A. </author> <year> (1974). </year> <title> Interplan: A plan generation system which can deal with interactions between goals. </title> <type> Tech. rep. </type> <institution> Memo MIP-R-109, Univ. of Edinburgh, Machine Intelligence Research Unit. </institution>
Reference-contexts: While total-order planners are commonly associated with world-based planners, such as Strips, several well-known total-order planners have been plan-based, such as Waldinger's regression planner (Waldinger, 1975), Interplan <ref> (Tate, 1974) </ref> and Warplan (Warren, 1974). Similarly, partial-order planners are commonly plan-based, but it is possible to have a world-based partial-order planner (Godefroid & Kabanza, 1991). In this paper, we focus solely on the total-order/partial-order distinction in order to avoid complicating the analysis. <p> Recursive invocation: TO (P 0 ; G 0 ). 4. A Tale of Two Planners In this section we define two simple planning algorithms. The first algorithm, shown in Figure 1, is to, a total-order planner motivated by Waldinger's regression planner (Waldinger, 1975), Interplan <ref> (Tate, 1974) </ref>, and Warplan (Waldinger, 1975).
Reference: <author> Tate, A. </author> <year> (1977). </year> <title> Generating project networks. </title> <booktitle> In Proceedings of the Fifth International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: Compared to many well-known planners, ua is conservative since it requires each plan to be unambiguous. This is not required by noah (Sacerdoti, 1977), NonLin <ref> (Tate, 1977) </ref>, 250 Total-Order and Partial-Order Planning MT (P; G) 1. Termination check: If G is empty, report success and stop. 2. Goal selection: Let c = select-goal (G), and let O need be the plan step for which c is a precondition. 3.
Reference: <author> Veloso, M., Perez, M., & Carbonell, J. </author> <year> (1990). </year> <title> Nonlinear planning with parallel resource allocation. In Proceedings of the Workshop on Innovative Approaches to Planning, Scheduling and Control. </title>
Reference: <author> Waldinger, R. </author> <year> (1975). </year> <title> Achieving several goals simultaneously. </title> <booktitle> In Machine Intelligence 8. </booktitle> <publisher> Ellis Harwood, Ltd. </publisher>
Reference-contexts: While total-order planners are commonly associated with world-based planners, such as Strips, several well-known total-order planners have been plan-based, such as Waldinger's regression planner <ref> (Waldinger, 1975) </ref>, Interplan (Tate, 1974) and Warplan (Warren, 1974). Similarly, partial-order planners are commonly plan-based, but it is possible to have a world-based partial-order planner (Godefroid & Kabanza, 1991). In this paper, we focus solely on the total-order/partial-order distinction in order to avoid complicating the analysis. <p> Recursive invocation: TO (P 0 ; G 0 ). 4. A Tale of Two Planners In this section we define two simple planning algorithms. The first algorithm, shown in Figure 1, is to, a total-order planner motivated by Waldinger's regression planner <ref> (Waldinger, 1975) </ref>, Interplan (Tate, 1974), and Warplan (Waldinger, 1975). <p> Recursive invocation: TO (P 0 ; G 0 ). 4. A Tale of Two Planners In this section we define two simple planning algorithms. The first algorithm, shown in Figure 1, is to, a total-order planner motivated by Waldinger's regression planner <ref> (Waldinger, 1975) </ref>, Interplan (Tate, 1974), and Warplan (Waldinger, 1975).
Reference: <author> Warren, D. </author> <year> (1974). </year> <title> Warplan: A system for generating plans. </title> <type> Tech. rep. Memo 76, </type> <institution> Computational Logic Dept., School of AI, Univ. of Edinburgh. </institution> <month> 262 </month>
Reference-contexts: While total-order planners are commonly associated with world-based planners, such as Strips, several well-known total-order planners have been plan-based, such as Waldinger's regression planner (Waldinger, 1975), Interplan (Tate, 1974) and Warplan <ref> (Warren, 1974) </ref>. Similarly, partial-order planners are commonly plan-based, but it is possible to have a world-based partial-order planner (Godefroid & Kabanza, 1991). In this paper, we focus solely on the total-order/partial-order distinction in order to avoid complicating the analysis.
References-found: 32

