URL: http://vlsicad.cs.ucla.edu/papers/journal/j18.ps
Refering-URL: http://vlsicad.cs.ucla.edu/pubs.html
Root-URL: http://www.cs.ucla.edu
Title: Combining Problem Reduction and Adaptive Multi-Start: A New Technique for Superior Iterative Partitioning  
Author: Lars W. Hagen and Andrew B. Kahng 
Abstract: VLSI netlist partitioning has been addressed chiefly by iterative methods (e.g. Kernighan-Lin [21] and Fiduccia-Mattheyses [13]) and spectral methods (e.g. Hagen-Kahng [14]). Iterative methods are the de facto industry standard, but suffer diminished stability and solution quality when instances grow large. Spectral methods have achieved high-quality solutions, particularly for the ratio cut objective, but suffer excessive memory requirements and the inability to capture practical constraints (preplacements, variable module areas, etc.). This work develops a new approach to Fiduccia-Mattheyses (FM) based iterative partitioning. We combine two concepts: (i) problem reduction using clustering and the two-phase FM methodology, and (ii) adaptive multi-start, i.e., the intelligent selection of starting points for the iterative optimization, based on the results of previous optimizations. The resulting Clustered Adaptive Multi-Start (CAMS) methodology [18] substantially improves upon previous partitioning results in the literature, for both unit module areas and actual module areas, and for both the min-cut bisection and minimum ratio cut objectives. The CAMS method is surprisingly fast and has very stable solution quality, even for large benchmark instances. It has been applied as the basis of a clustering methodology within an industry placement tool.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.H. Ackley, </author> <title> A Connectionist Machine for Genetic Hillclimbing, </title> <publisher> Kluwer, </publisher> <year> 1987. </year>
Reference-contexts: Essentially, (2) attempts to find starting points that are central to the previous solutions, and thus more likely to reach the center of the big valley. Work in the genetic algorithms literature has discussed similar ideas within the context of "hybrid genetic-local search" [24] or "learn as you search" <ref> [1] </ref>. By combining genetic algorithms 1 This particular instance is from the class of "difficult" bisection inputs proposed by Bui et al. [5]. <p> Such works mostly remain within the genetic paradigm in that new solutions are derived from only two "parents"; however, Muhlenbein in [24] and Ackley in <ref> [1] </ref> (p. 35) describe multi-parent, voting approaches for forming new solutions. 6 3 Clustered Adaptive Multi-Start (CAMS) Clustering and AMS each improve on the naive (random multi-start) implementation of iterative search.
Reference: [2] <author> C.J. Alpert and A.B. Kahng, </author> <title> "Geometric Embeddings for Faster and Better Multi-Way Netlist Partitioning," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Dallas, </address> <month> June </month> <year> 1993, </year> <pages> pp. 743-748. </pages>
Reference-contexts: Cong and Smith [11] generalize Bui et al.'s matching to a clique-finding scheme, and provide a parallel implementation. The strongest two-phase FM results for netlist bisection seem to be those of Alpert and Kahng <ref> [2] </ref>, whose AGG algorithm applies geometric clustering to a multi-dimensional spectral embedding of the netlist. Using AGG clusters in the two-phase FM approach yields bisections that are an average of 26.9% better than the results of running "flat" FM 200 times. <p> Comparison of CAMS against AMS and random multi-start. 2. Comparison of CAMS against the previous two-phase FM partitioning results in <ref> [2] </ref>. 3. Comparison of CAMS against the method of Cheng and Wei [8]. 4. Comparison of a ratio cut implementation of CAMS against previous ratio cut partitioning results in [30] [15] [10]. <p> This is the method of counting used in previous two-phase FM work <ref> [2] </ref>. Note that FM calls on the clustered netlist are of much lower complexity than those on the flattened netlist. 12 number of modules. Our reasoning was that if the k partitions differ maximally from each other, we require k = dlog 2 ne to get no clustering at all. <p> Table 1 shows the average solution and best solution of 50 independently started CAMS runs. In these experiments, we use actual module area to conform with the previous two-phase FM results published in <ref> [2] </ref>. Our third set of experiments compared CAMS against the method of Cheng and Wei [8], which applies two-phase FM using clusters obtained through recursive ratio cut partitioning. <p> The "Best Previous" column contains the best previously-published result and in parentheses gives the algorithm which generated that result. Note that the Test05 bisections in [16] and <ref> [2] </ref> used slightly corrupted module area data and therefore reported incorrect bisection costs. The entries in this table reflect our rerunning RW-ST and AGG on the corrected input file for Test05. Cheng-Wei 91 CAMS Benchmark Best Avg. Runtime (s) Best Avg.
Reference: [3] <author> K.D. Boese, A.B. Kahng and S. Muddu, </author> <title> "New Adaptive Multistart Techniques for Combinatorial Global Optimizations," </title> <journal> Operations Research Letters, </journal> <volume> 16(2), </volume> <year> 1994, </year> <month> pp.101-113. </month>
Reference-contexts: In such an approach, previously generated solutions are used to construct a starting point that is more likely to lead to a good local minimum. Boese et al. <ref> [3] </ref> showed that the set of local minima for many iterative algorithms, under the appropriate neighborhood structure, exhibits a "big valley". For a 100-node instance, structure. 1 Each solution is plotted by its cost (number of edges cut) versus its average distance (number of pair-swaps) from all other solutions. <p> There is a clear correlation: the best local minima are central to all the others. Based on this observation, the Adaptive Multi-Start (AMS) methodology <ref> [3] </ref> consists of two phases: (1) Generate a set of random starting points and call the iterative algorithm, Iter-Alg, on each starting point, thus determining a set of (local minimum) solutions; and (2) Construct adaptive starting points from the best local minimum solutions found so far, and run Iter-Alg on these <p> Thus, the validity of the AMS paradigm is heavily dependent on the specific neighborhood structure that is used. Indeed, the results for AMS versus random multi-start were much less spectacular with FM partitioning than with the other formulations/optimizations reported in <ref> [3] </ref>. See Figure 6 below. 6 Our version of FM is randomized so that more than one result is possible for a given starting point. This entailed some minor changes to the code but did not produce any noticeable change in solution quality. <p> This entailed some minor changes to the code but did not produce any noticeable change in solution quality. Also note that our FM implementation does not take advantage of the enhancements proposed by Krishnamurthy in [22]. The AMS results were derived from an implementation which follows the description in <ref> [3] </ref>. Our AMS implementation generates each new starting point stochastically, based on the k best-known local minima.
Reference: [4] <author> R.M. Brady, </author> <title> "Optimization Strategies Gleaned from Biological Evolution," </title> <booktitle> Nature 317 (1985), </booktitle> <pages> pp. 804-806. </pages>
Reference-contexts: The number of unique local minima plotted is 2,343. For each solution, we plot its cost against its average distance, in terms of single-vertex moves "shift-moves", to all 2,499 other solutions. with local search strategies, <ref> [4] </ref> [25] [24] [29] showed that improved results were possible for the Traveling Salesman Problem (TSP) and partitioning. The basic approach in these works allow an iterative algorithm to improve each individual, either before or while being combined with other individuals to form new solution "offspring".
Reference: [5] <author> T.N. Bui, S. Chaudhuri, F.T. Leighton, and M. Sipser, </author> <title> "Graph Bisection Algorithms with Good Average Case Behavior," </title> <journal> Combinatorica, </journal> <volume> 7 (2) 1987, </volume> <pages> pp. 171-191. </pages>
Reference-contexts: Contracting the modules of each cluster into a single node induces a compacted, or condensed, representation of the original problem which may be easier to solve. Bui et al. <ref> [5] </ref> [6] proposed the "matching-based compaction" (MBC) algorithm, where the edges of a maximal random matching in the netlist graph induce a compacted instance of d n 2 e vertices, and the compaction is iterated until the problem size becomes manageable. <p> Work in the genetic algorithms literature has discussed similar ideas within the context of "hybrid genetic-local search" [24] or "learn as you search" [1]. By combining genetic algorithms 1 This particular instance is from the class of "difficult" bisection inputs proposed by Bui et al. <ref> [5] </ref>. Specifically, a random graph in the class G Bui (n; d; b) has n nodes, is d-regular, and has optimum bisection cost almost certainly equal to b. 5 difficult instances G Bui (100; 4; 10). The number of unique local minima plotted is 2,343. <p> Construct Clustered Netlist. The construction for hypergraphs is similar. We believe that the subroutine Construct Clustered Netlist provides the key to the success of the CAMS algorithm. Previous two-phase FM approaches build their clusters through hierarchical (bottom-up in <ref> [5] </ref>, top-down in [8]), or randomized ([16]) processing of the netlist, and can take a "wrong turn" in the process. CAMS on the other hand, through calls to Construct Clustered Netlist, extracts structural building blocks directly from the actual partitioning solutions. <p> Previous literature on clustering suggests that the clustering / two-phase FM methodology succeeds because of increased average node degree in the condensed netlist representation (cf. discussions in <ref> [5] </ref> and [23]). 9 However, we have observed that good clusterings tend to cluster the densest parts of the hypergraph, leaving intact any nodes which are incident to "widely separated" regions of the hypergraph. <p> Another assumption in previous work is that clusters should be of uniform size (e.g., [27] p. 243, or the original method of <ref> [5] </ref> which employs iterative matching). However, our work shows clearly that uniform cluster size need not be a dominant concern: Table 4 shows some example profiles from a typical CAMS execution on the Primary2 benchmark (jV j = 3014). <p> Although we have concentrated on the improved two-way partitionings afforded by CAMS, it 9 The MBC method <ref> [5] </ref> relies on random matchings, it probabilistically identifies clusters; see also the recent randomized "contraction" strategy of Karger [20] for determining global minimum cuts in a network.
Reference: [6] <author> T. Bui, C. Heigham, C. Jones, and T. Leighton, </author> <title> "Improving the Performance of the Kernighan-Lin and Simulated Annealing Graph Bisection Algorithms," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1989, </year> <pages> pp. 775-778. </pages>
Reference-contexts: Contracting the modules of each cluster into a single node induces a compacted, or condensed, representation of the original problem which may be easier to solve. Bui et al. [5] <ref> [6] </ref> proposed the "matching-based compaction" (MBC) algorithm, where the edges of a maximal random matching in the netlist graph induce a compacted instance of d n 2 e vertices, and the compaction is iterated until the problem size becomes manageable.
Reference: [7] <author> P.K. Chan, M.D.F. Schlag and J. Zien, </author> <title> "Spectral K-Way Ratio Cut Partitioning and Clustering," </title> <booktitle> in Proc. Symp. on Integrated Systems Seattle, </booktitle> <month> March </month> <year> 1993. </year>
Reference-contexts: The table also shows the total number of nets cut by the clustering, the sum of net-degrees ("pins") over all clusters, and the scaled cost value of the clustering (a multi-way generalization of ratio cut, due to Chan et al. <ref> [7] </ref>). Although we have concentrated on the improved two-way partitionings afforded by CAMS, it 9 The MBC method [5] relies on random matchings, it probabilistically identifies clusters; see also the recent randomized "contraction" strategy of Karger [20] for determining global minimum cuts in a network.
Reference: [8] <author> C.K. Cheng and Y.C. Wei, </author> <title> "An Improved Two-Way Partitioning Algorithm with Stable Performance", </title> <journal> IEEE Trans. on CAD 10(12), </journal> <month> Dec. </month> <year> 1991, </year> <pages> pp. 1502-1511. </pages>
Reference-contexts: Using AGG clusters in the two-phase FM approach yields bisections that are an average of 26.9% better than the results of running "flat" FM 200 times. Another 4 strong result is reported by Cheng and Wei <ref> [8] </ref> for partitioning with a 1:3 size ratio bound (as opposed to exact bisection); their stable two-way (STW) partitioning algorithm uses recursive FM-based ratio cut partitioning [30] to achieve a circuit clustering, then applies the two-phase FM methodology. 2.2 Structure in the Solution Space: Adaptive Multi-Start (AMS) The second approach to <p> Construct Clustered Netlist. The construction for hypergraphs is similar. We believe that the subroutine Construct Clustered Netlist provides the key to the success of the CAMS algorithm. Previous two-phase FM approaches build their clusters through hierarchical (bottom-up in [5], top-down in <ref> [8] </ref>), or randomized ([16]) processing of the netlist, and can take a "wrong turn" in the process. CAMS on the other hand, through calls to Construct Clustered Netlist, extracts structural building blocks directly from the actual partitioning solutions. <p> Comparison of CAMS against AMS and random multi-start. 2. Comparison of CAMS against the previous two-phase FM partitioning results in [2]. 3. Comparison of CAMS against the method of Cheng and Wei <ref> [8] </ref>. 4. Comparison of a ratio cut implementation of CAMS against previous ratio cut partitioning results in [30] [15] [10]. <p> Table 1 shows the average solution and best solution of 50 independently started CAMS runs. In these experiments, we use actual module area to conform with the previous two-phase FM results published in [2]. Our third set of experiments compared CAMS against the method of Cheng and Wei <ref> [8] </ref>, which applies two-phase FM using clusters obtained through recursive ratio cut partitioning. We adopt the same experimental methodology as in [8], i.e., we report net cuts subject to a 1:3 size ratio bound, using actual module areas. <p> Our third set of experiments compared CAMS against the method of Cheng and Wei <ref> [8] </ref>, which applies two-phase FM using clusters obtained through recursive ratio cut partitioning. We adopt the same experimental methodology as in [8], i.e., we report net cuts subject to a 1:3 size ratio bound, using actual module areas. It is very important to note that the results in Table 2 can be worse than the corresponding bisection results in Table 1. <p> 66.45 39 39.16 0.78 244.64 Test04 42 43.40 1.05 67.65 42 43.88 0.48 186.93 Test05 42 42.20 0.62 156.50 42 42.00 0.00 466.04 Test06 55 60.85 3.76 142.25 50 50.24 0.81 343.42 26K 65 156.95 64.03 4767.05 49 58.00 17.30 8229.82 Table 2: Comparison with method of Cheng and Wei <ref> [8] </ref> for minimum net cut value subject to 1:3 partition size ratio bound. To achieve an exact comparison, we report minimum, mean and standard deviation for the net cut value. Results of Cheng and Wei are based on 20 runs, while the CAMS results are based on 50 runs. <p> Indeed, for the benchmarks 19ks, Test06 and 26K, the average CAMS solution quality is substantially better than the best solution reported in <ref> [8] </ref>. The results for benchmark 26K, which contains almost 26,000 modules, are especially noteworthy since they may indicate the future success of CAMS as instances become larger.
Reference: [9] <author> N.-C. Chou, </author> <title> private communication, </title> <month> August </month> <year> 1993. </year>
Reference-contexts: Professor C.K. Cheng and Dr. Nan-Chi Chou of UC San Diego provided us with copies of their benchmark examples <ref> [9] </ref>. The anonymous reviewers provided many constructive suggestions and comments on the original draft of this paper. Part of this work (ABK) was performed during a Spring 1993 sabbatical at UC Berkeley; the hospitality of Professor Ernest S.
Reference: [10] <author> J. Cong, L. Hagen and A.B. Kahng, </author> <title> "Net Partitions Yield Better Module Partitions," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Anaheim, </address> <month> June </month> <year> 1992, </year> <pages> pp. 47-52. </pages>
Reference-contexts: Spectral heuristics developed by Hagen and Kahng [15] use eigenvectors to define linear orderings of either modules or nets, and find good partitions by splitting the linear ordering. An extension in <ref> [10] </ref> produced results for ratio cut partitioning corresponding to an average of 28.8% improvement over the method of [30]. The main weakness of FM is that its solution quality is not very "stable", i.e., it is not predictable. <p> Comparison of CAMS against the previous two-phase FM partitioning results in [2]. 3. Comparison of CAMS against the method of Cheng and Wei [8]. 4. Comparison of a ratio cut implementation of CAMS against previous ratio cut partitioning results in [30] [15] <ref> [10] </ref>. Our first experiments compared CAMS against AMS and random multi-start using FM as the underlying optimization. 6 Figure 6 shows the performance of the three approaches for unit-area FM bisection on the SIGDA Layout Synthesis benchmark Primary2. <p> Table 3 shows the average and best solution quality for 50 independent CAMS runs which optimize the ratio cut objective; these results are compared against the best ratio cut results in the literature (quoted for RCut1.0 [30]; EIG1 [15]; EIG1-IG [15]; and IG-Match <ref> [10] </ref> the last three are spectral methods). Here, we use unit module areas, again to maintain comparability against the previous results. For these experiments, we used a version of the FM algorithm that was slightly modified so as to minimize the ratio cut objective instead of the bisection objective.
Reference: [11] <author> J. Cong and M'L. Smith, </author> <title> "A Parallel Bottom-Up Clustering Algorithm with Applications to Circuit Partitioning in VLSI Design," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> Dallas, </address> <month> June </month> <year> 1993, </year> <pages> pp. 755-760. </pages>
Reference-contexts: Other two-phase FM approaches include [16], whose probabilistic RW-ST method finds "natural clusters" via a self-tuning random walk in the circuit netlist (strongly connected regions of the netlist are detected by multiple revisitations of modules within the walk). Cong and Smith <ref> [11] </ref> generalize Bui et al.'s matching to a clique-finding scheme, and provide a parallel implementation. The strongest two-phase FM results for netlist bisection seem to be those of Alpert and Kahng [2], whose AGG algorithm applies geometric clustering to a multi-dimensional spectral embedding of the netlist.
Reference: [12] <author> C.-L. Ding, C.-Y. Ho, and M.J. Irwin, </author> <title> "A New Optimization Driven Clustering Algorithm for Large Circuits (Extended Abstract)," </title> <booktitle> in Proc. 4th ACM/SIGDA Physical Design Workshop, </booktitle> <year> 1993, </year> <pages> pp. 13-19. </pages>
Reference-contexts: Ng et al. in [26] used a similar approach with a clustering algorithm which attempted to minimize the Rent parameter of the condensed netlist; <ref> [12] </ref> also used Rent based clustering to improve the performance of a placement algorithm.
Reference: [13] <author> C.M Fiduccia and R.M. Mattheyses, </author> <title> "A Linear Time Heuristic for Improving Network Partitions," </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference-contexts: Current partitioning approaches can be classified into iterative methods and spectral methods. Iterative methods are more widely used, and involve local perturbation of a current solution with either a greedy or a hill-climbing strategy. The iterative algorithm of Fiduccia and Mattheyses (FM) <ref> [13] </ref> (a variant of [21] that uses linear time per pass) is the method that is most widely used for bisection [23]. Wei and Cheng [30] use an adaptation of [13] to address the ratio cut objective. <p> The iterative algorithm of Fiduccia and Mattheyses (FM) <ref> [13] </ref> (a variant of [21] that uses linear time per pass) is the method that is most widely used for bisection [23]. Wei and Cheng [30] use an adaptation of [13] to address the ratio cut objective. Spectral methods use eigenvectors of the Laplacian of a netlist-derived graph to deterministically find a partitioning solution. The determinism of spectral methods is appealing, and the need for only one run keeps CPU requirements reasonable as instances grow large.
Reference: [14] <author> L. Hagen and A.B. Kahng, </author> <title> "Fast Spectral Methods for Ratio Cut Partitioning and Clustering," </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1991, </year> <pages> pp. 10-13. </pages>
Reference: [15] <author> L. Hagen and A.B. Kahng, </author> <title> "New Spectral Methods for Ratio Cut Partitioning and Clustering," </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> vol. 11, </volume> <month> September </month> <year> 1992, </year> <pages> pp. 1074-1085. </pages>
Reference-contexts: Spectral methods use eigenvectors of the Laplacian of a netlist-derived graph to deterministically find a partitioning solution. The determinism of spectral methods is appealing, and the need for only one run keeps CPU requirements reasonable as instances grow large. Spectral heuristics developed by Hagen and Kahng <ref> [15] </ref> use eigenvectors to define linear orderings of either modules or nets, and find good partitions by splitting the linear ordering. An extension in [10] produced results for ratio cut partitioning corresponding to an average of 28.8% improvement over the method of [30]. <p> Comparison of CAMS against the previous two-phase FM partitioning results in [2]. 3. Comparison of CAMS against the method of Cheng and Wei [8]. 4. Comparison of a ratio cut implementation of CAMS against previous ratio cut partitioning results in [30] <ref> [15] </ref> [10]. Our first experiments compared CAMS against AMS and random multi-start using FM as the underlying optimization. 6 Figure 6 shows the performance of the three approaches for unit-area FM bisection on the SIGDA Layout Synthesis benchmark Primary2. <p> Table 3 shows the average and best solution quality for 50 independent CAMS runs which optimize the ratio cut objective; these results are compared against the best ratio cut results in the literature (quoted for RCut1.0 [30]; EIG1 <ref> [15] </ref>; EIG1-IG [15]; and IG-Match [10] the last three are spectral methods). Here, we use unit module areas, again to maintain comparability against the previous results. <p> Table 3 shows the average and best solution quality for 50 independent CAMS runs which optimize the ratio cut objective; these results are compared against the best ratio cut results in the literature (quoted for RCut1.0 [30]; EIG1 <ref> [15] </ref>; EIG1-IG [15]; and IG-Match [10] the last three are spectral methods). Here, we use unit module areas, again to maintain comparability against the previous results. <p> For many of the benchmarks, the CAMS results are not that much better than the spectral results (of course, the spectral results already average almost 30% better than FM-based ratio cuts). This supports the claim in <ref> [15] </ref> that spectral methods yield high-quality ratio cut partitions.
Reference: [16] <author> L. Hagen and A.B. Kahng, </author> <title> "A New Approach to Effective Circuit Clustering," </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <address> Santa Clara, </address> <month> Nov. </month> <year> 1992, </year> <pages> pp. 422-427. 19 </pages>
Reference-contexts: Ng et al. in [26] used a similar approach with a clustering algorithm which attempted to minimize the Rent parameter of the condensed netlist; [12] also used Rent based clustering to improve the performance of a placement algorithm. Other two-phase FM approaches include <ref> [16] </ref>, whose probabilistic RW-ST method finds "natural clusters" via a self-tuning random walk in the circuit netlist (strongly connected regions of the netlist are detected by multiple revisitations of modules within the walk). <p> The "Best Previous" column contains the best previously-published result and in parentheses gives the algorithm which generated that result. Note that the Test05 bisections in <ref> [16] </ref> and [2] used slightly corrupted module area data and therefore reported incorrect bisection costs. The entries in this table reflect our rerunning RW-ST and AGG on the corrected input file for Test05. Cheng-Wei 91 CAMS Benchmark Best Avg. Runtime (s) Best Avg. <p> Although we have concentrated on the improved two-way partitionings afforded by CAMS, it 9 The MBC method [5] relies on random matchings, it probabilistically identifies clusters; see also the recent randomized "contraction" strategy of Karger [20] for determining global minimum cuts in a network. The random walk approach of <ref> [16] </ref> is another example of probabilistic extraction of clusters. 16 Clustering Number of Total Total Scaled 3 Largest Clusters Passes Clusters Cuts Pins Cost Size 1 Size 2 Size 3 Pass 1 603 1253 4937 0.000974 120 62 4 Pass 2 323 906 3501 0.000903 271 154 5 Pass 3 252
Reference: [17] <author> L. Hagen, A.B. Kahng, F. Kurdahi and C. Ramachandran, </author> <title> "On the Intrinsic Rent Parameter and New Spectra-Based Methods for Wireability Estimation," </title> <booktitle> in Proc. European Design Automation Conf., </booktitle> <address> Hamburg, </address> <month> September </month> <year> 1992, </year> <pages> pp. 202-208. </pages>
Reference-contexts: CAMS is also highly stable in its rapid convergence to a good solution. The success of CAMS for netlist bisection may make recursive bipartitioning-based placement a more appealing methodology. Moreover, the substantial improvement in solution quality may well put into question previous work <ref> [17] </ref> which compared "partitioning-based Rent parameters" of various algorithms and found ratio-cut hierarchies to be superior.
Reference: [18] <author> L.W. Hagen and A.B. Kahng, </author> <title> "Method of Solving Discrete Global Optimization Problems," U.S. Patent Application No. 08/296,808, </title> <type> patent pending (filing date: </type> <month> August </month> <year> 1993). </year>
Reference-contexts: All 1,000 local minima are distinct. For each solution, we plot its cost against its average distance, in terms of single-vertex moves "shift-moves", to all 999 other solutions. 7 Our contribution lies in combining the clustering and AMS philosophies into a new Clustered Adaptive Multi-Start (CAMS) methodology <ref> [18] </ref> which enables the FM algorithm to rapidly return best-known partitioning solutions. As with AMS, CAMS adaptively exploits previous good solutions, except that the solutions are used to find a clustering, and not a "central" solution.
Reference: [19] <author> D.S. Johnson, C.R. Aragon, L.A. McGeoch, and C. Schevon, </author> <title> "Optimization by Simulated Annealing: An Experimental Evaluation Part I, Graph Partitioning," </title> <booktitle> Operations Research 37 (1989), </booktitle> <pages> pp. 865-892. </pages>
Reference-contexts: Each solution was generated from a new random starting point. return the best result [23] [30] in order to attain "stability": we call this the random multi-start approach. The number of runs required to achieve stability via random multi-start grows very rapidly with problem size <ref> [19] </ref> [31]. Despite these shortfalls, iterative algorithms|and FM in particular|still possess many appealing advantages over the spectral approach. These advantages include smaller memory requirements, simplicity, and the ability to handle constraints such as preplacements or variable module areas.
Reference: [20] <author> D. Karger, </author> <title> "Global Min-Cuts in RNC, and Other Ramifications of a Simple Min-Cut Algorithm", </title> <booktitle> Proc. ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: Although we have concentrated on the improved two-way partitionings afforded by CAMS, it 9 The MBC method [5] relies on random matchings, it probabilistically identifies clusters; see also the recent randomized "contraction" strategy of Karger <ref> [20] </ref> for determining global minimum cuts in a network.
Reference: [21] <author> B.W. Kernighan and S. Lin, </author> <title> "An Efficient Heuristic Procedure for Partitioning of Electrical Circuits," </title> <journal> Bell System Technical J., </journal> <month> Feb. </month> <year> 1970. </year>
Reference-contexts: Current partitioning approaches can be classified into iterative methods and spectral methods. Iterative methods are more widely used, and involve local perturbation of a current solution with either a greedy or a hill-climbing strategy. The iterative algorithm of Fiduccia and Mattheyses (FM) [13] (a variant of <ref> [21] </ref> that uses linear time per pass) is the method that is most widely used for bisection [23]. Wei and Cheng [30] use an adaptation of [13] to address the ratio cut objective. Spectral methods use eigenvectors of the Laplacian of a netlist-derived graph to deterministically find a partitioning solution.
Reference: [22] <author> B. Krishnamurthy, </author> <title> "An Improved Min-Cut Algorithm for Partitioning VLSI Networks," </title> <journal> IEEE Trans. on Computers 33(5) (1984), </journal> <pages> pp. 438-446. </pages>
Reference-contexts: This entailed some minor changes to the code but did not produce any noticeable change in solution quality. Also note that our FM implementation does not take advantage of the enhancements proposed by Krishnamurthy in <ref> [22] </ref>. The AMS results were derived from an implementation which follows the description in [3]. Our AMS implementation generates each new starting point stochastically, based on the k best-known local minima.
Reference: [23] <author> T. Lengauer, </author> <title> Combinatorial Algorithms for Integrated Circuit Layout, </title> <address> Wiley-Teubner, </address> <year> 1990. </year>
Reference-contexts: The iterative algorithm of Fiduccia and Mattheyses (FM) [13] (a variant of [21] that uses linear time per pass) is the method that is most widely used for bisection <ref> [23] </ref>. Wei and Cheng [30] use an adaptation of [13] to address the ratio cut objective. Spectral methods use eigenvectors of the Laplacian of a netlist-derived graph to deterministically find a partitioning solution. <p> Indeed, practical implementations of FM use a number of random starting configurations and 2 Layout Synthesis benchmark Primary2 (3014 modules). Each solution was generated from a new random starting point. return the best result <ref> [23] </ref> [30] in order to attain "stability": we call this the random multi-start approach. The number of runs required to achieve stability via random multi-start grows very rapidly with problem size [19] [31]. Despite these shortfalls, iterative algorithms|and FM in particular|still possess many appealing advantages over the spectral approach. <p> Previous literature on clustering suggests that the clustering / two-phase FM methodology succeeds because of increased average node degree in the condensed netlist representation (cf. discussions in [5] and <ref> [23] </ref>). 9 However, we have observed that good clusterings tend to cluster the densest parts of the hypergraph, leaving intact any nodes which are incident to "widely separated" regions of the hypergraph.
Reference: [24] <author> H. Muhlenbein, </author> <title> "Parallel Genetic Algorithms, Population Genetics and Combinatorial Optimization," </title> <booktitle> in Proc. Intl. Conf. on Genetic Algorithms, </booktitle> <year> 1989, </year> <pages> pp. 416-421. </pages>
Reference-contexts: Essentially, (2) attempts to find starting points that are central to the previous solutions, and thus more likely to reach the center of the big valley. Work in the genetic algorithms literature has discussed similar ideas within the context of "hybrid genetic-local search" <ref> [24] </ref> or "learn as you search" [1]. By combining genetic algorithms 1 This particular instance is from the class of "difficult" bisection inputs proposed by Bui et al. [5]. <p> The number of unique local minima plotted is 2,343. For each solution, we plot its cost against its average distance, in terms of single-vertex moves "shift-moves", to all 2,499 other solutions. with local search strategies, [4] [25] <ref> [24] </ref> [29] showed that improved results were possible for the Traveling Salesman Problem (TSP) and partitioning. The basic approach in these works allow an iterative algorithm to improve each individual, either before or while being combined with other individuals to form new solution "offspring". <p> The basic approach in these works allow an iterative algorithm to improve each individual, either before or while being combined with other individuals to form new solution "offspring". Such works mostly remain within the genetic paradigm in that new solutions are derived from only two "parents"; however, Muhlenbein in <ref> [24] </ref> and Ackley in [1] (p. 35) describe multi-parent, voting approaches for forming new solutions. 6 3 Clustered Adaptive Multi-Start (CAMS) Clustering and AMS each improve on the naive (random multi-start) implementation of iterative search.
Reference: [25] <author> H. Muhlenbein, M. Georges-Schleuter, and O. Kramer, </author> <title> "Evolution Algorithms in Combinatorial Optimization," </title> <booktitle> Parallel Computing 7 (1988), </booktitle> <pages> pp. 65-85. </pages>
Reference-contexts: The number of unique local minima plotted is 2,343. For each solution, we plot its cost against its average distance, in terms of single-vertex moves "shift-moves", to all 2,499 other solutions. with local search strategies, [4] <ref> [25] </ref> [24] [29] showed that improved results were possible for the Traveling Salesman Problem (TSP) and partitioning. The basic approach in these works allow an iterative algorithm to improve each individual, either before or while being combined with other individuals to form new solution "offspring". <p> Last, we again note the clear connection between "adaptive multi-start" and the concept of genetic algorithms. As described above, work in genetic algorithms by Muhlenbein et al. <ref> [25] </ref> has touched on ideas related to CAMS in addressing TSP. (The algorithm in [25] constructs a new 17 more compact solution from two parents by clustering common substrings in the parents, i.e., in some sense both the "problem reduction" and the "adaptation" elements are present.) However, our CAMS approach is <p> Last, we again note the clear connection between "adaptive multi-start" and the concept of genetic algorithms. As described above, work in genetic algorithms by Muhlenbein et al. <ref> [25] </ref> has touched on ideas related to CAMS in addressing TSP. (The algorithm in [25] constructs a new 17 more compact solution from two parents by clustering common substrings in the parents, i.e., in some sense both the "problem reduction" and the "adaptation" elements are present.) However, our CAMS approach is basically "non-genetic" in that it uses "multiple parents" and does not rely on any
Reference: [26] <author> T.-K. Ng, J. Oldfield, and V. Pitchumani, </author> <title> "Improvements of a Mincut Partition Algorithm," </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1987, </year> <pages> pp. 479-473. </pages>
Reference-contexts: A two-phase FM methodology results: the FM algorithm is applied to the compacted netlist, and the result is re-expanded into a flat initial configuration for a second FM application. Ng et al. in <ref> [26] </ref> used a similar approach with a clustering algorithm which attempted to minimize the Rent parameter of the condensed netlist; [12] also used Rent based clustering to improve the performance of a placement algorithm.
Reference: [27] <author> K. Roy and C. Sechen, "A Timing-Driven N -Way Chip and Multi-Chip Partitioner," </author> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 240-247. </pages>
Reference-contexts: Another assumption in previous work is that clusters should be of uniform size (e.g., <ref> [27] </ref> p. 243, or the original method of [5] which employs iterative matching). However, our work shows clearly that uniform cluster size need not be a dominant concern: Table 4 shows some example profiles from a typical CAMS execution on the Primary2 benchmark (jV j = 3014).
Reference: [28] <author> L.A. Sanchis, </author> <title> "Multiple-way Network Partitioning," </title> <journal> in IEEE Trans. on Computers, </journal> <volume> 38, </volume> <year> 1989, </year> <pages> pp. 182-196. </pages>
Reference-contexts: This suggests that the present CAMS clusterings may not be well suited for general clustering applications. It is possible that more "natural" clusterings may be obtained by using a CAMS-like methodology with an iterative multi-way clustering approach such as that of Sanchis <ref> [28] </ref>, but this is beyond the scope of the current work. We also note that in practice, CAMS finds its "optimum" solution after only a few iterations, seemingly before any effect of "adaptation" would have a chance to set in.
Reference: [29] <author> N.L.J. Ulder, E.H.L. Aarts, H.-J. Bandelt, P.J.M. van Laarhoven, and E. Pesch, </author> <title> "Genetic Local Search Algorithms for the Traveling Salesman Problem," in Parallel Problem Solving from Nature edited by H.-P. </title> <editor> Schwefel and R. Manner, </editor> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 109-116. </pages>
Reference-contexts: The number of unique local minima plotted is 2,343. For each solution, we plot its cost against its average distance, in terms of single-vertex moves "shift-moves", to all 2,499 other solutions. with local search strategies, [4] [25] [24] <ref> [29] </ref> showed that improved results were possible for the Traveling Salesman Problem (TSP) and partitioning. The basic approach in these works allow an iterative algorithm to improve each individual, either before or while being combined with other individuals to form new solution "offspring".
Reference: [30] <author> Y.C. Wei and C.K. Cheng, </author> <title> "Towards Efficient Hierarchical Designs by Ratio Cut Partitioning," </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1989, </year> <pages> pp. 298-301. </pages>
Reference-contexts: The iterative algorithm of Fiduccia and Mattheyses (FM) [13] (a variant of [21] that uses linear time per pass) is the method that is most widely used for bisection [23]. Wei and Cheng <ref> [30] </ref> use an adaptation of [13] to address the ratio cut objective. Spectral methods use eigenvectors of the Laplacian of a netlist-derived graph to deterministically find a partitioning solution. <p> Spectral heuristics developed by Hagen and Kahng [15] use eigenvectors to define linear orderings of either modules or nets, and find good partitions by splitting the linear ordering. An extension in [10] produced results for ratio cut partitioning corresponding to an average of 28.8% improvement over the method of <ref> [30] </ref>. The main weakness of FM is that its solution quality is not very "stable", i.e., it is not predictable. Figure 1 shows the FM solution cost distribution for the Primary2 benchmark netlist which has 3014 modules. <p> Indeed, practical implementations of FM use a number of random starting configurations and 2 Layout Synthesis benchmark Primary2 (3014 modules). Each solution was generated from a new random starting point. return the best result [23] <ref> [30] </ref> in order to attain "stability": we call this the random multi-start approach. The number of runs required to achieve stability via random multi-start grows very rapidly with problem size [19] [31]. Despite these shortfalls, iterative algorithms|and FM in particular|still possess many appealing advantages over the spectral approach. <p> Another 4 strong result is reported by Cheng and Wei [8] for partitioning with a 1:3 size ratio bound (as opposed to exact bisection); their stable two-way (STW) partitioning algorithm uses recursive FM-based ratio cut partitioning <ref> [30] </ref> to achieve a circuit clustering, then applies the two-phase FM methodology. 2.2 Structure in the Solution Space: Adaptive Multi-Start (AMS) The second approach to improving iterative methods has centered on the careful choice of initial configuration for each execution of the optimization algorithm. <p> Comparison of CAMS against AMS and random multi-start. 2. Comparison of CAMS against the previous two-phase FM partitioning results in [2]. 3. Comparison of CAMS against the method of Cheng and Wei [8]. 4. Comparison of a ratio cut implementation of CAMS against previous ratio cut partitioning results in <ref> [30] </ref> [15] [10]. Our first experiments compared CAMS against AMS and random multi-start using FM as the underlying optimization. 6 Figure 6 shows the performance of the three approaches for unit-area FM bisection on the SIGDA Layout Synthesis benchmark Primary2. <p> Our final set of experiments tested CAMS against previous ratio cut partitioning results. Table 3 shows the average and best solution quality for 50 independent CAMS runs which optimize the ratio cut objective; these results are compared against the best ratio cut results in the literature (quoted for RCut1.0 <ref> [30] </ref>; EIG1 [15]; EIG1-IG [15]; and IG-Match [10] the last three are spectral methods). Here, we use unit module areas, again to maintain comparability against the previous results.
Reference: [31] <author> Y.C. Wei and C.K. Cheng, </author> <title> "A Two-Level Two-Way Partitioning Algorithm," </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 516-519. 20 </pages>
Reference-contexts: Each solution was generated from a new random starting point. return the best result [23] [30] in order to attain "stability": we call this the random multi-start approach. The number of runs required to achieve stability via random multi-start grows very rapidly with problem size [19] <ref> [31] </ref>. Despite these shortfalls, iterative algorithms|and FM in particular|still possess many appealing advantages over the spectral approach. These advantages include smaller memory requirements, simplicity, and the ability to handle constraints such as preplacements or variable module areas.
References-found: 31

