URL: ftp://theory.lcs.mit.edu/pub/tcryptol/old-05.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/OLD/old-05.html
Root-URL: 
Title: On Yao's XOR-Lemma  
Author: Oded Goldreich Noam Nisan Avi Wigderson 
Address: Rehovot,  Jerusalem, Israel.  Jerusalem, Israel.  
Affiliation: Department of Computer Science and Applied Mathematics, Weizmann Institute of Science,  Institute for Computer Science, Hebrew University,  Institute for Computer Science, Hebrew University,  
Note: Work done in part while the authors were visiting BRICS, Basic Research in Computer Science, Center of the Danish National Research Foundation.  Israel. Partially supported by grant No. 92-00226 from the United States Israel Binational Science Foundation (BSF), Jerusalem, Israel.  
Date: March 1995  
Abstract: A fundamental Lemma of Yao states that computational weak-unpredictability of functions gets amplified if the results of several independent instances are XOR together. We survey two known proofs of Yao's Lemma and present a third alternative proof. The third proof proceeds by first proving that a function constructed by concatenating the values of the function on several independent instances is much more unpredictable, with respect to specified complexity bounds, than the original function. This statement turns out to be easier to prove than the XOR-Lemma. Using a result of Goldreich and Levin and some elementary observation, we derive the XOR-Lemma. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> O. Goldreich. </author> <title> Foundation of Cryptography Class Notes, </title> <booktitle> Spring 1989, </booktitle> <institution> Computer Science Department, Technion, Haifa, Israel. </institution>
Reference-contexts: Namely, Lemma 1 (XOR Lemma - Yao's version): Let P and X = fX n g be as in Definition 1, s : IN7! IN be a size function, and ffi : IN7! <ref> [1; +1] </ref> be a function that is bounded-away-from-1 (i.e., jffi (n)j &lt; 1 1 p (n) , for some polynomial p and all sufficiently large n's). <p> In addition, all functions referred to in the statement of the lemma (i.e., s; t : IN 7! IN, ffi : IN 7! <ref> [1; +1] </ref> and * : IN 7! [1; +1]) need to be computable within corresponding time bounds. <p> In addition, all functions referred to in the statement of the lemma (i.e., s; t : IN 7! IN, ffi : IN 7! <ref> [1; +1] </ref> and * : IN 7! [1; +1]) need to be computable within corresponding time bounds. Analogues of the two first versions can be proven, provided that one can construct random examples of the distribution (X n ; P (X n )) within the stated (uniform) complexity bounds (and in particular in polynomial-time). <p> we get a circuit C 0 m (z) = C n (y; z) of size s (n) + l &lt; s 2 (m), having greater correlation with C 2 than that allowed by the Lemma's hypothesis. 2 By Claim 4.1, the value T (y)=ffi 2 (m) lies in the interval <ref> [1; +1] </ref>; and, on the other hand (by Eq. (1)), it has good correlation with P 1 . In the rest of the argument we "transform" the function T into a circuit which contradicts the hypothesis concerning P 1 . <p> In the rest of the argument we "transform" the function T into a circuit which contradicts the hypothesis concerning P 1 . Suppose for a moment, that one could compute T (y), on input y. Then, one would get an algorithm with output in <ref> [1; +1] </ref> that has correlation ffi (n)=ffi 2 (m) &gt; ffi 1 (l) with P 1 over Y l , which is almost 4 in contradiction to the hypothesis of the lemma. The same holds if one can approximate T (y) "well enough" using circuits of size s 1 (l). <p> We note that this output is at least ffi (n) *(n) ffi 2 (m) = ffi 1 (l) correlated with P 1 which almost contradicts the hypothesis of the Lemma. The only problem is that the resulting circuit has output in the interval <ref> [1; +1] </ref> 4 See discussion below; what is "wrong" is that the output is in the [1; +1] interval rather than being a binary value in f1g. 7 instead of a binary output in f1g. <p> The only problem is that the resulting circuit has output in the interval <ref> [1; +1] </ref> 4 See discussion below; what is "wrong" is that the output is in the [1; +1] interval rather than being a binary value in f1g. 7 instead of a binary output in f1g. This problem is easily corrected by modifying the circuit so that on output r 2 [1; +1] it outputs +1 with probability (1 + r)=2 and 1 otherwise. <p> <ref> [1; +1] </ref> 4 See discussion below; what is "wrong" is that the output is in the [1; +1] interval rather than being a binary value in f1g. 7 instead of a binary output in f1g. This problem is easily corrected by modifying the circuit so that on output r 2 [1; +1] it outputs +1 with probability (1 + r)=2 and 1 otherwise. Noting that this modification preserves the correlation of the circuit, we derive a contradiction to the hypothesis concerning P 1 . <p> Definition 2 (hard-core of a predicate): Let f : f0; 1g fl 7! f0; 1g be a Boolean predicate, s : IN7! IN be a size function, and * : IN7! <ref> [0; 1] </ref> be a function. * We say that a sequence of sets, S = fS n f0; 1g n g, is a hard-core of f with respect to s ()-size circuits families and advantage *() if for every n and every circuit C n of size at most s (n), <p> Namely, Lemma 6 (existence of hard-core for unpredictable predicates): Let f : f0; 1g fl 7! f0; 1g be a Boolean predicate, s : IN 7! IN be a size function, and : IN 7! <ref> [0; 1] </ref> be a non-negligible function (i.e., (n) &gt; 1=poly (n)), so that for every n and every circuit C n of size at most s (n) - Prob [C n (U n ) = f (U n )] 1 (n) where U n is a random variable uniformly distributed on <p> Then, for every function * : IN7! <ref> [0; 1] </ref>, the function f has a hard-core of density 0 () with respect to s 0 ()-size circuits families and advantage *(), where 0 (n) def def = s (n)=poly (n=*(n)). The proof of Lemma 6 is given in the Appendix. <p> Invoking a result of Goldreich and Levin [3], the XOR-Lemma follows. The Concatenation Lemma Lemma 7 (concatenation lemma): Let P , X = fX n g, s : IN 7! IN, and ffi : IN 7! <ref> [1; +1] </ref> be as in Lemma 1. <p> For years, the first author has considered the proof of the XOR Lemma (even for this setting) too complicated to be presented in class; whereas, a proof of the Concatenation Lemma (for this setting) has appeared in his classnotes <ref> [1] </ref> (see also [2]). 12 Proof: Assume to the contradiction that C = fC n g is a circuit family that contradicts the claim of the lemma. <p> Deriving the XOR Lemma from the Concatenation Lemma Using the techniques of [3], we obtain the following Lemma 9 (Goldreich and Levin): Let F : f0; 1g fl 7! f0; 1g fl , p : IN 7! <ref> [0; 1] </ref>, and s : IN 7! IN, and let X = fX n g be as in Lemma 1.
Reference: [2] <author> O. Goldreich. </author> <title> Foundation of Cryptography Fragments of a Book, </title> <month> February </month> <year> 1995. </year> <note> Available from the Electronic Colloquium on Computational Complexity (ECCC), http://www.eccc.uni-trier.de/eccc/. </note>
Reference-contexts: For years, the first author has considered the proof of the XOR Lemma (even for this setting) too complicated to be presented in class; whereas, a proof of the Concatenation Lemma (for this setting) has appeared in his classnotes [1] (see also <ref> [2] </ref>). 12 Proof: Assume to the contradiction that C = fC n g is a circuit family that contradicts the claim of the lemma.
Reference: [3] <author> O. Goldreich and L.A. Levin. </author> <title> "A Hard-Core Predicate for all One-Way Functions", </title> <booktitle> in ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 25-32, </pages> <year> 1989. </year>
Reference-contexts: Loosely speaking, it is hard 1 Here the term `hard-core' means a subset of the predicate's domain. This meaning is certainly different from the usage of the term `hard-core' in <ref> [3] </ref>, where it means a strongly-unpredicatable predicate associated with a one-way function. 1 to predict the value of the function with probability substantially higher than ffi t , where ffi is a bound on the probability of predicting the predicate and t is the number of instances concatenated. <p> Not surprisingly, this statement turns out to be easier to prove than the XOR-Lemma. Using a result of Goldreich and Levin <ref> [3] </ref> and some elementary observation, we derive the XOR-Lemma. We remark that Levin's proof yields a stronger quantitative statement of the XOR Lemma than the other two proofs. In fact, the quantitative statement provided by Levin's proof is almost optimal. <p> We stress that the usage of the term `hard-core' in the above definition (and in the rest of this section) is different from the usage of this term in <ref> [3] </ref>. Observe that every strongly-unpredictable predicate has a hard-core of density 1 (i.e., the entire domain itself). Impagliazzo proves that also weakly-unpredicatabe predicates have hard-core sets, but these have density related to the amount of unpredictability. <p> This statement is a generalization of another theorem due to Yao [9], hereafter called the Concatenation Lemma. Invoking a result of Goldreich and Levin <ref> [3] </ref>, the XOR-Lemma follows. The Concatenation Lemma Lemma 7 (concatenation lemma): Let P , X = fX n g, s : IN 7! IN, and ffi : IN 7! [1; +1] be as in Lemma 1. <p> Deriving the XOR Lemma from the Concatenation Lemma Using the techniques of <ref> [3] </ref>, we obtain the following Lemma 9 (Goldreich and Levin): Let F : f0; 1g fl 7! f0; 1g fl , p : IN 7! [0; 1], and s : IN 7! IN, and let X = fX n g be as in Lemma 1. <p> Employing the techniques of <ref> [3] </ref>, we obtain a circuit C (of size at most a poly (n=p (n)) factor larger than C 0 ) which, for every x 2 S, outputs 14 F (x) with probability at least c 0 (q (n)=n) 2 (where the constant c 0 &gt; 0 is determined in the proof <p> obtain a circuit C (of size at most a poly (n=p (n)) factor larger than C 0 ) which, for every x 2 S, outputs 14 F (x) with probability at least c 0 (q (n)=n) 2 (where the constant c 0 &gt; 0 is determined in the proof of <ref> [3] </ref> according to Chebishev's Inequality). 7 Thus, C satisfies Prob [C (X n ) = F (X n )] Prob [C (X n ) = F (X n ) ^ X n 2 S] = Prob [X n 2 S] Prob [C (X n ) = F (X n )jX n <p> Thus we confine ourselves to presenting a uniform-complexity version of the Concatenation Lemma. Lemma 10 (Concatenation Lemma uniform complexity version): Let P; X; s; ffi; t and F (t) be as in Lemma 7. 7 The algorithm in <ref> [3] </ref> will actually retrieve all values ff 2 f0; 1g ` for which the correlation of C 0 (x; U ` ) and IP 2 (ff; U ` ) is at least q (n).
Reference: [4] <author> J. Hastad, R. Impagliazzo, L.A. Levin and M. Luby, </author> <title> "Construction of Pseudorandom Generator from any One-Way Function", </title> <type> manuscript, </type> <year> 1993. </year> <note> See preliminary versions by Impagliazzo et. </note> <editor> al. </editor> <booktitle> in 21st STOC and Hastad in 22nd STOC. </booktitle>
Reference: [5] <author> R. Impagliazzo, </author> <month> manuscript </month> <year> 1994. </year>
Reference-contexts: We do not know whether the XOR Lemma holds in the uniform-complexity model in case this sampling condition is not satisfied. Recently, Impagliazzo has shown that, in the non-uniform model, any weakly-unpredictable predicate has a "hard-core" 1 on which it is almost unpredictable <ref> [5] </ref>. Using this result, Im-pagliazzo has presented an alternative proof for the general case of the XOR-Lemma within the non-uniform model. We present this proof in Section 4. A third proof for the general case of the XOR-Lemma is presented in Section 5.
Reference: [6] <author> L.A. Levin, </author> <title> "One-Way Functions and Pseudorandom Generators", </title> <journal> Combinatorica, </journal> <volume> Vol. 7, No. 4, </volume> <year> 1987, </year> <pages> pp. 357-363. </pages>
Reference-contexts: Furthermore, in contrary to common beliefs, the lemma itself has not appeared in Yao's original paper "Theory and Applications of Trapdoor Functions" [9] (but rather in oral presentations of his work). A proof of Yao's XOR Lemma has first appeared in Levin's paper <ref> [6] </ref>. Levin's proof is for the context of one-way functions and is carried through in a uniform model of complexity. The presentation of this proof in [6] is very succinct and does not decouple the basic approach from difficulties arising from the uniform-complexity model. <p> A proof of Yao's XOR Lemma has first appeared in Levin's paper <ref> [6] </ref>. Levin's proof is for the context of one-way functions and is carried through in a uniform model of complexity. The presentation of this proof in [6] is very succinct and does not decouple the basic approach from difficulties arising from the uniform-complexity model. In Section 3, we show that Levin's basic approach suffices for the general case (mentioned above) provided it is stated in terms of non-uniform complexity.
Reference: [7] <author> L.A. Levin, </author> <title> "Average Case Complete Problems", </title> <journal> SICOMP, </journal> <volume> Vol. 15, </volume> <year> 1986, </year> <pages> pp. 285-286. </pages>
Reference: [8] <author> N. Nisan, S. Rudich, and M. Saks. </author> <booktitle> in 35th FOCS, </booktitle> <year> 1994. </year>
Reference-contexts: )] p (n) def 1 + ffi (n) 11 (conclusion) Then, for every function * : IN7! [0; +1], for every n and for every poly ( *(n) s (n)-size circuit C 0 : Prob [C 0 (X (t) n ) = F (t) (X (t) Remark: Nisan et. al. <ref> [8] </ref> have used the XOR-Lemma in order to derive the Concatenation Lemma. Our feeling is that the Concatenation Lemma is more "basic" than the XOR Lemma, and thus that their strategy is not very natural.
Reference: [9] <author> A.C. Yao, </author> <title> "Theory and Application of Trapdoor Functions", </title> <booktitle> in 23st FOCS, </booktitle> <pages> pages 80-91, </pages> <year> 1982. </year>
Reference-contexts: Furthermore, in contrary to common beliefs, the lemma itself has not appeared in Yao's original paper "Theory and Applications of Trapdoor Functions" <ref> [9] </ref> (but rather in oral presentations of his work). A proof of Yao's XOR Lemma has first appeared in Levin's paper [6]. Levin's proof is for the context of one-way functions and is carried through in a uniform model of complexity. <p> First it is shown that the success probability, of feasible algorithms which try to predict the values of a predicate on several unrelated arguments, decreases exponentially with the number of arguments. This statement is a generalization of another theorem due to Yao <ref> [9] </ref>, hereafter called the Concatenation Lemma. Invoking a result of Goldreich and Levin [3], the XOR-Lemma follows. The Concatenation Lemma Lemma 7 (concatenation lemma): Let P , X = fX n g, s : IN 7! IN, and ffi : IN 7! [1; +1] be as in Lemma 1.
References-found: 9

