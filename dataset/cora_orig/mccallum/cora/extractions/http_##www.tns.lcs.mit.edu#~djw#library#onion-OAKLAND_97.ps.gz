URL: http://www.tns.lcs.mit.edu/~djw/library/onion-OAKLAND_97.ps.gz
Refering-URL: http://www.tns.lcs.mit.edu/~djw/library/
Root-URL: 
Title: Symposium on Security and Privacy Anonymous Connections and Onion Routing  
Author: Paul F. Syverson, David M. Goldschlag, and Michael G. Reed, "Anonymous Connections and Onion Paul F. Syverson, David M. Goldschlag, and Michael G. Reed 
Affiliation: Naval Research Laboratory  
Note: Routing" to appear 1997 IEEE  
Abstract: Onion Routing provides anonymous connections that are strongly resistant to both eavesdropping and traffic analysis. Unmodified Internet applications can use these anonymous connections by means of proxies. The proxies may also make communication anonymous by removing identifying information from the data stream. Onion routing has been implemented on Sun Solaris 2.X with proxies for Web browsing, remote logins, and e-mail. This paper's contribution is a detailed specification of the implemented onion routing system, a vulnerability analysis based on this specification, and performance results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> The Anonymizer. </institution> <note> http://www.anonymizer.com </note>
Reference-contexts: That requires removing information that identifies him from his requests to Web servers, and removing information from the connection itself that may identify him. Hence, anonymous Web browsing uses anonymized communication over anonymous connections. The Anonymizer <ref> [1] </ref> only anonymizes the data stream, not the connection itself. So it does not prevent traffic analysis attacks like tracking data as it moves through the network. A preliminary description of onion routing is found in [10, 13]. <p> If you had a secured connection to an onion router you trust, it could use our onion router as one of several intermediate routers to further complicate traffic analysis. Remote use of our site provides no greater anonymity than is provided by the Anonymizer <ref> [1] </ref>. In our experimental onion routing network, five onion routers run on a single Sun UltraSparc 2270. This machine has two processors, and 256MB of memory. Anonymous connections are routed through a random sequence of five onion routers. 2 Connection setup time should be comparable to a more distributed topology.
Reference: [2] <author> T. Acar, B. S. Kaliski, Jr., and ~C. Ko~c. </author> <title> Analyzing and Comparing Montgomery Multiplication Algorithms, </title> <journal> IEEE Micro, </journal> <volume> 16(3) </volume> <pages> 26-33, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Onion routing's overhead is mainly due to public key cryptography and is incurred while setting up an anonymous connection. On an UltraSparc running a fast implementation of RSA <ref> [2] </ref>, a single public key decryption of a 1024 bit plaintext block using a 1024 bit private key and a 1024 bit modulus takes 90 milliseconds. Encryption is much faster, because the public keys are only 16 bits long. (This is why RSA signature verification is cheaper than signing).
Reference: [3] <author> D. Chaum. </author> <title> Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms, </title> <journal> Communications of the ACM , v. </journal> <volume> 24, </volume> <editor> n. </editor> <volume> 2, </volume> <month> Feb. </month> <year> 1981, </year> <pages> pp. 84-88. </pages>
Reference-contexts: Carrying the DESTROY message through the anonymous connection and garbage collecting dormant anonymous connections later would be ideal, but we do not know how to efficiently insert control information into a raw data channel, especially considering our layered encryption. 7 8 Related Work Chaum <ref> [3] </ref> defines a layered object that routes data through intermediate nodes, called mixes. These in 7 One could imagine sending control information by inserting some random cell into the data stream.
Reference: [4] <author> D. Chaum, </author> <title> The Dining Cryptographers Problem: </title> <journal> Unconditional Sender and Recipient Untraceabil-ity, Journal of Cryptology, </journal> <volume> 1/1, </volume> <year> 1988, </year> <pages> pp. 65-75. </pages>
Reference: [5] <author> S. Chuang. </author> <title> Security Management of ATM Networks, </title> <type> Ph.D. thesis, </type> <institution> in progress, Cambridge University. </institution>
Reference-contexts: Goldschlag, and Michael G. Reed, "Anonymous Connections and Onion Routing" to appear 1997 IEEE Symposium on Security and Privacy termediate nodes may reorder, delay, and pad traffic to complicate traffic analysis. Our onion routers are based on mixes. Some work has been done using mixes in ATM networks <ref> [5] </ref>. Anonymous Remailers like [7, 11] use mixes to provide anonymous e-mail services. Some invent an address through which mail can be forwarded back to the original sender.
Reference: [6] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP, </title> <booktitle> Volume 1: Principles, Protocols, and Architecture, </booktitle> <publisher> Prentice-Hall, </publisher> <address> Engelwood Cliffs, New Jersey, </address> <year> 1995. </year>
Reference-contexts: Any identifying information must be passed as data through the anonymous connections. Our implementation of anonymous connections, onion routing, provides protection against eavesdropping as a side effect. Onion routing provides bidirectional and near real-time communication similar to TCP/IP socket connections <ref> [6] </ref>. The anonymous connections can substitute for sockets in a wide variety of unmodified Internet applications by means of proxies. The proxies may also remove identifying information from the data stream, to make communication anonymous too.
Reference: [7] <editor> L. Cottrell. Mixmaster and Remailer Attacks, </editor> <address> http://obscura.obscura.com/~loki/remailer /remailer-essay.html </address>
Reference-contexts: The anonymous connections can substitute for sockets in a wide variety of unmodified Internet applications by means of proxies. The proxies may also remove identifying information from the data stream, to make communication anonymous too. Although onion routing may be used for anonymous communication, it differs from anonymous remailers <ref> [7, 11] </ref> in two ways: Communication is real-time and bidirectional, and the anonymous connections are application independent. Onion routing's anonymous connections can support anonymous mail as well as other applications. For example, onion routing may be used for anonymous Web browsing. <p> Reed, "Anonymous Connections and Onion Routing" to appear 1997 IEEE Symposium on Security and Privacy termediate nodes may reorder, delay, and pad traffic to complicate traffic analysis. Our onion routers are based on mixes. Some work has been done using mixes in ATM networks [5]. Anonymous Remailers like <ref> [7, 11] </ref> use mixes to provide anonymous e-mail services. Some invent an address through which mail can be forwarded back to the original sender.
Reference: [8] <author> Whitfield Diffie, Paul C. van Oorschot, and Michael J. Wiener. </author> <title> Authentication and Authenticated Key Exchanges. Designs, Codes, </title> <journal> and Cryptography, </journal> <volume> 2 </volume> <pages> 107-125, </pages> <year> 1992. </year>
Reference-contexts: The keying phase ensues, using STS <ref> [8] </ref> which will generate two DES 56-bit keys. The link encryption over the longstanding connections is done by DES OFB with IVs of 0 and these two keys (one for data in each direction).
Reference: [9] <author> A. Fasbender, D. Kesdogan, O. Kubitz. </author> <title> Variable and Scalable Security: Protection of Location Information in Mobile IP, </title> <booktitle> 46th IEEE Vehicular Technology Society Conference, </booktitle> <address> Atlanta, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: Remailers work in a store and forward manner at the mail application layer, by stripping off headers at each mix and forwarding the mail message to the next mix. Some remailers provide confirmation of delivery. In <ref> [9] </ref>, a structure similar to an onion is used to forward individual IP packets through a network. By maintaining tracking information at each router, ICMP error messages can be moved back along the hidden route. Essentially, a connection is built for each packet in a connectionless service.
Reference: [10] <author> D. Goldschlag, M. Reed, P. Syverson. </author> <title> Hiding Routing Information, in Information Hiding, </title> <editor> R. Anderson, ed., </editor> <volume> LNCS vol. 1174, </volume> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 137-150. </pages>
Reference-contexts: Hence, anonymous Web browsing uses anonymized communication over anonymous connections. The Anonymizer [1] only anonymizes the data stream, not the connection itself. So it does not prevent traffic analysis attacks like tracking data as it moves through the network. A preliminary description of onion routing is found in <ref> [10, 13] </ref>. Those papers mainly present the goals of onion routing, and some of the basic structure of our solution. However, they do not give enough detail to properly evaluate the security of onion routing.
Reference: [11] <author> C. Gulcu and G. Tsudik. </author> <title> Mixing Email with Babel, </title> <booktitle> 1996 Symposium on Network and Distributed System Security , San Diego, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: The anonymous connections can substitute for sockets in a wide variety of unmodified Internet applications by means of proxies. The proxies may also remove identifying information from the data stream, to make communication anonymous too. Although onion routing may be used for anonymous communication, it differs from anonymous remailers <ref> [7, 11] </ref> in two ways: Communication is real-time and bidirectional, and the anonymous connections are application independent. Onion routing's anonymous connections can support anonymous mail as well as other applications. For example, onion routing may be used for anonymous Web browsing. <p> Reed, "Anonymous Connections and Onion Routing" to appear 1997 IEEE Symposium on Security and Privacy termediate nodes may reorder, delay, and pad traffic to complicate traffic analysis. Our onion routers are based on mixes. Some work has been done using mixes in ATM networks [5]. Anonymous Remailers like <ref> [7, 11] </ref> use mixes to provide anonymous e-mail services. Some invent an address through which mail can be forwarded back to the original sender.
Reference: [12] <author> A. Pfitzmann, B. Pfitzmann, and M. Waidner. ISDN-Mixes: </author> <title> Untraceable Communication with Very Small Bandwidth Overhead, </title> <booktitle> GI/ITG Conference: Communication in Distributed Systems, </booktitle> <address> Mannheim Feb, 1991, Informatik-Fachberichte 267, </address> <publisher> Springer-Verlag, </publisher> <month> Heildelberg </month> <year> 1991, </year> <pages> pp. 451-463. </pages>
Reference-contexts: In [9], a structure similar to an onion is used to forward individual IP packets through a network. By maintaining tracking information at each router, ICMP error messages can be moved back along the hidden route. Essentially, a connection is built for each packet in a connectionless service. In <ref> [12] </ref>, mixes are used to provide untraceable communication in an ISDN network. As described there, in an ISDN system, each ISDN line is assigned to a particular local switch (i.e., local exchange), and switches are interconnected by a (long distance) network. <p> The long distance endpoints of the connection are then mated to complete the call. (Notice that observers can tell which local switches are connected.) This approach relies upon two unique features of ISDN switches as described in <ref> [12] </ref>.
Reference: [13] <author> M. G. Reed, P. F. Syverson, and D. M. Goldschlag. </author> <title> Proxies for Anonymous Routing, </title> <booktitle> Proc. 12th Annual Computer Security Applications Conference, </booktitle> <address> San Diego, CA, </address> <publisher> IEEE CS Press, </publisher> <month> December, </month> <year> 1996, </year> <pages> pp. 95-104. </pages>
Reference-contexts: Hence, anonymous Web browsing uses anonymized communication over anonymous connections. The Anonymizer [1] only anonymizes the data stream, not the connection itself. So it does not prevent traffic analysis attacks like tracking data as it moves through the network. A preliminary description of onion routing is found in <ref> [10, 13] </ref>. Those papers mainly present the goals of onion routing, and some of the basic structure of our solution. However, they do not give enough detail to properly evaluate the security of onion routing.
Reference: [14] <author> B. Schneier. </author> <title> Applied Cryptography: Protocols, Algorithms and Source Code in C, </title> <publisher> John Wiley and Sons, </publisher> <year> 1994. </year> <month> 11 </month>
Reference-contexts: This threat model directly motivates certain design decisions in onion routing. Because traffic is visible, the headers and payload of all traffic are essentially link encrypted between onion routers so the same data looks different when traveling between onion routers. Because traffic can be modified, stream ciphers <ref> [14] </ref> are used for encryption. Inserting, deleting, modifying, or replaying traffic anywhere en route will disrupt the stream and will result in persistent unrecognizable changes downstream; thus, data cannot be tracked moving through the system. However, the plaintext will be unreadable by the responder, causing a denial-of-service attack. <p> the first 16 bytes for RC4 keys). 3 Since we use RSA public key cryptography with a modulus size of 1024-bits, the plaintext block size is 1024 bits and must be strictly less than the modulus 3 Details on the cryptographic operations used in this paper can be found in <ref> [14] </ref>. 6 Paul F. Syverson, David M. Goldschlag, and Michael G. Reed, "Anonymous Connections and Onion Routing" to appear 1997 IEEE Symposium on Security and Privacy numerically. To avoid problems, we force this relation by putting the most-significant bit first and setting it to 0 (the leading 0 above).
References-found: 14

