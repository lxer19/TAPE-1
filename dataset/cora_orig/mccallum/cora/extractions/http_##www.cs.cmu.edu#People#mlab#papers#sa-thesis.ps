URL: http://www.cs.cmu.edu/People/mlab/papers/sa-thesis.ps
Refering-URL: http://www.cs.cmu.edu/People/mlab/papers/papers.html
Root-URL: 
Title: Robotic Manipulation for Parts Transfer and Orienting: Mechanics, Planning, and Shape Uncertainty  CMU-RI-TR-96-38  
Author: Srinivas Akella 
Degree: Submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy in  
Note: Copyright c 1996 by Srinivas Akella. All rights reserved.  
Address: Pittsburgh, Pennsylvania 15213  
Affiliation: Robotics The Robotics Institute Carnegie Mellon University  
Date: December 1996  
Abstract: This research was funded in part by the Robotics Institute and by NSF under grants IRI-9114208, IRI-9213993, and IRI-9318496 (with ARPA). The views and conclusions contained in this document are those of the author and should not be interpreted as representing the official policies, either expressed or implied, of the Robotics Institute, NSF, ARPA, or the U. S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Abell and M. A. Erdmann. </author> <title> Stably supported rotations of a planar polygon with two frictionless contacts. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 3 411-418, </pages> <address> Pittsburgh, PA, </address> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: When the contact state causes the object velocity to be uniquely determined from the manipulator velocity, these first-order stability cells can be used to plan whole-arm manipulation tasks. Abell and Erdmann <ref> [1] </ref> analyze the use of two frictionless fingers to stably support and rotate a polygonal object in a gravitational field. Akella et al. [4] describe a planar manipulation system consisting of a one joint actuator positioned over a conveyor belt.
Reference: [2] <author> E. W. Aboaf, S. M. Drucker, and C. G. Atkeson. </author> <title> Task-level robot learning: Juggling a tennis ball more accurately. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1290-1295, </pages> <address> Scottsdale, AZ, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Swanson, Burridge, and Koditschek [174] analyze the motion of a part subjected to a vibratory juggling motion and indicate conditions under which all initial orientations of the part acquire a unique stable motion. Juggling, throwing, and striking provide dramatic examples of nonprehensile manipulation. Aboaf, Drucker, and Atkeson <ref> [2] </ref> developed a robot system that juggles a tennis ball in three dimensions and uses learning to improve its performance. Buehler, Koditschek, and Kindlmann [38] describe "mirror" algorithms to control a one degree of freedom robot system that can stably juggle one or two pucks simultaneously in a vertical plane.
Reference: [3] <author> Y. Aiyama, M. Inaba, and H. Inoue. </author> <title> Pivoting: A new method of graspless manipulation of object by robot fingers. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 136-143, </pages> <address> Yokohama, Japan, </address> <year> 1993. </year>
Reference-contexts: Kao and Cutkosky [101] explicitly consider sliding of robot fingers on an object and plan finger motions so the object follows a desired trajectory. Sawasaki, Inaba, and Inoue [161] used stand-up and tumbling operations with fingers to manipulate objects in contact with a support surface. Aiyama, Inaba, and Inoue <ref> [3] </ref> use pivoting operations, where they manipulate an object supported on a surface by rotating the object about its vertices. Nagata [130] developed a parallel-jaw gripper with a turntable on each jaw and used it to perform operations such as sliding a block on a plane.
Reference: [4] <author> S. Akella, W. H. Huang, K. M. Lynch, and M. T. Mason. </author> <title> Planar manipulation on a conveyor with a one joint robot. </title> <editor> In G. Giralt and G. Hirzinger, editors, </editor> <booktitle> Robotics Research: The Seventh International Symposium, </booktitle> <pages> pages 265-276, </pages> <address> London, UK, 1996. </address> <publisher> Springer. </publisher>
Reference-contexts: Abell and Erdmann [1] analyze the use of two frictionless fingers to stably support and rotate a polygonal object in a gravitational field. Akella et al. <ref> [4] </ref> describe a planar manipulation system consisting of a one joint actuator positioned over a conveyor belt. They show that using the conveyor drift field and pushing motions of the actuator, the robot can feed any polygonal part to some selected goal position and orientation.
Reference: [5] <author> S. Akella, W. H. Huang, K. M. Lynch, and M. T. Mason. </author> <title> Sensorless parts feeding with a one joint robot. </title> <booktitle> In Second Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> Toulouse, France, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: The main result of this chapter is that the sensorless 1JOC can orient polygons, up to symmetry in the underlying mechanics. A preliminary description of our work with the sensorless 1JOC appeared as <ref> [5] </ref>. 4.1 Sensorless 1JOC Model This section describes the sensorless 1JOC, defines the primitive actions employed, and addresses the main issue, which is the system's ability to orient polygons. The main argument is to show that we can use the sensorless 1JOC to implement Goldberg's normal push actions [76].
Reference: [6] <author> S. Akella and M. T. Mason. </author> <title> Posing polygonal objects in the plane by pushing. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2255-2262, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: In the work reported in Chapter 2, we use linear normal pushes to orient and translate the object. This work was reported earlier in Akella and Mason <ref> [6] </ref>. Work by Lynch and Mason ([112]; [116]) is most closely related to our work on parts transfer.
Reference: [7] <author> S. Akella and M. T. Mason. </author> <title> Parts orienting by push-aligning. </title> <booktitle> In 1995 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 414-420, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Joskowicz, Sacks, and Srinivasan [100] compute the variations in kinematic behavior of mechanisms from the tolerance specifications of their parts. Toleranced parts in contact have multiple and changing contacts which makes their behavior complex. The shape uncertainty model used in this thesis was earlier described in Akella and Mason <ref> [7] </ref>. It can be viewed as a parametric tolerance model which permits variations in both the orientations and positions of part edges. <p> These principles and techniques can then be applied to other part classes and parts orienting processes, such as parallel-jaw grasping or pushing by passive or actuated fences on a conveyor, leading to practical applications. A preliminary version of this work appeared in Akella and Mason <ref> [7] </ref>. Our work builds on the work of Taylor et al. [176] who performed automatic planning of sensor-based manipulation programs using AND/OR search. They applied this framework to the task of orienting an object by tray tilting, and the task of orienting and grasping an object by a parallel-jaw gripper. <p> Current industrial standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard [12]. The shape uncertainty model used in this chapter was earlier described in Akella and Mason <ref> [7] </ref>. It can be viewed as a parametric tolerance model which permits variations in both the orientations and positions of part edges. We make the following assumptions in modeling the bounded uncertainty in the shape of a part (Figure 6.1): * The nominal shape of the part is known.
Reference: [8] <author> P. Alevizos, J. D. Boissonnat, and M. Yvinec. </author> <title> On the order induced by a set of rays: Application to the probing of non convex polygons. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: Cole and Yap [47] discuss the number of probes necessary to determine the shape and position of a polygon. Skiena [170] describes a variety of probing models and provides a list of open problems in probing. Alevizos et al. <ref> [8] </ref> contain results on determining the shape of a simple polygon by a minimal number of probes. Wallack, Canny, and Manocha [183] discuss the use of cross beam sensors to determine the orientation of an object by measuring its diameter at three angles.
Reference: [9] <author> J. C. Alexander and J. H. Maddocks. </author> <title> Bounds on the friction-dominated motion of a pushed object. </title> <journal> International Journal of Robotics Research, </journal> <volume> 12(3) </volume> <pages> 231-248, </pages> <year> 1993. </year>
Reference-contexts: Mason [122] considered the problem of pushing a block along a wall. Goyal, Ruina, and Papadopoulos [82, 83] assumed a known support pressure distribution and developed a limit surface description of the relation between the frictional forces and object motion. Alexander and Maddocks <ref> [9] </ref> derived bounds on the center of rotation locus over all possible support friction distributions for objects with known support regions. Balorda and Bajd [13] used a two-finger tool to reduce the positional uncertainty of an object by pushing it.
Reference: [10] <author> H. Arai and O. Khatib. </author> <title> Experiments with dynamic skills. </title> <booktitle> In 1994 Japan-USA Symposium on Flexible Automation, </booktitle> <pages> pages 81-84, </pages> <address> Kobe, Japan, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Mason and Lynch [124] present a taxonomy of manipulation models and analyze the throwing of a club as an example of dynamic manipulation. Acceleration forces during the carry phase are used to hold the club in a dynamic grasp. Arai and Khatib <ref> [10] </ref> rotate a cube on a paddle and control its rotation rate by accelerating the paddle using a Puma robot. Lynch [113] explores dynamic nonprehensile manipulation, and demonstrates control of an object using a one degree of freedom robot by sequencing phases of dynamic grasp, rolling, and free flight. <p> Other examples of manipulation by an underactuated effector include slipping and rolling within a grasp (Bicchi and Sorrentino [19]; Brock [25]; Rao et al. [151]) and dynamic tasks such as snatching, rolling, and throwing (Arai and Khatib <ref> [10] </ref>; Lynch [113]). The 1JOC can be likened to an underactuated manipulator in a gravity field, where the proximal "shoulder" (fence pivot) is directly actuated, but the distal degrees of freedom (represented by the object) are not. Much of the work on underactuated manipulation has exploited dynamic coupling among freedoms. <p> Research on the controllability of such serial link manipulators has been carried out by Oriolo and Nakamura [139] and Arai and Tachi [11]. Strdalen et al. [171] recently developed a nonholonomic gear which allowed them to construct a controllable n-link planar arm with only two motors. Arai and Khatib <ref> [10] </ref> demonstrated rolling of a cube on a paddle held by a PUMA. Their motion strategy was hand-crafted with the assumption of infinite friction at the rolling contact.
Reference: [11] <author> H. Arai and S. Tachi. </author> <title> Position control of a manipulator with passive joints using dynamic coupling. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(4) </volume> <pages> 528-534, </pages> <month> Aug. </month> <year> 1991. </year> <note> 149 150 BIBLIOGRAPHY </note>
Reference-contexts: Much of the work on underactuated manipulation has exploited dynamic coupling among freedoms. Research on the controllability of such serial link manipulators has been carried out by Oriolo and Nakamura [139] and Arai and Tachi <ref> [11] </ref>. Strdalen et al. [171] recently developed a nonholonomic gear which allowed them to construct a controllable n-link planar arm with only two motors. Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA.
Reference: [12] <author> Dimensioning and Tolerancing, </author> <title> ANSI Y14.5M-1982. </title> <booktitle> American Society of Mechanical Engineers, </booktitle> <address> United Engineering Center, New York, </address> <year> 1982. </year>
Reference-contexts: Current industrial 1.2. RELATED WORK 17 standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard <ref> [12] </ref>. Voelcker [181] surveys the area of tolerancing and describes the trend to move from tolerancing standards specified by figures and examples to those chosen on a mathematical basis. <p> Current industrial standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard <ref> [12] </ref>. The shape uncertainty model used in this chapter was earlier described in Akella and Mason [7]. It can be viewed as a parametric tolerance model which permits variations in both the orientations and positions of part edges.
Reference: [13] <author> Z. Balorda and T. Bajd. </author> <title> Reducing positioning uncertainty of objects by robot pushing. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 10(4) </volume> <pages> 535-541, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: Alexander and Maddocks [9] derived bounds on the center of rotation locus over all possible support friction distributions for objects with known support regions. Balorda and Bajd <ref> [13] </ref> used a two-finger tool to reduce the positional uncertainty of an object by pushing it. They discuss the effect of finger configurations on accurate positioning of the object. Goldberg and Mason [78] described a Bayesian framework for planning multi-step grasps with a frictionless parallel-jaw gripper to orient objects.
Reference: [14] <author> J. Barraquand and J.-C. Latombe. </author> <title> Nonholonomic multibody mobile robots: Controllability and motion planning in the presence of obstacles. </title> <journal> Algorithmica, </journal> 10(2/3/4):121-155, Aug. 1993. 
Reference-contexts: Lynch and Mason [116] discuss issues of controllability and planning in the use of stable pushes. They describe a pushing path planner, based on the nonholonomic motion planner of Barraquand and Latombe <ref> [14] </ref>, that uses stable pushing motions to synthesize paths in the presence of obstacles. Our planner differs from this planner in several ways, the most obvious being the class of pushes used. <p> He gives examples of other solution-complete problems such as sensorless orienting of parts (Goldberg [76]), and controllability and motion planning for nonholonomic mobile robots in the obstacle-free plane (Barraquand and Latombe <ref> [14] </ref>). He describes a modular fixturing problem for polygonal parts (Zhuang, Wong, and Goldberg [189]) that is not solution-complete, but for which a complete algorithm, an algorithm guaranteed to return a solution if it exists and report failure otherwise, 18 CHAPTER 1. INTRODUCTION exists (Brost and Goldberg [34]).
Reference: [15] <author> M. S. Bazaraa and C. M. Shetty. </author> <title> Nonlinear Programming: Theory and Algorithms. </title> <publisher> John Wiley and Sons., </publisher> <year> 1979. </year>
Reference-contexts: Our problem as stated above is a nonlinear programming problem whose feasible solutions yield valid feeding plans. (See Bazaraa and Shetty's text <ref> [15] </ref> for an introduction to nonlinear programming.) Once we have a solution for the g i , i , + i , and r i values which satisfies the constraints (3.5)-(3.16) and minimizes our objective function, we must still determine a series of jogs to execute the translations g i .
Reference: [16] <author> D. R. Berkowitz and J. F. Canny. </author> <title> Designing parts feeders using dynamic simulation. </title> <booktitle> In 1996 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1127-1132, </pages> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Their goal was to identify impacts and oscillatory motions that can change the initially unknown state of the part to a desired goal state. Caine [39] considers the design of interacting part shapes to constrain motion and applies it to a vibratory bowl feeder track. Berkowitz and Canny <ref> [16] </ref> use a dynamic simulator to perform a series of simulated experiments to select bowl feeder gate parameters. Christiansen et al. [44] exploit genetic algorithms to identify sequences of bowl feeder gates that improve feeding efficiency.
Reference: [17] <author> M. Bern, D. Eppstein, L. J. Guibas, J. E. Hershberger, S. Suri, and J. Wolter. </author> <title> The centroid of points with approximate weights. </title> <booktitle> In Proc. 3rd Eur. Symp. Algorithms, Lecture Notes in Computer Science, </booktitle> <volume> No. 979, </volume> <pages> pages 460-472. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We can use the smallest circle which encloses these extremal points to obtain a conservative bound on the locus of the center of mass. See Figure C.1. Finding the exact bounding locus of the center of mass is an open problem. See Bern et al. <ref> [17] </ref> for related work on estimating the locus of the centroid of a set of points whose weights vary within known ranges. 147 148 APPENDIX C. ESTIMATING THE CENTER OF MASS LOCUS Figure C.1: Computation of the locus of the center of mass of a part with shape uncertainty.
Reference: [18] <author> D. P. Bertsekas. </author> <title> Dynamic Programming: Deterministic and Stochastic Models. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year>
Reference-contexts: (POMDP), where the transition probabilities give the probability of transitioning between edges for a given action and the part diameter is the partially observable variable related to the orientation state variable. (See Howard [92] for a variety of Markovian models and solution techniques to model probabilistic dynamic systems and Bertsekas <ref> [18] </ref> for the use of dynamic programming techniques in stochastic control and Markov decision problems.) However a closer examination reveals that the orienting process is not Markovian.
Reference: [19] <author> A. Bicchi and R. Sorrentino. </author> <title> Dexterous manipulation through rolling. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1995. </year>
Reference-contexts: Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability. Other examples of manipulation by an underactuated effector include slipping and rolling within a grasp (Bicchi and Sorrentino <ref> [19] </ref>; Brock [25]; Rao et al. [151]) and dynamic tasks such as snatching, rolling, and throwing (Arai and Khatib [10]; Lynch [113]).
Reference: [20] <author> K. Bohringer, R. Brown, B. Donald, J. Jennings, and D. </author> <title> Rus. Distributed robotic manipulation: Experiments in minimalism. </title> <booktitle> In International Symposium on Experimental Robotics, </booktitle> <year> 1995. </year>
Reference-contexts: Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. [56], Canny and Goldberg [40], and Bohringer et al. <ref> [20] </ref>. Raibert [146] and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]).
Reference: [21] <author> K. F. Bohringer, V. Bhatt, and K. Y. Goldberg. </author> <title> Sensorless manipulation using transverse vibrations of a plate. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1989-1996, </pages> <address> Nagoya, Japan, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: By controlling the motions of the actuators in the array, they generate vector fields that produce desired part motions. Liu and Will [110] simulate a parts manipulation surface consisting of microelectromechanical actuators and describe various parts manipulation strategies. Bohringer, Bhatt, and Goldberg <ref> [21] </ref> use a vibrating plate to position and orient parts sensorlessly. The vibrations generate a force field, and parts move to nodes of 1.2. RELATED WORK 11 the vibratory force field.
Reference: [22] <author> K.-F. Bohringer, B. R. Donald, R. Mihailovich, and N. C. MacDonald. </author> <title> Sensorless manipulation using massively parallel microfabricated actuator arrays. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 826-833, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Objects can be also be manipulated using a very large number of manipulators or by subjecting them to force fields. Bohringer et al. <ref> [22] </ref> use arrays of microelectromechanical actuators to perform sensorless manipulation of parts. By controlling the motions of the actuators in the array, they generate vector fields that produce desired part motions. Liu and Will [110] simulate a parts manipulation surface consisting of microelectromechanical actuators and describe various parts manipulation strategies.
Reference: [23] <author> G. Boothroyd, C. Poli, and L. E. Murch. </author> <title> Automatic Assembly. </title> <publisher> Marcel Dekker, </publisher> <year> 1982. </year>
Reference-contexts: Riley [156] provides a good introduction and survey of the area of industrial automatic assembly. Vibratory bowl feeders have been in widespread industrial use since their introduction in the 1940s. Boothroyd et al. <ref> [23] </ref> describe parts feeding and orienting devices for automated assembly, including bowl feeders. Singer and Seering [169] analyzed the effects of impacts and oscillatory motions on a part and determine conditions for it to reorient. <p> Chapter 5 Parts Orienting with Partial Sensor Information A parts orienting system has to bring randomly oriented parts to desired orientations for subsequent assembly. Vibratory bowl feeders are the most commonly used systems in industry today for orienting parts (Boothroyd et al. <ref> [23] </ref>; Riley [156]). While very effective, bowl feeders are not reconfigurable and require skilled craftsmen to design them. It can take a couple of months to design a bowl feeder for a new part or even a slightly modified part, or to discover that the part cannot be fed.
Reference: [24] <author> G. Boothroyd, A. H. Redford, C. Poli, and L. E. Murch. </author> <title> Statistical distributions of natural resting aspects of parts for automatic handling. </title> <journal> Manufacturing Engineering Transactions, Society of Manufacturing Automation, </journal> <volume> 1, </volume> <year> 1972. </year>
Reference-contexts: They use a potential function based on the object geometry and finger spring constants to determine stable grasp states of the object. To aid the design of automated feeding and orienting systems, Boothroyd et al. <ref> [24] </ref> analyze the statistical distribution of the natural rest states of objects. They discuss both the static case (when the part directly falls into a rest state after impact) and the dynamic case (when bouncing and rolling of the part occur after impact).
Reference: [25] <author> D. L. Brock. </author> <title> Enhancing the dexterity of a robot hand using controlled slip. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 249-251, </pages> <address> Philadelphia, PA, </address> <month> Apr. </month> <year> 1988. </year>
Reference-contexts: Nonprehensile manipulation occurs during a grasp when the object slips or rolls relative to the gripper. Trinkle, Abel, and Paul [178] presented a planner that uses both the palm surface and fingers of a frictionless gripper to achieve an enveloping grasp of an object. Brock <ref> [25] </ref> analyzed the permissible motions of an object grasped in a robot hand and used changes in forces to cause controlled slip of the object. Kao and Cutkosky [101] explicitly consider sliding of robot fingers on an object and plan finger motions so the object follows a desired trajectory. <p> Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability. Other examples of manipulation by an underactuated effector include slipping and rolling within a grasp (Bicchi and Sorrentino [19]; Brock <ref> [25] </ref>; Rao et al. [151]) and dynamic tasks such as snatching, rolling, and throwing (Arai and Khatib [10]; Lynch [113]).
Reference: [26] <author> R. Brockett. </author> <title> Nonlinear systems and differential geometry. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 64(1), </volume> <month> Jan. </month> <year> 1976. </year> <note> BIBLIOGRAPHY 151 </note>
Reference-contexts: Raibert [146] and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett <ref> [26] </ref>; Crouch [49]). A good introduction to nonlinear control is given by Nijmeijer and van der Schaft [136], and nonholonomic robotic systems are discussed in the texts by Latombe [105] and Murray et al. [129]. <p> If either or both is unidirectional, the system is not small-time locally controllable, but it can be shown to be controllable by a simple constructive argument (Brockett <ref> [26] </ref>; Lynch and Mason [114]). 44 CHAPTER 3. PARTS TRANSFER ON A CONVEYOR WITH A ONE JOINT ROBOT The 1JOC system consisting of a conveyor and a rotating fence resembles the system above with a unidirectional conveyor.
Reference: [27] <author> M. Brokowski, M. Peshkin, and K. Y. Goldberg. </author> <title> Curved fences for part alignment. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 3 467-473, </pages> <address> Atlanta, Georgia, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: They used these configuration maps to find a sequence of fences to automatically orient a sliding part. Brokowski, Peshkin, and Goldberg <ref> [27] </ref> designed curved fence sections to eliminate uncertainty in the orientations of 1.2. RELATED WORK 9 parts being oriented by the fence. Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. <p> Peshkin and Sanderson [142] used results on the motion of a pushed object to find a sequence of fences to automatically orient a sliding part. Brokowski, Peshkin, and Goldberg <ref> [27] </ref> designed curved fence sections to eliminate uncertainty in the orientations of parts being oriented by the fences. Goldberg [76] developed a backchaining algorithm to orient polygonal parts up to symmetry using a frictionless parallel-jaw gripper.
Reference: [28] <author> R. A. Brooks. </author> <title> Symbolic error analysis and robot planning. </title> <journal> International Journal of Robotics Research, </journal> <volume> 1(4) </volume> <pages> 29-68, </pages> <year> 1982. </year>
Reference-contexts: Taylor [175] describes a task-level manipulator planning system that generates skeleton plans from which the possible positional uncertainties are estimated, and discusses the use of sensory operations to bound this uncertainty. Brooks <ref> [28] </ref> extended this approach by using symbolic means to provide error estimates and identify points in a plan where sensing operations are necessary to overcome the uncertainty.
Reference: [29] <author> R. C. Brost. </author> <title> Automatic grasp planning in the presence of uncertainty. </title> <journal> International Journal of Robotics Research, </journal> <volume> 7(1) </volume> <pages> 3-17, </pages> <month> Feb. </month> <year> 1988. </year>
Reference-contexts: Mani and Wilson [118] used the pushing rules of Mason to derive an Edge Stability Map for straight line pushes and developed a system to orient parts with a sequence of fence pushes at different angles. Brost <ref> [29] </ref> developed an algorithm to plan grasps with a parallel-jaw gripper that are robust to bounded uncertainties in object orientation. As an intermediate result, using the pushing rules of Mason, he developed the push stability diagram to describe the possible motions of an object being pushed by a fence. <p> In subsequent work, Goldberg [76] developed a backchaining algorithm to generate sensorless orienting plans for polygonal objects using the frictionless gripper. This algorithm is guaranteed to return the shortest plan to orient any object up to symmetry. In their grasping work, Goldberg and Mason simplified Brost's <ref> [29] </ref> model for parallel-jaw grasping by using only pushes normal to the face of the gripper. In the work reported in Chapter 2, we use linear normal pushes to orient and translate the object. This work was reported earlier in Akella and Mason [6]. <p> Huang, Krotkov, and Mason [93] explore the use of striking to move a rotationally symmetric object to a desired position and orientation in the plane. 1.2.4 Parallel-jaw grasping Grasping, typically with a parallel-jaw gripper, is probably the most common mode by which robots manipulate objects. Brost <ref> [29] </ref> extended Mason's results to develop an analysis of the behavior of an object being pushed and grasped by a parallel-jaw gripper. In particular, he was able to describe the results of single step grasping operations in the presence of bounded uncertainty in object orientation. <p> Previous work in the domain of pushing provides a basis for understanding the mechanics of such pushing actions (Mason [121]; Brost <ref> [29] </ref> ; Peshkin and Sanderson [141]). Sequences of such actions have been used primarily to orient parts (Mani and Wilson [118]; Peshkin and Sanderson [142]). <p> Further, it gives the maximum angle, for each rotation direction, between any stable edge and the fence for which the edge will stably reorient onto the fence. (The push-stability diagram developed by Brost <ref> [29] </ref> gives us the same information for the broader class of linear pushes. <p> The inputs to the planner are the start and goal poses, and a geometric description of the part, in terms of its vertices and center of mass. It uses the code to generate the push-stability diagram described by Brost <ref> [29] </ref>, and a commercial linear programming package, LINDO (Schrage [162]). The planner takes between 1 and 12 seconds on a SPARCstation IPX to find the best plan for the example parts in this chapter. <p> The x's indicate stable orientations and the vertical bars indicate the limits of the resting range for each stable orientation. The resting range diagram corresponds to a slice along the 90 degree pushing direction of the push stability diagram of Brost <ref> [29] </ref>. 80 CHAPTER 5. PARTS ORIENTING WITH PARTIAL SENSOR INFORMATION for which the part comes to rest in each stable orientation. The x's indicate stable orientations of the rectangle for each resting range and the vertical bars indicate the limits of each resting range. <p> The x's indicate stable orientations of the rectangle for each resting range and the vertical bars indicate the limits of each resting range. The resting range diagram corresponds to a slice of the push stability diagram of Brost <ref> [29] </ref> along the 90 degree pushing direction. 5.2.5 Finding Representative Actions Action Ranges for a State We have to find a set of push-align actions that can be used to generate an orienting plan for a given set of states.
Reference: [30] <author> R. C. Brost. </author> <title> Analysis and Planning of Planar Manipulation Tasks. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> Jan. </month> <year> 1991. </year> <note> Technical Report CMU-CS-91-149. </note>
Reference-contexts: The APOS system relies on vibration and shape to orient parts. Parts are made to flow over a vibrating pallet with nests designed to trap only parts in the correct orientation. The remaining parts are recirculated. Brost <ref> [31, 30] </ref> demonstrates the use of shape constraints to orient a part by designing a nest to "catch" the part. Krishnasamy, Jakiela, and Whitney [103] analyze the effect of shape and vibration parameters on the energy of parts and hence their efficiency of entrapment in an APOS-like vibration system.
Reference: [31] <author> R. C. Brost. </author> <title> Dynamic analysis of planar manipulation tasks. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2247-2254, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Lynch and Mason's planner is not exact in that it finds a path to a neighborhood of the goal configuration whereas the linear programming formulation of our planner provides a computationally efficient method to find exact solutions. Brost <ref> [31] </ref> presents a numerical integration procedure that returns the initial configurations that guarantee the linear pushing motion of a polygon will bring a contacting polygon to a goal equilibrium configuration. <p> The APOS system relies on vibration and shape to orient parts. Parts are made to flow over a vibrating pallet with nests designed to trap only parts in the correct orientation. The remaining parts are recirculated. Brost <ref> [31, 30] </ref> demonstrates the use of shape constraints to orient a part by designing a nest to "catch" the part. Krishnasamy, Jakiela, and Whitney [103] analyze the effect of shape and vibration parameters on the energy of parts and hence their efficiency of entrapment in an APOS-like vibration system. <p> Plans using the actions described here are sensitive to uncertainty since a single push can eliminate rotational uncertainty, but not pose uncertainty of a part. A combination of pushes and grasps with a parallel jaw gripper, the use of a specially-shaped fence (Brost <ref> [31] </ref>), or a sequence of centering operations (Mottaez and Goldberg [128]) are ways to reduce the pose uncertainty of the part. We have made the analysis tractable by separating part orientation from part position to the extent possible.
Reference: [32] <author> R. C. </author> <title> Brost. </title> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: He defined a "generalized configuration space", which has additional dimensions for the parametric variations in the part features. He then used this generalized configuration space to generate multiple-step compliant motion strategies. Brost <ref> [32] </ref> developed a shape uncertainty model and has used it ([35]) in the automatic design of fixtures for 3-D parts that are robust to variations in part shape. Latombe and Wilson [106] have studied the problem of assembly sequencing with toleranced parts. <p> Since the vertices and center of mass uncertainty regions are explicitly bounded, we can compute these orientation ranges. Alternative models of shape uncertainty have been developed for other problems, including those of Requicha [152], Brost <ref> [32] </ref>, and Latombe and Wilson [106]. Requicha's model specifies tolerance zones by sweeping out circles of specified radii along the polygon edges. Brost's model specifies tolerance zones by 114 CHAPTER 6.
Reference: [33] <author> R. C. Brost and A. D. Christiansen. </author> <title> Probabilistic analysis of manipulation tasks: A conceptual framework. </title> <journal> International Journal of Robotics Research, </journal> <volume> 15(1) </volume> <pages> 1-23, </pages> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: Christiansen [43] describes a system that learns a physical model of a task with nondeterministic actions. Brost and Christiansen <ref> [33] </ref> introduce the probabilistic backprojection as a construction for robust manipulation planning in the face of uncertainty. <p> Probabilistic modeling can be useful in modeling the nondeterminism of the actions. By observing the results of actions over a sample set of parts, we can estimate the transition probabilities of the actions. See Christiansen [43] and Brost and Christiansen <ref> [33] </ref> for examples of tasks whose action probabilities are empirically estimated. This approach can reduce the need for analytical computation of the results of actions. On-line learning of the relevant parameters of part geometry for each part by the orienting system is another approach.
Reference: [34] <author> R. C. Brost and K. Y. Goldberg. </author> <title> A complete algorithm for designing planar fixtures using modular components. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 12(1) </volume> <pages> 31-46, </pages> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: He describes a modular fixturing problem for polygonal parts (Zhuang, Wong, and Goldberg [189]) that is not solution-complete, but for which a complete algorithm, an algorithm guaranteed to return a solution if it exists and report failure otherwise, 18 CHAPTER 1. INTRODUCTION exists (Brost and Goldberg <ref> [34] </ref>).
Reference: [35] <author> R. C. Brost and R. R. Peters. </author> <title> Automatic design of 3-d fixtures and assembly pallets. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 495-502, </pages> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference: [36] <author> R. G. Brown and J. S. Jennings. </author> <title> A pusher/steerer model for strongly cooperative mobile robot manipulation. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 3 562-568, </pages> <address> Pittsburgh, PA, </address> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Donald, Jennings, and Rus [58] use a team of mobile robots to reorient furniture by pushing and analyze the information requirements of the task. 10 CHAPTER 1. INTRODUCTION They present several algorithms that differ in the amounts of global control, communication, and synchronization. Brown and Jennings <ref> [36] </ref> present a two-robot system to manipulate objects by pushing.
Reference: [37] <author> S. J. Buckley. </author> <title> Planning compliant motion strategies. </title> <journal> International Journal of Robotics Research, </journal> <volume> 8(5), </volume> <month> Oct. </month> <year> 1989. </year>
Reference-contexts: RELATED WORK 15 the initial region. Erdmann [62] separated the issues of goal reachability and recognizability and implemented a planner that used the backprojection of regions rather than the preimages. Buckley <ref> [37] </ref> developed a planner to synthesize conditional compliant motion strategies that succeed in the presence of uncertainty in robot sensing, control, and the initial configuration of the robot. <p> Siegel [165] describes the use of joint angle and torque sensing to determine the pose of planar objects grasped by the Utah-MIT hand. 1.2.11 Artificial Intelligence Planning AI search techniques such as breadth-first search, A* search, AND/OR tree search are discussed by Rich and Knight [155]. Buckley <ref> [37] </ref> uses a state-graph representation which is essentially an AND/OR graph representation for compliant motion planning. de Mello and Sanderson [51] use AND/OR graphs to represent all possible subassemblies and the sequence of assembly operations during assembly of a part.
Reference: [38] <author> M. Buehler, D. E. Koditschek, and P. J. Kindlmann. </author> <title> Planning and control of robotic juggling and catching tasks. </title> <journal> International Journal of Robotics Research, </journal> <volume> 13(2) </volume> <pages> 101-118, </pages> <month> Apr. </month> <year> 1994. </year>
Reference-contexts: Juggling, throwing, and striking provide dramatic examples of nonprehensile manipulation. Aboaf, Drucker, and Atkeson [2] developed a robot system that juggles a tennis ball in three dimensions and uses learning to improve its performance. Buehler, Koditschek, and Kindlmann <ref> [38] </ref> describe "mirror" algorithms to control a one degree of freedom robot system that can stably juggle one or two pucks simultaneously in a vertical plane. Rizzi and Koditschek [157] developed a paddle juggler that performs spatial juggling of two balls.
Reference: [39] <author> M. Caine. </author> <title> The design of shape interactions using motion constraints. </title> <booktitle> In 1994 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994. </year>
Reference-contexts: Singer and Seering [169] analyzed the effects of impacts and oscillatory motions on a part and determine conditions for it to reorient. Their goal was to identify impacts and oscillatory motions that can change the initially unknown state of the part to a desired goal state. Caine <ref> [39] </ref> considers the design of interacting part shapes to constrain motion and applies it to a vibratory bowl feeder track. Berkowitz and Canny [16] use a dynamic simulator to perform a series of simulated experiments to select bowl feeder gate parameters.
Reference: [40] <author> J. F. Canny and K. Y. Goldberg. </author> <title> RISC for industrial robotics: Recent results and open problems. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994. </year>
Reference-contexts: Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. [56], Canny and Goldberg <ref> [40] </ref>, and Bohringer et al. [20]. Raibert [146] and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. <p> Connell [48] illustrates the effective use of local binary sensors in conjunction with manipulator actions to pick up a soda can. Canny and Goldberg <ref> [40] </ref> advocate the use of simple, inexpensive sensors and actuators for industrial automation tasks. Hasegawa et al. [88] use manipulation primitives called skills to accomplish contact between objects, face alignment, 14 CHAPTER 1. INTRODUCTION and insertions. These skills use sensor data to achieve desired states despite errors in positioning.
Reference: [41] <author> Y.-B. Chen and D. J. Ierardi. </author> <title> Oblivious plans for orienting and distinguishing polygonal parts. </title> <booktitle> In The 4th Canadian Conference on Computational Geometry, </booktitle> <year> 1992. </year>
Reference-contexts: He was able to show that these plans are O (n 2 ) in length, where n is the number of edges of the object. More recently, Chen and Ierardi <ref> [41] </ref> have shown these plans to reorient an object by grasping are O (n) in length. An interesting aspect of Goldberg's planner is that it is provably complete, that is, it is guaranteed to generate a plan to orient any polygonal object (up to symmetry). <p> The similar structure of the push function and the squeeze function used in grasping means the backchaining algorithm can be applied to the push function to derive a minimum length sensorless plan for orienting the part by push-aligning. Chen and Ierardi <ref> [41] </ref> showed that for a part with n stable edges, the backchaining algorithm is guaranteed to find a solution of O (n) steps in O (n 2 ) time. When the push function has a period of 360 degrees, the part can be oriented uniquely.
Reference: [42] <author> L. Chrisman and R. Simmons. </author> <title> Sensible planning: Focusing perceptual attention. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI-91), </booktitle> <year> 1991. </year> <note> 152 BIBLIOGRAPHY </note>
Reference-contexts: Taylor et al. [176] explored the use of AND/OR search trees in the manipulation domain. Russell and Wefald [184] discuss the use of decision-theoretic techniques in conjunction with traditional AI planning techniques. Chrisman and Simmons <ref> [42] </ref> use static sensing policies to determine plans which are near cost optimal with respect to both action and sensing. Simmons [166] explores, by coupling symbolic constraints and probability estimates, the effect of changing the resolution and frequency of sensing operations on the expected cost of a plan.
Reference: [43] <author> A. D. Christiansen. </author> <title> Automatic acquisition of Task Theories for Robotic Manipulation. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> Mar. </month> <year> 1992. </year> <note> Technical Report CMU-CS-92-111. </note>
Reference-contexts: The first planner uses a forward exhaustive search to find a plan most likely to produce the desired goal, and the second planner uses a backward best-first search to find a plan that maximizes the lower bound on the probability of reaching the goal. Christiansen <ref> [43] </ref> describes a system that learns a physical model of a task with nondeterministic actions. Brost and Christiansen [33] introduce the probabilistic backprojection as a construction for robust manipulation planning in the face of uncertainty. <p> Probabilistic modeling can be useful in modeling the nondeterminism of the actions. By observing the results of actions over a sample set of parts, we can estimate the transition probabilities of the actions. See Christiansen <ref> [43] </ref> and Brost and Christiansen [33] for examples of tasks whose action probabilities are empirically estimated. This approach can reduce the need for analytical computation of the results of actions. On-line learning of the relevant parameters of part geometry for each part by the orienting system is another approach.
Reference: [44] <author> A. D. Christiansen, A. D. Edwards, and C. A. C. Coello. </author> <title> Automated design of parts feeders using a genetic algorithm. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 846-851, </pages> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Caine [39] considers the design of interacting part shapes to constrain motion and applies it to a vibratory bowl feeder track. Berkowitz and Canny [16] use a dynamic simulator to perform a series of simulated experiments to select bowl feeder gate parameters. Christiansen et al. <ref> [44] </ref> exploit genetic algorithms to identify sequences of bowl feeder gates that improve feeding efficiency. A more recent and successful industrial parts feeding system is the SONY APOS system (Shirai and Saito [164], Hitakawa [91]). The APOS system relies on vibration and shape to orient parts.
Reference: [45] <author> A. D. Christiansen and K. Y. Goldberg. </author> <title> Robotic manipulation planning with stochastic actions. In 1990 DARPA workshop on Innovative Approaches to Planning, </title> <journal> Scheduling and Control, </journal> <year> 1990. </year>
Reference-contexts: Goldberg [75] discusses the role of stochastically optimal plans in manipulation tasks. Goldberg et al. [79] use a backchaining algorithm to generate multi-step plans to orient an object, and then use probability and cost measures to identify the plan which maximizes expected feedrate. Christiansen and Goldberg <ref> [45] </ref> explored automatic open-loop planning for task domains with stochastic actions. They describe two planners for a tray-tilting domain where the effects of actions cannot be predicted due to control error, friction, and unmodeled dynamics.
Reference: [46] <author> V. Chvatal. </author> <title> Linear Programming. </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: where m i is the Peshkin distance for the ith reorientation (see Appendix A for details). 2.3.2 A Linear Programming Solution The magnitudes of the push vectors, the a ij and b i terms, can be determined efficiently by developing a linear programming (LP) formulation. (See the text by Chvatal <ref> [46] </ref> for an introduction to linear programming.) Once a reorientation sequence is chosen, the ~ c i vectors are determined, and the pose vector equation reduces to r X X a ij ^ n ij + i=1 where ~ T 0 = ~ T r X ~ c i .
Reference: [47] <author> R. Cole and C. K. Yap. </author> <title> Shape from probing. </title> <journal> Journal of Algorithms, </journal> <volume> 8, </volume> <year> 1987. </year>
Reference-contexts: They exploit rigidity constraints by computing the tranformation necessary to match corresponding scene and model features, and pruning matches that are inconsistent with computed transformations. There is also related theoretical work on determining the shapes and poses of polygons by geometric probing. Cole and Yap <ref> [47] </ref> discuss the number of probes necessary to determine the shape and position of a polygon. Skiena [170] describes a variety of probing models and provides a list of open problems in probing.
Reference: [48] <author> J. H. Connell. </author> <title> A behavior-based arm controller. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 5(6), </volume> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: Uncertainty in the robot's world model, control errors, and noisy sensors are explicitly modeled. Using an AND/OR search tree, they applied this framework to the task of orienting an object by tray tilting, and the task of orienting and grasping an object by a parallel-jaw gripper. Connell <ref> [48] </ref> illustrates the effective use of local binary sensors in conjunction with manipulator actions to pick up a soda can. Canny and Goldberg [40] advocate the use of simple, inexpensive sensors and actuators for industrial automation tasks.
Reference: [49] <author> P. Crouch. </author> <title> Spacecraft attitude control and stabilization: Applications of geometric control theory to rigid body models. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 29(4) </volume> <pages> 321-31, </pages> <year> 1984. </year>
Reference-contexts: Raibert [146] and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch <ref> [49] </ref>). A good introduction to nonlinear control is given by Nijmeijer and van der Schaft [136], and nonholonomic robotic systems are discussed in the texts by Latombe [105] and Murray et al. [129]. Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability.
Reference: [50] <author> C. Davis. </author> <title> Theory of positive linear dependence. </title> <journal> American Journal of Mathematics, </journal> <volume> 76 </volume> <pages> 733-746, </pages> <year> 1954. </year>
Reference-contexts: The requirements for a set of unit push vectors to positively span the plane is obtained from the following theorem in Davis <ref> [50] </ref>: A set of vectors f ~ a 1 ; :::; ~ a r g positively spans R n if and only if, for every non-zero vector ~ b, there exists an i 2 f1; : : : ; rg such that ~ b ~ a i &gt; 0.
Reference: [51] <author> L. S. H. de Mello and A. C. Sanderson. </author> <title> AND/OR graph representation of assembly plans. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 6(2), </volume> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: Buckley [37] uses a state-graph representation which is essentially an AND/OR graph representation for compliant motion planning. de Mello and Sanderson <ref> [51] </ref> use AND/OR graphs to represent all possible subassemblies and the sequence of assembly operations during assembly of a part. Taylor et al. [176] explored the use of AND/OR search trees in the manipulation domain.
Reference: [52] <author> E. D. Dickmanns and A. Zapp. </author> <title> Autonomous high speed road vehicle guidance by computer vision. </title> <booktitle> In IFAC 10th Triennial World Congress, </booktitle> <address> Munich, </address> <year> 1987. </year>
Reference-contexts: Feedback loops are a particular class of sensor-based operations where the instantaneous sensor data is sufficient to select an action. Kalman filters [125] are used when the uncertainty in sensor information results from system and measurement errors rather than ambiguities in interpretation of the sensor information. Dickmanns and Zapp <ref> [52] </ref> use Kalman filters to robustly estimate road parameters from vision data, and use this information as input to a digital controller to guide a high speed autonomous vehicle on a road.
Reference: [53] <author> B. R. Donald. </author> <title> Planning multi-step error detection and recovery strategies. </title> <journal> International Journal of Robotics Research, </journal> <volume> 9(1), </volume> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: The planner considers only translational motions and uses a combination of three motion termination predicates. The planner is complete up to the chosen state space decomposition. Donald <ref> [53] </ref> extended the framework to allow plans that succeed or fail recognizably and handle variations in part dimensions. See Latombe [105] for a discussion of this body of work. Hutchinson [94] extends the LMT approach by using visual constraints to implement visual guarded moves and visual compliant motions. <p> Yap [188] advocates the use of computational geometry techniques and exact computation for tolerancing metrology. Such algorithms would estimate the deviations from tolerance of manufactured parts using a set of sampled measurements. Perhaps the first work that explicitly considered shape uncertainty effects for a manipulation problem was by Donald <ref> [53] </ref>. He defined a "generalized configuration space", which has additional dimensions for the parametric variations in the part features. He then used this generalized configuration space to generate multiple-step compliant motion strategies. <p> Our definition of a good plan is a guaranteed plan and therefore conservative. It would be useful to develop a planner which generates plans that either orient a part or recognize when they cannot orient the part. Such plans, similar to Donald's <ref> [53] </ref> Error Detection and Recovery (EDR) plans in the context of motion planning under uncertainty, are especially useful when we cannot find a guaranteed plan for a part. EDR plans ought to handle larger values of shape uncertainty and a broader class of parts.
Reference: [54] <author> B. R. Donald. </author> <title> Information invariants in robotics: Part I State, Communication, and Side-Effects. </title> <booktitle> In Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: For their task, the projection map is unstructured and it is not clear that solution synthesis is always possible. Donald <ref> [54, 55] </ref> develops the idea of information invariants to characterize sensors, tasks, and the complexity of robotic operations. His goal is an understanding of the information necessary to accomplish a task, and the different ways it can be manifested (sensing, action, communication, history, internal state).
Reference: [55] <author> B. R. Donald. </author> <title> Information invariants in robotics: Part II Sensors and Computation. </title> <booktitle> In Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: For their task, the projection map is unstructured and it is not clear that solution synthesis is always possible. Donald <ref> [54, 55] </ref> develops the idea of information invariants to characterize sensors, tasks, and the complexity of robotic operations. His goal is an understanding of the information necessary to accomplish a task, and the different ways it can be manifested (sensing, action, communication, history, internal state).
Reference: [56] <author> B. R. Donald. </author> <title> Toward a theory of information invariants for cooperating autonomous mobile robots. </title> <booktitle> In Sixth International Symposium on Robotics Research, </booktitle> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. <ref> [56] </ref>, Canny and Goldberg [40], and Bohringer et al. [20]. Raibert [146] and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field.
Reference: [57] <author> B. R. Donald and J. Jennings. </author> <title> Constructive recognizability for task-directed robot programming. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 9 </volume> <pages> 41-74, </pages> <year> 1992. </year>
Reference-contexts: These are examples of the characterization of the addition of sensing and internal state to improve robot performance. Donald and Jennings <ref> [57] </ref> discuss the occurrence of perceptual equivalence classes in mobile robot tasks. By studying the reachability and recognizability graphs (RR-graphs) for a mobile robot navigation task and their variation as the robot moves around, they wish to generate solutions for problems with a similar sensory structure.
Reference: [58] <author> B. R. Donald, J. Jennings, and D. </author> <title> Rus. Information invariants for distributed manipulation. </title> <editor> In K. Y. Goldberg, D. Halperin, J.-C. Latombe, and R. H. Wilson, editors, </editor> <booktitle> Workshop on the Algorithmic Foundations of Robotics, </booktitle> <pages> pages 431-457. </pages> <editor> A. K. Peters, </editor> <address> Wellesley, Massachusetts, </address> <year> 1995. </year> <note> BIBLIOGRAPHY 153 </note>
Reference-contexts: Okawa and Yokoyama [138] describe a mobile robot for pushing a box to a goal position through a specified set of via points. When the object mass and size are greater than that of the robot, multiple robots may be required to push the object. Donald, Jennings, and Rus <ref> [58] </ref> use a team of mobile robots to reorient furniture by pushing and analyze the information requirements of the task. 10 CHAPTER 1. INTRODUCTION They present several algorithms that differ in the amounts of global control, communication, and synchronization.
Reference: [59] <author> A. Elfes. </author> <title> Dynamics control of robot perception using stochastic spatial models. </title> <booktitle> In Proceedings of the International Workshop on Information Processing in Mobile Robots, </booktitle> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: As the robot moves towards the goal, the sensors report obstacles, and the algorithm recomputes the optimal plan by propagating arc costs minimally. He shows that the implemented planner is efficient, optimal, and complete. Elfes <ref> [59] </ref> describes a mobile robot that can dynamically plan and control sensor activities using information-theoretic measures to characterize the different task requirements. Simmons and Koenig [167] use partially observable Markov decision process (POMDP) models to keep track of the location of an indoor mobile robot.
Reference: [60] <author> R. E. Ellis. </author> <title> Planning tactile recognition paths in two and three dimensions. </title> <journal> International Journal of Robotics Research, </journal> <volume> 11(2), </volume> <year> 1992. </year>
Reference-contexts: The local constraints used, such as distance between points, and angles between the surface normal vectors, are very effective in pruning invalid interpretations. Grimson [84] extends this work so the robot can distinguish between ambiguous poses of an object. Ellis <ref> [60] </ref> finds paths for a tactile 16 CHAPTER 1. INTRODUCTION recognition probe to uniquely determine the pose of a 2-D object in the presence of sensed data error given initial tactile data. Faugeras and Hebert [72] describe a system to recognize and locate a 3-D object using range data.
Reference: [61] <author> D. Eppstein. </author> <title> Reset sequences for monotonic automata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 19(3) </volume> <pages> 500-510, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Natarajan [131] focused on the computational issues related to the automated design of sensorless parts feeders. By assuming deterministic transitions of an orienting device and monotonicity conditions, he was able to derive polynomial time algorithms for certain classes of object orienting problems. Eppstein <ref> [61] </ref> extended Natarajan's results by presenting a more efficient algorithm that is guaranteed to find the shortest reset sequences for monotonic automata. He also extended his technique to certain classes of nonmonotonic automata.
Reference: [62] <author> M. Erdmann. </author> <title> Using backprojections for fine motion planning with uncertainty. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(1), </volume> <year> 1986. </year>
Reference-contexts: To generate a strategy, their algorithm considers the preimage of the goal region as a subgoal, and recursively computes the preimages of the subgoals until they include 1.2. RELATED WORK 15 the initial region. Erdmann <ref> [62] </ref> separated the issues of goal reachability and recognizability and implemented a planner that used the backprojection of regions rather than the preimages.
Reference: [63] <author> M. Erdmann. </author> <title> Randomization in robot tasks. </title> <journal> International Journal of Robotics Research, </journal> <volume> 11(5), </volume> <month> October </month> <year> 1992. </year>
Reference-contexts: Erdmann <ref> [68, 63, 64] </ref> has explored the use of randomization to handle uncertainty in robot manipulation tasks. He demonstrates how randomization can expand the class of solvable tasks, reduce the robot's knowledge requirements, and simplify the planning and execution process. <p> An important issue in this case is minimizing the number of steps to orient the part, which depends on the number of steps to learn the relevant part parameters. Randomization during action selection is another approach. (See Erdmann <ref> [63] </ref> for a discussion of the use of randomization in manipulation tasks.) Since randomization works well when goal states are recognizable, it will be effective especially when there are several states with unique sensor values and large resting ranges.
Reference: [64] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> 10(2/3/4):248-291, 1993. 
Reference-contexts: Erdmann <ref> [68, 63, 64] </ref> has explored the use of randomization to handle uncertainty in robot manipulation tasks. He demonstrates how randomization can expand the class of solvable tasks, reduce the robot's knowledge requirements, and simplify the planning and execution process. <p> Erdmann [68, 63, 64] has explored the use of randomization to handle uncertainty in robot manipulation tasks. He demonstrates how randomization can expand the class of solvable tasks, reduce the robot's knowledge requirements, and simplify the planning and execution process. In <ref> [64] </ref>, he discusses an approach for synthesizing strategies in the presence of uncertainty that employ both deterministic and randomized motions. Goldberg [75] discusses the role of stochastically optimal plans in manipulation tasks.
Reference: [65] <author> M. Erdmann. </author> <title> An exploration of nonprehensile two-palm manipulation: Planning and execution. </title> <booktitle> In Seventh International Symposium on Robotics Research, </booktitle> <address> Munich, Germany, </address> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Akella et al. [4] describe a planar manipulation system consisting of a one joint actuator positioned over a conveyor belt. They show that using the conveyor drift field and pushing motions of the actuator, the robot can feed any polygonal part to some selected goal position and orientation. Erdmann <ref> [65] </ref> developed a two-palm manipulation system that uses a sequence of nonprehensile operations such as sliding to rotate an object. Zumel and Erdmann [191] use two frictionless palms to manipulate an object in a gravitational field, and present a planner that uses stable and unstable transitions to reorient the object.
Reference: [66] <author> M. Erdmann and M. T. Mason. </author> <title> An exploration of sensorless manipulation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(4) </volume> <pages> 369-379, </pages> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: They discuss both the static case (when the part directly falls into a rest state after impact) and the dynamic case (when bouncing and rolling of the part occur after impact). Erdmann and Mason <ref> [66] </ref> developed an automatic sensorless tray tilting system based on the task mechanics. 1.2.2 Pushing Pushing is a common manipulation operation, and there has been much work aimed at understanding the mechanics of pushing. Our work builds on previous work on the mechanics and planning of pushing operations. <p> Research on orienting parts using the task mechanics, with and without sensing, goes back to Grossman and Blasgen [86], whose system brought objects to a finite number of orientations in a tilted tray, where their orientation was determined by a tactile probe. Erdmann and Mason <ref> [66] </ref> explored the use of sensorless manipulation strategies to eliminate uncertainty in the configuration of a part in a tray by repeated tilts of the tray. They implemented a planner that used a knowledge of the mechanics of sliding to predict the results of actions. <p> Further, such plans can potentially be used as metrological tools to identify and eliminate parts that do not meet tolerance specifications. The analysis here can be extended to other parts orienting operations such as the sensorless 1JOC (Chapter 4), parallel-jaw grasping [76], and tray tilting <ref> [66] </ref>. We have performed preliminary experiments with the sensorless 1JOC system which demonstrate that it can indeed orient parts with shape uncertainty. In fact, this approach can be applied to any class of operations whose deterministic and nondeterministic action ranges can be determined.
Reference: [67] <author> M. Erdmann, M. T. Mason, and G. Vanecek. </author> <title> Mechanical parts orienting: The case of a polyhedron on a table. </title> <journal> Algorithmica, </journal> 10(2/3/4):201-225, 1993. 
Reference-contexts: Eppstein [61] extended Natarajan's results by presenting a more efficient algorithm that is guaranteed to find the shortest reset sequences for monotonic automata. He also extended his technique to certain classes of nonmonotonic automata. Erdmann, Mason, and Vanecek <ref> [67] </ref> describe a polynomial-time planner for the problem of orienting a polyhedral part by tilting a tray with infinite friction surfaces. Its output would be a sequence of tilt angles, linear in the number of faces of the polyhedron, that is guaranteed to reorient the polyhedron.
Reference: [68] <author> M. A. Erdmann. </author> <title> On Probabilistic Strategies for Robot Tasks. </title> <type> PhD thesis, </type> <institution> Department of EECS, Massachusestts Institute of Technology, </institution> <year> 1989. </year>
Reference-contexts: Erdmann <ref> [68, 63, 64] </ref> has explored the use of randomization to handle uncertainty in robot manipulation tasks. He demonstrates how randomization can expand the class of solvable tasks, reduce the robot's knowledge requirements, and simplify the planning and execution process.
Reference: [69] <author> M. A. Erdmann. </author> <title> Action subservient sensing and design. </title> <booktitle> In 1993 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: Papanikolopoulos et al. [140] use feedback control algorithms in conjunction with vision data from a camera to demonstrate real-time robotic tracking of objects in 2-D space. They overcome uncertainty due to noisy data and slow processing of images by a combination of stochastic controllers and interpolation techniques. Erdmann <ref> [69, 70] </ref> explores the advantages of using sensors tailored to the task and actions so they can be used in feedback loops. 1.2.8 Probabilistic manipulation operations Since many manipulation operations are nondeterministic due to uncertainties in locations, geometries, and contact properties, there is a body of work devoted to analyzing probabilistic <p> His goal is an understanding of the information necessary to accomplish a task, and the different ways it can be manifested (sensing, action, communication, history, internal state). This work is of particular relevance when evaluating the result of adding a sensor. Erdmann <ref> [69, 70] </ref> has developed techniques to determine an abstract sensor given a set of actions for a task, and uses this to identify the minimal sensor which can then be physically implemented. The data from this sensor is used in a feedback loop to achieve the goal.
Reference: [70] <author> M. A. Erdmann. </author> <title> Understanding action and sensing by designing action-based sensors. </title> <booktitle> In Sixth International Symposium on Robotics Research, </booktitle> <year> 1993. </year>
Reference-contexts: Papanikolopoulos et al. [140] use feedback control algorithms in conjunction with vision data from a camera to demonstrate real-time robotic tracking of objects in 2-D space. They overcome uncertainty due to noisy data and slow processing of images by a combination of stochastic controllers and interpolation techniques. Erdmann <ref> [69, 70] </ref> explores the advantages of using sensors tailored to the task and actions so they can be used in feedback loops. 1.2.8 Probabilistic manipulation operations Since many manipulation operations are nondeterministic due to uncertainties in locations, geometries, and contact properties, there is a body of work devoted to analyzing probabilistic <p> His goal is an understanding of the information necessary to accomplish a task, and the different ways it can be manifested (sensing, action, communication, history, internal state). This work is of particular relevance when evaluating the result of adding a sensor. Erdmann <ref> [69, 70] </ref> has developed techniques to determine an abstract sensor given a set of actions for a task, and uses this to identify the minimal sensor which can then be physically implemented. The data from this sensor is used in a feedback loop to achieve the goal.
Reference: [71] <author> A. O. Farahat, P. F. Stiller, and J. C. Trinkle. </author> <title> On the geometry of contact formation cells for systems of polygons. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 11(4) </volume> <pages> 522-536, </pages> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Nagata [130] developed a parallel-jaw gripper with a turntable on each jaw and used it to perform operations such as sliding a block on a plane. Terasaki and Hasegawa [177] describe a manipulation system that slides and rotates an object to enable subsequent grasping. Farahat, Stiller, and Trinkle <ref> [71] </ref> analytically determine the position and orientation of a polygon moving in sliding and rolling contact with two or three position-controlled robots. Trinkle, Farahat, and Stiller [179] analyze systems of multiple objects and manipulators in contact and determine contact states that are stable to small variations in forces.
Reference: [72] <author> O. D. Faugeras and M. Hebert. </author> <title> The representation, recognition, and locating of 3-d objects. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(3) </volume> <pages> 27-52, </pages> <month> Fall </month> <year> 1986. </year>
Reference-contexts: Ellis [60] finds paths for a tactile 16 CHAPTER 1. INTRODUCTION recognition probe to uniquely determine the pose of a 2-D object in the presence of sensed data error given initial tactile data. Faugeras and Hebert <ref> [72] </ref> describe a system to recognize and locate a 3-D object using range data. As part of the localization process, they conduct a tree search to match scene features with model primitives.
Reference: [73] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Is there a polynomial-time algorithm to find the minimum length orienting plan? While we have not answered this question, looking at other versions of the problem suggest that the problem is NP-hard. (See Garey and Johnson <ref> [73] </ref> for an introduction to NP-completeness.) Govindan and Rao [81] have worked on a very similar problem of determining the minimum length plan to recognize and orient a part by parallel-jaw grasping where the jaw diameter is sensed after each grasp.
Reference: [74] <author> P. C. Gaston and T. Lozano-Perez. </author> <title> Tactile recognition and localization using object models: The case of polyhedra on a plane. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 6(3) </volume> <pages> 257-266, </pages> <month> May </month> <year> 1984. </year> <note> 154 BIBLIOGRAPHY </note>
Reference-contexts: We restrict our discussion to cases where the sensor data is incomplete and hence, multiple sensory operations are required. Gaston and Lozano-Perez <ref> [74] </ref> introduced the Interpretation Tree as a structure to recognize and localize polyhedral objects in the plane using tactile sensors. Grimson and Lozano-Perez [85] use local measurements of three-dimensional positions and surface normals to recognize and locate objects with six degrees of freedom.
Reference: [75] <author> K. Y. Goldberg. </author> <title> Stochastic Plans for Robotic Manipulation. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> Aug. </month> <year> 1990. </year> <note> Technical Report CMU-CS-90-161. </note>
Reference-contexts: In particular, he was able to describe the results of single step grasping operations in the presence of bounded uncertainty in object orientation. Diameter functions were used by Jameson [97] to determine grasp stability for a part grasped in the jaws of a parallel-jaw gripper. Goldberg <ref> [75, 76] </ref> extended Brost's results by analyzing probabilistic multi-step strategies to orient an object by grasping. By modifying a gripper to be frictionless, and using the diameter function of objects to predict the results of grasp operations, he was able to generate optimal strategies to orient an object. <p> He demonstrates how randomization can expand the class of solvable tasks, reduce the robot's knowledge requirements, and simplify the planning and execution process. In [64], he discusses an approach for synthesizing strategies in the presence of uncertainty that employ both deterministic and randomized motions. Goldberg <ref> [75] </ref> discusses the role of stochastically optimal plans in manipulation tasks. Goldberg et al. [79] use a backchaining algorithm to generate multi-step plans to orient an object, and then use probability and cost measures to identify the plan which maximizes expected feedrate.
Reference: [76] <author> K. Y. Goldberg. </author> <title> Orienting polygonal parts without sensors. </title> <journal> Algorithmica, </journal> <volume> 10(2/3/4), </volume> <year> 1993. </year>
Reference-contexts: They discuss the effect of finger configurations on accurate positioning of the object. Goldberg and Mason [78] described a Bayesian framework for planning multi-step grasps with a frictionless parallel-jaw gripper to orient objects. In subsequent work, Goldberg <ref> [76] </ref> developed a backchaining algorithm to generate sensorless orienting plans for polygonal objects using the frictionless gripper. This algorithm is guaranteed to return the shortest plan to orient any object up to symmetry. <p> In particular, he was able to describe the results of single step grasping operations in the presence of bounded uncertainty in object orientation. Diameter functions were used by Jameson [97] to determine grasp stability for a part grasped in the jaws of a parallel-jaw gripper. Goldberg <ref> [75, 76] </ref> extended Brost's results by analyzing probabilistic multi-step strategies to orient an object by grasping. By modifying a gripper to be frictionless, and using the diameter function of objects to predict the results of grasp operations, he was able to generate optimal strategies to orient an object. <p> Peshkin and Sanderson [142] used results on the motion of a pushed object to find a sequence of fences to automatically orient a sliding part. Brokowski, Peshkin, and Goldberg [27] designed curved fence sections to eliminate uncertainty in the orientations of parts being oriented by the fences. Goldberg <ref> [76] </ref> developed a backchaining algorithm to orient polygonal parts up to symmetry using a frictionless parallel-jaw gripper. Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. <p> Such problems, which always have a solution for any instance of the problem, have been termed solution-complete by Goldberg [77]. He gives examples of other solution-complete problems such as sensorless orienting of parts (Goldberg <ref> [76] </ref>), and controllability and motion planning for nonholonomic mobile robots in the obstacle-free plane (Barraquand and Latombe [14]). <p> For each stable edge, we have to find the largest angles between the edge and the fence for clockwise (CW) and counterclockwise (CCW) rotations that guarantee the edge will rotate into alignment with the fence during a reorient push. For linear normal pushes, we follow Goldberg <ref> [76] </ref> in obtaining this information from the radius function of the part (Figure 2.6). The radius of a polygon is the perpendicular distance from a reference point in the polygon to a support line. The 26 CHAPTER 2. <p> The main argument is to show that we can use the sensorless 1JOC to implement Goldberg's normal push actions <ref> [76] </ref>. It follows that the sensorless 1JOC can orient polygons up to symmetry in the push function. We adopt some conventions to simplify the presentation. We assume an origin at the center of the fence, and we assume the belt's velocity v is in the y direction. <p> Viewed from a frame fixed in the belt, each catch is a linear normal push, meaning that the fence is pushing the part in a direction normal to the fence face. To determine the rotation of the part during a catch, we follow Goldberg <ref> [76] </ref> in using the radius function (Figure 4.8). The radius of a part is the perpendicular distance from a reference point in the part to a support line. <p> Each local minimum in the radius function determines a convergent orientation, and each local maximum determines a divergent orientation. Hence a normal push has the net effect of mapping the entire interval between two divergent orientations to the enclosed convergent orientation. The push function <ref> [76] </ref>, obtained from the radius function, is an alternative representation of the effect of a normal push. It is a mapping p : S 1 ! S 1 from the initial relative orientation of a part to the resulting orientation (Figure 4.9), and has a period of 2. <p> Based on <ref> [76] </ref>. 4.2. PLANNING 65 resulting relative orientations of the part. vertical bars indicate the convergent and divergent fence orientations respectively, and the circle indicates wraparound at 2. <p> A compact representation of the push function is shown in Figure 4.10. 4.2.2 Plan Existence and Generation The push function is a monotonic step function which wraps around at 2. This means that Goldberg's backchaining algorithm <ref> [76] </ref> can be used to find the shortest sequence of fence rotations to orient a part. Orienting a part with n stable edges takes O (n) stages. Further, the algorithm can generate a sequence of rotations to orient any part up to symmetry in its push function. <p> These perturbational rotations may be in one or both directions. 5.2.2 Radius Function, Push Function, and Push-diameter Function To determine the result of a push-align operation, we follow Goldberg <ref> [76] </ref> in using the radius function. The radius r of a polygon at an orientation is the perpendicular distance from a reference point in the polygon to a support line of the polygon with orientation . <p> The radius function has a period of 360 degrees. Symmetry in part shape leads to symmetry in the radius function and a period less than 360 degrees. The push function <ref> [76] </ref>, obtained from the radius function, is an alternative representation of the effect of a normal push. It is a mapping p : S 1 ! S 1 from the initial relative orientation of a part to the resulting orientation (Figure 5.3). <p> The orientation wraps around at 360 ffi . The rectangle has four stable edges since its radius function has four minima. Based on Goldberg <ref> [76] </ref>. 74 CHAPTER 5. PARTS ORIENTING WITH PARTIAL SENSOR INFORMATION represent the initial and resulting relative orientations respectively. Based on [76]. given initial relative orientation of the part. The diameter is the maximal part dimension measured normal to the fence when the part is stably aligned against the fence. <p> The orientation wraps around at 360 ffi . The rectangle has four stable edges since its radius function has four minima. Based on Goldberg <ref> [76] </ref>. 74 CHAPTER 5. PARTS ORIENTING WITH PARTIAL SENSOR INFORMATION represent the initial and resulting relative orientations respectively. Based on [76]. given initial relative orientation of the part. The diameter is the maximal part dimension measured normal to the fence when the part is stably aligned against the fence. A simple sensor consisting of a series of LEDs can measure this part diameter. <p> It is the backchaining algorithm developed by Goldberg <ref> [76] </ref> to find the shortest sequence for sensorless orienting of a polygon by frictionless parallel-jaw grasping. As mentioned earlier, the push function is another representation of the push-align operation that describes the resulting part orientation as a function of its initial orientation (Figure 5.3). <p> Same diameter value, asymmetric push function: When all states have the same sensed diameter value, the sensor does not provide any useful information and the problem is identical to the sensorless orienting problem. Using the backchaining algorithm <ref> [76] </ref> we can show that a plan always exists for any part with an asymmetric push function. The maximum length of the plan is 2n 1 steps ([41]). <p> For a single qualitative shape, the set of stable edges does not change over the shape uncertainty values, and the steps of the push function change only in width and height. This suggests that if additional conditions are satisfied, we can apply Goldberg's backchaining algorithm <ref> [76] </ref> to generate a sensorless orienting plan with shape uncertainty. Further, this will provide a polynomial-time planning algorithm. Consider the edge with the largest deterministic (i.e. guaranteed) resting range. <p> Further, such plans can potentially be used as metrological tools to identify and eliminate parts that do not meet tolerance specifications. The analysis here can be extended to other parts orienting operations such as the sensorless 1JOC (Chapter 4), parallel-jaw grasping <ref> [76] </ref>, and tray tilting [66]. We have performed preliminary experiments with the sensorless 1JOC system which demonstrate that it can indeed orient parts with shape uncertainty. In fact, this approach can be applied to any class of operations whose deterministic and nondeterministic action ranges can be determined.
Reference: [77] <author> K. Y. Goldberg. </author> <title> Completeness in robot motion planning. </title> <editor> In K. Y. Goldberg, D. Halperin, J.-C. Latombe, and R. H. Wilson, editors, </editor> <booktitle> Workshop on the Algorithmic Foundations of Robotics, </booktitle> <pages> pages 419-429. </pages> <editor> A. K. Peters, </editor> <address> Wellesley, Massachusetts, </address> <year> 1995. </year>
Reference-contexts: Such problems, which always have a solution for any instance of the problem, have been termed solution-complete by Goldberg <ref> [77] </ref>. He gives examples of other solution-complete problems such as sensorless orienting of parts (Goldberg [76]), and controllability and motion planning for nonholonomic mobile robots in the obstacle-free plane (Barraquand and Latombe [14]).
Reference: [78] <author> K. Y. Goldberg and M. T. Mason. </author> <title> Bayesian grasping. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1264-1269, </pages> <address> Cincinnati, OH, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Balorda and Bajd [13] used a two-finger tool to reduce the positional uncertainty of an object by pushing it. They discuss the effect of finger configurations on accurate positioning of the object. Goldberg and Mason <ref> [78] </ref> described a Bayesian framework for planning multi-step grasps with a frictionless parallel-jaw gripper to orient objects. In subsequent work, Goldberg [76] developed a backchaining algorithm to generate sensorless orienting plans for polygonal objects using the frictionless gripper.
Reference: [79] <author> K. Y. Goldberg, M. T. Mason, and M. Erdmann. </author> <title> Generating stochastic plans for a programmable parts feeder. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1991. </year>
Reference-contexts: In [64], he discusses an approach for synthesizing strategies in the presence of uncertainty that employ both deterministic and randomized motions. Goldberg [75] discusses the role of stochastically optimal plans in manipulation tasks. Goldberg et al. <ref> [79] </ref> use a backchaining algorithm to generate multi-step plans to orient an object, and then use probability and cost measures to identify the plan which maximizes expected feedrate. Christiansen and Goldberg [45] explored automatic open-loop planning for task domains with stochastic actions.
Reference: [80] <author> K. Y. Goldberg and M. Overmars. </author> <type> Personal communication, </type> <year> 1996. </year>
Reference-contexts: For example, it is easy to show that all triangles are orientable using the angle range (=2; =2). There exist quadrilaterals, however, that cannot be oriented up to symmetry using this angle range. Goldberg and Overmars <ref> [80] </ref> showed that (=2; =2) is sufficient if parts possess no "partial" symmetries|the distances from each stable angle to each edge of its convergence range are unique. 4.3 Implementation Our implementation of the sensorless 1JOC uses rotation about a fixed pivot point since most parts do not require rotations close to
Reference: [81] <author> R. Govindan and A. S. Rao. </author> <title> Optimal strategies for recognizing polygonal parts. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994. </year>
Reference-contexts: Is there a polynomial-time algorithm to find the minimum length orienting plan? While we have not answered this question, looking at other versions of the problem suggest that the problem is NP-hard. (See Garey and Johnson [73] for an introduction to NP-completeness.) Govindan and Rao <ref> [81] </ref> have worked on a very similar problem of determining the minimum length plan to recognize and orient a part by parallel-jaw grasping where the jaw diameter is sensed after each grasp. They suggest that the problem of finding the minimum length plan for their problem is NP-hard.
Reference: [82] <author> S. Goyal, A. Ruina, and J. Papadopoulos. </author> <title> Planar sliding with dry friction. Part 1. Limit surface and moment function. </title> <journal> Wear, </journal> <volume> 143 </volume> <pages> 307-330, </pages> <year> 1991. </year>
Reference-contexts: Pham, Cheung, and Yeo [143] analyzed the initial motion of a rectangular object being pushed or pulled and its dependence on the magnitude of the exerted force. Mason [122] considered the problem of pushing a block along a wall. Goyal, Ruina, and Papadopoulos <ref> [82, 83] </ref> assumed a known support pressure distribution and developed a limit surface description of the relation between the frictional forces and object motion. Alexander and Maddocks [9] derived bounds on the center of rotation locus over all possible support friction distributions for objects with known support regions.
Reference: [83] <author> S. Goyal, A. Ruina, and J. Papadopoulos. </author> <title> Planar sliding with dry friction. Part 2. Dynamics of motion. </title> <journal> Wear, </journal> <volume> 143 </volume> <pages> 331-352, </pages> <year> 1991. </year>
Reference-contexts: Pham, Cheung, and Yeo [143] analyzed the initial motion of a rectangular object being pushed or pulled and its dependence on the magnitude of the exerted force. Mason [122] considered the problem of pushing a block along a wall. Goyal, Ruina, and Papadopoulos <ref> [82, 83] </ref> assumed a known support pressure distribution and developed a limit surface description of the relation between the frictional forces and object motion. Alexander and Maddocks [9] derived bounds on the center of rotation locus over all possible support friction distributions for objects with known support regions.
Reference: [84] <author> W. E. L. </author> <title> Grimson. Sensing strategies for disambiguating among multiple objects in known poses. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2(4), </volume> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: Grimson and Lozano-Perez [85] use local measurements of three-dimensional positions and surface normals to recognize and locate objects with six degrees of freedom. The local constraints used, such as distance between points, and angles between the surface normal vectors, are very effective in pruning invalid interpretations. Grimson <ref> [84] </ref> extends this work so the robot can distinguish between ambiguous poses of an object. Ellis [60] finds paths for a tactile 16 CHAPTER 1. INTRODUCTION recognition probe to uniquely determine the pose of a 2-D object in the presence of sensed data error given initial tactile data.
Reference: [85] <author> W. E. L. Grimson and T. Lozano-Perez. </author> <title> Model-based recognition and localization from sparse range or tactile data. </title> <journal> International Journal of Robotics Research, </journal> <month> Fall </month> <year> 1984. </year>
Reference-contexts: We restrict our discussion to cases where the sensor data is incomplete and hence, multiple sensory operations are required. Gaston and Lozano-Perez [74] introduced the Interpretation Tree as a structure to recognize and localize polyhedral objects in the plane using tactile sensors. Grimson and Lozano-Perez <ref> [85] </ref> use local measurements of three-dimensional positions and surface normals to recognize and locate objects with six degrees of freedom. The local constraints used, such as distance between points, and angles between the surface normal vectors, are very effective in pruning invalid interpretations.
Reference: [86] <author> D. D. Grossman and M. W. Blasgen. </author> <title> Orienting mechanical parts by computer-controlled manipulator. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 5(5), </volume> <month> September </month> <year> 1975. </year>
Reference-contexts: Krishnasamy, Jakiela, and Whitney [103] analyze the effect of shape and vibration parameters on the energy of parts and hence their efficiency of entrapment in an APOS-like vibration system. Research on orienting parts using the task mechanics, with and without sensing, goes back to Grossman and Blasgen <ref> [86] </ref>, whose system brought objects to a finite number of orientations in a tilted tray, where their orientation was determined by a tactile probe. <p> Grossman and Blasgen <ref> [86] </ref> describe a system that orients parts by a combination of tilt, vibration, and probing operations. The manipulator drops the part into a tilted tray which is then vibrated. The part comes to rest in one of a finite set of orientations, which are discriminated using mechanical probing operations.
Reference: [87] <author> H. Hanafusa and H. Asada. </author> <title> Stable prehension by a robot hand with elastic fingers. </title> <editor> In M. Brady, J. M. Hollerbach, T. L. Johnson, T. Lozano-Perez, and M. T. Mason, editors, </editor> <title> Robot Motion. </title> <publisher> MIT Press, </publisher> <year> 1982. </year>
Reference-contexts: Compliant motions have been used to overcome positional uncertainties between contact surfaces; see Mason [119] for an overview of issues related to compliant motion. One approach to reducing uncertainty is to use the stable states resulting from a manipulation operation to constrain the object configurations. Hanafusa and Asada <ref> [87] </ref> consider grasping an object stably by using a three-fingered robot hand. They use a potential function based on the object geometry and finger spring constants to determine stable grasp states of the object.
Reference: [88] <author> T. Hasegawa, T. Suehiro, and K. Takase. </author> <title> A model-based manipulation system with skill-based execution. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(5), </volume> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Connell [48] illustrates the effective use of local binary sensors in conjunction with manipulator actions to pick up a soda can. Canny and Goldberg [40] advocate the use of simple, inexpensive sensors and actuators for industrial automation tasks. Hasegawa et al. <ref> [88] </ref> use manipulation primitives called skills to accomplish contact between objects, face alignment, 14 CHAPTER 1. INTRODUCTION and insertions. These skills use sensor data to achieve desired states despite errors in positioning.
Reference: [89] <author> R. Hermann and A. J. Krener. </author> <title> Nonlinear controllability and observability. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-22(5):728-740, </volume> <month> Oct. </month> <year> 1977. </year>
Reference-contexts: A good introduction to nonlinear control is given by Nijmeijer and van der Schaft [136], and nonholonomic robotic systems are discussed in the texts by Latombe [105] and Murray et al. [129]. Hermann and Kremer <ref> [89] </ref> provide a good introduction to the main issues in nonlinear controllability and observability.
Reference: [90] <author> T. Higuchi. </author> <title> Application of electromagnetic impulsive force to precise positioning tools in robot system. </title> <editor> In H. Hanafusa and H. Inoue, editors, </editor> <booktitle> Robotics Research: The Second International Symposium, </booktitle> <pages> pages 281-285, </pages> <address> Cambridge, MA, 1985. </address> <publisher> MIT Press. BIBLIOGRAPHY 155 </publisher>
Reference-contexts: Lynch [113] explores dynamic nonprehensile manipulation, and demonstrates control of an object using a one degree of freedom robot by sequencing phases of dynamic grasp, rolling, and free flight. Higuchi <ref> [90] </ref> used impulsive forces generated by electromagnetic means to microposition objects. <p> Therefore, it is possible to stably push the part from any 0 to any 1 in a counterclockwise (CCW) direction, where 90 ffi &gt; 1 &gt; 0 &gt; 90 ffi . r such that the push is stable for all fence angles in the range <ref> [90; 90] </ref> for a given fence angular velocity ! and conveyor velocity v. For a push to be stable when the fence is rotating CCW, the contact radius r must be sufficiently large. We can change r by performing jogs, described below.
Reference: [91] <author> H. Hitakawa. </author> <title> Advanced parts orientation system has wide application. </title> <journal> Assembly Automation, </journal> <volume> 8(3) </volume> <pages> 147-150, </pages> <year> 1988. </year>
Reference-contexts: INTRODUCTION 1.2.5 Parts Feeding Our long-term goal is to develop parts feeders with practical use in industry. Much of our work was inspired by industrial parts feeders such as vibratory bowl feeders, the SONY APOS system (Hitakawa <ref> [91] </ref>), and the Adept FlexFeeder. Riley [156] provides a good introduction and survey of the area of industrial automatic assembly. Vibratory bowl feeders have been in widespread industrial use since their introduction in the 1940s. <p> Christiansen et al. [44] exploit genetic algorithms to identify sequences of bowl feeder gates that improve feeding efficiency. A more recent and successful industrial parts feeding system is the SONY APOS system (Shirai and Saito [164], Hitakawa <ref> [91] </ref>). The APOS system relies on vibration and shape to orient parts. Parts are made to flow over a vibrating pallet with nests designed to trap only parts in the correct orientation. The remaining parts are recirculated.
Reference: [92] <author> R. A. Howard. </author> <title> Dynamic Probabilistic Systems. </title> <publisher> John Wiley, </publisher> <year> 1971. </year>
Reference-contexts: tempting to model the parts orienting with shape uncertainty problem as a partially observable Markov decision process (POMDP), where the transition probabilities give the probability of transitioning between edges for a given action and the part diameter is the partially observable variable related to the orientation state variable. (See Howard <ref> [92] </ref> for a variety of Markovian models and solution techniques to model probabilistic dynamic systems and Bertsekas [18] for the use of dynamic programming techniques in stochastic control and Markov decision problems.) However a closer examination reveals that the orienting process is not Markovian.
Reference: [93] <author> W. H. Huang, E. P. Krotkov, and M. T. Mason. </author> <title> Impulsive manipulation. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 120-125, </pages> <address> Nagoya, Japan, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Lynch [113] explores dynamic nonprehensile manipulation, and demonstrates control of an object using a one degree of freedom robot by sequencing phases of dynamic grasp, rolling, and free flight. Higuchi [90] used impulsive forces generated by electromagnetic means to microposition objects. Huang, Krotkov, and Mason <ref> [93] </ref> explore the use of striking to move a rotationally symmetric object to a desired position and orientation in the plane. 1.2.4 Parallel-jaw grasping Grasping, typically with a parallel-jaw gripper, is probably the most common mode by which robots manipulate objects.
Reference: [94] <author> S. Hutchinson. </author> <title> Exploiting visual constraints in robot motion planning. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1991. </year>
Reference-contexts: The planner is complete up to the chosen state space decomposition. Donald [53] extended the framework to allow plans that succeed or fail recognizably and handle variations in part dimensions. See Latombe [105] for a discussion of this body of work. Hutchinson <ref> [94] </ref> extends the LMT approach by using visual constraints to implement visual guarded moves and visual compliant motions. Lazanas and Latombe [108] use landmark regions, within which the robot has perfect control and perfect sensing, to tackle a reduced version of the motion planning under uncertainty problem.
Reference: [95] <author> H. Inoue. </author> <title> Force feedback in precise assembly tasks. </title> <type> Technical Report AI Lab Memo 308, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, MA, </address> <year> 1974. </year>
Reference-contexts: The use of task mechanics is a powerful solution technique in robotic manipulation tasks; we list a few early examples. Inoue <ref> [95] </ref> used force information to achieve peg insertion despite inaccuracies in manipulator positioning that exceeded 6 CHAPTER 1. INTRODUCTION parts orienting. The robot rotates the part through a specified angle before releasing it to drift into contact with the fence on the conveyor.
Reference: [96] <author> M. Inui, M. Miura, and F. Kimura. </author> <title> Positioning conditions of parts with tolerances in an assembly. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: The shape uncertainty model used in this thesis was earlier described in Akella and Mason [7]. It can be viewed as a parametric tolerance model which permits variations in both the orientations and positions of part edges. Inui, Miura, and Kimura <ref> [96] </ref> analyze the variations in relative positions of two contacting parts when there are variations in their shapes. 1.2.13 Completeness For a given task, we select a set of actions and try to determine what combination of the actions, if any, can solve instances of the task.
Reference: [97] <author> J. Jameson. </author> <title> Analytic techniques for automated grasp. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, Stanford University, </institution> <month> June </month> <year> 1985. </year>
Reference-contexts: In particular, he was able to describe the results of single step grasping operations in the presence of bounded uncertainty in object orientation. Diameter functions were used by Jameson <ref> [97] </ref> to determine grasp stability for a part grasped in the jaws of a parallel-jaw gripper. Goldberg [75, 76] extended Brost's results by analyzing probabilistic multi-step strategies to orient an object by grasping.
Reference: [98] <author> Y.-B. Jia and M. Erdmann. </author> <title> The complexity of sensing by point sampling. </title> <editor> In K. Y. Goldberg, D. Halperin, J.-C. Latombe, and R. H. Wilson, editors, </editor> <booktitle> Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> Wellesley, Massachusetts, </address> <year> 1995. </year> <editor> A. K. </editor> <publisher> Peters. </publisher>
Reference-contexts: Rao and Goldberg [149] consider the placement of fiduciary marks on an object for optimal distinguishability of a known set of poses. Jia and Erdmann <ref> [98] </ref> examine the issue of finding the minimum number of sensing points required to distinguish between a finite set of poses of a known set of polygonal shapes.
Reference: [99] <author> Y.-B. Jia and M. Erdmann. </author> <title> Pose from pushing. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 165-171, </pages> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Kurisu and Yoshikawa [104] use an optimal control formulation to generate trajectories to push an object to a goal configuration with a point contact pusher in the presence of obstacles. Jia and Erdmann <ref> [99] </ref> include dynamics in their analysis of the motion of an object pushed by a finger. By sensing contact positions of the object on the finger, they determine the initial pose of the object. Work on pushing by mobile robots dates back to work by Nilsson [137].
Reference: [100] <author> L. Joskowicz, E. Sacks, and V. Srinivasan. </author> <title> Kinematic tolerance analysis. </title> <booktitle> Computer Aided Design, </booktitle> <year> 1996. </year> <note> To appear. Also in Second Workshop on the Algorithmic Foundations of Robotics. </note>
Reference-contexts: They assume part edges vary only in position and not in orientation, and consider the geometric clearance issues for assembly without considering changes in stability of the assemblies. Joskowicz, Sacks, and Srinivasan <ref> [100] </ref> compute the variations in kinematic behavior of mechanisms from the tolerance specifications of their parts. Toleranced parts in contact have multiple and changing contacts which makes their behavior complex. The shape uncertainty model used in this thesis was earlier described in Akella and Mason [7].
Reference: [101] <author> I. Kao and M. R. Cutkosky. </author> <title> Quasistatic manipulation with compliance and sliding. </title> <journal> International Journal of Robotics Research, </journal> <volume> 11(1) </volume> <pages> 20-40, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Brock [25] analyzed the permissible motions of an object grasped in a robot hand and used changes in forces to cause controlled slip of the object. Kao and Cutkosky <ref> [101] </ref> explicitly consider sliding of robot fingers on an object and plan finger motions so the object follows a desired trajectory. Sawasaki, Inaba, and Inoue [161] used stand-up and tumbling operations with fingers to manipulate objects in contact with a support surface.
Reference: [102] <author> Z. Kohavi. </author> <title> Switching and Finite Automata Theory. </title> <publisher> McGraw-Hill, </publisher> <year> 1978. </year>
Reference-contexts: In fact, the problem of finding the minimal length orienting plan is the same as finding the minimal length adaptive homing sequence of a finite state machine. See the textbook by Kohavi <ref> [102] </ref> for an introduction to finite state machines. 5.3 Sensor Model and State Distinguishability To generate sensor-based plans, we have to explicitly consider the information the sensor provides and its ability to distinguish the stable orientations of the part. <p> They suggest that the problem of finding the minimum length plan for their problem is NP-hard. This suggests that our problem of orienting by push-aligning is also NP-hard. Consider a representation of the push-diameter function as a deterministic finite state machine. (See <ref> [102] </ref> for an introduction to finite state machines.) Each step of the push-diameter function can be viewed as a state encoded by its diameter value, angle range, and resultant orientation; the states have a cyclic arrangement, and only the diameter can be sensed.
Reference: [103] <author> J. Krishnasamy, M. J. Jakiela, and D. E. Whitney. </author> <title> Mechanics of vibration-assisted entrapment with application to design. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 838-845, </pages> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: The remaining parts are recirculated. Brost [31, 30] demonstrates the use of shape constraints to orient a part by designing a nest to "catch" the part. Krishnasamy, Jakiela, and Whitney <ref> [103] </ref> analyze the effect of shape and vibration parameters on the energy of parts and hence their efficiency of entrapment in an APOS-like vibration system.
Reference: [104] <author> M. Kurisu and T. Yoshikawa. </author> <title> Trajectory planning for an object in pushing operation. </title> <booktitle> In 1994 Japan-USA Symposium on Flexible Automation, </booktitle> <address> Kobe, Japan, </address> <year> 1994. </year>
Reference-contexts: Brost [31] presents a numerical integration procedure that returns the initial configurations that guarantee the linear pushing motion of a polygon will bring a contacting polygon to a goal equilibrium configuration. Kurisu and Yoshikawa <ref> [104] </ref> use an optimal control formulation to generate trajectories to push an object to a goal configuration with a point contact pusher in the presence of obstacles. Jia and Erdmann [99] include dynamics in their analysis of the motion of an object pushed by a finger.
Reference: [105] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]). A good introduction to nonlinear control is given by Nijmeijer and van der Schaft [136], and nonholonomic robotic systems are discussed in the texts by Latombe <ref> [105] </ref> and Murray et al. [129]. Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability. <p> The planner considers only translational motions and uses a combination of three motion termination predicates. The planner is complete up to the chosen state space decomposition. Donald [53] extended the framework to allow plans that succeed or fail recognizably and handle variations in part dimensions. See Latombe <ref> [105] </ref> for a discussion of this body of work. Hutchinson [94] extends the LMT approach by using visual constraints to implement visual guarded moves and visual compliant motions. <p> It is well known that a car can be arbitrarily positioned in the plane even if the steering wheel has only two settings. (For an introduction to motion planning for cars, and nonholonomic motion planning in general, see Latombe's text <ref> [105] </ref>.) Each setting of the steering wheel defines a rotation center of the car. In the case of the car these two rotation centers move with the car.
Reference: [106] <author> J.-C. Latombe and R. H. Wilson. </author> <title> Assembly sequencing with toleranced parts. </title> <booktitle> In Proceedings of the Third ACM Symposium on Solid Modeling and Applications, </booktitle> <pages> pages 83-94, </pages> <address> Salt Lake City, </address> <year> 1995. </year> <note> 156 BIBLIOGRAPHY </note>
Reference-contexts: He then used this generalized configuration space to generate multiple-step compliant motion strategies. Brost [32] developed a shape uncertainty model and has used it ([35]) in the automatic design of fixtures for 3-D parts that are robust to variations in part shape. Latombe and Wilson <ref> [106] </ref> have studied the problem of assembly sequencing with toleranced parts. They present an algorithm to determine if an assembly sequence exists for all instances of the components within the specified tolerances, and to generate it when it exists. <p> Since the vertices and center of mass uncertainty regions are explicitly bounded, we can compute these orientation ranges. Alternative models of shape uncertainty have been developed for other problems, including those of Requicha [152], Brost [32], and Latombe and Wilson <ref> [106] </ref>. Requicha's model specifies tolerance zones by sweeping out circles of specified radii along the polygon edges. Brost's model specifies tolerance zones by 114 CHAPTER 6. <p> It would be interesting to apply our techniques to other tolerance models such as the least material, maximal material model of Requicha [152, 154], or the perfect orientation model of Latombe and Wilson <ref> [106] </ref>. Whenever the shape uncertainty model allows us to compute the transition ranges 138 CHAPTER 6. PARTS ORIENTING WITH SHAPE UNCERTAINTY and variations in edge orientation, plan generation should be possible.
Reference: [107] <author> S. M. LaValle. </author> <title> Robot motion planning: A game-theoretic foundation. </title> <booktitle> In Second Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> Toulouse, France, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: Erdmann [69, 70] has developed techniques to determine an abstract sensor given a set of actions for a task, and uses this to identify the minimal sensor which can then be physically implemented. The data from this sensor is used in a feedback loop to achieve the goal. LaValle <ref> [107] </ref> has described a game-theoretic framework for robot motion planning problems in the presence of uncertainty.
Reference: [108] <author> A. Lazanas and J.-C. Latombe. </author> <title> Landmark-based robot navigation. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <month> July </month> <year> 1992. </year>
Reference-contexts: See Latombe [105] for a discussion of this body of work. Hutchinson [94] extends the LMT approach by using visual constraints to implement visual guarded moves and visual compliant motions. Lazanas and Latombe <ref> [108] </ref> use landmark regions, within which the robot has perfect control and perfect sensing, to tackle a reduced version of the motion planning under uncertainty problem. They present a complete planner for this problem, and illustrate how designing the environment can simplify the task substantially.
Reference: [109] <author> J. Liebman, L. Lasdon, L. Schrage, and A. Waren. </author> <title> Modeling and Optimization with GINO. </title> <publisher> The Scientific Press, </publisher> <address> Palo Alto, CA, </address> <year> 1986. </year>
Reference-contexts: IMPLEMENTATION 55 between these edges. For the start and goal configurations, we generate candidate edge transition sequences. For each such sequence, the corresponding objective function and constraints are input to a commercial nonlinear programming package called GINO <ref> [109] </ref> to solve the problem. A feasible solution to the nonlinear programming formulation provides us with a valid feeding plan. See the example plans in Figure 3.11. Currently we use minimum stable radius values empirically determined to be robust.
Reference: [110] <author> W. Liu and P. </author> <title> Will. Parts manipulation on an intelligent motion surface. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 3 399-404, </pages> <address> Pittsburgh, PA, </address> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Bohringer et al. [22] use arrays of microelectromechanical actuators to perform sensorless manipulation of parts. By controlling the motions of the actuators in the array, they generate vector fields that produce desired part motions. Liu and Will <ref> [110] </ref> simulate a parts manipulation surface consisting of microelectromechanical actuators and describe various parts manipulation strategies. Bohringer, Bhatt, and Goldberg [21] use a vibrating plate to position and orient parts sensorlessly. The vibrations generate a force field, and parts move to nodes of 1.2.
Reference: [111] <author> T. Lozano-Perez, M. T. Mason, and R. H. Taylor. </author> <title> Automatic synthesis of fine-motion strategies for robots. </title> <journal> International Journal of Robotics Research, </journal> <volume> 3(1), </volume> <month> Spring </month> <year> 1984. </year>
Reference-contexts: Brost and Christiansen [33] introduce the probabilistic backprojection as a construction for robust manipulation planning in the face of uncertainty. This extension of the LMT framework (see Section 1.2.9) requires knowledge of the error distributions of sources of task uncertainty. 1.2.9 Motion planning with uncertainty Lozano-Perez et al. <ref> [111] </ref> suggested a framework for synthesizing compliant motion strategies under uncertainty in sensing and control. In this framework, commonly referred to as the LMT framework, they define the preimage of a goal as the set of configurations from which the goal can be attained in a single compliant motion.
Reference: [112] <author> K. M. Lynch. </author> <title> The mechanics of fine manipulation by pushing. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2269-2276, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: In the work reported in Chapter 2, we use linear normal pushes to orient and translate the object. This work was reported earlier in Akella and Mason [6]. Work by Lynch and Mason (<ref> [112] </ref>; [116]) is most closely related to our work on parts transfer. Lynch [112] studied the kinematic constraints on object motion consistent with a pusher-object contact configuration, and the force constraints on object motion to ensure the resulting frictional forces could be balanced by the contact forces. <p> This class of motions occurs during the translation pushes defined in Section 2.2.2, and the stable rotational pushes of Lynch <ref> [112] </ref>. 2. Known relative motion between the part and pusher : When the pressure distribution is known, the part motion can be predicted. The pressure distribution is usually unknown, however, and the instantaneous relative motion between the part and the pusher cannot be determined. <p> The set of possible contact forces is given by the convex combination of the frictionless forces at each contact (Figure 4.4). For a set of contact forces, we can find a set of stable pushing motions using the method described by Lynch <ref> [112] </ref>. pushing motions are represented as rotation centers fixed in the part frame F p , relative to the conveyor it is sliding on. For these rotation centers, the contact forces can balance the support friction force for any pressure distribution of the part.
Reference: [113] <author> K. M. Lynch. </author> <title> Nonprehensile Robotic Manipulation: Controllability and Planning. </title> <type> PhD thesis, </type> <institution> The Robotics Institute, Carnegie Mellon University, </institution> <month> Mar. </month> <year> 1996. </year> <institution> Robotics Institute Technical Report CMU-RI-TR-96-05. </institution>
Reference-contexts: Acceleration forces during the carry phase are used to hold the club in a dynamic grasp. Arai and Khatib [10] rotate a cube on a paddle and control its rotation rate by accelerating the paddle using a Puma robot. Lynch <ref> [113] </ref> explores dynamic nonprehensile manipulation, and demonstrates control of an object using a one degree of freedom robot by sequencing phases of dynamic grasp, rolling, and free flight. Higuchi [90] used impulsive forces generated by electromagnetic means to microposition objects. <p> Other examples of manipulation by an underactuated effector include slipping and rolling within a grasp (Bicchi and Sorrentino [19]; Brock [25]; Rao et al. [151]) and dynamic tasks such as snatching, rolling, and throwing (Arai and Khatib [10]; Lynch <ref> [113] </ref>). The 1JOC can be likened to an underactuated manipulator in a gravity field, where the proximal "shoulder" (fence pivot) is directly actuated, but the distal degrees of freedom (represented by the object) are not. Much of the work on underactuated manipulation has exploited dynamic coupling among freedoms. <p> Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA. Their motion strategy was hand-crafted with the assumption of infinite friction at the rolling contact. Lynch and Mason <ref> [124, 113, 117] </ref> report automatic planning of rolling, throwing, and snatching tasks using a single degree of freedom robot. 1.2.7 Sensor-based manipulation In early work, Pingle et al. [144] demonstrated simple sensing and alignment steps to reduce uncertainty in object positions for programmable assembly examples.
Reference: [114] <author> K. M. Lynch and M. T. Mason. </author> <title> Controllability of pushing. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 112-119, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: If either or both is unidirectional, the system is not small-time locally controllable, but it can be shown to be controllable by a simple constructive argument (Brockett [26]; Lynch and Mason <ref> [114] </ref>). 44 CHAPTER 3. PARTS TRANSFER ON A CONVEYOR WITH A ONE JOINT ROBOT The 1JOC system consisting of a conveyor and a rotating fence resembles the system above with a unidirectional conveyor. <p> The pushing direction, as seen by the part, is opposite the conveyor's velocity direction. 46 CHAPTER 3. PARTS TRANSFER ON A CONVEYOR WITH A ONE JOINT ROBOT Of course, a stable push may also occur while the fence is rotating. Lynch and Mason <ref> [114] </ref> describe the procedure Stable that finds a set of stable pushing directions V stable for a given pushing edge, pushing friction coefficient, and center of mass of the part. This set of pushing directions is fixed in the part frame F p . <p> For simplicity, we will only consider the edges of the part that yield a stable push while the fence is held at 0 degrees (the pushing direction is a translation normal to the edge). The existence of these stable edges is indicated by the following lemma (Lynch and Mason <ref> [114] </ref>): Lemma 3.1 All polygonal parts have at least one edge such that the normal translational pushing direction, along with a neighborhood of this pushing direction, belongs to V stable . Such edges are called stable edges.
Reference: [115] <author> K. M. Lynch and M. T. Mason. </author> <title> Pulling by pushing, slip with infinite friction, and perfectly rough surfaces. </title> <journal> International Journal of Robotics Research, </journal> <volume> 14(2) </volume> <pages> 174-183, </pages> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: The fence is position-controlled. 6. All motions are quasi-static. That is, inertial forces are assumed negligible compared to frictional and applied forces. 7. Coulomb's law of friction describes all frictional interactions. 8. There is no slip between the part and the fence. Lynch and Mason <ref> [115] </ref> have shown that slip can occur even with an infinite coefficient of friction. For the normal linear pushes used here, however, the no-slip assumption is consistent with an infinite coefficient of friction at the contact. 22 CHAPTER 2.
Reference: [116] <author> K. M. Lynch and M. T. Mason. </author> <title> Stable pushing: Mechanics, controllability, and planning. </title> <editor> In K. Y. Goldberg, D. Halperin, J.-C. Latombe, and R. H. Wilson, editors, </editor> <booktitle> Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> Wellesley, Massachusetts, </address> <year> 1995. </year> <editor> A. K. </editor> <publisher> Peters. </publisher>
Reference-contexts: In the work reported in Chapter 2, we use linear normal pushes to orient and translate the object. This work was reported earlier in Akella and Mason [6]. Work by Lynch and Mason ([112]; <ref> [116] </ref>) is most closely related to our work on parts transfer. Lynch [112] studied the kinematic constraints on object motion consistent with a pusher-object contact configuration, and the force constraints on object motion to ensure the resulting frictional forces could be balanced by the contact forces. <p> He combined these constraints to define a new manipulation primitive, the stable rotational push, which guarantees that no relative motion between the pusher and the object occurs during a push. Lynch and Mason <ref> [116] </ref> discuss issues of controllability and planning in the use of stable pushes. They describe a pushing path planner, based on the nonholonomic motion planner of Barraquand and Latombe [14], that uses stable pushing motions to synthesize paths in the presence of obstacles. <p> An important aspect of our approach is the use of a compact set of actions for the task, coupled with an efficient search mechanism. An alternative approach is to use a more extensive set of actions, such as non-normal linear pushes, or rotational pushes as in Lynch and Mason <ref> [116] </ref>. The selection of an action set should depend on the task domain; an environment with a mobile robot equipped to turn on the spot and move in straight lines is conducive to the use of linear pushes while one with a car-like mobile robot can better utilize rotational pushes.
Reference: [117] <author> K. M. Lynch and M. T. Mason. </author> <title> Dynamic underactuated nonprehensile manipulation. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA. Their motion strategy was hand-crafted with the assumption of infinite friction at the rolling contact. Lynch and Mason <ref> [124, 113, 117] </ref> report automatic planning of rolling, throwing, and snatching tasks using a single degree of freedom robot. 1.2.7 Sensor-based manipulation In early work, Pingle et al. [144] demonstrated simple sensing and alignment steps to reduce uncertainty in object positions for programmable assembly examples.
Reference: [118] <author> M. Mani and W. R. D. Wilson. </author> <title> A programmable orienting system for flat parts. </title> <booktitle> In North American Manufacturing Research Institute Conference XIII, </booktitle> <address> Berkeley, California, </address> <month> May </month> <year> 1985. </year>
Reference-contexts: Mason [120, 121] analyzed the mechanics of robotic pushing operations. He developed a procedure to determine the instantaneous motion of a pushed object with a known support pressure distribution, and derived rules to predict the rotation direction of a pushed object with an unknown pressure distribution. Mani and Wilson <ref> [118] </ref> used the pushing rules of Mason to derive an Edge Stability Map for straight line pushes and developed a system to orient parts with a sequence of fence pushes at different angles. <p> Previous work in the domain of pushing provides a basis for understanding the mechanics of such pushing actions (Mason [121]; Brost [29] ; Peshkin and Sanderson [141]). Sequences of such actions have been used primarily to orient parts (Mani and Wilson <ref> [118] </ref>; Peshkin and Sanderson [142]). Here we develop a method to find plans to move a polygonal part from a known initial position and orientation to a goal position and orientation using linear normal pushes executed by a fence. These plans are open-loop | they do not require sensing.
Reference: [119] <author> M. T. Mason. </author> <title> Compliant motion. </title> <editor> In M. Brady, J. M. Hollerbach, T. L. Johnson, T. Lozano-Perez, and M. T. Mason, editors, </editor> <title> Robot Motion. </title> <publisher> MIT Press, </publisher> <year> 1982. </year>
Reference-contexts: Whitney and colleagues [185, 186, 134] have analyzed assembly operations and developed devices, notably the Remote Center Compliance for insertions, to overcome uncertainties during assembly. Compliant motions have been used to overcome positional uncertainties between contact surfaces; see Mason <ref> [119] </ref> for an overview of issues related to compliant motion. One approach to reducing uncertainty is to use the stable states resulting from a manipulation operation to constrain the object configurations. Hanafusa and Asada [87] consider grasping an object stably by using a three-fingered robot hand.
Reference: [120] <author> M. T. Mason. </author> <title> Manipulator Grasping and Pushing Operations. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1982. </year> <note> Also Artificial Intelligence Lab TR-690. </note>
Reference-contexts: The motion of a pushed object depends on its geometry, the pressure distribution between the object and the support surface, the nature of contact between the pusher and the object, and the motion of the pusher. Mason <ref> [120, 121] </ref> analyzed the mechanics of robotic pushing operations. He developed a procedure to determine the instantaneous motion of a pushed object with a known support pressure distribution, and derived rules to predict the rotation direction of a pushed object with an unknown pressure distribution.
Reference: [121] <author> M. T. Mason. </author> <title> Mechanics and planning of manipulator pushing operations. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(3) </volume> <pages> 53-71, </pages> <year> 1986. </year>
Reference-contexts: The motion of a pushed object depends on its geometry, the pressure distribution between the object and the support surface, the nature of contact between the pusher and the object, and the motion of the pusher. Mason <ref> [120, 121] </ref> analyzed the mechanics of robotic pushing operations. He developed a procedure to determine the instantaneous motion of a pushed object with a known support pressure distribution, and derived rules to predict the rotation direction of a pushed object with an unknown pressure distribution. <p> This chapter is concerned with the automatic synthesis of sequences of linear pushing actions for planar transfer of a part, given knowledge of the mechanics of a single pushing action. Previous work in the domain of pushing provides a basis for understanding the mechanics of such pushing actions (Mason <ref> [121] </ref>; Brost [29] ; Peshkin and Sanderson [141]). Sequences of such actions have been used primarily to orient parts (Mani and Wilson [118]; Peshkin and Sanderson [142]).
Reference: [122] <author> M. T. Mason. </author> <title> Compliant sliding of a block along a wall. </title> <booktitle> In First International symposium on Experimental robotics, </booktitle> <month> June </month> <year> 1989. </year> <note> BIBLIOGRAPHY 157 </note>
Reference-contexts: Pham, Cheung, and Yeo [143] analyzed the initial motion of a rectangular object being pushed or pulled and its dependence on the magnitude of the exerted force. Mason <ref> [122] </ref> considered the problem of pushing a block along a wall. Goyal, Ruina, and Papadopoulos [82, 83] assumed a known support pressure distribution and developed a limit surface description of the relation between the frictional forces and object motion.
Reference: [123] <author> M. T. Mason. </author> <title> Two graphical methods for planar contact problems. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 443-448, </pages> <address> Osaka, Japan, </address> <month> Nov. </month> <year> 1991. </year>
Reference-contexts: We consider each primitive in detail to show that they behave as described above. 4.1. SENSORLESS 1JOC MODEL 59 60 CHAPTER 4. SENSORLESS PARTS ORIENTING WITH A ONE-JOINT MANIPULATOR constraints are represented using moment-labeling regions (Mason <ref> [123] </ref>). The convex combination of the contact forces consists of the set of all forces that yield positive moment about the region labeled + and negative moment about the region labeled .
Reference: [124] <author> M. T. Mason and K. M. Lynch. </author> <title> Dynamic manipulation. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 152-159, </pages> <address> Yokohama, Japan, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Rizzi and Koditschek [157] developed a paddle juggler that performs spatial juggling of two balls. Zumel and Erdmann [190] analyze the juggling of a polygon and identify conditions under which the polygon can be brought to a stable trajectory. Mason and Lynch <ref> [124] </ref> present a taxonomy of manipulation models and analyze the throwing of a club as an example of dynamic manipulation. Acceleration forces during the carry phase are used to hold the club in a dynamic grasp. <p> Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA. Their motion strategy was hand-crafted with the assumption of infinite friction at the rolling contact. Lynch and Mason <ref> [124, 113, 117] </ref> report automatic planning of rolling, throwing, and snatching tasks using a single degree of freedom robot. 1.2.7 Sensor-based manipulation In early work, Pingle et al. [144] demonstrated simple sensing and alignment steps to reduce uncertainty in object positions for programmable assembly examples.
Reference: [125] <author> P. S. Maybeck. </author> <title> The Kalman Filter: An introduction to concepts. In Stochastic Models, Estimation and Control. </title> <publisher> Academic Press, </publisher> <year> 1979. </year>
Reference-contexts: Morrow, Nelson, and Khosla [127] describe the use of vision and force based sensorimotor primitives to perform insertions of electrical connectors. Feedback loops are a particular class of sensor-based operations where the instantaneous sensor data is sufficient to select an action. Kalman filters <ref> [125] </ref> are used when the uncertainty in sensor information results from system and measurement errors rather than ambiguities in interpretation of the sensor information.
Reference: [126] <author> T. McGeer. </author> <title> Passive dynamic walking. </title> <journal> International Journal of Robotics Research, </journal> <volume> 9(2) </volume> <pages> 62-82, </pages> <year> 1990. </year>
Reference-contexts: RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. [56], Canny and Goldberg [40], and Bohringer et al. [20]. Raibert [146] and McGeer <ref> [126] </ref> constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]).
Reference: [127] <author> J. D. Morrow, B. J. Nelson, and P. K. Khosla. </author> <title> Vision and force driven sensorimotor primitives for robotic assembly skills. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <address> Pittsburgh, PA, </address> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Hasegawa et al. [88] use manipulation primitives called skills to accomplish contact between objects, face alignment, 14 CHAPTER 1. INTRODUCTION and insertions. These skills use sensor data to achieve desired states despite errors in positioning. Morrow, Nelson, and Khosla <ref> [127] </ref> describe the use of vision and force based sensorimotor primitives to perform insertions of electrical connectors. Feedback loops are a particular class of sensor-based operations where the instantaneous sensor data is sufficient to select an action.
Reference: [128] <author> A. Mottaez and K. Y. Goldberg. </author> <title> Positioning polygonal parts without sensors. </title> <booktitle> In SPIE Conference on Sensors and Controls for Automated Manufacturing Systems, </booktitle> <address> Boston, MA, </address> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: A combination of pushes and grasps with a parallel jaw gripper, the use of a specially-shaped fence (Brost [31]), or a sequence of centering operations (Mottaez and Goldberg <ref> [128] </ref>) are ways to reduce the pose uncertainty of the part. We have made the analysis tractable by separating part orientation from part position to the extent possible. When treating pose uncertainty, it may be necessary to consider the orientation and position together.
Reference: [129] <author> R. M. Murray, Z. Li, and S. S. Sastry. </author> <title> A Mathematical Introduction to Robotic Manipulation. </title> <publisher> CRC Press, </publisher> <year> 1994. </year>
Reference-contexts: Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]). A good introduction to nonlinear control is given by Nijmeijer and van der Schaft [136], and nonholonomic robotic systems are discussed in the texts by Latombe [105] and Murray et al. <ref> [129] </ref>. Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability.
Reference: [130] <author> K. Nagata. </author> <title> Manipulation by a parallel-jaw gripper having a turntable at each fingertip. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1663-1670, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Sawasaki, Inaba, and Inoue [161] used stand-up and tumbling operations with fingers to manipulate objects in contact with a support surface. Aiyama, Inaba, and Inoue [3] use pivoting operations, where they manipulate an object supported on a surface by rotating the object about its vertices. Nagata <ref> [130] </ref> developed a parallel-jaw gripper with a turntable on each jaw and used it to perform operations such as sliding a block on a plane. Terasaki and Hasegawa [177] describe a manipulation system that slides and rotates an object to enable subsequent grasping.
Reference: [131] <author> B. K. Natarajan. </author> <title> Some paradigms for the automated design of parts feeders. </title> <journal> International Journal of Robotics Research, </journal> <volume> 8(6), </volume> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: Erdmann and Mason [66] explored the use of sensorless manipulation strategies to eliminate uncertainty in the configuration of a part in a tray by repeated tilts of the tray. They implemented a planner that used a knowledge of the mechanics of sliding to predict the results of actions. Natarajan <ref> [131] </ref> focused on the computational issues related to the automated design of sensorless parts feeders. By assuming deterministic transitions of an orienting device and monotonicity conditions, he was able to derive polynomial time algorithms for certain classes of object orienting problems.
Reference: [132] <author> G. L. Nemhauser and L. A. Wolsey. </author> <title> Integer and Combinatorial Optimization. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: POSING PARTS IN THE PLANE BY PUSHING 2.5 Minimizing Plan Execution Time We have also developed a linear mixed-integer programming (MIP) formulation to minimize any linear function of the push distance and the number of pushes, and have implemented this formulation in our planner. (See Nemhauser and Wolsey <ref> [132] </ref> for an introduction to integer programming.) The MIP formulation shares the completeness property of the LP formulation. We illustrate the MIP formulation by minimizing the time taken to execute a plan.
Reference: [133] <author> A. G. Neumann. </author> <title> The new ASME Y14.5M standard on dimensioning and tolerancing. </title> <journal> Manufacturing Review, </journal> <volume> 7(1) </volume> <pages> 9-15, </pages> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: He used tolerance zones to describe the valid variational class of parts and offset operations to generate these tolerance zones. Requicha [154] surveys various approaches to tolerancing and uses the offset zone tolerancing technique to describe the advantages of a mathematical theory of tolerances. Neumann <ref> [133] </ref> describes a new dimensioning and tolerancing standard, ASME Y14.5M, and Walker and Srinivasan [182] describe a companion standard, ASME Y14.5.1M-199X, that provides a mathematical basis for dimensioning and tolerancing. Yap [188] advocates the use of computational geometry techniques and exact computation for tolerancing metrology.
Reference: [134] <author> J. L. Nevins and D. E. Whitney. </author> <title> Computer-controlled assembly. </title> <journal> Scientific American, </journal> <volume> 238(2), </volume> <month> Feb. </month> <year> 1978. </year>
Reference-contexts: Brooks [28] extended this approach by using symbolic means to provide error estimates and identify points in a plan where sensing operations are necessary to overcome the uncertainty. Whitney and colleagues <ref> [185, 186, 134] </ref> have analyzed assembly operations and developed devices, notably the Remote Center Compliance for insertions, to overcome uncertainties during assembly. Compliant motions have been used to overcome positional uncertainties between contact surfaces; see Mason [119] for an overview of issues related to compliant motion.
Reference: [135] <author> J. Nievergelt and F. Preparata. </author> <title> Plane-sweep algorithmss for intersecting geometric figures. </title> <journal> Communications of the ACM, </journal> <volume> 25(10) </volume> <pages> 739-747, </pages> <month> Oct. </month> <year> 1982. </year>
Reference-contexts: The shrunken stability region is in the interior of the stability region which is in turn in the interior of the expanded stability region. We compute these regions by performing region intersection and union operations. (See Nievergelt and Preparata <ref> [135] </ref> for a description of region intersection and union algorithms.) 6.3.1 Stability Region Computation Stability Region of an Edge. The stability region of a part edge is the region of locations of the center of mass for which the edge is stable.
Reference: [136] <author> H. Nijmeijer and A. J. van der Schaft. </author> <title> Nonlinear Dynamical Control Systems. </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]). A good introduction to nonlinear control is given by Nijmeijer and van der Schaft <ref> [136] </ref>, and nonholonomic robotic systems are discussed in the texts by Latombe [105] and Murray et al. [129]. Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability. <p> The system therefore satisfies the Lie Algebra Rank Condition, and it is small-time accessible. If both the conveyor and the turntable are bidirectional (both v and ! can be positive or negative), the system is also small-time locally controllable (Nijmeijer and van der Schaft <ref> [136] </ref>). If either or both is unidirectional, the system is not small-time locally controllable, but it can be shown to be controllable by a simple constructive argument (Brockett [26]; Lynch and Mason [114]). 44 CHAPTER 3.
Reference: [137] <author> N. J. Nilsson. </author> <title> A mobile automaton: </title> <booktitle> An application of artificial intelligence techniques. In International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 509-520, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1969. </year>
Reference-contexts: Jia and Erdmann [99] include dynamics in their analysis of the motion of an object pushed by a finger. By sensing contact positions of the object on the finger, they determine the initial pose of the object. Work on pushing by mobile robots dates back to work by Nilsson <ref> [137] </ref>. Okawa and Yokoyama [138] describe a mobile robot for pushing a box to a goal position through a specified set of via points. When the object mass and size are greater than that of the robot, multiple robots may be required to push the object.
Reference: [138] <author> Y. Okawa and K. Yokoyama. </author> <title> Control of a mobile robot for the push-a-box operation. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 761-766, </pages> <address> Nice, France, </address> <month> May </month> <year> 1992. </year> <note> 158 BIBLIOGRAPHY </note>
Reference-contexts: By sensing contact positions of the object on the finger, they determine the initial pose of the object. Work on pushing by mobile robots dates back to work by Nilsson [137]. Okawa and Yokoyama <ref> [138] </ref> describe a mobile robot for pushing a box to a goal position through a specified set of via points. When the object mass and size are greater than that of the robot, multiple robots may be required to push the object.
Reference: [139] <author> G. Oriolo and Y. Nakamura. </author> <title> Control of mechanical systems with second-order nonholonomic constraints: Underactuated manipulators. </title> <booktitle> In Proceedings of the 30th Conference on Decision and Control, </booktitle> <pages> pages 2398-2403, </pages> <year> 1991. </year>
Reference-contexts: Much of the work on underactuated manipulation has exploited dynamic coupling among freedoms. Research on the controllability of such serial link manipulators has been carried out by Oriolo and Nakamura <ref> [139] </ref> and Arai and Tachi [11]. Strdalen et al. [171] recently developed a nonholonomic gear which allowed them to construct a controllable n-link planar arm with only two motors. Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA.
Reference: [140] <author> N. Papanikolopoulos, P. K. Khosla, and T. Kanade. </author> <title> Visual tracking of a moving target by a camera mounted on a robot: A combination of control and vision. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 9(1), </volume> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: An important issue in these problems, assuming availability of complete sensors, is the relative difference in the servo rate and the sensor update rate. Papanikolopoulos et al. <ref> [140] </ref> use feedback control algorithms in conjunction with vision data from a camera to demonstrate real-time robotic tracking of objects in 2-D space. They overcome uncertainty due to noisy data and slow processing of images by a combination of stochastic controllers and interpolation techniques.
Reference: [141] <author> M. A. Peshkin and A. C. Sanderson. </author> <title> The motion of a pushed sliding workpiece. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(6) </volume> <pages> 569-598, </pages> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: As an intermediate result, using the pushing rules of Mason, he developed the push stability diagram to describe the possible motions of an object being pushed by a fence. Peshkin and Sanderson <ref> [141] </ref> found the locus of centers of rotation of a pushed object for all possible pressure distributions over an enclosing circle centered at the object center of mass. These centers of rotation provide bounds on the rate of rotation of an object being pushed. <p> Previous work in the domain of pushing provides a basis for understanding the mechanics of such pushing actions (Mason [121]; Brost [29] ; Peshkin and Sanderson <ref> [141] </ref>). Sequences of such actions have been used primarily to orient parts (Mani and Wilson [118]; Peshkin and Sanderson [142]). <p> This push reorients the part to a known orientation. We refer to the minimum push distance guaranteed to align the part edge with the fence for a given initial angle as the Peshkin distance for that reorientation. We compute this distance from the results of Peshkin and Sanderson <ref> [141] </ref>, as shown in Appendix A. 3. Incomplete push: The push begins with an initial angle between the fence and part edge, but unlike the reorient push, the part does not rotate sufficiently for the edge to be aligned with the fence by the end of the push. <p> There are a few subtleties that must be addressed: * Convergence time. How long must the system wait for the part to converge to a stable edge? We need an upper bound on convergence time. In principle this upper bound can be obtained using Peshkin's and Sanderson's results <ref> [141] </ref>. However there is an exception, which occurs when a part is balanced on a vertex with its center of friction directly above. Our planning method will avoid these configurations, but there are two special cases discussed below. * Starting configuration. <p> We use a frictionless fence, so the part may also slide along the fence during the alignment phase. For a known constant conveyor velocity, we can find an upper bound on the time required for the rotation using the results of Peshkin and Sanderson <ref> [141] </ref>. They determine the minimum distance a part has to be pushed by a fence to rotate it into alignment with the fence. There are a couple of additional subtleties during the push-alignment phase. <p> CONCLUSION Appendix A The Peshkin Distance The minimum distance a fence must translate in contact with an object to ensure that an edge of the object rotates into alignment with the fence is determined by Peshkin and Sanderson <ref> [141] </ref>. For the case when there is no slip between the object and the fence, this distance corresponds to the center of rotation of the object consistent with sticking that causes the slowest rotation. <p> THE PESHKIN DISTANCE Figure A.1: Variables to calculate the Peshkin distance. From Peshkin and Sanderson <ref> [141] </ref>. Appendix B LED Sensor to Measure Part Diameter I constructed a simple sensor to measure the diameter of parts aligned against a fence.
Reference: [142] <author> M. A. Peshkin and A. C. Sanderson. </author> <title> Planning robotic manipulation strategies for workpieces that slide. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(5) </volume> <pages> 524-531, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: These centers of rotation provide bounds on the rate of rotation of an object being pushed. From the center of rotation corresponding to the slowest rotation, they calculated the minimum push distance guaranteed to align the object with the fence. Using these results, Peshkin and Sanderson <ref> [142] </ref> described the orienting effect of a fence in terms of its configuration map, which maps all initial orientations of the object to all possible resulting orientations. They used these configuration maps to find a sequence of fences to automatically orient a sliding part. <p> Its output would be a sequence of tilt angles, linear in the number of faces of the polyhedron, that is guaranteed to reorient the polyhedron. Peshkin and Sanderson <ref> [142] </ref> used results on the motion of a pushed object to find a sequence of fences to automatically orient a sliding part. Brokowski, Peshkin, and Goldberg [27] designed curved fence sections to eliminate uncertainty in the orientations of parts being oriented by the fences. <p> Previous work in the domain of pushing provides a basis for understanding the mechanics of such pushing actions (Mason [121]; Brost [29] ; Peshkin and Sanderson [141]). Sequences of such actions have been used primarily to orient parts (Mani and Wilson [118]; Peshkin and Sanderson <ref> [142] </ref>). Here we develop a method to find plans to move a polygonal part from a known initial position and orientation to a goal position and orientation using linear normal pushes executed by a fence. These plans are open-loop | they do not require sensing.
Reference: [143] <author> D. T. Pham, K. C. Cheung, and S. H. Yeo. </author> <title> Initial motion of a rectangular object being pushed or pulled. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1046-1050, </pages> <address> Cincinnati, OH, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: RELATED WORK 9 parts being oriented by the fence. Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. Pham, Cheung, and Yeo <ref> [143] </ref> analyzed the initial motion of a rectangular object being pushed or pulled and its dependence on the magnitude of the exerted force. Mason [122] considered the problem of pushing a block along a wall.
Reference: [144] <author> K. Pingle, R. Paul, and R. Bolles. </author> <title> Programmable assembly, three short examples. </title> <type> Film, </type> <institution> Stanford Artificial Intelligence Laboratory, </institution> <month> Oct. </month> <year> 1974. </year>
Reference-contexts: Their motion strategy was hand-crafted with the assumption of infinite friction at the rolling contact. Lynch and Mason [124, 113, 117] report automatic planning of rolling, throwing, and snatching tasks using a single degree of freedom robot. 1.2.7 Sensor-based manipulation In early work, Pingle et al. <ref> [144] </ref> demonstrated simple sensing and alignment steps to reduce uncertainty in object positions for programmable assembly examples. Grossman and Blasgen [86] describe a system that orients parts by a combination of tilt, vibration, and probing operations. The manipulator drops the part into a tilted tray which is then vibrated.
Reference: [145] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Given a nominal center of mass location, we can perform point-inclusion tests to determine if the center of mass is in the interior of the shrunken stability and expanded stability regions. (See Preparata and Shamos' book <ref> [145] </ref> for a description of point-inclusion algorithms.) These tests identify an edge as always stable, always unstable, or sometimes stable.
Reference: [146] <author> M. H. Raibert. </author> <title> Legged Robots That Balance. </title> <publisher> Cambridge: MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: Wiegley et al. [187] developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. [56], Canny and Goldberg [40], and Bohringer et al. [20]. Raibert <ref> [146] </ref> and McGeer [126] constructed simple, elegant machines that use dynamics for stable locomotion. The 1JOC system of Chapter 3 is an underactuated system with a drift field. Such systems have been heavily studied in nonlinear control theory; see, for instance, (Brockett [26]; Crouch [49]).
Reference: [147] <author> A. S. Rao and K. Y. Goldberg. </author> <title> Orienting generalized polygons. </title> <booktitle> In 1992 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1992. </year>
Reference-contexts: For any polygonal part, there is an infinite set of parts with the same diameter function. They also describe optimal and suboptimal strategies to recognize a part from a known set of parts by grasping it and sensing the jaw diameter. In <ref> [147] </ref>, they present algorithms for orienting curved planar parts.
Reference: [148] <author> A. S. Rao and K. Y. Goldberg. </author> <title> On the relation between friction and part shape in parallel-jaw grasping. </title> <booktitle> In 1993 IEEE International Conf. on Robotics and Automation., </booktitle> <year> 1993. </year>
Reference-contexts: They also describe optimal and suboptimal strategies to recognize a part from a known set of parts by grasping it and sensing the jaw diameter. In [147], they present algorithms for orienting curved planar parts. They <ref> [148] </ref> further extend these results to the case of a gripper with friction between the object and the gripper, and show that under certain conditions, this is similar to the problem of orienting a curved polygonal part with a frictionless gripper. 12 CHAPTER 1.
Reference: [149] <author> A. S. Rao and K. Y. Goldberg. </author> <title> Placing registration marks. </title> <booktitle> In 1993 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: Alevizos et al. [8] contain results on determining the shape of a simple polygon by a minimal number of probes. Wallack, Canny, and Manocha [183] discuss the use of cross beam sensors to determine the orientation of an object by measuring its diameter at three angles. Rao and Goldberg <ref> [149] </ref> consider the placement of fiduciary marks on an object for optimal distinguishability of a known set of poses. Jia and Erdmann [98] examine the issue of finding the minimum number of sensing points required to distinguish between a finite set of poses of a known set of polygonal shapes.
Reference: [150] <author> A. S. Rao and K. Y. Goldberg. </author> <title> Shape from diameter: Recognizing polygonal parts with a parallel-jaw gripper. </title> <journal> International Journal of Robotics Research, </journal> <volume> 13(1) </volume> <pages> 16-37, </pages> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: An interesting aspect of Goldberg's planner is that it is provably complete, that is, it is guaranteed to generate a plan to orient any polygonal object (up to symmetry). Rao and Goldberg <ref> [150] </ref> show that for the class of planar polygonal parts, the shape of a part cannot be uniquely recovered from its diameter function. For any polygonal part, there is an infinite set of parts with the same diameter function. <p> They applied this framework to the task of orienting an object by tray tilting, and the task of orienting and grasping an object by a parallel-jaw gripper. Our work is also related to the work of Rao and Goldberg <ref> [150] </ref> on orienting multiple parts by parallel-jaw grasping. They describe the characteristics of the diameter function and its implications for the uniqueness of part shapes and orientability and recognizability of parts. 5.1 Assumptions In analyzing our system, we make the following assumptions: 1. All parts are polygons.
Reference: [151] <author> A. S. Rao, D. Kriegman, and K. Y. Goldberg. </author> <title> Complete algorithms for reorienting polyhedral parts using a pivoting gripper. </title> <booktitle> In 1995 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2242-2248, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Hermann and Kremer [89] provide a good introduction to the main issues in nonlinear controllability and observability. Other examples of manipulation by an underactuated effector include slipping and rolling within a grasp (Bicchi and Sorrentino [19]; Brock [25]; Rao et al. <ref> [151] </ref>) and dynamic tasks such as snatching, rolling, and throwing (Arai and Khatib [10]; Lynch [113]). The 1JOC can be likened to an underactuated manipulator in a gravity field, where the proximal "shoulder" (fence pivot) is directly actuated, but the distal degrees of freedom (represented by the object) are not.
Reference: [152] <author> A. A. G. Requicha. </author> <title> Toward a theory of geometric tolerancing. </title> <journal> International Journal of Robotics Research, </journal> <volume> 2(4) </volume> <pages> 45-60, </pages> <year> 1983. </year>
Reference-contexts: The goals of this mathematization are to avoid ambiguous interpretations, establish correct measurement techniques, and identify data structures and algorithms suitable for use in geometric modeling systems. Requicha <ref> [152, 153] </ref> developed a mathematical formalism for the analysis and design of toleranced parts. He used tolerance zones to describe the valid variational class of parts and offset operations to generate these tolerance zones. <p> We identify conditions under which we can generate orienting plans for parts with shape uncertainty using the parts orienting system of the previous chapter. The variations in the shape of a part are characterized by the part's nominal shape and bounds on the shape uncertainty. The variational class (Requicha <ref> [152] </ref>) of parts for a given nominal part shape and a given model of shape uncertainty is the class of all part shapes that satisfy the shape uncertainty bounds. <p> Since the vertices and center of mass uncertainty regions are explicitly bounded, we can compute these orientation ranges. Alternative models of shape uncertainty have been developed for other problems, including those of Requicha <ref> [152] </ref>, Brost [32], and Latombe and Wilson [106]. Requicha's model specifies tolerance zones by sweeping out circles of specified radii along the polygon edges. Brost's model specifies tolerance zones by 114 CHAPTER 6. <p> It would be interesting to apply our techniques to other tolerance models such as the least material, maximal material model of Requicha <ref> [152, 154] </ref>, or the perfect orientation model of Latombe and Wilson [106]. Whenever the shape uncertainty model allows us to compute the transition ranges 138 CHAPTER 6. PARTS ORIENTING WITH SHAPE UNCERTAINTY and variations in edge orientation, plan generation should be possible.
Reference: [153] <author> A. A. G. Requicha. </author> <title> Representation of tolerances in solid modeling: Issues and alternative approaches. </title> <editor> In M. S. Pickett and J. W. Boyse, editors, </editor> <title> Solid Modeling by Computers: </title> <booktitle> From Theory to Applications, </booktitle> <pages> pages 3-22. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: The goals of this mathematization are to avoid ambiguous interpretations, establish correct measurement techniques, and identify data structures and algorithms suitable for use in geometric modeling systems. Requicha <ref> [152, 153] </ref> developed a mathematical formalism for the analysis and design of toleranced parts. He used tolerance zones to describe the valid variational class of parts and offset operations to generate these tolerance zones.
Reference: [154] <author> A. A. G. Requicha. </author> <title> Mathematical definition of tolerance specifications. </title> <journal> Manufacturing Review, </journal> <volume> 6(4) </volume> <pages> 269-274, </pages> <month> Dec. </month> <year> 1993. </year> <note> BIBLIOGRAPHY 159 </note>
Reference-contexts: Requicha [152, 153] developed a mathematical formalism for the analysis and design of toleranced parts. He used tolerance zones to describe the valid variational class of parts and offset operations to generate these tolerance zones. Requicha <ref> [154] </ref> surveys various approaches to tolerancing and uses the offset zone tolerancing technique to describe the advantages of a mathematical theory of tolerances. <p> It would be interesting to apply our techniques to other tolerance models such as the least material, maximal material model of Requicha <ref> [152, 154] </ref>, or the perfect orientation model of Latombe and Wilson [106]. Whenever the shape uncertainty model allows us to compute the transition ranges 138 CHAPTER 6. PARTS ORIENTING WITH SHAPE UNCERTAINTY and variations in edge orientation, plan generation should be possible.
Reference: [155] <author> E. Rich and K. Knight. </author> <booktitle> Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Siegel [165] describes the use of joint angle and torque sensing to determine the pose of planar objects grasped by the Utah-MIT hand. 1.2.11 Artificial Intelligence Planning AI search techniques such as breadth-first search, A* search, AND/OR tree search are discussed by Rich and Knight <ref> [155] </ref>. Buckley [37] uses a state-graph representation which is essentially an AND/OR graph representation for compliant motion planning. de Mello and Sanderson [51] use AND/OR graphs to represent all possible subassemblies and the sequence of assembly operations during assembly of a part. <p> An action consists of rotating the part by a chosen angle before it is made to contact the fence. We perform breadth-first search to find a minimum-length sensorless plan (Figures 5.15 and 5.16). (See Rich and Knight <ref> [155] </ref> for an introduction to search techniques.) We have implemented this planner in Common Lisp. The search uses two lists, OPEN and CLOSED. Search is initialized with the root node containing the set of all stable states and the root node on the OPEN list. <p> The greedy algorithm takes polynomial time, but returns potentially suboptimal plans. 5.5.1 AND/OR Search To find an orienting plan, we perform a breadth-first AND/OR search. (See Rich and Knight <ref> [155] </ref> for a description of AND/OR graphs and the similar AO* algorithm.) The root node corresponds to the set of all possible orientations of the part.
Reference: [156] <author> F. J. Riley. </author> <title> Assembly Automation: A Management Handbook. </title> <publisher> Industrial Press, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: INTRODUCTION 1.2.5 Parts Feeding Our long-term goal is to develop parts feeders with practical use in industry. Much of our work was inspired by industrial parts feeders such as vibratory bowl feeders, the SONY APOS system (Hitakawa [91]), and the Adept FlexFeeder. Riley <ref> [156] </ref> provides a good introduction and survey of the area of industrial automatic assembly. Vibratory bowl feeders have been in widespread industrial use since their introduction in the 1940s. Boothroyd et al. [23] describe parts feeding and orienting devices for automated assembly, including bowl feeders. <p> Chapter 5 Parts Orienting with Partial Sensor Information A parts orienting system has to bring randomly oriented parts to desired orientations for subsequent assembly. Vibratory bowl feeders are the most commonly used systems in industry today for orienting parts (Boothroyd et al. [23]; Riley <ref> [156] </ref>). While very effective, bowl feeders are not reconfigurable and require skilled craftsmen to design them. It can take a couple of months to design a bowl feeder for a new part or even a slightly modified part, or to discover that the part cannot be fed.
Reference: [157] <author> A. A. Rizzi and D. E. Koditschek. </author> <title> Further progress in robot juggling: The spatial two-juggle. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 3 919-924, </pages> <address> Atlanta, Georgia, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Buehler, Koditschek, and Kindlmann [38] describe "mirror" algorithms to control a one degree of freedom robot system that can stably juggle one or two pucks simultaneously in a vertical plane. Rizzi and Koditschek <ref> [157] </ref> developed a paddle juggler that performs spatial juggling of two balls. Zumel and Erdmann [190] analyze the juggling of a polygon and identify conditions under which the polygon can be brought to a stable trajectory.
Reference: [158] <author> K. Salisbury. </author> <title> Whole arm manipulation. </title> <editor> In R. C. Bolles and B. Roth, editors, </editor> <booktitle> Robotics Research: The Fourth International Symposium, </booktitle> <pages> pages 183-190, </pages> <address> Cambridge, MA, Aug. 1988. </address> <publisher> MIT Press. </publisher>
Reference-contexts: Much of the work on pushing cited above can be viewed as examples of nonprehensile manipulation. The 1JOC approach of Chapters 3 and 4 is an example of using a simple effector to perform nonprehensile manipulation. Salisbury <ref> [158] </ref> discusses whole arm manipulation, where manipulator link surfaces can contact objects to manipulate them. Nonprehensile manipulation occurs during a grasp when the object slips or rolls relative to the gripper.
Reference: [159] <author> A. C. Sanderson. </author> <title> Parts entropy methods for robotics assembly system design. </title> <booktitle> In 1984 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1984. </year>
Reference-contexts: The manipulator drops the part into a tilted tray which is then vibrated. The part comes to rest in one of a finite set of orientations, which are discriminated using mechanical probing operations. The probe points were specified by the operator. Sanderson <ref> [159] </ref> used positional entropy measures to determine the relative efficiency of mechanical operations and sensor operations for mechanical assembly tasks. Taylor et al. [176] approached automatic planning of sensor-based manipulation programs as a game-theory problem where the goal of the robot is to achieve a specified task state.
Reference: [160] <author> L. A. Santalo. </author> <title> Integral Geometry and Geometric Probability. </title> <journal> Encyclopedia of Mathematics and its Applications, </journal> <volume> Vol. 1. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1976. </year>
Reference-contexts: ACTION MODEL 79 to a fixed support line, the fence. The radius function is a support function of a polygon. (See Valentine [180] for an introduction to support functions of convex sets.) Prior results (Santalo <ref> [160] </ref> for example) show that there is a 1-to-1 mapping between a smooth convex shape and its support function. 5.2.4 Resting Ranges The radius function gives the polygon radius as a function of the orientation of the support line.
Reference: [161] <author> N. Sawasaki, M. Inaba, and H. Inoue. </author> <title> Tumbling objects using a multi-fingered robot. </title> <booktitle> In Proceedings of the 20th International Symposium on Industrial Robots and Robot Exhibition, </booktitle> <pages> pages 609-616, </pages> <address> Tokyo, Japan, </address> <year> 1989. </year>
Reference-contexts: Kao and Cutkosky [101] explicitly consider sliding of robot fingers on an object and plan finger motions so the object follows a desired trajectory. Sawasaki, Inaba, and Inoue <ref> [161] </ref> used stand-up and tumbling operations with fingers to manipulate objects in contact with a support surface. Aiyama, Inaba, and Inoue [3] use pivoting operations, where they manipulate an object supported on a surface by rotating the object about its vertices.
Reference: [162] <author> L. E. </author> <title> Schrage. User's manual for LINDO. </title> <publisher> The Scientific Press, </publisher> <address> Palo Alto, CA, </address> <year> 1981. </year>
Reference-contexts: The inputs to the planner are the start and goal poses, and a geometric description of the part, in terms of its vertices and center of mass. It uses the code to generate the push-stability diagram described by Brost [29], and a commercial linear programming package, LINDO (Schrage <ref> [162] </ref>). The planner takes between 1 and 12 seconds on a SPARCstation IPX to find the best plan for the example parts in this chapter.
Reference: [163] <author> S. Shekhar and J.-C. Latombe. </author> <title> On goal recognizability in motion planning with uncertainty. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1728-1733, </pages> <year> 1991. </year>
Reference-contexts: They present a complete planner for this problem, and illustrate how designing the environment can simplify the task substantially. Shekhar and Latombe <ref> [163] </ref> describe how the set of initial states from which the goal can be achieved (the preimage) is enlarged by using knowledge of initial and final state. These are examples of the characterization of the addition of sensing and internal state to improve robot performance.
Reference: [164] <author> M. Shirai and A. Saito. </author> <title> Parts supply in Sony's general-purpose assembly system "SMART". Jpn. </title> <journal> J. Adv. Automation Tech., </journal> <volume> 1 </volume> <pages> 108-111, </pages> <year> 1989. </year>
Reference-contexts: Christiansen et al. [44] exploit genetic algorithms to identify sequences of bowl feeder gates that improve feeding efficiency. A more recent and successful industrial parts feeding system is the SONY APOS system (Shirai and Saito <ref> [164] </ref>, Hitakawa [91]). The APOS system relies on vibration and shape to orient parts. Parts are made to flow over a vibrating pallet with nests designed to trap only parts in the correct orientation. The remaining parts are recirculated.
Reference: [165] <author> D. M. Siegel. </author> <title> Finding the pose of an object in a hand. </title> <booktitle> In 1991 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1991. </year>
Reference-contexts: Jia and Erdmann [98] examine the issue of finding the minimum number of sensing points required to distinguish between a finite set of poses of a known set of polygonal shapes. Siegel <ref> [165] </ref> describes the use of joint angle and torque sensing to determine the pose of planar objects grasped by the Utah-MIT hand. 1.2.11 Artificial Intelligence Planning AI search techniques such as breadth-first search, A* search, AND/OR tree search are discussed by Rich and Knight [155].
Reference: [166] <author> R. Simmons. </author> <title> Determining sensing resolution and frequency. </title> <booktitle> In 1992 AAAI Spring Symposium on Control of Selective Perception, </booktitle> <year> 1992. </year>
Reference-contexts: Russell and Wefald [184] discuss the use of decision-theoretic techniques in conjunction with traditional AI planning techniques. Chrisman and Simmons [42] use static sensing policies to determine plans which are near cost optimal with respect to both action and sensing. Simmons <ref> [166] </ref> explores, by coupling symbolic constraints and probability estimates, the effect of changing the resolution and frequency of sensing operations on the expected cost of a plan. Stentz [172] describes a new dynamic path planning algorithm called D* for mobile robots operating in unknown environments.
Reference: [167] <author> R. Simmons and S. Koenig. </author> <title> Probabilistic robot navigation in partially observable environments. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1080-1087. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1995. </year>
Reference-contexts: He shows that the implemented planner is efficient, optimal, and complete. Elfes [59] describes a mobile robot that can dynamically plan and control sensor activities using information-theoretic measures to characterize the different task requirements. Simmons and Koenig <ref> [167] </ref> use partially observable Markov decision process (POMDP) models to keep track of the location of an indoor mobile robot.
Reference: [168] <author> S. Simunovic. </author> <title> Force information in assembly processes. </title> <booktitle> In Proceedings, 5th International Symposium on Industrial Robotics, </booktitle> <pages> pages 415-431, </pages> <address> Chicago, IL, </address> <month> Sept. </month> <year> 1975. </year>
Reference-contexts: Shape uncertainty causes variations in the diameter values. The average diameter value of the possible states is indicated at each node. 8 CHAPTER 1. INTRODUCTION assembly tolerances. This illustrates use of the task mechanics and sensor data to overcome uncertainty and enlarge the set of solvable tasks. Simunovic <ref> [168] </ref> analyzed the contact forces during the insertion of a peg in a hole and identified conditions under which jamming occurs.
Reference: [169] <author> N. C. Singer and W. P. Seering. </author> <title> Utilizing dynamic stability to orient parts. </title> <journal> Journal of Applied Mechanics, </journal> <volume> 54 </volume> <pages> 961-966, </pages> <month> Dec. </month> <year> 1987. </year>
Reference-contexts: Riley [156] provides a good introduction and survey of the area of industrial automatic assembly. Vibratory bowl feeders have been in widespread industrial use since their introduction in the 1940s. Boothroyd et al. [23] describe parts feeding and orienting devices for automated assembly, including bowl feeders. Singer and Seering <ref> [169] </ref> analyzed the effects of impacts and oscillatory motions on a part and determine conditions for it to reorient. Their goal was to identify impacts and oscillatory motions that can change the initially unknown state of the part to a desired goal state.
Reference: [170] <author> S. S. Skiena. </author> <title> Problems in geometric probing. </title> <journal> Algorithmica, </journal> <volume> 4, </volume> <year> 1989. </year>
Reference-contexts: There is also related theoretical work on determining the shapes and poses of polygons by geometric probing. Cole and Yap [47] discuss the number of probes necessary to determine the shape and position of a polygon. Skiena <ref> [170] </ref> describes a variety of probing models and provides a list of open problems in probing. Alevizos et al. [8] contain results on determining the shape of a simple polygon by a minimal number of probes.
Reference: [171] <author> O. Strdalen, Y. Nakamura, and W. Chung. </author> <title> Design of a nonholonomic manipulator. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 8-13, </pages> <year> 1994. </year> <note> 160 BIBLIOGRAPHY </note>
Reference-contexts: Much of the work on underactuated manipulation has exploited dynamic coupling among freedoms. Research on the controllability of such serial link manipulators has been carried out by Oriolo and Nakamura [139] and Arai and Tachi [11]. Strdalen et al. <ref> [171] </ref> recently developed a nonholonomic gear which allowed them to construct a controllable n-link planar arm with only two motors. Arai and Khatib [10] demonstrated rolling of a cube on a paddle held by a PUMA.
Reference: [172] <author> A. Stentz. </author> <title> Optimal and efficient path planning for unknown and dynamic environments. </title> <type> Technical Report CMU-RI-TR-93-20, </type> <institution> The Robotics Institute, Carnegie Mellon University, </institution> <year> 1993. </year>
Reference-contexts: Simmons [166] explores, by coupling symbolic constraints and probability estimates, the effect of changing the resolution and frequency of sensing operations on the expected cost of a plan. Stentz <ref> [172] </ref> describes a new dynamic path planning algorithm called D* for mobile robots operating in unknown environments. As the robot moves towards the goal, the sensors report obstacles, and the algorithm recomputes the optimal plan by propagating arc costs minimally.
Reference: [173] <author> H. J. Sussmann. </author> <title> Lie brackets, real analyticity and geometric control. </title> <editor> In R. W. Brockett, R. S. Millman, and H. J. Sussmann, editors, </editor> <title> Differential Geometric Control Theory. </title> <publisher> Birkhauser, </publisher> <year> 1983. </year>
Reference-contexts: To be precise, we borrow definitions of reachable sets from nonlinear control theory (Sussmann <ref> [173] </ref>). A part's configuration q = (x; y; ) T is controllable from q if, starting from q, the part can reach every configuration in the configuration space. The part is controllable to q if q is reachable from every configuration.
Reference: [174] <author> P. J. Swanson, R. R. Burridge, and D. E. Koditschek. </author> <title> Global asymptotic stability of a passive juggler: A parts feeding strategy. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1983-1988, </pages> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: Bohringer, Bhatt, and Goldberg [21] use a vibrating plate to position and orient parts sensorlessly. The vibrations generate a force field, and parts move to nodes of 1.2. RELATED WORK 11 the vibratory force field. Swanson, Burridge, and Koditschek <ref> [174] </ref> analyze the motion of a part subjected to a vibratory juggling motion and indicate conditions under which all initial orientations of the part acquire a unique stable motion. Juggling, throwing, and striking provide dramatic examples of nonprehensile manipulation.
Reference: [175] <author> R. H. Taylor. </author> <title> A Synthesis of Manipulator Control Programs from Task-Level Specifications. </title> <type> PhD thesis, </type> <institution> Artificial Intelligence Laboratory, Stanford University, </institution> <year> 1976. </year>
Reference-contexts: INTRODUCTION assembly tolerances. This illustrates use of the task mechanics and sensor data to overcome uncertainty and enlarge the set of solvable tasks. Simunovic [168] analyzed the contact forces during the insertion of a peg in a hole and identified conditions under which jamming occurs. Taylor <ref> [175] </ref> describes a task-level manipulator planning system that generates skeleton plans from which the possible positional uncertainties are estimated, and discusses the use of sensory operations to bound this uncertainty.
Reference: [176] <author> R. H. Taylor, M. T. Mason, and K. Y. Goldberg. </author> <title> Sensor-based manipulation planning as a game with nature. </title> <editor> In R. C. Bolles and B. Roth, editors, </editor> <booktitle> Robotics Research: The Fourth International Symposium, </booktitle> <pages> pages 421-429, </pages> <address> Cambridge, MA, 1988. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The probe points were specified by the operator. Sanderson [159] used positional entropy measures to determine the relative efficiency of mechanical operations and sensor operations for mechanical assembly tasks. Taylor et al. <ref> [176] </ref> approached automatic planning of sensor-based manipulation programs as a game-theory problem where the goal of the robot is to achieve a specified task state. The robot chooses actions, nature chooses sensor readings, and planning is performed by searching the game tree. <p> Buckley [37] uses a state-graph representation which is essentially an AND/OR graph representation for compliant motion planning. de Mello and Sanderson [51] use AND/OR graphs to represent all possible subassemblies and the sequence of assembly operations during assembly of a part. Taylor et al. <ref> [176] </ref> explored the use of AND/OR search trees in the manipulation domain. Russell and Wefald [184] discuss the use of decision-theoretic techniques in conjunction with traditional AI planning techniques. <p> A preliminary version of this work appeared in Akella and Mason [7]. Our work builds on the work of Taylor et al. <ref> [176] </ref> who performed automatic planning of sensor-based manipulation programs using AND/OR search. They applied this framework to the task of orienting an object by tray tilting, and the task of orienting and grasping an object by a parallel-jaw gripper.
Reference: [177] <author> H. Terasaki and T. Hasegawa. </author> <title> Motion planning for intelligent manipulations by sliding and rotating operations with parallel two-fingered grippers. </title> <booktitle> In IEEE/RSJ International Conference on Robots and Systems, </booktitle> <pages> pages 119-126, </pages> <address> Munich, Germany, </address> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Nagata [130] developed a parallel-jaw gripper with a turntable on each jaw and used it to perform operations such as sliding a block on a plane. Terasaki and Hasegawa <ref> [177] </ref> describe a manipulation system that slides and rotates an object to enable subsequent grasping. Farahat, Stiller, and Trinkle [71] analytically determine the position and orientation of a polygon moving in sliding and rolling contact with two or three position-controlled robots.
Reference: [178] <author> J. C. Trinkle, J. M. Abel, and R. P. Paul. </author> <title> An investigation of frictionless enveloping grasping in the plane. </title> <journal> International Journal of Robotics Research, </journal> <volume> 7(3) </volume> <pages> 33-51, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Salisbury [158] discusses whole arm manipulation, where manipulator link surfaces can contact objects to manipulate them. Nonprehensile manipulation occurs during a grasp when the object slips or rolls relative to the gripper. Trinkle, Abel, and Paul <ref> [178] </ref> presented a planner that uses both the palm surface and fingers of a frictionless gripper to achieve an enveloping grasp of an object. Brock [25] analyzed the permissible motions of an object grasped in a robot hand and used changes in forces to cause controlled slip of the object.
Reference: [179] <author> J. C. Trinkle, A. O. Farahat, and P. F. Stiller. </author> <title> First-order stability cells of active multi-rigid-body systems. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 11(4) </volume> <pages> 545-557, </pages> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Terasaki and Hasegawa [177] describe a manipulation system that slides and rotates an object to enable subsequent grasping. Farahat, Stiller, and Trinkle [71] analytically determine the position and orientation of a polygon moving in sliding and rolling contact with two or three position-controlled robots. Trinkle, Farahat, and Stiller <ref> [179] </ref> analyze systems of multiple objects and manipulators in contact and determine contact states that are stable to small variations in forces. When the contact state causes the object velocity to be uniquely determined from the manipulator velocity, these first-order stability cells can be used to plan whole-arm manipulation tasks.
Reference: [180] <author> F. A. Valentine. </author> <title> Convex Sets. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1964. </year>
Reference-contexts: PARTS ORIENTING WITH PARTIAL SENSOR INFORMATION radius values of edges e 2 and e 5 are shown in the figure. 5.2. ACTION MODEL 79 to a fixed support line, the fence. The radius function is a support function of a polygon. (See Valentine <ref> [180] </ref> for an introduction to support functions of convex sets.) Prior results (Santalo [160] for example) show that there is a 1-to-1 mapping between a smooth convex shape and its support function. 5.2.4 Resting Ranges The radius function gives the polygon radius as a function of the orientation of the support
Reference: [181] <author> H. Voelcker. </author> <title> A current perspective on tolerancing and metrology. </title> <journal> Manufacturing Review, </journal> <volume> 6(4) </volume> <pages> 258-268, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: The approach estimates the probability distribution of the robot location while accounting for environment, sensor, and actuator uncertainties. 1.2.12 Shape Uncertainty and Tolerancing The need to manufacture parts specified by tolerances arose with the development of mass production methods that required parts that could work interchangeably <ref> [181] </ref>. Current industrial 1.2. RELATED WORK 17 standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard [12]. Voelcker [181] surveys the area of tolerancing and describes the trend to move from tolerancing standards specified by figures and examples to those chosen on a mathematical basis. <p> sensor, and actuator uncertainties. 1.2.12 Shape Uncertainty and Tolerancing The need to manufacture parts specified by tolerances arose with the development of mass production methods that required parts that could work interchangeably <ref> [181] </ref>. Current industrial 1.2. RELATED WORK 17 standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard [12]. Voelcker [181] surveys the area of tolerancing and describes the trend to move from tolerancing standards specified by figures and examples to those chosen on a mathematical basis. <p> to handle parts whose set of stable edges may change due to shape uncertainty and conclude with a discussion of future work. 6.1 Shape Uncertainty Model The need to manufacture parts specified by tolerances arose with the development of mass production methods that required parts that could work interchangeably (Voelcker <ref> [181] </ref>). Current industrial standards include the ANSI Y14.5M-1982 tolerancing and dimensioning standard [12]. The shape uncertainty model used in this chapter was earlier described in Akella and Mason [7]. It can be viewed as a parametric tolerance model which permits variations in both the orientations and positions of part edges.
Reference: [182] <author> R. K. Walker and V. Srinivasan. </author> <title> Creation and evolution of the ASME Y14.5.1M standard. </title> <journal> Manufacturing Review, </journal> <volume> 7(1) </volume> <pages> 16-23, </pages> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: Requicha [154] surveys various approaches to tolerancing and uses the offset zone tolerancing technique to describe the advantages of a mathematical theory of tolerances. Neumann [133] describes a new dimensioning and tolerancing standard, ASME Y14.5M, and Walker and Srinivasan <ref> [182] </ref> describe a companion standard, ASME Y14.5.1M-199X, that provides a mathematical basis for dimensioning and tolerancing. Yap [188] advocates the use of computational geometry techniques and exact computation for tolerancing metrology. Such algorithms would estimate the deviations from tolerance of manufactured parts using a set of sampled measurements.
Reference: [183] <author> A. S. Wallack, J. F. Canny, and D. Manocha. </author> <title> Object localization using crossbeam sensing. </title> <booktitle> In IEEE 1993 International Conference on Robotics and Automation, </booktitle> <year> 1993. </year>
Reference-contexts: Skiena [170] describes a variety of probing models and provides a list of open problems in probing. Alevizos et al. [8] contain results on determining the shape of a simple polygon by a minimal number of probes. Wallack, Canny, and Manocha <ref> [183] </ref> discuss the use of cross beam sensors to determine the orientation of an object by measuring its diameter at three angles. Rao and Goldberg [149] consider the placement of fiduciary marks on an object for optimal distinguishability of a known set of poses.
Reference: [184] <author> E. Wefald and S. J. Russell. </author> <title> Do the right thing: studies in limited rationality. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Taylor et al. [176] explored the use of AND/OR search trees in the manipulation domain. Russell and Wefald <ref> [184] </ref> discuss the use of decision-theoretic techniques in conjunction with traditional AI planning techniques. Chrisman and Simmons [42] use static sensing policies to determine plans which are near cost optimal with respect to both action and sensing.
Reference: [185] <author> D. E. Whitney. </author> <title> Quasi-static assembly of compliantly supported rigid parts. </title> <journal> ASME Journal of Dynamic Systems, Measurement, and Control, </journal> <volume> 104 </volume> <pages> 65-77, </pages> <month> March </month> <year> 1982. </year>
Reference-contexts: Brooks [28] extended this approach by using symbolic means to provide error estimates and identify points in a plan where sensing operations are necessary to overcome the uncertainty. Whitney and colleagues <ref> [185, 186, 134] </ref> have analyzed assembly operations and developed devices, notably the Remote Center Compliance for insertions, to overcome uncertainties during assembly. Compliant motions have been used to overcome positional uncertainties between contact surfaces; see Mason [119] for an overview of issues related to compliant motion.
Reference: [186] <author> D. E. Whitney. </author> <title> Remote Center Compliance. </title> <editor> In R. C. Dorf, editor, </editor> <booktitle> International Encyclopedia of Robotics: Applications and Automation, </booktitle> <volume> Vol. 3, </volume> <pages> pages 1316-1324. </pages> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year> <note> BIBLIOGRAPHY 161 </note>
Reference-contexts: Brooks [28] extended this approach by using symbolic means to provide error estimates and identify points in a plan where sensing operations are necessary to overcome the uncertainty. Whitney and colleagues <ref> [185, 186, 134] </ref> have analyzed assembly operations and developed devices, notably the Remote Center Compliance for insertions, to overcome uncertainties during assembly. Compliant motions have been used to overcome positional uncertainties between contact surfaces; see Mason [119] for an overview of issues related to compliant motion.
Reference: [187] <author> J. Wiegley, K. Y. Goldberg, M. Peshkin, and M. Brokowski. </author> <title> A complete algorithm for designing passive fences to orient parts. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1133-1139, </pages> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: They used these configuration maps to find a sequence of fences to automatically orient a sliding part. Brokowski, Peshkin, and Goldberg [27] designed curved fence sections to eliminate uncertainty in the orientations of 1.2. RELATED WORK 9 parts being oriented by the fence. Wiegley et al. <ref> [187] </ref> developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. Pham, Cheung, and Yeo [143] analyzed the initial motion of a rectangular object being pushed or pulled and its dependence on the magnitude of the exerted force. <p> Brokowski, Peshkin, and Goldberg [27] designed curved fence sections to eliminate uncertainty in the orientations of parts being oriented by the fences. Goldberg [76] developed a backchaining algorithm to orient polygonal parts up to symmetry using a frictionless parallel-jaw gripper. Wiegley et al. <ref> [187] </ref> developed a complete algorithm to find the shortest sequence of frictionless curved fences to orient a polygonal part. 1.2. RELATED WORK 13 1.2.6 Minimalism Minimalism in robotics has been studied by Donald et al. [56], Canny and Goldberg [40], and Bohringer et al. [20].
Reference: [188] <author> C. K. Yap. </author> <title> Exact computational geometry and tolerancing metrology. </title> <booktitle> In Snapshots of Computational and Discrete Geometry, </booktitle> <volume> Volume 3, </volume> <month> Sept. </month> <year> 1995. </year> <institution> McGill School of Computer Science Tech. </institution> <note> Report No. SOCS-94.50. </note>
Reference-contexts: Neumann [133] describes a new dimensioning and tolerancing standard, ASME Y14.5M, and Walker and Srinivasan [182] describe a companion standard, ASME Y14.5.1M-199X, that provides a mathematical basis for dimensioning and tolerancing. Yap <ref> [188] </ref> advocates the use of computational geometry techniques and exact computation for tolerancing metrology. Such algorithms would estimate the deviations from tolerance of manufactured parts using a set of sampled measurements. Perhaps the first work that explicitly considered shape uncertainty effects for a manipulation problem was by Donald [53].
Reference: [189] <author> Y. Zhuang, Y.-C. Wong, and K. Y. Goldberg. </author> <title> On the existence of modular fixtures. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 543-549, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: He gives examples of other solution-complete problems such as sensorless orienting of parts (Goldberg [76]), and controllability and motion planning for nonholonomic mobile robots in the obstacle-free plane (Barraquand and Latombe [14]). He describes a modular fixturing problem for polygonal parts (Zhuang, Wong, and Goldberg <ref> [189] </ref>) that is not solution-complete, but for which a complete algorithm, an algorithm guaranteed to return a solution if it exists and report failure otherwise, 18 CHAPTER 1. INTRODUCTION exists (Brost and Goldberg [34]).
Reference: [190] <author> N. B. Zumel and M. A. Erdmann. </author> <title> Balancing of a planar bouncing object. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2949-2954, </pages> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: Buehler, Koditschek, and Kindlmann [38] describe "mirror" algorithms to control a one degree of freedom robot system that can stably juggle one or two pucks simultaneously in a vertical plane. Rizzi and Koditschek [157] developed a paddle juggler that performs spatial juggling of two balls. Zumel and Erdmann <ref> [190] </ref> analyze the juggling of a polygon and identify conditions under which the polygon can be brought to a stable trajectory. Mason and Lynch [124] present a taxonomy of manipulation models and analyze the throwing of a club as an example of dynamic manipulation.
Reference: [191] <author> N. B. Zumel and M. A. Erdmann. </author> <title> Nonprehensile two palm manipulation with nonequilibrium transitions between stable states. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 3317-3323, </pages> <address> Minneapolis, MN, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: Erdmann [65] developed a two-palm manipulation system that uses a sequence of nonprehensile operations such as sliding to rotate an object. Zumel and Erdmann <ref> [191] </ref> use two frictionless palms to manipulate an object in a gravitational field, and present a planner that uses stable and unstable transitions to reorient the object. Objects can be also be manipulated using a very large number of manipulators or by subjecting them to force fields.
References-found: 191

