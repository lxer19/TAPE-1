URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c45.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Title: On the Bounded-Skew Clock and Steiner Routing Problems  
Author: Dennis J.-H. Huang, Andrew B. Kahng and Chung-Wen Albert Tsao 
Address: Los Angeles, CA 90024-1596 USA  
Affiliation: UCLA Computer Science Dept.,  
Abstract: We study the minimum-cost bounded-skewrouting tree (BST) problem under the linear delay model. This problem captures several engineering tradeoffs in the design of routing topologies with controlled skew. We propose three tradeoff heuristics. (1) For a fixed topology Extended-DME (Ex-DME) extends the DME algorithm for exact zero-skew trees via the concept of a merging region. (2) For arbitrary topology and arbitrary embedding, Extended Greedy-DME (ExG-DME) very closely matches the best known heuristics for the zero-skew case, and for the infinite-skew case (i.e., the Steiner minimal tree problem). (3) For arbitrary topology and single-layer (planar) embedding, the Extended Planar-DME (ExP-DME) algorithm exactly matches the best known heuristic for zero-skew planar routing, and closely approaches the best known performance for the infinite-skew case. Our work provides unifications of the clock routing and Steiner tree heuristic literatures and gives smooth cost-skew tradeoff that enable good engineering solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. D. Boese and A. B. Kahng, </author> <title> Zero-Skew Clock Routing Trees With Minimum Wirelength, </title> <booktitle> Proc. IEEE Intl. Conf. on ASIC, </booktitle> <year> 1992, </year> <pages> pp. </pages> <address> 1.1.1 - 1.1.5. </address>
Reference-contexts: For this variant, in either the non-planar or the planar case, we typically assume that the source location s 0 is also unspecified. 2 A Review of Three DME Variants The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [5, 3, 1] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., linear delay and Elmore delay). <p> For linear delay, DME is optimal: it returns a tree with minimum cost and minimum source-sink pathlength for any input sink set S and topology G. We now review DME and its Greedy-DME and Planar-DME variants, following <ref> [1, 14] </ref>. We identify each node v of the rooted topology G with the edge e v to its parent. Once a node v of the topology has been embedded in the Manhattan plane, we often identify v with its location in the plane, denoted l (v). <p> The Greedy-DME Algorithm Note that DME requires an input topology. Several works <ref> [1, 3, 6] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [6], which determines the topology of the merging tree in a greedy bottom-up fashion.
Reference: [2] <author> M. Borah and R. M. Owens and M. J. Irwin, </author> <title> An Edge-Based Heuristic for Rectilinear Steiner Trees, </title> <journal> IEEE Trans. on CAD 13(12), </journal> <month> Dec. </month> <year> 1994, </year> <pages> pp. 1563-1568. </pages>
Reference-contexts: Our Extended Greedy-DME (ExG-DME) algorithm matches the best known heuristic for the zero-skew limiting case, and very closely matches the performance of the best known heuristic <ref> [2] </ref> for the infinite-skew case (i.e., the Steiner minimal tree problem). Basically, ExG-DME is an extension of Greedy-DME [6, 7] that exploits flexibility stemming from allowed skew during the topology construction. Recall that in DME, two merging subtrees are always merged at their roots so as to maintain zero skew. <p> We tested our methods on the seven benchmark examples prim1-prim2 and r1-r5. Table 1 shows the total wirelengths of BSTs constructed by ExG-DME/ExP-DME for different values of the skew bound. In the last row of the table gives the results obtained by the Steiner heuristic in <ref> [2] </ref>, which has O (n log n) time complexity and is competitive with Iterated 1-Steiner [13]. The data for ExG-DME are the best results obtained using k = 2 to 5. <p> are equivalent to the best known non-planar and planar ZST algorithms [7, 14] in the literature. (Our numbers are slightly different from those reported in [7], since that paper uses the Elmore delay model.) When B = 1, the Steiner trees constructed by ExG-DME average only 0.21% higher cost than <ref> [2] </ref>; on the other hand, ExP-DME is essentially similar to the MST + edge overlapping heuristic [11] for the Steiner minimal tree problem. When 0 &lt; B &lt; 1, both ExG-DME and ExP-DME obtain smooth skew-cost tradeoffs. <p> 1,500.0/1,537.1 1,906.7/1,948.4 3,793.3/4,004.9 5,595.4/5,849.8 2000 78.8/82.2 171.2/174.2 772.3/780.4 1,500.0/1,529.4 1,906.7/1,932.7 3,792.2/3,849.8 5,584.3/5,676.6 1 (<ref> [2] </ref>) 78.8 170.8 769.3 1,498.8 1,902.6 3,781.4 5,571.1 Table 1: Total wirelengths obtained by ExG-DME and ExP-DME for different skew bounds. The unit is 100m. When B = 1, the results are competitive with those obtained by [2], shown in the last row. 7 Conclusions We have addressed the bounded skew routing tree (BST) problem, which has applications in the engineering design of clock distribution and global routing topologies. 5 We believe that the tradeoffs we provide are effective, in that the limiting behaviors are essentially those of
Reference: [3] <author> T.-H. Chao, Y.-C. Hsu and J.-M. Ho, </author> <title> Zero Skew Clock Net Routing, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1992, </year> <pages> pp. 518-523. </pages>
Reference-contexts: For this variant, in either the non-planar or the planar case, we typically assume that the source location s 0 is also unspecified. 2 A Review of Three DME Variants The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [5, 3, 1] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., linear delay and Elmore delay). <p> The Greedy-DME Algorithm Note that DME requires an input topology. Several works <ref> [1, 3, 6] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [6], which determines the topology of the merging tree in a greedy bottom-up fashion. <p> The solution is improved by a post-processing local search that adjusts the resulting topology (cf. CL + I6 in [7]). Greedy-DME achieves 20% reduction in wiring cost compared with the methods of <ref> [3] </ref>. The Planar-DME Algorithm Finally, the Planar-DME algorithm of Kahng and Tsao [14] determines node embeddings and connection topology by top-down partitioning of the routing area and the sink set.
Reference: [4] <author> J. Cong and C-K Koh, </author> <title> Minimum-Cost Bounded-Skew Clock Routing, </title> <booktitle> to appear in Proc. Int'l Symposium on Circuits and Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference: [5] <author> M. Edahiro, </author> <title> Minimum Skew and Minimum Path Length Routing in VLSI Layout Design, </title> <booktitle> NEC Research and Development 32(4),October 1991, </booktitle> <pages> pp. 569-575. </pages>
Reference-contexts: For this variant, in either the non-planar or the planar case, we typically assume that the source location s 0 is also unspecified. 2 A Review of Three DME Variants The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [5, 3, 1] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., linear delay and Elmore delay).
Reference: [6] <author> M. Edahiro, </author> <title> Minimum Path-Length Equi-Distant Routing, </title> <booktitle> Proc. IEEE Asia-Pacific Conf. on Circuits and Systems, </booktitle> <month> December </month> <year> 1992, </year> <pages> pp. </pages> <month> 41-46. </month> <title> 5 Note: Recently an independent study of the same problem has been given in [4] </title>
Reference-contexts: The Greedy-DME Algorithm Note that DME requires an input topology. Several works <ref> [1, 3, 6] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [6], which determines the topology of the merging tree in a greedy bottom-up fashion. <p> The Greedy-DME Algorithm Note that DME requires an input topology. Several works [1, 3, 6] have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro <ref> [6] </ref>, which determines the topology of the merging tree in a greedy bottom-up fashion. Let K denote a set of merging segments which initially consists of all the sink locations, i.e., K = fms (s i )g. <p> Our Extended Greedy-DME (ExG-DME) algorithm matches the best known heuristic for the zero-skew limiting case, and very closely matches the performance of the best known heuristic [2] for the infinite-skew case (i.e., the Steiner minimal tree problem). Basically, ExG-DME is an extension of Greedy-DME <ref> [6, 7] </ref> that exploits flexibility stemming from allowed skew during the topology construction. Recall that in DME, two merging subtrees are always merged at their roots so as to maintain zero skew. However, the shortest connection between two trees may not be between their roots.
Reference: [7] <author> M. Edahiro, </author> <title> Clustering-Based Optimization Algorithm in Zero-Skew Routings, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1993, </year> <pages> pp. 612-616. </pages>
Reference-contexts: After n 1 operations, K consists of the merging segment for the root of the topology. In <ref> [7] </ref>, O (n log n) time complexity was achieved by finding several nearest-neighbor pairs at once, i.e., the algorithm first constructs a nearest-neighbor graph which maintains the nearest neighbor of each merging segment in K. <p> Via zero-skew merges, jKj=k nearest-neighbor pairs are taken from the graph in non-decreasing order of distance, where k is a constant typically between 2 and 4. The solution is improved by a post-processing local search that adjusts the resulting topology (cf. CL + I6 in <ref> [7] </ref>). Greedy-DME achieves 20% reduction in wiring cost compared with the methods of [3]. The Planar-DME Algorithm Finally, the Planar-DME algorithm of Kahng and Tsao [14] determines node embeddings and connection topology by top-down partitioning of the routing area and the sink set. <p> Our Extended Greedy-DME (ExG-DME) algorithm matches the best known heuristic for the zero-skew limiting case, and very closely matches the performance of the best known heuristic [2] for the infinite-skew case (i.e., the Steiner minimal tree problem). Basically, ExG-DME is an extension of Greedy-DME <ref> [6, 7] </ref> that exploits flexibility stemming from allowed skew during the topology construction. Recall that in DME, two merging subtrees are always merged at their roots so as to maintain zero skew. However, the shortest connection between two trees may not be between their roots. <p> The nearest-neighbor graph will be constructed and used to merge the remaining subtrees O (log n) times, if the parameter k is a constant <ref> [7] </ref>. Thus, the time complexity of ExG-DME is O (n 2 log n). By using the bucket decomposition method of [9], the nearest-neighbor graph can be constructed in linear time, so that the total time complexity becomes O (n log n). <p> The data for ExG-DME are the best results obtained using k = 2 to 5. When B = 0, ExG-DME and ExP-DME are equivalent to the best known non-planar and planar ZST algorithms <ref> [7, 14] </ref> in the literature. (Our numbers are slightly different from those reported in [7], since that paper uses the Elmore delay model.) When B = 1, the Steiner trees constructed by ExG-DME average only 0.21% higher cost than [2]; on the other hand, ExP-DME is essentially similar to the MST <p> The data for ExG-DME are the best results obtained using k = 2 to 5. When B = 0, ExG-DME and ExP-DME are equivalent to the best known non-planar and planar ZST algorithms [7, 14] in the literature. (Our numbers are slightly different from those reported in <ref> [7] </ref>, since that paper uses the Elmore delay model.) When B = 1, the Steiner trees constructed by ExG-DME average only 0.21% higher cost than [2]; on the other hand, ExP-DME is essentially similar to the MST + edge overlapping heuristic [11] for the Steiner minimal tree problem.
Reference: [8] <author> M. Edahiro, </author> <title> Delay Minimization for Zero-Skew Routing,Proc. </title> <booktitle> IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 563-566. </pages>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors [17, 18, 16], Edahiro <ref> [8] </ref>, and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation.
Reference: [9] <author> M. Edahiro, </author> <title> An Efficient Zero-Skew Routing Algorithm, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1994, </year> <pages> pp. 375-380. </pages>
Reference-contexts: The nearest-neighbor graph will be constructed and used to merge the remaining subtrees O (log n) times, if the parameter k is a constant [7]. Thus, the time complexity of ExG-DME is O (n 2 log n). By using the bucket decomposition method of <ref> [9] </ref>, the nearest-neighbor graph can be constructed in linear time, so that the total time complexity becomes O (n log n). When the skew bound B is small, significant detour wiring will be required to maintain near-zero skew whenever we merge two subtrees at positions in their lower levels.
Reference: [10] <author> E. G. Friedman, </author> <title> Clock Distribution Design in VLSI Circuits An Overview, </title> <booktitle> Proc. IEEE Intl. Symp. on Circuits and Systems, </booktitle> <year> 1993, </year> <pages> pp. 1475-1478. </pages>
Reference: [11] <author> J.-M. Ho, G. Vijayan and C. K. Wong", </author> <title> New Algorithms for the Rectilinear Steiner Tree Problem, </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. 9, no. 2, </volume> <year> 1990, </year> <pages> pp. 185-193. </pages>
Reference-contexts: the skew bound increases, the running time of ExP-DME becomes dominated by 3 KRY is a best possible shallow-light construction, where shallow-light indicates a construction that returns a spanning tree within constant factors of optimal in terms of both tree radius (shallowness) and tree cost (lightness). 4 Ho et al. <ref> [11] </ref> provided an optimal edge-overlapping construction, but it cannot always be applied to the KRY spanning trees because high-degree nodes may occur. The output of our edge-overlapping heuristic is nearly identical to that of the optimal edge-overlapping algorithm of Ho et al. (called S-RST in [11]), with about 0:2% average cost <p> (lightness). 4 Ho et al. <ref> [11] </ref> provided an optimal edge-overlapping construction, but it cannot always be applied to the KRY spanning trees because high-degree nodes may occur. The output of our edge-overlapping heuristic is nearly identical to that of the optimal edge-overlapping algorithm of Ho et al. (called S-RST in [11]), with about 0:2% average cost difference. KRY and edge-overlapping heuristics. <p> (Our numbers are slightly different from those reported in [7], since that paper uses the Elmore delay model.) When B = 1, the Steiner trees constructed by ExG-DME average only 0.21% higher cost than [2]; on the other hand, ExP-DME is essentially similar to the MST + edge overlapping heuristic <ref> [11] </ref> for the Steiner minimal tree problem. When 0 &lt; B &lt; 1, both ExG-DME and ExP-DME obtain smooth skew-cost tradeoffs. The effectiveness of these methods is due to their novel topology generation strategies, which allow very natural transitions from zero-skew tree to Steiner minimal tree.
Reference: [12] <author> D. J. H. Huang, A. B. Kahng and C.-W. A. Tsao, </author> <title> On the Bounded-Skew Clock and Steiner Routing Problems, </title> <type> UCLA CS Dept. technical report TR-940026x, </type> <year> 1994. </year>
Reference-contexts: Let v 2 G have children a and b with merging regions mr (a) and mr (b) which are both well-behaved octilinear regions. We show the following properties of J R (v) in <ref> [12] </ref>. Lemma 1: Any rectilinear line segment l 2 J R (v) is well-behaved. Lemma 2: Suppose L a and L b are parallel vertical line segments, and l h is a horizontal line segment in J R (v). <p> Thus, we have: Theorem 2: When B = 1, for any sink set S and topology G, Ex-DME returns a Steiner tree over S with minimum cost for topology G. However, Ex-DME is not necessarily optimal for any intermediate value of B. A four-sink counterexample is given in <ref> [12] </ref>. 4 Second Tradeoff: Unrestricted Case We now consider the variant where the topology is not fixed and the embedding is unrestricted. <p> The output of our edge-overlapping heuristic is nearly identical to that of the optimal edge-overlapping algorithm of Ho et al. (called S-RST in [11]), with about 0:2% average cost difference. KRY and edge-overlapping heuristics. Finally, in <ref> [12] </ref> we show that Theorem 3: The routing tree T (S) constructed by ExP-DME is planar and satisfies the skew bound B. 6 Experimental Results All of our algorithms are implemented in C on a Sun SPARC-10 workstation. We tested our methods on the seven benchmark examples prim1-prim2 and r1-r5.
Reference: [13] <author> A. B. Kahng and G. Robins, </author> <title> On Optimal Interconnections for VLSI, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994. </year>
Reference-contexts: Our study addresses the underlying bounded-skew routing construction. As in [21, 20] we solve the bounded-skew problem under the linear delay model; our methods can also extend to Elmore or other delay approximations. We also note that exact zero skew is never an actual design requirement <ref> [13] </ref>, so engineering tradeoffs also motivate a bounded-skew, rather than exact zero-skew, formulation. We now define the bounded-skew routing tree (BST) problem under the linear delay model. fl Partial support for this work was providedby NSF MIP-9257982and MIP-922370. <p> Table 1 shows the total wirelengths of BSTs constructed by ExG-DME/ExP-DME for different values of the skew bound. In the last row of the table gives the results obtained by the Steiner heuristic in [2], which has O (n log n) time complexity and is competitive with Iterated 1-Steiner <ref> [13] </ref>. The data for ExG-DME are the best results obtained using k = 2 to 5.
Reference: [14] <author> A. B. Kahng and C.-W. A. Tsao. Planar-DME: </author> <title> Improved Planar Zero-Skew Clock Routing With Minimum Pathlength Delay, </title> <booktitle> Proc. ACM/IEEE European Design Automation Conf., </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: For linear delay, DME is optimal: it returns a tree with minimum cost and minimum source-sink pathlength for any input sink set S and topology G. We now review DME and its Greedy-DME and Planar-DME variants, following <ref> [1, 14] </ref>. We identify each node v of the rooted topology G with the edge e v to its parent. Once a node v of the topology has been embedded in the Manhattan plane, we often identify v with its location in the plane, denoted l (v). <p> The solution is improved by a post-processing local search that adjusts the resulting topology (cf. CL + I6 in [7]). Greedy-DME achieves 20% reduction in wiring cost compared with the methods of [3]. The Planar-DME Algorithm Finally, the Planar-DME algorithm of Kahng and Tsao <ref> [14] </ref> determines node embeddings and connection topology by top-down partitioning of the routing area and the sink set. <p> The data for ExG-DME are the best results obtained using k = 2 to 5. When B = 0, ExG-DME and ExP-DME are equivalent to the best known non-planar and planar ZST algorithms <ref> [7, 14] </ref> in the literature. (Our numbers are slightly different from those reported in [7], since that paper uses the Elmore delay model.) When B = 1, the Steiner trees constructed by ExG-DME average only 0.21% higher cost than [2]; on the other hand, ExP-DME is essentially similar to the MST
Reference: [15] <author> S. Khuller, B. Raghavachari, and N. Young, </author> <title> Balancing Minimum Spanning and Shortest Path Trees, </title> <booktitle> Proc. ACM/SIAM Symp. Discrete Algorithms, </booktitle> <year> 1993, </year> <pages> pp. 243-250 </pages>
Reference-contexts: To achieve the planar radius-bounded tree construction over the sinks in any given cluster, we modify the KRY method of Khuller et al. <ref> [15] </ref>, so that it does not cross the clock tree edge that leads into the given sink cluster. 3 The spanning tree output by KRY may be converted to a Steiner tree by overlapping the embeddings of tree edges within the union of their bounding boxes.
Reference: [16] <author> N. Menezes, S. Pullela and L. T. Pillage, </author> <title> Skew Reduction in Clock Trees Using Wire Width Optimization, </title> <booktitle> Proc. IEEE Custom Integrated Circuits Conf., </booktitle> <year> 1993. </year>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors <ref> [17, 18, 16] </ref>, Edahiro [8], and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation.
Reference: [17] <author> S. Pullela, N. Menezes, J. Omar and L. T. Pillage, </author> <title> Skew and Delay Optimization for Reliable Buffered Clock Trees, </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 556-562. </pages>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors <ref> [17, 18, 16] </ref>, Edahiro [8], and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. <p> Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; <ref> [17] </ref> also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction.
Reference: [18] <author> S. Pullela, N. Menezes and L. T. Pillage, </author> <title> Reliable Non-Zero Skew Clock Tree Using Wire Width Optimization, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 165-170. </pages>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors <ref> [17, 18, 16] </ref>, Edahiro [8], and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. <p> Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai [21, 20] use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. <ref> [18] </ref> propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction.
Reference: [19] <author> Q. Zhu and W. W.-M. Dai, </author> <title> Perfect-Balance Planar Clock Routing With Minimal Path-Length, </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1992, </year> <pages> pp. 473-476. </pages>
Reference-contexts: A similar approach is used by Zhu and Dai [21], but we expect substantial cost savings (e.g., using Planar-DME instead of the method in <ref> [19] </ref> represents over 20% cost reduction).
Reference: [20] <author> Q. Zhu and W.M. Dai, </author> <title> Delay Bounded Minimum Steiner Tree Algorithms for Performance-Driven Routing, </title> <address> UCSC-CRL-93-46, Oct. 10, </address> <year> 1993 </year>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai <ref> [21, 20] </ref> use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed <p> Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai <ref> [21, 20] </ref> use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction. As in [21, 20] we solve the bounded-skew problem under the linear delay model; our methods can <p> The works of Zhu and Dai <ref> [21, 20] </ref> and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction. As in [21, 20] we solve the bounded-skew problem under the linear delay model; our methods can also extend to Elmore or other delay approximations. We also note that exact zero skew is never an actual design requirement [13], so engineering tradeoffs also motivate a bounded-skew, rather than exact zero-skew, formulation.
Reference: [21] <author> Q. Zhu and W.M. </author> <title> Dai, </title> <type> manuscript, </type> <year> 1994. </year>
Reference-contexts: In this paper, we present the first unified approach to minimum-cost, skew-bounded, and planar/non-planar routing tree construction. Addressing these co-existing objectives is both motivated and enabled by several recent works. Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai <ref> [21, 20] </ref> use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed <p> Pillage and coauthors [17, 18, 16], Edahiro [8], and Zhu and Dai <ref> [21, 20] </ref> use wiresizing to optimize source-sink signal delays in clock distribution; [17] also performs buffer optimization to minimize power dissipation. The works of Zhu and Dai [21, 20] and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction. As in [21, 20] we solve the bounded-skew problem under the linear delay model; our methods can <p> The works of Zhu and Dai <ref> [21, 20] </ref> and Pullela et al. [18] propose construction of initial non-zero skew clock routing solutions which can be sized to achieve a prescribed skew bound. Our study addresses the underlying bounded-skew routing construction. As in [21, 20] we solve the bounded-skew problem under the linear delay model; our methods can also extend to Elmore or other delay approximations. We also note that exact zero skew is never an actual design requirement [13], so engineering tradeoffs also motivate a bounded-skew, rather than exact zero-skew, formulation. <p> This is the least imaginative of our three methods: we simply use Planar-DME to recursively partition the sink set until each sink cluster has radius less than B, then construct a planar radius-bounded tree over each cluster. A similar approach is used by Zhu and Dai <ref> [21] </ref>, but we expect substantial cost savings (e.g., using Planar-DME instead of the method in [19] represents over 20% cost reduction).
References-found: 21

