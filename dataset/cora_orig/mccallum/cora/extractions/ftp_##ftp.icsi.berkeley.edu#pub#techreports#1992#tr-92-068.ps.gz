URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1992/tr-92-068.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1992.html
Root-URL: http://www.icsi.berkeley.edu
Title: Public Randomness in Cryptography  
Author: Amir Herzberg Michael Luby 
Address: Yorktown Heights, NY 10598.  Berkeley, CA 94704  
Affiliation: IBM T.J. Watson,  International Computer Science Institute,  and UC Berkeley Computer Science Department.  
Note: Research supported in part by National Science Foundation operating grant CCR-9016468 and grant No. 89-00312 from the United States-Israel Binational Science Foundation (BSF)  
Date: October 1992  
Pubnum: TR-92-068  
Abstract: The main contribution of this paper is the introduction of a formal notion of public randomness in the context of cryptography. We show how this notion affects the definition of the security of a cryptographic primitive and the definition of how much security is preserved when one cryptographic primitive is reduced to another. Previous works considered the public random bits as a part of the input, and security was parameterized in terms of the total length of the input. We parameterize security solely in terms of the length of the private input, and treat the public random bits as a separate resource. This separation allows us to independently address the important issues of how much security is preserved by a reduction and how many public random bits are used in the reduction. To exemplify these new definitions, we present reductions from weak one-way permutations to one-way permutations with strong security preserving properties that are simpler than previously known reductions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Goldreich, O., Impagliazzo, R., Levin, L., Venketesan, R., Zuckerman, D., </author> <title> "Security Preserving Amplification of Hardness", </title> <booktitle> Proceedings of the 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 318-326, </pages> <year> 1990. </year>
Reference-contexts: Generalizations along the same lines for many other cryptographic primitives can be made, including those related to public key cryptography. As particular examples of how the new definitions of reductions using public randomness work, we provide reductions that use public randomness from weak one-way permutations to one-way permutations. Following <ref> [1] </ref>, our primary concern is the security preserving properties of the reduction, i.e., how much of the security of the weak one-way permutation is transferred to the one-way permutation. However, unlike [1], we consider the security as a function solely of the length of the private input, which does not include <p> Following <ref> [1] </ref>, our primary concern is the security preserving properties of the reduction, i.e., how much of the security of the weak one-way permutation is transferred to the one-way permutation. However, unlike [1], we consider the security as a function solely of the length of the private input, which does not include the public random bits. We show reductions that preserve security in a very strong sense, which is stronger than that of the reduction due to [1] (under the new definitions). <p> However, unlike <ref> [1] </ref>, we consider the security as a function solely of the length of the private input, which does not include the public random bits. We show reductions that preserve security in a very strong sense, which is stronger than that of the reduction due to [1] (under the new definitions). We begin with a very simple reduction (much simpler than that found in [1]), which uses a large number of public random bits. Through a sequence of increasingly intricate reductions, we converge on a reduction that is a slight modification of the reduction due to [1]. <p> We show reductions that preserve security in a very strong sense, which is stronger than that of the reduction due to <ref> [1] </ref> (under the new definitions). We begin with a very simple reduction (much simpler than that found in [1]), which uses a large number of public random bits. Through a sequence of increasingly intricate reductions, we converge on a reduction that is a slight modification of the reduction due to [1]. Both the reduction of [1] and our improvement use only a linear number of public random bits. <p> <ref> [1] </ref> (under the new definitions). We begin with a very simple reduction (much simpler than that found in [1]), which uses a large number of public random bits. Through a sequence of increasingly intricate reductions, we converge on a reduction that is a slight modification of the reduction due to [1]. Both the reduction of [1] and our improvement use only a linear number of public random bits. Another simple reduction from a weak one-way permutation to a one-way permutation was developed recently and independently by Phillips [2]. <p> We begin with a very simple reduction (much simpler than that found in <ref> [1] </ref>), which uses a large number of public random bits. Through a sequence of increasingly intricate reductions, we converge on a reduction that is a slight modification of the reduction due to [1]. Both the reduction of [1] and our improvement use only a linear number of public random bits. Another simple reduction from a weak one-way permutation to a one-way permutation was developed recently and independently by Phillips [2]. Phillips showed that his reduction preserves security somewhat better than the reduction of [1], when considering the randomness <p> Both the reduction of <ref> [1] </ref> and our improvement use only a linear number of public random bits. Another simple reduction from a weak one-way permutation to a one-way permutation was developed recently and independently by Phillips [2]. Phillips showed that his reduction preserves security somewhat better than the reduction of [1], when considering the randomness as a part of the input. However, our new definitions of security preserving reductions with public randomness reveal that Phillips' reduction actually preserves security as well as our reductions, i.e. much better than [1]. <p> showed that his reduction preserves security somewhat better than the reduction of <ref> [1] </ref>, when considering the randomness as a part of the input. However, our new definitions of security preserving reductions with public randomness reveal that Phillips' reduction actually preserves security as well as our reductions, i.e. much better than [1]. Phillips' reduction uses more public random 1 bits (O (n log (n))) than our best reduction. A full development and details of this work can be found in [3]. 2 Definitions 2.1 Basic Notation If S is a set then ]S is the number of elements in S. <p> It is not hard to verify that the overall reduction from f to h is linearly preserving. 4.3 A linearly preserving reduction using expander graphs The work described in <ref> [1] </ref> gives a polynomially preserving reduction from a weak one-way permutation to a one-way permutation that uses only a linear amount of public randomness. <p> These O (n) public random bits are used to define a random walk of length O (n) on a related expander graph. The overall number of public random bits used in the entire reduction from f to h is only linear. The way <ref> [1] </ref> describes the reduction, the one-way permutation f is applied to inputs of different lengths (all within a constant multiplicative factor of each other) to yield h. For this reason, as they describe their reduction it is only polynomially preserving, even with respect to the new definitions.
Reference: [2] <author> Phillips, S. J., </author> <title> "Security Preserving Hardness Amplification Using PRGs for Bounded Space Preliminary Report", </title> <type> unpublished manuscript, </type> <month> July </month> <year> 1992. </year>
Reference-contexts: Both the reduction of [1] and our improvement use only a linear number of public random bits. Another simple reduction from a weak one-way permutation to a one-way permutation was developed recently and independently by Phillips <ref> [2] </ref>. Phillips showed that his reduction preserves security somewhat better than the reduction of [1], when considering the randomness as a part of the input.
Reference: [3] <author> Luby, M., </author> <title> "Pseudo-randomness and Applications", </title> <booktitle> monograph in progress. </booktitle>
Reference-contexts: Phillips' reduction uses more public random 1 bits (O (n log (n))) than our best reduction. A full development and details of this work can be found in <ref> [3] </ref>. 2 Definitions 2.1 Basic Notation If S is a set then ]S is the number of elements in S. Let x and y be bit strings. We let k x k denote the length of x.
Reference: [4] <author> Yao, A., </author> <title> "Theory and applications of trapdoor functions", </title> <booktitle> Proceedings of the 23rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 80-91, </pages> <year> 1982. </year> <month> 10 </month>
Reference-contexts: All of the reductions work only for functions that are permutations. 1 In <ref> [4] </ref>, Yao describes a reduction from a general weak owf to a one-way function, but the reduction is only slightly preserving. A good research problem is to design a linearly preserving (or even polynomially preserving) reduction without any restriction on the weak one-way function.
References-found: 4

