URL: http://www.eecs.umich.edu/~tnm/papers/nomad.ps
Refering-URL: http://www.eecs.umich.edu/~tnm/papers.html
Root-URL: http://www.eecs.umich.edu
Title: Support for Nomadism in a Global Environment  
Author: Bruce Jacob and Trevor Mudge 
Keyword: service discovery descriptive lookup dynamic interfaces  
Address: Ann Arbor  
Affiliation: Advanced Computer Architecture Lab Department of Electrical Engineering and Computer Science University of Michigan,  
Note: nomad.fm  
Email: -blj,tnm-@eecs.umich.edu  
Date: May 21, 1997 1:50 am  
Abstract: The goal of nomadic computing transcends simply making ones environment portable; mobile users require the ability to communicate with local servers despite location and to obtain local services despite statically defined service interfaces. To this end, we expect the portable computer or PDA to perform as a universal interactor [Theimer93]. The current paradigm for distributed computing, RPC, inhibits such freeform interaction. RPC requires static knowledge of the service and its interface; a programmer must know the interface and explicitly write code to use it. It is impossible, using present RPC implementations such as DCE or Sun RPC, to discover and use new services unless they conform exactly to the interfaces expected by the client. We propose a new standard to define a fundamental level of support for nomadismthat of the ability for a client to discover services based on descriptive names, bind dynamically to the servers that offer them, and communicate intelligently with the servers. In the full paper, we describe an implementation of service discovery that uses 
Abstract-found: 1
Intro-found: 1
Reference: [Birrell82] <author> Andrew D Birrell, Roy Levin, Roger M Needham, and Michael D Schroeder. Grapevine: </author> <title> An Exercise in Distributed Computing. </title> <journal> Communications of the ACM , 25(4):260274, </journal> <month> April </month> <year> 1982. </year>
Reference-contexts: such a scenario, as in any sort of multi-phase reliable transaction [Pitoura94], group membership negotiation, or quality of service arbitration, would only serve to confuse at this point. broker or directory, similar to the Interface Repository of CORBA [Group93a], the portmapper in Sun RPC [Microsystems], or resource location in Grapevine <ref> [Birrell82] </ref>. The client should be able to find whatever services it needs by querying the local directory with a descriptive name or set of attributes. Second, a client must learn the service interfaces dynamically.
Reference: [Birrell84] <author> Andrew D Birrell and Bruce Jay Nelson. </author> <title> Implementing Remote Procedure Calls. </title> <note> ACM Transactions on Computer Systems February 1984. </note>
Reference-contexts: Motivation: a perceived weakness in the state of the art. What is wrong with this picture, besides the ease with which you connect to the airports LAN and the omission of payment for the long-distance fax call? Using the prevalent paradigm of distributed computing, RPC (remote procedure call, <ref> [Birrell84] </ref>), this scenario cannot happen .
Reference: [BL92] <author> Tim Berners-Lee, Robert Cailliau, and Jean-Francois Groff. </author> <title> The WorldWide Web. Computer Networks and ISDN Systems November 1992. </title>
Reference-contexts: Future systems must not only support but expect a distributed environment similar to a shopping mall, where virtually all computing needs can be met. We have already witnessed the arrival of diverse user-level applications, from information services <ref> [BL92] </ref> to ordering pizza [Hut]. The de facto standard of distributed information services is the World Wide Web [WebConf94], primarily because of the ease with which anyone can publish information. In an environment where anyone can simply hang a shingle on the net and begin offering services, everyone will.
Reference: [CCITT92] <author> CCITT. </author> <title> Draft Recommendation X.903: Basic Reference Model of Open Distributed Processing . International Telegraph and Telephone Consultative Committee, </title> <year> 1992. </year>
Reference-contexts: However, half of the problem remainsthat of implicitly binding clients to service interfaces. This is a real issue, recognized by the OMG and the ITU. Their CORBA and ODP standards <ref> [Group93a, CCITT92] </ref> address the issue, but since they are proposed standards they suggest functionality and say nothing about implementation. The CORBA standard advocates an intermediary between objects, called the Object Request Broker, that can translate between protocols.
Reference: [Chang90] <institution> Rong Nickle Chang. </institution>
Reference-contexts: However, RPC does not provide for attribute-based service lookup or the use of dynamic interfaces, both fundamental to mobile computing. This section describes environments that do support those facilities. Related work and proposed standards . Ravishankar describes the problem in <ref> [Chang90] </ref>. He states that the client/ server model is a dominant system structuring paradigm due in part to its support for system scalability. However, systems have largely tended to use the server interface that implements a service as a representation of the service itself. <p> To use a service, the client program must have an explicit reference to a function call providing the desired service, and often an explicit reference to a remote server. Systems like Prospero [Neuman93] and Cygnus <ref> [Ravishankar88, Chang90, Chang91] </ref> address this problem: they provide attribute-based lookup of services. They recognize that binding servers to services and their interfaces undercuts the exibility of distributed systems, and instead allow clients to search for services using descriptions of the services.
References-found: 5

