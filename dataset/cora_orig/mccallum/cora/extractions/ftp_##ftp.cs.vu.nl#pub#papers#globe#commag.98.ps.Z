URL: ftp://ftp.cs.vu.nl/pub/papers/globe/commag.98.ps.Z
Refering-URL: http://www.cs.gatech.edu/computing/classes/cs7431_98_spring/
Root-URL: 
Email: e-mail: steen@cs.vu.nl  e-mail: hauck@informatik.uni-erlangen.de  e-mail: fphilip,astg@cs.vu.nl  
Phone: tel: +31 (0)20 444 7784, fax: +31 (0)20 444 7653  
Title: Locating Objects in Wide-Area Systems  
Author: Maarten van Steen (contact) Franz J. Hauck Philip Homburg Andrew S. Tanenbaum 
Address: Boelelaan 1081a, 1081 HV, Amsterdam, The Netherlands  Erlangen-N urnberg, IMMD4 Martensstr. 1, D-91058, Erlangen, Germany  Boelelaan 1081a, 1081 HV, Amsterdam, The Netherlands  
Affiliation: Vrije Universiteit, Department of Mathematics Computer Science De  University of  Vrije Universiteit, Department of Mathematics Computer Science De  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. Awerbuch and D. Peleg. </author> <title> Online Tracking of Mobile Users. </title> <journal> J. ACM, </journal> <volume> 42(5) </volume> <pages> 1021-1058, </pages> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: This has been successfully applied to several models for location services (see e.g. <ref> [1, 7] </ref>), but these techniques cannot be used in our case. Second, a host is always at precisely one location. There is no notion of multiple addresses per object as we have introduced in our model. In contrast to current approaches, we can effectively deal with replication.
Reference: [2] <author> A. Black and Y. Artsy. </author> <title> Implementing Location Independent Invocation. </title> <journal> IEEE Trans. Par. Distr. Syst., </journal> <volume> 1(1) </volume> <pages> 107-119, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: Such an approach does not scale to worldwide networks. An alternative approach to handle worldwide distributed systems is the Location Independent Invocation (LII) described in <ref> [2] </ref>. However, LII uses a global naming service as a fallback mechanism, where it assumes that the update-to-lookup ratio is small. Designing a global location service that is not based on such an assumption is an important goal of our research.
Reference: [3] <author> P. Homburg, M. van Steen, and A. Tanenbaum. </author> <title> An Architecture for A Scalable Wide Area Distributed System. </title> <booktitle> In Proc. Seventh SIGOPS European Workshop, </booktitle> <pages> pp. 75-82, </pages> <address> Connemara, Ireland, </address> <month> Sept. </month> <year> 1996. </year> <note> ACM. </note>
Reference-contexts: In this paper, we focus on a wide-area naming service that provides flexible and easily adaptable name-to-address bindings. The service is currently being developed as part of Globe, an object-based worldwide distributed system aimed to support a billion users each having thousands of objects <ref> [3] </ref>. The paper is organized as follows. In Section 2 we explain and motivate the basic architecture of the Globe naming service. The main goal of this paper is to explain how objects are located, which is described in Section 3. Related work is discussed in Section 4.
Reference: [4] <author> D. Johnson and W. Zwaenepoel. </author> <title> Sender-Based Message Logging. </title> <booktitle> In Proc. 17th Annual International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pp. 14-19, </pages> <address> Pittsburgh, PA, </address> <month> July </month> <year> 1987. </year> <note> IEEE. </note>
Reference-contexts: However, a crashed node can easily re-invoke incomplete operations by having its children re-issue their requests, although this is clearly not enough to restore the node's original data set. This approach is very similar to sender-based message logging as discussed in <ref> [4] </ref>, or using queued RPCs as in the Rover toolkit [5]. By replicating authoritative data among the directory nodes in each subtree, the location service can be made resilient against a single node failure in each path originating at the root.
Reference: [5] <author> A. D. Joseph, J. A. Tauber, and M. F. Kaashoek. </author> <title> Mobile Computing with the Rover Toolkit. </title> <journal> IEEE Trans. Comput., </journal> <volume> 46(3) </volume> <pages> 337-352, </pages> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: This approach is very similar to sender-based message logging as discussed in [4], or using queued RPCs as in the Rover toolkit <ref> [5] </ref>. By replicating authoritative data among the directory nodes in each subtree, the location service can be made resilient against a single node failure in each path originating at the root. Scalability Clearly, to construct a worldwide scalable location service it is necessary to adopt hierarchical solutions.
Reference: [6] <author> E. Jul, H. Levy, N. Hutchinson, and A. Black. </author> <title> Fine-Grained Mobility in the Emerald System. </title> <journal> ACM Trans. Comp. Syst., </journal> <volume> 6(1) </volume> <pages> 109-133, </pages> <month> Feb. </month> <year> 1988. </year>
Reference-contexts: An important distinction with keeping track of mobile hosts, is that there are many more objects than hosts, immediately leading to a scalability problem. Also, to ensure scalability, it is necessary to take mobility patterns of an individual object into account as well. In Emerald <ref> [6] </ref>, mobile objects are tracked through chains of forwarding pointers, combined with techniques for shortening long chains, and a broadcast facility when all else fails. Such an approach does not scale to worldwide networks.
Reference: [7] <author> P. Krishna, N. Vaidya, and D. Pradhan. </author> <title> Location Management in Distributed Mobile Environments. </title> <booktitle> In Proc. Parallel and Distributed Information Systems, </booktitle> <pages> pp. 81-88. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: This has been successfully applied to several models for location services (see e.g. <ref> [1, 7] </ref>), but these techniques cannot be used in our case. Second, a host is always at precisely one location. There is no notion of multiple addresses per object as we have introduced in our model. In contrast to current approaches, we can effectively deal with replication.
Reference: [8] <author> P. Mockapetris. </author> <title> Domain Names Concepts and Facilities. </title> <type> RFC 1034, </type> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: Changing the address of an object affects the name-to-address binding. If such changes hardly ever occur, then constructing a worldwide scalable naming service is feasible, as demonstrated by the Internet's Domain Name System <ref> [8] </ref> and the X.500 Directory Service [10]. However, if bindings change frequently, as in the case of mobile objects, we have a much more difficult problem. In this paper, we focus on a wide-area naming service that provides flexible and easily adaptable name-to-address bindings.
Reference: [9] <author> S. Mullender and P. Vit anyi. </author> <title> Distributed Match-Making. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: Scalability Clearly, to construct a worldwide scalable location service it is necessary to adopt hierarchical solutions. For example, nonhierarchical solutions such as the read/write sets proposed in <ref> [9] </ref> will not do, as it is much harder to exploit locality. However, our search tree described so far obviously does not yet scale. In particular, higher-level directory nodes not only have to handle a relatively large number of requests, they also have enormous storage demands.
Reference: [10] <author> S. Radicati. </author> <title> X.500 Directory Services: Technology and Deployment. </title> <publisher> International Thomson Computer Press, </publisher> <address> London, </address> <year> 1994. </year>
Reference-contexts: Changing the address of an object affects the name-to-address binding. If such changes hardly ever occur, then constructing a worldwide scalable naming service is feasible, as demonstrated by the Internet's Domain Name System [8] and the X.500 Directory Service <ref> [10] </ref>. However, if bindings change frequently, as in the case of mobile objects, we have a much more difficult problem. In this paper, we focus on a wide-area naming service that provides flexible and easily adaptable name-to-address bindings.
Reference: [11] <author> W. Rosenberry, D. Kenney, and G. Fisher. </author> <title> Understanding DCE. </title> <publisher> O'Reilly & Associates, </publisher> <address> Sebastopol, CA., </address> <year> 1992. </year>
Reference-contexts: It contains a globally unique service-independent object identifier which is very similar to a UUID in DCE <ref> [11] </ref>. Additionally, 3 an object handle may contain information that can be used to assist in locating the object. For example, it may be known that an object will move only within a certain region.
Reference: [12] <author> M. Shapiro, P. Dickman, and D. Plainfoss e. </author> <title> SSP Chains: Robust, Distributed References Supporting Acyclic Garbage Collection. </title> <type> Technical Report 1799, </type> <institution> INRIA, Rocquencourt, France, </institution> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Designing a global location service that is not based on such an assumption is an important goal of our research. A seemingly promising approach that has been advocated for large-scale systems are SSP chains <ref> [12] </ref>. SSP chains allow object references to be transparently handed over between processes, at the expense of gradually constructing a chain of forwarding references to the object. A serious drawback of this approach is that exploiting locality is completely neglected.
Reference: [13] <author> M. van Steen, F. Hauck, and A. Tanenbaum. </author> <title> A Model for Worldwide Tracking of Distributed Objects. </title> <booktitle> In Proc. </booktitle> <volume> TINA '96, </volume> <pages> pp. 203-212, </pages> <address> Heidelberg, Germany, </address> <month> Sept. </month> <year> 1996. </year> <note> Eurescom. 12 </note>
Reference-contexts: However, they become much more complicated when scalability is taken into account as we discuss next. 3 Tracking Distributed Objects in Globe In this section we discuss the architecture of Globe's scalable location service. We shall provide only an outline of the architecture, further information can be found in <ref> [13] </ref>. 4 Basic operations In our model for tracking objects, we assume a hierarchical decomposition of a (worldwide) network into regions. This decomposition is relevant to only the location service. With each region we associate a directory node, capable of storing addresses that lie within that region.
References-found: 13

