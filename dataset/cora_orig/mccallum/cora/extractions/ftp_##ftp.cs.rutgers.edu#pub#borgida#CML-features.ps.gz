URL: ftp://ftp.cs.rutgers.edu/pub/borgida/CML-features.ps.gz
Refering-URL: http://www.cs.rutgers.edu/~borgida/index.html
Root-URL: http://www.cs.rutgers.edu
Title: Features of Languages for the Development of Information Systems at the Conceptual Level  
Author: Alexander Borgida 
Note: This work has been partially supported by the National Science Foundation under Grant No. MCS-82-10193. A later version of this material appeared in -"it IEEE Software Vol.2, No.1,  pp.63--73.  
Affiliation: Department of Computer Science Rutgers University  
Date: December 1983  January 1985,  
Abstract: A computer system which stores, retrieves and manipulates information about some portion of the real world can be viewed as a model of that domain of discourse. There has been considerable research recently on languages which allow one to capture more of the semantics of the real world in these computerized Information Systems -- research which has variously been labelled as Semantic Data Modeling, Semantic Modeling or Conceptual Modeling. This review paper presents a list of the features which appear to distinguish these languages from those traditionally used to describe and develop database-intensive applications, and considers the motivation for these features as well as the potential advantages to be gained through their use. The paper, which is intended for those familiar with current data processing practices, also compares in greater detail four programming languages which incorporate semantic modeling facilities, and discusses some of the methodologies and tools for Information System development based on these languages. 
Abstract-found: 1
Intro-found: 1
Reference: [Abrial 74] <author> Abrial, J.R. </author> <title> Data semantics. </title> <editor> In J.W.Klimbie and K.L.Koffeman (editors), </editor> <booktitle> Data management systems, </booktitle> <pages> pages 1-59. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1974. </year> <title> [Adaplex 83] . ADAPLEX: Rationale and Reference Manual. </title> <type> Technical Report CCA-83-03, </type> <institution> Computer Corporation of America, </institution> <month> May, </month> <year> 1983. </year>
Reference-contexts: The view that in an IS the symbol system in the computer is a model of the real world has been noted and examined by numerous researchers (e.g., <ref> [Abrial 74] </ref>, [Biller 77], [Langefors 77], [Tsichritzis & Lochovsky 81]) and much of the work on "conceptual modeling" (abbreviated CM henceforth) takes this as a fundamental tenet. <p> In addition, we will occasionally refer to some conceptual models which are important for historic reasons, such as Abrial's Binary Model ( <ref> [Abrial 74] </ref>), Chen's Entity-Relationship model ( [Chen 76]), and 2 Codd's extension to the relational model RM/T ( [Codd 79]). The appendix of this paper contains a brief summary of the fundamental features of each language together with an example which has been expressed in each of them.
Reference: [Albano 83] <author> Albano, A., L.Cardelli and R.Orsini. </author> <title> Galileo: a strongly typed, interactive conceptual language. </title> <type> Technical Report 83-11271-2, </type> <institution> Bell Laboratories, </institution> <address> Murray Hill, N.J., </address> <month> July, </month> <year> 1983. </year> <note> (To appear in ACM Transactions on Databases). [Albano & Orsini 83] Albano, </note> <author> A. and R.Orsini. Dialogo: </author> <title> an interactive environment for conceptual design in Galileo. </title> <editor> In S.Ceri (editor), </editor> <booktitle> Methodology and Tools for Database Design, </booktitle> <pages> pages 229-253. </pages> <publisher> North-Holland, </publisher> <year> 1983. </year>
Reference-contexts: The specific languages to be discussed will be ADAPLEX [Adaplex 83], (based on the Semantic Hierarchy Model [Smith & Smith 77] and Daplex [Shipman 81]), DIAL [Hammer & Berkowitz 80] (based on SDM [McLeod 78]), GALILEO ( [Albano et al 83], <ref> [Albano 83] </ref>) and TAXIS ( [Mylopoulos et al 80], [Wong 81]).
Reference: [Albano et al 83] <author> Albano, A., M.Capaccioli, M.E.Occhiuto and R.Orsini. </author> <title> A modularization mechanism for conceptual modeling. </title> <booktitle> In Proc. 1983 Very Large Databases Conference, </booktitle> <pages> pages 232-240. </pages> <year> 1983. </year>
Reference-contexts: The specific languages to be discussed will be ADAPLEX [Adaplex 83], (based on the Semantic Hierarchy Model [Smith & Smith 77] and Daplex [Shipman 81]), DIAL [Hammer & Berkowitz 80] (based on SDM [McLeod 78]), GALILEO ( <ref> [Albano et al 83] </ref>, [Albano 83]) and TAXIS ( [Mylopoulos et al 80], [Wong 81]).
Reference: [Atkinson et al 82] <author> Atkinson, </author> <title> M.P., K.J.Chisholm & W.P.Cockshott. PS-Algol: an Algol with a persistent heap. </title> <journal> ACM SIGPLAN Notices 17(7), </journal> <month> July, </month> <year> 1982. </year>
Reference-contexts: The above three points appear to be fundamental to all CMLs, and were advocated in the database context in the pioneering work of 2 For further details, consult the work of Atkinson (e.g., <ref> [Atkinson et al 82] </ref>), who has considered in depth the problem of data persistence. 3 See [Date 81] for a review. 4 Abrial and Chen.
Reference: [Atkinson et al 83] <author> Atkinson, M.P., P.J.Bailey, K.J.Chisholm, W.P.Cockshott and R.Morrison. </author> <title> The Persistent Object Management System. </title> <type> Technical Report, </type> <institution> Dept. of Computer Science, University of Edinburgh, </institution> <month> March, </month> <year> 1983. </year>
Reference-contexts: A similar philosophy was adopted by Kulkarni [Kulkarni 83], who implemented an extension of the DAPLEX language in PS-Algol ([Atkinson et al 82], <ref> [Atkinson et al 83] </ref>), a language which allows for the storage of persistent data.
Reference: [Atzeni et al. 82] <author> Atzeni, P., C.Batini, V.de Antonellis, M.Lenzerini, Villanelli and B.Zonta. </author> <title> A computer aided tool for conceptual database design. </title> <editor> In H.J.Schneider and A.Wasserman (editor), </editor> <booktitle> Automated tools for Information System design, </booktitle> <pages> pages 85-106. </pages> <publisher> North Holland, </publisher> <year> 1982. </year>
Reference-contexts: This notion was incorporated into the TAXIS framework under the notion of scripts ( [Barron 82]), which are used to model both persistent events and user interaction with the system. The models in INCOD-DTE ( [De Antonellis & Zonta 81], <ref> [Atzeni et al. 82] </ref>) and the Event Model ( [McLeod & King 83], [King & McLeod 83]) also provide state-transition models of event sequencing. 5 IS design methodologies and Conceptual Models One of the motivations for CMs was the need to capture more of the semantics of enterprise in order to <p> The solution in general appears to be to follow some consistent, systematic process for considering the myriads of details. Recent research ( [Smith & Smith 78], [Borgida et al. 84a], [Brodie & Ridjanovic 83], [King & McLeod 83], <ref> [Atzeni et al. 82] </ref>) suggests that the constructs offered by CMs turn out to provide an important basis for methodologies of modeling enterprises. At least one reason for this is that the special semantic relations noted in Section 2 are intimately associated with so-called "abstraction principles". <p> Similar interactive development aids appear in [King & McLeod 83] for the Event Model, and <ref> [Atzeni et al. 82] </ref> for an augmented Entity-Relationship model. 7 Conclusions To summarize the advantages of CMs from the users' point of view, note again that the usefulness of an IS depends on two general factors: 1) the accuracy and completeness of the information stored (i.e., how well it models reality),

Reference: [Brodie 81] <author> Brodie, </author> <title> M.L. On modelling behavioural semantics of databases. </title> <booktitle> In Proc. Very Large Data Bases Conference 1981, </booktitle> <pages> pages 32-43. </pages> <month> September, </month> <year> 1981. </year> <title> [Brodie & Ridjanovic 83] Brodie, M.L. and D.Ridjanovic. On the design and specification of database transactions. </title> <note> In [Brodie et al 83]. , 1983. [Brodie & Zilles 81] Brodie,M.L. </note> <editor> and S.N.Zilles,(Editors). </editor> <booktitle> Proc. ACM workshop on data abstraction, databases and conceptual modelling. ACM SIGART/SIGMOD/SIGPLAN Notices, </booktitle> <month> January </month> <year> 1981, </year> <institution> Pingree Park, Colorado, </institution> <year> 1981. </year>
Reference-contexts: For this reason, some CMs strive for a declarative way of specifying the constraints checked by these operators. Modeling of events through transactions. Transactions, as groups of primitive operations, are usually used in CMs to model complex activities in the world. Among others, [De Antonellis & Zonta 81], <ref> [Brodie 81] </ref> and [King & McLeod 83] have investigated the kind of information that needs to be captured in such activity descriptions. <p> The resulting transaction could have been described as one large monolithic procedure with many conditional statements describing special cases; the specialization process however decomposed and structured the design process. Exception handlers and scripts are also specified by descending the IS-A hierarchy of classes. In a similar vein, in <ref> [Brodie 81] </ref> the aggregate decomposition of objects is used to systematically consider the decomposition of the actions which affect the object.
Reference: [Brodie et al. 84] <editor> Brodie, M.L., J.Mylopoulos and J.W.Schmidt. </editor> <booktitle> On Conceptual Modelling: Perspectives from Artificial Intelligence, Databases and Programming Languages. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1984. </year>
Reference-contexts: As a small compensation, we urge the interested reader to consider the articles related to conceptual modeling in the following references: [Lum et al 78], [Brodie & Zilles 81], [Chen 80], [Tsichritzis & Lochovsky 81], <ref> [Brodie et al. 84] </ref>, [McLeod & King 83]. 9 often through derived attributes 10 ACKNOWLEDGMENTS Some of the ideas in this paper were first developed in co-operation with Professor John Mylopoulos, to whom I am indebted for numerous stimulating discussions.
Reference: [Bubenko 80] <author> Bubenko, J.A. </author> <title> Information modeling in the context of system development. </title> <booktitle> In IFIP Congress 1980. </booktitle> <year> 1980. </year> <note> [Buneman & Frankel 79] Buneman, </note> <author> P. and R.E.Frankel. </author> <title> FQL - a funtional query language. </title> <booktitle> In Proc. 1979 ACM-SIGMOD Conference, </booktitle> <pages> pages 52-58. </pages> <month> June, </month> <year> 1979. </year>
Reference-contexts: This information is however not usually sufficient to provide an implementation, because it leaves all implementation issues undecided. Conceptual modeling at the requirements specification level has been advocated for general software systems (e.g., <ref> [Bubenko 80] </ref>, [Wilson 79]), and researchers associated with the CMLs described in this paper have developed requirements languages which are well-suited for being implemented using the corresponding CML (e.g., [Greenspan 82], [Kunin 82]). 6 Computer aids associated with CMLs Given the claim that CMLs can be used to facilitate the development
Reference: [Chan 82] <author> Chan, A., S.Fox, W.K.Lin, A.Nori and D.R.Ries. </author> <title> Storage and access structures to support a semantic data model. </title> <booktitle> In Proc. 1982 Very Large Data Bases Conference. </booktitle> <year> 1982. </year>
Reference-contexts: The ideal computer tool supporting the use of a CML is a compiler to translate a conceptual description directly into some computer representation which provides for data manipulation efficiency at a level comparable to those in traditional application systems. Prototypes of such compilers are being developed for ADAPLEX ( <ref> [Chan 82] </ref>), TAXIS ( [Nixon 83]) and GALILEO, -- the ADAPLEX storage management system being the most sophisticated -- but none are yet commercially available.
Reference: [Chen 76] <author> Chen, P.P.S. </author> <title> The Entity-Relationship model: towards a unified view of data. </title> <journal> ACM Trans. on Database Systems 1(1) </journal> <pages> 9-36, </pages> <month> March, </month> <year> 1976. </year>
Reference-contexts: In addition, we will occasionally refer to some conceptual models which are important for historic reasons, such as Abrial's Binary Model ( [Abrial 74]), Chen's Entity-Relationship model ( <ref> [Chen 76] </ref>), and 2 Codd's extension to the relational model RM/T ( [Codd 79]). The appendix of this paper contains a brief summary of the fundamental features of each language together with an example which has been expressed in each of them.
Reference: [Chen 80] <author> Chen, P.P.Y. </author> <title> (editor). Entity-Relationship Approach to Systems Analysis and Design. </title> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1980. </year>
Reference-contexts: As a small compensation, we urge the interested reader to consider the articles related to conceptual modeling in the following references: [Lum et al 78], [Brodie & Zilles 81], <ref> [Chen 80] </ref>, [Tsichritzis & Lochovsky 81], [Brodie et al. 84], [McLeod & King 83]. 9 often through derived attributes 10 ACKNOWLEDGMENTS Some of the ideas in this paper were first developed in co-operation with Professor John Mylopoulos, to whom I am indebted for numerous stimulating discussions.
Reference: [Codd 79] <author> Codd, E.F. </author> <title> Extending the database relational model to capture more meaning. </title> <journal> ACM Trans. on Database Systems 4(4) </journal> <pages> 395-434, </pages> <month> December, </month> <year> 1979. </year>
Reference-contexts: In addition, we will occasionally refer to some conceptual models which are important for historic reasons, such as Abrial's Binary Model ( [Abrial 74]), Chen's Entity-Relationship model ( [Chen 76]), and 2 Codd's extension to the relational model RM/T ( <ref> [Codd 79] </ref>). The appendix of this paper contains a brief summary of the fundamental features of each language together with an example which has been expressed in each of them. The example was meant to illustrate the special features of these languages and their relative strengths and weaknesses. <p> In addition, this avoids the problems inherent with unique external identifiers, such as their potential non-uniqueness, synonymy, scope and mutability (see [Kent 79], <ref> [Codd 79] </ref>), and allows partial knowledge to be recorded much more naturally (e.g., this student is a new borrower but doesn't remember his student number). Relations encode associations between entities Generally, mathematical relations are used to model the inter-relationships of entities in the world. <p> Information about the semantics of activities may appear in a number of forms in a conceptual model: Description of events. In CMs such as the original SDM ( [McLeod 78]) or RM/T ( <ref> [Codd 79] </ref>), objects can be classified to be "event types". In RM/T, events are those entities which have associated a time of occurrence or initiation/termination.
Reference: [Date 81] <author> Date, C.J. </author> <title> An Introduction to Database Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1981. </year> <title> [De Antonellis & Zonta 81] De Antonellis, </title> <editor> V. and B.Zonta. </editor> <title> Modelling events in data base applications design. </title> <booktitle> In Proc. 1981 Very Large Data Bases Conference, </booktitle> <pages> pages 23-31. </pages> <year> 1981. </year>
Reference-contexts: This approach itself has a number of drawbacks, including: 1 The reader is assumed to be familiar with these notions (see, for example, <ref> [Date 81] </ref> or [Tsichritzis & Lochovsky 81]); also note that this use of the word "model" is distinct from the sense of modeling noted before. 3 except for Cobol, these are general purpose programming languages, which have not been designed with the needs of IS modeling in mind, and hence provide <p> The above three points appear to be fundamental to all CMLs, and were advocated in the database context in the pioneering work of 2 For further details, consult the work of Atkinson (e.g., [Atkinson et al 82]), who has considered in depth the problem of data persistence. 3 See <ref> [Date 81] </ref> for a review. 4 Abrial and Chen. Three special semantic relations: attribute, type, subtype As observed by McLeod and Smith in [Brodie & Zilles 81], many CMs single out three binary semantic relations for special treatment: has-attribute, has-type/has-instance, has-subtype.
Reference: [Greenspan 82] <author> Greenspan, S.J., A.Borgida and J.Mylopoulos. </author> <title> Capturing more world knowledge in the requirements sepcification. </title> <booktitle> In 6th Int. Conf. on Software Engineering, </booktitle> <pages> pages 225-233. </pages> <year> 1982. </year> <note> 25 [Hammer & Berkowitz 80] Hammer, </note> <author> M. and B.Berkowitz. DIAL: </author> <title> A programming language for data intensive applications. </title> <booktitle> In Proc. ACM-SIGMOD Conference, </booktitle> <pages> pages 75-92. </pages> <month> May , </month> <year> 1980. </year>
Reference-contexts: Conceptual modeling at the requirements specification level has been advocated for general software systems (e.g., [Bubenko 80], [Wilson 79]), and researchers associated with the CMLs described in this paper have developed requirements languages which are well-suited for being implemented using the corresponding CML (e.g., <ref> [Greenspan 82] </ref>, [Kunin 82]). 6 Computer aids associated with CMLs Given the claim that CMLs can be used to facilitate the development of IS, it is natural that many of the researchers have attempted to develop automatic or semi-automatic tools to assist the IS designers.
Reference: [Kent 79] <author> Kent, W. </author> <title> Limitations of record based information models. </title> <journal> ACM Trans. on Database Systems 4(1) </journal> <pages> 107-131, </pages> <month> March, </month> <year> 1979. </year> <editor> [King & McLeod 83] King, R. and D.McLeod. </editor> <title> The event database specification model. </title> <booktitle> In Proc. Second Int. Conf. on Databases: Improving Useability and Responsiveness. </booktitle> <address> Jerusalem, Israel, </address> <month> June, </month> <year> 1983. </year>
Reference-contexts: So called "semantic integrity constraints" are needed to check any further conditions, and these are not available in many commercial systems. Kent has presented detailed and cogent criticisms of the suitability of record-based information models ( <ref> [Kent 79] </ref>). <p> In addition, this avoids the problems inherent with unique external identifiers, such as their potential non-uniqueness, synonymy, scope and mutability (see <ref> [Kent 79] </ref>, [Codd 79]), and allows partial knowledge to be recorded much more naturally (e.g., this student is a new borrower but doesn't remember his student number). Relations encode associations between entities Generally, mathematical relations are used to model the inter-relationships of entities in the world.
Reference: [Kulkarni 83] <author> Kulkarni, K.G. </author> <title> Extended functional data model - user manual. Persistent Programming Research Report 7, </title> <institution> Dept. of Computer Science, University of Edinburgh, </institution> <month> September, </month> <year> 1983. </year>
Reference-contexts: Such an approach allows TAXIS to take advantage of the considerable work on optimization in DBMS, but at the cost of not being able to fine-tune this for an object-oriented database. A similar philosophy was adopted by Kulkarni <ref> [Kulkarni 83] </ref>, who implemented an extension of the DAPLEX language in PS-Algol ([Atkinson et al 82], [Atkinson et al 83]), a language which allows for the storage of persistent data.
Reference: [Kunin 82] <author> Kunin, J. </author> <title> Analysis and specification of office procedures. </title> <type> PhD thesis, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> February, </month> <year> 1982. </year>
Reference-contexts: Conceptual modeling at the requirements specification level has been advocated for general software systems (e.g., [Bubenko 80], [Wilson 79]), and researchers associated with the CMLs described in this paper have developed requirements languages which are well-suited for being implemented using the corresponding CML (e.g., [Greenspan 82], <ref> [Kunin 82] </ref>). 6 Computer aids associated with CMLs Given the claim that CMLs can be used to facilitate the development of IS, it is natural that many of the researchers have attempted to develop automatic or semi-automatic tools to assist the IS designers.
Reference: [Lum et al 78] <editor> Lum, V. et al. </editor> <title> 1978 New Orleans Data Base Design Workshop report. </title> <type> Technical Report RJ2554(33154), </type> <institution> IBM, </institution> <year> 1978. </year>
Reference-contexts: [King & McLeod 83]) also provide state-transition models of event sequencing. 5 IS design methodologies and Conceptual Models One of the motivations for CMs was the need to capture more of the semantics of enterprise in order to serve as a requirements specification for later stages of database design (see <ref> [Lum et al 78] </ref>). The task of developing large, detailed conceptual models of enterprises which are accurate, consistent and complete, has run into the same complexity problems as those encountered in developing large pieces of general software. <p> Among others, we have omitted references to the work of research groups led by Bubenko, Langefors, Roussopulos, Sowa, Su, Wiederhold, Yao and many others. As a small compensation, we urge the interested reader to consider the articles related to conceptual modeling in the following references: <ref> [Lum et al 78] </ref>, [Brodie & Zilles 81], [Chen 80], [Tsichritzis & Lochovsky 81], [Brodie et al. 84], [McLeod & King 83]. 9 often through derived attributes 10 ACKNOWLEDGMENTS Some of the ideas in this paper were first developed in co-operation with Professor John Mylopoulos, to whom I am indebted for

Reference: [Nixon 83] <editor> Nixon, </editor> <publisher> B. </publisher>
Reference-contexts: Prototypes of such compilers are being developed for ADAPLEX ( [Chan 82]), TAXIS ( <ref> [Nixon 83] </ref>) and GALILEO, -- the ADAPLEX storage management system being the most sophisticated -- but none are yet commercially available. Among the open problems is the global optimization of the more complex consistency checks inherent in CMLs, such as 9 referential integrity and constraints on the ranges of attributes.
References-found: 20

