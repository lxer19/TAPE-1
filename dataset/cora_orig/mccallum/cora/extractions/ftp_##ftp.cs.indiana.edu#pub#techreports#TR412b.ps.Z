URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR412b.ps.Z
Refering-URL: http://www.cs.indiana.edu/ftp/techreports/index.html
Root-URL: http://www.cs.indiana.edu
Email: (bramley@cs.indiana.edu)  (tloos@cs.indiana.edu)  
Title: A Visualization Tool for Large Sparse Matrices  
Author: by R. Bramley and T. Loos 
Address: Bloomington, Indiana 47405-4101  
Affiliation: COMPUTER SCIENCE DEPARTMENT INDIANA UNIVERSITY  
Date: July, 1994  
Note: EMILY:  
Abstract: TECHNICAL REPORT NO. 412 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Fernando L. Alvarado. </author> <title> "The Sparse Matrix Manipulation System: User and Reference Manual". </title> <type> Technical report, </type> <institution> The University of Wisconsin, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: This requires partitioning the data, preferably with processors receiving equal amounts of data and the amount of run-time communication between them minimal. Previous work [7] [10] <ref> [1] </ref> has shown the utility of being able to visualize the location of the nonzero entries of the matrix and its preconditioners, as well as the magnitude of the entries in the matrix.
Reference: [2] <author> Iain S. Duff, Roger G. Grimes, and John G. Lewis. </author> <title> "Users Guide for the Harwell-Boeing Sparse Matrix Collection (Release I)". </title> <type> Technical report, </type> <institution> Cedex and Boeing Computer Services, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: of emily can be used with HB matrix files, or to look at ether sparse or dense Matlab matrices. 2.2 How to Run emily The UNIX command line usage is: % emily [hb file name] where hb file name is a file containing a sparse matrix specified in Harwell-Boeing format <ref> [2] </ref>. The Harwell-Boeing file is read and the sparse matrix is displayed. If no filename is specified, a dense matrix based on A ij = i + j will be calculated and displayed. The Matlab version of emily is executed as: &gt;> emily (M) 3 where M is a matrix. <p> and a sparse matrix. typedef struct - MatrixType type; /* type of matrix: sparse (HB) or dense */ union - /* the actual matrix */ HBMatrix *hb; DenseMatrix *d; data; - DaMatrix; The HBMatrix type is based on the specification of the Harwell-Boeing matrix format given in Duff, et. al <ref> [2] </ref>. <p> For emily, this header is defined in the HBHeader structure. This header is just about unintelligible without reading Duff, et. al. <ref> [2] </ref> and would not shed much additional light, so it was excluded. typedef struct - /* header */ HBHeader head; /* data */ int *col_inds; /* column pointers */ int *row_inds; /* row indices */ double *values; /* data values */ double *RHS; /* RHS's */ double *guess; /* starting guesses
Reference: [3] <author> Barrett et. al. </author> <title> Templates for the Solution of Linear Systems: Buildings Blocks for Iterative Methods. </title> <publisher> SIAM, </publisher> <address> Philadelphia PA, first edition, </address> <year> 1994. </year>
Reference: [4] <author> James D. Foley, Andries van Dam, Steven K. Feiner, and John F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <note> second edition, </note> <year> 1990. </year>
Reference-contexts: 1 for every non-zero entry (this creates bitmaps) * the number of input values that overlap the pixel (an estimate of the density at that pixel for really large matrices) 3.3.3 The Compression Algorithm The basic idea of the compression algorithm is a combination of unweighted and weighted area sampling <ref> [4, pp. 132-137] </ref>. In unweighted area sampling, the weights are the proportional area of the source image covered in the destination pixel. <p> It is not 13 14 purely weighted area sampling in the sense of <ref> [4] </ref>, since the updates to the pixel are based on the area being sampled. Pseudo-C for CompressMat ()'s algorithm is in Appendix 2. Not included in that pseudo-code is a small amount of code that recognizes if the input data items are bi-valued.
Reference: [5] <author> Dan Heller. </author> <title> Volume Six: Motif Programming Manual for OSF/Motif Version 1.1. </title> <publisher> O' Reilly and Associates, </publisher> <address> Sebastopol, CA, first edition, </address> <year> 1991. </year>
Reference-contexts: The following books helped immensely for the user interface design, with X Windows [9], overall Motif programming <ref> [5] </ref>, and really tough Motif programming [8]. 1 UNIX is a trademark of UNIX System Laboratories, Inc. 22 A Data Structures A.1 RCASParameters The core data structure of emily, RCASParameters contains arguably too much information, but it is all the information required to keep and draw one window.
Reference: [6] <author> The MathWorks Inc. </author> <title> Matlab External Interface Guide. Source for cmex information. This reference is for Matlab Version 4.0a., </title> <month> August </month> <year> 1992. </year>
Reference-contexts: There are two versions of emily: a Matlab version implemented using a cmex <ref> [6] </ref> interface and a traditional command-line interface version. Both versions can accept a file name as input; the file is assumed to be in Harwell-Boeing format. The Matlab version can also handle either sparse or dense matrix Matlab input matrices.
Reference: [7] <author> The MathWorks Inc. </author> <title> Matlab User's Guide. General purpose guide to Matlab, </title> <month> August </month> <year> 1992. </year>
Reference-contexts: This requires partitioning the data, preferably with processors receiving equal amounts of data and the amount of run-time communication between them minimal. Previous work <ref> [7] </ref> [10] [1] has shown the utility of being able to visualize the location of the nonzero entries of the matrix and its preconditioners, as well as the magnitude of the entries in the matrix.
Reference: [8] <author> Eric F. Johnson and Kevin Reichard. </author> <title> Professional Graphics Programming in the X Window System. </title> <address> MIS:Press, New York, NY, first edition, </address> <year> 1993. </year>
Reference-contexts: The following books helped immensely for the user interface design, with X Windows [9], overall Motif programming [5], and really tough Motif programming <ref> [8] </ref>. 1 UNIX is a trademark of UNIX System Laboratories, Inc. 22 A Data Structures A.1 RCASParameters The core data structure of emily, RCASParameters contains arguably too much information, but it is all the information required to keep and draw one window.
Reference: [9] <author> Adrian Nye. </author> <title> Volume One: Xlib Programming Manual for Version 11 of the X Window System. </title> <publisher> O' Reilly and Associates, </publisher> <address> Sebastopol, CA, seventh edition, </address> <year> 1991. </year>
Reference-contexts: The following books helped immensely for the user interface design, with X Windows <ref> [9] </ref>, overall Motif programming [5], and really tough Motif programming [8]. 1 UNIX is a trademark of UNIX System Laboratories, Inc. 22 A Data Structures A.1 RCASParameters The core data structure of emily, RCASParameters contains arguably too much information, but it is all the information required to keep and draw one
Reference: [10] <author> Allan M. Tuchman and Michael W. Berry. </author> <title> "Matrix Visualization in the Design of Numerical Algorithms". </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(1) </volume> <pages> 84-92, </pages> <month> Winter </month> <year> 1990. </year> <note> 31 32 Matrix 33 Colormap 34 Number 35 for Parallel Processing 36 </note>
Reference-contexts: This requires partitioning the data, preferably with processors receiving equal amounts of data and the amount of run-time communication between them minimal. Previous work [7] <ref> [10] </ref> [1] has shown the utility of being able to visualize the location of the nonzero entries of the matrix and its preconditioners, as well as the magnitude of the entries in the matrix.
References-found: 10

