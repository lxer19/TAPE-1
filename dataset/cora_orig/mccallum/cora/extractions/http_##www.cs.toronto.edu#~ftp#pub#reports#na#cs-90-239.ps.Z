URL: http://www.cs.toronto.edu/~ftp/pub/reports/na/cs-90-239.ps.Z
Refering-URL: http://www.cs.toronto.edu/NA/reports.html
Root-URL: 
Title: The Potential for Parallelism in Runge-Kutta Methods. Part 1: RK Formulas in Standard Form.  
Author: K. R. Jackson and S. P. Ntrsett K. R. Jackson and S. P. Ntrsett Prof. K. R. Jackson, Prof. S. P. Ntrsett, 
Note: c Copyright  This work was supported in part by the Natural  
Address: Toronto, Ontario, Canada M5S 1A4  Toronto, Toronto, Ontario, Canada M5S 1A4.  N-7034 Trondheim-NTH, Norway.  D.02.08.001.  
Affiliation: Computer Science Department University of Toronto  Computer Science Dept., University of  Division of Mathematical Sciences, Norwegian Institute of Technology,  Sciences and Engineering Research Council of Canada, the Information Technology Research Centre of Ontario, and the Norwegian Research Council for Science and Humanities,  
Pubnum: Technical Report No.  
Email: E-mail: krj@na.toronto.edu  E-mail: norsett@imf.unit.no  
Date: 239/90 November 1990.  November 1990.  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> L. Bales, O. Karakashian and S. Serbin, </author> <title> On the A 0 -acceptability of rational approximations to the exponential function with only real poles, </title> <booktitle> BIT 28 (1988), </booktitle> <pages> 70-79. </pages>
Reference-contexts: We show that satisfying these two requirements places a severe restriction on the order of the formula. This leads us to consider s-stage formulas having coefficient matrices with s distinct real eigenvalues. Consequently, these matrices can be diagonalized. As others have observed, <ref> [1] </ref>, [33], [34], [36], the latter property can be used to great advantage for parallel computation, since, not only can all s function evaluations required to evaluate the formula be computed concurrently, but also the system of linear equations associated with the Newton iteration for the solution of the internal stage <p> We review results of Ntrsett and Wanner [43], Bales, Karakashian and Serbin <ref> [1] </ref> and Keeling [36] that allow one to develop A 0 -stable implicit RK collocation formulas with diagonalizable coefficient matrices that can be implemented effectively as outlined above on a wide range of parallel computers. <p> The result stated at the beginning of the last paragraph was developed in stages. Ntrsett and Wanner [43] noted that all s roots of N are real if all s fl i 's are real. They did not, though, establish the distinctness of the roots. Bales, Karakashian and Serbin <ref> [1] </ref> extended the result of [43] by showing that all s roots of N are distinct if all s fl i are real and nonzero. In addition, they showed that all s roots of N are positive if all s fl i are positive. <p> Its proof, which will be given there, uses an adaptation of the bi-orthogonality theory of Iserles and Ntrsett [27] [28], and is quite different from that employed in <ref> [1] </ref> or [43]. Theorem 6.5. <p> There are, though, some positive results about A 0 and I-stability of real IRKC formulas. Bales, Karakashian and Serbin <ref> [1] </ref> showed that a s-stage real IRK formula of order s or s + 1 is A 0 -stable | in fact strongly Ao-stable for s 3 | if the eigenvalues ffl i g of the formula's coefficient matrix A satisfy fl i 1=2 for i = 1; : : : <p> Karakashian and Rust [34] present some numerical results for a 2-stage 3 rd -order A 0 - stable IRK method based on the theory in <ref> [1] </ref>. The coefficient matrix A of this formula has two distinct real eigenvalues, so the Newton iteration (6.3) associated with the formula can be reduced to two completely independent systems of the form (6.6). Since their test problem is linear, the computation can be simplified further.
Reference: 2. <author> L. G. Birta and O. Abou-Rabia, </author> <title> Parallel block predictor-corrector methods for ode's, </title> <journal> IEEE Trans. Comput. </journal> <volume> C-36 (1987), </volume> <pages> 299-311. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see <ref> [2] </ref>, [6], [12], [17], [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods.
Reference: 3. <author> K. Burrage, </author> <title> A special family of Runge-Kutta methods for solving stiff differential equations, </title> <booktitle> BIT 18 (1978), </booktitle> <pages> 22-41. </pages> <month> 4. </month> , <title> High order algebraically stable Runge-Kutta methods, </title> <booktitle> BIT 18 (1978), </booktitle> <pages> 373-383. </pages> <month> 5. </month> , <title> Solving nonstiff IVPs in a transputer environment, </title> <type> manuscript, </type> <institution> CMSR, Univ. of Liver-pool,, </institution> <address> England. </address> <month> 6. </month> , <title> The error behaviour of a general class of predictor-corrector methods, </title> <type> manuscript, </type> <institution> CMSR, Univ. of Liverpool,, </institution> <address> England. </address>
Reference-contexts: The potential benefit from this reduction in a parallel computing environment is even greater than in a sequential computing setting, where it has long been recognized as significant. The family of SIRK formulas introduced by Burrage <ref> [3] </ref> and Butcher [9] and implemented in STRIDE [7] has fl i = fl for i = 1; : : : ; s and i = fl for i = 2; : : : ; s, where fl 2 R is nonzero. <p> It is well-known that A-stable s-stage SIRK formulas of order s +1 do exist for s = 1; 2; 3; 5, and that L-stable s-stage SIRK formulas of order s exist for 1 s 6 and s = 8, but for no other s 15. (See <ref> [3] </ref> for example.) For s = 2 and 3, Keeling [36] exhibits a family of s-stage B-stable IRK formulas of order s + 1, each having a coefficient matrix A with distinct real eigenvalues, and he claims that a similar family of formulas exists for s = 5.
Reference: 7. <author> K. Burrage, J. C. Butcher and F. H. Chipman, </author> <title> An implementation of singly-implicit Runge-Kutta methods, </title> <booktitle> BIT 20 (1980), </booktitle> <pages> 326-340. </pages>
Reference-contexts: The potential benefit from this reduction in a parallel computing environment is even greater than in a sequential computing setting, where it has long been recognized as significant. The family of SIRK formulas introduced by Burrage [3] and Butcher [9] and implemented in STRIDE <ref> [7] </ref> has fl i = fl for i = 1; : : : ; s and i = fl for i = 2; : : : ; s, where fl 2 R is nonzero.
Reference: 8. <author> J. C. Butcher, </author> <title> On the implementation of implicit Runge-Kutta methods, </title> <booktitle> BIT 16 (1976), </booktitle> <pages> 237-240. </pages> <month> 9. </month> , <title> A transformed implicit Runge-Kutta method, </title> <editor> J. </editor> <booktitle> ACM 26 (1979), </booktitle> <pages> 731-738. </pages> <month> 10. </month> , <title> "The Numerical Analysis of Ordinary Differential Equations," </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1987. </year> <title> 11. , Towards efficient implementation of singly-implicit methods, </title> <journal> ACM Trans. Math. Softw. </journal> <volume> 14 (1988), </volume> <pages> 68-75. </pages>
Reference-contexts: For stiff equations, a Newton-like iteration is typically used to solve for the internal stages. The challenge in this case is to exploit parallelism in the solution of the associated linear systems. To this end, we review Butcher's strategy <ref> [8] </ref> of using similarity transformations to implement fully-implicit RK methods. A desirable characteristic for a formula implemented in this fashion is that its coefficient matrix has a few distinct eigen-values only | preferably one. In addition, for parallel computation, it is advantageous that the associated Jordan blocks be small. <p> Therefore, in the remainder of this section, we concentrate on the potential for parallelism in the solution of (6.3) and the consequences for the choice of FIRK formulas for parallel IVP solvers. Butcher <ref> [8] </ref> proposed an effective scheme for solving (6.3); variants of it are discussed in [11] [51].
Reference: 12. <author> M. T. Chu and H. Hamilton, </author> <title> Parallel solution of ODEs by multi-block methods, </title> <journal> SIAM J. Sci. Stat. Comp. </journal> <volume> 8 (1987), </volume> <pages> 342-353. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], <ref> [12] </ref>, [17], [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2.
Reference: 13. <author> K. Dekker and J. G. Verwer, </author> <title> "Stability of Runge-Kutta Methods for Stiff Nonlinear Differential Equation," </title> <publisher> CWI Monograph, North-Holland, </publisher> <address> Amsterdam, </address> <year> 1984. </year>
Reference-contexts: As is well-known <ref> [13, x3.4] </ref>, det (I zA + zeb T ) ; z = h: Thus, for a s-stage RK formula, R (z) = P (z)=Q (z) for polynomials P and Q satisfying deg (P ) s and Q (z) = i=1 (1 fl i z) where ffl i g are the eigenvalues <p> For a large class of stiff problems, the "observed order" of a scheme is at most one more than its stage order, due to the order reduction phenomenon (see <ref> [13, Ch. 7] </ref>). Consequently, this advantage of increased order may be lost. Due in part to these two observations, most preliminary research to date on the parallel implementation of FIRK formulas has focused on real FIRK schemes, and real IRKC schemes in particular. <p> where V = (c j1 i ) is the van der Monde matrix formed from c 1 ; : : : ; c s , C = diag (c 1 ; : : : ; c s ) and S = diag (1; 1=2; : : : ; 1=s). (See <ref> [13, p. 61] </ref>, for example.) Since at most one c j = 0, A can have at most one eigenvalue fl i = 0.
Reference: 14. <author> R. Enenkel, </author> <title> "The implementation of parallel Runge-Kutta methods," M.Sc. </title> <type> Thesis, </type> <institution> Computer Science Dept., University of Toronto, Toronto, Canada, </institution> <year> 1988. </year>
Reference-contexts: We again prove a result about the order of these methods and discuss the associated Newton variant. We give some preliminary numerical results for the four classes of methods discussed above. Our preliminary results have been extended by Enenkel <ref> [14] </ref>, Lie [38], Iserles and Ntrsett [29], and Kalvenes [32]. As noted above, their results are summarized in the appropriate sections of this paper and [31]. Also, some of the results of these papers are summarized in [42].
Reference: 15. <author> W. H. Enright and D. J. Higham, </author> <title> "Parallel defect control," </title> <type> Tech. Rep. 237/90, </type> <institution> Computer Science Dept., Univ. of Toronto,, Toronto, Canada, </institution> <year> 1990. </year>
Reference-contexts: Hence, there is a potential for considerable savings in run time by exploiting parallelism in the computation of continuous ERK methods. As a final example, Enright and Higham <ref> [15] </ref> have investigating the use of parallelism in defect evaluation and control to improve the reliability of ERK methods. The preliminary numerical experiments of van der Houwen and Sommeijer [23] [25] demonstrate the potential of parallel ERK schemes.
Reference: 16. <author> W. H. Enright, K. R. Jackson, S. P. Ntrsett and P. G. Thomsen, </author> <title> Interpolants for Runge-Kutta formulas, </title> <journal> ACM Trans. Math. Softw. </journal> <volume> 12 (1986), </volume> <pages> 193-218. 29 </pages>
Reference-contexts: Since the simple test equation y 0 = y is a special case of the ODE in the general problem (2.1), the order ^- of the stability function of a RK formula always satisfies ^- -, where is the order of the RK formula. As defined in <ref> [16] </ref>, z n (x) is an interpolant of the numerical solution having local error of order on the interval [x n ; x n+1 ] iff z n (x n ) = y n , z n (x n+1 ) = y n+1 , and is the largest integer for which <p> As a second example, it is tedious but straightforward to show that 5 stages are required for an ERK formula-pair of orders 3 and 4. However, it is easy to derive a 5-stage 4-parallel 2-processor formula-pair of orders 3 and 4. In fact, RKN (3,4) exhibited in <ref> [16, p. 205] </ref> is one such formula-pair, since a 43 being 0 permits F n;3 and F n;4 to be computed in parallel. <p> Also note that all function evaluations required in each iteration of step (2) or (3) of the "boot-strapping" algorithm described in <ref> [16, p. 197] </ref> for the construction of interpolants for RK formulas can be evaluated in parallel. This could substantially reduce the time required on parallel machines for the evaluation of high-order ERK formulas with interpolants, sometimes referred to as continuous ERK formulas.
Reference: 17. <author> M. A. Franklin, </author> <title> Parallel solution of ordinary differential equations, </title> <journal> IEEE Trans. Comp. </journal> <month> C-27 </month> <year> (1978), </year> <pages> 413-420. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], <ref> [17] </ref>, [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2.
Reference: 18. <author> C. W. Gear, </author> <title> "The potential for parallelism in ordinary differential equations," </title> <type> Tech. Rep. </type> <institution> UIUC-DCS-R-86-1246, Computer Science Dept., Univ. of Illinois at Urbana-Champaign, Urbana, IL, </institution> <year> 1986. </year> <title> 19. , "Parallel methods in ordinary differential equations," </title> <type> Tech. Rep. </type> <institution> UIUCDCS-R-87-1396, Computer Science Dept., Univ. of Illinois at Urbana-Champaign, Urbana, IL, </institution> <year> 1987. </year> <title> 20. , "Massive parallelism across the method in ODEs," </title> <type> Tech. Rep. </type> <institution> UIUCDCS-R-88-1442, Computer Science Dept., Univ. of Illinois at Urbana-Champaign, Urbana, IL, </institution> <year> 1988. </year>
Reference-contexts: In many application areas, though, this research is still in its infancy, as is the case, in particular, for the numerical solution of Initial Value Problems (IVPs) for Ordinary Differential Equations (ODEs). Gear <ref> [18] </ref> [19] surveys the preliminary research in this area and discusses the need for parallel computation. He also outlines several open problems in this new field. In a more recent report, Burrage [5] provides a useful survey of parallel methods for nonstiff IVPs. Gear [18] [19] classifies the means of achieving <p> Gear <ref> [18] </ref> [19] surveys the preliminary research in this area and discusses the need for parallel computation. He also outlines several open problems in this new field. In a more recent report, Burrage [5] provides a useful survey of parallel methods for nonstiff IVPs. Gear [18] [19] classifies the means of achieving parallelism in IVP solvers into two main categories: (1) parallelism across the method or equivalently parallelism across time and (2) parallelism across the system or equivalently parallelism across space.
Reference: 21. <author> E. Hairer, S. P. Ntrsett and G. Wanner, </author> <title> "Solving Ordinary Differential Equations I, Nonstiff Problems," </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: A p th -order approximation y n+1 can be computed from the fy (k) p polynomial extrapolation without any additional function evaluations. As is well-known <ref> [21, xII.9] </ref>, this extrapolation process can be rewritten as an ERK formula, and, for our particular purposes, as a p-parallel p th -order ERK formula. Lower order approximations are given as a by-product of the extrapolation process without any additional function evaluations. <p> The stability function for this approximation is P (z) = P - However, extrapolation can be viewed as a process of solving for the error coefficients in the error expansions of fy (k) n+1 g and of eliminating the associated error terms. Since the associated linear system is nonsingular <ref> [21, p. 220] </ref>, we can add to the naturally arising approximation of order any linear combination of error coefficients of orders - + 1; : : : ; p. <p> Their results show that a simple variable-stepsize implementation of their parallel ERK schemes, a subclass of their explicit PIRK methods, can yield a speedup of more than two at stringent tolerances compared to the efficient sequential ERK code DOPRI8 <ref> [21] </ref>. 4. Parallelism in "Strictly-Diagonal" Implicit Runge-Kutta Methods. As we have seen, classical ERK formulas have limited potential for parallelism. So it is natural to consider next if IRK formulas may have more.
Reference: 22. <author> E. Hairer and H. Turke, </author> <title> The equivalence of B-stability and A-stability, </title> <booktitle> BIT 24 (1984), </booktitle> <pages> 520-528. </pages>
Reference-contexts: As noted in x2, it may happen that the order ^- of the stability function R (z) when considered as a rational approximation to e z is greater than the order of its associated RK formula. However, Hairer and Turke <ref> [22] </ref> show that, if R (z) = P (z)=Q (z) is an irreducible A-acceptable approximation to e z of order ^- 1 with deg (P ) deg (Q) = s, then there is a s-stage B-stable RK formula of order - = ^- having R as its stability function. <p> Although not stated explicitly in <ref> [22] </ref>, the argument presented therein can be extended easily to show also that, if R (z) = P (z)=Q (z) is an irreducible approximation to e z of order ^- 1 with s = max (deg (P ); deg (Q)), then there is a s-stage RK formula of order - = <p> However, the more general result of Hairer and Turke <ref> [22] </ref> cited above ensures that we can associate a s-stage B-stable IRK formula with each such A-acceptable rational approximation. Karakashian and Rust [34] present some numerical results for a 2-stage 3 rd -order A 0 - stable IRK method based on the theory in [1].
Reference: 23. <author> P. J. van der Houwen and B. P. Sommeijer, </author> <title> "Variable step iteration of high-order Runge-Kutta methods on parallel computers," </title> <type> Tech. Rep. </type> <institution> NM-R8817, Dept. of Numerical Mathematics, Centre for Mathematics and Computer Science, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1988. </year> <title> 24. , "Block Runge-Kutta methods on parallel computers," </title> <type> Tech. Rep. </type> <institution> NM-R8906, Dept. of Numerical Mathematics, Centre for Mathematics and Computer Science, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year> <title> 25. , Parallel iteration of high-order Runge-Kutta methods with stepsize control, </title> <journal> J. Comput. Appl. Math. </journal> <volume> 29 (1990), </volume> <pages> 111-127. </pages>
Reference-contexts: In a forthcoming paper [31], we use the well-established principle of converting a direct method to an iterative one to exploit the greater potential for parallelism in the latter formulation. This leads to the class of predictor-corrector (PC) PaRK methods, also studied by van der Houwen, Sommeijer and Couzy <ref> [23] </ref> [25] [26]. <p> We proved several years ago that this order bound is attainable. A different proof of this simple result was found independently by van der Houwen and Sommeijer <ref> [23] </ref> [25], although they do not explicitly state the extension to interpolants nor stability polynomials. Theorem 3.2. <p> As noted by van der Houwen and Sommeijer <ref> [23] </ref> [25], an interesting question is: How many processors are required to compute a p-parallel p th -order ERK formula? A similar question arises for a p-parallel p th -order ERK formula with an interpolant of local order p or p + 1 in particular or a family of interpolants having <p> As a final example, Enright and Higham [15] have investigating the use of parallelism in defect evaluation and control to improve the reliability of ERK methods. The preliminary numerical experiments of van der Houwen and Sommeijer <ref> [23] </ref> [25] demonstrate the potential of parallel ERK schemes. Their results show that a simple variable-stepsize implementation of their parallel ERK schemes, a subclass of their explicit PIRK methods, can yield a speedup of more than two at stringent tolerances compared to the efficient sequential ERK code DOPRI8 [21]. 4. <p> Even if the RK formula is not implicit, both (6.2) and (6.3) permit the parallel evaluation of the s f evaluations associated with F l n . This observation is the basis for the parallel predictor-corrector methods discussed in [5], [6], <ref> [23] </ref>, [25], [26] and [31]. We shall not discuss this novel approach here. Rather, in this section, we restrict ourselves to exploring the potential for parallelism in more standard IRK methods. IRK formulas have been used primarily to solve stiff IVPs.
Reference: 26. <author> P. J. van der Houwen, B. P. Sommeijer and W. Couzy, </author> <title> "Embedded diagonally implicit Runge-Kutta algorithms on parallel computers," </title> <type> Tech. Rep. </type> <institution> NM-R8912, Dept. of Numerical Mathematics, Centre for Mathematics and Computer Science, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year>
Reference-contexts: We summarize some promising numerical results of Lie [38] for a fixed-stepsize implementation of formulas of this type obtained on a Cray XMP/2 using "macrotasking". The formulas of van der Houwen, Sommeijer and Couzy <ref> [26] </ref> also fall into this class. Finally, we briefly consider the extension of the results in this section to formulas having block-lower-triangular coefficient matrices. We consider in x6 fully-implicit RK methods. <p> This leads to the class of predictor-corrector (PC) PaRK methods, also studied by van der Houwen, Sommeijer and Couzy [23] [25] <ref> [26] </ref>. <p> This is a stronger result than is possible to obtain from Theorem 5.1. The PIRK formulation of van der Houwen, Sommeijer and Couzy <ref> [26] </ref> allows them to derive a large class of parallel DIRK schemes enjoying both high order and good stiff stability properties. Some preliminary numerical results in [26] demonstrate the potential of this approach. Finally, before closing this section, we comment briefly on an obvious extension of DIRK formulas. <p> This is a stronger result than is possible to obtain from Theorem 5.1. The PIRK formulation of van der Houwen, Sommeijer and Couzy <ref> [26] </ref> allows them to derive a large class of parallel DIRK schemes enjoying both high order and good stiff stability properties. Some preliminary numerical results in [26] demonstrate the potential of this approach. Finally, before closing this section, we comment briefly on an obvious extension of DIRK formulas. <p> Even if the RK formula is not implicit, both (6.2) and (6.3) permit the parallel evaluation of the s f evaluations associated with F l n . This observation is the basis for the parallel predictor-corrector methods discussed in [5], [6], [23], [25], <ref> [26] </ref> and [31]. We shall not discuss this novel approach here. Rather, in this section, we restrict ourselves to exploring the potential for parallelism in more standard IRK methods. IRK formulas have been used primarily to solve stiff IVPs. <p> use several processors to factor I m h n flJ l n in parallel, 22 (2) employ the processors not involved with factoring I m h n flJ l n to do some other useful work (possibly on another problem or even for another user), or (3) as noted in <ref> [26] </ref>, use one extra processor to continually refactor and updated I m h n flJ l n while the others proceed with the integration using the most recently factored I m h n flJ l The SIRK formulas in STRIDE have a serious disadvantage from a parallel computing perspective: because i
Reference: 27. <author> A. Iserles and S. P. Ntrsett, </author> <title> Bi-orthogonal polynomials, </title> <booktitle> in "Polynomes Orthogonaux et Applications," Lecture Notes in Mathematics #1171, Proceedings Bar-le-Duc, </booktitle> <year> 1984, </year> <editor> A. Dold and B. Eckmann eds., </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985, </year> <pages> pp. 92-100. </pages> <month> 28. </month> , <title> On the theory of biorthogonal polynomials, </title> <journal> Trans. Amer. Math. Soc. </journal> <month> 306 </month> <year> (1988), </year> <title> 455-474.. 29. , "On the theory of parallel Runge-Kutta methods," </title> <type> Tech. Rep. DAMTP NA12 / 1888, </type> <institution> Dept. of Applied Math and Theoretical Physics, Cambridge University, </institution> <address> Cambridge, England, </address> <year> 1989. </year>
Reference-contexts: The following theorem, which augments these results, is a special case of a theorem from a forthcoming paper on extensions to the C-polynomial theory of Ntrsett [41]. Its proof, which will be given there, uses an adaptation of the bi-orthogonality theory of Iserles and Ntrsett <ref> [27] </ref> [28], and is quite different from that employed in [1] or [43]. Theorem 6.5.
Reference: 30. <author> K. R. Jackson and S. P. Ntrsett, </author> <title> "The potential for parallelism in Runge-Kutta methods. Part 1: RK Formulas in Standard Form," </title> <type> Tech. Rep. No. 239/90, </type> <institution> Computer Science Dept., University of Toronto, Toronto, Canada, </institution> <year> 1990. </year> <title> 31. , The potential for parallelism in Runge-Kutta methods. Part 2: RK predictor-corrector formulas, </title> <note> in preparation. </note>
Reference-contexts: This is noted by Burrage in [6, p. 9], but not proved there. As we know of no easily accessible proof of this result, we have included one in the Appendix of <ref> [30] </ref>.
Reference: 32. <author> J. Kalvenes, </author> <title> "Experimentation with parallel ODE-solvers," </title> <type> Tech. Rep. </type> <institution> NM-R8912, Mathematical Sciences Div., Norwegian Institute of Technology, Trondheim, Norway, </institution> <year> 1986. </year>
Reference-contexts: We again prove a result about the order of these methods and discuss the associated Newton variant. We give some preliminary numerical results for the four classes of methods discussed above. Our preliminary results have been extended by Enenkel [14], Lie [38], Iserles and Ntrsett [29], and Kalvenes <ref> [32] </ref>. As noted above, their results are summarized in the appropriate sections of this paper and [31]. Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method.
Reference: 33. <author> O. A. Karakashian, </author> <title> On Runge-Kutta methods for parabolic problems with time-dependent coefficients, </title> <journal> Math. Comp. </journal> <volume> 47 (1986), </volume> <pages> 77-101. </pages>
Reference-contexts: We show that satisfying these two requirements places a severe restriction on the order of the formula. This leads us to consider s-stage formulas having coefficient matrices with s distinct real eigenvalues. Consequently, these matrices can be diagonalized. As others have observed, [1], <ref> [33] </ref>, [34], [36], the latter property can be used to great advantage for parallel computation, since, not only can all s function evaluations required to evaluate the formula be computed concurrently, but also the system of linear equations associated with the Newton iteration for the solution of the internal stage values <p> In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian <ref> [33] </ref>, Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound. In this section, we establish the definitions and notation used throughout this paper.
Reference: 34. <author> O. A. Karakashian and W. Rust, </author> <title> On the parallel implementation of implicit Runge-Kutta methods, </title> <journal> SIAM J. Sci. Stat. Comput. </journal> <volume> 9 (1988), </volume> <pages> 1985-1090. </pages>
Reference-contexts: We show that satisfying these two requirements places a severe restriction on the order of the formula. This leads us to consider s-stage formulas having coefficient matrices with s distinct real eigenvalues. Consequently, these matrices can be diagonalized. As others have observed, [1], [33], <ref> [34] </ref>, [36], the latter property can be used to great advantage for parallel computation, since, not only can all s function evaluations required to evaluate the formula be computed concurrently, but also the system of linear equations associated with the Newton iteration for the solution of the internal stage values can <p> We also review some exciting new results of Orel [45] on high-order L-stable methods with distinct real eigenvalues. Finally, we summarize some promising numerical results of Karakashian and Rust <ref> [34] </ref> for a fixed-stepsize implementation of a 2-stage 3 rd -order A 0 -stable fully-implicit diagonalizable PaRK formula. In a forthcoming paper [31], we use the well-established principle of converting a direct method to an iterative one to exploit the greater potential for parallelism in the latter formulation. <p> In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust <ref> [34] </ref> and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound. In this section, we establish the definitions and notation used throughout this paper. <p> However, this last negative result is largely offset by the observation in <ref> [34] </ref> that, for the case s = 2 at least, there exist real IRKC formulas of order s + 1 having "quite distinct" fl i 's, but with principal truncation error terms very close to the minimum attained by a SIRK formula. <p> However, the more general result of Hairer and Turke [22] cited above ensures that we can associate a s-stage B-stable IRK formula with each such A-acceptable rational approximation. Karakashian and Rust <ref> [34] </ref> present some numerical results for a 2-stage 3 rd -order A 0 - stable IRK method based on the theory in [1].
Reference: 35. <author> I. N. Katz, M. A. Franklin and A. Sen, </author> <title> Optimally stable parallel predictors for Adams-Moulton correctors, </title> <journal> Comp. & Maths. with Appls. </journal> <volume> 3 (1977), </volume> <pages> 217-233. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], <ref> [35] </ref>, [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2.
Reference: 36. <author> S. L. Keeling, </author> <title> On implicit Runge-Kutta methods with a stability function having distinct real poles, </title> <booktitle> BIT 29 (1989), </booktitle> <pages> 91-109. </pages>
Reference-contexts: We show that satisfying these two requirements places a severe restriction on the order of the formula. This leads us to consider s-stage formulas having coefficient matrices with s distinct real eigenvalues. Consequently, these matrices can be diagonalized. As others have observed, [1], [33], [34], <ref> [36] </ref>, the latter property can be used to great advantage for parallel computation, since, not only can all s function evaluations required to evaluate the formula be computed concurrently, but also the system of linear equations associated with the Newton iteration for the solution of the internal stage values can be <p> We review results of Ntrsett and Wanner [43], Bales, Karakashian and Serbin [1] and Keeling <ref> [36] </ref> that allow one to develop A 0 -stable implicit RK collocation formulas with diagonalizable coefficient matrices that can be implemented effectively as outlined above on a wide range of parallel computers. We also review some exciting new results of Orel [45] on high-order L-stable methods with distinct real eigenvalues. <p> In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling <ref> [36] </ref> discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound. In this section, we establish the definitions and notation used throughout this paper. <p> It is easy to find examples of such formulas. Third, Wanner, Hairer and Ntrsett [52] showed that a s-stage real SIRK formula of order s + 1 can be A-stable for s = 1; 2; 3; 5 only. Keeling <ref> [36] </ref> generalized their result by showing that the same restriction applies to all real IRK formulas. <p> SIRK formulas of order s +1 do exist for s = 1; 2; 3; 5, and that L-stable s-stage SIRK formulas of order s exist for 1 s 6 and s = 8, but for no other s 15. (See [3] for example.) For s = 2 and 3, Keeling <ref> [36] </ref> exhibits a family of s-stage B-stable IRK formulas of order s + 1, each having a coefficient matrix A with distinct real eigenvalues, and he claims that a similar family of formulas exists for s = 5. <p> Keeling <ref> [36] </ref> provided an alternate proof of this theorem that also indicates, for any s 1, how to construct a s-stage strongly A 0 -stable IRKC formula of order s + 1 for which A has distinct real eigenvalues.
Reference: 37. <author> W. </author> <title> Kutta,, Beitrag zur naherungsweisen Integration totaler Differentialgleichungen, </title> <journal> Z. Math. Phys. </journal> <volume> 46 (1901), </volume> <pages> 435-453. </pages>
Reference-contexts: As a specific example of a minor advantage, recall that 6 stages are required to obtain a 5 th -order ERK formula [10, x322]. However, each member of Kutta's <ref> [37] </ref> 3-parameter family of 5 th -order 6-stage ERK formulas has a 65 = 0, whence the last two stages can be computed simultaneously. Therefore, each formula in Kutta's family is a 5-parallel 2-processor ERK scheme.
Reference: 38. <author> I. </author> <title> Lie, "Some aspects of parallel Runge-Kutta methods," Math. and Comp. </title> <type> Rep. 3/87, </type> <institution> Numerical Mathematics Dept., Norwegian Institute of Technology, Trondheim, Norway, </institution> <year> 1987. </year>
Reference-contexts: We conclude with a brief summary of additional results of Lie <ref> [38] </ref> and Iserles and Ntrsett [29] for strictly-block-diagonal RK formulas. We begin x5 with a discussion of the structure of diagonally-implicit RK formulas that permits the exploitation of parallel function evaluations. <p> As examples, we present an A 0 -stable 4-stage 4 th -order formula that requires two pairs of simultaneous function evaluations as well as a similar A-stable formula of Iserles and Ntrsett [29]. We summarize some promising numerical results of Lie <ref> [38] </ref> for a fixed-stepsize implementation of formulas of this type obtained on a Cray XMP/2 using "macrotasking". The formulas of van der Houwen, Sommeijer and Couzy [26] also fall into this class. Finally, we briefly consider the extension of the results in this section to formulas having block-lower-triangular coefficient matrices. <p> We again prove a result about the order of these methods and discuss the associated Newton variant. We give some preliminary numerical results for the four classes of methods discussed above. Our preliminary results have been extended by Enenkel [14], Lie <ref> [38] </ref>, Iserles and Ntrsett [29], and Kalvenes [32]. As noted above, their results are summarized in the appropriate sections of this paper and [31]. Also, some of the results of these papers are summarized in [42]. <p> There exist s-stage Strictly-Block-Diagonal IRK formulas having 1 fi 1 and 2 fi 2 diagonal blocks and real coefficients only that are of maximal obtainable order 2s when applied to any IVP in this restricted class of problems. Others have begun to investigate Strictly-Block-Diagonal IRK formulas as well. Lie <ref> [38] </ref> discusses some preliminary results on the maximal obtainable order of such formulas while Iserles and Ntrsett [29] provide some more concrete results. In particular, they derive a family of 4-stage 4 th -order L-stable (but not algebraically stable) Strictly-Block-Diagonal IRK formulas each having two 2 fi 2 blocks. <p> Thus, the advantage one can gain from exploiting parallelism is limited in this family of formulas as well. Both Lie <ref> [38] </ref> and Iserles and Ntrsett [29] also consider Strictly-Block-Diagonal IRK formulas for which each block A kk is lower triangular. We summarize briefly some of their results for these formulas in the next section. 5. Parallelism in Diagonally-Implicit Runge-Kutta Methods. <p> Both Lie <ref> [38] </ref> and Iserles and Ntrsett [29] consider parallel DIRK formulas having the restricted form shown in Figure 5.3, where each L k is a lower-triangular matrix. These schemes form a subclass of the Strictly-Block-Diagonal RK formulas discussed in the pre vious section. <p> C 1 L 1 0 : : : 0 . . . . . . . . . B T 2 : : : B T Lie <ref> [38] </ref> derived a 3 rd -order 4-stage 2-parallel 2-processor SDIRK formula in this subclass that is A-stable but not algebraically stable. By Corollary 5.2, this is the maximal possible order for a 2-parallel SDIRK formula. <p> He also derived a 4 th -order 4-stage 2-parallel 2-processor DIRK formula of this restricted form having a coefficient matrix with two distinct eigenvalues each of multiplicity two. This formula is not algebraically stable and its linear stability properties are not given. Lie <ref> [38] </ref> implemented a fixed-stepsize code based on his 3 rd -order 4-stage 2-parallel 2-processor SDIRK formula. He reports some preliminary numerical experiments for this 2-processor code using "macrotasking" on a Cray XMP/2 computer and a similar code that uses one processor only on the same machine.
Reference: 39. <author> W. L. Miranker, </author> <title> A survey of parallelism in numerical analysis, </title> <booktitle> SIAM Review 13 (1971), </booktitle> <pages> 524-547. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], <ref> [39] </ref>, [40], [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound.
Reference: 40. <author> W. L. Miranker and W. Liniger, </author> <title> Parallel methods for the numerical integration of ordinary differential equations, </title> <journal> Math. Comp. </journal> <volume> 21 (1967), </volume> <pages> 303-320. </pages>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], <ref> [40] </ref>, [49] [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound.
Reference: 41. <author> S. P. Ntrsett, </author> <title> C-polynomials for rational approximation to the exponential function, </title> <journal> Numer. Math. </journal> <volume> 25 (1975), </volume> <pages> 39-56. </pages>
Reference-contexts: Because of the close connection between rational approximations to e z and RK formulas, the former have been studied extensively. One useful tool for this analysis is the C-polynomial theory of Ntrsett <ref> [41] </ref> and its extension by Ntrsett and Wanner [43]. We formulate our results below in terms of the C-polynomial N (x) of [43] rather than the p (x) of the original paper [41]. <p> One useful tool for this analysis is the C-polynomial theory of Ntrsett <ref> [41] </ref> and its extension by Ntrsett and Wanner [43]. We formulate our results below in terms of the C-polynomial N (x) of [43] rather than the p (x) of the original paper [41]. As noted in [43], N (x) = (1) s p (1 x), so it is simple 24 to translate results from one formulation to the other. However, several important results are more naturally stated in terms of N (x). <p> However, several important results are more naturally stated in terms of N (x). As the following result is a minor extension of Theorems 2.1 and 4.1 of <ref> [41] </ref> written in terms of N (x) rather than p (x), and it is closely related to Theorem 4 of [43], we state it without proof. Theorem 6.3. <p> In addition, they showed that all s roots of N are positive if all s fl i are positive. The following theorem, which augments these results, is a special case of a theorem from a forthcoming paper on extensions to the C-polynomial theory of Ntrsett <ref> [41] </ref>. Its proof, which will be given there, uses an adaptation of the bi-orthogonality theory of Iserles and Ntrsett [27] [28], and is quite different from that employed in [1] or [43]. Theorem 6.5.
Reference: 42. <author> S. P. Ntrsett and H. H. Simonsen, </author> <title> Aspects of parallel Runge-Kutta methods, in "Numerical Meth--ods for Ordinary Differential Equations," </title> <booktitle> Lecture Notes in Mathematics #1386, Proceedings of the l'Aquila Symposium, </booktitle> <year> 1987, </year> <editor> A. Bellen, C. W. Gear and E. Russo eds., </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989, </year> <pages> pp. 103-107. </pages>
Reference-contexts: Our preliminary results have been extended by Enenkel [14], Lie [38], Iserles and Ntrsett [29], and Kalvenes [32]. As noted above, their results are summarized in the appropriate sections of this paper and [31]. Also, some of the results of these papers are summarized in <ref> [42] </ref>. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method.
Reference: 43. <author> S. P. Ntrsett and G. Wanner, </author> <title> The real-pole sandwich for rational approximations and oscillation equations, </title> <booktitle> BIT 19 (1979), </booktitle> <pages> 79-94. </pages>
Reference-contexts: We review results of Ntrsett and Wanner <ref> [43] </ref>, Bales, Karakashian and Serbin [1] and Keeling [36] that allow one to develop A 0 -stable implicit RK collocation formulas with diagonalizable coefficient matrices that can be implemented effectively as outlined above on a wide range of parallel computers. <p> To ensure real coefficients only, we require that Q (z) has real roots only, and it is well-known [44, Theorem 2.1] that R (z) can be an approximation to e z of order at most s + 1 in this case. Moreover, Proposition 6 of <ref> [43] </ref> and the discussion following it indicate how to construct rational approximations R (z) = P (z)=Q (z) to e z of order s + 1 for which P and Q satisfy the assumptions of Lemma 4.1 and Q has real roots only. <p> Because of the close connection between rational approximations to e z and RK formulas, the former have been studied extensively. One useful tool for this analysis is the C-polynomial theory of Ntrsett [41] and its extension by Ntrsett and Wanner <ref> [43] </ref>. We formulate our results below in terms of the C-polynomial N (x) of [43] rather than the p (x) of the original paper [41]. As noted in [43], N (x) = (1) s p (1 x), so it is simple 24 to translate results from one formulation to the other. <p> One useful tool for this analysis is the C-polynomial theory of Ntrsett [41] and its extension by Ntrsett and Wanner <ref> [43] </ref>. We formulate our results below in terms of the C-polynomial N (x) of [43] rather than the p (x) of the original paper [41]. As noted in [43], N (x) = (1) s p (1 x), so it is simple 24 to translate results from one formulation to the other. However, several important results are more naturally stated in terms of N (x). <p> One useful tool for this analysis is the C-polynomial theory of Ntrsett [41] and its extension by Ntrsett and Wanner <ref> [43] </ref>. We formulate our results below in terms of the C-polynomial N (x) of [43] rather than the p (x) of the original paper [41]. As noted in [43], N (x) = (1) s p (1 x), so it is simple 24 to translate results from one formulation to the other. However, several important results are more naturally stated in terms of N (x). <p> However, several important results are more naturally stated in terms of N (x). As the following result is a minor extension of Theorems 2.1 and 4.1 of [41] written in terms of N (x) rather than p (x), and it is closely related to Theorem 4 of <ref> [43] </ref>, we state it without proof. Theorem 6.3. <p> 1 N (x) e z (1x) dx =Q (z) 1 X N (si) (1)z i =Q (z) where, for i 0, N (i) (x) = d i N (x)=dx i and, for i &lt; 0, N (i) (x) is defined recursively by N (i) (x) = 0 Ntrsett and Wanner <ref> [43] </ref> showed that N (x) provides a connection between rational approximations to e z and IRKC formulas. We restate the essence of their result without proof. Theorem 6.4. Let c 1 ; : : : ; c s be s distinct real numbers. <p> Therefore, deg (Q) must be either s or s 1 to satisfy the requirement that at most one fl i = 0. The result stated at the beginning of the last paragraph was developed in stages. Ntrsett and Wanner <ref> [43] </ref> noted that all s roots of N are real if all s fl i 's are real. They did not, though, establish the distinctness of the roots. Bales, Karakashian and Serbin [1] extended the result of [43] by showing that all s roots of N are distinct if all s <p> Ntrsett and Wanner <ref> [43] </ref> noted that all s roots of N are real if all s fl i 's are real. They did not, though, establish the distinctness of the roots. Bales, Karakashian and Serbin [1] extended the result of [43] by showing that all s roots of N are distinct if all s fl i are real and nonzero. In addition, they showed that all s roots of N are positive if all s fl i are positive. <p> Its proof, which will be given there, uses an adaptation of the bi-orthogonality theory of Iserles and Ntrsett [27] [28], and is quite different from that employed in [1] or <ref> [43] </ref>. Theorem 6.5. <p> The same paper shows in addition, for any even s 2, how to construct a s-stage I-stable IRKC formula of order s for which A has distinct real eigenvalues. Another set of positive results is due to Orel [45], who generalized the real-pole sandwich theory of Ntrsett and Wanner <ref> [43] </ref> by relaxing the restriction that deg (P ) = s. As a result, he was able to find many more L-acceptable rational approximations of the form (6.7) with deg (P ) = s P &lt; s having real poles only and order s P + 1.
Reference: 44. <author> S. P. Ntrsett and A. Wolfbrandt, </author> <title> Attainable order of rational approximations to the exponential function with only real poles, </title> <booktitle> BIT 17 (1977), </booktitle> <pages> 200-208. </pages>
Reference-contexts: To ensure real coefficients only, we require that Q (z) has real roots only, and it is well-known <ref> [44, Theorem 2.1] </ref> that R (z) can be an approximation to e z of order at most s + 1 in this case. <p> For example, the 4-stage 2-parallel 2-processor DIRK formula shown in Figure 5.2 is 4 th - order and A 0 -stable, but not A-stable. It is well-known <ref> [44] </ref> that there are no standard 4 th -order 2-stage DIRK formulas and Corollary 5.2 above precludes the existence of a 4 th - order 2-parallel SDIRK formula. <p> Also, one of the main advantages to be obtained by allowing A to have complex eigenvalues is that the order of a s-stage formula can be increased beyond s + 1, the maximum possible for a s-stage real RK formula <ref> [44] </ref>. However, the stage order of a s-stage RK formula is at most s, and this is obtained for IRKC formulas only. <p> Moreover, the real IRKC formulas of order s + 1 with minimum principal truncation error terms are SIRK formulas, which follows from the corresponding result in <ref> [44] </ref> for rational approximations and the discussion surrounding (6.8) above.
Reference: 45. <author> B. </author> <title> Orel, "Real pole approximations to the exponential function," </title> <type> Tech. Rep. 1/90, </type> <institution> Mathematical Sciences Div., Norwegian Institute of Technology, Trondheim, Norway, </institution> <year> 1989. </year>
Reference-contexts: We also review some exciting new results of Orel <ref> [45] </ref> on high-order L-stable methods with distinct real eigenvalues. Finally, we summarize some promising numerical results of Karakashian and Rust [34] for a fixed-stepsize implementation of a 2-stage 3 rd -order A 0 -stable fully-implicit diagonalizable PaRK formula. <p> The same paper shows in addition, for any even s 2, how to construct a s-stage I-stable IRKC formula of order s for which A has distinct real eigenvalues. Another set of positive results is due to Orel <ref> [45] </ref>, who generalized the real-pole sandwich theory of Ntrsett and Wanner [43] by relaxing the restriction that deg (P ) = s.
Reference: 46. <author> B. Owren, </author> <title> "Continuous explicit Runge-Kutta methods with applications to ordinary and delay differential equations," </title> <institution> Doktor Ingenitravhandling 1989:58, Mathematical Sciences Div., Norwegian Institute of Technology, Trondheim, Norway, </institution> <year> 1989. </year>
Reference-contexts: In fact, there may be more than a minor advantage to be gained for high-order ERK formulas with interpolants, since the number of function evaluations required for continuous ERK schemes seems to grow even more rapidly with the order than it does for discrete ERK formulas. Owren and Zennaro <ref> [46] </ref> [47] [48] showed that 4, 6 and 8 stages are required for continuous ERK formulas of orders 3, 4, and 5, respectively. The least number of stages for continuous ERK formulas of orders 6, 7 and 8 that we know of are 11, 16 and 22, respectively.
Reference: 47. <author> B. Owren and M. Zennaro, </author> <title> Continuous explicit Runge-Kutta methods, </title> <booktitle> in "to appear in Proceedings of the London 1989 Conference on Computational ODEs,," </booktitle> <year> 1989. </year> <title> 48. , "Order barriers for continuous explicit Runge-Kutta methods,," </title> <type> Tech. Rep. 2/89,, </type> <institution> Mathematical Sciences Div., Norwegian Institute of Technology, Trondheim, Norway, </institution> <year> 1989. </year> <note> submitted to Math. Comp. </note>
Reference-contexts: Owren and Zennaro [46] <ref> [47] </ref> [48] showed that 4, 6 and 8 stages are required for continuous ERK formulas of orders 3, 4, and 5, respectively. The least number of stages for continuous ERK formulas of orders 6, 7 and 8 that we know of are 11, 16 and 22, respectively.
Reference: 49. <author> R. D. Skeel and H.-W. Tam, </author> <title> Potential for parallelism in explicit linear methods, </title> <type> manuscript, </type> <institution> Computer Science Dept., Univ. of Illinois at Urbana-Champaign, Urbana, IL. </institution>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], <ref> [49] </ref> [50], [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound.
Reference: 50. <author> H.-W. Tam, </author> <title> "Parallel methods for the numerical solution of ordinary differential equations," </title> <type> Ph.D. Thesis, Tech. Rep. </type> <institution> UIUCDCS-R-86-1246, Computer Science Dept., Univ. of Illinois at Urbana-- Champaign, Urbana, IL, </institution> <year> 1989. </year>
Reference-contexts: Also, some of the results of these papers are summarized in [42]. Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], [49] <ref> [50] </ref>, [53], most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound.
Reference: 51. <author> J. M. Varah, </author> <title> On the efficient implementation of implicit Runge-Kutta methods, </title> <journal> Math. Comp. </journal> <volume> 33 (1979), </volume> <pages> 557-561. </pages>
Reference-contexts: Therefore, in the remainder of this section, we concentrate on the potential for parallelism in the solution of (6.3) and the consequences for the choice of FIRK formulas for parallel IVP solvers. Butcher [8] proposed an effective scheme for solving (6.3); variants of it are discussed in [11] <ref> [51] </ref>.
Reference: 52. <author> G. Wanner, E. Hairer and S. P. Ntrsett,, </author> <title> Order stars and stability theorems,, </title> <booktitle> BIT 18 (1978), </booktitle> <pages> 475-489. </pages>
Reference-contexts: Hence, R (z) = P (z)=Q (z) for P (z) a polynomial of degree at most r = P k Q k fl i z) r i . It follows immediately from <ref> [52, Theorem 8] </ref> that R (z) is a rational approximation to e z of order ^- r + d + ffi, whence the order of the RK formula is - ^- r + d + ffi. 3. Parallelism in "Classical" Explicit Runge-Kutta Methods. <p> In addition, Theorem 8 of <ref> [52] </ref> ensures that the roots of Q are distinct and nonzero. Hence, Q (z) can be written as Q (z) = Q s for fl 1 ; : : : ; fl s distinct and nonzero. <p> Since the denominator Q (z) of the s th diagonal Pade approximation to e z has complex roots for s &gt; 1 <ref> [52, Theorem 8] </ref>, the associated Strictly-Diagonal IRK formula has complex coefficients. <p> It is easy to find examples of such formulas. Third, Wanner, Hairer and Ntrsett <ref> [52] </ref> showed that a s-stage real SIRK formula of order s + 1 can be A-stable for s = 1; 2; 3; 5 only. Keeling [36] generalized their result by showing that the same restriction applies to all real IRK formulas.
Reference: 53. <author> P. B. Worland, </author> <title> Parallel methods for the numerical solution of ordinary differential equations, </title> <journal> IEEE Trans. Comp. </journal> <volume> C-25 (1976), </volume> <pages> 1045-1048. 31 </pages>
Reference-contexts: Several other researchers have investigated the potential for concurrent function evaluations within each step of an otherwise standard forward-step method. In addition to the papers already cited, see [2], [6], [12], [17], [24], [35], [39], [40], [49] [50], <ref> [53] </ref>, most of which consider predictor-corrector implementations of block methods similar to those discussed in [31] for RK methods. Finally, Karakashian [33], Karakashian and Rust [34] and Keeling [36] discuss implicit RK collocation formulas of the type presented in x6. 2. Notation and an Order Bound.
References-found: 39

