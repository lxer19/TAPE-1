URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/ClassicKeys.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: borgida@cs.rutgers.edu gweddell@uwaterloo.ca  
Title: Adding Uniqueness Constraints to Description Logics (Preliminary Report) 1  
Author: Alex Borgida Grant Weddell 
Address: New Brunswick, NJ08903, USA Waterloo, Ontario, CANADA  
Affiliation: Dept. of Computer Science Dept. of Computer Science Rutgers University University of Waterloo  
Abstract: After explaining some of the benefits of capturing uniqueness constraints , such as keys and functional dependencies, in any object-centered data model, we consider a number of alternative semantics for concept constructors that could be introduced for this purpose in Description Logics. Most significantly, we show that Classicthe hitherto most expressive DL for which reasoning is tractable, can be extended with a version of constructors capturing functional dependencies (including keys) while still possessing subsumption and consistency checking algorithms that are sound, complete, and run in low-order polynomial time. The results continue to hold even when we introduce cycles in the part-of hierarchy. 
Abstract-found: 1
Intro-found: 1
Reference: [BGN89] <author> H.W. Beck, S.K. Gala, and S.B. Navathe. </author> <title> Classification as a query processing technique in the CANDIDE semantic data model. </title> <booktitle> In Proc. 5 th IEEE Int. Data Eng. Conf. </booktitle> , <pages> pp. 572581, </pages> <year> 1989. </year>
Reference-contexts: detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence <ref> [BGN89, Buc94a, Bra93] </ref>. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or just finding the relevant information sources to pass the query to [LSK95]. <p> a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries <ref> [BGN89, Buc94a] </ref>, or just finding the relevant information sources to pass the query to [LSK95]. However, with very few exceptions (notably [GL95]), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints.
Reference: [Bee90] <author> C. Beeri. </author> <title> A formal approach to objectoriented databases. </title> <booktitle> Data and Knowledge Engineering , 5(4), </booktitle> <pages> pp. 335382, </pages> <year> 1990. </year>
Reference-contexts: More recently, objectoriented databases use type constraints on attributes and inheritance to capture data semantics declaratively (in addition to the procedural methods); but, except for single-valued vs. set-valued attributes, uniqueness constraints seem to have disappeared from the radar screen, and most formal models of OODB (e.g., <ref> [Bee90] </ref>) do not mention even keys, although these are of significant practical benefit in implementations. (In particular, the ODBC-93 standard, to which systems like O 2 conform, includes keys in its revision to the CORBA IDL.) This is due in part to the fact that many functional dependencies were present in
Reference: [BN94] <author> S. Bergamaschi and B. Nebel. </author> <title> Acquisition and validation of complex object database schemata supporting multiple inheritance. </title> <booktitle> Applied Intelligence , Vol 4(2), </booktitle> <pages> pp. 185 204, </pages> <year> 1994. </year>
Reference-contexts: Among others, DLs have been used to: (1) Design information systems , by acting as a more expressive semantic data model (able to capture ER and O2 data models <ref> [BS92, BN94] </ref>), which is self-organizing and able to detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries
Reference: [BPS94] <author> A. Borgida and P.F. Patel-Schneider. </author> <title> A semantics and complete algorithm for subsumption in the CLASSIC description logic. </title> <journal> J. of AI Research , pp. </journal> <volume> 277308, </volume> <year> 1994. </year>
Reference-contexts: T is said to logically imply a subsumption constraint D &lt; E iff, for any possible world I over T , D I E I . 4. Description Graphs and the Subsumption Algorithm We now discuss how subsumption is computed in Classic0/FD. Following <ref> [BPS94] </ref>, we first introduce description graphs, which will have a normal form that facilitates 10 EMP &lt; ( and ( all Name STRING ) % Name is string-valued. ( all Boss EMP ) % Boss is an EMP too % (note recursion) ( fd EMP -Name- Id )) % Name is <p> This is achieved by introducing a pair of node labels for each node to enable differential processing of descriptions within the node. (Note: the technical details here will be easier to follow after reading <ref> [BPS94] </ref>.) Definition 1 A description graph G is a triple, N , E , r , consisting of a set N of nodes; a bag E of edges labeled with attribute names; and a distinguished node r in N. <p> ) | ( fills R ind) ( role value filler ) | ( fills A ind ) ( attribute value filler ) | ( oneof ind 1 n ) ( enumerated type ) albeit with a special semantics for individuals so that their properties do not influence the subsumption relationship <ref> [BPS94] </ref>. Moreover, Classic also distinguishes regular objects from values like integers, lists, etc. which are supported by built-in classes as well as constructors for number ranges. The presentation in [BPS94] creates subgraphs for sub-descriptions that appear as restrictions on set-valued attributes, and hides these in the structure of each node. <p> ( enumerated type ) albeit with a special semantics for individuals so that their properties do not influence the subsumption relationship <ref> [BPS94] </ref>. Moreover, Classic also distinguishes regular objects from values like integers, lists, etc. which are supported by built-in classes as well as constructors for number ranges. The presentation in [BPS94] creates subgraphs for sub-descriptions that appear as restrictions on set-valued attributes, and hides these in the structure of each node. One then obtains essentially a tree of description graphs of the kind studied in Section 4, connected by special edges for roles. <p> Moreover, the process of expansion Exp needs to recognize all such incoherences, and propagate them to all nodes connected to this one by functional attributes. In short, the processing described in <ref> [BPS94] </ref> continues to apply here, and will not be repeated 6. Discussion and Summary We have argued that object-centered representations of information in databases, whether they are semantic data models or OODB schemata, can benefit from capturing uniqueness constraints such as keys and functional dependencies.
Reference: [BS92] <author> S. Bergamaschi and C. Sartori. </author> <title> On taxonomic reasoning in conceptual design. </title> <journal> ACM TODS 17(3), pp. </journal> <volume> 385 442, </volume> <year> 1992. </year>
Reference-contexts: Among others, DLs have been used to: (1) Design information systems , by acting as a more expressive semantic data model (able to capture ER and O2 data models <ref> [BS92, BN94] </ref>), which is self-organizing and able to detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries
Reference: [BW94] <author> M.F. van Bommel and G.E. Weddell. </author> <title> Reasoning about equations and functional dependencies on complex objects. </title> <journal> IEEE TKDE , 6(3), </journal> <pages> pp. 455469, </pages> <year> 1994. </year> <month> 18 </month>
Reference-contexts: However, there are still important uniqueness constraints that capture data semantics, including common sense facts such as no student may be enrolled in two different courses meeting at the same time of the week <ref> [BW94] </ref>. 1 This work was supported by NSF contract IRI-9619979 and by grants from NSERC, Government of Ontario ITRC and Nortel Ltd. 2 A semantic conceptual schema is known to be useful for designing implementations and for building appropriate integrity checking into the database and its applications. <p> Among the formal models developed specifically for OODB, only <ref> [BW94, IW95] </ref> have considered the issue of reasoning with FDs. They have demonstrated, among others, the benefits of such information in query optimization by showing how the expensive task of duplicate elimination can be avoided when one can deduce that there are no duplicates. <p> However, with very few exceptions (notably [GL95]), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints. The primary goal of this paper is to rectify this problem, by integrating aspects of the research of <ref> [BW94] </ref> into DLs.
Reference: [Bal95] <author> J.P. Ballerini, D. Beneventano, S. Bergamaschi, C. Sartori, and M. Vincini. </author> <title> A semantics-driven query optimizer for OODBs. </title> <booktitle> In Proc. </booktitle> <pages> DL95 , pp. 5962, </pages> <address> Roma, Italy, </address> <year> 1995. </year>
Reference-contexts: using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization <ref> [Bal95] </ref>, finding and reusing the results of previous queries [BGN89, Buc94a], or just finding the relevant information sources to pass the query to [LSK95]. However, with very few exceptions (notably [GL95]), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints.
Reference: [Bor95] <author> A.Borgida. </author> <title> Description logics in data management, </title> <journal> IEEE TKDE , 7(5), </journal> <volume> pp.671682, </volume> <year> 1995. </year>
Reference-contexts: 1. Introduction and Motivation It is well known that a variety of problems in information management, including database design, heterogeneous data integration, and query optimization benefit from knowledge concerning the semantics of the domain of discourse about which data is stored <ref> [Bor95] </ref>. In relational databases, such semantics were captured by keys and dependencies of various kindswhat we shall term here uniqueness constraints . <p> In fact some DLs, such 3 as Classic [Bor89], have low-order polynomial time algorithms, and have been used in industrial applications [Wri92]. DLs have already been applied to the problems of data management, as indicated in the survey paper <ref> [Bor95] </ref>, which considered the state of the art circa 1993, and by a series of recent workshops organized in Europe [e.g., KRDB96].
Reference: [Bra93] <author> R. Brachman, P. Selfridge, L. Terveen, B. Altman, A. Borgida, F. Halper, T. Kirk, A. Lazar, D. McGuinness and L. Resnick. </author> <title> Knowledge representation support for data archaeology, </title> <journal> Int. J. of Intelligent and Cooperative Inf. Sys. </journal> , <volume> 2(2), </volume> <pages> pp. 159186, </pages> <year> 1993. </year>
Reference-contexts: detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence <ref> [BGN89, Buc94a, Bra93] </ref>. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or just finding the relevant information sources to pass the query to [LSK95].
Reference: [Buc94a] <author> M. Buchheit, M. Jeusfeld, W. Nutt, and M. Staudt. </author> <title> Subsumption between queries in objectoriented databases. </title> <journal> Inf. Sys. </journal> , <volume> 19(1), </volume> <pages> pp. 3354, </pages> <year> 1994. </year>
Reference-contexts: detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence <ref> [BGN89, Buc94a, Bra93] </ref>. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or just finding the relevant information sources to pass the query to [LSK95]. <p> a translation [CL93, LSK95]. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries <ref> [BGN89, Buc94a] </ref>, or just finding the relevant information sources to pass the query to [LSK95]. However, with very few exceptions (notably [GL95]), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints.
Reference: [Buc94b] <author> M. Buchheit, F. Donini, W. Nutt and A. Schaerf. </author> <title> Refining the structure of terminological systems: terminology = schema + view. </title> <booktitle> In Proc. </booktitle> <pages> AAAI-94 , pp. </pages> <address> 199204, </address> <year> 1994. </year>
Reference-contexts: all A ( all A D )), rather than ( and ( same as B A 1 2 3 There are two conditions on the left-hand-side of a functional dependency: at least one attribute must be included, and none of the attributes can be the identity attribute Id. 9 Following <ref> [Buc94b] </ref>, a terminology T = S , V consists of a sequence ( C 1 1 C &lt; D ) of schema type restrictions S , and a sequence ( V 1 1 n n ) of view definitions V . <p> This is an extension of the previously known result <ref> [Buc94b] </ref> that Classic can be extended with recursive schema constraints involving the all constructor. Moreover, the present extension is established in the normalize-compare paradigm of the Classic implementation.
Reference: [CGL95] <author> D. Calvanese, G. de Giacomo and M. Lenzerini. </author> <title> Structured objects: modeling and reasoning. </title> <booktitle> In Proc. </booktitle> <pages> DOOD'95 , pp. 229246, </pages> <year> 1995. </year>
Reference: [CL93] <author> T.Catarci and M.Lenzerini. </author> <title> Representing and using interschema knowledge in cooperative information systems. </title> <journal> Int. J. of Int. and Coop. Inf. Sys. </journal> , <volume> 2(4), </volume> <pages> pp. 375398, </pages> <year> 1993. </year>
Reference-contexts: , by acting as a more expressive semantic data model (able to capture ER and O2 data models [BS92, BN94]), which is self-organizing and able to detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation <ref> [CL93, LSK95] </ref>. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or
Reference: [DD89] <author> L. Delcambre and K. Davis. </author> <title> Automatic validation of objectoriented database structures. </title> <booktitle> In Proc. IEEE Data Engineering Conf. </booktitle> , <pages> pp. 29, </pages> <year> 1989. </year>
Reference: [GL95] <author> G. de Giacomo and M. Lenzerini. </author> <title> What's in an aggregate: foundations for description logics with tuples and sets. </title> <booktitle> In Proc. </booktitle> <pages> IJCAI-95 , pp. 801807, </pages> <year> 1995. </year>
Reference-contexts: However, with very few exceptions (notably <ref> [GL95] </ref>), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints. The primary goal of this paper is to rectify this problem, by integrating aspects of the research of [BW94] into DLs. <p> Lenzerini and colleagues <ref> [GL95] </ref> have proposed an alternate approach to keys, one that involves the class for which the attributes are supposed to be unique identifiers. <p> For example, the following obviously desirable property of keys (*) If attributes -A 1 , , A m - form a key for C, then -A, A 1 will also be a key. is not a theorem of the definition in <ref> [GL95] </ref> because the denotation of ( key L C -A 1 A m -) is not related to that of ( key L C -B 1 1 , , A m - is not identical to -B , , B n -.
Reference: [IW95] <author> M. Ito and G. E. Weddell. </author> <title> Implication problems for functional constraints on databases supporting complex objects. </title> <journal> JCSS , 50(1), </journal> <pages> pp. 165187, </pages> <year> 1995. </year>
Reference-contexts: Among the formal models developed specifically for OODB, only <ref> [BW94, IW95] </ref> have considered the issue of reasoning with FDs. They have demonstrated, among others, the benefits of such information in query optimization by showing how the expensive task of duplicate elimination can be avoided when one can deduce that there are no duplicates.
Reference: [KRDB96] <editor> Knowledge representation meets databases. </editor> <booktitle> Proc. </booktitle> <address> KRDB96 , Budapest, Hungary, </address> <month> August, </month> <year> 1996. </year> <editor> F. Baader, M. Buchheit, M. A. Jeusfeld and W. Nutt (editors), </editor> <year> 1996. </year>
Reference-contexts: DLs have already been applied to the problems of data management, as indicated in the survey paper [Bor95], which considered the state of the art circa 1993, and by a series of recent workshops organized in Europe <ref> [e.g., KRDB96] </ref>.
Reference: [LSK95] <author> A. Y. Levy, D. Srivastava and T. Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> J. of Intelligent Inf. Sys. </journal> , <volume> 5(2), </volume> <pages> pp. 121143, </pages> <year> 1995. </year>
Reference-contexts: , by acting as a more expressive semantic data model (able to capture ER and O2 data models [BS92, BN94]), which is self-organizing and able to detect inconsistencies. (2) Merge multiple information sources , by describing their semantic content using DLs and thence deriving a common schema or a translation <ref> [CL93, LSK95] </ref>. (3) Express queries so that the DML and the DDL are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or <p> are closely related, or to allow queries to be organized and checked for coherence [BGN89, Buc94a, Bra93]. (4) Query evaluation and optimization , through semantic query optimization [Bal95], finding and reusing the results of previous queries [BGN89, Buc94a], or just finding the relevant information sources to pass the query to <ref> [LSK95] </ref>. However, with very few exceptions (notably [GL95]), work until now has relied entirely on previously available DLs, and has avoided the representation of uniqueness constraints. The primary goal of this paper is to rectify this problem, by integrating aspects of the research of [BW94] into DLs.
Reference: [McGB95] <author> D. McGuinness and A. Borgida. </author> <title> Explaining subsumption in description logics. </title> <booktitle> In Proc. </booktitle> <pages> IJCAI-95 , pp. 816821, </pages> <year> 1995. </year>
Reference-contexts: In addition to improvements in the practical, as well as theoretical complexity of our algorithms, our current work explores further extensions of the language of fd s which preserve tractability, as well as the precise axiomatization of the new language (which is useful for explaining reasoning in Classic <ref> [McGB95] </ref>). Acknowledgements Many thanks to Daniele Nardi and to the anonymous reviewers for their helpful comments on an earlier version of this paper.
Reference: [Neb88] <author> B. Nebel. </author> <title> Computational complexity of terminological reasoning in BACK. </title> <booktitle> Artificial Intelligence , 34(3), </booktitle> <pages> pp. 371383, </pages> <year> 1988. </year>
Reference-contexts: Its termination, and a very loose upper bound on its complexity, are guaranteed by the following lemma: Lemma 1 (i) The view definitions V of a schema can be expanded in D and S with a onetime pass (with a potential exponential explosion in the size of the descriptions produced <ref> [Neb88] </ref>), with the same effect as step 11. (ii) Before the application of step 12 (i.e., ignoring the schema S ), Exp ( Init ( D )) has at most 2n nodes and 3n edges, where n is the number of constructors in D . (iii) Once the schema is also
Reference: [Wri92] <author> J. Wright, E. Weixelbaum, K. Brown, G. Vesonder, S. Palmer, J. Berman, and H. Moore. </author> <title> A knowledge-based configurator that supports sales, engineering and manufacturing at AT&T Network Systems. </title> <booktitle> In Proc. Conf. on Industrial Applications of AI(IAAI93) , pp.183 193, </booktitle> <year> 1992. </year>
Reference-contexts: In fact some DLs, such 3 as Classic [Bor89], have low-order polynomial time algorithms, and have been used in industrial applications <ref> [Wri92] </ref>. DLs have already been applied to the problems of data management, as indicated in the survey paper [Bor95], which considered the state of the art circa 1993, and by a series of recent workshops organized in Europe [e.g., KRDB96].
References-found: 21

