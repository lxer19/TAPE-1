URL: http://taikan.c.u-tokyo.ac.jp/~kojima/research/paper/ijgame.ps.gz
Refering-URL: http://www.ai.univie.ac.at/~juffi/lig/lig-bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: kojima@taikan.c.u-tokyo.ac.jp  
Title: Flexible Acquisition of Various Types of Knowledge from Game Records: Application to the game of Go  
Author: Takuya Kojima Kazuhiro Ueda Saburo Nagano 
Address: 3-8-1 Komaba, Meguro-ku, Tokyo, 153, JAPAN  
Affiliation: College of Arts and Sciences The University of Tokyo  
Abstract: A large amount of knowledge is considered very useful for systems playing games such as Go and Shogi (Japanese chess), for which the search space larger than that for chess. Knowledge acquisition is therefore necessary for systems playing these games. This paper introduces a new flexible algorithm which acquires various types of knowledge from game records. This algorithm is especially applicable to Go because Go has the largest search space among major games. The algorithm enables computer systems to acquire patterns with a variety of shapes and sizes. Sequences of moves, which are useful for human players but lacking in the present game-playing systems, are also acquired by this algorithm. The possibility of acquiring other types of knowledge | such as maxims, patterns with situations, and patterns for tsume-go | is discussed. The possibility of applying the algorithm to games other than Go is also discussed.
Abstract-found: 1
Intro-found: 1
Reference: [ Erbach, 1992 ] <author> David W. Erbach. </author> <title> Computers and Go. </title> <editor> In R. Bozulich, editor, </editor> <booktitle> The Go Player's Almanac, chapter 11, </booktitle> <pages> pages 205-217. </pages> <publisher> Ishi Press, </publisher> <year> 1992. </year>
Reference-contexts: algorithm. &gt; 4.5 Maxims Maxims are considered as very useful knowledge representation both for computers and for human players to play Go. [ Shirayanagi, 1990 ] is the most famous system using maxims to play Go, considered "the most promising but at the same time the most difficult to implement" <ref> [ Erbach, 1992 ] </ref> . This is considered "the most difficult to implement" because maxims themselves must be hand-coded by the programmers using Go terms defined by Shirayanagi. Our algorithm may acquire Go maxims using Go terms, which has already defined by Shirayanagi. The reason is as follows.
Reference: [ Fotland, 1993 ] <author> David Fotland. </author> <title> Knowledge representation in the Many Faces of Go. </title> <note> Manuscript available by Internet anonymous ftp from basderver.ucsf.edu:Go/comp/mfg.Z, </note> <year> 1993. </year>
Reference-contexts: The other is that it can be of large amount: a chess master is estimated to have between 10,000 and 100,000 chunks of knowledge [ Simon and Gilmartin, 1973 ] . Most computer systems which play games nowadays have much less knowledge than human experts. "Many Faces of Go" <ref> [ Fotland, 1993 ] </ref> , for example, which has more knowledge than most Go systems, has about a thousand patterns, which the programmer manages to input. Human experts, however, are said to have much more knowledge.
Reference: [ Kojima et al., 1994 ] <author> Takuya Kojima, Kazuhiro Ueda, and Saburo Nagano. </author> <title> A case study on acquisition and refinement of deductive rules based on EBG in an adversary game: how to capture stones in Go. </title> <booktitle> In Game Programming Workshop in Japan '94, </booktitle> <pages> pages 34-43, </pages> <year> 1994. </year>
Reference-contexts: In Go, a search space is so huge and moves are so sensitive to situations that most of the knowledge used by human players is heuristic knowledge. Most previous studies focused on patterns. Our previous research <ref> [ Kojima et al., 1994; Kojima, 1995 ] </ref> focused on strict patterns and introduced an algorithm that deductively acquires patterns used in capturing stones. The algorithm is given examples of human players in capturing stones and explains why they can capture stones.
Reference: [ Kojima et al., 1996 ] <author> Takuya Kojima, Kazuhiro Ueda, and Saburo Nagano. </author> <title> A case study on acquisition of pattern knowledge in Go using ecological analogy. </title> <booktitle> In Game Programming Workshop in Japan '96, </booktitle> <pages> pages 133-140, </pages> <year> 1996. </year> <title> in Japanese. </title>
Reference-contexts: Patterns and sequences of moves are acquired, and the possibility of acquiring patterns with situations, maxims, and patterns of tsume-go is discussed in this section. 4.1 Patterns Acquired by the Previous System In the previous version of the system <ref> [ Kojima et al., 1996 ] </ref> , the opponent move just before the action move has the coordinate [0,0], thus the two sequences of moves are always acquired. Rules are acquired using 9x9-board-game records.
Reference: [ Kojima et al., 1997 ] <author> Takuya Kojima, Kazuhiro Ueda, and Saburo Nagano. </author> <title> An evolutionary algorithm extended by ecological analogy and its application to the game of Go. </title> <booktitle> Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference-contexts: Although this algorithm can be applied to various games, this paper explains only the modified procedure for acquiring patterns and sequences of moves of Go. For the detailed and more general explanation of the algorithm, see <ref> [ Kojima et al., 1997 ] </ref> . 3.1 Overview of the Algorithm Since this algorithm is inspired by ecological systems, it is explained here using ecological terms. Each rule is considered as an individual and has an activation value. There are no rules in the initial state.
Reference: [ Kojima, 1995 ] <author> Takuya Kojima. </author> <title> A model of acquisition and refinement of deductive rules in the game of Go. </title> <type> Master's thesis, </type> <institution> The University of Tokyo, </institution> <year> 1995. </year>
Reference-contexts: In Go, a search space is so huge and moves are so sensitive to situations that most of the knowledge used by human players is heuristic knowledge. Most previous studies focused on patterns. Our previous research <ref> [ Kojima et al., 1994; Kojima, 1995 ] </ref> focused on strict patterns and introduced an algorithm that deductively acquires patterns used in capturing stones. The algorithm is given examples of human players in capturing stones and explains why they can capture stones.
Reference: [ Saito and Yoshikawa, 1996 ] <author> Yasuki Saito and Atsushi Yoshikawa. </author> <title> An analysis of strong go-players' protocols. </title> <booktitle> In Game Programming Workshop in Japan '96, </booktitle> <pages> pages 66-75, </pages> <year> 1996. </year>
Reference-contexts: Moreover, recent cognitive studies on Go players <ref> [ Saito and Yoshikawa, 1996 ] </ref> have revealed that human experts use Go knowledge such as "patterns" and also search a game tree a little. This shows the importance of Go knowledge to human players. Studying the acquisition of Go knowledge may therefore help Go playing systems play better.
Reference: [ Saito, 1996 ] <author> Yasuki Saito. </author> <title> Cognitive Scientific Study of Go. </title> <type> PhD thesis, </type> <institution> The University of Tokyo, </institution> <year> 1996. </year> <title> in Japanese. </title>
Reference-contexts: shape, and context of knowledge acquired by this algorithm. 3 If [10,1]=SAME [10,13]=SAME [-2,1]=DIFF [-2,13]=DIFF [0,-3]=EDGE [-6,0]=EDGE 4 If [1,0]=SAME [0,1]=SAME [2,1]=SAME [1,1]=DIFF [0,2]=DIFF [1,2]=DIFF 4.4 Sequences of Moves Sequences of moves, which suggest several moves, are very useful for human players but are lacking in the present computer systems <ref> [ Saito, 1996 ] </ref> . They may thus be very useful for helping computers to play better.
Reference: [ Sei and Kawashima, 1994 ] <author> Shinichi Sei and Toshiaki Kawashima. </author> <title> The experiment of creating move from "local pattern" knowledge in Go program. </title> <booktitle> In Game Programming Workshop in Japan '94, </booktitle> <pages> pages 97-104, </pages> <year> 1994. </year> <title> in Japanese. </title>
Reference-contexts: As a result, it acquires patterns in capturing stones. Although it acquires reliable patterns, it can only acquire strict rules, not heuristic ones. Some studies focus on heuristic rules. One system <ref> [ Sei and Kawashima, 1994 ] </ref> , for example, collects from master's game records patterns, which are fixed to form the shape of diamond, and whose area is within five Man-hattan distances of the center.
Reference: [ Shirayanagi, 1990 ] <author> K. Shirayanagi. </author> <title> Knowledge representation and its refinement in Go programs. </title> <editor> In T. Anthony Marsland and Jonathan Schaeffer, editors, </editor> <title> Computers, Chess, </title> <journal> and Cognition, </journal> <volume> chapter 18, </volume> <pages> pages 287-300. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: They are acquired by adding previous moves in splitting a rule as mentioned above. by this algorithm. &gt; 4.5 Maxims Maxims are considered as very useful knowledge representation both for computers and for human players to play Go. <ref> [ Shirayanagi, 1990 ] </ref> is the most famous system using maxims to play Go, considered "the most promising but at the same time the most difficult to implement" [ Erbach, 1992 ] .
Reference: [ Simon and Gilmartin, 1973 ] <author> Herbert A. Simon and Kevin Gilmartin. </author> <title> A simulation of memory for chess positions. </title> <journal> Cognitive Psychology, </journal> <volume> 5 </volume> <pages> 29-46, </pages> <year> 1973. </year>
Reference-contexts: The other is that it can be of large amount: a chess master is estimated to have between 10,000 and 100,000 chunks of knowledge <ref> [ Simon and Gilmartin, 1973 ] </ref> .
Reference: [ Yoshikawa and Saito, 1996 ] <author> Atsushi Yoshikawa and Ya-suki Saito. </author> <title> Can not solve Tsume-Go problems without looking ahead? In Game Programming Workshop in Japan '96, </title> <address> pages 76-83, </address> <year> 1996. </year> <title> in Japanese. </title>
Reference-contexts: This may enable computer Go to be much stronger. 4.7 Tsume-go Tsume-go is life and death problems. Cognitive studies of experts solving tsume-go show that they use knowledge or patterns <ref> [ Yoshikawa and Saito, 1996 ] </ref> . Knowledge acquisition from tsume-go problems may therefore be very useful both for human players and for computers.
References-found: 12

