URL: ftp://www.cs.rutgers.edu/pub/technical-reports/dcs-tr-352.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.cs.rutgers.edu
Title: GADO: A GENETIC ALGORITHM FOR CONTINUOUS DESIGN OPTIMIZATION  Written under the direction of  
Author: BY KHALED MOHAMED RASHEED Haym Hirsh 
Degree: A dissertation submitted to the Graduate School|New Brunswick  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  and approved by  
Date: January, 1998  
Note: Graduate Program in Computer Science  
Address: New Jersey  Brunswick, New Jersey  
Affiliation: Rutgers, The State University of  New  
Abstract-found: 0
Intro-found: 1
Reference: [ Andersen et al. 1993 ] <author> K. Andersen, V.B. Iversen, and R.V.V. Vidal. </author> <title> Design of a teleprocessing communication network using simulated annealing. </title> <booktitle> In Applied Simulated Annealing, </booktitle> <pages> pages 201-216. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: GAs on the other hand have a high inertia and take longer to switch attention. Simulated Annealing has been used in several engineering design domains including communication network design <ref> [ Chardaire and Lutton 1993, Andersen et al. 1993 ] </ref> and mechanical design [ Jain and Agogino 1988, Malhotra et al. 1991, Jain et al. 1992, Cagan and Kurfess 1992 ] . There has been a long philosophical argument about which is better: SAs or GAs.
Reference: [ Back et al. 1997 ] <editor> Tomas Back, Ulrich Hammel, and Hans-Paul Schwefel. </editor> <title> Evolutionary computation: Comments on the history and current state. </title> <journal> IEEE Transactions on Evolutionary Computation, </journal> <volume> 1(1) </volume> <pages> 3-17, </pages> <year> 1997. </year>
Reference-contexts: This is a limitation in GAs. 2 The use of GAs is far from being limited to optimization. The reader is referred to <ref> [ Back et al. 1997 ] </ref> for a recent general survey. 16 2.1.3 The selection strategy The selection strategy decides how to select individuals to be parents for newborns. Usually the selection applies some selection pressure by favoring the individuals with better fitness.
Reference: [ Blaize et al. 1998 ] <author> Michael Blaize, Doyle Knight, and Khaled Rasheed. </author> <title> Automated optimal design of two dimensional high speed missile inlets. </title> <booktitle> In to appear in the 36th AIAA Aerospace Sciences Meeting and Exhibit, </booktitle> <year> 1998. </year>
Reference: [ Bouchard et al. 1988 ] <author> E. E. Bouchard, G. H. Kidwell, and J. E. Rogan. </author> <title> The application of artificial intelligence technology to aeronautical system design. </title> <booktitle> In AIAA/AHS/ASEE Aircraft Design Systems and Operations Meeting, </booktitle> <address> Atlanta, Geor-gia, </address> <month> September </month> <year> 1988. </year> <month> AIAA-88-4426. </month>
Reference-contexts: We used his work, among other techniques, for comparison with our new method in Chapter 3. Work on augmenting numerical optimization techniques with AI methods also includes the use of expert systems <ref> [ Bouchard et al. 1988, Orelup et al. 1988 ] </ref> and machine learning [ Hoeltzel and Chieng 1987 ] .
Reference: [ Bramlette et al. 1989 ] <author> M. Bramlette, E. Bouchard, E. Buckman, and L. Takacs. </author> <title> A comparative evaluation of search methods applied to parametric design of aircraft. </title> <booktitle> In Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <address> San Mateo,Calif., July 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Several research efforts used conventional numerical optimization methods for aircraft design [ Vanderplaats 1984, Sobieszczanski-Sobieski et al. 1985, Bramlette et al. 1990, Kroo et al. 1994, Sobieszczanski-Sobieski and Haftka 1996 ] . <ref> [ Bramlette et al. 1989 ] </ref> compared the application of different methods including gradient based numerical optimization to the design and manufacture of aeronautical systems.
Reference: [ Bramlette et al. 1990 ] <author> M. Bramlette, E. Bouchard, E. Buckman, and L. Takacs. </author> <title> Current applications of genetic algorithms to aeronautical systems. </title> <booktitle> In Proceedings of the Sixth Annual Aerospace Applications of Artifical Intelligence Conference, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: The most common method of initialization in GAs is random initialization in which the initial population consists of random vectors uniformly distributed in the search space hypercube. Most GAs generate one random vector to initialize each population member. A few others <ref> [ Bramlette et al. 1990 ] </ref> generate more than one vector (usually 2 or 3), compute their fitnesses, then use the fittest of them to initialize one population member. 1 The user must specify the lower and upper bound of each vector component.
Reference: [ Cagan and Kurfess 1992 ] <author> J. Cagan and T. R. Kurfess. </author> <title> Optimum tolerance allocation over multiple manufacturing alternatives. </title> <booktitle> ASME Advances in Design Automation Conference, </booktitle> <volume> 44(2) </volume> <pages> 165-172, </pages> <year> 1992. </year>
Reference: [ Chapman and Jakiela 1996 ] <author> C. D. Chapman and M. J. Jakiela. </author> <title> Genetic algorithm-based structural topology design with compliance and topology simplification considerations. </title> <journal> Journal of Mechanical Design, </journal> <volume> 118(1), </volume> <year> 1996. </year>
Reference-contexts: applied traditional genetic algorithms to engineering design optimization problems in a variety of domains, including control system design [ Kundu and Kawata 1996 ] , architectural and civil engineering design [ Gero et al. 1997, Rosenman 1997 ] , VLSI design [ Lienig and Thulasiraman 1993 ] , mechanical design <ref> [ Chapman and Jakiela 1996 ] </ref> and aircraft design [ Obayashi et al. 1997 ] . Deb [ Deb and Goyal 1997, Deb 1997 ] developed a GA called GeneAS for engineering design optimization with mixed variables (both discrete and continuous).
Reference: [ Chardaire and Lutton 1993 ] <author> P. Chardaire and J.L. Lutton. </author> <title> Using simulated annealing to solve concentrator location problems in telecommunication networks. </title> <booktitle> In Applied Simulated Annealing, </booktitle> <pages> pages 175-200. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: GAs on the other hand have a high inertia and take longer to switch attention. Simulated Annealing has been used in several engineering design domains including communication network design <ref> [ Chardaire and Lutton 1993, Andersen et al. 1993 ] </ref> and mechanical design [ Jain and Agogino 1988, Malhotra et al. 1991, Jain et al. 1992, Cagan and Kurfess 1992 ] . There has been a long philosophical argument about which is better: SAs or GAs.
Reference: [ Deb and Goyal 1997 ] <author> Kalyanmoy Deb and Mayank Goyal. </author> <title> Optimizing engineering designs using a combined genetic search. </title> <booktitle> In Proceedings of the Seventh International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year> <month> 102 </month>
Reference-contexts: Deb <ref> [ Deb and Goyal 1997, Deb 1997 ] </ref> developed a GA called GeneAS for engineering design optimization with mixed variables (both discrete and continuous). He demonstrated the merit of his GA in the domain of mechanical component design.
Reference: [ Deb and Saxena 1997 ] <author> Kalyanmoy Deb and Vikas Saxena. </author> <title> Car suspension design for comfort using genetic algorithms. </title> <booktitle> In Proceedings of the Seventh International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year>
Reference-contexts: He demonstrated the merit of his GA in the domain of mechanical component design. Deb also used a binary-coded GA to design car suspension for comfort <ref> [ Deb and Saxena 1997 ] </ref> . Deb's research represents a significant effort to adapt the GA to the engineering design optimization problem. Deb did not, however, address the problem of unevaluable points.
Reference: [ Deb 1997 ] <editor> Kalyanmoy Deb. Geneas: </editor> <title> A robust optimal design technique for mechanical component design. </title> <booktitle> In Evolutionary Algorithms in Engineering Applications, </booktitle> <pages> pages 497-514. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: Deb <ref> [ Deb and Goyal 1997, Deb 1997 ] </ref> developed a GA called GeneAS for engineering design optimization with mixed variables (both discrete and continuous). He demonstrated the merit of his GA in the domain of mechanical component design.
Reference: [ Gage et al. 1995 ] <author> P. Gage, I. Kroo, and I. Sobieski. </author> <title> Variable-complexity genetic algorithm for topological design. </title> <journal> AIAA Journal, </journal> <volume> 33(11) </volume> <pages> 2212-2217, </pages> <year> 1995. </year>
Reference-contexts: He also assumed that injecting 10 human knowledge in the form of rules improves performance, ignoring the potentially detrimental effect this has on innovation. Combining GAs and knowledge-based systems was also done in [ Rogers et al. 1996 ] . Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP 3 in two domains. The first domain was aircraft wing design.
Reference: [ Gage 1994 ] <author> P. </author> <title> Gage. New approaches to optimization in aerospace conceptual design. </title> <type> Ph.D. Thesis, </type> <institution> Stanford University, </institution> <year> 1994. </year>
Reference-contexts: He also assumed that injecting 10 human knowledge in the form of rules improves performance, ignoring the potentially detrimental effect this has on innovation. Combining GAs and knowledge-based systems was also done in [ Rogers et al. 1996 ] . Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP 3 in two domains. The first domain was aircraft wing design.
Reference: [ Gelsey et al. 1996a ] <author> A. Gelsey, D. Smith, M. Schwabacher, K. Rasheed, and K. Miyake. </author> <title> A search space toolkit: SST. </title> <booktitle> Decision Support Systems, </booktitle> <volume> 18 </volume> <pages> 341-356, </pages> <year> 1996. </year>
Reference: [ Gelsey et al. 1996b ] <author> Andrew Gelsey, M. Schwabacher, and Don Smith. </author> <title> Using modeling knowledge to guide design space search. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96, </booktitle> <year> 1996. </year>
Reference-contexts: We summarize it briefly here; it is described in more detail elsewhere <ref> [ Gelsey et al. 1996b ] </ref> . system.
Reference: [ Gero et al. 1997 ] <author> John S. Gero, Vladimir A. Kazakov, and Thorsten Schinier. </author> <title> Genetic engineering and design problems. </title> <booktitle> In Evolutionary Algorithms in Engineering Applications, </booktitle> <pages> pages 47-68. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: A more detailed description of GAs is provided in Chapter 2. Several research efforts have applied traditional genetic algorithms to engineering design optimization problems in a variety of domains, including control system design [ Kundu and Kawata 1996 ] , architectural and civil engineering design <ref> [ Gero et al. 1997, Rosenman 1997 ] </ref> , VLSI design [ Lienig and Thulasiraman 1993 ] , mechanical design [ Chapman and Jakiela 1996 ] and aircraft design [ Obayashi et al. 1997 ] .
Reference: [ Glover 1989 ] <author> F. Glover. </author> <title> Tabu Search-Part I. </title> <journal> ORSA Journal on Computing, </journal> <volume> 1(3) </volume> <pages> 190-206, </pages> <year> 1989. </year>
Reference-contexts: He presented his work in a design optimization framework. Several research efforts outside the GA field also focused on the idea of using search history to guide future exploration. The examples include: * Tabu search <ref> [ Glover 1989, Glover 1990 ] </ref> is a search method similar to simulated annealing in the sense that it is a path following method that may allow movements to an inferior state in an effort to avoid being trapped in local optima.
Reference: [ Glover 1990 ] <author> F. Glover. </author> <title> Tabu Search-Part II. </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(1) </volume> <pages> 4-32, </pages> <year> 1990. </year>
Reference-contexts: He presented his work in a design optimization framework. Several research efforts outside the GA field also focused on the idea of using search history to guide future exploration. The examples include: * Tabu search <ref> [ Glover 1989, Glover 1990 ] </ref> is a search method similar to simulated annealing in the sense that it is a path following method that may allow movements to an inferior state in an effort to avoid being trapped in local optima.
Reference: [ Goldberg 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: All of these works describe the application of "off-the-shelf" techniques to design optimization problems with no serious effort to adapt them to the particular properties of these problem domains. Stochastic optimization methods Genetic algorithms Genetic Algorithms (GAs) <ref> [ Goldberg 1989 ] </ref> are search algorithms that simulate the process of natural selection and survival of the fittest [ Holland 1975 ] . <p> GADO was made by combining existing techniques from literature with new ideas inspired by the characteristics of the domains for which it is designed. 2.1 Overview of genetic algorithms Genetic Algorithms (GAs) <ref> [ Goldberg 1989 ] </ref> are search algorithms that simulate the process of natural selection and survival of the fittest. <p> Note that Appendix A lists all the performance parameters and their default values. Effect of the population size It is well known that smaller populations converge faster <ref> [ Goldberg 1989 ] </ref> . However, they have a higher tendency to converge to a local sub-optimum. Larger populations do more exploration and have a better chance of finding the global optimum. However, they need more time to converge. <p> At a higher level, it is not clear that the K-nearest neighbor approach is the best approach for screening. We plan on investigating the use of a classifier system <ref> [ Goldberg 1989 ] </ref> which screens potential points by classifying them as promising or unpromising. We also plan to explore the use of more sophisticated machine-learning techniques to extrapolate from past evaluations as part of the screening module.
Reference: [ Haas et al. 1992 ] <author> M. Haas, R. Elmquist, and D. Sobel. </author> <title> NAWC Inlet Design and Analysis (NIDA) Code, </title> <note> Final Report. UTRC Report R92-970037-1, </note> <year> 1992. </year>
Reference-contexts: The missile inlet is axisymmetric and the coordinates are given in terms of axial (x) and radial (r) positions. The simulator used in this domain is a program called "NIDA" which was developed at United Technology Research Center (UTRC) as an inlet analysis/design tool <ref> [ Haas et al. 1992 ] </ref> .
Reference: [ Hoeltzel and Chieng 1987 ] <author> D. Hoeltzel and W. Chieng. </author> <title> Statistical machine learning for the cognitive selection of nonlinear programming algorithms in engineering design optimization. </title> <booktitle> In Advances in Design Automation, </booktitle> <address> Boston, MA, </address> <year> 1987. </year>
Reference-contexts: We used his work, among other techniques, for comparison with our new method in Chapter 3. Work on augmenting numerical optimization techniques with AI methods also includes the use of expert systems [ Bouchard et al. 1988, Orelup et al. 1988 ] and machine learning <ref> [ Hoeltzel and Chieng 1987 ] </ref> . Finally, Ogot [ Ogot and Alag 1995 ] combined Simulated Annealing and heuristic search to create an algorithm called MAH. 5 He demonstrated the effectiveness of MAH via three problems in kinematic synthesis.
Reference: [ Holland 1975 ] <author> J.H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor, </address> <year> 1975. </year>
Reference-contexts: Stochastic optimization methods Genetic algorithms Genetic Algorithms (GAs) [ Goldberg 1989 ] are search algorithms that simulate the process of natural selection and survival of the fittest <ref> [ Holland 1975 ] </ref> . GAs attempt to find a good solution to some problem (e.g., finding the maximum of a function) by randomly generating a collection of potential solutions to the problem and then manipulating those solutions using what is called genetic operators. <p> This is not surprising because these methods hardly gained any popularity until the late eighties. Genetic algorithms as optimization tools were introduced by Holland in 1975 <ref> [ Holland 1975 ] </ref> and simulated annealing as a search method was introduced by Kirkpatrick in the early eighties [ Kirkpatrick et al. 1983 ] . 58 were also used by other researchers before and after Sandgren's work [ Powell and Skol-nick 1993 ] .
Reference: [ Ingber 1996 ] <author> Lester Ingber. </author> <title> Adaptive simulated annealing (ASA): Lessons learned. </title> <journal> Control and Cybernetics, </journal> <volume> 25(1) </volume> <pages> 33-54, </pages> <year> 1996. </year>
Reference-contexts: This behavior may be unacceptable in some domains. * ASA: This is a state of the art "off-the-shelf" implementation of the simulated annealing paradigm. The version we used was launched in 1995. ASA 1 is an implementation of the very fast simulated re-annealing algorithm (VFSR) proposed by Lester Ingber <ref> [ Ingber 1996 ] </ref> . To the best of our knowledge, this is the only simulated annealing implementation that does not require the user to provide an initial temperature or an annealing schedule.
Reference: [ Jain and Agogino 1988 ] <author> P. Jain and A. M. Agogino. </author> <title> Optimal design of mechanisms using simulated annealing: Theory and applications. </title> <booktitle> ASME Advances in Design Automation, </booktitle> <volume> 14 </volume> <pages> 233-240, </pages> <year> 1988. </year>
Reference: [ Jain et al. 1992 ] <author> P. Jain, P. Fenyes, and R. Richter. </author> <title> Optimal blank nesting using simulated annealing. </title> <journal> ASME Journal of Mechanical Design, </journal> <volume> 114 </volume> <pages> 160-165, </pages> <year> 1992. </year> <month> 103 </month>
Reference: [ Janikow and Michalewicz 1991 ] <author> Cezary Janikow and Zbigniew Michalewicz. </author> <title> An experimental comparison of binary and floating point representations in genetic algorithms. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 31-36. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: All parameters have continuous intervals. GADO uses a floating point representation (genotype), the reason being the demonstrated superiority of the floating point representation to binary representation in continuous variable optimization problems <ref> [ Janikow and Michalewicz 1991 ] </ref> .
Reference: [ Kirkpatrick et al. 1983 ] <author> S. Kirkpatrick, C. Gelatt, and M. Vecchi. </author> <title> Optimization by simulated annealing. </title> <journal> Science, </journal> <volume> 220:671 - 680, </volume> <year> 1983. </year>
Reference-contexts: Deb's research represents a significant effort to adapt the GA to the engineering design optimization problem. Deb did not, however, address the problem of unevaluable points. Simulated annealing Simulated Annealing methods (SAs) <ref> [ Kirkpatrick et al. 1983 ] </ref> are based on an analogy with thermodynamics, specifically the way in which metals cool and anneal. <p> This is not surprising because these methods hardly gained any popularity until the late eighties. Genetic algorithms as optimization tools were introduced by Holland in 1975 [ Holland 1975 ] and simulated annealing as a search method was introduced by Kirkpatrick in the early eighties <ref> [ Kirkpatrick et al. 1983 ] </ref> . 58 were also used by other researchers before and after Sandgren's work [ Powell and Skol-nick 1993 ] . These problems differ from the problems previously described in Chapter 3 in the following major ways: * There are no unevaluable points.
Reference: [ Knight 1994 ] <author> D. Knight. </author> <title> Survey of high-speed inlet design methodology. Technical Report ARPA Inlet Design Group Report No. </title> <type> 1, </type> <institution> Department of Mechanical and Aerospace Engineering, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <month> March </month> <year> 1994. </year> <note> http://www.cs.rutgers.edu/hpcd/Area II.1/report1.ps.Z. </note>
Reference-contexts: The design-evaluate-redesign loop described above seems like it could be automated and can benefit from optimization. Some engineers have tried to use automated optimization, but were unhappy with the results; others have heard about these failures, and have therefore decided not to use automated optimization <ref> [ Knight 1994 ] </ref> .
Reference: [ Kroo et al. 1994 ] <author> Ilan Kroo, Steve Altus, Robert Braun, Peter Gage, and Ian Sobieski. </author> <title> Multidisciplinary optimization methods for aircraft preliminary design. </title> <booktitle> In Fifth AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <address> Panama City, Florida, </address> <month> September </month> <year> 1994. </year> <pages> AIAA 94-4325. </pages>
Reference: [ Kundu and Kawata 1996 ] <author> Sourav Kundu and Seiichi Kawata. </author> <title> AI in control system design using a new paradigm for design representation. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96, </booktitle> <year> 1996. </year>
Reference-contexts: A more detailed description of GAs is provided in Chapter 2. Several research efforts have applied traditional genetic algorithms to engineering design optimization problems in a variety of domains, including control system design <ref> [ Kundu and Kawata 1996 ] </ref> , architectural and civil engineering design [ Gero et al. 1997, Rosenman 1997 ] , VLSI design [ Lienig and Thulasiraman 1993 ] , mechanical design [ Chapman and Jakiela 1996 ] and aircraft design [ Obayashi et al. 1997 ] .
Reference: [ Laird et al. 1986 ] <author> J. E. Laird, P. S. Rosenbloom, and A. Newell. </author> <title> Chunking in Soar: The anatomy of a general learning mechanism. </title> <journal> Machine Learning, </journal> <volume> 1(11), </volume> <year> 1986. </year>
Reference-contexts: PROLEARN uses EBL to form generalizations of past proofs that are cached away 34 and used in future problem-solving episodes. Soar <ref> [ Laird et al. 1986 ] </ref> is a general problem-solving architecture that supports a broad variety of problem-solving strategies. Soar uses EBL to form rules that summarize the problem-solving conducted in a problem space so that the same results can be reproduced in a single step in similar situations.
Reference: [ Land et al. 1997 ] <author> Mark Land, John Sidorowich, and Richard Belew. </author> <title> Using genetic algorithms with local search for thin film metrology. </title> <booktitle> In Proceedings of the Seventh International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year>
Reference-contexts: However, this approach is more vulnerable to being trapped in local sub-optima than a global method which optimizes configuration and parameters simultaneously. Like Powell, Gage does not directly address the issue of unevaluable points. Combining GAs and local search methods was also done in <ref> [ Land et al. 1997 ] </ref> . Schwabacher [ Schwabacher 1996 ] proposed various methods to improve numerical optimization in engineering design through the use of artificial intelligence and machine learning techniques.
Reference: [ Lawrence et al. 1995 ] <author> C. Lawrence, J. Zhou, and A. </author> <title> Tits. User's guide for CFSQP version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical Report TR-94-16r1, </type> <institution> Institute for Systems Research, University of Maryland, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: Each design parameter is assumed to have a fixed range. RP forms design points by selecting a random value of each parameter uniformly distributed over its range. The best point found in this process is the result. * Multi-start CFSQP: CFSQP <ref> [ Lawrence et al. 1995 ] </ref> is a state-of-the-art implementation of the Sequential Quadratic Programming method, a quasi-Newton method that solves a nonlinear constrained optimization problem by fitting a sequence of quadratic programs. CFSQP is a gradient based local optimizer.
Reference: [ Lienig and Thulasiraman 1993 ] <author> Jens Lienig and K. Thulasiraman. </author> <title> A genetic algorithm for channel routing in VLSI circuits. </title> <journal> Evolutionary Computation, </journal> <volume> 1(4) </volume> <pages> 293-311, </pages> <year> 1993. </year>
Reference-contexts: Several research efforts have applied traditional genetic algorithms to engineering design optimization problems in a variety of domains, including control system design [ Kundu and Kawata 1996 ] , architectural and civil engineering design [ Gero et al. 1997, Rosenman 1997 ] , VLSI design <ref> [ Lienig and Thulasiraman 1993 ] </ref> , mechanical design [ Chapman and Jakiela 1996 ] and aircraft design [ Obayashi et al. 1997 ] . Deb [ Deb and Goyal 1997, Deb 1997 ] developed a GA called GeneAS for engineering design optimization with mixed variables (both discrete and continuous).
Reference: [ Louis 1997 ] <author> Sushil J. Louis. </author> <title> Working from blueprints: Evolutionary learning for design. </title> <journal> Artificial Intelligence in Engineering, </journal> <volume> 11(3) </volume> <pages> 335-341, </pages> <year> 1997. </year>
Reference-contexts: Also in the field of GA optimization <ref> [ Louis 1997 ] </ref> presented a method for using information about an entire GA optimization to guide another GA optimization in a similar domain. He presented his work in a design optimization framework.
Reference: [ Mahfoud 1995 ] <author> Samir Mahfoud. </author> <title> A comparison of parallel and sequential niching methods. </title> <booktitle> In Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 136-143. </pages> <publisher> Morgan Kaufmann, </publisher> <month> July </month> <year> 1995. </year>
Reference-contexts: Each such strategy is called a crowding heuristic and the reader is referred to <ref> [ Mahfoud 1995 ] </ref> for a detailed discussion of these methods. 2.2 System structure GADO is a novel GA that is tailored for the specific task of optimization in design spaces. <p> This is done conservatively in order not to waste time (the product of 2 numbers, each of which is less than one, is usually a very small number). 2.2.7 Replacement strategy The replacement strategy used here is a crowding technique <ref> [ Mahfoud 1995 ] </ref> , which takes into consideration both the fitness and the proximity of the points in the GA population. When a new point is introduced, the closest point to this new point from among a certain "group" is selected for replacement. <p> efficiency of GADO by avoiding unnecessary evaluations of unpromising points and redundant points. * Badly structured spaces: GADO uses a collection of crossover and mutation operators that are tailored for such cases (for example the line crossover operator). * Multiple local optima: GADO uses a replacement strategy that promotes niching <ref> [ Mahfoud 1995 ] </ref> . This promotes "species" formation and prevents any single good region from dominating the search. The diversity maintenance modules also helps in this regard.
Reference: [ Malhotra et al. 1991 ] <author> A. Malhotra, J. H. Oliver, and Tu Weizhen. </author> <title> Synthesis of spatially and intrinsically constrained curves using simulated annealing. </title> <booktitle> Advances in Design Automation, </booktitle> <volume> 1 </volume> <pages> 145-155, </pages> <year> 1991. </year>
Reference: [ Michalewicz 1996 ] <author> Zbigniew Michalewicz. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1996. </year> <month> 104 </month>
Reference-contexts: It resembles several genetic operators (such as arithmetic crossover, linear crossover and heuristic crossover <ref> [ Michalewicz 1996 ] </ref> ). Line crossover works by joining a line between the two parent points, extending it from both sides and randomly picking a point on that line or its extensions (with uniform probability) to be the newborn. <p> It is specifically designed to be robust in domains with small, possible disjoint feasible regions. This system has been launched only in 1996 and is described in detail in <ref> [ Michalewicz 1996 ] </ref> . It uses a repair method for handling constraints.
Reference: [ Minton 1988 ] <author> S. Minton. </author> <title> Learning search control knowledge: An explanation-based approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1988. </year>
Reference-contexts: Since such new rules are added immediately to the problem space, they can be used at later points within a single problem-solving task, as well as on new tasks using that problem space. PRODIGY <ref> [ Minton 1988 ] </ref> is a domain independent planning system based on a means-ends planner that decomposes problems into subgoals, solves them, then combines their solutions into a solution for the full problem.
Reference: [ Mitchell 1997 ] <author> Tom Mitchell. </author> <title> Machine Learning. </title> <publisher> McGraw-Hill, </publisher> <year> 1997. </year>
Reference-contexts: going back to these states so as not to keep cycling. * Dependency-directed backtracking [ Rich and Knight 1991 ] is a search method similar to depth-first search which uses search history to decide which state to backtrack to in case a search path proved fruitless. * Explanation-based learning (EBL) <ref> [ Mitchell 1997 ] </ref> takes the outcome of a training process (such as a rule, a proof or a decision tree) and transforms it to a more compact (and often more general) form. [ Prieditis and Mostow 1987 ] proposed an adaptive Prolog interpreter called PROLEARN which reduces the time of
Reference: [ Obayashi et al. 1997 ] <author> S. Obayashi, Y. Yamaguchi, and T. Nakamura. </author> <title> Multiobjective genetic algorithm for multidisciplinary design of transonic wing platform. </title> <journal> Journal of Aircraft, </journal> <volume> 34(5), </volume> <year> 1997. </year>
Reference-contexts: in a variety of domains, including control system design [ Kundu and Kawata 1996 ] , architectural and civil engineering design [ Gero et al. 1997, Rosenman 1997 ] , VLSI design [ Lienig and Thulasiraman 1993 ] , mechanical design [ Chapman and Jakiela 1996 ] and aircraft design <ref> [ Obayashi et al. 1997 ] </ref> . Deb [ Deb and Goyal 1997, Deb 1997 ] developed a GA called GeneAS for engineering design optimization with mixed variables (both discrete and continuous). He demonstrated the merit of his GA in the domain of mechanical component design.
Reference: [ Ogot and Alag 1995 ] <author> M. M. Ogot and S. S. Alag. </author> <title> An effective mixed annealing/heuristic algorithm for problems in mechanical design. </title> <journal> Journal of Mechanical Design, </journal> <volume> 117(3), </volume> <year> 1995. </year>
Reference-contexts: Work on augmenting numerical optimization techniques with AI methods also includes the use of expert systems [ Bouchard et al. 1988, Orelup et al. 1988 ] and machine learning [ Hoeltzel and Chieng 1987 ] . Finally, Ogot <ref> [ Ogot and Alag 1995 ] </ref> combined Simulated Annealing and heuristic search to create an algorithm called MAH. 5 He demonstrated the effectiveness of MAH via three problems in kinematic synthesis.
Reference: [ Orelup et al. 1988 ] <author> M. F. Orelup, J. R. Dixon, P. R. Cohen, and M. K. Simmons. Dominic II: </author> <title> Meta-level control in iterative redesign. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 25-30, </pages> <address> St. Paul, MN, </address> <year> 1988. </year>
Reference-contexts: We used his work, among other techniques, for comparison with our new method in Chapter 3. Work on augmenting numerical optimization techniques with AI methods also includes the use of expert systems <ref> [ Bouchard et al. 1988, Orelup et al. 1988 ] </ref> and machine learning [ Hoeltzel and Chieng 1987 ] .
Reference: [ Powell and Skolnick 1993 ] <author> D. Powell and M. Skolnick. </author> <title> Using genetic algorithms in engineering design optimization with non-linear constraints. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 424-431. </pages> <publisher> Morgan Kaufmann, </publisher> <month> July </month> <year> 1993. </year>
Reference-contexts: Thus they are about 3 times faster than the aircraft simulator and 100 times faster than the missile design code (NIDA). Those problems have now become used in engineering design optimization domains as benchmarks. The most recent experiment involving these domains was reported in <ref> [ Powell and Skolnick 1993 ] </ref> , in which a GA package called OOGA and a numerical optimization package called NumOpt were compared to each other in 10 of Sandgren's domains. The 10 domains were a representative sample of the original 30. <p> The 10 domains were a representative sample of the original 30. We ran GADO in eight 2 of these 10 domains and compared its performance to the results reported in <ref> [ Powell and Skolnick 1993 ] </ref> . All eight were minimization problems. A description of the domains we used is given in Appendix B. Even though these problems are not exactly the kind of engineering design domains that GADO was designed to handle, GADO did extremely well in them nevertheless. <p> The limit on the number of function evaluations was set to 50,000. This setup was the same one used in <ref> [ Powell and Skolnick 1993 ] </ref> and this allowed comparison of results. The research in 2 We were unable to do any comparison in 2 of the 10 domains because they had unbounded variables. <p> used in <ref> [ Powell and Skolnick 1993 ] </ref> and this allowed comparison of results. The research in 2 We were unable to do any comparison in 2 of the 10 domains because they had unbounded variables. The researchers did not report the bounds they imposed on the unbounded variables in [ Powell and Skolnick 1993 ] and we were unable to get any clarification from them. 59 Table 4.1: Results of optimization in benchmark domains Domain Sandgren Dim. Constraints best OOGA NumOpt GADO No. <p> Constraints best OOGA NumOpt GADO No. No. inequ. equ. f f f f 1 13 5 4 0 26.79 26.79 28.02 26.78 3 3 5 6 0 -3.06 -3.06 -3.06 -3.06 5 6 6 0 4 8.92 (8.93) 9.26 8.97 7 21 13 13 0 97.5 134.2 161.1 117.57 <ref> [ Powell and Skolnick 1993 ] </ref> only reported the worst case performance (i.e. the worst of the 5 runs) of OOGA so we also report the worst case performance of GADO for fair comparison. The research in [ Powell and Skolnick 1993 ] was not clear about the experiments with NumOpt. <p> 8.92 (8.93) 9.26 8.97 7 21 13 13 0 97.5 134.2 161.1 117.57 <ref> [ Powell and Skolnick 1993 ] </ref> only reported the worst case performance (i.e. the worst of the 5 runs) of OOGA so we also report the worst case performance of GADO for fair comparison. The research in [ Powell and Skolnick 1993 ] was not clear about the experiments with NumOpt. It mentioned however that a limit of 50,000 evaluations was imposed on NumOpt and reported one number for each problem as its performance measure so we used it for comparison. <p> The fourth and fifth columns show the number of inequality and equality constraints respectively. The sixth column shows the best known optima of the problems (excluding the findings of this thesis). The seventh column shows the performance of OOGA reported in <ref> [ Powell and Skolnick 1993 ] </ref> . The eighth column shows the performance of NumOpt reported in [ Powell and Skolnick 1993 ] . Finally, the last column shows the worst case final performance of GADO. Numbers in brackets represent infeasible points. <p> The sixth column shows the best known optima of the problems (excluding the findings of this thesis). The seventh column shows the performance of OOGA reported in <ref> [ Powell and Skolnick 1993 ] </ref> . The eighth column shows the performance of NumOpt reported in [ Powell and Skolnick 1993 ] . Finally, the last column shows the worst case final performance of GADO. Numbers in brackets represent infeasible points.
Reference: [ Powell 1990 ] <author> D. Powell. Inter-GEN: </author> <title> A hybrid approach to engineering design optimization. </title> <type> Technical report, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <month> December </month> <year> 1990. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: The collaboration between the many points of the GA population makes it easier to find small evaluable/feasible regions. The GA also takes advantage of the decomposability of many engineering design domains through the crossover operation (as will be discussed further in the following chapter). Hybrid methods Powell <ref> [ Powell 1990, Tong et al. 1992 ] </ref> has built a module called Inter-GEN, part of the ENGINEOUS system [ Tong 1988 ] . It contains a genetic algorithm and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two.
Reference: [ Prieditis and Mostow 1987 ] <author> A. E. Prieditis and J. Mostow. Prolearn: </author> <title> Towards a prolog interpreter that learns. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, WA, 1987. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: decide which state to backtrack to in case a search path proved fruitless. * Explanation-based learning (EBL) [ Mitchell 1997 ] takes the outcome of a training process (such as a rule, a proof or a decision tree) and transforms it to a more compact (and often more general) form. <ref> [ Prieditis and Mostow 1987 ] </ref> proposed an adaptive Prolog interpreter called PROLEARN which reduces the time of executing Prolog queries by referring to similar queries executed in the past. PROLEARN uses EBL to form generalizations of past proofs that are cached away 34 and used in future problem-solving episodes.
Reference: [ Rasheed and Gelsey 1996 ] <author> Khaled Rasheed and Andrew Gelsey. </author> <title> Adaptation of genetic algorithms for engineering design optimization. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96: Evolutionary Systems in Design Workshop, </booktitle> <year> 1996. </year>
Reference: [ Rasheed and Hirsh 1997a ] <author> Khaled Rasheed and Haym Hirsh. </author> <title> Guided crossover: A new operator for genetic algorithm based optimization. </title> <type> Technical Report HPCD-TR-50, </type> <institution> Department of Computer Science, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <year> 1997. </year>
Reference: [ Rasheed and Hirsh 1997b ] <author> Khaled Rasheed and Haym Hirsh. </author> <title> Using case-based learning to improve genetic-algorithm-based design optimization. </title> <booktitle> In Proceedings of the Seventh International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1997. </year>
Reference: [ Rasheed et al. 1997 ] <author> Khaled Rasheed, Haym Hirsh, and Andrew Gelsey. </author> <title> A genetic algorithm for continuous design space search. </title> <journal> Artificial Intelligence in Engineering, </journal> <volume> 11(3) </volume> <pages> 295-305, </pages> <address> 1997. </address> <publisher> Elsevier Science Ltd. </publisher>
Reference: [ Ravise and Sebag 1996 ] <author> Caroline Ravise and Michele Sebag. </author> <title> An advanced evolution should not repeat its past errors. </title> <booktitle> In Thirteenth International Conference on Machine Learning, </booktitle> <year> 1996. </year> <month> 105 </month>
Reference-contexts: If the basin is discovered, the screening module will then help the search converge faster to the optimum location. The idea of using the GA optimization history to guide further explorations was studied in <ref> [ Ravise and Sebag 1996 ] </ref> where inductive learning was used to learn rules describing bad points in a multi-dimension boolean space. The use of rules was appropriate in that research because the evaluation functions were not expensive enough 33 to warrant the use of case-based learning.
Reference: [ Rich and Knight 1991 ] <author> Elaine Rich and Kevin Knight. </author> <booktitle> Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Tabu search uses a list called the "Tabu list" which dynamically changes throughout the course of the search and contains a group of the most recently visited points of the search space. The search avoids going back to these states so as not to keep cycling. * Dependency-directed backtracking <ref> [ Rich and Knight 1991 ] </ref> is a search method similar to depth-first search which uses search history to decide which state to backtrack to in case a search path proved fruitless. * Explanation-based learning (EBL) [ Mitchell 1997 ] takes the outcome of a training process (such as a rule,
Reference: [ Rogers et al. 1996 ] <author> James L. Rogers, Collin M. McCulley, and Christina L. Bloebaum. </author> <title> Integrating a genetic algorithm into a knowledge based system for ordering complex design processes. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96, </booktitle> <year> 1996. </year>
Reference-contexts: He does not, however, address the issue of unevaluable points. He also assumed that injecting 10 human knowledge in the form of rules improves performance, ignoring the potentially detrimental effect this has on innovation. Combining GAs and knowledge-based systems was also done in <ref> [ Rogers et al. 1996 ] </ref> . Gage [ Gage 1994, Gage et al. 1995 ] has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP 3 in two domains. The first domain was aircraft wing design.
Reference: [ Rosenman 1997 ] <author> M. A. Rosenman. </author> <title> The generation of form using an evolutionary approach. </title> <booktitle> In Evolutionary Algorithms in Engineering Applications, </booktitle> <pages> pages 69-86. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: A more detailed description of GAs is provided in Chapter 2. Several research efforts have applied traditional genetic algorithms to engineering design optimization problems in a variety of domains, including control system design [ Kundu and Kawata 1996 ] , architectural and civil engineering design <ref> [ Gero et al. 1997, Rosenman 1997 ] </ref> , VLSI design [ Lienig and Thulasiraman 1993 ] , mechanical design [ Chapman and Jakiela 1996 ] and aircraft design [ Obayashi et al. 1997 ] .
Reference: [ Salomon 1996 ] <author> Ralf Salomon. </author> <title> Performance degradation of genetic algorithms under coordinate rotation. </title> <booktitle> In Proceedings of the Fifth Annual Conference on Evolutionary Programming, </booktitle> <pages> pages 155-161, </pages> <year> 1996. </year>
Reference-contexts: The results are also shown in Figure 4.33 (the dotted curves). The figure shows that the effect of all transformations on performance was minimal. This result suggests that unlike other GAs that degrade severely under coordinate rotation <ref> [ Salomon 1996 ] </ref> , GADO's performance degrades only slightly under these circumstances. The reason for this is that three of the five crossover methods used by GADO are rotation independent.
Reference: [ Sandgren 1977 ] <author> E. Sandgren. </author> <title> The utility of nonlinear programming algorithms. </title> <type> Technical report, </type> <institution> Purdue University, </institution> <year> 1977. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: In order for these methods to succeed, a relatively good starting point must be used. The improvement over the starting point is usually minimal as the optimizer is likely to move to the nearest local optimum or stop if it encounters a numerical hurdle. 7 Sandgren <ref> [ Sandgren 1977 ] </ref> applied 35 nonlinear optimization algorithms to 30 engineering design optimization problems and compared the performance. Sandgren's general conclusion was that no single optimization technique among the ones he tested performed reasonably well in all the test cases. <p> In 1977, Eric Sandgren published his Ph.D. thesis by the title "The utility of nonlinear programming algorithms" <ref> [ Sandgren 1977 ] </ref> . He applied 35 nonlinear optimization algorithms to 30 engineering design optimization problems and compared their performance. 1 Sandgren's general conclusion was that no single optimization technique among the ones he tested performed reasonably well in all the test cases.
Reference: [ Schwabacher and Gelsey 1997 ] <author> M. Schwabacher and A. Gelsey. </author> <title> Intelligent gradient-based search of incompletely defined design spaces. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis and Manufacturing, </booktitle> <volume> 11(3) </volume> <pages> 199-210, </pages> <year> 1997. </year>
Reference-contexts: CFSQP proved to be the best in the domains under consideration and thus we chose it to represent conventional nonlinear programming methods in this comparison. The version of CFSQP we used was tailored to design optimization spaces by Mark 39 Schwabacher [ Schwabacher 1996 ] . It was shown <ref> [ Schwabacher and Gelsey 1997, Schwabacher 1996 ] </ref> that the modifications to this version of CFSQP made it con siderably better in several design optimization spaces. * GENOCOPIII: This is a state of the art "off-the-shelf" genetic-algorithm-based global optimizer for constrained continuous optimization.
Reference: [ Schwabacher 1996 ] <author> Mark Schwabacher. </author> <title> The use of artificial intelligence to improve the numerical optimization of complex engineering designs. </title> <type> Technical Report HPCD-TR-45, </type> <institution> Department of Computer Science, Rutgers University, </institution> <month> October </month> <year> 1996. </year> <type> Ph.D. Thesis. </type> <note> http://www.cs.rutgers.edu/~schwabac/thesis.html. </note>
Reference-contexts: The penalty term is usually the product of a (large) positive penalty coefficient times the sum of the constraint violations. The problem of proving that a point is a local optimum of a general nonlinear programming problem is undecidable <ref> [ Schwabacher 1996 ] </ref> . Therefore there is no analytical solution to the above problem. On the other hand there is a large amount of literature on how to solve the nonlinear programming problem in practice. <p> Like Powell, Gage does not directly address the issue of unevaluable points. Combining GAs and local search methods was also done in [ Land et al. 1997 ] . Schwabacher <ref> [ Schwabacher 1996 ] </ref> proposed various methods to improve numerical optimization in engineering design through the use of artificial intelligence and machine learning techniques. <p> CFSQP proved to be the best in the domains under consideration and thus we chose it to represent conventional nonlinear programming methods in this comparison. The version of CFSQP we used was tailored to design optimization spaces by Mark 39 Schwabacher <ref> [ Schwabacher 1996 ] </ref> . <p> CFSQP proved to be the best in the domains under consideration and thus we chose it to represent conventional nonlinear programming methods in this comparison. The version of CFSQP we used was tailored to design optimization spaces by Mark 39 Schwabacher [ Schwabacher 1996 ] . It was shown <ref> [ Schwabacher and Gelsey 1997, Schwabacher 1996 ] </ref> that the modifications to this version of CFSQP made it con siderably better in several design optimization spaces. * GENOCOPIII: This is a state of the art "off-the-shelf" genetic-algorithm-based global optimizer for constrained continuous optimization. <p> However, CFSQP failed to yield any improvement over the starting point. This suggests that the best inlet found by GADO may well be locally optimal. 1 The version of CFSQP used in this domain was also the one enhanced by Mark Schwabacher <ref> [ Schwabacher 1996 ] </ref> (the one used in other domains in this thesis). 100 Multi-start CFSQP In this experiment a very long sequence of random probes were done and every time an evaluable "near-feasible" 2 point was found, CFSQP was started from that point.
Reference: [ Sobieszczanski-Sobieski and Haftka 1996 ] <author> J. Sobieszczanski-Sobieski and R. T. Haftka. </author> <title> Multidisciplinary aerospace design optimization: Survey of recent developments. </title> <booktitle> In 34th AIAA Aerospace Sciences Meeting and Exhibit, </booktitle> <address> Reno, Nevada, </address> <month> January </month> <year> 1996. </year> <month> AIAA-96-0711. </month>
Reference: [ Sobieszczanski-Sobieski et al. 1985 ] <author> J. Sobieszczanski-Sobieski, B. B. James, and A. R. Dovi. </author> <title> Structural optimization by multilevel decomposition. </title> <journal> AIAA Journal, </journal> <volume> 23(11) </volume> <pages> 1775-1782, </pages> <month> November </month> <year> 1985. </year>
Reference: [ Tong et al. 1992 ] <author> Siu Shing Tong, David Powell, and Sanjay Goel. </author> <title> Integration of artificial intelligence and numerical optimization techniques for the design of complex aerospace systems. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1189. </month>
Reference-contexts: The collaboration between the many points of the GA population makes it easier to find small evaluable/feasible regions. The GA also takes advantage of the decomposability of many engineering design domains through the crossover operation (as will be discussed further in the following chapter). Hybrid methods Powell <ref> [ Powell 1990, Tong et al. 1992 ] </ref> has built a module called Inter-GEN, part of the ENGINEOUS system [ Tong 1988 ] . It contains a genetic algorithm and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two.
Reference: [ Tong 1988 ] <author> S. S. Tong. </author> <title> Coupling symbolic manipulation and numerical simulation for complex engineering designs. </title> <booktitle> In International Association of Mathematics and Computers in Simulation Conference on Expert Systems for Numerical Computing, </booktitle> <institution> Purdue University, </institution> <year> 1988. </year>
Reference-contexts: The GA also takes advantage of the decomposability of many engineering design domains through the crossover operation (as will be discussed further in the following chapter). Hybrid methods Powell [ Powell 1990, Tong et al. 1992 ] has built a module called Inter-GEN, part of the ENGINEOUS system <ref> [ Tong 1988 ] </ref> . It contains a genetic algorithm and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two. Powell tested his system on a realistic design task (jet engine design). He does not, however, address the issue of unevaluable points.
Reference: [ Vanderplaats 1984 ] <author> Garret N. Vanderplaats. </author> <title> Numerical Optimization Techniques for Engineering Design : With Applications. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1984. </year>
Reference: [ Wright 1990 ] <author> Alden Wright. </author> <title> Genetic algorithms for real parameter optimization. </title> <booktitle> In The First workshop on the Foundations of Genetic Algorithms and Classifier Systems, </booktitle> <pages> pages 205-218, </pages> <institution> Indiana University, Bloomington, </institution> <address> July 1990. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 106 </pages>
Reference-contexts: It basically does a cut and paste operation on the genotypes of the parents to produce a newborn. It was also given other names in the literature, such as real crossover <ref> [ Wright 1990 ] </ref> . In design optimization, point crossover is a valuable tool in decomposable spaces. It can combine the merits of two designs to produce a design that is better than both.
Reference: [ Zha et al. 1996 ] <author> G.-C. Zha, Don Smith, Mark Schwabacher, Khaled Rasheed, Andrew Gelsey, and Doyle Knight. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <booktitle> In AIAA Symposium on Multidisciplinary Analysis and Optimization '96, </booktitle> <year> 1996. </year>
Reference-contexts: We summarize it briefly here; it is described in more detail in <ref> [ Zha et al. 1996 ] </ref> . The missile inlet designed is an axisymmetric mixed compression inlet that cruises at Mach 4 at 60000 feet altitude. Minimum manufacture cost for this inlet is critical, 48 Table 3.2: Fixed Parameters No.
Reference: [ Zha et al. 1997 ] <author> G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, D. Knight, and M. Haas. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <journal> AIAA Journal of Aircraft, </journal> <volume> 34(6), </volume> <year> 1997. </year> <month> 107 </month>
References-found: 67

