URL: http://theory.lcs.mit.edu/~luca/pubs/maxnp.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~luca/papers.html
Root-URL: 
Title: Max NP-completeness Made Easy  
Author: Pierluigi Crescenzi Luca Trevisan 
Note: (1996)).  
Date: December 13, 1996  
Abstract: We introduce a simple technique to obtain reductions between optimization constraint satisfaction problems. The technique uses the probabilistic method to reduce the size of disjunctions. As a first application, we prove the Max NP-completeness of Max 3Sat without using the PCP theorem (thus solving an open question posed in Khanna et al. (1994)). Successively, we show that the "planar" restrictions of several optimization constraint satisfaction problems admit linear-time approximation schemes (thus improving the results of Khanna and Motwani 
Abstract-found: 1
Intro-found: 1
Reference: [ADP80] <author> G. Ausiello, A. D'Atri, and M. Protasi. </author> <title> Structure preserving reductions among convex optimization problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21 </volume> <pages> 136-153, </pages> <year> 1980. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [ALM + 92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference-contexts: Other Max SNP-hard problems were soon discovered and other approximation classes with natural complete problems were introduced [PR93, KT94, KT95]. In [KMSV94] the logical approach was finally reconciled with the computational one. In fact, by making use of the PCP theorem <ref> [ALM + 92] </ref>, the authors proved that Max 3Sat is APX-complete. As a corollary of this result, it follows that Max 3Sat is Max NP-complete thus answering a question posed in [PY91]. <p> Using the above notation, we can state the PCP Theorem as follows. Theorem 5 (PCP Theorem <ref> [AS92b, ALM + 92] </ref>) A constant q exists such that NP PCP 1;1=2 [log; q] : We shall also use the short-hand notation PCP (r; 1) def S k1 PCP 2=3;1=3 [r; k]. <p> Lemma 10 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see <ref> [ALM + 92] </ref>). The other direction is more interesting. We use ideas from [CT94]. For any 1=2 s &lt; c 1, let Gap 3Sat c;s be the following promise problem: given a 3SAT formula with m clauses, reject if opt () sm and accept if opt () cm.
Reference: [AS92a] <author> N. Alon and J. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> Wiley Interscience, </publisher> <year> 1992. </year>
Reference-contexts: Using the method of conditional expectation <ref> [AS92a] </ref> (see also [Yan94]) we can find in linear time an assignment t such that m (; t ) E [m (; t R )]. That is, the performance ratio of t is at most r. 2 From the proof of the above theorem we have the following result.
Reference: [AS92b] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs; a new characterization of NP. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year>
Reference-contexts: Using the above notation, we can state the PCP Theorem as follows. Theorem 5 (PCP Theorem <ref> [AS92b, ALM + 92] </ref>) A constant q exists such that NP PCP 1;1=2 [log; q] : We shall also use the short-hand notation PCP (r; 1) def S k1 PCP 2=3;1=3 [r; k].
Reference: [BaG88] <author> J.L. Balcazar, J. Daz, and J Gabarro. </author> <title> Structural Complexity I. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: For the definitions of most of the complexity classes used in this paper we refer the reader to one of the books 3 on the subject (see, for example, <ref> [GJ79, BaG88, BC93, Pap94] </ref>). An optimization problem A consists of: (1) the set I of instances, (2) for any instance x 2 I, a set sol (x) of solutions, and (3) for any instance x 2 I and for any solution y 2 sol (x), a measure m (x; y).
Reference: [Bak94] <author> B. Baker. </author> <title> Approximation algorithms for NP-complete problems on planar graphs. </title> <journal> Journal of the ACM, </journal> <volume> 41(1) </volume> <pages> 153-180, </pages> <year> 1994. </year>
Reference-contexts: The approximation schemes we describe are a composition of the reductions of Section 3 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [Bak94, HMR + 94, KM96] </ref>. To begin, we recall the definition of planar instance of a constraint satisfaction problem. Definition 13 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let be an instance of Max F over variable set X. <p> T (m; n) = O (2 k (h+1) (m + n)) = O (m + n). 2 Theorem 17 For fixed * &gt; 0, Max Planar k-CSP admits an (1 + *)-approximate linear time algorithm, Proof: It suffices to observe that from the proof of [KM96, Theorem 1] (see also <ref> [Bak94, Theorem 1] </ref>) and from a result of [Bod88] it follows that (1 + *)-approximating Max Planar k-CSP reduces to optimally solve Max k-CSP restricted to instances whose incidence graph has treewidth O (1=*).
Reference: [BC93] <author> D.P. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: For the definitions of most of the complexity classes used in this paper we refer the reader to one of the books 3 on the subject (see, for example, <ref> [GJ79, BaG88, BC93, Pap94] </ref>). An optimization problem A consists of: (1) the set I of instances, (2) for any instance x 2 I, a set sol (x) of solutions, and (3) for any instance x 2 I and for any solution y 2 sol (x), a measure m (x; y).
Reference: [BGS95] <author> M. Bellare, O. Goldreich, and M. Sudan. </author> <title> Free bits, PCP's and non-approximability - towards tight results (3rd version). Technical Report TR95-24, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year> <note> Preliminary version in Proc. of FOCS'95. </note>
Reference-contexts: Comparison with Local-Replacement Reductions. The most common technique to reduce a constraint satisfaction problem to another is the local-replacement one [GJ79]. In particular, the best known non-approximability results for several problems, including Max 3Sat and Max Cut, are derived using reductions of this kind <ref> [BGS95, TSSW96, H-as96] </ref>. Deriving more "efficient" reductions would imply stronger (possibly tight) non-approximability results. Unfortunately, lower bounds for the efficiency of local-replacement reductions have been found [TSSW96]. In particular the reductions yielding the non-approximability results for Max 3Sat and Max Cut are optimal among local-replacement ones. <p> This encourages to look for simple techniques to obtain reductions to Max Cut and Max 2Sat beating the ones in <ref> [BGS95, TSSW96] </ref>: a positive answer would imply improved non-approximability results for these problems.
Reference: [Bod88] <author> H.L. Bodlaender. </author> <title> Some classes of graphs with bounded treewidth. </title> <journal> Bulletin of the EATCS, </journal> <volume> 36 </volume> <pages> 116-126, </pages> <year> 1988. </year>
Reference-contexts: (m + n)) = O (m + n). 2 Theorem 17 For fixed * &gt; 0, Max Planar k-CSP admits an (1 + *)-approximate linear time algorithm, Proof: It suffices to observe that from the proof of [KM96, Theorem 1] (see also [Bak94, Theorem 1]) and from a result of <ref> [Bod88] </ref> it follows that (1 + *)-approximating Max Planar k-CSP reduces to optimally solve Max k-CSP restricted to instances whose incidence graph has treewidth O (1=*).
Reference: [Bod93] <author> H.L. Bodlaender. </author> <title> A linear time algorithm for finding tree-decompositions of small treewidth. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 226-234, </pages> <year> 1993. </year>
Reference-contexts: Proof:[Sketch] Given an instance of Max k-CSP with m constraints over n variables whose incidence graph G has treewidth at most h we first find an optimum tree-decomposition of G. This can be done in linear time <ref> [Bod93] </ref>. Then we apply divide and conquer: the root vertex of the tree-decomposition is a set of h + 1 nodes of G that disconnect G into two components. If some of them are f -nodes than we replace them with the v-nodes corresponding to the variables occurring in them.
Reference: [CKST95] <author> P. Crescenzi, V. Kann, R. Silvestri, and L. Trevisan. </author> <title> Structure in approximation classes. </title> <booktitle> In Proceedings of the 1st Combinatorics and Computing Conference, </booktitle> <pages> pages 539-548. </pages> <publisher> LNCS 959, Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [CP91] <author> P. Crescenzi and A. Panconesi. </author> <title> Completeness in approximation classes. </title> <journal> Information and Computation, </journal> <volume> 93 </volume> <pages> 241-262, </pages> <year> 1991. </year> <note> Preliminary version in Proc. of FCT'89. 12 </note>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [CT94] <author> P. Crescenzi and L. Trevisan. </author> <title> On approximation scheme preserving reducibility and its applications. </title> <booktitle> In Proceedings of 14th Conference on Foundations of Software Technology and Theoretical Computer Science, </booktitle> <pages> pages 330-341. </pages> <publisher> LNCS 880, Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions. <p> Among the different proposals of approximation preserving reducibilities, the L-reducibility [PY91] can certainly be considered the most popular since, in a certain sense, it is the most simple and natural. However, more sophisticated definitions are necessary to obtain completeness results in natural approximation classes <ref> [KMSV94, CT94] </ref>. Moreover, the simplicity of the L-reducibility forces the "reducer" to use complicated tools. A complicated reduction between two optimization problems has several disdvantages. First, (needless to say) it is difficult to be explained and to be checked. <p> Our Results In this paper, we introduce a reduction technique based on the probabilistic method that allows to directly prove the Max NP-completeness of Max 3Sat. In order to obtain this result we make use of a more powerful reducibility than L-reducibility, called PTAS-reducibility <ref> [CT94] </ref>. Indeed, our technique further exploits such additional power and does not seem to work when restricted to the L-reducibility. As expected, more powerful reducibilities may allow simpler reductions. <p> A maximization problem is in the class Max NP if a constant B exists such that A can be expressed as a subproblem of Max GSAT-B. Definition 3 (PTAS-reducibility <ref> [CT94] </ref>) Let A and B be two optimization problems. A is said to be PTAS-reducible to B, in symbols A PTAS B, if three functions f , g, and c exist such that: 1. <p> x 2 I A , and for any y 2 sol B (f (x; r)), R B (f (x; r); y) c (r) implies R A (x; g (x; y; r)) r : The triple (f; g; c) is said to be a PTAS-reduction from A to B. 4 In <ref> [CT94] </ref> it is shown that if A PTAS B and B 2 PTAS, then A 2 PTAS. Finally, we summarize the main definitions from the theory of probabilistically checkable proofs. <p> For any fixed r &gt; 1, the running time of T (; r) is polynomial. Non-constructive approximation for minimization problems is defined similarly. Note that if a problem is in PTAS then it admits a non-constructive PTAS, but the converse is not necessarily true (see <ref> [CT94] </ref>). Lemma 10 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see [ALM + 92]). The other direction is more interesting. We use ideas from [CT94]. <p> <ref> [CT94] </ref>). Lemma 10 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see [ALM + 92]). The other direction is more interesting. We use ideas from [CT94]. For any 1=2 s &lt; c 1, let Gap 3Sat c;s be the following promise problem: given a 3SAT formula with m clauses, reject if opt () sm and accept if opt () cm. <p> It follows that ff j is a non-constructive r-approximate solution for . 2 8 The following result states that APX-complete problems are unlikely to have non-constructive PTAS's. This result has already been proved in <ref> [CT94] </ref> using the PCP theorem: the novelty of the proof that we give here is that it is PCP-free. Lemma 11 If an APX-complete problem A admits a non-constructive PTAS, then NP = co-NP.
Reference: [Fag74] <author> R. Fagin. </author> <title> Generalized first-order spectra and polynomial-time recognizable sets. </title> <booktitle> In SIAM-AMS Proceedings, </booktitle> <pages> pages 43-73, </pages> <year> 1974. </year>
Reference-contexts: In this paper, the authors, instead of searching for complete problems in natural (that is, computationally defined) approximation classes, focused on natural problems and found a reasonable class where they are complete. Their starting point was the logical characterization of NP <ref> [Fag74] </ref>. They obtained a class of APX optimization problems by introducing a notion of optimization in this characterization, called this class Max NP, and showed that several problems, including Max Sat, belong to it. However, they could not find any complete problem.
Reference: [GJ79] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: a Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: solving B? Starting from the deep background in computability theory, researchers first attacked this question by shifting their attention from the original optimization problems to their corresponding decision versions: the NP-completeness theory eventually arose and hundreds and hundreds of combinatorial problems were shown to be equivalently hard to be solved <ref> [GJ79] </ref>. Almost at the same time, however, it was noticed that, even though all known NP-complete problems are polynomial-time isomorphic, their corresponding optimization problems may behave in a drastically different way when dealing with approximate solutions [Joh74]. <p> We show that, unfortunately, at least a weaker version of the PCP theorem is necessary in order to prove the APX-completeness of Max 3Sat. Comparison with Local-Replacement Reductions. The most common technique to reduce a constraint satisfaction problem to another is the local-replacement one <ref> [GJ79] </ref>. In particular, the best known non-approximability results for several problems, including Max 3Sat and Max Cut, are derived using reductions of this kind [BGS95, TSSW96, H-as96]. Deriving more "efficient" reductions would imply stronger (possibly tight) non-approximability results. <p> For the definitions of most of the complexity classes used in this paper we refer the reader to one of the books 3 on the subject (see, for example, <ref> [GJ79, BaG88, BC93, Pap94] </ref>). An optimization problem A consists of: (1) the set I of instances, (2) for any instance x 2 I, a set sol (x) of solutions, and (3) for any instance x 2 I and for any solution y 2 sol (x), a measure m (x; y). <p> This solves an open question in [HMR + 94]. 6 Comparison with Local-Replacement Reductions Local-replacement reductions have played a fundamental role in proving NP-completeness results (see <ref> [GJ79] </ref>). In context of constraint satisfaction problems, a local-replacement reduction maps each constraint of the original problem into one or more constraints of the target, possibly introducing auxiliary variables. Unfortunately, in [TSSW96] it has been shown this kind of reductions have inherent limitations.
Reference: [GW94] <author> M. Goemans and D. Williamson. </author> <title> New 3/4-approximation algorithms for the maximum satisfiability problem. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 7(4) </volume> <pages> 656-666, </pages> <year> 1994. </year> <note> Preliminary version in Proc. of IPCO'93. </note>
Reference-contexts: The idea of probabilistically combining different solutions has been used in the design of approximation algorithms (e.g. in <ref> [GW94] </ref>) but we use it for the first time to develop an approximation-preserving reduction.
Reference: [H-as96] <author> J. H-astad. </author> <title> Getting optimal in-approximability results. </title> <type> Manuscript, </type> <month> September </month> <year> 1996. </year>
Reference-contexts: Comparison with Local-Replacement Reductions. The most common technique to reduce a constraint satisfaction problem to another is the local-replacement one [GJ79]. In particular, the best known non-approximability results for several problems, including Max 3Sat and Max Cut, are derived using reductions of this kind <ref> [BGS95, TSSW96, H-as96] </ref>. Deriving more "efficient" reductions would imply stronger (possibly tight) non-approximability results. Unfortunately, lower bounds for the efficiency of local-replacement reductions have been found [TSSW96]. In particular the reductions yielding the non-approximability results for Max 3Sat and Max Cut are optimal among local-replacement ones.
Reference: [HMR + 94] <author> H. B. Hunt III, M.V. Marathe, V. Radhakrishnan, S.S. Ravi, D.J. Rosenkrantz, and R.E. Stearns. </author> <title> Approximation schemes using L-reductions. </title> <booktitle> In Proceedings of 14th Conference on Foundations of Software Technology and Theoretical Computer Science, </booktitle> <pages> pages 342-353. </pages> <publisher> LNCS 880, Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The approximation schemes we describe are a composition of the reductions of Section 3 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [Bak94, HMR + 94, KM96] </ref>. To begin, we recall the definition of planar instance of a constraint satisfaction problem. Definition 13 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let be an instance of Max F over variable set X. <p> The reduction runs in linear time, it doesn't increase the size of the instance and preserves planarity of the incidence graph. A (1 + * 0 )-approximate solution for 0 can be found in linear time using Theorem 17. 2 Remark 19 (NC Approximation Schemes) Hunt et al. <ref> [HMR + 94] </ref> proved the following related result: for any fixed * &gt; 0, Max Planar k-CSP admits an (1+*)-approximate NC algorithm. <p> Since the reduction in the proof of Theorem 6 can be done in NC using k-wise independent distribution to do the derandomization, it follows that Max Planar GSAT-B admits a NC approximation scheme. This solves an open question in <ref> [HMR + 94] </ref>. 6 Comparison with Local-Replacement Reductions Local-replacement reductions have played a fundamental role in proving NP-completeness results (see [GJ79]). In context of constraint satisfaction problems, a local-replacement reduction maps each constraint of the original problem into one or more constraints of the target, possibly introducing auxiliary variables.
Reference: [Joh74] <author> D.S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 9 </volume> <pages> 256-278, </pages> <year> 1974. </year>
Reference-contexts: Almost at the same time, however, it was noticed that, even though all known NP-complete problems are polynomial-time isomorphic, their corresponding optimization problems may behave in a drastically different way when dealing with approximate solutions <ref> [Joh74] </ref>. As a result, the development of approximation algorithms (that is, algorithms yielding a solution whose cost is within a multiplicative constant factor from the optimum) immediately revealed itself as a useful tool to cope with the NP-hardness of a combinatorial optimization problem. <p> The simplicity of the technique will allow us both to clarify already known structural results and to obtain new algorithmic ones. Before stating our results, we recall some previous ones about completeness in approximation classes. The formal definition of approximation algorithm and performance ratio is due to <ref> [Joh74] </ref>. Shortly after, several approximation classes were defined, including APX (that is, the class of problems that are approximable within some constant factor) and PTAS (that is, the class of problems that are approximable within any constant factor).
Reference: [Kha96] <author> S. </author> <title> Khanna. </title> <type> Personal Communication, </type> <year> 1996. </year>
Reference: [KM96] <author> S. Khanna and R. Motwani. </author> <title> Towards a syntactic characterization of PTAS. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing, </booktitle> <year> 1996. </year>
Reference-contexts: Our reduction gives indeed an approximation scheme for planar restrictions of Max Sat and Max GSAT-B that works in linear time (as opposed to a previous scheme running in time n O (1=*) <ref> [KM96] </ref>). Comparison with PCP-based Reductions. Our result would have been impossible to obtain by using PCP-based reductions for at least two reasons: 1. It is very difficult to characterize the outcome of a PCP-based reduction, and so to understand which set of instances will be mapped into which. 2. <p> The approximation schemes we describe are a composition of the reductions of Section 3 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [Bak94, HMR + 94, KM96] </ref>. To begin, we recall the definition of planar instance of a constraint satisfaction problem. Definition 13 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let be an instance of Max F over variable set X. <p> For a constraint family F, Max Planar F is the restriction of Max F to instances whose incidence graph is planar. We will focus on Max Planar k-CSP, Max Planar Sat, and Max Planar GSAT-B. Khanna and Motwani <ref> [KM96] </ref> prove that the latter two problems have a PTAS that computes (1 + *)-approximate solutions in time n O (1=*) . <p> The recursion solves as T (m; n) = O (2 k (h+1) (m + n)) = O (m + n). 2 Theorem 17 For fixed * &gt; 0, Max Planar k-CSP admits an (1 + *)-approximate linear time algorithm, Proof: It suffices to observe that from the proof of <ref> [KM96, Theorem 1] </ref> (see also [Bak94, Theorem 1]) and from a result of [Bod88] it follows that (1 + *)-approximating Max Planar k-CSP reduces to optimally solve Max k-CSP restricted to instances whose incidence graph has treewidth O (1=*).
Reference: [KMSV94] <author> S. Khanna, R. Motwani, M. Sudan, and U. Vazirani. </author> <title> On syntactic versus computational views of approximability. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 819-830, </pages> <year> 1994. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions. <p> E-mail: trevisan@cui.unige.ch. Work done at the Universita di Roma "La Sapienza". 1 were developed passing through the use of expander graphs [PY91] and arriving at the extremely complicated and powerful toolkit of probabilistically checkable proofs <ref> [KMSV94] </ref>. Among the different proposals of approximation preserving reducibilities, the L-reducibility [PY91] can certainly be considered the most popular since, in a certain sense, it is the most simple and natural. However, more sophisticated definitions are necessary to obtain completeness results in natural approximation classes [KMSV94, CT94]. <p> Among the different proposals of approximation preserving reducibilities, the L-reducibility [PY91] can certainly be considered the most popular since, in a certain sense, it is the most simple and natural. However, more sophisticated definitions are necessary to obtain completeness results in natural approximation classes <ref> [KMSV94, CT94] </ref>. Moreover, the simplicity of the L-reducibility forces the "reducer" to use complicated tools. A complicated reduction between two optimization problems has several disdvantages. First, (needless to say) it is difficult to be explained and to be checked. <p> The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered and other approximation classes with natural complete problems were introduced [PR93, KT94, KT95]. In <ref> [KMSV94] </ref> the logical approach was finally reconciled with the computational one. In fact, by making use of the PCP theorem [ALM + 92], the authors proved that Max 3Sat is APX-complete. <p> As expected, more powerful reducibilities may allow simpler reductions. The relevance of our new Max NP-completeness proof is due to the fact that it does not use the PCP machinery (thus solving an open question posed in <ref> [KMSV94] </ref>). Moreover it has both structural and algorithmic consequences. From a structural point of view, the Max NP-completeness of Max 3Sat means that Max NP 2 problems are not harder to approximate than Max SNP ones.
Reference: [KT94] <author> P.G. Kolaitis and M.N. Thakur. </author> <title> Logical definability of NP optimization problems. </title> <journal> Information and Computation, </journal> <volume> 115(2) </volume> <pages> 321-353, </pages> <year> 1994. </year>
Reference-contexts: The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered and other approximation classes with natural complete problems were introduced <ref> [PR93, KT94, KT95] </ref>. In [KMSV94] the logical approach was finally reconciled with the computational one. In fact, by making use of the PCP theorem [ALM + 92], the authors proved that Max 3Sat is APX-complete. <p> An optimization problem A belongs to the class PTAS if a polynomial-time approximation scheme for A exists, that is, an algorithm T such that, for any fixed rational r &gt; 1, T (; r) is a polynomial-time r-approximate algorithm for A. We refer to [PY91] (see also <ref> [KT94] </ref>) for a formal definition of Max NP and Max SNP. We here give informal but equivalent definitions.
Reference: [KT95] <author> P.G. Kolaitis and M.N. Thakur. </author> <title> Approximation properties of NP minimization classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50 </volume> <pages> 391-411, </pages> <year> 1995. </year> <note> Preliminary version in Proc. of Structures91. </note>
Reference-contexts: The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered and other approximation classes with natural complete problems were introduced <ref> [PR93, KT94, KT95] </ref>. In [KMSV94] the logical approach was finally reconciled with the computational one. In fact, by making use of the PCP theorem [ALM + 92], the authors proved that Max 3Sat is APX-complete.
Reference: [OM87] <author> P. Orponen and H. Mannila. </author> <title> On approximation preserving reductions: complete problems and robust measures. </title> <type> Technical Report C-1987-28, </type> <institution> Department of Computer Science, University of Helsinki, </institution> <year> 1987. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [Pap94] <author> C.H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: For the definitions of most of the complexity classes used in this paper we refer the reader to one of the books 3 on the subject (see, for example, <ref> [GJ79, BaG88, BC93, Pap94] </ref>). An optimization problem A consists of: (1) the set I of instances, (2) for any instance x 2 I, a set sol (x) of solutions, and (3) for any instance x 2 I and for any solution y 2 sol (x), a measure m (x; y).
Reference: [PM81] <author> A. Paz and S. Moran. </author> <title> Non deterministic polynomial optimization problems and their approximation. </title> <journal> Theoretical Computer Science, </journal> <volume> 15 </volume> <pages> 251-277, </pages> <year> 1981. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [PR93] <author> A. Panconesi and D. Ranjan. </author> <title> Quantifiers and approximations. </title> <journal> Theoretical Computer Science, </journal> <volume> 107 </volume> <pages> 145-163, </pages> <year> 1993. </year> <note> Preliminary version in Proc. of STOC'90. 13 </note>
Reference-contexts: The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered and other approximation classes with natural complete problems were introduced <ref> [PR93, KT94, KT95] </ref>. In [KMSV94] the logical approach was finally reconciled with the computational one. In fact, by making use of the PCP theorem [ALM + 92], the authors proved that Max 3Sat is APX-complete.
Reference: [PY91] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Preliminary version in Proc. of STOC'88. </note>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions. <p> E-mail: piluc@dsi.uniroma.it. y Centre Universitaire d'Informatique, Universite de Geneve, Rue General-Dufour 24, CH-1211, Geneve, Switzer land. E-mail: trevisan@cui.unige.ch. Work done at the Universita di Roma "La Sapienza". 1 were developed passing through the use of expander graphs <ref> [PY91] </ref> and arriving at the extremely complicated and powerful toolkit of probabilistically checkable proofs [KMSV94]. Among the different proposals of approximation preserving reducibilities, the L-reducibility [PY91] can certainly be considered the most popular since, in a certain sense, it is the most simple and natural. <p> E-mail: trevisan@cui.unige.ch. Work done at the Universita di Roma "La Sapienza". 1 were developed passing through the use of expander graphs <ref> [PY91] </ref> and arriving at the extremely complicated and powerful toolkit of probabilistically checkable proofs [KMSV94]. Among the different proposals of approximation preserving reducibilities, the L-reducibility [PY91] can certainly be considered the most popular since, in a certain sense, it is the most simple and natural. However, more sophisticated definitions are necessary to obtain completeness results in natural approximation classes [KMSV94, CT94]. Moreover, the simplicity of the L-reducibility forces the "reducer" to use complicated tools. <p> In a few years the field developed rapidly on the algorithmic side but only a few, unsatisfying, hardness results came up, until a novel approach was introduced in <ref> [PY91] </ref>. In this paper, the authors, instead of searching for complete problems in natural (that is, computationally defined) approximation classes, focused on natural problems and found a reasonable class where they are complete. Their starting point was the logical characterization of NP [Fag74]. <p> In fact, by making use of the PCP theorem [ALM + 92], the authors proved that Max 3Sat is APX-complete. As a corollary of this result, it follows that Max 3Sat is Max NP-complete thus answering a question posed in <ref> [PY91] </ref>. Our Results In this paper, we introduce a reduction technique based on the probabilistic method that allows to directly prove the Max NP-completeness of Max 3Sat. In order to obtain this result we make use of a more powerful reducibility than L-reducibility, called PTAS-reducibility [CT94]. <p> In contrast, our reduction gives a very simple explanation of the relation between Max NP and Max SNP. Recall that, roughly speaking, the only difference between the two classes is that in the logical definition of a Max NP problem arbitrarily long disjunctions are allowed <ref> [PY91] </ref>. However, long disjunctions are easy to satisfy (in a probabilistic sense) and thus they cannot make the problem harder. From an algorithmic point of view, an approximation-preserving reduction from a problem A to a problem B can yield an approximation scheme in the following case. <p> An optimization problem A belongs to the class PTAS if a polynomial-time approximation scheme for A exists, that is, an algorithm T such that, for any fixed rational r &gt; 1, T (; r) is a polynomial-time r-approximate algorithm for A. We refer to <ref> [PY91] </ref> (see also [KT94]) for a formal definition of Max NP and Max SNP. We here give informal but equivalent definitions. <p> Theorem 8 Max 3Sat is Max NP-complete under PTAS-reductions. 7 Proof: The reduction will be the composition of the reduction from Max GSAT-B to Max kB-CSP given in Theorem 6 and of the standard reduction from Max kB-CSP to Max 3Sat <ref> [PY91] </ref>. For any h, the Max h-CSP problem is in Max SNP, and thus a PTAS-reduction (f h ; g h ; c h ) exists from Max h-CSP to Max 3Sat. Let be an instance of Max GSAT-B, and let r &gt; 1 be fixed.
Reference: [Sim89] <author> H.U. Simon. </author> <title> Continous reductions among combinatorial optimization problems. </title> <journal> Acta Informatica, </journal> <volume> 26 </volume> <pages> 771-785, </pages> <year> 1989. </year>
Reference-contexts: On the one hand, researchers have studied which kind of reducibility is suitable to compare the approximation properties of optimization problems <ref> [ADP80, PM81, OM87, Sim89, CP91, PY91, KMSV94, CT94, CKST95] </ref>. It was clear, indeed, that the many-to-one polynomial-time reducibility could not be used since, not only a function mapping instances into instances is necessary, but also a function mapping solutions into solutions.
Reference: [TSSW96] <author> L. Trevisan, G.B. Sorkin, M. Sudan, and D.P. Williamson. Gadgets, </author> <title> approximation, and linear programming. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Comparison with Local-Replacement Reductions. The most common technique to reduce a constraint satisfaction problem to another is the local-replacement one [GJ79]. In particular, the best known non-approximability results for several problems, including Max 3Sat and Max Cut, are derived using reductions of this kind <ref> [BGS95, TSSW96, H-as96] </ref>. Deriving more "efficient" reductions would imply stronger (possibly tight) non-approximability results. Unfortunately, lower bounds for the efficiency of local-replacement reductions have been found [TSSW96]. In particular the reductions yielding the non-approximability results for Max 3Sat and Max Cut are optimal among local-replacement ones. <p> In particular, the best known non-approximability results for several problems, including Max 3Sat and Max Cut, are derived using reductions of this kind [BGS95, TSSW96, H-as96]. Deriving more "efficient" reductions would imply stronger (possibly tight) non-approximability results. Unfortunately, lower bounds for the efficiency of local-replacement reductions have been found <ref> [TSSW96] </ref>. In particular the reductions yielding the non-approximability results for Max 3Sat and Max Cut are optimal among local-replacement ones. <p> In context of constraint satisfaction problems, a local-replacement reduction maps each constraint of the original problem into one or more constraints of the target, possibly introducing auxiliary variables. Unfortunately, in <ref> [TSSW96] </ref> it has been shown this kind of reductions have inherent limitations. For example, it is shown that it is not possible to use local-replacement techniques to give an approximation-preserving reduction from Max k (n)SAT to Max l (n)SAT if lim n k (n)=l (n) = 1. <p> For these instances an optimum solution can be found in linear time. 2 We conclude that our technique for shrinking disjunctions produces reductions that beat the local-replacement technique, that is, that are provably better than any possible reduction by local replacement that fits the framework of <ref> [TSSW96] </ref>. This encourages to look for simple techniques to obtain reductions to Max Cut and Max 2Sat beating the ones in [BGS95, TSSW96]: a positive answer would imply improved non-approximability results for these problems. <p> This encourages to look for simple techniques to obtain reductions to Max Cut and Max 2Sat beating the ones in <ref> [BGS95, TSSW96] </ref>: a positive answer would imply improved non-approximability results for these problems.
Reference: [Yan94] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <journal> Journal of Algorithms, </journal> <volume> 17 </volume> <pages> 475-502, </pages> <year> 1994. </year> <note> Preliminary version in Proc. of SODA'92. 14 </note>
Reference-contexts: Using the method of conditional expectation [AS92a] (see also <ref> [Yan94] </ref>) we can find in linear time an assignment t such that m (; t ) E [m (; t R )]. That is, the performance ratio of t is at most r. 2 From the proof of the above theorem we have the following result.
References-found: 32

