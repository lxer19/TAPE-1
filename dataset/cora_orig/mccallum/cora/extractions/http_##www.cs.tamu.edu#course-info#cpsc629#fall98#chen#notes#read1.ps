URL: http://www.cs.tamu.edu/course-info/cpsc629/fall98/chen/notes/read1.ps
Refering-URL: http://www.cs.tamu.edu/course-info/cpsc629/fall98/chen/notes/
Root-URL: http://www.cs.tamu.edu
Email: chen@cs.tamu.edu  
Title: Algorithmic Graph Embeddings  
Author: Jianer Chen U. S. A. 
Address: College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Abstract: fl A preliminary version of this work was reported at The First Annual International Computing and Combinatorics Conference (COCOON'95), Lecture Notes in Computer Science 959, pp. 151-160. y Supported in part by the National Science Foundation under Grant CCR-9110824. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, J. E. Hopcroft, and J. D. Ullman, </author> <title> The Design and 23 Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley, </publisher> <year> 1974. </year>
Reference-contexts: Data structures for sets from a universe with a total ordering have been studied extensively <ref> [1] </ref>. The discussions can be easily generalized to sequences from a universe without a total ordering. Let U be a universe that may not have a total ordering. A sequence is an ordered list of elements from U , in which each element of U may appear more than once. <p> Each element appearance in the sequence will be called a node. For each sequence, we also assume a root that contains the name of the sequence. With straightforward modifications in the discussion for data structures for sets from a universe with a total ordering <ref> [1] </ref>, a sequence can be represented by a concatenable data structure, such as a 2-3 tree, which supports each of the following operations in time O (log n) on a sequence of n nodes: * S-INSERT (r; v; x).
Reference: [2] <author> J. Chen, </author> <title> A linear time algorithm for isomorphism of graphs of bounded average genus, </title> <note> SIAM J. on Discrete Mathematics 7, </note> <year> (1994), </year> <pages> pp. 614-631. </pages>
Reference-contexts: Recently, Mohar described a linear time algorithm for embedding graphs of crosscap number 1 into the projective plane [24], and Chen described a linear time algorithm for embedding graphs of bounded average genus <ref> [2] </ref>. Chen, Kanchi, and Kanevsky have also studied approximation algorithms for graph minimum genus embeddings [10]. An open problem posed by Furst, Gross, and McGeoch [17] is to determine the complexity of graph embeddings into a general surface. <p> There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces. <p> The average genus of a graph plays an important role in the recent study of topological invariants of graphs <ref> [2, 5, 6, 7, 19] </ref>. Intuitively, the average genus of a graph can be computed by probabilistic sampling. In the following, we will discuss how this idea can be precisely formulated. We first prove two lemmas.
Reference: [3] <author> J. Chen, </author> <title> Algorithmic graph embeddings, </title> <booktitle> Lecture Notes in Computer Science 959, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> (1995), </year> <pages> pp. 151-160. </pages>
Reference: [4] <author> J. Chen, D. Archdeacon, and J. L. Gross, </author> <title> Maximum genus and connectivity, </title> <booktitle> Discrete Mathematics 149 (1996), </booktitle> <pages> pp. 19-29. </pages>
Reference-contexts: There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces.
Reference: [5] <author> J. Chen and J. L. Gross, </author> <title> Limit points for average genus I. 3-connected and 2-connected simplicial graphs, </title> <journal> J. Comb. Theory Ser. </journal> <volume> B 55, </volume> <year> (1992), </year> <pages> pp. 83-103. </pages>
Reference-contexts: There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic <ref> [5, 6, 7, 19] </ref>. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems [2, 4, 8, 15, 16, 17, 25]. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. <p> We will also study the complexity of embedding a graph into a surface of "average genus", which is an important topological invariant of a graph <ref> [5, 6, 7] </ref>. We present an O (m 2 ) time randomized algorithm that, given a graph G and an integer k, either reports with a very small error probability that k is not equal to the average genus of G, or produces an embedding of genus k for G. <p> The average genus of a graph plays an important role in the recent study of topological invariants of graphs <ref> [2, 5, 6, 7, 19] </ref>. Intuitively, the average genus of a graph can be computed by probabilistic sampling. In the following, we will discuss how this idea can be precisely formulated. We first prove two lemmas.
Reference: [6] <author> J. Chen and J. L. Gross, </author> <title> Limit points for average genus II. 2-connected non-simplicial graphs, </title> <journal> J. Comb. Theory Ser. </journal> <volume> B 56, </volume> <year> (1992), </year> <pages> pp. 108-129. </pages>
Reference-contexts: There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic <ref> [5, 6, 7, 19] </ref>. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems [2, 4, 8, 15, 16, 17, 25]. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. <p> We will also study the complexity of embedding a graph into a surface of "average genus", which is an important topological invariant of a graph <ref> [5, 6, 7] </ref>. We present an O (m 2 ) time randomized algorithm that, given a graph G and an integer k, either reports with a very small error probability that k is not equal to the average genus of G, or produces an embedding of genus k for G. <p> The average genus of a graph plays an important role in the recent study of topological invariants of graphs <ref> [2, 5, 6, 7, 19] </ref>. Intuitively, the average genus of a graph can be computed by probabilistic sampling. In the following, we will discuss how this idea can be precisely formulated. We first prove two lemmas.
Reference: [7] <author> J. Chen and J. L. Gross, </author> <title> Kuratowski-type theorems for average genus, </title> <journal> J. Comb. Theory Ser. </journal> <volume> B 57, </volume> <year> (1993), </year> <pages> pp. 100-211. </pages>
Reference-contexts: There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic <ref> [5, 6, 7, 19] </ref>. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems [2, 4, 8, 15, 16, 17, 25]. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. <p> We will also study the complexity of embedding a graph into a surface of "average genus", which is an important topological invariant of a graph <ref> [5, 6, 7] </ref>. We present an O (m 2 ) time randomized algorithm that, given a graph G and an integer k, either reports with a very small error probability that k is not equal to the average genus of G, or produces an embedding of genus k for G. <p> The average genus of a graph plays an important role in the recent study of topological invariants of graphs <ref> [2, 5, 6, 7, 19] </ref>. Intuitively, the average genus of a graph can be computed by probabilistic sampling. In the following, we will discuss how this idea can be precisely formulated. We first prove two lemmas.
Reference: [8] <author> J. Chen and S. P. Kanchi, </author> <title> Graph embeddings and graph ear decompositions, </title> <booktitle> Lecture Notes in Computer Science 790, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> (1994), </year> <pages> pp. 376-387. </pages>
Reference-contexts: There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces.
Reference: [9] <author> J. Chen, S. P. Kanchi, and J. L. Gross, </author> <title> A tight lower bound on the maximum genus of a simplicial graph, </title> <booktitle> Discrete Mathematics 156, </booktitle> <year> (1996), </year> <pages> pp. 83-102. </pages>
Reference-contexts: Assume the contrary. Then there are less than ( * 4 ) G embeddings of G of genus (1 *)fl avg (G). Let fl max (G) be the maximum genus of the graph G. Recently, Chen, Kanchi, and Gross have proved that fl max (G) &lt; 4fl avg (G) <ref> [9] </ref>. We have fl avg (G) = i&lt;(1*)fl avg (G) i g i + i (1*)fl avg (G) i g i P P G (1 *)fl avg (G) G + 4fl avg (G)( * G This contradiction proves the lemma.
Reference: [10] <author> J. Chen, S. P. Kanchi, and A. Kanevsky, </author> <title> On the complexity of graph embeddings, </title> <booktitle> Lecture Notes in Computer Science 709, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> (1993), </year> <pages> pp. 234-245. </pages>
Reference-contexts: Recently, Mohar described a linear time algorithm for embedding graphs of crosscap number 1 into the projective plane [24], and Chen described a linear time algorithm for embedding graphs of bounded average genus [2]. Chen, Kanchi, and Kanevsky have also studied approximation algorithms for graph minimum genus embeddings <ref> [10] </ref>. An open problem posed by Furst, Gross, and McGeoch [17] is to determine the complexity of graph embeddings into a general surface. There are several theoretical and practical reasons why this problem should be studied. <p> We will interchangeably use the phrases "an embedding of a graph" and "a rotation system of a graph". Edge insertion and edge deletion are among the most important and fundamental operations for graph embeddings. Most proposed graph embedding algorithms <ref> [10, 13, 14, 17, 21] </ref> are based on edge insertion and edge deletion. We first discuss the effect of inserting a new edge into an embedded graph. Let (G) be an embedding of a connected graph G. <p> A closely related problem is the complexity of constructing low genus embeddings for a graph. It is unknown whether there is a polynomial time algorithm that approximates the minimum genus embedding of a graph to a constant ratio. A recent result by Chen, Kanchi, and Kanevsky <ref> [10] </ref> partially hints the difficulty of approximating graph minimum genus embeddings: for any real number *, 0 * &lt; 1, the problem of embedding a graph G of n vertices into a surface of genus fl min (G) + n * is NP-hard.
Reference: [11] <author> G. Di Battista, P. Eades, and R. Tamassia, </author> <title> Algorithms for automatic graph drawing: an annotated bibliography, </title> <type> Tech. Report, </type> <institution> (1993), Dept. Computer Science, Brown University. </institution>
Reference-contexts: The most studied is graph planar embeddings. The well-known Hopcroft-Tarjan algorithm shows that a planar embedding of a planar graph can be constructed in linear time [21]. Graph planar embeddings have been studied extensively in a variety of areas such as Computational Geometry [25] and Graph Drawing <ref> [11] </ref>. On the other hand, the computational complexity of constructing em-beddings of a graph into non-planar surfaces is not well-understood yet.
Reference: [12] <author> H. Djidjev and J. Reif, </author> <title> An efficient algorithm for the genus problem with explicit construction of forbidden subgraphs, </title> <booktitle> Proc. 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <year> (1991), </year> <pages> pp. 337-347. 24 </pages>
Reference-contexts: Filotti, Miller, and Reif [14] derived an O (n O (k) ) time algorithm that embeds graphs of minimum genus k into a surface of genus k, which was improved recently by Djidjev and Reif <ref> [12] </ref> who developed an algorithm of time O (2 O (k)! n O (1) ). Frederickson and others have considered the complexity of graph embeddings that give the minimum "hammock number" or minimum "face cover", and studied their applications to other computational graph problems [15, 16]. <p> Proof. This is because that a maximum genus embedding of a graph G can be constructed in time O (n 4 log 6 n) [17]. Theorem 5.5 covers in particular the class of graphs whose minimum genus is bounded by a fixed constant <ref> [12, 14] </ref>. Now we study the graph embeddings that are related to the "average genus" of the graphs.
Reference: [13] <author> I. S. Filotti, </author> <title> An algorithm for imbedding cubic graphs in the torus, </title> <journal> Journal of Computer and System Sciences 20, </journal> <year> (1980), </year> <pages> pp. 255-276. </pages>
Reference-contexts: It is demonstrated by Furst, Gross, and McGeoch [17] that a maximum genus embedding of a graph can be constructed in time O (n 4 log 6 n). Filotti described an O (n 6 ) time algorithm for embedding cubic graphs of minimum genus 1 into the torus <ref> [13] </ref>. <p> We will interchangeably use the phrases "an embedding of a graph" and "a rotation system of a graph". Edge insertion and edge deletion are among the most important and fundamental operations for graph embeddings. Most proposed graph embedding algorithms <ref> [10, 13, 14, 17, 21] </ref> are based on edge insertion and edge deletion. We first discuss the effect of inserting a new edge into an embedded graph. Let (G) be an embedding of a connected graph G.
Reference: [14] <author> I. S. Filotti, G. L. Miller, and J. H. Reif, </author> <title> On determining the genus of a graph in O(v O(g) ) steps, </title> <booktitle> Proc. 11th Annual ACM Symposium on Theory of Computing, </booktitle> <year> (1979), </year> <pages> pp. 27-37. </pages>
Reference-contexts: Filotti described an O (n 6 ) time algorithm for embedding cubic graphs of minimum genus 1 into the torus [13]. Filotti, Miller, and Reif <ref> [14] </ref> derived an O (n O (k) ) time algorithm that embeds graphs of minimum genus k into a surface of genus k, which was improved recently by Djidjev and Reif [12] who developed an algorithm of time O (2 O (k)! n O (1) ). <p> We will interchangeably use the phrases "an embedding of a graph" and "a rotation system of a graph". Edge insertion and edge deletion are among the most important and fundamental operations for graph embeddings. Most proposed graph embedding algorithms <ref> [10, 13, 14, 17, 21] </ref> are based on edge insertion and edge deletion. We first discuss the effect of inserting a new edge into an embedded graph. Let (G) be an embedding of a connected graph G. <p> Proof. This is because that a maximum genus embedding of a graph G can be constructed in time O (n 4 log 6 n) [17]. Theorem 5.5 covers in particular the class of graphs whose minimum genus is bounded by a fixed constant <ref> [12, 14] </ref>. Now we study the graph embeddings that are related to the "average genus" of the graphs.
Reference: [15] <author> G. N. Frederickson, </author> <title> Using cellular graph embeddings in solving all pairs shortest paths problems, </title> <journal> Journal of Algorithms 19, </journal> <year> (1995), </year> <pages> pp. 45-85. </pages>
Reference-contexts: Frederickson and others have considered the complexity of graph embeddings that give the minimum "hammock number" or minimum "face cover", and studied their applications to other computational graph problems <ref> [15, 16] </ref>. Recently, Mohar described a linear time algorithm for embedding graphs of crosscap number 1 into the projective plane [24], and Chen described a linear time algorithm for embedding graphs of bounded average genus [2]. <p> There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces.
Reference: [16] <author> G. N. Frederickson and R. Janardan, </author> <title> Designing networks with compact routing tables, </title> <type> Algorithmica 3, </type> <year> (1988), </year> <pages> pp. 171-190. </pages>
Reference-contexts: Frederickson and others have considered the complexity of graph embeddings that give the minimum "hammock number" or minimum "face cover", and studied their applications to other computational graph problems <ref> [15, 16] </ref>. Recently, Mohar described a linear time algorithm for embedding graphs of crosscap number 1 into the projective plane [24], and Chen described a linear time algorithm for embedding graphs of bounded average genus [2]. <p> There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces.
Reference: [17] <author> M. L. Furst, J. L. Gross, and L. A. McGeoch, </author> <title> Finding a maximum-genus graph imbedding, </title> <journal> Journal of ACM 35-3, </journal> <year> (1988). </year> <pages> pp. 523-534. </pages>
Reference-contexts: Algorithms have also been developed for embedding a graph into a variety of surfaces. It is demonstrated by Furst, Gross, and McGeoch <ref> [17] </ref> that a maximum genus embedding of a graph can be constructed in time O (n 4 log 6 n). Filotti described an O (n 6 ) time algorithm for embedding cubic graphs of minimum genus 1 into the torus [13]. <p> Chen, Kanchi, and Kanevsky have also studied approximation algorithms for graph minimum genus embeddings [10]. An open problem posed by Furst, Gross, and McGeoch <ref> [17] </ref> is to determine the complexity of graph embeddings into a general surface. There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. <p> There are several theoretical and practical reasons why this problem should be studied. First, the distribution of graph embeddings into topological surfaces provides a very useful isomorphism heuristic [5, 6, 7, 19]. Secondly, embedding a graph into a certain surface helps efficiently solving other computational graph problems <ref> [2, 4, 8, 15, 16, 17, 25] </ref>. Finally, study of graph embeddings has direct applications in the areas such as circuit layout and VLSI design. In this paper, we will develop a number of efficient algorithms that embed a graph into a variety of surfaces. <p> We will interchangeably use the phrases "an embedding of a graph" and "a rotation system of a graph". Edge insertion and edge deletion are among the most important and fundamental operations for graph embeddings. Most proposed graph embedding algorithms <ref> [10, 13, 14, 17, 21] </ref> are based on edge insertion and edge deletion. We first discuss the effect of inserting a new edge into an embedded graph. Let (G) be an embedding of a connected graph G. <p> Proof. This is because that a maximum genus embedding of a graph G can be constructed in time O (n 4 log 6 n) <ref> [17] </ref>. Theorem 5.5 covers in particular the class of graphs whose minimum genus is bounded by a fixed constant [12, 14]. Now we study the graph embeddings that are related to the "average genus" of the graphs. <p> Proof. Similar to the analysis in Theorem 5.8, we first construct an embedding (G) of genus bounded by round (fl avg (G)) from a random sample set of O (m) embeddings. We also construct a maximum genus embedding 0 (G) for the graph G in polynomial time <ref> [17] </ref>. Now we apply Theorem 5.1. The error probability ffi in Theorem 5.9 can actually by bounded by ffi = O (2 m d ) for any constant d.
Reference: [18] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability: </title>
Reference-contexts: On the other hand, the computational complexity of constructing em-beddings of a graph into non-planar surfaces is not well-understood yet. The complexity of the graph minimum genus problem remained as a basic open problem in Garey and Johnson's list <ref> [18] </ref> for ten years until Thomassen proved that the problem is NP-complete [27]. Algorithms have also been developed for embedding a graph into a variety of surfaces.
References-found: 18

