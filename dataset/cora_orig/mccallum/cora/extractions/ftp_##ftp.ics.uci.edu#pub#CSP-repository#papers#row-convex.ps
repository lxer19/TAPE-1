URL: ftp://ftp.ics.uci.edu/pub/CSP-repository/papers/row-convex.ps
Refering-URL: http://www.ics.uci.edu/~mlearn/MLPapers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: vanbeek@cs.ualberta.ca  dechter@ics.uci.edu.  
Title: On the Minimality and Global Consistency of Row-Convex Constraint Networks  
Author: Peter van Beek Rina Dechter 
Address: Edmonton, Alberta, Canada T6G 2H1  Irvine  
Affiliation: Department of Computing Science University of Alberta  Department of Computer and Information Science University of California,  
Abstract: Constraint networks have been shown to be useful in formulating such diverse problems as scene labeling, natural language parsing, and temporal reasoning. Given a constraint network, we often wish to (i) find a solution that satisfies the constraints and (ii) find the corresponding minimal network where the constraints are as explicit as possible. Both tasks are known to be NP-complete in the general case. Task (i) is usually solved using a backtracking algorithm, and task (ii) is often solved only approximately by enforcing various levels of local consistency. In this paper, we identify a property of binary constraints called row convexity and show its usefulness in deciding when a form of local consistency called path consistency is sufficient to guarantee that a network is both minimal and globally consistent. Globally consistent networks have the property that a solution can be found without backtracking. We show that one can test for the row convexity property efficiently and we show, by examining applications of constraint networks discussed in the literature, that our results are useful in practice. Thus, we identify a class of binary constraint fl A preliminary version of this paper appeared in Proceedings of the Tenth National Con ference on Artificial Intelligence, pages 447-452, AAAI Press / The MIT Press, 1992. y This work was supported in part by the Natural Sciences and Engineering Research Coun cil of Canada. z This work was supported in part by NSF grant IRI-9157636, by Air Force Office of Sci entific Research, AFOSR 900136, by Toshiba of America and by a Xerox grant. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. F. Allen. </author> <title> Maintaining knowledge about temporal intervals. </title> <journal> Comm. ACM, </journal> <volume> 26 </volume> <pages> 832-843, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction Constraint networks have been shown to be useful in formulating such diverse problems as graph coloring [24], scene labeling [16, 28], natural language parsing [22], and temporal reasoning <ref> [1] </ref>. A constraint network is defined by a set of variables, a domain of values for each variable, and a set of constraints between the variables.
Reference: [2] <author> S. Arnborg, D. G. Corneil, and A. Proskurowski. </author> <title> Complexity of finding an embedding in k-trees. </title> <journal> SIAM Journal of Algebraic Discrete Methods, </journal> <volume> 8 </volume> <pages> 177-184, </pages> <year> 1987. </year>
Reference-contexts: The induced width, W fl, of such an embedding is its maximal clique size and the induced width W fl of an arbitrary graph is the minimum induced width over all of its tree-embeddings. It is well known that finding the minimal width embedding is NP-hard <ref> [2] </ref>, nevertheless every ordering of the variables d, yields a simple to compute upper bound denoted W fl (d) (see [9]). The complexity of Directional-Relational-PC along d can be bounded as a function of W fl (d) of its constraint graph. <p> Specifically, it was shown that the time complexity and size of the network generated by Directional-Relational-PC along d is O (exp (W fl (d) + 1)). It is known that finding the induced width of a graph is NP-complete <ref> [2] </ref>, nevertheless any arbitrary ordering d is associated with a simple bound wfl (d) that can be computed efficiently. 22 6 Conclusions Constraint networks have been shown to have many applications.
Reference: [3] <author> C. Beeri, R. Fagin, D. Maier, and M. Yannakakis. </author> <title> On the desirability of acyclic database schemes. </title> <journal> J. ACM, </journal> <volume> 30 </volume> <pages> 479-513, </pages> <year> 1983. </year>
Reference-contexts: Dechter and Pearl [8] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [9] generalize the results on trees to hyper-trees which are called acyclic databases in the database community <ref> [3] </ref>.
Reference: [4] <author> K. S. Booth and G. S. Lueker. </author> <title> Testing for the consecutive ones property, interval graphs, and graph planarity using pq-tree algorithms. </title> <journal> J. Comput. Syst. Sci., </journal> <volume> 13 </volume> <pages> 335-379, </pages> <year> 1976. </year>
Reference-contexts: How can we distinguish this case from the case where no ordering of the domains will result in row convexity? The following theorem shows that we can test for this property efficiently. Theorem 2 (Booth and Lueker <ref> [4] </ref>) An m fi n (0,1)-matrix specified by its f nonzero entries can be tested for whether a permutation of the columns exists such that the matrix is row convex in O (m + n + f ) steps. Example 4.
Reference: [5] <author> M. B. Clowes. </author> <title> On seeing things. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: So, we can find a solution 8 and the minimal network for the class of constraint networks characterized by Theorem 1 in O (d 3 n 3 ) time. Example 1. Scene labeling in computer vision <ref> [5, 16] </ref> can be formulated as a problem on constraint networks. We use an example to illustrate the application of Theorem 1. Figure 2 shows the variables in the constraint network and the constraints; Figure 1 shows the domains of the variables and the ordering imposed.
Reference: [6] <author> R. Dechter. </author> <title> From local to global consistency. </title> <journal> Artificial Intelligence, </journal> <volume> 55 </volume> <pages> 87-107, </pages> <year> 1992. </year>
Reference-contexts: A strongly n-consistent network is called globally consistent. Globally consistent networks have the property that any consistent 4 instantiation of a subset of the variables can be extended to a consistent instan--tiation of all of the variables without backtracking <ref> [6] </ref>. A strongly n-consistent network is also minimal. However, the converse is not true as it is possible for a network to be minimal but not strongly n-consistent. <p> Dechter and Pearl [9] generalize the results on trees to hyper-trees which are called acyclic databases in the database community [3]. For work that falls into the class of restricting the type of the constraints (the class into which the present work falls), Dechter <ref> [6] </ref> identifies a relationship between the size of the domains of the variables and the level of local consistency needed to ensure that the network is strongly n-consistent, and thus minimal and globally consistent. <p> Hence, the corollary applies to all binary constraint networks with domains of size two. As a specific example, the Graph 2-coloring problem can be formulated using such constraint networks. Dechter <ref> [6, p. 93] </ref> also shows, but by a different method, that a strongly 3-consistent (or path consistent) bi-valued network is minimal. Example 3.
Reference: [7] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: Hence, by Corollary 1 we can guarantee that the result of path consistency will be the minimal network and the network will be globally consistent. Two special cases are a restricted and discrete version of Dechter, Meiri, and Pearl's <ref> [7] </ref> continuous, bounded difference framework for temporal reasoning and a restricted and discrete version of Vilain and Kautz's [27] qualitative framework for temporal reasoning. 4 Identifying Row-Convex Relations As noted in the scene-labeling example, when constructing a constraint network and the (0,1)-matrices that represent the constraints, we must impose an ordering
Reference: [8] <author> R. Dechter and J. Pearl. </author> <title> Network-based heuristics for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 1-38, </pages> <year> 1988. </year>
Reference-contexts: As a special case, if the constraint graph is a tree, arc consistency is sufficient to ensure that a solution can be found without backtracking. Dechter and Pearl <ref> [8] </ref> provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl [9] generalize the results on trees to hyper-trees which are called acyclic databases in the database community [3]. <p> In addition, like similar algorithms for imposing directional consistency, Directional-Relational-PC's worst-case complexity can be bounded as a function of the topological structure of the problem via parameters like the induced width of the graph <ref> [8] </ref>. We elaborate on these issues below. 21 Theorem 7 (Completeness) For any network R, whose directional closure is not empty and row convex, the Directional-Relational-PC algorithm computes an equivalent network of R that is backtrack-free along the ordering d. Proof.
Reference: [9] <author> R. Dechter and J. Pearl. </author> <title> Tree clustering for constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 38 </volume> <pages> 353-366, </pages> <year> 1989. </year>
Reference-contexts: As a special case, if the constraint graph is a tree, arc consistency is sufficient to ensure that a solution can be found without backtracking. Dechter and Pearl [8] provide an adaptive scheme where the level of local consistency is adjusted on a node-by-node basis. Dechter and Pearl <ref> [9] </ref> generalize the results on trees to hyper-trees which are called acyclic databases in the database community [3]. <p> It is well known that finding the minimal width embedding is NP-hard [2], nevertheless every ordering of the variables d, yields a simple to compute upper bound denoted W fl (d) (see <ref> [9] </ref>). The complexity of Directional-Relational-PC along d can be bounded as a function of W fl (d) of its constraint graph. Specifically, it was shown that the time complexity and size of the network generated by Directional-Relational-PC along d is O (exp (W fl (d) + 1)).
Reference: [10] <author> R. Dechter and J. Pearl. </author> <title> Directed constraint networks: A relational framework for causal modeling. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1164-1170, </pages> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference-contexts: Importantly, in the above work, the problem of deciding whether the constraints have the desired properties is left to the user. We identify an efficient procedure for deciding whether a constraint network can be made row convex. Finally, for work that falls into both classes, Dechter and Pearl <ref> [10] </ref> present effective procedures for determining whether a constraint network can be formulated as a causal theory and thus a solution can be found without backtracking.
Reference: [11] <author> R. Dechter and I. Rish. </author> <title> Directional resolution: The Davis-Putnam procedure, revisited. </title> <booktitle> In Proceedings of the Fourth International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <address> Bonn, Germany, </address> <year> 1994. </year>
Reference-contexts: Consequently, from Theorem 6, bi-valued networks can be solved by Relational-PC. In particular, the satisfiability of propositional CNFs can be decided by Relational-PC. In this case, the composition operation (Step 5 of the Relational-PC algorithm) takes the form of pair-wise resolution. For more details see <ref> [11] </ref>. As with variable-based local consistency, we can improve the efficiency of enforcing relational consistency by enforcing only directional consistency.
Reference: [12] <author> E. C. Freuder. </author> <title> Synthesizing constraint expressions. </title> <journal> Comm. ACM, </journal> <volume> 21 </volume> <pages> 958-966, </pages> <year> 1978. </year>
Reference-contexts: For simplicity, unless otherwise stated, we will assume that path consistency includes arc consistency. Montanari [24] and Mackworth [19] provide algorithms for achieving path consistency that also achieve arc consistency. Freuder <ref> [12] </ref> generalizes this concept to k-consistency. <p> For simplicity, unless otherwise stated, we will assume that path consistency includes arc consistency. Montanari [24] and Mackworth [19] provide algorithms for achieving path consistency that also achieve arc consistency. Freuder [12] generalizes this concept to k-consistency. Definition 4 (strong k-consistency; Freuder <ref> [12, 13] </ref>) A network is k-consistent if and only if given any instantiation of any k 1 variables satisfying all of the direct relations among those variables, there exists an instantiation of any kth variable such that the k values taken together satisfy all of the relations among the k variables.
Reference: [13] <author> E. C. Freuder. </author> <title> A sufficient condition for backtrack-free search. </title> <journal> J. ACM, </journal> <volume> 29 </volume> <pages> 24-32, </pages> <year> 1982. </year>
Reference-contexts: For simplicity, unless otherwise stated, we will assume that path consistency includes arc consistency. Montanari [24] and Mackworth [19] provide algorithms for achieving path consistency that also achieve arc consistency. Freuder [12] generalizes this concept to k-consistency. Definition 4 (strong k-consistency; Freuder <ref> [12, 13] </ref>) A network is k-consistent if and only if given any instantiation of any k 1 variables satisfying all of the direct relations among those variables, there exists an instantiation of any kth variable such that the k values taken together satisfy all of the relations among the k variables. <p> For work that falls into the class of restricting the topology, Montanari [24] shows that if the constraint graph is a tree, path consistency is sufficient to ensure that a network is minimal. Freuder <ref> [13, 14] </ref> identifies a relationship between a property called the width of a constraint graph and the level of local consistency needed to ensure that a solution can be found without backtracking.
Reference: [14] <author> E. C. Freuder. </author> <title> A sufficient condition for backtrack-bounded search. </title> <journal> J. ACM, </journal> <volume> 32 </volume> <pages> 755-761, </pages> <year> 1985. </year> <month> 24 </month>
Reference-contexts: For work that falls into the class of restricting the topology, Montanari [24] shows that if the constraint graph is a tree, path consistency is sufficient to ensure that a network is minimal. Freuder <ref> [13, 14] </ref> identifies a relationship between a property called the width of a constraint graph and the level of local consistency needed to ensure that a solution can be found without backtracking.
Reference: [15] <author> C.-C. Han and C.-H. Lee. </author> <title> Comments on Mohr and Henderson's path con-sistency algorithm. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 125-130, </pages> <year> 1988. </year>
Reference-contexts: The path consistency procedure is O (d 5 n 3 ) [21] which can be improved to O (d 3 n 3 ) by using a more complicated data structure <ref> [15] </ref>. So, we can find a solution 8 and the minimal network for the class of constraint networks characterized by Theorem 1 in O (d 3 n 3 ) time. Example 1. Scene labeling in computer vision [5, 16] can be formulated as a problem on constraint networks. <p> Recall that a precondition of the algorithms is that the network be path consistent. Ensuring path consistency once again dominates the overall computation since the complexity of the path consistency procedure is O (d 3 n 3 ) <ref> [15] </ref>. So, we can find a solution for the class of constraint networks characterized by Theorem 3 in O (d 3 n 3 ) time. 15 5 Non-Binary Row-Convex Constraints In this section we generalize the results for binary row-convex constraint networks to non-binary row-convex networks.
Reference: [16] <author> D. A. Huffman. </author> <title> Impossible objects as nonsense sentences. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 6, </booktitle> <pages> pages 295-323. </pages> <publisher> Edinburgh Univ. Press, </publisher> <year> 1971. </year>
Reference-contexts: 1 Introduction Constraint networks have been shown to be useful in formulating such diverse problems as graph coloring [24], scene labeling <ref> [16, 28] </ref>, natural language parsing [22], and temporal reasoning [1]. A constraint network is defined by a set of variables, a domain of values for each variable, and a set of constraints between the variables. <p> So, we can find a solution 8 and the minimal network for the class of constraint networks characterized by Theorem 1 in O (d 3 n 3 ) time. Example 1. Scene labeling in computer vision <ref> [5, 16] </ref> can be formulated as a problem on constraint networks. We use an example to illustrate the application of Theorem 1. Figure 2 shows the variables in the constraint network and the constraints; Figure 1 shows the domains of the variables and the ordering imposed.
Reference: [17] <author> L. M. Kirousis. </author> <title> Fast parallel constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 147-160, </pages> <year> 1993. </year>
Reference-contexts: A more direct argument suggesting an increase in time and space complexity is the fact that the algorithm may need to record relations of arbitrary arity. Note that relational arc-consistency can be enforced in time polynomial in the arity of its constraints. Example 9. Implicational constraints <ref> [17] </ref> can be shown to characterize certain types of scene constraints in vision. <p> They generalize the notions of monotone and functional binary constraints. Consequently, whenever implicational constraints are closed under extended composition their consistency can be determined by Relational-PC. Note that the consistency of implicational constraints can be decided in polynomial time <ref> [17] </ref>. Example 10.
Reference: [18] <author> L. M. Kirousis and C. H. Papadimitriou. </author> <title> The complexity of recognizing polyhedral scenes. </title> <booktitle> In Proceedings of the 26th Symposium on Foundations of Computer Science, </booktitle> <pages> pages 175-185, </pages> <address> Portland, Oregon, </address> <year> 1985. </year>
Reference-contexts: Fork: H H H H H H H H H H + + + - - ? 6 Arrow: @ @ @ - + + Tee: + - 6 ? The scene-labeling problem has been shown to be NP-complete in the general case <ref> [18] </ref>.
Reference: [19] <author> A. K. Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: Mackworth <ref> [19, 20] </ref> defines three properties of networks that characterize local consistency of networks: node, arc, and path consistency. <p> Mackworth [19, 20] defines three properties of networks that characterize local consistency of networks: node, arc, and path consistency. Definition 3 (path consistent network; Mackworth <ref> [19] </ref>) A network is path consistent if and only if, for every triple (x i ; x k ; x j ) of variables, we have that, for every instantiation of x i and x j that satisfies the direct relation, R ij , there exists an instantiation of x k <p> Note that the definition of path consistency subsumes arc consistency if in the above definition we do not assume that variables x i and x j are distinct. For simplicity, unless otherwise stated, we will assume that path consistency includes arc consistency. Montanari [24] and Mackworth <ref> [19] </ref> provide algorithms for achieving path consistency that also achieve arc consistency. Freuder [12] generalizes this concept to k-consistency. <p> The reader may consult <ref> [19, 24] </ref> for details. 11 x i + x j &lt; 0 and R jk be constructed from 2x j + x k = 1.
Reference: [20] <author> A. K. Mackworth. </author> <title> Constraint satisfaction. </title> <editor> In S. C. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence, 2nd Edition, </booktitle> <pages> pages 285-293. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference-contexts: Mackworth <ref> [19, 20] </ref> defines three properties of networks that characterize local consistency of networks: node, arc, and path consistency.
Reference: [21] <author> A. K. Mackworth and E. C. Freuder. </author> <title> The complexity of some polynomial network consistency algorithms for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 65-74, </pages> <year> 1985. </year>
Reference-contexts: The path consistency procedure is O (d 5 n 3 ) <ref> [21] </ref> which can be improved to O (d 3 n 3 ) by using a more complicated data structure [15]. So, we can find a solution 8 and the minimal network for the class of constraint networks characterized by Theorem 1 in O (d 3 n 3 ) time.
Reference: [22] <author> H. Maruyama. </author> <title> Structural disambiguation with constraint propagation. </title> <booktitle> In Proceedings of the 28th Conference of the Association for Computational Linguistics, </booktitle> <pages> pages 31-38, </pages> <address> Pittsburgh, Pennsylvania, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Constraint networks have been shown to be useful in formulating such diverse problems as graph coloring [24], scene labeling [16, 28], natural language parsing <ref> [22] </ref>, and temporal reasoning [1]. A constraint network is defined by a set of variables, a domain of values for each variable, and a set of constraints between the variables. <p> Theorem 2 (Booth and Lueker [4]) An m fi n (0,1)-matrix specified by its f nonzero entries can be tested for whether a permutation of the columns exists such that the matrix is row convex in O (m + n + f ) steps. Example 4. Maruyama <ref> [22] </ref> shows that natural language parsing can be formulated as a problem on constraint networks. In this framework, intermediate parsing results are represented as a constraint network and every solution to the network corresponds to an individual parse tree. We use an example network from [22] to illustrate the application of <p> Example 4. Maruyama <ref> [22] </ref> shows that natural language parsing can be formulated as a problem on constraint networks. In this framework, intermediate parsing results are represented as a constraint network and every solution to the network corresponds to an individual parse tree. We use an example network from [22] to illustrate the application of Theorems 1 and 2. Consider the following sentence. Put the block on the floor on the table in the room. <p> Maruyama states that a "simple backtrack search can generate the 14 parse trees of the sentence from the constraint network at any time." While the network is path consistent, it can be seen that the constraints are not all row convex given the original domain ordering used in <ref> [22] </ref>. However, using the new domain ordering shown in Figure 4, the constraints are now row convex. Hence, the Instantiate procedure from the previous section can be used to find a solution in a backtrack-free manner.
Reference: [23] <author> I. Meiri, R. Dechter, and J. Pearl. </author> <title> Tree decomposition with applications to constraint processing. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 10-16, </pages> <address> Boston, Mass., </address> <year> 1990. </year>
Reference-contexts: Given a constraint network, we often wish to (i) find a solution|an instantiation of the variables that satisfies the constraints and (ii) find the corresponding minimal network where the constraints are as explicit as possible. Finding the minimal network has applications in removing redundant information from a knowledge base <ref> [23] </ref> and temporal reasoning [25]. However, both tasks are known to be NP-complete in the general case.
Reference: [24] <author> U. Montanari. </author> <title> Networks of constraints: Fundamental properties and applications to picture processing. </title> <journal> Inform. Sci., </journal> <volume> 7 </volume> <pages> 95-132, </pages> <year> 1974. </year>
Reference-contexts: 1 Introduction Constraint networks have been shown to be useful in formulating such diverse problems as graph coloring <ref> [24] </ref>, scene labeling [16, 28], natural language parsing [22], and temporal reasoning [1]. A constraint network is defined by a set of variables, a domain of values for each variable, and a set of constraints between the variables. <p> Definition 1 (binary constraint networks; Montanari <ref> [24] </ref>) A network of binary constraints R is a set X of n variables fx 1 ; . . . ; x n g, a domain D i of possible values for each variable, and a set of binary constraints between variables. <p> Note that the definition of path consistency subsumes arc consistency if in the above definition we do not assume that variables x i and x j are distinct. For simplicity, unless otherwise stated, we will assume that path consistency includes arc consistency. Montanari <ref> [24] </ref> and Mackworth [19] provide algorithms for achieving path consistency that also achieve arc consistency. Freuder [12] generalizes this concept to k-consistency. <p> A strongly n-consistent network is also minimal. However, the converse is not true as it is possible for a network to be minimal but not strongly n-consistent. Following Montanari <ref> [24] </ref>, a binary relation R ij between variables x i and x j is represented as a (0,1)-matrix with jD i j rows and jD j j columns by imposing an ordering on the domains of the variables. <p> These restrictions fall into two classes: restricting the topology of the underlying graph of the network and restricting the type of the allowed constraints between variables. For work that falls into the class of restricting the topology, Montanari <ref> [24] </ref> shows that if the constraint graph is a tree, path consistency is sufficient to ensure that a network is minimal. <p> Montanari <ref> [24] </ref> shows that path consistency is sufficient to guarantee that a network is both minimal and globally consistent (Montanari uses the term decomposable) if the relations are monotone. <p> The reader may consult <ref> [19, 24] </ref> for details. 11 x i + x j &lt; 0 and R jk be constructed from 2x j + x k = 1.
Reference: [25] <author> P. van Beek. </author> <title> Reasoning about qualitative temporal information. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 297-326, </pages> <year> 1992. </year>
Reference-contexts: Finding the minimal network has applications in removing redundant information from a knowledge base [23] and temporal reasoning <ref> [25] </ref>. However, both tasks are known to be NP-complete in the general case. Task (i) is usually solved using a backtracking algorithm, which is exponential in the worst case but often useful in practice, and task (ii) is often solved only approximately by enforcing various levels of local consistency.
Reference: [26] <author> P. Van Hentenryck, Y. Deville, and C.-M. Teng. </author> <title> A generic arc consistency algorithm and its specializations. </title> <journal> Artificial Intelligence, </journal> <volume> 57 </volume> <pages> 291-321, </pages> <year> 1992. </year>
Reference-contexts: Montanari [24] shows that path consistency is sufficient to guarantee that a network is both minimal and globally consistent (Montanari uses the term decomposable) if the relations are monotone. Van Hentenryck, Deville, and Teng <ref> [26] </ref> show that arc consistency is sufficient to test whether a network is satisfiable if the relations are from a restricted class of functional and monotone constraints. In general, arc consistency is not sufficient to test the satisfiability of networks with only functional and monotone constraints.
Reference: [27] <author> M. Vilain and H. Kautz. </author> <title> Constraint propagation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 377-382, </pages> <address> Philadelphia, Pa., </address> <year> 1986. </year>
Reference-contexts: Two special cases are a restricted and discrete version of Dechter, Meiri, and Pearl's [7] continuous, bounded difference framework for temporal reasoning and a restricted and discrete version of Vilain and Kautz's <ref> [27] </ref> qualitative framework for temporal reasoning. 4 Identifying Row-Convex Relations As noted in the scene-labeling example, when constructing a constraint network and the (0,1)-matrices that represent the constraints, we must impose an ordering on the domains of the variables.
Reference: [28] <author> D. Waltz. </author> <title> Understanding line drawings of scenes with shadows. </title> <editor> In P. H. Winston, editor, </editor> <booktitle> The Psychology of Computer Vision, </booktitle> <pages> pages 19-91. </pages> <publisher> McGraw-Hill, </publisher> <year> 1975. </year> <month> 25 </month>
Reference-contexts: 1 Introduction Constraint networks have been shown to be useful in formulating such diverse problems as graph coloring [24], scene labeling <ref> [16, 28] </ref>, natural language parsing [22], and temporal reasoning [1]. A constraint network is defined by a set of variables, a domain of values for each variable, and a set of constraints between the variables.
References-found: 28

