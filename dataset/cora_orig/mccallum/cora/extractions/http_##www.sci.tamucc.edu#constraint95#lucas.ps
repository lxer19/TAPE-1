URL: http://www.sci.tamucc.edu/constraint95/lucas.ps
Refering-URL: http://www.sci.tamucc.edu/constraint95/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Constraint-Based Reasoning for Structural Concrete Design and Detailing SUMMARY Concrete used as an engineering material
Author: Warren K. Lucas, W.M. Kim Roddis and Frank M. Brown Logistica TM (Brown, 
Note: alternative to TCON for representing the  are also imposed by the construction process and include spacing of  
Date: 1993).  
Affiliation: The University of Kansas  
Abstract: Exhaustive search is not an efficient method of designing reinforced concrete. TCON provides a straight forward means of representing the constraining relationships in concrete design but has very little utility for conveniently examining a wide range of feasible solutions and is not able to report constraints whose elements are partially known. Logistica TM offers a promising 
Abstract-found: 1
Intro-found: 0
Reference: <author> Abelson, H. and Sussman, G.J., </author> <title> Structure and Interpretation of Computer Programs, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1985. </year>
Reference: <author> Brown, Frank M., et. al., </author> <title> Logistica TM 1.0 Programmer's Manual, </title> <booktitle> Artificial Intelligence Research, </booktitle> <publisher> Inc., Lawrence, </publisher> <address> KS, </address> <year> 1992. </year>
Reference: <author> Brown, Frank M., et. al., </author> <title> Logistica TM 1.0 Reference Manual, </title> <booktitle> Artificial Intelligence Research, </booktitle> <publisher> Inc., Lawrence, </publisher> <address> KS, </address> <year> 1992. </year>
Reference: <author> Cohen, J., </author> <title> Constraint Logic Programming Languages, </title> <journal> Communications of the ACM 33(7) </journal> <pages> 52-68, </pages> <year> 1992. </year>
Reference: <author> Forbus, Kenneth D. and de Kleer, Johan, </author> <title> Building Problem Solvers, </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1993. </year>
Reference-contexts: The first approach uses Logistica TM programming language to carry out an exhaustive search and evaluation of designs for a ladder given multiple values for several inputs. The second approach uses a constraint language, TCON <ref> (Forbus and de Kleer, 1993) </ref>. The third approach utilizes Logistica TM to specify and propagate constraints using symbolic equations. A ladder was selected for design for the sake of simplicity and clarity of explanation. <p> This conclusion is only possible after checking every possible combination of inputs. 2.2 CONSTRAINTS EXPRESSED IN TCON In this section an example of a ladder design is modeled using TCON, a simple instance of a class of programming languages termed antecedent constraint languages. <ref> (Forbus and de Kleer,1993) </ref> TCON enables the concise definition of all of the relationships between variables in any given expression, thus providing the means of solving for any combinations of unknown variables in terms of the known variables. The need for such a capability is illustrated as follows. <p> Given z and y we may want to find x, or, given x and z we may need to determine y. The remaining relationships could be explicitly established by using additional "setq" equations, but this would become burdensome for all but the most trivial problems. <ref> (Forbus and de Kleer, 1993) </ref> An example of a primitive TCON adder constraint follows. (constraint adder ((a1 cell) (a2 cell) (sum cell)) (formulae (sum (a1 a2) (+ a1 a2)) (a1 (sum a2) (- sum a2)) Other primitive constraints for operations such as subtraction, multiplication, division and exponents follow a similar format. <p> The painful process of correcting a design when a failure or inconsistency occurs hampers the investigation of very many alternatives. Inconsistencies should be reported but not cause the system to enter a "debug" mode. Augmenting TCON with an Assumption-Based Truth-Maintenance System or ATMS <ref> (Forbus and de Kleer, 1993) </ref> would improve its performance in this regard, but would still not entirely address the issue. 2.3 CONSTRAINTS EXPRESSED IN LOGISTICA TM An alternative approach to the tightly coupled constraints of TCON is the use of real algebra applied to a global database of symbolic constraints through <p> This concrete design problem has a number of cycles that must be programmed around in the absence of a more sophisticated truth maintenance system. Forbus and de Kleer offer suggestions for ways the TCON interpreter can be extended and provide the code for an ATMS extension <ref> (Forbus and de Kleer, 1993) </ref>. It may be constructive to implement some of the suggested extensions for a more thorough comparison to methods using Logistica TM . 3.3 CONSTRAINTS EXPRESSED IN LOGISTICA TM A constraint model of a singly reinforced concrete beam was implemented in Logistica TM . <p> Additional work is necessary to insure a fair comparison between TCON or a TCON-like system and the use of symbolic constraints in Logistica TM . Specifically, TCON should be extended to use an ATMS <ref> (Forbus and de Kleer, 1993) </ref> and be equipped with a sharing structure to reduce the amount of code necessary to specify the constraints. The use of symbolic equations and inequalities should also be considered for TCON.
Reference: <author> Siskind, J.M. and McAllester, D. A., </author> <title> Screamer 3.4 - A Portable Efficient Implementation of Nondeterministic Common Lisp, </title> <institution> Massachusets Institute of Technology, </institution> <address> Cambridge, MA, </address> <year> 1991. </year>
Reference: <author> Van Hentenryck, </author> <title> Pascal, Constraint Satisfaction in Logic Programming, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989. </year>
References-found: 7

