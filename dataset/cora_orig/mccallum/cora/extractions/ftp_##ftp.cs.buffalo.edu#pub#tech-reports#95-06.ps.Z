URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/95-06.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Email: xinhe@cs.buffalo.edu  
Title: Grid Embedding of Internally Triangulated Plane Graphs without Non-empty Triangles  
Author: Xin He 
Address: Buffalo, NY 14260  
Affiliation: Department of Computer Science State University of New York at Buffalo  
Abstract: A straight line grid embedding of a plane graph G is a drawing of G such that the vertices are drawn at grid points and the edges are drawn as non-intersecting straight line segments. In this paper, we show that, if an internally triangulated plane graph G has no non-empty triangles (a non-empty triangle is a triangle of G containing some vertices in its interior), then G can be embedded on a grid of size W fi H such that W + H n, W (n + 3)=2 and H 2(n 1)=3, where n is the number of vertices of G. Such an embedding can be computed in linear time.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bondy and U. Murty, </author> <title> Graph Theory with Applications, </title> <publisher> North-Holland, </publisher> <year> 1976. </year>
Reference-contexts: In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. <ref> [1, 7] </ref>). The embedding algorithms in [9, 10, 5, 4, 12, 13] are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices.
Reference: [2] <author> N. Chiba, T. Yamanouchi, and T. Nishizeki, </author> <title> Linear algorithms for convex drawings of planar graphs, in Progress in Graph Theory, </title> <editor> J. A. Bondy and U. S. R. Murty (eds.), </editor> <year> 1982, </year> <month> pp.153-173. </month>
Reference-contexts: Wagner [24], Fary [8], and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. <ref> [23, 2, 16] </ref>). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack [9].
Reference: [3] <author> M. Chrobak and G. Kant, </author> <title> Convex grid drawings of 3-connected planar graphs, </title> <type> Tech. Rep. </type> <institution> RUU-CS-93-45, Department of Computer Science, Utrecht University, </institution> <year> 1993. </year> <month> 19 </month>
Reference-contexts: It was shown in [12] that every 3-connected planar graph G can be embedded on a (2n 4) fi (n 2) grid such that all internal faces of G are convex polygons. The grid size of such embedding is reduced to (n 2) fi (n 2) in <ref> [3, 13, 21] </ref>. It has been observed that there exists a plane graph G, as shown in Fig 1, such that the straight line grid embedding of G requires a grid of size at least (2n=3 1) fi (2n=3 1) [9]. <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to .
Reference: [4] <author> M. Chrobak and S. Nakano, </author> <title> Minimum-width grid drawings of planar graphs, </title> <type> Tech. Rep. </type> <institution> UCR--CS-94-5, Department of Computer Science, University of California at Riverside, </institution> <year> 1994. </year> <booktitle> Also in Proc. Workshop on Graph Drawing'94, </booktitle> <address> Princeton, NJ, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Further, it was shown that for any straight line grid embedding of G, each dimension of the grid needs to be at least b2 (n 1)=3c even if the other dimension is allowed to be unbounded <ref> [4] </ref>. It has been conjectured that every planar graph can be embedded on a 2n=3 fi 2n=3 grid. <p> While this conjecture remains open, some progress has been made recently: Chrobak and Nakano showed that every planar graph has a straight line embedding on a (b2 (n 1)=3c) fi (4b2 (n 1)=3c 1) grid <ref> [4] </ref>. For the straight line grid embedding problem, we can assume, without loss of generality, that all internal faces of G are triangles. (If not, we can add dummy edges so that all internal faces of G are triangles. After an embedding is obtained, the dummy edges can be removed). <p> This contradicts the 4-connectivity of G). So every such graph has a grid embedding as stated in Theorem 1.1. The present paper is organized as follows. In Section 2, we review some definitions and briefly describe a generic shift algorithm in <ref> [4] </ref>, which is the basis of our algorithm. In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> In particular, a vertex of in-degree 2 is forward-oriented (backward-oriented, respectively) if and only if it covers a forward (backward, respectively) edge. A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in <ref> [4] </ref> which is the basis of the embedding algorithms in [3, 4, 5, 9, 10, 12, 13] and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> Place v at an arbitrary point (x 0 ; y 0 ) satisfying these conditions. End Generic Shift. The following theorem was implicit in [9, 10, 5] and explicitly stated in <ref> [4] </ref>. Theorem 2.1 For all choices of shift operations and vertex coordinates, as long as (gs1), (gs2), (gs3) are satisfied, the Generic Shift Algorithm produces a correct straight line grid embedding. <p> According to left , if there are more than one candidate vertex for G + k , the leftmost one is added first. Fig 3 shows the leftmost canonical ordering of the graph shown in Fig 2. We need the following concepts introduced in <ref> [4] </ref>. Each vertex v (v 6= v 1 ; v 2 ) of G + is classified as either stable or unstable. With each such vertex v, we associate a sequence DC (v) of vertices called its domino chain, and a vertex dom (v) called its dominator. <p> Also, v is stable if and only if z is stable. As in <ref> [4] </ref>, an unstable vertex of in-degree 2 is called a room-shift vertex. The intuition is that a stable vertex can be placed above its leftmost child, saving one x-coordinate, while an unstable vertex must be placed at least one x-coordinate to the right of its leftmost child. <p> The following lemma was proved in <ref> [4] </ref>. We include its proof here for completeness. Lemma 3.3 Let w p ; : : : ; w q be the children of the vertex v = v k+1 in the contour C k . Assume the contour invariants are satisfied. <p> Each room-shift vertex v is associated with a vertex dom (v). It has been shown in <ref> [4] </ref> that, for two distinct room-shift vertices v 1 and v 2 , dom (v 1 ) 6= dom (v 2 ). From the definition of the dominator, it is easily seen that only the forward-oriented vertices and v n can be dominators of room-shift vertices. <p> The canonical ordering in Theorem 3.1 can be computed in O (n) time [14]. The leftmost canonical ordering left can be computed from in linear time. After left is known, the algorithm can be implemented by using the method in <ref> [4] </ref>. We only note that, as stated in Remark 2, since left is used, when a vertex v is added, the conditions of the placement rules (including the avoid-horizontal-forward-edge conditions) can be checked in constant time. So the algorithm takes linear time.
Reference: [5] <author> M. Chrobak and T. Payne, </author> <title> A linear time algorithm for drawing planar graphs on a grid, </title> <type> Tech. Rep. </type> <institution> UCR-CS-89-1, Department of Mathematics and Computer Science, University of California at Riverside, </institution> <year> 1989. </year>
Reference-contexts: Independently, de Fraysseix, Pach, and Pollack showed that every planar graph has an embedding on a (2n 4) fi (n 2) grid, which can be computed in O (n log n) time [9, 10]. The running time of their algorithm was improved by Chrobak and Payne to O (n) <ref> [5] </ref>. Schnyder further proved the existence of an embedding on an (n 2) fi (n 2) grid [18] and gave an O (n) time algorithm to compute such an embedding [20]. <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> Place v at an arbitrary point (x 0 ; y 0 ) satisfying these conditions. End Generic Shift. The following theorem was implicit in <ref> [9, 10, 5] </ref> and explicitly stated in [4]. Theorem 2.1 For all choices of shift operations and vertex coordinates, as long as (gs1), (gs2), (gs3) are satisfied, the Generic Shift Algorithm produces a correct straight line grid embedding.
Reference: [6] <author> P. Eades and R. Tamassia, </author> <title> Algorithms for automatic graph drawing: an annotated bibliography, </title> <type> Technical Report, </type> <institution> Department of Computer Science, Brown University, </institution> <year> 1993. </year>
Reference-contexts: Such embeddings on reasonably small grids are very useful in visualizing planar graphs on graphic screens and have applications in CAD/CAM and Computer Graphics <ref> [6] </ref>. Wagner [24], Fary [8], and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. [23, 2, 16]).
Reference: [7] <author> S. </author> <title> Even, Graph Algorithms, </title> <publisher> Computer Science Press, </publisher> <year> 1979. </year>
Reference-contexts: In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. <ref> [1, 7] </ref>). The embedding algorithms in [9, 10, 5, 4, 12, 13] are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices.
Reference: [8] <author> I. Fary, </author> <title> On straight line representation of planar graphs, </title> <journal> Acta. Sci. Math. Szeged, </journal> <volume> 11, </volume> <year> 1948, </year> <pages> pp. 229-233. </pages>
Reference-contexts: Such embeddings on reasonably small grids are very useful in visualizing planar graphs on graphic screens and have applications in CAD/CAM and Computer Graphics [6]. Wagner [24], Fary <ref> [8] </ref>, and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. [23, 2, 16]). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack [9].
Reference: [9] <author> H. de Fraysseix, J. Pach, and R. Pollack, </author> <title> Small sets supporting straight-line embeddings of planar graphs, </title> <booktitle> in Proc. of the 20th Annual ACM Symp. on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 426-433. </pages>
Reference-contexts: Since then, many embedding algorithms have been reported (e.g. [23, 2, 16]). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack <ref> [9] </ref>. First, they require high-precision real arithmetic relative to the size of the graph, and therefore cannot be used even for a graph of moderate size. <p> Independently, de Fraysseix, Pach, and Pollack showed that every planar graph has an embedding on a (2n 4) fi (n 2) grid, which can be computed in O (n log n) time <ref> [9, 10] </ref>. The running time of their algorithm was improved by Chrobak and Payne to O (n) [5]. Schnyder further proved the existence of an embedding on an (n 2) fi (n 2) grid [18] and gave an O (n) time algorithm to compute such an embedding [20]. <p> It has been observed that there exists a plane graph G, as shown in Fig 1, such that the straight line grid embedding of G requires a grid of size at least (2n=3 1) fi (2n=3 1) <ref> [9] </ref>. Further, it was shown that for any straight line grid embedding of G, each dimension of the grid needs to be at least b2 (n 1)=3c even if the other dimension is allowed to be unbounded [4]. <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in [9, 10, 5, 4, 12, 13] are all based on the following canonical ordering concept introduced in <ref> [9] </ref>. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> Every triangulated plane graph has a canonical ordering <ref> [9, 10] </ref>. We will use the symbol to denote the linear order of the canonical ordering. Namely, if i &lt; j then we write v i v j . Note that the condition (co4) is implied by the condition (co3). <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> Place v at an arbitrary point (x 0 ; y 0 ) satisfying these conditions. End Generic Shift. The following theorem was implicit in <ref> [9, 10, 5] </ref> and explicitly stated in [4]. Theorem 2.1 For all choices of shift operations and vertex coordinates, as long as (gs1), (gs2), (gs3) are satisfied, the Generic Shift Algorithm produces a correct straight line grid embedding.
Reference: [10] <author> H. de Fraysseix, J. Pach and R. Pollack, </author> <title> How to draw a planar graph on a grid, </title> <type> Combinatorica 10, </type> <year> 1990, </year> <pages> pp. 41-51. </pages>
Reference-contexts: Independently, de Fraysseix, Pach, and Pollack showed that every planar graph has an embedding on a (2n 4) fi (n 2) grid, which can be computed in O (n log n) time <ref> [9, 10] </ref>. The running time of their algorithm was improved by Chrobak and Payne to O (n) [5]. Schnyder further proved the existence of an embedding on an (n 2) fi (n 2) grid [18] and gave an O (n) time algorithm to compute such an embedding [20]. <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> Every triangulated plane graph has a canonical ordering <ref> [9, 10] </ref>. We will use the symbol to denote the linear order of the canonical ordering. Namely, if i &lt; j then we write v i v j . Note that the condition (co4) is implied by the condition (co3). <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> Place v at an arbitrary point (x 0 ; y 0 ) satisfying these conditions. End Generic Shift. The following theorem was implicit in <ref> [9, 10, 5] </ref> and explicitly stated in [4]. Theorem 2.1 For all choices of shift operations and vertex coordinates, as long as (gs1), (gs2), (gs3) are satisfied, the Generic Shift Algorithm produces a correct straight line grid embedding.
Reference: [11] <author> M. Furer, X. He, M. Y. Kao, and B. Raghavachari, </author> <title> O(n log log n)-work parallel algorithms for straight line grid embeddings of planar graphs, </title> <booktitle> in Proc. of the 4th Annual ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1992, </year> <pages> pp. 410-419. </pages> <note> To appear in SIAM J. Disc. Math. </note>
Reference-contexts: Schnyder's algorithm can be implemented in parallel in O (log n log log n) time with n= log n processors on a parallel random access machine <ref> [11] </ref>. It was shown in [12] that every 3-connected planar graph G can be embedded on a (2n 4) fi (n 2) grid such that all internal faces of G are convex polygons.
Reference: [12] <author> G. Kant, </author> <title> Drawing planar graphs using the lmc-ordering, </title> <booktitle> in Proc. 33th Ann. IEEE Symp. on Found. of Comp. Science, </booktitle> <address> Pittsburgh, </address> <year> 1992, </year> <pages> pp. 101-110. </pages>
Reference-contexts: Schnyder's algorithm can be implemented in parallel in O (log n log log n) time with n= log n processors on a parallel random access machine [11]. It was shown in <ref> [12] </ref> that every 3-connected planar graph G can be embedded on a (2n 4) fi (n 2) grid such that all internal faces of G are convex polygons. The grid size of such embedding is reduced to (n 2) fi (n 2) in [3, 13, 21]. <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> We will use the symbol left to denote the order defined by left . We call left the leftmost canonical ordering of G + 6 derived from . (Note that left is different from the leftmost canonical ordering defined in <ref> [12, 13] </ref>). Our algorithm will use left , which can be computed in linear time from by using the method in [15]. According to left , if there are more than one candidate vertex for G + k , the leftmost one is added first.
Reference: [13] <author> G. Kant, </author> <title> Algorithms for drawing planar graphs, </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, University of Utrecht, </institution> <year> 1993. </year>
Reference-contexts: It was shown in [12] that every 3-connected planar graph G can be embedded on a (2n 4) fi (n 2) grid such that all internal faces of G are convex polygons. The grid size of such embedding is reduced to (n 2) fi (n 2) in <ref> [3, 13, 21] </ref>. It has been observed that there exists a plane graph G, as shown in Fig 1, such that the straight line grid embedding of G requires a grid of size at least (2n=3 1) fi (2n=3 1) [9]. <p> In Section 3, we present our algorithm. In section 4, we prove Theorem 1.1. Section 5 concludes the paper. 2 Preliminaries Most graph-theoretic definitions used here are standard (e.g. [1, 7]). The embedding algorithms in <ref> [9, 10, 5, 4, 12, 13] </ref> are all based on the following canonical ordering concept introduced in [9]. Definition 2.1 Let G = (V; E) be a triangulated plane graph with n vertices. <p> A vertex of in-degree 4 can be both a crossing-valley and a crossing-peak vertex. We next briefly describe a generic shift algorithm in [4] which is the basis of the embedding algorithms in <ref> [3, 4, 5, 9, 10, 12, 13] </ref> and our algorithm. Given a triangulated plane graph G = (V; E) with canonical ordering , the genetic shift algorithm works as follows: We add vertices one at a time according to . <p> We will use the symbol left to denote the order defined by left . We call left the leftmost canonical ordering of G + 6 derived from . (Note that left is different from the leftmost canonical ordering defined in <ref> [12, 13] </ref>). Our algorithm will use left , which can be computed in linear time from by using the method in [15]. According to left , if there are more than one candidate vertex for G + k , the leftmost one is added first.
Reference: [14] <author> G. Kant and X. </author> <title> He, Two algorithms for finding rectangular duals of planar graphs, </title> <booktitle> in Proc. 19th Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <address> Utrecht, the Netherland, </address> <month> June 16-18, </month> <year> 1993. </year>
Reference-contexts: To use the generic shift algorithm, one needs to specify the contour invariants and describe how to place the vertices so that both the contour invariants and the generic shift conditions are satisfied. 3 Drawing Algorithm Our algorithm crucially depends on the following theorem which was proved in <ref> [14] </ref>. Theorem 3.1 Let G = (V; E) be a triangulated plane graph whose external face fv 1 ; v 2 ; v n g is the only non-empty triangle of G. <p> The canonical ordering in Theorem 3.1 can be computed in O (n) time <ref> [14] </ref>. The leftmost canonical ordering left can be computed from in linear time. After left is known, the algorithm can be implemented by using the method in [4].
Reference: [15] <author> F. P. Preparata and R. Tamassia, </author> <title> Fully dynamic techniques for point location and transitive closure in planar structures, </title> <booktitle> in Proc. 29th IEEE FOCS, </booktitle> <year> 1988, </year> <pages> pp. 558-567. </pages>
Reference-contexts: We call left the leftmost canonical ordering of G + 6 derived from . (Note that left is different from the leftmost canonical ordering defined in [12, 13]). Our algorithm will use left , which can be computed in linear time from by using the method in <ref> [15] </ref>. According to left , if there are more than one candidate vertex for G + k , the leftmost one is added first. Fig 3 shows the leftmost canonical ordering of the graph shown in Fig 2. We need the following concepts introduced in [4].
Reference: [16] <author> R. C. </author> <title> Read, A new method for drawing a planar graph given the cyclic order of the edges at each vertex, </title> <type> Congressus Numerantium 56, </type> <year> 1987, </year> <pages> pp. 31-44. </pages>
Reference-contexts: Wagner [24], Fary [8], and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. <ref> [23, 2, 16] </ref>). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack [9].
Reference: [17] <author> P. Rosenstiehl and R. Tarjan, </author> <title> Rectilinear planar layouts and bipolar orientations of planar graphs, </title> <booktitle> Discrete & Computational Geometry 1, </booktitle> <year> 1986, </year> <pages> pp. 343-353. 20 </pages>
Reference-contexts: In view of these drawbacks, Rosenstiehl and Tarjan <ref> [17] </ref> posed the problem of computing a straight line embedding on a grid of polynomial size. Schnyder [19] proved that every planar graph has a straight line embedding on a (2n 4) fi (2n 4) grid.
Reference: [18] <author> W. Schnyder, </author> <title> Embedding planar graphs on the grid, </title> <booktitle> Abstracts AMS 9, </booktitle> <year> 1988, </year> <note> p. 268. </note>
Reference-contexts: The running time of their algorithm was improved by Chrobak and Payne to O (n) [5]. Schnyder further proved the existence of an embedding on an (n 2) fi (n 2) grid <ref> [18] </ref> and gave an O (n) time algorithm to compute such an embedding [20]. Schnyder's algorithm can be implemented in parallel in O (log n log log n) time with n= log n processors on a parallel random access machine [11].
Reference: [19] <author> W. Schnyder, </author> <title> Planar graphs and poset dimension, </title> <type> Orders 5, </type> <year> 1989, </year> <pages> pp. 323-343. </pages>
Reference-contexts: In view of these drawbacks, Rosenstiehl and Tarjan [17] posed the problem of computing a straight line embedding on a grid of polynomial size. Schnyder <ref> [19] </ref> proved that every planar graph has a straight line embedding on a (2n 4) fi (2n 4) grid.
Reference: [20] <author> W. Schnyder, </author> <title> Embedding planar graphs on the grid, </title> <booktitle> in Proc. of the 1st Annual ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1990, </year> <pages> pp. 138-147. </pages>
Reference-contexts: The running time of their algorithm was improved by Chrobak and Payne to O (n) [5]. Schnyder further proved the existence of an embedding on an (n 2) fi (n 2) grid [18] and gave an O (n) time algorithm to compute such an embedding <ref> [20] </ref>. Schnyder's algorithm can be implemented in parallel in O (log n log log n) time with n= log n processors on a parallel random access machine [11].
Reference: [21] <author> W. Schneider and W. Trotter, </author> <title> Convex drawings of planar graphs, </title> <booktitle> Abstracts of AMS 13 (5), </booktitle> <year> 1992, </year> <month> 92T-05-135. </month>
Reference-contexts: It was shown in [12] that every 3-connected planar graph G can be embedded on a (2n 4) fi (n 2) grid such that all internal faces of G are convex polygons. The grid size of such embedding is reduced to (n 2) fi (n 2) in <ref> [3, 13, 21] </ref>. It has been observed that there exists a plane graph G, as shown in Fig 1, such that the straight line grid embedding of G requires a grid of size at least (2n=3 1) fi (2n=3 1) [9].
Reference: [22] <author> S. K. Stein, </author> <title> Convex maps, </title> <journal> in Proc Amer Math Soc, </journal> <volume> Vol. 2, </volume> <year> 1951, </year> <pages> pp. 464-466. </pages>
Reference-contexts: Such embeddings on reasonably small grids are very useful in visualizing planar graphs on graphic screens and have applications in CAD/CAM and Computer Graphics [6]. Wagner [24], Fary [8], and Stein <ref> [22] </ref> independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. [23, 2, 16]). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack [9].
Reference: [23] <author> W. T. Tutte, </author> <title> How to draw a graph, </title> <journal> Proc. London Math. Soc. </journal> <volume> 13, </volume> <year> 1963, </year> <pages> pp. 743-768. </pages>
Reference-contexts: Wagner [24], Fary [8], and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. <ref> [23, 2, 16] </ref>). The earlier algorithms all suffer two serious drawbacks that render them useless in practice, as noted by de Fraysseix, Pach, and Pollack [9].
Reference: [24] <author> K. Wagner, </author> <title> Bemerkungen zum Vierfarben problem, </title> <address> Jahresbericht Deutsch Math-Verein 46, </address> <year> 1936, </year> <pages> pp. 26-32. </pages>
Reference-contexts: Such embeddings on reasonably small grids are very useful in visualizing planar graphs on graphic screens and have applications in CAD/CAM and Computer Graphics [6]. Wagner <ref> [24] </ref>, Fary [8], and Stein [22] independently showed that every planar graph has a straight line embedding. Since then, many embedding algorithms have been reported (e.g. [23, 2, 16]).
References-found: 24

