URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/bhatti.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/program.html
Root-URL: http://www.cs.ucl.ac.uk
Title: Notes on a QoS information model for making adaptation decisions  
Author: Saleem N. Bhatti and Graham Knight 
Keyword: QoS (quality of service), QoS summarisation, adaptive applications, Internet applications  
Address: College London, Gower Street, London WC1E 6BT, UK  
Affiliation: Computer Science Department, University  
Note: Page 1 of 21  
Abstract: We present a network model that allows processing of QoS (quality of service) information about media flows to enable applications to make adaptation decisions. Our model is based around a multidimensional spatial representation that allows QoS information describing the flow constructions and QoS parameters flowstates to interact with a representation of the network QoS. The model produces reports about the compatibility between the flowstates and the network QoS, indicating which flowstates the network can currently support. The simple nature of the reports allows the application to make decisions, dynamically, on which flowstate it should use. The model is relatively lightweight and scaleable. We demonstrate the use of the model by simulation of a dynamically adaptive audio tool. Our work is ongoing. 
Abstract-found: 1
Intro-found: 1
Reference: [AMV96] <author> E. Amir, S. McCanne, M. Vetterli, </author> <title> A Layered DCT Coder for Internet Video, </title> <booktitle> Proc. </booktitle> <address> ICIP96, Lausanne, Switzerland, </address> <month> Sep </month> <year> 1996. </year> <note> http://http.cs.berkeley.edu/~elan/pubs/papers/ldct.ps </note>
Reference-contexts: This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations. Much of the attention for this work has focused on mechanisms that allow adaptability of the media flow construction by scaling (e.g. [D+93]), filtering (e.g. [YGHS96] ) or encoding techniques (e.g. [HSHW95] <ref> [AMV96] </ref>). An area that has received little attention is how applications can dynamically select the correct flow construction to match the available network QoS. The application must currently rely on the user to set the correct preferences to allow operation in a particular QoS regime.
Reference: [BV96] <author> J.-C. Bolot, A. Vega-Garcia, </author> <title> Control Mechanisms for Packet Video in the Internet, </title> <booktitle> Proc. IEEE INFOCOM96, </booktitle> <address> pp232-239, San Francisco, California, USA, </address> <month> Mar. </month> <note> 1996 http://www.cs.columbia.edu/~hgs/papers/Bolo9603_Control.ps.gz </note>
Reference-contexts: It does this by changing the audio encoding it uses. We will refer to our example audio tool as daat (dynamically adaptable audio tool). daat is modelled on information presented in <ref> [BV96] </ref> for an audio tool developed at UCL [HSK98]. [HSHW95] shows that mixing audio encodings in an audio flow provides usable quality audio streams for Internet wide use. daat is capable of the voice encoding schemes shown in Table 1, where the first three columns are taken from [BV96]. <p> presented in <ref> [BV96] </ref> for an audio tool developed at UCL [HSK98]. [HSHW95] shows that mixing audio encodings in an audio flow provides usable quality audio streams for Internet wide use. daat is capable of the voice encoding schemes shown in Table 1, where the first three columns are taken from [BV96]. The fourth column is generated from the third column by dividing by 96000, and presents (artificial) power consumption per time unit, for each encoding scheme. We will assume that an instance of daat is running on a mobile host and consider this daat instance in isolation.
Reference: [CAH96] <author> A. Campbell, C. Auurecoechea, L. Hauw, </author> <title> A Review of QoS Architectures, </title> <booktitle> Proc. of 4th IFIP International Workshop on Quality of Service (IWQS'96), </booktitle> <address> Paris, France, </address> <month> March, </month> <year> 1996. </year> <month> ftp://ftp.ctr.columbia.edu/CTR-Research/comet/public/papers/96/CAM96a.ps.gz </month>
Reference-contexts: In enabling dynamic adaptability, the application is constantly (i.e. within application specific time scales) receiving information about the QoS that the network can offer, and then changing its flowstate to comply with the network capabilities. 3.1 QoS assurance In <ref> [CAH96] </ref>, there is an excellent description of the elements of a general QoS architecture for assuring QoS. With QoS assurance mechanisms, applications have to specify what they want the network to do for them, and the network tries to honour this request. <p> With QoS assurance mechanisms, applications have to specify what they want the network to do for them, and the network tries to honour this request. The network itself may provide adaptability mechanisms [Cam97] to cope with fluctuating QoS or heterogeneity due to network architecture. <ref> [CAH96] </ref> suggests that (among other things) the application should be in control of the following information that passes to the network: QoS service-level (e.g. guaranteed-service, controlled-load service) and QoS management policy (how adaptation should take place when there are QoS fluctuations). <p> However, in our consideration of dynamic adaptability, the use of the application typically requires interaction with the user in order to determine its adaptation requirements, and these may not be known until after the application is running. In <ref> [CAH96] </ref>, the QoS management policy: captures the degree of QoS adaptation (continuous or discrete) that the flow can tolerate and the scaling actions to be taken in the event of violations to the contracted QoS [CCH94].
Reference: [Cam97] <author> A. T. Campbell, Mobiware: </author> <title> QoS-Aware Middleware for Mobile Multimedia Networking, </title> <booktitle> Proc. IFIP 7th International Conference on High Performance Networking, </booktitle> <address> White Plains, New York, </address> <month> Apr </month> <year> 1997. </year> <note> http://comet.ctr.columbia.edu/~mobiware/wireless/PUB/hpn97.ps.Z </note>
Reference-contexts: With QoS assurance mechanisms, applications have to specify what they want the network to do for them, and the network tries to honour this request. The network itself may provide adaptability mechanisms <ref> [Cam97] </ref> to cope with fluctuating QoS or heterogeneity due to network architecture. [CAH96] suggests that (among other things) the application should be in control of the following information that passes to the network: QoS service-level (e.g. guaranteed-service, controlled-load service) and QoS management policy (how adaptation should take place when there are
Reference: [CCH94] <author> A. Campbell, G. Coulson, D. Hutchison, </author> <title> A Quality of Service Architecture, </title> <journal> ACM Computer Communications Review, </journal> <volume> vol. 24, no. 2, </volume> <year> 1994, </year> <note> pp6-27. ftp://ftp.comp.lancs.ac.uk/pub/mpg/MPG-94-08.ps.Z </note>
Reference-contexts: In [CAH96], the QoS management policy: captures the degree of QoS adaptation (continuous or discrete) that the flow can tolerate and the scaling actions to be taken in the event of violations to the contracted QoS <ref> [CCH94] </ref>. We chose to make a separation between what the flow can tolerate and the scaling actions to be taken. We argue that the former is a property of the media and the latter is an application specific requirement that includes interaction with the user.
Reference: [CCH96] <author> A. Campbell, G. Coluson, D. Hutchison, </author> <title> Supporting Adaptive Flows in Quality of Service Architecture, </title> <journal> ACM Multimedia Systems Journal, </journal> <month> May </month> <year> 1996. </year> <month> ftp://ftp.ctr.columbia.edu/CTR-Research/comet/public/papers/96/CAM96c.ps.gz </month>
Reference-contexts: Indeed, the value of the QoSParams produced by our QoSEngine may be more suitable for such use than raw values. Page 5 of 21 <ref> [CCH96] </ref> [LLB97]), and differentiated services may be set up that are domain/administration specific [DIFFSERV] Additionally, if cost-based feedback is available from the network, then cost could be treated as a QoS parameter although not related to the performance of the flow it acts as a defining constraint in the same way
Reference: [D+93] <author> L. Delgrossi, C. Halstrick, D. Hehmann, R. G. Herrtwich, O. Krone, J. Sandvoss, C. Vogt, </author> <title> Media scaling for Audiovisual Communication with the Heidelberg Transport System, </title> <booktitle> Proc. ACM Multimedia, </booktitle> <address> pp99-104, </address> <month> Jun </month> <year> 1993. </year>
Reference-contexts: This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations. Much of the attention for this work has focused on mechanisms that allow adaptability of the media flow construction by scaling (e.g. <ref> [D+93] </ref>), filtering (e.g. [YGHS96] ) or encoding techniques (e.g. [HSHW95] [AMV96]). An area that has received little attention is how applications can dynamically select the correct flow construction to match the available network QoS.
Reference: [DIFFSERV] <author> K. Nichols, S. Blake (Eds), </author> <title> Differentiated Services Operational Model and Definitions, </title> <booktitle> IETF DIFFSERV WG, </booktitle> <address> work-in-progress, </address> <month> Feb </month> <year> 1998. </year>
Reference-contexts: Indeed, the value of the QoSParams produced by our QoSEngine may be more suitable for such use than raw values. Page 5 of 21 [CCH96] [LLB97]), and differentiated services may be set up that are domain/administration specific <ref> [DIFFSERV] </ref> Additionally, if cost-based feedback is available from the network, then cost could be treated as a QoS parameter although not related to the performance of the flow it acts as a defining constraint in the same way as, say, defining minimum data rate or maximum jitter for a flow.
Reference: [FPM95] <author> K. Fall, J. Pasquale, S. McCanne, </author> <title> Workstation Video Playback Performance with Competitive Process Load, </title> <booktitle> Proc. 5 th Intl. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Durham, New Hampshire, pp179-182, </address> <month> Apr 18-21, </month> <year> 1995. </year> <note> http://hulk.bu.edu/nossdav95/papers/KevinFall.ps </note>
Reference-contexts: This means that our model must be capable of working in whatever timescales are specified by the application. QoS parameters may include local (end-system) resources, not just network QoS measurments. For example, on mobile systems, measurements of battery power or host load [YL95] <ref> [FPM95] </ref> may also be used for making adaptation decisions.
Reference: [HSHW95] <author> V. Hardman, M. A. Sasse, M. Handley & A. Watson, </author> <title> Reliable Audio for Use over the Internet, </title> <booktitle> Proc. INET'95, pp171-178, Hawaii, </booktitle> <address> USA, </address> <month> 27-30 Jun </month> <year> 1995. </year> <note> http://www.cs.ucl.ac.uk/staff/A.Sasse/inet95audio.ps </note>
Reference-contexts: This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations. Much of the attention for this work has focused on mechanisms that allow adaptability of the media flow construction by scaling (e.g. [D+93]), filtering (e.g. [YGHS96] ) or encoding techniques (e.g. <ref> [HSHW95] </ref> [AMV96]). An area that has received little attention is how applications can dynamically select the correct flow construction to match the available network QoS. The application must currently rely on the user to set the correct preferences to allow operation in a particular QoS regime. <p> It does this by changing the audio encoding it uses. We will refer to our example audio tool as daat (dynamically adaptable audio tool). daat is modelled on information presented in [BV96] for an audio tool developed at UCL [HSK98]. <ref> [HSHW95] </ref> shows that mixing audio encodings in an audio flow provides usable quality audio streams for Internet wide use. daat is capable of the voice encoding schemes shown in Table 1, where the first three columns are taken from [BV96].
Reference: [HSK98] <author> V. Hardman, A. Sasse, I. Kouvelas, </author> <title> Successful Multiparty Audio Communication over the Internet, </title> <institution> University College London, </institution> <note> to appear in Communications of the ACM, </note> <month> May </month> <year> 1998. </year>
Reference-contexts: It does this by changing the audio encoding it uses. We will refer to our example audio tool as daat (dynamically adaptable audio tool). daat is modelled on information presented in [BV96] for an audio tool developed at UCL <ref> [HSK98] </ref>. [HSHW95] shows that mixing audio encodings in an audio flow provides usable quality audio streams for Internet wide use. daat is capable of the voice encoding schemes shown in Table 1, where the first three columns are taken from [BV96].
Reference: [Kat94] <author> R. H. Katz, </author> <title> Adaptation and Mobility in Wireless Information Systems, </title> <journal> IEEE Personal Communications, </journal> <volume> vol. 1 no. 1, </volume> <year> 1994 </year>
Reference-contexts: The QoS may fluctuate due to routing effects or traffic interactions in the network [Pax97a] [Pax97b], or the application may be resident on a mobile host <ref> [Kat94] </ref>. There is currently great interest in making applications adaptable to changes in network QoS. This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations.
Reference: [LLB97] <author> S. Lu, K.-W. Lee, V. Bharghavan, </author> <title> Adaptive Service in Mobile Computing Environments, in Building QoS into Distributed Systems, </title> <editor> (A. Campbell, K. Nahrstedt, Eds), pp25-36, </editor> <publisher> [Chapman & Hall] 1997 </publisher>
Reference-contexts: Indeed, the value of the QoSParams produced by our QoSEngine may be more suitable for such use than raw values. Page 5 of 21 [CCH96] <ref> [LLB97] </ref>), and differentiated services may be set up that are domain/administration specific [DIFFSERV] Additionally, if cost-based feedback is available from the network, then cost could be treated as a QoS parameter although not related to the performance of the flow it acts as a defining constraint in the same way as,
Reference: [LSD98] <author> B. Landfeldt, A. Seneviratne, C. Diot, </author> <title> User Services Assistant: An End-to-End Reactive QoS Architecture, </title> <booktitle> Proc. 6 th International Workshop on Quality of Service (IWQoS98), </booktitle> <address> Napa, California, USA, </address> <month> 18-20 May </month> <year> 1998. </year>
Reference-contexts: Ultimately the applications functional constraints have the final say on which flowstate (s) is (are) functionally possible, but this should not dictate how the user would like the application to behave, i.e. how adaptation should take place. <ref> [LSD98] </ref> points out that the user requirements and the network QoS may change throughout the session and proposes that the user should be given the opportunity to make informed decisions about application adaptation. As an example, consider a remote teaching scenario and the requirements of the audio and video flows.
Reference: [Pax97a] <author> V. Paxson, </author> <title> End-to-End Internet Packet Dynamics, </title> <journal> Proc. ACM SIGCOMM97, </journal> <volume> pp139 152, </volume> <month> Sep </month> <year> 1997. </year> <month> ftp://ftp.ee.lbl.gov/papers/vp-pkt-dyn-sigcomm97.ps.Z </month>
Reference-contexts: 1. Introduction In a best-effort network such as the Internet, there is no guarantee of the network QoS that a particular application instance might receive. The QoS may fluctuate due to routing effects or traffic interactions in the network <ref> [Pax97a] </ref> [Pax97b], or the application may be resident on a mobile host [Kat94]. There is currently great interest in making applications adaptable to changes in network QoS. This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations.
Reference: [Pax97b] <author> V. </author> <title> Paxson, </title> <journal> End-to-End Routing Behavior in the Internet IEEE/ACM Transactions on Networking, </journal> <volume> vol. 5 no. 5, pp601-615, </volume> <month> Oct. </month> <note> 1997 ftp://ftp.ee.lbl.gov/papers/vp-routing-TON.ps.Z Page 21 of 21 </note>
Reference-contexts: 1. Introduction In a best-effort network such as the Internet, there is no guarantee of the network QoS that a particular application instance might receive. The QoS may fluctuate due to routing effects or traffic interactions in the network [Pax97a] <ref> [Pax97b] </ref>, or the application may be resident on a mobile host [Kat94]. There is currently great interest in making applications adaptable to changes in network QoS. This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations.
Reference: [RFC1890] <author> H. Schulzrinne, </author> <title> RTP Profile for Audio and Video Conferences with Minimal Control, </title> <address> RFC1890, </address> <month> Jan </month> <year> 1996. </year>
Reference: [RSVP] <author> R. Braden, Ed., L. Zhang, S. Berson, S. Herzog, S. Jamin, </author> <title> Resource ReSerVation Protocol (RSVP) Version 1 Functional Specification, </title> <address> RFC2205, </address> <month> Sep </month> <year> 1997. </year>
Reference-contexts: QoS assurance mechanisms are based around the use of resource reservation and QoS renegotiation to achieve the desired QoS for the application. Mechanisms such as RSVP <ref> [RSVP] </ref> are designed to provide resource reservations in the Internet. However, RSVP can fail [WGS97], and adaptability mechanisms in the network become impracticable and increasingly difficult to support in ad hoc or mobile network architectures.
Reference: [SCEH96] <author> S. Shenkar, D. Clark, D. Estrin, S. Herzog, </author> <title> Pricing in Computer Network: Reshaping the Research Agenda, </title> <journal> ACM Computer Communications Review, </journal> <volume> vol. 26. No. 2, pp19 43, </volume> <month> Apr </month> <year> 1996 </year> <month> ftp://ftp.parc.xerox.com/pub/net-research/picn.ps </month>
Reference-contexts: The value of making the cost explicit, as a QoS parameter, is that it highlights the importance of cost as a feedback control mechanism in future services <ref> [SCEH96] </ref>. 3.2 Dynamic adaptation QoS management policy will be subject to user preferences and application specific behaviour. Applications may find it useful to have a specification of the QoS management policy before the application starts operating.
Reference: [SNMPv2] <author> J. Case, K. McCloghrie, M. Rose, S. Waldbusser, </author> <title> Introduction to Community-based SNMPv2, </title> <address> RFC1901, </address> <month> Jan </month> <year> 1996. </year>
Reference-contexts: This information may be received in a number of ways: via local mechanisms, e.g. from the communication stack on the host via application specific mechanisms, e.g. via proprietary signalling as control messages from the remote receivers of the flow, e.g. using RTP/RTCP [RTP] from network management tools, e.g. using SNMP <ref> [SNMPv2] </ref> If we consider that the application knows best, then we must appreciate that there is likely to be no single best ubiquitous solution for getting information about the resources within the network.
Reference: [WGS97] <author> L. Wolf, C. Gridwodz, R. Steinmetz, </author> <title> Multimedia Communication, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 85 no. 12, pp-1915-1933, </volume> <month> Dec </month> <year> 1997. </year>
Reference-contexts: QoS assurance mechanisms are based around the use of resource reservation and QoS renegotiation to achieve the desired QoS for the application. Mechanisms such as RSVP [RSVP] are designed to provide resource reservations in the Internet. However, RSVP can fail <ref> [WGS97] </ref>, and adaptability mechanisms in the network become impracticable and increasingly difficult to support in ad hoc or mobile network architectures. Additionally, where resource reservation and QoS renegotiation are used, they should be available end-to-end for maximum utility.
Reference: [YGHS96] <author> N. Yeadon, F. Garcia, D. Hutchison, D. Shepherd, </author> <title> Filters: QoS Support Mechanisms for Multipeer Communications, </title> <journal> IEEE Journal of Selected Areas in Communication, </journal> <volume> vol. 14, no. 7, pp1245-1262, </volume> <month> Sep </month> <year> 1996. </year>
Reference-contexts: This is of particular importance for real-time media flows or flows that are sensitive to QoS fluctuations. Much of the attention for this work has focused on mechanisms that allow adaptability of the media flow construction by scaling (e.g. [D+93]), filtering (e.g. <ref> [YGHS96] </ref> ) or encoding techniques (e.g. [HSHW95] [AMV96]). An area that has received little attention is how applications can dynamically select the correct flow construction to match the available network QoS.
Reference: [YL95] <author> R. Yavatkar, K. Lakshman, </author> <title> A CPU Scheduling Algorithm for Continuous Media Applications, </title> <booktitle> Proc. 5th Intl. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Durham, New Hampshire, pp223-226, </address> <month> Apr 18-21, </month> <year> 1995. </year> <note> http://hulk.bu.edu/nossdav95/papers/yavatkar.ps </note>
Reference-contexts: This means that our model must be capable of working in whatever timescales are specified by the application. QoS parameters may include local (end-system) resources, not just network QoS measurments. For example, on mobile systems, measurements of battery power or host load <ref> [YL95] </ref> [FPM95] may also be used for making adaptation decisions.
References-found: 23

