URL: http://ai.iit.nrc.ca/DEIL/rieger.ps.Z
Refering-URL: http://ai.iit.nrc.ca/DEIL/abstracts.html
Root-URL: 
Email: e-mail: rieger@ls8.informatik.uni-dortmund.de  
Phone: Phone: +49-231-755 5104, Fax: +49-231-755  
Title: Data Preparation for Inductive Learning in Robotics  
Author: Anke Rieger 
Keyword: Data Engineering, Learning in Robotics, Software Tools  
Address: D-44221 Dortmund, Germany  5105  
Affiliation: FB Informatik LS VIII Universitat Dortmund  
Abstract: The application of logic-based learning algorithms in real-world domains, such as robotics, requires extensive data engineering, including the transformation of numerical tabular representations of real-world data to logic-based representations, feature and concept selection, the generation of the respective descriptions, and the composition of training and test sets, which meet the requirements of the respective learning algorithms. We are developing a tool, which supports a user of inductive logic-based algorithms with handling these tasks. The tool is developed in the context of a robot navigation domain, in which different logic-based algorithms are applied to learn operational concepts. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Klingspor, K. Morik, and A. Rieger. </author> <title> Learning operational concepts from sensor data of a mobile robot. </title> <note> (submitted to Machine Learning Journal), Septem-ber 1994. </note>
Reference-contexts: We conclude with a discussion of related and future work in Section 6. 2 The General Setting We are developing the tool within the context of a robot navigation domain, to which inductive algorithms are applied, in order to learn operational concepts. These concepts were introduced in <ref> [1] </ref>. They are to be used by a robot to perform flexibly user-defined tasks, such as move through the door, turn right, and move to the cupboard. Operational concepts, on one hand, provide the basis for high-level planning. <p> The focus is on representational issues, i.e., we deal with the question, about what information is represented at each level of the abstraction hierarchy, and how these descriptions are generated from the real-world data. In <ref> [1] </ref>, operational concepts were introduced, which are abstract descriptions of concepts, such as move through the door, and move along the wall. They constitute the interface between a human user and a robot: The user uses operational concepts to guide the robot in known as well as unknown environments. <p> Different ILP-algorithms, which are integrated in the MOBAL-system [5], have been applied to learn rules, which derive higher-level concepts of the abstraction hierarchy in Figure 1 from lower-level ones (for details, see, e.g., [4], <ref> [1] </ref>, [8]). Some examples of the rules, which derive action-oriented perceptual features, sensor group features, and sensor features, are given in the following: through_door (Trace,Start,End,parallel) &lt;- sg_jump (Trace,left,T1,T2,parallel) & sg_jump (Trace,right,T1,T2,parallel) & Start &lt; T1 & T2 &lt; End.
Reference: [2] <author> N. Lavrac and S. Dzeroski. </author> <title> Inductive Logic Programming Techniques and APplications. </title> <publisher> Ellis Horwood, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: In principle, it can be used for any ILP-algorithm (as for example those presented in [6] and <ref> [2] </ref>), which require training sets consisting of examples E and background knowledge B, which contain ground literals. It is a known fact, that for all learning algorithms the composition of appropriate training and test sets is crucial.
Reference: [3] <author> G. Lindner. </author> <title> Application of the learning algorithm RDT to a relational database. </title> <type> Master's thesis, </type> <institution> Uni-versitat Dortmund, </institution> <year> 1994. </year> <note> in German. </note>
Reference-contexts: view of the enormous amount of data, from which the right one has to be selected for putting together a specific training set, the question is, whether the access to the data cannot be made more efficient by using databases and by coupling the tool with the RDT/DB-method developed in <ref> [3] </ref>. Nevertheless, the tool has already been successfully applied, in order to prepare training sets for two different types of logic-based learningx algorithms.
Reference: [4] <author> K. Morik and A. Rieger. </author> <title> Learning action-oriented perceptual features for robot navigation. </title> <booktitle> In Proc. of the 1st European Workshop on Learning Robots, </booktitle> <year> 1993. </year> <note> also available as Research Report 3, FB Infor-matik LS 8, </note> <institution> Universitat Dortmund. </institution>
Reference-contexts: Correspondingly, the sensors on the robot's left side will perceive wall 3 and 5. In <ref> [4] </ref>, we introduced the term jump for these kind of edge groupings, consisting of two parallel edges. Other edge groupings, which are considered, are convex and concave corners, and singular edges, called line. <p> Different ILP-algorithms, which are integrated in the MOBAL-system [5], have been applied to learn rules, which derive higher-level concepts of the abstraction hierarchy in Figure 1 from lower-level ones (for details, see, e.g., <ref> [4] </ref>, [1], [8]). Some examples of the rules, which derive action-oriented perceptual features, sensor group features, and sensor features, are given in the following: through_door (Trace,Start,End,parallel) &lt;- sg_jump (Trace,left,T1,T2,parallel) & sg_jump (Trace,right,T1,T2,parallel) & Start &lt; T1 & T2 &lt; End.
Reference: [5] <author> K. Morik, St. Wrobel, J. U. Kietz, and W. Emde. </author> <title> Knowledge Acquisition and Machine Learning: Theory, Methods, and Applications. </title> <publisher> Addison Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Different ILP-algorithms, which are integrated in the MOBAL-system <ref> [5] </ref>, have been applied to learn rules, which derive higher-level concepts of the abstraction hierarchy in Figure 1 from lower-level ones (for details, see, e.g., [4], [1], [8]).
Reference: [6] <author> St. Muggleton, </author> <title> editor. Inductive Logic Programming. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: The fact, that the tool works on a restricted first-order logic representation formalism, does not confine its use to a specific domain nor to the two learning algorithms, 8 which we have used. In principle, it can be used for any ILP-algorithm (as for example those presented in <ref> [6] </ref> and [2]), which require training sets consisting of examples E and background knowledge B, which contain ground literals. It is a known fact, that for all learning algorithms the composition of appropriate training and test sets is crucial.
Reference: [7] <author> A. Rieger. </author> <title> Inferring probabilistic automata from sensor data for robot navigation. </title> <booktitle> In Proc. of the 3rd European Workhop on Learning Robots, </booktitle> <year> 1995. </year>
Reference-contexts: In the case of basic features these time points appear as fourth and fifth argument of the basic features. In the case of the ILP-algorithms, the hypothesis space, H, consists of Horn clauses. In the case of the algorithm, presented in <ref> [7] </ref>, it consists of the class of deterministic finite state automata and probabilistic automata, respectively. These automata accept as input sequences of observations, i.e., ground instances of basic features, which are accepted, if they lead to a final state, which represent concepts, i.e., sensor features. <p> The transfor mation can be realized by using the declarations of the abstraction levels for sensor features and basic features, respectively. The algorithm for inferring automata, presented in <ref> [7] </ref>, uses as training data sequences of observations in temporal order, which have or do not have to be accepted by the learned automaton.
Reference: [8] <author> St. Sklorz. </author> <title> Representing and learning operational concepts. </title> <type> Master's thesis, </type> <institution> Universitat Dortmund, </institution> <year> 1995. </year> <note> in German. </note>
Reference-contexts: Different ILP-algorithms, which are integrated in the MOBAL-system [5], have been applied to learn rules, which derive higher-level concepts of the abstraction hierarchy in Figure 1 from lower-level ones (for details, see, e.g., [4], [1], <ref> [8] </ref>). Some examples of the rules, which derive action-oriented perceptual features, sensor group features, and sensor features, are given in the following: through_door (Trace,Start,End,parallel) &lt;- sg_jump (Trace,left,T1,T2,parallel) & sg_jump (Trace,right,T1,T2,parallel) & Start &lt; T1 & T2 &lt; End.
Reference: [9] <author> St. Wessel. </author> <title> Learning qualitative features from numerical robot sensor data. </title> <type> Master's thesis, </type> <institution> Universitat Dortmund, </institution> <year> 1995. </year> <note> in German. 9 </note>
Reference-contexts: For this purpose, different algorithms have been implemented: As we are working within a restricted first-order logic framework, the initial data has to be transformed from a numerical, tabular representation to a relational one. Wessel <ref> [9] </ref> has implemented a program, which calculates basic features from sensor measurements. The calculation is influenced by different parameters, which reflect the sensitivity to changes in the measurements.
References-found: 9

