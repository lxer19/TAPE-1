URL: http://theory.lcs.mit.edu/~rosario/6.915/kocher.ps
Refering-URL: http://theory.lcs.mit.edu/~rosario/6.915/home.html
Root-URL: 
Title: Cryptanalysis of Diffie-Hellman, RSA, DSS, and Other Systems Using Timing Attacks Since many existing security
Author: Paul C. Kocher 
Date: (7 December 1995)  
Note: EXTENDED ABSTRACT  this preliminary abstract to alert vendors and users. Research in this area is still in progress.  
Abstract: Cryptosystems often take slightly different amounts of time to process different messages. With network-based cryptosystems, cryptographic tokens, and many other applications, attackers can measure the amount of time used to complete cryptographic operations. This abstract shows that timing channels can, and often do, leak key material. The attacks are particularly alarming because they often require only known ciphertext, work even if timing measurements are somewhat inaccurate, are computationally easy, and are difficult to detect. This preliminary draft outlines attacks that can find secret exponents in Diffie-Hellman key exchange, factor RSA keys, and find DSS secret parameters. Other symmetric and asymmetric cryptographic functions are also at risk. A complete description of the attack will be presented in a full paper, to be released later. I conclude by noting that it is more difficult than might be expected to close timing channels.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> D. Chaum, </author> <title> "Blind Signatures for Untraceable Payments," </title> <booktitle> Advances in Cryptology: Proceedings of Crypto 82, </booktitle> <publisher> Plenum Press, </publisher> <year> 1983, </year> <pages> pp. 199-203. </pages>
Reference-contexts: Writing software that runs in fixed time is hard, especially for platform-independent implementations, since many factors affect performance, including compiler optimizations, RAM cache hits, and instruction timings. A better alternative would be to use blinding techniques, such as those used for blind signatures <ref> [1] </ref>, to prevent attackers from knowing actual inputs to the modular exponentiation function.
Reference: 2. <author> W. Diffie and M.E. Hellman, </author> <title> "New Directions in Cryptography," </title> <journal> IEEE Transactions on Information Theory, v. IT-22, n. </journal> <volume> 6, </volume> <month> Nov </month> <year> 1976, </year> <pages> pp. 644-654. </pages>
Reference-contexts: Box 8243, Stanford, CA 94309, USA. E-mail: pck@cryptography.com, FAX: 1-(415)-321-1483. 2 Timing cryptanalysis of fixed-exponent Diffie-Hellman If a party uses the same secret exponent (x) for multiple Diffie-Hellman <ref> [2] </ref> key exchanges, the exponent can often be found from timing measurements. (The attack does not work if a new exponent is generated for every exchange.) The attacker first observes k operations, measuring the time (t) taken by the victim to compute each z = (y x mod n).
Reference: 3. <author> X. Lai, </author> <title> On the Design and Security of Block Ciphers, ETH Series in Information Processing, </title> <publisher> v. 1, Konstanz: Hartung-Gorre Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The additional time required to move nonzero bits will slightly degrade the cipher's overall performance, revealing the Hamming weight of the key. This provides an average of n=0 n 2 56 log 2 2 56 n 3:95 bits of key information. IDEA <ref> [3] </ref> uses an f () function with a modulo (2 16 + 1) multiplication operation, which will almost always run in non-constant time. RC5 [6] is also at risk on platforms where rotates run in non-constant time.
Reference: 4. <author> National Bureau of Standards, </author> <title> NBS FIPS PUB 46-1, "Data Encryption Standard," </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <month> Apr </month> <year> 1981. </year>
Reference-contexts: For example, the 28-bit C and D values in the DES <ref> [4] </ref> key schedule are sometimes rotated using a conditional to test whether a one-bit must be wrapped around. The additional time required to move nonzero bits will slightly degrade the cipher's overall performance, revealing the Hamming weight of the key.
Reference: 5. <institution> National Institute of Standards and Technology, </institution> <note> NIST FIPS PUB 186, </note> <institution> "Digital Signature Standard," U.S. Department of Commerce, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: As with the Diffie-Hellman/non-CRT attack, once one digit of p has been found, the same timing measurements can be reused to find subsequent digits. (Additional details will be presented in the full paper.) 4 Timing cryptanalysis of DSS The Digital Signature Standard <ref> [5] </ref> computes s = (k 1 (H (m) + x r)) mod q, where r and q are known to attackers, k and k 1 are usually precomputed, H (m) is the hash of the message, and x is the private key.
Reference: 6. <author> R.L. Rivest, </author> <title> "The RC5 Encryption Algorithm," Fast Software Encryption: </title> <booktitle> Second International Workshop, </booktitle> <address> Leuven, Belgium, </address> <month> December </month> <year> 1994, </year> <title> proceedings, </title> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 86-96. </pages>
Reference-contexts: This provides an average of n=0 n 2 56 log 2 2 56 n 3:95 bits of key information. IDEA [3] uses an f () function with a modulo (2 16 + 1) multiplication operation, which will almost always run in non-constant time. RC5 <ref> [6] </ref> is also at risk on platforms where rotates run in non-constant time.
Reference: 7. <author> P.R. Rogaway and D. Coppersmith, </author> <title> "A Software-Optimized Encryption Algorithm," Fast Software Encryption: </title> <booktitle> Cambridge Security Workshop, </booktitle> <address> Cambridge, U.K., </address> <month> December </month> <year> 1993, </year> <title> proceedings, </title> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 56-63. </pages>
Reference-contexts: RC5 [6] is also at risk on platforms where rotates run in non-constant time. RAM cache hits can produce timing characteristics in implementations of Blowfish [9], SEAL <ref> [7] </ref>, DES, and other ciphers if tables in memory are not used identically in every encryption. 6 Conclusions Designing cryptosystems to resist timing attacks is difficult can be quite expensive since fixed-time code must always exhibit worst-case performance.
Reference: 8. <author> RSA Laboratories, "RSAREF: </author> <title> A Cryptographic Toolkit," </title> <note> version 2.0, 1994, available via FTP from rsa.com. </note>
Reference-contexts: Errors can thus be detected and corrected, since after a mistake no new significant correlations will be detected. A preliminary implementation of the attack using the RSAREF toolkit <ref> [8] </ref> has been written. RSAREF scans across the exponent from MSB to LSB and does two exponent bits at a time, so corresponding adjustments to the attack were made.
Reference: 9. <author> B. Schneier, </author> <title> "Description of a New Variable-Length Key, 64-bit Block Cipher (Blowfish)," Fast Software Encryption: </title> <booktitle> Second International Workshop, </booktitle> <address> Leuven, Belgium, </address> <month> December </month> <year> 1994, </year> <title> proceedings, </title> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. </pages> <month> 191-204. </month> <title> All trademarks are the property of their respective holders. </title> <type> 6 </type>
Reference-contexts: IDEA [3] uses an f () function with a modulo (2 16 + 1) multiplication operation, which will almost always run in non-constant time. RC5 [6] is also at risk on platforms where rotates run in non-constant time. RAM cache hits can produce timing characteristics in implementations of Blowfish <ref> [9] </ref>, SEAL [7], DES, and other ciphers if tables in memory are not used identically in every encryption. 6 Conclusions Designing cryptosystems to resist timing attacks is difficult can be quite expensive since fixed-time code must always exhibit worst-case performance.
References-found: 9

