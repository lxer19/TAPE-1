URL: http://www.cs.toronto.edu/~lin/dbmerge.ps
Refering-URL: http://www.cs.toronto.edu/~lin/
Root-URL: 
Email: flin,mendelg@db.toronto.edu  
Title: Merging Databases under Constraints  
Author: Jinxin Lin Alberto O. Mendelzon 
Date: June 3, 1996  
Address: Toronto, CANADA M5S 1A4  
Affiliation: Dept. of Computer Science University of Toronto  
Abstract: The problem of integrating information from conflicting sources comes up in many current applications, such as cooperative information systems, heterogeneous databases, and multi-agent systems. We model this by the operation of merging first-order theories. We propose a formal semantics for this operation and show that it has desirable properties, including abiding by majority rule in case of conflict and syntax independence. We apply our semantics to the special case when the theories to be merged represent databases under integrity constraints. We then present a way of merging databases that have different or conflicting schemas caused by problems such as synonym, homonym or type conflicts in the schema integration literature.
Abstract-found: 1
Intro-found: 1
Reference: [AG85] <author> S. Abiteboul and G. Grahne. </author> <title> Update semantics for incomplete databases. </title> <booktitle> In Proc. of 11th International Conference on Very Large Data Bases, </booktitle> <pages> pages 1-12, </pages> <year> 1985. </year>
Reference-contexts: This question is essentially the same as how to representing disjunctive information in databases. The topic of representing disjunctive information has been studied by many researchers, and a number of proposals have been put forward in the literature, e.g. <ref> [KW85, AG85, IV89] </ref>. If the disjunctive occurs over a single attribute in a relation, then a simple form, called OR-table as in [IV89], can be employed. <p> There is a huge literature in these two areas. Pioneer work includes Fagin et al.'s theory of updating logical databases [FUV83, FKUV86], Gardenfors's theory of revision [G 88], Borgida's mechanism of exception handling [Bor85], Abiteboul and Grahne's update semantics <ref> [AG85] </ref>, etc. There is also a great deal of work on multidatabases and schema integration. Bright et al. [BAP92] and Batini and Lenzerini [BL86] put forward a survey on the issues in multidatabase systems and schema integration respectively.
Reference: [BAP92] <author> M.W. Bright, A.R.Hurson, and S.H. Pakzad. </author> <title> A taxonomy and current issues in multidatabase systems. </title> <journal> Computer, </journal> <volume> 25(3) </volume> <pages> 50-59, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Being able to share information from multiple sources has become increasingly important. Considerable efforts have been made in both academia and industry to develop global information sharing systems such as federate databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences. <p> However, little attention has been paid to the problem of conflicting or missing data among component databases. This problem is important since data from different databases often disagree because of, for instance, incomplete updates, system error or valid differences in underlying semantics of the databases <ref> [BAP92] </ref>. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multi-agent reasoning systems [HM85, FH88], collaborative computing or groupware <p> Pioneer work includes Fagin et al.'s theory of updating logical databases [FUV83, FKUV86], Gardenfors's theory of revision [G 88], Borgida's mechanism of exception handling [Bor85], Abiteboul and Grahne's update semantics [AG85], etc. There is also a great deal of work on multidatabases and schema integration. Bright et al. <ref> [BAP92] </ref> and Batini and Lenzerini [BL86] put forward a survey on the issues in multidatabase systems and schema integration respectively. Baral et al. [BKMS92] present several algorithms for combining logic theories by manipulating the maximally consistent subsets of the union of the theories.
Reference: [BJe94] <editor> M. Brodie, M. Jarke, and M. Papazoglou (eds.). </editor> <booktitle> Proc. of the 2nd intenational conference on cooperative information systems. </booktitle> <address> Toronto, Canada, </address> <month> May, </month> <year> 1994. </year>
Reference-contexts: system error or valid differences in underlying semantics of the databases [BAP92]. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multi-agent reasoning systems [HM85, FH88], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory.
Reference: [BKMS92] <author> C. Baral, S. Kraus, J. Minker, and V. S. Subrahmanian. </author> <title> Combining knowledge bases consisting of first-order theories. </title> <journal> Computational Intelligence, </journal> <volume> 8 </volume> <pages> 45-71, </pages> <year> 1992. </year>
Reference-contexts: There is also a great deal of work on multidatabases and schema integration. Bright et al. [BAP92] and Batini and Lenzerini [BL86] put forward a survey on the issues in multidatabase systems and schema integration respectively. Baral et al. <ref> [BKMS92] </ref> present several algorithms for combining logic theories by manipulating the maximally consistent subsets of the union of the theories. Fagin et al. [FUV83] take a similar approach, not to theory merging but to belief revision. Their approaches are largely syntactic, whereas our method has a model-theoretical semantic definition.
Reference: [BL86] <author> C. Batini and M. Lenzerini. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. <ref> [BL86, MIR94] </ref>). Problems treated include name differences, structural differences or format differences. However, little attention has been paid to the problem of conflicting or missing data among component databases. <p> The differences among the schemas of databases are well known in schema integration (see <ref> [BL86] </ref> for a survey, also [MIR94]), e.g., this first problem is known as "synonym" problem and the second "homonym" problem. The differences and relationships among the schemas of databases must be recognized and dealt with when merging the information of the databases. <p> The global schema must ensure that all the information in the original databases can be expressed. This issue, however, is not our concern here. We can use, for example, one of the many methodologies proposed in <ref> [BL86, SL90, MIR94] </ref> to design the global schema. In this section, we assume the global schema has been constructed. We use rules to transform data from local schemas to the global schema. <p> Example 7.2 (Different structure|type conflict) As part of an example in <ref> [BL86] </ref>, suppose (db 1 ) = fP ublisher (N ame; Address)g; (db 2 ) = fP ublication (T itle; Code; P ublisher)g: In db 1 , P ublisher is represented as an entity but as an attribute in db 2 . This difference is called type conflict in [BL86]. <p> example in <ref> [BL86] </ref>, suppose (db 1 ) = fP ublisher (N ame; Address)g; (db 2 ) = fP ublication (T itle; Code; P ublisher)g: In db 1 , P ublisher is represented as an entity but as an attribute in db 2 . This difference is called type conflict in [BL86]. <p> There is also a great deal of work on multidatabases and schema integration. Bright et al. [BAP92] and Batini and Lenzerini <ref> [BL86] </ref> put forward a survey on the issues in multidatabase systems and schema integration respectively. Baral et al. [BKMS92] present several algorithms for combining logic theories by manipulating the maximally consistent subsets of the union of the theories.
Reference: [BM86] <author> F. Bry and R. Manthey. </author> <title> Checking consistency of database constraints: a logical basis. </title> <booktitle> In Proceedings of the 12th International Conference on Very Large Data Bases, </booktitle> <pages> pages 13-20, </pages> <year> 1986. </year>
Reference-contexts: Theories and constraints that have no finite model contain "axioms of infinity" and they are not suitable for databases (either deductive or relational) purposes. This view seems to be shared by some other authors (e.g., <ref> [BM86] </ref>). For finitely satisfiable T 1 ; : : : ; T n and IC, we have the following two results.
Reference: [Bor85] <author> A. Borgida. </author> <title> Language features for flexible handling of exceptions in information systems. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 10 </volume> <pages> 563-603, </pages> <year> 1985. </year>
Reference-contexts: There is a huge literature in these two areas. Pioneer work includes Fagin et al.'s theory of updating logical databases [FUV83, FKUV86], Gardenfors's theory of revision [G 88], Borgida's mechanism of exception handling <ref> [Bor85] </ref>, Abiteboul and Grahne's update semantics [AG85], etc. There is also a great deal of work on multidatabases and schema integration. Bright et al. [BAP92] and Batini and Lenzerini [BL86] put forward a survey on the issues in multidatabase systems and schema integration respectively.
Reference: [BV84] <author> C. Beeri and M. Vardi. </author> <title> Formal systems for tuple and equality generating dependencies. </title> <journal> SIAM J. Comput., </journal> <volume> 13(1) </volume> <pages> 76-98, </pages> <month> Feb. </month> <year> 1984. </year>
Reference: [Dal88] <author> Mukesh Dalal. </author> <title> Investigations into a theory of knowledge base revision: preliminary report. </title> <booktitle> In Proceedings of the 7th National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 475-479, </pages> <year> 1988. </year>
Reference: [EP90] <author> A. Elmagarmid and C. </author> <title> Pu. </title> <journal> ACM Computing Surveys special issue on heterogeneous databases. ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Being able to share information from multiple sources has become increasingly important. Considerable efforts have been made in both academia and industry to develop global information sharing systems such as federate databases, multidatabases, or interoperable systems (cf. <ref> [BAP92, EP90] </ref>). Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. [BL86, MIR94]). Problems treated include name differences, structural differences or format differences.
Reference: [FH88] <author> R. Fagin and J. Halpern. </author> <title> Belief, awareness, and limited reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 39-76, </pages> <year> 1988. </year>
Reference-contexts: underlying semantics of the databases [BAP92]. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multi-agent reasoning systems <ref> [HM85, FH88] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory.
Reference: [FKUV86] <author> R. Fagin, G. M. Kuper, J. D. Ullman, and M. Vardi. </author> <title> Updating logical databases. </title> <booktitle> Advances in Computing Research, </booktitle> <volume> 3 </volume> <pages> 1-18, </pages> <year> 1986. </year>
Reference-contexts: In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. The approach has a close connection with the work on database updates <ref> [FUV83, FKUV86, KM91a] </ref> and knowledge base revision [G 88, KM91b]. It has a special property of obtaining maximal amount of information from each theory while observing majority rule in case of conflict. <p> There is a huge literature in these two areas. Pioneer work includes Fagin et al.'s theory of updating logical databases <ref> [FUV83, FKUV86] </ref>, Gardenfors's theory of revision [G 88], Borgida's mechanism of exception handling [Bor85], Abiteboul and Grahne's update semantics [AG85], etc. There is also a great deal of work on multidatabases and schema integration.
Reference: [FUV83] <author> R. Fagin, J. D. Ullman, and M. Vardi. </author> <title> On the semantics of updates in databases. </title> <booktitle> In 2nd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 352-365, </pages> <year> 1983. </year>
Reference-contexts: In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. The approach has a close connection with the work on database updates <ref> [FUV83, FKUV86, KM91a] </ref> and knowledge base revision [G 88, KM91b]. It has a special property of obtaining maximal amount of information from each theory while observing majority rule in case of conflict. <p> There is a huge literature in these two areas. Pioneer work includes Fagin et al.'s theory of updating logical databases <ref> [FUV83, FKUV86] </ref>, Gardenfors's theory of revision [G 88], Borgida's mechanism of exception handling [Bor85], Abiteboul and Grahne's update semantics [AG85], etc. There is also a great deal of work on multidatabases and schema integration. <p> Bright et al. [BAP92] and Batini and Lenzerini [BL86] put forward a survey on the issues in multidatabase systems and schema integration respectively. Baral et al. [BKMS92] present several algorithms for combining logic theories by manipulating the maximally consistent subsets of the union of the theories. Fagin et al. <ref> [FUV83] </ref> take a similar approach, not to theory merging but to belief revision. Their approaches are largely syntactic, whereas our method has a model-theoretical semantic definition. Subrahmanian [Sub94] uses annotated logic to interpret the inconsistency among multiple knowledge bases and proposes a framework for amalgamating knowledge bases.
Reference: [G 88] <author> Peter Gardenfors. </author> <title> Knowledge in Flux Modeling the Dynamics of Epistemic States. </title> <publisher> MIT press, </publisher> <year> 1988. </year> <month> 19 </month>
Reference-contexts: In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. The approach has a close connection with the work on database updates [FUV83, FKUV86, KM91a] and knowledge base revision <ref> [G 88, KM91b] </ref>. It has a special property of obtaining maximal amount of information from each theory while observing majority rule in case of conflict. <p> Let us define a revision operator ffi M that incorporates a new sentence into an existing knowledge base as follows: Definition 5.1 ffi M = Merge (f g; ). Gardenfors and his colleagues <ref> [G 88] </ref> propose a set of rationality postulates, colloquially known as the AGM postulates, that they argue to be desirable for revision. Katsuno and Mendelzon [KM91b] rephrase those postulates so that they are applicable for finite knowledge bases. <p> The intuition behind these postulates is described in <ref> [G 88, KM91b] </ref>. We now show that ffi M satisfies the above postulates for revision. This shows that in single theory case, our merge operator Merge (f g; ) can act as a revision operator with all the desirable properties. Theorem 5.1 ffi M satisfies R1-R6. <p> There is a huge literature in these two areas. Pioneer work includes Fagin et al.'s theory of updating logical databases [FUV83, FKUV86], Gardenfors's theory of revision <ref> [G 88] </ref>, Borgida's mechanism of exception handling [Bor85], Abiteboul and Grahne's update semantics [AG85], etc. There is also a great deal of work on multidatabases and schema integration.
Reference: [Gru94] <author> J. Grudin. </author> <title> Groupware and social dynamics: Eight challenges for developers. </title> <journal> Com--munications of the ACM, </journal> <volume> 37(1) </volume> <pages> 92-105, </pages> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multi-agent reasoning systems [HM85, FH88], collaborative computing or groupware <ref> [Gru94] </ref>, computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory. However, these systems want to extract additional knowledge that is not locally held by any agent, but collectively by all of them (called distributed knowledge in [HM85]).
Reference: [HM85] <author> J. Halpern and Y. Moses. </author> <title> A guide to the modal logics of knowledge and belief. </title> <booktitle> In Proceedings IJCAI-85, </booktitle> <pages> pages 480-490, </pages> <year> 1985. </year> <note> A complete version appears in Artificial Intelligence, </note> <month> 54(3) </month> <pages> 319-379, </pages> <year> 1992, </year> <title> under the title "A guide to completeness and complexity for modal logics of knowledge and belief". </title>
Reference-contexts: underlying semantics of the databases [BAP92]. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems [BJe94, HM92, WL92], multi-agent reasoning systems <ref> [HM85, FH88] </ref>, collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory. <p> In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory. However, these systems want to extract additional knowledge that is not locally held by any agent, but collectively by all of them (called distributed knowledge in <ref> [HM85] </ref>). For example, if an agent knows a and another agent knows a ! b, then combining their knowledge yields b, even though neither one of them individually knows b. In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. <p> There are different properties of the two approaches as well, e.g. ours has the majority property, and his method also allows the individual knowledge bases to contain inconsistencies, uncertainties and nonmonotonic modes of negation. Halpern and Moses <ref> [HM85] </ref> defined the notion of distributed knowledge held by a group of agents, but their formulation of distributed knowledge applies only to agents who do not have conflicting views. 9 Concluding Remarks We have presented a new approach for integrating conflicting information from different databases.
Reference: [HM92] <author> K. Huff and J. Mylopoulos. </author> <title> Development of intelligent information systems: A workshop summary. </title> <journal> International Journal of Intelligent & Cooperative Information Systems, </journal> <volume> 1(2) </volume> <pages> 233-248, </pages> <year> 1992. </year>
Reference-contexts: system error or valid differences in underlying semantics of the databases [BAP92]. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multi-agent reasoning systems [HM85, FH88], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory.
Reference: [IV89] <author> T. Imielinski and K. Vadaparty. </author> <title> Complexity of query processing in databases with or-objects. </title> <booktitle> In Proc. </booktitle> <address> PODS'89, </address> <year> 1989. </year>
Reference-contexts: This question is essentially the same as how to representing disjunctive information in databases. The topic of representing disjunctive information has been studied by many researchers, and a number of proposals have been put forward in the literature, e.g. <ref> [KW85, AG85, IV89] </ref>. If the disjunctive occurs over a single attribute in a relation, then a simple form, called OR-table as in [IV89], can be employed. <p> The topic of representing disjunctive information has been studied by many researchers, and a number of proposals have been put forward in the literature, e.g. [KW85, AG85, IV89]. If the disjunctive occurs over a single attribute in a relation, then a simple form, called OR-table as in <ref> [IV89] </ref>, can be employed.
Reference: [KM91a] <author> H. Katsuno and A. O. Mendelzon. </author> <title> On the difference between updating a knowledge base and revising it. </title> <booktitle> In Proceedings of the 2nd International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 387-394, </pages> <year> 1991. </year>
Reference-contexts: In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. The approach has a close connection with the work on database updates <ref> [FUV83, FKUV86, KM91a] </ref> and knowledge base revision [G 88, KM91b]. It has a special property of obtaining maximal amount of information from each theory while observing majority rule in case of conflict.
Reference: [KM91b] <author> H. Katsuno and A. O. Mendelzon. </author> <title> Propositional knowledgebase revision and minimal change. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 263-294, </pages> <year> 1991. </year>
Reference-contexts: In this paper, we propose a formal semantics for a generalization of the above problem| merging first-order theories. The approach has a close connection with the work on database updates [FUV83, FKUV86, KM91a] and knowledge base revision <ref> [G 88, KM91b] </ref>. It has a special property of obtaining maximal amount of information from each theory while observing majority rule in case of conflict. <p> Gardenfors and his colleagues [G 88] propose a set of rationality postulates, colloquially known as the AGM postulates, that they argue to be desirable for revision. Katsuno and Mendelzon <ref> [KM91b] </ref> rephrase those postulates so that they are applicable for finite knowledge bases. <p> The intuition behind these postulates is described in <ref> [G 88, KM91b] </ref>. We now show that ffi M satisfies the above postulates for revision. This shows that in single theory case, our merge operator Merge (f g; ) can act as a revision operator with all the desirable properties. Theorem 5.1 ffi M satisfies R1-R6.
Reference: [KW85] <author> A. Keller and M. Wilkins. </author> <title> On the use of an extended relational model to handle changing incomplete information. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-11:620-633, </volume> <year> 1985. </year>
Reference-contexts: This question is essentially the same as how to representing disjunctive information in databases. The topic of representing disjunctive information has been studied by many researchers, and a number of proposals have been put forward in the literature, e.g. <ref> [KW85, AG85, IV89] </ref>. If the disjunctive occurs over a single attribute in a relation, then a simple form, called OR-table as in [IV89], can be employed.
Reference: [Lin96] <author> Jinxin Lin. </author> <title> Integration of weighted knowledge bases. </title> <journal> Artificial Intelligence, </journal> 83/2:363-378, 1996. 
Reference: [LM94] <author> Jinxin Lin and Alberto O. Mendelzon. </author> <title> Knowledge base merging by majority. </title> <type> KRR Technical Report, </type> <institution> Dept. of Computer Science, Univ. of Toronto, Toronto M5S 1A4, </institution> <year> 1994. </year>
Reference-contexts: We denote the result of merging by Merge (fT 1 ; : : : ; T n g; IC), which is also a theory. 4.1 The Definition Our merge operator proposed in this section extends the one in <ref> [LM94] </ref> to the first-order case and to deal with integrity constraints. The idea is that the models of the resulting theory should be those possible worlds that are "closest" to the original theories.
Reference: [MIR94] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema equivalence in heterogeneous systems: bridging theory and practice. </title> <booktitle> In Proc. of the Int'l Conference on Extending Database Technology, </booktitle> <year> 1994. </year>
Reference-contexts: Those systems aim at integrating information stored in possibly distributed or heterogeneous component databases. Research in this area focuses on integrating the schemas of local component databases into a global, unified schema (cf. <ref> [BL86, MIR94] </ref>). Problems treated include name differences, structural differences or format differences. However, little attention has been paid to the problem of conflicting or missing data among component databases. <p> The differences among the schemas of databases are well known in schema integration (see [BL86] for a survey, also <ref> [MIR94] </ref>), e.g., this first problem is known as "synonym" problem and the second "homonym" problem. The differences and relationships among the schemas of databases must be recognized and dealt with when merging the information of the databases. <p> The global schema must ensure that all the information in the original databases can be expressed. This issue, however, is not our concern here. We can use, for example, one of the many methodologies proposed in <ref> [BL86, SL90, MIR94] </ref> to design the global schema. In this section, we assume the global schema has been constructed. We use rules to transform data from local schemas to the global schema.
Reference: [Rei78] <author> R. Reiter. </author> <title> On closed world databases. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 119-140. </pages> <publisher> Plenum, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: We shall use the proposed merging operator to deal with the problem of merging databases under constraints. We define a database to be a finite set of primitive sentences in P. We adopt the open-world assumption as opposed to the closed-world assumption (both assumptions are described in <ref> [Rei78] </ref>).
Reference: [SL90] <author> A. P. Sheth and J. A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-235, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: The global schema must ensure that all the information in the original databases can be expressed. This issue, however, is not our concern here. We can use, for example, one of the many methodologies proposed in <ref> [BL86, SL90, MIR94] </ref> to design the global schema. In this section, we assume the global schema has been constructed. We use rules to transform data from local schemas to the global schema.
Reference: [Sub94] <author> V. S. Subrahmanian. </author> <title> Amalgamating knowledge bases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(2) </volume> <pages> 291-331, </pages> <year> 1994. </year> <month> 20 </month>
Reference-contexts: Fagin et al. [FUV83] take a similar approach, not to theory merging but to belief revision. Their approaches are largely syntactic, whereas our method has a model-theoretical semantic definition. Subrahmanian <ref> [Sub94] </ref> uses annotated logic to interpret the inconsistency among multiple knowledge bases and proposes a framework for amalgamating knowledge bases. His framework is based on a non-classical logic, i.e. annotated logic, while ours is developed on top of the classical logic.
Reference: [WL92] <author> C. C. Woo and F. H. </author> <title> Lochovsky. </title> <journal> Knowledge communication in intelligent infor-mation systems. Intenational Journal of Intelligent & Cooperative Information Systems, </journal> <volume> 1 </volume> <pages> 203-228, </pages> <year> 1992. </year> <month> 21 </month>
Reference-contexts: system error or valid differences in underlying semantics of the databases [BAP92]. fl Current address of this author: Enterprise Integration Laboratory, Department of Industrial Engineering, University of Toronto, 4 Taddle Creek Road, Toronto, CANADA M5S 3G9. 1 A similar problem exists in many other areas such as cooperative information systems <ref> [BJe94, HM92, WL92] </ref>, multi-agent reasoning systems [HM85, FH88], collaborative computing or groupware [Gru94], computer-supported cooperative work (CSCW), etc. In a system involving multiple agents, knowledge or beliefs held by different agents may be contradictory.
References-found: 28

