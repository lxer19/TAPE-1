URL: http://www.cs.berkeley.edu/~eylon/cs270/report.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~christos/cs270/index.html
Root-URL: 
Title: On Detailed Routing for a Hierarchical Scalable Reconfigurable Array With Constrained Switching Capability CS-270 Course Project  
Author: Eylon Caspi, Randy Huang, and Christoforos Kozyrakis 
Date: April 28, 1998  
Abstract: In modern FPGA CAD flow, netlist routing on a particular routing architecture is solved in two steps, global routing based on wire bandwidth constraints of the architecture, and subsequent detailed routing based on the finer switching constraints of the architecture. Reducing or constraining switching resources is desirable for reducing an FPGA's circuit area and power consumption, though it typically makes detailed routing more difficult. Detailed routing is provably NP-complete in popular 2-D mesh architectures with constrained switching flexibility, as in the Xilinx 4000 series FPGAs [22]. Wu et al. have presented a tree-based routing architecture with constrained switching flexibility which has a polynomial algorithm and guarantees for detailed routing but which has non-scalable bandwidth [22]. In this paper we study approaches to detailed routing for a scalable fat-tree routing architecture with restricted switching topology, in which routing bandwidth scales according to Rent's Rule. We discuss several formulations and frameworks for solving the detailed routing problem, using such techniques as graph coloring, multicomodity flow, integer linear programming, and satisfiability.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. E. </author> <title> Benes. Mathematical Theory of Connecting Networks and Telephone Traffic. </title> <address> New York: </address> <publisher> Academic, </publisher> <year> 1965. </year>
Reference-contexts: If all nets in a track domain cross-over at the root of a fat-tree, then the track domain's routing resources act much like a Benes network connecting the leaves of the left and right subtrees with arbitrary permutations between left-right leaf pairs <ref> [1] </ref> (a fat-tree using only -switches is exactly a Benes network connecting the leaves of its two subtrees).
Reference: [2] <author> Andre DeHon, </author> <title> "BRASS RC array for CS254, </title> <booktitle> fall 1997," </booktitle> <address> U. C. </address> <institution> Berkeley graduate course material, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: towards the leaves, whereas a bottom-up algorithm scans for cross-over points from the leaves towards the root. 8 U.C.Berkeley BRASS 4 group's HSRA project (Hierarchical Scalable Reconfig-- urable Array), using a combination T- and -switches at different tree heights to control channel capacity and to approximate a desired Rent parameter <ref> [2] </ref>. In the current formulation, a strictly-alternating switch schedule, shown in figure 5, is used to achieve a Rent parameter of 0:5. The analysis of detailed routing for this architecture suffers from most of the same problems as the all--switch fat- tree described above. <p> ignore such short-cut paths in the analysis of HSRA-like fat-trees. 3 Formulations of The Detailed Routing Prob <p>- lem On Fat-Trees We have considered several approaches to the problem of detailed routing in a fat-tree architecture using alternating T- and -switch based diagonal switch- boxes, as in the U.C.Berkeley HSRA <ref> [2] </ref>. In each case, we seek an efficient detailed routing algorithm, or to prove that detailed routing is NP-complete in that formulation, and to prove whether a bounded mapping ratio W d =W g exists. Our work for each approach remains preliminary, and conclusive results have yet to be found.
Reference: [3] <author> Fanica Gavril, </author> <title> "The intersection graphs of subtrees in trees are exactly the chordal graphs," </title> <journal> J. Combinational Theory, </journal> <volume> vol. B16, </volume> <pages> pp. 47-56, </pages> <year> 1974. </year>
Reference-contexts: Note that this architecture corresponds to a Rent parameter p = 0, where channel widths do not scale for larger trees. The existence of an efficient routing algorithm derives from the fact that the global nets, being subtrees of an undirected tree, have a chordal intersection graph <ref> [3] </ref> which can be colored in O (jV j + jEj) time [6]. Figures 3 (a),(b) illustrate the correspondence between an H-tree's global routing graph (a) and chordal intersection graph (b).
Reference: [4] <author> Fanica Gavril, </author> <title> "Algorithms for minimum coloring, maximum clique, mini-mum covering by cliques, and maximum independent set of a chordal graph," </title> <journal> SIAM J. Comput., </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 180-187, </pages> <month> June </month> <year> 1972. </year> <month> 21 </month>
Reference-contexts: Figures 3 (a),(b) illustrate the correspondence between an H-tree's global routing graph (a) and chordal intersection graph (b). The chordal property of subtree intersection graphs also indicates the applicability of efficient algorithms for other difficult problems, including maximum clique, minimum cover by cliques, and maximum independent set <ref> [4] </ref>, which may be useful in other approaches to detailed routing. A specific top-down 3 detailed routing algorithm requiring O (#nets + #LUTs) time is given in [22]. <p> Efficient algorithms for coloring and finding all maximal cliques of the intermediate chordal graphs can be found in <ref> [4] </ref> and [6]. An equivalent way to think of the modified coloring problem is to choose cliques in the intersection graph to color uniformly and color adjacent cliques, rather than partially collapse the graph and graph-color it. <p> An algorithm to partition a chordal graph into a minimally-colored set of cliques is not known to the authors at this time, much less under capacity constraints. An efficient algorithm for finding the minimum covering by cliques for a chordal graph is given in <ref> [4] </ref>, though it is not clear that such a covering is colored minimally. In addition, that covering need not be disjoint or consistent with domain capacity constraints, so cliques may need to be trimmed and/or supplemented in order to form an acceptable clique partition.
Reference: [5] <editor> A. Goldberg et al., </editor> <title> "An implementation of a combinatorial approximation algorithm for minimum cost multi-commodity flow," Integer Programming and Combinatorial Optimization, </title> <year> 1998. </year>
Reference-contexts: The algorithms mentioned in the previous paragraph use linear programming, interior-point techniques and/or combinatorial approximations to solve the problem. Recent data indicates that these algorithms can produce highly accurate results (* ' 1%) several order of magnitude faster than older approaches and are practical even for large problems <ref> [5] </ref>. Using these algorithms for detailed routing can be of great value in the absence of other direct solutions to the detailed routing problem. Leighton's algorithm for example can be used to check if a detailed routing exists at all.
Reference: [6] <author> M. C. Golumbic. </author> <title> Algorithmic Graph Theory and Perfect Graphs. </title> <address> New York: </address> <publisher> Academic, </publisher> <year> 1980. </year>
Reference-contexts: The existence of an efficient routing algorithm derives from the fact that the global nets, being subtrees of an undirected tree, have a chordal intersection graph [3] which can be colored in O (jV j + jEj) time <ref> [6] </ref>. Figures 3 (a),(b) illustrate the correspondence between an H-tree's global routing graph (a) and chordal intersection graph (b). <p> Efficient algorithms for coloring and finding all maximal cliques of the intermediate chordal graphs can be found in [4] and <ref> [6] </ref>. An equivalent way to think of the modified coloring problem is to choose cliques in the intersection graph to color uniformly and color adjacent cliques, rather than partially collapse the graph and graph-color it.
Reference: [7] <author> Ronald I. Greenberg, </author> <title> "The fat-pyramid and universal parallel computation independent of wire delay," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 43, no. 12, </volume> <pages> pp. 1358-1364, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: While a heuristic detailed routing algorithm has been implemented, it can make no guarantee on the detailed routability of a successfully global-routed network. In addition to the fat-tree topology, the HSRA provides short-cut channels between subtrees, similar to those of Greenberg's fat-pyramid architecture <ref> [7] </ref>. The shortcuts exist between physically neighboring LUTs which are logically distant in the tree. Greenberg used shortcuts to extend Leiserson's notion of area-universality [15] for fat-trees under the realistic assumption that network delay is a function of distance through the network.
Reference: [8] <author> H. J. Hoover, M. M. Klawe, N. J. Pippenger, </author> <title> "Bounding fan-out in logical networks," </title> <journal> J. ACM, </journal> <volume> vol. 31, no. 1, </volume> <pages> pp. 13-18, </pages> <month> January </month> <year> 1984. </year>
Reference-contexts: The degree of a netlist can be reduced and bounded by transforming high-fan-out logic into a tree-structured design with bounded fanout <ref> [8] </ref>. Hence it would be possible to arbitrarily reduce the number of track domains (colors) needed to detail-route a design at the cost of adding some LUTs.
Reference: [9] <author> Stefan Hougardy, </author> <title> "Inclusions between classes of perfect graphs," </title> <address> http://www.informatik.hu-berlin.de/~hougardy/paper/classes.html. </address>
Reference: [10] <author> Tommy R. Jensen, Bjarne Toft. </author> <title> Graph Coloring Problems. </title> <address> New York: </address> <publisher> John Wiley & Sons, </publisher> <year> 1995. </year>
Reference-contexts: The primary appeal of edge-coloring is the strong bound on minimum chromatic index due to Vizing, namely that any degree graph can be edge-colored using or + 1 colors [20], <ref> [10] </ref>. The degree of a netlist can be reduced and bounded by transforming high-fan-out logic into a tree-structured design with bounded fanout [8]. Hence it would be possible to arbitrarily reduce the number of track domains (colors) needed to detail-route a design at the cost of adding some LUTs.
Reference: [11] <author> P. Klein, S. Plotkin, C. Stein, E. Tardos, </author> <title> "Fast approximation algorithms for the unit capacity concurrent flow problem with applications to routing and finding sparse cuts," </title> <booktitle> Proc. 22rd Annual Symposium on Theory of Computing, </booktitle> <year> 1990. </year>
Reference-contexts: Klein, Plotkin, Stein and Tardos present a randomized approximation algorithm for the unit capacity flow problem with expected running time O ((k + m)m log m), where the constant depends on * <ref> [11] </ref>. This translates to complexity of O ((k + cN log N )cN log N log (cN log N )) = O (c 2 N 2 (log N ) 3 ) in our case.
Reference: [12] <author> F. T. Leighton, </author> <title> "New lower bound techniques for VLSI," </title> <journal> Math. Systems Theory, </journal> <volume> vol. 17, </volume> <pages> pp. 47-70, </pages> <year> 1984. </year>
Reference-contexts: Specifically, the channel capacity in and out of a subtree can be made to scale according to Rent's Rule, an empirical finding that the number of I/O connections to a computational block scales sub-linearly with the size of the block 2 . Certain fat tree architectures, namely Leighton's tree-of-meshes <ref> [12] </ref> (Rent parameter p = 0:5), are provably area-optimal, in that they can embed an arbitrary logic design which requires N nodes (LUTs) in its optimal routing architecture using no more than N log N nodes. <p> Leighton's tree-of-meshes architecture <ref> [12] </ref> [13] represents the case where S-boxes have full flexibility, allowing tracks of the 3 incident channels to be connected in arbitrary permutations. Detailed routing is trivial in this architecture, and a perfect mapping ratio W d =W g = 1 can be achieved.
Reference: [13] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1992. </year>
Reference-contexts: Leighton's tree-of-meshes architecture [12] <ref> [13] </ref> represents the case where S-boxes have full flexibility, allowing tracks of the 3 incident channels to be connected in arbitrary permutations. Detailed routing is trivial in this architecture, and a perfect mapping ratio W d =W g = 1 can be achieved.
Reference: [14] <author> T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos, S. Tragoudas, </author> <title> "Fast approximation algorithms for multi-commodity flow problems," </title> <journal> J. Computer and System Sciences, </journal> <month> April, </month> <year> 1995. </year>
Reference-contexts: Based on this result, Leighton et al. present an algorithm that solves the general concurrent flow problem (unit capacities not required) in expected running time of O (knm log 4 n) <ref> [14] </ref>. This is O (c 3 N 2 (log N ) 6 ) in our case. Apart from providing a (1 + *)-approximation to optimal routing when a routing exists, this algorithm can also provide a proof in the case that no optimal solution exists.
Reference: [15] <author> Charles E. Leiserson, "Fat-trees: </author> <title> universal networks for hardware-efficient supercomputing," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. c-34, no. 10, </volume> <pages> pp. 892-901, </pages> <month> October </month> <year> 1985. </year>
Reference-contexts: In addition to the fat-tree topology, the HSRA provides short-cut channels between subtrees, similar to those of Greenberg's fat-pyramid architecture [7]. The shortcuts exist between physically neighboring LUTs which are logically distant in the tree. Greenberg used shortcuts to extend Leiserson's notion of area-universality <ref> [15] </ref> for fat-trees under the realistic assumption that network delay is a function of distance through the network. <p> The desire to bound a mapping ratio W d =W g in detailed routing in effect seeks to bound the area penalty for embedding an arbitrary netlist into a given 20 routing architecture with respect to an implementation with optimal area. Leis-- erson showed in <ref> [15] </ref> that it is conversely possible to bound the time penalty for embedding an arbitrary netlist into a fat-tree of area equal to that of the area- optimal implementation.
Reference: [16] <author> Charles E. Leiserson, </author> <title> "VLSI theory and parallel supercomputing," </title> <booktitle> pre-sented at Caltech Decennial VLSI Conference, </booktitle> <month> May </month> <year> 1989. </year>
Reference: [17] <author> B. S. Panda, </author> <title> "New linear time algorithms for generating perfect elimination orderings of chordal graphs," </title> <journal> Information Processing Letters, </journal> <volume> vol. 58, </volume> <pages> pp. 111115, </pages> <year> 1996. </year>
Reference: [18] <author> Sadiq M. Sait and Habib Youssef. </author> <title> VLSI Physical Design Automation, Theory and Practice. </title> <address> New York: </address> <publisher> IEEE Press, McGraw-Hill Intl. Limited, </publisher> <year> 1995. </year>
Reference-contexts: Because global routing on a fat-tree is deterministic given a placement, the placement and routing phases are collectively replaced by a partitioning phase. While balanced partitioning based on min-cut bi-partitioning is NP-complete, there are known efficient approximation algorithms such at Fiduccia-Mattheyes (local search) and spectral partitioning <ref> [18] </ref>.
Reference: [19] <author> S. Skiena, </author> <title> The Algorithm Design Manual. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1998. </year> <month> 22 </month>
Reference-contexts: represents the number of commodities, not the number of LUT I/O pins. 15 (assuming unit cost for routing flow through an edge), under the constraints: P ij 1; 8i; j; j x l P ji = b l and x l The integer multi-commodity flow is generally an NP-complete problem <ref> [19] </ref>, even when unit capacities and unit demands are used. 3.2.4 Approximation Algorithms A large number of approximation algorithms have been designed for the multi- commodity flow problem and can be used in this case.
Reference: [20] <author> V. G. Vizing, </author> <title> "The chromatic class of a multigraph" (in Russian), </title> <journal> Kiber-netika (Kiev), </journal> <volume> no. 3, </volume> <pages> pp. 29-39, </pages> <year> 1965. </year> <journal> English translation in Cybernetics, </journal> <volume> vol. 1, </volume> <pages> pp. 32-41. </pages>
Reference-contexts: The primary appeal of edge-coloring is the strong bound on minimum chromatic index due to Vizing, namely that any degree graph can be edge-colored using or + 1 colors <ref> [20] </ref>, [10]. The degree of a netlist can be reduced and bounded by transforming high-fan-out logic into a tree-structured design with bounded fanout [8]. Hence it would be possible to arbitrarily reduce the number of track domains (colors) needed to detail-route a design at the cost of adding some LUTs.
Reference: [21] <author> Yu-Liang Wu and Douglas Chang, </author> <title> "On the NP-completeness of regular 2-D FPGA routing architectures and a novel solution," </title> <booktitle> Proc. IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <address> San Jose, California, </address> <month> November 6-10, </month> <year> 1994, </year> <pages> pp. 362-366. </pages>
Reference-contexts: It has been shown that 2-D mesh architectures with much less than full switch flexibility 1 do not 1 In a 2D-mesh routing architecture, a full-flexibility S-box with W tracks per channel requires 6W 2 switches. Wu et al. <ref> [21] </ref> show that any 2D-mesh architecture with O (W ) switches per W -wide S-box and 3 or more track domains has an unbounded mapping ratio. <p> Because the instance is constructed to have fixed global channel density W g = 2, while the detailed channel density W d is equal to the chromatic number of G and is thus unbounded, the mapping ratio W d =W g is not bounded. In <ref> [21] </ref>, Wu and Chang prove that the results of NP-completeness and unbounded mapping ratio (for 3 or more track domains) hold with any fixed switch-box topology that has less than O (W ) switches per W -track-wide S-box.
Reference: [22] <author> Yu-Liang Wu, Shuji Tsukiyama, Malgorzata Marek-Sadowska, </author> <title> "Graph based analysis of 2-D FPGA routing," </title> <journal> IEEE Trans. Computer Aided Design, </journal> <volume> vol. 15, no. 1, </volume> <pages> pp. 33-44, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: In general, an FPGA logic block contains more than just a LUT, but we will use the two terms interchangably. A generic 2-D routing architecture is shown in figure 1. We adopt the terminology of <ref> [22] </ref> for a discussion of the architecture. Logic blocks (LUTs, marked "L" in the figure) communicate through a 2-D mesh of routing channels. Each channel contains several parallel wires or tracks. <p> Several routing architectures exist which have a bounded mapping ratio using O (W 2 ) switches per S-box [23]. corresponding colored intersection graph. have a bounded mapping ratio and that their detailed routing problem is NP- complete <ref> [22] </ref>. While routing architectures with full switch flexibility have a perfect mapping ratio W d =W g = 1 and trivial detailed routing, full-flexibility switch-boxes are in practice prohibitively expensive in circuit area and power. Fat-tree routing architectures have several properties which make them attractive over 2-D meshes. <p> In the case of FPGA routing architectures, with N being the number of LUTs, c is the base channel capacity. p is typically 0.5 to 0.7 for VLSI logic and applications commonly implemented on FPGAs. 4 (top) using T-switches, (bottom) using -switches. than for 2-D meshes. Wu et al. <ref> [22] </ref> have demonstrated an H-tree architecture using diagonal S-boxes (figure 4 (top)) which has a bounded mapping ratio W d =W g = 1:5 as well as a polynomial-time detailed routing algorithm. <p> By using an arbitrary schedule of S-boxes based on T-switches or -switches (figures 4 (top),(bottom)) at different heights of the tree, the tree can be made to resemble anything from the H-tree of Wu et al. <ref> [22] </ref> (using only T-switches, p = 0) to a butterfly network with channel capacity linear in the number of logic blocks (using only -switches, p = 1). <p> In section 3, we formulate the detailed routing problem in several graph-theoretic frameworks and work towards efficient routing algorithms. Our findings thus far do not shed light on whether a bounded mapping ratio exists. 2 Related Work 2.1 2-D Mesh Architectures Wu, Tsukiyama, and Marek-Sadowska prove in <ref> [22] </ref> that detailed routing on a 2-D mesh architecture (as in the Xilinx 4000-series FPGAs) is NP-complete and has no bounded mapping ratio. <p> Some good routing results exist for lower-flexibility S-boxes, specifically for diagonal S-boxes (figure 4 (top)), which allow the network's switch requirements to grow linearly with the number of LUTs <ref> [22] </ref>. Using the same correspondence between detailed routing and graph coloring, Wu et al. show in [22] that detailed routing on an H-tree architecture with diagonal S-boxes can be done in polynomial time with a bounded mapping ratio W d =W g 3=2. <p> Some good routing results exist for lower-flexibility S-boxes, specifically for diagonal S-boxes (figure 4 (top)), which allow the network's switch requirements to grow linearly with the number of LUTs <ref> [22] </ref>. Using the same correspondence between detailed routing and graph coloring, Wu et al. show in [22] that detailed routing on an H-tree architecture with diagonal S-boxes can be done in polynomial time with a bounded mapping ratio W d =W g 3=2. The H-tree topology studied, shown in figure 3 (a), uses 3-way T-switches in its S-boxes, as shown in figure 4 (top). <p> A specific top-down 3 detailed routing algorithm requiring O (#nets + #LUTs) time is given in <ref> [22] </ref>. DeHon (U.C.Berkeley) has spent some time studying a fat-tree routing architecture whose diagonal switch-boxes use -switches (figure 4 (bottom)), to date finding no guarantees for detailed routing. Unlike the T-switch, a -switch does not merge tracks for nets heading up or down the tree. <p> To support the embedding of arbitrary netlists with logical fan-out in the fat-tree, we can take other measures, such as allowing a LUT I/O pin to connect to multiple tracks ("dog-legging"). 4 Berkeley Reconfigurable Architectures, Systems, and Software 9 3.1 Graph Coloring We would like to extend the results of <ref> [22] </ref> to use graph coloring for global routing. This approach is attractive because it is based on chordal subtree intersection graphs for which there exist numerous efficient algorithms. In the H-tree architecture of [22] with T-switch based diagonal S-boxes, each track- domain is one channel wide everywhere, so node-coloring the intersection <p> Reconfigurable Architectures, Systems, and Software 9 3.1 Graph Coloring We would like to extend the results of <ref> [22] </ref> to use graph coloring for global routing. This approach is attractive because it is based on chordal subtree intersection graphs for which there exist numerous efficient algorithms. In the H-tree architecture of [22] with T-switch based diagonal S-boxes, each track- domain is one channel wide everywhere, so node-coloring the intersection graph of nets to assign nets into track domains completely solves the detailed routing problem.
Reference: [23] <author> Yu-Liang Wu, Douglas Chang, Malgorzata Marek-Sadowska, Shuji Tsukiyama, </author> <title> "Not necessarily more switches more routability," </title> <booktitle> Proc. AsiaPacific Design Automation Conference, </booktitle> <year> 1996. </year> <month> 23 </month>
Reference-contexts: Wu et al. [21] show that any 2D-mesh architecture with O (W ) switches per W -wide S-box and 3 or more track domains has an unbounded mapping ratio. Several routing architectures exist which have a bounded mapping ratio using O (W 2 ) switches per S-box <ref> [23] </ref>. corresponding colored intersection graph. have a bounded mapping ratio and that their detailed routing problem is NP- complete [22].
References-found: 23

