URL: ftp://ftp.santafe.edu/pub/moore/semi.ps
Refering-URL: http://www.ph.tn.tudelft.nl/PRInfo/reports/msg00211.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: moore@santafe.edu  
Title: Predicting Non-linear Cellular Automata Quickly by Decomposing Them into Linear Ones  
Author: Cristopher Moore 
Keyword: PACS Keywords:  
Note: 02.10, 02.70, 05.45, 46.10  
Date: October 6, 1997  
Address: Santa Fe, New Mexico  
Affiliation: Santa Fe Institute,  
Abstract: We show that a wide variety of non-linear cellular automata (CAs) can be decomposed into a quasidirect product of linear ones. These CAs can be predicted by parallel circuits of depth O(log 2 t) using gates with binary inputs, or O(log t) depth if "sum mod p" gates with an unbounded number of inputs are allowed. Thus these CAs can be predicted by (idealized) parallel computers much faster than by explicit simulation, even though they are non-linear. This class includes any CA whose rule, when written as an algebra, is a solvable group. We also show that CAs based on nilpotent groups can be predicted in depth O(log t) or O(1) by circuits with binary or "sum mod p" gates respectively. We use these techniques to give an efficient algorithm for a CA rule which, like elementary CA rule 18, has diffusing defects that annihilate in pairs. This can be used to predict the motion of defects in rule 18 in O(log 2 t) parallel time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, </author> " <title> 1 1 formulae on finite structures." </title> <journal> Ann. Pure Appl. </journal> <note> Logic 24 (1983) 1-48. </note>
Reference-contexts: From the definitions we have AC 0 ACC 0 [2] ACC 0 NC 1 AC 1 ACC 1 NC 2 NC P The parity function is clearly in ACC 0 [2], and Ajtai and Furst et al. <ref> [1, 12] </ref> have shown that it is not in AC 0 . Razborov [30] has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky [33] has shown that ACC 0 [p] and ACC 0 [q] are incomparable if p and q are distinct primes. <p> The Circuit Value problem for algebraic circuits over solvable groups is in ACC 1 . For instance, the Quaternions Q 8 have the derived series Q 8 f1g f1g since [a; b] = 1 for any a; b and <ref> [1; 1] </ref> = 1. The factor groups are H 1 = Q 8 =f1g ~ = Z 2 2 and H 2 = f1g ~ = Z 2 , so Q 8 is a subgroup of Z 2 o Z 2 2 . <p> For instance, a nilpotent group of class 1 is simply an Abelian group. A nilpotent group of class 2 has commutators which commute with everything, so that [[a; b]; c] = 1 (such as the Quaternions where [a; b] = 1 and <ref> [1; c] </ref> = 1). And so on. Theorem 3. Any CA whose rule is a nilpotent group is in LOGSPACE-uniform ACC 0 . Proof. First, consider a nilpotent group of class 2.
Reference: [2] <author> D.K. Arrowsmith and R.A. Dow, </author> <title> "Additive cellular automata with external inputs." </title> <booktitle> Complex Systems 9 (1995) 399-429. </booktitle>
Reference-contexts: It is easy to see that NC P, but like P NP this inclusion is believed, but not known, to be proper. From the definitions we have AC 0 ACC 0 <ref> [2] </ref> ACC 0 NC 1 AC 1 ACC 1 NC 2 NC P The parity function is clearly in ACC 0 [2], and Ajtai and Furst et al. [1, 12] have shown that it is not in AC 0 . <p> From the definitions we have AC 0 ACC 0 <ref> [2] </ref> ACC 0 NC 1 AC 1 ACC 1 NC 2 NC P The parity function is clearly in ACC 0 [2], and Ajtai and Furst et al. [1, 12] have shown that it is not in AC 0 . Razborov [30] has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky [33] has shown that ACC 0 [p] and ACC 0 [q] are incomparable if <p> AC 1 ACC 1 NC 2 NC P The parity function is clearly in ACC 0 <ref> [2] </ref>, and Ajtai and Furst et al. [1, 12] have shown that it is not in AC 0 . Razborov [30] has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky [33] has shown that ACC 0 [p] and ACC 0 [q] are incomparable if p and q are distinct primes. Thus the first and second inclusions are proper. <p> So any such CA is in ACC 0 . Now consider a non-autonomous version of (2), in which the coefficients f i and h vary arbitrarily in space and time (rules with varying h were considered in <ref> [2] </ref>). This is no longer a cellular automaton, since the rule is non-homogeneous and so does not commute with the shift map [9]; we will use it as the second component of a quasidirect product of CA's, where the f i and h are determined by the first component.
Reference: [3] <author> David A. Barrington, </author> <title> "Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 ." J. </title> <institution> Comput. System Sci. </institution> <month> 38 </month> <year> (1989) </year> <month> 150-164. </month>
Reference-contexts: An algebraic circuit over an algebra (A; ) is a circuit where each gate outputs the product a b of its inputs, rather than implementing the standard Boolean functions; the Circuit Value problem for various classes of algebras has been studied by a number of authors <ref> [3, 4, 27] </ref>. Predicting an r = 1=2 CA is clearly a special case of Circuit Value, where the circuit has a simple periodic structure in space and time. However, a number of the results we prove below for CAs will in fact hold for algebraic circuits of arbitrary shape. <p> This leaves us with the following open question: is there an algorithm in ACC 1 , or NC k for some k, for predicting CAs based on arbitrary finite groups? Barrington <ref> [3] </ref> and Beaudry et al. [4] have provided strong evidence to the contrary: since multiplication in A 5 can simulate NAND gates, circuits with non-solvable gates have P-complete Circuit Value problems. <p> For each t, then, we have an expression (5) with O (t k ) terms. Evaluating an expression of length m in a solvable group can be done in depth O (log m) with binary gates or constant depth with ACC gates <ref> [3] </ref>. So nilpotent CAs are in ACC 0 . Finally, we show that this family of circuits is LOGSPACE-uniform, i.e. the circuit for predicting the CA t time-steps into the future can be generated by an algorithm using only O (log t) bits of memory.
Reference: [4] <author> M. Beaudry, P. McKenzie, P. Peladeau, and D. Therien, </author> <title> "Circuits with monoidal gates." </title> <note> Springer LNCS, Proc. STACS (1993) 555-565. </note>
Reference-contexts: An algebraic circuit over an algebra (A; ) is a circuit where each gate outputs the product a b of its inputs, rather than implementing the standard Boolean functions; the Circuit Value problem for various classes of algebras has been studied by a number of authors <ref> [3, 4, 27] </ref>. Predicting an r = 1=2 CA is clearly a special case of Circuit Value, where the circuit has a simple periodic structure in space and time. However, a number of the results we prove below for CAs will in fact hold for algebraic circuits of arbitrary shape. <p> This leaves us with the following open question: is there an algorithm in ACC 1 , or NC k for some k, for predicting CAs based on arbitrary finite groups? Barrington [3] and Beaudry et al. <ref> [4] </ref> have provided strong evidence to the contrary: since multiplication in A 5 can simulate NAND gates, circuits with non-solvable gates have P-complete Circuit Value problems. Unless there is some way to exploit the periodic structure of the circuit corresponding to a CA's evolution, then, we would have Conjecture. <p> This is somewhat more general than the result of Beaudry et al. <ref> [4] </ref>, who show that Circuit Value is in the class DET for solvable semigroups, which is not known to be comparable with ACC 1 . 11 5 CAs based on nilpotent groups We now show that a subset of the solvable groups have CAs in ACC 0 . Definition [15].
Reference: [5] <author> N. Boccara, J. Nasser and M. Roger, </author> <note> Phys. Rev. A 44 (1991) 866. </note>
Reference-contexts: By tracking defects until they collide, we should be able to turn this into an algorithm for predicting rule 18 in polylogarithmic parallel time on average. Such an algorithm could be used for long-time simulations to test the hypothesis that the defects' motions are uncorrelated <ref> [5, 8] </ref>.
Reference: [6] <author> W. Burnside, </author> <title> Theory of Groups of Finite Order. </title> <publisher> Dover, </publisher> <year> 1911. </year>
Reference-contexts: Thus the first and second inclusions are proper. However, for all anyone has been able to prove, ACC 0 <ref> [6] </ref> could be equal to P (or even NP for that matter). A problem is P-complete if instances of any other problem in P can be converted to it by a LOGSPACE algorithm. <p> Many small groups are themselves polyabelian, including the dihedral groups, groups of order p 3 for p an odd prime, any group of square-free order, all groups of order p 2 q where p and q are primes, and so on <ref> [6, 15] </ref>.
Reference: [7] <author> O. Chein, H.O. Pflugfelder, and J.D.H. Smith, </author> <title> Quasigroups and Loops: Theory and Applications. </title> <publisher> Heldermann Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: Any word-defined CA rule on a solvable or nilpotent group can be predicted in ACC 1 or ACC 0 respectively. Many interesting non-associative algebras can be written as words over non-Abelian groups; see <ref> [7] </ref> for a number of such constructions. 7 Diffusing defect dynamics We close by showing that these techniques can in fact be applied to "classical" CA behaviors.
Reference: [8] <author> J.P. Crutchfield and J.E. Hanson, </author> <title> "Attractor vicinity decay for a cellular automaton." </title> <note> Chaos 3:2 (1993) 215-224. </note>
Reference-contexts: 0 Blocking pairs of sites together gives the algebra * 00 01 10 11 01 01 00 00 00 11 01 00 00 00 The subalgebras f00; 01g and f00; 10g form two domains on which the CA acts like Z 2 , and defects between them annihilate in pairs <ref> [8, 13, 17] </ref>. If it weren't for the product 10*01 = 11, the set f00; 01; 10g would form a subalgebra isomorphic to ? (with 00 ~ = 0, 01 ~ = 1, and 10 ~ = 1 0 ) and 11 would not appear after the first time-step. <p> By tracking defects until they collide, we should be able to turn this into an algorithm for predicting rule 18 in polylogarithmic parallel time on average. Such an algorithm could be used for long-time simulations to test the hypothesis that the defects' motions are uncorrelated <ref> [5, 8] </ref>.
Reference: [9] <author> K. Culik II, L.P. Hurd and S. Yu, </author> <title> "Computation theoretical aspects of cellular automata." </title> <journal> Physica D 45 (1990) 357-378. </journal>
Reference-contexts: This is no longer a cellular automaton, since the rule is non-homogeneous and so does not commute with the shift map <ref> [9] </ref>; we will use it as the second component of a quasidirect product of CA's, where the f i and h are determined by the first component.
Reference: [10] <editor> S. Eilenberg and M.P. Schutzenberger, </editor> <booktitle> "On pseudovarieties." Advances in Math. </booktitle> <month> 19 </month> <year> (1976) </year> <month> 413-418. 17 </month>
Reference-contexts: In the language of universal algebra, this makes the set of CAs in a given complexity class a pseudovariety <ref> [10] </ref>. It would be wonderful if the pseudovariety corresponding to ACC 1 or NC, say, were finitely presented: that is, if a finite set of algebraic identities were necessary and sufficient for a CA to be in a given parallel complexity class. Now recall the following definition from group theory.
Reference: [11] <author> K. Eloranta, </author> <title> "Partially permutive cellular automata: analysis via tilings subalphabets." </title> <institution> Helsinki University of Technology Research report A314 (1992). </institution>
Reference-contexts: Here r = 2. and so on. Several authors have used this approach to explore CA properties such as partial reversibility <ref> [11] </ref> and periodicity [29]. Predicting a cellular automaton t time-steps into the future is believed to be no easier in general than simulating it explicitly.
Reference: [12] <author> M. Furst, J.B. Saxe, and M. Sipser, </author> <title> "Parity, circuits, and the polynomial-time hierarchy." </title> <journal> Math. Syst. </journal> <note> Theory 17 (1984) 13-27. </note>
Reference-contexts: From the definitions we have AC 0 ACC 0 [2] ACC 0 NC 1 AC 1 ACC 1 NC 2 NC P The parity function is clearly in ACC 0 [2], and Ajtai and Furst et al. <ref> [1, 12] </ref> have shown that it is not in AC 0 . Razborov [30] has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky [33] has shown that ACC 0 [p] and ACC 0 [q] are incomparable if p and q are distinct primes.
Reference: [13] <author> P. Grassberger, </author> <note> Phys. Rev. A 28 (1983) 3666. </note>
Reference-contexts: 0 Blocking pairs of sites together gives the algebra * 00 01 10 11 01 01 00 00 00 11 01 00 00 00 The subalgebras f00; 01g and f00; 10g form two domains on which the CA acts like Z 2 , and defects between them annihilate in pairs <ref> [8, 13, 17] </ref>. If it weren't for the product 10*01 = 11, the set f00; 01; 10g would form a subalgebra isomorphic to ? (with 00 ~ = 0, 01 ~ = 1, and 10 ~ = 1 0 ) and 11 would not appear after the first time-step.
Reference: [14] <author> R. Greenlaw, H.J. Hoover, and W.L. Ruzzo, </author> <title> Limits to Parallel Computation: P-Completeness Theory. </title> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: It would be highly surprising if this were true for all CAs: since CAs exist which can simulate universal Turing machines (e.g. [18]), predicting a CA for a linear (or polynomial) amount of time is P-complete in general <ref> [14] </ref>. Particular CA rules such as majority-voting models in d 3, lattice gases, and diffusion-limited aggregration have also been shown to be P-complete [22, 25, 19]. <p> It is generally believed that P-complete problems are inherently sequential, and cannot be efficiently paral-lelized; if any P-complete problem is in NC, then P = NC and all polynomial-time problems can be solved in polylogarithmic parallel time <ref> [14, 28] </ref>.
Reference: [15] <author> M. Hall, </author> <title> The Theory of Groups. </title> <publisher> Chelsea, </publisher> <year> 1976. </year>
Reference-contexts: Now recall the following definition from group theory. Definition <ref> [15] </ref>. The derived series of a group G is the series of normal subgroups G = G 0 G 1 where G i+1 = h [G i ; G i ]i = G 0 i is the commutator subgroup of G i . <p> Many small groups are themselves polyabelian, including the dihedral groups, groups of order p 3 for p an odd prime, any group of square-free order, all groups of order p 2 q where p and q are primes, and so on <ref> [6, 15] </ref>. <p> Since polyabelian groups are solvable (if G = ((A 0 A 1 ) A 2 ) : : :, then G 0 (A 1 A 2 ) : : :) and since subgroups and factors of solvable groups are also solvable <ref> [15] </ref>, this group's CA cannot be predicted by these methods. <p> Definition <ref> [15] </ref>. The lower central series of a group G is the series of normal subgroups G = 1 2 where i+1 = h [ i ; G]i.
Reference: [16] <author> J.E. Hanson and J.P. Crutchfield, </author> <title> "Computational mechanics of cellular automata: an example." Santa Fe Institute Working Paper 95-10-095, to appear in Physica D, </title> <booktitle> Proceedings of the International Workshop on Lattice Dynamics. </booktitle>
Reference-contexts: Rule 54 has a more complex chemistry of travelling particles than rule 18 does <ref> [16] </ref>, and it is unclear how to 16 predict their motion efficiently. So far we have been unsuccessful at applying our methods to these CAs.
Reference: [17] <author> E. Jen, </author> <title> "Exact solvability and quasiperiodicity of one-dimensional cellular automata." </title> <note> Nonlinearity 4 (1990) 251. </note>
Reference-contexts: 0 Blocking pairs of sites together gives the algebra * 00 01 10 11 01 01 00 00 00 11 01 00 00 00 The subalgebras f00; 01g and f00; 10g form two domains on which the CA acts like Z 2 , and defects between them annihilate in pairs <ref> [8, 13, 17] </ref>. If it weren't for the product 10*01 = 11, the set f00; 01; 10g would form a subalgebra isomorphic to ? (with 00 ~ = 0, 01 ~ = 1, and 10 ~ = 1 0 ) and 11 would not appear after the first time-step.
Reference: [18] <author> K. Lindgren and M.G. Nordahl, </author> <title> "Universal computation in simple one-dimensional cellular automata." </title> <booktitle> Complex Systems 4 (1990) 299-318. </booktitle>
Reference-contexts: We term these CAs quasi-linear: they are nonlinear, but efficiently predictable nonetheless. It would be highly surprising if this were true for all CAs: since CAs exist which can simulate universal Turing machines (e.g. <ref> [18] </ref>), predicting a CA for a linear (or polynomial) amount of time is P-complete in general [14]. Particular CA rules such as majority-voting models in d 3, lattice gases, and diffusion-limited aggregration have also been shown to be P-complete [22, 25, 19].
Reference: [19] <author> J. Machta and R. Greenlaw, </author> <title> "The computational complexity of generating random fractals." </title> <journal> J. Stat. Phys. </journal> <volume> 82 (1996) 1299 </volume>
Reference-contexts: Particular CA rules such as majority-voting models in d 3, lattice gases, and diffusion-limited aggregration have also been shown to be P-complete <ref> [22, 25, 19] </ref>. Therefore, it seems worthwhile to extend the class of quasi-linear CAs as far as possible, to explore what is probably a very rich hierarchy between linear dynamical systems and computationally universal ones.
Reference: [20] <author> O. Martin, A.M. Odlyzko, and S. Wolfram, </author> <title> "Algebraic properties of cellular automata." </title> <note> Communications in Mathematical Physics 93 (1984) 219-258. </note>
Reference-contexts: ) = f 0 a 0 + f 1 a 1 + + f 2r a 2r + h (2) where the f i are matrix-valued homomorphisms of an Abelian group (A; +) and h is a constant element of A, we can represent the CA rule as a polynomial <ref> [20] </ref> G (x) = f 0 + f 1 x + f 2 x 2 + + f 2r x 2r plus the constant h.
Reference: [21] <author> C. Moore, </author> <title> "Quasi-linear cellular automata." Physica D 103 (1997) 100-132, </title> <booktitle> Proceedings of the International Workshop on Lattice Dynamics. </booktitle>
Reference-contexts: To do this, we have to calculate all the CA states in a light-cone of depth t, which takes O (t 2 ) serial computation steps (O (t d+1 ) in d dimensions) or O (t) in parallel. However, in <ref> [21] </ref> we show that CAs whose rules satisfy various algebraic identities can be predicted in parallel time O (log k t) for some k, qualitatively faster than explicit simulation. We term these CAs quasi-linear: they are nonlinear, but efficiently predictable nonetheless. <p> Alternately, a tree of binary gates of depth O (log n) can add the elements in pairs. 5 Now if a CA's algebra is an Abelian group (a; b) = a + b, a simple Green's function method with Pascal's triangle coefficients <ref> [21, 31] </ref> allows us to predict the CA in O (t) serial time or O (log t) parallel time, i.e. in NC 1 . In fact, this algorithm is in LOGSPACE-uniform ACC 0 since we can generate the t'th row of Pascal's triangle using O (log t) space. <p> Because of their non-commutativity these CAs are nonlinear, i.e. they do not obey a principle of superposition, so Green's function techniques don't work. In <ref> [21] </ref> we show an O (log t) algorithm for one such group, the Quaternions Q 8 , but other non-Abelian groups such as S 3 , the group of permutations of three elements, are left as open problems. 9 We now show that a large class of finite groups have CAs <p> site s T;0 in x ways, so s T;0 = 0iT T Y [a i ; a j ] P T P min (Tt;i1) T t t 1 t 1 (If [a; b] 2 = 1 for all a; b, this is just the algorithm for Q 8 given in <ref> [21] </ref>.) In general, if we have a nilpotent group of class k, then the final site can always be written s T;0 = i c (1) i i;j ij i 1 ;i 2 ;:::;i k c (k) for some set of exponents c (j) i 1 i 2 :::i j (1
Reference: [22] <author> C. Moore, </author> <title> "Majority-vote cellular automata, Ising dynamics, </title> <journal> and P-completeness." </journal> <note> To appear in J. </note> <institution> Stat. Phys. </institution>
Reference-contexts: Particular CA rules such as majority-voting models in d 3, lattice gases, and diffusion-limited aggregration have also been shown to be P-complete <ref> [22, 25, 19] </ref>. Therefore, it seems worthwhile to extend the class of quasi-linear CAs as far as possible, to explore what is probably a very rich hierarchy between linear dynamical systems and computationally universal ones.
Reference: [23] <author> C. Moore, </author> <title> "Non-Abelian cellular automata." </title> <institution> Santa Fe Institute Working Paper 95-09-081. </institution>
Reference-contexts: Therefore, it seems worthwhile to extend the class of quasi-linear CAs as far as possible, to explore what is probably a very rich hierarchy between linear dynamical systems and computationally universal ones. A preliminary version of these results appeared in <ref> [23] </ref>. 2 Definitions An algebra (A; ) is a function from A fi A to A, written a b or simply ab. The order of an algebra is the number of elements in A. We will concern ourselves here with algebras of finite order.
Reference: [24] <author> C. Moore and A. Drisko, </author> <title> "Algebraic properties of the block transformation on cellular automata." </title> <note> To appear in Complex Systems. </note>
Reference-contexts: By combining blocks of 2r sites together, as shown in figure 1, we can convert any CA into one with r 0 = 1=2 where each site has only two predecessors in a staggered space-time: (a) i = (a i1=2 ; a i+1=2 ) (See <ref> [24] </ref> for a study of this transformation's algebraic properties.) We can then think of the CA rule as a binary algebra, where (a; b) = a b or ab for short.
Reference: [25] <author> C. Moore and M.G. Nordahl, </author> <title> "Predicting lattice gases is P-complete." </title> <institution> Santa Fe Institute Working Paper 97-04-034. </institution>
Reference-contexts: Particular CA rules such as majority-voting models in d 3, lattice gases, and diffusion-limited aggregration have also been shown to be P-complete <ref> [22, 25, 19] </ref>. Therefore, it seems worthwhile to extend the class of quasi-linear CAs as far as possible, to explore what is probably a very rich hierarchy between linear dynamical systems and computationally universal ones.
Reference: [26] <author> J. Berman, A. Drisko, F. Lemieux, C. Moore and D. Therien, </author> <title> "Circuits and expressions with non-associative gates." </title> <booktitle> To appear in the 12th Annual IEEE Conference on Computational Complexity. </booktitle> <pages> 18 </pages>
Reference-contexts: The other 10 are capable of expressing arbitrary Boolean functions and so their Circuit Value problem | and, we conjecture, their CA Prediction problem | is P-complete <ref> [26] </ref>. Acknowledgements. I am grateful to Daniel Ashlock, Martin Beaudry, Joshua Berman, Arthur Drisko, Chris Hillman, Derek Holt, Jim Hoover, Peter Johnson, Werner Nickel, Mats Nordahl, Tom Richardson, John Rickard, David Rusin, V. Vinay, and Ross Willard for helpful communications, and to Elizabeth Hunke and Spootie the Cat for companionship.
Reference: [27] <author> F. Lemieux, </author> <title> Finite Groupoids and their Applications to Computational Complexity. </title> <type> Ph. D. Thesis, </type> <institution> School of Computer Science, McGill University, </institution> <address> Montr'eal (1996). </address>
Reference-contexts: An algebraic circuit over an algebra (A; ) is a circuit where each gate outputs the product a b of its inputs, rather than implementing the standard Boolean functions; the Circuit Value problem for various classes of algebras has been studied by a number of authors <ref> [3, 4, 27] </ref>. Predicting an r = 1=2 CA is clearly a special case of Circuit Value, where the circuit has a simple periodic structure in space and time. However, a number of the results we prove below for CAs will in fact hold for algebraic circuits of arbitrary shape.
Reference: [28] <author> C.H. Papadimitriou, </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: It is generally believed that P-complete problems are inherently sequential, and cannot be efficiently paral-lelized; if any P-complete problem is in NC, then P = NC and all polynomial-time problems can be solved in polylogarithmic parallel time <ref> [14, 28] </ref>.
Reference: [29] <author> J. Pedersen, </author> <title> "Cellular automata as algebraic systems." </title> <booktitle> Complex Systems 6 (1992) 237-250. </booktitle>
Reference-contexts: Here r = 2. and so on. Several authors have used this approach to explore CA properties such as partial reversibility [11] and periodicity <ref> [29] </ref>. Predicting a cellular automaton t time-steps into the future is believed to be no easier in general than simulating it explicitly.
Reference: [30] <author> A.A. Razborov, </author> <title> "Lower bounds for the size of circuits of bounded depth with basis f&; g." </title> <journal> Math. </journal> <note> Notes Acad. Sci. USSR 41(4) (1987) 333-338. </note>
Reference-contexts: Razborov <ref> [30] </ref> has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky [33] has shown that ACC 0 [p] and ACC 0 [q] are incomparable if p and q are distinct primes. Thus the first and second inclusions are proper.
Reference: [31] <author> A.D. Robinson, </author> <title> "Fast computation of additive cellular automata." </title> <booktitle> Complex Systems 1 (1987) 211-216. </booktitle>
Reference-contexts: Alternately, a tree of binary gates of depth O (log n) can add the elements in pairs. 5 Now if a CA's algebra is an Abelian group (a; b) = a + b, a simple Green's function method with Pascal's triangle coefficients <ref> [21, 31] </ref> allows us to predict the CA in O (t) serial time or O (log t) parallel time, i.e. in NC 1 . In fact, this algorithm is in LOGSPACE-uniform ACC 0 since we can generate the t'th row of Pascal's triangle using O (log t) space.
Reference: [32] <author> D. Rusin, </author> <type> personal communication. </type>
Reference-contexts: All groups of order less than 32 are polyabelian except the dicyclic or generalized quaternion groups, which are factor groups of polyabelian groups twice their size, and the binary tetrahedral group of order 24, which is a subgroup of a polyabelian group of order 12288 = 2 12 3 <ref> [32] </ref>. The smallest non-solvable group is A 5 , the simple group of order 60 (also called the icosahedral group).
Reference: [33] <author> R. Smolensky, </author> <title> "Algebraic methods in the theory of lower bounds for Boolean circuit complexity." </title> <booktitle> Proc. 19th ACM Symposium on the Theory of Computing (1987) 77-82. </booktitle>
Reference-contexts: Razborov [30] has shown that majority is in NC 1 but not in ACC 0 [2], and Smolensky <ref> [33] </ref> has shown that ACC 0 [p] and ACC 0 [q] are incomparable if p and q are distinct primes. Thus the first and second inclusions are proper.
Reference: [34] <author> M. Suzuki, </author> <title> Group Theory I. </title> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: Then: Theorem 2. Any CA whose algebra is a solvable group is in ACC 1 . Proof. We will show that any solvable group is isomorphic to a subgroup of a polyabelian group. Recall <ref> [34] </ref> that the wreath product A o B is a semidirect product B A B where A B is the set of functions ff from B to A and elements of B permute their components.
Reference: [35] <author> S. Wolfram, </author> <title> "Statistical Mechanics of Cellular Automata." Reviews of Modern Physics 55 (1983) 601-644. </title>
Reference-contexts: This rule is closely related to the two-state, r = 1 CA rule 18 (by the numbering system of <ref> [35] </ref>): a i1 a i a i+1 : 111 110 101 100 011 010 001 000 i : 0 0 0 1 0 0 1 0 Blocking pairs of sites together gives the algebra * 00 01 10 11 01 01 00 00 00 11 01 00 00 00 The subalgebras
Reference: [36] <author> S. Wolfram, </author> <title> "Cryptography with Cellular Automata." </title> <booktitle> Lecture Notes in Computer Science 218 (1986) 429-432. </booktitle> <pages> 19 </pages>
Reference-contexts: It would be very nice if some of the other complex nearest-neighbor CA rules, such as rule 22, 30, or 110, could be analyzed this way; rule 30, for instance, has been proposed as a good cryptographic source of random numbers <ref> [36] </ref>, and a fast prediction algorithm for it would make this use inadvisable. Rule 54 has a more complex chemistry of travelling particles than rule 18 does [16], and it is unclear how to 16 predict their motion efficiently.
References-found: 36

