URL: http://www.cs.brandeis.edu/~hugues/papers/ECAL_95.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~hugues/publications.html
Root-URL: http://www.cs.brandeis.edu
Email: hugues@cs.brandeis.edu  
Title: Incremental Co-evolution of Organisms: A New Approach for Optimization and Discovery of Strategies  
Author: Hugues Juille 
Keyword: Evolutionary optimization, Simulated co-evolution, Sorting networks.  
Address: Waltham, MA 02254-9110, USA  
Affiliation: Brandeis University, Computer Science Department Volen Center for Complex Systems,  
Abstract: In the field of optimization and machine learning techniques, some very efficient and promising tools like Genetic Algorithms (GAs) and Hill-Climbing have been designed. In this same field, the Evolving Non-Determinism (END) model presented in this paper proposes an inventive way to explore the space of states that, using the simulated "incremental" co-evolution of some organisms, remedies some drawbacks of these previous techniques and even allow this model to outperform them on some difficult problems. This new model has been applied to the sorting network problem, a reference problem that challenged many computer scientists, and an original one-player game named Solitaire. For the first problem, the END model has been able to build from "scratch" some sorting networks as good as the best known for the 16-input problem. It even improved by one comparator a 25 years old result for the 13-input problem. For the Solitaire game, END evolved a strategy comparable to a human designed strategy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard Belew and Thomas Kammeyer: </author> <title> Evolving Aesthetic Sorting Networks using Developmental Grammars. </title> <booktitle> In Proceedings of the Fifth International Conference of Genetic Algorithms. </booktitle>
Reference: [2] <author> Roberto Bisiani: </author> <title> Beam Search. </title> <booktitle> In Encyclopedia of Artificial Intelligence, </booktitle> <volume> Vol. 2, </volume> <booktitle> Second Edition, </booktitle> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference-contexts: Finally, an analogy may also be done between the END model and a classical Artificial Intelligence heuristic search technique: Beam Search <ref> [2] </ref>. In this technique, a number of nearly optimal alternatives (the beam) are examined in parallel and some heuristic rules are used to focus only on promising alternatives, therefore keeping the size of the beam as small as possible.
Reference: [3] <author> Gary L. Drescher: </author> <title> Evolution of 16-Number Sorting Networks Revisited. </title> <note> Submitted. </note>
Reference: [4] <author> Milton W. Green: </author> <title> Some Improvements in Nonadaptive Sorting Algorithms. </title> <institution> Stanford Research Institute. Menlo Park, California. </institution>
Reference-contexts: E. Knuth, and independently K. E. Batcher, found a new way to approach the problem and designed a sorting networks using 63 comparisons. Then, a 62-comparator sorting network was found by G. Shapiro in 1969, soon to be followed by M W. Green's 60 comparator network (see <ref> [4] </ref> and [8]). inputs 1 2 3 4 5 6 7 8 comparators 0 1 3 5 9 12 16 19 inputs 9 10 11 12 13 14 15 16 comparators 25 29 35 39 45 fl 51 56 60 Table 2: Best upper bounds currently known for length of sorting
Reference: [5] <author> W. Daniel Hillis: </author> <title> Co-Evolving Parasites Improve Simulated Evolution as an Optimization Procedure. </title> <booktitle> In Artificial Life II, </booktitle> <editor> Langton, et al, Eds. </editor> <publisher> Addison Wesley, </publisher> <year> 1992, </year> <pages> pp. 313-324. </pages>
Reference-contexts: Previously, the best known upper bound for the 13-input problem was 46 3.1.2 Previous works Most of the previous works on sorting networks focussed on the 16-input problem. The first person who used optimization technics to design sorting networks is W. Daniel Hillis. In <ref> [5] </ref> and [9], he used GAs and then co-evolution to find a 61-comparator, only one more sorting exchange than the construction of Green. However, Hillis considerably reduced the size of the search space since he initialized genes with the first 32 comparators of Green's network.
Reference: [6] <author> Hugues Juille: </author> <title> Evolving Non-Determinism: An Inventive and Efficient Tool for Optimization and Discovery of Strategies. </title> <type> Draft paper, </type> <institution> Computer Science Departement, Brandeis University, </institution> <note> 27 pp. 14 </note>
Reference-contexts: The problem tackled in this simulation is the sorting of integers: f0; : : : ; 9g and the fitness is defined as the number of ascents in the sequence generated by organisms. This problem is used in <ref> [6] </ref> to analyze performance of the END model. Looking at this simulated co-evolution, we can see that, as rounds go off, the species represented by '0' takes more and more importance and it almost dominates all the other species after 16 rounds. <p> Indeed, it must be such that the number of representatives of "interesting" species at the next round is sufficient to expect them to overcome other species with a high probability. All these parameters are analyzed experimentally in <ref> [6] </ref>. 5 2.3 Comparison to other Optimization Techniques As we have already said, our model doesn't exploit information about local gradient of the landscape. Indeed, once a solution is built, only first choices of this solution are used for the next round.
Reference: [7] <author> Kim Kinnear: </author> <title> Generality and Difficulty in GP: Evolving a Sort. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <editor> S. Forrest, </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Ryan [11] applied a Genetic Programming approach to the problem of 9-input sorting networks. Kim Kinnear also used GP, but in the area of adaptive sorting algorithms, to find an algorithm to sort n elements in O (n 2 ) time <ref> [7] </ref>. Ian Parberry ([10]) worked on the optimal depth problem and found out optimal values for 9 and 10-input sorting networks using an efficient exhaustive search executed on a supercomputer. More recently, Gary L. Drescher ([3]) designed a novel fitness function for evolving sorting networks, using GAs.
Reference: [8] <author> Donald E. Knuth: </author> <title> The Art of Computer Programming: Volume 3 Sorting and Searching. </title> <publisher> Addison Wesley, </publisher> <year> 1973. </year>
Reference-contexts: The first problem is the follow-up of an established problem for which several approaches ([1, 5, 10]) have been used to try to improve some 25 years old results concerning sorting networks <ref> [8] </ref>. Actually, this problem was also at the origin of an early paper [13] in which GAs were used to try to replicate Hillis's experiment ([5]) for the 16-input problem and in which some ideas of the END model were presented. <p> This kind of algorithm received much attention since they allow an implementation as circuits: comparison-swap can be hard-wired. Such an oblivious comparison-based algorithm for sorting n values is called an n-input sorting network (a survey of sorting networks research is in <ref> [8] </ref>). There is a convenient graphical representation of sorting networks as the one in figure 2 which is a 10-input sorting network (from [8]). <p> Such an oblivious comparison-based algorithm for sorting n values is called an n-input sorting network (a survey of sorting networks research is in <ref> [8] </ref>). There is a convenient graphical representation of sorting networks as the one in figure 2 which is a 10-input sorting network (from [8]). Each horizontal line represents an input of the sorting network and each connection between two lines represents a comparator which compares the two elements and exchange them if the one on the upper line is larger than the one on the lower line. <p> Current upper and lower bounds are provided in [10]. Table 1 presents these current bounds on depth for n 16. 2. Its length, that is the number of comparison-swap used. Optimal sorting networks for n 8 are known exactly and are presented in <ref> [8] </ref> along with the most efficient sorting networks to date for 9 n 16. Table 2 presents these results. The 16-input sorting network has been the most challenging one. Knuth [8] recounts its history as follows. <p> Optimal sorting networks for n 8 are known exactly and are presented in <ref> [8] </ref> along with the most efficient sorting networks to date for 9 n 16. Table 2 presents these results. The 16-input sorting network has been the most challenging one. Knuth [8] recounts its history as follows. First, in 1962, Bose and Nelson discovered a method for constructing sorting networks that used 65 comparisons and conjectured that it was best possible. Two years later, R. W. <p> E. Knuth, and independently K. E. Batcher, found a new way to approach the problem and designed a sorting networks using 63 comparisons. Then, a 62-comparator sorting network was found by G. Shapiro in 1969, soon to be followed by M W. Green's 60 comparator network (see [4] and <ref> [8] </ref>). inputs 1 2 3 4 5 6 7 8 comparators 0 1 3 5 9 12 16 19 inputs 9 10 11 12 13 14 15 16 comparators 25 29 35 39 45 fl 51 56 60 Table 2: Best upper bounds currently known for length of sorting networks.
Reference: [9] <author> Steven Levy: </author> <title> Artificial Life: the Quest for a New Creation.Pantheon Books, </title> <year> 1992. </year>
Reference-contexts: Previously, the best known upper bound for the 13-input problem was 46 3.1.2 Previous works Most of the previous works on sorting networks focussed on the 16-input problem. The first person who used optimization technics to design sorting networks is W. Daniel Hillis. In [5] and <ref> [9] </ref>, he used GAs and then co-evolution to find a 61-comparator, only one more sorting exchange than the construction of Green. However, Hillis considerably reduced the size of the search space since he initialized genes with the first 32 comparators of Green's network.
Reference: [10] <author> Ian Parberry: </author> <title> A Computer-Assisted Optimal Depth Lower Bound for Nine-Input Sorting Networks. </title> <journal> In Mathematical Systems Theory, </journal> <volume> No 24, </volume> <year> 1991, </year> <pages> pp. 101-116. </pages>
Reference-contexts: Its depth which is defined as the number of parallel steps that it takes to sort any input, given that in one step disjoint comparison-swap operations can take place simultaneously. Current upper and lower bounds are provided in <ref> [10] </ref>. Table 1 presents these current bounds on depth for n 16. 2. Its length, that is the number of comparison-swap used. Optimal sorting networks for n 8 are known exactly and are presented in [8] along with the most efficient sorting networks to date for 9 n 16.
Reference: [11] <author> Conor Ryan: </author> <booktitle> Pygmies and Civil Servants. In Advances in Genetic Programming, </booktitle> <editor> Kim Kinnear, Ed. </editor> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Two attempts were also done on the 15-input problem and the model was able to find two 56 comparators sorting networks, again as good as the best known, with no initial conditions. Ryan <ref> [11] </ref> applied a Genetic Programming approach to the problem of 9-input sorting networks. Kim Kinnear also used GP, but in the area of adaptive sorting algorithms, to find an algorithm to sort n elements in O (n 2 ) time [7].
Reference: [12] <author> Nicol N. Schraudolph and Richard K. Belew: </author> <title> Dynamic Parameter Encoding for Genetic Algorithms. </title> <booktitle> In Machine Learning, </booktitle> <volume> Vol. 9, </volume> <year> 1992, </year> <pages> pp. 9-21. </pages>
Reference: [13] <author> Patrick Tufts and Hugues Juille: </author> <title> Evolving Non-Deterministic Algorithms for Efficient Sorting Networks. </title> <note> Submitted. 15 </note>
Reference-contexts: The first problem is the follow-up of an established problem for which several approaches ([1, 5, 10]) have been used to try to improve some 25 years old results concerning sorting networks [8]. Actually, this problem was also at the origin of an early paper <ref> [13] </ref> in which GAs were used to try to replicate Hillis's experiment ([5]) for the 16-input problem and in which some ideas of the END model were presented. <p> Indeed, since the pattern of the last 28 comparators of Green's construction is not really intuitive, one can think that a better solution exists with the same initial 32 comparators. In a previous paper, overviewing the END model <ref> [13] </ref>, a 60 comparator sorting network was found out with the same initial conditions as Hillis, that is as good as the best known.
References-found: 13

