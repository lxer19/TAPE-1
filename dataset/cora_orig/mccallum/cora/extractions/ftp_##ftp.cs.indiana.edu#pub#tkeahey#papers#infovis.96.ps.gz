URL: ftp://ftp.cs.indiana.edu/pub/tkeahey/papers/infovis.96.ps.gz
Refering-URL: http://www.cs.indiana.edu/database/Publications/infovis.96.html
Root-URL: http://www.cs.indiana.edu
Email: ftkeahey, edrbtsng@cs.indiana.edu  
Title: Techniques for Non-Linear Magnification Transformations  
Author: T. Alan Keahey and Edward L. Robertson 
Address: 215 Lindley Hall Bloomington, IN 47405  
Affiliation: Department of Computer Science Indiana University  
Abstract: This paper presents efficient methods for implementing general non-linear magnification transformations. Techniques are provided for: combining linear and non-linear magnifications, constraining the domain of magnifications, combining multiple transformations, and smoothly interpolating between magnified and normal views. In addition piecewise linear methods are introduced which allow greater efficiency and expressiveness than their continuous counterparts. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. B. Bederson and J. D. Hollan. </author> <title> Pad++: A zooming graphical interface for exploring alternate interface physics. </title> <booktitle> In UIST '94 Proceedings, </booktitle> <year> 1994. </year>
Reference-contexts: Several different choices exist for a 1D base transformation function. Sarkar and Brown [15] use the function G (x) = (d+1)x dx+1 to perform this transformation. G (x) is well behaved and has desirable nonlinear characteristics over the domain <ref> [0; 1] </ref>, so that G (x) : [0; 1] ! [0; 1]. Although this function is by itself relatively inexpensive computationally, all coordinates to be transformed by this function must first be normalized or constrained to the [0; 1] domain. <p> Several different choices exist for a 1D base transformation function. Sarkar and Brown [15] use the function G (x) = (d+1)x dx+1 to perform this transformation. G (x) is well behaved and has desirable nonlinear characteristics over the domain <ref> [0; 1] </ref>, so that G (x) : [0; 1] ! [0; 1]. Although this function is by itself relatively inexpensive computationally, all coordinates to be transformed by this function must first be normalized or constrained to the [0; 1] domain. <p> Several different choices exist for a 1D base transformation function. Sarkar and Brown [15] use the function G (x) = (d+1)x dx+1 to perform this transformation. G (x) is well behaved and has desirable nonlinear characteristics over the domain <ref> [0; 1] </ref>, so that G (x) : [0; 1] ! [0; 1]. Although this function is by itself relatively inexpensive computationally, all coordinates to be transformed by this function must first be normalized or constrained to the [0; 1] domain. <p> G (x) is well behaved and has desirable nonlinear characteristics over the domain <ref> [0; 1] </ref>, so that G (x) : [0; 1] ! [0; 1]. Although this function is by itself relatively inexpensive computationally, all coordinates to be transformed by this function must first be normalized or constrained to the [0; 1] domain. Alternatively, it is possible to use a function which is well behaved over an infinite domain h (x) : R ! (C; C). There are many possible functions which can be used to accomplish this, such as the hyperbolic tangent function h (x) = tanh (x). <p> Note that it is often desirable to map the points inside the sub-area to some regular domain (e.g. <ref> [1; 1] </ref> fi [1; 1]) before performing the actual transformation on them, and then map the transformed points back into the original sub-area. These mappings are often easier to perform if we use a transformation function with a fixed range (such as R ! (1; 1)). 2.3.3. <p> Note that it is often desirable to map the points inside the sub-area to some regular domain (e.g. <ref> [1; 1] </ref> fi [1; 1]) before performing the actual transformation on them, and then map the transformed points back into the original sub-area. These mappings are often easier to perform if we use a transformation function with a fixed range (such as R ! (1; 1)). 2.3.3.
Reference: [2] <author> M. Carpendale, D. Cowperthwaite, and D. Fracchia. </author> <title> 3D pliable surfaces: For the effective presentation of visual information. </title> <booktitle> In UIST '95 Proceedings, </booktitle> <pages> pages 217226, </pages> <year> 1995. </year>
Reference-contexts: Examples of work using such geometries can be found in [9] and [12]. 2.2.3. 3D Pliable Surfaces Perspective projections of curved 3D surfaces can be used to create non-linear magnification effects <ref> [2] </ref> which allow for complex magnifications with multiple foci, and provides a potentially useful analogy for describing the magnification to the user. <p> Hybrid Transformations This section introduces techniques for combining desirable properties from linear and non-linear magnifications within a single transformation. Related work on combin-ing these properties can be found in <ref> [2] </ref> and [16], although the methods used in these works are very different from those presented here. In particular we note the efficiency and simplicity of our methods, and that no special graphics hardware is required for interactive speeds. 2.3.1. <p> This produces a partitioning of the domain space similar to Voronoi diagrams from computational geometry, so that each transformation has its own domain of influence. The visual result of this method is similar to that produced by the vector blending method in <ref> [2] </ref>, except that with this system the boundaries between transformations are independent of the degree of magnification, and each region can be magnified or demag nified without altering the partitioning of the space.
Reference: [3] <author> G. W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> Human Factors in Computing Systems, CHI '86, </booktitle> <pages> pages 1623, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: Fisheye Zoom The fisheye lens is one mechanism for dealing with the problems incurred by linear magnification. In this schema, the user is provided with a view which is distorted in a manner similar to that produced by a very wide-angle camera lens. Furnas popularized this idea in 1986 <ref> [3] </ref>, and it has been used in other systems such as Sarkar and Brown [15]. Many different methods can be used to implement the fish-eye lens effect through simple geometric transformations. 2.2.2. Hyperbolic Hyperbolic geometries provide a natural means for producing local resolution enhancement and global context.
Reference: [4] <author> G. W. Furnas and B. B. Bederson. </author> <title> Space-scale diagrams: Understanding multiscale interfaces. </title> <booktitle> In Proceedings of CHI '95 Human Factors in Computing Systems, </booktitle> <year> 1995. </year>
Reference-contexts: It will be shown in this paper that it is useful to be able to translate between these two functions. Related work illustrating a technique for visualizing these transformations has been done by Furnas and Bederson <ref> [4] </ref>. 2.1. Linear Transformations The most familiar magnification technique involves the application of linear transformation functions as shown in level of magnification across the domain, similar to what one would perceive through an ordinary magnifying glass.
Reference: [5] <author> N. Kadmon and E. Shlomi. </author> <title> A polyfocal projection for statistical surfaces. </title> <editor> Cartograph. J., 15(1):3641, </editor> <year> 1978. </year>
Reference-contexts: Referring to Figure 7, we can say that the boundary conditions at the perimeter of region A should be the same for both f (A) and g (~ A). 3. Compound Transformations Early work on static transformations with multiple areas of magnification began with <ref> [5] </ref>. This section will consider dynamic methods for combining transformations from multiple individual transformations. These techniques fall into three general categories, each with their own distinct questions and characteristics: 1) restricting the transformations so they do not overlap, 2) globally combining the transformations, and 3) applying the transformations in succession.
Reference: [6] <author> K. Kaugars, J. Reinfelds, and A. Brazma. </author> <title> A simple algorithm for drawing large graphs of small screens. </title> <booktitle> In Proc. of Graph Drawing '94; Lecture Notes in Computer Science 894, </booktitle> <pages> pages 278 282, </pages> <year> 1994. </year>
Reference-contexts: Additionally, the fisheye effect is familiar to most users, and provides a ready analogy for the user to relate to. There is only a single magnification parameter, which controls degree of magnification in all directions. The result is the same as the polar transformation described in <ref> [6] </ref>, except that no compu-tationally expensive trig functions are needed for explicit polar-rectangular coordinate conversion. Bi-Radial: this is a combination of the radial and orthogonal transformations. <p> The weights are inversely proportional to the distance between the center of magnification and the point in the original domain. This is similar to the arithmetic mean used in <ref> [6] </ref> and [11], except that here the weights compensate for the reduction in magnification caused by the averaging, thus enhancing both degree and localization of the individual transforma tions. Composition: Here we apply each transformation in sequence to the points in the domain.
Reference: [7] <author> T. A. Keahey and J. Marley. </author> <title> Viewing text with non-linear magnification: An experimental study. </title> <type> Technical Report 459, </type> <institution> Department of Computer Science, Indiana University, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: As will be shown in the following section, a 1D function can be used as the base function for transformations in two or more dimensions. It can also be used for magnification in one dimension only; Keahey and Marley <ref> [7] </ref> have shown that using such a magnification bar can be superior to scrolling for viewing highly structured text documents. * Two Dimensional: By applying these simple 1D transformation functions to 2D coordinate spaces in various ways, many different effects can be produced.
Reference: [8] <author> T. A. Keahey and E. L. Robertson. </author> <title> Non-linear image magnification. </title> <type> Technical Report 460, </type> <institution> Department of Computer Science, Indiana University, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: For example, a user viewing textual data would prefer to see the letters at the area of maximal magnification without the distortions presented by non-linear transformations. This is relevant with a technique used by the author <ref> [8] </ref> where arbitrary images (often containing text) are texture-mapped to a grid which is transformed via the techniques presented in this paper. As the grid points are transformed, the image is transformed along with them.
Reference: [9] <author> J. Lamping, R. Rao, and P. Pirolli. </author> <title> A focus+context technique based on hyperbolic geometry for visualizing large hierarchies. </title> <booktitle> In CHI '95 Proceedings, </booktitle> <year> 1995. </year>
Reference-contexts: This approach allows infinite Euclidean space to be mapped into a finite disk in a continuous, non-occluding manner so that the space is bigger near the center of the disk, and smaller near the periphery. Examples of work using such geometries can be found in <ref> [9] </ref> and [12]. 2.2.3. 3D Pliable Surfaces Perspective projections of curved 3D surfaces can be used to create non-linear magnification effects [2] which allow for complex magnifications with multiple foci, and provides a potentially useful analogy for describing the magnification to the user.
Reference: [10] <author> Y. Leung and M. Apperley. </author> <title> A review and taxonomy of distortion-oriented presentation techniques. </title> <journal> ACM Transactions on Computer-Human Interaction, </journal> <volume> 1(2):126160, </volume> <year> 1994. </year>
Reference-contexts: Magnification Transformations The available literature on distortion-based magnification abounds with a full range of terminologies to describe the techniques and characteristics of magnification/zoom/distortion/warp/etc. We borrow from Leung and Apperley <ref> [10] </ref>, who make the distinction between transformation functions and magnification functions, the magnification function is the derivative of the transformation function. Figure 1 shows a simple linear transformation function on the left, and the corresponding magnification function on the right. <p> General Non-Linear The above examples are special cases of the class of nonlinear transformations. There have been a number of papers describing different approaches to this, a survey of many of these can be found in <ref> [10] </ref>.
Reference: [11] <author> K. Misue and K. Sugiyama. </author> <title> Multi-viewpoint perspective display methods: Formulation and application to compound graphs. </title> <booktitle> In Human Aspects in Computing: Design and Use of Interactive Systems and Information Management, </booktitle> <pages> pages 834 838. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1991. </year>
Reference-contexts: The weights are inversely proportional to the distance between the center of magnification and the point in the original domain. This is similar to the arithmetic mean used in [6] and <ref> [11] </ref>, except that here the weights compensate for the reduction in magnification caused by the averaging, thus enhancing both degree and localization of the individual transforma tions. Composition: Here we apply each transformation in sequence to the points in the domain.
Reference: [12] <author> T. Munzner and P. Burchard. </author> <title> Visualizing the structure of the world wide web in 3D hyperbolic space. </title> <booktitle> In VRML '95 Proceedings, </booktitle> <year> 1995. </year>
Reference-contexts: This approach allows infinite Euclidean space to be mapped into a finite disk in a continuous, non-occluding manner so that the space is bigger near the center of the disk, and smaller near the periphery. Examples of work using such geometries can be found in [9] and <ref> [12] </ref>. 2.2.3. 3D Pliable Surfaces Perspective projections of curved 3D surfaces can be used to create non-linear magnification effects [2] which allow for complex magnifications with multiple foci, and provides a potentially useful analogy for describing the magnification to the user.
Reference: [13] <author> E. G. Noik. </author> <title> Exploring large hyperdocuments: Fisheye views of nested networks. </title> <booktitle> In Hypertext '93: ACM Conference on Hypertext and Hypermedia, </booktitle> <year> 1993. </year>
Reference-contexts: For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this <ref> [13] </ref> [15]. For discrete domains (such as the texture mapping example described in section 2.3.1), adjacency requirements are more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [14] <author> G. Robertson and J. D. Mackinlay. </author> <title> The document lens. </title> <booktitle> In UIST '93: Proceedings of the ACM Stmposium on User Interface Software and Technology, </booktitle> <pages> pages 101108, </pages> <year> 1993. </year>
Reference: [15] <author> M. Sarkar and M. H. Brown. </author> <title> Graphical fisheye views. </title> <journal> Communications of the ACM, </journal> <volume> 37(12):7384, </volume> <year> 1994. </year>
Reference-contexts: In this schema, the user is provided with a view which is distorted in a manner similar to that produced by a very wide-angle camera lens. Furnas popularized this idea in 1986 [3], and it has been used in other systems such as Sarkar and Brown <ref> [15] </ref>. Many different methods can be used to implement the fish-eye lens effect through simple geometric transformations. 2.2.2. Hyperbolic Hyperbolic geometries provide a natural means for producing local resolution enhancement and global context. <p> Every extra level of magnification must incur a corresponding decrease in magnification at some other location if the range boundaries are not to exceed the domain boundaries (which is a requirement for non-occluding magnification). Several different choices exist for a 1D base transformation function. Sarkar and Brown <ref> [15] </ref> use the function G (x) = (d+1)x dx+1 to perform this transformation. G (x) is well behaved and has desirable nonlinear characteristics over the domain [0; 1], so that G (x) : [0; 1] ! [0; 1]. <p> For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this [13] <ref> [15] </ref>. For discrete domains (such as the texture mapping example described in section 2.3.1), adjacency requirements are more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [16] <author> M. Sarkar, S. S. Snibbe, O. Tversky, and S. P. Reiss. </author> <title> Stretching the rubber sheet: A metaphor for visualizing large layouts on small screens. </title> <booktitle> In UIST '93, Proceedings of the ACM User Interface Software and Technology, </booktitle> <year> 1993. </year>
Reference-contexts: Hybrid Transformations This section introduces techniques for combining desirable properties from linear and non-linear magnifications within a single transformation. Related work on combin-ing these properties can be found in [2] and <ref> [16] </ref>, although the methods used in these works are very different from those presented here. In particular we note the efficiency and simplicity of our methods, and that no special graphics hardware is required for interactive speeds. 2.3.1.
Reference: [17] <author> R. Spence and M. D. Apperley. </author> <title> Data-base navigation: An office environment for the professional. Behaviour and Information Technology, </title> <address> 1(1):4354, </address> <year> 1982. </year>
References-found: 17

