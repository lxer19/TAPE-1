URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P668.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts97.htm
Root-URL: http://www.mcs.anl.gov
Title: A PARALLEL ALGORITHM FOR MESH SMOOTHING  
Author: LORI FREITAG MARK JONES AND PAUL PLASSMANN 
Keyword: Key words. Parallel Computing, Mesh Smoothing, Unstructured Meshes, Parallel Algorithms, Finite Elements  
Abstract: Maintaining good mesh quality during the generation and refinement of unstructured meshes in finite-element applications is an important aspect in obtaining accurate discretizations and well-conditioned linear systems. In this article, we present a mesh-smoothing algorithm based on nonsmooth optimization techniques and a scalable implementation of this algorithm. We prove that the parallel algorithm has a provably fast runtime bound and executes correctly for a PRAM computational model. We extend the PRAM algorithm to distributed memory computers and report results for two- and three-dimensional simplicial meshes that demonstrate the efficiency and scalability of this approach for a number of different test cases. We also examine the effect of different architectures on the parallel algorithm and present results for the IBM SP supercomputer and an ATM-connected network of SPARC Ultras. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Amenta, M. Bern, and D. Eppstein, </author> <title> Optimal point placement for mesh smoothing, </title> <booktitle> in 8th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <address> New Orleans, </address> <note> to appear. </note>
Reference-contexts: Amenta et al. show that the optimization techniques used in [10, 11] are equivalent to the generalized linear programming technique and has an expected linear solution time <ref> [1] </ref>. The convex level set criterion for solution uniqueness of generalized linear programs can be applied to these smoothing techniques, and they determine the convexity of the level sets for a number of standard mesh quality measures in both two and three dimensions.

Reference: [3] <author> I. Babuska and A. Aziz, </author> <title> On the angle condition in the finite element method, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 13 (1976), </volume> <pages> pp. 214-226. </pages>
Reference-contexts: For example, for two-dimensional triangulations classical finite element theory has shown that if the element angles approach the limits of 0 o and 180 o , the discretization error or the condition number of the element matrices can be adversely affected <ref> [3, 12] </ref>. Such poorly shaped elements are frequently produced by automatic mesh generation tools, particularly near domain boundaries.
Reference: [4] <author> R. Bank, PLTMG: </author> <title> A Software Package for Solving Ellipitc Parital Differential Equations, Users' Guide 7.0, </title> <booktitle> vol. 15 of Frontiers in Applied Mathematics, </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1994. </year>
Reference-contexts: Several such techniques have been proposed recently, and we briefly review those methods now. The methods differ primarily in the optimization procedure used or the quantity that is optimized. Bank <ref> [4] </ref> describes a smoothing procedure for two-dimensional triangular meshes that uses the element shape quality measure given by q (t) = p P 3 i where A is the area of the triangular element and l i is the length of edge i.
Reference: [5] <author> R. E. Bank and R. K. Smith, </author> <title> Mesh smoothing using a posteriori error estimates, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 34 (1997), </volume> <pages> pp. 979-997. </pages>
Reference-contexts: All the techniques mentioned previously optimize the mesh according to element geometry. Bank and Smith <ref> [5] </ref> propose two smoothing techniques to minimize the error for finite element solutions computed with triangular elements with linear basis functions. Both methods use a damped Newton's method to minimize (1) interpolation error or (2) a posteriori error estimates for an elliptic partial differential equation.
Reference: [6] <author> S. Canann, M. Stephenson, and T. Blacker, Optismoothing: </author> <title> An optimization-driven approach to mesh smoothing, Finite Elements in Analysis and Design, </title> <booktitle> 13 (1993), </booktitle> <pages> pp. 185-190. </pages>
Reference-contexts: This improvement should be based on an element quality measure appropriate for the particular problem being solved. Two mesh improvement techniques that have proven successful on sequential computers are face (edge) swapping and mesh smoothing <ref> [2, 6, 7, 8, 15, 16, 22] </ref>.
Reference: [7] <author> E. B. de l'Isle and P.-L. George, </author> <title> Optimization of tetrahedral meshes, in Modeling, Mesh Generation, and Adaptive Numerical Methods for Partial Differential Equations, </title> <editor> I. Babushka, W. D. Henshaw, J. E. Oliger, J. E. Flaherty, J. E. Hopcroft, and T. Tezduyar, eds., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 97-127. </pages>
Reference-contexts: This improvement should be based on an element quality measure appropriate for the particular problem being solved. Two mesh improvement techniques that have proven successful on sequential computers are face (edge) swapping and mesh smoothing <ref> [2, 6, 7, 8, 15, 16, 22] </ref>.
Reference: [8] <author> H. Edelsbrunner and N. Shah, </author> <title> Incremental topological flipping works for regular triangulations, </title> <booktitle> in Proceedings of the 8th ACM Symposium on Computational Geometry, </booktitle> <year> 1992, </year> <pages> pp. 43-52. </pages>
Reference-contexts: This improvement should be based on an element quality measure appropriate for the particular problem being solved. Two mesh improvement techniques that have proven successful on sequential computers are face (edge) swapping and mesh smoothing <ref> [2, 6, 7, 8, 15, 16, 22] </ref>.
Reference: [9] <author> D. A. </author> <title> Field, Laplacian smoothing and Delaunay triangulations, </title> <journal> Communications and Applied Numerical Meth ods, </journal> <volume> 4 (1988), </volume> <pages> pp. 709-712. </pages>
Reference-contexts: The action of the function smooth is determined by the particular local algorithm chosen, and in this section we briefly review several previously proposed techniques. 2.1. Laplacian Smoothing. Perhaps the most commonly used local mesh-smoothing technique is Laplacian smoothing <ref> [9, 20] </ref>. This approach replaces the position of a vertex v by the average of its neighbors' positions. The method is computationally inexpensive, but it does not guarantee improvement in element quality. In fact, the method can produce an invalid mesh containing elements that are inverted or have negative volume.
Reference: [10] <author> L. Freitag and C. Ollivier-Gooch, </author> <title> A comparison of tetrahedral mesh improvement techniques, </title> <booktitle> in Proceedings of the Fifth International Meshing Roundtable, </booktitle> <institution> Sandia National Laboratories, </institution> <year> 1996, </year> <pages> pp. 87-100. </pages>
Reference-contexts: We note that evaluating these rules significantly increases the cost of the Laplacian smoothing technique <ref> [10] </ref>. 2.2. Optimization-based Smoothing. Optimization-based smoothing techniques offer an alternative to Laplacian smoothing that can be inexpensive, can guarantee valid elements in the final mesh, and are effective for a wide variety of mesh quality measures. Several such techniques have been proposed recently, and we briefly review those methods now. <p> The line search subproblem is done by using the Golden Section procedure and terminates when the worst element is improved beyond a specified limit. Freitag et al. <ref> [10, 11] </ref> propose a method for two- and three-dimensional meshes based on the steepest descent optimization technique for nonsmooth functions. <p> The line search subproblem is solved by predicting the points at which the set of active functions will change based on the first-order Taylor series approximations of the f i (x). Amenta et al. show that the optimization techniques used in <ref> [10, 11] </ref> are equivalent to the generalized linear programming technique and has an expected linear solution time [1]. <p> The quantity minimized in these cases requires the computation of approximate second derivatives for the solution on each element as well as the shape function q (t) for triangular elements mentioned previously. 2.3. Combined Laplacian and Optimization-based Smoothing. Both Shephard and Georges [23] and Freitag and Ollivier-Gooch <ref> [10] </ref> present experimental results that demonstrate the effectiveness of combining a variant of Laplacian smoothing with their respective optimization-based procedures. <p> Freitag and Ollivier-Gooch accept the Laplacian step whenever the local submesh is improved. In both cases, the Laplacian smoothing step is followed by optimization-based smoothing for only the worst elements. Experiments in <ref> [10] </ref> showed that using optimization-based smoothing when the minimum angle (dihedral angle in 3D) was less than 30 degrees in two dimensions and 15 degrees in three dimensions significantly improve the meshes at a small computational cost. <p> For each case we compare two different smoothing approaches: one using the optimization-based smoothing approach (Optimization-based) and one using a combined Laplacian/optimization technique (Combined) <ref> [10] </ref>. For the combined approach, we use Laplacian smoothing as a first step and accept the new grid point position whenever the quality of the incident elements is improved. If the quality of the incident elements exceeds a user-defined threshold (30 o in 2D and 15 o in 3D [10]), the <p> (Combined) <ref> [10] </ref>. For the combined approach, we use Laplacian smoothing as a first step and accept the new grid point position whenever the quality of the incident elements is improved. If the quality of the incident elements exceeds a user-defined threshold (30 o in 2D and 15 o in 3D [10]), the algorithm terminates; otherwise, optimization-based smoothing is performed in an attempt to further improve the mesh. The quality measure used in all cases is to maximize the minimum sine of the angles (dihedral angles in 3D) which eliminates extremal angles near 0 o and 180 o . <p> The quality measure used in all cases is to maximize the minimum sine of the angles (dihedral angles in 3D) which eliminates extremal angles near 0 o and 180 o . Of the measures considered in <ref> [10] </ref> (max/min angle and max/min cosine), this measure produced the highest quality meshes at about the same computational cost. For all test cases considered in this paper, we perform two smoothing sweeps over the mesh grid points. Vertices are maintained in a queue and are processed in order.
Reference: [11] <author> L. A. Freitag, M. T. Jones, and P. E. Plassmann, </author> <title> An efficient parallel algorithm for mesh smoothing, </title> <booktitle> in Proceedings of the Fourth International Meshing Roundtable, </booktitle> <institution> Sandia National Laboratories, </institution> <year> 1995, </year> <pages> pp. 47 58. </pages>
Reference-contexts: The line search subproblem is done by using the Golden Section procedure and terminates when the worst element is improved beyond a specified limit. Freitag et al. <ref> [10, 11] </ref> propose a method for two- and three-dimensional meshes based on the steepest descent optimization technique for nonsmooth functions. <p> The line search subproblem is solved by predicting the points at which the set of active functions will change based on the first-order Taylor series approximations of the f i (x). Amenta et al. show that the optimization techniques used in <ref> [10, 11] </ref> are equivalent to the generalized linear programming technique and has an expected linear solution time [1]. <p> The original mesh is shown on the left, where v and q are the vertices to be smoothed and the position of each vertex is given. In the top series of meshes, the vertex q is relocated by using optimization-based smoothing as described in <ref> [11] </ref> followed by adjustment of the vertex v as shown by the highlighted submeshes in the middle and rightmost meshes. In the bottom series of meshes, the vertices are smoothed in reversed order, and the resulting final meshes are considerably different. <p> For all test cases considered in this paper, we perform two smoothing sweeps over the mesh grid points. Vertices are maintained in a queue and are processed in order. To illustrate the qualitative effect of mesh smoothing, we present in Figure 4.1 results for the optimization-based approach described in <ref> [11] </ref> for the two-dimensional elasticity problem. The mesh on the left shows the initial mesh after a series of refinement steps. The global minimum angle in this mesh is 11:3 o and the average minimum element angle is 35:7 o .

Reference: [13] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Such a sequence of independent sets is an m-coloring of G. By definition, m must be at least joe opt j. Determining this optimal coloring for a general graph is known to be an NP-hard problem <ref> [13] </ref>, but effective heuristics for efficiently choosing the independent sets in parallel have been developed and implemented. We now describe two such heuristic approaches: (1) a vertex coloring method, and (2) a randomization scheme.
Reference: [14] <author> W. Gropp, E. Lusk, and A. Skjellum, </author> <title> Using MPI: Portable Parallel Programming with the Message-Passing Interface, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: Message passing was accomplished by using the MPICH implementation of MPI, in particular, the p4 device on the SPARC Ultra ATM network and the MPL device on the IBM SP <ref> [14] </ref>. Table 4.1 Smoothing results for the 2D problems for the IBM SP Optimization-based Combined Max. Max. Vtx Max. Vtx Number Number Total Smooth Smoothed Smooth Smoothed of Local Number Time per Time per Procs.
Reference: [15] <author> B. Joe, </author> <title> Three-dimensional triangulations from local transformations, </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 10 (1989), </volume> <pages> pp. </pages> <month> 718-741. </month> <title> [16] , Construction of three-dimensional improved quality triangulations using local transformations, </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 16 (1995), </volume> <pages> pp. 1292-1307. </pages>
Reference-contexts: This improvement should be based on an element quality measure appropriate for the particular problem being solved. Two mesh improvement techniques that have proven successful on sequential computers are face (edge) swapping and mesh smoothing <ref> [2, 6, 7, 8, 15, 16, 22] </ref>.
Reference: [17] <author> M. T. Jones and P. E. Plassmann, </author> <title> A parallel graph coloring heuristic, </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 14 (1993), </volume> <pages> pp. </pages> <month> 654-669. </month> <title> [18] , Adaptive refinement of unstructured finite-element meshes, Journal of Finite Elements in Analysis and Design, </title> <booktitle> 25 (1997), </booktitle> <pages> pp. </pages> <month> 41-60. </month> <title> [19] , Parallel algorithms for adaptive mesh refinement, </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 8 (1997), </volume> <pages> pp. 686-708. </pages>
Reference-contexts: The second approach is based on the assignment of a distinct random number, ae (v), to each vertex. At each step in the algorithm, we choose an independent set I from S according to the rule given in <ref> [17] </ref> based on [21]: v 2 I if ae (v) &gt; ae (u) for u 2 adj (v) and u 2 S. <p> The coloring approach yields a running time bound independent of the size of the graph being smoothed; however, the efficient parallel computation of this coloring requires the use of the randomized algorithm <ref> [17] </ref>. Therefore, the coloring approach is cost effective only if it is used enough times to amortize the initial expense of computing the coloring or is maintained for some other purpose. <p> This bound is a consequence of Corollary 3.5 in <ref> [17] </ref>. The maximum time required to smooth a vertex, t max , is also bounded because t max = O (degree (v)), and we have the following expected runtime bound.
Reference: [20] <author> S. H. Lo, </author> <title> A new mesh generation scheme for arbitrary planar domains, International Journal for Numerical Methods in Engineering, </title> <booktitle> 21 (1985), </booktitle> <pages> pp. 1403-1426. </pages>
Reference-contexts: The action of the function smooth is determined by the particular local algorithm chosen, and in this section we briefly review several previously proposed techniques. 2.1. Laplacian Smoothing. Perhaps the most commonly used local mesh-smoothing technique is Laplacian smoothing <ref> [9, 20] </ref>. This approach replaces the position of a vertex v by the average of its neighbors' positions. The method is computationally inexpensive, but it does not guarantee improvement in element quality. In fact, the method can produce an invalid mesh containing elements that are inverted or have negative volume.
Reference: [21] <author> M. Luby, </author> <title> A simple parallel algorithm for the maximal independent set problem, </title> <journal> SIAM Journal on Computing, </journal> <volume> 4 (1986), </volume> <pages> pp. 1036-1053. </pages>
Reference-contexts: The second approach is based on the assignment of a distinct random number, ae (v), to each vertex. At each step in the algorithm, we choose an independent set I from S according to the rule given in [17] based on <ref> [21] </ref>: v 2 I if ae (v) &gt; ae (u) for u 2 adj (v) and u 2 S.
Reference: [22] <author> V. N. Parthasarathy and S. Kodiyalam, </author> <title> A constrained optimization approach to finite element mesh smoothing, Journal of Finite Elements in Analysis and Design, </title> <booktitle> 9 (1991), </booktitle> <pages> pp. 309-320. </pages>
Reference-contexts: This improvement should be based on an element quality measure appropriate for the particular problem being solved. Two mesh improvement techniques that have proven successful on sequential computers are face (edge) swapping and mesh smoothing <ref> [2, 6, 7, 8, 15, 16, 22] </ref>.
Reference: [23] <author> M. Shephard and M. Georges, </author> <title> Automatic three-dimensional mesh generation by the finite octree technique, International Journal for Numerical Methods in Engineering, </title> <booktitle> 32 (1991), </booktitle> <pages> pp. 709-749. </pages>
Reference-contexts: In this case the line search procedure is used only in the cases for which the new position results in a third element, different from the original two worst elements, with the smallest shape measure. Shephard and Georges describe a similar approach for tetrahedral meshes <ref> [23] </ref>. The shape function for each element incident on v is computed by using the formula q (t) = i P 4 i where V is the volume of the element and A i is the area of face i. <p> The quantity minimized in these cases requires the computation of approximate second derivatives for the solution on each element as well as the shape function q (t) for triangular elements mentioned previously. 2.3. Combined Laplacian and Optimization-based Smoothing. Both Shephard and Georges <ref> [23] </ref> and Freitag and Ollivier-Gooch [10] present experimental results that demonstrate the effectiveness of combining a variant of Laplacian smoothing with their respective optimization-based procedures.
References-found: 18

