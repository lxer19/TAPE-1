URL: http://www.cs.caltech.edu/~ps/papers/recon/surfacefitting_fig.ps.gz
Refering-URL: http://www.cs.caltech.edu/~ps/papers/recon/
Root-URL: http://www.cs.caltech.edu
Email: E-mail: venkat,levoy@cs.stanford.edu  
Title: Fitting Smooth Surfaces to Dense Polygon Meshes  
Author: Venkat Krishnamurthy Marc Levoy 
Keyword: CR Categories: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling curve, surface and object representations; I.3.7[Computer Graphics]:Three-Dimensional Graphics and Realismtexture; J.6[Computer-Aided Engineering]:Computer-Aided Design (CAD); G.1.2[Approximation]:Spline Approximation Additional Key Words: Surface fitting, Parameterization, Dense polygon meshes, B-spline surfaces, Displacement maps  World Wide Web: http://www-graphics.stanford.edu/~venkat, ~levoy  
Address: Stanford, CA 94305  
Note: Authors' Address:  
Affiliation: Computer Science Department Stanford University  Department of Computer Science, Stanford University,  
Abstract: Recent progress in acquiring shape from range data permits the acquisition of seamless million-polygon meshes from physical models. In this paper, we present an algorithm and system for converting dense irregular polygon meshes of arbitrary topology into tensor product B-spline surface patches with accompanying displacement maps. This choice of representation yields a coarse but efficient model suitable for animation and a fine but more expensive model suitable for rendering. The first step in our process consists of interactively painting patch boundaries over a rendering of the mesh. In many applications, interactive placement of patch boundaries is considered part of the creative process and is not amenable to automation. The next step is gridded resampling of each bounded section of the mesh. Our resampling algorithm lays a grid of springs across the polygon mesh, then iterates between relaxing this grid and subdividing it. This grid provides a parameterization for the mesh section, which is initially unparameterized. Finally, we fit a tensor product B-spline surface to the grid. We also output a displacement map for each mesh section, which represents the error between our fitted surface and the spring grid. These displacement maps are images; hence this representation facilitates the use of image processing operators for manipulating the geometric detail of an object. They are also compatible with modern photo-realistic rendering systems. Our resampling and fitting steps are fast enough to surface a million polygon mesh in under 10 minutes important for an interactive system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V.Aho and J.D.Ullman. </author> <title> Data structures and algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference-contexts: We consider some of these steps in detail in the following subsections. 4.6 Initialization of iso-curves To obtain an initial guess for each u and v iso-curve, we use Dijk-stra's single-source, single-destination, shortest-path algorithm <ref> [1] </ref> to compute a path between corresponding pairs of points along opposing boundary curves. The initial number of iso-curves in each direction are chosen to be proportional to the aspect ratio of the patch.
Reference: [2] <author> L Bardis and M Vafiadou. </author> <title> Ship-hull geometry representation with b-spline surface patches. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(4) </volume> <pages> 217-222, </pages> <year> 1992. </year>
Reference-contexts: Therefore it is not always possible to enforce mathematical continuity across patch boundaries. Instead, statistical or visual continuity is enforced based on user specified tolerances for position and normal deviation. These are either enforced as linear constraints to the fitting process <ref> [2, 33] </ref>, or they are achieved through an iterative optimization process [22]. In the animation industry, by contrast, curvature continuity is seldom required and tangent continuity (G 1 ) usually suffices. To achieve this the number of knots are usually forced to be the same for patches sharing a boundary.
Reference: [3] <author> Brian A. Barsky. </author> <title> End conditions and boundary conditions for uniform b-spline curve and surface representations. </title> <booktitle> Computers In Industry, </booktitle> <volume> 3, </volume> <year> 1982. </year>
Reference-contexts: We use end-point interpolating, uniform, cubic B-splines. To maintain mathematical continuity we constrain adjacent patches to have the same number of control points along a shared boundary. Following boundary conditions for these surfaces as defined by Barsky <ref> [3] </ref>, C 0 continuity across a shared boundary curve is obtained by averaging end control points between adjacent patches.
Reference: [4] <author> Richard Bartels, John Beatty, and Brian Barsky. </author> <title> An Introduction to Splines for Use in Computer Graphics and Geometric Modeling. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> Palo Alto, CA, </address> <year> 1987. </year>
Reference-contexts: X i;j B i (u)B j (v) (1) where ~ P is a point in 3-space, u and v are parameter values in the two parametric directions of the surface, X i;j 's are control points of the B-spline surface and the B i are fourth order B-spline basis functions <ref> [4] </ref> . Given some set of points f ~p l (x, y, z), l=1 ...Mg to which a B-spline surface must be fit, we must first make an association of parameter values u and v to each of these data points.
Reference: [5] <author> James F. </author> <title> Blinn. Simulation of wrinkled surfaces. </title> <booktitle> In Computer Graphics (SIG-GRAPH '78 Proceedings), </booktitle> <volume> volume 12, </volume> <pages> pages 286-292, </pages> <year> 1978. </year>
Reference-contexts: Both of these last two options offer different interactions with the displacement map. Figure 11 employs the third option normal component editing. 5.3 Bump maps A bump map is defined as a function that performs perturbations on the direction of the surface normal before using it in lighting calculations <ref> [5] </ref>. In general, a bump map is less expensive to render than a displacement map since it does not change the geometry (and occlusion properties) within a scene but instead changes only the shading.
Reference: [6] <author> J. Vezien Chakib Bennis and G. Iglesias. </author> <title> Piecewise surface flattening for non-distorted texture mapping. </title> <booktitle> In Computer Graphics (SIGGRAPH'91 Proceedings), </booktitle> <volume> volume 25, </volume> <pages> pages 237-246, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: As such, there are techniques in the texture mapping literature that address similar problems, notably the work of Bennis et al <ref> [6] </ref> and that of Maillot et al [21]. Both of these papers present schemes to re-parameterize surfaces for texture mapping. These algorithms work well with regular data sets, such as discretized splines. However, they can exhibit objectionable parametric distortions in general [11].
Reference: [7] <author> Jindong Chen and Yijie Han. </author> <title> Shortest paths on a polyhedron. </title> <booktitle> In Proc. 6th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 360-369, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: However this is an expensive proposition since the fastest algorithm for point to point geodesics is O (n 2 ) in the size of the patch <ref> [7] </ref>. Even approximations to geodesics such as local graph searches are O (n) and would be too expensive to perform at every relaxation step.
Reference: [8] <author> Robert L. Cook. </author> <title> Shade trees. </title> <booktitle> In Computer Graphics (SIGGRAPH '84 Proceedings), </booktitle> <volume> volume 18, </volume> <pages> pages 223-231, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: we first describe how to extract displacement maps from a polygonal patch and then demonstrate some of the operations that are enabled by this representation. 5 Capturing fine detail with displacement maps A displacement map perturbs the position of a surface based on a displacement function defined over the surface <ref> [8] </ref>. Displacement maps are usually applied during rendering and are available in a number of commercial renderers.
Reference: [9] <author> Brian Curless and Marc Levoy. </author> <title> A volumetric method for building complex models from range images. </title> <booktitle> In Computer Graphics (SIGGRAPH '96 Proceedings), </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Advances in range image acquisition and integration allow us to compute geometrical models from complex physical models <ref> [9, 36] </ref>. The output of these technologies is a dense, seamless (i.e. manifold) irregular polygon mesh of arbitrary topology. For example, the model in figure 12, generated from 75 scans of an action figure using a Cyberware laser range scanner, contains 350,000 polygons. <p> These methods involve human intervention throughout the data acquisition process and are hence time-consuming, especially if the model is complex or the data set required is large. In contrast, our pipeline employs automatic data acquisition methods <ref> [9] </ref>. The second category uses scanned data as a template to assist in the model construction process. Point cloud or triangulated data is typically imported into a conventional modeling system. <p> While point cloud techniques are widely applicable, they fail to exploit topological information already present in the input data. As demonstrated by Curless et al <ref> [9] </ref> and Turk et al [36], using this additional information can significantly improve quality of reconstruction. <p> The advantage of these techniques is that they avoid the parameter re-estimation step described earlier and are hence significantly faster. It is worth pointing out that in our application there is nothing sacrosanct about the original mesh vertices. In particular, the vertices produced by our range image integration method <ref> [9] </ref> are at a scale that approaches the noise-limited resolution of our sensor. As long as the grid is a reasonably careful sampling of the polygon mesh, surface quality is not compromised. We use a piecewise linear reconstruction for this sampling, which we find to be satisfactory. <p> The only constraints are that it must be rectangularly parameterizable and must not have holes. These are reasonable assumptions since the models input to our system are seamless or can easily be made so by acquiring and integrating more scans and by recent hole-filling techniques <ref> [9] </ref>. Our goal is to generate a uniform grid of points over the polygonal surface that samples the surface well. Finite element literature [34] describes a number of techniques for generating grids over smooth surfaces.
Reference: [10] <author> Paul Dierckx. </author> <title> Curve and Surface Fitting with Splines. </title> <publisher> Oxford Science Publications, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: the space curve and an attractee Ae on the polygon mesh. (b) shows a 1-D version and the rest position of Ae. 4 Fitting B-spline patches 4.1 B-spline fitting theory: overview In general, parametric curve and surface fitting to irregular data can be formulated as a non-linear least squares problem <ref> [10, 30] </ref>. The following discussion assumes uniform cubic (order 4) tensor product B-spline surfaces but holds for other kinds of parametric surfaces as well.
Reference: [11] <author> Matthias Eck, TonyDeRose, TomDuchamp, Hugues Hoppe, Michael Lounsbery, and Werner Stuetzle. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> In Computer Graphics (Proceedings of SIGGRAPH '95), </booktitle> <pages> pages 173-182, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: For the parameterization step, a piecewise linear approximation to harmonic maps <ref> [11] </ref> is used, and the number of patches is adjusted to achieve fitting tolerances. While this method produces high quality surfaces, it includes a number of expensive optimization steps, making it too slow for an interactive system. Further, their technique does not separate fine geometric detail from coarse geometry. <p> Further, their technique does not separate fine geometric detail from coarse geometry. Particularly for very dense meshes, we find this separation both useful and preferable, as already explained. We compare some other aspects of the parameterization scheme of Eck et al <ref> [11] </ref> with ours in section 4.10. We briefly mention some techniques [29, 31] that use hierarchical algorithms to fit parametric surfaces to scanned data sets. While these approaches work well for regular data, they do not address the problem of unparameterized, irregular polygon meshes. <p> Both of these papers present schemes to re-parameterize surfaces for texture mapping. These algorithms work well with regular data sets, such as discretized splines. However, they can exhibit objectionable parametric distortions in general <ref> [11] </ref>. Pedersen [25] describes a method for texture mapping (and hence parameterizing) implicit surfaces. While the methods work well with implicit surfaces, they rely on smoothness properties of the surface and require the evaluation of global surface derivatives. <p> As mentioned earlier, there are other schemes that may be used to parameterize irregular polygon meshes. In particular, the harmonic maps of Eck et al <ref> [11] </ref> produce parameterizations with low edge and aspect ratio distortions. However, the scheme has two main drawbacks for our purposes. First, it can cause excessive area distortions in parameter space.
Reference: [12] <author> Matthias Eck and Hugues Hoppe. </author> <title> Automatic reconstruction of b-spline surfaces of arbitrary topologicaltype. </title> <booktitle> In Computer Graphics (Proceedingsof SIGGRAPH '96), </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: In the context of our surface fitting algorithm, working with connected polygonal representations has also facilitated the development of an automatic parameterization scheme. 2.3 Automated surface fitting techniques Eck et al <ref> [12] </ref> describe a method for fitting irregular meshes with a number of automatically placed bicubic Bezier patches. For the parameterization step, a piecewise linear approximation to harmonic maps [11] is used, and the number of patches is adjusted to achieve fitting tolerances.
Reference: [13] <author> Hugues Hoppe et al. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> In Computer Graphics (Proceedings of SIGGRAPH '94), </booktitle> <pages> pages 295-302, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Although the remaining surface detail might be of little use to an animator, it is desirable to retain and use this information as well, if only for rendering. While there are a variety of multi-resolution techniques that can be applied to capture these details in a unified surface representation <ref> [13, 15] </ref>, for reasons discussed earlier, we represent the fine detail in our models as displacement maps.
Reference: [14] <author> Gerald Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: For these reasons, we believe it is advantageous to separate the representations of coarse geometry and fine surface detail. Within this framework, we may choose from among many representations for these two components. For representing coarse geometry, modelers in the entertainment and CAD industry have long used NURBS <ref> [14] </ref> and in particular uniform tensor product B-splines. Such models typically consist of control meshes stitched together to the level of continuity desired for an application. In order to address their needs we have chosen uniform tensor product B-splines as our surface representation. <p> The extent of inter-patch continuity desired in a multi-patch B-spline (or more generally, NURBS) model depends on the domain of application. For example, in the construction of the exterior of a car body, curvature plots and reflection lines <ref> [14] </ref> are frequently used to verify the quality of surfaces. In this context, even curvature continuous (C 2 ) surfaces might be inadequate. Furthermore, workers in the automotive industry often use trimmed NURBS and do not necessarily match knot lines at shared patch boundaries during model construction.
Reference: [15] <author> David R. Forsey and Richard H. Bartels. </author> <title> Hierarchical B-spline refinement. </title> <booktitle> In Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> volume 22, </volume> <pages> pages 205-212, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Point cloud or triangulated data is typically imported into a conventional modeling system. A user then manually projects isolated points to this data as a means of determining the locations of control points (or edit points <ref> [15] </ref>) for smooth parametric surfaces. These methods require less human intervention than those in the first category but complex models may still require a lot of labour. 2.2 Semi-automated techniques The approaches in this category take point cloud data sets as input. <p> Although the remaining surface detail might be of little use to an animator, it is desirable to retain and use this information as well, if only for rendering. While there are a variety of multi-resolution techniques that can be applied to capture these details in a unified surface representation <ref> [13, 15] </ref>, for reasons discussed earlier, we represent the fine detail in our models as displacement maps.
Reference: [16] <author> Mark Halstead, Michael Kass, and Tony DeRose. </author> <title> Efficient, fair interpolation using Catmull-Clark surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 35-44, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The fairness criterion thus indirectly minimizes unnecessary wiggles in the spline iso-curves. Note that this term bears some similarities to the idea of fairness in the parametric interpolation literature <ref> [16] </ref>. 4.5 A fast gridding algorithm Our algorithm is a coarse-to-fine procedure that for each polygonal patch, incrementally builds a successively refined sampling of the patch into a spring mesh.
Reference: [17] <author> David Heeger and James R. Bergen. Pyramid-basedtexture analysis/synthesis. </author> <booktitle> In Computer Graphics (SIGGRAPH '95 Proceedings), </booktitle> <pages> pages 229-237, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: An interesting application of the parameterization portion of our system is the interactive texture mapping and texture placement [26] for complex polygonal models. Related to this is the possibility of applying procedural texture analysis/synthesis techniques <ref> [17] </ref> to create synthetic displacement maps from real ones.
Reference: [18] <author> J Hoschek and D Lasser. </author> <title> Fundamentals of Computer Aided Geometric Design. </title> <type> AK Peters, Wellesley, </type> <year> 1993. </year>
Reference-contexts: Furthermore, the convergence of this iteration (and hence the quality of the fitted spline surface) is strongly dependant on the initial parameter values. If these are not good, convergence can be slow and in general is not guaranteed <ref> [18, 20] </ref>. 4.2 Our surface fitting strategy To avoid the complexity and cost of the non-linear optimization process described above, we first resample each irregular polygonal patch into a regular grid of points (the spring mesh).
Reference: [19] <author> Charles L. Lawson and Richard J. Hanson. </author> <title> Solving Least Square Problems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1974. </year>
Reference-contexts: Given these associations, an over-constrained system of linear equations can be generated from (1), where the X i;j are unknowns. Each linear equation in this system corresponds to a point ~p l satisfying (1). Therefore, a least squares solution <ref> [19] </ref> can be performed to obtain the X i;j . In our application, we are not given parameter associations for our data points. Because the B-spline basis functions are non-linear in the parameter values, the problem of parametric surface fitting requires a non-linear optimization process.
Reference: [20] <author> W. Ma and J P Kruth. </author> <title> Parameterization of randomly measured points for least squares fitting of b-spline curves and surfaces. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 27(9) </volume> <pages> 663-675, </pages> <year> 1995. </year>
Reference-contexts: Examples include commercial systems such as Imageware's Surfacer [33], Delcam's CopyCAD, and some research systems <ref> [20, 22] </ref>. These approaches begin by identifying a subset of points that are to be approximated. Parameterization of data points is usu-ally accomplished by a user-guided process such as projection of the points to a manually constructed base plane or surface. <p> Furthermore, the convergence of this iteration (and hence the quality of the fitted spline surface) is strongly dependant on the initial parameter values. If these are not good, convergence can be slow and in general is not guaranteed <ref> [18, 20] </ref>. 4.2 Our surface fitting strategy To avoid the complexity and cost of the non-linear optimization process described above, we first resample each irregular polygonal patch into a regular grid of points (the spring mesh).
Reference: [21] <author> Jerome Maillot. </author> <title> Interactivetexture mapping. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 27-34, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: As such, there are techniques in the texture mapping literature that address similar problems, notably the work of Bennis et al [6] and that of Maillot et al <ref> [21] </ref>. Both of these papers present schemes to re-parameterize surfaces for texture mapping. These algorithms work well with regular data sets, such as discretized splines. However, they can exhibit objectionable parametric distortions in general [11]. Pedersen [25] describes a method for texture mapping (and hence parameterizing) implicit surfaces.
Reference: [22] <author> M. J. Milroy, C. Bradley, G. W. Vickers, and D. J. Weir. </author> <title> G1 continuity of b-spline surface patches in reverse engineering. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 27 </volume> <pages> 471-478, </pages> <year> 1995. </year>
Reference-contexts: Examples include commercial systems such as Imageware's Surfacer [33], Delcam's CopyCAD, and some research systems <ref> [20, 22] </ref>. These approaches begin by identifying a subset of points that are to be approximated. Parameterization of data points is usu-ally accomplished by a user-guided process such as projection of the points to a manually constructed base plane or surface. <p> Instead, statistical or visual continuity is enforced based on user specified tolerances for position and normal deviation. These are either enforced as linear constraints to the fitting process [2, 33], or they are achieved through an iterative optimization process <ref> [22] </ref>. In the animation industry, by contrast, curvature continuity is seldom required and tangent continuity (G 1 ) usually suffices. To achieve this the number of knots are usually forced to be the same for patches sharing a boundary. This has several advantages.
Reference: [23] <author> J. S. B. Mitchell, D. M. Mount, and C. H. Papadimitriou. </author> <title> The discrete geodesic problem. </title> <journal> SIAM J. Comput., </journal> <volume> 16 </volume> <pages> 647-668, </pages> <year> 1987. </year>
Reference-contexts: A patch is specified by interactively painting its boundary curves. This operation should be fast and provide intuitive feedback to the user. We have found that curves that lie on the surface of the model are easier to specify and manipulate than unconstrained space curves. A polygonal (discrete) geodesic <ref> [23] </ref> is one possible representation. Unfortunately, this is expensive both to compute and to maintain. We instead represent patch boundaries as sampled geodesics. We call these face-point curves. The steps for painting a boundary curve are shown and described in figure 3.
Reference: [24] <author> Eben Ostby. </author> <title> Describing free-form 3d surfaces for animation. </title> <booktitle> In Workshop on Interactive 3D Graphics, </booktitle> <pages> pages 251-258, </pages> <year> 1986. </year>
Reference-contexts: The first category includes all methods for digitizing a physical model directly. For example, using a touch probe, one can acquire only data that is relevant to the final surface model. Catalogues of computer models published by ViewPoint Data Labs and the work of Pixar's animation group <ref> [24, 28] </ref> exemplify these methods. These methods involve human intervention throughout the data acquisition process and are hence time-consuming, especially if the model is complex or the data set required is large. In contrast, our pipeline employs automatic data acquisition methods [9]. <p> In the first place, control point deformations are easily propagated across patch boundaries. Secondly, there is minimal distortion at boundaries in the process of texture mapping. Finally, the process of maintaining patch continuity during an animation becomes easier; continuity is either made part of the model definition <ref> [24] </ref> or is reestablished on a frame by frame basis using a stitching post-process. Our system can be adapted to either of the above paradigms (i.e. either statistical or geometric continuity).
Reference: [25] <author> Hans K. Pedersen. </author> <title> Decorating implicit surfaces. </title> <booktitle> In Computer Graphics (Proceedings of SIGGRAPH '95), </booktitle> <pages> pages 291-300, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Both of these papers present schemes to re-parameterize surfaces for texture mapping. These algorithms work well with regular data sets, such as discretized splines. However, they can exhibit objectionable parametric distortions in general [11]. Pedersen <ref> [25] </ref> describes a method for texture mapping (and hence parameterizing) implicit surfaces. While the methods work well with implicit surfaces, they rely on smoothness properties of the surface and require the evaluation of global surface derivatives.
Reference: [26] <author> Hans K. Pedersen. </author> <title> A framework for interactive texturing on curved surfaces. </title> <booktitle> In Computer Graphics (Proceedings of SIGGRAPH '96), </booktitle> <month> August </month> <year> 1996. </year>
Reference-contexts: Examples of constraints to the parameterization process include interactively placed curve and point attractors within a patch. An interesting application of the parameterization portion of our system is the interactive texture mapping and texture placement <ref> [26] </ref> for complex polygonal models. Related to this is the possibility of applying procedural texture analysis/synthesis techniques [17] to create synthetic displacement maps from real ones.
Reference: [27] <author> Jorg Peters. </author> <title> Fitting smooth parametric surfaces to 3D data. </title> <type> Ph.d. thesis, </type> <institution> Univ. of Wisconsin-Madison, </institution> <year> 1990. </year>
Reference-contexts: Alternatively, G 1 tinuity can be obtained by modifying the end control points such that the tangent control points (last two rows) line up in a fixed ratio over the length of the boundary. Patch corners pose a harder problem. We refer the reader to <ref> [27] </ref> for a detailed account of this problem. For the kinds of basis functions we use, projecting the 4 corner control points of each of the patches meeting at that corner to an average plane guarantees G 1 continuity.
Reference: [28] <author> William T. Reeves. </author> <title> Simple and complex facial animation: Case studies. In State Of The Art In Facial Animation, </title> <booktitle> SIGGRAPH course 26, </booktitle> <pages> pages 90-106. </pages> <year> 1990. </year>
Reference-contexts: The first category includes all methods for digitizing a physical model directly. For example, using a touch probe, one can acquire only data that is relevant to the final surface model. Catalogues of computer models published by ViewPoint Data Labs and the work of Pixar's animation group <ref> [24, 28] </ref> exemplify these methods. These methods involve human intervention throughout the data acquisition process and are hence time-consuming, especially if the model is complex or the data set required is large. In contrast, our pipeline employs automatic data acquisition methods [9].
Reference: [29] <author> David R.Forsey and Richard H. Bartels. </author> <title> Surface fitting with hierarchical splines. In Topics in the Construction, Manipulation, and Assessment of Spline Surfaces, </title> <booktitle> SIGGRAPH course 25, </booktitle> <pages> pages 7-0-7-14. </pages> <year> 1991. </year>
Reference-contexts: Particularly for very dense meshes, we find this separation both useful and preferable, as already explained. We compare some other aspects of the parameterization scheme of Eck et al [11] with ours in section 4.10. We briefly mention some techniques <ref> [29, 31] </ref> that use hierarchical algorithms to fit parametric surfaces to scanned data sets. While these approaches work well for regular data, they do not address the problem of unparameterized, irregular polygon meshes. <p> We can then apply gridded data fitting techniques <ref> [29] </ref> to this spring mesh to obtain a spline approximation. The advantage of these techniques is that they avoid the parameter re-estimation step described earlier and are hence significantly faster. It is worth pointing out that in our application there is nothing sacrosanct about the original mesh vertices. <p> The final step in our algorithm is to perform an unconstrained, gridded data fit of a B-spline surface to each spring mesh. As pointed out earlier, fitting to a good resampling of the data does not compromise surface quality. We refer the reader to <ref> [29] </ref> for an excellent tutorial on the subject of gridded data fitting. Figure 8 summarizes the sampling and fitting processes on a cylindrical patch of the model from figure 12. 4.10 Discussion Our two-step approach of gridding and then fitting has several desirable characteristics. First, it is fast.
Reference: [30] <author> D. F. Rogers and N. G. </author> <title> Fog. Constrained b-spline curve and surface fitting. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 21 </volume> <pages> 641-648, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: This path is then sampled into a face-point curve and smoothed into a straight line as illustrated in (c). Filled circles represent individual face points. The face-point curve now represents a sampling of the projection on the polygonal surface, of a line from v1 to v2. curve <ref> [30] </ref>. The resolution of the B-spline for the fit is set interactively by the user. The smoothing operation consists of attracting a face-point curve, which is constrained to lie on the surface of the polygon mesh, to a curve in space. <p> the space curve and an attractee Ae on the polygon mesh. (b) shows a 1-D version and the rest position of Ae. 4 Fitting B-spline patches 4.1 B-spline fitting theory: overview In general, parametric curve and surface fitting to irregular data can be formulated as a non-linear least squares problem <ref> [10, 30] </ref>. The following discussion assumes uniform cubic (order 4) tensor product B-spline surfaces but holds for other kinds of parametric surfaces as well. <p> This is usually solved by starting with an initial guess for each p l 's u and v values and subsequently iterating between refining these values and re-fitting the surface with the improved parameter associations until some tolerance of fit is achieved <ref> [30] </ref>. This process is expensive since it requires calculation of spline surface partial derivatives at each of the original data points at every step of the iteration. Furthermore, the convergence of this iteration (and hence the quality of the fitted spline surface) is strongly dependant on the initial parameter values.
Reference: [31] <author> Francis J. M. Schmitt, Brian A. Barsky, and Wen hui Du. </author> <title> An adaptive subdivision method for surface-fitting from sampled data. </title> <booktitle> In Computer Graphics (SIG-GRAPH '86 Proceedings), </booktitle> <volume> volume 20, </volume> <pages> pages 179-188, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: Particularly for very dense meshes, we find this separation both useful and preferable, as already explained. We compare some other aspects of the parameterization scheme of Eck et al [11] with ours in section 4.10. We briefly mention some techniques <ref> [29, 31] </ref> that use hierarchical algorithms to fit parametric surfaces to scanned data sets. While these approaches work well for regular data, they do not address the problem of unparameterized, irregular polygon meshes.
Reference: [32] <author> Stan Sclaroff and Alex Pentland. </author> <title> Generalized implicit functions for computer graphics. </title> <booktitle> In Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> volume 25, </volume> <pages> pages 247-250, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: We briefly mention some techniques [29, 31] that use hierarchical algorithms to fit parametric surfaces to scanned data sets. While these approaches work well for regular data, they do not address the problem of unparameterized, irregular polygon meshes. Finally, Sclaroff et al <ref> [32] </ref> demonstrate the use of displacement maps in the context of interpolating data with generalized implicit surfaces. However, this method also works only on regular data sets. 2.4 Relevant work in texture mapping A key aspect of our method is an automatic parameterization scheme for irregular polygon meshes.
Reference: [33] <author> Sarvajit S. Sinha and Pradeep Seneviratne. </author> <title> Single valuedness, parameterization and approximating3d surfaces using b-splines. </title> <booktitle> Geometric Methods in Computer Vision 2, </booktitle> <pages> pages 193-204, </pages> <year> 1993. </year>
Reference-contexts: These methods require less human intervention than those in the first category but complex models may still require a lot of labour. 2.2 Semi-automated techniques The approaches in this category take point cloud data sets as input. Examples include commercial systems such as Imageware's Surfacer <ref> [33] </ref>, Delcam's CopyCAD, and some research systems [20, 22]. These approaches begin by identifying a subset of points that are to be approximated. Parameterization of data points is usu-ally accomplished by a user-guided process such as projection of the points to a manually constructed base plane or surface. <p> Therefore it is not always possible to enforce mathematical continuity across patch boundaries. Instead, statistical or visual continuity is enforced based on user specified tolerances for position and normal deviation. These are either enforced as linear constraints to the fitting process <ref> [2, 33] </ref>, or they are achieved through an iterative optimization process [22]. In the animation industry, by contrast, curvature continuity is seldom required and tangent continuity (G 1 ) usually suffices. To achieve this the number of knots are usually forced to be the same for patches sharing a boundary.
Reference: [34] <author> J. F. Thompson. </author> <title> The Eagle Papers. </title> <institution> Mississippi State University, </institution> <type> P.O. Drawer 6176, </type> <institution> Mississippi State, MS 39762. </institution>
Reference-contexts: Our goal is to generate a uniform grid of points over the polygonal surface that samples the surface well. Finite element literature <ref> [34] </ref> describes a number of techniques for generating grids over smooth surfaces. Unfortunately, these techniques rely on the existence of higher order global derivatives (i.e. a smooth surface definition already exists).
Reference: [35] <author> Greg Turk. </author> <title> Re-tiling polygonal surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> volume 26, </volume> <pages> pages 55-64, </pages> <month> July </month> <year> 1992. </year>
Reference: [36] <author> Greg Turk and Marc Levoy. </author> <title> Zippered polygon meshes from range images. </title> <booktitle> In Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <pages> pages 311-318, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Advances in range image acquisition and integration allow us to compute geometrical models from complex physical models <ref> [9, 36] </ref>. The output of these technologies is a dense, seamless (i.e. manifold) irregular polygon mesh of arbitrary topology. For example, the model in figure 12, generated from 75 scans of an action figure using a Cyberware laser range scanner, contains 350,000 polygons. <p> While point cloud techniques are widely applicable, they fail to exploit topological information already present in the input data. As demonstrated by Curless et al [9] and Turk et al <ref> [36] </ref>, using this additional information can significantly improve quality of reconstruction.
Reference: [37] <author> William Welch and Andrew Witkin. </author> <title> Free-Form shape design using triangulated surfaces. </title> <booktitle> In Computer Graphics (Proceedings of SIGGRAPH '94), </booktitle> <pages> pages 247-256, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Finite element literature [34] describes a number of techniques for generating grids over smooth surfaces. Unfortunately, these techniques rely on the existence of higher order global derivatives (i.e. a smooth surface definition already exists). While it is possible to make local approximations to surface curvature for irregular polygonal surfaces <ref> [37] </ref>, there is no scheme to evaluate global derivatives at arbitrary surface positions. 4.4 What is a good gridding of a surface? Although we cannot utilize the finite element literature directly, it offers useful insight on objective functions one might minimize to produce different surface parameterizations.
Reference: [38] <author> William Welch and Andrew Witkin. </author> <title> Free-form shape design using triangulated surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <volume> volume 28, </volume> <pages> pages 237-246, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: While the methods work well with implicit surfaces, they rely on smoothness properties of the surface and require the evaluation of global surface derivatives. Irregular polygon meshes in general, are neither smooth nor conducive to the evaluation of global surface derivatives, as discussed by Welch et al <ref> [38] </ref>. 3 Boundary curve specification Our surface fitting pipeline starts with the user interactively segmenting the polygonal model into a number of regions that are to be approximated by spline patches. A patch is specified by interactively painting its boundary curves.
References-found: 38

