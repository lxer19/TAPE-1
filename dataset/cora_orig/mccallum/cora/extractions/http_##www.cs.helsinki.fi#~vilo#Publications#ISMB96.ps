URL: http://www.cs.helsinki.fi/~vilo/Publications/ISMB96.ps
Refering-URL: http://www.cs.helsinki.fi/research/pmdm/publications/
Root-URL: 
Email: abrazma@cclu.lv  inge@ii.uib.no  Esko.Ukkonen@cs.Helsinki.FI  Jaak.Vilo@cs.Helsinki.FI  
Title: Discovering Patterns and Subfamilies in Biosequences  
Author: Alvis Brazma Esko Ukkonen 
Keyword: pattern discovery, sequence motifs, machine learning, protein subfamilies, PROSITE, clustering, algorithms, Bayesian inference, MDL principle  
Address: 29 Rainis Bulevard LV-1459 Riga, Latvia Inge Jonassen  N5020 Bergen, Norway  P.O.Box 26 (Teollisuuskatu 23)  Finland Jaak Vilo  P.O.Box 26 (Teollisuuskatu 23)  Finland  
Affiliation: Institute of Mathematics and Computer Science University of Latvia  Department of Informatics University of Bergen, HIB  Department of Computer Science  University of Helsinki  Department of Computer Science  University of Helsinki  
Pubnum: FIN-00014  FIN-00014  
Abstract: We consider the problem of automatic discovery of patterns and the corresponding subfamilies in a set of biosequences. The sequences are unaligned and may contain noise of unknown level. The patterns are of the type used in PROSITE database. In our approach we discover patterns and the respective subfamilies simultaneously. We develop a theoretically substantiated significance measure for a set of such patterns and an algorithm approximating the best pattern set and the subfamilies. The approach is based on the minimum description length (MDL) principle. We report a computing experiment correctly finding subfamilies in the family of chromo domains and revealing new strong patterns. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Aasland, R., and Stewart, F. A. </author> <year> 1995. </year> <title> The chromo shadow domain, a second chromo domain in heterchromatin-binding protein 1, </title> <journal> HP1. Nucleic Acids Research 23 </journal> <pages> 3168-3173. </pages>
Reference-contexts: The tree was produced using Clustal W (Thompson, Higgins, & Gibson 1994) which uses the neighborhood joining method (NJ) for estimating phylogenetic trees (Saitou & Nei 1987), and was taken from the `official' World-Wide-Web pages for <ref> (Aasland & Stewart 1995) </ref>. The dashed ellipses show the two most important subsets identified by MDL-Pratt. of chromo domains that are very similar to subfam-ilies reported by domain experts (Aasland & Stewart 1995). For complete test data and more details see (http://www.ii.uib.no/~inge/papers/mdl/). <p> neighborhood joining method (NJ) for estimating phylogenetic trees (Saitou & Nei 1987), and was taken from the `official' World-Wide-Web pages for <ref> (Aasland & Stewart 1995) </ref>. The dashed ellipses show the two most important subsets identified by MDL-Pratt. of chromo domains that are very similar to subfam-ilies reported by domain experts (Aasland & Stewart 1995). For complete test data and more details see (http://www.ii.uib.no/~inge/papers/mdl/). In the first experiment we retrieved the sequences in four PROSITE (release 13.0, January 1996) families using SRS (Etzold & Argos 1993). <p> The 31 segments included two sets identified by Aasland and Stewart: 8 classical chromo domains linked to chromo shadow domains (set 1), and 8 chromo shadow domain segments (set 2) <ref> (Aasland & Stewart 1995) </ref>. 31 segments, where the subfamilies are shown. The tree was produced using Clustal W (Thompson, Higgins, & Gibson 1994) which uses the neighborhood joining (NJ) method for estimating phylogenetic trees (Saitou & Nei 1987). 1. DmHP1_A DvHP1_A HuHP1_A MoMOD1_A MoMOD2_A PcHET1_A PcHET2_A E-x (0,1)-E-E-[FY]-xV-E-K-[IV]-[IL]-D-[KR]-R-x (3,4)-G-x-V-x-Y-xLK 2. <p> In this specific test case, we analyzed segments (and not complete sequences) in order to make comparison with the results in <ref> (Aasland & Stewart 1995) </ref> easier, and to save computation time. Analyzing sequence segments is relevant for example if one wants to analyze a set of segments found to have local similarities to a query sequence, using a database homology search program, such as BLAST (Altschul et al. 1990). <p> Approaches like genetic algorithms may be useful here. Acknowledgments The authors wish to thank Rein Aasland for help on the test cases, and for allowing us to use the figure showing the NJ-tree for the chromo-domains <ref> (Aasland & Stew-art 1995) </ref>. Alvis Brazma was supported by the Finnish Centre for International Mobility and the reported research was done while the authour was working at the Department of Computer Science of the University of Helsinki. Inge Jonassen was supported by the Norwe-gian Research Council.
Reference: <author> Altschul, S. F.; Gish, W.; Miller, W.; Myers, E. W.; and Lipman, D. J. </author> <year> 1990. </year> <title> Basic local alignment search tool. </title> <journal> Journal of Molecular Biology 215 </journal> <pages> 403-410. </pages>
Reference-contexts: Analyzing sequence segments is relevant for example if one wants to analyze a set of segments found to have local similarities to a query sequence, using a database homology search program, such as BLAST <ref> (Altschul et al. 1990) </ref>. Most of the computing time used by MDL-Pratt was spent to produce the set of hypotheses for the greedy set cover algorithm to chose from.
Reference: <author> Bailey, T., and Elkan, C. </author> <year> 1995. </year> <title> Unsupervised learning of multiple motifs in biopolymers using expectation maximization. </title> <booktitle> Machine Learning 21 </booktitle> <pages> 51-80. </pages>
Reference-contexts: Patterns in this approach are probabilistic. Like in most pattern discovery algorithms, it is assumed that each group in the partition contains at least a given number of sequences. A variation of this method is developed in <ref> (Bailey & Elkan 1995) </ref>. Discovering sets of deterministic patterns has been studied in (T. Shoudai et al. 1995), but there an upper bound on the number of subclasses has to be assumed a priori.
Reference: <author> Bairoch, A. </author> <year> 1992. </year> <title> PROSITE: a dictionary of sites and patterns in proteins. </title> <journal> Nucleic Acids Research 20 </journal> <pages> 2013-2018. </pages>
Reference-contexts: A subproblem of this is finding a pattern common to a set of sequences in the presence of an unknown level of noise. In particular we consider sequences representing proteins and patterns of the type used in PROSITE database <ref> (Bairoch 1992) </ref>, but the method can be applied for any type of sequences and any type of deterministic patterns (motifs). The problem is important, for instance, in finding and characterizing protein families.
Reference: <author> Brazma, A.; Jonassen, I.; Eidhammer, I.; and Gil-bert, D. </author> <year> 1995. </year> <title> Approaches to automatic discovery of patterns in biosequences. </title> <type> Technical Report TR-113, </type> <institution> Department of Informatics, University of Bergen, Bergen, Norway. </institution> <note> (Available at ftp://ftp.ii.uib.no/pub/bio/papers/survey.ps). </note>
Reference-contexts: Quite a large number of different algorithms for automatic discovery of patterns in biosequences have been developed (Neuwald & Green 1994; Neuwald, Liu, & Lawrence 1995; Sagot, Viari, & Soldano 1995; Saqi & Sternberg 1994; Smith, Annau, & Chandrasegaran 1990; Smith & Smith 1990), for survey see <ref> (Brazma et al. 1995) </ref>. The only algorithm that we are aware of that captures a large subset of the pattern class used in PROSITE database (including gaps of flexible length and flexibly defined groups of amino-acids) is Pratt (Jonassen, Collins, & Higgins 1995; Jonassen 1996). <p> Frequently p is very small, and sometimes can be assumed to be 0. For more precise definition of this model see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>. Note that this model in essence is similar to that of (Neuwald, Liu, & Lawrence 1995). The ratio q = P 1 ($) to p = P 2 ($ 2 ) determines the most probable relative length of strings to patterns. <p> Next, we send substrings that we have to prefix and append to patterns to obtain A, separated by $ 2 , and some additional delimiter signaling the switching to the next pattern. The characters are coded by bit-strings of length dependent on P 2 . It is shown in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that for a given A the most probable pattern set is the pattern set of a cover minimizing the message length in the described encoding system. This implies the equivalence of Bayesian and MDL approaches for the given model. <p> It has been also shown in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that minimizing the message length M s () is the same that maximizes C 0 k X (u 0 j ); where u 0 i = ` P 2 ( j ) + 2 log p and w 0 r). <p> MDL Approximation Algorithm In this section we give a greedy heuristic algorithm that finds the set of patterns defining a partitioning of A. The computation of the absolute best partitioning is NP-hard (hence not believed possible in reasonable time) even when the set of patterns is given, see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>. Still, we can show that our polynomial-time implementation gives a solution that is guaranteed to be close to the optimal. By M opt we denote the minimal value of the message length M () for the fixed pattern class, say substring or PROSITE patterns. <p> Each set B i in a cover will be a subset of the set D i of sequences in A that match the pattern i . It is proved in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that the following algorithm Greedy, given a set of strings A, finds a cover , such that M () M opt fi log jAj + O (1). <p> Pattern i that gives the maximal relative compression (compression per one string) is selected ("greedily') next. Although the algorithm above is formulated differently than that in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>, they can be shown to be equivalent. The running time of the new version may be different because we do not generate all patterns from the set A, but instead find only the best pattern for decreasing subsets U of A. <p> than that in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>, they can be shown to be equivalent. The running time of the new version may be different because we do not generate all patterns from the set A, but instead find only the best pattern for decreasing subsets U of A. In (Brazma, Ukkonen, & Vilo 1995) we show that for substring patterns, the cover can be computed in time O (jAj kAk). For P-patterns, the running time of algorithm Greedy is at most jAj times the time of finding the best pattern for the set U A. <p> For more details see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>.
Reference: <author> Brazma, A.; Ukkonen, E.; and Vilo, J. </author> <year> 1995. </year> <title> Finding a good collection of patterns covering a set of sequences. </title> <type> Technical Report C-1995-60, </type> <institution> Department of Computer Science, University of Helsinki, </institution> <address> P. O. Bo 26, FIN-00014, </address> <institution> University of Helsinki. </institution> <note> (Available at ftp://ftp.cs.helsinki.fi/pub/Reports/). </note>
Reference-contexts: Quite a large number of different algorithms for automatic discovery of patterns in biosequences have been developed (Neuwald & Green 1994; Neuwald, Liu, & Lawrence 1995; Sagot, Viari, & Soldano 1995; Saqi & Sternberg 1994; Smith, Annau, & Chandrasegaran 1990; Smith & Smith 1990), for survey see <ref> (Brazma et al. 1995) </ref>. The only algorithm that we are aware of that captures a large subset of the pattern class used in PROSITE database (including gaps of flexible length and flexibly defined groups of amino-acids) is Pratt (Jonassen, Collins, & Higgins 1995; Jonassen 1996). <p> Frequently p is very small, and sometimes can be assumed to be 0. For more precise definition of this model see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>. Note that this model in essence is similar to that of (Neuwald, Liu, & Lawrence 1995). The ratio q = P 1 ($) to p = P 2 ($ 2 ) determines the most probable relative length of strings to patterns. <p> Next, we send substrings that we have to prefix and append to patterns to obtain A, separated by $ 2 , and some additional delimiter signaling the switching to the next pattern. The characters are coded by bit-strings of length dependent on P 2 . It is shown in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that for a given A the most probable pattern set is the pattern set of a cover minimizing the message length in the described encoding system. This implies the equivalence of Bayesian and MDL approaches for the given model. <p> It has been also shown in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that minimizing the message length M s () is the same that maximizes C 0 k X (u 0 j ); where u 0 i = ` P 2 ( j ) + 2 log p and w 0 r). <p> MDL Approximation Algorithm In this section we give a greedy heuristic algorithm that finds the set of patterns defining a partitioning of A. The computation of the absolute best partitioning is NP-hard (hence not believed possible in reasonable time) even when the set of patterns is given, see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>. Still, we can show that our polynomial-time implementation gives a solution that is guaranteed to be close to the optimal. By M opt we denote the minimal value of the message length M () for the fixed pattern class, say substring or PROSITE patterns. <p> Each set B i in a cover will be a subset of the set D i of sequences in A that match the pattern i . It is proved in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref> that the following algorithm Greedy, given a set of strings A, finds a cover , such that M () M opt fi log jAj + O (1). <p> Pattern i that gives the maximal relative compression (compression per one string) is selected ("greedily') next. Although the algorithm above is formulated differently than that in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>, they can be shown to be equivalent. The running time of the new version may be different because we do not generate all patterns from the set A, but instead find only the best pattern for decreasing subsets U of A. <p> than that in <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>, they can be shown to be equivalent. The running time of the new version may be different because we do not generate all patterns from the set A, but instead find only the best pattern for decreasing subsets U of A. In (Brazma, Ukkonen, & Vilo 1995) we show that for substring patterns, the cover can be computed in time O (jAj kAk). For P-patterns, the running time of algorithm Greedy is at most jAj times the time of finding the best pattern for the set U A. <p> For more details see <ref> (Brazma, Ukkonen, & Vilo 1995) </ref>.
Reference: <author> Chvatal, V. </author> <year> 1979. </year> <title> A greedy heuristic for the set-covering problem. </title> <journal> Math. Oper. Res. </journal> <volume> 4 </volume> <pages> 233-235. </pages>
Reference-contexts: U A ; ; while U 6= ; do find a pair (; D) maximizing u ()jDjw () jDj ; where D U and matches all sequences of D [ f (; D)g end return The algorithm is a variation of the greedy algorithm for the weighted set cover problem <ref> (Chvatal 1979) </ref>.
Reference: <author> Conklin, D. </author> <year> 1995. </year> <title> Machine discovery of protein motifs. </title> <booktitle> Machine Learning 21 </booktitle> <pages> 125-150. </pages>
Reference-contexts: A theoretically substantiated balanced measure can be based on the minimum description length (MDL) principle (Rissanen 1978; Li & Vitanyi 1993; Kilpelainen, Mannila, & Ukkonen 1995; Brazma, Ukkonen, & Vilo 1995). Very recently the problem of discovering a set of patterns has also come under attention <ref> (Conklin 1995) </ref>. A Gibbs sampling based algorithm that detects motif-encoding regions (i.e., patterns) in sequences and optimally partitions them into distinct motif models is described in (Neuwald, Liu, & Lawrence 1995). Patterns in this approach are probabilistic.
Reference: <author> Etzold, T., and Argos, P. </author> <year> 1993. </year> <title> SRS an indexing and retrieval tool for flat file data libraries. </title> <journal> Comput Appl Biosci 9 </journal> <pages> 49-57. </pages>
Reference-contexts: For complete test data and more details see (http://www.ii.uib.no/~inge/papers/mdl/). In the first experiment we retrieved the sequences in four PROSITE (release 13.0, January 1996) families using SRS <ref> (Etzold & Argos 1993) </ref>. The families are TP1 (AC PS00541) containing 6, TP2 1 (AC PS00970) containing 5, SAR 1 (AC PS01020) containing 4, and SPASE II (AC PS 00855) containing 5 sequences.
Reference: <author> Gribskov, M.; McLachlan, M.; and Eisenberg, D. </author> <year> 1987. </year> <title> Profile analysis: detection of distantly related proteins. </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci. </institution> <address> U.S.A 84 </address> <pages> 4355-4358. </pages>
Reference: <author> Jonassen, I.; Collins, J. F.; and Higgins, D. G. </author> <year> 1995. </year> <title> Finding flexible patterns in unaligned protein sequences. </title> <booktitle> Protein Science 4(8) </booktitle> <pages> 1587-1595. </pages>
Reference-contexts: The term 2 log p comes from the delimiters $ 2 . The term f () is very small and can be ignored in practice. I 1 () is exactly the same as the first term in the pattern significance measure I of <ref> (Jonassen, Collins, & Higgins 1995) </ref>. The second term in (Jonassen, Collins, & Higgins 1995), which is a heuristic correction for flex-ibilities, is in our case replaced by a theoretically more substantiated correction I 2 , suggesting logarithmic de pendence on the gap length, rather than linear. <p> The term f () is very small and can be ignored in practice. I 1 () is exactly the same as the first term in the pattern significance measure I of <ref> (Jonassen, Collins, & Higgins 1995) </ref>. The second term in (Jonassen, Collins, & Higgins 1995), which is a heuristic correction for flex-ibilities, is in our case replaced by a theoretically more substantiated correction I 2 , suggesting logarithmic de pendence on the gap length, rather than linear.
Reference: <author> Jonassen, I.; Helgesen, C.; and Higgins, D. </author> <year> 1996. </year> <title> Scoring function for pattern discovery programs taking into account sequence diversity. </title> <type> Technical Report 116, </type> <institution> Department of Informatics, University of Bergen, Bergen, Norway. </institution>
Reference-contexts: Ideally, a kind of pattern `fitness' measure should be used that incorporates both the significance of the pattern as such and its fitness in respect to the given sequences. However, to find a balanced measure is not an easy task <ref> (Jonassen, Hel-gesen, & Higgins 1996) </ref>. A theoretically substantiated balanced measure can be based on the minimum description length (MDL) principle (Rissanen 1978; Li & Vitanyi 1993; Kilpelainen, Mannila, & Ukkonen 1995; Brazma, Ukkonen, & Vilo 1995). <p> We have developed an algorithm finding the pattern sets with high fitness according to the defined MDL fitness measure. The algorithm is based on the pattern discovery algorithm Pratt <ref> (Jonassen 1996) </ref> and a greedy set cover algorithm. The greedy algorithm guarantees the length of the solution to be within the logarithmic factor from the theoretical optimum. We have carried out a number of computing experiments and obtained encouraging results. <p> For P-patterns, the running time of algorithm Greedy is at most jAj times the time of finding the best pattern for the set U A. In practice, to find the P-patterns we modified an existing algorithm Pratt <ref> (Jonassen 1996) </ref> so that it maximizes the function u () w ()=jDj. Pratt is a tool for pattern discovery in a set of protein sequences (Jonassen, Collins, & Higgins 1995; Jonassen 1996). <p> We used a heuristic version of Pratt which is de-scribed in <ref> (Jonassen 1996) </ref>, therefore formally we are not guaranteed to find the highest-scoring patterns. We want to use quite a general class of patterns, and the non-heuristic version of Pratt would be too time-consuming to be practical.
Reference: <author> Jonassen, I. </author> <year> 1996. </year> <title> Efficient discovery of conserved patterns using a pattern graph. </title> <note> Reports in Informatics in preparation, </note> <institution> Dept. of In-formatics, Unviersity of Bergen. </institution> <note> (Available at ftp://ftp.ii.uib.no/pub/bio/papers/). </note>
Reference-contexts: Ideally, a kind of pattern `fitness' measure should be used that incorporates both the significance of the pattern as such and its fitness in respect to the given sequences. However, to find a balanced measure is not an easy task <ref> (Jonassen, Hel-gesen, & Higgins 1996) </ref>. A theoretically substantiated balanced measure can be based on the minimum description length (MDL) principle (Rissanen 1978; Li & Vitanyi 1993; Kilpelainen, Mannila, & Ukkonen 1995; Brazma, Ukkonen, & Vilo 1995). <p> We have developed an algorithm finding the pattern sets with high fitness according to the defined MDL fitness measure. The algorithm is based on the pattern discovery algorithm Pratt <ref> (Jonassen 1996) </ref> and a greedy set cover algorithm. The greedy algorithm guarantees the length of the solution to be within the logarithmic factor from the theoretical optimum. We have carried out a number of computing experiments and obtained encouraging results. <p> For P-patterns, the running time of algorithm Greedy is at most jAj times the time of finding the best pattern for the set U A. In practice, to find the P-patterns we modified an existing algorithm Pratt <ref> (Jonassen 1996) </ref> so that it maximizes the function u () w ()=jDj. Pratt is a tool for pattern discovery in a set of protein sequences (Jonassen, Collins, & Higgins 1995; Jonassen 1996). <p> We used a heuristic version of Pratt which is de-scribed in <ref> (Jonassen 1996) </ref>, therefore formally we are not guaranteed to find the highest-scoring patterns. We want to use quite a general class of patterns, and the non-heuristic version of Pratt would be too time-consuming to be practical.
Reference: <author> Kilpelainen, P.; Mannila, H.; and Ukkonen, E. </author> <year> 1995. </year> <title> MDL learning of unions of simple pattern languages from positive examples. </title> <booktitle> In Proceedings of the 2nd European conference EuroCOLT'95, </booktitle> <pages> 252-260. </pages>
Reference: <author> Krogh, A.; Brown, M.; Mian, I. S.; Sjoelander, K.; and Haussler, D. </author> <year> 1994. </year> <title> Hidden Markov model in computational biology. Applications to protein modelling. </title> <journal> Journal of Molecular Biology 235 </journal> <pages> 1501-1531. </pages>
Reference-contexts: Such patterns help to understand the relationship between a sequence, structure, and function, as well as to identify new members of the families. Patterns of different types have been used for these purposes. They can be divided into probabilistic patterns, e.g., Hidden Markov Models <ref> (Krogh et al. 1994) </ref> or profiles (Grib-skov, McLachlan, & Eisenberg 1987), and deterministic ones. Each of the types has applications where it works better; some comparative analysis is given in (Wu & Brutlag 1995).
Reference: <author> Li, M., and Vitanyi, P. </author> <year> 1993. </year> <title> An introduction to Kolmogorov complexity and its applications. </title> <booktitle> Texts and monographs in computer science. </booktitle> <address> New York: </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In (Neuwald, Liu, & Lawrence 1995; T. Shoudai et al. 1995) a nontrivial probabilistic algorithm is used for generating candidate patterns and subfamilies. The pattern fitness there is evaluated by using maximum likelihood (ML) principle which, in fact, is a special case of MDL principle <ref> (Li & Vitanyi 1993) </ref>. Basically it means taking the "most informative pattern" common to at least given number of sequences. In our terminology it would essentially mean taking w j = 0 and requiring that the pattern matches at least a given number of sequences.
Reference: <author> Neuwald, A. F., and Green, P. </author> <year> 1994. </year> <title> Detecting patterns in protein sequences. </title> <journal> Journal of Molecular Biology 239 </journal> <pages> 689-712. </pages>
Reference: <author> Neuwald, A. F.; Liu, J. S.; and Lawrence, C. E. </author> <year> 1995. </year> <title> Gibbs motif sampling: Detection of bacterial outer membrane protein repeats. </title> <booktitle> Protein Science 4 </booktitle> <pages> 1618-1632. </pages>
Reference-contexts: Very recently the problem of discovering a set of patterns has also come under attention (Conklin 1995). A Gibbs sampling based algorithm that detects motif-encoding regions (i.e., patterns) in sequences and optimally partitions them into distinct motif models is described in <ref> (Neuwald, Liu, & Lawrence 1995) </ref>. Patterns in this approach are probabilistic. Like in most pattern discovery algorithms, it is assumed that each group in the partition contains at least a given number of sequences. A variation of this method is developed in (Bailey & Elkan 1995). <p> Frequently p is very small, and sometimes can be assumed to be 0. For more precise definition of this model see (Brazma, Ukkonen, & Vilo 1995). Note that this model in essence is similar to that of <ref> (Neuwald, Liu, & Lawrence 1995) </ref>. The ratio q = P 1 ($) to p = P 2 ($ 2 ) determines the most probable relative length of strings to patterns.
Reference: <author> Rissanen, J. </author> <year> 1978. </year> <title> Modeling by the shortest data description. </title> <booktitle> Automatica-J.IFAC 14 </booktitle> <pages> 465-471. </pages>
Reference: <author> Sagot, M.-F.; Viari, A.; and Soldano, H. </author> <year> 1995. </year> <title> Multiple sequence comparison: a peptide matching approach. </title> <editor> In Galil, Z., and Ukkonen, E., eds., </editor> <booktitle> Proc. of 6th Annual Symposium, CPM (Lecture Notes in Computer Science 937), </booktitle> <pages> 366-385. </pages> <publisher> Springer. </publisher>
Reference: <author> Saitou, N., and Nei, M. </author> <year> 1987. </year> <title> The neighbour-joining method: a new method for reconstructing phylogen-etic trees. Mol. </title> <journal> Biol. Evol. </journal> <volume> 4 </volume> <pages> 406-425. </pages>
Reference-contexts: In the second experiment the algorithm was able to discover subfamilies in a family domain segments included in the analysis. The tree was produced using Clustal W (Thompson, Higgins, & Gibson 1994) which uses the neighborhood joining method (NJ) for estimating phylogenetic trees <ref> (Saitou & Nei 1987) </ref>, and was taken from the `official' World-Wide-Web pages for (Aasland & Stewart 1995). The dashed ellipses show the two most important subsets identified by MDL-Pratt. of chromo domains that are very similar to subfam-ilies reported by domain experts (Aasland & Stewart 1995). <p> The tree was produced using Clustal W (Thompson, Higgins, & Gibson 1994) which uses the neighborhood joining (NJ) method for estimating phylogenetic trees <ref> (Saitou & Nei 1987) </ref>. 1. DmHP1_A DvHP1_A HuHP1_A MoMOD1_A MoMOD2_A PcHET1_A PcHET2_A E-x (0,1)-E-E-[FY]-xV-E-K-[IV]-[IL]-D-[KR]-R-x (3,4)-G-x-V-x-Y-xLK 2. DmHP1_B DvHP1_B HuHP1_B MoMOD1_B MoMOD2_B PcHET1_B L-x (2,3)-E-[KR]-I-[IL]-G-A-[TS]-D-[TSN]-x-G-[EDR]-L-x-F-L-x (2)-[FW]- 3.
Reference: <author> Saqi, M. A. S., and Sternberg, M. J. E. </author> <year> 1994. </year> <title> Identification of sequence motifs from a set of proteins with related function. </title> <booktitle> Protein Engineering 7(2) </booktitle> <pages> 165-171. </pages>
Reference: <author> Smith, R. F., and Smith, T. F. </author> <year> 1990. </year> <title> Automatic generation of primary sequence patterns from sets of related protein sequences. </title> <booktitle> In Proc. </booktitle> <institution> Natl. Acad. Sci. USA, </institution> <month> 118-122. </month>
Reference: <author> Smith, H. O.; Annau, T. M.; and Chandrasegaran, S. </author> <year> 1990. </year> <title> Finding sequence motifs in groups of functionally related proteins. </title> <booktitle> In Proc. </booktitle> <institution> Natl. Acad. Sci. USA, </institution> <month> 826-830. </month>
Reference: <author> T. Shoudai, M.; Lape, M.; Miyano, S.; Shinohara, A.; Okazaki, T.; Arikawa, S.; Uchida, T.; Shimozono, S.; Shinohara, T.; and Kuhara, S. </author> <year> 1995. </year> <title> BONSAI garden: parallel knowledge discovery system for amino acid sequences. </title> <editor> In C. Rawlings et al., ed., </editor> <booktitle> Proc. of Third International Conference on Intelligent Systems for Molecualar Biology, </booktitle> <pages> 359-366. </pages> <address> Menlo Park, California: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Like in most pattern discovery algorithms, it is assumed that each group in the partition contains at least a given number of sequences. A variation of this method is developed in (Bailey & Elkan 1995). Discovering sets of deterministic patterns has been studied in <ref> (T. Shoudai et al. 1995) </ref>, but there an upper bound on the number of subclasses has to be assumed a priori.
Reference: <author> Thompson, J.; Higgins, D. G.; and Gibson, T. J. </author> <year> 1994. </year> <title> Clustal W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice. </title> <journal> Nucleic Acids Research 22:46. </journal>
Reference-contexts: The algorithm correctly splitted them back into the original groups. In the second experiment the algorithm was able to discover subfamilies in a family domain segments included in the analysis. The tree was produced using Clustal W <ref> (Thompson, Higgins, & Gibson 1994) </ref> which uses the neighborhood joining method (NJ) for estimating phylogenetic trees (Saitou & Nei 1987), and was taken from the `official' World-Wide-Web pages for (Aasland & Stewart 1995). <p> The 31 segments included two sets identified by Aasland and Stewart: 8 classical chromo domains linked to chromo shadow domains (set 1), and 8 chromo shadow domain segments (set 2) (Aasland & Stewart 1995). 31 segments, where the subfamilies are shown. The tree was produced using Clustal W <ref> (Thompson, Higgins, & Gibson 1994) </ref> which uses the neighborhood joining (NJ) method for estimating phylogenetic trees (Saitou & Nei 1987). 1. DmHP1_A DvHP1_A HuHP1_A MoMOD1_A MoMOD2_A PcHET1_A PcHET2_A E-x (0,1)-E-E-[FY]-xV-E-K-[IV]-[IL]-D-[KR]-R-x (3,4)-G-x-V-x-Y-xLK 2. DmHP1_B DvHP1_B HuHP1_B MoMOD1_B MoMOD2_B PcHET1_B L-x (2,3)-E-[KR]-I-[IL]-G-A-[TS]-D-[TSN]-x-G-[EDR]-L-x-F-L-x (2)-[FW]- 3.
Reference: <author> Wu, T. D., and Brutlag, D. L. </author> <year> 1995. </year> <title> Identificaion of protein motifs using conserved amino acid properties and partitioning techniques. </title> <editor> In C. Rawlings et al., ed., </editor> <booktitle> Proc. of Third International Conference on Intelligent Systems for Molecular Biology, </booktitle> <pages> 402-410. </pages> <address> Menlo Park, California: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: The problem is important, for instance, in finding and characterizing protein families. A protein class may contain subclasses, and while each subclass may have a specific motif, the entire class may have only a very general motif <ref> (Wu & Brutlag 1995) </ref>. Moreover the problem of simultaneous finding patterns and subclasses is an essential part of a more general problem of `making sense out of biosequential data'. <p> They can be divided into probabilistic patterns, e.g., Hidden Markov Models (Krogh et al. 1994) or profiles (Grib-skov, McLachlan, & Eisenberg 1987), and deterministic ones. Each of the types has applications where it works better; some comparative analysis is given in <ref> (Wu & Brutlag 1995) </ref>. The most general among the deterministic patterns seems to be the pattern class used in PROSITE database. In biocomputing research this class is becoming a standard for the types of patterns that are within the expressive power of regular languages. <p> Shoudai et al. 1995), but there an upper bound on the number of subclasses has to be assumed a priori. Grouping the sequences and sorting out the noise without any a priori assumption on the level of noise and the size of the groups has been studied in <ref> (Wu & Brutlag 1995) </ref>, but there the sequences are assumed to be given prealigned. In our approach we do not make any such assumptions. Particularly we do not impose any strict bounds on the level of noise, on the number of subfamilies, or on their size. <p> Minimizing M s () equals maximizing C s () and thus C s defines a kind of fitness measure for pattern set in respect to the trivial message length A. Note that this fitness measure is similar in spirit to the one used in <ref> (Wu & Brutlag 1995) </ref>. Next let us introduce a slightly different and more efficient coding that takes into account relative frequencies of characters a i 2 and leads to a fitness measure substantiated from the point of view of Bayesian inference. <p> In our terminology it would essentially mean taking w j = 0 and requiring that the pattern matches at least a given number of sequences. Experiments have shown that combined with this simplified fitness measure the greedy heuristics is not sufficient. The fitness measure in <ref> (Wu & Brutlag 1995) </ref> can also be regarded as a special case of our MDL measure, and essentially be obtained from our measure by taking w j = u j . The pattern candidates in (Wu & Brutlag 1995) are generated by simpler algorithm than MDL-Pratt, based on the assumption that <p> The fitness measure in <ref> (Wu & Brutlag 1995) </ref> can also be regarded as a special case of our MDL measure, and essentially be obtained from our measure by taking w j = u j . The pattern candidates in (Wu & Brutlag 1995) are generated by simpler algorithm than MDL-Pratt, based on the assumption that the patterns are prealigned. On the other hand (Wu & Brutlag 1995) uses a more complicated algorithm, beamsearch, for splitting the sequence set into subfamilies. <p> The pattern candidates in <ref> (Wu & Brutlag 1995) </ref> are generated by simpler algorithm than MDL-Pratt, based on the assumption that the patterns are prealigned. On the other hand (Wu & Brutlag 1995) uses a more complicated algorithm, beamsearch, for splitting the sequence set into subfamilies. Experiments Here we present two experimental results obtained by MDL-Pratt algorithm described in the previous sections for some real biosequence data.
References-found: 27

