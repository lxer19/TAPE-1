URL: http://iamwww.unibe.ch/~rvswww/Publikationen/Grabowski/PROMS95/PROMS95.ps.gz
Refering-URL: http://iamwww.unibe.ch/~rvswww/Publikationen/index.html
Root-URL: 
Email: e-mail: grabowsk@iam.unibe.ch  e-mail: walter@tik.ee.ethz.ch  
Title: Testing Quality-of-Service Aspects in Multimedia Applications  
Author: Jens Grabowski a and Thomas Walter b 
Keyword: Distributed multimedia applications, quality of service, conformance test ing, testing architectures, specification languages  
Address: Neubruckstrasse 10, 3012 Bern, Switzerland,  Zurich/ETZ Building, 8092 Zurich, Switzerland,  
Affiliation: a University of Berne, Computer Science Department,  b Swiss Federal Institute of Technology Zurich, Computer Engineering and Networks Laboratory, ETH  
Abstract: Assuring and proofing the quality of multimedia applications and services by means of testing will be a great challenge for manufacturers and service providers. Standardized methods and tools for conformance testing are applicable to traditional protocols (i.e., a single data stream, no timing requirements) only. In this paper we discuss a testing methodology and framework for testing multimedia applications. We started to develop and implement a new TeleCommunication Test Specification and implementation Language (TelCom TSL). TelCom TSL is meant to be a tool for specifying and implementing test cases for (distributed) multimedia applications. TelCom TSL defines a novel testing architecture. Its formal syntax and semantics definition with real-time extensions makes TelCom TSL applicable for testing multimedia applications. The contributions of this paper are an analysis of different QoS semantics in the context of multimedia applications, a definition of QoS testing and the TelCom TSL testing architecture. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Baumgarten. </author> <title> Open Issues in Conformance Test Specification, </title> <booktitle> Proceedings PTS VII, </booktitle> <year> 1994. </year>
Reference-contexts: TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition. Strengths and lacks of TTCN are well known and have been discussed thoroughly <ref> [1] </ref>. To overcome some lacks several TTCN extensions concerning parallel test components [16] and modularization [17, 18] are in the process of standardization. But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements.
Reference: [2] <author> BETEUS Consortium. </author> <title> Broadband Exchange for Trans-European USage Functional Specifications, </title> <booktitle> BETEUS M1010, Deliverable 2, </booktitle> <year> 1994. </year>
Reference-contexts: We conclude with a summary and we identify further developments of QoS testing. 2 Teleseminar Amultimedia application scenario Teleseminar is a multimedia application that uses multimedia workstations distributed over a wide area network <ref> [2] </ref>. Each workstation acts as a communication unit that transmits, receives, and processes video, audio and data streams. Fig. 1 describes the scenario schematically. In this scenario video and audio are used to give each participant a feeling like attending a face-to-face meeting.
Reference: [3] <author> G. Coulouris, J. Dollimore, T. Kindberg. </author> <title> Distributed Systems Concepts and Design Second Edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: The synchronization information may consist of a time stamp of a video or audio packet send event. From this information and an estimation of packet transfer time and clock drifts <ref> [3] </ref> the receiving test component can compute the expected arrival time of the video/audio packet.
Reference: [4] <author> CCITT/ITU, </author> <title> Data Communication Networks Open Systems Interconnection (OSI) Model and Notation, Service Definition, </title> <address> X.200 - X.219, </address> <year> 1988. </year>
Reference-contexts: Table 1 shows an example of how QoS values for synchronization may be related to time intervals. 3 QoS semantics As explained informally in the previous section quality-of-Service (QoS) refers to a set of parameters that characterize a connection between communication entities across a network. Typical QoS parameters are <ref> [4, 5] </ref>: throughput, delay, jitter (performance related parameters), or residual error rates, connection establishment failure probability (reliability related properties), or presentation coding and security requirements (miscellaneous properties). The negotiation of QoS parameters takes place between calling and called service users (e.g. multimedia application) and service provider.
Reference: [5] <author> A. Danthine, Y. Baguette, G. Leduc, Leonard, </author> <title> The OSI 95 Connection-Mode Transport Service The Enhanced QoS, </title> <editor> A. Dantine, O. Spaniol (Editors), </editor> <booktitle> High Performance Networking, IFIP, </booktitle> <year> 1992. </year>
Reference-contexts: But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements. This is also due to the fact that some requirements, e.g., QoS aspects and timing constraints, are still research topics <ref> [5, 6, 7] </ref>. To close this gap, in 1994 the University of Berne and the ETH Zurich started a cooperation with the goal to define and implement TelCom TSL, a new TeleCommunication Test Specification and implementation Language. <p> Table 1 shows an example of how QoS values for synchronization may be related to time intervals. 3 QoS semantics As explained informally in the previous section quality-of-Service (QoS) refers to a set of parameters that characterize a connection between communication entities across a network. Typical QoS parameters are <ref> [4, 5] </ref>: throughput, delay, jitter (performance related parameters), or residual error rates, connection establishment failure probability (reliability related properties), or presentation coding and security requirements (miscellaneous properties). The negotiation of QoS parameters takes place between calling and called service users (e.g. multimedia application) and service provider. <p> This may imply that further connection requests are rejected since the newly requested QoS values may interfere with the QoS values of already established connections. One can think of levels of QoS support in between best-effort and guaranteed QoS. These are compulsory and threshold QoS semantics <ref> [5, 6] </ref>. * Compulsory QoS values. The value for a QoS parameter to be negotiated may only be strengthened by the service provider and the called service user.
Reference: [6] <author> A. Danthine, O. Bonaventure. </author> <title> From Best Effort to Enhanced QoS, </title> <booktitle> CIO Deliverable, </booktitle> <volume> No. R2060/ULg/CIO/DS/P/004/b1, </volume> <year> 1993. </year>
Reference-contexts: But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements. This is also due to the fact that some requirements, e.g., QoS aspects and timing constraints, are still research topics <ref> [5, 6, 7] </ref>. To close this gap, in 1994 the University of Berne and the ETH Zurich started a cooperation with the goal to define and implement TelCom TSL, a new TeleCommunication Test Specification and implementation Language. <p> This may imply that further connection requests are rejected since the newly requested QoS values may interfere with the QoS values of already established connections. One can think of levels of QoS support in between best-effort and guaranteed QoS. These are compulsory and threshold QoS semantics <ref> [5, 6] </ref>. * Compulsory QoS values. The value for a QoS parameter to be negotiated may only be strengthened by the service provider and the called service user.
Reference: [7] <author> R. Gopalakrishan, G. Parulkar. </author> <title> Application Level Protocol Implementations to Provide QoS Guarantees at Endsystems, </title> <booktitle> IEEE Ninth Annual Workshop on Computer Communication, </booktitle> <year> 1994. </year>
Reference-contexts: But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements. This is also due to the fact that some requirements, e.g., QoS aspects and timing constraints, are still research topics <ref> [5, 6, 7] </ref>. To close this gap, in 1994 the University of Berne and the ETH Zurich started a cooperation with the goal to define and implement TelCom TSL, a new TeleCommunication Test Specification and implementation Language.
Reference: [8] <author> J. Grabowski, D. Hogrefe, R. Nahm. </author> <title> Test Case Generation with Test Purpose Specification by MSCs. </title> <editor> In O. Faergemand and A. Sarma, editors, </editor> <title> SDL'93 Using Objects. </title> <publisher> North-Holland, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [8, 9, 10, 11] </ref>.
Reference: [9] <author> J. Grabowski, D. Hogrefe, R. Nahm, A. Spichiger. </author> <title> Die SaMsTaG Methode und ihre Rolle im Konformitatstesten. In Praxis der Informationsverarbeitung und Kommunikation (PIK) Nr. 4/94, </title> <publisher> K.G. Saur Verlag, </publisher> <address> Munchen, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [8, 9, 10, 11] </ref>.
Reference: [10] <author> J. Grabowski, D. Hogrefe, I. Nussbaumer, A. Spichiger. </author> <title> Improving the Quality of Test Suites for Conformance Tests by using Message Sequence Charts. </title> <booktitle> In Proceedings of the 'Fourth European Conference on Software Quality' in Basel (Switzerland), </booktitle> <month> October </month> <year> 1994. </year> <booktitle> 2nd Workshop on Protocols for Multimedia Systems (PROMS), </booktitle> <address> Salzburg, Austria, Oct. 9 - 12, </address> <year> 1995 </year> <month> 14 </month>
Reference-contexts: observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [8, 9, 10, 11] </ref>.
Reference: [11] <author> J. Grabowski, D. Hogrefe, I. Nussbaumer, A. Spichiger. </author> <title> Combining MSCs and Data Descriptions in order to Generate Executable Test Cases for ISDN Systems. </title> <booktitle> In Proceeding of the XV International Switching Symposium (ISS'95) World Telecommunications Congress, </booktitle> <address> Berlin, </address> <month> April 95. </month>
Reference-contexts: observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC <ref> [8, 9, 10, 11] </ref>.
Reference: [12] <author> D. </author> <title> Hogrefe Conformance Testing Based on Formal Methods, FORTE 90, </title> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: 12, 1995 8 In this paper we concentrate on a QoS testing architecture and identify the requirements that are to be met by such an architecture to be applicable in a scenario as described above. 5.1 A QoS Testing Architecture In our opinion QoS testing extends protocol conformance testing approaches <ref> [14, 12] </ref> in several directions: 1. The implementation under test (IUT) is distributed. Maintenance of QoS values is performed by the service provider. <p> Similar to other testing architectures <ref> [14, 12] </ref> we assume that an IUT may be a small part of a bigger software system. But unlike to existing conformance testing architectures we presuppose that the IUT is driven only via service access points.
Reference: [13] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 1: General Concepts, </title> <address> ISO/IEC 9646-1, </address> <year> 1994. </year>
Reference-contexts: Furthermore, we focus on testing because for traditional protocols and protocol implementations it is common practice to proof and assure quality by means of conformance testing <ref> [13] </ref>. <p> Conformance testing as understood by ISO and ITU-T <ref> [13] </ref> is functional black-box testing of OSI protocol implementations. An implementation under test (IUT) is meant to be a black box and its observable behavior is compared with the observable behavior as derived from a protocol specification. <p> In Section 5, we propose the TelCom TSL testing architecture and introduce its main features. The proposed testing architecture is an extension of an existing one <ref> [13, 14] </ref>. The extensions are that we can deal with several multimedia data streams and with distributed IUTs. <p> We do not consider the negotiation of QoS values since negotiation of QoS values is a functional property of a protocol specification which can be tested using methods developed for OSI conformance testing <ref> [13] </ref>. Furthermore, we exclude best-effort QoS semantics from our consideration since no particular constraints on the behavior of a service provider are imposed by this semantics. We argue that OSI conformance testing suffice in this case.
Reference: [14] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 2: Abstract Test Suite Specification, </title> <address> ISO/IEC 9646-2, </address> <year> 1994. </year>
Reference-contexts: In Section 5, we propose the TelCom TSL testing architecture and introduce its main features. The proposed testing architecture is an extension of an existing one <ref> [13, 14] </ref>. The extensions are that we can deal with several multimedia data streams and with distributed IUTs. <p> 12, 1995 8 In this paper we concentrate on a QoS testing architecture and identify the requirements that are to be met by such an architecture to be applicable in a scenario as described above. 5.1 A QoS Testing Architecture In our opinion QoS testing extends protocol conformance testing approaches <ref> [14, 12] </ref> in several directions: 1. The implementation under test (IUT) is distributed. Maintenance of QoS values is performed by the service provider. <p> Similar to other testing architectures <ref> [14, 12] </ref> we assume that an IUT may be a small part of a bigger software system. But unlike to existing conformance testing architectures we presuppose that the IUT is driven only via service access points.
Reference: [15] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 3: The Tree and Tabular Combined Notation (TTCN), </title> <address> ISO/IEC 9646-3, </address> <year> 1992. </year>
Reference-contexts: Methods and tools for conformance testing are defined in the international ISO/IEC multipart standard IS 9646 'OSI Conformance Testing Methodology and Framework'. Part III of ISO/IEC 9646 <ref> [15, 16] </ref> defines the Tree and Tabular Combined Notation (TTCN) as the main tool for specifying test cases for conformance testing. TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition.
Reference: [16] <author> ISO/IEC. </author> <title> Information Technology Open Systems Interconnection Conformance Testing Methodology and Framework Part 3: The Tree and Tabular Combined Notation (TTCN): Amendment 1: TTCN Extensions, </title> <type> ISO/IEC 9646-3 DAM 1, </type> <year> 1993. </year>
Reference-contexts: Methods and tools for conformance testing are defined in the international ISO/IEC multipart standard IS 9646 'OSI Conformance Testing Methodology and Framework'. Part III of ISO/IEC 9646 <ref> [15, 16] </ref> defines the Tree and Tabular Combined Notation (TTCN) as the main tool for specifying test cases for conformance testing. TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition. <p> TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition. Strengths and lacks of TTCN are well known and have been discussed thoroughly [1]. To overcome some lacks several TTCN extensions concerning parallel test components <ref> [16] </ref> and modularization [17, 18] are in the process of standardization. But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements.
Reference: [17] <author> ETSI TC MTS. </author> <title> Methods for testing and specification (MTS); Partial and multi-party Abstract Test Suites (ATS), </title> <address> ETSI DTR/MTS-00021, </address> <year> 1994. </year>
Reference-contexts: TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition. Strengths and lacks of TTCN are well known and have been discussed thoroughly [1]. To overcome some lacks several TTCN extensions concerning parallel test components [16] and modularization <ref> [17, 18] </ref> are in the process of standardization. But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements.
Reference: [18] <author> ETSI TC MTS. </author> <title> Draft Technical Corrigendum on defect report 9646-3/002 Modular TTCN, Contribution from H. </title> <editor> Afsharazad and A. </editor> <title> Flodin (both from Telelogic AB, </title> <note> Sweden) to ETSI TC MTS, </note> <month> July </month> <year> 1995. </year>
Reference-contexts: TTCN is a notation and not a language since it has a standardized syntax but no formal semantics definition. Strengths and lacks of TTCN are well known and have been discussed thoroughly [1]. To overcome some lacks several TTCN extensions concerning parallel test components [16] and modularization <ref> [17, 18] </ref> are in the process of standardization. But, none of these extensions tackle the problem specifying test cases for checking the mentioned multimedia specific functional and non-functional requirements.
Reference: [19] <author> T. Plagemann, B. Plattner, M. Vogt, T. Walter. </author> <title> A Model for Dynamic Configuration of LightWeight Protocols, </title> <booktitle> Proceedings IEEE Third Workshop on Future Trends of Distributed Computing Systems, IEEE, </booktitle> <year> 1992. </year>
Reference-contexts: case so that the expected (with respect to the QoS semantics) behavior of an implementation is observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification <ref> [22, 19] </ref>, and the specification and generation of TTCN test cases based on SDL and MSC [8, 9, 10, 11].
Reference: [20] <author> R. Steinmetz. </author> <title> Synchronization Properties in Multimedia Systems, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 8, No. 3, </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: of QoS values should be possible for an individual data stream but should also be possible for several streams, e.g., in the case of synchronization of audio and video, QoS values might be specified by an application that defines a delay of the audio stream relative to the video stream <ref> [20] </ref>. The previously discussed QoS semantics may remain unchanged but QoS maintenance is to be applied to several data streams. 4 QoS testing issues From the previous discussion we conclude that different QoS semantics have different impacts of QoS testing. <p> As an example we consider the teleseminar scenario (Section 2) but restrict ourself to video and audio streams which have to be synchronized (Fig. 2). In order to enable the synchronization of audio and video data we assume that so-called event stamps <ref> [20] </ref> are introduced in the data streams.
Reference: [21] <author> R. Steinmetz. </author> <title> Multimedia-Technologie Einfuhrung und Grundlagen (in German), </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: applications utilizing more than one data stream, e.g., video and audio at the same time, with functional properties (as tackled by conformance testing) for each data stream, and, furthermore, non-functional properties, e.g., timing constraints (as in real-time applications), quality-of-service (QoS) aspects, synchronization of different data streams (audio, video, textual information) <ref> [21] </ref>. It is known that methods standardized for conformance testing are not able to deal with the upcoming new requirements of distributed multimedia applications. Methods and tools for conformance testing are defined in the international ISO/IEC multipart standard IS 9646 'OSI Conformance Testing Methodology and Framework'. <p> Besides QoS values for individual data streams there also exist QoS values describing the quality of synchronization between different streams. According to <ref> [21] </ref> in most cases the synchronization of data streams in multimedia scenarios is soft synchronization. This means that the synchronizing action can be done within some time interval. For instance, video and audio should be lip synchronized. Similarly, tele-pointer and audio should be synchronized. <p> Possible QoS values are optimal, good, acceptable, and not acceptable. Relating time intervals to these QoS values may be influenced by the preferences of the users. E.g., field trials have shown that video before audio is more accepted than the other way round <ref> [21] </ref>. Table 1 shows an example of how QoS values for synchronization may be related to time intervals. 3 QoS semantics As explained informally in the previous section quality-of-Service (QoS) refers to a set of parameters that characterize a connection between communication entities across a network.
Reference: [22] <author> J. Montiel, E. Rudolph, J. </author> <title> Burmeister (Editors), Methods for QoS Verification and Protocol Conformance Testing in IBC Application Guidelines -, TOPIC, </title> <year> 1993. </year>
Reference-contexts: case so that the expected (with respect to the QoS semantics) behavior of an implementation is observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN [23, 24], QoS specification and verification <ref> [22, 19] </ref>, and the specification and generation of TTCN test cases based on SDL and MSC [8, 9, 10, 11].
Reference: [23] <author> T. Walter, J. Ellsberger, F. Kristoffersen, P.v.D. Merkhof. </author> <title> A Common Semantics Representation for SDL and TTCN, </title> <booktitle> Proceedings PSTV XII, </booktitle> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: force an implementation through a test case so that the expected (with respect to the QoS semantics) behavior of an implementation is observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN <ref> [23, 24] </ref>, QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC [8, 9, 10, 11].
Reference: [24] <author> T. Walter, B. Plattner. </author> <title> An Operational Semantics for Concurrent TTCN, </title> <booktitle> Proceedings PTS V, </booktitle> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: force an implementation through a test case so that the expected (with respect to the QoS semantics) behavior of an implementation is observed. 5 TelCom TSL A Framework for QoS Testing The definition of TelCom TSL has been influenced by our work on the formal definition of TTCN, concurrent TTCN <ref> [23, 24] </ref>, QoS specification and verification [22, 19], and the specification and generation of TTCN test cases based on SDL and MSC [8, 9, 10, 11].
References-found: 24

