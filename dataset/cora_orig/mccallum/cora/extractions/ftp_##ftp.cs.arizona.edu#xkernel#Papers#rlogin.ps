URL: ftp://ftp.cs.arizona.edu/xkernel/Papers/rlogin.ps
Refering-URL: http://www.cs.arizona.edu/xkernel/bibliography.html
Root-URL: http://www.cs.arizona.edu
Title: Implementing a Secure rlogin Environment: A Case Study of Using a Secure Network Layer Protocol  
Author: Gene H. Kim Hilarie Orman Sean O'Malley 
Address: Tucson, AZ 85721  
Affiliation: Department of Computer Science University of Arizona  
Abstract: This paper describes our experiences building a secure rlogin environment. With minimal changes to the rlogin server and the use of a secure network layer protocol, we remove the vulnerability of hostname-based authentication and IP source address spoofing. We investigate how applications such as rlogin interact with this new layer, and propose extensions to the rlogin server that can utilize these services. We believe rlogin presents a situation where the application layer seems the most appropriate location for enforcing security policy, instead of in a lower layer. Our layered approach to rlogin security achieves functionality similar to the Kerberos klogin client and the encrypted telnet packages, without their complexity or loss of generality. Implementing the application layer rlogin server extensions required fewer than ninety lines of code. Even if our rlogin application layer extensions are omitted, rlogin connections still benefit from secure network layer services. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mark B. Abbott and Larry L. Peterson. </author> <title> A language-based approach to protocol implementation. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(1) </volume> <pages> 4-19, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Using these services, we have built and demonstrated an rlogin server that is protected from attacks and protects passwords from exposure under more circumstances. Our approach to rlogin security is completely modular. By using the x-kernel <ref> [1] </ref> as our design framework, the network security layer can provide authentication and privacy services without changing application layer programs. Other solutions, such as Kerberos [15] and the encrypted telnet programs discussed in [23, 26], require modifying existing server and client programs.
Reference: [2] <author> Frederick M. Avolio and Marcus J. Ranum. </author> <title> A network perimeter with secure external access. </title> <type> Technical report, </type> <institution> Trusted Information Systems, </institution> <month> Jan </month> <year> 1994. </year>
Reference-contexts: Because firewalls must be in the routing path, vulnerabilities still exist. The more sophisticated firewalls now becoming available can also provide point to point IP encryption services <ref> [2] </ref>. However, the scope of protection afforded is similar to the case of filtering routers packets are still sent in the clear by the originating host, presenting a window of vulnerability to eavesdropping. These remaining issues in router based solutions have helped motivate another approach to providing network security.
Reference: [3] <author> Steve Bellovin. </author> <title> Security problems in the TCP/IP protocol suite. </title> <journal> Computer Communications Review, </journal> <volume> Vol. 19(No. 2), </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: However, flaws in the mechanism can be exploited to allow malicious users to gain entry to machines. These security vulnerabilities in the TCP/IP protocols and the Berkeley r-command programs have been discussed at length in the literature <ref> [3, 20, 27] </ref>. Nonetheless, programs such as as rlogin remain in widespread use. The consequences of not eliminating these security vulnerabilities can be seen in the recent CERT advisory [6] pertaining to widespread abuses of Unix systems via IP host spoofing and TCP connection forging. <p> In this paper, we address an attack whereby a malicious host masquerades as a trusted host to bypass the rlogin password security mechanism and gain access to the system. The attacker can either forge DNS name and address resolution replies <ref> [3] </ref> or forge the source address in the IP packet header. The latter attack is not a weakness due to hostname based authentication, but is a more general problem of remote host authentication. <p> At the current time, there is no assurance that the information in a DNS response is valid. Consequently, any security mechanisms depending upon mapping names to addresses are ill-founded. This is documented in the literature <ref> [3, 27] </ref>, and has been exploited in system attacks [11]. 2.3 TCP/IP Vulnerabilities TCP is used as transport service for rlogin. TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in [3, 20]. Until recently, these vulnerabilities may have seemed too obscure to warrant concern. <p> This is documented in the literature [3, 27], and has been exploited in system attacks [11]. 2.3 TCP/IP Vulnerabilities TCP is used as transport service for rlogin. TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in <ref> [3, 20] </ref>. Until recently, these vulnerabilities may have seemed too obscure to warrant concern.
Reference: [4] <author> Steve Bellovin. </author> <title> Hostpair weaknesses, ipsec discussion. </title> <type> Technical report, </type> <institution> ATT Bell Laboratories, </institution> <year> 1995. </year>
Reference-contexts: In practice, sender authentication and message integrity are provide by using a keyed hash function such as MD5. Although the option of message privacy alone is provided by using DES in CBC mode [9], this combination is not generally recommended <ref> [4] </ref>; privacy plus authentication and integrity (e.g. DES-CBC over unkeyed MD5) is a better option because it protects packets against having information appended to them without detection. Nonetheless, for the purpose of protecting passwords, the DES-CBC option is viable, and Page 3 rlogin makes use of it.
Reference: [5] <author> CERT Coordination Center. CA-94:01: </author> <title> Ongoing Network Monitoring Attacks, </title> <year> 1994. </year>
Reference-contexts: As the user types the password, it is transmitted over the network. In the past two years, this vulnerability has extensively exploited <ref> [5] </ref> to capture passwords en masse. 2.2 Host Naming Vulnerabilities In the rlogin server, trusted hosts are referenced by their names.
Reference: [6] <author> CERT Coordination Center. CA-95:01: </author> <title> IP Spoofing Attacks and Highjacked Terminal Connections, </title> <year> 1995. </year>
Reference-contexts: These security vulnerabilities in the TCP/IP protocols and the Berkeley r-command programs have been discussed at length in the literature [3, 20, 27]. Nonetheless, programs such as as rlogin remain in widespread use. The consequences of not eliminating these security vulnerabilities can be seen in the recent CERT advisory <ref> [6] </ref> pertaining to widespread abuses of Unix systems via IP host spoofing and TCP connection forging. In this paper, we address an attack whereby a malicious host masquerades as a trusted host to bypass the rlogin password security mechanism and gain access to the system. <p> TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in [3, 20]. Until recently, these vulnerabilities may have seemed too obscure to warrant concern. However, in January 1995, a CERT computer security advisory <ref> [6] </ref> described the availability of tools that automate the process of IP host spoofing and TCP connection forging malicious users now can use these techniques without detailed knowledge of their operation.
Reference: [7] <author> Pau-Chen Cheng. </author> <title> Design and implementation of modular key management protocol and ip secure tunnel on aix. </title> <booktitle> In Proceedings of the Fifth Usenix Unix Security Symposium, </booktitle> <year> 1995. </year>
Reference-contexts: Although no proposal has been chosen for adoption at this time, prototypes have been built and demonstrated. Among them are swIPe [14] and IPST <ref> [7] </ref>, as well as our secure network layer protocol described in this paper. The secure network layer service needed to eliminate rlogin vulnerabilities to IP spoofing is host authentication, and optionally, message privacy (i.e., packet encryption).
Reference: [8] <author> Bill Cheswick and Steve Bellovin. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: system penetration via the 1 The small number of lines changed does not reflect the amount of effort required to get the hardware and Mach device drivers working correctly! network use specialized hardware, additional network layers, and new applications. 4.1 Router-based solutions CERT currently prescribes the use of filtering routers <ref> [23, 8] </ref> to reduce a site's vulnerability to IP source address spoofing. Filtering routers and firewalls can be configured to prevent incoming IP packets with internal source addresses from entering the network.
Reference: [9] <institution> Data encryption standard. National Bureau of Standards FIPS, </institution> <year> 1977. </year>
Reference-contexts: Algorithms for all combinations of sender authentication, message integrity, and message privacy are available. In practice, sender authentication and message integrity are provide by using a keyed hash function such as MD5. Although the option of message privacy alone is provided by using DES in CBC mode <ref> [9] </ref>, this combination is not generally recommended [4]; privacy plus authentication and integrity (e.g. DES-CBC over unkeyed MD5) is a better option because it protects packets against having information appended to them without detection.
Reference: [10] <author> W. Diffie and M. Hellman. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information, </journal> <volume> IT-22, </volume> <month> Nov </month> <year> 1976. </year>
Reference-contexts: For our secure network layer, there are two relevant attributes: sender authentication and data privacy. The rlogin protocol makes use of these attributes in applying its discretionary access policy. Currently, host-host key management is done with Diffie-Hellman key exchange <ref> [10] </ref> and validated using RSA signatures [24]. For this prototype implementation, RSA public keys are manually distributed.
Reference: [11] <author> Mark W. Eichin and Jon A. Rochlis. </author> <title> With microscope and tweezers: An analysis of the internet virus of november 1988. </title> <booktitle> In Proceedings of the 1989 IEEE Symposium in Research on Security and Privacy, </booktitle> <year> 1989. </year> <pages> Page 8 </pages>
Reference-contexts: At the current time, there is no assurance that the information in a DNS response is valid. Consequently, any security mechanisms depending upon mapping names to addresses are ill-founded. This is documented in the literature [3, 27], and has been exploited in system attacks <ref> [11] </ref>. 2.3 TCP/IP Vulnerabilities TCP is used as transport service for rlogin. TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in [3, 20]. Until recently, these vulnerabilities may have seemed too obscure to warrant concern.
Reference: [12] <institution> Internet Engineering Task Force. Internet protocol security protocol working group charter. Internet Activities Board, </institution> <year> 1992. </year>
Reference-contexts: In 1992, the Internet Protocol Security Working Group was formed to develop mechanisms to protect client protocols of IP at the network layer <ref> [12] </ref>. Proposed network layer services include message privacy, message integrity, source machine and network authentication, access control, reflection protection, security labels, padding, and methods of avoiding traffic analysis. [17] presents a survey of protocols that have been submitted to date.
Reference: [13] <author> Donald E. </author> <title> Eastlake III. Domain name system protocol security extensions. </title> <type> Technical Report IETF Working Draft draft-ietf-dnssec-secext-03.txt, </type> <institution> DNS Security Working Group, </institution> <month> Jan </month> <year> 1995. </year>
Reference-contexts: As a result, considerable functional redundancy may exist. 4.5 Secure DNS The IETF has also formed a working group to address the security vulnerabilities in the Domain Name Service hostname resolution protocol [19]. At the time of this writing, <ref> [13] </ref> has been submitted to the DNS Security Working Group. However, to reduce the set of dependencies, we do not utilize any of these services.
Reference: [14] <author> John Ioannidis and Matt Blaze. </author> <title> The architecture and implementation of network-layer security u nder unix. </title> <booktitle> In Proceedings of the Fourth Usenix Unix Security Symposium, </booktitle> <pages> pages 29-39, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Although no proposal has been chosen for adoption at this time, prototypes have been built and demonstrated. Among them are swIPe <ref> [14] </ref> and IPST [7], as well as our secure network layer protocol described in this paper. The secure network layer service needed to eliminate rlogin vulnerabilities to IP spoofing is host authentication, and optionally, message privacy (i.e., packet encryption).
Reference: [15] <author> J. Kohl and Clifford Neuman. </author> <title> The kerberos network authentication service (V5). Request for Comments (Proposed Standard) RFC 1510, </title> <institution> Internet Engineering Task Force, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: Our approach to rlogin security is completely modular. By using the x-kernel [1] as our design framework, the network security layer can provide authentication and privacy services without changing application layer programs. Other solutions, such as Kerberos <ref> [15] </ref> and the encrypted telnet programs discussed in [23, 26], require modifying existing server and client programs. Our modifications to rlogin allow it to establish a more flexible security policy than it did previously. <p> The secure network layer service needed to eliminate rlogin vulnerabilities to IP spoofing is host authentication, and optionally, message privacy (i.e., packet encryption). In our work, message privacy is used as a way of protecting transmitted passwords. 4.3 The Kerberos approach Kerberos <ref> [15] </ref> takes a different approach to authentication, using a trusted third-party to provide all user and host authentication services authentication tickets are granted on a per-user, per-host basis for a given service. Hosts and users are authenticated by their knowledge of a host-specific or user-specific secret, respectively.
Reference: [16] <author> Samuel J. Leffler, Marshall Kirk McKusick, Michael J. Karels, and John S. Quarterman. </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: How this tool can be used to gain privileged access on UNIX machines running rlogind is described in the next section. 2.4 Rlogin: Password Protection and Vulnerabili ties The 4.2BSD operating system <ref> [16] </ref> introduced a suite of programs (sometimes called the r-commands) that allowed the convenient access of remote resources on network-accessible machines.
Reference: [17] <author> Mark H. Linehan. </author> <title> Comparison of network-level security protocols. </title> <type> Technical report, </type> <institution> IBM T. J. Watson Research Center, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Proposed network layer services include message privacy, message integrity, source machine and network authentication, access control, reflection protection, security labels, padding, and methods of avoiding traffic analysis. <ref> [17] </ref> presents a survey of protocols that have been submitted to date. Although no proposal has been chosen for adoption at this time, prototypes have been built and demonstrated. Among them are swIPe [14] and IPST [7], as well as our secure network layer protocol described in this paper.
Reference: [18] <author> J. Linn. </author> <title> RFC 1508: Generic security service application program interface, </title> <type> version 2. </type> <institution> Internet Activities Board, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: network layer security; indeed, we plan to use DNS extensions for accessing the public keys that are necessary for assuring authentication in our key exchange protocol. 4.6 The GSS Application Layer Interface For purposes of comparing application interfaces, we briefly describe the Generic Security Service Application Program Interface described in <ref> [18] </ref>. It is intended to support in a generic manner cryptographically oriented security services, such as authentication, integrity, non-repudiation, and privacy. Programs using GSS-API benefit from source-level portability of applications, and independence from the underlying security mechanisms.
Reference: [19] <author> P. Mockapetris. </author> <title> RFC 1034: Domain names concepts and facilities. </title> <type> Technical report, </type> <institution> Internet Activities Board, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: In the past two years, this vulnerability has extensively exploited [5] to capture passwords en masse. 2.2 Host Naming Vulnerabilities In the rlogin server, trusted hosts are referenced by their names. Resolving these hostnames into IP addresses (and vice versa) is accomplished by the Domain Naming System <ref> [19] </ref>, which refers to both the hierarchical, distributed database and the query-response protocol for accessing it. At the current time, there is no assurance that the information in a DNS response is valid. Consequently, any security mechanisms depending upon mapping names to addresses are ill-founded. <p> As a result, considerable functional redundancy may exist. 4.5 Secure DNS The IETF has also formed a working group to address the security vulnerabilities in the Domain Name Service hostname resolution protocol <ref> [19] </ref>. At the time of this writing, [13] has been submitted to the DNS Security Working Group. However, to reduce the set of dependencies, we do not utilize any of these services.
Reference: [20] <author> Robert T. Morris. </author> <title> A weakness in the 4.2bsd unix tcp/ip software. </title> <type> Technical report, </type> <institution> ATT Bell Laboratories, </institution> <year> 1985. </year>
Reference-contexts: However, flaws in the mechanism can be exploited to allow malicious users to gain entry to machines. These security vulnerabilities in the TCP/IP protocols and the Berkeley r-command programs have been discussed at length in the literature <ref> [3, 20, 27] </ref>. Nonetheless, programs such as as rlogin remain in widespread use. The consequences of not eliminating these security vulnerabilities can be seen in the recent CERT advisory [6] pertaining to widespread abuses of Unix systems via IP host spoofing and TCP connection forging. <p> This is documented in the literature [3, 27], and has been exploited in system attacks [11]. 2.3 TCP/IP Vulnerabilities TCP is used as transport service for rlogin. TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in <ref> [3, 20] </ref>. Until recently, these vulnerabilities may have seemed too obscure to warrant concern.
Reference: [21] <author> Sean W. O'Malley and Larry L. Peterson. </author> <title> A dynamic network architecture. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(2) </volume> <pages> 110-143, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Page 2 3.1 Modular protocols Our design and implementation framework used the object-oriented x-kernel networking architecture <ref> [21] </ref>. The x-kernel facilitates the development of layered network protocols protocols are small and modular, with fixed, well-defined operations between the layers. The advantages of such an approach are more fully discussed in [22].
Reference: [22] <author> H. Orman, S. O'Malley, R. Schroeppel, and D. Schwartz. </author> <title> Paving the road to network security, or the value of small cobblestones. </title> <booktitle> In Proceedings of the 1994 Internet Society Symposium on Network and Distributed System Security, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: Page 2 3.1 Modular protocols Our design and implementation framework used the object-oriented x-kernel networking architecture [21]. The x-kernel facilitates the development of layered network protocols protocols are small and modular, with fixed, well-defined operations between the layers. The advantages of such an approach are more fully discussed in <ref> [22] </ref>. We implemented a substantial subset of the rlogin server and client functionality in top layer protocols in the x-kernel networking architecture. Implementing the rlogin server and client as x-kernel protocols allowed us to determine to what extent these particular application layer programs interact with the secure network layer.
Reference: [23] <author> Marcus J. Ranum. </author> <title> Thinking about firewalls. </title> <booktitle> In Proceedings of Second International Conference on Systems and Network Security and Management (SANS-II), </booktitle> <month> Apr </month> <year> 1994. </year>
Reference-contexts: Our approach to rlogin security is completely modular. By using the x-kernel [1] as our design framework, the network security layer can provide authentication and privacy services without changing application layer programs. Other solutions, such as Kerberos [15] and the encrypted telnet programs discussed in <ref> [23, 26] </ref>, require modifying existing server and client programs. Our modifications to rlogin allow it to establish a more flexible security policy than it did previously. We attribute the simplicity of our implementation and the concise interface between the application and secure network layer to our software methodology. <p> system penetration via the 1 The small number of lines changed does not reflect the amount of effort required to get the hardware and Mach device drivers working correctly! network use specialized hardware, additional network layers, and new applications. 4.1 Router-based solutions CERT currently prescribes the use of filtering routers <ref> [23, 8] </ref> to reduce a site's vulnerability to IP source address spoofing. Filtering routers and firewalls can be configured to prevent incoming IP packets with internal source addresses from entering the network. <p> Because of this, and the associated problems of scaling this approach to the entire Internet, Kerberos may not be a generally feasible solution. 4.4 Encrypted telnet packages Telnet modifications that incorporate encryption and authentication services are described in <ref> [23, 26] </ref>. This approach incorporates all aspects of network security at the application layer. Instead of delegating these functions to a package such as Kerberos, or delegating them to a network layer protocol, these packages re implement them on a per-application basis.
Reference: [24] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A method for obtaining digital signatures and public key cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 21(No. 2), </volume> <year> 1978. </year>
Reference-contexts: For our secure network layer, there are two relevant attributes: sender authentication and data privacy. The rlogin protocol makes use of these attributes in applying its discretionary access policy. Currently, host-host key management is done with Diffie-Hellman key exchange [10] and validated using RSA signatures <ref> [24] </ref>. For this prototype implementation, RSA public keys are manually distributed.
Reference: [25] <author> R. L. Rivest. </author> <title> RFC 1321: The md5 message-digest algorithm. </title> <type> Technical report, </type> <institution> Internet Activities Board, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: The security of the enhancements depends on a pairwise shared key between hosts; the keys can either be manually pre-distributed or dynamically negotiated. The algorithms accepted between two hosts are determined by the site configuration module. For instance, a site may require that MD5 <ref> [25] </ref> authentication be used for all packets to and from a particular remote host. Only those packets that are acceptable according to the site policy and pass the required cryptographic checks are allowed to proceed up the protocol stack (i.e., to higher level protocols and applications).
Reference: [26] <author> David R. Safford, Douglas Lee Schales, and David K. Hess. </author> <title> The TAMU security package: An ongoing response to internet intruders in an academic environment. </title> <address> pages 91-118, Berkeley, CA, 1993. </address> <publisher> USENIX Association. </publisher>
Reference-contexts: Our approach to rlogin security is completely modular. By using the x-kernel [1] as our design framework, the network security layer can provide authentication and privacy services without changing application layer programs. Other solutions, such as Kerberos [15] and the encrypted telnet programs discussed in <ref> [23, 26] </ref>, require modifying existing server and client programs. Our modifications to rlogin allow it to establish a more flexible security policy than it did previously. We attribute the simplicity of our implementation and the concise interface between the application and secure network layer to our software methodology. <p> Because of this, and the associated problems of scaling this approach to the entire Internet, Kerberos may not be a generally feasible solution. 4.4 Encrypted telnet packages Telnet modifications that incorporate encryption and authentication services are described in <ref> [23, 26] </ref>. This approach incorporates all aspects of network security at the application layer. Instead of delegating these functions to a package such as Kerberos, or delegating them to a network layer protocol, these packages re implement them on a per-application basis.
Reference: [27] <author> Christoph L. Schuba and Eugene H. Spafford. </author> <title> Countering abuse of name-based authentication. </title> <type> Technical Report CSD-TR-94-029, </type> <institution> COAST Laboratory, Purdue University, </institution> <month> apr </month> <year> 1994. </year> <pages> Page 9 </pages>
Reference-contexts: However, flaws in the mechanism can be exploited to allow malicious users to gain entry to machines. These security vulnerabilities in the TCP/IP protocols and the Berkeley r-command programs have been discussed at length in the literature <ref> [3, 20, 27] </ref>. Nonetheless, programs such as as rlogin remain in widespread use. The consequences of not eliminating these security vulnerabilities can be seen in the recent CERT advisory [6] pertaining to widespread abuses of Unix systems via IP host spoofing and TCP connection forging. <p> At the current time, there is no assurance that the information in a DNS response is valid. Consequently, any security mechanisms depending upon mapping names to addresses are ill-founded. This is documented in the literature <ref> [3, 27] </ref>, and has been exploited in system attacks [11]. 2.3 TCP/IP Vulnerabilities TCP is used as transport service for rlogin. TCP and IP vulnerabilities to source address spoofing and connection forging are discussed in [3, 20]. Until recently, these vulnerabilities may have seemed too obscure to warrant concern.
References-found: 27

