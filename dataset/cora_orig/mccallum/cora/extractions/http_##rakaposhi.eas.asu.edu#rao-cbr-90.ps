URL: http://rakaposhi.eas.asu.edu/rao-cbr-90.ps
Refering-URL: http://rakaposhi.eas.asu.edu/yochan.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Classification of Plan Modification Strategies Based on Coverage and Information Requirements C  
Author: Subbarao Kambhampati 
Address: Stanford CA 94305  
Affiliation: enter for Design Research and Department of Computer Science Stanford University  u  
Note: Appeared in Working notes of AAAI 1990 Spring Symposium on Casebased Reasoning  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> R. Alterman, </author> <title> ``An Adaptive Planner'', </title> <booktitle> Proceedings of 5th 2 AAAI, </booktitle> <year> 1986, </year> <pages> 65-69. </pages> . <editor> J. G. Carbonell, </editor> <title> ``Derivational Analogy and its Role in n Problem Solving'', </title> <booktitle> Proceedings of AAAI, </booktitle> <address> Washingto .C., </address> <year> 1983, </year> <pages> 64-69. </pages>
Reference-contexts: 1. Introduction email: rao@sunrise.stanford.ed he ability to modify an existing plan to make it conform to the t constraints of a new (or changed) planning situation is importan or plan reuse, replanning and case-based planning. While , significant amount of past work addressed this problem (e.g. 2, 3] <ref> [5, 1] </ref> [13] [17], [16]), there is still a lack of understanding . of the general types of modification strategies and their coverage or example, while it is generally agreed that the information e about the internal structure of the plan is important to facilitat exible plan modification, the general issue

Reference: 10. <author> S. Kambhampati and J. A. Hendler, </author> <title> ``Flexible Reuse of I Plans via Annotation and Verification'', </title> <booktitle> Proceedings of 5th EEE Conf. on Applications of Artificial Intelligence, </booktitle> <year> 1989, </year> <month> 1 </month>
Reference-contexts: In rthe course of our research on developing , a framework foPRIAR e flexible plan reuse in hierarchical planning <ref> [11, 12, 10] </ref>, we hav eveloped a classification of plan modification strategies based d on the nature of the modifications that are allowed by them, an he types of information they require to facilitate those r modifications.
Reference: 1. <author> S. Kambhampati, </author> <title> ``Flexible Reuse and Modification in d Hierarchical Planning: A Validation Structure Base pproach'', </title> <institution> CS-Tech. Rep.-2334, CAR-Tech. Rep.-469, S Center for Automation Research, Department of Computer cience, University of Maryland, College Park, MD 20742, </institution> <month> 1 October </month> <year> 1989. </year> <type> (Ph.D. Dissertation). </type>
Reference-contexts: 1. Introduction email: rao@sunrise.stanford.ed he ability to modify an existing plan to make it conform to the t constraints of a new (or changed) planning situation is importan or plan reuse, replanning and case-based planning. While , significant amount of past work addressed this problem (e.g. 2, 3] <ref> [5, 1] </ref> [13] [17], [16]), there is still a lack of understanding . of the general types of modification strategies and their coverage or example, while it is generally agreed that the information e about the internal structure of the plan is important to facilitat exible plan modification, the general issue
Reference: 2. <author> S. Kambhampati and J. A. Hendler, </author> <title> ``Control of Refitting e during Plan Reuse'', </title> <booktitle> 11th International Joint Conferenc n Artificial Intelligence, </booktitle> <address> Detroit, Michigan, USA, </address> <month> August 1 </month>
Reference-contexts: The generally accepted answer to the question of t representation of a stored plan is to ``remember everything tha ent into the formation of the plan.'' This was first suggested by , Carbonell in his derivational analogy work <ref> [2] </ref>. <p> It is thus not surprising that ther ave not been any implemented systems which systematically e represent decision rationale information, or utilize it to automat lan reuse and modification. The original derivational analogy framework <ref> [2] </ref> proposed n that this type of information be captured. However, since the here has not been any systematic characterization of the nature tand utility of such structures.
Reference: 3. <author> J. L. Kolodner, </author> <title> ``Case-Based Problem Solving'', </title> <booktitle> M Proceedings of the Fourth International Workshop on achine Learning, </booktitle> <institution> University of California, Irvine, </institution> <month> June 1 </month>
Reference-contexts: Rationale behind deci [ sions Justification for choosing - a particular planning deci ion over the other possi ble alternatives.] Can guide modification to , avoid previous failures chieve optimality etc. These structures have to e be annotated by th lanner or captured in teractively (e.g., <ref> [3] </ref>, [14]). i c c c c c c c c c c c c c c c c c c c c c c c ciiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiic c c c c c c c c c c c c c c c c c c c c c c c c <p> The original derivational analogy framework [2] proposed n that this type of information be captured. However, since the here has not been any systematic characterization of the nature tand utility of such structures. Carbonell and Veloso's recen s proposal for integrating derivational analogy into a problem olving framework <ref> [3] </ref> takes some preliminary steps towards b enumerating the types of decision rationale information that can e captured automatically.
Reference: 4. <author> J. Mostow and M. Barley, </author> <title> ``Automated Reuse of Design n Plans'', </title> <booktitle> Proceedings of International Conference o ngineering Design, </booktitle> <year> 1987. </year>
Reference-contexts: Correctness w.r.t. lanner [Validation Structure] Ensures correctness rela-d tive to the planner's omain knowledge. d In other words, modifie lans stay in the deductive s closure of the planner' omain knowledge. Can be annotated by the f planner as a by-product o lanning (e.g., [11],PRIAR NSIPE NONLI [17], <ref> [4] </ref>) iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii (b). Correctness w.r.t. [ external domain models Causal Explanation] Ensures correctness rela-m tive to the external domain odel. In other words, c modification here can take are of failures that the t planner itself cannot detec r correct. <p> Other work that use orrectness explanations with respect to planner to guide plan f modification includes <ref> [7, 4, 17] </ref>; for a detailed comparison o hese systems with , see [11].
Reference: 15. <author> J. Mostow, </author> <title> ``Design by Derivational Analogy: Issues in s the Automated Replay of Design Plans'', </title> <institution> Rutger niversity ML-Tech. Rep.-22, </institution> <month> March </month> <year> 1987. </year> <note> (To appear in 1 Artificial Intelligence Journal). </note>
Reference-contexts: The second alternative of interactive capture of r decision rationale is an even harder problem, as the captured ationale has to be in a form that can be understood and utilized e by the planner (see <ref> [15] </ref>). It is thus not surprising that ther ave not been any implemented systems which systematically e represent decision rationale information, or utilize it to automat lan reuse and modification. The original derivational analogy framework [2] proposed n that this type of information be captured.
Reference: 6. <author> R. Simmons and R. Davis, </author> <title> ``Generate, Test and Debug: </title> , <booktitle> Combining Associational Rules and Causal Models'' roceedings of 10th IJCAI 10 (1987), </booktitle> <pages> 1071-1078. </pages> <note> n17. </note> <author> D. E. Wilkins, </author> <title> ``Recovering from execution errors i SIPE'', </title> <booktitle> Computational Intelligence 1 (1985). </booktitle>
Reference-contexts: This is sin contrast to Hammond's position <ref> [6] </ref> . While his argument i 6 n based on the apparent complexity of modification based o ausal models, our position is motivated by a desire to demarcate e the applicability of purely heuristic modification strategies. <p> As we pointed out in section 2.3.1 e believe that the right way of dealing with ``complex causal l models'' during plan modification is to abstract the causal mode n such a way that the planner/modifier has an understanding of hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh In <ref> [6] </ref>, Hammond argues `` . . . New plans are built f rom old plans.
References-found: 8

