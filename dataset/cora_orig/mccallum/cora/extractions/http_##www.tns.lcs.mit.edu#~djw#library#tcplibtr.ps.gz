URL: http://www.tns.lcs.mit.edu/~djw/library/tcplibtr.ps.gz
Refering-URL: http://www.tns.lcs.mit.edu/~djw/library/
Root-URL: 
Email: traffic@excalibur.usc.edu  
Title: tcplib: A Library of TCP Internetwork Traffic Characteristics  
Author: Peter B. Danzig Sugih Jamin 
Web: USC-CS-91-495  
Address: Los Angeles, California 90089-0781  
Affiliation: Computer Science Department, University of Southern California,  
Abstract: This paper describes tcplib, a workload or source library for network simulation. This paper motivates the need for tools like tcplib and discusses how to incorporate it into a network simulator. Tcplib is available by anonymous ftp 1 . 
Abstract-found: 1
Intro-found: 1
Reference: [Brady65] <author> Brady, P.T., </author> <title> A Technique for Investigating On-Off Patterns of Speech, </title> <journal> The Bell System Technical Journal, </journal> <volume> Jan 65, </volume> <pages> pp. 1-22. </pages>
Reference-contexts: Furthermore, since TELNET and RLOGIN have essentially the same characteristics, we have included in tcplib only routines describing TELNETs. Additionally, we included characteristics of phone conversations based on the study reported in <ref> [Brady65] </ref> and a distribution of conversations composition breakdown derived from several stub-network traces. Table 1 lists the routine names included with version 0.9 of tcplib. 2. How to Use the Library We define a conversation as the set of TCP connections established by a particular application program. Conversations are bidirectional. <p> These numbers represent wall-clock time of talkspurts and pauses. In using these routines, we need to multiply the values returned with the data rate of the specific voice-encoding mechanism simulated (e.g. 64kbits/s). The talkspurts and pauses distribution used by tcplib were gathered from the study reported in <ref> [Brady65] </ref>. 3 3. Random Number Generation Because curve fitting loses information and since it makes no difference to the simulator whether there exists an analytical representation of the distributions, tcplib generates random numbers by the inverse transform method [Jain91]. It inverts a piecewise linear representation of the measured distribution.
Reference: [Cceres91] <author> Cceres, R., Danzig, P.B., Jamin, S., and Mitzel, </author> <title> D.J., Characteristics of Wide-Area TCP/IP Conversations, </title> <booktitle> Proc. of ACM SIGCOMM '91, </booktitle> <pages> pp. 101-112. </pages>
Reference-contexts: Tcplib is motivated by our observation that present-day wide-area TCP/IP traffic cannot be accurately modeled with simple analytical expressions, but instead requires a combination of detailed knowledge of the end-user applications responsible for the traffic and certain measured probability distributions as reported in <ref> [Cceres91] </ref> and [Danzig92]. We collected threeday traces of wide area Internet traffic at UC Berkeley, University of Southern California, and Bell Communications Research. Our study identified that out of more than 35 different application programs, FTP, SMTP, NNTP, VMNET, TELNET, and RLOGIN are responsible for 96% of wide-area TCP/IP bytes.
Reference: [Crowcroft91] <author> Crowcroft, J., </author> <title> Traffic Analysis of Some UK-US Academic Network Data, </title> <institution> University College London Tech. </institution> <type> Rep. </type> <institution> RN/90/UK. </institution>
Reference-contexts: Two related studies, one at University College London and the other at Lawrence Berkeley Laboratory, identified a subset of these six applications as responsible for most of their widearea TCP traffic <ref> [Crowcroft91] </ref> [Paxson91]. Tcplib models five of these six applications. We excluded VMNET, an IBM mail exchange application, because it was absent from three of the five traces. Furthermore, since TELNET and RLOGIN have essentially the same characteristics, we have included in tcplib only routines describing TELNETs.
Reference: [Danzig92] <author> Danzig, P.B., Jamin, S., Cceres, R., Mitzel, D.J., Estrin, D., </author> <title> An Empirical Workload Model for Driving Wide-Area TCP/IP Network Simulations, </title> <note> to appear in the Journal of Internetworking: Practice and Experiences, </note> <year> 1992. </year>
Reference-contexts: Tcplib is motivated by our observation that present-day wide-area TCP/IP traffic cannot be accurately modeled with simple analytical expressions, but instead requires a combination of detailed knowledge of the end-user applications responsible for the traffic and certain measured probability distributions as reported in [Cceres91] and <ref> [Danzig92] </ref>. We collected threeday traces of wide area Internet traffic at UC Berkeley, University of Southern California, and Bell Communications Research. Our study identified that out of more than 35 different application programs, FTP, SMTP, NNTP, VMNET, TELNET, and RLOGIN are responsible for 96% of wide-area TCP/IP bytes. <p> The application layer might choose to transmit some data in response. 7. Limitations and Future Work Tcplib needs to be extended in several ways. Most crucially, it needs a better model of conversation arrival rates. In <ref> [Danzig92] </ref> we showed that these arrival rates are site dependent, hence this will require detailed study from many Internet stub networks. Tcplib currently lacks several application specific details. It does not model the interarrival time of FTP control packets.
Reference: [Demers89] <author> Demers, A., Keshav, S., and Shenker, S., </author> <title> Analysis and Simulation of a Fair Queueing Algorithm, </title> <booktitle> ACM SIGCOMM 89, </booktitle> <pages> pp. 2-12. </pages>
Reference-contexts: Thus we could specify a number of thread less than the number of conversation arrivals. A thread that has finished simulating a conversation could be assigned to the next conversation. This scheme works fine except when the gateway queueing mechanism, such as Fair-Queueing <ref> [Demers89] </ref> or Virtual Clock [Zhang90], uses the conversation identification (cid), which is associated with each thread, to regulate its use of the gateways buffer space.
Reference: [Dupuy90] <author> Dupuy, A., et al., </author> <title> NEST: A Network Simulation and Prototyping Testbed, </title> <journal> CACM 33:10, </journal> <volume> April 90, </volume> <pages> pp. 63-74. </pages>
Reference-contexts: Wide-Area Network Simulation We have incorporated tcplib into the tcpsim network simulator. Tcpsim [McCanne91] is a successor to the REAL network simulator [Keshav88]. Both tcpsim and REAL run on top of the discrete-event simulator NEST <ref> [Dupuy90] </ref>. In this section we describe extensions and modifications we made to tcpsim to support our workload model. We hope that in describing the changes we made to tcpsim to accommodate tcplib, we will give the readers an inclination on how to incorporate tcplib into their simulators. 6.1.
Reference: [Jain91] <author> Jain, R., </author> <title> The Art of Computer Systems Performance Analysis, </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year>
Reference-contexts: Random Number Generation Because curve fitting loses information and since it makes no difference to the simulator whether there exists an analytical representation of the distributions, tcplib generates random numbers by the inverse transform method <ref> [Jain91] </ref>. It inverts a piecewise linear representation of the measured distribution. Below, we briefly describe the inverse transform method. The inverse transform method maps uniformly distributed 01 random variates through the y-axis of the cumulative probability distribution onto the x-axis.
Reference: [Keshav88] <author> Keshav, S., </author> <title> REAL: a Network Simulator, </title> <type> UCB Tech. Report. </type> <address> UCB/CSD 88/472, </address> <year> 1988. </year>
Reference-contexts: Wide-Area Network Simulation We have incorporated tcplib into the tcpsim network simulator. Tcpsim [McCanne91] is a successor to the REAL network simulator <ref> [Keshav88] </ref>. Both tcpsim and REAL run on top of the discrete-event simulator NEST [Dupuy90]. In this section we describe extensions and modifications we made to tcpsim to support our workload model.
Reference: [Kleinrock75] <author> Kleinrock, L., </author> <title> Queueing Systems, </title> <journal> vol. </journal> <volume> 1, </volume> <publisher> John Wiley & Sons, </publisher> <year> 1976. </year>
Reference-contexts: Gamma distribution has a low enough coefficient of variation to produce random numbers with variance matching our measurements. Equations 1 and 2 give the gamma density function and the standard deviation of Erlangian distribution taken from [Press88] and <ref> [Kleinrock75] </ref> respectively. p r (x)dx = r-1 -x dx, x &gt; 0 (Eq. 1) s Erlang = 1 ( ) h 4 5. Compiling tcplib Recall that characterizing an application can require several distributions.
Reference: [Lapsley91] <author> Lapsley, P., </author> <type> E-mail communication, </type> <year> 1991. </year>
Reference-contexts: The current implementation of tcplib does not model the bidirectional nature of NNTP properly. Furthermore, since we do not have the distribution of NNTP control packet sizes, we use packets with uniformly distributed sizes smaller than NNTP_ARTICLE_SIZE. We define NNTP_ARTICLE_SIZE to be 250 bytes <ref> [Lapsley91] </ref>. Phone conversations share a lot of similarities with interactive applications. One party initializes the conversation, then the two parties exchange data, interleaved with pauses, with an occasional crosstalk, and finally the conversation is terminated.
Reference: [McCanne91] <author> McCanne, S., </author> <title> unreleased code for tcpsim, </title> <year> 1991. </year>
Reference-contexts: Wide-Area Network Simulation We have incorporated tcplib into the tcpsim network simulator. Tcpsim <ref> [McCanne91] </ref> is a successor to the REAL network simulator [Keshav88]. Both tcpsim and REAL run on top of the discrete-event simulator NEST [Dupuy90]. In this section we describe extensions and modifications we made to tcpsim to support our workload model.
Reference: [Molina27] <author> Molina, </author> <title> E.C., Application of the Theory of Probabilities to Telephone Trunking Problems, </title> <journal> Bell System Tech. Jl., </journal> <volume> 6, </volume> <year> 1927, </year> <pages> pp. 461-494. </pages>
Reference-contexts: Conversation Arrival Times and Traffic Breakdown Given the characteristics that completely describe each applications conversations, we now need to decide when to start a new conversation. Molina showed in <ref> [Molina27] </ref> that phone conversations are served after an exponentially distributed delay from the time of their arrivals. To the network, the interarrival times of phone conversations are thus exponentially distributed.
Reference: [Paxson91] <author> Paxson, V., </author> <title> Measurements and Models of Wide-Area TCP Conversations, </title> <institution> Lawrence Berkeley Lab. </institution> <type> Tech. Rep. </type> <institution> LBL-30840, </institution> <year> 1991. </year>
Reference-contexts: Two related studies, one at University College London and the other at Lawrence Berkeley Laboratory, identified a subset of these six applications as responsible for most of their widearea TCP traffic [Crowcroft91] <ref> [Paxson91] </ref>. Tcplib models five of these six applications. We excluded VMNET, an IBM mail exchange application, because it was absent from three of the five traces. Furthermore, since TELNET and RLOGIN have essentially the same characteristics, we have included in tcplib only routines describing TELNETs.
Reference: [Press88] <editor> Press, W.H., et al., </editor> <title> Numerical Recipes in C, </title> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: Gamma distribution has a low enough coefficient of variation to produce random numbers with variance matching our measurements. Equations 1 and 2 give the gamma density function and the standard deviation of Erlangian distribution taken from <ref> [Press88] </ref> and [Kleinrock75] respectively. p r (x)dx = r-1 -x dx, x &gt; 0 (Eq. 1) s Erlang = 1 ( ) h 4 5. Compiling tcplib Recall that characterizing an application can require several distributions.
Reference: [Zhang90] <author> Zhang, L., </author> <title> Virtual Clock: A New Traffic Control Algorithm for Packet Switching Networks, </title> <booktitle> Proc. of SIGCOMM 90, </booktitle> <pages> pp. 19-29. </pages>
Reference-contexts: Thus we could specify a number of thread less than the number of conversation arrivals. A thread that has finished simulating a conversation could be assigned to the next conversation. This scheme works fine except when the gateway queueing mechanism, such as Fair-Queueing [Demers89] or Virtual Clock <ref> [Zhang90] </ref>, uses the conversation identification (cid), which is associated with each thread, to regulate its use of the gateways buffer space.
References-found: 15

