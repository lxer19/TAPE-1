URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1994/94-07.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1994/
Root-URL: 
Email: E-mail: alawrenc@etta.auc.edu  E-mail: fbadre, staskog@cc.gatech.edu  
Title: Empirically Evaluating the Use of Animations to Teach Algorithms  
Author: Andrea W. Lawrence Albert N. Badre John T. Stasko 
Address: Spelman College Atlanta, GA 30314  Atlanta, GA 30332-0280  
Affiliation: Computer Science Department  Graphics, Visualization, and Usability Center College of Computing Georgia Institute of Technology  
Pubnum: Technical Report GIT-GVU-94-07  
Abstract: As algorithm animation systems become more widely available and easy to use, instructors must decide whether to utilize these systems to assist their teaching. Although these systems have generated excitement and interest in both teachers and students, little empirical evidence exists to promote their use. This article describes a study involving the use of algorithm animations in classroom and laboratory settings. Results indicated that allowing students to create their own examples in a laboratory session led to higher accuracy on the post-test examination of understanding of the algorithm as compared to students who viewed prepared examples or no laboratory examples. 
Abstract-found: 1
Intro-found: 1
Reference: [BH92] <author> Marc H. Brown and John Hershberger. </author> <title> Color and sound in algorithm animation. </title> <journal> Computer, </journal> <volume> 25(12) </volume> <pages> 52-63, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms [Bro88, Sta90, Glo92, Bro91, SK93]. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound <ref> [BH92] </ref>. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms. Such representations may be used to appeal to the power of the human visual system.
Reference: [BN93] <author> Marc H. Brown and Marc A. Najork. </author> <title> Animating algorithms in 3D. </title> <booktitle> In Proceedings of the UIST 1993, </booktitle> <address> Atlanta, GA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms [Bro88, Sta90, Glo92, Bro91, SK93]. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects <ref> [SW93, BN93] </ref> or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms. Such representations may be used to appeal to the power of the human visual system.
Reference: [Bro88] <author> Marc Brown. </author> <title> Exploring algorithms using Balsa-II. </title> <journal> Computer, </journal> <volume> 21(5) </volume> <pages> 14-36, </pages> <year> 1988. </year> <month> 10 </month>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms <ref> [Bro88, Sta90, Glo92, Bro91, SK93] </ref>. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms.
Reference: [Bro91] <author> Marc H. Brown. Zeus: </author> <title> A system for algorithm animation and multi-view editing. </title> <booktitle> In Proc. 1991 IEEE Workshop on Visual Languages. IEEE, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms <ref> [Bro88, Sta90, Glo92, Bro91, SK93] </ref>. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms.
Reference: [BS90] <author> Ronald Baecker and Ian Small. </author> <title> Animation at the interface. </title> <editor> In Brenda Laurel, editor, </editor> <booktitle> The Art of Human-Computer Interface Design, </booktitle> <pages> pages 251-267. </pages> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: The use of animation is also becoming increasingly common in the area of Human Computer Interaction. It becomes crucial to formally investigate questions of how animation may best be incorporated into such areas as animated help [Suk88], animated interfaces <ref> [BS90] </ref>, and animated presentation of concepts [BSM91]. Issues of design and use of animations hinge on the careful study of how animations may most effectively be used. 2 Empirical Study This study was designed to investigate several presentation issues concerning the use of animations to present algorithms.
Reference: [BSM91] <author> Ronald M. Baecker, Ian Small, and Richard Mander. </author> <title> Bringing icons to life. </title> <booktitle> In Proceedings of the ACM SIGCHI '91 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 1-6, </pages> <address> New Orleans, LA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: The use of animation is also becoming increasingly common in the area of Human Computer Interaction. It becomes crucial to formally investigate questions of how animation may best be incorporated into such areas as animated help [Suk88], animated interfaces [BS90], and animated presentation of concepts <ref> [BSM91] </ref>. Issues of design and use of animations hinge on the careful study of how animations may most effectively be used. 2 Empirical Study This study was designed to investigate several presentation issues concerning the use of animations to present algorithms.
Reference: [FS88] <author> Richard M. Felder and Linda K. Silverman. </author> <title> Learning and teaching styles in engineering education. </title> <journal> Engineering Education, </journal> <volume> 78(7) </volume> <pages> 674-681, </pages> <year> 1988. </year>
Reference-contexts: The question of how best to present material is an age-old question to the pedagogue. How, indeed, may one best transfer to others the concepts which are so clear to the teacher, yet such unknown territory to the learner? Felder and Silverman <ref> [FS88] </ref> among others, stress that students have many different ways of learning and that the learning and teaching styles of both student and teacher affect the results of the teaching process.
Reference: [Glo92] <author> Peter A. Gloor. </author> <title> AACE algorithm animation for computer science education. </title> <booktitle> In Proceedings of the 1992 IEEE Workshop on Visual Languages, </booktitle> <pages> pages 25-31, </pages> <address> Seattle, WA, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms <ref> [Bro88, Sta90, Glo92, Bro91, SK93] </ref>. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms.
Reference: [Law93] <author> Andrea W. Lawrence. </author> <title> Empirical Studies of the Value of Algorithm Animation in Algorithm Understanding. </title> <type> PhD thesis, </type> <institution> Georgia Institute of Technology, </institution> <year> 1993. </year>
Reference-contexts: A sample window from the animation appears in Figure 1. The version of the animation used in this experiment was based on previous experiments which indicated that a monochrome version of the algorithm with algorithmic steps appearing as text was best, as measured by performance on a post-test <ref> [Law93] </ref>. This type of animation was used for both the lecture example and for the animation laboratory. All groups completed a multiple-choice/true-false on-line test requiring application or understanding of the algorithm. <p> All students were allowed twelve minutes for the laboratory session. The twelve minute time limit was derived from a previous experiment where it was determined that the average time a student spent experimenting with the graphs was twelve minutes <ref> [Law93] </ref>. Following this, the students completed the two post-tests. 3 Hypotheses We hypothesized that the subjects who received the lecture accompanied by the animated example would perform better than those subjects who received the slides example.
Reference: [PE91] <author> Susan Palmiter and Jay Elkerton. </author> <title> An evaluation of animated demonstrations for learning computer-based tasks. </title> <booktitle> In Proceedings of the ACM SIGCHI '91 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 257-263, </pages> <address> New Orleans, LA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: In the area of teaching computer-based tasks, Palmiter and Elkerton present an experiment comparing animation teaching of a computer based-task to text-only presentation of the same task. In their study, the animation group was faster and enjoyed the lesson more <ref> [PE91] </ref>. However, in a delayed test, the text-only group was faster. In the actual domain of animated algorithms, Stasko, Badre and Lewis present an empirical study of learning an algorithm using animations [SBL93].
Reference: [Ree85] <author> S. K. Reed. </author> <title> Effects of computer graphics on improving estimates to algebra word problems. </title> <journal> Journal of Educational Psychology, </journal> <volume> 77 </volume> <pages> 285-298, </pages> <year> 1985. </year>
Reference-contexts: Previous studies in related areas have provided mixed results. For example, in the domain of algebra problems, Reed indicates that an external lesson strategy must be combined with the animation in order to focus student attention on pertinent features of the animated display <ref> [Ree85] </ref>. In the area of teaching computer-based tasks, Palmiter and Elkerton present an experiment comparing animation teaching of a computer based-task to text-only presentation of the same task. In their study, the animation group was faster and enjoyed the lesson more [PE91].
Reference: [SBL93] <author> John Stasko, Albert Badre, and Clayton Lewis. </author> <title> Do algorithm animations assist learning? An empirical study and analysis. </title> <booktitle> In Proceedings of the INTERCHI '93 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 61-66, </pages> <address> Amsterdam, Netherlands, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: In their study, the animation group was faster and enjoyed the lesson more [PE91]. However, in a delayed test, the text-only group was faster. In the actual domain of animated algorithms, Stasko, Badre and Lewis present an empirical study of learning an algorithm using animations <ref> [SBL93] </ref>. Their study involved an advanced algorithm and examined students learning about the algorithm using (1) a textual description or (2) a textual description accompanied by an animation. The animation subjects scored slightly higher, but the difference was not statistically significant.
Reference: [SK93] <author> John T. Stasko and Eileen Kraemer. </author> <title> A methodology for building application-specific visualizations of parallel programs. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 18(2) </volume> <pages> 258-264, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms <ref> [Bro88, Sta90, Glo92, Bro91, SK93] </ref>. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms. <p> The approaches varied in the level of control and active involvement of the student. The experiment was conducted in a classroom setting. Algorithm animations utilized were created with the XTango algorithm animation package [Sta92] and the Polka algorithm animation system <ref> [SK93] </ref>.
Reference: [Sta90] <author> John Stasko. </author> <title> TANGO: A framework and system for algorithm animation. </title> <journal> Computer, </journal> <volume> 23(9) </volume> <pages> 39-44, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms <ref> [Bro88, Sta90, Glo92, Bro91, SK93] </ref>. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects [SW93, BN93] or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms.
Reference: [Sta92] <author> John T. Stasko. </author> <title> Animating algorithms with XTANGO. </title> <journal> SIGACT News, </journal> <volume> 23(2) </volume> <pages> 67-71, </pages> <month> Spring </month> <year> 1992. </year>
Reference-contexts: The approaches varied in the level of control and active involvement of the student. The experiment was conducted in a classroom setting. Algorithm animations utilized were created with the XTango algorithm animation package <ref> [Sta92] </ref> and the Polka algorithm animation system [SK93].
Reference: [Suk88] <author> Piyawadee Sukaviriya. </author> <title> Dynamic construction of animated help from application context. </title> <booktitle> In Proceedings of the '88 ACM SIGGRAPH Symposium on User Interface Software and Technology, </booktitle> <pages> pages 190-202, </pages> <address> Banff, Alberta, Canada, </address> <month> October </month> <year> 1988. </year>
Reference-contexts: This issue is addressed by the two laboratory formats used in the experiment. The use of animation is also becoming increasingly common in the area of Human Computer Interaction. It becomes crucial to formally investigate questions of how animation may best be incorporated into such areas as animated help <ref> [Suk88] </ref>, animated interfaces [BS90], and animated presentation of concepts [BSM91]. Issues of design and use of animations hinge on the careful study of how animations may most effectively be used. 2 Empirical Study This study was designed to investigate several presentation issues concerning the use of animations to present algorithms.
Reference: [SW93] <author> John T. Stasko and Joseph F. Wehrli. </author> <title> Three-dimensional computation visualization. </title> <booktitle> In Proceedings of the 1993 IEEE Symposium on Visual Languages, </booktitle> <pages> pages 100-107, </pages> <address> Bergen, Norway, </address> <month> August </month> <year> 1993. </year> <month> 11 </month>
Reference-contexts: 1 Introduction Currently, several systems exist which allow the creation of animated versions of computer algorithms [Bro88, Sta90, Glo92, Bro91, SK93]. These systems have varying approaches and varying levels of user control. Some even allow the use of three dimensional effects <ref> [SW93, BN93] </ref> or the use of sound [BH92]. The purpose of these systems is to allow the dynamic visual representation of programs or algorithms. Such representations may be used to appeal to the power of the human visual system.
References-found: 17

