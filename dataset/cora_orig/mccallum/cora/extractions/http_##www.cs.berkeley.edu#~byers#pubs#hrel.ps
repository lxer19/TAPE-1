URL: http://www.cs.berkeley.edu/~byers/pubs/hrel.ps
Refering-URL: http://www.cs.berkeley.edu/~byers/
Root-URL: 
Title: Scheduling Parallel Communication: The h-relation Problem  
Author: Micah Adler John W. Byers Richard M. Karp 
Date: June 5, 1995  
Address: Berkeley, CA 94720  Berkeley, CA 94720  Berkeley, CA 94720  
Affiliation: Computer Science Division UC Berkeley  Computer Science Division UC Berkeley  International Computer Science Institute and Computer Science Division UC Berkeley  
Abstract: This paper is concerned with the efficient scheduling and routing of point-to-point messages in a distributed computing system with n processors. We examine the h-relation problem, a routing problem where each processor has at most h messages to send and at most h messages to receive. Communication is carried out in rounds. Direct communication is possible from any processor to any other, and in each round a processor can send one message and receive one message. The off-line version of the problem arises when every processor knows the source and destination of every message. In this case the messages can be routed in at most h rounds. More interesting, and more typical, is the on-line version, in which each processor has knowledge only of h and of the destinations of those messages which it must send. The on-line version of the problem is the focus of this paper. The difficulty of the h-relation problem stems from message conflicts, in which two or more messages are sent to the same processor in a given round, but at most one can be received. The problem has been well studied in the OCPC optical network model, but not for other contemporary network architectures which resolve message conflicts using other techniques. In this paper, we study the h-relation problem under alternative models of conflict resolution, most notably a FIFO queue discipline motivated by wormhole routing and an arbitrary write discipline motivated by packet-switching networks. In each model the problem can be solved by a randomized algorithm in an expected number of rounds of the form ch+o(h) + log fi(1) n, and we focus on obtaining the smallest possible asymptotic constant factor c. We first present a lower bound, proving that a constant factor of 1 is not achievable in general. We then present a randomized algorithm for each discipline and show that they achieve small constant factors.
Abstract-found: 1
Intro-found: 1
Reference: [AM 88] <author> R. A. Anderson and G. L. Miller. </author> <title> "Optical Communication for Pointer-Based Algorithms," </title> <type> Technical Report CRI 88-14, </type> <institution> Computer Science Department, University of Southern California, </institution> <address> Los Angeles, CA, </address> <year> 1988. </year>
Reference-contexts: To define the problem further, we must model the performance characteristics of the communication medium, or network, through which the messages are transmitted. Much of the existing work on the h-relation problem <ref> [AM 88] </ref>, [Val1 90], [GJL+ 93] has been under the Optically Connected Parallel Computer (OCPC) model. <p> Also, when the destinations of the messages are memory modules, messages cannot be forwarded, and direct algorithms are required. When introducing the OCPC model, Anderson and Miller showed that in the off-line case, an arbitrary h-relation could be routed in time h <ref> [AM 88] </ref>. Recent efforts have tried to achieve 1-optimal randomized on-line algorithms [RSTG 95]; i.e., on-line algorithms that route an h-relation in expected time h + o (h). We here provide evidence that no 1-optimal algorithm exists in the FIFO discipline, the arbitrary write discipline, or the OCPC discipline. <p> Successful transmissions are acknowledged by the receiving processor, and failure to acknowledge implies that the data in the message was lost. This model was introduced by Anderson and Miller <ref> [AM 88] </ref>. Anderson and Miller were also the first to observe that if all processors have complete information about a given h-relation, there exists a schedule which routes the relation using exactly h communication steps. <p> In the first phase of their protocol, the h-relation is thinned by a direct algorithm which routes many of the messages to their final destinations, using a procedure somewhat similar to that of <ref> [AM 88] </ref>. With high probability, the procedure transmits all but O (n=h log log n) messages in time O (h + log h log log log n).
Reference: [BHK+ 94] <author> J. Bruck, C. Ho, S. Kipnis, D. Weathersby. </author> <title> "Efficient Algorithms for All-to-All Communications in Multi-Port Message-Passing Systems," </title> <booktitle> Proc. 6th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 298-309, </pages> <month> June </month> <year> 1994. </year>
Reference: [Col 88] <author> R. Cole. </author> <title> "Parallel Merge Sort," </title> <journal> SIAM Journal of Computing 17(4), </journal> <pages> pp. 770-785, </pages> <year> 1988. </year> <month> 14 </month>
Reference-contexts: This allows the processors to redistribute the messages so that every processor has exactly the same number of messages. Once this has been accomplished, the messages can be sorted by various means, such as Cole's parallel merge sort <ref> [Col 88] </ref>, in time O (h + log n). The keys to be sorted consist of the identifier of the destination processor concatenated with the message itself, and thus all messages destined for the same processor will end up in consecutive processors.
Reference: [CKP+ 93] <author> D. Culler, R. Karp, D. Patterson, A. Sahay, K. E. Schauser, E. Santos, R. Subramonian, and T. von Eicken. </author> <title> "LogP: Towards a Realistic Model of Parallel Computation," </title> <booktitle> Proc. 4th ACM SIGPLAN Symp. on Principles and Practice of Parallel Programming, </booktitle> <pages> pp. 1-12, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: This style of message-passing motivates the FIFO discipline, which stalls the sending processor until the target processor receives each transmission. Contention in the FIFO model is similar to the capacity constraint of the LogP model <ref> [CKP+ 93] </ref> and to the asynchronous version of the QRQW PRAM [GMR2 94].
Reference: [GV 94] <author> A. Gerbessiotis and L. Valiant. </author> <title> "Direct Bulk-Synchronous Parallel Algorithms," </title> <journal> Journal of Parallel and Distributed Computing 22, </journal> <pages> pp. 251-267, </pages> <year> 1994. </year>
Reference-contexts: Gerbessiotis and Valiant <ref> [GV 94] </ref> define a 1-optimal protocol for the OCPC as a protocol which can route a random h-relation in time at most (1 + o (1))h with high probability.
Reference: [GT 92] <author> M. Gereb-Graus and T. Tsantilas. </author> <title> "Efficient Optical Communication in Parallel Computers," </title> <booktitle> Proc. 4th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 41-48, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The direct algorithm with the best asymptotic running time for the OCPC is the simple randomized algorithm of Gereb-Graus and Tsantilas <ref> [GT 92] </ref>. <p> The algorithm we employ is similar to the direct algorithm for routing h-relations on the OCPC due to Gereb-Graus and Tsantilas <ref> [GT 92] </ref>. By continuously updating weighted transmission probabilities for messages from sender i to receiver j, we obtain an algorithm which routes h-relations in the arbitrary write model with a small leading constant. <p> the following theorem, which gives us a bound on routing h-relations in the arbitrary write model of 1:62h + o (h) + O (log n log log n) as compared with the OCPC protocol which runs in time eh+ o (h) + O (log n log log n) achieved by <ref> [GT 92] </ref> in a less favorable model. Theorem 4 There exists a protocol which solves any instance of the h-relation problem under the arbitrary write discipline within time 1:62h + o (h) + O (log n log log n) rounds, with high probability.
Reference: [GMR1 94] <author> P. Gibbons, Y. Matias and V. Ramachandran. </author> <title> "The QRQW PRAM: Accounting for contention in parallel algorithms," </title> <booktitle> Proc. 5th ACM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 638-648, </pages> <month> January </month> <year> 1994. </year>
Reference: [GMR2 94] <author> P. Gibbons, Y. Matias and V. Ramachandran. </author> <title> "Efficient Low-Contention Parallel Algorithms," </title> <booktitle> Proc. 6th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 236-247, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: This style of message-passing motivates the FIFO discipline, which stalls the sending processor until the target processor receives each transmission. Contention in the FIFO model is similar to the capacity constraint of the LogP model [CKP+ 93] and to the asynchronous version of the QRQW PRAM <ref> [GMR2 94] </ref>. To provide a preliminary comparison of the disciplines, we note that OCPC algorithms can be simulated with no slowdown in the arbitrary write model and FIFO algorithms can be simulated with no slowdown in 2 the priority queue model.
Reference: [GJL+ 93] <author> L. A. Goldberg, M. Jerrum, T. Leighton, and S. Rao. </author> <title> "A Doubly Logarithmic Communication Algorithm for the Completely Connected Optical Communication Parallel Computer," </title> <booktitle> Proc. 5th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 300-309, </pages> <month> June-July </month> <year> 1993. </year>
Reference-contexts: To define the problem further, we must model the performance characteristics of the communication medium, or network, through which the messages are transmitted. Much of the existing work on the h-relation problem [AM 88], [Val1 90], <ref> [GJL+ 93] </ref> has been under the Optically Connected Parallel Computer (OCPC) model. In this model of computation, processors communicate by point-to-point messages in synchronous rounds, with the restriction that whenever two or more messages are sent concurrently to the same processor, the messages are destroyed and must be retransmitted.
Reference: [GJM 94] <author> L. A. Goldberg, M. Jerrum and P. MacKenzie. </author> <title> "An ( p log log n) Lower Bound for Routing on Optical Networks," </title> <booktitle> Proc. 6th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 147-156, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Thus, the remaining messages can be deterministically routed to their final destinations in time O (h). Finally, it is worth remarking that even for indirect algorithms, time bounds of the form O (h) are not possible for small values of h. Goldberg, Jerrum and MacKenzie <ref> [GJM 94] </ref> prove a lower bound of (h + p for realizing an h-relation on the OCPC. 2.2 1-Optimal Protocols For much larger values of h, recent research has focused not on asymptotic behavior, but on leading constant factors of asymptotically optimal algorithms.
Reference: [Lei 92] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: </title> <publisher> Arrays Trees Hyper cubes Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference: [Lei+ 94] <author> C. E. Leiserson, et al. </author> <title> "The Network Architecture of the Connection Machine CM-5," </title> <booktitle> Proc. 4th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <month> June </month> <year> 1992. </year> <month> Revised March 21, </month> <year> 1994. </year>
Reference-contexts: The queued models are based on another approach used for routing messages in tightly coupled networks. These use the closely related techniques of wormhole routing and virtual cut-through routing, used for example in the J Machine [ND 90] and the CM-5 <ref> [Lei+ 94] </ref>. In wormhole routing, messages are divided into very small flow control units (flits) which are then transmitted along a fixed path through the network to the destination. A message can thereby occupy buffer space in several adjacent switches simultaneously.
Reference: [ND 90] <author> M. Noakes and W. J. Dally. </author> <title> "System Design of the J Machine," </title> <booktitle> Sixth MIT Conference on Advanced Research in VLSI, </booktitle> <pages> pp. 179-194. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: The queued models are based on another approach used for routing messages in tightly coupled networks. These use the closely related techniques of wormhole routing and virtual cut-through routing, used for example in the J Machine <ref> [ND 90] </ref> and the CM-5 [Lei+ 94]. In wormhole routing, messages are divided into very small flow control units (flits) which are then transmitted along a fixed path through the network to the destination. A message can thereby occupy buffer space in several adjacent switches simultaneously.
Reference: [Ran 88] <author> A. Ranade. </author> <title> Fluent Parallel Computation. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <address> New Haven, CT, </address> <year> 1988. </year>
Reference-contexts: Theorem 5 An h-relation can be routed under the priority queue discipline in time (2e 1)h + o (h) + log n w.h.p. Proof: We begin by providing a simple proof for a bound of (2e +*)h which uses the delay sequence argument of <ref> [Ran 88] </ref>. We focus attention on the last message to arrive at its destination, and retrace the sequence of delays which resulted in this message's delayed arrival.
Reference: [RSTG 95] <author> S. Rao, T. Suel, T. Tsantilas and M. Goudreau. </author> <title> "Efficient Communication Using Total Exchange," </title> <booktitle> Proc. 9th IEEE International Parallel Processing Symposium, </booktitle> <pages> pp. 544-555, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: When introducing the OCPC model, Anderson and Miller showed that in the off-line case, an arbitrary h-relation could be routed in time h [AM 88]. Recent efforts have tried to achieve 1-optimal randomized on-line algorithms <ref> [RSTG 95] </ref>; i.e., on-line algorithms that route an h-relation in expected time h + o (h). We here provide evidence that no 1-optimal algorithm exists in the FIFO discipline, the arbitrary write discipline, or the OCPC discipline. <p> Using these tools, the same authors present a protocol to route random h-relations using at most h n (1 + o (1) + O (log log n)) total-exchange rounds with high probability, and so this algorithm is 1-optimal. Recent work <ref> [RSTG 95] </ref> has improved this bound to h n (1 + o (1) + O (log fl n)) total-exchange rounds and has provided experimental results which confirm that the algorithm is very fast in practice.
Reference: [Val1 90] <author> L. G. Valiant. </author> <title> "General Purpose Parallel Architectures." </title> <editor> In J. van Leeuwen, ed., </editor> <booktitle> Handbook of Theoretical Computer Science, Volume A, </booktitle> <pages> pp. 943-972. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1990. </year>
Reference-contexts: To define the problem further, we must model the performance characteristics of the communication medium, or network, through which the messages are transmitted. Much of the existing work on the h-relation problem [AM 88], <ref> [Val1 90] </ref>, [GJL+ 93] has been under the Optically Connected Parallel Computer (OCPC) model.
Reference: [Val2 90] <author> L. G. Valiant. </author> <title> "A Bridging Model for Parallel Computation," </title> <journal> Communications of the ACM 33, </journal> <pages> pp. 103-111, </pages> <year> 1990. </year>
Reference-contexts: With high probability, each of the messages has now been delivered at its target group, and furthermore, every processor has at most two messages. In the final phase, running 4 a deterministic procedure such as Valiant's algorithm <ref> [Val2 90] </ref> (a simple indirect protocol outlined below) within each target group sorts and routes each of the messages to their final destinations in time O (log k) = O (log log n).
Reference: [Wol 89] <author> R. W. Wolff, </author> <title> Stochastic Modeling and the Theory of Queues, </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1989. </year> <month> 15 </month>
References-found: 18

