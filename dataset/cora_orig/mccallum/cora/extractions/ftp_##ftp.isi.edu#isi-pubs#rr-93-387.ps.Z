URL: ftp://ftp.isi.edu/isi-pubs/rr-93-387.ps.Z
Refering-URL: http://www.isi.edu/isi-technical-reports.html
Root-URL: http://www.isi.edu
Email: Unclassified/Unlimited  
Title: PMoct: A Policy management tool for OCT based Design Systems for Multiple Domains  
Author: John Granacki and Tauseef Kazi 
Address: 4676 Admiralty Way, Marina del Rey, CA 90292  4676 Admiralty Way Marina del Rey, CA 90292  
Affiliation: University of Southern California Information Science Institute  UNIVERSITY OF SOUTHERN CALIFORNIA INFORMATION SCIENCES INSTITUTE  
Date: October, 1993  
Pubnum: ISI/RR-93-387  
Abstract: PMoct: A Policy management tool for OCT based Design Systems for Multiple Domains 1 ISI Research Report ISI/RR-93-387 October, 1993 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David S. Harrison, Peter Moore, Rick L. Spick-elmier, A. R. </author> <title> Newton, Data Placement and Graphics Editing in the Berkeley Design Environment, </title> <booktitle> The proceedings of the IEEE International Conference on Computer -Aided Design, </booktitle> <pages> pp. 24-27, </pages> <year> Nov,1986. </year>
Reference: [2] <author> Rick Spickelmier and Brian C. Richards, </author> <title> The OCT data manager, in Anatomy of a Silicon Compiler, </title> <editor> Robert W. Brodersen. </editor> <booktitle> eds., </booktitle> <pages> pp. 11-24, </pages> <year> 1992. </year>
Reference: [3] <author> C. Bernard Shung, et al, </author> <title> An Integrated CAD System for Algorithmic-Specific IC Design, </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> vol. 10, no. 4, </volume> <pages> pp. 447-463, </pages> <month> April, </month> <year> 1991. </year>
Reference-contexts: OCT was designed to be as exible as possible so that tool developers could use this to develop new tools, and accommodate different design methodologies and design ows. Often within a suite of tools like Lager <ref> [3] </ref>, the developers have some consistent policies across tools; however, there is no super policy that a tool developer or user can con sult. This is because the policy is hard-coded in the associated design management tool, in this case, DMoct [3], [4]. <p> Often within a suite of tools like Lager <ref> [3] </ref>, the developers have some consistent policies across tools; however, there is no super policy that a tool developer or user can con sult. This is because the policy is hard-coded in the associated design management tool, in this case, DMoct [3], [4]. It is even more difficult to use tools and libraries that are not developed as part of the same suite of tools. To use tools from different suites requires translators to be developed and used to map the data from one policy to another.
Reference: [4] <author> Brian C. Richards, </author> <title> Design Management, in Anatomy of a Silicon Compiler, </title> <editor> Robert W. Brodersen. </editor> <booktitle> eds., </booktitle> <pages> pp. 46-56, </pages> <year> 1992. </year>
Reference-contexts: This is because the policy is hard-coded in the associated design management tool, in this case, DMoct [3], <ref> [4] </ref>. It is even more difficult to use tools and libraries that are not developed as part of the same suite of tools. To use tools from different suites requires translators to be developed and used to map the data from one policy to another.
Reference: [5] <author> Carl Sechen, Kai-Win Lee, Bill Swartz, Mindy Lee and Dahe Chen, </author> <title> The TimberWolf Standard Cell Placement and Global Routing Program, Users Guide for Version 4.2c, </title> <institution> Yale University, </institution> <month> October, </month> <year> 1987. </year>
Reference-contexts: To use tools from different suites requires translators to be developed and used to map the data from one policy to another. For example, using Lager policy and the octtools policy requires the siv2sym and sym2siv translators to allow designs produced using DMoct to use the TimberWolf tools <ref> [5] </ref>. This proliferation of policies does not foster the development of sharable libraries, primarily because DMoct would have to be modified or extended for new library policies such as for PCBs (printed circuit boards) or MCMs (multi-chip modules).
Reference: [6] <author> John J. Granacki, </author> <title> Research in Information Science and Technology: Systems Assembly Core Research, </title> <type> Final Technical Report, </type> <institution> USC/Information Sciences Institute, </institution> <month> November, </month> <year> 1992. </year>
Reference-contexts: This proliferation of policies does not foster the development of sharable libraries, primarily because DMoct would have to be modified or extended for new library policies such as for PCBs (printed circuit boards) or MCMs (multi-chip modules). We are developing a system for board-level synthesis <ref> [6] </ref> and chose to use OCT to develop a sharable library of components [7]. We also had as our goal to be compatible with the system design tools and libraries that are part of the SIERA System developed at U.C. Ber-keley.
Reference: [7] <author> John J. Granacki, </author> <note> Zia Iqbal and Tauseef Kazi, </note>
Reference-contexts: We are developing a system for board-level synthesis [6] and chose to use OCT to develop a sharable library of components <ref> [7] </ref>. We also had as our goal to be compatible with the system design tools and libraries that are part of the SIERA System developed at U.C. Ber-keley.
References-found: 7

