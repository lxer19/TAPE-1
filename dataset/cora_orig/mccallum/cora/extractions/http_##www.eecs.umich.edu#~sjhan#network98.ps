URL: http://www.eecs.umich.edu/~sjhan/network98.ps
Refering-URL: http://www.eecs.umich.edu/~sjhan/
Root-URL: http://www.eecs.umich.edu
Email: email: fkgshin, sjhang@eecs.umich.edu  
Title: Fast Low-Cost Failure Recovery for Reliable Real-Time Multimedia Communication  
Author: Kang G. Shin and Seungjae Han 
Keyword: Index Terms Real-time communication, fast failure recovery, dependability guarantee, backup channel.  
Address: Ann Arbor, Michigan 48109-2122, U.S.A.  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: Transmission of multimedia data over a packet-switched network typically requires resource reservation to guarantee an acceptable level of performance (e.g., throughput or delay). In this article, we address the problem of how to make such real-time communication reliable. First of all, it is essential to bound the duration of service disruption caused by failures to a reasonably small value. Considering the large volume of multimedia data, minimizing the fault-tolerance overhead is also important. Furthermore, as more applications with different dependability requirements share the same network, the level of dependability for a given application should be "customizable," depending on the criticality of the application. We first survey the existing approaches, and then present our scheme which is developed in accordance with three design goals | fast failure recovery, low fault-tolerance overhead, and per-connection reliability guarantee. Our scheme provides an integrated solution covering such issues as connection establishment, failure detection, run-time failure recovery, and resource reconfiguration. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, "RTP: </author> <title> A transport protocol for real-time applications," </title> <type> Technical Report Internet RFC 1889, </type> <month> February </month> <year> 1996. </year>
Reference-contexts: Today's representative computer network, Internet, also lacks QoS support for continuous media applications; the window-based flow control is unsuitable for traffic with end-to-end timing constraints. Nevertheless, several multimedia applications have already been deployed on Internet using such protocols as RTP <ref> [1] </ref>, XTP [2], and IP multicast. However, these protocols do not meet the true multimedia requirements because they only support a best-effort service model. The Next-Generation Internet (NGI) is expected to provide new services that meet the diverse QoS requirements of various emerging multimedia applications.
Reference: [2] <editor> Xpress Transfer Protocol Specification, </editor> <booktitle> XTP Forum, </booktitle> <address> revision 4.0 edition, </address> <month> March </month> <year> 1995. </year> <month> 19 </month>
Reference-contexts: Today's representative computer network, Internet, also lacks QoS support for continuous media applications; the window-based flow control is unsuitable for traffic with end-to-end timing constraints. Nevertheless, several multimedia applications have already been deployed on Internet using such protocols as RTP [1], XTP <ref> [2] </ref>, and IP multicast. However, these protocols do not meet the true multimedia requirements because they only support a best-effort service model. The Next-Generation Internet (NGI) is expected to provide new services that meet the diverse QoS requirements of various emerging multimedia applications.
Reference: [3] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, no. 1, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: to this growing demand for real-time communication services, considerable efforts have been made in recent years and numerous QoS service models have been developed ranging from the static CBR (Constant Bit Rate) service that resembles the telephony service to the `controlled-load service' that mimics the best-effort service in unloaded networks <ref> [3, 4] </ref>. Unlike traditional datagram services in which average performance is of prime interest, guaranteeing QoS is the key requirement of the real-time communication service.
Reference: [4] <author> D. Ferrari, </author> <title> "Multimedia network protocols: where are we?," </title> <journal> Multimedia Systems Journal, </journal> <volume> vol. 4, </volume> <pages> pp. 299-304, </pages> <year> 1996. </year>
Reference-contexts: to this growing demand for real-time communication services, considerable efforts have been made in recent years and numerous QoS service models have been developed ranging from the static CBR (Constant Bit Rate) service that resembles the telephony service to the `controlled-load service' that mimics the best-effort service in unloaded networks <ref> [3, 4] </ref>. Unlike traditional datagram services in which average performance is of prime interest, guaranteeing QoS is the key requirement of the real-time communication service.
Reference: [5] <author> J. McDonald, </author> <title> "Public network integrity avoding a crisis in trust," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 5-12, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Emergency 911 calls went unanswered, on-line business transactions were stopped, and flights were delayed because of air traffic controller failures. Hospital operations were affected and drug stores could not process prescriptions. Even banks had to be closed for security reasons due to disabled alarm systems <ref> [5] </ref>. In 1990's, several similar accidents have been reported for various reasons like damage of a fiber cable caused by construction, earthquakes, outage of switching systems, or network overloading. Although network failures rarely occur, the consequence of mis-handling failures could be devastating, thus making network reliability a major concern.
Reference: [6] <author> A. Tanenbaum, </author> <title> Computer Networks, </title> <publisher> 3rd ed., Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1996. </year>
Reference-contexts: First, the probability of transmission errors in optical links becomes negligible; the error rate is dropped from 10 5 per bit in the 56 kbps links of initial ARPANET to below 10 10 per bit in optical links <ref> [6] </ref>. The chance of packet loss due to transmission errors is very rare, and most packet losses are attributed to congestion-control problems. As a result, for real-time communication, tolerating transient failures has become relatively less important because congestion-induced packet losses can be avoided by resource reservation.
Reference: [7] <author> A. Banerjea, C. Parris, and D. Ferrari, </author> <title> "Recovering guaranteed performance service connections from single and multiple faults," </title> <type> Technical Report TR-93-066, </type> <institution> UC Berkeley, </institution> <year> 1993. </year>
Reference-contexts: First, the simplest way of recovering a real-time channel from a network-component failure is to establish a new real-time channel which exclude the failed component. This reactive method is studied in <ref> [7] </ref>. This scheme relies on the broadcast of all component failures to the entire network, so that all hosts can maintain a consistent view on the current network topology.
Reference: [8] <author> P. Ramanathan and K. G. Shin, </author> <title> "Delivery of time-critical messages using a multiple copy approach," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 10, no. 2, </volume> <pages> pp. 144-166, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: To 6 regulate simultaneous recovery attempts, random delays can be introduced before starting each recovery operation. The second approach is failure-masking in which multiple copies of a message are sent simultaneously via disjoint paths <ref> [8] </ref>. This method attempts to achieve both timely and reliable delivery at the same time. Thus, by transmitting multiple copies over disjoint paths for a message, the chance that at least one copy is delivered within its deadline increases and the effects of possible failures are masked.
Reference: [9] <author> A. Banerjea, </author> <title> "Simulation study of the capacity effects of dispersity routing for fault tolerant realtime channels," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 194-205, </pages> <year> 1996. </year>
Reference-contexts: This approach has an advantage that both persistent and transient failures are handled without service disruption, but it is very expensive due to the additional resource consumption for transmitting multiple copies of the same message. To enhance resource efficiency, <ref> [9] </ref> presents a scheme which combines error-coding with multiple-copy transmission. In this method, instead of transmitting multiple copies of an entire message, each message is broken into equal-size sub-messages which are then transmitted over disjoint paths. In addition, some redundant information is transmitted over separate paths for FEC.
Reference: [10] <author> Q. Zheng and K. G. Shin, </author> <title> "Fault-tolerant real-time communication in distributed computing systems," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 86 - 93, </pages> <year> 1992. </year>
Reference-contexts: The third approach comes in-between the above two approaches in terms of fault-tolerance overhead. In this approach, cold-standby resources are reserved for the fault-tolerance purpose. The SFI (Single Failure Immune) scheme <ref> [10] </ref> took this approach to provide guaranteed failure recovery under a single failure model.
Reference: [11] <author> A. Banerjea, </author> <title> Fault Management for Realtime Networks, </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Figure 1 illustrates the setup of a SFI channel. The advantage of this cold-standby approach is that, though additional resources need to be reserved, the resources reserved for fault-tolerance can be utilized by best-effort traffic in the absence of failures. Another cold-standby method is presented in <ref> [11] </ref>. In this method, cold-standby reservation is combined with multiple-channel transmission. It differs from the multiple-channel FEC method in that extra sub-channels remain as cold-standby in absence of failures; thus, FEC is not provided.
Reference: [12] <author> W. Grover, </author> <title> "The selfhealing network: A fast distributed restoration technique for networks using digital crossconnect machines," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1090-1095, </pages> <year> 1987. </year>
Reference-contexts: For rerouting, there are three strategies: local-rerouting, local-to-end rerouting, and end-to-end rerouting. Each of these strategies is illustrated in Figure 2. The local-rerouting strategy, also called a span-restoration method, has usually been used in STM (Synchronous Transfer Mode) networks. In most of the work on this strategy <ref> [12, 13] </ref>, a `maximum flow' model is used to find the (semi-) optimal placement of spare resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [13] <author> C. Yang and S. Hasegawa, </author> <title> "FITNESS: Failure immunization technology for network service survivability," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1549-1554, </pages> <year> 1988. </year>
Reference-contexts: For rerouting, there are three strategies: local-rerouting, local-to-end rerouting, and end-to-end rerouting. Each of these strategies is illustrated in Figure 2. The local-rerouting strategy, also called a span-restoration method, has usually been used in STM (Synchronous Transfer Mode) networks. In most of the work on this strategy <ref> [12, 13] </ref>, a `maximum flow' model is used to find the (semi-) optimal placement of spare resources under a deterministic failure hypothesis | typically, a single-link failure model.
Reference: [14] <author> J. Anderson, B. Doshi, S. Dravida, and P. Harshavadhana, </author> <title> "Fast restoration of ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 128-138, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: A drawback of the local-rerouting approach is that resource usage becomes inefficient after failure recovery, because channel paths tend to be lengthened by local detouring. According to <ref> [14] </ref>, end-to-end rerouting is the best with respect to resource efficiency, local-to-end rerouting is the second, and local rerouting is the worst. The end-to-end rerouting strategy, also called a path-restoration method, has been studied mainly in the context of ATM networks.
Reference: [15] <author> R. Kawamura, K. Sato, and I. Tokizawa, </author> <title> "Self-healing ATM networks based on virtual path concept," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, no. 1, </volume> <pages> pp. 120-127, </pages> <month> January </month> <year> 1994. </year>
Reference: [16] <author> K. Murakami and H. Kim, </author> <title> "Near-optimal virtual path routing for survivable ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 208-215, </pages> <year> 1994. </year>
Reference: [17] <author> R. Iraschko, M. MacGregor, and W. Grover, </author> <title> "Optimal capacity placement for path restoration in mesh survivable networks," </title> <booktitle> in Proc. IEEE ICC, </booktitle> <pages> pp. 1568-1574, </pages> <year> 1996. </year>
Reference-contexts: overhead Recovery delay Recovery guarantee Reactive No Long No SFI High Shorter Deterministic Multi-copy Very high No Flexible Span-restoration Low Shorter Deterministic Path-restoration Lower Short Deterministic Our approach Lower Short Flexible Table 1: Comparison of existing approaches can be found in [14-16], and an example of the latter method is <ref> [17] </ref>. Essentially, they try to optimally route recovery paths by minimizing the spare resource reservation, while guaranteeing successful recovery under a deterministic failure model. 4.3 Comparison Basically, our approach uses end-to-end rerouting with pre-computed recovery paths.
Reference: [18] <author> S. Han and K. G. Shin, </author> <title> "Fast restoration of real-time communication service from component failures in multi-hop networks," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 77-88, </pages> <year> 1997. </year> <month> 20 </month>
Reference-contexts: Thus, some backups cannot be activated because other activated backups have already taken all spare resources. In such a case, a "multiplexing failure" is said to occur. We account for the probability that a backup suffers a multiplexing failure in the calculation of P r . See <ref> [18] </ref> for a detailed account of calculating P r . Thus far, we explained the procedure of allocating spare resources, assuming that backup paths are given. How to route backups greatly influences the resource efficiency, i.e., the amount of spare resources to achieve a certain P r .
Reference: [19] <author> W. N. </author> <title> Toy, "Fault-tolerant design of AT&T telephone switching system processors," </title> <booktitle> in Reliable Computer Systems: Design and Evaluation, </booktitle> <pages> pp. 533-574. </pages> <publisher> Digital Press, </publisher> <year> 1992. </year>
Reference-contexts: Instead of adopting expensive failure-detection techniques (e.g., hardware duplication/comparison for telephone network switches <ref> [19] </ref>), we use behavior-based detection techniques do not require any special hardware support and hence, can be used in any network. They are the end-to-end detection and neighbor detection methods. The end-to-end detection method involves both the source and destination nodes of a real-time channel.

References-found: 19

