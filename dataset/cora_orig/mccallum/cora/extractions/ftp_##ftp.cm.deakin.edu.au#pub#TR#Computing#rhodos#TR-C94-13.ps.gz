URL: ftp://ftp.cm.deakin.edu.au/pub/TR/Computing/rhodos/TR-C94-13.ps.gz
Refering-URL: http://gollum.cm.deakin.edu.au/techreports.html
Root-URL: 
Email: gjw@deakin.EDU.AU  
Title: Performance Analysis Techniques for RHODOS  
Author: G. Wickham 
Note: This work was partly supported by the Australian Research Council under Grants A48831034, A49232429 and Deakin University Research Grant 0504054151.  
Address: Geelong Victoria 3217, Australia  
Affiliation: School of Computing and Mathematics Deakin University,  
Abstract: RHODOS is a microkernel based Distributed Operating System that was conceived as being the platform upon which theorists could evaluate their policies. However, it is not enough to return whether a particular implementation of a policy works or not. It is also necessary to state how well the policy works. To achieve this it is necessary to build into RHODOS a mechanism which permits the implementors to receive useful feedback as to how the software performs on the target architecture. This report presents a logical design of an active data collection system that will be built into the RHODOS microkernel and kernel servers. Once implemented, it will be possible to provide dynamic feedback as to the overall usefulness, and the effects on performance that specific policies can induce. 
Abstract-found: 1
Intro-found: 1
Reference: [Accetta et al. 1986] <author> J. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevavian & M. Young, </author> <title> Mach: A New Kernel Foundation For Unix Development, </title> <booktitle> Proceedings of the Summer 1986 USENIX Conference, </booktitle> <month> July </month> <year> 1986. </year>
Reference-contexts: This exibility has meant that various research groups are applying microkernel based operating systems to different purposes: QNX for Real Time and Embedded Processing [Hil-derbrand 1993]; Mach for Unix <ref> [Accetta et al. 1986] </ref>; and RHODOS for Research into Distributed Systems [Gerrity et al. 1991]. The most fundamental difference between the differing kernel architectures is illustrated in Figure 4.
Reference: [Curnow and Wichmann 1976] <author> H.J. Curnow and B.A. Wichmann, </author> <title> A Synthetic Benchmark, </title> <journal> Computer Journal, </journal> <volume> Volume 19 #1, </volume> <month> February </month> <year> 1976, </year> <pages> pp. 43-49. </pages>
Reference-contexts: Various implementation differences from tailoring the benchmark program to implantation of the compiler can result different or inaccurate results. Some benchmarks are simple programs, for example the Dhrystone [Weicker 1984], and the Whetstone <ref> [Curnow and Wichmann 1976] </ref>, which are designed to provide a indicator of the possible performance of a single aspect of the computer. Although these benchmarks are useful in comparing linear computer systems, they dont meet the needs of the most demanding evaluators.
Reference: [Danzig and Melvin 1991] <author> P. Danzig and S. Melvin, </author> <title> Microsecond Resolution Timing with Sun Work Stations; Behaviour Research Methods, </title> <booktitle> Instruments and Computers; 1991, </booktitle> <pages> 23(1) 61-65. </pages>
Reference-contexts: The standard timer in a Sun 3 will only provide a resolution down to approximately th of a second, which is far from adequate. A high precision counter is available <ref> [Danzig and Melvin 1991] </ref>, which can provide a resolution of 1 microsecond whilst being completely compatible with the Sun 3 architecture. This high resolution counter will provide the basis for time stamping within the microkernel.
Reference: [Gerrity et al. 1990] <author> G. Gerrity, A. Goscinski, J. Indulska, W. Toomey & W. Zhu, </author> <title> The RHO-DOS Distributed Operating System, </title> <type> Technical Report CS 90/4, </type> <institution> Department of Computer Science, University College, University of New South Wales, Canberra. </institution> <note> 6 th February 1990. </note>
Reference-contexts: 1 Introduction During the late 1980s there was a perceived need for a distributed operating system to act as a test bed for the policies which theorists have been constantly developing. Several years later, RHODOS (ResearcH Orientated Distributed Operating System) <ref> [Gerrity et al. 1990] </ref> is rapidly maturing into the envisaged tool, as RHODOS provides a mechanism through which policies can be implemented and evaluated.
Reference: [Gerrity et al. 1991] <author> G. Gerrity, A. Goscinski, J. Indulska, W. Toomey & W. Zhu, </author> <month> RHODOS </month>
Reference-contexts: This exibility has meant that various research groups are applying microkernel based operating systems to different purposes: QNX for Real Time and Embedded Processing [Hil-derbrand 1993]; Mach for Unix [Accetta et al. 1986]; and RHODOS for Research into Distributed Systems <ref> [Gerrity et al. 1991] </ref>. The most fundamental difference between the differing kernel architectures is illustrated in Figure 4. The monolithic kernel consists of a large text segment in which all of the kernel text, device drivers and interrupt handlers are located.
References-found: 5

