URL: http://www.icsi.berkeley.edu/~amnon/Papers/pcp_v_mip.ps
Refering-URL: http://www.icsi.berkeley.edu/~amnon/
Root-URL: http://www.icsi.berkeley.edu
Email: am@cs.huji.ac.il  
Title: A note on PCP vs. MIP  
Author: Amnon Ta-Shma 
Date: July 19, 1995  
Affiliation: The Hebrew University  
Abstract: Two variants of interactive proof systems have been used to derive intractability of approximation results. The first is the single round multi-prover model where one verifier can query many provers who cannot communicate among themselves. The second is the oracle model where the verifier queries a non-adaptive oracle. It is known that the oracle model is at least as strong as the one-round multi-prover model but it is not known whether the opposite is true. We partially close this gap.
Abstract-found: 1
Intro-found: 1
Reference: [AS92] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs; a new characterization of NP. </title> <booktitle> In Proceedings of the 33rd Annual IEEE Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year>
Reference-contexts: The provers are limited in that they cannot communicate among themselves. The oracle model of Fortnow,Rompel and Sipser [FRS88], renamed "probabilistically checkable proofs" by Arora and Safra <ref> [AS92] </ref>, is similar. In this model the provers are replaced by a non-adaptive oracle, i.e. instead of many provers who cannot communicate among themselves we have one oracle which cannot change its predetermined answers.
Reference: [BGKW88] <author> M. Ben-Or, S. Goldwasser, J. Killian, and A. Wigderson. </author> <title> Multi-prover interactive proofs: How to remove intractability assumptions. </title> <booktitle> In Proceedings of the 20th Annual ACM Symposium on the Theory of Computing, ACM, </booktitle> <pages> pages 113-131, </pages> <year> 1988. </year> <month> 9 </month>
Reference-contexts: 1 Introduction 1.1 Definitions In the one-round multi-prover proof system of Ben-Or, Goldwasswer, Killian and Wigderson <ref> [BGKW88] </ref>, a probabilistic polynomial-time verifier can query several all-mighty but possibly cheating provers, whose aim is to convince him to accept. The provers are limited in that they cannot communicate among themselves.
Reference: [BGLR93] <author> M. Bellare, S. Goldwasser, C. Lund, and A. Russell. </author> <title> Efficient probabilisti-cally checkable proofs and applications to approximation. </title> <booktitle> In Proceedings of the 25th Annual ACM Symposium on the Theory of Computing, ACM, </booktitle> <pages> pages 294-304, </pages> <year> 1993. </year>
Reference-contexts: In this model the provers are replaced by a non-adaptive oracle, i.e. instead of many provers who cannot communicate among themselves we have one oracle which cannot change its predetermined answers. Bellare, Goldwasswer, Lund and Russel <ref> [BGLR93] </ref> distinguish five important parameters and define the classes P CP (r; m; b; q; *) and MIP 1 (r; m; b; q; *) as follows: fl This work was supported by BSF grant 92-00043 and by a Wolfeson award administered by the Israeli Academy of Sciences. 1 Definition 1.1 Lang <p> Thus: P CP (r; m; b; q; *) M IP 1 (r; m; b; q; m m *) For the sake of completeness, the proof appears in the appendix. This shows that for a constant m the two models are almost equivalent. Bellare, Goldwasswer, Lund and Russel <ref> [BGLR93] </ref>, raised the question whether the two models can be related more closely, i.e. whether: P CP (r; m; b; q; *) M IP 1 (O (r); O (m); O (b); O (q); O (*)) In this paper we get closer to the above target and we show that: Corollary 1.1
Reference: [BGS] <author> M. Bellare, O. Goldreich, and S. Safra. </author> <title> Private communication. </title>
Reference-contexts: and Sipser's work: [FRS88]: 2 P CP (r; m; b; q; *) M IP 1 (r; 2; m b; m q; 1 1* P CP (r; m; b; q; *) M IP 1 (r + m polylog ( m * ); O (m log ( m Bellare, Goldreich and Safra <ref> [BGS] </ref> showed that the identity transformation (i.e. given a P CP system with m questions, build an M IP system with m provers by distributing the m questions among the m provers) amplifies the error by at most m m . <p> I want to thank the anonymous referees for many helpful comments which significantly clarified the presentation, and for drawing my attention to the result by <ref> [BGS] </ref>. Most of all, it is a great pleasure to thank my advisor Noam Nisan.
Reference: [FL92] <author> U. Feige and L. Lovasz. </author> <title> Two-prover one round proof systems: Their power and their problems. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on the Theory of Computing, ACM, </booktitle> <year> 1992. </year>
Reference-contexts: We achieve this using the techniques of <ref> [LS91; FL92] </ref>. We stress that the results of [LS91, FL92] only refer to the MIP model and do not imply a P CP to M IP transformation. <p> We achieve this using the techniques of [LS91; FL92]. We stress that the results of <ref> [LS91, FL92] </ref> only refer to the MIP model and do not imply a P CP to M IP transformation. <p> From now on we will denote by L (a; b) both the line passing through a and b, and its representation. A similar representation is given in <ref> [FL92] </ref>. <p> h l 2 q ,f 2lhm 3 b 3 * 4 and 2 k m, Then: M IP 1 (r; m; b; q; *) M IP 1 (r + k l log (f ); d m l log (f )); 4*) Proof: [Sketch] A Small variation of the proof in <ref> [LS91; FL92] </ref>. The main point is that we can choose k independent points y 1 ; : : : ; y k 2 F l and ask each prover k questions. <p> As long as no prover receives two lines passing through the same point, no prover can gain any information on what these points are, and the analysis of <ref> [LS91, FL92] </ref> is still valid. Thus, when choosing k points we need m k +1 provers. Notice that in [LS91; FL92] m points are used, and therefore 2 provers suffice. 3 Acknowledgments I would like to thank Ilan Kremer, Muli Safra, Dror Lapidot and Shafi Goldwasser for many interesting discussions. <p> As long as no prover receives two lines passing through the same point, no prover can gain any information on what these points are, and the analysis of [LS91, FL92] is still valid. Thus, when choosing k points we need m k +1 provers. Notice that in <ref> [LS91; FL92] </ref> m points are used, and therefore 2 provers suffice. 3 Acknowledgments I would like to thank Ilan Kremer, Muli Safra, Dror Lapidot and Shafi Goldwasser for many interesting discussions.
Reference: [FRS88] <author> L. Fortnow, J. Rompel, and M. Sipser. </author> <title> On the power of multi-prover interactive protocols. </title> <booktitle> In Proceedings of the 3rd Structures Theory of Computing, IEEE, </booktitle> <year> 1988. </year>
Reference-contexts: The provers are limited in that they cannot communicate among themselves. The oracle model of Fortnow,Rompel and Sipser <ref> [FRS88] </ref>, renamed "probabilistically checkable proofs" by Arora and Safra [AS92], is similar. In this model the provers are replaced by a non-adaptive oracle, i.e. instead of many provers who cannot communicate among themselves we have one oracle which cannot change its predetermined answers. <p> in both cases, we consider the oblivious model where the verifier has to prepare all his questions before he gets any answer. 1.2 Previous work It is simple to show that M IP 1 (r; m; b; q; *) P CP (r; m; b; q + O (log (m)); *) <ref> [FRS88] </ref>. However the converse is not immediate. <p> Two simulation results in the opposite direction are implicit in Fortnow, Rompel and Sipser's work: <ref> [FRS88] </ref>: 2 P CP (r; m; b; q; *) M IP 1 (r; 2; m b; m q; 1 1* P CP (r; m; b; q; *) M IP 1 (r + m polylog ( m * ); O (m log ( m Bellare, Goldreich and Safra [BGS] showed that the
Reference: [LS91] <author> D. Lapidot and A. Shamir. </author> <title> Fully parallelized multi-prover protocols for NEXPtime. </title> <booktitle> In Proceedings of the 32nd Annual IEEE Symposium on the Foundations of Computer Science, IEEE, </booktitle> <pages> pages 13-18, </pages> <year> 1991. </year> <month> 10 </month>
Reference-contexts: We achieve this using the techniques of <ref> [LS91; FL92] </ref>. We stress that the results of [LS91, FL92] only refer to the MIP model and do not imply a P CP to M IP transformation. <p> We achieve this using the techniques of [LS91; FL92]. We stress that the results of <ref> [LS91, FL92] </ref> only refer to the MIP model and do not imply a P CP to M IP transformation. <p> We can do that by asking the same question to different provers, but then we need to choose randomly which prover to ask what question, and we pay in randomness. We overcome this using the nice idea of <ref> [LS91] </ref> of handling strategies. We compare ^ P i 's strategy to ^ P 0 's strategy. Provers who are not consistent among themselves cannot be (simultaneously) consistent with ^ P 0 . More precisely, suppose ^ V wants to ask q and chooses y as his checking point. <p> h l 2 q ,f 2lhm 3 b 3 * 4 and 2 k m, Then: M IP 1 (r; m; b; q; *) M IP 1 (r + k l log (f ); d m l log (f )); 4*) Proof: [Sketch] A Small variation of the proof in <ref> [LS91; FL92] </ref>. The main point is that we can choose k independent points y 1 ; : : : ; y k 2 F l and ask each prover k questions. <p> As long as no prover receives two lines passing through the same point, no prover can gain any information on what these points are, and the analysis of <ref> [LS91, FL92] </ref> is still valid. Thus, when choosing k points we need m k +1 provers. Notice that in [LS91; FL92] m points are used, and therefore 2 provers suffice. 3 Acknowledgments I would like to thank Ilan Kremer, Muli Safra, Dror Lapidot and Shafi Goldwasser for many interesting discussions. <p> As long as no prover receives two lines passing through the same point, no prover can gain any information on what these points are, and the analysis of [LS91, FL92] is still valid. Thus, when choosing k points we need m k +1 provers. Notice that in <ref> [LS91; FL92] </ref> m points are used, and therefore 2 provers suffice. 3 Acknowledgments I would like to thank Ilan Kremer, Muli Safra, Dror Lapidot and Shafi Goldwasser for many interesting discussions.
References-found: 7

