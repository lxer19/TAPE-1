URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-284.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Title: Analysis of An Approach for the Set Maxima Problem  
Author: Vincenzo Liberatore 
Abstract: The set maxima problem is defined as follows: given a totally ordered universe X of size n and S 2 X , jSj = n, find max S for all S 2 S. It has been conjectured that this problem can be solved deterministically with O(n) comparisons. In this paper, we discuss the proposal of Komlos that the minimum spanning tree verification algorithm should provide a solution paradigm for the set maxima problem. We generalize Komlos' algorithm to a larger set of problems arising from the verification of the optimum basis of a very large class of matroids. We will also provide an algorithm for the complementary case of maxima over fundamental matroid hyperplanes.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ahuja, R. K., Magnanti, T. L., and Orlin, J. B. </author> <title> Network Flows. </title> <publisher> Prentice-Hall, </publisher> <address> Engle-wood Cliff, NJ, </address> <year> 1993. </year> <month> 19 </month>
Reference-contexts: Partly supported by an NSF grant through DIMACS. 1 well known that this problem is essentially the set maxima problem for which the universe X is the set of tree edges and the family of sets S is the collection of paths linking the endpoints of every nontree edge <ref> [1] </ref>. For this problem, Komlos has found an optimal algorithm [13], and in passing, we observe that Komlos' solution yielded very recently the first randomized algorithm for finding minimum spanning trees with a linear number of comparisons [12].
Reference: [2] <author> Bar-Noy, A., Motwani, R., and Naor, J. </author> <title> A linear time approach to the set maxima problem. </title> <journal> SIAM J. Disc. Math. </journal> <volume> 5, </volume> <month> 1 (Feb. </month> <year> 1992), </year> <pages> 1-9. </pages>
Reference-contexts: However, Fredman's proof and the existence of a linear randomized algorithm made easy to conjecture that also a deterministic linear algorithm should exist for this problem. Recently, a "rank-sequence algorithm" has been proposed <ref> [2] </ref> with the following properties. The algorithm is parametric with respect to a subset f1; 2; : : :; ng which is named the rank sequence. <p> The rank-sequence algorithm has been conjectured to have a version that runs with O (n) comparisons for any instance of the set maxima problem because projective geometries are intrinsically hard instances of the set maxima problem <ref> [2] </ref>. Unfortunately, we will show that for any choice of the rank-sequence there is an instance of the set maxima problem that forces the rank-sequence algorithm to execute a superlinear number of comparisons, even if is chosen on the basis of an examination of S. <p> Both Komlos' algorithm and the rank-sequence algorithm have been tentatively conjectured as prototypes of an efficient algorithm for the set maxima problem <ref> [2, 13] </ref>. Because of the strength of these guesses and because several authorities pointed out the difficulty of the problem 1 , we lost any interest in seeking a novel solution for the set maxima problem, and we focused on the analysis of the two strategies above. <p> In the next section, we will analyze the rank-sequence algorithm, and then we will state our results and outline the structure of this paper. 2 The Rank-Sequence Algorithm We now analyze the rank-sequence algorithm of Bar-Noy, Motwani, and Naor <ref> [2] </ref> in the critical case m = n. The rank-sequence algorithm works as follows. Define the rank of an element x 2 X as the number of elements in X that are greater than or equal to x. <p> Algorithm 1 Rank-Sequence Algorithm <ref> [2] </ref>. 1. compute the sequence hz 1 ; z 2 ; : : : ; z k i 2 X k such that the rank of z i is r i (1 i k); 2. for i = 0; 1; : : :; k, let 8 &gt; : fx 2 Xjz <p> Let R be a random variable that takes a value i 2 f0; 1; : : : ; kg with the probability p i that an element taken uniformly at random from X is in Z i . We recall <ref> [2] </ref> that Lemma 2.1 The generic algorithm takes (n (1 + H (R))) + P n j j 1) comparisons. Lemma 2.2 If x 1, then bxc x 2 . Proof. If 1 x &lt; 2, then 1 = bxc &gt; x 2 . <p> The rank-sequence algorithm seems to work only when the set S in some sense possesses random-like properties <ref> [2] </ref>. 3 Since the generic algorithm fails to find a solution in O (n) comparisons, we are led to believe that a solution for this problem cannot make decisions based only on selected elements of givens ranks, but must examine the structure of the family S. 3 Matroids 3.1 Representation with <p> Notice that B i = B " E (M i ) 2 B (M i ). So, if e 2 B i (i = 1; 2), then H e = (B feg) = i (B i feg) [ j (B j ) = H (i) where fjg = <ref> [2] </ref> fig and H (i) e is the hyperplane i (B i feg). <p> As a more realistic objective, we would like to find an algorithm for the maxima of the hyperplanes of P G (d; q) when both the parameters q and d vary (the only algorithm known so far assumes that d is a constant <ref> [2] </ref>), and for the maxima of nearly disjoint hyperplanes. Acknowledgments We are indebted with Mike Fredman for having suggested us the problem, for countless hours of discussion, and for proofreading an earlier draft of this paper. We also thank Sarmad Abbasi, Jeff Kahn, S. Muthukrishnan, and Lorant Porkolab for helpful discussions.
Reference: [3] <author> Bixby, R. E. </author> <title> Kuratowski's and Wagner's theorems for matroids. </title> <journal> Journal of Combinatorial Theory, Series B 22, </journal> <month> 1 (Feb. </month> <year> 1977), </year> <pages> 31-53. </pages>
Reference-contexts: Theorem 3.1 constitutes a proper generalization of Komlos' algorithm, as established by observing that, for B = <ref> [3] </ref> 2 B (F 7 ), S = fB (e) : e 2 Bg is a valid set family for the set maxima problem, that any other binary matroid that defines the same fundamental circuit family S contains a minor isomorphic to F 7 , and that F 7 is an <p> Proof. Let M L = M 1 4 (M 2 4M 3 ) and M R = (M 1 4M 2 )4M 3 . Clearly, E (M L ) = E (M R ). Let C i 2 C (M i ) (i 2 <ref> [3] </ref>), and suppose by contradiction that C = C 1 4C 2 4C 3 is a circuit of M L , but not of M R . <p> The second step of the algorithm does not execute any comparison on the elements in X. The number of comparisons executed in the other steps can be obtained by counting the number of times step 2 is executed. Recall <ref> [3] </ref> that Lemma 5.2 If M is a regular matroid and jE (M)j 10, then M is either graphic, cographic, or isomorphic to R 10 .
Reference: [4] <author> Brylawski, T. </author> <title> A combinatorial model for series-parallel networks. </title> <journal> Transactions of the American Mathematical Society 154 (Feb. </journal> <year> 1971), </year> <pages> 1-22. </pages>
Reference-contexts: In either case, e 2 C " E (M 1 ) " E (M 2 ), which is a contradiction. Conversely, if we suppose that C is a circuit of M R , but not of M L , we reach an analogous contradiction. 2 We recall <ref> [4, 6] </ref> the following Lemma 4.2 Let M 1 and M 2 be matroids with E (M 1 ) " E (M 2 ) = fpg. <p> Recall <ref> [4, 6] </ref> that Lemma 4.4 Let M 1 and M 2 be matroids with E (M 1 ) " E (M 2 ) = fpg.
Reference: [5] <author> Brylawski, T. </author> <title> Modular construction for combinatorial geometries. </title> <journal> Transactions of the American Mathematical Society 203 (Mar. </journal> <year> 1975), </year> <pages> 1-44. </pages>
Reference-contexts: The proof is then completed by a case analysis. 2 Let us turn now to 3-sums. We recall <ref> [5] </ref> the following Lemma 4.6 Let M 1 and M 2 be two matroids, N = M 1 jT = M 2 jT a triangle, and M P = P N (M 1 ; M 2 ). Let X i E (M i ) for i = 1; 2.
Reference: [6] <author> Brylawski, T. </author> <title> Constructions. In Theory of Matroids, </title> <editor> N. L. White, Ed., </editor> <volume> vol. </volume> <booktitle> 26 of Encyclopedia of Mathematics and Its Applications. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1986, </year> <note> ch. 7. </note>
Reference-contexts: solution in O (n) comparisons, we are led to believe that a solution for this problem cannot make decisions based only on selected elements of givens ranks, but must examine the structure of the family S. 3 Matroids 3.1 Representation with Matroids We assume familiarity with the notion of matroids <ref> [6, 14, 19, 21] </ref>, and we give the following definitions for the sole purpose of fixing our notation. Let M be a matroid [14, 21] with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). <p> In either case, e 2 C " E (M 1 ) " E (M 2 ), which is a contradiction. Conversely, if we suppose that C is a circuit of M R , but not of M L , we reach an analogous contradiction. 2 We recall <ref> [4, 6] </ref> the following Lemma 4.2 Let M 1 and M 2 be matroids with E (M 1 ) " E (M 2 ) = fpg. <p> Recall <ref> [4, 6] </ref> that Lemma 4.4 Let M 1 and M 2 be matroids with E (M 1 ) " E (M 2 ) = fpg.
Reference: [7] <author> Cormen, T. H., Leiserson, C. E., and Rivest, R. L. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press and Mc-Graw Hill, </publisher> <year> 1990. </year>
Reference-contexts: Regard T as a directed graph with edges directed away from the root r. Visit T in depth first search starting from r and assign to each vertex v the timestamp (as defined in <ref> [7] </ref>) that records the moment when the inspection of v is completed.
Reference: [8] <author> Desper, R. M. </author> <title> The set-maxima problem: an overview. </title> <type> Master's thesis, </type> <institution> Rutgers University, </institution> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: Lemma 2.2 If x 1, then bxc x 2 . Proof. If 1 x &lt; 2, then 1 = bxc &gt; x 2 . If x 2, then bxc x 1 x 2 . 2 We begin by presenting a proof of the following well-known fact <ref> [8] </ref>: 1 Jeff Kahn offered the author a Paul Erdos T-shirt if we can solve the set maxima problem. 2 Theorem 2.3 For infinitely many values of n and for any choice of the rank sequence there is an instance of the set maxima problem that forces the generic algorithm to
Reference: [9] <author> Goddard, W., Kenyon, C., King, V., and Schulman, L. J. </author> <title> Optimal randomized algorithms for local sorting and set maxima. </title> <journal> SIAM J. Comput. </journal> <volume> 22, </volume> <month> 2 (Apr. </month> <year> 1993), </year> <pages> 272-283. </pages>
Reference-contexts: No better deterministic algorithm is presently known for this general version of the problem. Fredman formulated the set maxima problem and proved that at most 2n1 arrangements of maxima are possible [11], showing that the information-theoretic bound is only (n) comparisons. An O (n) randomized algorithm is given in <ref> [9] </ref>, but no linear deterministic algorithm is known except for some particular cases. However, Fredman's proof and the existence of a linear randomized algorithm made easy to conjecture that also a deterministic linear algorithm should exist for this problem.
Reference: [10] <author> Golumbic, M. C. </author> <title> Algorithmic Graph Theory and Perfect Graphs. </title> <booktitle> Computer Science and Applied Mathematics. </booktitle> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1980. </year>
Reference-contexts: If D 13 is an interval matrix, then M [(IjD)] is graphic, but not necessarily planar: take for example the network matrix corresponding to K 5 with a path as spanning tree. A discussion and a bibliography on interval matrices can be found in <ref> [10] </ref>.
Reference: [11] <author> Graham, R. L., Yao, F. F., and Yao, A. C. </author> <title> Information bounds are weak in the shortest distance problem. </title> <journal> Journal of the Association for Computing Machinery 27, </journal> <month> 3 (July </month> <year> 1980), </year> <pages> 428-444. </pages>
Reference-contexts: No better deterministic algorithm is presently known for this general version of the problem. Fredman formulated the set maxima problem and proved that at most 2n1 arrangements of maxima are possible <ref> [11] </ref>, showing that the information-theoretic bound is only (n) comparisons. An O (n) randomized algorithm is given in [9], but no linear deterministic algorithm is known except for some particular cases.
Reference: [12] <author> Karger, D. R., Klein, P. N., and Tarjan, R. E. </author> <title> A randomized linear-time algorithm to find minimum spanning trees. </title> <journal> Journal of the Association for Computing Machinery 42, </journal> <month> 2 (Mar. </month> <year> 1995), </year> <pages> 321-328. </pages>
Reference-contexts: For this problem, Komlos has found an optimal algorithm [13], and in passing, we observe that Komlos' solution yielded very recently the first randomized algorithm for finding minimum spanning trees with a linear number of comparisons <ref> [12] </ref>. Both Komlos' algorithm and the rank-sequence algorithm have been tentatively conjectured as prototypes of an efficient algorithm for the set maxima problem [2, 13].
Reference: [13] <author> Koml os, J. </author> <title> Linear verification for spanning trees. </title> <journal> Combinatorica 5, </journal> <volume> 1 (1985), </volume> <pages> 57-65. </pages>
Reference-contexts: For this problem, Komlos has found an optimal algorithm <ref> [13] </ref>, and in passing, we observe that Komlos' solution yielded very recently the first randomized algorithm for finding minimum spanning trees with a linear number of comparisons [12]. <p> Both Komlos' algorithm and the rank-sequence algorithm have been tentatively conjectured as prototypes of an efficient algorithm for the set maxima problem <ref> [2, 13] </ref>. Because of the strength of these guesses and because several authorities pointed out the difficulty of the problem 1 , we lost any interest in seeking a novel solution for the set maxima problem, and we focused on the analysis of the two strategies above. <p> In the proof, we will need to invoke the existence of the symmetric heap algorithm <ref> [13] </ref> that finds the maxima over intervals with O (n) comparisons. Proof. Let S = ffx 2 X : maxf0; i p ng rank (x) ig : 1 i ng. S is a collection of intervals and can be solved in O (n) comparisons. <p> If M is graphic, then Komlos's algorithm <ref> [13] </ref> solves the fundamental circuit maxima problem. <p> If M is a graphic matroid with r (M) = n and jE (M)j = m, Komlos' algorithm finds the fundamental circuit maxima with O (m + n) comparisons <ref> [13] </ref>. Any algorithm for verifying the optimum basis of a graph can in fact be represented as a transmuter, for whose definition we refer to [18].
Reference: [14] <author> Oxley, J. G. </author> <title> Matroid Theory. </title> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference-contexts: solution in O (n) comparisons, we are led to believe that a solution for this problem cannot make decisions based only on selected elements of givens ranks, but must examine the structure of the family S. 3 Matroids 3.1 Representation with Matroids We assume familiarity with the notion of matroids <ref> [6, 14, 19, 21] </ref>, and we give the following definitions for the sole purpose of fixing our notation. Let M be a matroid [14, 21] with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). <p> Let M be a matroid <ref> [14, 21] </ref> with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). M fl is the dual matroid of M. Let B 2 B (M).
Reference: [15] <author> Seymour, P. D. </author> <title> The matroids with the max-flow min-cut property. </title> <journal> Journal of Combinatorial Theory, Series B 23, </journal> <month> 2-3 (October-December </month> <year> 1977), </year> <pages> 189-222. </pages>
Reference-contexts: In particular, fundamental circuit maxima over regular matroids can be found with a linear number of comparisons. But more is true: piecing together regular matroids and F 7 , we obtain an algorithm for the class of matroids that enjoy the strong max-flow min-cut property <ref> [15, 19, 20] </ref>; to the best of our knowledge, this is the larger proper subclass of binary matroids that arises in a natural setting.
Reference: [16] <author> Seymour, P. D. </author> <title> Decomposition of regular matroids. </title> <journal> Journal of Combinatorial Theory, Series B 28, </journal> <month> 3 (June </month> <year> 1980), </year> <pages> 305-359. </pages>
Reference-contexts: We will assume familiarity with the symmetric difference operation 4 and the parallel connection operation P N . Since slightly different versions of the sum operations have appeared in the literature, we make the following non-restrictive assumptions following Seymour <ref> [16] </ref>: * no basepoint in a 2-sum is a loop or a coloop of either part; * the size of the parts of a 2-sum exceeds 2; * in any 3-sum M 1 3 M 2 , E (M 1 ) " E (M 2 ) does not contain a cocircuit <p> If jB i j &gt; jB j j we will say that the sum is unbalanced from M i to M j (i; j 2 f1; 2g; i 6= j); we will say that the sum is balanced otherwise. We will use the following lemma due to Seymour <ref> [16] </ref>: Lemma 4.9 Let M 1 and M 2 be binary matroids and T = E (M 1 ) " E (M 2 ). Suppose that M = M 1 3 M 2 .
Reference: [17] <author> Tarjan, R. E. </author> <title> Applications of path compressions on balanced trees. </title> <journal> Journal of the Association for Computing Machinery 26, </journal> <month> 4 (Oct. </month> <year> 1979), </year> <pages> 690-715. </pages>
Reference-contexts: It is not hard to see that this problem can be restated as that of finding maxfw (f ) : f =2 T; e 2 T (f )g for all e 2 T . This problem can be solved by visiting in reverse order a transmuter <ref> [17] </ref>; in particular, if we visit Komlos' transmuter in reverse order, we obtain the maxima at the cost of m 0 n 0 n+1 = O (m+n) comparisons.
Reference: [18] <author> Tarjan, R. E. </author> <title> Sensitivity analysis of minimum spanning trees and shortest path trees. </title> <journal> Information Processing Letters 14, </journal> <month> 1 (Mar. </month> <year> 1982), </year> <pages> 30-33. </pages>
Reference-contexts: Any algorithm for verifying the optimum basis of a graph can in fact be represented as a transmuter, for whose definition we refer to <ref> [18] </ref>. Let m 0 be the number of edges in the transmuter and n 0 the number of vertices of the transmuter that do not correspond to elements of M; the number of comparisons is m 0 n 0 (m n + 1).
Reference: [19] <author> Truemper, K. </author> <title> Matroid Decomposition. </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1992. </year> <month> 20 </month>
Reference-contexts: solution in O (n) comparisons, we are led to believe that a solution for this problem cannot make decisions based only on selected elements of givens ranks, but must examine the structure of the family S. 3 Matroids 3.1 Representation with Matroids We assume familiarity with the notion of matroids <ref> [6, 14, 19, 21] </ref>, and we give the following definitions for the sole purpose of fixing our notation. Let M be a matroid [14, 21] with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). <p> In particular, fundamental circuit maxima over regular matroids can be found with a linear number of comparisons. But more is true: piecing together regular matroids and F 7 , we obtain an algorithm for the class of matroids that enjoy the strong max-flow min-cut property <ref> [15, 19, 20] </ref>; to the best of our knowledge, this is the larger proper subclass of binary matroids that arises in a natural setting. <p> In the algorithm, we will execute Y exchanges as defined in <ref> [19] </ref>, and the elements involved to the exchange are named in agreement with figure 1. The reason why the algorithm executes Y exchanges will be explained when we argue its correctness. In the appendix, we will give a sample run of this algorithm. Algorithm 2 Fundamental circuit maxima. 1. <p> In this case, we execute a Y exchange. M i remains a regular matroid after the Y exchange <ref> [19] </ref>, and, with the new definition of B i , the fundamental circuits have the correct weights. Now we will assess the number of comparisons executed by the algorithm. The second step of the algorithm does not execute any comparison on the elements in X.
Reference: [20] <author> Tseng, F. T., and Truemper, K. </author> <title> A decomposition of the matroids with the max-flow min-cut property. </title> <journal> Discrete Applied Mathematics 15, </journal> <volume> 2, </volume> <month> 3 (Nov. </month> <year> 1986), </year> <pages> 329-364. </pages>
Reference-contexts: In particular, fundamental circuit maxima over regular matroids can be found with a linear number of comparisons. But more is true: piecing together regular matroids and F 7 , we obtain an algorithm for the class of matroids that enjoy the strong max-flow min-cut property <ref> [15, 19, 20] </ref>; to the best of our knowledge, this is the larger proper subclass of binary matroids that arises in a natural setting.
Reference: [21] <author> Welsh, D. J. A. </author> <title> Matroid Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1976. </year>
Reference-contexts: solution in O (n) comparisons, we are led to believe that a solution for this problem cannot make decisions based only on selected elements of givens ranks, but must examine the structure of the family S. 3 Matroids 3.1 Representation with Matroids We assume familiarity with the notion of matroids <ref> [6, 14, 19, 21] </ref>, and we give the following definitions for the sole purpose of fixing our notation. Let M be a matroid [14, 21] with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). <p> Let M be a matroid <ref> [14, 21] </ref> with element set E (M), basis set B (M), circuit set C (M), and hyperplane set H (M). M fl is the dual matroid of M. Let B 2 B (M).
References-found: 21

