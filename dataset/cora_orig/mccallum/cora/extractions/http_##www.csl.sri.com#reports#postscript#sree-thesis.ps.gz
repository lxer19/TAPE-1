URL: http://www.csl.sri.com/reports/postscript/sree-thesis.ps.gz
Refering-URL: http://www.csl.sri.com/fm-theses.html
Root-URL: 
Title: TRANSFORMATIONS ON DEPENDENCY GRAPHS: FORMAL SPECIFICATION AND EFFICIENT MECHANICAL VERIFICATION  
Author: by Sreeranga Prasannakumar Rajan 
Degree: B.Tech., Indian Institute of Technology (Madras, India), 1986 MS.,  A THESIS SUBMITTED IN PARTIAL FULFILLMENT OF THE REQUIREMENTS FOR THE DEGREE OF DOCTOR OF PHILOSOPHY in THE FACULTY OF GRADUATE STUDIES  
Note: c flSreeranga P. Rajan, 1995  
Date: 1987  October 1995  
Address: (Los Angeles),  
Affiliation: University of Southern California  (Department of Computer Science) THE UNIVERSITY OF BRITISH COLUMBIA  
Abstract: We accept this thesis as conforming to the required standard ............................................... 
Abstract-found: 1
Intro-found: 1
Reference: [AAD93] <author> F.V. Aelten, J. Allen, and S. Devadas. </author> <title> Verification of relations between synchronous machines. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(12), </volume> <month> December </month> <year> 1993. </year>
Reference: [AAD94] <author> F.V. Aelten, J. Allen, and S. Devadas. </author> <title> Even-based verification of synchronous globally controlled logic designs against signal flow graphs. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 13(1), </volume> <month> Jan-uary </month> <year> 1994. </year>
Reference: [AC72] <author> Francis E. Allen and John Cocke. </author> <title> A catalogue of optimization transformations. </title> <editor> In Randall Rustin, editor, </editor> <booktitle> Design and Optimization of Compilers, Courant Computer Symposium 5. </booktitle> <publisher> Prentice Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <month> March </month> <year> 1972. </year>
Reference: [AFJWed] <author> E.A. Aschroft, A.A. Faustini, R. Jagannathan, </author> <title> and W.W. Wadge. Multidimensional Declarative Programming. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> U.K., </address> <note> to be published. </note>
Reference: [AL94] <author> M. Aagaard and M. Leeser. PBS: </author> <title> Proven boolean algorithm. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 13(4), </volume> <month> January </month> <year> 1994. </year>
Reference: [Ang94] <author> C. Angelo. </author> <title> Formal Hardware Verification in a Silicon Compilation Environment by means of theorem proving. </title> <type> PhD thesis, K.U. </type> <address> Leuven/IMEC, Belgium, </address> <month> February </month> <year> 1994. </year>
Reference: [ASU71] <author> A.V. Aho, Ravi Sethi, and J. D. Ullman. </author> <title> Code optimization and finite church-rosser systems. </title> <editor> In Randall Rustin, editor, </editor> <booktitle> Design and Optimization of Compilers, Courant Computer Symposium 5. </booktitle> <publisher> Pren-tice Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <month> March </month> <year> 1971. </year>
Reference: [AW77] <author> E.A. Aschroft and W.W. Wadge. </author> <title> Lucid: A nonprocedural language with iteration. </title> <journal> CACM, </journal> <volume> 20(7) </volume> <pages> 519-526, </pages> <year> 1977. </year> <month> 117 </month>
Reference: [Bac88] <author> R.J.R. </author> <title> Back. A calculus of refinements for program derivations. </title> <journal> Acta Informatica, </journal> <volume> 25 </volume> <pages> 593-624, </pages> <year> 1988. </year>
Reference: [Bar81] <author> M. R. Barbacci. </author> <title> Instruction set processor specifications (isps): The notation and applications. </title> <journal> ieeetc, </journal> <volume> C-30(1):24-40, </volume> <year> 1981. </year>
Reference: [BCD + 88] <author> R.K. Brayton, R. Camposano, G. DeMicheli, R.H.J.M. Otten, and J.T.J. van Eijndhoven. </author> <title> The yorktown silicon compiler system. </title> <editor> In D. Gajski, editor, </editor> <title> The Yorktown Silicon Compiler System. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference: [BCL + 94] <author> J. R. Burch, E. M. Clarke, D. E. Long, K. L. McMillan, and D. L. Dill. </author> <title> Symbolic model checking for sequential circuit verification. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 13(4) </volume> <pages> 401-424, </pages> <month> April </month> <year> 1994. </year>
Reference: [BCM + 90a] <author> J. R. Burch, E. M. Clarke, K. L McMillan, D. L. Dill, and L. J. Hwang. </author> <title> Symbolic model checking: 10 20 states and beyond. </title> <booktitle> In 5th Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 428-439, </pages> <address> Philadelphia, PA, June 1990. </address> <publisher> IEEE Computer Society. </publisher>
Reference: [BCM + 90b] <author> J.R. Burch, E.M. Clarke, K.L. McMillan, D.L. Dill, and J. Hwang. </author> <title> Symbolic model checking: 10 20 states and beyond. </title> <booktitle> In Proceedings of the Fifth Annual Symposium on Logic in Computer Science. Association for Computing Machinery, </booktitle> <month> July </month> <year> 1990. </year>
Reference: [BRB90] <author> K.S. Brace, R.L. Rudell, and R.E. Bryant. </author> <title> Efficient implementation of a BDD package. </title> <booktitle> In Proceedings of the 27th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 40-45. </pages> <institution> Association for Computing Machinery, </institution> <year> 1990. </year>
Reference: [Bry92] <author> Randal E. Bryant. </author> <title> Symbolic boolean manipulation with ordered binary-decision diagrams. </title> <journal> ACM Computing Surveys, </journal> <volume> 24(3) </volume> <pages> 293-318, </pages> <month> September </month> <year> 1992. </year>
Reference: [Cam89] <author> R. Camposano. </author> <title> Behavior preserving transformations in high level synthesis. In Hardware Specification, Verification and Synthesis: </title> <journal> Mathematical Aspects, </journal> <pages> pages 106-128, </pages> <address> Ithaca, NY, </address> <month> July </month> <year> 1989. </year> <booktitle> Volume 408 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: [CBL92] <author> R. Chapman, G. Brown, and M. Leeser. </author> <title> Verified high-level synthesis in BEDROC. </title> <booktitle> In Proceedings of the 1992 European Design Automation Conference. </booktitle> <publisher> IEEE Press, </publisher> <month> March </month> <year> 1992. </year> <month> 118 </month>
Reference: [CG87] <editor> E.M. Clarke and O. Grumberg, editors. </editor> <booktitle> Annual Review of Computer Science, </booktitle> <volume> Volume 2. </volume> <publisher> Annual Reviews, Inc., </publisher> <address> Palo Alto, CA, </address> <year> 1987. </year>
Reference: [CGH94] <author> E. Clarke, O. Grumberg, and K. Hamaguchi. </author> <title> Another look at LTL model checking. </title> <editor> In David Dill, editor, </editor> <booktitle> Computer-Aided Verification, CAV '94, </booktitle> <pages> pages 415-427, </pages> <address> Stanford, CA, </address> <month> June </month> <year> 1994. </year> <booktitle> Volume 818 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: [Cha79] <author> Donald D. Chamberlin. </author> <title> The "single-assignment" approach to parallel processing. </title> <booktitle> Selected papers on Data Flow Architecture, Part 1, </booktitle> <month> May </month> <year> 1979. </year>
Reference: [Cle89] <author> R. Cleaveland. </author> <title> Tableau-based model checking in the propositional mu-calculus. </title> <type> Technical Report 2/89, </type> <institution> University of Sussex, </institution> <month> March </month> <year> 1989. </year>
Reference: [Compu90] <institution> Computer General Electronic Design U.K. </institution> <note> The ELLA Language Reference Manual. </note> <institution> Computer General Electronic Design The New Church Henry St. Bath BA1 1JR U.K., </institution> <year> 1990. </year>
Reference: [Cyr93] <author> D. Cyrluk. </author> <title> Microprocessor verification in PVS: A methodology and simple example. </title> <type> Technical report, </type> <institution> SRI International, </institution> <month> December </month> <year> 1993. </year> <note> Report CSL-93-12. </note>
Reference: [DeM79] <author> Tom DeMarco. </author> <title> Structured Analysis and System Specification. </title> <publisher> Your-don Press, </publisher> <address> New Jersey, </address> <year> 1979. </year>
Reference-contexts: A majority of the methods use informal graphical notations for requirements capture. One of the most widely used methods is Structured Analysis/Design (SA/SD) approach <ref> [DeM79, Won94] </ref> for software 99 analysis. In this approach, a combination of data flow diagrams (DFD) and control specifications such as state transition diagrams (STD) are used as graphical notations among others. Thus, there is a clear separation of data flow and control flow. <p> We could therefore embed off-the-shelf data-flow diagrams used in the Structured Analysis/Design approach <ref> [DeM79, Won94] </ref> in our formalism. One particular example of the advantage of our approach is establishing refinement and equivalence, without expressing the concrete relation between outputs and inputs of nodes. This property, expressed in Table 6.9 and of the nodes.
Reference: [dJ93] <author> G.G de Jong. </author> <title> Generalized data flow graphs: theory and applications. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, </institution> <address> The Netherlands, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: This implies that it would be difficult to reason about the properties of 113 the language without reference to the undelying behavior model. For example, we have pointed out earlier in Section 8.4 that, we would not be able to use the operational/denotational semantics developed for dependency graphs <ref> [dJ93, HK93] </ref> to reason about constraint nets without major modifications to the semantics. However, in our axiomatic specification, we could interpret a port as representing a trace, and data relations as higher-order functions on traces with an optional time parameter. <p> Such a simple interpretation suggested that the axiomatic specification developed for dependency graphs in this dissertation could be used to specify and reason about constraint nets. However, denotational and operational models worked out by de Jong and Huijs <ref> [dJ93, HK93] </ref> could be used as a concrete model that satisfies the axiomatic specification. As a typical example, we are given the behavioral relations of the nodes in a SIL graph and the structural connectivity of the graph.
Reference: [EL85] <author> E.A. Emerson and C.L Lei. </author> <title> Efficient model checking in fragments of the propositional mu-calculus. </title> <booktitle> In Proceedings of the 10th Symposium on Principles of Programming Languages, </booktitle> <pages> pages 84-96, </pages> <address> New Orleans, LA, </address> <month> January </month> <year> 1985. </year> <institution> Association for Computing Machinery. </institution>
Reference: [Eme90] <author> E. Allen Emerson. </author> <title> Temporal and modal logic. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B: Formal Models and Semantics, chapter 16, </booktitle> <pages> pages 995-1072. </pages> <publisher> Elsevier and MIT press, </publisher> <address> Amsterdam, The Netherlands, and Cambridge, MA, </address> <year> 1990. </year>
Reference: [EMH + 93] <author> W.J.A Engelen, P.F.A. Middelhoek, C. Huijs, J. Hofstede, and Th. Krol. </author> <title> Applying software transformations to SIL. </title> <type> Technical 119 Report SPRITE deliverable Ls.a.5.2/UT/Y5/M6/1A, </type> <institution> Philips Re--search Laboratories, Eindhoven The Netherlands, </institution> <month> April </month> <year> 1993. </year>
Reference: [Fou90] <author> M. P. Fourman. </author> <title> Formal system design. </title> <editor> In J. Staunstrup, editor, </editor> <title> Formal Methods for VLSI Design. </title> <publisher> IFIP, North-Holland, </publisher> <year> 1990. </year>
Reference: [GM93] <author> M. J. C. Gordon and T. F. Melham, </author> <title> editors. Introduction to HOL: A Theorem Proving Environment for Higher-Order Logic. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1993. </year>
Reference: [Gun92] <author> Carl A. Gunter. </author> <title> Semantics of programming languages : structures and techniques. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference: [Gup92] <author> Aarti Gupta. </author> <title> Formal hardware verification methods: A survey. </title> <booktitle> Formal Methods in Systems Design, </booktitle> 1(2/3):151-238, October 1992. 
Reference: [HFB93] <author> N. Halbwachs, J-C. Fernandez, and A. Bouajjani. </author> <title> An executable temporal logic to express safety properties and its connection with the language lustre. </title> <booktitle> In Sixth International Symposium on Lucid and Intensional Programming. </booktitle> <institution> Universite Laval, </institution> <month> April </month> <year> 1993. </year>
Reference: [HHK92] <author> C. Huijs, J. Hofstede, and Th. Krol. </author> <title> Transformations and se-mantical checks for SIL-1. </title> <type> Technical Report SPRITE deliverable LS.a.5.1/UT/Y4/M6/1, </type> <institution> Philips Research Laboratories, Eindhoven The Netherlands, </institution> <month> November </month> <year> 1992. </year>
Reference: [Hil85] <author> P. N. Hilfinger. Silage: </author> <title> a high-level language and silicon compiler for digital signal processing. </title> <booktitle> In Proceedings of IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pages 213-216, </pages> <address> Portland, OR, </address> <month> May </month> <year> 1985. </year> <note> IEEE. </note>
Reference: [HK93] <author> C. Huijs and Th. Krol. </author> <title> A formal semantic model to fit SIL for transformational design. </title> <booktitle> In Proceedings of Euromicro Micropro-cessing and Microprogramming 39, </booktitle> <address> liverpool, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: This implies that it would be difficult to reason about the properties of 113 the language without reference to the undelying behavior model. For example, we have pointed out earlier in Section 8.4 that, we would not be able to use the operational/denotational semantics developed for dependency graphs <ref> [dJ93, HK93] </ref> to reason about constraint nets without major modifications to the semantics. However, in our axiomatic specification, we could interpret a port as representing a trace, and data relations as higher-order functions on traces with an optional time parameter. <p> Such a simple interpretation suggested that the axiomatic specification developed for dependency graphs in this dissertation could be used to specify and reason about constraint nets. However, denotational and operational models worked out by de Jong and Huijs <ref> [dJ93, HK93] </ref> could be used as a concrete model that satisfies the axiomatic specification. As a typical example, we are given the behavioral relations of the nodes in a SIL graph and the structural connectivity of the graph.
Reference: [Hoo94] <author> Jozef Hooman. </author> <title> Correctness of real time systems by construction. </title> <editor> In H. Langmaack, W.-P. de Roever, and J. Vytopil, editors, </editor> <booktitle> Formal Techniques in Real-Time and Fault-Tolerant Systems, </booktitle> <pages> pages 19-40, </pages> <address> Lubeck, Germany, </address> <month> September </month> <year> 1994. </year> <booktitle> Volume 863 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: [Jan93a] <author> G. L. J. M. </author> <type> Janssen. </type> <institution> ROBDD Software. Department of Electrical Engineering, Eindhoven University of Technology, </institution> <month> October </month> <year> 1993. </year>
Reference: [Jan93b] <author> G. L. J. M. </author> <type> Janssen. </type> <institution> ROBDD Software. Department of Electrical Engineering, Eindhoven University of Technology, </institution> <month> October </month> <year> 1993. </year> <month> 120 </month>
Reference: [JLR + 91] <author> J. Joyce, E. Liu, J. Rushby, N. Shankar, R. Suaya, and F. von Henke. </author> <title> From formal verification to silicon compilation. </title> <booktitle> In IEEE Compcon, </booktitle> <pages> pages 450-455, </pages> <address> San Francisco, CA, </address> <month> February </month> <year> 1991. </year>
Reference: [Joh84] <author> S. D. Johnson. </author> <title> Synthesis of Digital Designs from Recursion Equations. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1984. </year>
Reference: [Joh95] <editor> Steven D. Johnson, editor. </editor> <booktitle> CHDL '95: 12th Conference on Computer Hardware Description Languages and their Applications, Chiba, </booktitle> <address> Japan, </address> <month> August </month> <year> 1995. </year> <note> Proceedings published in a single volume jointly with ASP-DAC '95, CHDL '95, and VLSI '95, IEEE Catalog no. 95TH8102. </note>
Reference: [JS90] <author> G. Jones and M. Sheeran. </author> <title> Circuit design in ruby. </title> <editor> In J. Staunstrup, editor, </editor> <title> Formal Methods for VLSI Design. </title> <publisher> IFIP, North-Holland, </publisher> <year> 1990. </year>
Reference: [JS93] <author> Jeffrey J. Joyce and Carl-Johan H. Seger. </author> <title> Linking Bdd-based symbolic evaluation to interactive theorem proving. </title> <booktitle> In Proceedings of the 30th Design Automation Conference. Association for Computing Machinery, </booktitle> <year> 1993. </year>
Reference: [KeH + 92] <author> W.E.H. Kloosterhuis, M.R.R. eyckmans, J. Hofstede, C. Huijs, Th. Krol, O.P. McArdle, W.J.M. Smits, and L.G.L. Svensson. </author> <title> The SPRITE input language SIL-1, language report. </title> <type> Technical Report SPRITE, </type> <institution> deliverable Ls.a.a / Philips / Y3 / M12 / 2, Philips Research Laboratories, Eindhoven The Netherlands, </institution> <month> October </month> <year> 1992. </year>
Reference: [KK94] <editor> Ramayya Kumar and Thomas Kropf, editors. </editor> <booktitle> Preliminary Proceedings of the Second Conference on Theorem Provers in Circuit Design, </booktitle> <address> Bad Herrenalb (Blackforest), Germany, </address> <month> September </month> <year> 1994. </year> <institution> Forschungszentrum Informatik an der Universitat Karlsruhe, </institution> <note> FZI Publication 4/94. </note>
Reference: [Klo94] <author> W.E.H. Kloosterhuis. </author> <type> Personal communication. </type> <month> January </month> <year> 1994. </year>
Reference: [KMN + 92] <author> Th. Krol, J.v. Meerbergen, C. Niessen, W. Smits, and J. Huisken. </author> <title> The SPRITE input language, an intermediate format for high level synthesis. </title> <booktitle> In Proceedings of European Design Automation Conference, </booktitle> <pages> pages 186-192, </pages> <address> Brussels, </address> <month> March </month> <year> 1992. </year>
Reference: [Koz83] <author> D. Kozen. </author> <title> Results on the propositional mu-calculus. </title> <booktitle> Theoretical Computer Science, </booktitle> <pages> pages 333-354, </pages> <month> December </month> <year> 1983. </year> <month> 121 </month>
Reference: [KvdW93] <author> A. P. Kostelijk and A. van der Werf. </author> <title> Functional verification for retiming and rebuffering optimization. </title> <booktitle> In Proceedings of The Eu-ropean Conference on Design Automation with the European Event in ASIC Design, </booktitle> <address> Paris, </address> <month> February </month> <year> 1993. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: The properties we have tabled in our formalism could form the basis of studying how we could formulate a composite behavior from smaller behavioral relations. In an earlier work at the register-transfer level <ref> [KvdW93] </ref>, an automatic procedure for functional verification of retiming, pipelining and buffering optimization has been implemented in RetLab as part of the PHIDEO tool at PRL.
Reference: [LOR + 93] <author> Patrick Lincoln, Sam Owre, John Rushby, N. Shankar, and Friedrich von Henke. </author> <title> Eight papers on formal verification. </title> <type> Technical Report SRI-CSL-93-4, </type> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> May </month> <year> 1993. </year>
Reference: [LPT93] <author> P.G. Larsen, N. Plat, and H. Toetenel. </author> <title> A formal semantics of data flow diagrams. </title> <journal> Formal Aspects of Computing, </journal> <volume> 3(1), </volume> <year> 1993. </year>
Reference-contexts: Thus, there is a clear separation of data flow and control flow. There is also an associated data dictionary that contains more information on the data described in the data flow diagram. There have been some efforts in providing a formal sematics for DFD in VDM <ref> [LPT93] </ref>. However, they do not address control specifications and transformations on DFDs. We first give a brief overview of DFD and STD in Section 8.3.1. In Section 8.3.2, we present a transformation of DFD to SIL.
Reference: [McF93] <author> M.C. McFarland. </author> <title> Formal analysis of correctness of behavioral transformations. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 2(3) </volume> <pages> 231-257, </pages> <month> June </month> <year> 1993. </year>
Reference: [McM93] <author> Kenneth L. McMillan. </author> <title> Symbolic Model Checking. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1993. </year>
Reference: [Mid93] <author> P.F.A. Middelhoek. </author> <title> Transformational design of digital circuits. </title> <booktitle> In Proceedings of the Seventh Workshop Computersystems, </booktitle> <address> Eindhoven The Netherlands, </address> <month> November </month> <year> 1993. </year>
Reference: [Mid94a] <author> P.F.A. Middelhoek. </author> <title> Transformational design of a direction detector for the progressive scan conversion algorithm. </title> <type> Technical report, </type> <institution> Computer Science, University of Twente, Enschede, The Nether-lands, </institution> <month> May </month> <year> 1994. </year> <note> Preliminary. </note>
Reference: [Mid94b] <author> P.F.A. Middelhoek. </author> <title> Transformational design of digital signal processing applications. </title> <booktitle> In Proceedings of the ProRISC/IEEE workshop on CSSP, </booktitle> <pages> pages 175-180, </pages> <address> Eindhoven The Netherlands, </address> <month> March </month> <year> 1994. </year>
Reference: [MP83] <author> M.C. McFarland and A.C. Parker. </author> <title> An abstract model of behavior for hardware descriptions. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-32(7):621-636, </volume> <month> July </month> <year> 1983. </year>
Reference: [NRP95] <author> Vijay Nagasamy, Sreeranga P. Rajan, and Preeti R. Panda. </author> <title> Fiber channel protocol: Formal specification, verification, </title> <booktitle> and design trade-off/analysis. In Proceedings of the 1995 Silicon Valley Networking Conference and Exposition. Systech Research, </booktitle> <month> April </month> <year> 1995. </year>
Reference: [oEE88] <author> The Institute of Electrical and Electronics Engineers. </author> <title> IEEE Standard VHDL Language Reference Manual 1076-88. </title> <publisher> IEEE Press, </publisher> <address> New York, </address> <year> 1988. </year> <month> 122 </month>
Reference: [ORSvH95] <author> Sam Owre, John Rushby, Natarajan Shankar, and Friedrich von Henke. </author> <title> Formal verification for fault-tolerant architectures: Pro-legomena to the design of PVS. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 21(2) </volume> <pages> 107-125, </pages> <month> February </month> <year> 1995. </year>
Reference: [OSR93a] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> The PVS Specification Language (Beta Release). </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> February </month> <year> 1993. </year>
Reference: [OSR93b] <author> S. Owre, N. Shankar, and J. M. Rushby. </author> <title> User Guide for the PVS Specification and Verification System (Beta Release). </title> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> February </month> <year> 1993. </year>
Reference: [Par89] <author> D. Park. </author> <title> Finiteness is mu-effable. </title> <type> Technical Report 3, </type> <institution> The University of Warwick, </institution> <month> March </month> <year> 1989. </year> <note> Theory of Computation Report. </note>
Reference: [PBJ + 91] <author> Keshav Pingali, Micah Beck, Richard Johnson, Mayan Moudgill, and Paul Stodghill. </author> <title> Dependence flow graphs: An algebraic approach to program dependencies. </title> <booktitle> In 18th ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 67-78, </pages> <month> January </month> <year> 1991. </year>
Reference: [Pet81] <author> G.L. Peterson. </author> <title> Myths about the mutual exclusion problem. </title> <journal> Information Processing Letters, </journal> <volume> 12 </volume> <pages> 115-116, </pages> <year> 1981. </year>
Reference: [Raj92] <author> Sreeranga P. Rajan. </author> <title> Executing hol specifications: Towards an evaluation semantics for classical higher order logic. </title> <editor> In L. Claesen and M. Gordon, editors, </editor> <booktitle> Higher Order Logic Theorem Proving and its Applications (5th International Workshop, HUG '92), </booktitle> <address> Leuven, Bel-gium, September 1992. </address> <publisher> North-Holland. </publisher>
Reference: [Raj94a] <author> Sreeranga P. Rajan. </author> <title> Transformations in high-level synthesis: Formal specification and efficient mechanical verification. </title> <type> Technical Report SRI-CSL-94-10, </type> <institution> SRI International, </institution> <address> Menlo Park, California, </address> <month> October </month> <year> 1994. </year>
Reference: [Raj94b] <author> Sreeranga P. Rajan. </author> <title> Transformations in high level synthesis: Specification and verification. </title> <type> Technical Report NL-TN 118/94, </type> <institution> Philips Research Laboratories, Eindhoven, </institution> <address> The Netherlands, </address> <month> April </month> <year> 1994. </year>
Reference: [Raj95a] <author> Sreeranga P. Rajan. </author> <title> Correctness of transformations in high level synthesis. </title> <booktitle> In Johnson [Joh95], </booktitle> <pages> pages 597-603. </pages>
Reference-contexts: In this work, we have attempted to help accomplish the goal of correctness by construction in verifying the correctness of transformations used in dependency graph formalisms <ref> [Raj95a] </ref>. However, we have to note the distinction between the transformations as documented and intended by the informal specification and the transformations actually implemented in software. We explain this distinction in Section 9.1. In Section 9.2, we briefly present our experience in developing a formal specification from an informal document.
Reference: [Raj95b] <author> Sreeranga P. Rajan. </author> <title> Formal verification of transformations on dependency graphs in optimizing compilers. </title> <booktitle> In Proceedings of the 123 California Software Engineering Symposium. </booktitle> <institution> IRUS, University of California, Irvine, </institution> <month> March </month> <year> 1995. </year>
Reference: [RJS93] <author> Sreeranga P. Rajan, J.J. Joyce, and C-J. Seger. </author> <title> From abstract data types to shift registers. </title> <editor> In Jeffrey J. Joyce and Carl-Johan H. Seger, editors, </editor> <booktitle> Higher Order Logic Theorem Proving and its Applications (6th International Workshop, HUG '93), </booktitle> <address> Vancouver, Canada, </address> <month> August </month> <year> 1993. </year> <booktitle> Number 780 in Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference: [Ros90] <author> Lars Rossen. </author> <title> Formal ruby. </title> <editor> In J. Staunstrup, editor, </editor> <title> Formal Methods for VLSI Design. </title> <publisher> IFIP, North-Holland, </publisher> <year> 1990. </year>
Reference: [RRV95] <author> Sreeranga P. Rajan, P. Venkat Rangan, and Harrick M. Vin. </author> <title> A formal basis for structured multimedia collaborations. </title> <booktitle> In Submitted to 2nd IEEE International Conference on Multimedia Computing and Systems, </booktitle> <address> Washington, D.C., 1995. </address> <publisher> IEEE Press. </publisher>
Reference: [RSS95] <author> Sreeranga P. Rajan, N. Shankar, and M. Srivas. </author> <title> An integration of model-checking with automated proof checking. </title> <booktitle> In 7th Conference on Computer-Aided Verification, </booktitle> <month> July </month> <year> 1995. </year>
Reference: [RTJ93] <author> Kamlesh Rath, M. Esen Tuna, and Steven D. Johnson. </author> <title> An introduction to behavior tables. </title> <type> Technical report, </type> <institution> Computer Science Department, Indiana University, Bloomington, </institution> <note> IN, December 1993. No. 392. </note>
Reference: [Rus93] <author> John Rushby. </author> <title> Formal methods and certification of critical systems. </title> <type> Technical Report SRI-CSL-93-7, </type> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA, </address> <month> December </month> <year> 1993. </year> <note> Also available as NASA Contractor Report 4551, </note> <month> December </month> <year> 1993. </year>
Reference: [Sha94] <author> N. Shankar. </author> <type> Personal communication. </type> <month> October </month> <year> 1994. </year>
Reference: [SM95] <author> Mandayam K. Srivas and Steven P. Miller. </author> <title> Applying formal verification to a commercial microprocessor. </title> <booktitle> In Johnson [Joh95], </booktitle> <pages> pages 493-502. </pages>
Reference: [Smi90] <author> Douglas R. Smith. Kids: </author> <title> A semi-automatic program development system. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-16(9), </volume> <month> September </month> <year> 1990. </year>
Reference: [SOR93a] <author> N. Shankar, S. Owre, and J. M. Rushby. </author> <title> The PVS Proof Checker: </title>
References-found: 82

