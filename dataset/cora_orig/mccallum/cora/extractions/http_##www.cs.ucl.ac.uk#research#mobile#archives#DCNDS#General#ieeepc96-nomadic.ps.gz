URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/General/ieeepc96-nomadic.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mobile/archives/DCNDS/General/
Root-URL: http://www.cs.ucl.ac.uk
Title: Vision, Issues, and Architecture for Nomadic Computing  
Author: Rajive Bagrodia, Wesley W. Chu, Leonard Kleinrock and Gerald Popek 
Abstract: The pervasive nature of computing and communications is bringing about a paradigm shift in the way these technologies are being used. The shift is in the direction of nomadic computing and communications. Nomadicity refers to the system support needed to provide a rich set of computing and communication capabilities and services to the nomad as he or she moves from place to place in a transparent, integrated and convenient form. This new paradigm is already manifesting itself as users travel to many different locations with laptops, PDAs, cellular telephones, pagers, etc. In this paper we discuss a vision of nomadicit y as well as open issues, architecture and design concerns that must be addressed as we bring about the system support necessary for nomadicity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Alwan A, Bagrodia R, Bambos N, Gerla M, Kleinrock L, Short J, Villasenor J, </author> <title> Adaptive Mobile Multimedia Networks, </title> <note> submitted to IEEE Personal Communications Magazine , October 1995. </note>
Reference: [2] <author> Bagrodia R, Gerla M, Kleinrock L, Short J, Tsai T-C, </author> <title> A Hierarchical Simulation Environment for Mobile Wireless Networks, </title> <booktitle> To appear in Winter Simulation Conference 95, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: The aggregate link failure rates estimated from the preceding models were used in the coarse-grain models to study the impact of different link failure rates on system performance <ref> [ 2] </ref>. Whereas the detailed models were executed and validated for networks of small numbers of nodes, the coarse grained models could be used to quickly predict the impact of these failure rates on larger networks of many hundreds of nodes.
Reference: [3] <author> Bagrodia R, </author> <title> "Designing Efficient Simulations Using Maisie," </title> <booktitle> Winter Simulation Conference 91, </booktitle> <address> Phoenix, AZ, </address> <month> December </month> <year> 1991, </year> <pages> pp. 243-247. </pages>
Reference-contexts: The proposed modeling environment will support a parallel, hybrid, real-time simulation environment built on Maisie, a discrete-event simulation language developed at UCLA <ref> [ 3] </ref>,[4] The environment will support parallel execution of simulation models and the operational prototype of the proposed virtual networking framework in an integrated environment. Deadline-based schedulers will be incorporated to support real-time and interactive model execution.
Reference: [4] <author> Bagrodia R and Liao W, "Maisie: </author> <title> A Language for design of Efficient Discrete-Event Simulations, </title> <journal> IEEE Transactions on Software Engineering, </journal> <month> April </month> <year> 1994. </year>
Reference: [5] <author> Bagrodia R and Shen CC, </author> <title> "MIDAS: Integrated Design and Performance Evaluation of Distributed Systems", </title> <journal> IEEE Transactions on Software Engineering, </journal> <month> October </month> <year> 1991. </year>
Reference-contexts: This is clearly an onerous task detailed simulation models of complex heterogeneous systems are themselves complex and resource-intensive. An alternative is to use hybrid models a partially implemented design, where some components exist as simulation or analytic models and others as operational subsystems realized in hardware or in software <ref> [ 5] </ref>. Use of hybrid models allows an analyst to ascertain the impact of design changes in one subsystem without developing detailed simulation models of the entire system; instead certain system modules can be directly replaced by simulation models of alternative designs considerably reducing the modeling overheads. <p> In the event that the model detects insufficient network capacity for the anticipated workload, the projected file transfer activity can either be delayed or alternative protocols better suited to the network constraints may instead be invoked. A language, synchronization algorithms, and environment have been developed at UCLA <ref> [5] </ref> to support the execution of parallel hybrid models.
Reference: [6] <author> Chu WW, </author> <title> Performance of Directory Systems for Databases in Star and Distributed Networks, </title> <booktitle> AFIPS Conference Proceedings, </booktitle> <year> 1976. </year>
Reference-contexts: Further, this will also reduce the communication traffic. As a result, the RDF should be organized into a hybrid directory structure. The level of replication should be different for different data items and be based on the data update rate/access rate <ref> [6] </ref>. 4.3 Adaptive Agents Adaptive agents [ 8],[11] provide approximate matching and/or query relaxation, association and explanation during the information integration and materialization process. The relaxation agent performs query relaxation and/or approximate matching of information at different abstraction levels from heterogeneous sources.
Reference: [7] <author> Chu WW and Chen Q, </author> <title> A Structured Approach for Cooperative Query Answering, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 6(5), </volume> <month> October </month> <year> 1994. </year>
Reference: [8] <author> Chu WW and Chiang K, </author> <title> Abstraction of High Level Concepts from Numerical Values in Databases, </title> <booktitle> Proceedings of the AAAI Workshop on Knowledge Discovery in Databases, </booktitle> <address> Seattle, Washington, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Further, this will also reduce the communication traffic. As a result, the RDF should be organized into a hybrid directory structure. The level of replication should be different for different data items and be based on the data update rate/access rate [6]. 4.3 Adaptive Agents Adaptive agents <ref> [ 8] </ref>,[11] provide approximate matching and/or query relaxation, association and explanation during the information integration and materialization process. The relaxation agent performs query relaxation and/or approximate matching of information at different abstraction levels from heterogeneous sources. <p> The weighted mean error can be used as the similarity measure. 4.3.2 Knowledge Discovery from Databases The TAH can be generated automatically from relational databases for both numerical and nonnumerical attribute values <ref> [ 8] </ref>,[26]. It can be applied to structure data (e.g. relational database) as well as to feature based image data ( e.g. spatial and temporal features). The computation time required to generate the TAH increases approximately on the order of the square of the number of tuples.
Reference: [9] <author> Chu WW, Chen Q, and Lee R, </author> <title> Cooperative Query Answering via Type Abstraction Hierarchy, In : Cooperative Knowledge Based System, S.M. </title> <editor> Dean, ed., </editor> <publisher> Elsevier Science Publication Inc., </publisher> <year> 1991. </year>
Reference-contexts: For each database attribute type, its TAH is a classification hierarchy of its possible values <ref> [9] </ref>. Operations are provided to traverse the hierarchy, such as generalization (up) and specialization (down). The agent is able to transform lower-level, heterogeneous distributed data and knowledge into a higher level of abstraction as shown in Figure 4.1.
Reference: [10] <author> Chu WW, Merzbacher M, and Berkovich L, </author> <booktitle> The Design and Implementation of CoBase, SIGMOD `93, </booktitle> <month> May </month> <year> 1993, </year> <pages> pp. 517-522. </pages>
Reference: [11] <author> Chu WW, Yang H, Chiang, K. et al, CoBase: </author> <title> A Scaleable and Extensible Cooperative Information System, </title> <note> 1995 (submitted for publication). </note>
Reference-contexts: KQML [13]) can be used to communicate with each other. New performatives as well as algorithms need to be developed for performing negotiations, process binding, recovery, and commitments. Agents may be replicated and reused; our proposed cooperative agent architecture has a scaleable infrastructure as shown in Figure 4.3 <ref> [11] </ref> to support multi-adaptive agent processing for nomadic information systems.
Reference: [12] <author> Computer Science and Telecommunications Board, </author> <title> Realizing the Information Future: The Internet and Beyond, </title> <publisher> National Academy Press, </publisher> <address> Washington, DC, </address> <year> 1994. </year>
Reference-contexts: We are now in the midst of an accelerating groundswell in this field of computer-communications in its largest sense (i.e., not simply the wires and networks, but also the infrastructure, the middleware, the applications, the uses and users of the technology) <ref> [12] </ref>. Witness the fact that the Internet is now a household word. <p> Indeed, we emphasize that much of the action for nomadic computing takes place at the middleware level of the commonly accepted layered architecture. One version of that layered architecture, as put forward in <ref> [12] </ref> is shown in Figure 2.1 below. In this figure we clearly see the middleware level between the applications level and the transport level. Most of the functionality we describe will be found at this level.
Reference: [13] <author> Finin TW, Weber J, Wiederhold G, Genesereth M et al, </author> <title> Specification of the KQML agent-communication language, plus example agent policies and architectures, Prepared by the ARPA Knowledge Sharing Initiative External Interfaces Working Group, </title> <month> June </month> <year> 1993. </year>
Reference-contexts: The agents have uniform logical interfaces and can be interconnected to achieve a common task. Each agent can use the output of other agents as input. Standard agent protocol (e.g. KQML <ref> [13] </ref>) can be used to communicate with each other. New performatives as well as algorithms need to be developed for performing negotiations, process binding, recovery, and commitments.
Reference: [14] <author> Fouque G, Chu WW, and Yau H, </author> <title> A Case-Based Reasoning Approach for Associative Query Answering, </title> <booktitle> Proceedings of the 8th International Symposium on Methodologies for Intelligent Systems, </booktitle> <address> Charlotte, North Carolina, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: The association agent uses patterns (query conditions) to link relevant subjects. Such an approach provides a match with a finer granularity rather than that of using type. We use a case based 18 reasoning approach to match the user query with previous cases for association <ref> [14] </ref>. To reduce the number of cases stored in the case memory, similar cases are summarize d in accordance with the TAH. Thus, the user query may be matched with similar cases in the case memory.
Reference: [15] <author> Jefferson, D. J., </author> <title> Virtual Time, </title> <journal> ACM TOPLAS, </journal> <year> 1970), </year> <pages> pp. 404-425. </pages>
Reference-contexts: The partitions must be synchronized to ensure that incoming signals at each partition are processed in their correct global order. Three primary synchronization mechanisms have been used: the conservative parallel discrete-event simulation (PDES) protocols [ 27], the optimistic PDES protocols <ref> [15 ] </ref>, and the recently proposed adaptive protocol that combines the hitherto disparate protocols [19]. No single parallel synchronization protocol or parallel architecture has been found to be efficient for all types of models.
Reference: [16] <author> Gerla, M. and J.Tsai, </author> <title> Multicluster Mobile Multimedia Network, </title> <journal> ACM, Baltzer Journal of Wireless Networks, </journal> <month> August </month> <year> 1995. </year> <month> 26 </month>
Reference-contexts: strategy proposed for a user-level replicated file system called Rumor. 5.3.1 Instant Infrastructure Protocol The creation of instant network infrastructure that is able to maintain communication, perhaps via a topological reconfiguration in the face of mobility, node failures, and environmental changes is a central feature of a nomadic computing environment <ref> [16] </ref>. Such protocols typically use a clustering algorithm to dynamically group and assign CDMA codes to groups of users and to provide local synchronization among the nodes. They can also support multimedia (voice, video, and data) traffic through special protocols which provide bandwidth allocation via virtual circuits.
Reference: [17] <author> Heidemann, J. S., Page, T. W. Jr., Guy, R. and G. J. Popek. </author> <title> Primarily disconnected operation: </title> <booktitle> Experiences with Ficus . Proceedings of the Second Workshop on Management of Replicated Data, </booktitle> <pages> pages 2-5. </pages> <publisher> IEEE, </publisher> <month> November </month> <year> 1992. </year>
Reference-contexts: In fact, the necessity to replicate information storage introduces a number of issues to address. Below, we survey some of those issues, and briefly consider approaches to solution. 3.1 Optimistic Update It is a conventional wisdom that, at least for many files and applications, concurrent update is quite rare <ref> [17] </ref>, [21], [23] [25,[29]. If this pattern is generally true in practice, and those rare problems which do occur can be corrected by reasonable means, then this entire approach has promise.
Reference: [18] <author> Jain R, Short J, Kleinrock L, and Villasenor J, </author> <title> "PC-notebook Based Mobile Networking: Algorithms, </title> <note> Architectures and Implementations" to appear in ICC '95, </note> <month> June </month> <year> 1995 </year>
Reference: [19] <author> Jha V and Bagrodia R, </author> <title> A Unified Framework for Conservative and Optimistic Distributed Simulation, </title> <booktitle> 1994 Workshop on Parallel and Distributed Simulation, </booktitle> <address> Edinburgh, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Three primary synchronization mechanisms have been used: the conservative parallel discrete-event simulation (PDES) protocols [ 27], the optimistic PDES protocols [15 ], and the recently proposed adaptive protocol that combines the hitherto disparate protocols <ref> [19] </ref>. No single parallel synchronization protocol or parallel architecture has been found to be efficient for all types of models. Maisie is among the very few simulation environments that support a diverse set of protocols and parallel architectures.
Reference: [20] <author> Katz RH, </author> <title> Adaptation and Mobility in Wireless Information Systems, </title> <journal> IEEE Personal Communications Magazine, </journal> <volume> Vol. 1, No. 1, </volume> <booktitle> (First Quarter, </booktitle> <year> 1994), </year> <pages> pp. 6-17 </pages>
Reference: [21] <author> Kistler J, </author> <title> Disconnected Operation in a Distributed File System. </title> <type> Ph.D. dissertation, </type> <institution> Carnegie-Mellon University, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Below, we survey some of those issues, and briefly consider approaches to solution. 3.1 Optimistic Update It is a conventional wisdom that, at least for many files and applications, concurrent update is quite rare [17], <ref> [21] </ref>, [23] [25,[29]. If this pattern is generally true in practice, and those rare problems which do occur can be corrected by reasonable means, then this entire approach has promise. <p> Note however that the user is not best able to specify the content of a tasks information cluster, as users are often not even aware of what files, utilities, linked information, and the like are in use on his or her behalf <ref> [21] </ref> Fortunately, the system can be of considerable aid in this respect [27] Therefore, we expect that an effective predictive caching system can be developed, which together with the user can effectively decide what files should be replicated for the mobile user. 3.3 Network Naming Navigation Once the desired files are
Reference: [22] <author> Kleinrock L, </author> <title> Nomadic Computing An Opportunity, </title> <journal> ACM SIGCOMM Computer Communication Review, </journal> <volume> Vol. 25, No. 1, </volume> <pages> pp. 36-40, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: However, Some of the ideas presented in this section were developed with the Nomadic Working Team (NWT) of the Cross Industrial Working Team (XIWT); one of the present authors (LK) is the chairman of the NWT [28]. In addition, portions of this section were described in <ref> [22] </ref>. 4 some of the interfaces to the network technology substrate refer to functionality at the Bearer Service level. 2.1 System Parameters Some of the key system parameters with which one must be concerned include: bandwidth; latency; reliability; error rate; delay; storage; processing power; interference; interoperability; user interface; etc.
Reference: [23] <editor> Kuenning GH, </editor> <booktitle> Design of the SEER predictive caching system , Proceedings of the Workshop on Mobile Computing Systems and Applications , Santa Cruz, </booktitle> <address> CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: In this section, then, we concentrate on what can be done to supply the users desired information ahead of time, so that poor or nonexistent communications does not interfere with continued operation. A variety of investigations, most recently at Locus Computing Corporation, <ref> [ 23] </ref> have demonstrated that for most users, todays PC disks are quite capable of storing the information and tools which the user will need for the next several weeks . An important question of course, is which information to place in local copies. <p> Below, we survey some of those issues, and briefly consider approaches to solution. 3.1 Optimistic Update It is a conventional wisdom that, at least for many files and applications, concurrent update is quite rare [17], [21], <ref> [23] </ref> [25,[29]. If this pattern is generally true in practice, and those rare problems which do occur can be corrected by reasonable means, then this entire approach has promise.
Reference: [24] <author> Kuenning GH, Popek GJ and Reiher P, </author> <title> An analysis of trace data for predictive file caching in mobile computing, </title> <booktitle> USENIX Conference Proceedings , pages 291-306. USENIX, </booktitle> <month> June </month> <year> 1994. </year>
Reference: [25] <editor> Kumar P, Satyanarayanan M, </editor> <booktitle> Supporting applicationspecific resolution in an optimistically replicated file system , Proceedings of the Fourth Workshop on Workstation Operating Systems, </booktitle> <pages> pages 66-70, </pages> <address> Napa, CA, </address> <month> October </month> <year> 1993. </year> <note> IEEE. </note>
Reference: [26] <author> Minock M and Chu WW, </author> <title> Interactive Explanation for Cooperative Information Systems, </title> <institution> UCLA Computer Science Technical Report, 1995.. </institution>
Reference-contexts: The relaxation agent performs query relaxation and/or approximate matching of information at different abstraction levels from heterogeneous sources. The association agent provides relevant information to the users or applications that the user does not explicitly (or does not know how to) ask. The explanation agent <ref> [26] </ref> provides explanation to the user about the relaxation process and the quality (security, accuracy, etc.) and cost (time, price, etc.) to the answers. <p> Based on the user profiles, the agent generates the appropriate explanation text of the relaxation and association processes as well as the quality in terms of accuracy, and cost of the answer to the user <ref> [26] </ref>. The agents have uniform logical interfaces and can be interconnected to achieve a common task. Each agent can use the output of other agents as input. Standard agent protocol (e.g. KQML [13]) can be used to communicate with each other.
Reference: [27] <author> Misra J, </author> <title> Distributed Discrete-Event Simulation, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 18, No.1, </volume> <month> March </month> <year> 1986, </year> <pages> pp. 39-65. </pages>
Reference-contexts: user is not best able to specify the content of a tasks information cluster, as users are often not even aware of what files, utilities, linked information, and the like are in use on his or her behalf [21] Fortunately, the system can be of considerable aid in this respect <ref> [27] </ref> Therefore, we expect that an effective predictive caching system can be developed, which together with the user can effectively decide what files should be replicated for the mobile user. 3.3 Network Naming Navigation Once the desired files are resident on the mobile computer, the issue arises how they are to <p> For parallel implementations, the discrete-event model is partitioned among multiple processors. The partitions must be synchronized to ensure that incoming signals at each partition are processed in their correct global order. Three primary synchronization mechanisms have been used: the conservative parallel discrete-event simulation (PDES) protocols <ref> [ 27] </ref>, the optimistic PDES protocols [15 ], and the recently proposed adaptive protocol that combines the hitherto disparate protocols [19]. No single parallel synchronization protocol or parallel architecture has been found to be efficient for all types of models.
Reference: [28] <institution> Nomadic Working Team of the Cross Industrial Working Team, </institution> <month> Nomadicity: </month> <title> Characteristics, </title> <booktitle> Issues, and Applications, </booktitle> <year> 1995. </year>
Reference-contexts: Most of the functionality we describe will be found at this level. However, Some of the ideas presented in this section were developed with the Nomadic Working Team (NWT) of the Cross Industrial Working Team (XIWT); one of the present authors (LK) is the chairman of the NWT <ref> [28] </ref>.
Reference: [29] <author> Reiher P, Heidemann JS, Ratner D., Skinner G, and Popek GJ, </author> <title> Resolving file conflicts in the Ficus file system, </title> <booktitle> USENIX Conference Proceedings, </booktitle> <pages> pages 183-195. </pages> <publisher> USENIX, </publisher> <month> June </month> <year> 1994. </year>
Reference: [30] <author> Rekhi K, </author> <title> private communication. </title>
Reference-contexts: Novell recently estimated that 70% of the total cost of ownership of computers that are part of a corporate network lay in their administrative support, rather than the hardware or software purchases themselves <ref> [ 30] </ref>. Even for higher priced workstations, Sun Microsystems estimated that at least half of the cost is administrative in nature [31]. Mobile computing exacerbates this problem. Unlike tethered networks, the mobile machine may often be disconnected when problems or administrative actions arise.
Reference: [31] <author> Rosenthal D, </author> <title> private communication </title>
Reference-contexts: Even for higher priced workstations, Sun Microsystems estimated that at least half of the cost is administrative in nature <ref> [31] </ref>. Mobile computing exacerbates this problem. Unlike tethered networks, the mobile machine may often be disconnected when problems or administrative actions arise. The problem once again concerns access to information.
Reference: [32] <author> Satyanarayanan M., Kistler JJ, </author> <title> Mummert LB, Ebling MR, Kumar P, and Lu Q, </title> <booktitle> Experience with disconnected operation in a mobile computing environment Proceedings of the USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <pages> pages 11-28, </pages> <address> Cambridge, MA, </address> <month> August </month> <year> 1993. </year> <booktitle> USENIX. </booktitle>
Reference: [33] <author> Short J, Bagrodia R, and Kleinrock L, </author> <title> "Mobile Wireless Network System Simulation", </title> <booktitle> Proceedings of the 1995 ACM International Conference on Mobile Computing & Networking, </booktitle> <address> Berkeley, CA, </address> <month> November </month> <year> 1995, </year> <note> (to appear). </note>
Reference: [34] <author> Tait CD, Lei H, Acharya S, and Chang H, </author> <title> Intelligent file hoarding for mobile computers, </title> <booktitle> Proceedings of the MobiCom 95: The First International Conference on Mobile Computing and Networking, </booktitle> <address> Berkeley, CA, </address> <month> November </month> <year> 1995. </year> <month> 27 </month>
Reference: [35] <author> Weiser M, </author> <booktitle> "The Computer for the 21st Century", </booktitle> <publisher> Scientific American, </publisher> <month> September </month> <year> 1991, </year> <pages> pp. 94-104. </pages>
References-found: 35

