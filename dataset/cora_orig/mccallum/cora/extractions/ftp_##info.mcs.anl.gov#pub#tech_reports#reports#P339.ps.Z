URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P339.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/preprints.htm
Root-URL: http://www.mcs.anl.gov
Title: AUTOMATIC DIFFERENTIATION OF ADVANCED CFD CODES FOR MULTIDISCIPLINARY DESIGN  
Author: C. Bischof and G. Corliss L. Green A. Griewank K. Haigler and P. Newman 
Keyword: C D Wing drag coefficient C L Wing lift coefficient C M Wing pitching moment coefficient D Generic sensitivity derivative J Jacobian matrix M Free stream Mach number P Preconditioner matrix R Residual vector for flow equations Re Reynold's number (mean chord) S Seed matrix Design variable Discrete mesh coordinates Local flow (state) variable ff Angle-of-attack ae Spectral radius Subscripts AD Automatic differentiation DD Divided difference m Iteration index Partial derivative w.r.t. Partial derivative w.r.t. Partial derivative w.r.t. Root of R 0 or iteration-fixed-point Superscripts 0 (prime) Total derivative w.r.t. (tilde) Approximate operator  
Web: CCR-9120008.  
Note: subprogram of the Office of Energy Research, U. S. Department of Energy, under Contract W-31-109-Eng-38. 2 This work was supported by the National Science Foundation under Cooperative Agreement Number  2 Introduction 3 Those without published proceedings include the 1992 AIAA/AHS/ASEE Aerospace Design Conference, Feb. 1992, and the AIAA Aircraft Design Systems Meeting, Aug. 1992.  
Address: Argonne Preprint MCS-P339-1192  
Affiliation: Argonne National Laboratory, Argonne, Illinois  NASA Langley Research Center, Hampton, Virginia  Argonne National Laboratory, Argonne, Illinois  NASA Langley Research Center, Hampton, Virginia  
Abstract: Automated multidisciplinary design of aircraft and other flight vehicles requires the optimization of complex performance objectives with respect to a number of design parameters and constraints. The effect of these independent design variables on the system performance criteria can be quantified in terms of sensitivity derivatives which must be calculated and propagated by the individual discipline simulation codes. Typical advanced CFD analysis codes do not provide such derivatives as part of a flow solution; these derivatives are very expensive to obtain by divided (finite) differences from perturbed solutions. It is shown here that sensitivity derivatives can be obtained accurately and efficiently by using the ADIFOR source translator for automatic differentiation. In particular, it is demonstrated that the 3-D, thin-layer Navier-Stokes, multigrid flow solver called TLNS3D is amenable to automatic differentiation in the forward mode even with its implicit iterative solution algorithm and complex turbulence modeling. It is significant that, using computational differentiation, consistent discrete nongeometric sensitivity derivatives have been obtained from an aerodynamic 3-D CFD code in a relatively short time, e.g. O(man-week) not O(man-year). In the past, design of flight vehicles typically required the interaction of many technical disciplines over an extended period of time in a more or less sequential manner. At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], [10, 12, 34, 35, 54, 55] for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures. Advances in computer hardware and software, electronic communications, and discipline solution algorithms and codes will individually contribute; however, true synergisms may be required to make it all feasible. This paper addresses one such synergism for computa 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. M. Adelman and R. T. Haftka, </author> <title> editors. </title> <booktitle> Proceedings of the Symposium on Sensitivity Analysis in Engineering, </booktitle> <institution> NASA Langley Research Center, Hamp-ton, VA, </institution> <month> Sept. </month> <year> 1986. </year> <institution> NASA CP-2457, </institution> <year> 1987. </year>
Reference: [2] <author> AGARD. </author> <title> Computational Methods for Aerodynamic Design (Inverse) and Optimization, </title> <address> Loen, Norway. AGARD-CP-463, </address> <month> May </month> <year> 1989. </year>
Reference: [3] <author> Twenty-Ninth AIAA/ASME/ASCE/AHS/ASC Structures, </author> <title> Structural Dynamics and Materials Conference, A Collection of Technical Papers. </title> <address> Williams-burg, VA. AIAA CP-882, </address> <month> Apr. </month> <year> 1988. </year>
Reference: [4] <author> Thirtieth AIAA/ASME/ASCE/AHS/ASC Structures, </author> <title> Structural Dynamics and Materials Conference, A Collection of Technical Papers. Mobile, </title> <editor> AL. AIAA CP-891, </editor> <month> Apr. </month> <year> 1989. </year>
Reference: [5] <author> Thirty-First AIAA/ASME/ASCE/AHS/ASC Structures, </author> <title> Structural Dynamics and Materials Conference, A Collection of Technical Papers. </title> <address> Long Beach, CA. AIAA CP-902, </address> <month> Apr. </month> <year> 1990. </year>
Reference: [6] <author> Thirty-Second AIAA/ASME/ASCE/AHS/ASC Structures, </author> <title> Structural Dynamics and Materials Conference, A Collection of Technical Papers. </title> <institution> Baltimore, MD. AIAA CP-911, </institution> <month> Apr. </month> <year> 1991. </year>
Reference: [7] <institution> Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, </institution> <note> A Collection of Technical Papers, </note> <editor> Cleveland, OH. B B B k AIAA CP-9213, </editor> <month> Sept. </month> <year> 1992. </year>
Reference: [8] <author> Thirty-Third AIAA/ASME/ASCE/AHS/ASC Structures, </author> <title> Structural Dynamics and Materials Conference, A Collection of Technical Papers. </title> <institution> Dallas, TX. AIAA CP-922, </institution> <month> Apr. </month> <year> 1992. </year>
Reference: [9] <author> B. Averick, R. G. Carter, and J. J. </author> <title> More. The MINPACK-2 test problem collection (preliminary version). </title> <type> Technical Report ANL/MCS-TM-150, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1991. </year>
Reference-contexts: A third goal is improved vectorization and parallelism of the derivative code, so that their runtime is at worst equal to that of the original code multiplied by the num 10 ber of design parameters. For standard test problems <ref> [9] </ref> ADIFOR achieves and undercuts this bound regularly on scalar and super-scalar chips but, as in the case of TLNS3D on a CRAY Y-MP, the situation is currently much less favorable on vector machines.
Reference: [10] <editor> J. F. Barthelemy, editor. </editor> <booktitle> Second NASA/Air Force Symposium on Recent Advances in Multidisciplinary Analysis and Optimization, </booktitle> <address> Hampton, VA, </address> <month> Sept. </month> <year> 1989. </year> <institution> NASA CP-3031, </institution> <year> 1989. </year>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures.
Reference: [11] <author> J. F. Barthelemy, and L. Hall. </author> <title> Automatic differentiation as a tool in engineering design. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 424-432. </pages> <address> AIAA 92-4743-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Second derivatives might eventually be useful for the application of higher order optimization methods in MDO. For a recent review of AD techniques and tools in the context of engineering design see <ref> [11] </ref>. An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in [18]. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) [15, 19, 16, 14] provides automatic differentiation for programs written in Fortran 77.
Reference: [12] <editor> O. Baysal, editor. </editor> <booktitle> Symposium on Multidisciplinary Applications of Computational Fluid Dynamics. FED-Vol. 129, ASME Winter Annual Meeting, </booktitle> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures.
Reference: [13] <author> O. Baysal, M. E. Eleshaky, and G. W. Burgreen. </author> <title> Aerodynamic shape optimization using sensitivity analysis on third-order Euler equations. </title> <booktitle> In Proceedings of the AIAA Tenth Computational Fluid Dynamics Conference, </booktitle> <pages> pages 573-583. </pages> <address> AIAA 91-1577-CP, </address> <month> June </month> <year> 1991. </year>
Reference: [14] <author> C. H. Bischof, A. Carle, G. F. Corliss, and A. Griewank. ADIFOR: </author> <title> Automatic differentiation in a source translator environment. </title> <editor> In Paul Wang, editor, </editor> <booktitle> International Symposium on Symbolic and Algebraic Computing 92, </booktitle> <pages> pages 294-302. </pages> <publisher> ACM, </publisher> <address> Washington, D.C., </address> <year> 1992. </year>
Reference-contexts: An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in [18]. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) <ref> [15, 19, 16, 14] </ref> provides automatic differentiation for programs written in Fortran 77.
Reference: [15] <author> C. H. Bischof, A. Carle, G. F. Corliss, A. Griewank, and P. Hovland. ADIFOR: </author> <title> Generating derivative 11 codes from Fortran programs. </title> <journal> Scientific Program--ming, </journal> <volume> 1(1) </volume> <pages> 1-29, </pages> <year> 1992. </year>
Reference-contexts: An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in [18]. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) <ref> [15, 19, 16, 14] </ref> provides automatic differentiation for programs written in Fortran 77.
Reference: [16] <author> C. H. Bischof, G. F. Corliss, and A. Griewank. </author> <title> AD-IFOR exception handling. </title> <note> ADIFOR Working Note #3, </note> <institution> MCS-TM-159, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1991. </year>
Reference-contexts: An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in [18]. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) <ref> [15, 19, 16, 14] </ref> provides automatic differentiation for programs written in Fortran 77.
Reference: [17] <author> C. H. Bischof, G. F. Corliss, and A. Griewank. </author> <title> Computing second- and higher-order derivatives through univariate Taylor series. </title> <note> ADIFOR Working Note #6, </note> <institution> MCS-P296-0392, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1992. </year>
Reference-contexts: When there are several independent and dependent variables the operations count for evaluating the Jacobians may be lowest for certain mixed strategies [44] rather than the forward or reverse mode. AD can also be extended for the accurate evaluation of second and higher derivatives <ref> [27, 42, 26, 17] </ref>. Second derivatives might eventually be useful for the application of higher order optimization methods in MDO. For a recent review of AD techniques and tools in the context of engineering design see [11].
Reference: [18] <author> C. H. Bischof and A. Griewank. ADIFOR: </author> <title> A Fortran system for portable automatic differentiation. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 433-441. </pages> <address> AIAA 92-4744-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: This paper discusses and documents the initial application of an AD system to advanced CFD codes in order to obtain SD typical of those required in an MDO. The general ideas and direction of this work, including a sample result, have been outlined in [56] and <ref> [18] </ref>. As will be seen, the initial results given here are both significant and encouraging; but challenges remain. <p> For a recent review of AD techniques and tools in the context of engineering design see [11]. An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in <ref> [18] </ref>. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) [15, 19, 16, 14] provides automatic differentiation for programs written in Fortran 77.
Reference: [19] <author> C. H. Bischof and P. Hovland. </author> <title> Using ADIFOR to compute dense and sparse Jacobians. </title> <note> ADIFOR Working Note #2, </note> <institution> MCS-TM-158, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1991. </year>
Reference-contexts: An introduction to the Fortran tool ADIFOR and some preliminary numerical results on a 2-D small-disturbance model of transonic flow are given in [18]. 4.1 An Advanced FORTRAN Tool ADIFOR (Automatic Differentiation of Fortran) <ref> [15, 19, 16, 14] </ref> provides automatic differentiation for programs written in Fortran 77.
Reference: [20] <author> C. H. Bischof, A. Carle, G. Corliss, A. Griewank, and P. Hovland. </author> <title> Getting started with ADIFOR. </title> <note> ADI-FOR Working Note #9, </note> <institution> ANL-MCS-TM-164, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1992. </year>
Reference-contexts: Given a Fortran subroutine (or collection of subroutines) describing a "function," and an indication of which variables in parameter lists or common blocks correspond to "independent" and "dependent" variables with respect to differentiation <ref> [20] </ref>, AD-IFOR produces Fortran 77 code that allows the computation of the derivatives of the dependent variables with respect to the independent ones. ADIFOR employs a hybrid of the forward and reverse modes of automatic differentiation [43].
Reference: [21] <author> C. H. Bischof, A. Carle, G. F. Corliss, J. Dennis, A. Griewank, and K. Williamson. </author> <title> Derivative convergence for iterative equation solvers. </title> <institution> ANL-MCS-P333-1192, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1992. </year>
Reference-contexts: These are now the state of the art in 3-D CFD codes (for example [71]), despite the lack of a convergence theory under realistic assumptions. In the following section, some theoretical results from a forthcoming paper <ref> [21] </ref> are summarized; these theoretical considerations make the numerical observations of Section 5 at least plausible, even though they do not apply directly to multigrid methods in their current form. 4.2 Differentiating Implicit Functions Large-scale codes in scientific computing frequently embody iterative solution schemes. <p> Conceptually, one may remove the stopping criterion completely to obtain infinite sequences of iterates z m and derivative approximations z 0 m , which have been shown in <ref> [21] </ref> to converge R-linearly in that kz m z fl k + kz 0 fl k ae m ! 0 : This result was originally obtained by Gilbert [40] and Christianson [26] for the case of Newton's method and similar smooth fixed point iterations. <p> Recently, we have been able to extend these results (see the forthcoming paper <ref> [21] </ref>) to quasi-Newton methods, where the derivatives P 0 m may grow unbounded but P 0 m R m still tends to zero, because of the superlinear rate of convergence. Whenever the iterates themselves converge superlinearly there is the danger that the R-linearly convergent derivative approximations may lag behind. <p> In large scale applications, a reasonable linear rate is often the best one can achieve, so that the asymptotic rate of convergence is likely to be the same. For even more general preconditioners P m , it is shown in <ref> [21] </ref> that the simple setting P 0 m = 0 ensures conver gence to the desired derivative value z 0 fl at the same R-linear rate, provided condition (7) is satisfied.
Reference: [22] <author> G. Burgreen, O. Baysal, and M. Eleshaky. </author> <title> Improving the efficiency of aerodynamic shape optimization procedures. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleve-land, OH, </address> <pages> pages 87-97. </pages> <address> AIAA 92-4697-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference: [23] <author> H. Cabuk, C.-H. Sung, and V. Modi. </author> <title> Adjoint operator approach to shape design for internal incompressible flows. </title> <booktitle> In Proceedings of Third International Conference on Inverse Design Concepts and Optimizations in Engineering Sciences ICIDES-III, Washing-ton, DC, </booktitle> <pages> pages 391-404. </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [24] <author> D. Callahan, K. Cooper, R. T. Hood, K. Kennedy, and L. M. Torczon. </author> <title> ParaScope: A parallel programming environment. </title> <journal> International Journal of Supercomputer Applications, </journal> <volume> 2(4), </volume> <month> Dec. </month> <year> 1988. </year>
Reference-contexts: The resulting decrease in complexity compared to an entirely forward mode implementation usually is substantial. In contrast to some earlier AD implementations [51] the source translator ADIFOR was designed from the outset with large-scale codes in mind. It uses the facilities of the ParaScope Fortran environment <ref> [24, 25] </ref> to parse the code and to extract control flow and dependence flow information. ADIFOR produces portable Fortran 77 code and accepts almost all of Fortran 77| in particular, arbitrary calling sequences, nested subroutines, common blocks, and equivalences.
Reference: [25] <author> A. Carle, K. D. Cooper, R. T. Hood, K. Kennedy, L. Torczon, and S. K. Warren. </author> <title> A practical environment for scientific programming. </title> <journal> IEEE Computer, </journal> 20(11) 75-89, Nov. 1987. 
Reference-contexts: The resulting decrease in complexity compared to an entirely forward mode implementation usually is substantial. In contrast to some earlier AD implementations [51] the source translator ADIFOR was designed from the outset with large-scale codes in mind. It uses the facilities of the ParaScope Fortran environment <ref> [24, 25] </ref> to parse the code and to extract control flow and dependence flow information. ADIFOR produces portable Fortran 77 code and accepts almost all of Fortran 77| in particular, arbitrary calling sequences, nested subroutines, common blocks, and equivalences.
Reference: [26] <author> B. D. Christianson. </author> <title> Reverse accumulation and accurate rounding error estimates for Taylor series coefficients. </title> <journal> Optimization Methods and Software, </journal> <volume> 1(1) </volume> <pages> 81-94, </pages> <year> 1992. </year>
Reference-contexts: When there are several independent and dependent variables the operations count for evaluating the Jacobians may be lowest for certain mixed strategies [44] rather than the forward or reverse mode. AD can also be extended for the accurate evaluation of second and higher derivatives <ref> [27, 42, 26, 17] </ref>. Second derivatives might eventually be useful for the application of higher order optimization methods in MDO. For a recent review of AD techniques and tools in the context of engineering design see [11]. <p> obtain infinite sequences of iterates z m and derivative approximations z 0 m , which have been shown in [21] to converge R-linearly in that kz m z fl k + kz 0 fl k ae m ! 0 : This result was originally obtained by Gilbert [40] and Christianson <ref> [26] </ref> for the case of Newton's method and similar smooth fixed point iterations.
Reference: [27] <author> B. D. Christianson. </author> <title> Automatic Hessians by reverse accumulation. </title> <type> Technical Report NOC TR228, </type> <institution> The Numerical Optimisation Center, Hatfield Polytechnic, Hatfield, U.K., </institution> <month> Apr. </month> <year> 1990. </year>
Reference-contexts: When there are several independent and dependent variables the operations count for evaluating the Jacobians may be lowest for certain mixed strategies [44] rather than the forward or reverse mode. AD can also be extended for the accurate evaluation of second and higher derivatives <ref> [27, 42, 26, 17] </ref>. Second derivatives might eventually be useful for the application of higher order optimization methods in MDO. For a recent review of AD techniques and tools in the context of engineering design see [11].
Reference: [28] <author> P. G. Coen. </author> <title> Recent results from the high-speed airframe integration research project. </title> <type> AIAA Paper 92-4717, </type> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: The present interest and work have been stimulated by two research programs related to incorporating advanced CFD capabilities in MDO. The NASA Langley Research Center High-Speed Airframe Integration Research (Hi-SAIR) project <ref> [32, 29, 28] </ref> is focused on the High-Speed Civil Transport (HSCT) design activity in order to develop a methodology and computational environment for multidisciplinary analysis and design.
Reference: [29] <author> P. G. Coen, J. S-. Sobieski, and S. Dollyhigh. </author> <title> Preliminary results from the high-speed airframe integrated research project. </title> <type> AIAA Paper 92-1004, </type> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The present interest and work have been stimulated by two research programs related to incorporating advanced CFD capabilities in MDO. The NASA Langley Research Center High-Speed Airframe Integration Research (Hi-SAIR) project <ref> [32, 29, 28] </ref> is focused on the High-Speed Civil Transport (HSCT) design activity in order to develop a methodology and computational environment for multidisciplinary analysis and design.
Reference: [30] <author> T. F. Coleman, B. S. Garbow, and J. J. </author> <title> More. Software for estimating sparse Jacobian matrices. </title> <journal> ACM Trans. Math. Software, </journal> <volume> 10:329 - 345, </volume> <year> 1984. </year>
Reference-contexts: Therefore, if S is the identity, ADIFOR computes the full Jacobian; whereas if S is just a vector, ADIFOR computes the product of the Jacobian by a vector. "Compressed" versions of sparse Jacobians can be computed by exploiting the same graph coloring techniques <ref> [31, 30] </ref> that are used for DD approximations of sparse Jacobians. The runtime and storage requirements of the ADIFOR-generated code are roughly proportional to the number of columns of S.
Reference: [31] <author> T. F. Coleman and J. J. </author> <title> More. Estimation of sparse Jacobian matrices and graph coloring problems. </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 20:187 - 209, </volume> <year> 1984. </year>
Reference-contexts: Therefore, if S is the identity, ADIFOR computes the full Jacobian; whereas if S is just a vector, ADIFOR computes the product of the Jacobian by a vector. "Compressed" versions of sparse Jacobians can be computed by exploiting the same graph coloring techniques <ref> [31, 30] </ref> that are used for DD approximations of sparse Jacobians. The runtime and storage requirements of the ADIFOR-generated code are roughly proportional to the number of columns of S.
Reference: [32] <author> S. Dollyhigh and J. S-. Sobieski. </author> <title> Recent experience with multidisciplinary analysis and optimization in advanced aircraft design. </title> <booktitle> In Third Air Force/NASA Symposium on Recent Advances in Multidisciplinary Analysis and Optimization. A Collection of Technical Papers, </booktitle> <address> San Francisco, CA, </address> <pages> pages 404-411. </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: The present interest and work have been stimulated by two research programs related to incorporating advanced CFD capabilities in MDO. The NASA Langley Research Center High-Speed Airframe Integration Research (Hi-SAIR) project <ref> [32, 29, 28] </ref> is focused on the High-Speed Civil Transport (HSCT) design activity in order to develop a methodology and computational environment for multidisciplinary analysis and design.
Reference: [33] <author> M. Drela. </author> <title> Viscous and inviscid schemes using New-ton's method. In Special Course on Inverse Methods for Airfoil Design for Aeronautical and Turbo-machinery Applications, </title> <note> pages 9-1 to 9-16. AGARD Report No. 780, May1990. </note>
Reference: [34] <editor> G. S. Dulikravich, editor. </editor> <booktitle> Proceedings Second International Conference on Inverse Design Concepts and Optimization in Engineering Sciences ICIDES-II, </booktitle> <address> University Park, PA. </address> <month> Oct. </month> <year> 1987. </year> <month> 12 </month>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures.
Reference: [35] <editor> G. S. Dulikravich, editor. </editor> <booktitle> Proceedings, Third Inter--national Conference on Inverse Design Concepts and Optimization in Engineering Sciences ICIDES-III, </booktitle> <address> Washington, DC. </address> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures.
Reference: [36] <author> G. S. Dulikravich. </author> <title> Aerodynamic shape design and optimization. </title> <journal> AIAA Paper No. </journal> <pages> 91-0476, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [37] <author> H.M. Elbanna and L.A. Carlson. </author> <title> Determination of aerodynamic sensitivity coefficients based on the small perturbation formulation. </title> <journal> J. Aircraft, </journal> <volume> 27(6): </volume> <pages> 507-515, </pages> <year> 1990. </year> <note> (Also appeared as AIAA Paper 89-0532.) </note>
Reference-contexts: agree quite well with DD and therefore convey meaningful sensitivity information even for the turbulent case. 5.1 2-D Transonic Small Disturbance The first iterative code to which ADIFOR was applied for evaluating derivatives of an implicitly defined function was the 2-D transonic small disturbance code TAMRF of Elbana and Carlson <ref> [37] </ref>. The grid used by that code is stretched Cartesian and does not change with shape variations; such modifications are reflected in the flow boundary conditions. <p> This particular code was selected because it had been differentiated "by hand" to obtain SD and because it had many characteristics typical of nonlinear CFD codes. All of the flow cases reported in <ref> [37] </ref> have been recomputed to obtain SD via one-sided DD at 10 6 independent variable increments and via AD using the generic derivative iteration. Table 1: Computation Time for Five 2-D SD NACA 1406 Airfoil; TSDE Inviscid Flow Solution Number Time (sec) fl Procedure Solutions Subs. Trans. Supers.
Reference: [38] <author> H. M. Elbanna and L. A. Carlson. </author> <title> Determination of aerodynamic sensitivity coefficient based on the three-dimensional full potential equation. </title> <booktitle> In Proceeding of the AIAA 10th Applied Aerodynamics Conference, </booktitle> <pages> pages 539-548. </pages> <address> AIAA 92-2670-CP, </address> <month> June </month> <year> 1992. </year>
Reference: [39] <author> M. Eleshaky and O. Baysal. </author> <title> Aerodynamic shape optimization via sensitivity analysis on decomposed computational domains. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleve-land, OH, </address> <pages> pages 98-109. </pages> <address> AIAA 92-4698-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference: [40] <author> Jean-Charles Gilbert. </author> <title> Automatic differentiation and iterative processes. </title> <journal> Optimization Methods and Software, </journal> <volume> 1(1) </volume> <pages> 13-22, </pages> <year> 1992. </year>
Reference-contexts: criterion completely to obtain infinite sequences of iterates z m and derivative approximations z 0 m , which have been shown in [21] to converge R-linearly in that kz m z fl k + kz 0 fl k ae m ! 0 : This result was originally obtained by Gilbert <ref> [40] </ref> and Christianson [26] for the case of Newton's method and similar smooth fixed point iterations.
Reference: [41] <author> A. Griewank. </author> <title> On automatic differentiation. </title> <editor> In M. Iri and K. Tanabe, editors, </editor> <booktitle> Mathematical Programming: Recent Developments and Applications, </booktitle> <pages> pages 83-108. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1989. </year>
Reference-contexts: There are two basic modes of automatic differentiation, which are usually referred to as forward and reverse, respectively. The results reported in this paper were obtained with a variant of the forward mode. As discussed in <ref> [41] </ref> the reverse mode is closely related to adjoint methods and has as intriguingly low operations count for gradients. However, its potentially very large memory requirement has been a serious impediment to its application in large-scale scientific computing.
Reference: [42] <author> A. Griewank. </author> <title> Automatic evaluation of first- and higher-derivative vectors. </title> <editor> In R. Seydel, F. W. Schnei-der, T. Kupper, and H. Troger, editors, </editor> <booktitle> Proceedings of the Conference at Wurzburg, </booktitle> <month> Aug. </month> <year> 1990, </year> <title> Bifurcation and Chaos: Analysis, Algorithms, </title> <journal> Applications, </journal> <volume> volume 97, </volume> <pages> pages 135-148. </pages> <publisher> Birkhauser Verlag, </publisher> <address> Basel, Switzerland, </address> <year> 1991. </year>
Reference-contexts: When there are several independent and dependent variables the operations count for evaluating the Jacobians may be lowest for certain mixed strategies [44] rather than the forward or reverse mode. AD can also be extended for the accurate evaluation of second and higher derivatives <ref> [27, 42, 26, 17] </ref>. Second derivatives might eventually be useful for the application of higher order optimization methods in MDO. For a recent review of AD techniques and tools in the context of engineering design see [11].
Reference: [43] <author> A. Griewank and G. F. Corliss, </author> <title> editors. Automatic Differentiation of Algorithms: Theory, Implementation, and Application. </title> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1991. </year>
Reference-contexts: In many cases, the calculations initiated by an AD tool for the evaluation of derivatives mirror those of a carefully handwritten derivative code. A comprehensive collection on the theory, implementation, and some earlier applications can be found in the proceedings <ref> [43] </ref>. There are two basic modes of automatic differentiation, which are usually referred to as forward and reverse, respectively. The results reported in this paper were obtained with a variant of the forward mode. <p> ADIFOR employs a hybrid of the forward and reverse modes of automatic differentiation <ref> [43] </ref>. That is, for each assignment statement, code is generated for computing the partial derivatives of the result with respect to the variables on the right-hand side, and then employed in the forward mode to propagate overall derivatives.
Reference: [44] <author> A. Griewank and S. Reese. </author> <title> On the calculation of Jacobian matrices by the Markowitz rule. </title> <editor> In A. Griewank and G. F. Corliss, editors, </editor> <title> Automatic Differentiation of Algorithms: Theory, </title> <booktitle> Implementation, and Application, </booktitle> <pages> pages 126-135. </pages> <publisher> SIAM, </publisher> <address> Philadel-phia, PA, </address> <year> 1991. </year>
Reference-contexts: However, its potentially very large memory requirement has been a serious impediment to its application in large-scale scientific computing. When there are several independent and dependent variables the operations count for evaluating the Jacobians may be lowest for certain mixed strategies <ref> [44] </ref> rather than the forward or reverse mode. AD can also be extended for the accurate evaluation of second and higher derivatives [27, 42, 26, 17]. Second derivatives might eventually be useful for the application of higher order optimization methods in MDO.
Reference: [45] <author> T. L. Holst, M. D. Salas, and R. W. Claus. </author> <title> The NASA computational aerosciences program toward teraflop computing. </title> <type> AIAA Paper 92-0558, </type> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: The emphasis is on including most of the required disciplines and interactions at a sufficiently advanced level of analysis to demonstrate improved engineering design methodology. The second stimulus is the NASA Computational Aerosciences (CAS) grand challenge of the High Performance Computing and Communications (HPCC) Program <ref> [45, 55] </ref>, where one of the applications is the HSCT. The two major thrusts in this latter program are enhanced simulations via multidisciplinary formulations and improved computational efficiency via massively parallel hardware.
Reference: [46] <author> C. Hirsch. </author> <title> Numerical Computation of Internal and External Flows, Computational Methods for Inviscid and Viscous Flows, Vol. 2, Section 22.3.1, </title> <publisher> John Wi-ley & Sons, </publisher> <year> 1990. </year>
Reference-contexts: In Table 5 (a) results are compared for the simple differentiable mixing-length turbulence model <ref> [46] </ref>, whereas in Table 5 (b), results for the Baldwin-Lomax turbulence model [46] are compared. In both cases 3 to 4 significant digits agreement between the AD and DD results is obtained. The number of multi-grid iterations and convergence levels for both models is shown Table 5 (c). <p> In Table 5 (a) results are compared for the simple differentiable mixing-length turbulence model <ref> [46] </ref>, whereas in Table 5 (b), results for the Baldwin-Lomax turbulence model [46] are compared. In both cases 3 to 4 significant digits agreement between the AD and DD results is obtained. The number of multi-grid iterations and convergence levels for both models is shown Table 5 (c).
Reference: [47] <author> G. J-.W. Hou, A. C. Taylor III, and V. M. Korivi. </author> <title> Discrete shape sensitivity equations for aerodynamic problems. </title> <journal> AIAA Paper No. </journal> <pages> 91-2259, </pages> <month> June </month> <year> 1991. </year>
Reference: [48] <author> A. Jameson. </author> <title> Aerodynamic design via control theory, </title> <journal> Journal of Scientific Computing, </journal> <volume> 3 </volume> <pages> 233-260, </pages> <year> 1988. </year> <note> (Also NASA CR-181749 or ICASE Report No. 88-64, </note> <month> Nov. </month> <year> 1988). </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [49] <author> A. Jameson. </author> <title> Automatic design of transonic airfoils to reduce the shock induced pressure drag. </title> <note> Prince-ton University MAE Report 1881, 1990. (Also appeared in 31st Israel Annual Conference in Aviation and Aeronautics, </note> <month> Feb. </month> <year> 1990). </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [50] <author> H. Jones, G. Hou, M. Korivi, A. Taylor III, and P. Newman. </author> <title> Multidisciplinary analysis and sensitivity derivatives for isolated helicopter rotors in hover. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 63-86. </pages> <address> AIAA 92-4696-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference: [51] <author> D. Juedes. </author> <title> A taxonomy of automatic differentiation tools. </title> <editor> In A. Griewank and G. F. Corliss, editors, </editor> <booktitle> Proceedings of the Workshop on Automatic Differentiation of Algorithms: Theory, Implementation, and Application, </booktitle> <pages> pages 315-329. </pages> <publisher> SIAM, </publisher> <address> Philadel-phia, PA, </address> <year> 1991. </year>
Reference-contexts: The resulting decrease in complexity compared to an entirely forward mode implementation usually is substantial. In contrast to some earlier AD implementations <ref> [51] </ref> the source translator ADIFOR was designed from the outset with large-scale codes in mind. It uses the facilities of the ParaScope Fortran environment [24, 25] to parse the code and to extract control flow and dependence flow information.
Reference: [52] <author> V. M. Korivi, A. C. Taylor III, P. A. Newman, G. J.-W. Hou, and H. E. Jones. </author> <title> An approximately factored incremental strategy for calculating consistent discrete CFD sensitivity derivatives. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 465-478. </pages> <address> AIAA 92-4746-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: Direct matrix solution methods have generally been used in 2-D problems; however, their use in 3-D problems appears highly unlikely as a viable approach. In <ref> [52] </ref> and [56] an incremental iterative technique for efficiently obtaining consistent, discrete aerodynamic SD for advanced CFD codes was proposed, demonstrated, and discussed. <p> The iterative solution aspect allows for extension to large 3-D problems, which presently cannot be solved by direct means because of storage and/or run-time limitations. A very brief discussion of the fundamental equations from <ref> [52] </ref> and [56] is given in the next paragraph. <p> Moreover, the implicit function theorem yields a constructive test on the accuracy of the derivative approximation, which suggests that, in most cases, at least six digits were correct. In the 2-D quasi-analytical SD code <ref> [52] </ref>, the turbulence model was deemed too complicated for differentiation by hand; its treatment as constant led to sizable relative errors in some 6 resulting global sensitivities.
Reference: [53] <author> J. B. Malone and R. C. Swanson. </author> <title> Inverse airfoil design procedure using a multigrid Navier-Stokes 13 method. </title> <booktitle> In Proceedings, Third International Con--ference on Inverse Design Concepts and Optimization in Engineering Sciences ICIDES-III, Washing-ton, DC, </booktitle> <pages> pages 55-66. </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [54] <editor> NASA. </editor> <booktitle> Third Air Force/NASA Symposium on Recent Advances in Multidisciplinary Analysis and Optimization. A Collection of Technical Papers, </booktitle> <address> San Francisco, CA. </address> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures.
Reference: [55] <editor> NASA. </editor> <booktitle> Computational Aerosciences Conference, Compendium of Abstracts. </booktitle> <institution> NASA Ames Research Center, Moffett Field, </institution> <address> CA, </address> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: At present, computer-automated discipline analyses and interactions offer the possibility of significantly shortening the design-cycle time, while simultaneous multidisciplinary design optimization (MDO) via formal sensitivity analysis (SA) holds the possibility of improved designs. Recent topical conferences 3 [1-8], <ref> [10, 12, 34, 35, 54, 55] </ref> for example, attest to the interest in these possibilities for improving aerospace vehicle design processes and procedures. <p> The emphasis is on including most of the required disciplines and interactions at a sufficiently advanced level of analysis to demonstrate improved engineering design methodology. The second stimulus is the NASA Computational Aerosciences (CAS) grand challenge of the High Performance Computing and Communications (HPCC) Program <ref> [45, 55] </ref>, where one of the applications is the HSCT. The two major thrusts in this latter program are enhanced simulations via multidisciplinary formulations and improved computational efficiency via massively parallel hardware.
Reference: [56] <author> P. A. Newman, G. J.-W. Hou, H. E. Jones, A. C. Taylor, and V. M. Korivi. </author> <title> Observations on computational methodologies for use in large-scale, gradient-based, multidisciplinary design incorporating advanced CFD codes. </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 531-542. </pages> <address> AIAA 92-4753-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: This paper discusses and documents the initial application of an AD system to advanced CFD codes in order to obtain SD typical of those required in an MDO. The general ideas and direction of this work, including a sample result, have been outlined in <ref> [56] </ref> and [18]. As will be seen, the initial results given here are both significant and encouraging; but challenges remain. <p> Direct matrix solution methods have generally been used in 2-D problems; however, their use in 3-D problems appears highly unlikely as a viable approach. In [52] and <ref> [56] </ref> an incremental iterative technique for efficiently obtaining consistent, discrete aerodynamic SD for advanced CFD codes was proposed, demonstrated, and discussed. <p> The iterative solution aspect allows for extension to large 3-D problems, which presently cannot be solved by direct means because of storage and/or run-time limitations. A very brief discussion of the fundamental equations from [52] and <ref> [56] </ref> is given in the next paragraph.
Reference: [57] <author> D. Olander and R. B. Schnabel. </author> <title> Preliminary experience in developing a parallel thin-layer Navier Stokes code and implications for parallel language design. </title> <booktitle> In Proceedings, Scalable High Performance Computing Conference, SHPCC-92, </booktitle> <pages> pp. 276-283, </pages> <address> Williamsburg, VA, </address> <month> Apr. </month> <year> 1992. </year>
Reference-contexts: It has been used successfully in a number of applications across the flight speed range from low subsonic to hypersonic and for a number of flight vehicle types. Its forthcoming multiblock version [72] promises the flexibility needed for modeling complex geometric configurations. Initial work has been reported <ref> [57, 67] </ref> on implementing these codes on parallel processors. All of these facets tend to enhance its usefulness in applications to real engineering solutions and thus MDO problems.
Reference: [58] <author> C. Orozco and O. Ghattas. </author> <title> Optimal design of systems governed by nonlinear partial differential equations, </title> <booktitle> In Fourth AIAA/USAF/NASA/OAI Symposium on Multidisciplinary Analysis and Optimization, A Collection of Technical Papers, </booktitle> <address> Cleveland, OH, </address> <pages> pages 1126-1140. </pages> <address> AIAA 92-4836-CP, </address> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [59] <author> L. B. Rall. </author> <title> Automatic Differentiation: Techniques and Applications, </title> <booktitle> volume 120 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, Ger-many, </address> <year> 1981. </year>
Reference-contexts: In fact, the straightforward application of AD to the entire iterative solution process (2) generates z 0 , without having to identify and construct the terms in (4) or (5). The next section discusses AD in all of these aspects. 4 AD of Large Programs Automatic differentiation <ref> [59] </ref> is a chain-rule-based tech nique for evaluating the derivatives of functions defined by computer programs with respect to their input variables.
Reference: [60] <author> M. H. Rizk. </author> <title> Optimization by updating design parameters as CFD iterative flow solutions evolve. </title> <editor> In O. Baysal, editor, </editor> <booktitle> Symposium on Multidisciplinary Applications of Computational Fluid Dynamics, </booktitle> <pages> pages 51-62. </pages> <booktitle> FED-Vol. 129, ASME Winter Annual Meeting, </booktitle> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [61] <author> I. Sadrehaghighi, R. E. Smith Jr., and S. N. Tiwari. </author> <title> An analytical approach to grid sensitivity analysis. </title> <type> AIAA Paper 92-0660, </type> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: surface, then R 0 (z; y; x fl ) = R z z 0 + R y y 0 + R x = 0 : (3) It is assumed that y 0 , the mesh sensitivity with respect to x, is obtained from the grid generation code or grid-movement algorithm <ref> [61, 64, 69] </ref>.
Reference: [62] <author> G. R. Shubin. </author> <title> Obtaining "cheap" optimization gradients from computational aerodynamics codes. </title> <institution> Applied Mathematics and Statistics Technical Report AMS-TR-164, Boeing Computer Services, </institution> <month> June </month> <year> 1991. </year>
Reference: [63] <author> G. R. Shubin and P. D. Frank. </author> <title> A comparison of two closely-related approaches to aerodynamic design optimization, </title> <booktitle> In Proceedings of the Third International Conference on Inverse Design Concepts and Optimizations in Engineering Sciences ICIDES-III, </booktitle> <address> Washington. DC, </address> <pages> pages 67-78. </pages> <month> Oct. </month> <year> 1991. </year> <note> (Also appeared as Boeing Computer Services Technical Report AMS-TR-163, </note> <month> April, </month> <year> 1991). </year>
Reference: [64] <author> R. E. Smith Jr., and I. Sadrehaghighi. </author> <title> Grid sensitivity in airplane design, </title> <booktitle> In Proceedings of the 4th International Symposium of Computational Fluid Dynamics, University of California-Davis, </booktitle> <pages> pages 1071-1077. </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: surface, then R 0 (z; y; x fl ) = R z z 0 + R y y 0 + R x = 0 : (3) It is assumed that y 0 , the mesh sensitivity with respect to x, is obtained from the grid generation code or grid-movement algorithm <ref> [61, 64, 69] </ref>.
Reference: [65] <author> J. S-. Sobieski. </author> <title> Multidisciplinary optimization for engineering systems: Achievements and potential. </title> <type> NASA TM 101566, </type> <institution> NASA, </institution> <month> Mar. </month> <year> 1989. </year>
Reference-contexts: Procedures for MDO of engineering systems have been addressed by Sobieski <ref> [65] </ref>. He proposes a unified system SA guided by system sensitivity derivatives (SD); the optimizer code or algorithm that uses these SD is the outermost loop of the entire design process. The objective and constraint functions are now generally composed of output functions from several disciplines.
Reference: [66] <author> T. Sorenson. </author> <title> Airfoil optimization with efficient gradient calculations. </title> <booktitle> In Proceedings of the Third International Conference on Inverse Design Concepts and Optimizations in Engineering Sciences ICIDES-III, </booktitle> <address> Washington. DC, </address> <pages> pages 433-444. </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [67] <author> A. Sussman, J. Saltz, R. Das, S. Gupta, D. Mavriplis, R. Ponnusamy, and K. Crowley. </author> <title> PARTI primitives for unstructured and block structured problems, </title> <type> NASA CR 189662, </type> <month> June </month> <year> 1992. </year>
Reference-contexts: It has been used successfully in a number of applications across the flight speed range from low subsonic to hypersonic and for a number of flight vehicle types. Its forthcoming multiblock version [72] promises the flexibility needed for modeling complex geometric configurations. Initial work has been reported <ref> [57, 67] </ref> on implementing these codes on parallel processors. All of these facets tend to enhance its usefulness in applications to real engineering solutions and thus MDO problems.
Reference: [68] <author> S. Taasan, G. Kuruvila, and M. D. Salas. </author> <title> Aerodynamic design and optimization in one shot. </title> <journal> AIAA Paper No. </journal> <pages> 92-0025, </pages> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: The most recent references [13, 22, 33, 37, 38, 39, 47, 50, 52, 56, 62, 63, 66, 70] from several groups engaged in this research indicate the current status and cite many references to earlier works. A number of other aerodynamic design methods have been proposed, developed, and discussed <ref> [23, 36, 48, 49, 53, 58, 60, 68, 73] </ref>. Typically these methods have been developed to solve "single-discipline" design problems, that is, problems in which the cost, or objective and constraint functions, depend only upon the aerodynamic solution output.
Reference: [69] <author> A. C. Taylor III, G. J-.W. Hou, and V. M. Korivi. </author> <title> A methodology for determining aerodynamic sensitivity derivatives with respect to variation of geometric shape. </title> <journal> AIAA Paper No. </journal> <pages> 91-1101, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: surface, then R 0 (z; y; x fl ) = R z z 0 + R y y 0 + R x = 0 : (3) It is assumed that y 0 , the mesh sensitivity with respect to x, is obtained from the grid generation code or grid-movement algorithm <ref> [61, 64, 69] </ref>.
Reference: [70] <author> A. C. Taylor III, G.J-.W. Hou, and V. M. Korivi. </author> <title> Sensitivity analysis, approximate analysis, and design optimization for internal and external flows. </title> <journal> AIAA Paper No. </journal> <pages> 91-3083, </pages> <month> Sept. </month> <year> 1991. </year>
Reference: [71] <author> V. N. Vatsa and B. W. Wedan. </author> <title> Development of a multigrid code for 3-D Navier-Stokes equations and its application to a grid-refinement study, </title> <journal> Computers & Fluids, </journal> <volume> 18(4) </volume> <pages> 391-403, </pages> <year> 1990. </year> <month> 14 </month>
Reference-contexts: The prospect of obtaining accurate solution sensitivities by simply differentiating the whole iterative process may appear dubious for multigrid methods. These are now the state of the art in 3-D CFD codes (for example <ref> [71] </ref>), despite the lack of a convergence theory under realistic assumptions. <p> 4 4 + 4 + 4 + AD Time/ 0.18 0.26 0.36 0.50 0.69 0.92 DD time QA Time/ 1.08 1.08 1.08 1.08 1.08 1.08 DD Time y Norm of R 0 = dR=dx, # Number of significant digits. 5.2 3-D Thin Layer Navier-Stokes The 3-D thin-layer Navier-Stokes code TLNS3D <ref> [71] </ref> employs a multigrid acceleration technique to an explicit multi-stage Runge-Kutta time-stepping scheme with central spatial differencing to efficiently obtain steady state high Reynolds number turbulent flow solutions.
Reference: [72] <author> V. N. Vatsa, M. D. Sanetrik, and E. B. Parlette. </author> <title> De--velopment of a flexible and efficient multigrid-based multiblock flow solver, </title> <note> To be presented at AIAA 31st Aerospace Sciences Meeting, Reno NV, AIAA 93-0677, </note> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: It has been used successfully in a number of applications across the flight speed range from low subsonic to hypersonic and for a number of flight vehicle types. Its forthcoming multiblock version <ref> [72] </ref> promises the flexibility needed for modeling complex geometric configurations. Initial work has been reported [57, 67] on implementing these codes on parallel processors. All of these facets tend to enhance its usefulness in applications to real engineering solutions and thus MDO problems.

References-found: 72

