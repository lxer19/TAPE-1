URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1995/tr-95-047.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1995.html
Root-URL: http://www.icsi.berkeley.edu
Title: The Implementation of PET  
Author: Bernd Lamparter Malik Kalfane 
Address: Berkeley, CA 94704, USA  
Affiliation: Computer Science Institute,  
Note: both International  
Date: August 1995  
Pubnum: TR-95-047  
Abstract: This report describes the implementation of PET (Priority Encoding Transmission) and its integration into VIC [6]. PET [1] is a new Forward Error Correction (FEC) scheme with several priority levels. It is useful for applications dealing with real-time transport streams like video and audio in a lossy environment. Those streams consist of several data parts with different importance. PET allows to protect those parts with appropriate redundancy and thus guarantees, that the more important parts arrive before the less important ones. Keywords: Video Transmission, Forward Error Correction, MPEG, Parallelizing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Albanese, J. Blomer, J. Edmonds, M. Luby, and M. Sudan. </author> <title> Priority encoding transmission. </title> <booktitle> In Proceedings of 35th Annual Symposium on Foundations of Computer Sciences, </booktitle> <address> Santa Fe, New Mexico, </address> <pages> pages pp. 604-612, </pages> <month> Nov. </month> <year> 1994. </year> <month> 13 </month>
Reference: [2] <author> Johannes Blomer, Malik Kalfane, Richard Karp, Marek Karpinski, Michael Luby, and David Zuckerman. </author> <title> An xor-based erasure-resilient coding scheme. </title> <type> Technical report, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <year> 1995. </year>
Reference-contexts: Chapters 5 and 6 are describing the incorporaton of MPEG and PET into VIC. Some enhancements planned for the future are described in chapters 7 and 8. The algorithm for the actual generation of the redundant information is beyond the scope of this report and may be found in <ref> [2] </ref>. 2 Striping of the Message into packets Given a message consisting of message parts with corresponding priorities, the PET algorithm must map this onto packets in such a way that the PET guarantees are satisfied: for instance, if the user requests that a given message part of size 10KB be <p> In the case of the Cauchy scheme, the segment size is four bytes times the dimension of the finite field as an algebra over GF <ref> [2] </ref>. The larger the segment size, the larger the roundoff errors will be in trying to satisfy the priorities for the message, as the packet can be broken up into fewer segments.
Reference: [3] <author> Don Hoffman, Gerard Fernando, and Vivek Goyal. </author> <title> Rtp payload format for mpeg1/mpeg2. </title> <type> Technical report, </type> <institution> IETF, </institution> <year> 1995. </year> <month> ftp://ds.internic.net/internet-drafts/draft-ietf-avt-mpeg-00.txt. </month>
Reference-contexts: It is planned to support RTP-encapsulation as defined in <ref> [3] </ref>. Currently the MPEG specific header is four bytes long, non is set, and all ignored. 5.3.2 Payload According to [3] the frame should be fragmented in packets at the beginning of slices, so that the MPEG decoder can immediately resume decoding after a packet loss. <p> It is planned to support RTP-encapsulation as defined in <ref> [3] </ref>. Currently the MPEG specific header is four bytes long, non is set, and all ignored. 5.3.2 Payload According to [3] the frame should be fragmented in packets at the beginning of slices, so that the MPEG decoder can immediately resume decoding after a packet loss. This results in packets of different size.
Reference: [4] <author> Bernd Lamparter, Andres Albanese, Malik Kalfane, and Michael Luby. </author> <title> PET Priority Encoding Transmission: A New, Robust and Efficient Video Broadcast Technology. </title> <booktitle> In Proceedings of ACM Multimedia '95. ACM, </booktitle> <month> November </month> <year> 1995. </year>
Reference: [5] <author> Christian Leicher. </author> <title> Hierarchical Encoding of MPEG Sequences Using Priority Encoding. </title> <type> Master's thesis, </type> <institution> International Computer Science Institute and Technische Universitat Munchen, </institution> <month> Nov. </month> <year> 1994. </year> <month> ftp://ftp.icsi.berkeley.edu/pub/tenet/PET/tr-94-058.ps.Z. </month>
Reference-contexts: This approach is also possible for decoding, but it is much more complicated to implement. 5 An Application for PET: MPEG in vic The first effort to apply PET to MPEG was an off line demonstration <ref> [5] </ref>. The PET version used there was too slow to be applied to a real-time MPEG decoder. With the newer version which uses cauchy matrizes instead of polynomials to produce the redundant information it was possible to run PET in real-time.
Reference: [6] <author> Steven McCanne and Van Jacobson. </author> <title> vic: a flexible framework for packet video. </title> <booktitle> In Proceedings of ACM Multimedia '95. ACM, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: With the newer version which uses cauchy matrizes instead of polynomials to produce the redundant information it was possible to run PET in real-time. VIC is a popular application for interactive video developed by Steve McCanne. VIC stands for video interactive conferencing <ref> [6] </ref>. It consists of several encoding schemes (NV, h.261, JPEG, CuSeeMe) and runs on workstations of all major vendors. 5.1 MPEG decoding As first step we built MPEG into VIC.
Reference: [7] <author> Henning Schulzrinne, Steven Casner, Ron Frederick, and Van Jacobson. Rtp: </author> <title> A transport protocol for real-time applications. </title> <type> Technical report, </type> <institution> IETF, </institution> <year> 1995. </year> <month> ftp://ds.internic.net/internet-drafts/draft-ietf-avt-rtp-06.9.ps. </month>
Reference-contexts: An additional window (see fig. 7) allows the user to set the pattern of the MPEG frames and various PET parameters. 9 5.3 RTP encapsulation of plain MPEG streams 5.3.1 Header fields The MPEG packets are RTP encapsulated <ref> [7] </ref>, but currently uses none of the MPEG specific header fields. It is planned to support RTP-encapsulation as defined in [3]. <p> The type of the encoding in the optional header is used as defined in <ref> [7] </ref>. The subtype is additional information on the exact enocding used. In MPEG encoding we use currently three different schemes: PET I Encodes the I-frame only. PET IP Encodes the I- and the P-frames, but each as a separate message. PET IPB Encodes the whole GOP in one PET message.
Reference: [8] <author> D. Taubman and A. Zakhor. </author> <title> Multi-rate 3-d subband coding of video. </title> <booktitle> In IEEE Transactions on Image Processing, </booktitle> <month> April </month> <year> 1993. </year> <month> 14 </month>
Reference-contexts: This is not only an computational effort but will also result in a coding overhead because of multiple "End of Block" tags of the DCT-matrix. A third, natural scheme could be applied if the encoding is layered in subbands, like i. e. the 3-d subband coding <ref> [8] </ref>. The layer can easily be mapped to the PET priority levels.
References-found: 8

