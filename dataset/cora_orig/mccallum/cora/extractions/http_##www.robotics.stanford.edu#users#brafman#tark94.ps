URL: http://www.robotics.stanford.edu/users/brafman/tark94.ps
Refering-URL: http://www.robotics.stanford.edu/users/brafman/bio.html
Root-URL: http://www.robotics.stanford.edu
Email: brafman@cs.stanford.edu  latombe@cs.stanford.edu  yoram@wisdom.weizmann.ac.il  shoham@cs.stanford.edu  
Title: Knowledge as a Tool in Motion Planning under Uncertainty  
Author: Ronen I. Brafman Jean-Claude Latombe Yoram Moses Yoav Shoham 
Address: Stanford, CA 94305  Stanford, CA 94305  Rehovot, 76100 Israel  Stanford, CA 94305  
Affiliation: Robotics Laboratory Stanford University  Robotics Laboratory Stanford University  Dept. of Applied Math Weizmann Institute of Science  Robotics Laboratory Stanford University  
Abstract: Inspired by the success of the distributed computing community in applying logics of knowledge and time to reasoning about distributed protocols, we aim for a similarly powerful and high-level abstraction when reasoning about control problems involving uncertainty. Here we concentrate on robot motion planning, with uncertainty in both control and sensing. This problem has already been well studied within the robotics community. Our contributions include the following: * We define, a new and natural problem in this domain: obtaining a sound and complete termination condition, given initial and goal locations. * We define a high-level language, a logic of time and knowledge, to reason about motion plans in the presence of uncertainty, and use it to provide general conditions for the existence of sound and complete termination conditions for a broad class of motion plans. * We characterize the optimal sound termination conditions for the general problem, relate them to a class of fundamental knowledge based protocols and provide a natural example of knowledge based protocols lacking a canonical implementation. 1 fl Currently on sabbatical at the Oxford University Computing Laboratory, Oxford OX1 3QD England 1 The first part of this paper generalizes results of a previous paper by Brafman, Latombe and Shoham 
Abstract-found: 1
Intro-found: 1
Reference: [ BLS93 ] <author> R. I. Brafman, J. C. Latombe, and Y. Shoham. </author> <title> Towards knowledge-level analysis of motion planning. </title> <booktitle> In Proc. of the Eleventh National Conf. on AI, </booktitle> <pages> pages 670-675, </pages> <year> 1993. </year>
Reference-contexts: To answer the general problem we will define a fixpoint operator that enables the characterization of sound termination conditions that are optimal in some sense. We end by showing that the problem of optimal 2 Additional examples appear in <ref> [ BLS93 ] </ref> . termination conditions provides the first natural example of knowledge-based protocols that have no single canonical implementation ( [ HF89 ] ) and that this problem can be phrased as a problem of generating the optimal implementation of a knowledge based protocol. 3 2 Termination Conditions in Motion <p> The following is a precise formulation of the problem we wish to investigate: Given a motion planning instance and a motion direction D, does a sound and complete termination condition exist? In <ref> [ BLS93 ] </ref> a geometric property of the domain was defined that is sufficient, and under certain conditions necessary, for the existence of a sound and complete termination condition. <p> In the next section we define a basic framework that will allow us to perform a general study of the design of optimal termination conditions in motion planning by reasoning about the robot's knowledge. 3 Knowledge-Level Formalization While new, the geometric results of <ref> [ BLS93 ] </ref> were restricted to a limited class of sensors (e.g., position sensors exhibiting constant disk-like uncertainty), constant control uncertainty and limited sets of initial states.
Reference: [ Can89 ] <author> J. F. Canny. </author> <title> On computability of fine motion plans. </title> <booktitle> In Proc. of the 1989 IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 177-182, </pages> <year> 1989. </year>
Reference-contexts: In this article we take one step towards exploring this arena, concentrating on robot motion planning. Robot motion planning with uncertainty is a well researched area <ref> [ LPMT84, Can89, Erd86, Lat91, LLS91 ] </ref> . The uncertainty in that domain can arise from several sources, including partial information about the location of various objects, sloppy control, and noisy sensing.
Reference: [ DM90 ] <author> C. Dwork and Y. Moses. </author> <title> Knowledge and common knowledge in a byzantine environment: crash failures. </title> <journal> Information and Computation, </journal> <volume> 88(2) </volume> <pages> 156-186, </pages> <year> 1990. </year>
Reference-contexts: this termination condition evaluates to true no later than any other sound and complete termination condition, i.e. it is optimal. (We note that the use of reasoning about knowledge has given rise to optimal solutions of an analogous flavor, in a very different problem domain dealing with fault-tolerant distributed systems <ref> [ DM90, MT88 ] </ref> .) * Generality: The use of knowledge to characterize the termination condition allowed us to prove a fairly general result regarding an extremely wide class of motion planning contexts.
Reference: [ EH85 ] <author> E. A. Emerson and J. Y. Halpern. </author> <title> Decision procedures and expressivenessin the temporal logic of branching time. </title> <journal> J. of Comp. and Sys. Sci., </journal> <volume> 30(1) </volume> <pages> 1-24, </pages> <year> 1985. </year>
Reference-contexts: Temporal logics of this type have been extensively investigated by various researchers. For details see, e.g., <ref> [ EH85 ] </ref> . Rather than presenting a complete exposition of branching-time temporal operators, we shall concentrate on the two particular operators that will be used in our analysis.
Reference: [ Erd86 ] <author> M. Erdmann. </author> <title> Using backprojection for fine motion planning with uncertainty. </title> <journal> Int. J. of Robotics Research, </journal> <volume> 5(1) </volume> <pages> 19-45, </pages> <year> 1986. </year>
Reference-contexts: In this article we take one step towards exploring this arena, concentrating on robot motion planning. Robot motion planning with uncertainty is a well researched area <ref> [ LPMT84, Can89, Erd86, Lat91, LLS91 ] </ref> . The uncertainty in that domain can arise from several sources, including partial information about the location of various objects, sloppy control, and noisy sensing.
Reference: [ FHMV94 ] <author> R. Fagin, J. Y. Halpern, Y. Moses, and M. Y. Vardi. </author> <title> Reasoning about Knowledge. </title> <publisher> MIT Press, </publisher> <year> 1994. </year> <note> to appear. </note>
Reference-contexts: In order to overcome these limitations, a framework for reasoning about uncertainty in motion planning using a formal notion of knowledge was introduced in that paper. This framework, motivated by work in distributed systems ( <ref> [ HM90, FHMV94 ] </ref> ), is described next. 3.1 Runs and systems We can view our endeavor as the investigation of a class of two-player protocols (see [ TMG88 ] ). <p> Definition 4 A run R is a function from [0; 1) to G. We identify a system with a set of runs. We remark that this definition of runs differs from the standard definitions <ref> [ FHMV94 ] </ref> in that we assume that time is continuous rather than discrete. A system corresponds to some subset of the set of possible runs, those runs that describe the behaviors we would like to model. <p> From now on we shall assume that our language, L, is closed under the temporal and epistemic operators. All definitions remain unchanged. We remark that our definition of knowledge is the standard one used for knowledge in distributed systems (see <ref> [ FHMV94 ] </ref> ), and is well-known to satisfy the modal system S5. <p> This view has to do with the notion of a knowledge-based program and its implementations, which is described in <ref> [ FHMV94 ] </ref> and is related to the knowledge-based protocols of [ HF89 ] . Due to considerable technical background that would be necessary for a complete exposition, our discussion below will contain only partial details. For further technical background, the interested reader should consult [ FHMV94 ] . 5 A <p> implementations, which is described in <ref> [ FHMV94 ] </ref> and is related to the knowledge-based protocols of [ HF89 ] . Due to considerable technical background that would be necessary for a complete exposition, our discussion below will contain only partial details. For further technical background, the interested reader should consult [ FHMV94 ] . 5 A more precise definition along the lines of the [ HM90, FHMV94 ] fixpoint definition of common knowledge can be given. <p> Due to considerable technical background that would be necessary for a complete exposition, our discussion below will contain only partial details. For further technical background, the interested reader should consult [ FHMV94 ] . 5 A more precise definition along the lines of the <ref> [ HM90, FHMV94 ] </ref> fixpoint definition of common knowledge can be given. <p> In this case, however, the characterization is in terms of the knowledge the robot has in the system in which it is already following T . In the terminology of <ref> [ FHMV94 ] </ref> , this lemma can be viewed as stating that an optimal termination condition is an implementation of the knowledge-based program P g : if K r g then halt in the context corresponding to the uninhibited system I. <p> There are examples of knowledge-based programs that can be implemented in inherently different ways in a given context. Nevertheless, most of these examples are somewhat unnatural, in some essential way making use of knowledge about the robot's future history to determine its current action. Fagin et al. <ref> [ FHMV94 ] </ref> provide a sufficient condition for there being a unique standard implementation for a knowledge-based program P in a given context . The condition is stated as "the tests in P depend only on the past in the context ".
Reference: [ HF89 ] <author> J. Y. Halpern and R. Fagin. </author> <title> Modelling knowledge and action in distributed systems. </title> <journal> Distributed Computing, </journal> <volume> 3 </volume> <pages> 159-177, </pages> <year> 1989. </year>
Reference-contexts: We end by showing that the problem of optimal 2 Additional examples appear in [ BLS93 ] . termination conditions provides the first natural example of knowledge-based protocols that have no single canonical implementation ( <ref> [ HF89 ] </ref> ) and that this problem can be phrased as a problem of generating the optimal implementation of a knowledge based protocol. 3 2 Termination Conditions in Motion Planning We introduce a motion planning domain, with particular types of sensing and control uncertainty, and formally define the problem of <p> This view has to do with the notion of a knowledge-based program and its implementations, which is described in [ FHMV94 ] and is related to the knowledge-based protocols of <ref> [ HF89 ] </ref> . Due to considerable technical background that would be necessary for a complete exposition, our discussion below will contain only partial details.
Reference: [ Hin62 ] <author> J. Hintikka. </author> <title> Knowledge and Belief. </title> <publisher> Cornell University Press, </publisher> <address> Ithaca, NY, </address> <year> 1962. </year>
Reference-contexts: In the context of this article, of particular note is the application of logics of knowledge in distributed computing (e.g., [ HM90 ] ). The essential insight behind that line of research was that a formal notion of "knowing," developed initially in philosophy <ref> [ Hin62 ] </ref> and later imported to AI [ Moo85 ] , can be coherently and usefully applied to reasoning about (and later also designing) distributed protocols.
Reference: [ HM90 ] <author> J. Y. Halpern and Y. Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <journal> J. ACM, </journal> <volume> 37(3) </volume> <pages> 549-587, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Much research carried on in computer science in general, and AI in particular, concerns the development of powerful abstractions, and their application to problems of interest. In the context of this article, of particular note is the application of logics of knowledge in distributed computing (e.g., <ref> [ HM90 ] </ref> ). The essential insight behind that line of research was that a formal notion of "knowing," developed initially in philosophy [ Hin62 ] and later imported to AI [ Moo85 ] , can be coherently and usefully applied to reasoning about (and later also designing) distributed protocols. <p> In order to overcome these limitations, a framework for reasoning about uncertainty in motion planning using a formal notion of knowledge was introduced in that paper. This framework, motivated by work in distributed systems ( <ref> [ HM90, FHMV94 ] </ref> ), is described next. 3.1 Runs and systems We can view our endeavor as the investigation of a class of two-player protocols (see [ TMG88 ] ). <p> Due to considerable technical background that would be necessary for a complete exposition, our discussion below will contain only partial details. For further technical background, the interested reader should consult [ FHMV94 ] . 5 A more precise definition along the lines of the <ref> [ HM90, FHMV94 ] </ref> fixpoint definition of common knowledge can be given.
Reference: [ KR90 ] <author> L. P. Kaelbling and S. J. Rosenschein. </author> <title> Action and planning in embedded agents. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6 </volume> <pages> 35-48, </pages> <year> 1990. </year>
Reference-contexts: Two exceptions do come to mind - Levesque's knowledge-level analysis of databases [ Lev84 ] , and Rosenschein and Kaelbling's Situated Automata <ref> [ Ros85, KR90 ] </ref> . We claim, however, that there is a much wider arena in which the lessons from distributed computing can be applied, namely planning and control in the presence of uncertainty. In this article we take one step towards exploring this arena, concentrating on robot motion planning.
Reference: [ Lat91 ] <author> J. C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academinc Publishers, </publisher> <address> Boston, </address> <year> 1991. </year>
Reference-contexts: In this article we take one step towards exploring this arena, concentrating on robot motion planning. Robot motion planning with uncertainty is a well researched area <ref> [ LPMT84, Can89, Erd86, Lat91, LLS91 ] </ref> . The uncertainty in that domain can arise from several sources, including partial information about the location of various objects, sloppy control, and noisy sensing. <p> Before introducing a high-level language, we will give more feel for the problem by examining a simple one-dimensional domain. This simple path-planning problem in R 1 , taken from <ref> [ Lat91 ] </ref> , will be used later, to illustrate the various definitions and results. 2 Example 1 Assume that our robot is a point moving forward along the positive reals, starting at 0; it moves continuously at finite velocity, until the termination condition is satisfied, at which point it stops.
Reference: [ Lev84 ] <author> H. Levesque. </author> <title> Foundations of a functional approach to knowledge representation. </title> <journal> Artificial Intelligence, </journal> <volume> 23(2) </volume> <pages> 155-212, </pages> <year> 1984. </year>
Reference-contexts: Two exceptions do come to mind - Levesque's knowledge-level analysis of databases <ref> [ Lev84 ] </ref> , and Rosenschein and Kaelbling's Situated Automata [ Ros85, KR90 ] . We claim, however, that there is a much wider arena in which the lessons from distributed computing can be applied, namely planning and control in the presence of uncertainty.
Reference: [ LLS91 ] <author> J. C. Latombe, A. Lazanas, and S. Shekhar. </author> <title> Robot motion planning with uncertainty in control and sensing. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 1-47, </pages> <year> 1991. </year>
Reference-contexts: In this article we take one step towards exploring this arena, concentrating on robot motion planning. Robot motion planning with uncertainty is a well researched area <ref> [ LPMT84, Can89, Erd86, Lat91, LLS91 ] </ref> . The uncertainty in that domain can arise from several sources, including partial information about the location of various objects, sloppy control, and noisy sensing. <p> And while researchers in motion planning (e.g. <ref> [ LLS91 ] </ref> ) gave examples indicating that careful design of a termination condition can much enhance the robot's ability to recognize the goal, we are the first to offer general results on this question.
Reference: [ LPMT84 ] <author> T. Lozano-Perez, M. T. Mason, and R. H. Taylor. </author> <title> Automatic synthesis of fine-motion strategies for robots. </title> <journal> Int. J. of Robotics Research, </journal> <volume> 3(1) </volume> <pages> 3-24, </pages> <year> 1984. </year>
Reference-contexts: In this article we take one step towards exploring this arena, concentrating on robot motion planning. Robot motion planning with uncertainty is a well researched area <ref> [ LPMT84, Can89, Erd86, Lat91, LLS91 ] </ref> . The uncertainty in that domain can arise from several sources, including partial information about the location of various objects, sloppy control, and noisy sensing. <p> In a multi-step motion plan, this question is repeated in a backward-chaining fashion, leading to the method of pre-image backchaining <ref> [ LPMT84 ] </ref> . In contrast, we consider fixed initial and goal regions and a class of simple motion commands `Go in direction D, until the termination condition, T , is satisfied'. D can be seen as responsible for reaching the goal, while T is responsible for recognizing it. <p> Our model is based on <ref> [ LPMT84 ] </ref> . within a given set I R n (a singleton in Figure 1), the robot is commanded to move in a (predetermined) direction D. The goal is to arrive at the region G R n , the goal region, area, and stop there.
Reference: [ Moo85 ] <author> R. C. Moore. </author> <title> A formal theory of knowledge and action. </title> <editor> In J. R. Hobbs and R. C. Moore, editors, </editor> <title> Formal Theories of the Common Sense World, </title> <address> Norwood, N.J., 1985. </address> <publisher> Ablex Publishing Corporation. </publisher>
Reference-contexts: The essential insight behind that line of research was that a formal notion of "knowing," developed initially in philosophy [ Hin62 ] and later imported to AI <ref> [ Moo85 ] </ref> , can be coherently and usefully applied to reasoning about (and later also designing) distributed protocols.
Reference: [ MT88 ] <author> Y. Moses and M. R. Tuttle. </author> <title> Programming simultaneous actions using common knowledge. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 121-169, </pages> <year> 1988. </year>
Reference-contexts: this termination condition evaluates to true no later than any other sound and complete termination condition, i.e. it is optimal. (We note that the use of reasoning about knowledge has given rise to optimal solutions of an analogous flavor, in a very different problem domain dealing with fault-tolerant distributed systems <ref> [ DM90, MT88 ] </ref> .) * Generality: The use of knowledge to characterize the termination condition allowed us to prove a fairly general result regarding an extremely wide class of motion planning contexts.
Reference: [ Ros85 ] <author> S. J. Rosenschein. </author> <title> Formal theories of knowledge in AI and robotics. </title> <journal> New Generation Comp., </journal> <volume> 3 </volume> <pages> 345-357, </pages> <year> 1985. </year>
Reference-contexts: Two exceptions do come to mind - Levesque's knowledge-level analysis of databases [ Lev84 ] , and Rosenschein and Kaelbling's Situated Automata <ref> [ Ros85, KR90 ] </ref> . We claim, however, that there is a much wider arena in which the lessons from distributed computing can be applied, namely planning and control in the presence of uncertainty. In this article we take one step towards exploring this arena, concentrating on robot motion planning.
Reference: [ TMG88 ] <author> R. H. Taylor, M. T. Mason, and K. Y. Goldberg. </author> <title> Sensor-based manipulation planning as a game with nature. </title> <editor> In R. Bolles and B. Roth, editors, </editor> <booktitle> Robotics Research 4, </booktitle> <pages> pages 421-429. </pages> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: This framework, motivated by work in distributed systems ( [ HM90, FHMV94 ] ), is described next. 3.1 Runs and systems We can view our endeavor as the investigation of a class of two-player protocols (see <ref> [ TMG88 ] </ref> ). Our players are the robot, which follows the motion command, and the environment, which decides nondeterministically how the robot actually moves and what it senses, within given margins.
References-found: 18

