URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-96-04.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Email: E-mail avg@cs.ucsc.edu kamiya@cs.ucsc.edu.  
Title: The Partial Rehabilitation of Propositional Resolution  
Author: Allen Van Gelder Fumiaki Kamiya 
Keyword: Key Words: Satisfiability, Boolean formula, propositional formula, autarky, resolution, refutation, model, theorem prov ing, model elimination.  
Date: July 26, 1996  
Address: Santa Cruz 95064 UCSC-CRL-96-04  
Affiliation: Baskin Center for Computer Engineering and Information Sciences University of California,  
Abstract: Resolution has not been an effective tool for deciding satisfiability of propositional CNF formulas, due to explosion of the search space, particularly when the formula is satisfiable. A new pruning method is described, which is designed to eliminate certain refutation attempts that cannot succeed. The method exploits the concept of "autarky", which was introduced by Monien and Speckenmeyer. New forms of lemma creation are also introduced, which eliminate the need to carry out refutation attempts that must succeed. The resulting algorithm, called "Modoc", is a modification of propositional model elimination. Informally, an autarky is a "self-sufficient" model for some clauses, but which does not affect the remaining clauses of the formula. Whereas Monien and Speckenmeyer's work was oriented toward finding a model, our method has as its primary goal to find a refutation in the style of model elimination. However, Modoc finds a model if it fails to find a refutation, essentially by combining autarkies. Unlike the pruning strategies of most refinements of resolution, autarky-related pruning only prunes refutation attempts that ultimately will be unsuccessful; consequently, it will not force the underlying search to find an unnecessarily long refutation. The other major innovation is Modoc's lemma management. Building upon the C-literal strategy proposed by Shostak and studied further by Letz, Mayr and Goller, methods for "eager" lemmas, "quasi-persistent" lemmas, and two forms of controlled cut are described. Experimental data based on an implementation in C is reported. On random formulas, Modoc is not as effective as recently reported model-searching methods. On more structured formulas, such as circuit fault detection, it is superior. 
Abstract-found: 1
Intro-found: 1
Reference: [AS92] <author> O. L. Astrachan and M. E. Stickel. </author> <title> Caching and lemmaizing in model elimination theorem provers. </title> <editor> In D. Kapur, editor, </editor> <booktitle> Automated Deduction - CADE-11. Proceedings of 11th International Conference on Automated Deduction (Saratoga Springs, </booktitle> <address> NY, USA, </address> <month> 15-18 June </month> <year> 1992), </year> <pages> pages 224-38. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1992. </year>
Reference: [BJL86] <author> C. E. Blair, R. G. Jeroslow, and J. K. Lowe. </author> <title> Some results and experiments in programming techniques for propositional logic. </title> <journal> Comput. & Operations Research, </journal> <volume> 13(5) </volume> <pages> 633-645, </pages> <year> 1986. </year>
Reference: [CA93] <author> J. Crawford and L. Auton. </author> <title> Experimental results on the cross-over point in satisfiability problems. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence; AAAI-93 and IAAI-93 (Washington, </booktitle> <address> DC, USA, </address> <month> 11-15 July </month> <year> 1993), </year> <pages> pages 21-7. </pages> <address> Menlo Park, CA, USA: </address> <publisher> AAAI Press, </publisher> <year> 1993. </year>
Reference: [Caf93] <author> R. Caferra. </author> <title> A tableaux method for systematic simultaneous search for refutations and models using equational problems. </title> <journal> Journal of Logic and Computation, </journal> <volume> 3(1) </volume> <pages> 3-25, </pages> <month> February </month> <year> 1993. </year> <month> 20 </month>
Reference: [DABC95] <author> O. Dubois, P. Andre, Y. Boufkhad, and J. Carlier. </author> <title> SAT versus UNSAT. </title> <editor> In D. S. Johnson and M. Trick, editors, </editor> <title> Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge., </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1995. </year>
Reference: [DE92] <author> M. Dalal and D. Etherington. </author> <title> A hierarchy of tractable satisfiability problems. </title> <journal> Information Processing Letters, </journal> <volume> 44 </volume> <pages> 173-180, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: Dalal and Etherington have shown that unit-clause propagation can be implemented in linear time <ref> [DE92] </ref>. This implementation is practical, as well as theoretical, and is used by numerous implementers. Modoc uses it to derive eager lemmas. <p> The DPLL program, due to Davis, Putnam, Logemann and Loveland [DP60, DLL62] is efficiently implemented using the unit propagation method of Dalal and Etherington <ref> [DE92] </ref>. The 2cl program is one of the best performing all around satisfiability programs reported in the literature [VGT96]. Results on random 3CNF formulas are summarized in Figure 13.
Reference: [DLL62] <author> M. Davis, G. Logemann, and D. Loveland. </author> <title> A machine program for theorem-proving. </title> <journal> Communications of the ACM, </journal> <volume> 5 </volume> <pages> 394-397, </pages> <year> 1962. </year>
Reference-contexts: The DPLL program, due to Davis, Putnam, Logemann and Loveland <ref> [DP60, DLL62] </ref> is efficiently implemented using the unit propagation method of Dalal and Etherington [DE92]. The 2cl program is one of the best performing all around satisfiability programs reported in the literature [VGT96]. Results on random 3CNF formulas are summarized in Figure 13.
Reference: [DP60] <author> M. Davis and H. Putnam. </author> <title> A computing procedure for quantification theory. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 7 </volume> <pages> 201-215, </pages> <year> 1960. </year>
Reference-contexts: The DPLL program, due to Davis, Putnam, Logemann and Loveland <ref> [DP60, DLL62] </ref> is efficiently implemented using the unit propagation method of Dalal and Etherington [DE92]. The 2cl program is one of the best performing all around satisfiability programs reported in the literature [VGT96]. Results on random 3CNF formulas are summarized in Figure 13.
Reference: [Elk89] <author> C. Elkan. </author> <title> Conspiracy numbers and caching for searching and/or trees and theorem-proving. </title> <booktitle> In Eleventh Int'l Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 20-25, </pages> <address> Palo Alto, CA, 1989. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [FL93] <author> C. Fermuller and A. Leitsch. </author> <title> Model building by resolution. </title> <editor> In E. Borger, G. Jager, H. Kleine Bun-ing, S. Martini, et al., editors, </editor> <booktitle> Computer Science Logic. 6th Workshop, CSL '92. </booktitle> <address> (San Miniato, Italy, 28 Sept.-2 Oct. </address> <year> 1992), </year> <pages> pages 134-48. </pages> <address> Berlin, Germany: </address> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [FLSY74] <author> S. Fleisig, D. W. Loveland, A. K. Smiley, and D. L. Yarmush. </author> <title> An implementation of the model elimination proof procedure. </title> <journal> JACM, </journal> <volume> 21(1) </volume> <pages> 124-139, </pages> <year> 1974. </year>
Reference: [GW93] <author> I. P. Gent and T. Walsh. </author> <title> Towards an understanding of hill-climbing procedures for SAT. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence; AAAI-93 and IAAI-93 (Washington, </booktitle> <address> DC, USA, </address> <month> 11-15 July </month> <year> 1993), </year> <pages> pages 28-33. </pages> <address> Menlo Park, CA, USA: </address> <publisher> AAAI Press, </publisher> <year> 1993. </year>
Reference: [HF90] <author> J. N. Hooker and C. Fedjki. </author> <title> Branch-and-cut solution of inference problems in propositional logic. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 1 </volume> <pages> 123-139, </pages> <year> 1990. </year>
Reference: [HHT94] <author> F. Harche, J.N. Hooker, and G.L. Thompson. </author> <title> A computational study of satisfiability algorithms for propositional logic. </title> <journal> ORSA Journal on Computing, </journal> <volume> 6(4) </volume> <pages> 423-35, </pages> <month> Fall </month> <year> 1994. </year>
Reference: [JSD95] <author> B. Jaumard, M. Stan, and J. Desrosiers. </author> <title> Tabu search and a quadratic relaxation for the satisfiability problem. </title> <editor> In D. S. Johnson and M. Trick, editors, </editor> <title> Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge., </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1995. </year>
Reference: [JW90] <author> R. Jeroslow and J. Wang. </author> <title> Solving propositional satisfiability problems. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 1 </volume> <pages> 167-187, </pages> <year> 1990. </year>
Reference: [KK71] <author> R. Kowalski and D. Kuehner. </author> <title> Linear resolution with selection function. </title> <journal> Artificial Intelligence, </journal> 2(2/3):227-260, Winter 1971. 
Reference: [Lar92] <author> T. Larrabee. </author> <title> Test pattern generation using Boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 11(1) </volume> <pages> 6-22, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The results contain substantial evidence that autarky pruning overcomes the major inefficiency of model elimination. Modoc is not yet competitive with the leading model-search methods on random formulas, but outperforms them on formulas generated from an automated test pattern generation (ATPG) program <ref> [Lar92] </ref>. (Hereinafter, we call these formulas circuit formulas. These formulas are satisfiable if and only if the outputs of the fault-free and faulty circuits differ for some common input.) 7.1 Effect of Autarky Pruning This section compares modoc to model elimination without autarky pruning 2 .
Reference: [LMG94] <author> R. Letz, K. Mayr, and C. Goller. </author> <title> Controlled integration of the cut rule into connection tableau calculi. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 13(3) </volume> <pages> 297-337, </pages> <month> December </month> <year> 1994. </year> <month> 21 </month>
Reference-contexts: Introduction of the "virtual clause" described above is essentially a form of the cut rule <ref> [LMG94] </ref>. If S is the original set of clauses, we have discovered (S + A 0 ) ` q and (S + A 0 ) ` :q. Now the cut rule infers (S + A 0 ) ` ;.
Reference: [Lov69] <author> D. W. Loveland. </author> <title> A simplified format for the model elimination theorem-proving procedure. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 16(3) </volume> <pages> 349-363, </pages> <month> July </month> <year> 1969. </year>
Reference: [Lov72] <author> D. W. Loveland. </author> <title> A unifying view of some linear Herbrand procedures. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 19(2) </volume> <pages> 366-384, </pages> <month> April </month> <year> 1972. </year>
Reference: [Lov78] <author> D. W. Loveland. </author> <title> Automated Theorem Proving: A Logical Basis. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1978. </year>
Reference: [MS85] <author> B. Monien and E. Speckenmeyer. </author> <title> Solving satisfiability in less than 2 n steps. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 10 </volume> <pages> 287-295, </pages> <year> 1985. </year>
Reference: [MZ82] <author> J. Minker and G Zanon. </author> <title> An extension to linear resolution with selection function. </title> <journal> Information Processing Letters, </journal> <volume> 14(3) </volume> <pages> 191-194, </pages> <month> June </month> <year> 1982. </year>
Reference: [Pre95] <author> D. Pretolani. </author> <title> Efficiency and stability of hypergraph SAT algorithms. </title> <editor> In D. S. Johnson and M. Trick, editors, </editor> <title> Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge., </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1995. </year>
Reference: [SFS95] <author> J. Slaney, M. Fujita, and M. Stickel. </author> <title> Automated reasoning and exhaustive search: Quasigroup existence problems. </title> <journal> Computers and Mathematics with Applications, </journal> <volume> 29(2) </volume> <pages> 115-32, </pages> <year> 1995. </year>
Reference: [Sho74] <author> R. E. Shostak. </author> <title> A Graph-Theoretic View of Resolution Theorem-Proving. </title> <type> PhD thesis, </type> <institution> Center for Research in Computing Technology, Harvard University, </institution> <year> 1974. </year> <note> Also available from CSL, </note> <institution> SRI International, </institution> <address> Menlo Park, CA. </address>
Reference: [Sho76] <author> R. E. Shostak. </author> <title> Refutation graphs. </title> <journal> Artificial Intelligence, </journal> <volume> 7 </volume> <pages> 51-64, </pages> <year> 1976. </year>
Reference: [SKC95] <author> B. Selman, H. A. Kautz, and B. Cohen. </author> <title> Local search strategies for satisfiability testing. </title> <editor> In D. S. Johnson and M. Trick, editors, </editor> <title> Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge., </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1995. </year>
Reference: [Sla94] <author> J. Slaney. </author> <title> The crisis in finite mathematics: Automated reasoning as cause and cure. </title> <editor> In A. Bundy, editor, </editor> <booktitle> Automated Deduction - CADE-12. Proceedings of 12th International Conference on Automated Deduction (Nancy, France, June/July 1994), </booktitle> <pages> pages 1-13. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference: [SLM92] <author> B. Selman, H. Levesque, and D. Mitchell. </author> <title> A new method for solving hard satisfiability problems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <pages> pages 440-446, </pages> <address> San Jose, CA., </address> <month> July </month> <year> 1992. </year>
Reference: [SS95] <author> C. B. Suttner and G. Sutcliffe. </author> <title> TPTP v1.2.0. </title> <type> Technical Report AR-95-03, </type> <institution> Institut fur Informatik, TU Munchen, Germany, </institution> <month> November </month> <year> 1995. </year>
Reference: [Sti94] <author> M. E. Stickel. </author> <title> Upside-down meta-interpretation of the model elimination theorem-proving procedure for deduction and abduction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 13(2) </volume> <pages> 189-210, </pages> <month> October </month> <year> 1994. </year>
Reference: [VG95] <author> A. Van Gelder. </author> <title> Simultaneous construction of refutations and models for propositional formulas. </title> <type> Technical Report UCSC-CRL-95-61, </type> <institution> UC Santa Cruz, </institution> <address> Santa Cruz, CA., </address> <year> 1995. </year> <note> (submitted for publication). 22 </note>
Reference: [VGT96] <author> A. Van Gelder and Y. K. Tsuji. </author> <title> Satisfiability testing with more reasoning and less guessing. </title> <editor> In D. S. Johnson and M. Trick, editors, </editor> <title> Cliques, Coloring, and Satisfiability: Second DIMACS Implementation Challenge., </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1996. </year>
Reference-contexts: Figure 11 shows the average and maximum search time (CPU time) for each formula class using various lemma strategies and cuts. Figure 12 shows the significance of improvements for random formulas and circuit formulas using Student's t-test [WEC91]. The use of Student's t-test was advocated in <ref> [VGT96, Appendix A] </ref>. <p> The DPLL program, due to Davis, Putnam, Logemann and Loveland [DP60, DLL62] is efficiently implemented using the unit propagation method of Dalal and Etherington [DE92]. The 2cl program is one of the best performing all around satisfiability programs reported in the literature <ref> [VGT96] </ref>. Results on random 3CNF formulas are summarized in Figure 13. These formulas were generated according to the constant-clause-width model: every clause contains 3 different variables and any combination of literal polarities is equally likely. <p> However, the growth plot shows that modoc still underperforms model-searching methods on random formulas. Results on some circuit formulas are summarized in Figure 14. The same formulas reported in <ref> [VGT96] </ref> were used. In all but one circuit family, modoc ran faster than 2cl on the average. Indeed, on the harder families it ran 30-40 times faster. As witnessed in Section 7.1, the performance of Modoc strongly depends on autarky pruning.
Reference: [WEC91] <author> J. Welkowitz, R. B. Ewen, and J. Cohen. </author> <title> Introductory Statistics for the Behavioral Sciences. </title> <publisher> Harcourt Brace Jovanovich College, </publisher> <address> fourth edition, </address> <year> 1991. </year>
Reference-contexts: Figure 11 shows the average and maximum search time (CPU time) for each formula class using various lemma strategies and cuts. Figure 12 shows the significance of improvements for random formulas and circuit formulas using Student's t-test <ref> [WEC91] </ref>. The use of Student's t-test was advocated in [VGT96, Appendix A].
Reference: [ZS94] <author> H. Zhang and M. Stickel. </author> <title> Implementing the Davis-Putnam algorithm by tries. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, The University of Iowa, </institution> <year> 1994. </year> <month> 23 </month>
References-found: 37

