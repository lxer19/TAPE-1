URL: http://theory.lcs.mit.edu/~harchol/Papers/SODA94-oblivious.ps
Refering-URL: http://theory.lcs.mit.edu/~harchol/Papers/papers.html
Root-URL: 
Title: Queueing Analysis of Oblivious Packet-Routing Networks  
Author: Mor Harchol-Balter Paul E. Black 
Date: November 1, 1993  
Abstract: We consider the problem of determining the probability distribution on the queue sizes in a general oblivious packet-routing network. We assume packets continuously arrive at each node of the network according to a Poisson Process with rate . We also assume that an edge may be traversed by only one packet at a time, and the time to traverse an edge is an exponentially distributed random variable with mean 1. We show that the queueing-theoretic solution to the problem requires solving a large system of simultaneous equations. We present a simple combinatorial formula which represents the solution to the system of queueing equations. This combinatorial formula is especially simple and insightful in the case of greedy routing to random destinations. We use the formula to obtain results including: the probability distribution on the queue sizes, the expected queue sizes, and the expected packet delay (all as a function of and n) in the case of an n fi n array network and a torus network with greedy randomized routing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Stren Asmussen. </author> <title> Applied Probability and Queues. </title> <publisher> John Wiley, </publisher> <year> 1987. </year>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], [20], [8] <ref> [1] </ref>, [2] and the foundational queueing papers [6], [7], [5] make this observation.

Reference: [3] <institution> Mor Harchol and Paul Black Queueing Theory Analysis of Greedy Routing on Square Arrays. Tech. Report Number csd-93-746, Computer Science Dept., U.C. Berkeley, Berkeley, </institution> <address> CA, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Section 5 and Section 6 apply our result to arrays and tori respectively. Lastly, Section 7 describes our simulations contrasting exponential edge-traversal times versus constant edge-traversal times. For the omitted proofs, see <ref> [3] </ref> and [4]. 2 Multiple-Job-Class Open Jackson Queueing Network Model The Queueing Network Model we use [2], [5] assumes there are m servers with one processor per server. There are r classes, or types of packets.
Reference: [4] <institution> Mor Harchol and Paul Black Queueing Theory Analysis of Greedy Routing on Arrays and Tori. Tech. Report Number csd-93-756, Computer Science Dept., U.C. Berkeley, Berkeley, </institution> <address> CA, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Section 5 and Section 6 apply our result to arrays and tori respectively. Lastly, Section 7 describes our simulations contrasting exponential edge-traversal times versus constant edge-traversal times. For the omitted proofs, see [3] and <ref> [4] </ref>. 2 Multiple-Job-Class Open Jackson Queueing Network Model The Queueing Network Model we use [2], [5] assumes there are m servers with one processor per server. There are r classes, or types of packets.
Reference: [5] <author> James R. </author> <title> Jackson Jobshop-Like Queueing Systems. </title> <journal> Management Science, </journal> <volume> vol 10, </volume> <year> 1963, </year> <pages> pp 131-142. </pages>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], [20], [8] [1], [2] and the foundational queueing papers [6], [7], <ref> [5] </ref> make this observation. Perhaps the reason that this combinatorial relation hasn't been noticed before is that queueing theory, although extremely popular for communication and scheduling problems (see for example [9] and [14]), hasn't been applied nearly as much to randomized routing on networks. <p> Section 5 and Section 6 apply our result to arrays and tori respectively. Lastly, Section 7 describes our simulations contrasting exponential edge-traversal times versus constant edge-traversal times. For the omitted proofs, see [3] and [4]. 2 Multiple-Job-Class Open Jackson Queueing Network Model The Queueing Network Model we use [2], <ref> [5] </ref> assumes there are m servers with one processor per server. There are r classes, or types of packets. Packets of class l arrive at server i from outside the network according to a Poisson Process with rate r (l) .
Reference: [6] <author> F. P. Kelly. </author> <title> Networks of Queues With Customers of Different Types. </title> <journal> Journal of Applied Probability, </journal> <volume> vol 12, </volume> <year> 1975, </year> <pages> pp 542-554. </pages>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], [20], [8] [1], [2] and the foundational queueing papers <ref> [6] </ref>, [7], [5] make this observation. Perhaps the reason that this combinatorial relation hasn't been noticed before is that queueing theory, although extremely popular for communication and scheduling problems (see for example [9] and [14]), hasn't been applied nearly as much to randomized routing on networks.
Reference: [7] <author> F. P. Kelly. </author> <title> Networks of Queues. </title> <booktitle> Advances in Applied Probability, </booktitle> <volume> vol 8, </volume> <year> 1976, </year> <pages> pp 416-432. </pages>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], [20], [8] [1], [2] and the foundational queueing papers [6], <ref> [7] </ref>, [5] make this observation. Perhaps the reason that this combinatorial relation hasn't been noticed before is that queueing theory, although extremely popular for communication and scheduling problems (see for example [9] and [14]), hasn't been applied nearly as much to randomized routing on networks.
Reference: [8] <author> Leonard Kleinrock. </author> <title> Queueing Systems. Volume I: Theory. </title> <publisher> John Wiley, </publisher> <year> 1975. </year>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], [20], <ref> [8] </ref> [1], [2] and the foundational queueing papers [6], [7], [5] make this observation.
Reference: [9] <author> Sunil Kumar and P. R. Kumar. </author> <title> Performance Bounds for Queueing Networks and Scheduling Policies. </title> <type> Preprint. </type>
Reference-contexts: Perhaps the reason that this combinatorial relation hasn't been noticed before is that queueing theory, although extremely popular for communication and scheduling problems (see for example <ref> [9] </ref> and [14]), hasn't been applied nearly as much to randomized routing on networks. Besides its importance from a computational point of view, the above combinatorial formula is very important because of the insight it gives us into the queue lengths.
Reference: [10] <author> F. Thomas Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: </title> <publisher> Arrays-Trees-Hypercubes. Morgan Kaufmann, </publisher> <year> 1992, </year> <pages> pp. 172 - 173. </pages>
Reference-contexts: We choose this setup specifically because it is similar to the scenario analyzed by Leighton 2 . [11] 2 Although <ref> [10] </ref> and [15] also derive results on queue sizes for the array, they only analyze permutation routing. 2 Since for an array the number of greedy paths through a node increases as the Euclidean distance of the node from the center of the array decreases, we see by our combinatorial formula
Reference: [11] <author> F. Thomas Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: </title> <publisher> Arrays-Trees-Hypercubes. Morgan Kaufmann, </publisher> <year> 1992, </year> <pages> pp. 173-178. </pages>
Reference-contexts: Using the Jackson Queueing Formulae requires first solving a very large system of simultaneous equations. Without first solving all these simultaneous equations, we have no information as to which edges have the greatest queue buildup, or what that queue buildup is. Leighton's work <ref> [11] </ref> addresses the above problem where D is constant equal to 1. In this case, determining the queue sizes is much more difficult. Leighton's analysis requires complex probabilistic reasoning and also the assumption that the packets are serviced in a Farthest-First order, rather than FCFS. <p> We choose this setup specifically because it is similar to the scenario analyzed by Leighton 2 . <ref> [11] </ref> 2 Although [10] and [15] also derive results on queue sizes for the array, they only analyze permutation routing. 2 Since for an array the number of greedy paths through a node increases as the Euclidean distance of the node from the center of the array decreases, we see by <p> This becomes infinite when ^ i = 1. Since by Theorem 6, ^ i n n 2 , we require &lt; 4 n . This bound agrees with that derived from bisection arguments by Leighton <ref> [11] </ref>. We know from Theorem 6 that the maximum queue size occurs at the array center.
Reference: [12] <author> Debasis Mitra and R. Cieslak. </author> <title> Randomized Parallel Communications. </title> <booktitle> Proc. of the 1986 International Conference on Parallel Processing, </booktitle> <pages> pp 224-230. </pages>
Reference-contexts: Leighton's results are for the case where N is a p p N array or torus, each packet has a random destination, and r i = , 8i. Unfortunately, the results are much more limited than results typically obtained using queueing 1 theory. 1 Mitra and Cieslak <ref> [12] </ref> study expected delay times on the Omega Network where packets arrive according to a Poisson Process with rate . They assume the edge service time distribution,D, is exponential. They are therefore able to translate their problem into a product-form queueing network.
Reference: [13] <author> Stephen K. Park and Keith W. Miller. </author> <title> Random Number Generators: Good Ones are Hard to Find. </title> <journal> Communications of the ACM, </journal> <volume> vol 31, num 10, </volume> <month> Oct </month> <year> 1988, </year> <pages> pp 1192-1201. </pages>
Reference-contexts: For any particular n and p, we used exactly the same (random) arrival pattern for both exponential and constant service times. We adapted Fuat C. Baran's implementation of the Minimal Standard PseudoRandom Number Generator (A = 16807) proposed by Park and Miller (see <ref> [13] </ref>) for a pseudo-random number generator. Simulations began with all queues empty, and ran until the growth of the total queue size slowed down, at which point it was assumed the network had reached steady state.
Reference: [14] <author> J. Perkins and P. R. Kumar. </author> <title> Stable, Distributed, Real-Time Scheduling of Flexible Manufacturing/Assembly/Disassembly Systems. </title> <type> Preprint. </type>
Reference-contexts: Perhaps the reason that this combinatorial relation hasn't been noticed before is that queueing theory, although extremely popular for communication and scheduling problems (see for example [9] and <ref> [14] </ref>), hasn't been applied nearly as much to randomized routing on networks. Besides its importance from a computational point of view, the above combinatorial formula is very important because of the insight it gives us into the queue lengths.
Reference: [15] <author> Sanguthevar Rajasekaran and Thanasis Tsan-tilas. </author> <title> Optimal Routing Algorithms for Mesh-Connected Processor Arrays. </title> <journal> Algorithmica, </journal> <volume> vol 8, </volume> <pages> pp 21-38. </pages>
Reference-contexts: We choose this setup specifically because it is similar to the scenario analyzed by Leighton 2 . [11] 2 Although [10] and <ref> [15] </ref> also derive results on queue sizes for the array, they only analyze permutation routing. 2 Since for an array the number of greedy paths through a node increases as the Euclidean distance of the node from the center of the array decreases, we see by our combinatorial formula that the
Reference: [16] <author> Sheldon M. Ross. </author> <title> Stochastic Processes. </title> <publisher> John Wi-ley and Sons, </publisher> <address> NY, </address> <year> 1983. </year>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts <ref> [16] </ref>, [20], [8] [1], [2] and the foundational queueing papers [6], [7], [5] make this observation.
Reference: [17] <author> George D. Stamoulis and John N. Tsitsiklis. </author> <title> The Efficiency of Greedy Routing in Hypercubes and Butterflies. </title> <journal> Journal of the ACM, </journal> <year> 1991. </year>
Reference-contexts: Furthermore, the expected delay with exponential service times never exceeds the expected delay with constant service times by more than a factor of 2. Stamoulis and Tsitsklis <ref> [17] </ref> also take advantage of queueing theory. Their results are restricted to layered networks.
Reference: [18] <author> L. G. Valiant and G. J. Brebner. </author> <title> Universal 8 Schemes for Parallel Communication. </title> <booktitle> Thirteenth Annual ACM Symposium on Theory of Comput ing, </booktitle> <year> 1981, </year> <pages> pp 263-277. </pages>
Reference-contexts: We derive a simple combinatorial formula for the total arrival rate at each node. In the special case where packets are routed to random destinations (as is done in the first half of any randomized routing algorithm <ref> [18] </ref>) and where r i = , 8i, our combinatorial formula states that: (Total arrival rate into a node of Q) = m (no. paths through the node consistent with R) where a path is consistent with R if it is a path specified by R. <p> doubly-directed array, where * New packets arrive at processor i of N according to a Poisson Process with rate . * A packet contains a destination field which is a random processor in the array and a data field. (This assumption comprises the first half of any randomized routing algorithm <ref> [18] </ref>). * The time it takes for a packet to traverse an edge is exponentially distributed with mean 1. * Only one packet may traverse a particular directed edge at a time. If two packets require the same edge, contention is resolved via First-Come First-Serve (FCFS).
Reference: [19] <author> Victor L. </author> <title> Wallace Algebraic Techniques for Nu merical Solution of Queueing Networks. </title> <booktitle> Math ematical Methods in Queueing Theory (Proc. Conf., </booktitle> <institution> Western Michigan University, </institution> <address> Kalamazoo, </address> <booktitle> Mich., 1973) in Lecture Notes in Economics and Mathematical Systems, </booktitle> <volume> vol 98, </volume> <year> 1974, </year> <pages> pp 295-305. </pages>
Reference-contexts: Much research has been done specifically into how to solve the system of simultaneous equations that arise from queueing theory. Wallace <ref> [19] </ref> presents an extensive survey of methods used to solve the system of equations for the total arrival rate at each node. All the methods however still require a significant amount of work and some give only approximate solutions. <p> Note that system of equations is linear and has 0=1 coefficients, however, as pointed out by <ref> [19] </ref>, solving the equations is still a major task when m is large.
Reference: [20] <institution> Jean Walrand, U.C. Berkeley, Dept. of Engineer ing. </institution> <type> Personal Communication. </type>
Reference-contexts: This formula seems so intuitive that we are surprised none of our references, including the following major queueing texts [16], <ref> [20] </ref>, [8] [1], [2] and the foundational queueing papers [6], [7], [5] make this observation.
References-found: 19

