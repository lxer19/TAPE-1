URL: http://www.cs.unc.edu/~csa/proposals/azuma.ps
Refering-URL: http://www.cs.unc.edu/~csa/proposals/
Root-URL: http://www.cs.unc.edu
Title: Predictive tracking for head-mounted displays Final version Thesis Statement: Predictive tracking can noticeably reduce the
Author: Ronald Azuma 
Degree: A dissertation proposal  
Date: April 29, 1992  
Abstract-found: 0
Intro-found: 1
Reference: [Bajura92] <author> Bajura, Mike, Henry Fuchs, Ryutarou Ohbuchi. </author> <title> Merging Virtual Reality with the Real World: Seeing Ultrasound Imagery within the Patient. </title> <note> UNC Chapel Hill technical report TR 92-005 [accepted to SIGGRAPH 92]. </note>
Reference-contexts: If we place a virtual vase on top of a real pedestal, that vase should appear fixed to the pedestal, no matter how the user changes his vantage point. A recent first attempt at an ultrasound application with a see-through HMD <ref> [Bajura92] </ref> vividly demonstrated that accurate registration of virtual objects to real-world objects is not easy. The virtual objects swam and floated in space as the user rotated his head, compromising the illusion we hope to achieve. What are the sources of registration error? One source is the tracking subsystem.
Reference: [Berg83] <author> Berg, Russell F. </author> <title> Estimation and Prediction for Maneuvering Target Trajectories. </title> <journal> IEEE Trans. on Automatic Control, </journal> <note> AC-28, 3 (March 1983) pp. 294-304. 10 </note>
Reference-contexts: A wealth of literature exists on tracking and estimation problems, primarily for military applications, such as how to track the path of an enemy airplane, or how to predict the path of an incoming ballistic missile. Representative examples include [Blom84] [Chang84] <ref> [Berg83] </ref> [Bolger87] [Tugnait87].
Reference: [Blom84] <author> Blom, H. A. P. </author> <title> An Efficient Filter for Abruptly Changing Systems. </title> <booktitle> Proceedings of 23rd Conference on Decision and Control (Las Vegas, </booktitle> <address> NV, </address> <month> Dec. </month> <pages> 1984) pp. 656-658. </pages>
Reference-contexts: Still, this literature can serve as a source of ideas. A wealth of literature exists on tracking and estimation problems, primarily for military applications, such as how to track the path of an enemy airplane, or how to predict the path of an incoming ballistic missile. Representative examples include <ref> [Blom84] </ref> [Chang84] [Berg83] [Bolger87] [Tugnait87].
Reference: [Bolger87] <author> Bolger, P. L. </author> <title> Tracking a Maneuvering Target Using Input Estimation. </title> <journal> IEEE Trans. on Aerospace and Electronic Systems, </journal> <note> AES-23, 3 (May 1987) pp. 298-310. </note>
Reference-contexts: A wealth of literature exists on tracking and estimation problems, primarily for military applications, such as how to track the path of an enemy airplane, or how to predict the path of an incoming ballistic missile. Representative examples include [Blom84] [Chang84] [Berg83] <ref> [Bolger87] </ref> [Tugnait87].
Reference: [Brooks88] <author> Brooks Jr., Frederick P. </author> <title> Grasping Reality Through Illusion - Interactive Graphics Serving Science. </title> <booktitle> Proceedings of SIGCHI 88 (Washington D.C., </booktitle> <pages> 15-19 May 1988) pp. 1-11. </pages>
Reference-contexts: We must be able to argue that the 8 metrics are reasonable, and the ultimate basis is perception. The strongest support would come from a series of comprehensive user studies, a task probably worthy of a PhD by itself. Instead of pursuing findings <ref> [Brooks88] </ref>, I propose to justify my metrics through rules-of-thumb and observations, generated by small user studies based on a few tasks that users must perform. These tasks should cover a wide spectrum of ranges, scales, speeds, and precision in user motion.
Reference: [CAE86] <institution> Flight simulator wide field-of-view helmet-mounted infinity display system. </institution> <type> Technical report AFHRL-85-59, </type> <institution> Williams AFB, AZ: Operations Training Division Air Force Human Resources Laboratory (May 1986), </institution> <note> pp. 48-64. </note>
Reference-contexts: Neither the method nor the resulting graphs are convincing. Uwe List [List83] uses two accelerometers mounted on the helmet to detect yaw motion. The acceleration values are integrated in a very simple scheme to predict yaw orientation at a given time in the future. CAEs 1986 technical report <ref> [CAE86] </ref> describes the third and most sophisticated method. It uses accelerometers to cover all three orientation axes. These signals are integrated to predict future rotation angles, and these predictions are blended with the angles actually measured by the tracker to eliminate drift and long-term errors. <p> However, we were able to learn some facts from George Kelly [Kelly92], who worked on an FOHMD at Williams Air Force Base. That particular machine uses rate gyroscopes to measure velocity, rather than using accelerometers, but other than that the basic approach is similar to the one described in <ref> [CAE86] </ref>. The velocity values are integrated to predict future orientation angles, and these are blended with the values generated by the tracker. At least three groups have tried Kalman filters as the basis of prediction routines.
Reference: [Chang84] <author> Chang, Chaw-Bing, John Tabaczynski. </author> <title> Application of State Estimation to Target Tracking. </title> <journal> IEEE Trans. on Automatic Control, AC-29, </journal> <volume> 2 (Feb. </volume> <pages> 1984) pp. 98-109. </pages>
Reference-contexts: A wealth of literature exists on tracking and estimation problems, primarily for military applications, such as how to track the path of an enemy airplane, or how to predict the path of an incoming ballistic missile. Representative examples include [Blom84] <ref> [Chang84] </ref> [Berg83] [Bolger87] [Tugnait87].
Reference: [Crane84] <author> Crane, D. F. </author> <title> The effects of time delay in man-machine control systems: implications for design of flight simulator visual-display-delay compensation. </title> <booktitle> Proceedings of the IMAGE III conference (1984) pp. </booktitle> <pages> 331-343. </pages>
Reference-contexts: They have had problems with overshoots caused by rapid acceleration or deceleration, and a conversation with Dan Ling indicated that they have not done much work in this area. The flight simulation world has also attempted to deal with latency problems; examples include Crane <ref> [Crane84] </ref> and McFarland [McFarland86] [McFarland88]. These do not directly apply to HMDs or head motion. Instead, they model the aircraft and the pilot controlling it in the simulator, attempting to increase the stability and reduce the apparent lag of the system.
Reference: [Ellsworth92] <author> Ellsworth, David. </author> <type> Personal communication, </type> <month> Feb. 17, </month> <year> 1992. </year>
Reference-contexts: But modern graphics systems, in their quest to increase throughput, are heavily pipelined, increasing latency. For example, Pixel-Planes 5 currently requires a minimum of 66 ms to render two low-resolution images <ref> [Ellsworth92] </ref>. Tracker latencies vary widely; our optical ceiling tracker [Ward92] typically has 20-30 ms lag, whereas the Polhemus Isotrack and Ascension Bird trackers average about 55 ms and 85 ms respectively [Mine92].
Reference: [Friedmann92] <author> Friedmann, Martin, Thad Starner, and Alex Pentland. </author> <title> Device Synchronization Using an Optimal Linear Filter. </title> <booktitle> Proceedings of 1992 Symposium on Interactive 3D Graphics (Cambridge, </booktitle> <address> MA, 29 March - 1 April 1992) pp. </address> <pages> 57-62. </pages>
Reference-contexts: By writing heuristics to detect these modes, they hope to do more accurate prediction and reduce some of the overshoot problems. While Liang only predicts orientation, Friedmann <ref> [Friedmann92] </ref> uses Kalman filters for predicting the position of a drumstick. With a Polhemus sensor taped to the drumstick, he tries to detect when the drumstick strikes a surface so he can play a computer-generated sound. Latency in the tracker forces him to predict when the collision occurs.
Reference: [Furness91] <author> Furness, Thomas. </author> <type> Personal communication, </type> <month> Aug. 1, </month> <year> 1991. </year>
Reference-contexts: It is highly unlikely that technological improvements alone will solve the latency problem. Human beings can detect astonishingly small amounts of lag. From his work on the Air Forces Super Cockpit program, Tom Furness reports that humans can perceive as little as 5 ms of lag <ref> [Furness91] </ref>. But modern graphics systems, in their quest to increase throughput, are heavily pipelined, increasing latency. For example, Pixel-Planes 5 currently requires a minimum of 66 ms to render two low-resolution images [Ellsworth92].
Reference: [Green92] <author> Green, Mark. </author> <type> Personal communication, </type> <month> March 24, </month> <year> 1992. </year>
Reference-contexts: They do note that there is a tradeoff between the smoothness of the filter output and how much it overshoots the correct values. A conversation with one of the coauthors <ref> [Green92] </ref> revealed that they are continuing this work by using a modal approach. This assumes that users orient their heads according to the following script: 1) Start rotation from a still position. 2) Rotation path follows a great arc of a circle. 3) Stop rotation.
Reference: [Kelly92] <author> Kelly, George. </author> <type> Personal communication, </type> <month> Feb. 7, </month> <year> 1992. </year>
Reference-contexts: Probably the best prediction system today runs on the commercially-available FOHMD. Unfortunately, CAE considers their prediction method proprietary, so no published references are available. However, we were able to learn some facts from George Kelly <ref> [Kelly92] </ref>, who worked on an FOHMD at Williams Air Force Base. That particular machine uses rate gyroscopes to measure velocity, rather than using accelerometers, but other than that the basic approach is similar to the one described in [CAE86].
Reference: [Liang91] <author> Liang, Jiandong, Chris Shaw, Mark Green. </author> <title> On Temporal-Spatial Realism in the Virtual Reality Environment. </title> <booktitle> Proceedings of the 4th Annual ACM Symposium on User Interface Software & Technology (Hilton Head, </booktitle> <address> SC, </address> <month> Nov. </month> <pages> 11-13 1991) pp. 19-25. </pages>
Reference-contexts: He states that prediction is accurate when head motion is very slow, but also notes that when the user comes to an abrupt halt, the predicted locations oscillate. Liang <ref> [Liang91] </ref> offers a simple but more believable Kalman filter that is based on the assumptions that head rotations are infrequent and that head translations occur mostly along the gaze direction. <p> This matches Richard Sos statement that the 6 bandwidth of human head motions is 0 to 1.5 Hz [So91], and the shape of our frequency response curve looks very similar to Liangs <ref> [Liang91] </ref>. The limited bandwidth of head motion puts quantifiable limits on how quickly head motion can change. Furthermore, when I looked at graphs of my rapid head motion, I found that the resulting curves were usually quite smooth, up to the noise limits of the optical tracker itself.
Reference: [List83] <author> List, Uwe H. </author> <title> Nonlinear Prediction of Head Movements for Helmet-Mounted Displays. </title> <type> Technical report AFHRL-TP-83-45, </type> <institution> William AFB, AZ: Operations Training Division Air Force Human Resources Laboratory (Dec. </institution> <year> 1983). </year>
Reference-contexts: Bernard Smith [Smith84] developed a very simple prediction method that essentially takes the last two known rotation matrices and 3 uses the component-by-component difference to linearly extrapolate what the rotation matrix will be in the future. Neither the method nor the resulting graphs are convincing. Uwe List <ref> [List83] </ref> uses two accelerometers mounted on the helmet to detect yaw motion. The acceleration values are integrated in a very simple scheme to predict yaw orientation at a given time in the future. CAEs 1986 technical report [CAE86] describes the third and most sophisticated method.
Reference: [McFarland86] <author> McFarland, Richard E. </author> <title> CGI Delay Compensation. </title> <note> NASA Technical Memorandum S6703 [N88-12932] (1986). </note>
Reference-contexts: They have had problems with overshoots caused by rapid acceleration or deceleration, and a conversation with Dan Ling indicated that they have not done much work in this area. The flight simulation world has also attempted to deal with latency problems; examples include Crane [Crane84] and McFarland <ref> [McFarland86] </ref> [McFarland88]. These do not directly apply to HMDs or head motion. Instead, they model the aircraft and the pilot controlling it in the simulator, attempting to increase the stability and reduce the apparent lag of the system.
Reference: [McFarland88] <author> McFarland, Richard E. </author> <title> Transport Delay Compensation for Computer-Generated Imagery Systems. </title> <type> NASA Technical Memorandum 100084 </type>
Reference-contexts: They have had problems with overshoots caused by rapid acceleration or deceleration, and a conversation with Dan Ling indicated that they have not done much work in this area. The flight simulation world has also attempted to deal with latency problems; examples include Crane [Crane84] and McFarland [McFarland86] <ref> [McFarland88] </ref>. These do not directly apply to HMDs or head motion. Instead, they model the aircraft and the pilot controlling it in the simulator, attempting to increase the stability and reduce the apparent lag of the system. McFarlands papers, for example, focus on the roll rate of the XV-15 aircraft.
Reference: [N88-17645] <author> (Jan. </author> <year> 1988). </year>
Reference: [Mine92] <author> Mine, Mark. </author> <type> Personal communication, </type> <month> March </month> <year> 1992. </year>
Reference-contexts: For example, Pixel-Planes 5 currently requires a minimum of 66 ms to render two low-resolution images [Ellsworth92]. Tracker latencies vary widely; our optical ceiling tracker [Ward92] typically has 20-30 ms lag, whereas the Polhemus Isotrack and Ascension Bird trackers average about 55 ms and 85 ms respectively <ref> [Mine92] </ref>. And even if the graphics engine runs at 60 Hz, there is a minimum 16 ms scanout delay for the video signal alone, irrespective of the image being drawn.
Reference: [Rebo88] <author> Rebo, Robert. </author> <title> A Helmet-Mounted Virtual Environment Display System. </title> <type> MS Thesis, </type> <institution> Air Force Institute of Technology (Dec. </institution> <year> 1988). </year>
Reference-contexts: Implementing the Kalman filter is easy; the difficult part is finding the model and noise characteristics appropriate for your system. Rebo, in his MS thesis <ref> [Rebo88] </ref>, built a very simple Kalman filter for head-motion prediction that treated acceleration as white noise. He states that prediction is accurate when head motion is very slow, but also notes that when the user comes to an abrupt halt, the predicted locations oscillate.
Reference: [Smith84] <author> Smith, Bernard R. Jr. </author> <title> Digital Head Tracking and Position Prediction for Helmet-Mounted Visual Display Systems. </title> <booktitle> AIAA 22nd Aerospace Sciences Meeting (Reno, </booktitle> <address> NV, </address> <month> Jan. </month> <pages> 84). 11 </pages>
Reference-contexts: We now survey these previous works. At least three prediction methods were developed for the prototypes of CAEs Fiber Optic Helmet-Mounted Display [FOHMD]. Bernard Smith <ref> [Smith84] </ref> developed a very simple prediction method that essentially takes the last two known rotation matrices and 3 uses the component-by-component difference to linearly extrapolate what the rotation matrix will be in the future. Neither the method nor the resulting graphs are convincing.
Reference: [So91] <author> So, Richard H. and Michael Griffin. </author> <title> Effects of Time Delays on Head Tracking Performance and the Benefits of Lag Compensation by Image Deflection. </title> <booktitle> AIAA Flight Simulation Technologies Conference (New Orleans, </booktitle> <address> LA, </address> <month> Aug. </month> <pages> 12-14 1991) pp. 124-130. </pages>
Reference-contexts: His graphs indicate that the predicted output overshoots by tens of millimeters, but since all his application wants is the instant when the collision occurs, overshoots are not nearly as big a problem as they are for HMD motion. Richard So <ref> [So91] </ref> uses a technique called image deflection, in which the graphics engine rasterizes an image much larger than needed to fill the HMD display. <p> Gary Bishop converted this data into the Fourier frequency domain and observed that almost all of the energy lies in frequencies of 2 Hz or less. This matches Richard Sos statement that the 6 bandwidth of human head motions is 0 to 1.5 Hz <ref> [So91] </ref>, and the shape of our frequency response curve looks very similar to Liangs [Liang91]. The limited bandwidth of head motion puts quantifiable limits on how quickly head motion can change.
Reference: [Suther68] <author> Sutherland, Ivan. </author> <title> A head-mounted three dimensional display. </title> <booktitle> Fall Joint Computer Conference, AFIPS Conference Proceedings, 33 (1968) pp. </booktitle> <pages> 757-764. </pages>
Reference-contexts: 0 Introduction First demonstrated in 1968 <ref> [Suther68] </ref>, head-mounted displays [HMDs] have the potential to immerse a user inside a virtual world, where the user can view and interact with computer-generated three-dimensional environments. However, todays systems far fall short of creating completely convincing virtual environments.
Reference: [Tugnait82] <author> Tugnait, Jitendra K. </author> <title> Detection and Estimation for Abruptly Changing Systems. </title> <journal> Automatica, </journal> <volume> 18, 5 (Sept. </volume> <pages> 1982) pp. 607-615. </pages>
Reference: [Wang90] <author> Wang, Chu P., Lawrence Koved, Semyon Dukach. </author> <title> Design for Interactive Performance in A Virtual Laboratory. </title> <booktitle> Proceedings of 1990 Symposium on Interactive 3D Graphics (Snowbird, </booktitle> <address> UT, </address> <year> 1990). </year> <note> In Computer Graphics, 24, 2 (March 1990) pp. 39-40. </note>
Reference-contexts: Unfortunately, this ingenious trick works only for orientation, and our existing Pixel-Planes 5 frame buffers are not capable of supporting this technique. Its main advantage is reducing how far into the future a prediction heuristic needs to estimate future locations. Wang <ref> [Wang90] </ref> from IBM Yorktown Heights mentions, but does not describe, a prediction system for tracking hand motion. They have had problems with overshoots caused by rapid acceleration or deceleration, and a conversation with Dan Ling indicated that they have not done much work in this area.
Reference: [Ward92] <author> Ward, Mark, Ronald Azuma, Robert Bennett, Stefan Gottschalk, Henry Fuchs. </author> <title> A Demonstrated Optical Tracker With Scalable Work Area for Head-Mounted Display Systems. </title> <booktitle> Proceedings of 1992 Symposium on Interactive 3D Graphics (Cambridge, </booktitle> <address> MA, 29 March - 1 April 1992) pp. </address> <pages> 43-52. </pages>
Reference-contexts: But modern graphics systems, in their quest to increase throughput, are heavily pipelined, increasing latency. For example, Pixel-Planes 5 currently requires a minimum of 66 ms to render two low-resolution images [Ellsworth92]. Tracker latencies vary widely; our optical ceiling tracker <ref> [Ward92] </ref> typically has 20-30 ms lag, whereas the Polhemus Isotrack and Ascension Bird trackers average about 55 ms and 85 ms respectively [Mine92].
References-found: 26

