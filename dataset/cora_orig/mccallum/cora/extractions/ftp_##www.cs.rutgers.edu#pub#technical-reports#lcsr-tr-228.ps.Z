URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-228.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Email: dlm@research.att.com  borgida@cs.rutgers.edu  
Title: Explaining Subsumption in Description Logics  
Author: Deborah L. McGuinness Alex Borgida 
Date: September 1994  
Address: Murray Hill, NJ 07974 USA  New Brunswick, NJ 08903  
Affiliation: Dept. of Computer Science Rutgers University and AT&T Bell Laboratories  Dept. of Computer Science Rutgers University  
Abstract: Description Logic-based systems include extensive, complex reasoning components that may produce results that surprise users, yet these systems typically provide little or no explanation support. In this paper, we explore the explanation of subsump-tion reasoning in Description Logics from one perspective|explanation for knowledge engineers. We adopt a deductive framework for presenting the variety of inferences supported in these systems, and thereby achieve a simple, uniform specification of the notion of explanation. We then address the problem of overly-long and overly-detailed explanations by introducing the notions of atomic descriptions and atomic explanations. We also provide an implementation perspective by discussing the design space and presenting some desiderata for explanation modules. We have implemented our approach in the Classic knowledge representation system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> At-Kaci, </author> <title> A Lattice Theoretic Approach to Computation Based on a Calculus of Partially-Ordered Type Structures. </title> <type> Ph.D. thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1984. </year>
Reference: [2] <author> T. Arora, R. Ramakrishnan, W.G. Roth, P. Seshadri, and D. Srivastava. </author> <title> Explaining Program Evaluation in Deductive Systems. </title> <note> Submitted for Publication, </note> <year> 1993. </year>
Reference-contexts: Thus, a simple trace of proof rule firings is not accessible and a trace of procedure calls would not be understandable to users. Deductive databases, such as LDL [18] and CORAL <ref> [2] </ref>, face a similar problem: although the knowledge base can be viewed as a declarative description of the system's beliefs, expressed in First Order Logic, and questions can be posed against this, the question answering process is optimized considerably and is carried out bottom-up.
Reference: [3] <author> A. Borgida. </author> <title> From Type Systems to Knowledge Representation: Natural Seman--tics Specifications for Description Logics. </title> <booktitle> In International Journal of Intelligent and Cooperative Information Systems, </booktitle> <address> pp.93-126, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: The key idea of our formalization is to cast the various kinds of reasoning into a standard format: proof rules in the style of "natural semantics" <ref> [12, 3] </ref>. Using these rules, which were developed post-facto from the semantics of the language, we can generate a logical chain of inferences to support any conclusion reached by the system. <p> The semantics of DLs, and in particular the rules for subsumption can also be expressed in this form <ref> [3] </ref>, by considering the judgment ff =) fi.
Reference: [4] <author> A. Borgida, </author> <title> "On the relationship between Description Logic and First Order Logic Queries", </title> <booktitle> Proc. </booktitle> <address> CIKM'94, </address> <note> (to appear). </note>
Reference-contexts: In ordinary logic, clausal form has been a favorite way of identifying "atomic com ponents" for formulas, especially under the term "prime implicant". One could therefore try to translate descriptions into formulae of FOL (see <ref> [4] </ref>), and verify atomic-ity by checking that the corresponding formula is a clause without conjuncts. Unfortunately, an atomic description such as (some [role-and p q] C) translates to x:(9y)p (x; y) ^ q (x; y) ^ C (y), which does have conjunction.
Reference: [5] <author> A. Borgida, R. J. Brachman, D. L. McGuinness, and L. A. Resnick. </author> <title> classic: A Structural Data Model for Objects. </title> <booktitle> In Proceedings of the 1989 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 59-67, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Finally, we discuss how this theoretical framework was realized as part of the Classic knowledge representation system <ref> [5] </ref>. 2 Description Logics An Introduction We provide a brief introduction to DLs by presenting some of the features of the Clas sic system, which is representative of the family. (Classic also happens to embody the core of the KRSS [17] effort and is therefore of independent interest.) Classic's basic elements
Reference: [6] <author> A. Borgida, P. F. Patel-Schneider, </author> <title> "A Semantics and Complete Algorithm for Subsumption in the CLASSIC Description Logic", </title> <journal> Journal of Aritificial Intelligence Research, </journal> <volume> vol. 1, </volume> <year> 1994, </year> <month> pp.277-308. </month>
Reference-contexts: An efficient implementation of same-as reasoning ([1]), which is part of the Classic system, works on exactly this principle: a data structure, called a description graph in <ref> [6] </ref>, represents the coreference relationships in a concept, and to see whether that concept is subsumed by a term like (same-as (pp) (rr)), one needs to trace the paths pp and rr in the automaton/graph, and verify that they end at the same node.
Reference: [7] <author> R. J. Brachman, P. G. Selfridge, L. G. Terveen, B. Altman, A. Borgida, F. Halper, T. Kirk, A. Lazar, D. L. McGuinness, and L. A. Resnick. </author> <title> Knowledge representation support for data archaeology. </title> <booktitle> In First International Conference on Information and Knowledge Management, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications <ref> [13, 10, 20, 7] </ref>. One benefit of DLs is that they have a richer representation formalism than standard rule-based systems; at the same time, their reasoning mechanisms are both more extensive and more intricate.
Reference: [8] <author> W. Cohen, A. Borgida, H. Hirsh, </author> <title> "Computing Least Common Subsumers in Description Logics", </title> <booktitle> Proceeding of AAAI'92 Conference, </booktitle> <address> pp.754-760, San Jose, CA, </address> <month> Jul y </month> <year> 1992. </year>
Reference-contexts: The rules in the next group (Figure 3) are description-constructor specific and are said to determine the structural subsumption relationship <ref> [8] </ref>: when does one term, built with constructor K, subsume another term built with the same constructor. Every time a new constructor is added to the language, this set of rules needs to be expanded.
Reference: [9] <author> W. J. Clancey. </author> <title> The Epistemology of a Rule-Based Expert System|a Framework for Explanation. </title> <booktitle> In Artificial Intelligence 20, </booktitle> <pages> pages 215-251, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction Systems that represent complex domains or that perform extensive or intricate infer ences often surprise users with their conclusions. Expert systems often fall into this category of systems, and many provide a facility for justifying their conclusions <ref> [9, 16] </ref>. In expert systems based on rules or Prolog, a simple trace of the program execution/rule firing appears to provide a sufficient basis on which to build an explanation facility.
Reference: [10] <author> P. Devanbu, P. Selfridge, B. Ballard, and R. J. Brachman. </author> <title> Steps towards a knowledge-based software information system. </title> <booktitle> In Proc. IJCAI-89, </booktitle> <address> Detroit, MI, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications <ref> [13, 10, 20, 7] </ref>. One benefit of DLs is that they have a richer representation formalism than standard rule-based systems; at the same time, their reasoning mechanisms are both more extensive and more intricate.
Reference: [11] <author> C. G. Hempel and P. Oppenheim. </author> <title> Studies in the Logic of Explanation. In The Structure of Scientific Thought, </title> <editor> E. H. Madden, editor, </editor> <publisher> Riverside Press, </publisher> <pages> pages 19-29, </pages> <year> 1960. </year>
Reference-contexts: In other words, proof steps might take arguments that do not change according to the order of inference application, and do not draw their meaning by being a part of a particular proof. 3.3 The formal components of a subsumption explana tion According to Hempel and Oppenheim <ref> [11] </ref>, the "basic pattern of scientific explanation" consists of 1. The explanandum | a sentence describing the phenomenon to be explained|and 9 2. The explanans | the class of those sentences which are adduced to account for the phenomenon.
Reference: [12] <author> G. Kahn. </author> <title> Natural Semantics Rapport de Recherche No. </title> <type> 601, </type> <institution> INRIA, Sophia Antipolis, France. </institution>
Reference-contexts: The key idea of our formalization is to cast the various kinds of reasoning into a standard format: proof rules in the style of "natural semantics" <ref> [12, 3] </ref>. Using these rules, which were developed post-facto from the semantics of the language, we can generate a logical chain of inferences to support any conclusion reached by the system. <p> Under the name of "natural semantics", such kinds of rules have been successfully used in describing various aspects of programming languages <ref> [12] </ref>, by considering the deductive properties of "judgements" other than just is-true (such as has-type or evaluates-to). The semantics of DLs, and in particular the rules for subsumption can also be expressed in this form [3], by considering the judgment ff =) fi.
Reference: [13] <author> E. Mays, C. Apte, J. Griesmer, J. Kastner. </author> <title> Organizing Knowledge in a Complex Financial Domain. </title> <booktitle> In IEEE Expert, </booktitle> <month> Fall </month> <year> 1987, </year> <pages> 61-70. </pages>
Reference-contexts: In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications <ref> [13, 10, 20, 7] </ref>. One benefit of DLs is that they have a richer representation formalism than standard rule-based systems; at the same time, their reasoning mechanisms are both more extensive and more intricate.
Reference: [14] <author> J. D. Moore. </author> <title> Explanation in Expert Systems- A Survey. </title> <institution> University of Southern California/Information Sciences Institute Tech Report ISI/RR-88-228, </institution> <month> December </month> <year> 1988. </year>
Reference: [15] <author> J. D. Moore. </author> <title> A Reactive Approach to Explanation. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Southern California, </institution> <year> 1989. </year>
Reference-contexts: Of course, a full explanation facility may provide more extensive information using domain, problem solving, or user knowledge as in [16] or <ref> [15] </ref>. In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications [13, 10, 20, 7].
Reference: [16] <author> R. Neches and W. R. Swartout and J. Moore. </author> <title> Explainable (and Maintainable) Expert Systems. </title> <booktitle> In Proc. IJCAI-85, </booktitle> <address> Los Angeles, CA., </address> <year> (1985), </year> <pages> 382-389. </pages>
Reference-contexts: 1 Introduction Systems that represent complex domains or that perform extensive or intricate infer ences often surprise users with their conclusions. Expert systems often fall into this category of systems, and many provide a facility for justifying their conclusions <ref> [9, 16] </ref>. In expert systems based on rules or Prolog, a simple trace of the program execution/rule firing appears to provide a sufficient basis on which to build an explanation facility. <p> In expert systems based on rules or Prolog, a simple trace of the program execution/rule firing appears to provide a sufficient basis on which to build an explanation facility. Of course, a full explanation facility may provide more extensive information using domain, problem solving, or user knowledge as in <ref> [16] </ref> or [15]. In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications [13, 10, 20, 7].
Reference: [17] <author> P. F. Patel-Schneider. </author> <title> Working Version: Description Logic Specification from the KRSS Effort. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1992. </year>
Reference-contexts: was realized as part of the Classic knowledge representation system [5]. 2 Description Logics An Introduction We provide a brief introduction to DLs by presenting some of the features of the Clas sic system, which is representative of the family. (Classic also happens to embody the core of the KRSS <ref> [17] </ref> effort and is therefore of independent interest.) Classic's basic elements are individuals, roles and concepts. Individuals in a knowledge base are grouped into classes called concepts; roles are ordinary binary relations that relate individuals to each other.
Reference: [18] <author> O. Shmueli, and S. Tsur. </author> <title> Logical Diagnosis of ldl Programs. In New Generation Computing, OHMSHA, </title> <journal> LTD and Springer-Verlag, </journal> <volume> Volume 9, </volume> <pages> pages 277-303, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Thus, a simple trace of proof rule firings is not accessible and a trace of procedure calls would not be understandable to users. Deductive databases, such as LDL <ref> [18] </ref> and CORAL [2], face a similar problem: although the knowledge base can be viewed as a declarative description of the system's beliefs, expressed in First Order Logic, and questions can be posed against this, the question answering process is optimized considerably and is carried out bottom-up.
Reference: [19] <author> W. R. Swartout and J. D. Moore. </author> <title> Explanation in Second Generation Expert Systems. </title> <editor> In Jean-Marc David, Jean-Paul Krivine, and Reid Simmons, editors, </editor> <booktitle> Second Generation Expert Systems. </booktitle> <publisher> Springer-Verlag, in Press. </publisher>
Reference-contexts: This desire is however tempered by the need to accept that the DL reasoner may itself evolve in terms of the inferences it performs (especially in the case of incomplete reasoners), and hence explanation will have to track this evolution <ref> [19] </ref>. In order to accommodate the first desire, to minimize cost when explanation is not asked for, we rejected an approach which kept up-to-date all justification structures while processing the knowledge base. Thus, explanation on demand will be required.
Reference: [20] <author> Wright, J. R., Weixelbaum, E. S., Brown, K., Vesonder, G. T., Palmer, S. R., Berman, J. I., Moore, H. H., </author> <title> "A knowledge-based configurator that supports sales, </title> <booktitle> engineering, and manufacturing at AT&T network systems" In Proceedings of the Innovative Applications of Artificial Intelligence Conference, </booktitle> <address> pp.183-193, </address> <year> 1993. </year>
Reference-contexts: In any case, the explanation is often presented as a chain of "inferences" by which a conclusion was reached. Description Logic-based Systems (DLs) are another knowledge representation and reasoning technology that is increasingly used in applications <ref> [13, 10, 20, 7] </ref>. One benefit of DLs is that they have a richer representation formalism than standard rule-based systems; at the same time, their reasoning mechanisms are both more extensive and more intricate.
References-found: 20

