URL: http://meru.uwyo.edu/~karl/papers/jilt.ps
Refering-URL: http://meru.uwyo.edu/~karl/pubs.html
Root-URL: 
Title: Techniques for Automated Drafting of Judicial Documents  
Author: L. Karl Branting 
Address: USA  
Affiliation: Department of Computer Science University of Wyoming Laramie, WY  
Abstract: Document drafting is an essential component of judicial problem solving. This paper distinguishes several classes of judicial documents based on (1) the stage of the judicial process in which they are created, (2) the complexity of the documents, and (3) the party who drafts the documents: a judge, judicial support personnel, or a litigant. Three approaches to automated document drafting are identified and the applicability of these approaches to each class of judicial document is described. The paper concludes with a description of several implemented prototype systems for drafting judicial documents at various stages of the judicial process. 
Abstract-found: 1
Intro-found: 1
Reference: <author> T. Bench-Capon and G. Staniford, </author> <booktitle> `PLAID - Proactive Legal Assistance (1995) Proceedings of the Fifth International Conference on Artificial Intelligence and Law (ICAIL-95), </booktitle> <address> College Park, MD, </address> <publisher> ACM Press, </publisher> <pages> pp. 81-88. </pages>
Reference: <author> L. K. Branting, </author> <booktitle> An Issue-Oriented Approach to Judicial Document Assembly (1993) Proceedings of the Fourth International Conference on Artificial Intelligence and Law (ICAIL-93), </booktitle> <address> Amsterdam, The Netherlands, </address> <publisher> ACM Press, </publisher> <pages> pp. 228-235. </pages>
Reference-contexts: This structure is then pruned to exclude premises that should be implicit in the final presentation and organized into a structure, including linking text, based on a high-level rhetorical template. JEDA (Pethe et al. 1989) and LawClerk <ref> (Branting 1993) </ref>, discussed in more detail below, used a declarative representation of legal rules to organize text templates around a goal tree generated during subgoaling. <p> Unfortunately, JEDA has not been accepted by other Administrative Law Judges on Judge Rippey's division (Rippey 1991). LawClerk <ref> (Branting 1993) </ref> follows the overall design of JEDA (separation of data entry into uncontested facts that are entered by completing data forms and rulings that are elicited during backchaining through the applicable rules), but uses a declarative representation of rules, issue templates, and entry forms to permit it apply to a
Reference: <author> L. K. Branting and J. C. Lester, </author> <booktitle> `Justification Structures for Document Reuse (1996) Proceedings of the Third European Workshop on Case-Based Reasoning (EWCR-96), Lausanne, Switzerland, </booktitle> <pages> pages 76-90. </pages>
Reference-contexts: Shadowed, shaded, and simple line boxes represent, respectively, documents produced by judges, judicial staff, or litigants. 2 See (Gordon 1989) and (Lauritsen 1993) for a discussion of the importance of informedness and <ref> (Branting & Lester 1996) </ref> for a discussion of the role of informedness in maintenance of legacy documents. 5 stage in the judicial process. The box surrounding a document indicates whether it is produced by the , , or . <p> However, because of the wide variety of different factors that can lead to jurisdictional defects, complete coverage of show-cause orders requires a discourse-based approach. The limitations of a template-based document model for show-cause orders led to the development of Docu-Planner <ref> (Branting & Lester 1996, Branting et al. 1997) </ref>, a system that uses a full discourse model of document genres, including both illocutionary and rhetorical operators. The set of these operators constitutes a document grammar capable either of parsing existing documents in the genre or of generating new documents. <p> The document grammar for show-cause orders includes these illocutionary operators together with a set of rhetorical operators that express the stylistic constraints of show-cause orders. Docu-Planner uses a unification-based formalism to synthesize new documents from a discourse grammar. As described in <ref> (Branting & Lester 1996) </ref> and (Branting et al. 1997), the document grammar for show-cause orders achieves a high degree of scope and informedness. However, a methodology for developing document grammars is still a research issue, and tools to help automate this process have yet to be developed.
Reference: <author> L. K. Branting, J.C. Lester, and C. Callaway. </author> <booktitle> `Automating Drafting of Self-Explaining Documents (1997) Proceedings of the Sixth International Conference on Artificial Intelligence and Law (ICAIL-97), </booktitle> <address> Melbourne, </address> <publisher> AU, ACM Press, pp.72-81. </publisher>
Reference-contexts: A more general approach to discourse structure was proposed in the Docu-Planner <ref> (Branting et al. 1997) </ref>. As described in more detail below, the Docu-Planner uses a discourse grammar capable of generating any document in a given genre. <p> The document grammar for show-cause orders includes these illocutionary operators together with a set of rhetorical operators that express the stylistic constraints of show-cause orders. Docu-Planner uses a unification-based formalism to synthesize new documents from a discourse grammar. As described in (Branting & Lester 1996) and <ref> (Branting et al. 1997) </ref>, the document grammar for show-cause orders achieves a high degree of scope and informedness. However, a methodology for developing document grammars is still a research issue, and tools to help automate this process have yet to be developed.
Reference: <author> A. Daskalopulu and M. </author> <title> Sergot, </title> <booktitle> `A Constraint-Driven System for Contract Assembly (1995) Proceedings of the Fifth International Conference on Artificial Intelligence and Law, </booktitle> <publisher> ACM Press, </publisher> <pages> pp. 62-70. </pages>
Reference-contexts: Despite these limitations, numerous successful legal applications of the template-based approach have been developed, including automated drafting of pension forecast letters (Spirgel-Sinclair 1988) and management of classes of contracts <ref> (Daskalopulu and Sergot 1995) </ref>. The third approach, termed the discourse-based approach, uses an explicit model of the discourse structure of classes of documents to guide creation of new documents. Discourse structure consists of the relationships between statements in a multi-sentential text that are responsible for the texts coherence.
Reference: <author> C. DiMarco, G. Hirst, and L. Wanner, </author> <title> `Health Doc: </title> <booktitle> Customizing Patient Information and Health Education by Medical Condition and Personal Characteristics (1995) Working Notes of the Workshop on Artificial Intelligence in Patient Education. </booktitle>
Reference-contexts: Discourse-based approaches to text generation have been used extensively in tutorial systems, e.g., (McKeown 1985, Lester & Porter 1996), for automated generation of software engineering reports, e.g., (Korelsky et al 1993), and for medical patient information reports <ref> (DiMarco et al. 1995) </ref>. In the law and AI community, the primary focus of the study of discourse structure has been argument theory, the study of the relationships within multi-sentential texts that are intended to persuade, justify, establish, or prove.
Reference: <author> T. Gordon, </author> <title> `A Theory Construction Approach to Legal Document Assembly (1989) PreProceedings of the Third International Conference on Logic, Informatics, and Law , Florence, </title> <booktitle> Italy, </booktitle> <pages> pp. 485-498. </pages>
Reference-contexts: Names of representative documents have been placed in the graph based on their complexity and sequence within the judicial process. Shadowed, shaded, and simple line boxes represent, respectively, documents produced by judges, judicial staff, or litigants. 2 See <ref> (Gordon 1989) </ref> and (Lauritsen 1993) for a discussion of the importance of informedness and (Branting & Lester 1996) for a discussion of the role of informedness in maintenance of legacy documents. 5 stage in the judicial process.
Reference: <editor> H. Grice, `Logic and Conversation In P. Cole and J. Morgan eds., </editor> <title> Syntax and Semantics 2: </title> <booktitle> Speech Acts, </booktitle> <pages> pp. 41-58. </pages> <publisher> (Academic Press: </publisher> <address> New York, N.Y. </address> <year> 1975). </year>
Reference-contexts: Discourse structure consists of the relationships between statements in a multi-sentential text that are responsible for the texts coherence. The roots of this approach are in speech-act theory, the study of the illocutionary 1 content of discourse, that is, the goals that speakers seek to accomplish through their discourse <ref> (Grice 1975, Searle 1969) </ref>. The insights of speech-act theory were used in the computational linguistics community to develop techniques for understanding multi-sentential text by inferring the texts underlying discourse structure (Grosz & Sidner 1986, Hobbs 1979, Mann & Thompson 1987).
Reference: <author> B. Grosz and C. Sidner, </author> <title> `Attention, Intention, </title> <booktitle> and the Structure of Discourse (1986) Computational Linguistics 12(3). </booktitle>
Reference-contexts: The insights of speech-act theory were used in the computational linguistics community to develop techniques for understanding multi-sentential text by inferring the texts underlying discourse structure <ref> (Grosz & Sidner 1986, Hobbs 1979, Mann & Thompson 1987) </ref>. This discourse structure comprises a number of rhetorical relations among sentences, such as elaboration, exemplification, generalization, and sequence. The success of discourse theory in text understanding systems led to its application to multi-sentential text generation as well (Hovy 1990).
Reference: <author> J. Hobbs, </author> <booktitle> `Coherence and Coreference (1979) Cognitive Science 3(10) </booktitle> <pages> 67-82. </pages>
Reference: <author> E. </author> <booktitle> Hovy `Pragmatics and Natural Language Generation (1990) Artificial Intelligence 43 </booktitle> <pages> 153-197. </pages>
Reference-contexts: This discourse structure comprises a number of rhetorical relations among sentences, such as elaboration, exemplification, generalization, and sequence. The success of discourse theory in text understanding systems led to its application to multi-sentential text generation as well <ref> (Hovy 1990) </ref>. Discourse-based approaches to text generation have been used extensively in tutorial systems, e.g., (McKeown 1985, Lester & Porter 1996), for automated generation of software engineering reports, e.g., (Korelsky et al 1993), and for medical patient information reports (DiMarco et al. 1995).
Reference: <author> R. Kittredge, T. Korelsky, and O. Rambow, </author> <title> `On the Need for Domain Communication Knowledge (1991) Computational Intelligence, </title> <booktitle> 7(4) </booktitle> <pages> 305-314. </pages>
Reference: <author> T. Korelsky, D. McCullough, and O. Rambow, </author> <title> `Knowledge requirements for the automatic generation of project management reports (1993) Proceedings of the Eighth Knowledge-Engineering Conference, </title> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The success of discourse theory in text understanding systems led to its application to multi-sentential text generation as well (Hovy 1990). Discourse-based approaches to text generation have been used extensively in tutorial systems, e.g., (McKeown 1985, Lester & Porter 1996), for automated generation of software engineering reports, e.g., <ref> (Korelsky et al 1993) </ref>, and for medical patient information reports (DiMarco et al. 1995). In the law and AI community, the primary focus of the study of discourse structure has been argument theory, the study of the relationships within multi-sentential texts that are intended to persuade, justify, establish, or prove.
Reference: <author> M. Lauritsen, </author> <title> `Technology report: Building legal practice systems with today's commercial authoring tools (1992) Law and Artificial Intelligence, </title> <booktitle> 1(1). 11 M. Lauritsen, `Knowing documents (1993) Fourth International Conference on Artificial Intelligence and Law (ICAIL-93), </booktitle> <address> Amsterdam, The Netherlands, </address> <pages> pages 185-191, </pages> <address> 1993. </address> <publisher> ACM Press. </publisher>
Reference-contexts: Typically, tokens include not just documentspecific facts (e.g., &lt;Plaintiffs-attorney-or-attorneys&gt;) but subordinate templates (termed `sub-documents' in CAPS and `submodels' in Scrivenir <ref> (Lauritsen 1992) </ref>) themselves consisting of text with embedded tokens and tests. 3 The boundary between procedural and template-based approaches is not crisp: a template with a sufficiently high density of tests can be viewed as essentially a procedure.
Reference: <author> J. Lester and B. Porter, </author> <title> `Scaling Up Explanation Generation: </title> <booktitle> Large-Scale Knowledge-Based and Empirical Studies (1996) Proceedings of the Thirteenth National Conference on Artificial Intelligence (AAAI-96) (AAAI Press) pp. </booktitle> <pages> 416-423. </pages>
Reference-contexts: Shadowed, shaded, and simple line boxes represent, respectively, documents produced by judges, judicial staff, or litigants. 2 See (Gordon 1989) and (Lauritsen 1993) for a discussion of the importance of informedness and <ref> (Branting & Lester 1996) </ref> for a discussion of the role of informedness in maintenance of legacy documents. 5 stage in the judicial process. The box surrounding a document indicates whether it is produced by the , , or . <p> However, because of the wide variety of different factors that can lead to jurisdictional defects, complete coverage of show-cause orders requires a discourse-based approach. The limitations of a template-based document model for show-cause orders led to the development of Docu-Planner <ref> (Branting & Lester 1996, Branting et al. 1997) </ref>, a system that uses a full discourse model of document genres, including both illocutionary and rhetorical operators. The set of these operators constitutes a document grammar capable either of parsing existing documents in the genre or of generating new documents. <p> The document grammar for show-cause orders includes these illocutionary operators together with a set of rhetorical operators that express the stylistic constraints of show-cause orders. Docu-Planner uses a unification-based formalism to synthesize new documents from a discourse grammar. As described in <ref> (Branting & Lester 1996) </ref> and (Branting et al. 1997), the document grammar for show-cause orders achieves a high degree of scope and informedness. However, a methodology for developing document grammars is still a research issue, and tools to help automate this process have yet to be developed.
Reference: <author> W. Mann and S. Thompson, </author> <title> `Rhetorical Structure Theory: A Theory of Text Organization (1987) Technical Report ISI/RS-87-190, </title> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA. </address>
Reference: <author> K. McKeown, </author> <title> `Text Generation: Using Discourse Strategies and Focus Constraints to Generate Natural Language Text (Cambridge University Press: </title> <address> Cambridge 1985). </address>
Reference-contexts: The success of discourse theory in text understanding systems led to its application to multi-sentential text generation as well (Hovy 1990). Discourse-based approaches to text generation have been used extensively in tutorial systems, e.g., <ref> (McKeown 1985, Lester & Porter 1996) </ref>, for automated generation of software engineering reports, e.g., (Korelsky et al 1993), and for medical patient information reports (DiMarco et al. 1995).
Reference: <author> V. P. Pethe, C. P. Rippey, and L. V. Kale, </author> <booktitle> `A Specialized Expert System for Judicial Decision Support (1989) Proceedings of the Second International Conference on Artificial Intelligence and Law (ICAIL-89) Vancouver, B.C., </booktitle> <pages> pages 190-194. </pages>
Reference-contexts: This structure is then pruned to exclude premises that should be implicit in the final presentation and organized into a structure, including linking text, based on a high-level rhetorical template. JEDA <ref> (Pethe et al. 1989) </ref> and LawClerk (Branting 1993), discussed in more detail below, used a declarative representation of legal rules to organize text templates around a goal tree generated during subgoaling. <p> Thus, an argument-based discourse model of administrative decisions is best suited to such cases. JEDA and LawClerk are argument-based systems for drafting routine administrative decisions. JEDA <ref> (Pethe et al. 1989) </ref> is a system to assist administrative law judges in drafting decisions on claims for benefits under the federal Black Lung Benefits Act.
Reference: <author> Judge Charles P. Rippey, </author> <type> Personal communication (1991). </type>
Reference: <author> J. Searle, </author> <title> Speech Acts: An Essay in the Philosophy of Language (Cambridge University Press: </title> <address> Cambridge 1969). </address>
Reference: <author> A. Snellenburg, </author> <title> New Approaches to Reducing Court Delay and Congestion (1989) State Court Journal 13(3). </title>
Reference-contexts: The high requirements for correctness and consistency mean that even routine orders in sufficient volume may constitute a significant drain on judicial resources. It is widely recognized that rising case-loads constitute one of the most pervasive problems confronting the judicial system in the United States <ref> (Snellenburg 1989) </ref>. Automation of the drafting of routine judicial documents has the potential to ameliorate 2 the worst effects of these rising case-loads by enabling judges to use their time and expertise as efficiently as possible.
Reference: <author> S. Spirgel-Sinclair, </author> <title> `The DHSS retirement pension forecast and advice system In (P. Duffin, </title> <editor> ed.) </editor> <booktitle> KBSs in Government 88, </booktitle> <pages> pp. 89-106. </pages> <note> Blenheim On Line, Pinner, </note> <year> 1988. </year>
Reference: <author> S. Toulmin, </author> <title> `The Uses of Argument (Cambridge University Press: </title> <address> Cambridge 1958). </address>
Reference: <author> J. Zeleznikow and A. Stranieri, </author> <title> `The Split-Up System: </title> <booktitle> Integrating Neural Networks and Rule-Based Reasoning in the Legal Domain (1995) Proceedings of the Fifth International Conference on Artificial Intelligence and Law (ACM Press) pp. </booktitle> <pages> 185-194. </pages>
Reference-contexts: An influential model of argument structure proposed by Toulmin (1958) analyzed argumentative texts in terms of the concepts of warrant, ground, conclusion, backing, and qualification. This model has been used for explanation generation <ref> (Zeleznikow & Stranieri 1995) </ref> and for document drafting in PLAID (Bench-Capon & Staniford 1995). PLAID produces a document by generating an argument structure whose nodes were tagged according to their role in the argument (claim, rebuttal, support, qualification, etc.).
References-found: 24

