URL: http://www.cs.umd.edu/projects/hermes/publications/postscripts/hkb.ps
Refering-URL: http://www.cs.umd.edu/projects/hermes/publications/abstracts/jlu_hkb.html
Root-URL: 
Email: lu@sol.cs.bucknell.edu  anil@math.cornell.edu  vs@cs.umd.edu  
Title: Hybrid Knowledge Bases  
Author: James J. Lu Anil Nerode V. S. Subrahmanian 
Keyword: annotated logic, constraint logic programming, heterogeneous system, media tor, stable model  
Note: This work was supported by the Army Research Office under grant numbers DAAG-29-85-C-0018 and DAAL-03-92-G-0225, by the Air Force Office of Scientific Research under grant number F49620-93-1-0065, by ARPA/Rome Labs contract Nr. F30602-93-C-0241 (Order Nr. A716), and by the National Science Foundation under grant numbers IRI9109755, IRI9357756 and CCR9225037. Proofs are omitted for conciseness. Details may be found in [23]  
Address: Lewisburg, PA 17837  Ithaca, NY 14853  College Park, MD 20742  
Affiliation: Bucknell University  Cornell University  University of Maryland  
Abstract: Deductive databases that interact with, and are accessed by, reasoning agents in the real world (such as logic controllers in automated manufacturing, weapons guidance systems, aircraft landing systems, land-vehicle maneuvering systems, and air-traffic control systems) must have the ability to deal with multiple modes of reasoning. Specifically, the types of reasoning we are concerned with include, amongst others, reasoning about time, reasoning about quantitative relationships that may be expressed in the form of differential equations or optimization problems, and reasoning about numeric modes of uncertainty about the domain which the database seeks to describe. Such databases may need to handle diverse forms of data structures, and frequently they may require use of the assumption-based non-monotonic representation of knowledge. A hybrid knowledge base is a theoretical framework capturing all the above modes of reasoning. The theory tightly unifies the Constraint Logic Programming Scheme of Jaffar and Lassez [11], the Generalized Annotated Logic Programming Theory of Kifer and Subrahmanian [16], and the Stable Model semantics of Gelfond and Lifschitz [6]. New techniques are introduced which extend both the work on Annotated Logic Programming and the Stable Model semantics. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Apt, H. A. Blair, A. Walker, </author> <title> Towards a Theory of Declarative Knowledge, Foundations of Deductive Databases and Logic Programming (J. </title> <editor> Minker ed.), </editor> <publisher> Morgan-Kaufmann, </publisher> <pages> 89 - 148, </pages> <year> 1988. </year>
Reference-contexts: Since, for all u 2 <ref> [0; 1] </ref>, (u; ;) = f ? is the function that maps all time points in R + to 0, it is less than any function in under the ordering . <p> In the case that such a dependency structure is acyclic, then an intuitively obvious semantics can be given by the stratified semantics of Apt, Blair, and Walker <ref> [1] </ref>. However, should it turn out that the dependency structure of some annotated atom is defined in terms of itself i.e. it is cyclic, then the semantics of such a knowledge base becomes difficult to pinpoint.
Reference: [2] <author> S. Adal, </author> <title> V.S. Subrahmanian, Amalgamating knowledge bases III: Algorithms, data structures and query processing, </title> <type> Technical Report CS-TR-3124, </type> <institution> Computer Science Department, University of Maryland, </institution> <year> 1993. </year>
Reference: [3] <author> J. Benton, </author> <title> V.S. Subrahmanian, Hybrid Knowledge Bases for Missile Siting Problems, </title> <booktitle> Proceedings of the IEEE Conference on Applications of Artificial Intelligence, </booktitle> <year> 1994. </year>
Reference: [4] <author> C. Bell, A. Nerode, R. Ng, </author> <title> V.S. Subrahmanian, Implementing Deductive Databases by Linear Programming, </title> <booktitle> Proceedings of the ACM SIGACT/SIGART/SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> 283-292, </pages> <year> 1992. </year>
Reference-contexts: Existing works on deductive databases that attempt to implement the stable model semantics have used the definition of the semantics directly by grounding out all clauses <ref> [4] </ref>. Such a process is computationally expensive. We introduce a novel technique through which the stable model semantics of hybrid knowledge base may be captured via a transformation.
Reference: [5] <author> A. Frisch, </author> <title> The Substitutional Framework for Sorted Deduction, </title> <journal> Artificial Intelligence, </journal> <volume> 49, </volume> <pages> 161-198, </pages> <year> 1991. </year>
Reference-contexts: Though this work is related to our work, we have not included probabilities in our treatment of knowledge. In [27], a probabilistic theory of annotated logic programming is introduced. Extending hybrid knowledge bases with such a capability is a topic for future work. Frisch <ref> [5] </ref> provides a framework for hybrid reasoning, but only in the monotonic case.
Reference: [6] <author> M. Gelfond, V. Lifschitz, </author> <title> The Stable Model Semantics for Logic Programming, </title> <booktitle> Proceedings of the 5th International Conference and Symposium on Logic Programming (R. </booktitle> <editor> A. Kowalski and K. A. Bowen eds.), </editor> <publisher> MIT Press, </publisher> <pages> 1070-1080, </pages> <year> 1988. </year>
Reference-contexts: Two major semantics currently exist for non-monotonic negation in logic programming: the stable model semantics as defined by Gelfond and Lifschitz <ref> [6] </ref>, and the well-founded semantics of 14 van Gelder, Ross and Schlipf [32, 33]. We examine the stable model semantics in the context of hybrid knowledge bases. The stable model semantics of logic programming given in [6] is defined based on ground programs (i.e. variable-free). <p> negation in logic programming: the stable model semantics as defined by Gelfond and Lifschitz <ref> [6] </ref>, and the well-founded semantics of 14 van Gelder, Ross and Schlipf [32, 33]. We examine the stable model semantics in the context of hybrid knowledge bases. The stable model semantics of logic programming given in [6] is defined based on ground programs (i.e. variable-free). Hence, to give meaning to programs that contain variables, one first considers the program's ground equivalent where variables are replaced by all possible ground terms within the Herbrand Base. <p> These are: * Constraint Logic Programming (CLP), due to Jaffar and Lassez [11, 12] * Non-Monotone Logic Programming (NMLP), due to Gelfond and Lifschitz <ref> [6] </ref>, and * Generalized Annotated Programs (GAP), due to Kifer and Subrahmanian [15, 16]. The resulting framework, called hybrid knowledge bases, provides a powerful tool for building sophisticated deductive knowledge bases. A hybrid knowledge base is capable of accessing a wide variety of heterogeneous databases and data sources.
Reference: [7] <author> J. Grant, W. Litwin, N. Roussopoulos, T. Sellis, </author> <title> An Algebra and Calculus for Relational Multidatabase Systems, </title> <booktitle> Proceedings of the First International Workshop on Interoperability in Multidatabase Systems, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> 118-124, </pages> <year> 1991. </year>
Reference-contexts: Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. <ref> [7] </ref> who introduced a calculus and an algebra for integrating information from multiple databases. This calculus extends the standard relational calculus.
Reference: [8] <author> R. Hahnle, </author> <title> Towards an Efficient Tableau Rules for Multiple-valued Logics, </title> <booktitle> Proceedings of the Workshop on Computer Science Logic, </booktitle> <publisher> Springer, </publisher> <pages> 248-260, </pages> <year> 1990. </year>
Reference: [9] <author> R. Hahnle, </author> <title> Uniform Notation of Tableau Rules for Multiple-valued Logics, </title> <booktitle> Proceedings of the International Symposium on Multiple-Valued Logic, </booktitle> <pages> 26-29, </pages> <year> 1991. </year>
Reference: [10] <author> J. Horst, E. W. Kent, H. Rifky, </author> <title> V.S. Subrahmanian, Intelligent, Real-Time Robotic Reasoning with Hybrid Knowledge Bases, </title> <booktitle> Proceedings of the 4th International Workshop on Pattern Recognition in Practice, </booktitle> <publisher> North-Holland Elsevier, </publisher> <year> 1994. </year>
Reference-contexts: A large-scale development effort for controlling a real mobile robot using hybrid knowledge bases is currently under way as a joint effort with the National Institute of Standards and Technology in Gaithersburg, Maryland. Preliminary details are contained in <ref> [10] </ref>. Acknowledgement. We are thankful for the useful comments provided by two anonymous referees. We have also benefited from comments by Jeff Remmel. 27
Reference: [11] <author> J. Jaffar, J.L. Lassez, </author> <title> Constraint Logic Programming, </title> <booktitle> Proceedings of the ACM Principles of Programming Languages, </booktitle> <pages> 111-119, </pages> <year> 1987. </year> <month> 28 </month>
Reference-contexts: These are: * Constraint Logic Programming (CLP), due to Jaffar and Lassez <ref> [11, 12] </ref> * Non-Monotone Logic Programming (NMLP), due to Gelfond and Lifschitz [6], and * Generalized Annotated Programs (GAP), due to Kifer and Subrahmanian [15, 16]. The resulting framework, called hybrid knowledge bases, provides a powerful tool for building sophisticated deductive knowledge bases.
Reference: [12] <author> J. Jaffar, S. Michaylov, P. Stuckey, R. Yap, </author> <title> The CLP(&lt;) Language and System, </title> <booktitle> ACM Trans--actions on Programming Languages and Systems, </booktitle> <pages> 339-395, </pages> <year> 1992. </year>
Reference-contexts: These are: * Constraint Logic Programming (CLP), due to Jaffar and Lassez <ref> [11, 12] </ref> * Non-Monotone Logic Programming (NMLP), due to Gelfond and Lifschitz [6], and * Generalized Annotated Programs (GAP), due to Kifer and Subrahmanian [15, 16]. The resulting framework, called hybrid knowledge bases, provides a powerful tool for building sophisticated deductive knowledge bases.
Reference: [13] <author> M. Kifer, E. Lozinskii, </author> <title> A Logic for Reasoning with Inconsistency, </title> <journal> Journal of Automated Reasoning, </journal> <volume> 9, </volume> <pages> 179-215, </pages> <year> 1992. </year>
Reference: [14] <author> M. Kifer, G. Lausen, J. Wu, </author> <title> Logical Foundations of Object-Oriented and Frame-Based Languages, </title> <type> Technical Report 90/14, </type> <institution> SUNY at Stonybrook, </institution> <year> 1990. </year>
Reference-contexts: In contrast, our language will allow accessing multiple databases (deductive and otherwise) including those containing uncertainties. Lefebvre et. al. [22] have a similar aim they base their language on F-logic due to Kifer et. al. <ref> [14] </ref>. A large-scale development effort for controlling a real mobile robot using hybrid knowledge bases is currently under way as a joint effort with the National Institute of Standards and Technology in Gaithersburg, Maryland. Preliminary details are contained in [10]. Acknowledgement.
Reference: [15] <author> M. Kifer, </author> <title> V.S. Subrahmanian, On the Expressive Power of Annotated Logics, </title> <booktitle> Proceedings of the North American Conference on Logic Programming, </booktitle> <publisher> MIT Press, </publisher> <pages> 1069-1089, </pages> <year> 1989. </year>
Reference-contexts: These are: * Constraint Logic Programming (CLP), due to Jaffar and Lassez [11, 12] * Non-Monotone Logic Programming (NMLP), due to Gelfond and Lifschitz [6], and * Generalized Annotated Programs (GAP), due to Kifer and Subrahmanian <ref> [15, 16] </ref>. The resulting framework, called hybrid knowledge bases, provides a powerful tool for building sophisticated deductive knowledge bases. A hybrid knowledge base is capable of accessing a wide variety of heterogeneous databases and data sources.
Reference: [16] <author> M. Kifer, V. S. Subrahmanian, </author> <title> Theory of Generalized Annotated Logic Programming and its Applications, </title> <journal> Journal of Logic Programming, </journal> <volume> 12, 4, </volume> <pages> 335-368, </pages> <year> 1992. </year>
Reference-contexts: This resolves with the second clause to yield the query p : (1; ;). This atom can be deleted (as it is a tautology), leading to the empty clause. As we have pointed out, our resolution procedure does not contain the reduction rule of inference found in GAPs <ref> [16] </ref>. In the simplest case, the reduction rule allows one to infer, from two ground unit annotated clauses p : 1 and p : 2 , the new unit annotated clause p : tf 1 ; 2 g . <p> These are: * Constraint Logic Programming (CLP), due to Jaffar and Lassez [11, 12] * Non-Monotone Logic Programming (NMLP), due to Gelfond and Lifschitz [6], and * Generalized Annotated Programs (GAP), due to Kifer and Subrahmanian <ref> [15, 16] </ref>. The resulting framework, called hybrid knowledge bases, provides a powerful tool for building sophisticated deductive knowledge bases. A hybrid knowledge base is capable of accessing a wide variety of heterogeneous databases and data sources.
Reference: [17] <author> W. Kim, J. Seo, </author> <title> Classifying Schematic and Data Heterogeneity in Multidatabase Systems, </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1991. </year>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases.
Reference: [18] <author> S. Kraus, D. Lehmann, </author> <title> Decision procedures for time and chance, </title> <booktitle> Proceedings of the IEEE Symposium on the Foundation of Computer Science, </booktitle> <pages> 202-209, </pages> <year> 1983. </year>
Reference-contexts: Stickel [30] has introduced theory resolution where resolution may be integrated with a number of different theories. The work is set in the context of general theorem proving and it does not consider non-monotonic or temporal reasoning. Lehmann and his colleagues <ref> [23, 18] </ref> have studied methods for integrating time and probabilities. Though this work is related to our work, we have not included probabilities in our treatment of knowledge. In [27], a probabilistic theory of annotated logic programming is introduced.
Reference: [19] <author> R. Krishnamurthy, W. Litwin, W. Kent, </author> <title> Language Features for Interoperability of Databases with Schematic Discrepancies, </title> <booktitle> Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <year> 1991. </year>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases. <p> This calculus extends the standard relational calculus. Our research addresses a different topic that of integrating multiple databases containing (possibly) different schematic representations (in terms of diverse data structures), as well as inconsistencies, uncertainty, and possibly even temporal information. Krishnamurthy et. al. <ref> [19] </ref> argue that a higher-order form of Horn clause logic is better than relational languages for schema integration. A language, called IDL, has been developed to express various queries spanning multiple relational databases. In contrast, our language will allow accessing multiple databases (deductive and otherwise) including those containing uncertainties.
Reference: [20] <author> S. Leach, J. Lu, </author> <title> Computing Annotated Logic Programs, </title> <booktitle> Proceedings of the International Conference on Logic Programming, </booktitle> <publisher> MIT Press, </publisher> <pages> 257-271, </pages> <year> 1994. </year>
Reference-contexts: In <ref> [20, 21] </ref>, a query processing procedure for GAPs that interleaves an SLD-like resolution procedure, and a constraint solving procedure for acyclic constraint graphs is introduced. <p> Similar to the method described in <ref> [20, 21] </ref>, the latter problem may often be posed as a constraint satisfaction problem involving acyclic constraint graphs whose solutions are obtainable by local propagation. We do not expand on the details here.
Reference: [21] <author> S. Leach, J. Lu, </author> <title> Query Processing in Annotated Logic Programming: Theory and Implementation, </title> <journal> Journal of Intelligent Information Systems, </journal> <note> accepted to appear. </note>
Reference-contexts: In <ref> [20, 21] </ref>, a query processing procedure for GAPs that interleaves an SLD-like resolution procedure, and a constraint solving procedure for acyclic constraint graphs is introduced. <p> Similar to the method described in <ref> [20, 21] </ref>, the latter problem may often be posed as a constraint satisfaction problem involving acyclic constraint graphs whose solutions are obtainable by local propagation. We do not expand on the details here.
Reference: [22] <author> A. Lefebvre, P. Bernus, R. Topor, </author> <title> Querying Heterogeneous Databases: A Case Study, </title> <type> draft manuscript, </type> <year> 1992. </year>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases. <p> A language, called IDL, has been developed to express various queries spanning multiple relational databases. In contrast, our language will allow accessing multiple databases (deductive and otherwise) including those containing uncertainties. Lefebvre et. al. <ref> [22] </ref> have a similar aim they base their language on F-logic due to Kifer et. al. [14]. A large-scale development effort for controlling a real mobile robot using hybrid knowledge bases is currently under way as a joint effort with the National Institute of Standards and Technology in Gaithersburg, Maryland.
Reference: [23] <author> D. Lehmann, S. Shelah, </author> <title> Reasoning with Time and Chance, </title> <journal> Information and Control, </journal> <volume> 53, 3, </volume> <pages> 165-198, </pages> <year> 1982. </year>
Reference-contexts: Stickel [30] has introduced theory resolution where resolution may be integrated with a number of different theories. The work is set in the context of general theorem proving and it does not consider non-monotonic or temporal reasoning. Lehmann and his colleagues <ref> [23, 18] </ref> have studied methods for integrating time and probabilities. Though this work is related to our work, we have not included probabilities in our treatment of knowledge. In [27], a probabilistic theory of annotated logic programming is introduced.
Reference: [24] <author> J. W. Lloyd, </author> <booktitle> Foundations of Logic Programming, 2nd edition, </booktitle> <publisher> Springer, </publisher> <year> 1987. </year>
Reference-contexts: there is a refutation of ffi 0 kA 1 : (v 1 ; s 1 ); : : : ; A m : (v m ; s m ) from P . 13 The proof of the completeness result uses the mgu and the lifting lemmas in the standard way <ref> [24] </ref>. In [20, 21], a query processing procedure for GAPs that interleaves an SLD-like resolution procedure, and a constraint solving procedure for acyclic constraint graphs is introduced.
Reference: [25] <author> J. Lu, A. Nerode, J. Remmel, </author> <title> V.S. Subrahmanian Towards a Theory of Hybrid Knowledge Bases, </title> <institution> TR93-14, Mathematical Sciences Institute, Cornell University, </institution> <year> 1993. </year> <month> 29 </month>
Reference: [26] <author> N.V. Murray, E. Rosenthal, </author> <title> Signed Formulas: A Liftable Meta-Logic for Multiple-Valued Logics, </title> <booktitle> Proceedings of International Symposium on Methodologies for Intelligent Systems, </booktitle> <pages> 275-284, </pages> <year> 1993. </year>
Reference: [27] <author> R. Ng, </author> <title> V.S. Subrahmanian, Probabilistic Logic Programming, </title> <journal> Information and Computation, </journal> <volume> 101, 2, </volume> <pages> 150-201, </pages> <year> 1992. </year>
Reference-contexts: Lehmann and his colleagues [23, 18] have studied methods for integrating time and probabilities. Though this work is related to our work, we have not included probabilities in our treatment of knowledge. In <ref> [27] </ref>, a probabilistic theory of annotated logic programming is introduced. Extending hybrid knowledge bases with such a capability is a topic for future work. Frisch [5] provides a framework for hybrid reasoning, but only in the monotonic case.
Reference: [28] <author> H. Samet, </author> <title> The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Their locations are shown in the figure. This 21 A B C E G (4,4) spatial information may be represented as a spatial database. The typical data structures that one might use for representing such spatial information includes point quadtrees, MX-quadtrees, PM-quadtrees, and R-trees <ref> [28] </ref>. Figure 2 shows a point quadtree for storing the above seven objects, assuming the insertion order A; B; C; D; E; F; G. We assume a second database (which we will refer to simply as the relational database) that contains information about objects including those in the workspace.
Reference: [29] <author> A. Sheth and J. Larson, </author> <title> Federated Database Systems for Managing Distributed, Heterogeneous and Autonomous Databases, </title> <journal> ACM Computing Surveys, </journal> <volume> 22, 3, </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases.
Reference: [30] <author> M. Stickel, </author> <title> Automated Deduction by Theory Resolution, </title> <journal> Journal of Automated Reasoning, </journal> <volume> 1, </volume> <pages> 333-355, </pages> <year> 1985. </year>
Reference-contexts: A very important observation to point out is that the integration of the three formalisms is not a loose combination of three disjoint theories. There is a tight coupling of these formalisms where the consistent thread through which all three are linked is constraint solving. Stickel <ref> [30] </ref> has introduced theory resolution where resolution may be integrated with a number of different theories. The work is set in the context of general theorem proving and it does not consider non-monotonic or temporal reasoning. Lehmann and his colleagues [23, 18] have studied methods for integrating time and probabilities.
Reference: [31] <author> V.S. Subrahmanian, </author> <title> Amalgamating Knowledge Bases, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19, 2, </volume> <pages> 291-331, </pages> <year> 1994. </year>
Reference: [32] <author> A. van Gelder, K. Ross, J. Schlipf, </author> <title> Unfounded Sets and Well-founded Semantics for General Logic Programs, </title> <booktitle> Proceedings of the Symposium on Principles of Database Systems, </booktitle> <pages> 221-230, </pages> <year> 1988. </year>
Reference-contexts: Two major semantics currently exist for non-monotonic negation in logic programming: the stable model semantics as defined by Gelfond and Lifschitz [6], and the well-founded semantics of 14 van Gelder, Ross and Schlipf <ref> [32, 33] </ref>. We examine the stable model semantics in the context of hybrid knowledge bases. The stable model semantics of logic programming given in [6] is defined based on ground programs (i.e. variable-free). <p> However, this nonexistence of stable models is due to the first clause. 20 The well-founded semantics for logic programs <ref> [32] </ref> was designed to address the above problem where a single clause may corrupt the meaning of other, unrelated clauses. For completeness, we briefly consider in this section how the well-founded semantics may be applied to hybrid knowledge bases.
Reference: [33] <author> A. van Gelder, </author> <title> The Alternating Fixpoint of Logic Programs with Negation, </title> <booktitle> Proceedings of the ACM Symposium on Principles of Database Systems, </booktitle> <volume> 1 - 10, </volume> <year> 1989. </year>
Reference-contexts: Two major semantics currently exist for non-monotonic negation in logic programming: the stable model semantics as defined by Gelfond and Lifschitz [6], and the well-founded semantics of 14 van Gelder, Ross and Schlipf <ref> [32, 33] </ref>. We examine the stable model semantics in the context of hybrid knowledge bases. The stable model semantics of logic programming given in [6] is defined based on ground programs (i.e. variable-free).
Reference: [34] <author> T.J. Weigert, J-P. Tsai, X. Liu, </author> <title> Fuzzy Operator Logic and Fuzzy Resolution, </title> <journal> Journal of Automated Reasoning, </journal> <volume> 10, </volume> <pages> 59-78, </pages> <year> 1993. </year>
Reference: [35] <author> G. Wiederhold, </author> <booktitle> Mediators in the Architecture of Future Information Systems, IEEE Computer, </booktitle> <pages> 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference: [36] <author> G. Wiederhold, </author> <title> Intelligent Integration of Information, </title> <booktitle> Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> 434-437, </pages> <year> 1993. </year>
Reference: [37] <author> G. Wiederhold, S. Jajodia, W. Litwin, </author> <title> Dealing with granularity of time in temporal databases, </title> <booktitle> Proceedings of the Nordic Conference on Advanced Information Systems Engineering (R. </booktitle> <editor> An-derson et al. eds.), </editor> <publisher> Springer, </publisher> <pages> 124-140, </pages> <year> 1991, </year>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases.
Reference: [38] <author> G Wiederhold, S. Jajodia, and W. Litwin, </author> <title> Integrating temporal data in a heterogeneous environment, Temporal Databases, </title> <publisher> Benjamin Cummings, </publisher> <year> 1993. </year> <month> 30 </month>
Reference-contexts: Moreover, it is not clear how Frisch's system can handle time and uncertainty. 26 nonmonotonicity nonmonotonicity + constraints, constraints + time, uncertainty, + time, Hybrid KB GAPNMLPCLP A great deal of work has been done in multidatabase systems and interoperable database systems <ref> [37, 38, 19, 17, 29, 22] </ref>. Most of this work combines standard relational databases (no deductive capabilities). The development of a semantical foundation for multidatabases has been studied by Grant et. al. [7] who introduced a calculus and an algebra for integrating information from multiple databases.
References-found: 38

