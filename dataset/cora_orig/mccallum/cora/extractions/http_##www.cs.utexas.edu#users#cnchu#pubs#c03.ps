URL: http://www.cs.utexas.edu/users/cnchu/pubs/c03.ps
Refering-URL: http://www.cs.utexas.edu/users/cnchu/pubs/pubs.html
Root-URL: 
Email: cnchu@cs.utexas.edu and wong@cs.utexas.edu  
Title: A New Approach to Simultaneous Buffer Insertion and Wire Sizing  
Author: Chris C. N. Chu and D. F. Wong 
Address: Austin, Austin, TX 78712.  
Affiliation: Department of Computer Sciences, University of Texas at  
Abstract: In this paper, we present a completely new approach to the problem of delay minimization by simultaneous buffer insertion and wire sizing for a wire. We show that the problem can be formulated as a convex quadratic program, which is known to be solvable in polynomial time. Nevertheless, we explore some special properties of our problem and derive an optimal and very efficient algorithm to solve the resulting program. Given m buffers and a set of n discrete choices of wire width, the running time of our algorithm is O(mn 2 ) and is independent of the wire length in practice. For example, an instance of 100 buffers and 100 choices of wire width can be solved in 3 seconds. Besides, our formulation is so versatile that it is easy to consider other objectives like wire area or power dissipation, or to add constraints to the solution. Also, wire capacitance lookup tables, or very general wire capacitance models which can capture area capacitance, fringing capacitance, coupling capacitance, etc. can be used. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chung-Ping Chen, Yao-Wen Chang, and D. F. Wong. </author> <title> Fast performance-driven optimization for buffered clock trees based on Lagrangian relaxation. </title> <booktitle> In Proc. IEEE ICCAD, </booktitle> <pages> pages 405-408, </pages> <year> 1996. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ). <p> We can solve this problem by the Lagrangian relaxation technique as in <ref> [1] </ref>. The relaxed program will be as follows: minimize h T l + ( 1 2 l T l + T l b delay ) subject to l 1 + + l (m+1)n = L l i 0 for 1 i (m + 1)n where is the Lagrange multiplier.
Reference: [2] <author> Chung-Ping Chen, Yao-Ping Chen, and D. F. Wong. </author> <title> Optimal wire-sizing formula under the Elmore delay model. </title> <booktitle> In Proc. ACM/IEEE DAC, </booktitle> <pages> pages 487-490, </pages> <year> 1996. </year>
Reference-contexts: In order to obtain accurate results, the wire usually needs to be divided into a large number of (much more than n) segments. <ref> [2, 4, 14, 15] </ref> consider a variant such that the set H of choices of wire width is a continuous interval. Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate.
Reference: [3] <author> Chung-Ping Chen and D. F. Wong. </author> <title> A fast algorithm for optimal wire-sizing under Elmore delay model. </title> <booktitle> In Proc. IEEE ISCAS, </booktitle> <volume> volume 4, </volume> <pages> pages 412-415, </pages> <year> 1996. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [4] <author> Chung-Ping Chen and D. F. Wong. </author> <title> Optimal wire-sizing function with fringing capacitance consideration. </title> <booktitle> In Proc. ACM/IEEE DAC, </booktitle> <year> 1997. </year>
Reference-contexts: In order to obtain accurate results, the wire usually needs to be divided into a large number of (much more than n) segments. <ref> [2, 4, 14, 15] </ref> consider a variant such that the set H of choices of wire width is a continuous interval. Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate.
Reference: [5] <author> Chung-Ping Chen, Hai Zhou, and D. F. Wong. </author> <title> Optimal non-uniform wire-sizing under the Elmore delay model. </title> <booktitle> In Proc. IEEE ICCAD, </booktitle> <pages> pages 38-43, </pages> <year> 1996. </year>
Reference-contexts: For larger problems (n = 100 and m = 100), our algorithm is more than 30 times faster. 6 Discussion Tree topology: For weighted delay objective, our algorithm can be applied to handle nets with tree topology by a similar technique as in <ref> [5] </ref>. That is we use an iterative algorithm to optimize the tree edges one at a time. At each time we manipulate an edge, we keep all the other edges fixed and apply our algorithm to that edge. <p> At each time we manipulate an edge, we keep all the other edges fixed and apply our algorithm to that edge. For other objectives like minimizing maximum delay or minimizing area with delay bounds, we can apply the Lagrangian relaxation technique as in <ref> [5] </ref> to reduce the problems to a problem of minimizing weighted de lay. For these cases, we need to fix the number of buffers used on each wire beforehand.
Reference: [6] <author> Chris C. N. Chu and D. F. Wong. </author> <title> Closed form solution to simultaneous buffer insertion/sizing and wire sizing. </title> <booktitle> In Proc. Intl. Symp. on Physical Design, </booktitle> <pages> pages 192-197, </pages> <year> 1997. </year>
Reference-contexts: Recently, [18] generalizes the dynamic programming algorithm in [22] to handle buffer insertion and wire sizing simultaneously. Their algorithm also allows choices of buffers of different size and includes power consideration. However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. <ref> [6] </ref> also considers buffer insertion, buffer sizing and wire sizing simultaneously and a closed form optimal solution is obtained. However, in that paper, only wire area capacitance is considered (terms like wire fringing capacitance are ignored). We present a completely new approach in this paper.
Reference: [7] <author> Jason Cong and Lei He. </author> <title> An efficient approach to simultaneous transistor and interconnect sizing. </title> <booktitle> In Proc. IEEE ICCAD, </booktitle> <pages> pages 181-186, </pages> <year> 1996. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [8] <author> Jason Cong and Lei He. </author> <title> Optimal wiresizing for interconnects with multiple sources. </title> <journal> ACM Trans. Design Automation of Electronic Systems, </journal> <volume> 1(4), </volume> <month> October </month> <year> 1996. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [9] <author> Jason Cong, Lei He, Cheng-Kok Koh, and Patrick H. Madden. </author> <title> Performance optimization of VLSI interconnect layout. INTEGRATION, </title> <journal> the VLSI Journal, </journal> <volume> 21 </volume> <pages> 1-94, </pages> <year> 1996. </year>
Reference-contexts: Nowadays, feature size has been down to 0.25m in advance technology. Interconnect delay has become the dominating factor in determining system performance. In many systems designed today, as much as 50% to 70% of clock cycle are consumed by interconnect delay <ref> [9] </ref>. It is predicted in [12] that the feature size will be reduced to 0:18m by 1999 and 0:13m by 2002. So we expect the significance of interconnect delay will further increase in near future. <p> See below for a brief overview or see <ref> [9] </ref> for a comprehensive survey.
Reference: [10] <author> Jason Cong and Cheng-Kok Koh. </author> <title> Simultaneous buffer and wire sizing for performance and power optimization. </title> <booktitle> In Proc. Intl. Symp. on Low Power Electronics and Design, </booktitle> <pages> pages 271-276, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [11] <author> Jason Cong and Kwok Shing Leung. </author> <title> Optimal wiresizing under the distributed Elmore delay model. </title> <journal> IEEE Trans. on CAD, </journal> <volume> 14(3) </volume> <pages> 321-336, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ). <p> Instead of solving Problem 2 directly, we approach the problem by looking at an equivalent problem. Before we introduce the new problem, we will first prove that f must be a decreasing function. A similar monotone property for simpler wire capacitance model and fixed-length segments has been proved in <ref> [11] </ref>. Lemma 1 The optimal wire sizing function f is a decreasing function. Proof outline: Suppose f changes from a smaller value h to a larger value h 0 at a point of a distance l from the source.
Reference: [12] <author> Jim DeTar. </author> <title> Advances outpace SIA roadmap (Semiconductor Industry Association alters projections) (Industry Trend or Event). Electronic News, </title> <address> 42(2147):1, </address> <month> December 16 </month> <year> 1996. </year>
Reference-contexts: Nowadays, feature size has been down to 0.25m in advance technology. Interconnect delay has become the dominating factor in determining system performance. In many systems designed today, as much as 50% to 70% of clock cycle are consumed by interconnect delay [9]. It is predicted in <ref> [12] </ref> that the feature size will be reduced to 0:18m by 1999 and 0:13m by 2002. So we expect the significance of interconnect delay will further increase in near future.
Reference: [13] <author> W. C. </author> <title> Elmore. The transient response of damped linear network with particular regard to wideband amplifiers. </title> <journal> J. Applied Physics, </journal> <volume> 19 </volume> <pages> 55-63, </pages> <year> 1948. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in near future. In this paper, we will mainly consider the simultaneous buffer insertion and wire sizing problem as stated in Problem 1. (Elmore delay model <ref> [13] </ref> is used for delay calculation.) Both buffer insertion and wire sizing have been shown to be effective techniques to reduce interconnect delay and many work has been done during the past few years. See below for a brief overview or see [9] for a comprehensive survey.
Reference: [14] <author> J. P. Fishburn. </author> <title> Shaping a VLSI wire to minimize Elmore delay. </title> <booktitle> In Proc. European Design and Test Conference, </booktitle> <year> 1997. </year>
Reference-contexts: In order to obtain accurate results, the wire usually needs to be divided into a large number of (much more than n) segments. <ref> [2, 4, 14, 15] </ref> consider a variant such that the set H of choices of wire width is a continuous interval. Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate.
Reference: [15] <author> J. P. Fishburn and C. A. Schevon. </author> <title> Shaping a distributed-RC line to minimize Elmore delay. </title> <journal> IEEE Transactions on Circuits and Systems-I: Fundamental Theory and Applications, </journal> <volume> 42(12) </volume> <pages> 1020-1022, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: In order to obtain accurate results, the wire usually needs to be divided into a large number of (much more than n) segments. <ref> [2, 4, 14, 15] </ref> consider a variant such that the set H of choices of wire width is a continuous interval. Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate.
Reference: [16] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> NY, </address> <year> 1979. </year>
Reference-contexts: In general, quadratic program is a mathematical program with a quadratic objective function subject to linear equality and inequality constraints. If the matrix is positive definite, it is called a convex quadratic program. Note that quadratic programming is NP-hard <ref> [16] </ref> but convex quadratic programming can be solved in polynomial time [17]. In the following, we will prove that the quadratic program (1) is convex. First, we make the following two definitions. Definition 1 (Symmetric Decomposable Matrix) Let Q = (q ij ) be an n fi n symmetric matrix.
Reference: [17] <author> M. K. Kozlov, S. P. Tarasov, and L. G. Khachiyan. </author> <title> Polynomial solvability of convex quadratic programming. </title> <journal> Soviet Mathematics Doklady, </journal> <volume> 20 </volume> <pages> 1108-1111, </pages> <year> 1979. </year>
Reference-contexts: If the matrix is positive definite, it is called a convex quadratic program. Note that quadratic programming is NP-hard [16] but convex quadratic programming can be solved in polynomial time <ref> [17] </ref>. In the following, we will prove that the quadratic program (1) is convex. First, we make the following two definitions. Definition 1 (Symmetric Decomposable Matrix) Let Q = (q ij ) be an n fi n symmetric matrix. <p> Note that y 6= 0 as U is nonsingular and x 6= 0. So x T Qx = x T U T U x = y T y &gt; 0. In other words, Q is positive definite. 2 By Lemma 2, Lemma 4 and <ref> [17] </ref>, we have Theorem 1.
Reference: [18] <author> John Lillis, Chung-Kuan Cheng, and Ting-Ting Y. Lin. </author> <title> Optimal wire sizing and buffer insertion for low power and a generalized delay model. </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> 31(3) </volume> <pages> 437-447, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate. Not much work has been done on simultaneous buffer insertion and wire sizing. Recently, <ref> [18] </ref> generalizes the dynamic programming algorithm in [22] to handle buffer insertion and wire sizing simultaneously. Their algorithm also allows choices of buffers of different size and includes power consideration.
Reference: [19] <author> D. G. Luenberger. </author> <title> Linear and Nonlinear Programming. </title> <publisher> Addison Wesley, </publisher> <address> second edition, </address> <year> 1984. </year>
Reference-contexts: It is also one of the most popular methods to solve quadratic programming. It has been shown to be efficient in practice. We will first give a brief outline on how to solve convex quadratic programming by active set method. See <ref> [19] </ref> for details. If a convex quadratic program consists of equality constraints only, it is particularly easy to solve. Consider the following program: minimize 1 2 l T l + T l subject to l = b (2) where is positive definite and is of full rank.
Reference: [20] <author> N. Menezes, R. Baldick, and L. T. Pileggi. </author> <title> A sequential quadratic programming approach to concurrent gate and wire sizing. </title> <booktitle> In Proc. IEEE ICCAD, </booktitle> <pages> pages 144-151, </pages> <year> 1995. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [21] <author> Sachin S. Sapatnekar. </author> <title> RC interconnect optimization under the Elmore delay model. </title> <booktitle> In Proc. ACM/IEEE DAC, </booktitle> <pages> pages 387-391, </pages> <year> 1994. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
Reference: [22] <author> L. P. P. P. van Ginneken. </author> <title> Buffer placement in distributed RC-tree networks for minimal Elmore delay. </title> <booktitle> In Proc. Intl. Symp. on Circuits and Systems, </booktitle> <pages> pages 865-868, </pages> <year> 1990. </year>
Reference-contexts: Therefore, the resulting wire width function f (x) is continuous. However, a continuous shape is expensive to fabricate. Not much work has been done on simultaneous buffer insertion and wire sizing. Recently, [18] generalizes the dynamic programming algorithm in <ref> [22] </ref> to handle buffer insertion and wire sizing simultaneously. Their algorithm also allows choices of buffers of different size and includes power consideration.
Reference: [23] <author> Qing Zhu, Wayne W.-M. Dai, and Joe G. </author> <title> Xi. Optimal sizing of high-speed clock networks based on distributed RC and lossy transmission line models. </title> <booktitle> In Proc. IEEE ICCAD, </booktitle> <pages> pages 628-633, </pages> <year> 1993. </year>
Reference-contexts: Determine: the positions x 1 ; : : : ; x m at which the buffers are inserted and the wire width f (x) at each point x along the wire such that the delay from source to sink is minimized. mizing the width of each segment iteratively (e.g. <ref> [1, 3, 7, 8, 10, 11, 20, 21, 23] </ref> ).
References-found: 23

