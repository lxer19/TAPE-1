URL: http://www.cse.ucsc.edu/research/ccrg/publications/brian.mm98.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Email: brian@cse.ucsc.edu sanjoy@dnrc.bell-labs.com jj@cse.ucsc.edu  
Title: Organizing Multicast Receivers Deterministically by Packet-Loss Correlation  
Author: Brian Neil Levine Sanjoy Paul J. J. Garcia-Luna-Aceves 
Address: Holmdel, NJ 07733, USA  Santa Cruz, CA 95060, USA  
Affiliation: Computer Engineering Departmentfl Bell Laboratoriesy School of Engineering  University of California  
Abstract: The ability to trace multicast paths is currently available in the Internet by means of IGMP MTRACE packets. We introduce Tracer, the first protocol that organizes the receivers of a multicast group deterministically into a logical tree structure while maintaining exact packet-loss correlation for local error recovery, and without requiring any changes to existing multicast routing protocols. Tracer uses MTRACE packets in IGMP to allow a receiver host to obtain its path to the source of a multicast group. Receivers use the mul-ticast path information to determine how to achieve local error recovery and effective congestion control. We compare the tracing approach with prior mechanisms that attempt local recovery. Results of measurements carried out over the CAIRN illustrate the fact that tracing multicast paths is an effective tool to organize receivers based on their packet-loss correlation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Ballardie, P. Francis, and J. Crowcroft. </author> <title> Core based trees (CBT): An architecture for scalable inter-domain multicast routing. </title> <booktitle> In Proc. ACM SIGCOMM'93, </booktitle> <pages> pages 85-95, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: The differences in operation between RMA and ECSLMA mainly concern issues that Tracer solves in other ways, and are not of concern here; for example, working over shared-tree multicast protocols (such as CBT and OCBT <ref> [1, 21] </ref>), and avoiding sending redundant retransmissions to some receivers. RMA is built on the concept we call acceptability, which considers whether a retransmitter is a good choice for a requester based on what percentage of the path they share from the source.
Reference: [2] <author> S. Casner and B. Fenner. </author> <title> A "traceroute" facility for IP mul-ticasting. </title> <type> Technical Report draft-ietf-idmr-traceroute-ipm-02.txt, IEFT draft, </type> <month> December </month> <year> 1997. </year>
Reference-contexts: It is straight forward to show that loop freedom is achieved, because the level numbers render a complete ordering along the multicast tree from the source. 3.5 Improving the Efficiency of Tracing The MTRACE portion of IGMP is currently under revision as a separate entity <ref> [2] </ref>, focusing on using MTRACE as a diagnostic tool for individual receivers of a multicast group. Accordingly, the revision aims to avoid the scenario where the source (and root) of a routing tree initiates a trace that is multicast to all receivers.
Reference: [3] <author> D. De Lucia and K. Obraczka. </author> <title> Multicast feedback suppre-sion. </title> <booktitle> In Proc. IEEE INFOCOM'97, </booktitle> <pages> pages 463-70. </pages> <publisher> IEEE, </publisher> <year> 1997. </year>
Reference-contexts: Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control <ref> [6, 13, 3] </ref>, similar to those developed for such unicast reliable protocols as TCP [8]. <p> Section 4 details how Tracer can be used as a component of larger multicast protocols. In particular, we consider the Reliable Multicast Transport Protocol (RMTP) [17], the Structure-Oriented Resilient Multicast Protocol (STORM) [22], and De Lucia and Obraczka's multicast congestion control scheme <ref> [3] </ref> as examples. Section 5 analyzes data collected on packet loss between several hosts on the Collaborative Advanced Internet Research Network (CAIRN), a real network, in order to illustrate how well tracing assists in predicting packet-loss correlation, and therefore receiver organization. <p> This value is returned to the requester along with the percentage of packets received correctly by time b a (step 3). (Time spent processing at the respective hosts should be subtracted from the cumulative time.) 4.3 Grouping by Congestion with Tracer Work by De Lucia and Obraczka <ref> [3] </ref> groups receivers together with the same state of congestion. Each group has a representative that is ideally the most upstream receiver among those in the group, because such a receiver is most likely located ahead of congested links.
Reference: [4] <author> W. Fenner. </author> <title> Internet group management protocol, </title> <type> version 2. Internet-Draft, </type> <month> February </month> <year> 1996. </year>
Reference-contexts: ensures an acceptable acknowledgment tree; nor can any of those heuristics discover the name of the router to send the subcast retransmission from. 3 Tracing We propose a new protocol, called Tracer, which relies upon a function built into all IP multicast routers running the Internet Group Management Protocol (IGMP) <ref> [4] </ref>. IGMP specifies a special packet called "MTRACE" (multicast trace) that allows any host to trace its path to the source (root) of a multicast routing tree for a specified number of hops.
Reference: [5] <author> S. Floyd et al. </author> <title> A reliable multicast framework for lightweight sessions and application level framing. </title> <booktitle> In Proc. ACM SIGCOMM'95., </booktitle> <pages> pages 342-356, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8]. <p> One technique that has been used in the past by reliable multicast protocols is local recovery: designating one or more hosts other than the source (usually one of the receivers) as another source of retransmissions when the network resources permit it. For instance, the Scalable Reliable Multicast (SRM) <ref> [5] </ref> protocol allows any receiver to respond to a Nack, and the Reliable Multicast Transport Protocol (RMTP) [17] appoints "designated receivers", organized into a tree structure, for sending retransmissions to portions of the receiver set. <p> In other words, if unicast propagation delay is the measure, unicast retransmissions must be sent (as in STORM [22]). Similarly, if multicast retransmissions are to be sent from the closest server, then the multicast propagation delays must be measured (as in SRM <ref> [5] </ref>). If a unicast-measured retransmitter uses multicasts to send the retransmissions, then the retransmitter might not be the closest host on the multicast tree, or even one that lies between the requester and the source (in other words, even the source may have been a better choice). <p> The fundamental difference in the way Tracer uses ERS with respect to other protocols is that Tracer uses ERS to advertise its selection criteria, while previous protocols use ERS as an integral part of the selection criteria (e.g., <ref> [5, 23] </ref>). Upon reception of another host's PATH ADV message, a receiver must decide whether it can respond as a willing parent, based on the acceptability definition. <p> Group formation is based on Nack-avoidance algorithm specified by the SRM <ref> [5] </ref> protocol. If a receiver notices that other receivers' Nacks are for the same or a superset of packets, the receiver reduces its Nack backoff timer. If the other receiver's Nacks are not duplicates, or are for a subset of lost packets, then the examining receiver increases its backoff timer.
Reference: [6] <author> M. Handley. </author> <title> A congestion control architecture for bulk data transfer. </title> <booktitle> Presentation at IRTF meeting, </booktitle> <month> September </month> <year> 1997. </year> <title> Cannes, </title> <address> France. </address>
Reference-contexts: Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control <ref> [6, 13, 3] </ref>, similar to those developed for such unicast reliable protocols as TCP [8]. <p> This approach avoids timer traffic and is simple to implement, but cannot guarantee that the choice of representative is optimal, because Nacks and Acks may get lost during times of congestion. Handley has proposed an extension to this approach <ref> [6] </ref> based on the notion of relays and subgroups. Relays are receivers that buffer data from the source (or another relay) and re-multicast the data at a slower rate to a subgroup of receivers.
Reference: [7] <author> M. Hofmann. </author> <title> A generic concept for large-scale multicast. </title> <booktitle> In International Zurich Seminar on Digital Communication (IZS'96), </booktitle> <publisher> Springer Verlag, </publisher> <pages> pages 95-106, </pages> <month> Febuary </month> <year> 1996. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8].
Reference: [8] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proc. ACM SIGCOMM'88, </booktitle> <pages> pages 314-328, </pages> <year> 1988. </year>
Reference-contexts: Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP <ref> [8] </ref>. One technique that has been used in the past by reliable multicast protocols is local recovery: designating one or more hosts other than the source (usually one of the receivers) as another source of retransmissions when the network resources permit it.
Reference: [9] <author> B. N. Levine and J.J. Garcia-Luna-Aceves. </author> <title> Improving internet multicast with routing labels. </title> <booktitle> In Proc. IEEE International Conference on Network Protocols, </booktitle> <pages> pages 241-50, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8]. <p> This calls for a deterministic approach to multicast retransmis-sions, as well as the ability to accomplish subcasting, i.e., multicasting to a specific subset of a multicast group. 2.3 Using router support Both the Reliable Multicast Architecture (RMA) <ref> [9] </ref> and the Error Control Scheme for Large-Scale Multicast Applications (ECSLMA) [16] organize the receiver set of a mul-ticast session into a tree by adding extra functionality to multicast routers. <p> More formally, the relationship between a retransmitter and a requester is either unacceptable (they share no common path from the source), or one of the following <ref> [9] </ref>: Directly acceptable: The relationship between a receiver A and its retransmitter B is directly acceptable if the router attached to B lies on the path from the source to the router attached to A. <p> of parent in RMA, ECSLMA, and Tracer, including perceived packet loss.) The advantage of organizing the receiver set into a tree such that every retransmitter-requester relationship is acceptable, as in RMA, is that all receivers that are downstream on the retransmitter-requester tree are also downstream on the multicast routing tree <ref> [9] </ref>. For example, in will reach all of D's children, and not hosts that are not D's children. We refer to a transmission to a portion of the multicast tree, e.g., starting B and away from the source (or root) and the incoming interface, as a subcast.
Reference: [10] <author> B. N. Levine and J.J. Garcia-Luna-Aceves. </author> <title> A comparison of reliable multicast protocols. </title> <journal> Multimedia Systems Journal (ACM/Springer), </journal> <volume> 6(5), </volume> <month> August </month> <year> 1998. </year>
Reference-contexts: Organizing the receivers into a tree structure, where each receiver is responsible for a set number of other receivers, has been shown via an analysis model to be the most scalable choice among several methods <ref> [19, 10] </ref>. Intuitively, reliable multicast protocols that organize trees of receivers for local recovery work well because they distribute the cost of processing Acks, Nacks, and retransmissions, which reduces the load on the source and the network. The question is how to establish such an organized local recovery hierarchy efficiently.
Reference: [11] <author> B. N. Levine, D. Lavo, and J.J. Garcia-Luna-Aceves. </author> <title> The case for reliable concurrent multicasting using shared ack trees. </title> <booktitle> In Proc. ACM Multimedia, </booktitle> <pages> pages 365-376, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8]. <p> Aggregate Acks are required for tree-based complete recovery protocols that make changes to the topology of the receiver-tree during the session <ref> [11] </ref>. Tracer could also be used as a component of the SRM protocol. Rather than performing Nack-avoidance between all receivers, Tracer could be used to form separate groups of receivers, organized in a tree structure, where Nacks and Nack-avoidance timers remain local to each group.
Reference: [12] <author> D. L. Mills. </author> <title> Internet time synchronization: The network time protocol. Network Working Group Request for Comments: </title> <type> 1129, </type> <month> October </month> <year> 1989. </year>
Reference-contexts: Alternatively, the clocks of all hosts in the session could be synchronized, e.g., by using a protocol such as the Network Time Protocol (NTP) <ref> [12] </ref>; however, propagation delay between hosts must still be measured. Finally, not all Internet routers are capable of routing multicast packets.
Reference: [13] <author> T. Montgomery. </author> <title> A loss tolerant rate controller for reliable multicast. </title> <type> Technical Report NASA-IVV-97-011, </type> <institution> NASA, </institution> <month> August </month> <year> 1997. </year>
Reference-contexts: Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control <ref> [6, 13, 3] </ref>, similar to those developed for such unicast reliable protocols as TCP [8].
Reference: [14] <author> J. Nonnenmacher, , E.W. Biersack, and Don Towsley. </author> <title> Parity-based loss recovery for reliable multicast transmission. </title> <booktitle> In Proc. ACM SIGCOMM'97, </booktitle> <pages> pages 289-300, </pages> <month> September </month> <year> 1997. </year>
Reference: [15] <author> J. Nonnenmacher et al. </author> <title> How bad is reliable multicast without local recovery? In Proc. </title> <journal> IEEE INFOCOM'98, </journal> <month> March </month> <year> 1998. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8].
Reference: [16] <author> C. Papadopoulos, G. Parulkar, and G. Varghese. </author> <title> An error control scheme for large-scale multicast applications. </title> <booktitle> In Proc. IEEE INFOCOM'98, </booktitle> <year> 1998. </year>
Reference-contexts: This calls for a deterministic approach to multicast retransmis-sions, as well as the ability to accomplish subcasting, i.e., multicasting to a specific subset of a multicast group. 2.3 Using router support Both the Reliable Multicast Architecture (RMA) [9] and the Error Control Scheme for Large-Scale Multicast Applications (ECSLMA) <ref> [16] </ref> organize the receiver set of a mul-ticast session into a tree by adding extra functionality to multicast routers.
Reference: [17] <author> S. Paul and other. </author> <title> Reliable multicast transport protocol (RMTP). </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 15(3) </volume> <pages> 407-421, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8]. <p> For instance, the Scalable Reliable Multicast (SRM) [5] protocol allows any receiver to respond to a Nack, and the Reliable Multicast Transport Protocol (RMTP) <ref> [17] </ref> appoints "designated receivers", organized into a tree structure, for sending retransmissions to portions of the receiver set. <p> Section 4 details how Tracer can be used as a component of larger multicast protocols. In particular, we consider the Reliable Multicast Transport Protocol (RMTP) <ref> [17] </ref>, the Structure-Oriented Resilient Multicast Protocol (STORM) [22], and De Lucia and Obraczka's multicast congestion control scheme [3] as examples. <p> If the hop count from the source is used, rather than between nodes, then the loop could be prevented, for example, if nodes were required to find re-transmitters that lie closer to the source than themselves. The Reliable Multicast Transport Protocol (RMTP) <ref> [17] </ref> also builds a tree of retransmitters. Each receiver selects the closest retransmitter based on propagation delay. However, the tree of retransmitters must be picked by administrators to ensure that a loop-free hierarchy of retransmitters is formed.
Reference: [18] <author> S. Pejhan, M. Schwartz, and Anastassiou D. </author> <title> Error control using retransmission schemes in multicast transport. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(3) </volume> <pages> 413-27, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Unicast retransmissions trickle down the tree from retransmitter to retransmitter (e.g., the STORM protocol unicasts retrans-missions despite its emphasis on deadline-oriented data); multicast retransmissions have been shown to lower average packet delay from reliable transmission <ref> [18] </ref>. Furthermore, unicast retransmissions are a waste of bandwidth; sending multiple copies of the same data is inefficient, especially since a multicast routing tree already connects the receivers. <p> Mul-ticast retransmissions can lower average packet delay <ref> [18] </ref>, which is desirable for the real-time streaming applications that resilient multicast protocols are designed to support. In this situation, retransmitters should be chosen based on what percentage of the data is received correctly for a given time scale.
Reference: [19] <author> S. Pingali, D. Towsley, and J. Kurose. </author> <title> A comparison of sender-initiated and receiver-initiated reliable multicast protocols. </title> <journal> In Performance Evaluation Review, </journal> <volume> volume 22, </volume> <pages> pages 221-230, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Organizing the receivers into a tree structure, where each receiver is responsible for a set number of other receivers, has been shown via an analysis model to be the most scalable choice among several methods <ref> [19, 10] </ref>. Intuitively, reliable multicast protocols that organize trees of receivers for local recovery work well because they distribute the cost of processing Acks, Nacks, and retransmissions, which reduces the load on the source and the network. The question is how to establish such an organized local recovery hierarchy efficiently.
Reference: [20] <author> Punnet Sharma et al. </author> <title> Scalable session messages in SRM using self-configuration. </title> <type> Technical Report, </type> <month> January </month> <year> 1998. </year> <note> http://netweb.usc.edu/puneetsh/papers/ssm.ps. </note>
Reference-contexts: For example, SRM requires that all receivers measure the roundtrip delay between each other. Even if hierarchical structures are introduced in the exchange of session messages with delay information, the accuracy of such information degrades as the scalability of session messages is increased by aggregating delay information <ref> [20] </ref>. Alternatively, the clocks of all hosts in the session could be synchronized, e.g., by using a protocol such as the Network Time Protocol (NTP) [12]; however, propagation delay between hosts must still be measured. Finally, not all Internet routers are capable of routing multicast packets.
Reference: [21] <author> C. Shields and J.J. Garcia-Luna-Aceves. </author> <title> The ordered core based tree protocol. </title> <booktitle> In Proc. IEEE INFOCOM'97, </booktitle> <pages> pages 884-91, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: The differences in operation between RMA and ECSLMA mainly concern issues that Tracer solves in other ways, and are not of concern here; for example, working over shared-tree multicast protocols (such as CBT and OCBT <ref> [1, 21] </ref>), and avoiding sending redundant retransmissions to some receivers. RMA is built on the concept we call acceptability, which considers whether a retransmitter is a good choice for a requester based on what percentage of the path they share from the source. <p> We are not suggesting that the ability for a single receiver to trace its path from the source be removed, rather just that source-based multicast tracing be added to IGMP. While shared-tree multicast routing protocols, like Ordered Core Based Trees (OCBT) <ref> [21] </ref>, are not in wide use in the Internet, we expect some MTRACE mechanism will be included when they are prevalent. This section deals with issues that arise.
Reference: [22] <author> X. Rex Xu et al. </author> <title> Resilient multicast support for continuous-media applications. </title> <booktitle> In Proc. NOSSDAV, </booktitle> <pages> pages 183-94, </pages> <year> 1996. </year>
Reference-contexts: Section 4 details how Tracer can be used as a component of larger multicast protocols. In particular, we consider the Reliable Multicast Transport Protocol (RMTP) [17], the Structure-Oriented Resilient Multicast Protocol (STORM) <ref> [22] </ref>, and De Lucia and Obraczka's multicast congestion control scheme [3] as examples. <p> If a protocol depends on delay to give relative positions on the multicast tree, then the protocol must measure multicast propagation delay in order to find the closest server. In other words, if unicast propagation delay is the measure, unicast retransmissions must be sent (as in STORM <ref> [22] </ref>). Similarly, if multicast retransmissions are to be sent from the closest server, then the multicast propagation delays must be measured (as in SRM [5]). <p> Just like RMA and ECSLMA, Tracer is able to identify the specific router from which subcast retransmissions should be sent. 2.4 Exchanging data of observed performance A novel approach to organizing the receiver set is considered by the STORM <ref> [22] </ref> protocol, where receivers pick the best retransmitter based on observed performance, propagation delay, and buffer size. Each potential retransmitter is evaluated based on what percentage of the packets can be received at the requester before the buffer runs out. <p> The STORM protocol <ref> [22] </ref> relies on unicast retransmis-sions, but Tracer's approach to building the tree of retrans-mitters can be adapted to the resilient multicast model, with the advantage of multicast retransmissions.
Reference: [23] <author> R. Yavatkar, J. Griffioen, and M. Sudan. </author> <title> A reliable dissemination protocol for interactive collaborative applications. </title> <booktitle> In Proc. ACM Multimedia, </booktitle> <pages> pages 333-44, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Producing a reliable multicast protocol that scales well with the number of receivers, in terms of network traffic and the processing required of the source and receivers, has proven to be a challenge, as demonstrated by the number of approaches taken in the past (e.g., <ref> [17, 5, 23, 9, 11, 7, 15] </ref>). Moreover, as protocols for multi-cast error control are developed, mechanisms must also be developed for multicast congestion control [6, 13, 3], similar to those developed for such unicast reliable protocols as TCP [8]. <p> For example, by measuring the number of routers on the path between two hosts, i.e., the hop count, it is thought that the closest retransmit-ter (and if possible a retransmitter in the same administrative domain as the requester) can be located. For example, the Tree-based Multicast Transport Protocol (TMTP) <ref> [23] </ref> builds a tree of receivers by finding the closest retransmitter to each receiver based on hop counts between hosts. Figures 1 and 2 illustrate a multicast routing tree and three problems that can arise by using hop count as a measure in the way it is used in TMTP. <p> The fundamental difference in the way Tracer uses ERS with respect to other protocols is that Tracer uses ERS to advertise its selection criteria, while previous protocols use ERS as an integral part of the selection criteria (e.g., <ref> [5, 23] </ref>). Upon reception of another host's PATH ADV message, a receiver must decide whether it can respond as a willing parent, based on the acceptability definition.
References-found: 23

