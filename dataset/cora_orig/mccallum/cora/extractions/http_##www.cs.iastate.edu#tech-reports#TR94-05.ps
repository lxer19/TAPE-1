URL: http://www.cs.iastate.edu/tech-reports/TR94-05.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: http://www.cs.iastate.edu
Title: A Faster Algorithm for the Perfect Phylogeny Problem when the number of Characters is Fixed TR94-05  
Author: Richa Agarwala and David Fernandez-Baca 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: March 22, 1994  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. Agarwala and D. Fern andez-Baca, </author> <title> A Polynomial-Time Algorithm for the Perfect Phylogeny Problem when the Number of Character States is Fixed, </title> <booktitle> In Proceedings of the 34th Annual Symposium on Fundamentals of Computer Science (1993), </booktitle> <pages> pp. 140-147. </pages>
Reference-contexts: Using the polynomial equivalence of triangulating colored graphs and perfect phylogeny [14], we get an algorithm with a running time of O (m k+2 k 2 ) for triangulating a k-colored graph having m edges. 2 Preliminaries We now state some definitions and preliminary results from <ref> [1] </ref>. Lemma 1 A set of species S has a perfect phylogeny if and only if every subset of S has one. Definition 1 Suppose T is a perfect phylogeny for S and let p be some vertex in T . <p> If there is any such species, we get subproblems G [ fxg for each G 2 (S fxg)=x. By Lemma 1, S has a perfect phylogeny if and only if each of these subproblems has one. The details of this construction are given in <ref> [1] </ref>. We can now assume that for each species x 2 S, j (S fxg)=xj = 1. From Proposition 5, S has no type I c-splits.
Reference: [2] <author> H. Bodlaender, M. Fellows, and M. T. Hallett, </author> <title> The parameterized complexity of DNA mapping, perfect phylogeny and other problems of "bounded width", </title> <type> manuscript. </type>
Reference-contexts: This is polynomial for every fixed m but not very fast in practical terms. Bodlaender, Fellows, and Hallett <ref> [2] </ref> have shown that the 1 perfect phylogeny problem is hard for W [2], implying that it is unlikely to be solved by an algorithm whose running time is of the form O (f (m)rn) where f is an exponential function. <p> This is polynomial for every fixed m but not very fast in practical terms. Bodlaender, Fellows, and Hallett <ref> [2] </ref> have shown that the 1 perfect phylogeny problem is hard for W [2], implying that it is unlikely to be solved by an algorithm whose running time is of the form O (f (m)rn) where f is an exponential function.
Reference: [3] <author> H. Bodlaender, M. Fellows, and T. Warnow, </author> <title> Two strikes against perfect phylogeny, </title> <booktitle> In Proceedings of the 19th International Colloquium on Automata, Languages, and Programming, Springer Verlag, Lecture Notes in Computer Science (1992), </booktitle> <pages> pp. 273-283. </pages>
Reference-contexts: In this context, one is frequently interested in computing a maximal set of compatible characters, since, in practice, character sets tend to be incompatible. The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. <ref> [3] </ref> and, independently, by Steel [13]. Linear time algorithms have been found for m = 3 [4, 8].
Reference: [4] <author> H. Bodlaender and T. Kloks, </author> <title> A simple linear time algorithm for triangulating three-colored graphs, </title> <booktitle> In Proceedings of the 9th Annual Symposium on Theoretical Aspects of Computer Science (1992), </booktitle> <pages> pp. 415-423. </pages>
Reference-contexts: The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. [3] and, independently, by Steel [13]. Linear time algorithms have been found for m = 3 <ref> [4, 8] </ref>. The perfect phylogeny problem is known to be polynomially equivalent to the problem of triangulating colored graphs [14] which led to a perfect phylogeny algorithm running in O ((rm) m+1 + nm 2 ) time [12].
Reference: [5] <author> W. H. E. Day and D. Sankoff, </author> <title> Computational complexity of inferring phylogenies by compatibility, </title> <journal> Syst. Zool., </journal> <volume> Vol. 35, No. 2 (1986), </volume> <pages> pp. 224-229. </pages>
Reference-contexts: If S admits a perfect phylogeny, the set of characters C is said to be compatible. We should point out that in the biology literature the perfect phylogeny problem is more commonly known as the character compatibility problem <ref> [5] </ref>. In this context, one is frequently interested in computing a maximal set of compatible characters, since, in practice, character sets tend to be incompatible. The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. [3] and, independently, by Steel [13].
Reference: [6] <author> G. F. Estabrook, </author> <title> Cladistic methodology: A discussion of the theoretical basis for the induction of evolutionary history, </title> <journal> Annual Review of Ecology and Systematics, </journal> <volume> 3 (1972), </volume> <pages> pp. 427-456. </pages>
Reference-contexts: 1 Introduction A fundamental problem in biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [6, 7, 10, 11] </ref>. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny. In one of the standard models, the problem can be expressed mathematically as follows.
Reference: [7] <author> W. M. Fitch, </author> <title> Aspects of molecular evolution, Annual Reviews of Genetics, </title> <booktitle> 7 (1973), </booktitle> <pages> pp. 343-380. </pages>
Reference-contexts: 1 Introduction A fundamental problem in biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [6, 7, 10, 11] </ref>. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny. In one of the standard models, the problem can be expressed mathematically as follows.
Reference: [8] <author> S. Kannan and T. Warnow, </author> <title> Triangulating three-colored graphs, </title> <journal> SIAM J. on Discrete Mathematics, </journal> <volume> 5 (1992), </volume> <pages> pp. 249-258. </pages>
Reference-contexts: The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. [3] and, independently, by Steel [13]. Linear time algorithms have been found for m = 3 <ref> [4, 8] </ref>. The perfect phylogeny problem is known to be polynomially equivalent to the problem of triangulating colored graphs [14] which led to a perfect phylogeny algorithm running in O ((rm) m+1 + nm 2 ) time [12].
Reference: [9] <author> S. Kannan and T. Warnow, </author> <type> Personal Communication. </type>
Reference-contexts: Section 5 improves on the basic algorithm by considering fewer c-clusters. 3 Finding c-clusters Given a species x, Kannan and Warnow <ref> [9] </ref> defined an equivalence relation E x as the transitive closure of the following relation R on S fxg: (a; b) 2 R if there exists c 2 C such that a c = b c 6= x c . <p> The set of equivalence classes is denoted by (S fxg)=x and can be computed in O (nm) time <ref> [9] </ref>. Note that if x is an internal node in any perfect phylogeny on S, then j (S fxg)=xj 2. In particular, we make the following remark. Proposition 5 If j (S fxg)=xj = 1 for every x 2 S, then S has no type I splits. <p> In particular, we make the following remark. Proposition 5 If j (S fxg)=xj = 1 for every x 2 S, then S has no type I splits. We now reformulate a result in <ref> [9] </ref>. Lemma 6 Let G 2 (S fxg)=x. If S [ fxg has a perfect phylogeny, then G is a c-cluster and it is compatible with x. 3 Proof: From the definition of E x , it follows that G is a cluster and G is compatible with x. <p> Since n (r 1)m + 1 by Proposition 9, the running time of the new algorithm is O ((r n=m) m (rm) 2 ). Acknowledgements We thank Tandy Warnow and Sampath Kannan for providing us with the equivalence relation E x and their results in <ref> [9] </ref>. 6
Reference: [10] <author> W. J. Le Quesne, </author> <title> A method of selection of characters in numerical taxonomy, </title> <journal> Syst. Zool., </journal> <volume> 18 (1969), </volume> <pages> pp. 201-205. </pages>
Reference-contexts: 1 Introduction A fundamental problem in biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [6, 7, 10, 11] </ref>. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny. In one of the standard models, the problem can be expressed mathematically as follows.
Reference: [11] <author> W. J. Le Quesne, </author> <title> Further studies based on the uniquely derived character concept, </title> <journal> Syst. Zool., </journal> <volume> 21 (1972), </volume> <pages> pp. 281-288. </pages>
Reference-contexts: 1 Introduction A fundamental problem in biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [6, 7, 10, 11] </ref>. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny. In one of the standard models, the problem can be expressed mathematically as follows.
Reference: [12] <author> F. R. McMorris, T. Warnow, and T. Wimer, </author> <title> Triangulating vertex colored graphs, </title> <booktitle> In Proceedings of the 4th Annual Symposium on Discrete Algorithms (1993), </booktitle> <address> Austin, Texas. </address>
Reference-contexts: Linear time algorithms have been found for m = 3 [4, 8]. The perfect phylogeny problem is known to be polynomially equivalent to the problem of triangulating colored graphs [14] which led to a perfect phylogeny algorithm running in O ((rm) m+1 + nm 2 ) time <ref> [12] </ref>. This is polynomial for every fixed m but not very fast in practical terms.
Reference: [13] <author> M. A. Steel, </author> <title> The complexity of reconstructing trees from qualitative characters and subtrees, </title> <journal> Journal of Classification, </journal> <volume> 9 (1992), </volume> <pages> pp. 91-116. </pages>
Reference-contexts: In this context, one is frequently interested in computing a maximal set of compatible characters, since, in practice, character sets tend to be incompatible. The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. [3] and, independently, by Steel <ref> [13] </ref>. Linear time algorithms have been found for m = 3 [4, 8]. The perfect phylogeny problem is known to be polynomially equivalent to the problem of triangulating colored graphs [14] which led to a perfect phylogeny algorithm running in O ((rm) m+1 + nm 2 ) time [12].
Reference: [14] <author> T. J. Warnow, </author> <title> Combinatorial Algorithms for Constructing Phylogenetic Trees, </title> <type> Ph.D. Thesis, </type> <institution> University of California, Berkeley, </institution> <month> May </month> <year> 1991. </year> <month> 7 </month>
Reference-contexts: The perfect phylogeny problem was shown to be NP-complete by Bodlaender et al. [3] and, independently, by Steel [13]. Linear time algorithms have been found for m = 3 [4, 8]. The perfect phylogeny problem is known to be polynomially equivalent to the problem of triangulating colored graphs <ref> [14] </ref> which led to a perfect phylogeny algorithm running in O ((rm) m+1 + nm 2 ) time [12]. This is polynomial for every fixed m but not very fast in practical terms. <p> In this paper, we present a O ((r n=m) m (rm) 2 ) algorithm, which is polynomial for every fixed m and is faster and simpler than the known algorithms for m 4. Using the polynomial equivalence of triangulating colored graphs and perfect phylogeny <ref> [14] </ref>, we get an algorithm with a running time of O (m k+2 k 2 ) for triangulating a k-colored graph having m edges. 2 Preliminaries We now state some definitions and preliminary results from [1].
References-found: 14

