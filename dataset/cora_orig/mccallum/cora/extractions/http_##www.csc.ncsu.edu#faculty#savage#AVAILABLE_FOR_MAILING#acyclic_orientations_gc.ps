URL: http://www.csc.ncsu.edu/faculty/savage/AVAILABLE_FOR_MAILING/acyclic_orientations_gc.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/savage/papers.html
Root-URL: http://www.csc.ncsu.edu
Author: Carla D. Savage Matthew B. Squire and Douglas B. West 
Abstract: Gray Code Results for Acyclic Orientations Abstract Given a graph G, the acyclic orientation graph of G, denoted AO(G), is the graph whose vertices are the acyclic orientations of G, and two acyclic orientations are joined by an edge in AO(G) iff they differ by the reversal of a single edge. A hamilton cycle in AO(G) gives a Gray code listing of the acyclic orientations of G. We prove that for certain graphs G, AO(G) is hamiltonian, and give explicit constructions of hamilton cycles or paths. This work includes Gray codes for listing the acyclic orientations of trees, complete graphs, odd cycles, chordal graphs, odd ladder graphs, and odd wheel graphs. We also give examples of graphs whose acyclic orientation graph is not hamiltonian. We show that the acyclic orientations of even cycles, some complete bipartite graphs, even ladder graphs, and even wheel graphs cannot be listed by the defined Gray code. 
Abstract-found: 1
Intro-found: 1
Reference: [BM76] <author> J. A. Bondy and U. S. R. Murty, </author> <title> "Graph Theory with Applications," </title> <publisher> North-Holland (1976). </publisher>
Reference-contexts: We will study the ao-graph for special classes of graphs. Definitions of acyclic graphs, trees, cycles, and complete graphs can be found in Bondy & Murty <ref> [BM76] </ref>. We use C n and K n to denote the cycle and complete graph on n vertices, respectively.
Reference: [DE93] <author> J. Donald and J. Elwin, </author> <title> "On the structure of the strong orientations of a graph," </title> <journal> Discrete Mathematics, </journal> <month> 6(1) </month> <year> (1993) </year> <month> 30-43. </month>
Reference-contexts: Similar work was done on the strong orientations of a graph (also called "strongly connected orientations," meaning orientations in which there is a directed path from each vertex to every other vertex). Given G, Donald and Elwin <ref> [DE93] </ref> create a graph Strong (G), where the vertices of Strong (G) are the strong orientations of a graph, and two strong orientations are adjacent in Strong (G) if they differ by a simple transformation.
Reference: [Go80] <author> M. C. Golumbic, </author> <title> "Algorithmic Graph Theory and Perfect Graphs," </title> <publisher> Academic Press (1980). </publisher>
Reference-contexts: We call G a chordal graph if it has no chordless cycles of length greater than 3. We use two facts about chordal graphs from Golumbic <ref> [Go80] </ref>. First, if G is chordal, then there exists a vertex x such that the neighborhood of x is a clique. Secondly, all induced subgraphs of a chordal graph are chordal. Theorem 4.1 If G is chordal, then AO (G) is hamiltonian. Proof.
Reference: [Gr53] <author> F. Gray, </author> <title> "Pulse code communication," </title> <type> U.S. Patent 2632058 (1953). </type>
Reference-contexts: Section 5 summarizes our work and indicates areas of future research. 2 Two Simple Examples Two of the more basic combinatorial sets are binary strings and permutations. There are well known Gray codes for listing both of these sets. The original binary reflected Gray code <ref> [Gr53] </ref> lists all binary strings of length m such that adjacent strings differ by a single bit. There is a Gray code for permutations [Tr62, Jo63] which lists all permutations of m items such that adjacent permutations differ by a single transposition. <p> As in Section 2, a Gray code for all bit strings of length n 1 gives a hamilton cycle in AO (G 2 ). The binary reflected Gray code <ref> [Gr53] </ref> is defined by: S n = S n1 0; S R n1 1, with S 2 = 0; 1. <p> If n = 1, the proof is trivial. Assume n &gt; 1. If d (x; y) = 1, x and y differ by a single bit. WLOG, we can assume x = 0 n and y = 0 n1 1. The binary reflected Gray code <ref> [Gr53] </ref> provides a sufficient hamilton path. Now, assume that n &gt; 1 and d (x; y) = k &gt; 1. Denote x = x 1 : : : x n and y = y 1 : : : y n .
Reference: [Jo63] <author> S. M. Johnson, </author> <title> "Generation of permutations by adjacent transpositions," </title> <journal> Math. Comp., </journal> <month> 17 </month> <year> (1963) </year> <month> 282-285. </month>
Reference-contexts: The classic example has the set S being the binary strings of length n and the small amount being the complementation of a single bit. Gray codes exist for a wide variety of combinatorial sets, including permutations <ref> [Tr62, Jo63] </ref>, binary trees [LRR], integer partitions [Sa89, RSW], and linear extensions of some posets [Ru92, PR91]. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph. <p> There are well known Gray codes for listing both of these sets. The original binary reflected Gray code [Gr53] lists all binary strings of length m such that adjacent strings differ by a single bit. There is a Gray code for permutations <ref> [Tr62, Jo63] </ref> which lists all permutations of m items such that adjacent permutations differ by a single transposition. Both of these Gray codes are cyclic in that the first and last elements listed also differ in the prescribed way.
Reference: [Li86] <author> N. Linial, </author> <title> "Hard enumeration problems in geometry and combinatorics," </title> <journal> SIAM Journal on Algebraic and Discrete Methods, </journal> <month> 7(2) </month> <year> (1986) </year> <month> 331-335. </month>
Reference-contexts: When n is even, this quantity is not divisible by four. We can conclude that AO (C n ) is not hamiltonian for even n. Counting the number of acyclic orientations of a graph, however, is not a simple endeavor. Linial <ref> [Li86] </ref> shows that it is a #P-complete problem. For general graphs, computing a (G) modulo 4 does not appear any easier. But for some classes of graphs which have a well defined structure, we can use the following idea of Stanley [St73] to determine a (G).
Reference: [LRR] <author> J. M. Lucas, D. Roelants van Baronaigien, and F. Ruskey, </author> <title> "On Rotations and the generation of binary trees," </title> <type> preprint. </type>
Reference-contexts: The classic example has the set S being the binary strings of length n and the small amount being the complementation of a single bit. Gray codes exist for a wide variety of combinatorial sets, including permutations [Tr62, Jo63], binary trees <ref> [LRR] </ref>, integer partitions [Sa89, RSW], and linear extensions of some posets [Ru92, PR91]. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph.
Reference: [Pr86] <author> O. Pretzel, </author> <title> "On reorienting graphs by pushing down maximal vertices," Order, </title> <month> 3 </month> <year> (1986) </year> <month> 135-153. </month>
Reference-contexts: The wheel graph, W n , is formed from C n by adding a new vertex adjacent to all the others. Others have previously studied similar structures based on different types of orientations of graphs. Given G, Pretzel <ref> [Pr86] </ref> created a graph PD (G), where the vertices of PD (G) are the acyclic orientations of G and (ff; fi) 2 E (PD (G)) if we can get fi from ff by reversing all edges from a source vertex (a vertex of indegree 0).
Reference: [PR91] <author> G. Pruesse and F. Ruskey, </author> <title> "Generating linear extensions fast," </title> <type> Technical Report DCS-159-IR, </type> <institution> Department of Computer Science, University of Victoria (1991). </institution>
Reference-contexts: Gray codes exist for a wide variety of combinatorial sets, including permutations [Tr62, Jo63], binary trees [LRR], integer partitions [Sa89, RSW], and linear extensions of some posets <ref> [Ru92, PR91] </ref>. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph. <p> We have yet to discover a hamilton path or cycle in AO (K m;n ) when m and n are both odd, m; n &gt; 1. Although the linear extension problem did sometimes have a parity problem, Pruesse and Ruskey <ref> [PR91] </ref> were able to construct a less restrictive Gray code. Instead of requiring that successive elements differ by a single edge in the linear extension graph, successive elements were allowed to differ by a path of length less than or equal to two. <p> If we relax the adjacency criterion and define two acyclic orientations to be adjacent if they differ by one or two edge reversals, we are able to construct a Gray code for listing the acyclic orientations of any graph [Sq]. Pruesse and Ruskey <ref> [PR91] </ref> were able to implement their construction efficiently, giving the first algorithm for listing linear extensions in constant average time per extension. We are investigating ways of implementing our relaxed Gray code for acyclic orientations in the hope of obtaining an efficient algorithm for listing acyclic orientations.
Reference: [RSW] <author> D. J. Rasmussen, C. D. Savage, and D. B. West, </author> <title> "Gray code enumeration of families of integer partitions," </title> <note> submitted. </note>
Reference-contexts: The classic example has the set S being the binary strings of length n and the small amount being the complementation of a single bit. Gray codes exist for a wide variety of combinatorial sets, including permutations [Tr62, Jo63], binary trees [LRR], integer partitions <ref> [Sa89, RSW] </ref>, and linear extensions of some posets [Ru92, PR91]. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph.
Reference: [Ru92] <author> F. Ruskey, </author> <title> "Generating linear extensions of posets by transpositions," </title> <journal> Journal of Combinatorial Theory B, </journal> <month> 54 </month> <year> (1992) </year> <month> 77-101. </month>
Reference-contexts: Gray codes exist for a wide variety of combinatorial sets, including permutations [Tr62, Jo63], binary trees [LRR], integer partitions [Sa89, RSW], and linear extensions of some posets <ref> [Ru92, PR91] </ref>. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph. <p> In most of these cases, when we look at the same class of graphs when they do not have a parity problem, we have been able to construct a Gray code for the acyclic orientations. A similar phenomenon occurs in Gray codes for linear extensions of posets. Ruskey <ref> [Ru92] </ref> conjectures that when there is no parity conflict in the linear extension problem, a Gray code always exists. We can make a similar conjecture about a Gray code for acyclic orientations.
Reference: [Sa89] <author> C. D. Savage, </author> <title> "Gray code sequences of partitions," </title> <note> Journal of Algorithms 10(4) (1989) 1989. </note>
Reference-contexts: The classic example has the set S being the binary strings of length n and the small amount being the complementation of a single bit. Gray codes exist for a wide variety of combinatorial sets, including permutations [Tr62, Jo63], binary trees [LRR], integer partitions <ref> [Sa89, RSW] </ref>, and linear extensions of some posets [Ru92, PR91]. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph.
Reference: [Sq] <author> M. B. Squire, </author> <title> "Efficient listing of acyclic orientations," </title> <note> in preparation. </note>
Reference-contexts: If we relax the adjacency criterion and define two acyclic orientations to be adjacent if they differ by one or two edge reversals, we are able to construct a Gray code for listing the acyclic orientations of any graph <ref> [Sq] </ref>. Pruesse and Ruskey [PR91] were able to implement their construction efficiently, giving the first algorithm for listing linear extensions in constant average time per extension. We are investigating ways of implementing our relaxed Gray code for acyclic orientations in the hope of obtaining an efficient algorithm for listing acyclic orientations.
Reference: [St73] <author> R. Stanley, </author> <title> "Acyclic orientations of graphs," </title> <note> Discrete Mathematics 5 (1973) 171-178. </note>
Reference-contexts: Linial [Li86] shows that it is a #P-complete problem. For general graphs, computing a (G) modulo 4 does not appear any easier. But for some classes of graphs which have a well defined structure, we can use the following idea of Stanley <ref> [St73] </ref> to determine a (G). <p> We let G e denote the graph G minus the edge e, and G e denote the graph G contracted on the edge e. Lemma 3.2 (Stanley <ref> [St73] </ref>) Let G be a graph. Then a (G) = a (G e) + a (G e): This lemma enables us to show that certain wheel graphs and certain ladder graphs have ao-graphs which are not hamiltonian. Theorem 3.1 For even n, AO (W n ) is not hamiltonian. Proof.
Reference: [SW86] <author> D. Stanton and D. White, </author> <title> "Constructive Combinatorics," </title> <publisher> Springer-Verlag (1986). </publisher>
Reference-contexts: We demonstrate by determining sufficient conditions to prevent AO (K m;n ) from being hamiltonian. Let S (n; k) denote the Stirling numbers of the second kind <ref> [SW86] </ref>. S (n; k) counts the number of set partitions of an n-set into k blocks. Note that for n &gt; 1, S (n; 1) = 1 and S (n; 2) = 2 n1 1.
Reference: [Tr62] <author> H. F. Trotter, </author> <title> "PERM (Algorithm 115)," </title> <journal> Communications of the ACM, </journal> <month> 8 </month> <year> (1962) </year> <month> 434-435. </month>
Reference-contexts: The classic example has the set S being the binary strings of length n and the small amount being the complementation of a single bit. Gray codes exist for a wide variety of combinatorial sets, including permutations <ref> [Tr62, Jo63] </ref>, binary trees [LRR], integer partitions [Sa89, RSW], and linear extensions of some posets [Ru92, PR91]. In this paper, we study Gray codes for acyclic orientations of graphs. Let G = (V (G); E (G)) be an undirected graph. <p> There are well known Gray codes for listing both of these sets. The original binary reflected Gray code [Gr53] lists all binary strings of length m such that adjacent strings differ by a single bit. There is a Gray code for permutations <ref> [Tr62, Jo63] </ref> which lists all permutations of m items such that adjacent permutations differ by a single transposition. Both of these Gray codes are cyclic in that the first and last elements listed also differ in the prescribed way.
References-found: 16

