URL: http://www.bell-labs.com/~yash/euro98.ps.Z
Refering-URL: http://www.bell-labs.com/~yash/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: beaver@transarc.com  yash@research.bell-labs.com  
Title: Quorum-based Secure Multi-Party Computation  
Author: Donald Beaver and Avishai Wool IBM/Transarc; 
Note: 2 Bell Laboratories, Lucent Technologies;  
Abstract: This paper describes efficient protocols for multi-party computations that are information-theoretically secure against passive attacks. The results presented here apply to access structures based on quorum systems, which are collections of sets enjoying a naturally-motivated self-intersection property. Quorum-based access structures include threshold systems but are far richer and more general, and they have specific applicability to several problems in distributed control and management. The achievable limits of security in quorum-based multi-party computation are shown to be equivalent to those determined by Hirt and Maurer in [HM97], drawing a natural but non-obvious connection between quorum systems and the extremes of secure multi-party computation. Moreover, for both the general case and for specific appli cations, the protocols presented here are simpler and more efficient.
Abstract-found: 1
Intro-found: 1
Reference: [AE91] <author> D. Agrawal and A. El-Abbadi. </author> <title> An efficient and fault-tolerant solution for distributed mutual exclusion. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 9(1) </volume> <pages> 1-20, </pages> <year> 1991. </year>
Reference-contexts: The quorum systems we consider are the crumbling wall quorum systems of [PW97], the finite projective plane (FPP) quorum system of [Mae85], and the 2-of-3 majority-tree systems of <ref> [AE91] </ref> and [Kum91]. The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. Thus to our knowledge they are the first non-threshold protocols which are as efficient as the original protocol of [BGW88, CCD88]. <p> We omit the details in this abstract. 4.3 Hierarchical quorum protocols In the hierarchical quorum system (HQS), due to [Kum91], the individuals are the leaves of a complete ternary tree in which internal nodes are 2-of-3 majority gates. The related Tree quorum system <ref> [AE91] </ref> employs full ternary trees, but the center child of each tree is a leaf. The HQS and Tree systems enjoy high availability and low load.
Reference: [Bea91a] <author> D. Beaver. </author> <title> Foundations of secure interactive computing. </title> <booktitle> In Advances in Cryptology - CRYPTO'91, </booktitle> <volume> LNCS 576, </volume> <pages> pages 377-391. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: for every possible collection of shares fs i g i2B : Pr (fs i g i2B ja) = Pr (fs i g i2B jb) ; where the probability is taken over the ran dom string r. 2.3 Multi-party computation The following formalizations are standard and based on commonly accepted approaches <ref> [GMR89, BGW88, CCD88, Bea91a, MR91] </ref>. Let C be a circuit over logical (or finite arithmetical) gates, having n inputs and one output, 4 and let f (x 1 ; : : : ; x n ) be the function it computes.
Reference: [Bea91b] <author> D. Beaver. </author> <title> Secure multiparty protocols and zero-knowledge proof systems tolerating a faulty minority. </title> <journal> J. Cryptology, </journal> <volume> 4(2) </volume> <pages> 75-122, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> In particular, an honest majority is necessary and sufficient for verifiable sharing and multi-party computation <ref> [RB89, Bea91b] </ref> for threshold-based protocols. Conversely, as long as no dishonest coalition exceeds the threshold of size b n1 2 c, secure multi-party computation is achievable. This characterization of tolerable adversaries is natural, elegant, and seemingly all that needs be said. Weighted Threshold Schemes.
Reference: [BG89] <author> D. Beaver and S. Goldwasser. </author> <title> Multiparty computation with faulty majority. </title> <booktitle> In Proc. 30th IEEE Symp. Foundations of Comp. Sci. (FOCS), </booktitle> <pages> pages 468-473, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> The following lemma has been proved in several places <ref> [BGW88, BG89, CK91] </ref> and follows from a direct reduction to two-party protocols. Lemma 1. A set system B is said to 2-cover the universe U if two sets B 1 ; B 2 2 B exist such that B 1 [ B 2 = U .
Reference: [BH92] <author> D. Beaver and S. Haber. </author> <title> Cryptographic protocols provably secure against dynamic adversaries. </title> <booktitle> In Advances in Cryptology - EUROCRYPT'92, </booktitle> <volume> LNCS 658, </volume> <pages> pages 307-323. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97].
Reference: [BGW88] <author> M. Ben-Or, S. Goldwasser, and A. Wigderson. </author> <title> Completeness theorems for non-cryptographic fault-tolerant distributed computation. </title> <booktitle> In Proc. 20th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 1-10, </pages> <address> Chicago, Illinois, </address> <month> 2-4 May </month> <year> 1988. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> The following lemma has been proved in several places <ref> [BGW88, BG89, CK91] </ref> and follows from a direct reduction to two-party protocols. Lemma 1. A set system B is said to 2-cover the universe U if two sets B 1 ; B 2 2 B exist such that B 1 [ B 2 = U . <p> Their protocol involves a recursive decomposition of the bad collection B into 3 sub-collections, and simulating the 2-of-3 threshold-based protocol of <ref> [BGW88] </ref> at each level of the recursion. Thus they proved the following characterization. Theorem 2. [HM97] A multi-party protocol that tolerates B exists iff U is not 2-covered by B. The connection between this characterization and our work is captured by the following observation. Lemma 3. <p> The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. Thus to our knowledge they are the first non-threshold protocols which are as efficient as the original protocol of <ref> [BGW88, CCD88] </ref>. For the crumbling walls and tree-based systems we use the secret sharing schemes proposed in [NW96]. In the former scheme the shares are twice the size of the secrets, while the latter is optimal (i.e., the size of the shares equals the size of the secret). <p> for every possible collection of shares fs i g i2B : Pr (fs i g i2B ja) = Pr (fs i g i2B jb) ; where the probability is taken over the ran dom string r. 2.3 Multi-party computation The following formalizations are standard and based on commonly accepted approaches <ref> [GMR89, BGW88, CCD88, Bea91a, MR91] </ref>. Let C be a circuit over logical (or finite arithmetical) gates, having n inputs and one output, 4 and let f (x 1 ; : : : ; x n ) be the function it computes. <p> The preceding commentary is easily generalized to families of functions. A finite set of protocols is complete for some function family if it enables sharing and reconstruction, and through finite composition can evaluate any finite circuit securely. Our approach is standard <ref> [GMW86, BGW88, CCD88] </ref>: to provide efficient protocols for sharing, reconstruction, addition (linear combination), and multiplication. 3 A general protocol In this section we present a general multi-party protocol which is Q-private for any quorum system Q. <p> To perform a linear combination (z = ffx + fiy), players simply perform the operation locally: z [p] ffx [p] + fiy [p]. Although intuitively obvious, a recursive construction for multiplication using <ref> [BGW88, CCD88] </ref> requires some care. In particular, the internal nodes are "virtual," namely represented by sets of players; thus otherwise obvious steps such as "p sends m to q" are ill-defined when p and q are not leaf nodes. The steps needed to apply [BGW88, CCD88] include linear combination and multiplication <p> a recursive construction for multiplication using <ref> [BGW88, CCD88] </ref> requires some care. In particular, the internal nodes are "virtual," namely represented by sets of players; thus otherwise obvious steps such as "p sends m to q" are ill-defined when p and q are not leaf nodes. The steps needed to apply [BGW88, CCD88] include linear combination and multiplication of local values, and sending messages. (Sharing, reconstruction, selecting random values, and degree reduction can be built with these primitives.) It remains to be seen, therefore, how messages are sent from p to q. There are four cases. <p> If p and q are internal, then p:i recursively "sends" its share of m to q:i (for i = 1; 2; 3). The communication cost of the overall construction is O (n 2 ) per gate. Because <ref> [BGW88, CCD88] </ref> can be executed with one multiplication per virtual player, the primary concern is to measure the cost of "sending" messages. Straightforward arguments show that the worst case trees are those that are least balanced (e.g., all the subtrees lie under left children). <p> Remark: This protocol can be seen as a particular instance of the [HM97] construction, if certain unconstrained choices are cleverly made; thus, a security argument can be derived from <ref> [HM97, BGW88, CCD88] </ref>. Note, however, that the constructive argument in [HM97] permits several degrees of freedom, most of which lead to an exponential algorithm for these quorum systems.
Reference: [BKK94] <author> S. Ben-David, M. Karchmer, and E. Kushilevitz. </author> <title> On ultrafilters and NP. </title> <booktitle> In Proceedings of the 9th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 97-105. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: Such systems have attracted attention in several contexts, and much is known about them. The terminology associated with these systems differs from discipline to discipline, and a non-comprehensive list of names includes "non-dominated coterie" [GB85]; "simple decisive game" [Owe82]; "self-dual monotone boolean function" [IK93]; "ultrafilter" <ref> [BKK94] </ref>; and "--critical hypergraph" [Fur88]. 2.2 Secret sharing Definition 7. Let U = f1; : : : ; ng and let S be a finite set of secrets.
Reference: [BL88] <author> J. Benaloh and J. Leichter. </author> <title> Generalized secret sharing and monotone functions. </title> <booktitle> In Advances in Cryptology - CRYPTO'88, </booktitle> <volume> LNCS 403, </volume> <pages> pages 27-36. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Adding Security. Secret sharing schemes for arbitrary access structures have been developed by Ito, Saito, and Nishizeki [ISN87]. Schemes for structures represented by monotone formulas were proposed by Benaloh and Leichter <ref> [BL88] </ref>. More recently, Naor and Wool have designed schemes for structures which represent specific quorum systems [NW96]. The natural question to ask is whether these sharing schemes are usable for multi-party computations as well.
Reference: [Bla79] <author> G. R. Blakely. </author> <title> Safeguarding cryptographic keys. </title> <booktitle> Proc. AFIPS, NCC, </booktitle> <volume> 48 </volume> <pages> 313-317, </pages> <year> 1979. </year>
Reference-contexts: Threshold Schemes. Multi-party protocols are typically based on secret sharing. In the past virtually all of them relied on some form of Shamir's polynomial-based sharing scheme <ref> [Sha79, Bla79] </ref>. Because these sharing schemes are threshold based - i.e., reconstruction of a secret depends on having some minimal number of shares, rather than some particular set of players there is a natural limit on the types of dishonest coalitions that can be tolerated by multi-party computations.
Reference: [CCD88] <author> D. Chaum, C. Crepeau, and I. Damg-ard. </author> <title> Multiparty unconditionally secure protocols. </title> <booktitle> In Proc. 20th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 11-19, </pages> <address> Chicago, Illinois, </address> <month> 2-4 May </month> <year> 1988. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. Thus to our knowledge they are the first non-threshold protocols which are as efficient as the original protocol of <ref> [BGW88, CCD88] </ref>. For the crumbling walls and tree-based systems we use the secret sharing schemes proposed in [NW96]. In the former scheme the shares are twice the size of the secrets, while the latter is optimal (i.e., the size of the shares equals the size of the secret). <p> for every possible collection of shares fs i g i2B : Pr (fs i g i2B ja) = Pr (fs i g i2B jb) ; where the probability is taken over the ran dom string r. 2.3 Multi-party computation The following formalizations are standard and based on commonly accepted approaches <ref> [GMR89, BGW88, CCD88, Bea91a, MR91] </ref>. Let C be a circuit over logical (or finite arithmetical) gates, having n inputs and one output, 4 and let f (x 1 ; : : : ; x n ) be the function it computes. <p> The preceding commentary is easily generalized to families of functions. A finite set of protocols is complete for some function family if it enables sharing and reconstruction, and through finite composition can evaluate any finite circuit securely. Our approach is standard <ref> [GMW86, BGW88, CCD88] </ref>: to provide efficient protocols for sharing, reconstruction, addition (linear combination), and multiplication. 3 A general protocol In this section we present a general multi-party protocol which is Q-private for any quorum system Q. <p> To perform a linear combination (z = ffx + fiy), players simply perform the operation locally: z [p] ffx [p] + fiy [p]. Although intuitively obvious, a recursive construction for multiplication using <ref> [BGW88, CCD88] </ref> requires some care. In particular, the internal nodes are "virtual," namely represented by sets of players; thus otherwise obvious steps such as "p sends m to q" are ill-defined when p and q are not leaf nodes. The steps needed to apply [BGW88, CCD88] include linear combination and multiplication <p> a recursive construction for multiplication using <ref> [BGW88, CCD88] </ref> requires some care. In particular, the internal nodes are "virtual," namely represented by sets of players; thus otherwise obvious steps such as "p sends m to q" are ill-defined when p and q are not leaf nodes. The steps needed to apply [BGW88, CCD88] include linear combination and multiplication of local values, and sending messages. (Sharing, reconstruction, selecting random values, and degree reduction can be built with these primitives.) It remains to be seen, therefore, how messages are sent from p to q. There are four cases. <p> If p and q are internal, then p:i recursively "sends" its share of m to q:i (for i = 1; 2; 3). The communication cost of the overall construction is O (n 2 ) per gate. Because <ref> [BGW88, CCD88] </ref> can be executed with one multiplication per virtual player, the primary concern is to measure the cost of "sending" messages. Straightforward arguments show that the worst case trees are those that are least balanced (e.g., all the subtrees lie under left children). <p> Remark: This protocol can be seen as a particular instance of the [HM97] construction, if certain unconstrained choices are cleverly made; thus, a security argument can be derived from <ref> [HM97, BGW88, CCD88] </ref>. Note, however, that the constructive argument in [HM97] permits several degrees of freedom, most of which lead to an exponential algorithm for these quorum systems.
Reference: [CFGN96] <author> R. Canetti, U. Feige, O. Goldreich, and M. Naor. </author> <title> Adaptively secure mul-tiparty computation. </title> <booktitle> In Proc. 28th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 639-648, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97].
Reference: [CK91] <author> B. Chor and E. Kushilevitz. </author> <title> A zero-one law for Boolean privacy. </title> <journal> SIAM J. Discrete Math., </journal> <volume> 4 </volume> <pages> 36-47, </pages> <year> 1991. </year>
Reference-contexts: The following lemma has been proved in several places <ref> [BGW88, BG89, CK91] </ref> and follows from a direct reduction to two-party protocols. Lemma 1. A set system B is said to 2-cover the universe U if two sets B 1 ; B 2 2 B exist such that B 1 [ B 2 = U .
Reference: [DDFY94] <author> A. De Santis, Y. Desmet, Y. Frankel, and M. Yung. </author> <title> How to share a function securely. </title> <booktitle> In Proc. 26th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 522-533, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97].
Reference: [DGS85] <author> S. B. Davidson, H. Garcia-Molina, and D. Skeen. </author> <title> Consistency in partitioned networks. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(3) </volume> <pages> 341-370, </pages> <year> 1985. </year>
Reference-contexts: Quorum Systems. The approach we take here is motivated by distributed control and management problems such as mutual exclusion (cf. [GB85]), data replication protocols (cf. <ref> [DGS85, Her84] </ref>) and name servers (cf. [MV88]). In these applications certain operations are allowed only if they are authorized by a set of members which is defined to be a quorum. The requirement from the quorum sets is that every two quorums should have at least one member in common.
Reference: [Fur88] <author> Z. Furedi. </author> <title> Matchings and covers in hypergraphs. </title> <booktitle> Graphs and Combinatorics, </booktitle> <volume> 4 </volume> <pages> 115-206, </pages> <year> 1988. </year>
Reference-contexts: Such systems have attracted attention in several contexts, and much is known about them. The terminology associated with these systems differs from discipline to discipline, and a non-comprehensive list of names includes "non-dominated coterie" [GB85]; "simple decisive game" [Owe82]; "self-dual monotone boolean function" [IK93]; "ultrafilter" [BKK94]; and "--critical hypergraph" <ref> [Fur88] </ref>. 2.2 Secret sharing Definition 7. Let U = f1; : : : ; ng and let S be a finite set of secrets.
Reference: [GB85] <author> H. Garcia-Molina and D. Barbara. </author> <title> How to assign votes in a distributed system. </title> <journal> J. ACM, </journal> <volume> 32(4) </volume> <pages> 841-860, </pages> <year> 1985. </year>
Reference-contexts: A disadvantage of such a weighted approach is that the important players have more shares so they need to perform more of the computational work. Quorum Systems. The approach we take here is motivated by distributed control and management problems such as mutual exclusion (cf. <ref> [GB85] </ref>), data replication protocols (cf. [DGS85, Her84]) and name servers (cf. [MV88]). In these applications certain operations are allowed only if they are authorized by a set of members which is defined to be a quorum. <p> Remark: Quorum systems whose access specification is unambiguous have many interesting properties. Such systems have attracted attention in several contexts, and much is known about them. The terminology associated with these systems differs from discipline to discipline, and a non-comprehensive list of names includes "non-dominated coterie" <ref> [GB85] </ref>; "simple decisive game" [Owe82]; "self-dual monotone boolean function" [IK93]; "ultrafilter" [BKK94]; and "--critical hypergraph" [Fur88]. 2.2 Secret sharing Definition 7. Let U = f1; : : : ; ng and let S be a finite set of secrets.
Reference: [GHY88] <author> Z. Galil, S. Haber, and M. Yung. </author> <title> Cryptographic computation: Secure fault-tolerant protocols and the public-key model. </title> <booktitle> In Advances in Cryptology - CRYPTO'87, </booktitle> <volume> LNCS 293, </volume> <pages> pages 135-155. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97].
Reference: [GMR89] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM J. Computing, </journal> <volume> 18(1) </volume> <pages> 186-208, </pages> <year> 1989. </year>
Reference-contexts: for every possible collection of shares fs i g i2B : Pr (fs i g i2B ja) = Pr (fs i g i2B jb) ; where the probability is taken over the ran dom string r. 2.3 Multi-party computation The following formalizations are standard and based on commonly accepted approaches <ref> [GMR89, BGW88, CCD88, Bea91a, MR91] </ref>. Let C be a circuit over logical (or finite arithmetical) gates, having n inputs and one output, 4 and let f (x 1 ; : : : ; x n ) be the function it computes.
Reference: [GMW86] <author> O. Goldreich, S. Micali, and A. Wigderson. </author> <title> Proofs that yield nothing but their validity and a methodology of cryptographic protocol design. </title> <booktitle> In Proc. 27th IEEE Symp. Foundations of Comp. Sci. (FOCS), </booktitle> <pages> pages 174-187. </pages> <publisher> IEEE, </publisher> <year> 1986. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> B 2 B and any x 1 ; : : :; x n , the result-vector produced by S is identically distributed to that obtained by executing the protocol. (The protocol is also said to tolerate each set B 2 B.) Our constructions follow the conventional share-compute-reconstruct paradigm introduced in <ref> [GMW86] </ref>. Thus we have additional properties to seek, including whether particular sets are capable of reconstructing the final result. Definition 9. <p> The preceding commentary is easily generalized to families of functions. A finite set of protocols is complete for some function family if it enables sharing and reconstruction, and through finite composition can evaluate any finite circuit securely. Our approach is standard <ref> [GMW86, BGW88, CCD88] </ref>: to provide efficient protocols for sharing, reconstruction, addition (linear combination), and multiplication. 3 A general protocol In this section we present a general multi-party protocol which is Q-private for any quorum system Q.
Reference: [GMW87] <author> O. Goldreich, S. Micali, and A. Wigderson. </author> <title> How to play any mental game, or a completeness theorem for protocols with honest majority. </title> <booktitle> In Proc. 19th ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 218-229, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97].
Reference: [Her84] <author> M. P. Herlihy. </author> <title> Replication Methods for Abstract Data Types. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, MIT/LCS/TR-319, </institution> <year> 1984. </year>
Reference-contexts: Quorum Systems. The approach we take here is motivated by distributed control and management problems such as mutual exclusion (cf. [GB85]), data replication protocols (cf. <ref> [DGS85, Her84] </ref>) and name servers (cf. [MV88]). In these applications certain operations are allowed only if they are authorized by a set of members which is defined to be a quorum. The requirement from the quorum sets is that every two quorums should have at least one member in common.
Reference: [HM97] <author> M. Hirt and U. Maurer. </author> <title> Complete characterization of adversaries tolerable in secure multi-party computation. </title> <booktitle> In Proc. 16th ACM Symp. Princip. of Dist. Comp. (PODC), </booktitle> <pages> pages 25-34, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets <ref> [HM97] </ref>. Our work explores and expands on a non-threshold-based approach to multi-party computation, investigating quorum-based multi-party protocols and providing more efficient solutions for general and specific cases. Whom to Trust. <p> Their protocol involves a recursive decomposition of the bad collection B into 3 sub-collections, and simulating the 2-of-3 threshold-based protocol of [BGW88] at each level of the recursion. Thus they proved the following characterization. Theorem 2. <ref> [HM97] </ref> A multi-party protocol that tolerates B exists iff U is not 2-covered by B. The connection between this characterization and our work is captured by the following observation. Lemma 3. Let B be a collection of bad coalitions over U . <p> By this we show an alternative proof to the characterization of Hirt and Maurer <ref> [HM97] </ref>. <p> Then protocol Gen-MP sends nmq messages. This and several other propositions are proved in the Appendix. Corollary 16. The communication complexity of protocol Gen-MP is O (n 2 m). Our protocol performs quite favorably in comparison to the general construction of Hirt and Maurer <ref> [HM97] </ref>, whose communication complexity appears to be (m 2:709 ). To see this, observe that [HM97] involves a recursive construction in which a set of players is replaced by three overlapping sets of players, each with size 2=3 of the original. <p> Corollary 16. The communication complexity of protocol Gen-MP is O (n 2 m). Our protocol performs quite favorably in comparison to the general construction of Hirt and Maurer <ref> [HM97] </ref>, whose communication complexity appears to be (m 2:709 ). To see this, observe that [HM97] involves a recursive construction in which a set of players is replaced by three overlapping sets of players, each with size 2=3 of the original. <p> Multiplication requires O (1) simulated messages for any particular troika; thus the net cost of multiplication is O (n 2 ). Remark: This protocol can be seen as a particular instance of the <ref> [HM97] </ref> construction, if certain unconstrained choices are cleverly made; thus, a security argument can be derived from [HM97, BGW88, CCD88]. Note, however, that the constructive argument in [HM97] permits several degrees of freedom, most of which lead to an exponential algorithm for these quorum systems. <p> Remark: This protocol can be seen as a particular instance of the [HM97] construction, if certain unconstrained choices are cleverly made; thus, a security argument can be derived from <ref> [HM97, BGW88, CCD88] </ref>. Note, however, that the constructive argument in [HM97] permits several degrees of freedom, most of which lead to an exponential algorithm for these quorum systems. <p> Remark: This protocol can be seen as a particular instance of the <ref> [HM97] </ref> construction, if certain unconstrained choices are cleverly made; thus, a security argument can be derived from [HM97, BGW88, CCD88]. Note, however, that the constructive argument in [HM97] permits several degrees of freedom, most of which lead to an exponential algorithm for these quorum systems. Acknowledgments We are very grateful to Daniel Bleichenbacher for many highly useful discussions, and for introducing the result of Hirt and Maurer to us.
Reference: [IK93] <author> T. Ibaraki and T. Kameda. </author> <title> A theory of coteries: Mutual exclusion in distributed systems. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 4(7) </volume> <pages> 779-794, </pages> <year> 1993. </year>
Reference-contexts: Such systems have attracted attention in several contexts, and much is known about them. The terminology associated with these systems differs from discipline to discipline, and a non-comprehensive list of names includes "non-dominated coterie" [GB85]; "simple decisive game" [Owe82]; "self-dual monotone boolean function" <ref> [IK93] </ref>; "ultrafilter" [BKK94]; and "--critical hypergraph" [Fur88]. 2.2 Secret sharing Definition 7. Let U = f1; : : : ; ng and let S be a finite set of secrets.
Reference: [ISN87] <author> M. Ito, A. Saito, and T. Nishizeki. </author> <title> Secret sharing schemes realizing general access structure. </title> <booktitle> In Proc. IEEE Global Telecommunication Conf. </booktitle> <volume> (Globecomm 87), </volume> <pages> pages 99-102, </pages> <year> 1987. </year>
Reference-contexts: Adding Security. Secret sharing schemes for arbitrary access structures have been developed by Ito, Saito, and Nishizeki <ref> [ISN87] </ref>. Schemes for structures represented by monotone formulas were proposed by Benaloh and Leichter [BL88]. More recently, Naor and Wool have designed schemes for structures which represent specific quorum systems [NW96]. The natural question to ask is whether these sharing schemes are usable for multi-party computations as well.
Reference: [Kum91] <author> A. Kumar. </author> <title> Hierarchical quorum consensus: A new algorithm for managing replicated data. </title> <journal> IEEE Trans. Comput., </journal> <volume> 40(9) </volume> <pages> 996-1004, </pages> <year> 1991. </year>
Reference-contexts: The quorum systems we consider are the crumbling wall quorum systems of [PW97], the finite projective plane (FPP) quorum system of [Mae85], and the 2-of-3 majority-tree systems of [AE91] and <ref> [Kum91] </ref>. The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. Thus to our knowledge they are the first non-threshold protocols which are as efficient as the original protocol of [BGW88, CCD88]. <p> The price we pay for this extra freedom is that the share held by every player will include an additional correcting term. We omit the details in this abstract. 4.3 Hierarchical quorum protocols In the hierarchical quorum system (HQS), due to <ref> [Kum91] </ref>, the individuals are the leaves of a complete ternary tree in which internal nodes are 2-of-3 majority gates. The related Tree quorum system [AE91] employs full ternary trees, but the center child of each tree is a leaf. The HQS and Tree systems enjoy high availability and low load.
Reference: [Mae85] <author> M. Maekawa. </author> <title> A p n algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 3(2) </volume> <pages> 145-159, </pages> <year> 1985. </year>
Reference-contexts: The quorum systems we consider are the crumbling wall quorum systems of [PW97], the finite projective plane (FPP) quorum system of <ref> [Mae85] </ref>, and the 2-of-3 majority-tree systems of [AE91] and [Kum91]. The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. <p> securely compute shares of z = ffx+fiy (resp., z = x y) Q-privately according to the CW-SSS scheme. 4.2 The finite projective plane protocol In this section we describe an efficient O (n 2 ) protocol for the case where the underlying quorum system is a finite projective plane (FPP) <ref> [Mae85] </ref>. For a prime r let t = r k for some integer k. Then the finite projective plane of order t is a quorum system with n = t 2 +t +1 players and m = t 2 +t +1 quorums of size t + 1.
Reference: [MR91] <author> S. Micali and P. Rogaway. </author> <title> Secure computation. </title> <booktitle> In Advances in Cryptology - CRYPTO'91, </booktitle> <volume> LNCS 576, </volume> <pages> pages 392-404. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: for every possible collection of shares fs i g i2B : Pr (fs i g i2B ja) = Pr (fs i g i2B jb) ; where the probability is taken over the ran dom string r. 2.3 Multi-party computation The following formalizations are standard and based on commonly accepted approaches <ref> [GMR89, BGW88, CCD88, Bea91a, MR91] </ref>. Let C be a circuit over logical (or finite arithmetical) gates, having n inputs and one output, 4 and let f (x 1 ; : : : ; x n ) be the function it computes.
Reference: [MV88] <author> S. J. Mullender and P. M. B. Vitanyi. </author> <title> Distributed match-making. </title> <journal> Algorith-mica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: Quorum Systems. The approach we take here is motivated by distributed control and management problems such as mutual exclusion (cf. [GB85]), data replication protocols (cf. [DGS85, Her84]) and name servers (cf. <ref> [MV88] </ref>). In these applications certain operations are allowed only if they are authorized by a set of members which is defined to be a quorum. The requirement from the quorum sets is that every two quorums should have at least one member in common.
Reference: [NW94] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <booktitle> In Proc. 35th IEEE Symp. Foundations of Comp. Sci. (FOCS), </booktitle> <pages> pages 214-225, </pages> <year> 1994. </year> <note> To appear in SIAM J. Computing 1998. </note>
Reference-contexts: We also describe several multi-party protocols which are based on specific quorum systems. The quorum systems that we consider were devised for various distributed control mechanisms and are shown (in the referenced papers) to have favorable properties such as high availability and low load <ref> [NW94] </ref>. The quorum systems we consider are the crumbling wall quorum systems of [PW97], the finite projective plane (FPP) quorum system of [Mae85], and the 2-of-3 majority-tree systems of [AE91] and [Kum91].
Reference: [NW96] <author> M. Naor and A. Wool. </author> <title> Access control and signatures via quorum secret sharing. </title> <booktitle> In Proc. 3rd ACM Conf. Comp. and Comm. Security, </booktitle> <pages> pages 157-168, </pages> <address> New Delhi, India, </address> <year> 1996. </year> <note> Also available as Theory of Cryptography Library record 96-08, http://theory.lcs.mit.edu/~tcryptol/1996.html. </note>
Reference-contexts: Adding Security. Secret sharing schemes for arbitrary access structures have been developed by Ito, Saito, and Nishizeki [ISN87]. Schemes for structures represented by monotone formulas were proposed by Benaloh and Leichter [BL88]. More recently, Naor and Wool have designed schemes for structures which represent specific quorum systems <ref> [NW96] </ref>. The natural question to ask is whether these sharing schemes are usable for multi-party computations as well. We answer this question in the affirmative, and present several new protocols that use quorum-based secret sharing schemes. <p> Thus to our knowledge they are the first non-threshold protocols which are as efficient as the original protocol of [BGW88, CCD88]. For the crumbling walls and tree-based systems we use the secret sharing schemes proposed in <ref> [NW96] </ref>. In the former scheme the shares are twice the size of the secrets, while the latter is optimal (i.e., the size of the shares equals the size of the secret). <p> The CW-SSS secret sharing scheme Our multi-party protocol is based on the following secret sharing scheme, called CW-SSS, due to <ref> [NW96] </ref>. Consider a wall CW of d rows, with row 1 having width n 1 = 1 and n i 2 for all i 2. The basic secret unit s is a single bit, therefore all the arithmetic in this section is over GF (2). <p> The related Tree quorum system [AE91] employs full ternary trees, but the center child of each tree is a leaf. The HQS and Tree systems enjoy high availability and low load. The HQS-SSS secret sharing scheme A secret sharing scheme for HQS appears in <ref> [NW96] </ref>; here we give only a brief description of the construction, which is essentially recursive Shamir sharing. If p is a node in a ternary tree, let p:1, p:2 and p:3 be its children (if any).
Reference: [Owe82] <author> G. Owen. </author> <title> Game Theory. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1982. </year>
Reference-contexts: Such systems have attracted attention in several contexts, and much is known about them. The terminology associated with these systems differs from discipline to discipline, and a non-comprehensive list of names includes "non-dominated coterie" [GB85]; "simple decisive game" <ref> [Owe82] </ref>; "self-dual monotone boolean function" [IK93]; "ultrafilter" [BKK94]; and "--critical hypergraph" [Fur88]. 2.2 Secret sharing Definition 7. Let U = f1; : : : ; ng and let S be a finite set of secrets.
Reference: [PW97] <author> D. Peleg and A. Wool. Crumbling walls: </author> <title> A class of practical and efficient quorum systems. </title> <journal> Distributed Computing, </journal> <volume> 10(2) </volume> <pages> 87-98, </pages> <year> 1997. </year>
Reference-contexts: The quorum systems that we consider were devised for various distributed control mechanisms and are shown (in the referenced papers) to have favorable properties such as high availability and low load [NW94]. The quorum systems we consider are the crumbling wall quorum systems of <ref> [PW97] </ref>, the finite projective plane (FPP) quorum system of [Mae85], and the 2-of-3 majority-tree systems of [AE91] and [Kum91]. The protocols we provide for these systems are all fully polynomial in n, with a complexity of O (n 2 ) messages per multiplication. <p> Our protocol incurs only a linear factor of m, with a small polynomial term in n. 4 Efficient protocols for particular sharing schemes 4.1 The crumbling wall protocol The Crumbling Walls (CW) are a family of quorum systems due to <ref> [PW97] </ref>. This family includes, among others, the CWlog system (see Figure 1). The players in a wall are logically arranged in rows of varying widths. A quorum in a wall is the union of one full row and a representative from every row below the full row. <p> A quorum in a wall is the union of one full row and a representative from every row below the full row. The best crumbling walls are those in which the top row has width n 1 = 1 and every other row has width n i 2. In <ref> [PW97] </ref> it is shown that such walls are non-dominated coteries, i.e., their quorum access specification is unambiguous (recall Definition 6). Note that many of the quorums in a crumbling wall are small minorities | in the wall depicted in Figure 1 the smallest quorums are of size O (log n).
Reference: [RB89] <author> T. Rabin and M. Ben-Or. </author> <title> Verifiable secret sharing and multiparty protocols with honest majority. </title> <booktitle> In Proc. 21st ACM Symp. Theory of Computing (STOC), </booktitle> <pages> pages 73-85, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction 1.1 Overview Multi-party computation a means for groups to engage in joint computation as though an absolutely trusted third party were available to help them has enjoyed a great deal of attention for several years, with much effort spent on exploring the limits of robustness and efficiency <ref> [GMW86, GMW87, GHY88, BGW88, CCD88, RB89, Bea91b, BG89, BH92, DDFY94, CFGN96] </ref>. Virtually without exception, all solutions have been based on threshold secret sharing, and hence they are themselves threshold-oriented. Recently, Hirt and Maurer characterized tolerable adversary sets in general multi-party computations without restriction to purely threshold-based sets [HM97]. <p> In particular, an honest majority is necessary and sufficient for verifiable sharing and multi-party computation <ref> [RB89, Bea91b] </ref> for threshold-based protocols. Conversely, as long as no dishonest coalition exceeds the threshold of size b n1 2 c, secure multi-party computation is achievable. This characterization of tolerable adversaries is natural, elegant, and seemingly all that needs be said. Weighted Threshold Schemes.
Reference: [Sha79] <author> A. Shamir. </author> <title> How to share a secret. </title> <journal> Comm. ACM, </journal> <volume> 22(11) </volume> <pages> 612-613, </pages> <year> 1979. </year>
Reference-contexts: Threshold Schemes. Multi-party protocols are typically based on secret sharing. In the past virtually all of them relied on some form of Shamir's polynomial-based sharing scheme <ref> [Sha79, Bla79] </ref>. Because these sharing schemes are threshold based - i.e., reconstruction of a secret depends on having some minimal number of shares, rather than some particular set of players there is a natural limit on the types of dishonest coalitions that can be tolerated by multi-party computations.
References-found: 34

