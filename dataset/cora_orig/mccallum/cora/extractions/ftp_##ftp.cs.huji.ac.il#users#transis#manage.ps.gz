URL: ftp://ftp.cs.huji.ac.il/users/transis/manage.ps.gz
Refering-URL: http://www.cs.huji.ac.il/~grishac/grishac.html
Root-URL: http://www.cs.huji.ac.il
Email: yairamir@cs.jhu.edu  
Title: Group Communication as an Infrastructure for Distributed System Management  
Author: Y. Amir D. Breitgand, G. V. Chockler, D. Dolev 
Note: and the NASA Center of Excellence fdavb, grishac, dolevg@cs.huji.ac.il in Space Data and  
Address: Baltimore MD 21218 Jerusalem 91904 Israel  
Affiliation: Department of Computer Science Institute of Computer Science The Johns Hopkins University The Hebrew University of Jerusalem  Information Sciences  
Abstract: This paper proposes the usage of techniques, developed for group communication and database replication, for distributed cluster management. We show how group communication can be exploited to provide three classes of frequently needed operations: simultaneous execution of the same operation in a group of workstations; software installation in multiple workstations; and consistent network table management (improving the consistency of NIS) 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Amir, </author> <year> 1995. </year> <title> The Spread toolkit, </title> <type> Private Communication. </type>
Reference: [2] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Partiotioned Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1995. </year>
Reference-contexts: A message which is received can be a regular message sent by a process, or a membership notification created by Transis regarding a membership change of one of the groups to which this process belongs. Transis service semantics is described in <ref> [2, 9] </ref>. Transis is operational for almost three years now. It is used by students of the Distributed Systems course at The Hebrew University and by the members of The High Availability Lab. Several projects were implemented on top of Transis.
Reference: [3] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A communication sub-system for high availability. </title> <booktitle> In Proceedings of the 22nd Annual International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 76-84, </pages> <month> July </month> <year> 1992. </year> <note> The full version of this paper is available as TR CS91-13, </note> <institution> Dept. of Comp. Sci., the Hebrew University of Jerusalem. </institution>
Reference-contexts: While the concepts developed by Tivoli certainly constitute an integrated and comprehensive distributed system management solution, its infrastructure can be improved. Thanks to the open design of TME, our solutions can be integrated into it and coexist with other approaches. 3 The Transis System Transis <ref> [3] </ref> is a group communication sub-system developed at the Hebrew University of Jerusalem. Transis supports the process group paradigm in which the number of simultaneously opened connections and, hence, limits system scalability. a process can join groups and multicast messages to groups.
Reference: [4] <author> Y. Amir, L. E. Moser, P. M. Melliar-Smith, D. A. Agarwal, and P. Ciarfella. </author> <title> The Totem single-ring ordering and membership protocol. </title> <type> 13(4), </type> <month> November </month> <year> 1995. </year>
Reference-contexts: The bottom layer is Transis, our group communication toolkit, which provides reliable multicast and membership services. The top layer is composed of a management server and a monitor. Although we use Transis as our group communication layers, other existing toolkits such as Totem <ref> [4] </ref>, Ho-rus [13] or Newtop [7] could have been used. The management server provides two classes of services: long-term services and short-term ones. Long-term services provide consistent semantics across partitions and over time.
Reference: [5] <author> N. Amit, D. Ginat, S. Kipnis, and J. Mihaeli. </author> <title> Distributed SMIT: System management tool for large Unix environments. </title> <type> Research report, </type> <institution> IBM Israel Science and Technology, </institution> <year> 1995. </year> <note> In preparation. </note>
Reference-contexts: If the master crashes, NIS cannot continue to operate without a complete reconfiguration. In Section 7 we show how NIS implementation can be substantially improved while preserving all of its appealing features. Distributed SMIT Distributed SMIT <ref> [5] </ref> (DSMIT) presents an integrated tool for heterogeneous system management. DSMIT consists of clients which emit management commands to servers in a unified platform-independent syntactic form. The servers translate the commands into a platform-specific form and perform them in parallel.
Reference: [6] <author> P. A. Bernstein, V. Hadzilacos, and N. Goodman. </author> <title> Concurrency Control and Recovery in Database Systems, chapter 7. </title> <publisher> Addison Wesley, </publisher> <year> 1987. </year>
Reference-contexts: All participants are organized into a tree which is constructed in order to speed-up data distribution and to improve scalability. Tivoli/Admin allows replication of certain configuration data in order to increase availability and performance. Consistency among the different copies is maintained using the two phase commit protocol <ref> [6] </ref>. Two phase commit performs end-to-end acknowledgment between all of the replicas for each update. Therefore, it is resource consuming and achieves limited performance which deteriorates linearly as the number of replicas increases.
Reference: [7] <author> P. Ezhilchelvan, R. Macedo, and S. Shrivastava. Newtop: </author> <title> A fault-tolerant group communication protocol. </title> <booktitle> In Proceedings of the 15th International Conference on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: The bottom layer is Transis, our group communication toolkit, which provides reliable multicast and membership services. The top layer is composed of a management server and a monitor. Although we use Transis as our group communication layers, other existing toolkits such as Totem [4], Ho-rus [13] or Newtop <ref> [7] </ref> could have been used. The management server provides two classes of services: long-term services and short-term ones. Long-term services provide consistent semantics across partitions and over time. They are used for replication of network tables (maps) such as the password database, which are maintained on a secondary storage.
Reference: [8] <author> N. Huleihel. </author> <title> Efficient ordering of messages in wide area networks. </title> <type> Master's thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1996. </year>
Reference: [9] <author> L. E. Moser, Y. Amir, P. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended virtual synchrony. </title> <booktitle> In Proceedings of the 14th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 56-65, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: A message which is received can be a regular message sent by a process, or a membership notification created by Transis regarding a membership change of one of the groups to which this process belongs. Transis service semantics is described in <ref> [2, 9] </ref>. Transis is operational for almost three years now. It is used by students of the Distributed Systems course at The Hebrew University and by the members of The High Availability Lab. Several projects were implemented on top of Transis.
Reference: [10] <author> H. Stern. </author> <title> Managing NFS and NIS, </title> <type> chapter 2, 3, 4. </type> <institution> O'Reilly & Associates Inc, </institution> <note> first edition, </note> <month> June </month> <year> 1991. </year>
Reference-contexts: In addition, Tivoli Management Environment (TME) is discussed as an example of a leading integrated solution for distributed system management. Network Information Service. The Network Information Service (NIS) <ref> [10] </ref> is supplied as a part of the operating system by all major UNIX vendors. In NIS, a collection of network tables (maps) constituting a configuration database, can optionally be replicated among a group of servers.
Reference: [11] <institution> Tivoli Systems Inc. Multiplexed Distribution (MDist), </institution> <month> November </month> <year> 1994. </year> <note> Available via anonymous ftp from ftp.tivoli.com /pub/info. </note>
Reference-contexts: We focus on two components of TME: Tivoli/Admin which deals with system configuration management, and Tivoli/Courier which addresses software distribution. Both Tivoli/Admin and Tivoli/Courier use a communication toolkit, named MDist (multiplexed distribution) <ref> [11] </ref>. MDist is designed to distribute a large amount of data to a predefined set of target machines using point-to-point communication. These targets can be either end-receivers or repeaters, which can in turn become distributors.
Reference: [12] <institution> Tivoli Systems Inc. TME 2.0: Technology Concepts and Facilities, </institution> <year> 1994. </year> <note> Technology white paper discussing Tivoli 2.0 components and capabilities. Available via anonymous ftp from ftp.tivoli.com /pub/info. </note>
Reference-contexts: As group communication technology over WAN matures, the reliability layer implemented in DSMIT will become less-effective. Sections 5, 6 show how a group communication transport layer can be utilized for building effective and reliable solutions for problems DSMIT was designed to tackle. Tivoli Management Environment The Tivoli Management Environment <ref> [12] </ref> (TME) is probably the most comprehensive integrated solution for distributed system management existing today. We focus on two components of TME: Tivoli/Admin which deals with system configuration management, and Tivoli/Courier which addresses software distribution. Both Tivoli/Admin and Tivoli/Courier use a communication toolkit, named MDist (multiplexed distribution) [11].
Reference: [13] <author> R. van Renesse, K. P. Birman, R. Friedman, M. Hayden, and D. Karr. </author> <title> A framework for protocol composition in Horus. </title> <booktitle> In Proceedings of the ACM symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: The bottom layer is Transis, our group communication toolkit, which provides reliable multicast and membership services. The top layer is composed of a management server and a monitor. Although we use Transis as our group communication layers, other existing toolkits such as Totem [4], Ho-rus <ref> [13] </ref> or Newtop [7] could have been used. The management server provides two classes of services: long-term services and short-term ones. Long-term services provide consistent semantics across partitions and over time.
References-found: 13

