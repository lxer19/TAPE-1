URL: http://www.cs.berkeley.edu/~rege/mypapers.ps/theorem_prover.ps
Refering-URL: http://www.cs.berkeley.edu/~rege/
Root-URL: http://www.cs.berkeley.edu
Title: A Complete and Practical Algorithm for Geometric Theorem Proving (Extended Abstract)  
Author: Ashutosh Rege 
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division University of California  
Abstract: This paper describes a complete and practical algorithm for the problem of geometric theorem proving. The algorithm works over algebraically closed fields as well as over the reals and takes care of degenerate cases. Our work is motivated by several recent improvements in algorithms for sign determination and symbolic-numeric computation. Based on these, we provide an algorithm for solving triangular systems efficiently using straight-line program arithmetic. The report concludes with a description of an implementation and provides preliminary benchmarks from the same. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.F. Canny. </author> <title> Computing roadmaps of general semi-algebraic sets. </title> <booktitle> In AAECC-91, 1991. </booktitle> <address> New Orleans. </address>
Reference-contexts: We now solve the following system in the limit as * ! 0 : R 0 = 0 @u 0 = = @u 0 = 0 (2) The algorithm for solving this system is described in <ref> [1] </ref> and it involves computing the u-resultant of the system, arranging it in powers of * and retaining the lowest degree coefficient.
Reference: [2] <author> J.F. Canny. </author> <title> An improved sign determination algorithm. </title> <booktitle> In AAECC-91, 1991. </booktitle> <address> New Orleans. </address>
Reference-contexts: We can now do sign-determination for the system h 1 (s); : : : ; h n (s) at the roots of r (s) = 0 using the algorithm of <ref> [2] </ref>. <p> The signs of these polynomials at the roots of the primitive element polynomial H (t) are exactly the signs of these polynomials at the witness points. We now apply the sign determination algorithm of <ref> [2] </ref> to determine the signs of the leading coefficients of the p i 's at the witness points. Each sign sequence gives us the number of roots in the fiber corresponding to that witness point.
Reference: [3] <author> S.-C. Chou. </author> <title> Proving elementary geometry theorems using Wu's algorithm. In W.W. </title> <editor> Bledsoe and D.W. Loveland, editors, </editor> <title> Theorem Proving : After 25 Years. </title> <publisher> American Mathematical Society, </publisher> <year> 1984. </year>
Reference-contexts: Following Wu's seminal work ([17], [18]), a significant amount of the recent work has focussed on an algebraic approach involving determining the feasibility of systems of polynomial equations <ref> [3] </ref>, [10], [9]. Our work is based on this latter methodology and is motivated by recent improvements in algorithms for symbolic-numeric computation with polynomials [13]. The papers by Wu and others showed how a subclass of geometric theorems can be proved by expressing the hypotheses and conclusions as polynomial equations. <p> The basis of his work was a triangulation procedure which was implicit in the work of Ritt [15], [16] and which was given in detail by Wu. Wu's approach was implemented with various modifications and improvements by Chou in his prover <ref> [3] </ref>, [4].
Reference: [4] <author> S.-C. Chou. </author> <title> Mechanical Geometry Theorem Proving. Mathematics and its applications. </title> <address> D. </address> <publisher> Reidel, Holland, </publisher> <year> 1988. </year>
Reference-contexts: system of hypotheses polynomial equations in triangular form, determine whether the set of their common zeros over the reals is contained in the set of real zeros of the conclusion polynomial. (One can use any standard algorithm for triangulating if the hypotheses are not triangular to begin with, see e.g. <ref> [4] </ref>). The observation here is that, in order to prove a theorem or refute it, one is only interested in the sign (+, or 0) of the conclusion polynomial at the real zeros of the hypotheses polynomials. <p> The paper is organized as follows : Section 2 gives the formulation of the problem of theorem proving we shall use. In section 3 we give an outline of the prover implemented by Chou <ref> [4] </ref>, since we shall use that as a benchmark to compare our prover with. Section 4 gives an overview of our theorem prover. Section 5 sketches the algorithm for solving triangular systems. Sections 6 and 7 discuss theorem proving and refutation over IR and C. <p> Several formulations of these two questions have been proposed [7], [8],[10]. See the book by Chou <ref> [4] </ref> for a discussion of the various formulations and the limitations of each. We will use the formulation used by Chou [4] which seems to be the one that is the most satisfactory : By a geometric statement (S) we shall mean a collection of polynomial equations h 1 (y 1 <p> Several formulations of these two questions have been proposed [7], [8],[10]. See the book by Chou <ref> [4] </ref> for a discussion of the various formulations and the limitations of each. We will use the formulation used by Chou [4] which seems to be the one that is the most satisfactory : By a geometric statement (S) we shall mean a collection of polynomial equations h 1 (y 1 ; : : : ; y m ) = : : : = h n (y 1 ; : : : <p> Else it is not generally true. A geometric statement is generally false if g vanishes on none of the nondegen erate components of V. 3 The Ritt-Wu-Chou Prover In this section, we provide a brief description of the prover implemented by Chou <ref> [4] </ref> based on the work of Ritt and Wu. Among all the approaches that have been used and implemented, Chou's prover seems to be most complete and efficient and we will use this prover as the basis of comparison for our prover. <p> The basis of his work was a triangulation procedure which was implicit in the work of Ritt [15], [16] and which was given in detail by Wu. Wu's approach was implemented with various modifications and improvements by Chou in his prover [3], <ref> [4] </ref>. <p> A simple algorithm for triangulation is the following (see e.g. <ref> [4] </ref>, [5]) : Assume we are given a system of hypotheses poly nomials as before, h 1 (u; x) = = h n (u; x) = 0 In order to transform it into a triangular form, we first eliminate x n from n 1 polynomials to obtain p 1 (u; x <p> If the system is irreducible and prem (g; f 1 ; : : :; f n ) = 0, the following can be shown <ref> [4] </ref> 1. The geometric statement (S) is generally true in all fields 2. <p> The code is written in C. These benchmarks were obtained from a first implementation and we expect to reduce the running time by using various optimizations but the initial benchmarks seem to be rather promising. (The times given for Chou's prover are from <ref> [4] </ref> and were obtained on a Symbolics 3600. The geo-metric statements for these theorems are also from [4].) Geometric Total No. of Chou's This Theorem deg vars Prover Prover Pappus 1 7 1.52s 0.11 Pappus Dual 1 7 1.45s 0.12 AMS-1 1 13 4.05s 0.33s Pascal Conic-1 1 15 14.43s 0.56s <p> from a first implementation and we expect to reduce the running time by using various optimizations but the initial benchmarks seem to be rather promising. (The times given for Chou's prover are from <ref> [4] </ref> and were obtained on a Symbolics 3600. The geo-metric statements for these theorems are also from [4].) Geometric Total No. of Chou's This Theorem deg vars Prover Prover Pappus 1 7 1.52s 0.11 Pappus Dual 1 7 1.45s 0.12 AMS-1 1 13 4.05s 0.33s Pascal Conic-1 1 15 14.43s 0.56s Simson 2 11 - 0.47s Ptolemy 8 6 - 2.9 Steiner 8 17 - 33.0 9 Code
Reference: [5] <author> J. Little D. Cox and D. O'Shea. </author> <title> Ideals, Varieties, and Algorithms. Undergraduate Texts in Mathematics. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: A simple algorithm for triangulation is the following (see e.g. [4], <ref> [5] </ref>) : Assume we are given a system of hypotheses poly nomials as before, h 1 (u; x) = = h n (u; x) = 0 In order to transform it into a triangular form, we first eliminate x n from n 1 polynomials to obtain p 1 (u; x 1 <p> The algorithm eliminates x n by taking pseudo-remainders as required (see <ref> [5] </ref>).
Reference: [6] <author> G. Gallo and B. Mishra. </author> <title> Efficient algorithms and bounds for Wu-Ritt characteristic sets. </title> <editor> In T. Mora and C. Traverso, editors, </editor> <title> Effective Methods in Algebraic Geometry, </title> <booktitle> volume 94 of Progress in Mathematics, </booktitle> <pages> pages 119-142. </pages> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference-contexts: However, it was shown in <ref> [6] </ref> that the degree of the polynomials in a characteristic set for a zero-dimensional ideal I Q [x 1 ; : : : ; x n ] is O (d O (n) ) and the complexity of computing these characteristic sets is O (n 3:376 d O (n 3 ) ).
Reference: [7] <author> H. Gelernter. </author> <title> Realization of a geometry theorem proving machine. In E.A. </title> <editor> Feigenbaum and J.E. Feldman, editors, </editor> <booktitle> Computers and Thought. </booktitle> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1963. </year>
Reference-contexts: 1 Introduction In this paper, we describe a practical algorithm (and its implementation) for automatic geometric theorem proving and related problems. Earlier methods for geometric theorem proving were based on a synthetic geometric reasoning approach using natural deduction, forward and backward chaining and the like <ref> [7] </ref>. Following Wu's seminal work ([17], [18]), a significant amount of the recent work has focussed on an algebraic approach involving determining the feasibility of systems of polynomial equations [3], [10], [9]. <p> Several formulations of these two questions have been proposed <ref> [7] </ref>, [8],[10]. See the book by Chou [4] for a discussion of the various formulations and the limitations of each.
Reference: [8] <author> D. Kapur. </author> <title> Geometry theorem proving using Hilbert's Nullstellensatz. </title> <booktitle> In Symposium on Symbolic and Algebraic Computation, </booktitle> <pages> pages 202-208, </pages> <address> 1986. Waterloo, Ontario. </address>
Reference: [9] <author> D. Kapur. </author> <title> A refutational approach to geometry theorem proving. </title> <editor> In D. Kapur and J.L. Mundy, editors, </editor> <title> Geometric Reasoning. </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: Following Wu's seminal work ([17], [18]), a significant amount of the recent work has focussed on an algebraic approach involving determining the feasibility of systems of polynomial equations [3], [10], <ref> [9] </ref>. Our work is based on this latter methodology and is motivated by recent improvements in algorithms for symbolic-numeric computation with polynomials [13]. The papers by Wu and others showed how a subclass of geometric theorems can be proved by expressing the hypotheses and conclusions as polynomial equations. <p> Other work has focussed on using Grobner bases to determine whether a system of polynomials (obtained from the original polynomials) has a common zero [10], <ref> [9] </ref>. Wu's original method is incomplete in the sense that the feasibility of the conclusions is determined over an algebraically closed field whereas geometric theorems are often assertions about real numbers.
Reference: [10] <author> B. Kutzler and S. Stifter. </author> <title> On the application of Buchberger's algorithm to automated geometry theorem proving. </title> <journal> J. Symbolic Comput., </journal> <volume> 2 </volume> <pages> 409-420, </pages> <year> 1986. </year>
Reference-contexts: Following Wu's seminal work ([17], [18]), a significant amount of the recent work has focussed on an algebraic approach involving determining the feasibility of systems of polynomial equations [3], <ref> [10] </ref>, [9]. Our work is based on this latter methodology and is motivated by recent improvements in algorithms for symbolic-numeric computation with polynomials [13]. The papers by Wu and others showed how a subclass of geometric theorems can be proved by expressing the hypotheses and conclusions as polynomial equations. <p> Other work has focussed on using Grobner bases to determine whether a system of polynomials (obtained from the original polynomials) has a common zero <ref> [10] </ref>, [9]. Wu's original method is incomplete in the sense that the feasibility of the conclusions is determined over an algebraically closed field whereas geometric theorems are often assertions about real numbers.
Reference: [11] <author> A. </author> <title> Rege. A complete and practical algorithm for geometric theorem proving. </title> <institution> Manuscript for journal submission and Tech Report (UC Berkeley), </institution> <year> 1995. </year>
Reference-contexts: We conclude with section 5.3 which gives a complexity analysis of the algorithm. Complete details on the algorithm including implementation issues can be found in the full version of the paper <ref> [11] </ref>. It should be noted that our algorithm for triangular systems is probabilistic this arises from the fact that we use straight-line programs for representing the rational functions which make up the coefficients of the polynomials generated in the algorithm. <p> For sign determination, one uses successive differ entiation and evaluation of SLP's. The details of how this works can be found in the complete version of the paper. 8.2 Some benchmarks The table below gives some benchmarks on some standard problems. A more complete set can be found in <ref> [11] </ref>. All the benchmarks were run on a Sun Sparc 10 machine. The code is written in C.
Reference: [12] <author> A. Rege and J. Canny. </author> <title> Straight-line programs for real field extensions and perturbations. </title> <note> To be submitted to special issue of International Journal of Computational Geometry and Applications, </note> <year> 1995. </year>
Reference-contexts: The algorithm performs all its computations representing the polynomials involved as univariate polynomials in the primary variable with coefficients which are rational functions in the remaining variables. These coefficients are represented by straight-line programs (see 8.1 for a summary of SLP properties; <ref> [12] </ref> discusses issues with SLP computations in greater detail).
Reference: [13] <author> A. Rege and J. Canny. </author> <title> A toolkit for algebra and geometry. </title> <booktitle> Submitted to the International Symposium on Symbolic and Algebraic Computation, </booktitle> <address> Montreal, </address> <year> 1995. </year>
Reference-contexts: Our work is based on this latter methodology and is motivated by recent improvements in algorithms for symbolic-numeric computation with polynomials <ref> [13] </ref>. The papers by Wu and others showed how a subclass of geometric theorems can be proved by expressing the hypotheses and conclusions as polynomial equations. A geometric theorem can then fl E-mail: rege@cs.Berkeley.edu. Fax: +1-510-642-5775. Supported by a David and Lucile Packard Foundation Fellowship and by NSF P.Y.I. <p> We plan on applying the tools and techniques described in this paper to a broader scope of problems including solving systems of polynomial equations, point-location in varieties, existential theory of the reals etc. (See <ref> [13] </ref> for an overview.) Further, one can use these techniques to extend our prover to work with polynomial inequalities and also to solve more general problems in constraint-based reasoning. The paper is organized as follows : Section 2 gives the formulation of the problem of theorem proving we shall use. <p> This algorithm has not been implemented in our prover yet more general algorithms for deter mining whether a semi-algebraic set is not empty will be implemented in our toolkit in the near future <ref> [13] </ref>. 8 Implementation In this section, we briefly describe a first implementation of the above algorithms. Most of the modules are part of a larger project involving the development of a toolkit for solving problems in non-linear algebra. (This toolkit will soon be available in the public domain). <p> 1.52s 0.11 Pappus Dual 1 7 1.45s 0.12 AMS-1 1 13 4.05s 0.33s Pascal Conic-1 1 15 14.43s 0.56s Simson 2 11 - 0.47s Ptolemy 8 6 - 2.9 Steiner 8 17 - 33.0 9 Code Availability and Acknowl edgements The code for the prover and the toolkit described in <ref> [13] </ref> as well as papers on the same can be obtained by anonymous ftp from robotics.eecs.berkeley.edu. See the file pub/rege/README for details. I would like to thank my advisor John Canny for directing me to this problem and for some very useful and insightful discussions regarding this and other topics.
Reference: [14] <author> J. Renegar. </author> <title> On the computational complexity and geometry of the first-order theory of the reals, parts I, II and III. </title> <type> Technical Report 852,855,856, </type> <institution> Cornell University, Operations Research Dept., </institution> <year> 1989. </year>
Reference-contexts: If the roots of p (s) = 0 are ff (i) 2 C, for i = 1; : : : ; n, then ~ (i) = r (ff (i) ) Our algorithm is based on an approach for computing (p; r) for more general systems due to Renegar <ref> [14] </ref>. We use his basic method but take advantage of certain properties of triangular systems.
Reference: [15] <author> J.F. Ritt. </author> <title> Differential Equations from the Algebraic Standpoint. </title> <booktitle> Number 14 in AMS Colloquium publications. </booktitle> <publisher> American Mathematical Society, </publisher> <address> New York, </address> <year> 1932. </year>
Reference-contexts: In 1978, Wu introduced an elegant method for automated theorem proving for algebraic geometry [17]. The basis of his work was a triangulation procedure which was implicit in the work of Ritt <ref> [15] </ref>, [16] and which was given in detail by Wu. Wu's approach was implemented with various modifications and improvements by Chou in his prover [3], [4].
Reference: [16] <author> J.F. Ritt. </author> <title> Differential Algebra. </title> <booktitle> Number 33 in AMS Colloquium publications. </booktitle> <publisher> American Mathematical Society, </publisher> <address> New York, </address> <year> 1950. </year>
Reference-contexts: In 1978, Wu introduced an elegant method for automated theorem proving for algebraic geometry [17]. The basis of his work was a triangulation procedure which was implicit in the work of Ritt [15], <ref> [16] </ref> and which was given in detail by Wu. Wu's approach was implemented with various modifications and improvements by Chou in his prover [3], [4].
Reference: [17] <author> W. Wu. </author> <title> On the decision problem and mechanization of theorem proving in elementary geometry. </title> <journal> Sci. Sinica, </journal> <volume> 21 </volume> <pages> 150-172, </pages> <year> 1978. </year>
Reference-contexts: This section will therefore try to give a basic knowledge of the algorithms and techniques used by Chou's prover so we can better understand its strengths and limitations. In 1978, Wu introduced an elegant method for automated theorem proving for algebraic geometry <ref> [17] </ref>. The basis of his work was a triangulation procedure which was implicit in the work of Ritt [15], [16] and which was given in detail by Wu. Wu's approach was implemented with various modifications and improvements by Chou in his prover [3], [4].
Reference: [18] <author> W. Wu. </author> <title> Some recent advances in mechanical theorem proving of geometries. In W.W. </title> <editor> Bledsoe and D.W. Loveland, editors, </editor> <title> Theorem Proving : After 25 Years. </title> <publisher> American Mathematical Society, </publisher> <year> 1984. </year>
Reference-contexts: Earlier methods for geometric theorem proving were based on a synthetic geometric reasoning approach using natural deduction, forward and backward chaining and the like [7]. Following Wu's seminal work ([17], <ref> [18] </ref>), a significant amount of the recent work has focussed on an algebraic approach involving determining the feasibility of systems of polynomial equations [3], [10], [9]. Our work is based on this latter methodology and is motivated by recent improvements in algorithms for symbolic-numeric computation with polynomials [13].
Reference: [19] <author> R. Zippel. </author> <title> Effective Polynomial Computation. </title> <publisher> Kluwer Academic publishers, </publisher> <address> Massachusetts, </address> <year> 1993. </year>
References-found: 19

