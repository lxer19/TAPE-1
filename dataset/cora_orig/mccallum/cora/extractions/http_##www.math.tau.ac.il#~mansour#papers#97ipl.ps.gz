URL: http://www.math.tau.ac.il/~mansour/papers/97ipl.ps.gz
Refering-URL: 
Root-URL: 
Title: A tight bound for approximating the square root  
Author: Nader H. Bshouty Yishay Mansour Baruch Schieber Prasoon Tiwari 
Abstract: We prove an (log log(1=")) lower bound on the depth of any computation tree and any RAM program with operations f+; ; fl; =; bc ; not; and; or; xorg, unlimited power of answering YES/NO questions, and constants f0; 1g that computes p x to accuracy ", for all x 2 [1; 2]. Since Newton method achieves such an accuracy in O(log log(1=")) depth, our bound is tight.
Abstract-found: 1
Intro-found: 1
Reference: [AHU74] <author> A.V. Aho, J.E. Hopcroft, and J.D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Ma, </address> <year> 1974. </year>
Reference-contexts: 1 Introduction In this paper consider the problem of approximating the square root of a given number up to accuracy ". The models of computation considered in this paper are the computation tree model [Str72, Str83, Ben83], and the Random Access Machine (RAM) model <ref> [Sch79, AHU74] </ref>. It seems that the two computation models are incomparable. On one hand, a computation tree is a non-uniform model of computation, while a RAM is the corresponding uniform model of computation, and hence, weaker in this sense. <p> Therefore, our lower bound is tight. 2 The computation models We assume that the reader is familiar with the computation tree model (see, e.g., [Str83, Ben83]) and the RAM model (see, e.g., <ref> [AHU74, Sch79] </ref>) used in this paper. Below, we briefly recall these models. The computation tree model A computation tree T for a one input problem is a tree with labelled vertices. The label of a vertex is denoted f - . The tree T has four types of vertices: 1.
Reference: [Ben83] <author> M. Ben-Or. </author> <title> Lower bounds for algebraic computation trees. </title> <booktitle> In Proc. of the 15th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 80-86, </pages> <address> Boston, </address> <month> May </month> <year> 1983. </year>
Reference-contexts: 1 Introduction In this paper consider the problem of approximating the square root of a given number up to accuracy ". The models of computation considered in this paper are the computation tree model <ref> [Str72, Str83, Ben83] </ref>, and the Random Access Machine (RAM) model [Sch79, AHU74]. It seems that the two computation models are incomparable. On one hand, a computation tree is a non-uniform model of computation, while a RAM is the corresponding uniform model of computation, and hence, weaker in this sense. <p> Therefore, our lower bound is tight. 2 The computation models We assume that the reader is familiar with the computation tree model (see, e.g., <ref> [Str83, Ben83] </ref>) and the RAM model (see, e.g., [AHU74, Sch79]) used in this paper. Below, we briefly recall these models. The computation tree model A computation tree T for a one input problem is a tree with labelled vertices. The label of a vertex is denoted f - .
Reference: [BMST92] <author> N.H. Bshouty, Y. Mansour, B. Schieber, and P. Tiwari. </author> <title> Fast exponentiation using the truncation operation. </title> <journal> Computational Complexity, </journal> <volume> 2 </volume> <pages> 244-255, </pages> <year> 1992. </year> <month> 4 </month>
Reference-contexts: an O ( p log log (1=")) upper bound for computing p x to accuracy ", for all x 2 [1; 2], using either a computation tree or a RAM with operations f+; ; fl; =; bc ; &lt;g and constants f0; 1; "g as proved in [MST89]. (See also <ref> [BMST92] </ref>.) The worst-case arithmetic complexity of approximating zeros of polynomials in general is also discussed in [Ren87]. fl Department of Computer Science, University of Calgary, Calgary, Alberta, Canada. E-mail: bshouty@cpsc.uclagary.ca y Department of Computer Science, Tel Aviv University, Tel Aviv, Israel 69978. E-mail: mansour@math.tau.ac.il z IBM Research Division, T.J.
Reference: [MST89] <author> Y. Mansour, B. Schieber, and P. Tiwari. </author> <title> The complexity of approximating the square root. </title> <booktitle> In Proc. 30th IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 325-330, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: of the ( p log log (1=")) lower bound on the depth of any computation tree and any RAM program with operations f+; ; fl; =; bc ; &lt;g and constants f0; 1g that computes p x to accuracy ", for all x 2 [1; 2], that is given in <ref> [MST89, MST91] </ref>. <p> be contrasted with an O ( p log log (1=")) upper bound for computing p x to accuracy ", for all x 2 [1; 2], using either a computation tree or a RAM with operations f+; ; fl; =; bc ; &lt;g and constants f0; 1; "g as proved in <ref> [MST89] </ref>. (See also [BMST92].) The worst-case arithmetic complexity of approximating zeros of polynomials in general is also discussed in [Ren87]. fl Department of Computer Science, University of Calgary, Calgary, Alberta, Canada. E-mail: bshouty@cpsc.uclagary.ca y Department of Computer Science, Tel Aviv University, Tel Aviv, Israel 69978.
Reference: [MST91] <author> Y. Mansour, B. Schieber, and P. Tiwari. </author> <title> Lower bounds for computations with the floor operation. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(2) </volume> <pages> 315-327, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: of the ( p log log (1=")) lower bound on the depth of any computation tree and any RAM program with operations f+; ; fl; =; bc ; &lt;g and constants f0; 1g that computes p x to accuracy ", for all x 2 [1; 2], that is given in <ref> [MST89, MST91] </ref>.
Reference: [Ren87] <author> J. Renegar. </author> <title> On the worst-case arithmetic complexity of approximating zeros of polynomials. </title> <journal> Journal of Complexity, </journal> <volume> 3 </volume> <pages> 90-113, </pages> <year> 1987. </year>
Reference-contexts: for all x 2 [1; 2], using either a computation tree or a RAM with operations f+; ; fl; =; bc ; &lt;g and constants f0; 1; "g as proved in [MST89]. (See also [BMST92].) The worst-case arithmetic complexity of approximating zeros of polynomials in general is also discussed in <ref> [Ren87] </ref>. fl Department of Computer Science, University of Calgary, Calgary, Alberta, Canada. E-mail: bshouty@cpsc.uclagary.ca y Department of Computer Science, Tel Aviv University, Tel Aviv, Israel 69978. E-mail: mansour@math.tau.ac.il z IBM Research Division, T.J. Watson Research Center, Yorktown Heights, NY, USA 10598.
Reference: [Sch79] <author> A. Schonhage. </author> <title> On the power of random access machines. </title> <booktitle> In Proc. 6th ICALP, Lect. Notes. in Comp. Sci. </booktitle> <volume> No. 71, </volume> <pages> pages 520-529, </pages> <address> Graz, </address> <month> July </month> <year> 1979. </year>
Reference-contexts: 1 Introduction In this paper consider the problem of approximating the square root of a given number up to accuracy ". The models of computation considered in this paper are the computation tree model [Str72, Str83, Ben83], and the Random Access Machine (RAM) model <ref> [Sch79, AHU74] </ref>. It seems that the two computation models are incomparable. On one hand, a computation tree is a non-uniform model of computation, while a RAM is the corresponding uniform model of computation, and hence, weaker in this sense. <p> Therefore, our lower bound is tight. 2 The computation models We assume that the reader is familiar with the computation tree model (see, e.g., [Str83, Ben83]) and the RAM model (see, e.g., <ref> [AHU74, Sch79] </ref>) used in this paper. Below, we briefly recall these models. The computation tree model A computation tree T for a one input problem is a tree with labelled vertices. The label of a vertex is denoted f - . The tree T has four types of vertices: 1. <p> to some y such that jy p 2 The Random Access Machine (RAM) model A RAM program is a sequence ((1 : fl 1 ); (2 : fl 2 ); : : :; (r : fl r )), where each fl i is either (i) a common instruction defined in <ref> [Sch79] </ref>, or (ii) an instruction which applies an operation from the set of available operations OP to a set of operands, and stores the result in a memory location.
Reference: [Str72] <author> V. Strassen. </author> <title> Berechnung und Programm I. </title> <journal> Acta Informatica, </journal> <volume> 1 </volume> <pages> 320-335, </pages> <year> 1972. </year>
Reference-contexts: 1 Introduction In this paper consider the problem of approximating the square root of a given number up to accuracy ". The models of computation considered in this paper are the computation tree model <ref> [Str72, Str83, Ben83] </ref>, and the Random Access Machine (RAM) model [Sch79, AHU74]. It seems that the two computation models are incomparable. On one hand, a computation tree is a non-uniform model of computation, while a RAM is the corresponding uniform model of computation, and hence, weaker in this sense.
Reference: [Str83] <author> V. Strassen. </author> <title> The computational complexity of continued fractions. </title> <journal> SIAM Journal on Computing, </journal> <volume> 12(1) </volume> <pages> 1-27, </pages> <month> February </month> <year> 1983. </year> <month> 5 </month>
Reference-contexts: 1 Introduction In this paper consider the problem of approximating the square root of a given number up to accuracy ". The models of computation considered in this paper are the computation tree model <ref> [Str72, Str83, Ben83] </ref>, and the Random Access Machine (RAM) model [Sch79, AHU74]. It seems that the two computation models are incomparable. On one hand, a computation tree is a non-uniform model of computation, while a RAM is the corresponding uniform model of computation, and hence, weaker in this sense. <p> Therefore, our lower bound is tight. 2 The computation models We assume that the reader is familiar with the computation tree model (see, e.g., <ref> [Str83, Ben83] </ref>) and the RAM model (see, e.g., [AHU74, Sch79]) used in this paper. Below, we briefly recall these models. The computation tree model A computation tree T for a one input problem is a tree with labelled vertices. The label of a vertex is denoted f - .
References-found: 9

