URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/postscripts/prlb-jver.ps.gz
Refering-URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/papers.html
Root-URL: http://www.research.digital.com
Title: Parallel Randomized Load Balancing  
Author: Micah Adler Soumen Chakrabarti Michael Mitzenmacher Lars Rasmussen 
Abstract: It is well known that after placing n balls independently and uniformly at random into n bins, the fullest bin holds fi(log n= log log n) balls with high probability. More recently, Azar et al. analyzed the following process: randomly choose d bins for each ball, and then place the balls, one by one, into the least full bin from its d choices [2]. They show that after all n balls have been placed, the fullest bin contains only log log n= log d + fi(1) balls with high probability. We explore extensions of this result to parallel and distributed settings. Our results focus on the tradeoff between the amount of communication and the final load. Given r rounds of communication, we provide lower bounds on the maximum load of ( r p log n= log log n) for a wide class of strategies. Our results extend to the case where the number of rounds is allowed to grow with n. We then demonstrate parallelizations of the sequential strategy presented in Azar et al. that achieve loads within a constant factor of the lower bound for two communication rounds and almost match the sequential strategy given log log n= log d + O(d) rounds of communication. We also examine a parallel threshold strategy based on rethrowing balls placed in heavily loaded bins. This strategy achieves loads within a constant factor of the lower bound for a constant number of rounds, and it achieves a final load of at most O(log log n) given (log log n) rounds of communication. The algorithm also works well in asynchronous environments.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Atjai, J. Aspnes, M. Naor, Y. Rabani, L. Schulman, and O. Waarts. </author> <title> Fairness in scheduling. </title> <booktitle> In Proceedings of the Sixth Annual ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 477-485, </pages> <year> 1995. </year>
Reference-contexts: For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [1, 14, 16] </ref>. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. These results on random graphs may be of independent interest. <p> Our analysis together with our simulations suggest that the threshold (T ) algorithm is the best choice when sequentiality cannot be maintained and imbalance smaller than a single random choice is desired. Acknowledgements. We thank Claire Kenyon and Orli Waarts for suggesting the random graph model, pointing us to <ref> [1] </ref>, and several helpful related ideas. We thank Michael Luby and Alistair Sinclair for many comments and suggestions.
Reference: [2] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal. </author> <title> Balanced allocations. </title> <booktitle> In Proceedings of the 26th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 593-602, </pages> <year> 1994. </year>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing <ref> [2, 7, 14] </ref>, PRAM simulation [17, 9, 14, 16, 20] and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. <p> ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation [17, 9, 14, 16, 20] and load balancing <ref> [2, 7] </ref>. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. Supported by a Schlumberger Foundation graduate fellowship. z IBM Almanden Research Center. <p> This work was primarily done while attending U.C. Berkeley, and was supported by the Office of Naval Research and by NSF grant CCR-9505448. -U.C. Berkeley. Supported by a fellowship from U.C. Berkeley. 1 Azar et al. proved an important extension of this result <ref> [2] </ref>. Suppose we place the balls sequentially, one at a time. For each ball, we choose d bins independently and uniformly at random, and place the ball in the least full bin (ties are broken arbitrarily). <p> For each ball, we choose d bins independently and uniformly at random, and place the ball in the least full bin (ties are broken arbitrarily). When all the balls have been placed, the fullest bin contains only log log n log d + O (1) balls with high probability <ref> [2] </ref>. A similar result (in a slightly different model) was also proven in [14]. Unfortunately, this extension requires the resting place of the balls to be determined sequentially. This limits its applicability in parallel and distributed settings, a major drawback when compared to the simple randomized approach. <p> We focus on the tradeoff between the number of communication rounds and the final load one can achieve using simple, randomized strategies. We first show lower bounds that hold for a wide class of load balancing strategies, including natural parallelizations of the method of Azar et al. (Following <ref> [2] </ref>, we shall hereafter refer to their algorithm as greedy.) We demonstrate a parallelization of greedy for two communication rounds that matches the lower bounds to within a constant factor, and we examine alternative parallelizations of greedy that are effective when the number of communication rounds is approximately equal to the <p> The remaining messages can be discarded. 1.2 Summary of our results In Section 2, we provide a lower bound for a general class non-adaptive and symmetric strategies that include parallel variations of greedy <ref> [2] </ref> and threshold methods [14, 16]. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> Mitzenmacher [18, 19] studies load balancing using multiple choices in dynamic settings related to queueing networks. Czumaj and Stemann [8] provide a general framework that extends the model and the results of Azar, Broder, Karlin and Upfal <ref> [2] </ref>; for example, they also consider the average allocation time in a threshold-based scheme similar in spirit to the one we analyze here. Berenbrink, Meyer auf der Heide, and Schroder develop algorithms for dealing with weighted balls [4]. <p> to the exact case, greatly simplifying the analysis. 4 Parallel GREEDY The lower bounds in Section 2 show that if the number of communication rounds and possible destinations for a ball are fixed, the log log n log d + O (1) maximum load bound of for greedy shown in <ref> [2] </ref> no longer applies. We therefore seek ways to parallelize the greedy strategy, with the aim of matching the lower bounds. We first deal with the case of two rounds in Section 4.1, and then consider multiple rounds in Section 4.2. <p> This is difficult to prove, because once heights are updated in this way, the connection between the scanline scheme and the greedy scheme is not readily apparent. We now suggest a modification of the proof of by Azar et. al. (Theorem 4 of <ref> [2] </ref>) to handle the case where there may be ties. The following statement is sufficient: Theorem 18 The maximum load achieved by greedy with ties when n balls are thrown into n bins is at most log log n log d + 2d + O (1) with high probability. <p> In particular, for any fixed d the maximum load is log log n Proof: The proof is almost entirely the same as Theorem 4 of <ref> [2] </ref>; we review the differences here, using their notation. <p> Conditioned on E i we have i+1 i+1 Y t , so P Pr (B (n; p i ) k Pr [E i ] The proof now proceeds along the same lines as that of Theorem 4 of <ref> [2] </ref>. This shows that the maximum load log log n log d + 6d 2 + O (1). <p> For example, it is not clear from the results we have described that greedy performs better than straightforward random selection unless n is exceedingly large! (In fact, for all values of n, the expected maximum load of greedy is less than that of simple random selection; see <ref> [2] </ref> for more details.) Even if one can guarantee better performance, however, a system designer interested in using a load balancing scheme must balance the tradeoff between the maximum load and the complexity of the underlying algorithm. Asymptotic notation proves less helpful than specific numbers in understanding this tradeoff.
Reference: [3] <author> A. D. Barbour, L. Holst, and S. Janson. </author> <title> Poisson Approximation. </title> <publisher> Oxford University Press, </publisher> <year> 1992. </year>
Reference-contexts: We note that the close relationship between these two models has been observed and made use of previously, and tighter bounds on specific problems can often be obtained with more detailed analyses; see, for example <ref> [3, Chapter 6] </ref>,[6], or [13]. Apart from enabling us to prove our bounds, the tool may be of independent interest. In Section 4 we describe an asynchronous parallelization of greedy for two rounds that matches the lower bound to within a constant factor for any fixed d.
Reference: [4] <editor> P. Berenbrink, F. Meyer auf der Heide, and K. </editor> <title> Schroder. Allocating weighted balls in parallel. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 302-310, </pages> <year> 1997. </year>
Reference-contexts: Berenbrink, Meyer auf der Heide, and Schroder develop algorithms for dealing with weighted balls <ref> [4] </ref>.
Reference: [5] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: We show that X &gt; 0 with at least constant probability by determining the expectation and variance of X and applying the simple bound (from <ref> [5] </ref>, equation (3) of I.1): Pr (X = 0) 1 E [X 2 ] We first compute E [X].
Reference: [6] <author> A. Broder, A. Frieze, and E. Upfal. </author> <title> On the satisfiability and maximum satisfiability of random 3-CNF formulas. </title> <booktitle> In Proceedings of the 4th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 322-330, </pages> <year> 1993. </year>
Reference: [7] <author> A. Broder and A. Karlin. </author> <title> Multi-level adaptive hashing. </title> <booktitle> In Proceedings of the 1st ACM/SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1990. </year> <month> 28 </month>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing <ref> [2, 7, 14] </ref>, PRAM simulation [17, 9, 14, 16, 20] and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. <p> ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation [17, 9, 14, 16, 20] and load balancing <ref> [2, 7] </ref>. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. Supported by a Schlumberger Foundation graduate fellowship. z IBM Almanden Research Center. <p> In Section 5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [7, 14, 16] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r; that is, the final load is O i q log log n with high probability. <p> Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm [21]. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 22 5 The threshold strategy We now examine another strategy, previously exploited in <ref> [7] </ref> and [14] in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown in the next round.
Reference: [8] <author> A. Czumaj and V. Stemann. </author> <title> Randomized allocation processes. </title> <booktitle> In Proceedings of the Thirty-eighth Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 194-203, </pages> <year> 1997. </year>
Reference-contexts: Mitzenmacher [18, 19] studies load balancing using multiple choices in dynamic settings related to queueing networks. Czumaj and Stemann <ref> [8] </ref> provide a general framework that extends the model and the results of Azar, Broder, Karlin and Upfal [2]; for example, they also consider the average allocation time in a threshold-based scheme similar in spirit to the one we analyze here.
Reference: [9] <editor> M. Dietzfelbinger and F. Meyer auf der Heide. </editor> <title> Simple, efficient shared memory simulations. </title> <booktitle> In Proceedings of the Fifth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 110-119, </pages> <year> 1993. </year>
Reference-contexts: of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation <ref> [17, 9, 14, 16, 20] </ref> and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley.
Reference: [10] <author> G. Gonnet. </author> <title> Expected length of the longest probe sequence in hash code searching. </title> <journal> Journal of the ACM, </journal> <volume> 28(2) </volume> <pages> 289-304, </pages> <month> April </month> <year> 1981. </year>
Reference-contexts: This lower bound is proved by reducing the balls and bins scenario to an edge orientation problem on random graphs. The rest of the paper deals with upper bounds. Our analysis exploits a basic, general tool that we 3 derive, based on results of Gonnet <ref> [10] </ref>, relating the distribution of the number of balls that land in a bin when balls are thrown independently and uniformly at random and the distribution of Poisson random variables. <p> Let Y (m) (m) n be independent Poisson random variables with mean m n . We will omit the superscript when it is clear from the context. We derive a relation between these two sets of random variables, adapting an argument used by Gonnet <ref> [10] </ref> to determine the expected maximum number of balls in a bin. Theorem 12 Let f (x 1 ; : : : ; x n ) be any non-negative function.
Reference: [11] <author> T. Hagerup and C. Rub. </author> <title> A guided tour of Chernoff bounds. </title> <journal> Information Processing Letters, </journal> <volume> 33 </volume> <pages> 305-308, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: If then Pr ( i=1 and similarly, if Pr (Y i = 1 j X 1 ; : : : ; X i1 ) p; then Pr ( i=1 The second lemma presents some useful Chernoff-type bounds that will be used frequently throughout the paper; proofs may be found in <ref> [11] </ref>.
Reference: [12] <author> N. Johnson and S. Kotz. </author> <title> Urn Models and Their Application. </title> <publisher> John Wiley and Sons, </publisher> <year> 1977. </year>
Reference-contexts: probability (by which we shall mean 1 O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature <ref> [12, 15] </ref> with numerous applications in hashing [2, 7, 14], PRAM simulation [17, 9, 14, 16, 20] and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C.
Reference: [13] <author> A. Kamath, R. Motwani, K. Palem, and P. Spirakis. </author> <title> Tail bounds for occupancy and the sat-isfiability threshold conjecture. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: We note that the close relationship between these two models has been observed and made use of previously, and tighter bounds on specific problems can often be obtained with more detailed analyses; see, for example [3, Chapter 6],[6], or <ref> [13] </ref>. Apart from enabling us to prove our bounds, the tool may be of independent interest. In Section 4 we describe an asynchronous parallelization of greedy for two rounds that matches the lower bound to within a constant factor for any fixed d.
Reference: [14] <author> R. M. Karp, M. Luby, and F. Meyer auf der Heide. </author> <title> Efficient PRAM simulation on a distributed memory machine. </title> <booktitle> In Proceedings of the 24th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 318-326, </pages> <year> 1992. </year>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing <ref> [2, 7, 14] </ref>, PRAM simulation [17, 9, 14, 16, 20] and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. <p> of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation <ref> [17, 9, 14, 16, 20] </ref> and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. <p> When all the balls have been placed, the fullest bin contains only log log n log d + O (1) balls with high probability [2]. A similar result (in a slightly different model) was also proven in <ref> [14] </ref>. Unfortunately, this extension requires the resting place of the balls to be determined sequentially. This limits its applicability in parallel and distributed settings, a major drawback when compared to the simple randomized approach. <p> We also examine an idea similar to those used in <ref> [14] </ref> and [16] based on setting a threshold at each bin: balls that attempt to enter a bin that is already above its threshold for that round must be rethrown. This strategy matches the lower bounds up to a constant factor for any constant number of rounds. <p> The remaining messages can be discarded. 1.2 Summary of our results In Section 2, we provide a lower bound for a general class non-adaptive and symmetric strategies that include parallel variations of greedy [2] and threshold methods <ref> [14, 16] </ref>. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> In Section 5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [7, 14, 16] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r; that is, the final load is O i q log log n with high probability. <p> For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [1, 14, 16] </ref>. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. These results on random graphs may be of independent interest. <p> Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm [21]. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 22 5 The threshold strategy We now examine another strategy, previously exploited in [7] and <ref> [14] </ref> in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown in the next round. <p> As an illustrative example, we consider the case where T = 1. We note that more powerful results are given in <ref> [14] </ref> and [16], but the simple proofs below are appealing.
Reference: [15] <author> V. F. Kolchin, B. A. Sevsat'yanov, and V. P. Chistyakov. </author> <title> Random Allocations. </title> <editor> V. H. </editor> <publisher> Winston & Sons, </publisher> <year> 1978. </year>
Reference-contexts: probability (by which we shall mean 1 O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature <ref> [12, 15] </ref> with numerous applications in hashing [2, 7, 14], PRAM simulation [17, 9, 14, 16, 20] and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C.
Reference: [16] <author> P. D. MacKenzie, C. G. Plaxton, and R. Rajaraman. </author> <title> On contention resolution protocols and associated probabilistic phenomena. </title> <institution> Department of Computer Science TR-94-06, University of Texas at Austin, </institution> <month> April </month> <year> 1994. </year> <note> An extended abstract appears in STOC 1994. </note>
Reference-contexts: of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation <ref> [17, 9, 14, 16, 20] </ref> and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley. <p> We also examine an idea similar to those used in [14] and <ref> [16] </ref> based on setting a threshold at each bin: balls that attempt to enter a bin that is already above its threshold for that round must be rethrown. This strategy matches the lower bounds up to a constant factor for any constant number of rounds. <p> The remaining messages can be discarded. 1.2 Summary of our results In Section 2, we provide a lower bound for a general class non-adaptive and symmetric strategies that include parallel variations of greedy [2] and threshold methods <ref> [14, 16] </ref>. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> In Section 5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [7, 14, 16] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r; that is, the final load is O i q log log n with high probability. <p> For our bounds, we will rephrase the balls and bins problem in terms of a random graph orientation problem. The relationship between balls and bins problems and random graphs has been noted previously <ref> [1, 14, 16] </ref>. Here, we show that proving a lower bound for the balls and bins problem is equivalent to showing that, with sufficiently high probability, a specific subgraph appears in a random graph. These results on random graphs may be of independent interest. <p> As an illustrative example, we consider the case where T = 1. We note that more powerful results are given in [14] and <ref> [16] </ref>, but the simple proofs below are appealing. Theorem 21 threshold (1) terminates after at most log log n + O (1) stages with high probability. 24 Proof: As in the proof of Theorem 20, let k i be the number of balls to be thrown after round i.
Reference: [17] <editor> F. Meyer auf der Heide, C. Scheideler, and V. Stemann. </editor> <title> Exploiting storage redundancy to speed up randomized shared memory simulations. </title> <booktitle> In Proceedings of the 12th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 267-278, </pages> <year> 1995. </year>
Reference-contexts: of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation <ref> [17, 9, 14, 16, 20] </ref> and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley.
Reference: [18] <author> M. Mitzenmacher. </author> <title> Density dependent jump Markov processes and applications to load balancing. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Mitzenmacher <ref> [18, 19] </ref> studies load balancing using multiple choices in dynamic settings related to queueing networks.
Reference: [19] <author> M. Mitzenmacher. </author> <title> The Power of Two Choices in Randomized Load Balancing. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: Mitzenmacher <ref> [18, 19] </ref> studies load balancing using multiple choices in dynamic settings related to queueing networks. <p> A second interesting feature of greedy is that the maximum load appears to vary little across trials, suggesting that the maximum load is sharply concentrated on a single value. This can in fact be shown using straightforward martingale arguments. (See, for example, <ref> [19, Section 4.2] </ref>.) As expected, both pgreedy and threshold (T ) perform somewhere between simple random selection and greedy.
Reference: [20] <author> V. Stemann. </author> <title> Contention Resolution Protocols in Hashing Based Shared Memory Simulations. </title> <type> PhD thesis, </type> <institution> University of Paderborn, </institution> <year> 1995. </year>
Reference-contexts: of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [12, 15] with numerous applications in hashing [2, 7, 14], PRAM simulation <ref> [17, 9, 14, 16, 20] </ref> and load balancing [2, 7]. fl A preliminary version of this work appeared in the Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing, May 1995, pp. 238-247. y U.C. Berkeley.
Reference: [21] <author> V. Stemann. </author> <title> Parallel balanced allocations. </title> <booktitle> In Proceedings of the Eighth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 261-269, </pages> <year> 1996. </year> <month> 29 </month>
Reference-contexts: We note that since the writing of this paper a great deal of further work has been done in this area. Stemann <ref> [21] </ref> extends our work by analyzing an algorithm that asymptotically matches our lower bound in the case of n balls and n bins for any r (although his algorithm does not function asynchronously); he also analyzes the case where the number of balls m differs from the number of bins n <p> It is an open question whether one can extend mpgreedy to avoid the need for the partial order on the balls or the synchronous rounds while achieving a similar maximum load. Stemann, using a different algorithm, also achieves a maximum load as good as the mpgreedy algorithm <ref> [21] </ref>. This algorithm is also not completely asynchronous, although it seems to require weaker synchrony than mpgreedy. 22 5 The threshold strategy We now examine another strategy, previously exploited in [7] and [14] in similar contexts, to achieve good load balancing.
References-found: 21

