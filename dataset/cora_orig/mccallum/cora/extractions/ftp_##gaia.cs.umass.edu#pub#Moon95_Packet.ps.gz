URL: ftp://gaia.cs.umass.edu/pub/Moon95:Packet.ps.gz
Refering-URL: http://www-net.cs.umass.edu/papers/papers.html
Root-URL: 
Email: fsbmoon,kurose,towsleyg@cs.umass.edu  
Title: Packet Audio Playout Delay Adjustment: Performance Bounds and Algorithms  
Author: Sue B. Moon, Jim Kurose, and Don Towsley 
Keyword: packetized audio, playout delay, multimedia, packet loss, dynamic programming, computer networks  
Note: This work was supported in part by the National Science Foundation under grants NCR-911618 and NCR-9206908, and the Defense Advanced Research Projects Agency under contract NAG2-578.  
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts at Amherst  
Abstract: In packet audio applications, packets are buffered at a receiving site and their playout delayed in order to compensate for variable network delays. In this paper, we consider the problem of adaptively adjusting the playout delay in order to keep this delay as small as possible, while at the same time avoiding excessive loss due to the arrival of packets at the receiver after their playout time has already passed. The contributions of this paper are twofold. First, given a trace of packet audio receptions at a receiver, we present efficient algorithms for computing a bound on the achievable performance of any playout delay adjustment algorithm. More precisely, we compute upper and lower bounds (which are shown to be tight for the range of loss and delay values of interest) on the optimum (minimum) average playout delay for a given number of packet losses (due to late arrivals) at the receiver for that trace. Second, we present a new adaptive delay adjustment algorithm that tracks the network delay of recently received packets and efficiently maintains delay percentile information. This information, together with a delay spike detection algorithm based on (but extending) our earlier work [RKTS94], is used to dynamically adjust talkspurt playout delay. We show that this algorithm outperforms existing delay adjustment algorithms over a number of measured audio delay traces and performs close to the theoretical optimum over a range of parameter values of interest. 
Abstract-found: 1
Intro-found: 1
Reference: [ACBOS93] <author> Felipe Alvarez-Cuevas, Miquel Bertran, Francesc Oller, and Joseph M. Selga. </author> <title> Voice synchronization in packet switching networks. </title> <journal> IEEE Networks Magazine, </journal> <volume> 7(5):2025, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: In Section 4 we present our new adaptive playout delay adjustment algorithm and examine its performance. Section 5 concludes this paper. 2 Background As discussed above, a receiving site in an audio application typically buffers packets and delays their playout <ref> [ACBOS93, Mon83] </ref> in order to compensate for variable network delays. The playout delay can be constant throughout the entire audio session or can be adaptively adjusted during the session from one talkspurt to the next. <p> In the latter approach, the playout delay varies from packet to packet. A per-packet adaptive adjustment introduces gaps inside talkspurts and is cited as being damaging to the audio quality <ref> [ACBOS93, Coh77] </ref>. Because it is the variable nature of network delays that gives rise to the need for playout delay adjustment algorithms, an understanding of network delays and their effects on packet audio at both the 4 individual packet and talkspurt level is important.
Reference: [Ber87] <author> Dimitri P. Bertsekas. </author> <title> Dynamic Programming: Deterministic and Stochastic Models. </title> <publisher> Prentice-Hall Inc., </publisher> <address> Englewood Cliffs, NJ 07632, </address> <year> 1987. </year>
Reference-contexts: Later we will account for collisions. Our algorithms are based on dynamic programming <ref> [Ber87] </ref>. 13 3.2 Off-line algorithm without collisions Our first algorithm provides a lower bound of the optimum average playout delay for a given loss percentage.
Reference: [Bol93] <author> Jean-Chrystostome Bolot. </author> <title> End-to-end packet delay and loss behavior in the Internet. </title> <booktitle> In Proceedings of ACM SIGCOMM '93, </booktitle> <pages> pages 289298, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: The playout delay can be constant throughout the entire audio session or can be adaptively adjusted during the session from one talkspurt to the next. In the Internet, end-to-end delays fluctuate significantly <ref> [Bol93, SGAJ93] </ref> and a constant, non-adaptive, playout delay would thus likely yield unsatisfactory audio quality for interactive audio applications. There are two approaches for adaptive playout adjustment: per-talkspurt and per-packet adjustment. <p> In Trace 1 of Table 1, there are 23 such conspicuously large spikes; 10 of these are contained in one talkspurt, 9 span two talkspurts, and the remaining 4 span three talkspurts. Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease <p> In Trace 1 of Table 1, there are 23 such conspicuously large spikes; 10 of these are contained in one talkspurt, 9 span two talkspurts, and the remaining 4 span three talkspurts. Previous studies [Bol93, SGAJ93, RKTS94] have indicated the presence of spikes in end-to-end Internet delays. Bolot <ref> [Bol93] </ref> conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease spike after the initial rise, is due to probe compression the accumulation of a <p> Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease spike after the initial rise, is due to probe compression the accumulation of a number of packets from the connection under consideration (the audio session, in our case) in a router queue behind a large
Reference: [CD92] <author> Stephen Casner and Stephen Deering. </author> <title> First IETF Internet Audiocast. </title> <journal> ACM Computer Communication Review, </journal> <pages> pages 9297, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: For example, the audio (and video and whiteboard) segments of many technical conferences and workshops are now carried over the MBone multicast network <ref> [CD92, Jac94, MB94] </ref>. Smaller, more interactive, group meetings are also frequently conducted over the Internet using these multimedia tools.
Reference: [Coh77] <author> Danny Cohen. </author> <title> Issues in transnet packetized voice communication. </title> <booktitle> In Proc. Fifth Data Communications Symposium, pages 6.106.13, </booktitle> <address> Snowbird, UT, </address> <month> September </month> <year> 1977. </year>
Reference-contexts: 1 Introduction In the 20 years that have passed since the early Arpanet experiments with packetized voice <ref> [Coh77] </ref>, packetized audio has blossomed into an application that many Internet users now use regularly. For example, the audio (and video and whiteboard) segments of many technical conferences and workshops are now carried over the MBone multicast network [CD92, Jac94, MB94]. <p> The talkspurt playout delays themselves can be either fixed for the duration of the audio session (an approach examined in <ref> [Mon83, Coh77] </ref>), or adaptively adjusted from one talkspurt to the next, with intervening silence periods artificially elongated or compressed accordingly the approach taken in the NeVoT and vat audio tools. In this paper we focus on this tradeoff between packet playout delay and last packet loss. <p> In the latter approach, the playout delay varies from packet to packet. A per-packet adaptive adjustment introduces gaps inside talkspurts and is cited as being damaging to the audio quality <ref> [ACBOS93, Coh77] </ref>. Because it is the variable nature of network delays that gives rise to the need for playout delay adjustment algorithms, an understanding of network delays and their effects on packet audio at both the 4 individual packet and talkspurt level is important. <p> First, however, we address the question of determining the playout delays incurred under a theoretically optimum playout delay adjustment algorithm. We do this in the following section. 3 Optimum Average Playout Delay 8 In previous works of <ref> [Coh77, Mon83, WF83, RKTS94] </ref>, the tradeoff between the average playout delay and loss due to late packet arrival is used as the performance measure in comparing one adaptive playout delay adjustment algorithm with another a tradeoff which we also use in this paper.
Reference: [ITU93] <institution> Telecommunication Standardization Sector Of ITU. ITU-T Recommendation G.114. </institution> <type> Technical report, </type> <institution> International Telecommunication Union, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: Excessively long playout delays, however, can significantly impair human conversations. There is thus a critical tradeoff between the length of playout delay and the amount of loss (due to late packet arrival) that is incurred. Generally, delays between talkspurt generation and receiver playout of less than 400ms <ref> [ITU93] </ref> and a loss percentage of 2 up to 5% [Jay80] are considered to be quite tolerable in human conversations.
Reference: [Jac94] <author> Van Jacobson. </author> <title> Tutorial notes: Multimedia conferencing on the Internet. </title> <booktitle> In Proceedings of ACM SIGCOMM '94, </booktitle> <address> London, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: For example, the audio (and video and whiteboard) segments of many technical conferences and workshops are now carried over the MBone multicast network <ref> [CD92, Jac94, MB94] </ref>. Smaller, more interactive, group meetings are also frequently conducted over the Internet using these multimedia tools.
Reference: [Jay80] <author> N. S. Jayant. </author> <title> Effects of packet loss on waveform coded speech. </title> <booktitle> In Proc. Fifth Int. Conference on Computer Communications, </booktitle> <pages> pages 275280, </pages> <address> Atlanta, GA, </address> <month> October </month> <year> 1980. </year>
Reference-contexts: There is thus a critical tradeoff between the length of playout delay and the amount of loss (due to late packet arrival) that is incurred. Generally, delays between talkspurt generation and receiver playout of less than 400ms [ITU93] and a loss percentage of 2 up to 5% <ref> [Jay80] </ref> are considered to be quite tolerable in human conversations. <p> Otherwise, curr delay, which is the given percentile point of delay based on previous statistics of packet delays, is used. 4.3 Implementation All of the algorithms are executed every time a packet arrives at the receiver. Since the packetization interval of audio packets varies from 16ms to 32ms <ref> [Jay80] </ref>, the algorithms should be efficient enough to run 30 to 60 times a second and needs to leave enough processing power for other activities. For Algorithm 3, lines 9-22 consist primarily of updating counters and are integer operations.
Reference: [JM] <author> V. Jacobson and S. McCanne. vat. ftp://ftp.ee.lbl.gov/conferencing/vat/. </author> <month> 31 </month>
Reference-contexts: Smaller, more interactive, group meetings are also frequently conducted over the Internet using these multimedia tools. Packet audio tools such as NeVoT [Sch92] and vat <ref> [JM] </ref> operate by periodically gathering audio samples generated at the sending host, packetizing them, and transmitting the resulting packet (via UDP unicast/multicast) to the receiving site (s).
Reference: [KKT96] <author> Sneha Kasera, Jim Kurose, and Don Towsley. </author> <title> Exploring the dynamic behaviour of the internet using ip options. </title> <type> Technical Report 96-12, </type> <institution> Department of Computer ScienceUni-versity of Massachusetts at Amherst, </institution> <address> Amherst, MA 01003, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: We note that probe compression is a plausible conjecture about the cause (s) of delay spikes. Validation of this conjecture would require careful measurements of packet traffic and its delay at the routers where congestion occurs. Our work <ref> [KKT96] </ref> discusses the many difficulties involved in making such measurements without privileged access to the routers.
Reference: [LS83] <author> Lennart Ljung and Torsten S oderstrom. </author> <title> Theory and Practice of Recursive Identification. </title> <publisher> MIT Press, </publisher> <year> 1983. </year>
Reference-contexts: We renumber these as Algorithms 1 and 2 in this paper. These two algorithms are based on stochastic gradient algorithms used in estimation and control theory <ref> [LS83] </ref>, and operate by estimating two statistics characterizing the network delay incurred by audio packets: the delay itself, and a variational measure of the observed delays.
Reference: [MB94] <author> M. Macedonia and D. Brutzman. </author> <title> Mbone provides audio and video across the internet. </title> <journal> IEEE Computer Magazine, </journal> <pages> pages 3035, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: For example, the audio (and video and whiteboard) segments of many technical conferences and workshops are now carried over the MBone multicast network <ref> [CD92, Jac94, MB94] </ref>. Smaller, more interactive, group meetings are also frequently conducted over the Internet using these multimedia tools.
Reference: [Mon83] <author> Warren A. Montgomery. </author> <title> Techniques for packet voice synchronization. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(1):10221028, </volume> <month> December </month> <year> 1983. </year>
Reference-contexts: The talkspurt playout delays themselves can be either fixed for the duration of the audio session (an approach examined in <ref> [Mon83, Coh77] </ref>), or adaptively adjusted from one talkspurt to the next, with intervening silence periods artificially elongated or compressed accordingly the approach taken in the NeVoT and vat audio tools. In this paper we focus on this tradeoff between packet playout delay and last packet loss. <p> In Section 4 we present our new adaptive playout delay adjustment algorithm and examine its performance. Section 5 concludes this paper. 2 Background As discussed above, a receiving site in an audio application typically buffers packets and delays their playout <ref> [ACBOS93, Mon83] </ref> in order to compensate for variable network delays. The playout delay can be constant throughout the entire audio session or can be adaptively adjusted during the session from one talkspurt to the next. <p> While this may result in artificially elongated or compressed silence periods, this is not noticeable in played out speech if the change is reasonably small <ref> [Mon83] </ref>. In the latter approach, the playout delay varies from packet to packet. A per-packet adaptive adjustment introduces gaps inside talkspurts and is cited as being damaging to the audio quality [ACBOS93, Coh77]. <p> First, however, we address the question of determining the playout delays incurred under a theoretically optimum playout delay adjustment algorithm. We do this in the following section. 3 Optimum Average Playout Delay 8 In previous works of <ref> [Coh77, Mon83, WF83, RKTS94] </ref>, the tradeoff between the average playout delay and loss due to late packet arrival is used as the performance measure in comparing one adaptive playout delay adjustment algorithm with another a tradeoff which we also use in this paper.
Reference: [RKTS94] <author> Ramachandran Ramjee, Jim Kurose, Don Towsley, and Henning Schulzrinne. </author> <title> Adaptive playout mechanisms for packetized audio applications in wide-area networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '94, </booktitle> <address> Montreal, Canada, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: Our second significant contribution is the development of a new adaptive delay adjustment algorithm that tracks the network delay of recently received packets and efficiently maintains delay percentile information. This information, together with a delay spike detection algorithm based on (but extending) our earlier work <ref> [RKTS94] </ref>, is used by the new algorithm to dynamically adjust talk-spurt playout delay. We show that this new algorithm generally outperforms existing delay adjustment algorithms over a number of measured audio delay traces and performs close to the theoretical optimum over a range of parameter values of interest. <p> Section 2 provides additional background for our work, including an extended discussion of the observed delay spikes in the packet audio traces reported earlier in <ref> [RKTS94] </ref> as well as in new, more recent experimental traces reported here. In Section 3 we describe the algorithms used to compute bounds on the optimum average playout delay for a given loss. In Section 4 we present our new adaptive playout delay adjustment algorithm and examine its performance. <p> The sending and receiving hosts, the start time and date of the trace, the trace length, and an indication of whether packets were sent as unicast or multicast packets are indicated in Table 1. Traces 4, 5, and 6 are from our earlier work, and are described further in <ref> [RKTS94] </ref>. Traces 1 through 3 are new traces consisting of the transmission of the audio component of a recording with both female and male voices. Figures 1, 2, and 3 are all taken from Trace 1 in Table 1. Delay spikes are evident in Figures 1, 2, and 3. <p> In Trace 1 of Table 1, there are 23 such conspicuously large spikes; 10 of these are contained in one talkspurt, 9 span two talkspurts, and the remaining 4 span three talkspurts. Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease <p> Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease spike after the initial rise, is due to probe compression the accumulation of a number of packets from the connection under consideration (the audio session, in our case) in a router queue behind a large <p> In cases where a delay spike spans multiple talkspurts, however, it is advantageous to quickly react to the delay spike, as discussed in <ref> [RKTS94] </ref>. Note also that the baseline delays fluctuate less compared to spikes and as a result their delay distribution does not change significantly over time. These two observations form the basis for the new delay adaptation algorithm to be presented in Section 4. <p> First, however, we address the question of determining the playout delays incurred under a theoretically optimum playout delay adjustment algorithm. We do this in the following section. 3 Optimum Average Playout Delay 8 In previous works of <ref> [Coh77, Mon83, WF83, RKTS94] </ref>, the tradeoff between the average playout delay and loss due to late packet arrival is used as the performance measure in comparing one adaptive playout delay adjustment algorithm with another a tradeoff which we also use in this paper. <p> In Section 4.3 we look into the implementation issues of the algorithm. In Section 4.4 we compare the new algorithm with others and with the bounds presented in Section 3. 4.1 Motivation Let us first consider the playout delay adjustment algorithms Algorithm 1 and Algorithm 4 from <ref> [RKTS94] </ref>. We renumber these as Algorithms 1 and 2 in this paper. <p> Each of these estimates is recomputed each time a new packet arrives. ff = 0:998002 k = ff^u i1 k k = ff^v i1 fi fi ^u i k fi Algorithms 1 and 2 are in <ref> [RKTS94] </ref>, but are presented here for completeness. Let ^u i k and ^v i an estimate of the packet delay and variational measure of the i-th packet of the k-th talkspurt. <p> In the absence of any specific reference, all figures mentioned in this section are Figures 12 to 17. For Algorithms 1 and 2, instead of using the buffer size as the control parameter to be varied to achieve different loss percentages (as was done in <ref> [RKTS94] </ref>), here we varied fi in Equation (8). The range of values for fi varies from 1 to 20 in our simulations. <p> The range of values for fi varies from 1 to 20 in our simulations. In Figures 12 through 17 a diamond for Algorithm 1 and a plus for Algorithm 2 are used explicitly to mark the fi value of 4, which was used in <ref> [RKTS94] </ref>. For Algorithm 1, we ran a set of simulations to determine the sensitivity of the algorithm to the value of ff. For 0:90 ff 0:999, the algorithm's performance did not change dramatically. For ff &lt; 0:90, however, the performance degraded.
Reference: [SCFJ95] <author> Henning Schulzrinne, Stephen Casner, Ron Frederick, and Van Jacobson. RTP: </author> <title> A transport protocol for real-time applications. </title> <type> Internet draft, </type> <institution> Internet Engineering Task Force, Audio-Video Transport WG, </institution> <year> 1995. </year>
Reference-contexts: NeVoT has a tracing mechanism that can collect timestamps of packets sent and received, RTP sequence numbers <ref> [SCFJ95] </ref>, and vat virtual timestamps of packets. In our experiments and simulations we used vat virtual timestamps Packet audio was encoded in 8KHz PCM mode and the packetization unit time was 20ms.
Reference: [Sch92] <author> Henning Schulzrinne. </author> <title> Voice communication across the Internet: A Network Voice Terminal. </title> <type> Technical report, </type> <institution> Dept. of ECE, Dept. of CS, University of Massachusetts, </institution> <address> Amherst, MA 01003, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: For example, the audio (and video and whiteboard) segments of many technical conferences and workshops are now carried over the MBone multicast network [CD92, Jac94, MB94]. Smaller, more interactive, group meetings are also frequently conducted over the Internet using these multimedia tools. Packet audio tools such as NeVoT <ref> [Sch92] </ref> and vat [JM] operate by periodically gathering audio samples generated at the sending host, packetizing them, and transmitting the resulting packet (via UDP unicast/multicast) to the receiving site (s). <p> A packet is generated every 20ms during a talkspurt, and hence a missing dot at a 20ms interval within a talkspurt indicates a lost packet within the network. 5 The delay traces shown in Figure 1, as well as all other traces reported in this paper, were collected using NeVoT <ref> [Sch92] </ref>, an audio conferencing tool that allows both point-to-point or multicast connections. NeVoT has a tracing mechanism that can collect timestamps of packets sent and received, RTP sequence numbers [SCFJ95], and vat virtual timestamps of packets.
Reference: [SGAJ93] <author> D. Sanghi, O. Gudmundsson, A. Agrawala, and B.N. Jain. </author> <title> Experimental assessment of end-to-end behavior on Internet. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <pages> pages 867874, </pages> <address> San Francisco, CA, </address> <month> April </month> <year> 1993. </year> <month> 32 </month>
Reference-contexts: The playout delay can be constant throughout the entire audio session or can be adaptively adjusted during the session from one talkspurt to the next. In the Internet, end-to-end delays fluctuate significantly <ref> [Bol93, SGAJ93] </ref> and a constant, non-adaptive, playout delay would thus likely yield unsatisfactory audio quality for interactive audio applications. There are two approaches for adaptive playout adjustment: per-talkspurt and per-packet adjustment. <p> In Trace 1 of Table 1, there are 23 such conspicuously large spikes; 10 of these are contained in one talkspurt, 9 span two talkspurts, and the remaining 4 span three talkspurts. Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease <p> Previous studies <ref> [Bol93, SGAJ93, RKTS94] </ref> have indicated the presence of spikes in end-to-end Internet delays. Bolot [Bol93] conjectures that with periodically generated packets (as is the case with our audio packets and as was the case in [Bol93, SGAJ93, RKTS94]), the initial steep rise in the delay spike and the linear, monotonic decrease spike after the initial rise, is due to probe compression the accumulation of a number of packets from the connection under consideration (the audio session, in our case) in a router queue behind a large
Reference: [SPDB95] <author> S. Shenker, C. Partridge, B. Davie, and L. Breslau. </author> <title> Specification of predictive quality of service. </title> <type> INTERNET-DRAFT draft-ietf-intserv-predictive-svc-01, </type> <institution> Internet Engineering Task Force, </institution> <year> 1995. </year>
Reference-contexts: For example, the Integrated Services working group of the IETF has issued Internet Drafts <ref> [Wro95, SPW95, SPDB95] </ref> for predictive and controlled service classes in which adaptive applications may respond to the varying networks delays. In ATM ABR service, the delays seen by an application during a connection may vary as well. 3 The remainder of this paper is structured as follows.
Reference: [SPW95] <author> S. Shenker, C. Partridge, and J. Wroclawski. </author> <title> Specification of controlled delay quality of service. </title> <type> INTERNET-DRAFT draft-ietf-intserv-control-del-svc-02, </type> <institution> Internet Engineering Task Force, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: For example, the Integrated Services working group of the IETF has issued Internet Drafts <ref> [Wro95, SPW95, SPDB95] </ref> for predictive and controlled service classes in which adaptive applications may respond to the varying networks delays. In ATM ABR service, the delays seen by an application during a connection may vary as well. 3 The remainder of this paper is structured as follows.
Reference: [WF83] <author> Clifford Weinstein and James W. Forgie. </author> <title> Experience with speech communication in packet networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(1):963980, </volume> <year> 1983. </year>
Reference-contexts: First, however, we address the question of determining the playout delays incurred under a theoretically optimum playout delay adjustment algorithm. We do this in the following section. 3 Optimum Average Playout Delay 8 In previous works of <ref> [Coh77, Mon83, WF83, RKTS94] </ref>, the tradeoff between the average playout delay and loss due to late packet arrival is used as the performance measure in comparing one adaptive playout delay adjustment algorithm with another a tradeoff which we also use in this paper.
Reference: [Wro95] <author> J. Wroclawski. </author> <title> Specification of the controlled-load network element service. </title> <type> INTERNET-DRAFT draft-ietf-intserv-ctrl-load-svc-01, </type> <institution> Internet Engineering Task Force, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: For example, the Integrated Services working group of the IETF has issued Internet Drafts <ref> [Wro95, SPW95, SPDB95] </ref> for predictive and controlled service classes in which adaptive applications may respond to the varying networks delays. In ATM ABR service, the delays seen by an application during a connection may vary as well. 3 The remainder of this paper is structured as follows.
Reference: [YKT] <author> Maya Yajnik, Jim Kurose, and Don Towsley. </author> <title> Packet loss correlations in the Mbone mul-ticast network: Experimental measurements and markov models. </title> <journal> In preprint. </journal> <volume> 33 34 35 </volume>
Reference-contexts: The network loss percentage between the sender and the receiver is a horrendously high 58%. It also has a long blackout period of almost 2min, when no packets arrived at the sender. This blackout phenomenon on the MBone is reported in <ref> [YKT] </ref>. Trace 3 in Figure 14 was also collected during busy hours, but using unicast connections over the Internet. It suffered a network loss percentage of 17%, which is far lower than that of Trace 2, but still far from the desirable range of 2 to 5%.
References-found: 22

