URL: http://www.cs.cmu.edu/afs/cs/usr/prs/WWW/darwin.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/darwin/index.html
Root-URL: 
Title: A Case for Customizable Resource Management in Networks  
Author: Peter Steenkiste, Allan Fisher, and Hui Zhang 
Keyword: resource management, hierarchical scheduling, active networks, congestion control, virtual networks, application-specific adaptation, network-aware applications.  
Note: This research was supported by the Advanced Research Projects Agency/ITO monitored by SPAWAR Systems Center under contract N66001-96-C-8528.  
Date: May 7, 1998  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: We envision the deployment of an electronic services market that will deliver a wide range of electronic services over networks. This market will allow applications to combine resources at endpoints with resources inside the network to deliver high-quality products to end-users. Electronic services will range from simple data delivery services to sophisticated value-added services such as video conferencing and data mining. We argue that the deployment of such a diverse set of services will be facilitated by the presence of an integrated set of customizable resource management mechanisms. In this paper, we introduce three concepts that respond to this need. First, the resources allocated to an application will be integrated in a virtual network that forms the basis of runtime resource management and quality of service optimization. Second, each resource is managed by a hierarchical resource manager that satisfies the combined priorities and constraints of the services and applications sharing the resource. Finally, since both network conditions and application requirements can change, application-specific adaptation is needed to optimize quality of service at runtime. The CMU Darwin project is developing a comprehensive set of customizable resource management mechanisms based on these concepts. We outline the Darwin resource management mechanisms and we describe an initial implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> ATM Forum Traffic Management Specification Version 4.0, </institution> <month> October </month> <year> 1995. </year> <title> ATM Forum/95-0013R8. </title>
Reference-contexts: Similarly, resources on the network could be packaged into value-added services accessible to end-points. 6 Relationship to Other Research There has recently been a lot of work in defining and implementing support for multiple classes of QoS in networks. This has resulted in specific proposals both for ATM <ref> [1] </ref> and for IP [8]. The IETF proposal, for example, defines a controlled load (weak guarantees) [31] and guaranteed traffic class (strong guarantees) [23] in addition to the traditional best effort class. <p> The adaptation policies used in these applications are ad hoc and application specific. Interpreting implicit feedback from the network is difficult [6], and some recent network control algorithms, such as ATM flow control algorithms <ref> [1, 18] </ref>, provide explicit information to each end-system. There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications.
Reference: [2] <institution> ATM User-Network Interface Specification. </institution> <note> Version 4.0, </note> <year> 1996. </year> <title> ATM Forum document. </title>
Reference-contexts: These protocols typically allow the user to request one of a small number of service types, e.g. establishing a point-to-point connection or adding a receiver to a multicast connection. A recent example is the ATM signaling protocol standardized by the ITU and ATM forum <ref> [2] </ref>. RSVP [34] is an example of a signaling protocol that came out of the data networking community. It establishes multicast flows, which are weaker than connections, and allows the creation of filters that merge the reservations of multiple flows.
Reference: [3] <author> J.C.R. Bennett and H. Zhang. </author> <title> Hierarchical packet fair queueing algorithms. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 5(5):675689, </volume> <month> October </month> <year> 1997. </year> <note> Also in SIGCOMM'96. </note>
Reference-contexts: It addresses the 16 problem of how organizations can share network resources in a preset way, while allowing the flexibility of distributing unused bandwidth to other users. Clearly, the hierarchical scheduling addresses in part the link sharing problem <ref> [3, 25] </ref>. Another active area of research is QoS routing. Given an application request for a connection with a certain QoS properties, QoS routing algorithms try to identify a path that meets the requirements while also optimizing some cost function.
Reference: [4] <author> Michel Berke-laar. </author> <title> lp solve: a Mixed Integer Linear Program solver. ftp://ftp.es.ele.tue.nl/pub/lp solve/, </title> <month> September </month> <year> 1997. </year>
Reference-contexts: For example, it can transparently insert transcoders to deal with mismatches in encoding. These optimizations are possible because brokers receive high-level requests and can use domain knowledge. Xena currently uses an integer linear programming formulation <ref> [4] </ref> for its optimizations. The Beagle signaling protocol is responsible for carrying out the allocation of the chosen resources and for maintaining the state associated with virtual networks. The distinguishing feature of Beagle is that it allocates resources for complete virtual networks, instead of individual flows.
Reference: [5] <author> Jean-Chrysostome Bolot and Andres Vega-Garcia. </author> <title> Control mechanisms for packet audio in the internet. </title> <journal> In IEEE INFOCOM'96, </journal> <volume> volume 1, </volume> <pages> pages 232239, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: TCP interprets dropped packets as a sign of congestion [17]. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools <ref> [15, 16, 13, 5, 28] </ref>. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific.
Reference: [6] <author> Lawrence S. Brakmo, Sean W. O'Malley, and Larry L. Peterson. </author> <title> TCP Vegas: New Techniques for Congestion Detection and Avoidance. </title> <booktitle> In Proceedings of the SIGCOMM '94 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 2435, </pages> <address> University College, London, London, UK, </address> <month> October </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific. Interpreting implicit feedback from the network is difficult <ref> [6] </ref>, and some recent network control algorithms, such as ATM flow control algorithms [1, 18], provide explicit information to each end-system. There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications.
Reference: [7] <author> Prashant Chandra, Allan Fisher, Corey Kosak, and Peter Steenkiste. </author> <title> Network support for application-oriented quality of servic. </title> <booktitle> In Proceedings Sixth IEEE/IFIP International Workshop on Quality of Service, </booktitle> <address> Napa, </address> <month> May </month> <year> 1998. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: Service brokers will often have some knowledge of the application domain so they can perform domain specific optimizations, e.g. select the best video encoding <ref> [7] </ref>. Applications may use their own service brokers to identify necessary resources. Research issues include defining languages to specify application requests, resources, and the implementation of functions in terms of resources, plus algorithms to map requests on resources. <p> The current implementation of Xena recognizes not only generic resource types (e.g. bandwidth, CPU cycles), but also specialized resources related to video streams, e.g. different encodings and transcoder requirements, allowing Xena to make domain-specific optimizations for that class of applications <ref> [7] </ref>. For example, it can transparently insert transcoders to deal with mismatches in encoding. These optimizations are possible because brokers receive high-level requests and can use domain knowledge. Xena currently uses an integer linear programming formulation [4] for its optimizations.
Reference: [8] <author> D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 1426, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: This has resulted in specific proposals both for ATM [1] and for IP <ref> [8] </ref>. The IETF proposal, for example, defines a controlled load (weak guarantees) [31] and guaranteed traffic class (strong guarantees) [23] in addition to the traditional best effort class.
Reference: [9] <author> Eric Crawley, Raj Nair, Bala Rajagopalan, and Hal Sandick. </author> <title> A Framework for QoS-based Routing in the Internet. IETF Internet Draft draft-ietf-qos-framework-04.txt, </title> <month> April </month> <year> 1998. </year> <title> Work in progress. </title>
Reference-contexts: For example, the resource management mechanisms for the Internet defined by the IETF in the last few years rely on QOS routing <ref> [29, 9] </ref> (service brokers), RSVP [34] (signaling similar to Beagle), and local resource managers that set up packet classifiers and schedulers. The more recent proposals for differentiated service [35] require similar entities. The systems differ in the specific responsibilities of the entities differ.
Reference: [10] <author> L. Delgrossi and D. Ferrari. </author> <title> A virtual network service for integrated-services internetworks. </title> <booktitle> In Proceedings of the 7th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 307311, </pages> <address> St. Louis, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: This supports a fast response since the decision is made locally with easy access to relevant information on network conditions 3.3 Virtual Networks The virtual network, sometimes also called a virtual mesh or supranet <ref> [10] </ref>, is the core abstraction for resource management in application-aware networks.
Reference: [11] <author> S. Floyd and V. Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4), </volume> <month> August </month> <year> 1995. </year>
Reference-contexts: While this hierarchical resource management framework is also useful for today's networks, for example, providing hierarchical link sharing service <ref> [11] </ref>, it is much more important in the context of value-added services networks in which resource owners, service providers, and applications will all have their own entity-specific resource management policies. <p> Note that these two research thrusts complement each other: Darwin expects a bearer layer, which is likely to support a small number of simple bearer services. Another related research effort in the IP community is link sharing <ref> [11] </ref>. It addresses the 16 problem of how organizations can share network resources in a preset way, while allowing the flexibility of distributing unused bandwidth to other users. Clearly, the hierarchical scheduling addresses in part the link sharing problem [3, 25]. Another active area of research is QoS routing.
Reference: [12] <author> Sally Floyd and Van Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4):365386, </volume> <month> August </month> <year> 1995. </year> <month> 19 </month>
Reference-contexts: The highest-level services are integrators that primarily bundle lower-level services. Hierarchical services require support for hierarchical resource management. While there has been some work in this area, e.g. research on link-sharing <ref> [12] </ref>, research is needed in mechanisms that support a wide range of sharing policies and large, dynamic hierarchies. 2.3 Non-electronic services The electronic services market we envision has much in common with real-world, non-electronic services markets.
Reference: [13] <author> R. Frederick. </author> <title> Network video (nv), </title> <note> 1993. Software available via ftp://ftp.parc.xerox.com/net-research. </note>
Reference-contexts: TCP interprets dropped packets as a sign of congestion [17]. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools <ref> [15, 16, 13, 5, 28] </ref>. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific.
Reference: [14] <author> M. Grossglauser, S. Keshav, and D. Tse. Rcbr: </author> <title> A simple and efficient service for multiple time-scale traffic. </title> <booktitle> In Proceedings of SIGCOMM'95, </booktitle> <pages> pages 219230, </pages> <address> Boston, MA, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications. Recent work on renegotiated service <ref> [20, 14, 33] </ref> attempts to combine reservation and feedback control algorithms, resulting in the explicit exchange of state information in both directions between applications and the network.
Reference: [15] <author> V. Jacobson and S. McCanne. </author> <title> Visual audio tool (vat), </title> <note> 1993. Software available via ftp://ftp.ee.lbl.gov/conferencing/vat. </note>
Reference-contexts: TCP interprets dropped packets as a sign of congestion [17]. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools <ref> [15, 16, 13, 5, 28] </ref>. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific.
Reference: [16] <author> V. Jacobson and S. McCanne. Vic, </author> <year> 1995. </year> <note> Software available via ftp://ftp.ee.lbl.gov/conferencing/vic. </note>
Reference-contexts: TCP interprets dropped packets as a sign of congestion [17]. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools <ref> [15, 16, 13, 5, 28] </ref>. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific.
Reference: [17] <author> Van Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of the SIGCOMM '88 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 314329. </pages> <publisher> ACM, </publisher> <month> August </month> <year> 1988. </year>
Reference-contexts: A final area of related work is adaptation to network conditions. In the Internet, there is no exchange of congestion information between entities, so end-points have to adapt based on implicit feedback, e.g. TCP interprets dropped packets as a sign of congestion <ref> [17] </ref>. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools [15, 16, 13, 5, 28].
Reference: [18] <author> H.T. Kung and Robert Morris. </author> <title> Credit-based flow control for ATM networks. </title> <journal> IEEE Network Magazine, </journal> <volume> 9(2):4048, </volume> <month> March/April </month> <year> 1995. </year>
Reference-contexts: The adaptation policies used in these applications are ad hoc and application specific. Interpreting implicit feedback from the network is difficult [6], and some recent network control algorithms, such as ATM flow control algorithms <ref> [1, 18] </ref>, provide explicit information to each end-system. There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications.
Reference: [19] <author> A. Lazar, Koon-Seng Lim, and F. Marconcini. </author> <title> Realizing a foundation for programmability of atm networks with the binding architecture. </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> 14(7):12141227, </volume> <month> September </month> <year> 1996. </year>
Reference-contexts: It establishes multicast flows, which are weaker than connections, and allows the creation of filters that merge the reservations of multiple flows. Other efforts have defined and implemented signaling frameworks that give end-points access to the internals of the network <ref> [19] </ref>. Examples of primitive operations are updating a routing table or reserving link resources. These can be combined to set up a connection, i.e. signaling frameworks could be viewed as an assembly language that can be used to implement higher level constructs.
Reference: [20] <author> Kam Lee. </author> <title> Hint-Assisted Traffic Control in Heterogeneous Networks. </title> <type> PhD thesis, </type> <institution> Department of Computer and Electrical Engineering, Carnegie Mellon University, </institution> <month> October </month> <year> 1997. </year>
Reference-contexts: There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications. Recent work on renegotiated service <ref> [20, 14, 33] </ref> attempts to combine reservation and feedback control algorithms, resulting in the explicit exchange of state information in both directions between applications and the network.
Reference: [21] <author> Qingming Ma and Peter Steenkiste. </author> <title> On path selection for traffic with bandwidth guarantees. </title> <booktitle> In Fifth IEEE International Conference on Network Protocols, </booktitle> <pages> pages , Atlanta, </pages> <month> October </month> <year> 1997. </year> <note> IEEE. </note>
Reference-contexts: QoS routing is basically a simple version of the virtual mesh allocation problem in Darwin. Note that QoS routing is in general NP-complete [29], although it has been shown to be tractable for certain types of networks <ref> [22, 21] </ref>. The mesh allocation problem is significantly more complex, so we expect to make use of heuristics that have good properties for the common case. Signaling protocols have been widely studied and deployed.
Reference: [22] <author> Qingming Ma and Peter Steenkiste. </author> <title> Quality of service routing for traffic with performance guarantees. </title> <booktitle> In IFIP International Workshop on Quality of Service, </booktitle> <address> pages , New York, </address> <month> May </month> <year> 1997. </year> <pages> IFIP. </pages>
Reference-contexts: QoS routing is basically a simple version of the virtual mesh allocation problem in Darwin. Note that QoS routing is in general NP-complete [29], although it has been shown to be tractable for certain types of networks <ref> [22, 21] </ref>. The mesh allocation problem is significantly more complex, so we expect to make use of heuristics that have good properties for the common case. Signaling protocols have been widely studied and deployed.
Reference: [23] <author> S. Shenker, C. Partridge, and R. Guerin. </author> <title> Specification of guaranteed quality of service, </title> <month> September </month> <year> 1997. </year> <title> IETF Request for Comments 2212. </title>
Reference-contexts: For example, a provider could offer high quality video conferencing for board-level meetings, and a lower quality version for informal discussions. This requires resource management mechanisms that give different levels (or type, quality, etc.) of service to different users. Recent research efforts on support for integrated services networks <ref> [23, 32, 35] </ref> partially address this issue, although we believe that these low-level mechanisms should be driven by needs of the applications and services that will use them, i.e. in a top-down fashion. <p> This has resulted in specific proposals both for ATM [1] and for IP [8]. The IETF proposal, for example, defines a controlled load (weak guarantees) [31] and guaranteed traffic class (strong guarantees) <ref> [23] </ref> in addition to the traditional best effort class.
Reference: [24] <author> Bruce Siegell and Peter Steenkiste. </author> <title> Automatic selection of load balancing parameters using compile-time and run-time information. </title> <journal> Concurrency Practice and Experience, </journal> <volume> 9(3):275 317, </volume> <year> 1996. </year>
Reference-contexts: One class of examples are Internet-based video and audio tools [15, 16, 13, 5, 28]. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status <ref> [24, ?] </ref>. The adaptation policies used in these applications are ad hoc and application specific. Interpreting implicit feedback from the network is difficult [6], and some recent network control algorithms, such as ATM flow control algorithms [1, 18], provide explicit information to each end-system.
Reference: [25] <author> Ion Stoica, Hui Zhang, and T. S. Eugene Ng. </author> <title> A Hierarchical Fair Service Curve Algorithm for Link-Sharing, Real-Time and Priority Service. </title> <booktitle> In Proceedings of the SIGCOMM '97 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 249262, </pages> <address> Cannes, </address> <month> September </month> <year> 1997. </year> <note> ACM. </note>
Reference-contexts: The systems differ in the specific responsibilities of the entities differ. We briefly elaborate on the Darwin system components and explain how they address the requirements listed in Section 2. The first component is the hierarchical fair service curve (HFSC) scheduler <ref> [25] </ref> that manages link bandwidth and that can implement a broad range of sharing policies, including fair sharing and guaranteed services. <p> It addresses the 16 problem of how organizations can share network resources in a preset way, while allowing the flexibility of distributing unused bandwidth to other users. Clearly, the hierarchical scheduling addresses in part the link sharing problem <ref> [3, 25] </ref>. Another active area of research is QoS routing. Given an application request for a connection with a certain QoS properties, QoS routing algorithms try to identify a path that meets the requirements while also optimizing some cost function.
Reference: [26] <author> Hongsuda Tangmunarunkit. </author> <title> Middleware for network-aware distributed computing applications. </title> <type> Undergraduate thesis, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> May </month> <year> 1997. </year>
Reference: [27] <author> David Tennenhouse and David Wetherall. </author> <title> Towards and active network architecture. </title> <journal> Computer Communication Review, </journal> <volume> 26(2):518, </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: Delegates can be viewed as a focused application of active networking <ref> [27] </ref>. Delegates are logically part of the virtual network and they are established when the virtual network is created. This involves checking the safety properties of the delegates, allocating local resources, and arranging for appropriate access to the switch state and network events. <p> The idea of Active networks has recently attracted a lot of attention. The idea is that instead of having packets be passive entities that are carried around, packets can be active and change the behavior of the network <ref> [27] </ref>. The term active networks refers to a broad range of networks. One extreme is the idea that every packet header is a program that will be executed by the switches.
Reference: [28] <author> Hideyuki Tokuda, Yoshito Tobe, Stephen Chou, and Jose Moura. </author> <title> Continuous Media Communication with Dynamic QOS Control Using ARTS with an FDDI Network. </title> <booktitle> In Proceedings of the SIGCOMM '92 Symposium on Communications Architectures and Protocols, </booktitle> <pages> pages 8898, </pages> <address> Baltimore, </address> <month> August </month> <year> 1992. </year> <note> ACM. </note>
Reference-contexts: TCP interprets dropped packets as a sign of congestion [17]. Recently, several 17 applications have been developed that adapt to the bandwidth and latency variations of the underlying network. One class of examples are Internet-based video and audio tools <ref> [15, 16, 13, 5, 28] </ref>. Another class of examples consists of distributed computations modifying the granularity of the computation in response to network status [24, ?]. The adaptation policies used in these applications are ad hoc and application specific.
Reference: [29] <author> Z. Wang and J. Crowcroft. </author> <title> Quality-of-Service Routing for Supporting Multimedia Applications. </title> <journal> IEEE JSAC, </journal> <volume> 14(7):12881234, </volume> <month> September </month> <year> 1996. </year>
Reference-contexts: For example, the resource management mechanisms for the Internet defined by the IETF in the last few years rely on QOS routing <ref> [29, 9] </ref> (service brokers), RSVP [34] (signaling similar to Beagle), and local resource managers that set up packet classifiers and schedulers. The more recent proposals for differentiated service [35] require similar entities. The systems differ in the specific responsibilities of the entities differ. <p> QoS routing is basically a simple version of the virtual mesh allocation problem in Darwin. Note that QoS routing is in general NP-complete <ref> [29] </ref>, although it has been shown to be tractable for certain types of networks [22, 21]. The mesh allocation problem is significantly more complex, so we expect to make use of heuristics that have good properties for the common case. Signaling protocols have been widely studied and deployed.
Reference: [30] <author> Tim Wilkinson. </author> <title> KAFFE A virtual machine to run Java code. </title> <address> http://www.kaffe.org/. </address>
Reference-contexts: Other properties include support for hierarchical resource management, the installation of application and service delegates, and the provision of the communication channels they need. Work is in progress on providing appropriate authorization and security mechanisms. Delegates are implemented as Java applets that execute in the Kaffe <ref> [30] </ref> runtime environment, which runs on the router. This environment provides maximal flexibility for experimentation, albeit at some performance penalty.
Reference: [31] <author> J. Wroclawski. </author> <title> Specification of controlled load network element service, </title> <month> November </month> <year> 1996. </year> <title> Internet Draft. </title>
Reference-contexts: This has resulted in specific proposals both for ATM [1] and for IP [8]. The IETF proposal, for example, defines a controlled load (weak guarantees) <ref> [31] </ref> and guaranteed traffic class (strong guarantees) [23] in addition to the traditional best effort class.
Reference: [32] <author> J. Wroclawski. </author> <title> Specification of the controlled-load network element service, </title> <month> September </month> <year> 1997. </year> <title> IETF Request for Comments 2211. </title>
Reference-contexts: For example, a provider could offer high quality video conferencing for board-level meetings, and a lower quality version for informal discussions. This requires resource management mechanisms that give different levels (or type, quality, etc.) of service to different users. Recent research efforts on support for integrated services networks <ref> [23, 32, 35] </ref> partially address this issue, although we believe that these low-level mechanisms should be driven by needs of the applications and services that will use them, i.e. in a top-down fashion.
Reference: [33] <author> H. Zhang and E. Knightly. </author> <title> A new approach to support delay-sensitive vbr video in packet-switched networks. </title> <booktitle> In Proceedings of the 5th International Workshop on Network and Operating System Support For Digital Audio and Video, </booktitle> <pages> pages 275296, </pages> <address> Durham, New Hampshire, </address> <month> April </month> <year> 1995. </year> <note> Also to appear in Multimedia System Journal. </note>
Reference-contexts: There have been some attempts at making this information available to applications, resulting in explicit, albeit generic, feedback to applications. Recent work on renegotiated service <ref> [20, 14, 33] </ref> attempts to combine reservation and feedback control algorithms, resulting in the explicit exchange of state information in both directions between applications and the network.
Reference: [34] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. Rsvp: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Communications Magazine, </journal> <volume> 31(9):818, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: For example, the resource management mechanisms for the Internet defined by the IETF in the last few years rely on QOS routing [29, 9] (service brokers), RSVP <ref> [34] </ref> (signaling similar to Beagle), and local resource managers that set up packet classifiers and schedulers. The more recent proposals for differentiated service [35] require similar entities. The systems differ in the specific responsibilities of the entities differ. <p> These protocols typically allow the user to request one of a small number of service types, e.g. establishing a point-to-point connection or adding a receiver to a multicast connection. A recent example is the ATM signaling protocol standardized by the ITU and ATM forum [2]. RSVP <ref> [34] </ref> is an example of a signaling protocol that came out of the data networking community. It establishes multicast flows, which are weaker than connections, and allows the creation of filters that merge the reservations of multiple flows.
Reference: [35] <author> L. Zhang, V. Jacobson, and K. Nichols. </author> <title> A Two-bit Differentiated Services Architecture for the Internet, </title> <month> December </month> <year> 1997. </year> <title> Internet draft, </title> <booktitle> draft-nichols-diff-svc-arch-00.txt, work in progress. </booktitle> <pages> 21 </pages>
Reference-contexts: For example, a provider could offer high quality video conferencing for board-level meetings, and a lower quality version for informal discussions. This requires resource management mechanisms that give different levels (or type, quality, etc.) of service to different users. Recent research efforts on support for integrated services networks <ref> [23, 32, 35] </ref> partially address this issue, although we believe that these low-level mechanisms should be driven by needs of the applications and services that will use them, i.e. in a top-down fashion. <p> The more recent proposals for differentiated service <ref> [35] </ref> require similar entities. The systems differ in the specific responsibilities of the entities differ. We briefly elaborate on the Darwin system components and explain how they address the requirements listed in Section 2.
References-found: 35

