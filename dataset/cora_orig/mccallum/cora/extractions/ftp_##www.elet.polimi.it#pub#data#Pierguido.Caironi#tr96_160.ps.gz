URL: ftp://www.elet.polimi.it/pub/data/Pierguido.Caironi/tr96_160.ps.gz
Refering-URL: http://www.elet.polimi.it/~caironi/listpub.html
Root-URL: 
Title: HyperCare: an Essential Hypertension Therapy Management System an active database to a data-intensive application where
Author: Pierguido V.C. CAIRONI 
Note: The purpose of this prototype is to evaluate the possibility to apply  
Date: December 11, 1996  
Abstract: HyperCare is a prototype of an expert system for essential hypertension care management primarily intended for big organizations such as hospitals or heart-disease clinics where the presence of many patients and doctors in evolving operative conditions makes the full respect of international guidelines for hypertension treatment difficult. HyperCare implements the World Health Organization and International Society of Hypertension guidelines [1] for what concern diagnosis and the United States Joint National Committee's Recommendations [2] for therapy. Thanks to the power and expressiveness of the language used (Chimera [3], an active database language developed at the Politecnico di Milano), the prototype has been implemented in a limited amount of time and the code is so readable that could be examined and verified by medical experts not trained in computer science.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> WHO/ISH Guidelines Subcommittee. </author> <title> 1993 Guidelines for the management of mild hypertension: memorandum from a WHO/ISH meeting. </title> <journal> Journal of Hypertension, </journal> <volume> Vol. 11, </volume> <pages> pp. 905-918, </pages> <year> 1993. </year>
Reference-contexts: As soon as this tool will be available, HyperCare will be translated to Oracle SQL. Let us now discuss HyperCare's implementation hypothesis. The HyperCare prototype automates all the treatment phases described in Section 2 implementing the World Health Organization and International Society of Hypertension guidelines <ref> [1] </ref> for what concern diagnosis and a reduced set of the United States Joint National Committee's Recommendations [2] for therapy.
Reference: [2] <author> Joint National Committee on Detection, </author> <title> Evaluation, and Treatment of High Blood Pressure. The 1992 Report of the Joint National Committee on Detection, Evaluation, and Treatment of High Blood Pressure. </title> <journal> Arch Intern Med, </journal> <volume> No. 153, </volume> <pages> pp. 154-183, </pages> <year> 1993. </year>
Reference-contexts: Let us now discuss HyperCare's implementation hypothesis. The HyperCare prototype automates all the treatment phases described in Section 2 implementing the World Health Organization and International Society of Hypertension guidelines [1] for what concern diagnosis and a reduced set of the United States Joint National Committee's Recommendations <ref> [2] </ref> for therapy.
Reference: [3] <author> S. Ceri, R. Mantley. </author> <title> Consolidated specification of Chimera, the conceptual interface of IDEA. </title> <type> Technical Report IDEA.DD.2P.004, ESPRIT Project n. 6333 Idea, </type> <institution> Politecnico di Milano, Italy, </institution> <year> 1993. </year>
Reference-contexts: They have the efficiency of databases in handling storage and retrieval of data, but they have also the power of a complete rule language to express the inference mechanisms typical of expert systems. In particular, Chimera <ref> [3] </ref>, an active database language developed at the Politecnico di Milano, offers also a rich object oriented data definition language and an expressive syntax for rule definition. <p> Let us now discuss HyperCare's active rules. The code of each rule is divided in three parts (for a complete description of syntax and semantics of Chimera's rules see <ref> [3] </ref> or [9]): * the event part, which specifies one or more events (creation, deletion or modi fication of objects) which can trigger the rule, * the condition part, which specifies a precondition on the database state for the rule to be executed, * the action part, which contains one or
Reference: [4] <author> H. F. Korth, A. Silberschatz. </author> <title> Database System Concepts 2nd Edition. </title> <publisher> McGraw-Hill, </publisher> <address> Singapore, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Traditionally databases and expert systems have been considered different kinds of software systems. Database systems <ref> [4] </ref> are focused on efficient storage and retrieval of huge amount of data where safety, concurrency and reliability are paramount. At the opposite, expert systems [5] are focused on inferential elaboration of usually small number of data organized in complex and extensible schema.
Reference: [5] <author> E. Rich, K. Knight. </author> <booktitle> Artificial Intelligence 2nd Edition. </booktitle> <publisher> McGraw-Hill, </publisher> <address> New York, NY, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction Traditionally databases and expert systems have been considered different kinds of software systems. Database systems [4] are focused on efficient storage and retrieval of huge amount of data where safety, concurrency and reliability are paramount. At the opposite, expert systems <ref> [5] </ref> are focused on inferential elaboration of usually small number of data organized in complex and extensible schema. Safety, concurrency and reliability are generally minor issues. However, the rapidly changing environment of computer science applications requires new combinations of capabilities.
Reference: [6] <author> U. Dayal, M. Hsu, R. Ladin. </author> <title> Organizing long-running activities with triggers and transactions. </title> <booktitle> In /em Proc. ACM SIGMOD Int'l Conf. on Management of Data, </booktitle> <editor> H. Garcia, H.V. Jagadish, eds., </editor> <address> Atlantic City, New Jersey, </address> <pages> pp. 204-214, </pages> <year> 1990. </year>
Reference-contexts: Safety, concurrency and reliability are generally minor issues. However, the rapidly changing environment of computer science applications requires new combinations of capabilities. More complex data manipulation mechanisms than the ones provided by traditional databases are required in a number of non-conventional applications, including 1 workflow management <ref> [6] </ref> or data mining [7]. Safety, reliability and efficient memoriz-ation of huge amount of data are required in the expert systems that control complex plant operations [8] or organize treatment of large number of patients in the difficult and evolving operative condition of hospitals.
Reference: [7] <author> E. X. DeJesus. </author> <title> Data Mining. </title> <journal> Byte, </journal> <volume> Vol. 20, No. 10, </volume> <publisher> McGraw-Hill, </publisher> <address> New York, NY, </address> <pages> pp. 81-103, </pages> <year> 1995. </year>
Reference-contexts: However, the rapidly changing environment of computer science applications requires new combinations of capabilities. More complex data manipulation mechanisms than the ones provided by traditional databases are required in a number of non-conventional applications, including 1 workflow management [6] or data mining <ref> [7] </ref>. Safety, reliability and efficient memoriz-ation of huge amount of data are required in the expert systems that control complex plant operations [8] or organize treatment of large number of patients in the difficult and evolving operative condition of hospitals.
Reference: [8] <institution> A.N.I.P.L.A. I sistemi basati sulla conoscenza nei processi produttivi. Asso-ciazione Nazionale Italiana Per l'Automazione, Milano, Italy, </institution> <year> 1996. </year>
Reference-contexts: Safety, reliability and efficient memoriz-ation of huge amount of data are required in the expert systems that control complex plant operations <ref> [8] </ref> or organize treatment of large number of patients in the difficult and evolving operative condition of hospitals. From this point of view, active databases [9] may be considered as a bridge between databases and expert systems.
Reference: [9] <author> J. Widom, S. Ceri. </author> <title> Active Database Systems: Triggers and Rules for Advanced Database Processing. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1996. </year>
Reference-contexts: Safety, reliability and efficient memoriz-ation of huge amount of data are required in the expert systems that control complex plant operations [8] or organize treatment of large number of patients in the difficult and evolving operative condition of hospitals. From this point of view, active databases <ref> [9] </ref> may be considered as a bridge between databases and expert systems. They have the efficiency of databases in handling storage and retrieval of data, but they have also the power of a complete rule language to express the inference mechanisms typical of expert systems. <p> Let us now discuss HyperCare's active rules. The code of each rule is divided in three parts (for a complete description of syntax and semantics of Chimera's rules see [3] or <ref> [9] </ref>): * the event part, which specifies one or more events (creation, deletion or modi fication of objects) which can trigger the rule, * the condition part, which specifies a precondition on the database state for the rule to be executed, * the action part, which contains one or more operations
Reference: [10] <author> S. Oparil. </author> <title> Arterial Hypertension. In Cecil textbook of medicine, J.C. Bennet, </title> <editor> F. Plum, eds., W.B. </editor> <publisher> Saunders Company, </publisher> <address> Philadelphia, PA, </address> <pages> pp. 256-271, </pages> <year> 1996. </year>
Reference-contexts: In Section 5 we describe the development phases of the system. HyperCare's rule termination is discussed in Appendix A. 2 Essential Hypertension Let us now introduce briefly essential hypertension <ref> [10] </ref> and its treatment [11]. Essential hypertension is a complex and, unfortunately, widespread disorder. It consists of abnormally high artery blood pressure from unidentified pathological causes. It is extremely important to reduce artery pressure whenever possible since this reduction may drastically lessen the probability of coronary heart disease and stroke. <p> This class defines also the maximum and minimum dosage allowed for the drug (maxDosage, minDosage attributes) and the variation of the dosage to apply in case of therapy change (deltaDosage attribute) set according to <ref> [10] </ref>. The state of the therapy of a patient is represented by the set of all the drug objects referring to it. We think that this implicit representation of therapy allows greater flexibility than other possible ones (e.g., representations explicitly based on some therapy class). * test.
Reference: [11] <editor> R.W. Gifford. Trattamento dei pazienti con ipertensione arteriosa sistemica. In Hurst - il cuore, R.C. Schlant, R.W. Alexander, R. Roberts, E.H. Sonnenblick, eds., </editor> <volume> Vol. 2, </volume> <booktitle> Part VIII, </booktitle> <publisher> McGraw-Hill, Italy, </publisher> <pages> pp. 1541-1565, </pages> <year> 1996. </year> <month> 14 </month>
Reference-contexts: In Section 5 we describe the development phases of the system. HyperCare's rule termination is discussed in Appendix A. 2 Essential Hypertension Let us now introduce briefly essential hypertension [10] and its treatment <ref> [11] </ref>. Essential hypertension is a complex and, unfortunately, widespread disorder. It consists of abnormally high artery blood pressure from unidentified pathological causes. It is extremely important to reduce artery pressure whenever possible since this reduction may drastically lessen the probability of coronary heart disease and stroke.
Reference: [12] <editor> J.D. Swales. Linee guida per il trattamento dell'ipertensione. In Manuale di Iper--tensione - Parte II: Terapia, Menero ed., Momento Medico SRL, </editor> <booktitle> Italy, </booktitle> <pages> pp. 166-187, </pages> <year> 1996. </year>
Reference-contexts: 3 Implementation requirements A software system able to assure a complete and systematic management of hypertension therapy is required in hospitals or in heart-disease clinics where the presence of many patients and doctors in complex and evolving operative conditions makes the full respect of international guidelines for hypertension treatment difficult <ref> [12] </ref>. To produce a therapy for essential hypertension and a schedule of visits, a software system must use data specific to hypertension treatment, data pertaining to administration and data about other diseases of patients.
Reference: [13] <author> Oracle Corporation. </author> <title> Oracle 7 Server SQL Language Reference Manual. Part Number 778-70, 500 Oracle Parkway, </title> <address> Redwood City CA 94065, </address> <year> 1992. </year>
Reference-contexts: Chimera is an experimental and advanced object oriented active language. Its semantic expressiveness has proven itself useful in the development of the prototype, however for a robust and final implementation of HyperCare a commercial relational database with active rule extensions (e.g., Oracle SQL <ref> [13, 14] </ref>) would be more appropriate. Currently, a Chimera-SQL compiler is under development at the Politecnico di Milano [15]. As soon as this tool will be available, HyperCare will be translated to Oracle SQL. Let us now discuss HyperCare's implementation hypothesis.
Reference: [14] <author> Oracle Corporation. </author> <title> Oracle 7 Server Concepts Manual. Part Number 6693-70, 500 Oracle Parkway, </title> <address> Redwood City CA 94065, </address> <year> 1992. </year>
Reference-contexts: Chimera is an experimental and advanced object oriented active language. Its semantic expressiveness has proven itself useful in the development of the prototype, however for a robust and final implementation of HyperCare a commercial relational database with active rule extensions (e.g., Oracle SQL <ref> [13, 14] </ref>) would be more appropriate. Currently, a Chimera-SQL compiler is under development at the Politecnico di Milano [15]. As soon as this tool will be available, HyperCare will be translated to Oracle SQL. Let us now discuss HyperCare's implementation hypothesis.
Reference: [15] <author> E. Baralis, S. Ceri, P. Fraternali, S. Paraboschi. </author> <title> Support environment for Active Rule Design. </title> <journal> International Journal of Intelligent Systems, </journal> <note> Kluvert, to appear. </note>
Reference-contexts: Currently, a Chimera-SQL compiler is under development at the Politecnico di Milano <ref> [15] </ref>. As soon as this tool will be available, HyperCare will be translated to Oracle SQL. Let us now discuss HyperCare's implementation hypothesis. <p> This fact, however, does not reduce the significance of the prototype as a development and knowledge acquisition aid (see the IDEA methodology in [18]). A Chimera-SQL translator is currently under development <ref> [15] </ref>. As soon as this tool will be available, HyperCare will be translated to Oracle SQL v.7.2 and the previously mentioned limitations will be overcome. Moreover, the user interface will be extended allowing better interaction with the system's functionality.
Reference: [16] <author> S. Ceri, S. Paraboschi. </author> <title> Modularization Techniques for Active Rules Design. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol. 21, No. </volume> <pages> 1, </pages> <address> New York, NY, </address> <pages> pp. 1-29, </pages> <year> 1996. </year>
Reference-contexts: This strata divides the system in modules containing rules of similar function. This modularization, imposing a logical organization to the code, allows better readability and mantainability. The stratification follows the event-based stratification model described in <ref> [16] </ref> and allows a formal demonstration of termination (see Appendix A). In this section we give a brief description, in order of decreasing priority, of each single stratum of rules (see Appendix C for the complete rules'code): * Start stratum.
Reference: [17] <author> S. Ceri, P. Fraternali, S. Paraboschi, G. Psaila. </author> <title> User Manual of the Algres Testbed (version 2). ESPRIT Project n. </title> <type> 6333 Idea, </type> <institution> Politecnico di Milano, Italy, </institution> <year> 1995. </year>
Reference-contexts: Therefore, the rules to add would simply be new instances of rules already present in the prototype (of course, adapted to different drugs, tests, symptoms, indications and contra-indications). At the moment, due to some limitations in the current implementation of Chimera <ref> [17] </ref> (in particular, absence of multiple aggregate operators in conditions, and lack of calendar functions), only a part of the prototype rules may be run. This fact, however, does not reduce the significance of the prototype as a development and knowledge acquisition aid (see the IDEA methodology in [18]).
Reference: [18] <author> S. Ceri, P. Fraternali. </author> <title> Designing Database Applications with Objects and Rules (the IDEA Methodology). </title> <type> Addison Wesley, </type> <note> to appear. </note>
Reference-contexts: This fact, however, does not reduce the significance of the prototype as a development and knowledge acquisition aid (see the IDEA methodology in <ref> [18] </ref>). A Chimera-SQL translator is currently under development [15]. As soon as this tool will be available, HyperCare will be translated to Oracle SQL v.7.2 and the previously mentioned limitations will be overcome. Moreover, the user interface will be extended allowing better interaction with the system's functionality.
References-found: 18

