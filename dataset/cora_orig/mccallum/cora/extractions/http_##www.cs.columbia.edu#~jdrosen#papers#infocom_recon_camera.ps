URL: http://www.cs.columbia.edu/~jdrosen/papers/infocom_recon_camera.ps
Refering-URL: http://www.cs.columbia.edu/~jdrosen/
Root-URL: http://www.cs.columbia.edu
Title: Timer Reconsideration for Enhanced RTP Scalability  
Author: Jonathan Rosenberg Henning Schulzrinne 
Affiliation: Bell Laboratories Columbia University  
Abstract: RTP, the Real Time Transport Protocol, has gained widespread acceptance as the transport protocol for voice and video on the Internet. Its companion control protocol, the Real Time Control Protocol (RTCP), is used for loose session control, QoS reporting, and media synchronization, among other functions. The RTP specification describes an algorithm for determining the RTCP packet transmission rate at a host participating in a multicast RTP session. This algorithm was designed to allow RTP to be used in sessions with anywhere from one to a million members. However, we have discovered several problems with this algorithm when used with very large groups with rapidly changing group membership. One problem is the flood of RTCP packets which occurs when many users join a multicast RTP session at nearly the same time. To solve this problem, we present a novel adaptive timer algorithm called reconsideration. We present a mathematical analysis of this algorithm, and demonstrate that it performs extremely well, reducing the congestion problem by several orders of magnitude. We also back up these results with simulation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ITU-T, </author> <title> Recommendation H.323 Visual Telephone Systems and Equipment for Local Area Networks which Provide Non-Guaranteed Quality of Service, </title> <month> February </month> <year> 1996. </year>
Reference-contexts: The growing popularity of Internet telephony, streaming audio and video services (such as those provided by Real Audio) and the Mbone are all indicators of this trend. To support these applications, standards are being developed to insure interoperability. These include the ITU-T H.323 <ref> [1] </ref> specification for Internet telephony, the Session Initiation Protocol (SIP) [2] for multimedia session initiation, and RTSP [3] for controlling multimedia servers on the Internet. Interwoven with all of the above protocols is the Real Time Transport Protocol (RTP) [4].
Reference: [2] <author> Mark Handley, Henning Schulzrinne, and Eve Schooler, SIP: </author> <title> Session initiation protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1996, </year> <title> Work in progress. </title>
Reference-contexts: To support these applications, standards are being developed to insure interoperability. These include the ITU-T H.323 [1] specification for Internet telephony, the Session Initiation Protocol (SIP) <ref> [2] </ref> for multimedia session initiation, and RTSP [3] for controlling multimedia servers on the Internet. Interwoven with all of the above protocols is the Real Time Transport Protocol (RTP) [4].
Reference: [3] <author> Henning Schulzrinne, </author> <title> A real-time stream control protocol (RTSP'), </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1996, </year> <title> Work in progress. </title>
Reference-contexts: To support these applications, standards are being developed to insure interoperability. These include the ITU-T H.323 [1] specification for Internet telephony, the Session Initiation Protocol (SIP) [2] for multimedia session initiation, and RTSP <ref> [3] </ref> for controlling multimedia servers on the Internet. Interwoven with all of the above protocols is the Real Time Transport Protocol (RTP) [4]. It is used by H.323 terminals as the transport protocol for multimedia; both SIP and RTSP were designed to control multimedia sessions delivered over RTP.
Reference: [4] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> a transport protocol for real-time applications, Request for Comments (Proposed Standard) 1889, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: These include the ITU-T H.323 [1] specification for Internet telephony, the Session Initiation Protocol (SIP) [2] for multimedia session initiation, and RTSP [3] for controlling multimedia servers on the Internet. Interwoven with all of the above protocols is the Real Time Transport Protocol (RTP) <ref> [4] </ref>. It is used by H.323 terminals as the transport protocol for multimedia; both SIP and RTSP were designed to control multimedia sessions delivered over RTP. Its main function is to carry real time data, such as voice and video, over an IP network.
Reference: [5] <author> Ingo Busse, Bernd Deffner, and Henning Schulzrinne, </author> <title> Dynamic QoS control of multimedia applications based on RTP, </title> <journal> Computer Communications, </journal> <volume> vol. 19, no. 1, </volume> <pages> pp. 49 58, </pages> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: Both data senders and receivers periodically multicast RTCP packets. RTCP packets provide many services. These include participant identification (via the Source Descriptor (SDES) packet), QoS reporting from receivers, and sender reports for inter-media synchronization. This information is key for sender-based rate adaptation <ref> [5] </ref>, network monitoring [6], and conference control.
Reference: [6] <author> J. Robinson and J. Stewart, </author> <note> Multimon an ipmulti-cast monitor, The MultiMON web page can be found at http://www.merci.crc.doc.ca/mbone/MultiMON. </note>
Reference-contexts: Both data senders and receivers periodically multicast RTCP packets. RTCP packets provide many services. These include participant identification (via the Source Descriptor (SDES) packet), QoS reporting from receivers, and sender reports for inter-media synchronization. This information is key for sender-based rate adaptation [5], network monitoring <ref> [6] </ref>, and conference control. Since RTP was designed for multicast, it was engineered to work well with both small sessions (such as a 5 party teleconference) and large ones (such as an Mbone broadcast of a shuttle launch, where group sizes of two hundred listeners have been reported [7]).
Reference: [7] <author> Kevin Almeroth and Mostafa Ammar, </author> <title> Multicast group behavior in the internet's multicast backbone (mbone), </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 35, no. 6, </volume> <month> June </month> <year> 1997. </year>
Reference-contexts: Since RTP was designed for multicast, it was engineered to work well with both small sessions (such as a 5 party teleconference) and large ones (such as an Mbone broadcast of a shuttle launch, where group sizes of two hundred listeners have been reported <ref> [7] </ref>). As the demand for multimedia continues to grow, Mbone sessions with thousands of members will become commonplace.
Reference: [8] <author> Steve Casner and Van Jacobson, </author> <title> Compressing IP/UDP/RTP headers for low-speed serial links, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996, </year> <title> Work in progress. </title>
Reference-contexts: We have identified three inter-related problems which arise with large, dynamic multicast groups. The first difficulty is congestion. In many cases, the access bandwidths for users will be small compared to network bandwidths (28.8 kb/s modems, for example, can now handle multimedia RTP sessions when RTP header compression <ref> [8] </ref> is used). We also anticipate that many multicast RTP sessions will exhibit rapid increases in group membership at certain points in time. This can happen for a number of reasons. Many sessions have precise start times.
Reference: [9] <author> K. Almeroth and M. Ammar, </author> <title> Collecting and modeling the join/leave behavior of multicast group members in the mbone, </title> <booktitle> in Proceedings of the Symposium on High Performance Distributed Computing, </booktitle> <address> Syracuse, NY, </address> <month> Aug. </month> <year> 1996, </year> <pages> pp. </pages> <address> 20916, </address> <publisher> IEEE. </publisher>
Reference: [10] <author> Bernard Aboba, </author> <title> Alternatives for enhancing RTCP scalability, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997, </year> <title> Work in progress. </title>
Reference-contexts: In this paper, we consider only the first problem, that of congestion. It is our aim to solve this problem with a single mechanism, applicable to large groups and small alike. This means that the use of summarizers <ref> [10] </ref> is not considered, for example, since this solution makes sense for large groups only. There has been a small amount of prior work on resolving difficulties with timers in Internet protocols. Most prominent among this work is [11] and [12].
Reference: [11] <author> Puneet Sharma, Deborah Estrin, Sally Floyd, and Van Jacob-son, </author> <title> Scalable timers for soft state protocols, </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> Kobe, Japan, </address> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: This means that the use of summarizers [10] is not considered, for example, since this solution makes sense for large groups only. There has been a small amount of prior work on resolving difficulties with timers in Internet protocols. Most prominent among this work is <ref> [11] </ref> and [12]. Sharma et. al. consider how to scale soft state timers to varying link capacities and state quantities. Their work considers only the point to point case. Our work considers the case where the network state is distributed among many nodes, connected by some sort of broadcast mechanism.
Reference: [12] <author> P. Sharma, D. Estrin, S. Floyd, and V. Jacobson, </author> <title> Scalable timers for soft state protocols, </title> <type> Technical report, </type> <institution> University of Southern California, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: This means that the use of summarizers [10] is not considered, for example, since this solution makes sense for large groups only. There has been a small amount of prior work on resolving difficulties with timers in Internet protocols. Most prominent among this work is [11] and <ref> [12] </ref>. Sharma et. al. consider how to scale soft state timers to varying link capacities and state quantities. Their work considers only the point to point case. Our work considers the case where the network state is distributed among many nodes, connected by some sort of broadcast mechanism.
Reference: [13] <author> J. Veizades, E. Guttman, C. Perkins, and S. Kaplan, </author> <title> Service location protocol, Request for Comments (Proposed Standard) 2165, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: Our work can thus be viewed as a generalization of their's to distributed mul-ticast groups. As such, our algorithm for controlling the congestion problem in RTP is applicable to other protocols and systems. An extension to the Service Location Protocol <ref> [13] </ref> has been proposed [14] which uses the reconsideration algorithm to control congestion in the multicast group used to disseminate information on network services.
Reference: [14] <author> Jonathan Rosenberg, Bernd Suter, and Henning Schulzrinne, </author> <title> Wide area network service location, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997, </year> <title> Work in progress. </title>
Reference-contexts: Our work can thus be viewed as a generalization of their's to distributed mul-ticast groups. As such, our algorithm for controlling the congestion problem in RTP is applicable to other protocols and systems. An extension to the Service Location Protocol [13] has been proposed <ref> [14] </ref> which uses the reconsideration algorithm to control congestion in the multicast group used to disseminate information on network services.
Reference: [15] <author> Y. Rekhter and T. Li, </author> <title> A border gateway protocol 4 (BGP-4), Request for Comments (Draft Standard) 1771, </title> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1995, </year> <note> (Obsoletes RFC1654). </note>
Reference-contexts: The algorithm is generally applicable to distributed systems where (1) control of bandwidth is desirable, (2) the bandwidth is used to transmit state, (3) the state is used to determine end system transmission rates, and (4) the state is dynamic. These constraints apply to BGP <ref> [15] </ref>, for example, when a route server is used and update rates are to be controlled. 2 Current RTCP Algorithm Each user i in a multicast group using RTP maintains a single state variable, the learning curve, which we denote by L (t).
Reference: [16] <author> T. Pusateri, </author> <title> Distance vector multicast routing protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1996, </year> <title> Work in progress. </title>
Reference-contexts: We assume upstream links are infinitely fast, since congestion occurs only downstream. This congestion is due to the RTCP reports from all of the other users being sent to any particular user. Multicast join latencies are ignored; this is reasonable in protocols such as DVMRP <ref> [16] </ref> since initial packets are flooded. We assume that the network introduces a delay of D seconds, where D is uniformly distributed between 0 and 600 ms. Each user has a 100 kB buffer on the downstream access link.
Reference: [17] <author> D. Anick, Debasis Mitra, and M. M. Sondhi, </author> <title> Stochastic theory of a data-handling system with multiple sources, </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 61, no. 8, </volume> <pages> pp. 18711894, </pages> <month> Oct. </month> <year> 1982. </year>
Reference-contexts: Thus, we trace state evolution as seen by a particular user. The user estimate has converged when L (t) = N , the number of users actually in the group. Our model also assumes a fluid behavior for packet arrivals, as in <ref> [17] </ref>, so that L (t) is a continuous variable. Whenever a packet is reconsidered, it is either sent, or it is not, depending on whether the newly computed send time is before or after the current time.
References-found: 17

