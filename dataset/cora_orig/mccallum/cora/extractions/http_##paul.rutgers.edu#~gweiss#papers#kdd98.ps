URL: http://paul.rutgers.edu/~gweiss/papers/kdd98.ps
Refering-URL: http://paul.rutgers.edu/~gweiss/papers/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: gmweiss@att.com, hirsh@cs.rutgers.edu  
Title: Learning to Predict Rare Events in Event Sequences  
Author: Gary M. Weiss and Haym Hirsh 
Address: New Brunswick, NJ 08903  
Affiliation: Department of Computer Science Rutgers University  
Date: 1998, 359-363.  
Note: Appears in Proceedings of the 4 th International Conference on Knowledge Discovery and Data Mining, AAAI Press,  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: <author> Brazma, A. </author> <year> 1993. </year> <title> Efficient identification of regular expressions from representative examples. </title> <booktitle> In Proceedings of the Sixth Annual Workshop on Computational Learning Theory, </booktitle> <pages> 236-242. </pages>
Reference: <author> Brockwell, P. J., and Davis, R. </author> <year> 1996. </year> <title> Introduction to TimeSeries and Forecasting. </title> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Background Event prediction problems are very similar to timeseries prediction problems. Classical timeseries prediction, which has been studied extensively within the field of statistics, involves predicting the next n successive observations from a history of past observations <ref> (Brockwell & Davis 1996) </ref>. These statistical techniques are not applicable to the event prediction problems we are interested in because they require numerical features and do not support predicting a *Also AT&T Labs, Middletown NJ 07748 Copyright 1998, American Association for Artificial Intelligence (www.aaai.org).
Reference: <author> Cohen, W. </author> <year> 1995. </year> <title> Fast effective rule induction. </title> <booktitle> In Proceedings of the Twelfth International Conference on Machine Learning, </booktitle> <pages> 115-123. </pages>
Reference-contexts: to focus its attention on spurious correlations in the data. 0 2 0 4 0 6 0 8 0 1 0 0 R E C A L L 1 5 m in 8 h r 5 Comparison with Other Methods Timeweavers performance was compared to C4.5rules (Quinlan 1993) and RIPPER <ref> (Cohen 1995) </ref>, two rule induction systems, and FOIL, a system that learns logical definitions from relations (Quinlan 1990). In order to use the example-based rule induction systems, the event sequences were transformed into examples by using a sliding window.
Reference: <author> Dietterich, T., and Michalski, R. </author> <year> 1985. </year> <title> Discovering patterns in sequences of events, </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 187-232. </pages>
Reference-contexts: All rights reserved. specific event within a window of time. Relevant work in machine learning has relied on reformulating the prediction problem into a concept learning problem <ref> (Dietterich & Michalski 1985) </ref>. The reformulation process involves transforming the event sequence into an unordered set of examples by encoding multiple events as individual examples. The transformation procedure preserves only a limited amount of sequence and temporal information, but enables any concept learning program to be used.
Reference: <author> Giordana, A., Saitta, L., and Zini, F. </author> <year> 1994. </year> <title> Learning disjunctive concepts by means of genetic algorithms. </title> <booktitle> In Proceedings of the Eleventh International Conference on Machine Learning, </booktitle> <pages> 96-104. </pages>
Reference-contexts: Our approach is also similar to the approach taken by other GAs which learn disjunctive concepts from examples <ref> (Giordana, Saita & Zini 1994) </ref>.
Reference: <author> Goldberg, D. </author> <year> 1989. </year> <title> Genetic Algorithms in Search, Optimization and Machine Learning, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Each individual in the GAs population represents part of a complete solution and should perform well at classifying a subset of the target events. Our approach resembles that of classifier systems, which are GAs that evolve a set of classification rules <ref> (Goldberg 1989) </ref>. The main differences are that in our approach rules cannot chain together and that instead of forming a ruleset from the entire population, we use a second step to prune bad rules. <p> of 0 to 1, similar to what was done by Murata & Ishibuchi (1995). fitness = (b 2 + 1) precision recall precision + recall To encourage diversity, we use a niching strategy called sharing that rewards individuals based on how different they are from other individuals in the population <ref> (Goldberg 1989) </ref>. Individuals are selected proportional to their shared fitness, which is defined as fitness divided by niche count.
Reference: <author> Jiang, T., and Li, M. </author> <year> 1991. </year> <title> On the complexity of learning strings and sequences. </title> <booktitle> In Proceedings of the Fourth Annual Workshop on Computational Learning Theory, </booktitle> <pages> 367-371. </pages>
Reference: <author> Manilla, H., Toivonen, H., and Verkamo, A. </author> <year> 1995. </year> <title> Discovering frequent episodes in sequences. </title> <booktitle> In Proceedings of the First International Conference on Knowledge Discovery and Data Mining, </booktitle> <pages> 210-215, </pages> <publisher> AAAI Press. </publisher>
Reference-contexts: Data mining algorithms for identifying common patterns in event sequences have been developed, but these patterns are not necessarily useful for prediction. Nonetheless, such algorithms have been used to predict network faults <ref> (Manilla, Toivonen & Verkamo 1995) </ref>. The Event Prediction Problem This section defines our formulation of the event prediction problem. Basic Problem Formulation An event Et is a timestamped observation which occurs at time t and is described by a set of feature-value pairs.
Reference: <author> Murata, T., and Ishibuchi, H. </author> <year> 1995. </year> <title> MOGA: Multi-objective genetic algorithms. </title> <booktitle> In Proceedings of the IEEE International Conference on Evolutionary Computation, </booktitle> <pages> 289-294. </pages>
Reference: <author> Quinlan, J. R., </author> <year> 1990. </year> <title> Learning logical definitions from relations, </title> <journal> Machine Learning, </journal> <volume> 5: </volume> <pages> 239-266. </pages>
Reference-contexts: 0 8 0 1 0 0 R E C A L L 1 5 m in 8 h r 5 Comparison with Other Methods Timeweavers performance was compared to C4.5rules (Quinlan 1993) and RIPPER (Cohen 1995), two rule induction systems, and FOIL, a system that learns logical definitions from relations <ref> (Quinlan 1990) </ref>. In order to use the example-based rule induction systems, the event sequences were transformed into examples by using a sliding window. With a window size of 2, examples are generated with the features: device1, severity1, code1, device2, severity2, and code2.
Reference: <author> Quinlan, J. R. </author> <year> 1993. </year> <title> C4.5: Programs for Machine Learning. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: prediction period leads timeweaver to focus its attention on spurious correlations in the data. 0 2 0 4 0 6 0 8 0 1 0 0 R E C A L L 1 5 m in 8 h r 5 Comparison with Other Methods Timeweavers performance was compared to C4.5rules <ref> (Quinlan 1993) </ref> and RIPPER (Cohen 1995), two rule induction systems, and FOIL, a system that learns logical definitions from relations (Quinlan 1990). In order to use the example-based rule induction systems, the event sequences were transformed into examples by using a sliding window.
Reference: <author> Sasisekharan, R., Seshadri, V., and Weiss, S. </author> <year> 1996. </year> <title> Data mining and forecasting in large-scale telecommunication networks, </title> <journal> IEEE Expert, </journal> <volume> 11(1): </volume> <pages> 37-43. </pages>
Reference-contexts: The transformation procedure preserves only a limited amount of sequence and temporal information, but enables any concept learning program to be used. This approach has been used to predict catastrophic equipment failures (Weiss, Eddy & Weiss 1998) and to identify network faults <ref> (Sasisekharan, Seshadri & Weiss 1996) </ref>. Non-reformulation based approaches have also been tried. Computational learning theory has focused on learning regular expressions and pattern languages from data, but has produced few practical systems (Jiang & Li 1991; Brazma 1993).
Reference: <author> Weiss, G. M., Eddy, J., and Weiss, S. </author> <year> 1998. </year> <title> Intelligent technologies for telecommunications. </title> <booktitle> In Intelligent Engineering Applications, Chapter 8, </booktitle> <publisher> CRC Press. </publisher>
Reference-contexts: The transformation procedure preserves only a limited amount of sequence and temporal information, but enables any concept learning program to be used. This approach has been used to predict catastrophic equipment failures <ref> (Weiss, Eddy & Weiss 1998) </ref> and to identify network faults (Sasisekharan, Seshadri & Weiss 1996). Non-reformulation based approaches have also been tried. Computational learning theory has focused on learning regular expressions and pattern languages from data, but has produced few practical systems (Jiang & Li 1991; Brazma 1993). <p> FOIL produced results inferior to the other methods, but its performance might improve if relations encoding temporal information were added. Timeweaver can also be compared against ANSWER, the expert system which handles 4ESS alarms <ref> (Weiss, Ros & Singhal 1998) </ref>. ANSWER uses a simple thresholding strategy to generate an alert when more than a specified number of interrupt alarms occur within a specified time period. These alerts can be interpreted as a prediction that the device generating the alarm is going to fail.
Reference: <author> Weiss, G. M., Ros J. P., and Singhal, A. </author> <year> 1998. </year> <title> ANSWER: network monitoring using objectoriented rules. </title> <booktitle> In Proceedings of the Tenth Conference on Innovative Applications of Artificial Intelligence, </booktitle> <publisher> AAAI Press. </publisher>
Reference-contexts: The transformation procedure preserves only a limited amount of sequence and temporal information, but enables any concept learning program to be used. This approach has been used to predict catastrophic equipment failures <ref> (Weiss, Eddy & Weiss 1998) </ref> and to identify network faults (Sasisekharan, Seshadri & Weiss 1996). Non-reformulation based approaches have also been tried. Computational learning theory has focused on learning regular expressions and pattern languages from data, but has produced few practical systems (Jiang & Li 1991; Brazma 1993). <p> FOIL produced results inferior to the other methods, but its performance might improve if relations encoding temporal information were added. Timeweaver can also be compared against ANSWER, the expert system which handles 4ESS alarms <ref> (Weiss, Ros & Singhal 1998) </ref>. ANSWER uses a simple thresholding strategy to generate an alert when more than a specified number of interrupt alarms occur within a specified time period. These alerts can be interpreted as a prediction that the device generating the alarm is going to fail.
References-found: 14

