URL: http://www.cs.iastate.edu/~lutz/p9.ps
Refering-URL: http://www.cs.iastate.edu/~lutz/papers.html
Root-URL: http://www.cs.iastate.edu
Email: E-mail: fenner@usm.maine.edu.  E-mail: lutz@iastate.edu.  E-mail: emayordomo@mcps.unizar.es.  
Phone: 2  3  
Title: Weakly Useful Sequences  
Author: Stephen A. Fenner ? and Jack H. Lutz ?? and Elvira Mayordomo ??? 
Address: Maine, Portland, Maine, USA.  Ames, Iowa, USA.  Zaragoza, Zaragoza, SPAIN.  
Affiliation: 1 University of Southern  Iowa State University,  University of  
Abstract: An infinite binary sequence x is defined to be 1. strongly useful if there is a recursive time bound within which every recursive sequence is Turing reducible to x; and 2. weakly useful if there is a recursive time bound within which all the sequences in a non-measure 0 subset of the set of recursive sequences are Turing reducible to x. Juedes, Lathrop, and Lutz (1994) proved that every weakly useful sequence is strongly deep in the sense of Bennett (1988) and asked whether there are sequences that are weakly useful but not strongly useful. The present paper answers this question affirmatively. The proof is a direct construction that combines the recent martingale diagonalization technique of Lutz (1994) with a new technique, namely, the construction of a sequence that is "recursively deep" with respect to an arbitrary, given uniform reducibility. The abundance of such recursively deep sequences is also proven and used to show that every weakly useful sequence is recursively deep with respect to every uniform reducibility. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Miklos Ajtai and Ronald Fagin, </author> <title> Reachability is harder for directed than for undi-rected graphs, </title> <journal> Journal of Symbolic Logic 55 (1990), </journal> <pages> pp. 113-150. </pages>
Reference: 2. <author> Y. M. </author> <title> Barzdin 0 , Complexity of programs to determine whether natural numbers not greater than n belong to a recursively enumerable set, </title> <journal> Soviet Mathematics Doklady 9 (1968), </journal> <pages> pp. 1251-1254. </pages>
Reference-contexts: The following facts are well-known. 1. The first n bits of K can be specified using only O (log n) bits of information, namely, the number of 1's in the first n bits of K <ref> [2] </ref>. ? This research was supported in part by National Science Foundation Grant CCR 9209833. ?? This research was supported in part by National Science Foundation Grant CCR-9157382, with matching funds from Rockwell International, Microware Systems Cor poration, and Amoco. ??? Work supported by the EC through the Esprit BRA Program
Reference: 3. <author> C. H. Bennett, </author> <title> Logical depth and physical complexity, </title> <editor> In R. Herken, editor, </editor> <booktitle> The Universal Turing Machine: A Half-Century Survey, </booktitle> <pages> pp. 227-257. </pages> <publisher> Oxford University Press, </publisher> <year> 1988. </year>
Reference-contexts: Even with oracle access to z, most recursive sequences cannot be computed in polynomial time. (This appears to be folklore, known at least since <ref> [3] </ref>.) Facts (i) and (ii) tell us that K contains far less information than z. In contrast, facts (iii) and (iv) tell us that K is computationally much more useful than z. That is, the information in K is "more usefully organized" than that in z. Bennett [3] introduced the notion <p> at least since <ref> [3] </ref>.) Facts (i) and (ii) tell us that K contains far less information than z. In contrast, facts (iii) and (iv) tell us that K is computationally much more useful than z. That is, the information in K is "more usefully organized" than that in z. Bennett [3] introduced the notion of computational depth (also called "logical depth") in order to quantify the degree to which the information in an object has been organized. <p> The interested reader is referred to <ref> [3] </ref>, [7], or [6] for details, and for related aspects of algorithmic information theory.) Investigating this matter further, Juedes, Lathrop, and Lutz [6] considered two "levels of usefulness" for infinite binary sequences. <p> This depth property is used in the proof of our main result in Section 4. It is also of independent interest because it is closely related to Bennett's notion of weak depth <ref> [3] </ref>. We first make our terminology precise. <p> Let F be a uniform reducibility. The upper F -span of a set A N is the set Definition 8. Let F be a uniform reducibility. A set A N is recursively F - deep if rec (F 1 (A)) = 0. Bennett <ref> [3] </ref> defines a set A N to be weakly deep if A is not tt-reducible to any algorithmically random set B.
Reference: 4. <author> Jr. C. G. Jockusch, </author> <title> Degrees in which the recursive sets are uniformly recursive, </title> <journal> Canadian Journal of Mathematics 24 (1972), </journal> <pages> pp. 1092-1099. </pages>
Reference-contexts: This confirmed Bennett's intuitive arguments by establishing a definite relationship between computational depth and computational usefulness. It also substantially extended Bennett's result on K by implying (in combination with known results of recursion theory <ref> [10, 13, 4, 5] </ref>) that all high Turing degrees and some low Turing degrees contain strongly deep sequences. <p> In particular, we leave open the question of whether there is a weakly useful Turing degree that is not strongly useful (i.e., whether there is a weakly useful set not Turing equivalent to any strongly useful set). Some facts are known about these degrees. Jockusch <ref> [4] </ref> neatly characterized the strongly useful Turing degrees (under a different name), for example, as being either high or containing complete extensions of first-order Peano arithmetic. This includes some low degrees, but no non-high r.e. degrees. Recently, Stephan [14] has partially strengthened these results, showing that no non-high r.e.
Reference: 5. <author> Jr. C. J. Jockusch and R. I. Soare, </author> <title> Degrees of members of 0 1 classes, </title> <journal> Pacific Journal of Mathematics 40 (1972), </journal> <pages> pp. 605-616. </pages>
Reference-contexts: This confirmed Bennett's intuitive arguments by establishing a definite relationship between computational depth and computational usefulness. It also substantially extended Bennett's result on K by implying (in combination with known results of recursion theory <ref> [10, 13, 4, 5] </ref>) that all high Turing degrees and some low Turing degrees contain strongly deep sequences.
Reference: 6. <author> David W. Juedes, James I. Lathrop, and Jack H. Lutz, </author> <title> Computational depth and reducibility, </title> <booktitle> Theoretical Computer Science 132 (1994), </booktitle> <pages> pp. 37-70, </pages> <booktitle> also appeared in Proceedings of the Twentieth International Colloquium on Automata, Languages, and Programming, </booktitle> <year> 1993, </year> <pages> pp. 278-288. </pages>
Reference-contexts: The interested reader is referred to [3], [7], or <ref> [6] </ref> for details, and for related aspects of algorithmic information theory.) Investigating this matter further, Juedes, Lathrop, and Lutz [6] considered two "levels of usefulness" for infinite binary sequences. <p> The interested reader is referred to [3], [7], or <ref> [6] </ref> for details, and for related aspects of algorithmic information theory.) Investigating this matter further, Juedes, Lathrop, and Lutz [6] considered two "levels of usefulness" for infinite binary sequences. <p> No recursive or algorithmically random sequence can be weakly useful. It is evident that K is strongly useful, and that every strongly useful sequence is weakly useful. Juedes, Lathrop, and Lutz <ref> [6] </ref> generalized Bennett's result that K is strongly deep by proving that every weakly useful sequence is strongly deep. This confirmed Bennett's intuitive arguments by establishing a definite relationship between computational depth and computational usefulness. <p> It also substantially extended Bennett's result on K by implying (in combination with known results of recursion theory [10, 13, 4, 5]) that all high Turing degrees and some low Turing degrees contain strongly deep sequences. Notwithstanding this progress, Juedes, Lathrop, and Lutz <ref> [6] </ref> left a critical question open: Do there exist weakly useful sequences that are not strongly useful? The main result of the present paper, proved in Section 4, answers this question affirmatively. This establishes the existence of strongly deep sequences that are not strongly useful. <p> Thus A i 6= F i j (H) for all i and j, and Condition 3 is satisfied. ut Theorem 12 Corollary 14. There is a sequence that is strongly deep but not strongly useful. Proof. This follows immediately from Theorem 12 and the fact <ref> [6] </ref> that every weakly useful sequence is strongly deep. ut It is easy to verify that weak and strong usefulness are both invariant under tt-equivalence. Thus, Theorem 12 shows that there are weakly useful tt-degrees that are not strongly useful.
Reference: 7. <author> M. Li and P. M. B. Vitanyi, </author> <title> An Introduction to Kolmogorov Complexity and its Applications, </title> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: The interested reader is referred to [3], <ref> [7] </ref>, or [6] for details, and for related aspects of algorithmic information theory.) Investigating this matter further, Juedes, Lathrop, and Lutz [6] considered two "levels of usefulness" for infinite binary sequences.
Reference: 8. <author> J. H. Lutz, </author> <title> Weakly hard problems, </title> <note> SIAM Journal on Computing to appear, also appeared in Proceedings of the Ninth Structure in Complexity Theory Conference, </note> <year> 1993, </year> <pages> pp. 146-161. </pages>
Reference-contexts: This establishes the existence of strongly deep sequences that are not strongly useful. More importantly, it indicates a need for further investigation of the class of weakly useful sequences. The proof of our main result is a direct construction that combines the martingale diagonalization technique recently introduced by Lutz <ref> [8] </ref> with a new technique, namely, the construction of a sequence that is recursively F -deep, where F is an arbitrary uniform reducibility. This notion of uniform recursive depth, defined and investigated in Section 3, is closely related to Bennett's notion of weak depth. <p> Weakly useful sequences are defined (in Section 1) in terms of recursive measure, a special case of the resource-bounded measure developed by Lutz [9]. We very briefly sketch the elements of this theory, referring the reader to <ref> [9, 8] </ref> for motivation, details, and intuition. Definition 1. A martingale is a function d: f0; 1g fl ! [0; 1) such that, for all w 2 f0; 1g fl , d (w) = 2 . Definition 2. <p> We call A above the canonical recursively F -deep set. Proof sketch of Theorem 12 Our proof is an adaptation of the martingale diagonalization method introduced by Lutz in <ref> [8] </ref>. We will define H one strand at a time to satisfy the following conditions, where H 0 ; H 1 ; H 2 ; : : : are the strands of H: 1. Each strand H k is recursive (although H itself cannot be recursive). 2. <p> The same trick is used in <ref> [8] </ref>.
Reference: 9. <author> J. H. Lutz, </author> <title> Almost everywhere high nonuniform complexity, </title> <journal> Journal of Computer and System Sciences 44 (1992), </journal> <pages> pp. 220-258. </pages>
Reference-contexts: A sequence x 2 f0; 1g 1 is defined to be weakly useful if there is a recursive time bound t: N ! N such that DTIME x (t) contains a non-measure 0 subset of REC, in the sense of resource-bounded measure <ref> [9] </ref>. That is, x is weakly useful if access to x enables one to decide a nonnegligible set of recursive sequences within some fixed recursive time bound. No recursive or algorithmically random sequence can be weakly useful. <p> Weakly useful sequences are defined (in Section 1) in terms of recursive measure, a special case of the resource-bounded measure developed by Lutz <ref> [9] </ref>. We very briefly sketch the elements of this theory, referring the reader to [9, 8] for motivation, details, and intuition. Definition 1. A martingale is a function d: f0; 1g fl ! [0; 1) such that, for all w 2 f0; 1g fl , d (w) = 2 . <p> Weakly useful sequences are defined (in Section 1) in terms of recursive measure, a special case of the resource-bounded measure developed by Lutz [9]. We very briefly sketch the elements of this theory, referring the reader to <ref> [9, 8] </ref> for motivation, details, and intuition. Definition 1. A martingale is a function d: f0; 1g fl ! [0; 1) such that, for all w 2 f0; 1g fl , d (w) = 2 . Definition 2.
Reference: 10. <author> P. Martin-Lof, </author> <title> On the definition of random sequences, </title> <booktitle> Information and Control 9 (1966), </booktitle> <pages> pp. 602-619. </pages>
Reference-contexts: For example, consider two infinite binary strings, K , the characteristic sequence of the halting problem (whose nth bit is 1 if and only if the nth Turing machine halts on input n), and z, a sequence that is algorithmically random in the sense of Martin-Lof <ref> [10] </ref>. The following facts are well-known. 1. <p> The first n bits of z cannot be specified using significantly fewer than n bits of information <ref> [10] </ref>. 3. Oracle access to K would enable one to decide any recursive sequence in polynomial time (i.e., decide the nth bit of the sequence in time polynomial in the length of the binary representation of n) [11]. 4. <p> This confirmed Bennett's intuitive arguments by establishing a definite relationship between computational depth and computational usefulness. It also substantially extended Bennett's result on K by implying (in combination with known results of recursion theory <ref> [10, 13, 4, 5] </ref>) that all high Turing degrees and some low Turing degrees contain strongly deep sequences.
Reference: 11. <author> E. L. Post, </author> <title> Recursively enumerable sets of positive integers and their decision problems, </title> <journal> Bulletin of the American Mathematical Society 50 (1944), </journal> <pages> pp. 284-316. </pages>
Reference-contexts: Oracle access to K would enable one to decide any recursive sequence in polynomial time (i.e., decide the nth bit of the sequence in time polynomial in the length of the binary representation of n) <ref> [11] </ref>. 4. Even with oracle access to z, most recursive sequences cannot be computed in polynomial time. (This appears to be folklore, known at least since [3].) Facts (i) and (ii) tell us that K contains far less information than z.
Reference: 12. <author> H. Rogers, Jr, </author> <title> Theory of Recursive Functions and Effective Computability, </title> <address> Mc-Graw Hill, </address> <year> 1967. </year>
Reference-contexts: This depth property is used in the proof of our main result in Section 4. It is also of independent interest because it is closely related to Bennett's notion of weak depth [3]. We first make our terminology precise. As in <ref> [12] </ref>, we define a truth-table condition (briefly, a tt-condition) to be an ordered pair t = ((n 1 ; : : : ; n k ); g), where k; n 1 ; : : : ; n k 2 N and g: f0; 1g k ! f0; 1g.
Reference: 13. <author> G. E. Sacks, </author> <title> Degrees of Unsolvability, </title> <publisher> Princeton University Press, </publisher> <year> 1966. </year>
Reference-contexts: This confirmed Bennett's intuitive arguments by establishing a definite relationship between computational depth and computational usefulness. It also substantially extended Bennett's result on K by implying (in combination with known results of recursion theory <ref> [10, 13, 4, 5] </ref>) that all high Turing degrees and some low Turing degrees contain strongly deep sequences.
Reference: 14. <author> F. Stephan, </author> <year> 1994, </year> <title> private communication. This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Some facts are known about these degrees. Jockusch [4] neatly characterized the strongly useful Turing degrees (under a different name), for example, as being either high or containing complete extensions of first-order Peano arithmetic. This includes some low degrees, but no non-high r.e. degrees. Recently, Stephan <ref> [14] </ref> has partially strengthened these results, showing that no non-high r.e. Turing degree can be weakly useful, either. Therefore, among the r.e. degrees, the strongly useful, weakly useful, and high degrees all coincide. Acknowledgments The authors thank Martin Kummer and Frank Stephan for helpful discussions.
References-found: 14

