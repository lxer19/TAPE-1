URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/fred-infocom-95.ps.Z
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/projects/internet.html
Root-URL: http://www.cse.ucsc.edu
Title: Degree-Constrained Multicasting in Point-to-Point Networks  
Author: Fred Bauer and Anujan Varma 
Address: Santa Cruz, CA 95064  
Affiliation: Computer Engineering Department University of California  
Abstract: Establishing a multicast tree in a point-to-point network of switch nodes, such as a wide-area ATM network, is often modeled as the NP-complete Steiner problem in networks. In this paper, we study algorithms for finding efficient multi-cast trees in the presence of constraints on the copying ability of the individual switch nodes in the network. We refer to this problem as the degree-constrained multicast tree problem and model it as the degree-constrained Steiner problem in networks. Steiner heuristics for the degree-constrained case are proposed and their simulation results for sparse, point-to-point networks are presented. The results are compared with respect to their quality of solution, cost (running time), and the number of test cases for which no solution could be found. The results of our research indicate that efficient multi-cast trees can be found in large, sparse networks with small multicast groups even with limited multicast capability in the individual switches. Some of the Steiner heuristics tested yielded degree-constrained multicast trees within 5% of the best heuristic solution found in most of the cases. Even when the fanout of each switch node was restricted to 2, the heuristics we used were able to generate efficient mul-ticast trees in almost all our test networks. Surprisingly few test networks were unsolvable. In those cases where no solution was found by a heuristic, backtracking solved many of the remaining cases. Among the heuristics we used, degree-constrained versions of simple path-distance heuristics such as SPH and SPH-R provided the best tradeoffs between quality of solution and cost. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ammar, S. Cheung, and C. Scoglio. </author> <title> "Routing multipoint connections using virtual paths in an ATM network", </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> San Francisco, CA, </address> <month> Apr. </month> <year> 1993, </year> <pages> pp. 98-105. </pages>
Reference: [2] <author> J. Beasley. </author> <title> "An SST-based algorithm for the Steiner problem in graphs", </title> <journal> Networks, </journal> <volume> vol. 19, </volume> <pages> pp. 1-16, </pages> <year> 1989. </year>
Reference-contexts: Since finding a solution to the DCSP is NP-complete [20], a given DCSP heuristic may not be able to find a solution even though one exists. Consequently, all of our DCSP heuristics employ backtracking. Our backtracking strategy is inspired by Beasley's Lagrangean relaxation approach <ref> [2] </ref> s 1 s 2 s 3 s 4 s 5 s 1 62 G s 1 2 Z s 2 62 G s 1 62 G s 2 62 G s 1 62 G s 2 62 G s 3 62 G s 4 62 G s 5 62 G <p> The quality of solution for a heuristic is compared with the best solution found because (i) the cost of finding an optimal solution for a 200-node graph is prohibitive and (ii) the optimal solutions we found for a small number of graphs using Beasley's Lagrangean Relaxation algorithm <ref> [2] </ref> often had the same cost as the the best solution found by the heuristics. The last criterion gives the number of networks for which a heuristic could not find a solution even with backtracking (see Table II).
Reference: [3] <author> L. Berry. </author> <title> "Graph theoretic models for multicast communications", in Traffic theories for new telecommunications services ITC Specialists Seminar, </title> <address> Adelaide, Australia, </address> <month> Sep. </month> <year> 1989, </year> <pages> pp. 95-99. </pages>
Reference: [4] <author> K. Bharath-Kumar and Jaffe. </author> <title> "Routing to multiple destinations in computer networks", </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. COM-31, no. 3, </volume> <pages> pp. 343-351, </pages> <month> Mar. </month> <year> 1983. </year>
Reference: [5] <author> S. Deering. </author> <title> "Multicast routing in internetworks and extended LANs", </title> <journal> Computer Communication Review, </journal> <volume> vol. 18, no. 4, </volume> <pages> pp. 55-64, </pages> <month> Aug. </month> <year> 1988. </year>
Reference: [6] <author> M. Doar and I. Leslie. </author> <title> "How bad is naive multicast routing?", </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> San Francisco, CA, </address> <month> Apr. </month> <year> 1993, </year> <pages> pp. 82-89. </pages>
Reference-contexts: The 2000 networks were generated to resemble networks in a manner similar that of Doar <ref> [6] </ref>. Each of n nodes is distributed across a Cartesian coordinate plane with minimum and maximum coordinates (0; 0) and (2n; 2n), creating a forest of n nodes spread across this plane. In all of our test graphs, the number of nodes n was set at 200. <p> The weight of each edge is its rectilinear distance plus a small constant. We used the probability function P (x; y) = fie 2ffn ; where d x;y is the rectilinear distance between nodes x and y <ref> [6] </ref>. The parameters ff and fi govern the density of the graph. Increasing ff increases the number of connections to nodes far away and increasing fi increases the number of edges from each node. <p> The next least expensive heuristics K-SPH and ADH often gave better solutions at moderate, extra expense. Heuristic Naive, our expected worst Steiner heuristic, often did produce the worst solution; however, it also produced many solutions of surprisingly high quality. This result matches that of Doar and Leslie <ref> [6] </ref>. The quality of solution of the more complex heuristics A29 and Dual Ascent rarely justified their additional effort. As expected, dense networks posed much less of a challenge to degree-constrained Steiner heuristics than sparse networks.
Reference: [7] <author> R. Douglas. </author> <title> "NP-completeness and degree restricted spanning trees", </title> <journal> Discrete Mathematics, </journal> <volume> vol. 105, </volume> <pages> pp. 41-47, </pages> <year> 1992. </year>
Reference: [8] <author> F. Hwang and D. Richards. </author> <title> "Steiner tree problems", </title> <journal> Networks, </journal> <volume> vol. 22, </volume> <pages> pp. 55-89, </pages> <year> 1992. </year>
Reference: [9] <author> F. Hwang, D. Richards, and P. Winter. </author> <title> The Steiner Tree Problem. </title> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference: [10] <author> X. Jiang. </author> <title> "Path finding algorithms for broadband multicast", </title> <booktitle> in Third Int'l Conf. on High Speed Networking, </booktitle> <editor> O. Spaniol and A. Danthine, ed., </editor> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1991, </year> <pages> pp. 153-164. </pages>
Reference: [11] <author> D. Johnson. </author> <title> "The NP-completeness column: an ongoing guide", </title> <journal> Journal of Algorithms, </journal> <volume> vol. 6, no. 3, </volume> <pages> pp. 434-451, </pages> <month> Sep. </month> <year> 1985. </year>
Reference: [12] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicasting for multimedia applications", </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1992, </year> <pages> pp. 2078-2085. </pages>
Reference: [13] <author> V. Kompella, J. Pasquale, and G. Polyzos. </author> <title> "Multicast routing for multimedia communications", </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 286-292, </pages> <month> Jun. </month> <year> 1993. </year>
Reference: [14] <author> J. Kruskal. </author> <title> "On the shortest spanning subtree of a graph and the traveling salesman problem", </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> vol. 7, </volume> <pages> pp. 48-50, </pages> <year> 1956. </year>
Reference: [15] <author> M. Smith and P. Winter. </author> <title> "Path-distance heuristics for the Steiner problem in undirected networks", </title> <journal> Algorithmica, </journal> <volume> vol. 7, no. </volume> <pages> 2-3, pp. 309-327, </pages> <year> 1992. </year>
Reference-contexts: The last criterion gives the number of networks for which a heuristic could not find a solution even with backtracking (see Table II). To verify and calibrate simulation results, we first compared our results obtained from running unconstrained versions of the heuristics with those published by Smith <ref> [15] </ref> and Voss [22]. Of the heuristics compared, only one | Dual Ascent | did not match the published results. That only one heuristic differed significantly from published results is interesting since our simulations focused on a much narrower range of networks than those considered by Smith or Voss.
Reference: [16] <author> H. Takahashi and A. </author> <title> Matsuyama. "An approximate solution for the Steiner problem in graphs", </title> <journal> Math. Japonica, </journal> <volume> vol. 24, no. 6, </volume> <pages> pp. 573-577, </pages> <year> 1980. </year>
Reference: [17] <author> H. Tode, Y. Sakai, M. Yamamoto, H. Okada, and Y. Tezuka. </author> <title> "Multicast routing algorithm for nodal load balancing", </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1992, </year> <pages> pp. 2086-2095. </pages>
Reference: [18] <author> J. Turner. </author> <title> "An optimal nonblocking multicast virtual circuit switch", </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <address> Toronto, Canada, </address> <month> Jun. </month> <year> 1994, </year> <pages> pp. 298-305. </pages>
Reference: [19] <author> S. Voss. </author> <title> "A survey of some generalizations of Steiner's problem", </title> <booktitle> in Proc. of the First Balkan Conference on Operational Research, </booktitle> <year> 1988. </year>
Reference: [20] <editor> S. Voss. Steiner-Probleme in Graphen. Frankfurt/Main: </editor> <publisher> Hain, </publisher> <year> 1990, </year> <pages> pp. 179-184. </pages>
Reference-contexts: This changed topology can and does alter the shortest path information for remaining steps. As a consequence, heuristics must constantly reevaluate shortest paths between nodes. Since finding a solution to the DCSP is NP-complete <ref> [20] </ref>, a given DCSP heuristic may not be able to find a solution even though one exists. Consequently, all of our DCSP heuristics employ backtracking. <p> Instead, it uses SPH to generate a Steiner tree from the subgraph. B.2 Constrained Heuristics In addition to the above unconstrained heuristics, we simulate two DCSP-specific heuristics, A29 and SPH-R. Heuristic A29 was first proposed by Voss <ref> [20] </ref> and heuristic SPH-R is our own contribution. They are described below. A29: Heuristic A29 [20] is the only published DCSP heuristic of which we are aware. It is also a variant of SPH. <p> B.2 Constrained Heuristics In addition to the above unconstrained heuristics, we simulate two DCSP-specific heuristics, A29 and SPH-R. Heuristic A29 was first proposed by Voss <ref> [20] </ref> and heuristic SPH-R is our own contribution. They are described below. A29: Heuristic A29 [20] is the only published DCSP heuristic of which we are aware. It is also a variant of SPH. It first adds enough edges of infinite weight to make G a complete graph and then applies heuristic SPH. <p> Table II summarizes the success rates of the degree-constrained heuristics based on simulations on 2000 test networks. As expected, heuristics run on the sample networks with degree-constraints sometimes had difficulty in finding solutions. This is because finding a solution for the degree-constrained case is also NP-complete <ref> [20] </ref>. In practice, however, most of the degree-constrained graphs could be solved by the heuristics directly or through backtracking. In fact, each of the 2000 test networks could be solved by at least one of the heuristics. The maximum number of cases Fig. 3.
Reference: [21] <author> S. Voss. </author> <title> "Problems with generalized Steiner problems", </title> <journal> Algo-rithmica, </journal> <volume> vol. 7, no. </volume> <pages> 2-3, pp. 333-335, </pages> <year> 1992. </year>
Reference: [22] <author> S. Voss. </author> <title> "Steiner's problem in graphs: Heuristic methods", </title> <journal> Discrete Applied Mathematics, </journal> <volume> vol. 40, </volume> <pages> pp. 45-72, </pages> <year> 1992. </year>
Reference-contexts: To verify and calibrate simulation results, we first compared our results obtained from running unconstrained versions of the heuristics with those published by Smith [15] and Voss <ref> [22] </ref>. Of the heuristics compared, only one | Dual Ascent | did not match the published results. That only one heuristic differed significantly from published results is interesting since our simulations focused on a much narrower range of networks than those considered by Smith or Voss. <p> Each of our networks is large, sparse and has a small multicast group. By contrast, Smith and Voss simulated a mix of sparse and dense networks with small to large multi-cast groups. In Voss' simulations <ref> [22] </ref>, heuristic Dual Ascent found the best solution as much as 80% of time. In our simulations, however, the algorithm rarely produced the best Fig. 1. Cost vs. quality of solution for unconstrained multicast. Fig. 2. <p> This is important because Dual Ascent uses a minimum spanning tree (MST) of the subgraph to find a Steiner tree. Previously published results have shown that the approach based on pruning the MST works well for large multicast groups, but poorly for small groups <ref> [22] </ref>. The published worst-case ratio between a solution using the MST and an optimal solution is jSj + 1 where jSj is the number of non-multicast members. Thus, it is not surprising that Dual Ascent's quality of solution was poor for sparse 200-node networks with 20 or 60 multicast members. <p> Since the worst case ratio between a solution and an optimal solution for the SPH is 2X and for the MST is jSj + 1 (where S is the number of non-multicast members) <ref> [22] </ref>, this difference is not surprising. Each cluster's quality of solution as shown by Figure 3 Fig. 4. Run-time ratios for random degree-constraints. remained essentially unchanged for all the clusters except Naive and Dual Ascent.
Reference: [23] <author> P. Winter. </author> <title> "Steiner problem in networks: A survey", </title> <journal> Networks, </journal> <volume> vol. 17, no. 2, </volume> <pages> pp. 129-167, </pages> <year> 1987. </year>
Reference: [24] <author> R. Wong. </author> <title> "A dual ascent approach for Steiner tree problems on a directed graph", </title> <journal> Mathematical Programming, </journal> <volume> vol. 28, </volume> <pages> pp. 271-287, </pages> <year> 1984. </year>
Reference: [25] <author> W. De Zhong, Y. Onozato, and J. Kaniyil. </author> <title> "A copy network with shared buffers for large-scale multicast ATM switching", </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 157-165, </pages> <month> Apr. </month> <year> 1993. </year>
References-found: 25

