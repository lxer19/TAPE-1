URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/quake/public/papers/pde.bw.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/oghattas/www/home.html
Root-URL: http://www.cs.cmu.edu
Phone: 3  4  5  
Title: Automated Parallel Solution of Unstructured PDE Problems  
Author: Anja Feldmann Omar Ghattas John R. Gilbert Gary L. Miller David R. O'Hallaron Eric J. Schwabe Jonathan R. Shewchuk Shang-Hua Teng 
Keyword: CR Categories and Subject Descriptors: F.2.2 [Analysis of Algorithms and Problem Complexity]: Nonnumerical Algorithms and Problems; G.1.0 [Numerical Analysis]: General; G.2.2 [Discrete Mathematics]: Graph Theory General Terms: Algorithms Additional Key Words and Phrases: Partial differential equations, finite element methods, graph partitioning, parallel processing.  
Address: Pittsburgh, PA 15213-3891  Evanston, IL 60208  Minneapolis, MN 55455  3333 Coyote Hill Road Palo Alto, CA 94304  
Affiliation: 1 School of Computer Science 2 Department of Civil and Environmental Engineering Carnegie Mellon University  Department of EECS Northwestern University  Department of Computer Science University of Minnesota  Xerox Corporation Palo Alto Research Center  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> BABU SKA, I., AND AZIZ, A. K. </author> <title> On the Angle Condition in the Finite Element Method. </title> <note> SIAM Journal on Numerical Analysis 13, </note> <month> 2 (Apr. </month> <year> 1976), </year> <pages> 214-226. </pages>
Reference-contexts: The real difficulty, though, is that a mesh generator should avoid producing elements with large aspect ratios skinny triangles and tetrahedra, so to speak because angles close to 180 ffi cause a large discretization error <ref> [1] </ref>, and very small angles cause the stiffness matrix K to be ill-conditioned [6]. This constraint is difficult to reconcile with the correct meshing of arbitrary geometries.
Reference: [2] <author> BECKER, E. B., CAREY, G. F., AND ODEN, J. T. </author> <title> Finite Elements: An Introduction. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1981. </year>
Reference: [3] <author> BERN, M., AND EPPSTEIN, D. </author> <title> Mesh Generation and Optimal Triangulation. In Computing in Euclidean Geometry, </title> <editor> D.-Z. Du and F. Hwang, Eds., </editor> <volume> vol. </volume> <booktitle> 1 of Lecture Notes Series on Computing. World Scientific, </booktitle> <address> Singapore, </address> <year> 1992, </year> <pages> pp. 23-90. </pages>
Reference-contexts: There are simple techniques for triangulating an arbitrary two-dimensional region, and although tetrahedralizing a three-dimensional region is much more complicated, there are straightforward techniques for doing so. A good survey of mesh triangulation methods in two and three dimensions is provided by Bern and Eppstein <ref> [3] </ref>. The real difficulty, though, is that a mesh generator should avoid producing elements with large aspect ratios skinny triangles and tetrahedra, so to speak because angles close to 180 ffi cause a large discretization error [1], and very small angles cause the stiffness matrix K to be ill-conditioned [6].
Reference: [4] <author> BIELAK, J., KALLIVOKAS, L. F., XU, J., AND MONOPOLI, R. </author> <title> Finite Element Absorbing Boundary for the Wave Equation in a Halfplane with an Application to Engineering Seismology. </title> <booktitle> In Third INRIA-SIAM Wave Propogation Conference (Juan-les-Pins, </booktitle> <address> France, </address> <month> Apr. </month> <year> 1995). </year>
Reference-contexts: Other architectures are planned. It generally requires a week or two of effort to retarget the code generator. Archimedes has duplicated the original 3D seismic ground motion study, and is currently being used on a production basis to model ground motion in 2D and 3D basins <ref> [4] </ref>. Ultimately, Archimedes will be used to model the entire Los Angeles basin.
Reference: [5] <author> BORKAR, S., COHN, R., COX, G., GLEASON, S., GROSS, T., KUNG, H. T., LAM, M., MOORE, B., PETERSON, C., PIEPER, J., RANKIN, L., TSENG, P., SUTTON, J., URBANSKI, J., AND WEBB, J. </author> <title> iWarp: An Integrated Solution to High-Speed Parallel Computing. </title> <booktitle> In Supercomputing '88 (Kissimmee, </booktitle> <address> Florida, </address> <month> Nov. </month> <year> 1988). </year>
Reference-contexts: We discuss below two of our target machines, the iWarp and the Connection Machine CM-5, and how to embed E 0 into them. Our heuristics are inspired by algorithms from VLSI gate array layout [13]. Placement and Routing on the iWarp Our first target machine is the iWarp <ref> [5] </ref>. The iWarp is a distributed memory parallel computer whose processors are connected by a two-dimensional torus. The iWarp component is a VLSI chip that contains a processing agent and a communication agent. At the heart of the communication agent is a limited set of communication resources called queues.
Reference: [6] <author> CAREY, G. F., AND ODEN, J. T. </author> <title> Finite Elements: A Second Course. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1983. </year>
Reference-contexts: The real difficulty, though, is that a mesh generator should avoid producing elements with large aspect ratios skinny triangles and tetrahedra, so to speak because angles close to 180 ffi cause a large discretization error [1], and very small angles cause the stiffness matrix K to be ill-conditioned <ref> [6] </ref>. This constraint is difficult to reconcile with the correct meshing of arbitrary geometries. Archimedes includes a two-dimensional mesh generator that triangulates complex geometries with high-quality elements, and furthermore allows the density of elements to vary and be controlled by the user, as was necessary to generate Figure 3.
Reference: [7] <author> CHAN, T. F., AND MATHEW, T. P. </author> <title> Domain Decomposition Algorithms. </title> <booktitle> In Acta Numerica 1994. </booktitle> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1994, </year> <pages> pp. 61-143. 18 </pages>
Reference-contexts: Briefly, each processor uses standard Gaussian elimination to eliminate the interior nodes of its subdomain; then an iterative method is used to solve the linear system for the shared nodes on the boundaries of subdomains. Further details are given in the survey by Chan <ref> [7] </ref> and the article by Shewchuk and Ghattas [18]. Experience and Conclusions The events that led to the development of Archimedes are informative. In late 1991, civil engineers at Carnegie Mellon began exploring the use of parallel computers for modeling earthquake-induced ground motion.
Reference: [8] <author> CLARKSON, K. L., EPPSTEIN, D., MILLER, G. L., STURTIVANT, C., AND TENG, S.-H. </author> <title> Approximating Center Points with Iterated Radon Points. </title> <booktitle> In Proceedings of the Ninth Annual Symposium on Computational Geometry (San Diego, </booktitle> <address> California, </address> <month> May </month> <year> 1993), </year> <journal> Association for Computing Machinery, </journal> <pages> pp. 91-98. </pages>
Reference-contexts: A center point exists for any set of points, and can be found by linear programming. However, this method is much too slow to be practical; thus Archimedes uses a heuristic that finds good approximate center points in linear time. Clarkson et al. <ref> [8] </ref> show that the center point calculation is a good approximation for E even though it is based on the small random sample S. The sample size depends on the dimension but not the size of the input mesh.
Reference: [9] <author> FELDMANN, A., STRICKER, T. M., AND WARFEL, T. E. </author> <title> Supporting Sets of Arbitrary Connections on iWarp through Communication Context Switches. </title> <booktitle> In Fifth Annual ACM Symposium on Parallel Algorithms and Architectures (Velen, </booktitle> <address> Germany, </address> <month> July </month> <year> 1993), </year> <journal> Association for Computing Machinery, </journal> <pages> pp. 203-212. </pages>
Reference-contexts: A connection can be used only if it belongs to the phase that is currently active. For a detailed discussion see Feldmann, Stricker, and Warfel <ref> [9] </ref>. The advantage of message passing is that no explicit routing need be done. The advantage of the ConSet model is that, because the structure of E 0 is known in advance, a communication compiler can choose routes and schedule communication so as to minimize network congestion. <p> When routing is complete, a schedule is generated that describes a good order in which to exchange messages during each phase. The placement, routing, and scheduling heuristics are all described in detail by Feldmann et al. <ref> [9] </ref>. algorithms. We have tried other heuristics for placement and routing, including simulated annealing and linear programming, but they have not performed as well. Placement on the Connection Machine CM-5 Another target machine is the Connection Machine CM-5 [20].
Reference: [10] <author> GREMBAN, K. D., MILLER, G. L., AND TENG, S.-H. </author> <title> Moments of Inertia and Graph Separators. </title> <booktitle> In Proceedings of the Fifth Annual ACM-SIAM Symposium on Discrete Algorithms (Arlington, </booktitle> <address> Virginia, </address> <month> Jan. </month> <year> 1994), </year> <journal> Association for Computing Machinery, </journal> <pages> pp. 452-461. </pages>
Reference-contexts: In practice, not 12 every hyperplane represents a good bisection. We therefore generate a number of hyperplanes, searching for one that gives a balanced partition with few edges cut. To improve our luck, the random hyperplanes are chosen from a biased distribution. Gremban <ref> [10] </ref> has suggested using the principal axis of the moment of inertia of the projected points to bias the random choice. A hyperplane perpendicular to the principal axis is likely to cross many fewer edges of E than a hyperplane parallel to the principal axis.
Reference: [11] <author> HEATH, M. T., NG, E., AND PEYTON, B. W. </author> <title> Parallel Algorithms for Sparse Linear Systems. </title> <note> SIAM Review 33, 3 (Sept. </note> <year> 1991), </year> <pages> 420-460. </pages>
Reference-contexts: Solving the linear equation (1) accounts for most of the computation and interprocessor communication of solving the PDE. The linear system may be solved either by a direct method such as Gaussian elimination <ref> [11] </ref> or by an iterative method such as conjugate gradients [17]. In this article, we consider only iterative methods, which are much easier to parallelize than direct methods.
Reference: [12] <author> LEISERSON, C. E., ABUHAMDEH, Z. S., DOUGLAS, D. C., FEYNMAN, C. R., GANMUKHI, M. N., HILL, J. V., HILLIS, W. D., KUSZMAUL, B. C., ST. PIERRE, M. A., WELLS, D. S., WONG, M. C., YANG, S.-W., AND ZAK, R. </author> <title> The Network Architecture of the Connection Machine CM-5. </title> <booktitle> In Proceedings of the Fourth Annual ACM Symposium on Parallel Algorithms and Architectures (San Diego, </booktitle> <address> California, </address> <month> June </month> <year> 1992), </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: Placement on the Connection Machine CM-5 Another target machine is the Connection Machine CM-5 [20]. The CM-5 is a distributed memory parallel computer whose computational nodes are connected by a fat-tree network <ref> [12] </ref>. The network supports message passing communication, as well as efficient primitives for synchronization, broadcast, and scan. 15 The network topology, a fat-tree, is best suited for communication patterns with hierarchical locality.
Reference: [13] <author> LENGAUER, T. </author> <title> Combinatorial Algorithms for Circuit Layout. </title> <booktitle> Applicable Theory in Computer Science. </booktitle> <publisher> John Wiley & Sons, </publisher> <address> Chichester, England, </address> <year> 1990. </year>
Reference-contexts: We discuss below two of our target machines, the iWarp and the Connection Machine CM-5, and how to embed E 0 into them. Our heuristics are inspired by algorithms from VLSI gate array layout <ref> [13] </ref>. Placement and Routing on the iWarp Our first target machine is the iWarp [5]. The iWarp is a distributed memory parallel computer whose processors are connected by a two-dimensional torus. The iWarp component is a VLSI chip that contains a processing agent and a communication agent.
Reference: [14] <author> MILLER, G. L., TENG, S.-H., THURSTON, W., AND VAVASIS, S. A. </author> <title> Automatic Mesh Partitioning. In Graph Theory and Sparse Matrix Computation, </title> <editor> A. George, J. R. Gilbert, and J. W. H. Liu, Eds. </editor> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Archimedes' partitioner is an advanced recursive geometric bisection algorithm due to Miller, Teng, Thurston, and Vavasis <ref> [14] </ref>, which finds provably good separators for a large class of geometrically defined graphs. A separator is a small set of edges whose removal divides the graph into roughly equal pieces.
Reference: [15] <author> POTHEN, A., SIMON, H. D., AND LIOU, K.-P. </author> <title> Partitioning Sparse Matrices with Eigenvectors of Graphs. </title> <journal> SIAM Journal on Matrix Analysis and Applications 11, </journal> <month> 3 (July </month> <year> 1990), </year> <pages> 430-452. </pages>
Reference-contexts: Both methods are recursive because they first bisect a graph, then bisect each of the two resulting pieces, and so on; they therefore yield a number of subdomains that is a power of two. RSB <ref> [15] </ref> bisects a graph by exploiting spectral properties of its combinatorial structure. However, RSB does not take into account the positions of the graph's vertices in space. While RSB usually produces excellent partitions in practice, it tends to be slow, as it relies on expensive eigenvector calculations.
Reference: [16] <author> RUPPERT, J. </author> <title> A New and Simple Algorithm for Quality 2-Dimensional Mesh Generation. </title> <type> Tech. Rep. </type> <institution> UCB/CSD 92/694, University of California at Berkeley, Berkeley, California, </institution> <year> 1992. </year> <note> To appear in Journal of Algorithms. </note>
Reference-contexts: Archimedes includes a two-dimensional mesh generator that triangulates complex geometries with high-quality elements, and furthermore allows the density of elements to vary and be controlled by the user, as was necessary to generate Figure 3. The meshing algorithm is due to Ruppert <ref> [16] </ref>, who has proven that his algorithm generates meshes whose triangles have angles bounded between 20 ffi and 140 ffi (except where there are input angles smaller than 20 ffi ; these cannot be improved).
Reference: [17] <author> SHEWCHUK, J. R. </author> <title> An Introduction to the Conjugate Gradient Method Without the Agonizing Pain. </title> <note> Available by anonymous FTP to WARP.CS.CMU.EDU (128.2.209.103) as quake-papers/painless-conjugate-gradient.ps, </note> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: Solving the linear equation (1) accounts for most of the computation and interprocessor communication of solving the PDE. The linear system may be solved either by a direct method such as Gaussian elimination [11] or by an iterative method such as conjugate gradients <ref> [17] </ref>. In this article, we consider only iterative methods, which are much easier to parallelize than direct methods. Most iterative methods have as their central primitive the problem of computing the product of a large sparse matrix K and a vector x. <p> We illustrate Archimedes' language with an excerpt from code written to solve the heat equation. In addition to the usual C data types, Archimedes has several distributed data types, including vectors 16 and sparse matrices. Consider the inner loop of a simplified conjugate gradient code <ref> [17] </ref> to solve Ku = f . Below, the MATRIX keyword declares a distributed sparse matrix, and the NODEVECTOR keyword declares distributed vectors.
Reference: [18] <author> SHEWCHUK, J. R., AND GHATTAS, O. </author> <title> A Compiler for Parallel Finite Element Methods with Domain-Decomposed Unstructured Meshes. </title> <booktitle> In Proceedings of the Seventh International Conference on Domain Decomposition Methods in Scientific and Engineering Computing (1994), </booktitle> <editor> D. E. Keyes and J. Xu, Eds., </editor> <volume> vol. </volume> <booktitle> 180 of Contemporary Mathematics, </booktitle> <publisher> American Mathematical Society, </publisher> <pages> pp. 445-450. </pages>
Reference-contexts: Further details are given in the survey by Chan [7] and the article by Shewchuk and Ghattas <ref> [18] </ref>. Experience and Conclusions The events that led to the development of Archimedes are informative. In late 1991, civil engineers at Carnegie Mellon began exploring the use of parallel computers for modeling earthquake-induced ground motion. They manually implemented a simulation on the Thinking Machines CM-2.
Reference: [19] <author> STRANG, G., AND FIX, G. J. </author> <title> An Analysis of the Finite Element Method. </title> <booktitle> Prentice-Hall Series in Automatic Computation. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1973. </year>
Reference-contexts: introduction, and Strang and Fix <ref> [19] </ref> for mathematical analysis. Consider a heat conduction problem posed on the two-dimensional domain of Figure 4, an electric guitar. The problem is to find the steady state temperature u (x; y) of the guitar, given that the guitar is exposed to specified heat sources.
Reference: [20] <institution> THINKING MACHINES CORPORATION. </institution> <note> The Connection Machine CM-5 Technical Summary. 1991. 19 </note>
Reference-contexts: We have tried other heuristics for placement and routing, including simulated annealing and linear programming, but they have not performed as well. Placement on the Connection Machine CM-5 Another target machine is the Connection Machine CM-5 <ref> [20] </ref>. The CM-5 is a distributed memory parallel computer whose computational nodes are connected by a fat-tree network [12]. The network supports message passing communication, as well as efficient primitives for synchronization, broadcast, and scan. 15 The network topology, a fat-tree, is best suited for communication patterns with hierarchical locality.
References-found: 20

