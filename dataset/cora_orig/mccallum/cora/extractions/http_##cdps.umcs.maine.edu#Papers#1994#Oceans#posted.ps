URL: http://cdps.umcs.maine.edu/Papers/1994/Oceans/posted.ps
Refering-URL: http://cdps.umcs.maine.edu/Papers/papers.html
Root-URL: 
Title: Handling Unanticipated Events in Single and Multiple AUV Systems  
Author: Roy M. Turner Peggy S. Eaton Martin J. Dempsey 
Keyword: ORCA  
Address: New Hampshire, Durham, NH 03824 USA  
Affiliation: Department of Computer Science, University of  
Note: In Proceedings of the IEEE Oceanic Engineering Soci- ety Conference (OCEANS '94), pp. II-125-130.  Event handling is done by Event Handler (EH), which accepts inputs from the lower-level architecture, includ  
Abstract: An intelligent controller for AUVs must be able to handle unanticipated events as they occur. If not, it risks the mission and the vehicle. Unfortunately, this is a difficult, context-dependent task: the agent must first detect that there has been an event, then diagnose it, assess its likely importance, and finally select an appropriate response and integrate that response into its other actions. Event handling is even more difficult in situations involving multiple cooperating AUVs, since now the agent must analyze the event in terms of its likely impact on the others and the group as a whole. In this paper, we discuss two versions of event handling in Orca, a schema-based AUV controller for ocean science and cooperative distributed problem solving missions. We then discuss how the process can be extended for multiagent event handling. During a mission, an intelligent autonomous underwater vehicle (AUV) controller will encounter unanticipated events. Sensors will return uncertain and unexpected information, the controller will have incomplete and uncertain knowledge about the world around it and about itself, and there will be unknown, unpredictable agents and processes interacting with it. Unless these unanticipated events are recognized and appropriately handled, they can jeopardize the AUV's mission or even the vehicle itself. By "unanticipated," we do not mean that an event is necessarily novel or even completely unexpected. Instead, it simply cannot be predicted well enough to plan for it. For example, "power failed," "collision," "motion stopped," and so forth are all unanticipated events in the AUV domain; they are to some extent expected to occasionally occur, but predicting exactly when and how would be very difficult. Not all events that occur are unanticipated, of course, nor are all harmful. Anticipated events are easily handled|responses, if any are needed, can be determined when they are predicted| This work is funded in part by grant BCS-9211914 from the National Science Foundation. The first author is now at the University of Maine and may be reached at rmt@umcs.maine.edu. This material is presented electronically to ensure timely dissemination of scholarly and technical work. Copyright and all rights therein are retained by authors or by other copyright holders. All persons copying this information are expected to adhere to the terms and constraints invoked by each author's copyright. This work may not be copied or reposted without the explicit permission of the copyright holder. [After IEEE provisional copyright policies.] and beneficial unanticipated events will be a topic for future research. In this paper, we restrict our attention to potentially harmful unanticipated events. Handling unanticipated events is difficult. They are sometimes hard to detect, and it is even harder to decide what caused them, how important they are, and how to respond to them. If the AUV is part of a cooperative distributed problem solving (CDPS) system, the problem is compounded. The AUV controller must now be concerned about what the event means for the others, the group as a whole, and their shared mission. Multiagent event handling is complicated by uncertainty and lack of knowledge about other agents' intentions; it is exacerbated by the low bandwidth of communication channels available for use in the ocean. In this paper, we discuss how unanticipated events can be handled by intelligent AUV controllers, both when operating alone and when part of a CDPS system. Our work is part of the Orca project [1, 2], the goal of which is to create a robust, intelligent AUV controller for ocean science and cooperative problem solving missions. Orca is a schema-based, adaptive reasoner for controlling autonomous underwater vehicles. The current version, Orca 1.0, is fairly simple and lacks some of the abilities needed by a fully-functional AUV controller. Increasingly more sophisticated versions of Orca will be built over the project's lifetime as we learn from earlier versions. Orca's internal structure, consisting of several major modules, is shown in Figure 1. Orca relies on the existence of a low-level software architecture that provides certain services to free it from low-level interaction with the vehicle hardware. In particular, the low-level should be presettable by Orca to handle common kinds of unanticipated events that can be simply and quickly handled without much need for intelligence. Off-track errors, for instance, can be handled best within certain limits by the low-level architecture, as can obstacle avoidance. Given such an architecture, the only unanticipated events Orca should see are those that impact the mission or those that the low-level lacks knowledge of how to handle. The current version of Orca is designed to work with the Marine Systems Engineering Laboratory's (MSEL's) EAVE software architecture [3]. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> R. M. Turner and R. A. G. Stevenson, "Orca: </author> <title> An adaptive, context-sensitive reasoner for controlling AUVs," </title> <booktitle> in Proceedings of the 7th International Symposium on Unmanned Untethered Submersible Technology (AUV '91), </booktitle> <year> 1991. </year>
Reference: [2] <author> R. M. Turner, </author> <title> Adaptive Reasoning for Real-World Problems: A Schema-Based Approach. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1994. </year>
Reference: [3] <author> D. R. Blidberg and S. G. Chappell, </author> <title> "Guidance and control architecture for the EAVE vehicle," </title> <journal> IEEE Journal of Oceanic Engineering, </journal> <volume> vol. OE-11, no. 4, </volume> <pages> pp. 449-461, </pages> <year> 1986. </year>
Reference: [4] <author> M. P. Georgeff and A. L. Lansky, </author> <title> "Reactive reasoning and planning: An experiment with a mobile robot," </title> <booktitle> in Proceedings of the Sixth National Conference on Artificial Intelligence, (Seattle, Washing-ton), </booktitle> <pages> pp. 677-682, </pages> <year> 1987. </year>
Reference: [5] <author> A. Rubin, </author> <title> "Hypothesis formation and evaluation in medical diagnosis," </title> <type> Tech. Rep. </type> <institution> AI-TR-316, Artificial Intelligence Laboratory, MIT, </institution> <address> Cambridge, MA, </address> <year> 1975. </year>
Reference: [6] <author> P. J. Feltovich, P. E. Johnson, J. A. Moller, and D. B. Swanson, </author> <title> "LCS: The role and development of medical knowledge and diagnostic expertise," </title> <booktitle> in Readings in Medical Artificial Intelligence (W. </booktitle> <editor> J. Clancey and E. H. Shortliffe, </editor> <booktitle> eds.), </booktitle> <pages> pp. 275-319, </pages> <address> Reading, Massachusetts: </address> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1984. </year>
Reference: [7] <author> R. A. Miller, H. E. Pople, Jr., and J. D. Myers, "INTERNIST-1, </author> <title> an experimental computer-based diagnostic consultant for general internal medicine," </title> <journal> New England Journal of Medicine, </journal> <volume> vol. 307, </volume> <pages> pp. 468-476, </pages> <year> 1982. </year>
Reference: [8] <author> D. Novik and K. Ward, </author> <title> "Mutual beliefs of multiple conversants: A computational model of collaboration in air traffic control," </title> <booktitle> in Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pp. 196-201, </pages> <year> 1993. </year>
Reference: [9] <author> R. M. Turner and P. S. Eaton, </author> <title> "Handling unanticipated events during collaboration," </title> <booktitle> in Proceedings of the Sixteenth Annual Conference of the Cognitive Science Society, </booktitle> <address> (Atlanta, Georgia), </address> <year> 1994. </year>
Reference: [10] <author> D. Payton, D. Keirsey, D. Kimble, J. Krozel, and J. Rosenblatt, </author> <title> "Do whatever works: A robust approach to fault-tolerant autonomous control," </title> <journal> Journal of Applied Intelligence, </journal> <year> 1992. </year>
Reference: [11] <author> F. Noreils, </author> <title> "Toward a robot architecture integrating cooperation between mobile robots: Application to indoor environment," </title> <journal> International Journal of Robotics Research, </journal> <volume> vol. 12, no. 1, </volume> <year> 1993. </year>
Reference: [12] <author> P. R. Cohen, M. L. Greenberg, D. M. Hart, and A. E. Howe, </author> <title> "Trial by fire: Understanding the design requirements for agents in complex environments," </title> <journal> AI Magazine, </journal> <volume> vol. 10, </volume> <pages> pp. 34-48, </pages> <month> Fall </month> <year> 1989. </year>
Reference: [13] <author> T. Moehlman, V. Lesser, and B. Buteau, </author> <title> "Decentralized negotiation: An approach to the distributed planning problem," in Group Decision and Negotiation (K. Sycara, </title> <publisher> ed.), </publisher> <pages> pp. 161-192, </pages> <address> Norwell, MA: </address> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
References-found: 13

