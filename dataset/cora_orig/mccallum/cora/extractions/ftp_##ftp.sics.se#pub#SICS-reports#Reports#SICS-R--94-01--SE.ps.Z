URL: ftp://ftp.sics.se/pub/SICS-reports/Reports/SICS-R--94-01--SE.ps.Z
Refering-URL: http://www.sics.se/libindex.html
Root-URL: 
Title: Model Checking Mobile Processes (Full version) 1  "Model Checking Mobile Processes", Lec  
Author: Mads Dam 
Note: 1 Preliminary version published as  ture Notes in Computer Science 715 (1993) pp. 22-36 2 Work supported by ESPRIT BRA project 6454 "CONFER"  
Address: Box 1263 S-164 28 Kista Sweden  
Affiliation: Swedish Institute of Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> H. Andersen and G. Winskel. </author> <title> Compositional checking of satisfaction. </title> <booktitle> In Proc. 3rd Workshop on Computer Aided Verification, </booktitle> <pages> pages 49-65, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: The efficiency and usability of our proof system and decision procedure needs to be evaluated on practical examples. Mechanisms for compositional verification should be developed, perhaps along the lines of Stirling [16], or Andersen and Winskel <ref> [1] </ref>. Concerning early bisimula-tion equivalence a temporal logic characterising this equivalence instead of late bisimulation equivalence can be devised using the basic modalities of e.g. [12] in place of those considered here. We envisage no significant problems in obtaining similar results for such a logic.
Reference: [2] <author> R. Cleaveland, J. Parrow, and B. Steffen. </author> <title> A semantics based verification tool for finite state systems. </title> <booktitle> In Proc. 9th IFIP Symp. Protocol Specification, Verification and Testing, </booktitle> <year> 1989. </year> <month> 38 </month>
Reference: [3] <author> R. Cleaveland and B. Steffen. </author> <title> Computing behavioural relations, </title> <booktitle> log-ically. In Proc. </booktitle> <address> ICALP'91, </address> <year> 1991. </year>
Reference-contexts: In particular we avoid the technical conditions that prohibit reuse of variables in the algorithm of Hennessy and Lin. Note that it is likely that our model checker can be used for deciding bisimulation equivalence 37 of finite control agents via a notion of characteristic formula (c.f. <ref> [3] </ref>). A closely related proof system for a version of Hennessy-Milner logic adapted to value-passing has been introduced by Hennessy and Liu [6]. Parts of our proof system appear originally in their work: The structural rules, and the rules for boolean connectives, 8 and 9.
Reference: [4] <author> M. Dam. </author> <title> CTL fl and ECTL fl as fragments of the modal mu-calculus. </title> <booktitle> In Proc. 17th Coll. Trees in Algebra and Programming, Lecture Notes in Computer Science, </booktitle> <volume> 581 </volume> <pages> 145-164, </pages> <year> 1992. </year> <note> To appear in Theoretical Computer Science. </note>
Reference: [5] <author> M. Hennessy and H. Lin. </author> <title> Symbolic bisimulations. </title> <institution> Dept. of Computer Science, University of Sussex, </institution> <type> Report 1/92, </type> <year> 1992. </year>
Reference-contexts: For bisimulation equivalence Jonsson and Parrow [7] have considered data-independent programs, and Hennessy and Lin <ref> [5] </ref> have presented an algorithm for a certain class of "standard" symbolic transition graphs. Applied to the -calculus both these classes are strictly weaker than the notion of finite control agent introduced in the present paper.
Reference: [6] <author> M. Hennessy and X. Liu. </author> <title> A modal logic for message passing processes. </title> <institution> Dept. of Computer Science, University of Sussex, </institution> <type> Report 3/93, </type> <year> 1993. </year>
Reference-contexts: A closely related proof system for a version of Hennessy-Milner logic adapted to value-passing has been introduced by Hennessy and Liu <ref> [6] </ref>. Parts of our proof system appear originally in their work: The structural rules, and the rules for boolean connectives, 8 and 9. However, they fail to consider fixed points or other temporal operators, and thus their logic is far too weak to be of any practical interest.
Reference: [7] <author> B. Jonsson and J. Parrow. </author> <title> Deciding bisimulation equivalences for a class of non-finite-state programs. </title> <booktitle> Information and Computation, </booktitle> <year> 1992. </year>
Reference-contexts: For bisimulation equivalence Jonsson and Parrow <ref> [7] </ref> have considered data-independent programs, and Hennessy and Lin [5] have presented an algorithm for a certain class of "standard" symbolic transition graphs. Applied to the -calculus both these classes are strictly weaker than the notion of finite control agent introduced in the present paper.
Reference: [8] <author> K. G. Larsen. </author> <title> Proof systems for Hennessy-Milner logic with recursion. </title> <booktitle> in Proc. 13th CAAP Lecture Notes in Computer Science, </booktitle> <volume> 299, </volume> <year> 1988. </year>
Reference: [9] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice Hall International, </publisher> <year> 1989. </year>
Reference: [10] <author> R. Milner. </author> <title> The polyadic -calculus: A tutorial. </title> <type> Technical Report ECS-LFCS-91-180, </type> <institution> Laboratory for the Foundations of Computer Science, Department of Computer Science, University of Edinburgh, </institution> <year> 1991. </year>
Reference: [11] <author> R. Milner. </author> <title> Functions as processes. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 2 </volume> <pages> 119-141, </pages> <year> 1992. </year>
Reference: [12] <author> R. Milner, J. Parrow, and D. Walker. </author> <title> Modal logics for mobile processes. </title> <type> Technical Report R91:03, </type> <institution> SICS, </institution> <year> 1991. </year> <note> To appear in Theoretical Computer Science. </note>
Reference-contexts: Mechanisms for compositional verification should be developed, perhaps along the lines of Stirling [16], or Andersen and Winskel [1]. Concerning early bisimula-tion equivalence a temporal logic characterising this equivalence instead of late bisimulation equivalence can be devised using the basic modalities of e.g. <ref> [12] </ref> in place of those considered here. We envisage no significant problems in obtaining similar results for such a logic. Acknowledgements Thanks are due to Joachim Parrow, Lars -Ake Fredlund, and Bjorn Victor for discussions on the -calculus.
Reference: [13] <author> R. Milner, J. Parrow, and D. Walker. </author> <title> A calculus of mobile processes, I and II. </title> <journal> Information and Computation, </journal> <volume> 100(1) </volume> <pages> 1-40 and 41-77, </pages> <year> 1992. </year>
Reference: [14] <author> F. Orava and J. Parrow. </author> <title> An algebraic verification of a mobile network. </title> <journal> Formal Aspects of Computing, </journal> <pages> pages 497-543, </pages> <year> 1992. </year> <month> 39 </month>
Reference: [15] <author> D. Sangiorgi. </author> <title> From -calculus to higher-order -calculus|and back. </title> <note> To appear in Proc. TAPSOFT'93, </note> <year> 1993. </year>
Reference: [16] <author> C. Stirling. </author> <title> Modal logics for communicating systems. </title> <journal> Theoretical Computer Science, </journal> <volume> 49 </volume> <pages> 311-347, </pages> <year> 1987. </year>
Reference-contexts: Relations to the -calculus encodings of data types, lambda calculus, and the higher order -calculus should be investigated. The efficiency and usability of our proof system and decision procedure needs to be evaluated on practical examples. Mechanisms for compositional verification should be developed, perhaps along the lines of Stirling <ref> [16] </ref>, or Andersen and Winskel [1]. Concerning early bisimula-tion equivalence a temporal logic characterising this equivalence instead of late bisimulation equivalence can be devised using the basic modalities of e.g. [12] in place of those considered here. We envisage no significant problems in obtaining similar results for such a logic.
Reference: [17] <author> C. Stirling. </author> <title> Modal and temporal logics for processes. </title> <type> Technical Report ECS-LFCS-92-221, </type> <institution> LFCS, Dept. of Computer Science, University of Edinburgh, </institution> <year> 1992. </year>
Reference: [18] <author> C. Stirling and D. Walker. </author> <title> Local model checking in the modal mu-calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 89 </volume> <pages> 161-177, </pages> <year> 1991. </year>
Reference-contexts: side-condition on dis is absent, the following false sequent is derivable: true ` A : [x 1 ]8y:(y 6= z) _ (-X:&lt;x 2 &gt;y:(y = z) ^ ([x 1 ]8y:X)): There is a close relationship between the proof system of fig. 4 and the tableau system of Stirling and Walker <ref> [18] </ref>. For the fragment of closed positive modal -calculus formulas and CCS agents, the two systems coincide in the sense that there is a successful tableau for A ` in the notation of [18] iff there is a proof of true ` A : in the system of fig. 4. <p> close relationship between the proof system of fig. 4 and the tableau system of Stirling and Walker <ref> [18] </ref>. For the fragment of closed positive modal -calculus formulas and CCS agents, the two systems coincide in the sense that there is a successful tableau for A ` in the notation of [18] iff there is a proof of true ` A : in the system of fig. 4. Note that box causes the proof system to be infinitary. This problem, however, is only superficial, as we proceed to show. <p> That this is so can be seen from the proof of Lemma 6.1. We can then proceed to prove soundness. The proof given here follows the lines of the corresponding proof in <ref> [18] </ref>. Theorem 7.1 (Soundness) If c ` A : is derivable then it is true. Proof First observation to note is that if all antecedents of a local rule are true then so is the conclusion. This follows immediately from the symbolic semantics, Lemma 6.1. <p> Thus A i+1 has been brought into the desired form. 2 (Lemma 9.5) 2 (Lemma 9.2) 31 9.2 Termination We next use the finiteness of fB j A ! fl Bg to show termination, following the strategy introduced by Stirling and Walker <ref> [18] </ref> for the case of the modal -calculus.
Reference: [19] <author> R. S. Streett and E. A. Emerson. </author> <title> An automata theoretic decision procedure for the propositional mu-calculus. </title> <journal> Information and Computation, </journal> <volume> 81 </volume> <pages> 249-264, </pages> <year> 1989. </year> <month> 40 </month>
Reference-contexts: The proof of this follows the approach of Streett and Emerson <ref> [19] </ref>. Theorem 10.1 (Completeness) If the sequent c ` A : is true then it is derivable. Proof Suppose A 2 k k s c and assume given a set of proof structures induced by an invocation of check (c ` A : ).
References-found: 19

