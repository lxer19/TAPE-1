URL: http://www.cs.cmu.edu/afs/cs/user/skgupta/www/icra98.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/user/skgupta/www/sk.html
Root-URL: 
Title: Micro Planning for Mechanical Assembly Operations  
Author: S. K. Gupta C. J. J. Paredis P. F. Brown 
Address: Pittsburgh, PA 15213 Pittsburgh, PA 15213  
Affiliation: Robotics Institute Institute for Complex Engineered Systems Carnegie Mellon University Carnegie Mellon University  
Abstract: Significant advances have been made in the area of macro planning for assembly operations (i.e., dividing a product into sub-assemblies, determining the sequence of assembly operations). On the contrary, the state of the art in micro planning (i.e., tool selection, path planning for tool and part movements) is rather primitive. To generate a realizable assembly plan, both macro planning and micro planning problems need to be solved. Tooling considerations are an important component of the micro planning problem. Therefore, we present a methodology for modeling assembly tools, selecting tools for assembly operations, and generating detailed tool movements. Techniques described in this paper can be combined with macro planning techniques to result in a complete assembly planner. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Nancy M. Amato and Yan Wu. </author> <title> A randomized roadmap method for path and manipulation planning. </title> <booktitle> In Proceedings of the 1996 IEEE International Conference on Robotics and Automation, </booktitle> <address> Minneapolis, MN, </address> <month> April </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: Moreover, this computation cannot be amortized, because the C-space changes dramatically when tools and parts are moved. Several path planning algorithms have been developed specifically for assembly planning <ref> [1, 18] </ref>. Our implementation is based on a group of randomized path planners [1, 11, 16]. <p> Moreover, this computation cannot be amortized, because the C-space changes dramatically when tools and parts are moved. Several path planning algorithms have been developed specifically for assembly planning [1, 18]. Our implementation is based on a group of randomized path planners <ref> [1, 11, 16] </ref>. These algorithms do not require the computation of the C-space; they consist of the following components: a simple potential field method, generation of random via-points, creation of a roadmap graph, and search of the roadmap. For a detailed description of these algorithms refer to [11, 16].
Reference: [2] <author> L Homem de Mello. </author> <title> Task Sequence Planning for Robotic Assembly. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [3] <author> L Homem de Mello and A Sanderson. </author> <title> A correct and complete algorithm for the generation of mechanical assembly sequences. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 56-61, </pages> <month> May </month> <year> 1989. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [4] <author> L.S. Homem de Mello and A.C. Sanderson. </author> <title> A correct and complete algorithm for the generation of mechanical assembly sequences. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(2) </volume> <pages> 228-240, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Both approaches have also been applied for coordinate measuring machines, to determine the accessibility of inspection points. The tool accessibility problem has also been investigated for the assembly domain. Homem deMello and Sanderson's <ref> [4] </ref> model of assemblies include attachments, which describe fastening methods. Four types of attachment are considered: clip, pressure, screw, and glue. Even though the attachments can be used to generate disassembly sequences, the detailed tool movements required to carry out these attachment are not modeled.
Reference: [5] <author> Antonio Diaz-Calderon, D. Navin-Chandra, and Pradeep K. Khosla. </author> <title> Measuring the difficulty of assembly tasks from tool access information. </title> <booktitle> In Proceedings of the IEEE International Symposum on Assembly and Task Planning, </booktitle> <pages> pages 87-93, </pages> <year> 1995. </year>
Reference-contexts: Four types of attachment are considered: clip, pressure, screw, and glue. Even though the attachments can be used to generate disassembly sequences, the detailed tool movements required to carry out these attachment are not modeled. Diaz et al. <ref> [5] </ref> present a method that automatically determines the complexity of an assembly application frame and degree-of-freedom. task based on the tool use. The most detailed work is reported by Wilson [22].
Reference: [6] <author> T De Fazio and D Whitney. </author> <title> Simplified generation of all mechanical assembly sequences. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 3(6) </volume> <pages> 640-658, </pages> <month> Dec </month> <year> 1987. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [7] <author> T De Fazio, D Whitney, Man-Cheung Max Lui, T Abell, and D Baldwin. </author> <title> Aids for the design of choice of assembly sequences. </title> <booktitle> In IEEE International Conference on Systems Machines and Cy-bernatics, </booktitle> <month> Nov </month> <year> 1989. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [8] <author> Daniel Gaines and Caroline Hayes. </author> <title> A constraint-based algorithm for reasoning about the shape producing capabilities of cutting tools in machined part. </title> <booktitle> In ASME Design for Manufacturing Conference, </booktitle> <address> Sacremento, CA, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: The first approach checks for interference between the workpiece and the tool accessibility volume, which is defined as the non-cutting portion of the tool <ref> [10, 19, 8] </ref>. The second approach uses visibility maps [23, 14]; a machining operation for a particular face is selected such that the tool approach direction is inside the visibility region for that face.
Reference: [9] <author> S. Gottschalk, M. C. Lin, and D. Manocha. OBB-tree: </author> <title> a hierarchical structure for rapid interference detection. </title> <booktitle> In Proceedings of ACM Sig-graph'96, </booktitle> <year> 1996. </year>
Reference-contexts: The algorithm terminates when the goal is reached or when no neighboring positions closer to the goal are collision free. To check for collision, we use a combination of RAPID and ACIS. RAPID is a fast collision detection algorithm based on oriented bounding-box trees <ref> [9] </ref>. Because it uses a faceted representation of the tools and objects, it often detects collisions between objects that are in contact but do not really intersect.
Reference: [10] <author> S.K. Gupta. </author> <title> Automated Manufacturability Analysis of Machined Parts. </title> <type> PhD thesis, </type> <institution> University of Maryland, College Park, MD, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: The first approach checks for interference between the workpiece and the tool accessibility volume, which is defined as the non-cutting portion of the tool <ref> [10, 19, 8] </ref>. The second approach uses visibility maps [23, 14]; a machining operation for a particular face is selected such that the tool approach direction is inside the visibility region for that face.
Reference: [11] <author> Lydia E. Kavraki, Petr Svestka, Jean-Claude Latombe, and Mark H. Overmars. </author> <title> Probabilistic roadmaps for path planning in high-dimensional configuration spaces. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 12(4) </volume> <pages> 566-580, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Moreover, this computation cannot be amortized, because the C-space changes dramatically when tools and parts are moved. Several path planning algorithms have been developed specifically for assembly planning [1, 18]. Our implementation is based on a group of randomized path planners <ref> [1, 11, 16] </ref>. These algorithms do not require the computation of the C-space; they consist of the following components: a simple potential field method, generation of random via-points, creation of a roadmap graph, and search of the roadmap. For a detailed description of these algorithms refer to [11, 16]. <p> These algorithms do not require the computation of the C-space; they consist of the following components: a simple potential field method, generation of random via-points, creation of a roadmap graph, and search of the roadmap. For a detailed description of these algorithms refer to <ref> [11, 16] </ref>. We have implemented a simple potential field method that is an extension of the method described in [16].
Reference: [12] <author> P Khosla and R Mattikalli. </author> <title> Determining the assembly sequence from a 3-d model. </title> <journal> Journal of Mechanical Working Technology, </journal> <pages> pages 153-162, </pages> <month> Sep </month> <year> 1989. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system. <p> It is the task of the micro planner to determine a feasible application position. Determination of the approach/return path: In most (dis-)assembly sequence planners, it is assumed that parts and tools can be extracted along a straight line from their assembled position to infinity <ref> [21, 12] </ref>. In real world assemblies, part and tool trajectories commonly consist of sequences of translations and rotations along different directions. It is the task of the micro planner to determine this motion sequence. 4.1 Tool application position For symmetric tools and/or parts, there may exist multiple tool application positions.
Reference: [13] <author> Jean-Claude Latombe. </author> <title> Robot motion planning. </title> <publisher> Kluwer Academic Publishers, Norwell, </publisher> <address> MA, </address> <year> 1991. </year>
Reference-contexts: Second, one only computes a path once for each part in the assembly. This means, that one cannot amortize any of the pre-computations required by some of the path planning algorithms (e.g. pre-computation of the configuration space). Over the years, many different path planning algorithms have been developed <ref> [13] </ref>: roadmap methods, cell decomposition methods, potential field methods, etc. Most algorithms require the computation of the configuration space representation of obstacles which is very expensive for a 6-DOF C-space cluttered with obstacles, as in assembly planning.
Reference: [14] <author> Putta Laxmiprasad and Sanjay Sarma. </author> <title> A feature free approach to 5-axis tool path generation. </title> <booktitle> In ASME Design for Manufacturing Conference, </booktitle> <address> Sacremento, CA, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: The first approach checks for interference between the workpiece and the tool accessibility volume, which is defined as the non-cutting portion of the tool [10, 19, 8]. The second approach uses visibility maps <ref> [23, 14] </ref>; a machining operation for a particular face is selected such that the tool approach direction is inside the visibility region for that face. Both approaches have also been applied for coordinate measuring machines, to determine the accessibility of inspection points.
Reference: [15] <author> Joseph Millner, Stephen Graves, and Daniel Whitney. </author> <title> Using simulated annealing to select least-cost assembly sequences. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2058-2063, </pages> <address> San Diego, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [16] <author> Mark. H. Overmars and Petr Svestka. </author> <title> A probabilistic learning approach to motion planning. </title> <booktitle> In Proceedings of the First Workshop on the Alogrithmic Foundations of Robotics, </booktitle> <pages> pages 19-37. </pages> <editor> A. K. Peeters, </editor> <address> Boston, MA, </address> <year> 1994. </year>
Reference-contexts: Moreover, this computation cannot be amortized, because the C-space changes dramatically when tools and parts are moved. Several path planning algorithms have been developed specifically for assembly planning [1, 18]. Our implementation is based on a group of randomized path planners <ref> [1, 11, 16] </ref>. These algorithms do not require the computation of the C-space; they consist of the following components: a simple potential field method, generation of random via-points, creation of a roadmap graph, and search of the roadmap. For a detailed description of these algorithms refer to [11, 16]. <p> These algorithms do not require the computation of the C-space; they consist of the following components: a simple potential field method, generation of random via-points, creation of a roadmap graph, and search of the roadmap. For a detailed description of these algorithms refer to <ref> [11, 16] </ref>. We have implemented a simple potential field method that is an extension of the method described in [16]. <p> For a detailed description of these algorithms refer to [11, 16]. We have implemented a simple potential field method that is an extension of the method described in <ref> [16] </ref>. The method lets the tool make small moves to 36 neighboring positions (6 pure translations, 6 pure rotations, and 24 combined rotations/translations), and ranks these positions according to their distance from the goal position.
Reference: [17] <author> A Sanderson, L Homem de Mello, and H Zhang. </author> <title> Assembly sequence planning. </title> <journal> AI Magazine, </journal> <volume> 11(1) </volume> <pages> 62-81, </pages> <month> Spring </month> <year> 1990. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [18] <author> Achim Schweikard and Fabian Schwarzer. </author> <title> General translational assembly planning. </title> <booktitle> In Proceedings fo the 1997 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 612-619, </pages> <address> Al-buquerque, NM, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: Moreover, this computation cannot be amortized, because the C-space changes dramatically when tools and parts are moved. Several path planning algorithms have been developed specifically for assembly planning <ref> [1, 18] </ref>. Our implementation is based on a group of randomized path planners [1, 11, 16].
Reference: [19] <author> Roger Stage, Mark Henderson, and Chell Roberts. </author> <title> A framework for representing and computing tool accessibility. </title> <booktitle> In ASME Design for Manufacturing Conference, </booktitle> <address> Sacremento, CA, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: The first approach checks for interference between the workpiece and the tool accessibility volume, which is defined as the non-cutting portion of the tool <ref> [10, 19, 8] </ref>. The second approach uses visibility maps [23, 14]; a machining operation for a particular face is selected such that the tool approach direction is inside the visibility region for that face.
Reference: [20] <author> A Swaminathan and K S Barber. Ape: </author> <title> An experience-based assembly sequence planner for mechanical assemblies. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <volume> volume 2, </volume> <pages> pages 1278-1283, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [21] <author> R. Wilson. </author> <title> On Geometric Assembly Planning. </title> <type> PhD thesis, </type> <institution> Dept of Computer Science, Stanford University, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: It is the task of the micro planner to determine a feasible application position. Determination of the approach/return path: In most (dis-)assembly sequence planners, it is assumed that parts and tools can be extracted along a straight line from their assembled position to infinity <ref> [21, 12] </ref>. In real world assemblies, part and tool trajectories commonly consist of sequences of translations and rotations along different directions. It is the task of the micro planner to determine this motion sequence. 4.1 Tool application position For symmetric tools and/or parts, there may exist multiple tool application positions.
Reference: [22] <author> Randall H. Wilson. </author> <title> A framework for geometric reasoning about tools in assembly. </title> <booktitle> In Proceedings of the 1996 International Conference on Robotics and Automation, </booktitle> <pages> pages 1837-1844, </pages> <address> Minneapolis, MN, </address> <year> 1996. </year>
Reference-contexts: Diaz et al. [5] present a method that automatically determines the complexity of an assembly application frame and degree-of-freedom. task based on the tool use. The most detailed work is reported by Wilson <ref> [22] </ref>. Wilson developed a tool representation that includes the tool's use volume, i.e. the minimum space that must be free in an assembly to apply the tool. <p> In real world assemblies, part and tool trajectories commonly consist of sequences of translations and rotations along different directions. It is the task of the micro planner to determine this motion sequence. 4.1 Tool application position For symmetric tools and/or parts, there may exist multiple tool application positions. Wilson <ref> [22] </ref> recognized this and defined the number of DOFs for a tool as the number of independent directions along which a tool can be repositioned while performing a given assembly operation.
Reference: [23] <author> T. Woo. </author> <title> Visiblity maps and spherical algorithms. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 26(1), </volume> <year> 1994. </year>
Reference-contexts: The first approach checks for interference between the workpiece and the tool accessibility volume, which is defined as the non-cutting portion of the tool [10, 19, 8]. The second approach uses visibility maps <ref> [23, 14] </ref>; a machining operation for a particular face is selected such that the tool approach direction is inside the visibility region for that face. Both approaches have also been applied for coordinate measuring machines, to determine the accessibility of inspection points.
Reference: [24] <author> T. C. Woo and D. Dutta. </author> <title> Automatic disassembly and total ordering in three dimensions. </title> <journal> ASME Transactions, Journal for Engineering for Industry, </journal> <volume> 113(2) </volume> <pages> 207-213, </pages> <year> 1991. </year>
Reference-contexts: To create a completely automated assembly planning system both capabilities are necessary. A lot of work has been done in developing macro planners for assembly planning <ref> [6, 7, 3, 2, 12, 17, 24, 15, 20] </ref>, but the area of micro planning is relatively under-explored. Therefore, we have chosen to focus on micro planning. We hope that our work can later be integrated with macro planners to create a complete assembly planning system.
Reference: [25] <author> A. Zilinskas. </author> <title> Optimization of one-dimensional multimodal functions, algorithm AS133. </title> <journal> Applied Statistics, </journal> <volume> 23 </volume> <pages> 367-375, </pages> <year> 1978. </year>
Reference-contexts: Note that the heuristic may introduce multiple local minima, so that a global search method is required. We have chosen the P ? algorithm introduced by Zilinskas <ref> [25] </ref>. P ? combines a one-stage Bayesian algorithm with Brent's local minimization, resulting in smart global coverage and accurate local refinement.
References-found: 25

