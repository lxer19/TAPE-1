URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-96-12.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: fdallas j jorgg@cs.virginia.edu  
Title: A Near-Optimal Packet Scheduler for QoS Networks  
Author: Dallas E. Wrege Jorg Liebeherr 
Keyword: Key Words: Multimedia Networks, Scheduling, Multiplexing, Bounded-Delay Service, Quality-of-Service, Deterministic Service.  
Note: This work is supported in part by the National Science Foundation under Grant No. NCR-9309224.  
Address: Charlottesville, VA 22903  
Affiliation: Department of Computer Science University of Virginia  
Pubnum: Technical Report CS-96-12  
Abstract: A packet scheduler in a quality-of-service (QoS) network should be sophisticated enough to support stringent QoS constraints at high loads, but it must also have a simple implementation so that packets can be processed at the speed of the transmission link. The Earliest-Deadline-First (EDF) scheduler is the optimal scheduler for bounded-delay services in the sense that it provides the tightest delay guarantees of any scheduler, but an implementation of EDF requires the sorting of packets, a complex operation that is not practical for high-speed networks. In this study we present the design, implementation, and analysis of the novel Rotating-Priority-Queues + (RPQ + ) scheduler that is near-optimal in the sense that it can approximate EDF with arbitrary precision. The RPQ + scheduler uses a set of prioritized FIFO queues whose priorities are rearranged (rotated ) periodically to increase the priority of waiting packets. We show that RPQ + has the following desirable properties: its implementation requires operations independent of the number of queued packets, it can provide worst-case delay guarantees, and it is always superior to a Static-Priority (SP) scheduler. For shared-memory architectures, we show that RPQ + can be implemented with little computational overhead. We derive expressions for the worst-case delays in an RPQ + scheduler and demonstrate that the achievable network utilization increases with the frequency of queue rotations, approaching that of EDF in the limit. We use numerical examples, including examples based on MPEG video, to show that in realistic scenarios RPQ + can closely approximate EDF even for infrequent queue rotations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> ForeThough Bandwidth Management Version 1.0, </institution> <month> January </month> <year> 1996. </year> <note> Fore Systems White Paper, Available at http://www.fore.com/pdf files/traffic.pdf. </note>
Reference-contexts: On a per-port or per-connection basis, the output buffer memory consists of either a single shared memory pool or physically separate memory. Most ATM switches use output buffers, and the majority of these are shared-memory buffers <ref> [1, 2, 10] </ref>. We assume that RPQ + operates in switches that have shared-memory output buffers. In such a switch, the FIFO queues of RPQ + can be implemented using linked lists. figure illustrates FIFO queues that are each implemented as a linked list.
Reference: [2] <author> N. Berry. </author> <title> Asynchronous Transfer Mode (ATM) Switch Technology and Vendor Survey. </title> <type> Technical Report NAS-95-001, </type> <institution> National Aeronautics and Space Administration, </institution> <month> January </month> <year> 1995. </year>
Reference-contexts: On a per-port or per-connection basis, the output buffer memory consists of either a single shared memory pool or physically separate memory. Most ATM switches use output buffers, and the majority of these are shared-memory buffers <ref> [1, 2, 10] </ref>. We assume that RPQ + operates in switches that have shared-memory output buffers. In such a switch, the FIFO queues of RPQ + can be implemented using linked lists. figure illustrates FIFO queues that are each implemented as a linked list.
Reference: [3] <author> R. Brown. </author> <title> Calendar Queues: A Fast O(1) Priority Queue Implementation for the Simulation Event Set Problem. </title> <journal> Communications of the ACM, </journal> <volume> 21(10) </volume> <pages> 1220-1227, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: In Sections 3.2 and 3.3 we discuss the priority relabeling architecture [21, 22] and the RPQ scheduler [17], respectively. These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. Instead, they use so-called calendar queues <ref> [3, 15] </ref> that relabel FIFOs periodically to increase the priorities of queued packets. 3.1 Head-of-Line with Priority Jumps (HOL-PJ) Lim and Kobza present in [19] the Head-of-Line with Priority Jumps (HOL-PJ) scheduler.
Reference: [4] <author> C.-S. Chang. </author> <title> Stability, Queue Length, and Delay of Deterministic and Stochastic Queueing Networks. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 39(5) </volume> <pages> 913-931, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: We use the so-called empirical envelope of a video sequence to characterize its traffic, where the empirical envelope E fl of a sequence with traffic A is given by <ref> [4, 25] </ref>: E fl (t) = sup A [t; t + t] 8t 0 (13) The empirical envelope is the tightest traffic characterization available for a video sequence and, when used with admission control, will result in the admission of a maximal number of connections.
Reference: [5] <author> R. L. Cruz. </author> <title> A Calculus for Network Delay, Part I: Network Elements in Isolation. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37(1) </volume> <pages> 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: A traffic constraint function A fl i provides a time-invariant bound on A i as follows <ref> [5] </ref>: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model [7, 13, 16, 18, 20, 25, 27, 29]. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds <p> as follows <ref> [5] </ref>: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model [7, 13, 16, 18, 20, 25, 27, 29]. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24]. The (; ) model uses a burstiness parameter and a rate parameter , and its worst-case traffic is given as follows [5]: A fl 3 Packet Scheduler Schedulability Conditions For all t d 1 : X A fl <p> an example, we consider the traffic constraint function A fl for the (; ) traffic model <ref> [5] </ref> that corresponds with the traffic admitted by a leaky bucket mechanism [24]. The (; ) model uses a burstiness parameter and a rate parameter , and its worst-case traffic is given as follows [5]: A fl 3 Packet Scheduler Schedulability Conditions For all t d 1 : X A fl d j &gt;t j For all p and all t 0, there exists a 0 t d p s min such that: SP t + t q=1 i2C q i (t + t )
Reference: [6] <author> R. L. Cruz. </author> <title> A Calculus for Network Delay, Part II: Network Analysis. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 37(1) </volume> <pages> 132-141, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: In the remainder of the paper we restrict our attention to the delay at a single network switch. The case of multi-hop routes can be addressed by either quantifying the distortion of the worst-case traffic arrivals A fl i at different switches <ref> [6] </ref> or controlling the distortion of the arrivals by reshaping the traffic to conform to A fl i at each switch with so-called traffic shaping mechanisms [28].
Reference: [7] <author> D. Ferrari and D. C. Verma. </author> <title> A Scheme for Real-Time Channel Establishment in Wide-Area Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: In this study, we consider the design of packet schedulers appropriate for use in networks with a bounded-delay service, that is, networks that provide deterministic (i.e., worst-case) delay guarantees to all packets on a connection. Many packet schedulers have been considered for use in bounded-delay services <ref> [7, 8, 13, 15, 29] </ref>. <p> Many packet schedulers have been considered for use in bounded-delay services [7, 8, 13, 15, 29]. The well-known Earliest-Deadline-First (EDF) scheduler has been studied in <ref> [7, 11, 12, 18] </ref> and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler [11, 18]. <p> A client desiring a new connection submits to the network (1) a traffic characterization that specifies the maximum traffic on the connection and (2) the desired delay bound <ref> [7] </ref>. The network uses these specifications in admission control tests to ensure the availability of network resources along the path of the connection. <p> A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
Reference: [8] <author> N. R. Figueira and J. Pasquale. </author> <title> An Upper Bound on Delay for the VirtualClock Service Discipline. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4) </volume> <pages> 399-408, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: In this study, we consider the design of packet schedulers appropriate for use in networks with a bounded-delay service, that is, networks that provide deterministic (i.e., worst-case) delay guarantees to all packets on a connection. Many packet schedulers have been considered for use in bounded-delay services <ref> [7, 8, 13, 15, 29] </ref>.
Reference: [9] <author> D. Le Gall. </author> <title> MPEG: A Video Compression Standard for Multimedia Applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 305-313, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: We note, however, that greater efficiency requires additional computational overhead in terms of added FIFO queues and more frequent rotations. We compare the efficiency of RPQ + against other packet schedulers using empirical examples, including an example based on MPEG-compressed video traces <ref> [9] </ref>. The remainder of this paper is structured as follows. After discussing the framework of a bounded-delay service and related work in Sections 2 and 3, respectively, we describe the RPQ + scheduler in Section 4.
Reference: [10] <author> M. W. Garrett. </author> <title> A Service Architecture for ATM: From Applications to Scheduling. </title> <journal> IEEE Network, </journal> <volume> 10(3) </volume> <pages> 6-14, </pages> <month> May/June </month> <year> 1996. </year>
Reference-contexts: On a per-port or per-connection basis, the output buffer memory consists of either a single shared memory pool or physically separate memory. Most ATM switches use output buffers, and the majority of these are shared-memory buffers <ref> [1, 2, 10] </ref>. We assume that RPQ + operates in switches that have shared-memory output buffers. In such a switch, the FIFO queues of RPQ + can be implemented using linked lists. figure illustrates FIFO queues that are each implemented as a linked list.
Reference: [11] <author> L. Georgiadis, R. Guerin, and A. Parekh. </author> <title> Optimal Multiplexing on a Single Link: Delay and Buffer Requirements. </title> <booktitle> In Proc. IEEE Infocom '94, </booktitle> <pages> pages 524-532, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Many packet schedulers have been considered for use in bounded-delay services [7, 8, 13, 15, 29]. The well-known Earliest-Deadline-First (EDF) scheduler has been studied in <ref> [7, 11, 12, 18] </ref> and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler [11, 18]. <p> The well-known Earliest-Deadline-First (EDF) scheduler has been studied in [7, 11, 12, 18] and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler <ref> [11, 18] </ref>. Each packet arriving to an EDF scheduler is assigned a deadline equal to the sum of its arrival time and associated delay bound, and queued packets are transmitted in increasing order of deadline.
Reference: [12] <author> L. Georgiadis, R. Guerin, V. Peris, and K. N. Sivarajan. </author> <title> Efficient Network QoS Provisioning Based on per Node Traffic Shaping. </title> <booktitle> In Proc. IEEE Infocom '96, </booktitle> <pages> pages 102-110, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Many packet schedulers have been considered for use in bounded-delay services [7, 8, 13, 15, 29]. The well-known Earliest-Deadline-First (EDF) scheduler has been studied in <ref> [7, 11, 12, 18] </ref> and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler [11, 18].
Reference: [13] <author> S. J. Golestani. </author> <title> A Framing Strategy for Congestion Management. </title> <journal> IEEE Journal on Selected Areas In Communications, </journal> <volume> 9(7) </volume> <pages> 1064-1077, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: In this study, we consider the design of packet schedulers appropriate for use in networks with a bounded-delay service, that is, networks that provide deterministic (i.e., worst-case) delay guarantees to all packets on a connection. Many packet schedulers have been considered for use in bounded-delay services <ref> [7, 8, 13, 15, 29] </ref>. <p> A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
Reference: [14] <author> J. M. Hyman, A. A. Lazar, and G. Pacifici. </author> <title> Real-Time Scheduling with Quality of Service Constraints. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 9(7) </volume> <pages> 1052-1063, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: + , the conditions from Table 1 for EDF and SP, and the condition in equation (3) for RPQ. 7.1 Numerical Example In the first experiment we compute the schedulable region of the packet schedulers for a set of three connection groups using an approach similar to one used in <ref> [14, 18] </ref>. We vary the traffic rate of each connection group and use a surface plot to illustrate the rates for which all delay bounds are guaranteed. We can compare the efficiencies of different packet schedulers graphically by comparing the volumes of their schedulable regions.
Reference: [15] <author> C. R. Kalmanek, H. Kanakia, and S. Keshav. </author> <title> Rate Controlled Servers for Very High-Speed Networks. </title> <booktitle> In Proc. Globecom '90, </booktitle> <pages> pages 12-20, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: In this study, we consider the design of packet schedulers appropriate for use in networks with a bounded-delay service, that is, networks that provide deterministic (i.e., worst-case) delay guarantees to all packets on a connection. Many packet schedulers have been considered for use in bounded-delay services <ref> [7, 8, 13, 15, 29] </ref>. <p> In Sections 3.2 and 3.3 we discuss the priority relabeling architecture [21, 22] and the RPQ scheduler [17], respectively. These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. Instead, they use so-called calendar queues <ref> [3, 15] </ref> that relabel FIFOs periodically to increase the priorities of queued packets. 3.1 Head-of-Line with Priority Jumps (HOL-PJ) Lim and Kobza present in [19] the Head-of-Line with Priority Jumps (HOL-PJ) scheduler.
Reference: [16] <author> E. Knightly and H. Zhang. </author> <title> Traffic Characterization and Switch Utilization Using Deterministic Bounding Interval Dependent Traffic Models. </title> <booktitle> In Proc. IEEE Infocom '95, </booktitle> <pages> pages 1137-1145, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
Reference: [17] <author> J. Liebeherr and D. E. Wrege. </author> <title> A Versatile Packet Multiplexer for Quality-of-Service Networks. </title> <booktitle> In Proc. 4th International Symposium on High-Performance Distributed Computing (HPDC-4), </booktitle> <pages> pages 148-155, </pages> <month> August </month> <year> 1995. </year> <month> 23 </month>
Reference-contexts: max p to denote the maximum transmission time of any packet from a connection in set C p , while we use s min to denote the minimum packet transmission time of any packet. 3 Related Work Recently, several packet schedulers have been considered that approximate EDF with simple implementations <ref> [17, 19, 21, 22] </ref>. Recall that the main drawback of implementing an EDF scheduler 4 is the sorting operation needed to order packets according to their deadlines. <p> At high transmission rates the number of queued packets can be large and the overhead of EDF scheduling can be prohibitive. The approaches in <ref> [17, 19, 21, 22] </ref> avoid the sorting operation using a similar set of mechanisms. First, all schedulers employ a set of prioritized FIFO queues. Second, each FIFO contains only packets with laxities in a certain range, where the laxity of a packet is the time remaining before its deadline. <p> In Sections 3.2 and 3.3 we discuss the priority relabeling architecture [21, 22] and the RPQ scheduler <ref> [17] </ref>, respectively. These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. <p> Note also that the priority relabeling architecture is not appropriate for bounded-delay services since schedulability conditions are not available and the scheduler may prematurely drop packets in FIFO 1 that have not violated their deadlines. 3.3 Rotating-Priority-Queues The Rotating-Priority-Queues (RPQ) scheduler presented in <ref> [17] </ref> is an approximation of EDF designed to be used with physically separated FIFO buffers that does not require a shared memory. RPQ is similar to the priority relabeling architecture described above in that it supports P delay bounds of the form d p = p.
Reference: [18] <author> J. Liebeherr, D. E. Wrege, and Domenico Ferrari. </author> <title> Exact Admission Control in Networks with Bounded Delay Services. To appear: </title> <journal> IEEE/ACM Transactions on Networking. </journal>
Reference-contexts: Many packet schedulers have been considered for use in bounded-delay services [7, 8, 13, 15, 29]. The well-known Earliest-Deadline-First (EDF) scheduler has been studied in <ref> [7, 11, 12, 18] </ref> and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler [11, 18]. <p> The well-known Earliest-Deadline-First (EDF) scheduler has been studied in [7, 11, 12, 18] and is distinguished in that it has optimal efficiency : for a given set of connections, EDF can support delay guarantees that are at least as tight as those provided by any other packet scheduler <ref> [11, 18] </ref>. Each packet arriving to an EDF scheduler is assigned a deadline equal to the sum of its arrival time and associated delay bound, and queued packets are transmitted in increasing order of deadline. <p> A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24]. <p> The conditions which determine if a set of connections is schedulable, called schedulability conditions, constitute the admission control test in bounded-delay services. Table 1 shows necessary and sufficient schedulability conditions for the EDF and SP packet schedulers that are derived in <ref> [18] </ref>. In the EDF condition we use s max j to denote the maximum transmission time of a packet from connection j. <p> FIFO 0 is included to hold packets from FIFO 1 that have not violated their deadlines at the time of a queue rotation. Arriving packets are never inserted directly into FIFO 0. In <ref> [18] </ref> necessary and sufficient schedulability conditions are derived for RPQ that guarantee the transmission of all packets before their deadlines, and we next state these conditions. Let s max p denote the maximum transmission time of a packet from C p . <p> Let s max p denote the maximum transmission time of a packet from C p . All packets from a set of connections C will be transmitted prior to their deadlines if and only if the following condition holds for all t d 1 <ref> [18] </ref>: X A fl P X X A fl d q &gt;t q (3) A comparison of the condition for RPQ in equation (3) with the EDF condition in Table 1 shows that RPQ can approximate EDF with arbitrary precision if is selected sufficiently small. <p> Note that the schedulability conditions guarantee that FIFO 0 is empty at queue rotations. Reducing should result in higher efficiency at the expense of higher overhead costs due to more frequent priority relabeling. However, the efficiency of RPQ may be lower than SP for some choices of . In <ref> [18] </ref> we presented the following pathological example where RPQ cannot admit connections that are admissible by both EDF and SP. <p> + , the conditions from Table 1 for EDF and SP, and the condition in equation (3) for RPQ. 7.1 Numerical Example In the first experiment we compute the schedulable region of the packet schedulers for a set of three connection groups using an approach similar to one used in <ref> [14, 18] </ref>. We vary the traffic rate of each connection group and use a surface plot to illustrate the rates for which all delay bounds are guaranteed. We can compare the efficiencies of different packet schedulers graphically by comparing the volumes of their schedulable regions.
Reference: [19] <author> Y. Lim and J. E. Kobza. </author> <title> Analysis of a Delay-Dependent Priority Discipline in an Integrated Multiclass Traffic Fast Packet Switch. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 38(5) </volume> <pages> 659-665, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: max p to denote the maximum transmission time of any packet from a connection in set C p , while we use s min to denote the minimum packet transmission time of any packet. 3 Related Work Recently, several packet schedulers have been considered that approximate EDF with simple implementations <ref> [17, 19, 21, 22] </ref>. Recall that the main drawback of implementing an EDF scheduler 4 is the sorting operation needed to order packets according to their deadlines. <p> At high transmission rates the number of queued packets can be large and the overhead of EDF scheduling can be prohibitive. The approaches in <ref> [17, 19, 21, 22] </ref> avoid the sorting operation using a similar set of mechanisms. First, all schedulers employ a set of prioritized FIFO queues. Second, each FIFO contains only packets with laxities in a certain range, where the laxity of a packet is the time remaining before its deadline. <p> Finally, all schedulers partition the set of connections C into P connection sets fC p g 1pP where all connections in C p have the identical delay bound d p . We first review in Section 3.1 the HOL-PJ scheduler presented in <ref> [19, 22] </ref> that inserts a packet into a FIFO based on its deadline and subsequently moves individual packets to higher-priority FIFOs as dictated by their laxities. In Sections 3.2 and 3.3 we discuss the priority relabeling architecture [21, 22] and the RPQ scheduler [17], respectively. <p> These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. Instead, they use so-called calendar queues [3, 15] that relabel FIFOs periodically to increase the priorities of queued packets. 3.1 Head-of-Line with Priority Jumps (HOL-PJ) Lim and Kobza present in <ref> [19] </ref> the Head-of-Line with Priority Jumps (HOL-PJ) scheduler. HOL-PJ maintains P FIFO queues labeled FIFO 1, FIFO 2, : : :, FIFO P , and FIFO q has associated laxity range [d q1 ; d q ] with d 0 = 0.
Reference: [20] <author> A. K. Parekh and R. G. Gallager. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: The Multiple Node Case. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2(2) </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
Reference: [21] <author> J. M. Peha. </author> <title> Scheduling and Dropping Algorithms to Support Integrated Services in Packet-Switched Networks. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: max p to denote the maximum transmission time of any packet from a connection in set C p , while we use s min to denote the minimum packet transmission time of any packet. 3 Related Work Recently, several packet schedulers have been considered that approximate EDF with simple implementations <ref> [17, 19, 21, 22] </ref>. Recall that the main drawback of implementing an EDF scheduler 4 is the sorting operation needed to order packets according to their deadlines. <p> At high transmission rates the number of queued packets can be large and the overhead of EDF scheduling can be prohibitive. The approaches in <ref> [17, 19, 21, 22] </ref> avoid the sorting operation using a similar set of mechanisms. First, all schedulers employ a set of prioritized FIFO queues. Second, each FIFO contains only packets with laxities in a certain range, where the laxity of a packet is the time remaining before its deadline. <p> We first review in Section 3.1 the HOL-PJ scheduler presented in [19, 22] that inserts a packet into a FIFO based on its deadline and subsequently moves individual packets to higher-priority FIFOs as dictated by their laxities. In Sections 3.2 and 3.3 we discuss the priority relabeling architecture <ref> [21, 22] </ref> and the RPQ scheduler [17], respectively. These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. <p> Note that the copying of packets can be avoided in shared-memory switches in which FIFO queues are implemented as linked lists. 3.2 Priority Relabeling Architecture In the priority relabeling architecture presented by Peha and Tobagi <ref> [21, 22] </ref>, supported delay bounds are of the form d p = p for 1 p P , where is a parameter of the scheduler. The maximum delay bound supported by the priority relabeling architecture is P .
Reference: [22] <author> J. M. Peha and F. A. Tobagi. </author> <title> Implementation Strategies for Scheduling Algorithms in Integrated-Services Packet-Switched Networks. </title> <booktitle> In Proc. IEEE Globecom '91, </booktitle> <pages> pages 1733-1740, </pages> <year> 1991. </year>
Reference-contexts: max p to denote the maximum transmission time of any packet from a connection in set C p , while we use s min to denote the minimum packet transmission time of any packet. 3 Related Work Recently, several packet schedulers have been considered that approximate EDF with simple implementations <ref> [17, 19, 21, 22] </ref>. Recall that the main drawback of implementing an EDF scheduler 4 is the sorting operation needed to order packets according to their deadlines. <p> At high transmission rates the number of queued packets can be large and the overhead of EDF scheduling can be prohibitive. The approaches in <ref> [17, 19, 21, 22] </ref> avoid the sorting operation using a similar set of mechanisms. First, all schedulers employ a set of prioritized FIFO queues. Second, each FIFO contains only packets with laxities in a certain range, where the laxity of a packet is the time remaining before its deadline. <p> Finally, all schedulers partition the set of connections C into P connection sets fC p g 1pP where all connections in C p have the identical delay bound d p . We first review in Section 3.1 the HOL-PJ scheduler presented in <ref> [19, 22] </ref> that inserts a packet into a FIFO based on its deadline and subsequently moves individual packets to higher-priority FIFOs as dictated by their laxities. In Sections 3.2 and 3.3 we discuss the priority relabeling architecture [21, 22] and the RPQ scheduler [17], respectively. <p> We first review in Section 3.1 the HOL-PJ scheduler presented in [19, 22] that inserts a packet into a FIFO based on its deadline and subsequently moves individual packets to higher-priority FIFOs as dictated by their laxities. In Sections 3.2 and 3.3 we discuss the priority relabeling architecture <ref> [21, 22] </ref> and the RPQ scheduler [17], respectively. These packet schedulers are distinct from the first approach in that they do not move individual packets between queues. <p> The timer for FIFO q expires when the first packet in FIFO q violates the laxity of this queue. Then the packet is dequeued and inserted into FIFO (q 1). A generalization of HOL-PJ called the recirculation architecture is presented in <ref> [22] </ref>. Note that HOL-PJ is an exact implementation of EDF. HOL-PJ has advantages over straightforward implementations of EDF with a single transmission queue in that inserting and removing packets can be performed independent of the number of queued packets. <p> Note that the copying of packets can be avoided in shared-memory switches in which FIFO queues are implemented as linked lists. 3.2 Priority Relabeling Architecture In the priority relabeling architecture presented by Peha and Tobagi <ref> [21, 22] </ref>, supported delay bounds are of the form d p = p for 1 p P , where is a parameter of the scheduler. The maximum delay bound supported by the priority relabeling architecture is P . <p> Packets that reside in FIFO 1 during such a relabeling are considered as a special case; either (1) all packets in FIFO 1 are dropped, or (2) FIFO 1 and FIFO 2 are concatenated to form the new FIFO 1. Although <ref> [22] </ref> recommends the former choice, i.e., dropping packets in FIFO 1, for services in which late packets are to be dropped, observe that the scheduler may drop packets that have not violated their deadlines. <p> As compared to HOL-PJ, the priority relabeling architecture has a much simpler implementation since it requires only a single timer and does not require the movement of queued packets. The relabeling of FIFOs can be accomplished by simply altering an offset in the priority selector <ref> [22] </ref>, and the additional implementation overhead as compared to an SP scheduler is in the relabeling of priorities. To avoid copying packets during the concatenation of FIFO 1 and FIFO 2, the FIFOs must implemented as linked lists in shared memory.
Reference: [23] <author> O. Rose. </author> <title> Statistical properties of MPEG video traffic and their impact on traffic modeling in ATM systems. </title> <type> Technical Report 101, </type> <institution> Institute of Computer Science, University of Wurzburg, </institution> <month> February </month> <year> 1995. </year> <note> The traces used in this paper are available via anonymous ftp from the site ftp-info3.informatik.uni-wuerzburg.de in the directory /pub/MPEG/. </note>
Reference-contexts: rotation interval , and V 1 , i.e., the volume of the schedulability region as shown in Figure 5 (a). example the RPQ scheduler achieves an efficiency superior to SP only for 4ms. 7.2 MPEG Example In this experiment all traffic characterizations are obtained from publicly-available traces of MPEG video <ref> [23] </ref>. We use two MPEG traces for the evaluation: a thirty-minute segment of the James Bond entertainment movie Goldfinger ("Bond") and 200 seconds of a video conference recorded using a set top camera ("Settop").
Reference: [24] <author> J. S. Turner. </author> <title> New Directions in Communications (or Which Way to the Information Age?). </title> <journal> IEEE Communications Magazine, </journal> <volume> 25(8) </volume> <pages> 8-15, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism <ref> [24] </ref>.
Reference: [25] <author> D. E. Wrege, E. W. Knightly, H. Zhang, and J. Liebeherr. </author> <title> Deterministic Delay Bounds for VBR Video in Packet-Switching Networks: Fundamental Limits and Practical Tradeoffs. To appear: </title> <journal> IEEE/ACM Transactions on Networking, </journal> <month> June </month> <year> 1996. </year>
Reference-contexts: A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24]. <p> We use the so-called empirical envelope of a video sequence to characterize its traffic, where the empirical envelope E fl of a sequence with traffic A is given by <ref> [4, 25] </ref>: E fl (t) = sup A [t; t + t] 8t 0 (13) The empirical envelope is the tightest traffic characterization available for a video sequence and, when used with admission control, will result in the admission of a maximal number of connections.
Reference: [26] <author> D. E. Wrege and J. Liebeherr. </author> <title> RPQ + : a Packet Scheduler for Shared-Memory Architectures. </title> <type> Technical Report CS-96-10, </type> <institution> University of Virginia, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: A complete proof of the theorem is provided in <ref> [26] </ref>. Proof Idea for Sufficiency of Theorem 1: Assuming that the inequality in equation (9) holds for all times t 0, we must show that an arbitrary packet from connection j 2 C p arriving at time t does not violate its deadline. <p> A complete proof is given in <ref> [26] </ref>. Proof Idea: We prove Lemma 1 by contradiction. We assume that equation (11) is violated for some priority p and time t for all 0 t d p s min .
Reference: [27] <author> D. E. Wrege and J. Liebeherr. </author> <title> Video Traffic Characterization for Multimedia Networks with a Deterministic Service. </title> <booktitle> In Proc. IEEE Infocom '96, </booktitle> <pages> pages 537-544, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
Reference: [28] <author> H. Zhang. </author> <title> Providing End-to-End Performance Guarantees Using Non-Work-Conserving Disciplines. </title> <note> To appear: Computer Communications: Special Issue on System Support for Multimedia Computing. </note>
Reference-contexts: The case of multi-hop routes can be addressed by either quantifying the distortion of the worst-case traffic arrivals A fl i at different switches [6] or controlling the distortion of the arrivals by reshaping the traffic to conform to A fl i at each switch with so-called traffic shaping mechanisms <ref> [28] </ref>.
Reference: [29] <author> H. Zhang and D. Ferrari. </author> <title> Rate-Controlled Static-Priority Queueing. </title> <booktitle> In Proc. IEEE Infocom '93, </booktitle> <pages> pages 227-236, </pages> <month> April </month> <year> 1993. </year> <month> 24 </month>
Reference-contexts: In this study, we consider the design of packet schedulers appropriate for use in networks with a bounded-delay service, that is, networks that provide deterministic (i.e., worst-case) delay guarantees to all packets on a connection. Many packet schedulers have been considered for use in bounded-delay services <ref> [7, 8, 13, 15, 29] </ref>. <p> A traffic constraint function A fl i provides a time-invariant bound on A i as follows [5]: A fl In practice, traffic constraint functions for a connection are expressed with a small number of parameters using a traffic model <ref> [7, 13, 16, 18, 20, 25, 27, 29] </ref>. As an example, we consider the traffic constraint function A fl for the (; ) traffic model [5] that corresponds with the traffic admitted by a leaky bucket mechanism [24].
References-found: 29

