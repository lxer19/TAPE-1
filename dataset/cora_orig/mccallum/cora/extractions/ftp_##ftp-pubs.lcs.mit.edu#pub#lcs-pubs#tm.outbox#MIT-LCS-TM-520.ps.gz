URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/tm.outbox/MIT-LCS-TM-520.ps.gz
Refering-URL: ftp://ftp-pubs.lcs.mit.edu/pub/lcs-pubs/listings/catatm.html
Root-URL: 
Title: Symmetric Alternation Captures BPP 2 Symmetric alternation is shown to enjoy two strong structural properties
Author: Alexander Russell Ravi Sundaram 
Keyword: oracle queries.  
Note: 2 improving the constructions of [10, 8] (which show that BPP P 2 P  2 6= P 2 by demonstrating an oracle so that  2 assuming that the machines make only  
Address: Cambridge, MA 02139  S P;O 2 6= P;O  
Affiliation: Department of Mathematics  Laboratory for Computer Science Massachusetts Institute of Technology  
Date: November 14, 1995  
Web: "positive"  
Abstract: We introduce the natural class S P 2 containing those languages which may be expressed in terms of two symmetric quantifiers. This class lies between P 2 and P 2 " P 2 and naturally generates a "symmetric" hierarchy corresponding to the polynomial-time hierarchy. We demonstrate, using the probabilistic method, new containment theorems for BPP. We show that MA (and hence BPP) lies within S P containment results. We offer some evidence that S P 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Deterministic simulation in logspace. </title> <booktitle> In Proceedings of the Nineteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 132-140, </pages> <year> 1987. </year>
Reference: [2] <author> N. Alon and J. H. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1992. </year>
Reference: [3] <author> T. P. Baker and A. L. Selman. </author> <title> A second step toward the polynomial hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 8 </volume> <pages> 177-187, </pages> <year> 1979. </year> <month> 8 </month>
Reference-contexts: In x3 we construct an oracle which separates S P 2 from P 2 " P 2 under the assumption that the machines involved are monotone. The framework we develop to build this oracle can be used to simplify the construction given by <ref> [3] </ref> of an oracle separating P 2 and P 2 Definitions and Containment Results is used to denote the alphabet and may be assumed to be f0; 1g without loss of generality. Throughout, the variable n denotes jwj, the length of the input in question.
Reference: [4] <author> U. Feige, A. Shamir, and M. Tennenholtz. </author> <title> The noisy oracle problem. </title> <booktitle> In Proceedings of CRYPTO 1988, </booktitle> <pages> pages 284-296, </pages> <year> 1988. </year>
Reference-contexts: We were able to show that BPP S P 2 using a clever twist of Lautemann's proof [8]. The original motivation for defining and studying the notion of symmetric alternation was a question posed by Uriel Feige. <ref> [4] </ref> and [5] study situations, in an interactive setting, where the provers do not have complete access to each other's strategies. As a step towards characterizing the class of languages accepted by such interactive proof systems we, in this paper, decided to formalize and study the associated non-interactive version.
Reference: [5] <author> J. Feigenbaum, D. Koller, and P. Shor, </author> <month> November </month> <year> 1994. </year> <type> Unpublished Manuscript. </type>
Reference-contexts: We were able to show that BPP S P 2 using a clever twist of Lautemann's proof [8]. The original motivation for defining and studying the notion of symmetric alternation was a question posed by Uriel Feige. [4] and <ref> [5] </ref> study situations, in an interactive setting, where the provers do not have complete access to each other's strategies. As a step towards characterizing the class of languages accepted by such interactive proof systems we, in this paper, decided to formalize and study the associated non-interactive version.
Reference: [6] <author> J. E. Hopcroft and J. D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley Series in Computer Science. Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1979. </year>
Reference-contexts: A computation suggestion of D S (w) consists of a sequence of pairs (d i ; a i ) for i = 1; : : : ; t so that * each d i is an instantaneous description (see <ref> [6] </ref>) of D S , * d 1 is the initial instantaneous description of D S (w), * d t is a final instantaneous description of D S , * if d i does not find D S in its query state, then d i ` D d i+1 , *
Reference: [7] <author> R. Impagliazzo, L. A. Levin, and M. Luby. </author> <title> Pseudo-random generation from one-way functions. </title> <booktitle> In Proceedings of the Twenty-First Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 12-24, </pages> <address> Seattle, Washington, </address> <month> May </month> <year> 1989. </year>
Reference: [8] <author> C. Lautemann. </author> <title> BPP and the polynomial hierarchy. </title> <journal> Information Processing Letters, </journal> <volume> 17 </volume> <pages> 215-217, </pages> <year> 1983. </year>
Reference-contexts: w 62 L, then 8 q (n) x; T (w; x; w ) rejects, as desired. 2 Corollary 2.7 P 2 = P NP P S P 2 S P Corollary 2.8 P k+1 S P The proof of Theorem 2.9 below is a generalization of the argument of Lautemann <ref> [8] </ref>. Theorem 2.9 S 2 BP P S 2 P. Proof: Let L 2 S 2 BP P. <p> For a set B let (B) denote the measure of the set. Then 8y; (W y ) 1 2 q (n)n so that (W) 1 2 n . As in <ref> [8] </ref>, we demonstrate that there exists a set f def elements of r (n) so that for every t 2 r (n) , there is some i so that i t 2 W ( stands for the binary operator that returns the bitwise XOR of the operands). <p> We observed certain structural properties of the S 2 operator which allowed us to prove some interesting containment results. We were able to show that BPP S P 2 using a clever twist of Lautemann's proof <ref> [8] </ref>. The original motivation for defining and studying the notion of symmetric alternation was a question posed by Uriel Feige. [4] and [5] study situations, in an interactive setting, where the provers do not have complete access to each other's strategies.
Reference: [9] <author> N. Nisan and D. Zuckerman. </author> <title> More deterministic simulation in logspace. </title> <booktitle> In Proceedings of the Twenty-Fifth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 235-244, </pages> <year> 1993. </year>
Reference: [10] <author> M. Sipser. </author> <title> A complexity theoretic approach to randomness. </title> <booktitle> In Proceedings of the Fifteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 330-335, </pages> <year> 1983. </year>
Reference-contexts: Supported by grants NSF 92-12184, AFOSR F49620-92 J-0125, and DARPA N00014-92-J-1799 1 less tractable: the only (non-trivial) relationships depend on unproven complexity-theoretic assumptions ([7, 12]). We continue the study initiated by Sipser <ref> [10] </ref> of the relationship between randomness and quantification, that is, the relationship between BPP and classes arising by appropriate quantification of polynomial-time predicates (e.g. NP, coNP and other classes in the polynomial-time hierarchy [11]). BPP was first shown to lie in the polynomial-time hierarchy in [10] which demonstrates that BPP P <p> the study initiated by Sipser <ref> [10] </ref> of the relationship between randomness and quantification, that is, the relationship between BPP and classes arising by appropriate quantification of polynomial-time predicates (e.g. NP, coNP and other classes in the polynomial-time hierarchy [11]). BPP was first shown to lie in the polynomial-time hierarchy in [10] which demonstrates that BPP P 2 (and hence that BPP P 2 " P 2 ).
Reference: [11] <author> L. J. Stockmeyer. </author> <title> The polynomial time hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1976. </year>
Reference-contexts: We continue the study initiated by Sipser [10] of the relationship between randomness and quantification, that is, the relationship between BPP and classes arising by appropriate quantification of polynomial-time predicates (e.g. NP, coNP and other classes in the polynomial-time hierarchy <ref> [11] </ref>). BPP was first shown to lie in the polynomial-time hierarchy in [10] which demonstrates that BPP P 2 (and hence that BPP P 2 " P 2 ).
Reference: [12] <author> A. C. Yao. </author> <title> Theory and applications of trapdoor functions. </title> <booktitle> In 23 rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 80-91. </pages> <publisher> IEEE, </publisher> <year> 1982. </year> <month> 9 </month>
References-found: 12

