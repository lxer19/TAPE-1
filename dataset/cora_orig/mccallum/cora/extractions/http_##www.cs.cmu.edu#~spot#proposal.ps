URL: http://www.cs.cmu.edu/~spot/proposal.ps
Refering-URL: http://www.cs.cmu.edu/~spot/nitrous/top.html
Root-URL: 
Email: spot@cs.cmu.edu  
Title: Lightweight Languages for Interactive Graphics  
Author: Scott Draves 
Note: 1.2 Contents Contents  
Date: June 1, 1995 1 Top  
Abstract: 1.1 Abstract Run time code generation (RTCG) and traditional compilation are two ends of the same underlying optimization: factoring computations out of repeated procedure calls. Self-applicable partial evaluation (PE) is a semantics-based program transformation traditionally used for automatic compiler generation (co-gen). Recently, PE has also been applied to RTCG. My approach to RTCG is to implement a composable cogen for a compiler intermediate representation. My thesis is that this approach to optimizing programs can be particularly useful for interactive graphics toolkits. I intend to demonstrate this by implementing a compiler generator tuned for RTCG, and showing how it can be used to build software that is highly abstract and yet still as fast as less general programs. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> BoDu93 Handwriting Cogen for a CPS-Based Partial Evaluator; Anders Bondorf, </editor> <title> Dirk Dussart; ????93. CAM Cellular Automata Machines; Toffoli, </title> <publisher> Margolus; MIT Press. </publisher> <editor> ISBN 0-262-20060-0. </editor> <title> ChaBleFi91 Size and Access Inference for Data-Parallel Programs. Siddhartha Chatterjee, Guy E Blel-loch, Allan L Fisher. SIGPLAN91. Chez Cadence Research Systems; Bloomington Indiana; Chez Scheme. related paper by the same author. local. </title>

Reference: <author> WiKa91 Reaction-Diffusion Textures; Andrew Witkin, Michael Kass; SIGGRAPH91. </author> <title> WoLa91 A Data Locality Optimizing Algorithm. </title> <editor> Michael Wolf, Monica Lam. </editor> <booktitle> SIGPLAN91. </booktitle>

References-found: 2

