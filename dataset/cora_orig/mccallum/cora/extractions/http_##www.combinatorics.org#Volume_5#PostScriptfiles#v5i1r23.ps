URL: http://www.combinatorics.org/Volume_5/PostScriptfiles/v5i1r23.ps
Refering-URL: http://www.combinatorics.org/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Note on the Asymptotics and Computational Complexity of Graph Distinguishability  
Author: Alexander Russell Ravi Sundaram koods@delta-global.com 
Keyword: f6=id  
Note: 8f 2 Aut(G) n fidg;9v;c(v) 6= c(f(v)):  There has been considerable interest in the computational complexity of the d-distinguishability problem. Specifically, there has been much musing on the computational complexity of the language f(G; d) G is d-distinguishableg  
Address: Austin, TX 78712  141 Tremont Street, 12th Floor Boston, MA 02111  
Affiliation: Department of Computer Science University of Texas at Austin  Delta Global Trading  
Email: acr@cs.utexas.edu  
Date: Submitted: February 2, 1998; Accepted: March 24, 1998  
Abstract: It was conjectured that if jGj &gt; jAut(G)j and the Aut(G) action on G has no singleton orbits, then G is 2-distinguishable. We give an example where this fails. We partially repair the conjecture by showing that when enough motion occurs, the distinguishing number does indeed decay. Specifically, defining we show that when m(G) &gt; 2 log 2 jAut(G)j, G is indeed 2-distinguishable. In general, we show that if m(G) ln d &gt; 2 ln jAut(G)j then G is d-distinguishable. We show that this language lies in AM S P 2 " P P 2 . We use this to conclude that if DIST is CONP-hard then the polynomial hierarchy collapses. AMS Classification: Primary: 05C25; Secondary: 68Q15. m(G) = min
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Michael O. Albertson and Karen L. Collins. </author> <title> Symmetry breaking in graphs. </title> <journal> Electronic Journal of Combinatorics, </journal> <volume> 3, </volume> <year> 1996. </year> <month> R18. </month>
Reference-contexts: Every graph G is then jGj-distinguishable and a graph is 1-distinguishable exactly when it is rigid, i.e. jAut (G)j = 1. The smallest d for which G is d-distinguishable is dubbed the distinguishing number of G, denoted d (G). An instantiation of this machinery, mentioned in <ref> [1] </ref>, is the problem of coloring keys on a (circular) key chain so that one can uniquely identify each key. (In this case, one is interested in the distinguishing number of the dihedral groups.) A paper of Albertson and Collins [1] gracefully develops the theory of distinguishability in several directions. <p> An instantiation of this machinery, mentioned in <ref> [1] </ref>, is the problem of coloring keys on a (circular) key chain so that one can uniquely identify each key. (In this case, one is interested in the distinguishing number of the dihedral groups.) A paper of Albertson and Collins [1] gracefully develops the theory of distinguishability in several directions. They conjectured that if jGj &gt; jAut (G)j and the action of Aut (G) on G has no singleton orbits, then d (G) = 2. <p> More generally, when m (G) ln d &gt; 2 ln jAut (G)j, G is d-distinguishable. Another natural question is that of the computational complexity of the graph distinguishability problem (see the discussion in <ref> [1] </ref>). Specifically, one would like to place the language DIST = f (G; d) : d (G) dg ; as low in the natural hierarchy of complexity classes as possible. <p> It is interesting to notice that the above theorem is actually tight in the case of the dihedral groups D 3 ; D 4 ; : : : mentioned in the introduction (and in <ref> [1] </ref>). (The answers are d (D 3 ) = 3; d (D 4 ) = 4; d (D 5 ) = 2; d (D 6 ) = 2; : : : .) THE ELECTRONIC JOURNAL OF COMBINATORICS 5 (1998), #R23 4 3 DIST 2 AM Though we will discuss the definition
Reference: [2] <author> Noga Alon and Joel H. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1992. </year>
Reference-contexts: For a delightful survey of the probabilistic method, of which the above is an example, see <ref> [2] </ref>.
Reference: [3] <author> Laszlo Babai and Shlomo Moran. </author> <title> Arthur-merlin games: a randomized proof system, and a hierarchy of complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36(2):254276, </volume> <year> 1988. </year>
Reference-contexts: Our goal here is to show that DIST 2 AM S P 2 " P P AM is the class of languages for which there are ArthurMerlin games (see <ref> [3] </ref>). Intu itively, an ArthurMerlin game for a language L is played by two players, Arthur, equipped with a random coin and only modest (polynomial-time bounded) computing power and Merlin, who is computationally unbounded.
Reference: [4] <author> Jose Luis Balcazar, Josep D iaz, and Joaquim Gabarro. </author> <title> Structural Complexity I, </title> <booktitle> volume 11 of EATCS Monographs on Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: : .) THE ELECTRONIC JOURNAL OF COMBINATORICS 5 (1998), #R23 4 3 DIST 2 AM Though we will discuss the definition of AM in some detail, for a general introduction to complexity theory and detailed discussions of the polynomial time hierarchy and AM, we refer the reader to [9] and <ref> [4, 5] </ref>. The polynomial time hierarchy is the polynomial time bounded variant of the Kleene hierarchy of recursive function theory.
Reference: [5] <author> Jose Luis Balcazar, Josep D iaz, and Joaquim Gabarro. </author> <title> Structural Complexity II, </title> <booktitle> volume 22 of EATCS Monographs on Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: : .) THE ELECTRONIC JOURNAL OF COMBINATORICS 5 (1998), #R23 4 3 DIST 2 AM Though we will discuss the definition of AM in some detail, for a general introduction to complexity theory and detailed discussions of the polynomial time hierarchy and AM, we refer the reader to [9] and <ref> [4, 5] </ref>. The polynomial time hierarchy is the polynomial time bounded variant of the Kleene hierarchy of recursive function theory.
Reference: [6] <author> Ravi Boppana, Johan Hastad, and Stathis Zachos. </author> <title> Does co-NP have short interactive proofs? Information Processing Letters, </title> <address> 25:127132, </address> <year> 1981. </year>
Reference-contexts: One naturally wonders at the relationship of DIST to more familiar classes such as NP and CONP. In this direction, applying the machinery of <ref> [6] </ref>, we can argue that it is unlikely that DIST is CONP-hard. Specifically, from [6], we have the following theorem: Theorem 5. If CONP AM, then the polynomial hierarchy collapses to S P 2 , specifically S P 2 for all k. <p> One naturally wonders at the relationship of DIST to more familiar classes such as NP and CONP. In this direction, applying the machinery of <ref> [6] </ref>, we can argue that it is unlikely that DIST is CONP-hard. Specifically, from [6], we have the following theorem: Theorem 5. If CONP AM, then the polynomial hierarchy collapses to S P 2 , specifically S P 2 for all k. In our case, were DIST to be CONP-complete, CONP AM, and we could apply the above theorem.
Reference: [7] <author> Shafi Goldwasser, Silvio Micali, and Charles Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM Journal of Computing, </journal> <volume> 18(1):186208, </volume> <month> February </month> <year> 1989. </year>
Reference-contexts: We start by showing that the language of rigid graphs is in AM. Let RIGID = fG : jAut (G)j = 1g : Theorem 3. RIGID 2 AM Proof. The proof is an easy adaptation of the result of <ref> [7, 8] </ref> that the language NGI = f (G 1 ; G 2 ) : G 1 6' G 2 g is in AM. In the formulation of AM given above, Merlin observes Arthur's coin tosses. This scenario is aptly dubbed the public coin model.
Reference: [8] <author> Shafi Goldwasser and Michael Sipser. </author> <title> Private coins versus public coins in interactive proof systems. </title> <booktitle> Advances in Computing Research, </booktitle> <address> 5:7390, </address> <year> 1989. </year>
Reference-contexts: We start by showing that the language of rigid graphs is in AM. Let RIGID = fG : jAut (G)j = 1g : Theorem 3. RIGID 2 AM Proof. The proof is an easy adaptation of the result of <ref> [7, 8] </ref> that the language NGI = f (G 1 ; G 2 ) : G 1 6' G 2 g is in AM. In the formulation of AM given above, Merlin observes Arthur's coin tosses. This scenario is aptly dubbed the public coin model. <p> In the alternative model, involving private coin tosses, Arthur's questions may not completely reveal the coins he has tossed so far. It is rather remarkable that the two models are in fact equivalent <ref> [8] </ref>. We shall allow ourselves the flexibility of a private coin in our constructions. Our goal is to show that RIGID 2 AM. Given input G = ([n]; E), consider the following protocol: 1.
Reference: [9] <author> Johannes Kobler, Uwe Schoning, and Jacobo Toran. </author> <title> The Graph Isomorphism Problem: Its Structural Complexity. </title> <booktitle> Progress in Theoretical Computer Science. </booktitle> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1993. </year>
Reference-contexts: : : : .) THE ELECTRONIC JOURNAL OF COMBINATORICS 5 (1998), #R23 4 3 DIST 2 AM Though we will discuss the definition of AM in some detail, for a general introduction to complexity theory and detailed discussions of the polynomial time hierarchy and AM, we refer the reader to <ref> [9] </ref> and [4, 5]. The polynomial time hierarchy is the polynomial time bounded variant of the Kleene hierarchy of recursive function theory.
Reference: [10] <author> Clemens Lautemann. </author> <title> BPP and the polynomial hierarchy. </title> <journal> Information Processing Letters, </journal> <volume> 17:215217, </volume> <year> 1983. </year>
Reference-contexts: Specifically, if c destroyed all of the symmetries of G, G 0 is rigid. Arthur now uses the protocol described above for RIGID. It is now easy to check that this protocol satisfies the requirements in the definition of AM. Based on constructions like those of <ref> [12, 10, 11] </ref>, one has AM S P 2 " P P 2 , completing the claim in the introduction. One naturally wonders at the relationship of DIST to more familiar classes such as NP and CONP.
Reference: [11] <author> Alexander Russell and Ravi Sundaram. </author> <title> Symmetric alternation captures BPP. Computational Complexity, </title> <type> 6, </type> <year> 1996. </year>
Reference-contexts: Specifically, if c destroyed all of the symmetries of G, G 0 is rigid. Arthur now uses the protocol described above for RIGID. It is now easy to check that this protocol satisfies the requirements in the definition of AM. Based on constructions like those of <ref> [12, 10, 11] </ref>, one has AM S P 2 " P P 2 , completing the claim in the introduction. One naturally wonders at the relationship of DIST to more familiar classes such as NP and CONP.
Reference: [12] <author> Michael Sipser. </author> <title> A complexity theoretic approach to randomness. </title> <booktitle> In Proceedings of the Fifteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 330335, </pages> <address> Boston, Massachusetts, </address> <month> 2527 April </month> <year> 1983. </year>
Reference-contexts: Specifically, if c destroyed all of the symmetries of G, G 0 is rigid. Arthur now uses the protocol described above for RIGID. It is now easy to check that this protocol satisfies the requirements in the definition of AM. Based on constructions like those of <ref> [12, 10, 11] </ref>, one has AM S P 2 " P P 2 , completing the claim in the introduction. One naturally wonders at the relationship of DIST to more familiar classes such as NP and CONP.
References-found: 12

