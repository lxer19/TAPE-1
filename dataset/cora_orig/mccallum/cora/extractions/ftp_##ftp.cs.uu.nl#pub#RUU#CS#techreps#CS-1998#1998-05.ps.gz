URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1998/1998-05.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: fhansb,sedthilkg@cs.ruu.nl  
Title: Computing Small Search Numbers in Linear Time  
Author: Hans L. Bodlaender Dimitrios M. Thilikos 
Address: P.O. Box 80.089, 3508 TB Utrecht, the Netherlands  
Affiliation: Department of Computer Science, Utrecht University,  
Abstract: Let G = (V; E) be a graph. The linear-width of G is defined as the smallest integer k such that E can be arranged in a linear ordering (e 1 ; : : : ; e r ) such that for every i = 1; : : : ; r 1, there are at most k vertices both incident to an edge that belongs to fe 1 ; : : : ; e i g as to an edge that belongs to fe i+1 ; : : : ; e r g. For each fixed constant k, a linear time algorithm is given, that decides for any graph G = (V; E) whether the linear-width of G is at most k, and if so, finds the corresponding ordering of E. Linear-width has been proven to be related with the following graph searching parameters: mixed search number, node search number, and edge search number. A consequence of this is that we obtain for fixed k, linear time algorithms that check whether a given graph can be mixed, node, or edge searched with at most k searchers, and if so, output the corresponding search strategies.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bienstock. </author> <title> Graph searching, path-width, tree-width and related problems (a survey). </title> <journal> DIMACS Ser. in Discrete Mathematics and Theoretical Computer Science, </journal> <volume> 5 </volume> <pages> 33-49, </pages> <year> 1991. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]).
Reference: [2] <author> D. Bienstock and P. Seymour. </author> <title> Monotonicity in graph searching. </title> <journal> J. Algorithms, </journal> <volume> 12:239 - 245, </volume> <year> 1991. </year>
Reference-contexts: of crusades introduced by Bienstock fl This research was partially supported by ESPRIT Long Term Research Project 20244 (project ALCOM IT: Algorithms and Complexity in Information Technology). y The second author was supported by the Training and Mobility of Researchers (TMR) Program, (EU contract no ERBFMBICT950198). 1 and Seymour in <ref> [2] </ref>. Linear-width can be seen as "a linear variant of branch-width", in the same way as pathwidth can be seen as "a linear variant of treewidth". In [25], it is proved that several variants of problems appearing on graph searching can be reduced to the problem of computing linear-width. <p> The first graph searching game was introduced by Breisch [6] and Parsons [18] and is the one of edge searching. Node searching appeared as a variant of edge searching and was introduced by Kirousis and Papadimitriou in [14]. Finally, mixed searching was introduced in [24] and <ref> [2] </ref> and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, <p> The node (edge) search number, ns (G) (es (G)) is defined similarly to the mixed search number with the difference that an edge can be cleared only if A (B) happens. The following results were proved by Bienstock and Seymour in <ref> [2] </ref> (see also [24]).
Reference: [3] <author> H. L. Bodlaender. </author> <title> A linear time algorithm for finding tree-decompositions of small treewidth. </title> <journal> SIAM J. Comput., </journal> <volume> 25 </volume> <pages> 1305-1317, </pages> <year> 1996. </year>
Reference-contexts: On the other hand, since all of these parameters are closed under taking of minors, we know (see e.g. <ref> [3, 19, 20, 22, 21] </ref>) that, for any k, there exists a linear algorithm that given a graph G checks whether es (G); ns (G); ms (G), or linear-width (G) is at most k (in other words, all these parameters are "fixed parameter tractable"). <p> This algorithm can be directly transfered to a linear algorithm for node, edge, and mixed search number thanks to their connection (see [25]) with linear-width. So far, such a linear time algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed <p> So far, such a linear time algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at <p> algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at most k, and if so, find a path decomposition of minimum width. <p> It can actually be avoided to work with tree decompositions by a modification of the algorithm in <ref> [3] </ref>. An other parameter related to linear-width is branch-width. In another paper [5], we give a similar algorithm for branch-width. That algorithm uses the techniques of this paper as a building block for a more complicated algorithm. This paper is organised as follows. <p> Using small modifications of techniques from <ref> [3] </ref>, the result above can be used to obtain an alternative (but strongly related) proof for the result from [3, 4] that for each fixed k, the problem to determine whether a given graph has pathwidth at most k, and if so, to find a path decomposition of width at most <p> Using small modifications of techniques from [3], the result above can be used to obtain an alternative (but strongly related) proof for the result from <ref> [3, 4] </ref> that for each fixed k, the problem to determine whether a given graph has pathwidth at most k, and if so, to find a path decomposition of width at most k, has a linear time algorithm. Using this fact, we obtain from Theorem 5 the following.
Reference: [4] <author> H. L. Bodlaender and T. Kloks. </author> <title> Efficient and constructive algorithms for the pathwidth and treewidth of graphs. </title> <journal> J. Algorithms, </journal> <volume> 21 </volume> <pages> 358-402, </pages> <year> 1996. </year>
Reference-contexts: This algorithm can be directly transfered to a linear algorithm for node, edge, and mixed search number thanks to their connection (see [25]) with linear-width. So far, such a linear time algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed <p> So far, such a linear time algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at <p> algorithm has been constructed (see <ref> [3, 4] </ref>) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see [12, 13, 17]). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at most k, and if so, find a path decomposition of minimum width. <p> This algorithm first finds a tree decomposition of width at most k, if existing (and if not existing, then the pathwidth is also larger than k), and then uses this tree decomposition to solve the problem, using the result in <ref> [4] </ref> that states that for fixed k and l, one can test whether the pathwidth of a graph G is at most l, and if so, find a minimum width path decomposition, assuming that G is given together with a tree decomposition of width at most k. <p> The following has been proved in <ref> [4] </ref>. Lemma 4 ([4]) The number of different typical sequences of integers in f0; 1; : : : ; Lg is at most 8 Let A; B be two typical sequences where A = (a 1 ; : : : ; a jAj ) and B = (b 1 ; : <p> The proof of the following Lemma can be found in <ref> [4] </ref> (Lemma 3.19). Lemma 5 Let A; A 0 ; B; B 0 be typical sequences such that A A 0 and B B 0 . Then t (A B) t (A 0 B 0 ). <p> ;; fv 5 g; fv 5 ; v 7 g; fv 7 g; ;; fv 10 g; fv 10 g; ;; fv 13 g; ; ); A = ( (0; 2); (2); (2; 3); (3; 2); (2); (3; 2); (2); (2); (3; 2); (0) ): Using now Lemma 3.1 of <ref> [4] </ref> we can prove the following. Lemma 6 For each node X i where jX i j l the number of different interval models at X i is bounded by (2l + 3) 2l+3 . The number of elements of any interval model is bounded by 2l + 3. <p> Using small modifications of techniques from [3], the result above can be used to obtain an alternative (but strongly related) proof for the result from <ref> [3, 4] </ref> that for each fixed k, the problem to determine whether a given graph has pathwidth at most k, and if so, to find a path decomposition of width at most k, has a linear time algorithm. Using this fact, we obtain from Theorem 5 the following.
Reference: [5] <author> H. L. Bodlaender and D. M. Thilikos. </author> <title> Constructive linear time algorithms for branchwidth. </title> <editor> In P. Degano, R. Gorrieri, and A. Marchetti-Spaccamela, editors, </editor> <booktitle> Proceedings 24th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 627-637. </pages> <address> Springer Verlag, </address> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 1256, </volume> <year> 1997. </year>
Reference-contexts: It can actually be avoided to work with tree decompositions by a modification of the algorithm in [3]. An other parameter related to linear-width is branch-width. In another paper <ref> [5] </ref>, we give a similar algorithm for branch-width. That algorithm uses the techniques of this paper as a building block for a more complicated algorithm. This paper is organised as follows. In Section 2, we give some preliminary results and definitions. The main algorithm is presented in Section 3.
Reference: [6] <author> R. Breisch. </author> <title> An intuitive approach to speleotopology. </title> <booktitle> A publication of the Southwestern Region of the National Speleological Society, </booktitle> <address> VI:72-78, </address> <year> 1967. </year>
Reference-contexts: Several variations on the way the fugitive can be captured during a search, define the the parameters of the edge, node, and mixed search number of a graph (namely, es (G), ns (G), and ms (G)). The first graph searching game was introduced by Breisch <ref> [6] </ref> and Parsons [18] and is the one of edge searching. Node searching appeared as a variant of edge searching and was introduced by Kirousis and Papadimitriou in [14].
Reference: [7] <author> N. D. Dendris, L. M. Kirousis, and D. M. Thilikos. </author> <title> Fugitive-search games on graphs and related parameters. </title> <journal> Theor. Comp. Sc., </journal> <volume> 172 </volume> <pages> 233-254, </pages> <year> 1997. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]).
Reference: [8] <author> J. A. Ellis, I. H. Sudborough, and J. Turner. </author> <title> Graph separation and search number. </title> <type> Report DCS-66-IR, </type> <institution> University of Victoria, </institution> <year> 1987. </year> <month> 21 </month>
Reference-contexts: We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in [24]. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see <ref> [13, 14, 17, 12, 8] </ref>). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [9] <author> J. A. Ellis, I. H. Sudborough, and J. Turner. </author> <title> The vertex separation and search number of a graph. </title> <journal> Information and Computation, </journal> <volume> 113 </volume> <pages> 50-79, </pages> <year> 1994. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]).
Reference: [10] <author> M. R. Fellows and M. A. Langston. </author> <title> On search, decision and the efficiency of polynomial-time algorithms. </title> <booktitle> In Proceedings of the 21rd Annual Symposium on Theory of Computing, </booktitle> <pages> pages 501-512, </pages> <year> 1989. </year>
Reference-contexts: Unfortunately, the above result is not constructive i.e. does not provide a way to construct the corresponding algorithm (see <ref> [10, 11] </ref>). Therefore, it is highly desired to have constructive "fixed parameter results" for the aforementioned parameters. In this paper we carry out the above task by constructing such a linear algorithm for linear-width.
Reference: [11] <author> H. Friedman, N. Robertson, and P. D. Seymour. </author> <title> The metamathematics of the graph minor theorem. </title> <journal> Contemporary Mathematics, </journal> <volume> 65 </volume> <pages> 229-261, </pages> <year> 1987. </year>
Reference-contexts: Unfortunately, the above result is not constructive i.e. does not provide a way to construct the corresponding algorithm (see <ref> [10, 11] </ref>). Therefore, it is highly desired to have constructive "fixed parameter results" for the aforementioned parameters. In this paper we carry out the above task by constructing such a linear algorithm for linear-width.
Reference: [12] <author> N. G. Kinnersley. </author> <title> The vertex separation number of a graph equals its path width. </title> <journal> Inform. Proc. Letters, </journal> <volume> 42 </volume> <pages> 345-350, </pages> <year> 1992. </year>
Reference-contexts: So far, such a linear time algorithm has been constructed (see [3, 4]) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see <ref> [12, 13, 17] </ref>). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at most k, and if so, find a path decomposition of minimum width. <p> We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in [24]. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see <ref> [13, 14, 17, 12, 8] </ref>). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [13] <author> L. M. Kirousis and C. H. Papadimitriou. </author> <title> Interval graphs and searching. </title> <journal> Disc. Math., </journal> <volume> 55 </volume> <pages> 181-184, </pages> <year> 1985. </year>
Reference-contexts: So far, such a linear time algorithm has been constructed (see [3, 4]) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see <ref> [12, 13, 17] </ref>). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at most k, and if so, find a path decomposition of minimum width. <p> We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in [24]. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see <ref> [13, 14, 17, 12, 8] </ref>). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [14] <author> L. M. Kirousis and C. H. Papadimitriou. </author> <title> Searching and pebbling. </title> <journal> Theor. Comp. Sc., </journal> <volume> 47 </volume> <pages> 205-218, </pages> <year> 1986. </year>
Reference-contexts: The first graph searching game was introduced by Breisch [6] and Parsons [18] and is the one of edge searching. Node searching appeared as a variant of edge searching and was introduced by Kirousis and Papadimitriou in <ref> [14] </ref>. <p> and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see <ref> [16, 14, 24, 25] </ref>). <p> We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in [24]. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see <ref> [13, 14, 17, 12, 8] </ref>). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [15] <author> A. S. LaPaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> J. ACM, </journal> <volume> 40 </volume> <pages> 224-245, </pages> <year> 1993. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]).
Reference: [16] <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> J. ACM, </journal> <volume> 35 </volume> <pages> 18-44, </pages> <year> 1988. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]). <p> and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see <ref> [16, 14, 24, 25] </ref>).
Reference: [17] <author> R. H. Mohring. </author> <title> Graph problems related to gate matrix layout and PLA folding. </title> <editor> In E. Mayr, H. Noltemeier, and M. Sys lo, editors, </editor> <title> Computational Graph Theory, </title> <journal> Comuting Suppl. </journal> <volume> 7, </volume> <pages> pages 17-51. </pages> <publisher> Springer Verlag, </publisher> <year> 1990. </year>
Reference-contexts: So far, such a linear time algorithm has been constructed (see [3, 4]) only for the parameters of treewidth and pathwidth (actually, the result in [3, 4] can be directly transfered to the node search number which is known to be equal to the node search number minus one see <ref> [12, 13, 17] </ref>). To be precise, [3, 4] state that for fixed k, one can determine in linear time whether a given graph has pathwidth at most k, and if so, find a path decomposition of minimum width. <p> We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in [24]. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see <ref> [13, 14, 17, 12, 8] </ref>). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [18] <author> T. D. Parsons. </author> <title> Pursuit evasion in a graph. </title> <editor> In Y. Alavi and D. R. Lick, editors, </editor> <booktitle> Theory and Application of Graphs, </booktitle> <pages> pages 426-441, </pages> <address> Berlin, 1976. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: Several variations on the way the fugitive can be captured during a search, define the the parameters of the edge, node, and mixed search number of a graph (namely, es (G), ns (G), and ms (G)). The first graph searching game was introduced by Breisch [6] and Parsons <ref> [18] </ref> and is the one of edge searching. Node searching appeared as a variant of edge searching and was introduced by Kirousis and Papadimitriou in [14].
Reference: [19] <author> N. Robertson and P. D. Seymour. </author> <title> Graph width and well-quasi ordering: a survey. </title> <editor> In J. A. Bondy and U. S. R. Murty, editors, </editor> <booktitle> Progress in Graph Theory, </booktitle> <pages> pages 399-406, </pages> <address> Toronto, 1984. </address> <publisher> Academic Press. </publisher>
Reference-contexts: On the other hand, since all of these parameters are closed under taking of minors, we know (see e.g. <ref> [3, 19, 20, 22, 21] </ref>) that, for any k, there exists a linear algorithm that given a graph G checks whether es (G); ns (G); ms (G), or linear-width (G) is at most k (in other words, all these parameters are "fixed parameter tractable").
Reference: [20] <author> N. Robertson and P. D. Seymour. </author> <title> Disjoint paths a survey. </title> <journal> SIAM J. Alg. Disc. Meth., </journal> <volume> 6 </volume> <pages> 300-305, </pages> <year> 1985. </year>
Reference-contexts: On the other hand, since all of these parameters are closed under taking of minors, we know (see e.g. <ref> [3, 19, 20, 22, 21] </ref>) that, for any k, there exists a linear algorithm that given a graph G checks whether es (G); ns (G); ms (G), or linear-width (G) is at most k (in other words, all these parameters are "fixed parameter tractable").
Reference: [21] <author> N. Robertson and P. D. Seymour. </author> <title> An outline of a disjoint paths algorithm. Paths, Flows and VLSI Design, </title> <booktitle> Algorithms and Combinatorics, </booktitle> <volume> 9 </volume> <pages> 267-292, </pages> <year> 1990. </year>
Reference-contexts: On the other hand, since all of these parameters are closed under taking of minors, we know (see e.g. <ref> [3, 19, 20, 22, 21] </ref>) that, for any k, there exists a linear algorithm that given a graph G checks whether es (G); ns (G); ms (G), or linear-width (G) is at most k (in other words, all these parameters are "fixed parameter tractable").
Reference: [22] <author> N. Robertson and P. D. Seymour. </author> <title> Graph minors. XIII. The disjoint paths problem. </title> <journal> J. Comb. Theory Series B, </journal> <volume> 63 </volume> <pages> 65-110, </pages> <year> 1995. </year> <month> 22 </month>
Reference-contexts: On the other hand, since all of these parameters are closed under taking of minors, we know (see e.g. <ref> [3, 19, 20, 22, 21] </ref>) that, for any k, there exists a linear algorithm that given a graph G checks whether es (G); ns (G); ms (G), or linear-width (G) is at most k (in other words, all these parameters are "fixed parameter tractable").
Reference: [23] <author> P. D. Seymour and R. Thomas. </author> <title> Graph searching and a minimax theorem for tree-width. </title> <journal> J. Comb. Theory Series B, </journal> <volume> 58 </volume> <pages> 239-257, </pages> <year> 1993. </year>
Reference-contexts: Finally, mixed searching was introduced in [24] and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see <ref> [1, 7, 9, 15, 16, 23] </ref>.) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see [16, 14, 24, 25]).
Reference: [24] <author> A. Takahashi, S. Ueno, and Y. </author> <title> Kajitani. </title> <journal> Mixed-searching and proper-path-width. Theor. Comp. Sc., </journal> <volume> 137 </volume> <pages> 253-268, </pages> <year> 1995. </year>
Reference-contexts: The first graph searching game was introduced by Breisch [6] and Parsons [18] and is the one of edge searching. Node searching appeared as a variant of edge searching and was introduced by Kirousis and Papadimitriou in [14]. Finally, mixed searching was introduced in <ref> [24] </ref> and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see <p> and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see <ref> [16, 14, 24, 25] </ref>). <p> The node (edge) search number, ns (G) (es (G)) is defined similarly to the mixed search number with the difference that an edge can be cleared only if A (B) happens. The following results were proved by Bienstock and Seymour in [2] (see also <ref> [24] </ref>). <p> We mention that the mixed search number is equivalent with the parameter of proper-pathwidth defined by Takahashi, Ueno, and Kajitani in <ref> [24] </ref>. It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see [13, 14, 17, 12, 8]). The following is a generalisation of Theorem 2.(c) and has been proved in [25].
Reference: [25] <author> D. M. Thilikos. </author> <title> Algorithms and obstructions for linear-width and related search parameters. </title> <type> Technical Report UU-CS-97-35, </type> <institution> Department of Computer Science, Utrecht University, Utrecht, </institution> <year> 1997. </year>
Reference-contexts: Linear-width can be seen as "a linear variant of branch-width", in the same way as pathwidth can be seen as "a linear variant of treewidth". In <ref> [25] </ref>, it is proved that several variants of problems appearing on graph searching can be reduced to the problem of computing linear-width. In a graph searching game a graph represents a system of tunnels where an agile, fast, and invisible fugitive is resorting. <p> and [2] and is a natural generalisation of the two previous variants (for the formal definitions see Subsection 4.1 for other results concerning search games on graphs see [1, 7, 9, 15, 16, 23].) The problems of computing es (G); ns (G); ms (G), or linear-width (G) is NP-complete (see <ref> [16, 14, 24, 25] </ref>). <p> In this paper we carry out the above task by constructing such a linear algorithm for linear-width. This algorithm can be directly transfered to a linear algorithm for node, edge, and mixed search number thanks to their connection (see <ref> [25] </ref>) with linear-width. <p> It is also known that the node search number is equal to the pathwidth, the interval thickness, and the vertex separation number (see [13, 14, 17, 12, 8]). The following is a generalisation of Theorem 2.(c) and has been proved in <ref> [25] </ref>. Theorem 3 If G h is the graph occurring from G after subdividing each of its pendant edges, then ms (G) = linear-width (G h ). 4.2 Final Comments The result of Theorem 1 has several consequences.
Reference: [26] <author> R. Thomas. </author> <title> Tree-decompositions of graphs. </title> <booktitle> Lecture notes, </booktitle> <institution> School of Mathematics. Georgia Institute of Technology, Atlanta, Georgia 30332, USA, </institution> <year> 1996. </year> <month> 23 </month>
Reference-contexts: Linear-width was first mentioned by Thomas in <ref> [26] </ref> and is strongly connected with the notion of crusades introduced by Bienstock fl This research was partially supported by ESPRIT Long Term Research Project 20244 (project ALCOM IT: Algorithms and Complexity in Information Technology). y The second author was supported by the Training and Mobility of Researchers (TMR) Program, (EU
References-found: 26

