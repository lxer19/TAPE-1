URL: http://www-inst.eecs.berkeley.edu/~cs264/notes/prolog-doc/prolog-refman.ps.gz
Refering-URL: http://www-inst.eecs.berkeley.edu/~cs264/notes/index.html
Root-URL: http://www.cs.berkeley.edu
Email: jan@swi.psy.uva.nl  
Title: gives an overview of the features, system limits and built-in predicates.  
Phone: Tel. (+31) 20 5256786 SWI-Prolog 2.7  
Author: Jan Wielemaker 
Date: 2.7.14, September 1996  
Note: Reference Manual Updated for version  This document  Copyright c 1990-1996, Jan Wielemaker  
Address: Roeterstraat 15, 1018 WB Amsterdam The Netherlands  
Affiliation: University of Amsterdam Dept. of Social Science Informatics (SWI)  
Abstract: SWI-Prolog is a Prolog implementation based on a subset of the WAM (Warren Abstract Machine [Warren, 1983]). SWI-Prolog has been designed and implemented such that it can easily be modified for experiments with logic programming and the relation between logic programming and other programming paradigms (such as the object oriented XPCE environment [Anjewierden & Wielemaker, 1989]). SWI-Prolog has a rich set of built-in predicates and reasonable performance, which makes it possible to develop substantial applications in it. The current version offers a module system, garbage collection and an interface to the C language. 
Abstract-found: 1
Intro-found: 1
Reference: [Anjewierden & Wielemaker, 1989] <author> A. Anjewierden and J. Wielemaker. </author> <title> Extensible objects. </title> <type> ESPRIT Project 1098 Technical Report UvA-C1-TR-006a, </type> <institution> University of Amsterdam, </institution> <month> March </month> <year> 1989. </year>
Reference: [BIM, 1989] <editor> BIM Prolog release 2.4. Everberg, </editor> <address> Belgium, </address> <year> 1989. </year>
Reference: [Bowen & Byrd, 1983] <author> D. L. Bowen and L. M. Byrd. </author> <title> A portable Prolog compiler. </title> <editor> In L. M. Pereira, ed., </editor> <booktitle> Proceedings of the Logic Programming Workshop 1983, </booktitle> <address> Lisabon, Portugal, </address> <year> 1983. </year> <institution> Universidade nova de Lis-boa. </institution>
Reference: [Bratko, 1986] <author> I. Bratko. </author> <title> Prolog Programming for Artificial Intelligence. </title> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1986. </year>
Reference: [Clocksin & Mellish, 1981] <author> W. F. Clocksin and C. S. Mellish. </author> <title> Programming in Prolog. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1981. </year> <editor> (4th ed. </editor> <year> 1994) </year>
Reference: [Kernighan & Ritchie, 1978] <author> B. W. Kernighan and D. M. Ritchie. </author> <title> The C Programming Language. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1978. </year>
Reference-contexts: meta_predicate1 (Head). meta_predicate1 (Head) :- Head =.. [Name|Arguments], member (Arg, Arguments), module_expansion_argument (Arg), !, functor (Head, Name, Arity), module_transparent (Name/Arity). meta_predicate1 (_). % just a mode declaration module_expansion_argument (:). module_expansion_argument (N) :- integer (N). - 91 - 92 Chapter 5 Foreign Language Interface SWI-Prolog offers a powerful interface to C <ref> [Kernighan & Ritchie, 1978] </ref>. The main design objectives of the foreign language interface are flexibility and performance. A foreign predicate is a C-function that has the same number of arguments as the predicate represented.
Reference: [O'Keefe, 1990] <author> R. A. O'Keefe. </author> <title> The Craft of Prolog. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1990. </year>
Reference: [Pereira, 1986] <author> F. Pereira. </author> <note> C-Prolog User's Manual, </note> <year> 1986. </year>
Reference: [Qui, 1987] <author> Quintus Prolog, </author> <title> User Guide and Reference Manual. </title> <address> Mountain View CA, </address> <year> 1987. </year>
Reference: [Sterling & Shapiro, 1986] <author> L. Sterling and E. Shapiro. </author> <title> The Art of Prolog. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1986. </year> <editor> (2nd ed. </editor> <year> 1994) </year>
Reference: [Warren, 1983] <author> D. H. D. Warren. </author> <title> The runtime environment for a Prolog compiler using a copy algorithm. </title> <type> Technical Report 83/052, </type> <institution> SUNY at Stony Brook, </institution> <address> New York, </address> <year> 1983. </year> <title> Major revision March 1984. </title> <type> 149 </type>
References-found: 11

