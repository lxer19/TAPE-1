URL: ftp://ftp.cs.umass.edu/pub/techrept/techreport/1996/UM-CS-1996-069.ps
Refering-URL: http://laser.cs.umass.edu/abstracts/96-069.html
Root-URL: 
Email: bhattach@cs.umass.edu  ljo@cs.umass.edu  
Phone: (413) 545 3179  (413) 545 2186  
Title: A Framework for Relocation in Mobile Process-Centered Software Development Environments  
Author: Supratik Bhattacharyya Leon Osterweil 
Keyword: Process-centered SDEs, wireless, detachment, relocation.  
Address: Amherst MA 01003, USA  Amherst MA 01003, USA  
Affiliation: Dept. Of Computer Science University of Massachusetts  Dept. of Computer Science University of Massachusetts  
Abstract: This paper addresses the problem of enabling a user of a process-centered SDE, hosted on a high-speed network, to continue working on a detached mobile workstation connected by a lower speed interruptable communications link. The focus of the paper is a process for determining whether and how to allow detachment. The process takes into account a broad range of factors, including the speed and reliability of the mobile link, the relative sizes and speeds of the mobile and networked workstations, the nature and state of the development process, and the importance of the detaching user. The paper presents a formal framework that allows us to specify the various factors, and an objective function that quantifies the inconvenience incurred by the detachment. The process uses the framework to determine which tools and resources to relocate when the user detaches from the network. A detailed example is used to illustrate this process. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G.H. Forman, J. Zahorjan. </author> <title> The Challenges of Mobile Computing. </title> <institution> University of Washington CSE Technical Report No. 93-11-03. </institution>
Reference-contexts: Related Work The issues raised by the mobile computing paradigm include dealing with the problems of low bandwidth, disconnection, conservation of battery power for mobile hardware and storage limitations. These issues have been discussed in <ref> [1] </ref>. The adverse effects of these can be reduced by minimizing the communication requirements between the mobile hardware and wired backbone network. One approach is to have "user agents" inside the wired part of the network, acting on behalf of a mobile user.
Reference: [2] <editor> M.T. Le et al. </editor> <booktitle> InfoNet : the Networking infrastruc ture of InfoPad. In Proceedings of Compcon, Calif. </booktitle> <month> Mar. </month> <year> 1995. </year>
Reference: [3] <author> B. Schilit and D. Duchamp. </author> <title> Adaptive Remote Paging for Mobile Computers. </title> <institution> Dept. of Computer Science, Columbia University, </institution> <type> technical report TR CUCS-004-91. </type>
Reference: [4] <author> J.J. Kistler, M. Satyanarayanan. </author> <title> Disconnected Op eration in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 10, No. 1, </volume> <month> February </month> <year> 1992, </year> <pages> pp. 3-25. </pages>
Reference-contexts: Unplanned disconnection refers to the intermittent loss of connectivity while the user is still attached to the network over a wireless link. Planned disconnection is the case where a mobile user disconnects completely from the network to operate autonomously. The Coda file system <ref> [4] </ref> has been designed to make network disconnections transparent to the user, by creating on-board file caches and by devising techniques for maintaining consistency of shared data. [5] discusses the issue of consistency in SDEs where there is more flexibility than in traditional databases systems.
Reference: [5] <author> K. Narayanaswamy, N. Goldman. </author> <title> Lazy Consistency : A Basis for Cooperative Software Development. </title> <booktitle> In Proc. Computer Supported Collaborative Work November 1992. </booktitle>
Reference-contexts: Planned disconnection is the case where a mobile user disconnects completely from the network to operate autonomously. The Coda file system [4] has been designed to make network disconnections transparent to the user, by creating on-board file caches and by devising techniques for maintaining consistency of shared data. <ref> [5] </ref> discusses the issue of consistency in SDEs where there is more flexibility than in traditional databases systems.
Reference: [6] <author> P.D. Skopp, G.E. Kaiser. </author> <title> Disconnected Operation in a Multi-User Software Development Environment. </title> <booktitle> IEEE Workshop on Advances in Parallel and Distributed Systems Oct '93 pp. </booktitle> <pages> 146-151. </pages>
Reference: [7] <author> P.D. Skopp. </author> <title> Low Bandwidth Operation in a Multi user Software Development Environment. </title> <institution> Department of Computer Science, Columbia University, </institution> <type> technical report TR CUCS-035-95. </type>
Reference: [8] <author> S.M. Sutton, D. Heimbigner, L.J. Osterweil. </author> <title> APPL/A : A Language for Software-Process Programming. </title> <journal> ACM Trans. on Software Engineering and Methodology, </journal> <volume> Vol. 4 No. </volume> <month> 3 July </month> <year> 1995, </year> <pages> pp. 221-286. </pages>
Reference-contexts: A PSDE also provides a representation of the software process itself. The representation may be by a model such as a Petri Net or flowgraph, or by executable code written in a coding language. <ref> [8] </ref>. PINFO characterizes the PSDE process representation with both static and dynamic information. Static information expresses the process structure. Dynamic information represents process execution state. Static Information : We assume that a PSDE process consists of a set of steps to be executed procedurally or as triggered reactions to events.
Reference: [9] <author> I.Z. Ben-Shaul, G.E. Kaiser, G.T. Heineman. </author> <title> An Architecture for Multi-User Software Development Environments. </title> <journal> Computing Systems, The Journal of the USENIX Association, </journal> <volume> 6(2) </volume> <pages> 65-103, </pages> <institution> University of California Press, </institution> <month> Spring </month> <year> 1993. </year>
Reference: [10] <author> I.Z. Ben-Shaul, G.E. Kaiser. </author> <title> A Paradigm for De centralized Process Modelling and its Realization in the Oz Environment. </title> <booktitle> Proceedings of the Sixteenth International Conference on Software Engineering, </booktitle> <month> May </month> <year> 1994. </year>
References-found: 10

