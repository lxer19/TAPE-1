URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/DL96/donini.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: fdegiacomo,donini,massaccig@dis.uniroma1.it  Fabio.Massacci@cl.cam.ac.uk  
Phone: 2  
Title: EXPTIME Tableaux for ALC (Extended Abstract) tableaux method The search for a model corresponds to
Author: Giuseppe De Giacomo and Francesco M. Donini and Fabio Massacci ; D &gt; j j A j :A j C u D j C t D j 
Note: C;  2 The  the  C is an ALC concept. The  
Date: 1 Motivations  
Address: I "La Sapienza", Italy  England  
Affiliation: 1 Dip. Di Informatica e Sistemistica, Univ. di Roma  Computer Laboratory, Cambridge University,  
Abstract: We propose a tableaux calculus requiring simple exponential time for satisfiability of an ALC concept C wrt a TBox T containing general axioms of the form C v D. &gt;From correspondences with Propositional Dynamic Logic (PDL) it is known that this problem is in EX-PTIME [ Pratt, 1978; Vardi and Wolper, 1986 ] . However, an algorithm directly derived from the methods used to prove such a result would always require exponential time and space even in simple cases, e.g. when a simple model satisfying both T and C can be easily found. On the other hand, proposed tableaux methods [ Buch-heit et al., 1993 ] , which explore a space of candidate models for T and C starting from simple ones, can take advantage of such cases. However, there can be an exponential number of possibly exponential-size candidate models. Hence, an algorithm based on tableaux methods requires doubly exponential time in the worst case. We devise a refined tableaux calculus that integrates the techniques used in PDL with tableaux, thus achieving a tableaux-based procedure working in simple exponential time. In a nutshell, traditional tableaux methods close a branch only by "first principles" (atomic clashes), whereas our enhanced tableau exploits previously proved inconsistencies as additional lemmata to decide that a branch can be closed without having to find the same atomic clashes again. For sake of brevity, we assume, wlog, that all concepts are expressed in negation normal form, i.e. we form concepts in ALC by means of the following syntax (A denotes a concept name, C and D arbitrary concepts, and R a role name): We express a concept inclusion C v D in the TBox T as :C t D = &gt; where :C t D has also been expressed in negation normal form. This structure is reflected by our notation in which both branching points and links are explicit. Indeed we use prefixed formulae, that are triples of the form hb j p : Ci, where: * the element p is a string alternating integers (names for individuals) and role names, which represents a linked individual - e.g., the element 1R 1 2R 4 6 represents the individual 6, which is an R 4 -filler of the individual 2, which in turn is an R 1 -filler of 1; Given two strings oe 1 and oe 2 (either segments or elements) oe 1 oe 2 means that oe 1 is a prefix of oe 2 , and oe 1 OE oe 2 means that oe 1 oe 2 and oe 1 6= oe 2 . A tableau T is a set of prefixed formulae. Given a tableau T and a segment b, we say that an element p is present in b if there is a prefixed formula hb 0 j p : Ci in T such that b 0 b, and p is new in b if it is not present. We also say that a segment b is present in T if there is a prefixed formula hb j p : Ci in the tableau for some p and some C. A segment b M is maximal for another segment b in a tableau T if both b M and b are present in T and b M is the longest segment in T of which b is a prefix. Formally b b M and for all b 0 it is b M 6OE b 0 . The rules we use for our tableau are shown in Fig. 1. We assume that rules are applied in the obvious way without unnecessary repetitions. For instance rule AND and SOME are never applied twice to the same prefixed formula, and rule KB never adds twice the same prefixed formula. Rule ALL can be applied again for every pRn that is present but of course not twice for the same b and pRn. In equal fashion we can apply rule OR again for all maximal b M that are present but never twice for the same b M . Moreover, once we have applied it for a certain b M , we do not apply the OR rule to the same formula with any other segment b 0 , introduced at some subsequent stages, such that b M b 0 . 
Abstract-found: 1
Intro-found: 1
Reference: [ Bresciani et al., 1995 ] <author> P. Bresciani, E. Franconi, and S. Tessaris. </author> <title> Implementing and testing expressive description logics: Preliminary report. </title> <editor> In Alexander Borgida, Maurizio Lenzerini, Daniele Nardi, and Bern-hard Nebel, editors, </editor> <title> Working Notes of the 1995 Description Logics Workshop, </title> <type> Technical Report, </type> <institution> RAP 07.95, Dipartimento di Informatica e Sistemistica, Universita di Roma "La Sapienza", </institution> <address> pages 131-139, Rome (Italy), </address> <year> 1995. </year>
Reference-contexts: In fact we do not need to change substantially the "normal" construction used by tableaux which has proven to be reasonably effective in practice <ref> [ Bresciani et al., 1995 ] </ref> . The key point is to make use of an auxiliary data structure which is used store sets of concepts whose conjunction was already proved to be inconsistent.
Reference: [ Buchheit et al., 1993 ] <author> Martin Buchheit, Francesco M. Donini, and Andrea Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: if a set concept (b j p) is found to be a ?-set, then Def. 2.1 must be applied and all new ?-sets thus generated must be stored for future checking. 3 Correctness and Complexity The correctness and completeness of the method is a simple adaptation of the proofs of <ref> [ Buchheit et al., 1993 ] </ref> . A little care is necessary for closure of a branch due to the presence of a ?-set, since we discard a branch before actually finding an atomic clash. Theorem 3.1 Let b be a segment in a tableau T . <p> Indeed, there are no more that 2 n sets of sub-concepts of T and C. If an element is longer that 2 n then it is a copy of one of its prefixes. See <ref> [ Buchheit et al., 1993 ] </ref> . Proposition 3.2 The size of every segment is O (2 cn ). In fact, the size of the longest segments is increased by the application of rule OR. The number of sub-concepts of the form C t D is at most n.
Reference: [ Pratt, 1978 ] <author> V. R. Pratt. </author> <title> A practical decision method for propositional dynamic logic. </title> <booktitle> In Proceedings of the Tenth ACM Symposium on Theory of Computing (STOC-78), </booktitle> <pages> pages 326-337, </pages> <year> 1978. </year>
Reference-contexts: University, England Fabio.Massacci@cl.cam.ac.uk 1 Motivations We propose a tableaux calculus requiring simple exponential time for satisfiability of an ALC concept C wrt a TBox T containing general axioms of the form C v D. &gt;From correspondences with Propositional Dynamic Logic (PDL) it is known that this problem is in EX-PTIME <ref> [ Pratt, 1978; Vardi and Wolper, 1986 ] </ref> . However, an algorithm directly derived from the methods used to prove such a result would always require exponential time and space even in simple cases, e.g. when a simple model satisfying both T and C can be easily found.
Reference: [ Vardi and Wolper, 1986 ] <author> Moshe Y. Vardi and Pierre Wolper. </author> <title> Automata-theoretic techniques for modal logics of programs. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 32 </volume> <pages> 183-221, </pages> <year> 1986. </year> <note> A preliminary version appeared in Proc. of the 16th ACM SIGACT Symp. on Theory of Computing (STOC-84). </note>
Reference-contexts: University, England Fabio.Massacci@cl.cam.ac.uk 1 Motivations We propose a tableaux calculus requiring simple exponential time for satisfiability of an ALC concept C wrt a TBox T containing general axioms of the form C v D. &gt;From correspondences with Propositional Dynamic Logic (PDL) it is known that this problem is in EX-PTIME <ref> [ Pratt, 1978; Vardi and Wolper, 1986 ] </ref> . However, an algorithm directly derived from the methods used to prove such a result would always require exponential time and space even in simple cases, e.g. when a simple model satisfying both T and C can be easily found.
References-found: 4

