URL: ftp://ftp.cs.huji.ac.il/users/transis/thesis/huleihel-msc.ps
Refering-URL: http://www.cs.huji.ac.il/labs/transis/thesis.html
Root-URL: http://www.cs.huji.ac.il
Title: Efficient Ordering of Messages in Wide Area Networks  
Author: Nabil Huleihel supervised by Prof. Danny Dolev 
Degree: A thesis submitted in fulfillment of the requirements for the degree of Master of Science by  
Date: March 4, 1996  
Address: Jerusalem, Israel.  
Affiliation: Institute of Computer Science The Hebrew University of Jerusalem  
Abstract-found: 0
Intro-found: 1
Reference: [AAD93] <author> O. Amir, Y. Amir, and D. Dolev. </author> <title> A Highly Available Application in the Transis Environment. In Proceedings of the Hardware and Software Architectures for Fault Tolerance Workshop, </title> <institution> at Le Mont Saint-Michel, France (LNCS 774), </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Each domain may contain several gateways connecting it to several other domains. EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication <ref> [AAD93, ADMSM94, Kei94] </ref> used the group communication service provided by Transis. The RELACS [BS94, BDGB94] system provides membership service and view synchrony in large-scale distributed systems. View synchrony guarantees that for each path in the partial order of view changes, message deliveries are totally ordered with respect to view changes.
Reference: [ABNLP89] <author> B. Awerbuch, A. Bar-Noy, N. Linial, and D. Peleg. </author> <title> Compact Distributed Data Structures for Adaptive Routing. </title> <booktitle> In Proceedings of the ACM Symposium on Theory of Computing, </booktitle> <pages> pages 479-489, </pages> <year> 1989. </year>
Reference-contexts: The RELACS system does not provide any ordering guarantees and treats the system uniformly as a network of point to point links. Relating to the message dissemination in Large networks, a hierarchical routing scheme was used in <ref> [ABNLP89] </ref>. The hierarchical scheme based on pivots guarantees efficiency in routing.
Reference: [ADKM92a] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. </author> <title> Membership Algorithms for Mul-ticast Communication Groups. </title> <booktitle> In 6th Intl. Workshop on Distributed Algorithms proceedings (WDAG-6), (LCNS, </booktitle> <volume> 647), </volume> <pages> pages 292-312, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Both compute the total order based on the DAG structure without exchanging of additional messages. While TOTO is more efficient than all-ack, it can not maintain extended virtual synchrony. The membership algorithm of Transis <ref> [ADKM92a] </ref> is a symmetric protocol that was the first to handle network partitions and re-merges. Although operational in asynchronous environment, the algorithm ensures terminations in a bounded time. The basic idea of this algorithm was adopted by Totem and Horus [vRBF + 95]. <p> Each processor inserts its own messages into its DAG immediately upon sending, because the processor's own messages acknowledge messages already in the processor's DAG. 1.3.2 Transis Membership Protocol The membership algorithm of Transis <ref> [ADKM92a] </ref> is a symmetric protocol that was the first to handle network partitions and re-merges. Although operational in an asynchronous environment, the algorithm ensures terminations in a bounded time. A failure detector is implemented. Each machine periodically multicasts an "I am alive" message.
Reference: [ADKM92b] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A Communication Sub-System for High Availability. </title> <booktitle> In 22nd Annual International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 76-84, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Efficient and correct ordering of messages in large distributed systems is a difficult task due to asynchrony, long delays, large amount of messages, and the possibility of complex failure scenarios. Thus to support the application builders, a multicast communication substrate, called Transis <ref> [ADKM92b] </ref>, was provided. Transis guarantees message delivery coupled with consistent failure notification. Transis utilizes the broadcast capability of a broadcast domain (typically a LAN ). Unfortunately, Transis protocols are too demanding on Wide Area Network environment. There is no broadcast capability in WANs. <p> Three multicast primitives are provided according to the EVS [MAMSA94] semantics: Causal multicast, Agreed multicast for total order delivery, and Safe multicast that provides even stronger guarantees. Two different multicast protocols are 3 implemented in Transis. Lansis <ref> [ADKM92b] </ref>, the earlier protocol, uses a direct acyclic graph (DAG) representing the causal relation on messages to provide reliable multicast. The DAG is derived from negative and positive acknowledgements piggybacked on the messages. <p> Note that even if they disconnect, the message is guaranteed to be delivered to them. The Safe multicast service preserves causal order, and the Safe messages are totally ordered with respect to all types of messages. 1.3.1 Lansis Protocol and Causal Multicast Service The Lansis protocol, <ref> [ADKM92b] </ref>, uses a direct acyclic graph (DAG) representing the causal relation on messages to provide reliable multicast. The DAG is derived from negative and positive acknowledgements piggybacked on the messages. A detailed description of the Lansis protocol is found in [CHD96].
Reference: [ADMSM94] <author> Y. Amir, D. Dolev, P. M. Melliar-Smith, and L. E. Moser. </author> <title> Robust and Efficient Replication Using Group Communication. </title> <type> TR CS94-20, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, </institution> <year> 1994. </year>
Reference-contexts: Each domain may contain several gateways connecting it to several other domains. EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication <ref> [AAD93, ADMSM94, Kei94] </ref> used the group communication service provided by Transis. The RELACS [BS94, BDGB94] system provides membership service and view synchrony in large-scale distributed systems. View synchrony guarantees that for each path in the partial order of view changes, message deliveries are totally ordered with respect to view changes.
Reference: [Aga94] <author> D. A. Agarwal. Totem: </author> <title> A Reliable Delivery Protocol for Interconnected Local-Area Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical and Computer Engineering, University of California, Santa Barbara, </institution> <year> 1994. </year>
Reference-contexts: The second reliable multicast protocol is the Ring protocol [AMMS + 93]. This protocol uses a revolving token holder that coordinates the transmission and regulates the flow of broadcast messages. A membership protocol is provided by the Ring protocol. The Totem system <ref> [Aga94] </ref> provides reliable multicast and membership services across a collection of local-area networks. The Totem system is composed of a hierarchy of two protocols. The bottom layer is the Ring protocol [AMMS + 93, AMMS + ] which provides reliable multicast and processor membership services within a broadcast domain. <p> The Totem system is composed of a hierarchy of two protocols. The bottom layer is the Ring protocol [AMMS + 93, AMMS + ] which provides reliable multicast and processor membership services within a broadcast domain. The upper layer is the Multiple-Rings protocol <ref> [Aga94] </ref> that provides reliable delivery and ordering across the entire network. Gateways are responsible to forward messages and configuration changes between broadcast domains. Each gateway interconnects two broadcast domains, and participates in the Ring protocol for each of them.
Reference: [Ami95] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Partitioned Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1995. </year>
Reference-contexts: Each domain may contain several gateways connecting it to several other domains. EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in <ref> [Ami95] </ref>. Applications and algorithms for distributed replicated database systems and consistent object replication [AAD93, ADMSM94, Kei94] used the group communication service provided by Transis. The RELACS [BS94, BDGB94] system provides membership service and view synchrony in large-scale distributed systems.
Reference: [AMMS + ] <author> Y. Amir, L. E. Moser, P. M. Melliar-Smith, D. A. Agarwal, and P. Ciarfella. </author> <title> The Totem Single-Ring Ordering and Membership Protocol. </title> <journal> In ACM Transactions on Computer Systems. </journal> <note> to appear. </note>
Reference-contexts: A membership protocol is provided by the Ring protocol. The Totem system [Aga94] provides reliable multicast and membership services across a collection of local-area networks. The Totem system is composed of a hierarchy of two protocols. The bottom layer is the Ring protocol <ref> [AMMS + 93, AMMS + ] </ref> which provides reliable multicast and processor membership services within a broadcast domain. The upper layer is the Multiple-Rings protocol [Aga94] that provides reliable delivery and ordering across the entire network. Gateways are responsible to forward messages and configuration changes between broadcast domains.
Reference: [AMMS + 93] <author> Y. Amir, L. E. Moser, P. M. Melliar-Smith, D. A. Agarwal, and P. Ciarfella. </author> <title> Fast Message Ordering and Membership Using a Logical Token-Passing Ring. </title> <booktitle> 77 In Intl. Conference on Distributed Computing Systems, </booktitle> <pages> pages 551-560, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Although operational in asynchronous environment, the algorithm ensures terminations in a bounded time. The basic idea of this algorithm was adopted by Totem and Horus [vRBF + 95]. Excellent reading about Transis and its membership algorithm is found in [Mal94]. The second reliable multicast protocol is the Ring protocol <ref> [AMMS + 93] </ref>. This protocol uses a revolving token holder that coordinates the transmission and regulates the flow of broadcast messages. A membership protocol is provided by the Ring protocol. The Totem system [Aga94] provides reliable multicast and membership services across a collection of local-area networks. <p> A membership protocol is provided by the Ring protocol. The Totem system [Aga94] provides reliable multicast and membership services across a collection of local-area networks. The Totem system is composed of a hierarchy of two protocols. The bottom layer is the Ring protocol <ref> [AMMS + 93, AMMS + ] </ref> which provides reliable multicast and processor membership services within a broadcast domain. The upper layer is the Multiple-Rings protocol [Aga94] that provides reliable delivery and ordering across the entire network. Gateways are responsible to forward messages and configuration changes between broadcast domains. <p> Gateways are responsible to forward messages and configuration changes between broadcast domains. Each gateway interconnects two broadcast domains, and participates in the Ring protocol for each of them. Each domain may contain several gateways connecting it to several other domains. EVS was first implemented in the Totem system <ref> [AMMS + 93] </ref>. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication [AAD93, ADMSM94, Kei94] used the group communication service provided by Transis.
Reference: [BCJ + 90] <author> K. P. Birman, R. Cooper, T. A. Joseph, K. Marzullo, M. Makpangou, K. Kane, F. Schmuck, and M. Wood. </author> <title> The ISIS System Manual. </title> <institution> Dept of Computer Science, Cornell University, </institution> <month> Sep 90. </month>
Reference-contexts: We relate our work to multicast communication protocols. The ISIS toolkit <ref> [BSS91, BJ87, BCJ + 90, BvR94] </ref> is one of the first general purpose group communication systems. ISIS provides a group communication session service, where processes can join process groups, multicast messages to groups, and receive messages sent to groups.
Reference: [BDGB94] <author> O. Babaoglu, R. Davoli, L. Giachini, and M. Baker. RELACS: </author> <title> A Communication Infrastructure for Constructing Reliable Applications in Large-Scale Distributed Systems. </title> <type> TR UBLCS94-15, </type> <institution> Laboratory of Computer Science, University of Bologna, </institution> <year> 1994. </year>
Reference-contexts: EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication [AAD93, ADMSM94, Kei94] used the group communication service provided by Transis. The RELACS <ref> [BS94, BDGB94] </ref> system provides membership service and view synchrony in large-scale distributed systems. View synchrony guarantees that for each path in the partial order of view changes, message deliveries are totally ordered with respect to view changes.
Reference: [BJ87] <author> K. P. Birman and T. Joseph. </author> <title> Exploiting Virtual Synchrony in Distributed Systems. </title> <booktitle> In 11th Ann. Symp. Operating Systems Principles, </booktitle> <pages> pages 123-138, </pages> <month> Nov 87. </month>
Reference-contexts: We relate our work to multicast communication protocols. The ISIS toolkit <ref> [BSS91, BJ87, BCJ + 90, BvR94] </ref> is one of the first general purpose group communication systems. ISIS provides a group communication session service, where processes can join process groups, multicast messages to groups, and receive messages sent to groups.
Reference: [BS94] <author> O. Babaoglu and A. Schiper. </author> <title> On Group Communication in Large-Scale Distributed Systems. </title> <type> TR UBLCS94-19, </type> <institution> Laboratory of Computer Science, University of Bologna, </institution> <year> 1994. </year>
Reference-contexts: EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication [AAD93, ADMSM94, Kei94] used the group communication service provided by Transis. The RELACS <ref> [BS94, BDGB94] </ref> system provides membership service and view synchrony in large-scale distributed systems. View synchrony guarantees that for each path in the partial order of view changes, message deliveries are totally ordered with respect to view changes.
Reference: [BSS91] <author> K. P. Birman, A. Schiper, and P. Stephenson. </author> <title> Lightweight Causal and Atomic Group Multicast. </title> <journal> ACM Trans. Comp. Syst., </journal> <volume> 9(3) </volume> <pages> 272-314, </pages> <year> 1991. </year>
Reference-contexts: We relate our work to multicast communication protocols. The ISIS toolkit <ref> [BSS91, BJ87, BCJ + 90, BvR94] </ref> is one of the first general purpose group communication systems. ISIS provides a group communication session service, where processes can join process groups, multicast messages to groups, and receive messages sent to groups.
Reference: [BvR94] <author> K. P. Birman and R. van Renesse. </author> <title> Reliable Distributed Computing with the Isis Toolkit. </title> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: We relate our work to multicast communication protocols. The ISIS toolkit <ref> [BSS91, BJ87, BCJ + 90, BvR94] </ref> is one of the first general purpose group communication systems. ISIS provides a group communication session service, where processes can join process groups, multicast messages to groups, and receive messages sent to groups. <p> In addition, upon inserting of a message m into the DAG, we insert m into the candidate wave if m is a candidate message. 1.3.4 The Extended Virtual Synchrony Extended Virtual Synchrony, (EVS), extends the virtual synchrony model of the ISIS system <ref> [BvR94] </ref>. Virtual synchrony in ISIS is designed to support failures that respect the fail-stop model. In addition, EVS supports crash and recovery failures and network partions and remerges.
Reference: [CHD96] <author> G. Chockler, N. Huleihel, and Danny Dolev. </author> <title> Efficient Multicast Services in Asynchronous Distributed Systems. </title> <note> 1996. In preparation. </note>
Reference-contexts: The DAG is derived from negative and positive acknowledgements piggybacked on the messages. A detailed description of the Lansis protocol is found in <ref> [CHD96] </ref>. Messages are uniquely identified through a pair &lt; sender; counter &gt;. Whenever a message is emitted, it causally follows all the messages in the portion of the DAG currently revealed by the message's sender (this results immediately from the definition of the causal order). <p> It computes the total order based on the DAG structure without exchanging of additional messages. A full description of the Wave algorithm is found in <ref> [CHD96] </ref>. In order to describe the all-ack algorithm, we define the following: A message in the DAG that causally follows only delivered messages is called a candidate message. The set of candidate messages is called the candidate wave.
Reference: [DKM93] <author> D. Dolev, S. Kramer, and D. Malki. </author> <title> Early Delivery Totally Ordered Broadcast in Asynchronous Environments. </title> <booktitle> In 23rd Annual International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 544-553, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Two total order algorithms extended the causal order to a total, agreed order. The first is the all-ack algorithm which is similar to the algorithm used in Psync, and the second is the TOTO early delivery algorithm <ref> [DKM93, Kra92] </ref>. Both compute the total order based on the DAG structure without exchanging of additional messages. While TOTO is more efficient than all-ack, it can not maintain extended virtual synchrony.
Reference: [Her91] <author> M. Herlihy. </author> <title> Wait-Free Synchronization. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 11(1) </volume> <pages> 124-149, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: It offers an excellent idea of using hierarchical representation in order to efficiently extend the protocols of Transis to large systems. 4 Shlomo Kramer, presented in his thesis, [Kra92, pages 46-57], a hierarchical system that used the concurrent object paradigm introduced in <ref> [Her91, HW87] </ref>. He proved that preserving causal and total order is possible in hierarchical communication systems (hierarchical concurrent systems) that employ selective communication among clusters, but he did not consider the problem of network partitions. 1.3 Transis Protocols The Transis project provides group communication service in a partionable network.
Reference: [HW87] <author> M. Herlihy and J. Wing. </author> <title> Axioms for Concurrent Objects. </title> <booktitle> In Proceedings of the fourteenth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming languages, </booktitle> <pages> pages 13-26, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: It offers an excellent idea of using hierarchical representation in order to efficiently extend the protocols of Transis to large systems. 4 Shlomo Kramer, presented in his thesis, [Kra92, pages 46-57], a hierarchical system that used the concurrent object paradigm introduced in <ref> [Her91, HW87] </ref>. He proved that preserving causal and total order is possible in hierarchical communication systems (hierarchical concurrent systems) that employ selective communication among clusters, but he did not consider the problem of network partitions. 1.3 Transis Protocols The Transis project provides group communication service in a partionable network.
Reference: [Kei94] <author> I. Keidar. </author> <title> A Highly Available Paradigm for Consistent Object Replication. </title> <type> Master's thesis, </type> <institution> Inst. of Computer Science, The Hebrew University of Jerusalem, </institution> <year> 1994. </year>
Reference-contexts: Each domain may contain several gateways connecting it to several other domains. EVS was first implemented in the Totem system [AMMS + 93]. Excellent reading about EVS and the Ring protocol is found in [Ami95]. Applications and algorithms for distributed replicated database systems and consistent object replication <ref> [AAD93, ADMSM94, Kei94] </ref> used the group communication service provided by Transis. The RELACS [BS94, BDGB94] system provides membership service and view synchrony in large-scale distributed systems. View synchrony guarantees that for each path in the partial order of view changes, message deliveries are totally ordered with respect to view changes.
Reference: [Kra92] <author> S. Kramer. </author> <title> Total Ordering of Messages in Multicast Communication Systems. </title> <type> Master's thesis, </type> <institution> Inst. of Computer Science, The Hebrew University of Jerusalem, </institution> <year> 1992. </year> <month> 78 </month>
Reference-contexts: Two total order algorithms extended the causal order to a total, agreed order. The first is the all-ack algorithm which is similar to the algorithm used in Psync, and the second is the TOTO early delivery algorithm <ref> [DKM93, Kra92] </ref>. Both compute the total order based on the DAG structure without exchanging of additional messages. While TOTO is more efficient than all-ack, it can not maintain extended virtual synchrony. <p> The hierarchical scheme based on pivots guarantees efficiency in routing. It offers an excellent idea of using hierarchical representation in order to efficiently extend the protocols of Transis to large systems. 4 Shlomo Kramer, presented in his thesis, <ref> [Kra92, pages 46-57] </ref>, a hierarchical system that used the concurrent object paradigm introduced in [Her91, HW87]. <p> This chapter describes the mechanism and protocols by which Transis extends the scope of its service outside the broadcast domain. The mechanism is called the Xport mechanism. The Xport mechanism was first presented by S. Kramer in his Master thesis <ref> [Kra92, pages 46-57] </ref>. However, he did not consider network partitions and remerges. In this chapter, we present improved protocols that are correct even in the presence of network partitions. 4.1 The Communication Domain The communication domain spans a Wide Area Network fW AN g.
Reference: [Lam78] <author> L. Lamport. </author> <title> Time, Clocks, and the Ordering of Events in a Distributed System. </title> <journal> Comm. ACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <month> July 78. </month>
Reference-contexts: This thesis introduces a hierarchical communication structure that maps out to the underlying network topology (possibly to the application architecture). New protocols that utilize the hierarchical communication structure will be defined. These protocols are correct even when network partions occur and extend the reliable causal (see <ref> [Lam78] </ref>) and agreed multicast services provided by Transis to the entire wide area communication domain. The communication domain will be represented as a hierarchical communication structure with k levels. Level 0 is the set of all sites in the domain. <p> Three multicast primitives are provided according to the EVS [MAMSA94] semantics: Causal multicast, Agreed multicast for total order delivery, and Safe multicast that provides stronger guarantees. The following are the formal definitions of these services: Causal: A causally ordered multicast service preserve the causal order (see <ref> [Lam78] </ref>). Intuitively, causal communication guarantees that a response to a certain message will never be delivered before the message. Agreed: The Agreed multicast service guarantees that any two messages m; m 0 delivered to multiple destinations, will be delivered in the same order everywhere. <p> For applications that do not utilize totally ordered multicast, we provide a weaker form of ordering. We provide two multicast services, the causal multicast service and agreed multicast service. Let H be a history of the events in the system: Causal order: Following Lamport <ref> [Lam78] </ref>, we define the causal order of messages as the reflexive, transitive closure of: (1) m cause ! m 0 if C deliver p (m) ! C multicast p (m 0 ) (2) m cause ! m 0 if C multicast p (m) ! C multicast p (m 0 ) The
Reference: [Mal94] <author> D. Malki. </author> <title> Multicast Communication for High Avalaibility. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: Although operational in asynchronous environment, the algorithm ensures terminations in a bounded time. The basic idea of this algorithm was adopted by Totem and Horus [vRBF + 95]. Excellent reading about Transis and its membership algorithm is found in <ref> [Mal94] </ref>. The second reliable multicast protocol is the Ring protocol [AMMS + 93]. This protocol uses a revolving token holder that coordinates the transmission and regulates the flow of broadcast messages. A membership protocol is provided by the Ring protocol.
Reference: [MAMSA94] <author> L. E. Moser, Y. Amir, P. M. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended Virtual Synchrony. </title> <booktitle> In Intl. Conference on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1994. </year> <note> to appear. Also available as technical report ECE93-22, </note> <institution> Department of Electrical and Computer Engineering, University of California, Santa Barbara, </institution> <address> CA. </address>
Reference-contexts: The Transis project, described in Section 1.3, provides group communication service in a partionable network. Three multicast primitives are provided according to the EVS <ref> [MAMSA94] </ref> semantics: Causal multicast, Agreed multicast for total order delivery, and Safe multicast that provides even stronger guarantees. Two different multicast protocols are 3 implemented in Transis. Lansis [ADKM92b], the earlier protocol, uses a direct acyclic graph (DAG) representing the causal relation on messages to provide reliable multicast. <p> Three multicast primitives are provided according to the EVS <ref> [MAMSA94] </ref> semantics: Causal multicast, Agreed multicast for total order delivery, and Safe multicast that provides stronger guarantees. The following are the formal definitions of these services: Causal: A causally ordered multicast service preserve the causal order (see [Lam78]).
Reference: [MPS89] <author> S. Mishra, L. L. Peterson, and R. D. Schlichting. </author> <title> Implementing Fault-tolerant Replicated Objects Using Psync. </title> <booktitle> IEEE Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 42-52, </pages> <month> Oct 89. </month>
Reference-contexts: The trans and Total protocols maintain causality and ensure that operational processors continue to order messages even though other processors have failed, provided that a resiliency constraint is met. The Psync protocol <ref> [PBS89, MPS89] </ref> builds a context graph that represents the causal partial order on messages. This causal order can be extended into a total order by determining complete waves of causally concurrent messages and by ordering the messages of a wave using some deterministic order.
Reference: [MSMA90] <author> P. M. Melliar-Smith, L. E. Moser, and V. Agrawala. </author> <title> Broadcast Protocols for Distributed Systems. </title> <journal> IEEE Trans. Parallel & Distributed Syst., </journal> <volume> 1(1) </volume> <pages> 17-25, </pages> <month> Jan </month> <year> 1990. </year>
Reference-contexts: CBCAST is implemented using vector timestamp that is piggybacked on each message. The ABCAST extends the causal order to a total order using a central group coordinator that emits ordering decisions. Total ordering is not maintained in ISIS across different groups. The Trans and total protocols <ref> [MSMA90] </ref> provides reliable ordered broadcast in an asynchronous environment. The Trans protocol uses positive and negative acknowledgements piggybacked onto broadcast messages and exploits the transitivity of positive acknowledge-ments to reduce the number of acknowledgments required.
Reference: [PBS89] <author> L. L. Peterson, N. C. Buchholz, and R. D. Schlichting. </author> <title> Preserving and Using Context Information in Interprocess Communication. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 7(3) </volume> <pages> 217-246, </pages> <month> August 89. </month>
Reference-contexts: The trans and Total protocols maintain causality and ensure that operational processors continue to order messages even though other processors have failed, provided that a resiliency constraint is met. The Psync protocol <ref> [PBS89, MPS89] </ref> builds a context graph that represents the causal partial order on messages. This causal order can be extended into a total order by determining complete waves of causally concurrent messages and by ordering the messages of a wave using some deterministic order.
Reference: [vRBF + 95] <author> R. van Renesse, K. Birman, R. Friedman, M. Hayden, and D. Karr. </author> <title> A Framework for Protocol Composition in Horus. </title> <booktitle> In Proceedings of the ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1995. </year> <month> 79 </month>
Reference-contexts: The membership algorithm of Transis [ADKM92a] is a symmetric protocol that was the first to handle network partitions and re-merges. Although operational in asynchronous environment, the algorithm ensures terminations in a bounded time. The basic idea of this algorithm was adopted by Totem and Horus <ref> [vRBF + 95] </ref>. Excellent reading about Transis and its membership algorithm is found in [Mal94]. The second reliable multicast protocol is the Ring protocol [AMMS + 93]. This protocol uses a revolving token holder that coordinates the transmission and regulates the flow of broadcast messages.
References-found: 28

