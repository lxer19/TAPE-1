URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1991/tr-91-011.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1991.html
Root-URL: http://www.icsi.berkeley.edu
Title: Algorithms for Sparse Rational Interpolation  
Author: Dima Grigoriev Marek Karpinski 
Date: January, 1991  
Pubnum: TR-91-011  
Abstract: We present two algorithms on sparse rational interpolation. The first is the interpolation algorithm in a sense of the sparse partial fraction representation of rational functions. The second is the algorithm for computing the entier and the remainder of a rational function. The first algorithm works without apriori known bound on the degree of a rational function, the second one is in the class NC provided the degree is known. The presented algorithms complement the sparse interpolation results of [Grigoriev, Karpinski, and Singer 90b]. 
Abstract-found: 1
Intro-found: 1
Reference: [BS 83] <author> Baur, W., Strassen, V., </author> <title> The Complexity of Partial Derivatives, </title> <journal> Theor. Com-put. Sci., 1983, </journal> <volume> 22, </volume> <pages> pp. 317-330. </pages>
Reference-contexts: If f 1 =f 2 is given by a short straight-line 5 program, then (f 1 =f 2 ) 0 can be represented also by a short straight-line program e.g. by virtue of <ref> [BS 83] </ref>. If (f 1 =f 2 ) is given by a certain physical process, then also one can get (f 1 =f 2 ) 0 . With the help of (f 1 =f 2 ) 0 one can recover the highest term of f 1 =f 2 at 1.
Reference: [BC 86] <author> Beame, P. W., Cook, S. A., Hoover, H. J., </author> <title> Log Depth Circuits for Division and Related Problems, </title> <journal> SIAM J. Comput., 1986, </journal> <volume> 15, </volume> <pages> pp. 994-1003. </pages>
Reference-contexts: Lemma is proved. Then one can produce in NC (<ref> [BC 86] </ref>) an integer t 4dt 2 and multiply it on N , so we get a rational number greater than 2 M=2t . Then again involving [BC 86], one can construct a rational number N 0 &gt; 36 2 3M d 5 . Calculate q (N 0 ). W.l.o.g. assume that lc (f ) &gt; 0.
Reference: [BT 89] <author> Ben-Or, M., Tiwari, P., </author> <title> A Deterministic Algorithm For Sparse Multivarite Polynomial Interpolation, </title> <booktitle> Proc. STOC ACM, </booktitle> <year> 1989, </year> <pages> pp. 301-309. </pages>
Reference-contexts: Take an integer N = [N 1 ] + 1, 11 which is also a big enough number. Having a big enough integer N , we'll find the entier [f =g] = h by a method similar to <ref> [BT 89] </ref> (see also [GK 87]), which one can call an approximative polynomial interpolation. We compute q (N ); q (N 2 ); : : : ; q (N 2t ) and take the nearest integers to them, respectively, A 1 ; : : : ; A 2t . <p> Then A i = h (N i ), 1 i 2t, since N is big enough, and one can apply BCH-codes (as in <ref> [BT 89] </ref>) to recover the powers of X occurring in h, and also the coefficients. Arithmetic complexity of the whole procedure for finding entier h is (t log d) O (1) and parallel complexity O (log t log log d). Acknowlegment: We thank Mike Singer for the number of interesting discussions.
Reference: [CG 82] <author> Chistov, A. L., Grigoriev, D. Yu., </author> <title> Polynomial-Time Factoring Multivariable Polynomials Over a Global Field, </title> <type> Preprint LOMI, </type> <institution> E-5-82, Leningrad, </institution> <year> 1982. </year> <month> 12 </month>
Reference-contexts: Thus, one can recover 4 f by solving a linear system G 0 Z = 0, hence c 1 ; : : :, fi 1 ; : : :, by polynomial factoring <ref> [CG 82] </ref>, representing c 1 ; : : :, as the roots of the irreducible over Q polynomials. <p> If to count bit complexity, then the time would be bounded by (dM ) O (1) , where d is the degree and M is the bit-size of the coefficients, and the parallel time log O (1) (dM ) (again by [M 86]). Remark about using <ref> [CG 82] </ref> for finding roots of denominator (see Section 2). f = 1it The number of c i is at most t because of t-sparsity of f 1 =f 2 . (f =GCD (f; f 0 ) = (Y c i ) apply to it [CG 82], find c i ! <p> Remark about using <ref> [CG 82] </ref> for finding roots of denominator (see Section 2). f = 1it The number of c i is at most t because of t-sparsity of f 1 =f 2 . (f =GCD (f; f 0 ) = (Y c i ) apply to it [CG 82], find c i ! find fi i in parallel time O (t) ! ff i ) 7 Finding an entier of a sparse rational function is in NC Let a rational function q 2 Q (x) be given by a black-box and we assume that q can be represented
Reference: [C 85] <author> Cook, S. A., </author> <title> A Taxonomy of Problems with Fast Parallel Algorithms, </title> <booktitle> Infor--mation and Control 64 (1985), </booktitle> <pages> pp. 2-22. </pages>
Reference-contexts: Unlike the previous sections we suppose that we know a bound d on the degrees deg (f ); deg (g) &lt; d. Under this supposition we'll show that the problem of finding the entier [f=g] = h 2 ZZ [X] is in the parallel class NC (cf. <ref> [C 85, KR 90] </ref>). Denote d 1 = deg (f), d 0 = deg (g), M is a maximal of bit-sizes of the coefficients of f; g (they are not supposed to be given). Represent q = f=g = [f =g] + Rem (f;g) g .
Reference: [DG 90] <author> Dress, A., Grabmeier, J., </author> <title> The Interpolation Problem for k-sparse Polynomials and Character Sums, </title> <note> to appear in Adv. App. Math., </note> <year> 1990. </year>
Reference-contexts: We study the most general method of representation of rational functions by black boxes (cf. [KT 88, GKS 90b]) and restrict ourselves in this paper to the univariate case only. For the technical developments which lead to this paper see <ref> [GKS 90a, GKS 90b, DG 90] </ref>. We discuss also these questions in view of the hardness results of Plaisted [P 77a, P 77b] on the sparse polynomial divisibility. We present two algorithms.
Reference: [GK 87] <author> Grigoriev, D. Yu., Karpinski, M., </author> <title> The Matching Problem for Bipartite Graphs with Polynomially Bounded Permanents is in NC, </title> <booktitle> Proc. 28 th IEEE FOCS (1987), </booktitle> <pages> pp. 166-172. </pages>
Reference-contexts: Take an integer N = [N 1 ] + 1, 11 which is also a big enough number. Having a big enough integer N , we'll find the entier [f =g] = h by a method similar to [BT 89] (see also <ref> [GK 87] </ref>), which one can call an approximative polynomial interpolation. We compute q (N ); q (N 2 ); : : : ; q (N 2t ) and take the nearest integers to them, respectively, A 1 ; : : : ; A 2t .
Reference: [GKS 90a] <author> Grigoriev, D. Yu., Karpinski, M., Singer, M., </author> <title> The Interpolation Problem for k-Sparse Sums of Eigenfunctions of Operators, </title> <note> to appear in Adv. Appl. Math., </note> <year> 1990. </year>
Reference-contexts: We study the most general method of representation of rational functions by black boxes (cf. [KT 88, GKS 90b]) and restrict ourselves in this paper to the univariate case only. For the technical developments which lead to this paper see <ref> [GKS 90a, GKS 90b, DG 90] </ref>. We discuss also these questions in view of the hardness results of Plaisted [P 77a, P 77b] on the sparse polynomial divisibility. We present two algorithms.
Reference: [GKS 90b] <author> Grigoriev, D. Yu., Karpinski, M., Singer, M., </author> <title> Interpolation of Sparse Rational Functions Without Knowing Bounds on Exponents, </title> <booktitle> Proc. 31 st IEEE FOCS 1990, </booktitle> <pages> pp. 840-846. </pages>
Reference-contexts: 1 Introduction We address a question of computational complexity of sparse rational interpolation and connected question of algebraic manipulation of sparse rational functions. We study the most general method of representation of rational functions by black boxes (cf. <ref> [KT 88, GKS 90b] </ref>) and restrict ourselves in this paper to the univariate case only. For the technical developments which lead to this paper see [GKS 90a, GKS 90b, DG 90]. <p> We study the most general method of representation of rational functions by black boxes (cf. [KT 88, GKS 90b]) and restrict ourselves in this paper to the univariate case only. For the technical developments which lead to this paper see <ref> [GKS 90a, GKS 90b, DG 90] </ref>. We discuss also these questions in view of the hardness results of Plaisted [P 77a, P 77b] on the sparse polynomial divisibility. We present two algorithms.
Reference: [KT 88] <author> Kaltofen E., Trager, B., </author> <title> Computing with Polynomials Given by Black Boxes for Their Evaluations: Greatest Common Divisors, Factorization, Separation of Numerators and Denominators, </title> <booktitle> Proc. 29 th IEEE FOCS 1988, </booktitle> <pages> pp. 296-305. </pages>
Reference-contexts: 1 Introduction We address a question of computational complexity of sparse rational interpolation and connected question of algebraic manipulation of sparse rational functions. We study the most general method of representation of rational functions by black boxes (cf. <ref> [KT 88, GKS 90b] </ref>) and restrict ourselves in this paper to the univariate case only. For the technical developments which lead to this paper see [GKS 90a, GKS 90b, DG 90].
Reference: [KR 90] <author> Karp, R. M. & Ramachandran, V. L., </author> <title> A Survey of Parallel Algorithms for Shared-Memory Machines, </title> <booktitle> in Handbook of Theoretical Computer Science, </booktitle> <publisher> North Holland (1990). </publisher>
Reference-contexts: Unlike the previous sections we suppose that we know a bound d on the degrees deg (f ); deg (g) &lt; d. Under this supposition we'll show that the problem of finding the entier [f=g] = h 2 ZZ [X] is in the parallel class NC (cf. <ref> [C 85, KR 90] </ref>). Denote d 1 = deg (f), d 0 = deg (g), M is a maximal of bit-sizes of the coefficients of f; g (they are not supposed to be given). Represent q = f=g = [f =g] + Rem (f;g) g .
Reference: [L 82] <author> Loos, R., </author> <title> Generalized Polynomial Remainder Sequences, in: "Computer Algebra", </title> <publisher> Springer, </publisher> <year> 1982, </year> <pages> pp. 115-137. </pages>
Reference-contexts: Assume now that d 1 d 0 &gt; 0. Notice that the ab solute value of each coefficient of rem (f; g) is at most (see <ref> [L 82] </ref>). Calculate then N 1 = q (q (N 0 )) &gt; 3 d 0 d 1 1 N (d 1 d 0 ) 2 0 . We claim that N 1 is big enough.
Reference: [MS 81] <author> Mac Williams, F. J., Sloan, N. J. A., </author> <title> The Theory of Error Correcting Codes, </title> <publisher> North-Holland, </publisher> <year> 1981. </year> <month> 13 </month>
Reference-contexts: ff d by solving a linear system (ff 1 ; : : : ; ff d )C 0 = (g 0 ; : : : ; g d1 ): Remark that for pairwise distinct c 1 ; : : : ; c d the described code converts into Goppa code <ref> [MS 81] </ref>.
Reference: [M 86] <author> Mulmuley, K., </author> <title> A Fast Parallel Algorithm to Compute the Rank of a Matrix Over an Arbitrary Field, </title> <booktitle> Proc STOC ACM, </booktitle> <year> 1986. </year>
Reference-contexts: Then the number of arithmetic operation necessary to fulfill is at most 3 O (t 2 log t) , and the number of parallel steps is O (t 5 log 2 t) by Mulmuley <ref> [M 86] </ref>. So, it is independent from the total degree d of the rational function. <p> If to count bit complexity, then the time would be bounded by (dM ) O (1) , where d is the degree and M is the bit-size of the coefficients, and the parallel time log O (1) (dM ) (again by <ref> [M 86] </ref>).
Reference: [P 77a] <author> Plaisted, D., </author> <title> Sparse Complex Polynomials and Polynomial Reducibility, </title> <journal> J. Comput. System Sci. </journal> <volume> 14 (1977), </volume> <pages> pp. 210-221 </pages>
Reference-contexts: For the technical developments which lead to this paper see [GKS 90a, GKS 90b, DG 90]. We discuss also these questions in view of the hardness results of Plaisted <ref> [P 77a, P 77b] </ref> on the sparse polynomial divisibility. We present two algorithms. For the first one we consider the partial-fraction representation of a rational function and the corresponding notion of sparsity as the number of terms in this representation.
Reference: [P 77b] <author> Plaisted, D., </author> <title> New NP-Hard and NP-Complete Polynomial and Integer Divisibility Problems, </title> <booktitle> Proc. 18 th IEEE FOCS (1977), </booktitle> <pages> pp. 241-253. 14 </pages>
Reference-contexts: For the technical developments which lead to this paper see [GKS 90a, GKS 90b, DG 90]. We discuss also these questions in view of the hardness results of Plaisted <ref> [P 77a, P 77b] </ref> on the sparse polynomial divisibility. We present two algorithms. For the first one we consider the partial-fraction representation of a rational function and the corresponding notion of sparsity as the number of terms in this representation.
References-found: 16

