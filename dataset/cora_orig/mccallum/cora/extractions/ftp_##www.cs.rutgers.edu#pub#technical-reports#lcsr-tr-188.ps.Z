URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-188.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Title: A uniform circuit lower bound for the permanent  
Author: Eric Allender Vivek Gore 
Note: that does not have nonuniform ACC circuits.  
Date: July 23, 1992  
Address: New Brunswick, NJ 08903  New Brunswick, NJ 08903  
Affiliation: Department of Computer Science Rutgers University  Department of Computer Science Rutgers University  
Abstract: We show that uniform families of ACC circuits of subexponential size cannot compute the permanent function. This also implies similar lower bounds for certain sets in PP. This is one of the very few examples of a lower bound in circuit complexity where the uniformity condition is essential; it is still unknown if there is any set in Ntime (2 n O(1) 
Abstract-found: 1
Intro-found: 1
Reference: [ABFR91] <author> J. Aspnes, R. Beigel, M. Furst, and S. Rudich. </author> <title> The expressive power of Voting Polynomials. </title> <booktitle> In Proc. 23rd ACM Symposium on Theory of Computing, </booktitle> <pages> pages 402-409, </pages> <year> 1991. </year>
Reference-contexts: Machinery for proving lower bounds for AC 0 has been developed in a series of papers, culminating in the powerful and elegant techniques of <ref> [H-as87, Yao85, ABFR91] </ref>. These papers provide exponential size lower bounds for constant depth circuits computing the PARITY function.
Reference: [AG91] <author> E. Allender and V. </author> <title> Gore. </title> <booktitle> On strong separations from AC 0 . In Proc. 8th International Conference on Fundamentals of Computation Theory (FCT '91), Lecture Notes in Computer Science 529, </booktitle> <pages> pages 1-15. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The work presented here originally started off as the study of sets that are immune to small complexity classes such as AC 0 and ACC. An infinite set L is immune to a complexity class C if no infinite subset of L is in C. In <ref> [AG91] </ref>, we show that P PP contains sets that are immune to ACC, and that nonrelativizing proof techniques suitable for attacking the Dtime vs.
Reference: [AH90] <author> E. Allender and U. Hertrampf. </author> <title> On the power of uniform families of constant depth threshold circuits. </title> <booktitle> In Proc. 15th International Symposium on Mathematical Foundations of Computer Science, Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: We follow this convention because the proof shows how to convert C n into D n for every n. 15 * By a construction in the proof of Lemma 13 in <ref> [AH90] </ref>, one can replace the AND and OR gates in the circuit by nice depth 6 probabilistic circuits with MOD 2 gates and small fan-in AND gates. (This construction is based on an idea of Valiant and Vazirani in [VV86]; similar constructions may be found in work by Toda [Tod91] and
Reference: [Bar86] <editor> D. Barrington. </editor> <booktitle> Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 . In Proc. 18th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 1-5, </pages> <year> 1986. </year>
Reference-contexts: Therefore, the next natural extension of the above class was to allow MOD m gates for various moduli m. This extension is known as the class ACC. It should be noted that this class was mentioned implicitly by Barrington in <ref> [Bar86] </ref> (see also [Bar89]).
Reference: [Bar89] <author> D. Barrington. </author> <title> Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 . Journal of Computer and System Sciences, </title> <booktitle> 38(1) </booktitle> <pages> 150-164, </pages> <year> 1989. </year>
Reference-contexts: Therefore, the next natural extension of the above class was to allow MOD m gates for various moduli m. This extension is known as the class ACC. It should be noted that this class was mentioned implicitly by Barrington in [Bar86] (see also <ref> [Bar89] </ref>). <p> Barrington <ref> [Bar89] </ref> has conjectured that ACC ( NC 1 . fl Supported in part by NSF grant CCR-9000045. y Supported in part by a Rutgers University Graduate Excellence Fellowship. 1 Yao [Yao90] proved the first nontrivial upper bounds on the power of ACC circuits; these bounds were slightly improved by Beigel and <p> sets that are not in P/poly (the class of languages accepted by nonuniform circuit families of polynomial size), whereas it does contain sets that are not in P (which is the class of languages accepted by uniform circuit families of polynomial size). 3 ACC was first defined and studied in <ref> [MT89, Bar89, BT88] </ref> under the name ACC 0 . Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids [BT88]. Razborov [Raz87] and Smolensky [Smo87] also studied bounded depth circuits containing AND, OR and MOD gates.
Reference: [Bar92] <author> D.M. Barrington. </author> <title> Quasipolynomial size circuit classes. </title> <booktitle> In Proc. 7th Structure in Complexity Theory Conference, </booktitle> <year> 1992. </year> <note> To appear. </note>
Reference-contexts: It would be interesting to see if our techniques can be used in this setting to obtain stronger lower bounds. Barrington has written a very nice article <ref> [Bar92] </ref> about the power of circuits of constant depth and 2 (log n) O (1) (quasipolynomial) size. The article surveys many results that deal with these kind 24 of circuits and provides an overview of the new complexity classes that have been introduced.
Reference: [BCGR92] <author> S. Buss, S. Cook, A. Gupta, and V. Ramachandran. </author> <title> An optimal parallel algorithm for formula evaluation. </title> <journal> SIAM Journal on Computing, </journal> <note> 1992. To appear. </note>
Reference-contexts: This convention has been introduced to simplify the proof. (It is worthwhile to note that the input length can be computed deterministically in logarithmic time (see <ref> [BCGR92] </ref>) but this requires multiple accesses to the input along a given computation path.) We consider ATMs that access their input only at the leaves. (That is, the only configurations that depend on the input are halting configurations.
Reference: [BCH84] <author> P.W. Beame, S.A. Cook, and H.J. </author> <title> Hoover. Log depth circuits for division and related problems. </title> <booktitle> In Proc. 25th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 1-11, </pages> <year> 1984. </year>
Reference-contexts: For very small complexity classes, however, the uniformity condition is sometimes crucial. For example, P-uniform NC 1 circuits are known for division <ref> [BCH84] </ref>, but it remains an open question whether one can improve this result using a more restrictive uniformity condition. Similarly, [BIS90] presents a number of beautiful characterizations of subclasses of NC 1 using Dlogtime uniformity, but these characterizations are not believed to hold if less restrictive uniformity conditions are used.
Reference: [BIS90] <author> D. Barrington, N. Immerman, and H. Straubing. </author> <title> On uniformity within N C 1 . Journal of Computer and System Sciences, </title> <booktitle> 41 </booktitle> <pages> 274-306, </pages> <year> 1990. </year>
Reference-contexts: For very small complexity classes, however, the uniformity condition is sometimes crucial. For example, P-uniform NC 1 circuits are known for division [BCH84], but it remains an open question whether one can improve this result using a more restrictive uniformity condition. Similarly, <ref> [BIS90] </ref> presents a number of beautiful characterizations of subclasses of NC 1 using Dlogtime uniformity, but these characterizations are not believed to hold if less restrictive uniformity conditions are used. In this paper, we consider uniform circuits out of necessity. <p> Then ACC (subexp) = [ s2subexp ACC (s (n)) ACC (subsubexp) = [ s2subsubexp ACC (s (n)) 2 Note that this is slightly different from the notion of Dlogtime-uniformity that is generally used for small complexity classes (see <ref> [BIS90] </ref> and [Ruz81]). Our notion of uniformity can be informally referred to as Polylogtime-uniformity. The reason we use this notion is that we are dealing with circuits of (sub)subexponential size and the proofs are much simpler with this uniformity condition. <p> The article surveys many results that deal with these kind 24 of circuits and provides an overview of the new complexity classes that have been introduced. The paper also shows that the notion of uniformity introduced for constant depth circuit families of polynomial size in <ref> [BIS90] </ref> can be extended to quasipolynomial size as well. It should be noted that this extended notion of uniformity coincides with the one that we have used.
Reference: [Bor77] <author> A. Borodin. </author> <title> On relating time and space to size and depth. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6 </volume> <pages> 733-743, </pages> <year> 1977. </year>
Reference-contexts: The original motivation for studying uniform circuit families came from a desire to relate time and space complexity classes to circuit complexity (see, e.g., <ref> [Bor77] </ref>). Some sort of uniformity condition is essential for this endeavor to succeed, since it is an easy observation that there are sets with trivial circuit complexity that are not even recursive.
Reference: [BT88] <author> D. Barrington and D. Therien. </author> <title> Finite monoids and the fine structure of NC 0 . Journal of the ACM, </title> <booktitle> 35(4) </booktitle> <pages> 941-952, </pages> <year> 1988. </year> <month> 25 </month>
Reference-contexts: sets that are not in P/poly (the class of languages accepted by nonuniform circuit families of polynomial size), whereas it does contain sets that are not in P (which is the class of languages accepted by uniform circuit families of polynomial size). 3 ACC was first defined and studied in <ref> [MT89, Bar89, BT88] </ref> under the name ACC 0 . Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids [BT88]. Razborov [Raz87] and Smolensky [Smo87] also studied bounded depth circuits containing AND, OR and MOD gates. <p> Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids <ref> [BT88] </ref>. Razborov [Raz87] and Smolensky [Smo87] also studied bounded depth circuits containing AND, OR and MOD gates. Yao's definition of ACC is slightly different from the one given by Barrington et al; it allows a fixed finite set S of moduli instead of a single modulus m.
Reference: [BT91] <author> R. Beigel and J. Tarui. </author> <booktitle> On ACC. In Proc. 32nd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 783-792, </pages> <year> 1991. </year>
Reference-contexts: conjectured that ACC ( NC 1 . fl Supported in part by NSF grant CCR-9000045. y Supported in part by a Rutgers University Graduate Excellence Fellowship. 1 Yao [Yao90] proved the first nontrivial upper bounds on the power of ACC circuits; these bounds were slightly improved by Beigel and Tarui <ref> [BT91] </ref> who showed that each set in ACC is accepted by a family of deterministic depth three threshold circuits of size 2 (log n) O (1) . These results have been proved for nonuniform ACC. We are, however, interested in the uniform version of ACC. <p> In fact, it is even unknown if there is any set in Ntime (2 n O (1) ) that is not accepted by a nonuniform ACC circuit family. To prove Theorem 1, we will first use the results of Toda [Tod91], Yao [Yao90] and Beigel and Tarui <ref> [BT91] </ref> to convert a circuit family in ACC ((sub)subexp) into an equivalent circuit family of depth two circuits with a symmetric gate at level two, AND gates of small fan-in at level one and the input gates at level zero. <p> Results about PERM then follow from Valiant's [Val79] results about the class #P. Section 2 presents some basic definitions. The following section states Theorem 3, which is a uniform version of the main result of <ref> [BT91] </ref>. Theorem 3 is then used to prove the main results of the paper. Section 4 is devoted to the proof of Theorem 3, and is the longest and most technically-involved part of the paper. <p> Theorem 3 is then used to prove the main results of the paper. Section 4 is devoted to the proof of Theorem 3, and is the longest and most technically-involved part of the paper. Even though the basic machinery of this section was developed in <ref> [Yao90, BT91] </ref>, there are many obstacles to overcome to ensure that one maintains uniformity. <p> Yao [Yao90] showed that every language in ACC is recognized by a family of depth two probabilistic circuits with a symmetric gate at level two and 2 (log n) O (1) AND gates having fan-in (log n) O (1) at level one. Beigel and Tarui <ref> [BT91] </ref> improved this to show the existence of deterministic circuit families of this sort. Definition 4 For an NP machine M , let #acc M be the function #acc M : fl ! N defined by #acc M (x) = number of accepting paths of M on input x . <p> The above theorem is the most important part of the argument and most of the paper hereafter is devoted to its proof. The proof uses techniques developed by Beigel and Tarui <ref> [BT91] </ref>, Yao [Yao90] and Toda [Tod91]. The reader who is willing to accept the fact that the construction of [BT91] can be carried out uniformly can simply skip Section 4 (where Theorem 3 is proved). <p> The proof uses techniques developed by Beigel and Tarui <ref> [BT91] </ref>, Yao [Yao90] and Toda [Tod91]. The reader who is willing to accept the fact that the construction of [BT91] can be carried out uniformly can simply skip Section 4 (where Theorem 3 is proved). The rest of this section assumes that Theorem 3 is true, and uses it to prove our main results. <p> The definitions, lemmas and theorems presented in this section all lead up to the proof. Since the proof of Theorem 3 is fairly involved, we first start with a very high level outline. Outline: Since our goal in this section is to prove that the construction of <ref> [BT91] </ref> can be done uniformly, it is necessary to prove some preliminary results about uniform constant depth circuits. To that end, we define the notions of "clean" and "nice" circuits, which are circuits that have certain properties that we find essential in presenting our uniformity results. <p> Sup pose C 2 n contains a MOD p e gate G for some prime p and e &gt; 1. This step uses the following result (for references, see e.g. <ref> [BT91] </ref>): x is congruent to 0 (mod p e ) if and only if each of x; x x x are congruent to 0 (mod p). <p> Our proof again follows the outline given in <ref> [BT91] </ref>, where we must be careful to see that the transformation can be done uniformly. Suppose G is an AND gate (the output gate of some C n;t that has r MOD p gates G 1 ; G 2 ; : : : ; G r as inputs). <p> Then there is an equivalent SYMACC circuit family fD n g satisfying the same conditions, such that each path from the output gate to an input gate passes through k 1 MOD gates. Proof. Our proof follows the outline in <ref> [BT91] </ref>, using techniques developed in [Yao90, Tod91]. <p> Note that k (n) is computable in time (log s (n)) O (1) . For the rest of this discussion, fix n, and let k denote k (n). It is shown in <ref> [BT91] </ref> that the polynomial P k defined by P k (y) = (1) k+1 (y 1) k ( j=0 j y j ) + 1 satisfies the property that for every m 1 and y 0, y 0 (mod m) =) P k (y) 0 (mod m k ) and Let <p> We have also proved a somewhat weaker bound for certain sets in PP by showing that these sets cannot be recognized by uniform ACC circuit families of susbsubexponential size. The proofs are based on a simulation of ACC given by Beigel and Tarui in <ref> [BT91] </ref>. We have shown how to carry out this simulation in the uniform setting. Some of the obvious open problems are: * Is uniformity really necessary? Our lower bound proofs work only in the uniform setting. <p> They show that every language in ACC can be accepted by a family of depth two deterministic circuits of size 2 (log n) c with a MidBit gate at the root and AND gates of fan-in (log n) c at the second level. The improvement over the result in <ref> [BT91] </ref> is that the symmetric function at the top need not be different for different input sizes. It would be interesting to see if our techniques can be used in this setting to obtain stronger lower bounds. <p> It should be noted that this extended notion of uniformity coincides with the one that we have used. Independently of our work, the paper also shows that the simulation of Beigel and Tarui <ref> [BT91] </ref> is uniform according to this new notion of uniformity. In addition, it also shows that the simulation of Green, Kobler and Toran [GKT92] is uniform under this notion as well.
Reference: [CKS81] <author> A.K. Chandra, D.C. Kozen, and L.J. Stockmeyer. </author> <title> Alternation. </title> <journal> JACM, </journal> <volume> 28 </volume> <pages> 114-133, </pages> <year> 1981. </year>
Reference-contexts: The proof of the above lemma follows from a sequence of lemmas that are presented below. The proofs of these lemmas make use of a version of the Alternating Turing Machine (ATM) model of computation. The model that we use here is somewhat different from the one defined in <ref> [CKS81] </ref>. The existential and universal states in our ATMs behave as usual (for background on alternation, see [CKS81]). Each configuration of an ATM has either zero, one, or two successor configurations (i.e., the fan-out of any node in the computation tree is at most two). <p> The model that we use here is somewhat different from the one defined in <ref> [CKS81] </ref>. The existential and universal states in our ATMs behave as usual (for background on alternation, see [CKS81]). Each configuration of an ATM has either zero, one, or two successor configurations (i.e., the fan-out of any node in the computation tree is at most two).
Reference: [FL92] <author> U. Feige and C. Lund. </author> <title> On the hardness of computing the Permanent of random matrices. </title> <booktitle> In Proc. 24th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 643-654, </pages> <year> 1992. </year>
Reference-contexts: It should be emphasized that our results about the complexity of PERM do not rely on any unproven complexity-theoretic assumptions. This is in contrast to other results such as <ref> [FL92] </ref>, which proves stronger intractability results about PERM under the hypothesis that the polynomial hierarchy is infinite. We conclude with a few remarks about some related work that has been done recently.
Reference: [GKT92] <author> F. Green, J. Kobler, and J. Toran. </author> <title> The power of the middle bit. </title> <booktitle> In Proc. 7th Structure in Complexity Theory Conference, </booktitle> <year> 1992. </year> <note> To appear. </note>
Reference-contexts: This is in contrast to other results such as [FL92], which proves stronger intractability results about PERM under the hypothesis that the polynomial hierarchy is infinite. We conclude with a few remarks about some related work that has been done recently. In <ref> [GKT92] </ref>, Green, Kobler and Toran have studied the class of languages that can be recognized in polynomial time with the information about just one bit from the value of a #P function. <p> Independently of our work, the paper also shows that the simulation of Beigel and Tarui [BT91] is uniform according to this new notion of uniformity. In addition, it also shows that the simulation of Green, Kobler and Toran <ref> [GKT92] </ref> is uniform under this notion as well.
Reference: [H-as87] <author> J. H-astad. </author> <title> Computational limitations for small depth circuits. </title> <type> PhD thesis, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <year> 1987. </year>
Reference-contexts: Machinery for proving lower bounds for AC 0 has been developed in a series of papers, culminating in the powerful and elegant techniques of <ref> [H-as87, Yao85, ABFR91] </ref>. These papers provide exponential size lower bounds for constant depth circuits computing the PARITY function. <p> For example, the combinatorial and algebraic techniques developed in <ref> [H-as87, Raz87, Smo87] </ref> make no use of uniformity, and thus they provide lower bounds on nonuniform circuit size. The uniformity condition is critical in the proof of Theorem 1; it is still unknown if PP = Dlogspace-uniform ACC.
Reference: [HS65] <author> J. Hartmanis and R. E. Stearns. </author> <title> On the computational complexity of algorithms. </title> <journal> Trans. AMS, </journal> <volume> 117 </volume> <pages> 285-306, </pages> <year> 1965. </year>
Reference-contexts: Since ACC PP, suppose for the sake of contradiction that ACC = PP. Then ACC = P = PP. Therefore, Dtime (n 3 ) Y P Y P = ACC Dtime (n 2 ) Y . But this contradicts the time hierarchy theorem of <ref> [HS65] </ref>. 2 This seems to be one of the very few instances 1 where lower bounds are known for the uniform circuit complexity of certain languages or functions, but where nothing is known about the nonuni form circuit complexity. <p> When we say that it is uniform, we are using a slightly different notion of uniformity which is explained in Definition 22. 5 theorem of <ref> [HS65] </ref>. Suppose PERM has ACC (subexp) circuits. Let L 2 Dtime (n 3 ) PERM [1] and let M be the oracle machine that accepts L making at most one call to PERM. <p> Since L 0 , L 00 and PERM all have ACC (subexp) circuit families, the resulting family for L is also in ACC (subexp). Therefore, using the result in Theorem 1, L 2 Dtime (n 2 ) PERM [1] which contradicts the hierarchy theorem of <ref> [HS65] </ref> since we started with an arbitrary L in Dtime (n 3 ) PERM [1] . Theorem 5 PP 6 ACC (subsubexp): Proof.
Reference: [KVVY92] <author> R. Kannan, H. Venkateswaran, V. Vinay, and A. Yao. </author> <title> A circuit-based proof of Toda's theorem. </title> <journal> Information and Computation, </journal> <note> 1992. To appear. </note>
Reference-contexts: and OR gates in the circuit by nice depth 6 probabilistic circuits with MOD 2 gates and small fan-in AND gates. (This construction is based on an idea of Valiant and Vazirani in [VV86]; similar constructions may be found in work by Toda [Tod91] and Kannan, Venkateswaran, Vinay and Yao <ref> [KVVY92] </ref>.) The size of the new circuit is only polynomially more than that of the old one. If the AND or OR gate being replaced has r inputs, then the probabilistic circuit that replaces it uses O ((log r) 3 ) random bits.
Reference: [MT89] <author> P. McKenzie and D. Therien. </author> <title> Automata theory meets circuit complexity. </title> <booktitle> In Proc. 16th Annual International Colloquium on Automata, Languages and Programming, Lecture Notes in Computer Science 372. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: sets that are not in P/poly (the class of languages accepted by nonuniform circuit families of polynomial size), whereas it does contain sets that are not in P (which is the class of languages accepted by uniform circuit families of polynomial size). 3 ACC was first defined and studied in <ref> [MT89, Bar89, BT88] </ref> under the name ACC 0 . Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids [BT88]. Razborov [Raz87] and Smolensky [Smo87] also studied bounded depth circuits containing AND, OR and MOD gates.
Reference: [Raz87] <author> A. A. Razborov. </author> <title> Lower bounds for the size of circuits of bounded depth with basis f^; g. </title> <journal> Math. notes of the Academy of Sciences of the USSR, </journal> <volume> 41(4) </volume> <pages> 333-338, </pages> <year> 1987. </year>
Reference-contexts: These papers provide exponential size lower bounds for constant depth circuits computing the PARITY function. These lower bounds prompted people to look at constant depth, polynomial size circuits with PARITY gates along with AND, OR and NOT gates but Razborov <ref> [Raz87] </ref> proved that these circuits could not compute the MAJORITY function. Smolensky [Smo87] extended Razborov's method to show that an AC 0 circuit with MOD p gates cannot compute the MOD q function if p and q are distinct primes. <p> For example, the combinatorial and algebraic techniques developed in <ref> [H-as87, Raz87, Smo87] </ref> make no use of uniformity, and thus they provide lower bounds on nonuniform circuit size. The uniformity condition is critical in the proof of Theorem 1; it is still unknown if PP = Dlogspace-uniform ACC. <p> Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids [BT88]. Razborov <ref> [Raz87] </ref> and Smolensky [Smo87] also studied bounded depth circuits containing AND, OR and MOD gates. Yao's definition of ACC is slightly different from the one given by Barrington et al; it allows a fixed finite set S of moduli instead of a single modulus m.
Reference: [Ruz81] <author> W.L. Ruzzo. </author> <title> On uniform circuit complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21(2) </volume> <pages> 365-383, </pages> <year> 1981. </year>
Reference-contexts: When providing upper bounds, or when defining complexity classes, as a practical matter it usually makes no difference which uniformity condition one uses. For example, Ruzzo <ref> [Ruz81] </ref> considers a number of related uniformity conditions, and shows that, for all k 2, NC k consists of languages defined by uniform circuits of polynomial size and (log n) k depth, no matter which of those uniformity conditions is considered. <p> Then #P = f#acc M : M is an NP machineg. It is well known from [Val79] that PERM is complete for #P under polynomial time many-one reductions ( p m ). Definition 5 Let fC n g be a family of circuits. Following <ref> [Ruz81] </ref>, we define the direct connection language L of fC n g as: L = fhn; g 1 ; g 2 i : g 1 = g 2 and g 1 is a gate in C n or g 1 6= g 2 and g 2 is an input to g <p> Then ACC (subexp) = [ s2subexp ACC (s (n)) ACC (subsubexp) = [ s2subsubexp ACC (s (n)) 2 Note that this is slightly different from the notion of Dlogtime-uniformity that is generally used for small complexity classes (see [BIS90] and <ref> [Ruz81] </ref>). Our notion of uniformity can be informally referred to as Polylogtime-uniformity. The reason we use this notion is that we are dealing with circuits of (sub)subexponential size and the proofs are much simpler with this uniformity condition. <p> Furthermore, if M has well-behaved universal configurations, then fC n g has small fan-in AND gates. Proof. The proof of this lemma is by a standard simulation of the sort introduced by <ref> [Ruz81] </ref>. The output gate of C n will be labelled by the initial configuration of N on an input of length n (i.e., with n recorded on the worktape, as per the conventions of our ATM model).
Reference: [Sip83] <author> M. Sipser. </author> <title> Borel sets and circuit complexity. </title> <booktitle> In Proc. 15th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 61-69, </pages> <year> 1983. </year>
Reference-contexts: These are of two types: those that accept if and only if bit i of the input is 1, and those that accept if and only if the complement of bit i is 1 (for some i that is recorded on the address tape). The results in <ref> [Sip83] </ref> show that this convention can be introduced without loss of generality.) The MOD states and other aspects of our ATM model are described in the following definitions. 8 Definition 15 For a modulus m, a MOD m configuration (say ) is always the root of a subtree of configurations in
Reference: [Smo87] <author> R. Smolensky. </author> <title> Algebraic methods in the theory of lower bounds for Boolean circuit complexity. </title> <booktitle> In Proc. 19th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 77-82, </pages> <year> 1987. </year>
Reference-contexts: These lower bounds prompted people to look at constant depth, polynomial size circuits with PARITY gates along with AND, OR and NOT gates but Razborov [Raz87] proved that these circuits could not compute the MAJORITY function. Smolensky <ref> [Smo87] </ref> extended Razborov's method to show that an AC 0 circuit with MOD p gates cannot compute the MOD q function if p and q are distinct primes. This implies that no AC 0 circuit containing MOD gates for a single prime can compute the MAJORITY function. <p> For example, the combinatorial and algebraic techniques developed in <ref> [H-as87, Raz87, Smo87] </ref> make no use of uniformity, and thus they provide lower bounds on nonuniform circuit size. The uniformity condition is critical in the proof of Theorem 1; it is still unknown if PP = Dlogspace-uniform ACC. <p> Barrington and Therien showed that ACC is equal to the class of languages recognized by polynomial length programs over solvable monoids [BT88]. Razborov [Raz87] and Smolensky <ref> [Smo87] </ref> also studied bounded depth circuits containing AND, OR and MOD gates. Yao's definition of ACC is slightly different from the one given by Barrington et al; it allows a fixed finite set S of moduli instead of a single modulus m.
Reference: [Tod91] <author> Seinosuke Toda. </author> <title> PP is as hard as the polynomial-time hierarchy. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(5) </volume> <pages> 865-877, </pages> <year> 1991. </year>
Reference-contexts: In fact, it is even unknown if there is any set in Ntime (2 n O (1) ) that is not accepted by a nonuniform ACC circuit family. To prove Theorem 1, we will first use the results of Toda <ref> [Tod91] </ref>, Yao [Yao90] and Beigel and Tarui [BT91] to convert a circuit family in ACC ((sub)subexp) into an equivalent circuit family of depth two circuits with a symmetric gate at level two, AND gates of small fan-in at level one and the input gates at level zero. <p> The above theorem is the most important part of the argument and most of the paper hereafter is devoted to its proof. The proof uses techniques developed by Beigel and Tarui [BT91], Yao [Yao90] and Toda <ref> [Tod91] </ref>. The reader who is willing to accept the fact that the construction of [BT91] can be carried out uniformly can simply skip Section 4 (where Theorem 3 is proved). The rest of this section assumes that Theorem 3 is true, and uses it to prove our main results. <p> At the beginning of the inductive step, the circuit consists of a symmetric gate on the output level, where the inputs to the symmetric gate are "nice" ACC circuits with MOD p gates feeding into the symmetric gate. Then, using techniques developed by Toda <ref> [Tod91] </ref> and Yao [Yao90], we create an equivalent circuit with a new symmetric gate that "absorbs" the level of MOD p gates; thus the new circuit has smaller depth. 4.1 Nice Circuits Definition 8 A circuit family fC n g is well-named if for every n, the name of the output <p> in [AH90], one can replace the AND and OR gates in the circuit by nice depth 6 probabilistic circuits with MOD 2 gates and small fan-in AND gates. (This construction is based on an idea of Valiant and Vazirani in [VV86]; similar constructions may be found in work by Toda <ref> [Tod91] </ref> and Kannan, Venkateswaran, Vinay and Yao [KVVY92].) The size of the new circuit is only polynomially more than that of the old one. If the AND or OR gate being replaced has r inputs, then the probabilistic circuit that replaces it uses O ((log r) 3 ) random bits. <p> Then there is an equivalent SYMACC circuit family fD n g satisfying the same conditions, such that each path from the output gate to an input gate passes through k 1 MOD gates. Proof. Our proof follows the outline in [BT91], using techniques developed in <ref> [Yao90, Tod91] </ref>. Let L and fC n g be as in the statement of the lemma, where the output gate of C n computes the function A (n; ), where is the number of elements of fC n;i : 1 i f (n)g that evaluate to 1.
Reference: [Val79] <author> L. G. Valiant. </author> <title> The complexity of computing the Permanent. </title> <journal> Theoretical Computer Science, </journal> <volume> 8 </volume> <pages> 189-201, </pages> <year> 1979. </year>
Reference-contexts: We then show that the language recognized by the new circuit family can be quickly recognized by a deterministic Turing machine that has access to a particular oracle set in PP. Results about PERM then follow from Valiant's <ref> [Val79] </ref> results about the class #P. Section 2 presents some basic definitions. The following section states Theorem 3, which is a uniform version of the main result of [BT91]. Theorem 3 is then used to prove the main results of the paper. <p> Then #P = f#acc M : M is an NP machineg. It is well known from <ref> [Val79] </ref> that PERM is complete for #P under polynomial time many-one reductions ( p m ). Definition 5 Let fC n g be a family of circuits. <p> Clearly, L 0 2 P. Similarly, let L 00 = fhx; ii : the i th bit of the query by M on input x is 1g. Clearly, L 00 2 P as well. A careful reading of Valiant's proof <ref> [Val79] </ref> reveals that the membership question for any set in PP can be reduced to PERM via uniform AC 0 circuits. Therefore, by the hypothesis, PP has ACC (subexp) circuits and hence, P has ACC (subexp) circuits. Now we can describe an ACC (subexp) circuit family for L.
Reference: [VV86] <author> L. Valiant and V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> Theoretical Computer Science, </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: * By a construction in the proof of Lemma 13 in [AH90], one can replace the AND and OR gates in the circuit by nice depth 6 probabilistic circuits with MOD 2 gates and small fan-in AND gates. (This construction is based on an idea of Valiant and Vazirani in <ref> [VV86] </ref>; similar constructions may be found in work by Toda [Tod91] and Kannan, Venkateswaran, Vinay and Yao [KVVY92].) The size of the new circuit is only polynomially more than that of the old one.
Reference: [Yao85] <author> A. Yao. </author> <title> Separating the polynomial-time hierarchy by oracles. </title> <booktitle> In Proc. 26th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 1-10, </pages> <year> 1985. </year> <month> 26 </month>
Reference-contexts: Machinery for proving lower bounds for AC 0 has been developed in a series of papers, culminating in the powerful and elegant techniques of <ref> [H-as87, Yao85, ABFR91] </ref>. These papers provide exponential size lower bounds for constant depth circuits computing the PARITY function.
Reference: [Yao90] <author> A. Yao. </author> <title> On ACC and threshold circuits. </title> <booktitle> In Proc. 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 619-627, </pages> <year> 1990. </year> <month> 27 </month>
Reference-contexts: Barrington [Bar89] has conjectured that ACC ( NC 1 . fl Supported in part by NSF grant CCR-9000045. y Supported in part by a Rutgers University Graduate Excellence Fellowship. 1 Yao <ref> [Yao90] </ref> proved the first nontrivial upper bounds on the power of ACC circuits; these bounds were slightly improved by Beigel and Tarui [BT91] who showed that each set in ACC is accepted by a family of deterministic depth three threshold circuits of size 2 (log n) O (1) . <p> In fact, it is even unknown if there is any set in Ntime (2 n O (1) ) that is not accepted by a nonuniform ACC circuit family. To prove Theorem 1, we will first use the results of Toda [Tod91], Yao <ref> [Yao90] </ref> and Beigel and Tarui [BT91] to convert a circuit family in ACC ((sub)subexp) into an equivalent circuit family of depth two circuits with a symmetric gate at level two, AND gates of small fan-in at level one and the input gates at level zero. <p> Theorem 3 is then used to prove the main results of the paper. Section 4 is devoted to the proof of Theorem 3, and is the longest and most technically-involved part of the paper. Even though the basic machinery of this section was developed in <ref> [Yao90, BT91] </ref>, there are many obstacles to overcome to ensure that one maintains uniformity. <p> It is easy to see that a MOD m gate can simulate a MOD k gate for any k that divides m. Letting m to be the least common multiple of the elements in S makes the two definitions equivalent. Yao <ref> [Yao90] </ref> showed that every language in ACC is recognized by a family of depth two probabilistic circuits with a symmetric gate at level two and 2 (log n) O (1) AND gates having fan-in (log n) O (1) at level one. <p> The above theorem is the most important part of the argument and most of the paper hereafter is devoted to its proof. The proof uses techniques developed by Beigel and Tarui [BT91], Yao <ref> [Yao90] </ref> and Toda [Tod91]. The reader who is willing to accept the fact that the construction of [BT91] can be carried out uniformly can simply skip Section 4 (where Theorem 3 is proved). <p> At the beginning of the inductive step, the circuit consists of a symmetric gate on the output level, where the inputs to the symmetric gate are "nice" ACC circuits with MOD p gates feeding into the symmetric gate. Then, using techniques developed by Toda [Tod91] and Yao <ref> [Yao90] </ref>, we create an equivalent circuit with a new symmetric gate that "absorbs" the level of MOD p gates; thus the new circuit has smaller depth. 4.1 Nice Circuits Definition 8 A circuit family fC n g is well-named if for every n, the name of the output gate of C <p> Then there is an equivalent SYMACC circuit family fD n g satisfying the same conditions, such that each path from the output gate to an input gate passes through k 1 MOD gates. Proof. Our proof follows the outline in [BT91], using techniques developed in <ref> [Yao90, Tod91] </ref>. Let L and fC n g be as in the statement of the lemma, where the output gate of C n computes the function A (n; ), where is the number of elements of fC n;i : 1 i f (n)g that evaluate to 1.
References-found: 28

