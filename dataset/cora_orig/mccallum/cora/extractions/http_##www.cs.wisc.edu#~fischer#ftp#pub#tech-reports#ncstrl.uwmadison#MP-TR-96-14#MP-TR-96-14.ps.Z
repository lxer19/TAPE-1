URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-96-14/MP-TR-96-14.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/MP-TR-96-14/
Root-URL: http://www.cs.wisc.edu
Title: Genetic Algorithms as Multi-Coordinators in Large-Scale Optimization  
Author: Ioannis T. Christou Wayne Martin Robert R. Meyer 
Abstract: We present high-level, decomposition-based algorithms for large-scale block-angular optimization problems containing integer variables, and demonstrate their effectiveness in the solution of large-scale graph partitioning problems. These algorithms combine the subproblem-coordination paradigm (and lower bounds) of price-directive decomposition methods with knapsack and genetic approaches to the utilization of "building blocks" of partial solutions. Even for graph partitioning problems requiring billions of variables in a standard 0-1 formulation, this approach produces high-quality solutions (as measured by deviations from an easily computed lower bound), and substantially outperforms widely-used graph partitioning techniques based on heuristics and spectral methods.
Abstract-found: 1
Intro-found: 1
Reference: [CM96a] <author> I. T. Christou and R. R. Meyer. </author> <title> Optimal and asymptotically optimal equi-partition of rectangular domains via stripe decomposition. </title> <editor> In H. Fischer, B. Riedmuller, and S. Scha*er, editors, </editor> <booktitle> Applied Mathematics and Parallel Computing - Festschrift for Klaus Ritter, </booktitle> <pages> pages 77-96. </pages> <publisher> Physica-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: most cases of interest, the domain G will contain at least one embedded square of area at least A p , in which case it can be shown that the optimal value of the subproblem is precisely 2 l 1=2 m . (It is possible to establish optimal subproblem values <ref> [CM96a] </ref> even if G is so elongated that it does not contain even one such square, but we will not consider such unusual cases here.) In addition, as shown in [YM92] it is possible to construct all possible optimal solutions to the subproblems, essentially by determining those rectangular "frames" with perimeter <p> of this solution from the lower bound, i.e., ffi = (v LB)=LB, where LB is the lower bound, we showed ffi &lt; l p m : (6) Thus, as N ! 1, this relative gap tends to 0, and we say that this family of solutions is asymptotically optimal. (See <ref> [CM96a] </ref> for analogous results for more general domains.) While this result establishes the quality of a particular stripe decomposition under certain assumptions on the parameters of the problem, the knapsack approach assumes only that P divides M N and determines a stripe decomposition that is optimal with respect to a particular
Reference: [CM96b] <author> I. T. Christou and R. R. Meyer. </author> <title> Optimal equi-partition of rectangular domains for parallel computation. </title> <journal> Journal of Global Optimization, </journal> <volume> 8 </volume> <pages> 15-34, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: method was unable to prove optimality after running 4 for 6000 seconds and generating more than 45,000 nodes in the tree. (In contrast, the knapsack approach solved to optimality problems with N as large as 1000 in less than 1 second.) The knapsack approach was motivated by error bound results <ref> [CM96b] </ref> for the special case P = M N . These error bound results demonstrated the asymptotic optimality of solutions corresponding to a particular stripe decomposition.
Reference: [Dav97] <author> L. D. Davis. </author> <title> Hybrid genetic algorithms for optimization. </title> <booktitle> In Proceedings of IMA Evolutionary Algorithms Workshop. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: In multi-commodity fixed-charge networks, for example, the subproblems would be single-commodity subproblems corresponding to various approximations of the the fixed-charges. Recent results in telecommunications network design <ref> [Dav97] </ref> and pharmaceutical design [Har94] demonstrate that this paradigm of utilizing subproblem solutions as building blocks within the context of genetic algorithms is very effective in those problem domains as well.
Reference: [Fal94] <author> Emanuel Falkenauer. </author> <title> A new representation and operations for genetic algorithms applied to grouping problems. </title> <journal> Evolutionary Computation, </journal> <volume> 2(2) </volume> <pages> 123-144, </pages> <year> 1994. </year>
Reference-contexts: That is, an allele corresponded to a particular optimal shape chosen from a library of optimal shapes, and the procedure for cell assignment was designed to construct an assignment similar to the one corresponding to that optimal shape. This approach was similar to the Grouping GA approach of <ref> [Fal94] </ref>. However, we have now developed a higher-level GA in which the alleles correspond to stripe heights, which can be regarded as collections of subproblem solutions. This higher-level approach is faster and has provided better results for our collection of test problems.
Reference: [GBD + 94] <author> A. Geist, A. Beguelin, J. Dongarra, W. Jiang, R. Manchek, and V. Sunderam. </author> <title> PVM 3 User's Guide and Reference Manual. </title> <institution> Oak Ridge National Laboratory, </institution> <year> 1994. </year>
Reference-contexts: DGA was allowed to run for 20 generations. It was implemented in C and uses the PVM 3.3.10 message passing interface for all communication required <ref> [GBD + 94] </ref>. DGA runs on a Cluster of Workstations (COW) available at the Computer Sciences Dept. at the University of Wisconsin - Madison. Each workstation is a Sun SPARC-Server 20 running at 66MHz, and comes equipped with 64MB of RAM.
Reference: [GMT95] <author> J. R. Gilbert, G. L. Miller, and S. H. Teng. </author> <title> Geometric mesh partitioning: Implementation and experiments. </title> <booktitle> In Proceedings of the 9th International Symposium on Parallel Processing, </booktitle> <pages> pages 418-427, </pages> <year> 1995. </year>
Reference-contexts: For RSB, we used the Chaco package [HL95] that was provided to us by B. Hendrickson and R. Leland. Chaco is written entirely in ANSI C. We obtained a version of the Geometric Mesh Partitioner from the ftp site indicated in <ref> [GMT95] </ref>. It is written in MATLAB which helps explain the 5 long response times for some of the larger problems in our test-suite. MSP is written in FORTRAN 77. All programs run on a Sun SPARC-Station 20 workstation.
Reference: [Gre95] <author> J. J. Grefenstette. </author> <title> Virtual genetic algorithms: First results. </title> <type> Technical Report AIC-95-013, </type> <institution> Navy Center for Applied Research in AI, </institution> <year> 1995. </year>
Reference-contexts: An interesting aspect of the encoding in terms of stripe heights is that the fitness computation requires the application of snake (optionally followed by a local search), which can be time-consuming for large problems. Under these circumstances the investigation of GA variants by means of virtual GA's <ref> [Gre95] </ref> (in which fitness evaluations are replaced by statistical models of fitness) offers the possibility of streamlining the GA construction process. Our statistical models could extend the approach of [Gre95] by taking advantage of data on quality indices for slices or slice "overflow" at breakpoints. <p> Under these circumstances the investigation of GA variants by means of virtual GA's <ref> [Gre95] </ref> (in which fitness evaluations are replaced by statistical models of fitness) offers the possibility of streamlining the GA construction process. Our statistical models could extend the approach of [Gre95] by taking advantage of data on quality indices for slices or slice "overflow" at breakpoints. The approach described above for two-dimensional graph partitioning can be readily extended to three dimensions. The slices in that case are determined by planes orthogonal to one of the axes.
Reference: [Har94] <author> W. E. Hart. </author> <title> Adaptive global optimization with local search. </title> <type> PhD thesis, </type> <institution> University of.California, </institution> <address> San Diego, </address> <year> 1994. </year>
Reference-contexts: In multi-commodity fixed-charge networks, for example, the subproblems would be single-commodity subproblems corresponding to various approximations of the the fixed-charges. Recent results in telecommunications network design [Dav97] and pharmaceutical design <ref> [Har94] </ref> demonstrate that this paradigm of utilizing subproblem solutions as building blocks within the context of genetic algorithms is very effective in those problem domains as well.
Reference: [HL95] <author> B. Hendrickson and R. Leland. </author> <note> The Chaco User's Guide Version 2.0. </note> <institution> Sandia National Laboratories, </institution> <month> July </month> <year> 1995. </year> <month> 10 </month>
Reference-contexts: Table 1 gives the results of comparisons between our approach and two other popular (and well established) graph partitioning methods: recursive spectral bisection (RSB) and the Geometric Mesh Partitioner (GEOMETRIC). For RSB, we used the Chaco package <ref> [HL95] </ref> that was provided to us by B. Hendrickson and R. Leland. Chaco is written entirely in ANSI C. We obtained a version of the Geometric Mesh Partitioner from the ftp site indicated in [GMT95].
Reference: [KK95] <author> George Karypis and Vipin Kumar. </author> <title> Multilevel k-way partitioning scheme for irregular graphs. </title> <type> Technical Report 95-064, </type> <institution> Department of Computer Science, University of Min-nesota, </institution> <year> 1995. </year>
Reference-contexts: Promising candidates include variants of Kenighan-Lin [KL70] tailored to focus on boundary cells <ref> [KK95] </ref>, tabu search, and simulated annealing. In addition, we will consider methods involving more general swap cycles (as opposed to pairwise swaps) based on linear network approximations to the QAP and focused on boundary cells of components with poor perimeter and neighboring components.
Reference: [KL70] <author> B. W. Kernighan and S. Lin. </author> <title> An effective heuristic procedure for partitioning graphs. </title> <journal> Bell Systems Tech. Journal, </journal> <pages> pages 291-308, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: Promising candidates include variants of Kenighan-Lin <ref> [KL70] </ref> tailored to focus on boundary cells [KK95], tabu search, and simulated annealing. In addition, we will consider methods involving more general swap cycles (as opposed to pairwise swaps) based on linear network approximations to the QAP and focused on boundary cells of components with poor perimeter and neighboring components.
Reference: [Lev95] <author> D. Levine. </author> <title> User's Guide to the PGAPack Parallel Genetic Algorithm Library Version 0.2. </title> <institution> Argonne National Laboratory, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: We then employ a snake process to generate a feasible solution (optionally followed by a local search starting at that feasible solution). We use a distributed and asynchronous GA, termed DGA, that employs the island model of computations <ref> [MSB91, Lev95] </ref> where the algorithm spawns a number of processes, each of which is a GA running independently and asynchronously of the others Each island GA process is equipped with a communication mechanism that is essentially nothing more than simple send and receive calls and a broadcast feature available in most
Reference: [Mar96] <author> W. Martin. </author> <title> Fast equi-partitioning of rectangular domains using stripe decomposition. </title> <type> Technical Report MP-TR-96-2, </type> <institution> University of Wisconsin - Madison, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: Under these assumptions, the rectangular domain may be partitioned into a collection of horizontal "stripes" with heights h i A with the property that the total area of each stripe is a multiple of A and that the sum of the stripe heights is M <ref> [Mar96] </ref>. Heights h M with the property that hN (the area of the corresponding stripe) is a multiple of A will be termed "knapsack-valid"; observe that minfA; M g is always a knapsack-valid height. <p> well-chosen building blocks corresponding to groups of subproblem solutions and by appropriately coordinating these groups either by the knapsack or GA method, it is possible to substantially outperform state-of-the-art graph partitioning codes, which do not take advantage of problem structure. (Details of additional computational tests and comparisons are given in <ref> [Mar96] </ref>.) However, it is difficult to generalize this knapsack coordination approach to handle cases in which P does not divide M N or cases of non-rectangular domains. In the next section, we consider a more general approach based on utilizing GA's for the coordination of stripe heights.
Reference: [MSB91] <author> H. Muhlenbein, M. Schomisch, and J. Born. </author> <title> The parallel genetic algorithm as function optimizer. </title> <editor> In R. Belew and L. Booker, editors, </editor> <booktitle> Proceedings of the Fourth Intl. Conference on Genetic Algorithms, </booktitle> <pages> pages 45-52. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year>
Reference-contexts: We then employ a snake process to generate a feasible solution (optionally followed by a local search starting at that feasible solution). We use a distributed and asynchronous GA, termed DGA, that employs the island model of computations <ref> [MSB91, Lev95] </ref> where the algorithm spawns a number of processes, each of which is a GA running independently and asynchronously of the others Each island GA process is equipped with a communication mechanism that is essentially nothing more than simple send and receive calls and a broadcast feature available in most
Reference: [PJ94] <author> Mitchell A. Potter and Kenneth De Jong. </author> <title> A cooperative coevolutionary approach to function optimization. </title> <booktitle> In Proceedings of the Third International Conference on Parallel Problem Solving from Nature. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Thus, heuristics such as GA's may be utilized for the subproblems (see <ref> [PJ94] </ref>) as well as for the coordination step. Extensions of the results to non-uniform grids, triangulations, other data partitioning problems arising from parallel database design, and other types of fixed-charge networks provide promising areas for further research for this approach.
Reference: [PRW93] <author> P. M. Pardalos, F. Rendl, and H. Wolkowicz. </author> <title> The quadratic assignment problem: A survey and recent developments. </title> <editor> In P. M. Pardalos and H. Wolkowicz, editors, </editor> <title> Quadratic Assignment and Related Problems. </title> <publisher> American Mathematical Society, </publisher> <year> 1993. </year>
Reference-contexts: the possible assignment of processor p to cell i, I denote the set of pairs of adjacent cells, and A p the area (i.e., total number of cells to be assigned) for processor p, the simplest algebraic expression of the minimum perimeter problem is as a Quadratic Assignment Problem (QAP) <ref> [PRW93] </ref>: min i;j2G p;p 0 =1 c ij x i x j (3) 8 &gt; : i2G x i = A p p = 1 : : : P p=1 x i = 1 i 2 G p where c ij = ( 0 else and the partition sizes A p
Reference: [Sch89] <author> R. J. Schalkoff. </author> <title> Digital Image Processing and Computer Vision. </title> <publisher> John Wiley & Sons, </publisher> <year> 1989. </year>
Reference-contexts: Graph partitioning of large 5-point uniform grids arises in the context of the parallel solution of PDEs using finite difference schemes [Str89] in a parallel computing environment, in computer vision <ref> [Sch89] </ref> and in the simulation of molecular behavior in chemical engineering. It also is needed in the parallel solution of large-scale maximum-flow problems arising from the study of magnetic flux lines in super-conductors.
Reference: [Str89] <author> J. Strikwerda. </author> <title> Finite Difference Schemes and Partial Differential Equations. </title> <publisher> Wadsworth & Brooks, </publisher> <year> 1989. </year>
Reference-contexts: Graph partitioning of large 5-point uniform grids arises in the context of the parallel solution of PDEs using finite difference schemes <ref> [Str89] </ref> in a parallel computing environment, in computer vision [Sch89] and in the simulation of molecular behavior in chemical engineering. It also is needed in the parallel solution of large-scale maximum-flow problems arising from the study of magnetic flux lines in super-conductors.
Reference: [YM92] <author> J. Yackel and R. R. Meyer. </author> <title> Optimal tilings for parallel database design. </title> <editor> In P. M. Parda-los, editor, </editor> <booktitle> Advances in Optimization and Parallel Computing, </booktitle> <pages> pages 293-309. </pages> <publisher> North - Holland, </publisher> <year> 1992. </year> <month> 11 </month>
Reference-contexts: optimal value of the subproblem is precisely 2 l 1=2 m . (It is possible to establish optimal subproblem values [CM96a] even if G is so elongated that it does not contain even one such square, but we will not consider such unusual cases here.) In addition, as shown in <ref> [YM92] </ref> it is possible to construct all possible optimal solutions to the subproblems, essentially by determining those rectangular "frames" with perimeter is 2 l 1=2 m and area at least A p (there are O (A 1=4 p ) such frames). <p> coordination steps are performed in parallel, based on the use of genetic algorithms applied to high-level encodings. 7 4.2 Multi-Coordination via a Genetic Algorithm The initial GA that we considered for this problem class used an encoding in which each individual was represented by a vector of optimal shape indices <ref> [YM92] </ref>. That is, an allele corresponded to a particular optimal shape chosen from a library of optimal shapes, and the procedure for cell assignment was designed to construct an assignment similar to the one corresponding to that optimal shape. This approach was similar to the Grouping GA approach of [Fal94]. <p> The slices in that case are determined by planes orthogonal to one of the axes. In fact, the approach of fitting together, via multi-coordination techniques such as GA's, good or optimal solutions to subproblems, applies to a broad range of areas. In <ref> [YM92] </ref> we reported the successful application of a similar decomposition approach to data partitioning problems arising from 9 parallel database design.
References-found: 19

