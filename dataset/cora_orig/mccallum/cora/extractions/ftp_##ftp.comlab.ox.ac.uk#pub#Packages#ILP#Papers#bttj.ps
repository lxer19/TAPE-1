URL: ftp://ftp.comlab.ox.ac.uk/pub/Packages/ILP/Papers/bttj.ps
Refering-URL: http://gruffle.comlab.ox.ac.uk/oucl/groups/machlearn/mlg_pub.html
Root-URL: 
Title: Machine intelligibility and the duality principle  
Author: Stephen Muggleton Donald Michie 
Degree: Professor Emeritus  
Address: Parks Road Oxford, OX1 3QD, United Kingdom.  United Kingdom.  
Affiliation: Oxford University Computing Laboratory  University of Edinburgh  
Abstract: The scale and diversity of networked sources of data and computer programs is rapidly swamping human abilities to digest and even locate relevant information. The high speed of computing has compounded this problem by the generation of even larger amounts of data, derived in ways that are generally opaque to human users. The result is an increasing gulf between human and computer abilities. Society's ever wider-scale dependence on rapidly growing networked sources of software threatens severe breakdowns if machine intelligibility issues are not given high priority. In this paper we argue that lack of machine intelligibility in human-computer interactions can be traced directly to present approaches to software design. According to the duality principle in this paper, software involved in human-computer interaction should contain two distinct layers: a declarative knowledge-level layer and a lower-level functional or procedural-knowledge layer. This extends the formal methods separation of specification and implementation by requiring that the declarative layer be capable of extensive human interrogation at runtime. The declarative layer should support simple deductive and inductive inference. The ease with which declarative knowledge can be translated to natural language could be used to provide a human-comprehensible "window" into the properties of the underlying functional layer. Adaptation of the declarative knowledge in response to human interaction could be supported by modern machine learning mechanisms. In addition, declarative knowledge could be used to facilitate human-comprehensible communication between programs. Existing well-developed technologies can be used to implement the declarative layer. The obvious language of choice is pure 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B.P. Allen. </author> <title> Case-based reasoning: business applications. </title> <journal> Communications of the ACM, </journal> <volume> 37(3) </volume> <pages> 40-44, </pages> <year> 1994. </year>
Reference-contexts: ML applications are often published in the relevant trade journals, or described in advertising material. However, two recent issues of the Communications of the ACM (March 1994 and November 1995) provide in-depth surveys of real-world applications of ML. These surveys cover case-based learning <ref> [1] </ref>, neural networks [36], genetic algorithms [13], rule induction [18] and ILP [4].
Reference: [2] <author> R. Armstrong, D. Freitag, T. Joachims, and T. Mitchell. Webwatcher: </author> <title> a learning apprentice for the World Wide Web. </title> <booktitle> In AAAI Spring symposium on Information Gathering from Heterogeneous, Distributed Environments, </booktitle> <address> Stanford, </address> <year> 1995. </year> <note> http://www.cs.cmu.edu/afs/cs.cmu.edu/project/theo-6/web-agent/www/project-home.html. </note>
Reference-contexts: Maes and her colleagues have demonstrated an artificial dog as well as various reactive agent utilities which learn within a non-declarative representation for tasks such as email filters. 10 At CMU Mitchell and colleagues have developed a reactive agent called Web--Watcher <ref> [2] </ref> that learns about user interests on the World-Wide-Web. Like other reactive agents, although it adapts it cannot communicate learned knowledge to other agents or to users.
Reference: [3] <author> B. Blumberg. </author> <title> Lessons from ethology for autonomous agent architectures. </title> <editor> In K. Furukawa, D. Michie, and S. Muggleton, editors, </editor> <booktitle> Machine Intelligence 15: intelligent agents. </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1996. </year> <note> (To appear). </note>
Reference-contexts: High-level cognitive compatibility with humans is abandoned in favour of stimulus-response architectures, which lend themselves to straightforward robot implementations imported from mechanical engineering. Some work in Pattie Maes' group at MIT appears to be exploiting some of Brooks' ideas where it is applied to software agents <ref> [20, 3] </ref>. This approach is sometimes referred to as artificial life and is summarised in the following quote from Maes [20]. The goal of building an autonomous agent is as old as the field of AI itself.
Reference: [4] <author> I. Bratko and S. Muggleton. </author> <title> Applications of inductive logic programming. </title> <journal> Communications of the ACM, </journal> <volume> 38(11) </volume> <pages> 65-70, </pages> <year> 1995. </year>
Reference-contexts: This representation is both flexible and supports comprehensibility due to its close relationship with natural language. * Learning. Do not rely on hand-coding of knowledge. Machine Learning, when properly applied can generate hundreds of lines of validated code per day. The advent of ILP <ref> [4] </ref> ties this point to that of representation, since efficient systems now exist [32, 28] which use logic programming as 8 their sole representation for example databases, background knowledge and constructed theories. * Duality. <p> However, two recent issues of the Communications of the ACM (March 1994 and November 1995) provide in-depth surveys of real-world applications of ML. These surveys cover case-based learning [1], neural networks [36], genetic algorithms [13], rule induction [18] and ILP <ref> [4] </ref>.
Reference: [5] <author> R. Brooks. </author> <title> A robust layerd control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-2:14-23, </volume> <year> 1986. </year>
Reference-contexts: They perform learning, but only by rote memorisation of plans that succeeded or details that proved useful in the past. 5.2 The reactive school At MIT Rodney Brooks is advocating and leading a programme for building reactive insect-like robots <ref> [5] </ref>. High-level cognitive compatibility with humans is abandoned in favour of stimulus-response architectures, which lend themselves to straightforward robot implementations imported from mechanical engineering. Some work in Pattie Maes' group at MIT appears to be exploiting some of Brooks' ideas where it is applied to software agents [20, 3].
Reference: [6] <institution> JIPDEC Fifth Generation Computing Committee. </institution> <note> Preliminary report on study and research on fifth-generation computers in 1979-1980. Technical report, </note> <institution> Japan Information Processing Development Centre, </institution> <address> Tokyo, </address> <year> 1981. </year>
Reference-contexts: For these purposes we review the Japanese Fifth Generation project and the US CYC project. 4.1.1 Japanese Fifth Generation Project The Japanese Fifth Generation Computing Systems (FGCS) project <ref> [6] </ref> was one of a number of large-scale computing projects of the 1980s aimed at the construction of intelligent machinery. Intensive planning and research led to the identification of Horn clause logic as the best candidate for a single software representation for all parts of the project.
Reference: [7] <author> R. Droms. </author> <title> The Knowbot information service. </title> <note> FTP Report Corporation for National Research Initiatives (CNRI), </note> <month> December </month> <year> 1989. </year>
Reference-contexts: Like other reactive agents, although it adapts it cannot communicate learned knowledge to other agents or to users. WebWatcher has the merit of being freely available over the Web from the following site. http://www.cs.cmu.edu/afs/cs.cmu.edu/project/theo-6/web-agent/www/project-home.html Another class of agents that best fits within this category is that of Knowbots <ref> [7] </ref>. Knowbots perform a task similar to that of Softbots (Section 5.1) except that rather than employing planning, they carry out hard-wired commands which are encoded procedurally. Communication between Knowbots is opaque to human users and Knowbots do not learn from experience.
Reference: [8] <author> O. Etzioni and D. Weld. </author> <title> A softbot-based interface to the internet. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The one limited form of adaptive personalised agent interface that already exists is the Softbot framework developed by Etzioni and Weld <ref> [8] </ref>. Softbots employ a first-order predicate calculus representation and are primarily planners. Given an imprecisely specified goal, such as "set up a meeting on agents with Mitchell at CMU", the Softbot plans a precise set of commands to execute this goal.
Reference: [9] <author> T. Finin, R. Fritzson, D. McKay, and R. McEntire. </author> <title> KQML a language and protocol for knowledge and information exchange. </title> <type> Technical Report CS-94-02, </type> <institution> Computer Science Department, University of Maryland and Valley Forge Engineering Center, Unisys Corporation, Computer Science Department, University of Maryland, </institution> <address> UMBC Baltimore MD 21228, </address> <year> 1994. </year>
Reference-contexts: Despite its declarative elegance this approach runs into problems with tractability and completeness of inference. Genesereth [11] has followed McCarthy's lead and produced specific plans for agent-oriented software based on the logical communication languages KQML and KIF <ref> [9] </ref>. These languages, which are extensions of first-order Horn clause logic (in a LISP-like syntax) allow declarative definition and communication of agent knowledge. Genesereth advocates the idea of "software wrappers" which allow existing 9 legacy software to be converted to agent-oriented form by embedding within a KQML/KIF exterior.
Reference: [10] <editor> K. Furukawa, D. Michie, and S. Muggleton. </editor> <booktitle> Machine Intelligence 13: machine intelligence and inductive learning. </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1994. </year>
Reference-contexts: Prof. K. Furukawa, Research Director of the Japanese Fifth Generation project, has admitted privately that a central error of theirs was the initial omission of computer induction when planning the project. Since 1992, Prof. Furukawa <ref> [10] </ref> has focussed his main research area on the application of "Inductive Logic Programming systems to various problems including natural language processing, skill acquisition and economics". 4.1.2 US CYC Project In response to the Japanese FGCS project, the US started its own privately funded Artificial Intelligence project called CYC at MCC
Reference: [11] <author> M. Genesereth and S.P. Ketchpel. </author> <title> Software agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 48-53, </pages> <year> 1994. </year>
Reference-contexts: He underlines the necessity of agents being able to reason about other agents' beliefs, including their own. Despite its declarative elegance this approach runs into problems with tractability and completeness of inference. Genesereth <ref> [11] </ref> has followed McCarthy's lead and produced specific plans for agent-oriented software based on the logical communication languages KQML and KIF [9]. These languages, which are extensions of first-order Horn clause logic (in a LISP-like syntax) allow declarative definition and communication of agent knowledge.
Reference: [12] <author> M. Ginsberg. </author> <title> Knowledge interchange format: The kif of death. </title> <journal> AI Magazine, </journal> <volume> 12(3) </volume> <pages> 57-63, </pages> <month> Fall </month> <year> 1991. </year>
Reference-contexts: This approach is related to the duality principle, though it lays no stress on the importance of machine learning or human-computer communication. Also the KQML/KIF attempts to standardise predicate usage in inter-agent communication have been contended even within the limits of the AI community <ref> [12] </ref>. It is our belief that, in contrast to Genesereth's top-down approach, large-scale usage of agent software|like large-scale usage of the WWW|is more likely to be achieved bottom-up, by way of adaptive personalised agent interfaces.
Reference: [13] <author> D.E. Goldberg. </author> <title> Genetic and evolutionary algorithms come of age. </title> <journal> Communications of the ACM, </journal> <volume> 37(3) </volume> <pages> 113-119, </pages> <year> 1994. </year>
Reference-contexts: ML applications are often published in the relevant trade journals, or described in advertising material. However, two recent issues of the Communications of the ACM (March 1994 and November 1995) provide in-depth surveys of real-world applications of ML. These surveys cover case-based learning [1], neural networks [36], genetic algorithms <ref> [13] </ref>, rule induction [18] and ILP [4].
Reference: [14] <author> C.A.R. Hoare. </author> <title> Programs are predicates. </title> <booktitle> In Proceedings of the Final Fifth Generation Conference, </booktitle> <pages> pages 211-218, </pages> <address> Tokyo, 1992. </address> <publisher> Ohmsha. </publisher>
Reference-contexts: Thus, for instance, Hoare <ref> [14] </ref> distinguishes between specifications and program as follows.
Reference: [15] <author> J. Jaffar and M.J. Maher. </author> <title> Constraint logic programming: a survey. </title> <journal> Journal of Logic Programming, </journal> 19/20:503-582, 1994. 
Reference-contexts: Build links to existing efficient procedural computer software to avoid recoding and enhance take-up in existing user communities. This approach is exemplified to a limited degree by constraint logic programming <ref> [15] </ref>, in which logical theorem proving interacts with efficient procedurally encoded constraint solving. An alternative to CYC's approach for obtaining large-scale knowledge structures might be imagined by analogy with the World-Wide-Web.
Reference: [16] <author> R. King, S. Muggleton, R. Lewis, and M. Sternberg. </author> <title> Drug design by machine learning: The use of inductive logic programming to model the structure-activity relationships of trimethoprim analogues binding to di-hydrofolate reductase. </title> <booktitle> Proceedings of the National Academy of Sciences, </booktitle> <volume> 89(23), </volume> <year> 1992. </year>
Reference-contexts: relatively slow in generation of hypotheses, but allows a rich relational representation, has an explicit search bias (background knowledge) and is the only one to have produced discoveries which are not only comprehensible to human experts but also represent new knowledge publishable on its own account in top scientific journals <ref> [29, 16, 17] </ref>. 6.2 The Statlog project Whereas the quality of new declarative knowledge can be established by its pub-lishability in refereed journals, the contending claims of "black-box" reactive learning mechanisms can best be judged by head-to-head performance comparisons on extensive datasets.
Reference: [17] <author> R. King, S. Muggleton, A. Srinivasan, and M. Sternberg. </author> <title> Structure-activity relationships derived by machine learning: the use of atoms and their bond connectives to predict mutagenicity by inductive logic programming. </title> <booktitle> Proceedings of the National Academy of Sciences, </booktitle> <volume> 93 </volume> <pages> 438-442, </pages> <year> 1996. </year>
Reference-contexts: relatively slow in generation of hypotheses, but allows a rich relational representation, has an explicit search bias (background knowledge) and is the only one to have produced discoveries which are not only comprehensible to human experts but also represent new knowledge publishable on its own account in top scientific journals <ref> [29, 16, 17] </ref>. 6.2 The Statlog project Whereas the quality of new declarative knowledge can be established by its pub-lishability in refereed journals, the contending claims of "black-box" reactive learning mechanisms can best be judged by head-to-head performance comparisons on extensive datasets.
Reference: [18] <author> P. Langley and H. Simon. </author> <title> Applications of machine learning and rule induction. </title> <journal> Communications of the ACM, </journal> <volume> 38(11) </volume> <pages> 54-64, </pages> <year> 1995. </year>
Reference-contexts: The BMT system was installed at Siemens and is still in full-time use. Simple "first-generation" machine learning techniques have achieved many other similar successes in application <ref> [18] </ref>. By comparison, after 10 years effort and 100s of million of dollars of funding the CYC [19] system failed to find large-scale industrial application. Like FGCS, the self-imposed requirement to enter all knowledge by hand proved overwhelming. <p> However, two recent issues of the Communications of the ACM (March 1994 and November 1995) provide in-depth surveys of real-world applications of ML. These surveys cover case-based learning [1], neural networks [36], genetic algorithms [13], rule induction <ref> [18] </ref> and ILP [4].
Reference: [19] <author> D.B. Lenat. </author> <title> CYC: a large-scale investment in knowledge infrastructure. </title> <journal> Communications of the ACM, </journal> <volume> 38(11) </volume> <pages> 33-38, </pages> <year> 1995. </year>
Reference-contexts: The BMT system was installed at Siemens and is still in full-time use. Simple "first-generation" machine learning techniques have achieved many other similar successes in application [18]. By comparison, after 10 years effort and 100s of million of dollars of funding the CYC <ref> [19] </ref> system failed to find large-scale industrial application. Like FGCS, the self-imposed requirement to enter all knowledge by hand proved overwhelming. Unlike FGCS, the failure to choose a sufficiently expressive common representation language was discovered as an oversight, near the end of the project. <p> Like FGCS, the self-imposed requirement to enter all knowledge by hand proved overwhelming. Unlike FGCS, the failure to choose a sufficiently expressive common representation language was discovered as an oversight, near the end of the project. The following is a quote from Lenat <ref> [19] </ref> on this topic. Another point is that a standard sort of frame-and-slot language proved to be awkward in various contexts: ... Such experiences caused us to move toward a more expressive language, namely first order predicate calculus with a series of second-order extensions ...
Reference: [20] <editor> Pattie Maes. </editor> <title> Artificial life meets entertainment: lifelike autonomous agents. </title> <journal> Communications of the ACM, </journal> <volume> 38(11) </volume> <pages> 108-114, </pages> <year> 1995. </year>
Reference-contexts: High-level cognitive compatibility with humans is abandoned in favour of stimulus-response architectures, which lend themselves to straightforward robot implementations imported from mechanical engineering. Some work in Pattie Maes' group at MIT appears to be exploiting some of Brooks' ideas where it is applied to software agents <ref> [20, 3] </ref>. This approach is sometimes referred to as artificial life and is summarised in the following quote from Maes [20]. The goal of building an autonomous agent is as old as the field of AI itself. <p> Some work in Pattie Maes' group at MIT appears to be exploiting some of Brooks' ideas where it is applied to software agents [20, 3]. This approach is sometimes referred to as artificial life and is summarised in the following quote from Maes <ref> [20] </ref>. The goal of building an autonomous agent is as old as the field of AI itself. The artificial life community has initiated a radically different approach to this goal, which focuses on fast, reactive behaviour, rather than on knowledge and reasoning, as well as on adaptation and learning.
Reference: [21] <author> J. McCarthy. </author> <title> Making robots conscious. </title> <editor> In K. Furukawa, D. Michie, and S. Muggleton, editors, </editor> <booktitle> Machine Intelligence 15: intelligent agents. </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1996. </year> <note> (To appear). </note>
Reference-contexts: The distinction between these disparate approaches explains some of the diversity in the usage of the term "agents" in the recent Artificial Intelligence (AI) literature. 5.1 The declarative school On the declarative side John McCarthy <ref> [21] </ref> claims that nothing short of second-order predicate calculus will do for implementing "robot consciousness". He underlines the necessity of agents being able to reason about other agents' beliefs, including their own. Despite its declarative elegance this approach runs into problems with tractability and completeness of inference.
Reference: [22] <author> D. Michie. </author> <title> The superarticulacy phenomenon in the context of software manufacture. </title> <journal> Proceedings of the Royal Society of London, </journal> <volume> A 405 </volume> <pages> 185-212, </pages> <year> 1986. </year>
Reference-contexts: The result is an ever widening gulf between human and computer abilities. Thus although the parameters of computer hardware abilities are increasing exponentially, those of their human users remain constant and are already dwarfed in all respects. Figure 1 (borrowed from <ref> [22] </ref>) tabulates some of the information parameters of the human brain. It is really human comprehension which is the key bottleneck in a number of the related problems of human-computer incompatibility. What is required is both increased intelligence on the part of machines and increased compatibility in human-computer interaction.
Reference: [23] <author> D. Michie. </author> <title> The Fifth Generation's unbridged gap. </title> <editor> In Rolf Herken, editor, </editor> <booktitle> The Universal Turing machine : a half-century survey, </booktitle> <pages> pages 467-489. </pages> <publisher> Oxford University Press, Oxford, </publisher> <year> 1988. </year>
Reference-contexts: On the other hand, the failure of FGCS to construct large-scale knowledge-bases and natural language capabilities has been attributed <ref> [23] </ref> to the failure of the planners to recognise the central role that should have been played by machine learning. Prof. K.
Reference: [24] <author> D. Michie. </author> <title> Consciousness as an engineering issue, part 1. </title> <journal> Journal of Consciousness Studies, </journal> <volume> 1(2) </volume> <pages> 182-195, </pages> <year> 1994. </year> <month> 16 </month>
Reference-contexts: However, despite the incorporation of learning within a number of the Maes' agent projects, the assumptions made and learned are opaque to human users. 5.3 Bridging the gap using the duality principle The second author <ref> [24, 25] </ref> has proposed a pragmatic position on conscious agents which bridges McCarthy's and Brooks' programmes. In settings in which agents need to interact with human users there is a need to integrate both Brook-sian subcognitive software with McCarthyite self-articulate `conscious' abilities.
Reference: [25] <author> D. Michie. </author> <title> Consciousness as an engineering issue, part 2. </title> <journal> Journal of Con--sciousness Studies, </journal> <volume> 2(1) </volume> <pages> 52-66, </pages> <year> 1995. </year>
Reference-contexts: However, despite the incorporation of learning within a number of the Maes' agent projects, the assumptions made and learned are opaque to human users. 5.3 Bridging the gap using the duality principle The second author <ref> [24, 25] </ref> has proposed a pragmatic position on conscious agents which bridges McCarthy's and Brooks' programmes. In settings in which agents need to interact with human users there is a need to integrate both Brook-sian subcognitive software with McCarthyite self-articulate `conscious' abilities. <p> The control strategy of individual agents is defined by situation/action mappings represented as decision trees. These trees are learned independently from observations of human pilot traces. Since the low-level of decision tree representation impedes communicability of the learned knowledge, <ref> [25] </ref> suggests the future use of first-order predicate calculus and Inductive Logic Programming for the construction of human comprehensible rules. 11 This paper further endorses the bridge-building approaches previously pro-posed by the second author. We accept the necessity within agents for efficient and reactive low-level functionality, communication and learning.
Reference: [26] <author> D. Michie and C. Sammut. </author> <title> Behavioural clones and cognitive skill models. </title> <editor> In K. Furukawa, D. Michie, and S. Muggleton, editors, </editor> <booktitle> Machine Intelligence 14: applied machine intelligence. </booktitle> <publisher> Oxford University Press, Oxford, </publisher> <year> 1995. </year>
Reference-contexts: Followers of Brooks have constructed agents which are autonomous and learn but do not communicate with each other. Neither of these approaches can be seen to follow the duality principle of Section 3. The papers <ref> [33, 26] </ref> appear to be the only ones in the literature to have demonstrated autonomous agents which communicate with one another and learn. These agents each control an independent control surface of a simulated Cessna aircraft.
Reference: [27] <editor> D. Michie, D.J. Spiegelhalter, and C.C. Taylor. </editor> <title> Machine learning, neural and statistical classification. </title> <publisher> Ellis Horwood, </publisher> <address> London, </address> <year> 1994. </year>
Reference-contexts: Statlog <ref> [27] </ref>, the largest such comparative machine learning study to date, was an ESPRIT project that ran from 1990 to 1993 and involved 6 academic and 6 industrial laboratories.
Reference: [28] <author> S. Muggleton. </author> <title> Inverse entailment and Progol. </title> <journal> New Generation Computing, </journal> <volume> 13 </volume> <pages> 245-286, </pages> <year> 1995. </year>
Reference-contexts: Do not rely on hand-coding of knowledge. Machine Learning, when properly applied can generate hundreds of lines of validated code per day. The advent of ILP [4] ties this point to that of representation, since efficient systems now exist <ref> [32, 28] </ref> which use logic programming as 8 their sole representation for example databases, background knowledge and constructed theories. * Duality. Build links to existing efficient procedural computer software to avoid recoding and enhance take-up in existing user communities.
Reference: [29] <author> S. Muggleton, R. King, and M. Sternberg. </author> <title> Protein secondary structure prediction using logic-based machine learning. </title> <journal> Protein Engineering, </journal> <volume> 5(7) </volume> <pages> 647-657, </pages> <year> 1992. </year>
Reference-contexts: relatively slow in generation of hypotheses, but allows a rich relational representation, has an explicit search bias (background knowledge) and is the only one to have produced discoveries which are not only comprehensible to human experts but also represent new knowledge publishable on its own account in top scientific journals <ref> [29, 16, 17] </ref>. 6.2 The Statlog project Whereas the quality of new declarative knowledge can be established by its pub-lishability in refereed journals, the contending claims of "black-box" reactive learning mechanisms can best be judged by head-to-head performance comparisons on extensive datasets.
Reference: [30] <author> S. Muggleton and L. De Raedt. </author> <title> Inductive logic programming: Theory and methods. </title> <journal> Journal of Logic Programming, </journal> <volume> 19,20:629-679, </volume> <year> 1994. </year>
Reference-contexts: want to burden a user by requiring that they learn mathematical logic before they can operate their electronic diary! However, rules that state that a series of meetings happens every Thursday except during public holidays and your children birthday's could be conjectured and refined by an Inductive Logic Programming (ILP) <ref> [30] </ref> system from a handful of examples and counter-examples entered by mouse-clicking. Such rules could be easily translated into natural language for user certification. <p> ML largely involves highly reactive representations for the learned knowledge, ranging from statistical regression equations to neural networks, decision trees, boolean functions and finite state automata. The 1990s have seen the rapid development of Inductive Logic Programming (ILP) <ref> [30] </ref>, the only subarea of ML directed at the declarative representations favoured by McCarthy and Genesereth (Section 5.1). 6.1 Surveys of applied ML For the purposes of this paper we will narrow the field to that of real-world applications of ML.
Reference: [31] <author> Hyacinth Nwana. </author> <title> `Smart' software agents: an overview. </title> <journal> Knowledge Engineering Review, </journal> <volume> 11(3), </volume> <year> 1996. </year>
Reference-contexts: Despite the wide-scale use of window and mouse interfaces, the level of machine intelligibility is extremely low. The following is a short list of interaction issues familiar to any computer user. 1 This terminology is derived from Hyacinth Nwana's classification <ref> [31] </ref> of intelligent agents. Nwana also notes that no existing agents are both collaborative and adaptive. 3 Program purpose. It is generally not possible to query the purpose of a com- puter program's actions. Human intentions.
Reference: [32] <author> J.R. Quinlan. </author> <title> Learning logical definitions from relations. </title> <journal> Machine Learning, </journal> <volume> 5 </volume> <pages> 239-266, </pages> <year> 1990. </year>
Reference-contexts: Do not rely on hand-coding of knowledge. Machine Learning, when properly applied can generate hundreds of lines of validated code per day. The advent of ILP [4] ties this point to that of representation, since efficient systems now exist <ref> [32, 28] </ref> which use logic programming as 8 their sole representation for example databases, background knowledge and constructed theories. * Duality. Build links to existing efficient procedural computer software to avoid recoding and enhance take-up in existing user communities.
Reference: [33] <author> C. Sammut, S. Hurst, D. Kedzier, and D. Michie. </author> <title> Learning to fly. </title> <editor> In D. Sleeman and P. Edwards, editors, </editor> <booktitle> Proceedings of the Ninth International Workshop on Machine Learning, </booktitle> <pages> pages 385-393, </pages> <address> San Mateo, CA, 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Followers of Brooks have constructed agents which are autonomous and learn but do not communicate with each other. Neither of these approaches can be seen to follow the duality principle of Section 3. The papers <ref> [33, 26] </ref> appear to be the only ones in the literature to have demonstrated autonomous agents which communicate with one another and learn. These agents each control an independent control surface of a simulated Cessna aircraft.
Reference: [34] <author> R. Smith, J. Callaghan, and B. Azvine. </author> <title> Development of a Machine Intelligence capability in BT. </title> <type> Techical feasibility report, </type> <institution> British Telecom Research Laboratories, Ipswich, </institution> <year> 1995. </year>
Reference-contexts: As a response to the urgent need for increased machine intelligibility we introduce the principle of software duality in Section 3. In Section 4 previous large-scale Artificial Intelligence projects are reviewed in the light of the duality principle and lessons are drawn for BT's ongoing Machine Intelligence initiative <ref> [34] </ref>. Sections 5 and 6 review the relevant ongoing research in autonomous agents and machine learning. <p> Section 7 summarises and concludes the paper. 2 BT's Machine Intelligence initiative Machine Intelligence is the software technology of user friendliness at the level of concepts, rather than the level of keystrokes and error message. The following quote from <ref> [34] </ref> provides the central motivation behind BT's Machine Intelligence initiative. Man-to-machine communications is a major business opportunity. The rapid growth in the use (and processing power) of computers both in the home and in the workplace is leading to the situation where the market for "man-to-machine traffic" is growing fast.
Reference: [35] <author> J.M. Spivey. </author> <title> The Z notation : a reference manual. </title> <publisher> Prentice-Hall, </publisher> <address> New York, </address> <year> 1992. </year> <note> (2nd edition). </note>
Reference-contexts: Note that, unlike programs, specifications are both declarative and human-oriented. This is typically achieved by making use of variants of first-order predicate calculus such as Z <ref> [35] </ref>. However, the purpose of specifications is largely fulfilled once the program has been correctly implemented. Specifications are not intended to be used for runtime interrogation and they do not include knowledge about the program's use and environment beyond its input-output behaviour.
Reference: [36] <author> B. Widrow, D.E. Rumelhart, and M.A. Lehr. </author> <title> Neural networks: applications in industry, </title> <journal> business and science. Communications of the ACM, </journal> <volume> 37(3) </volume> <pages> 93-105, </pages> <year> 1994. </year>
Reference-contexts: ML applications are often published in the relevant trade journals, or described in advertising material. However, two recent issues of the Communications of the ACM (March 1994 and November 1995) provide in-depth surveys of real-world applications of ML. These surveys cover case-based learning [1], neural networks <ref> [36] </ref>, genetic algorithms [13], rule induction [18] and ILP [4].
References-found: 36

