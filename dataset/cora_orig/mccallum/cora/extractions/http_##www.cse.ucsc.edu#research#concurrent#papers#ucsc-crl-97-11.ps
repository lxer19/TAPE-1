URL: http://www.cse.ucsc.edu/research/concurrent/papers/ucsc-crl-97-11.ps
Refering-URL: http://www.cse.ucsc.edu/research/concurrent/reports/
Root-URL: http://www.cse.ucsc.edu
Title: Stream Tapping: a System for Improving Efficiency on a Video-on-Demand Server  
Author: Steven W. Carter and Darrell D. E. Long 
Keyword: Video-on-Demand, efficiency, bandwidth  
Note: This research was supported by the Office of Naval Research under Grant N00014-92-J-1807.  
Address: Santa Cruz, CA 95064  
Affiliation: Department of Computer Science University of California, Santa Cruz  
Date: November 2, 1997  
Pubnum: UCSC-CRL-97-11  
Abstract: Video-on-Demand (VOD) allows clients to view selected videos at any time, and it is essential for VOD servers to be run as efficiently as possible. Conventional VOD servers are not efficient; they dedicate a disk stream for each client, and this strategy quickly uses up all available streams. Other systems, such as batching, interval caching, and pyramid broadcasting, have been studied. These systems make more efficient use of the VOD server's disk streams. In this report we present a new VOD system called stream tapping. Stream tapping allows clients to aggressively "tap" into any disk streams on the VOD server that are reading data the client can use. This can be accomplished through the use of a small buffer|as small as 115 MB for MPEG-1 encoding|on the client's set-top box, and it can save over 80% of the disk bandwidth used by a conventional system. This report includes a description and analysis of the stream tapping system, and comparisons between it and other efficiency-improving systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James R. Allen, Blaise L. Heltai, Arthur H. Koenig, Donald F. Snow, and James R. Watson. VCTV: </author> <title> a video-on-demand market test. </title> <journal> AT&T Technical Journal, </journal> <volume> 72(1) </volume> <pages> 7-14, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Any system that can use existing hardware more efficiently or that can reduce the amount of hardware needed is very valuable. Also, market tests suggest that VOD will be competitive with video rental stores and pay-per-view channels <ref> [1, 4] </ref>. With this large number of potential clients, it is important for the VOD server in particular to be run efficiently. <p> This size is probably much smaller than will actually be used: Drapeau et al. [38] estimate that VOD servers will contain around 500 (MPEG-1 encoded) videos, while some real life VOD trials feature servers that can hold over 1000 videos <ref> [1, 2] </ref>. Large library sizes are a good selling point for VOD providers, but it is not clear to what extent they affect VOD server simulations. Even with our distribution, the 92nd video is only selected 0.4% of the time.
Reference: [2] <author> Bruno Suard, Leopold Verbist, and Dirk De Schoenmacker. </author> <title> Update on VOD trials. </title> <booktitle> In Proceedings of ICCT '96, </booktitle> <pages> pages 1033-6, </pages> <address> Bei-jing, China, May 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: This size is probably much smaller than will actually be used: Drapeau et al. [38] estimate that VOD servers will contain around 500 (MPEG-1 encoded) videos, while some real life VOD trials feature servers that can hold over 1000 videos <ref> [1, 2] </ref>. Large library sizes are a good selling point for VOD providers, but it is not clear to what extent they affect VOD server simulations. Even with our distribution, the 92nd video is only selected 0.4% of the time.
Reference: [3] <author> Tekla S. Perry. </author> <title> The trials and trevails of interactive TV. </title> <journal> IEEE Spectrum, </journal> <volume> 33(4) </volume> <pages> 22-8, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Have at least a small amount of local buffer, both to keep enough video frames on hand to prevent jitter 1 and for possible network transport strate gies [15, 16]. These requirements are enough that many VOD providers are using stripped-down computers for the STB <ref> [3, 11] </ref>. 1 Jitter occurs when the next frame to be shown is not available, and the STB must wait for the frame to arrive or skip the frame (and probably other frames) in order to resynchronize. 1 * Network The network is simply the means of communication between the VOD <p> Time Warner used a scaled-down Indy workstation, costing over a thousand dollars, in its Orlando trial <ref> [3] </ref>. percentage of the video requests into its request queue).
Reference: [4] <author> David Tobenkin. </author> <title> Customers respond to video on demand. Broadcasting & Cable, </title> <address> 123(48):16, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Any system that can use existing hardware more efficiently or that can reduce the amount of hardware needed is very valuable. Also, market tests suggest that VOD will be competitive with video rental stores and pay-per-view channels <ref> [1, 4] </ref>. With this large number of potential clients, it is important for the VOD server in particular to be run efficiently.
Reference: [5] <author> Susan T. Whitehead. </author> <title> Time Warner Cable's Full Service Network|program management of the FSN virtual organization. </title> <booktitle> In Proceedings of the 2nd International Workshop on Community Networking Integrated Multimedia Services in the Home, </booktitle> <pages> pages 291-9, </pages> <address> Princeton, NJ, USA, June 1995. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [6] <author> Milind M. Buddhikot and Gurudatta M. Parulkar. </author> <title> Efficient data layout, scheduling and playout control in MARS. </title> <booktitle> In Proceedings of the 5th International Workshop on Network and Operating System Support for Digital Audio and Visual, </booktitle> <pages> pages 318-29, </pages> <address> Durham, NH, USA, April 1995. </address> <publisher> Springer. </publisher>
Reference: [7] <author> Roger L. Haskin and Frank B. Schmuck. </author> <title> The Tiger Shark file system. </title> <booktitle> In Proceedings of COMPCON '96, </booktitle> <pages> pages 226-231, </pages> <address> Santa Clara, CA, USA, February 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [8] <author> Kunihiro Taniguchi, Hitoya Tachikawa, Takeshi Nishida, and Hiroshi Kitamura. </author> <title> Internet video-on-demand system architecture: </title> <journal> MINS. IEICE Transactions on Communications, </journal> <volume> E79-B(8):1068-75, </volume> <month> August </month> <year> 1996. </year>
Reference-contexts: It does not have any other requirements per se, but it should provide such things as high bandwidth, guaranteed quality-of-service 2 (QOS), and multicasting. This makes ATM an ideal networking choice [17, 18] although even the Internet can be used <ref> [8] </ref>. Given these three hardware components, there are many issues involved in their implementation. In this report we concentrate on the VOD server|in particular, how to make it more efficient.
Reference: [9] <author> Shunichiro Nakamura, Harumi Minemura, Tomohisa Yamaguchi, Hiroshi Shimizu, Takashi Watanabe, and Tadanori Mizuno. </author> <title> Distributed RAID style video server. </title> <journal> IEICE Transactions on Communications, </journal> <volume> E79-B(8):1030-8, </volume> <month> August </month> <year> 1996. </year>
Reference: [10] <author> Huib Eggenhuisen and Sjir Van Loo. </author> <title> Video-on-demand server. </title> <journal> Philips Journal of Research, </journal> <volume> 50(1-2):201-8, </volume> <year> 1996. </year> <month> 19 </month>
Reference: [11] <author> Alec Livingstone. </author> <title> BT interactive TV. </title> <booktitle> In Proceedings of the 3rd International Workshop on Community Networking, </booktitle> <pages> pages 111-5, </pages> <address> Antwerpen, Belgium, May 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Be able to support multiple, simulta neous accesses to videos, and service. 3. Be able to communicate with clients so clients can select and view videos. * Client STB The role of the client set-top box is usually dependent on the specific needs of a particular VOD provider <ref> [11, 12] </ref> but some trends are becoming clear [13, 14]. The STB must: 1. Be able to communicate with the VOD server so that it can navigate possible video selections and receive video data, 2. <p> Have at least a small amount of local buffer, both to keep enough video frames on hand to prevent jitter 1 and for possible network transport strate gies [15, 16]. These requirements are enough that many VOD providers are using stripped-down computers for the STB <ref> [3, 11] </ref>. 1 Jitter occurs when the next frame to be shown is not available, and the STB must wait for the frame to arrive or skip the frame (and probably other frames) in order to resynchronize. 1 * Network The network is simply the means of communication between the VOD
Reference: [12] <author> Kiyoshi Kohiyama, Hideaki Shirai, Kiy-otaka Ogawa, Akio Manakata, Yuzuru Koga, and Masayuki Ishizaki. </author> <title> Architecture of MPEG-2 digital set-top-box for CATV VOD system. </title> <journal> IEEE Transactions on Consumer Electronics, </journal> <volume> 42(3) </volume> <pages> 667-72, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Be able to support multiple, simulta neous accesses to videos, and service. 3. Be able to communicate with clients so clients can select and view videos. * Client STB The role of the client set-top box is usually dependent on the specific needs of a particular VOD provider <ref> [11, 12] </ref> but some trends are becoming clear [13, 14]. The STB must: 1. Be able to communicate with the VOD server so that it can navigate possible video selections and receive video data, 2.
Reference: [13] <author> Qiang Tan, Mengchu Zhou, Jingjian Li, and Dingkang Yao. </author> <title> A brief overview of current TV set-top box developments. </title> <booktitle> In IEEE International Conference on Systems, Man and Cybernetics, </booktitle> <pages> pages 2127-32, </pages> <address> New York, NY, USA, October 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Be able to communicate with clients so clients can select and view videos. * Client STB The role of the client set-top box is usually dependent on the specific needs of a particular VOD provider [11, 12] but some trends are becoming clear <ref> [13, 14] </ref>. The STB must: 1. Be able to communicate with the VOD server so that it can navigate possible video selections and receive video data, 2. Be able to decode the data it receives, both for descrambling and MPEG de compression purposes, 3.
Reference: [14] <author> Ajith N. Nair. </author> <title> Interactive television set-top terminal architectures. </title> <booktitle> In Proceedings of COMPCON '96, </booktitle> <pages> pages 233-8, </pages> <address> Santa Clara, CA, USA, February 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Be able to communicate with clients so clients can select and view videos. * Client STB The role of the client set-top box is usually dependent on the specific needs of a particular VOD provider [11, 12] but some trends are becoming clear <ref> [13, 14] </ref>. The STB must: 1. Be able to communicate with the VOD server so that it can navigate possible video selections and receive video data, 2. Be able to decode the data it receives, both for descrambling and MPEG de compression purposes, 3.
Reference: [15] <author> Jean M. McManus and Keith W. Ross. </author> <title> Video on demand over ATM: constant-rate transmission and transport. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 14(6) </volume> <pages> 1087-98, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Have a certain amount of processing power, and 4. Have at least a small amount of local buffer, both to keep enough video frames on hand to prevent jitter 1 and for possible network transport strate gies <ref> [15, 16] </ref>.
Reference: [16] <author> Jian Ni, Tao Yang, and Danny H. K. Tsang. </author> <title> CBR transportation of VBR MPEG-2 video traffic for video-on-demand in ATM networks. </title> <booktitle> In IEEE International Conference on Communications, </booktitle> <pages> pages 1391-5, </pages> <address> Dallas, TX, USA, June 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Have a certain amount of processing power, and 4. Have at least a small amount of local buffer, both to keep enough video frames on hand to prevent jitter 1 and for possible network transport strate gies <ref> [15, 16] </ref>.
Reference: [17] <author> Gert Van der Plas, Raf Smets, Bruno Suard, and Willem Verbiest. </author> <title> Demonstration of an ATM-based passive optimal network in the FTTH trial in Bermuda. </title> <booktitle> In Proceedings of GLOBECOM '95, </booktitle> <pages> pages 988-92, </pages> <address> Singa-pore, November 1995. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: It does not have any other requirements per se, but it should provide such things as high bandwidth, guaranteed quality-of-service 2 (QOS), and multicasting. This makes ATM an ideal networking choice <ref> [17, 18] </ref> although even the Internet can be used [8]. Given these three hardware components, there are many issues involved in their implementation. In this report we concentrate on the VOD server|in particular, how to make it more efficient.
Reference: [18] <author> Koichi Shiga. </author> <title> ATM technology meets VOD systems requirements. </title> <journal> Journal of Electronic Engineering, </journal> <volume> 33(352) </volume> <pages> 28-9, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: It does not have any other requirements per se, but it should provide such things as high bandwidth, guaranteed quality-of-service 2 (QOS), and multicasting. This makes ATM an ideal networking choice <ref> [17, 18] </ref> although even the Internet can be used [8]. Given these three hardware components, there are many issues involved in their implementation. In this report we concentrate on the VOD server|in particular, how to make it more efficient.
Reference: [19] <author> Lixia Zhang, Stephen Deering, Deborah Es-trin, Scott Shenker, and Daniel Zappala. RSVP: </author> <title> a new resource reservation protocol. </title> <journal> IEEE Network, </journal> <volume> 7(5) </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: This sort of capability can be added to standard reservation protocols, such as RSVP <ref> [19] </ref> and ST-II [20], with minor modifications [21, 22].
Reference: [20] <author> C. Topolcic. </author> <title> Experimental internet stream protocol, </title> <note> version 2 (ST-II). RFC 1190, Oc-tober 1990. </note>
Reference-contexts: This sort of capability can be added to standard reservation protocols, such as RSVP [19] and ST-II <ref> [20] </ref>, with minor modifications [21, 22].
Reference: [21] <author> Mikael Degermark, Torsten Kohler, Stephen Pink, and Olov Schelen. </author> <title> Advance reservations for predictive service. </title> <booktitle> In Proceedings of the 5th International Workshop on Network and Operating System Support for Digital Audio and Visual, </booktitle> <pages> pages 3-15, </pages> <address> Durham, NH, USA, April 1995. </address> <publisher> Springer. </publisher>
Reference-contexts: This sort of capability can be added to standard reservation protocols, such as RSVP [19] and ST-II [20], with minor modifications <ref> [21, 22] </ref>.
Reference: [22] <author> W. Reinhardt. </author> <title> Advance reservation of network resources for multimedia applications. </title> <booktitle> In Second International Workshop on Advanced Teleservices and High-Speed Communication Architectures, </booktitle> <pages> pages 23-33, </pages> <address> Heidelberg, Germany, </address> <month> September </month> <year> 1994. </year> <note> Springer-Verlag. </note>
Reference-contexts: This sort of capability can be added to standard reservation protocols, such as RSVP [19] and ST-II [20], with minor modifications <ref> [21, 22] </ref>.
Reference: [23] <author> Asit Dan, Dinkar Sitaram, and Perwez Sha-habuddin. </author> <title> Dynamic batching policies for an on-demand video server. </title> <journal> Multimedia Systems, </journal> <volume> 4(3) </volume> <pages> 112-21, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: The systems are distinguished by their most fundamental or unique idea. 4.1 Batching A simple but effective technique for improving VOD server efficiency is known as batch-ing <ref> [23, 24] </ref>. When the VOD server has multiple requests for the same video in its request queue, it may service them all (that is, batch the requests together) by multicasting the video to all of the requesting clients. <p> The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. [38] and used by many others <ref> [23, 27, 33, 34, 39] </ref>. <p> Others have looked at scheduling policies for VOD servers but have not considered the service time of the request <ref> [23, 24] </ref>.
Reference: [24] <author> Charu C. Aggarwal, Joel L. Wolf, and Philip S. Yu. </author> <title> On optimal batching policies for video-on-demand storage servers. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <pages> pages 253-8, </pages> <address> Hiroshima, Japan, June 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The systems are distinguished by their most fundamental or unique idea. 4.1 Batching A simple but effective technique for improving VOD server efficiency is known as batch-ing <ref> [23, 24] </ref>. When the VOD server has multiple requests for the same video in its request queue, it may service them all (that is, batch the requests together) by multicasting the video to all of the requesting clients. <p> Others have looked at scheduling policies for VOD servers but have not considered the service time of the request <ref> [23, 24] </ref>.
Reference: [25] <author> Victor O. K. Li, Wanjiun Liao, Xiaoxin Qiu, and Eric W. M. Wong. </author> <title> Performance model of interactive video-on-demand systems. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 14(6) </volume> <pages> 1099-109, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: As long as the server's request queue is small, batching will function essentially the same as a conventional system. 4.2 Delayed Batching Delayed batching <ref> [25, 26] </ref> works much like standard batching, except that instead of servicing a request as soon as possible, the VOD server will wait a certain amount of time (called the batch-ing interval) in an effort to increase the number of requests batched together. <p> However, this is something we plan to explore. 7.5 VCR Control VCR control includes functions such as pause, fast forward, and rewind. Systems that start videos after semi-regular intervals (such as staggered broadcasting) can perform these functions very efficiently in a discontinuous manner <ref> [25, 27, 28] </ref>. That is, the functions can be mimicked by allowing the client STB to jump forward a stream (for fast forward), jump backward a stream (for rewind), or wait for a trailing stream to reach the same point in the video (for pause).
Reference: [26] <author> Hadas Shachnai and Philip S. Yu. </author> <title> The role of wait tolerance in effective batch-ing: A paradigm for multimedia scheduling schemes. </title> <type> Technical Report RC 20038, </type> <institution> IBM Research Division, T.J. Watson Research Center, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: As long as the server's request queue is small, batching will function essentially the same as a conventional system. 4.2 Delayed Batching Delayed batching <ref> [25, 26] </ref> works much like standard batching, except that instead of servicing a request as soon as possible, the VOD server will wait a certain amount of time (called the batch-ing interval) in an effort to increase the number of requests batched together.
Reference: [27] <author> Asit Dan, Perwez Shahabuddin, Dinkar Sitaram, and Don Towsley. </author> <title> Channel allocation under batching and VCR control in video-on-demand systems. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 30(2) </volume> <pages> 168-79, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. [38] and used by many others <ref> [23, 27, 33, 34, 39] </ref>. <p> However, this is something we plan to explore. 7.5 VCR Control VCR control includes functions such as pause, fast forward, and rewind. Systems that start videos after semi-regular intervals (such as staggered broadcasting) can perform these functions very efficiently in a discontinuous manner <ref> [25, 27, 28] </ref>. That is, the functions can be mimicked by allowing the client STB to jump forward a stream (for fast forward), jump backward a stream (for rewind), or wait for a trailing stream to reach the same point in the video (for pause).
Reference: [28] <author> Kevin C. Almeroth and Mostafa H. Ammar. </author> <title> The use of multicast delivery to provide a scalable and interactive video-on-demand service. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 14(5) </volume> <pages> 1110-22, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: However, this is something we plan to explore. 7.5 VCR Control VCR control includes functions such as pause, fast forward, and rewind. Systems that start videos after semi-regular intervals (such as staggered broadcasting) can perform these functions very efficiently in a discontinuous manner <ref> [25, 27, 28] </ref>. That is, the functions can be mimicked by allowing the client STB to jump forward a stream (for fast forward), jump backward a stream (for rewind), or wait for a trailing stream to reach the same point in the video (for pause).
Reference: [29] <author> Tzi-cker Chiueh and Chung-ho Lu. </author> <title> A periodic broadcasting approach to video-on-demand service. </title> <booktitle> Proceedings of SPIE The International Society for Optical Engineering, </booktitle> <volume> 2615 </volume> <pages> 162-9, </pages> <year> 1996. </year>
Reference: [30] <author> Charu C. Aggarwal, Joel L. Wolf, and Philip S. Yu. </author> <title> A permutation-based pyramid broadcasting scheme for video-on-demand systems. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <pages> pages 118-26, </pages> <address> Hiroshima, Japan, June 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: This is similar to delayed batching except in how the interval timer is started (a video request versus a regular interval). Thus staggered broadcasting also has the same two problems as delayed batching. 4.4 Pyramid Broadcasting With pyramid broadcasting 4 <ref> [30, 31] </ref>, the VOD server reserves a certain number of disk streams for a set of (popular) videos. However, rather than having each stream read out an entire video, the streams read out multiplicatively increasing segments of the videos. <p> The client STB must 4 For the rest of this report, when we refer to pyramid broadcasting, we will mean the unconstrained, permutation-based version presented by Aggarwal et al. <ref> [30] </ref>. This is the version that produced the lowest average client latency for a given bandwidth. 7 then jump from stream to stream in order to receive an entire video. <p> Given a video i, we used L s (S) = 2S for staggered broadcasting and L p (S) = 3 (2 S=3 1) over conventional systems (N = 1, S = 1). for pyramid broadcasting <ref> [30] </ref>. Note that even with the high arrival rate (a request every ten seconds) stream tapping was very competitive and outperformed both broadcasting systems given enough disk streams. Figures 21 and 22 compare stream tapping to batching and asynchronous multicasting.
Reference: [31] <author> S. Viswanathan and T. Imielinski. </author> <title> Metropolitan area video-on-demand service using pyramid broadcasting. </title> <journal> Multimedia Systems, </journal> <volume> 4(4) </volume> <pages> 197-208, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: This is similar to delayed batching except in how the interval timer is started (a video request versus a regular interval). Thus staggered broadcasting also has the same two problems as delayed batching. 4.4 Pyramid Broadcasting With pyramid broadcasting 4 <ref> [30, 31] </ref>, the VOD server reserves a certain number of disk streams for a set of (popular) videos. However, rather than having each stream read out an entire video, the streams read out multiplicatively increasing segments of the videos.
Reference: [32] <author> Leana Golubchik, John C. S. Lui, and Richard R. Muntz. </author> <title> Adaptive piggybacking: a novel technique for data sharing in video-on-demand storage servers. </title> <journal> Multimedia Systems, </journal> <volume> 4(30) </volume> <pages> 140-55, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Because of this, the STB must also have a local buffer, and the size of this buffer must be at least 300 MB (and perhaps as large as 900 MB) for MPEG-1 encoding. This is much larger than the buffer required by stream tapping. 4.5 Piggybacking In piggybacking <ref> [32, 33] </ref>, the display rates of videos are changed by 5% (little enough so human observers should not notice) so that two existing disk streams can be "merged" into one.
Reference: [33] <author> Charu C. Aggarwal, Joel L. Wolf, and Philip S. Yu. </author> <title> On optimal piggyback merging policies for video-on-demand systems. </title> <booktitle> In Proceedings of the International Conference on Multimedia Systems, </booktitle> <pages> pages 253-8, </pages> <address> Hiroshima, Japan, June 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Because of this, the STB must also have a local buffer, and the size of this buffer must be at least 300 MB (and perhaps as large as 900 MB) for MPEG-1 encoding. This is much larger than the buffer required by stream tapping. 4.5 Piggybacking In piggybacking <ref> [32, 33] </ref>, the display rates of videos are changed by 5% (little enough so human observers should not notice) so that two existing disk streams can be "merged" into one. <p> The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. [38] and used by many others <ref> [23, 27, 33, 34, 39] </ref>.
Reference: [34] <author> Asit Dan and Dinkar Sitaram. </author> <title> Buffer management policy for an on-demand video server. </title> <type> Technical Report RC 19347, </type> <institution> IBM Research Division, T.J. Watson Research Center, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: Also, if the video rate changes cannot be made on the fly, piggybacking will require at least two versions of each video (one fast and one slow|a normal speed isn't necessarily needed), increasing the storage requirements. 4.6 Interval Caching With interval caching <ref> [34, 35] </ref>, the VOD server keeps a local cache of some large size (perhaps in the GB range). <p> in this report and for MPEG-1 encoding, Dan and Sitaram found that the most cost effective cache size was only 250 to 500 MB; yet even using a cache large enough to hold 8 videos (roughly 10 GB), they only found a disk bandwidth savings of 40-50% over conventional systems <ref> [34] </ref>. Stream tapping can achieve this for any video with an average interarrival time of 20 minutes or less (see x6). Also, while interval caching is able to save disk streams on the VOD server, it does nothing to save bandwidth on the network. <p> The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. [38] and used by many others <ref> [23, 27, 33, 34, 39] </ref>.
Reference: [35] <author> Mohan Kamath, Krithi Ramamritham, and Don Towsley. </author> <title> Continuous media sharing in multimedia database systems. </title> <type> Technical Report 94-11, </type> <institution> University of Massachusetts, </institution> <year> 1994. </year>
Reference-contexts: Also, if the video rate changes cannot be made on the fly, piggybacking will require at least two versions of each video (one fast and one slow|a normal speed isn't necessarily needed), increasing the storage requirements. 4.6 Interval Caching With interval caching <ref> [34, 35] </ref>, the VOD server keeps a local cache of some large size (perhaps in the GB range).
Reference: [36] <author> Heekyoung Woo and Chong-Kwon Kim. </author> <title> Multicast scheduling for VOD services. </title> <booktitle> Multimedia Tools and Applications, </booktitle> <volume> 2(2) </volume> <pages> 157-171, </pages> <month> March </month> <year> 1996. </year>
Reference: [37] <author> Hari Kalva and Borko Furht. </author> <title> Techniques for improving the capacity of video-on-demand systems. </title> <booktitle> In Proceedings of the 29th Annual Hawaii International Conference on System Sciences, </booktitle> <pages> pages 308-15, </pages> <address> Wailea, HI, USA, January 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Using an example of M = 3 and S = 6 <ref> [37] </ref>, this means the client's buffer must be able to hold 18 minutes of video data, but it can only catch up to videos that started less than 12 minutes in the past.
Reference: [38] <author> Ann L. Drapeau, David A. Patterson, and Randy H. Katz. </author> <title> Toward workload characterization of video server and digitial library applications. </title> <booktitle> 1994 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <volume> 22(1) </volume> <pages> 274-5, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: These lengths were truncated to a minimum of 90 minutes and a maximum of 180 minutes to keep the values realistic. The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. <ref> [38] </ref> and used by many others [23, 27, 33, 34, 39]. <p> This size is probably much smaller than will actually be used: Drapeau et al. <ref> [38] </ref> estimate that VOD servers will contain around 500 (MPEG-1 encoded) videos, while some real life VOD trials feature servers that can hold over 1000 videos [1, 2].
Reference: [39] <author> Kevin C. Almeroth and Mostafa H. Ammar. </author> <title> The role of multicast communication in the provision of scalable and interactive video-on-demand service. </title> <booktitle> In Proceedings of the 5th International Workshop on Network and Operating System Support for Digital Audio and Visual, </booktitle> <pages> pages 251-4, </pages> <address> Durham, NH, USA, April 1995. </address> <publisher> Springer. </publisher>
Reference-contexts: The probability of each video was modeled using a Zipf-like distribution. (See Appendix A for details.) This is the distribution recommended by Drapeau et al. [38] and used by many others <ref> [23, 27, 33, 34, 39] </ref>.
Reference: [40] <author> Video Store Magazine, </author> <month> December 13, </month> <year> 1992. </year> <month> 21 </month>
Reference-contexts: Also, like many of the papers just cited, we decided to configure the distribution to more closely fit empirical video and = 0:271. rental patterns <ref> [40] </ref>, and therefore used N = 92 and a = 0:271. (See Figure 6.) 5.2 Clients Clients were generated using a Poisson arrival process with an interarrival time of 1=. Clients were only allowed to select a video based on the distribution described above. <p> Changing the decision process so that an original stream can be assigned at any time is an important step in making stream tapping more versatile. 7.4 Server Library Size We chose a library size of 92 videos because that allowed us to model our workload against empirical data <ref> [40] </ref>. This size is probably much smaller than will actually be used: Drapeau et al. [38] estimate that VOD servers will contain around 500 (MPEG-1 encoded) videos, while some real life VOD trials feature servers that can hold over 1000 videos [1, 2].
References-found: 40

