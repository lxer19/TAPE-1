URL: ftp://coast.cs.purdue.edu/pub/doc/cryptography/Session-Layer-Encryption.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ12.html
Root-URL: http://www.cs.purdue.edu
Email: mab@research.att.com smb@research.att.com  
Title: Session-Layer Encryption  
Author: Matt Blaze Steven M. Bellovin 
Affiliation: AT&T Bell Laboratories  
Abstract: We describe mechanisms for practical session-layer security for Internet-based terminal sessions. We discuss the tradeoffs of providing security at various layers of abstractions, from the network to the session layer. We describe two new mechanisms: our encrypting, authenticating telnet and our encrypted session manager (esm). 
Abstract-found: 1
Intro-found: 1
Reference: [AR94] <author> Frederick Avolio and Marcus Ranum. </author> <title> A network perimeter with secure external access. </title> <booktitle> In Proceedings of the Internet Society Symposium on Network and Distributed System Security, </booktitle> <address> San Diego, CA, </address> <month> February 3, </month> <year> 1994. </year>
Reference-contexts: Transport-layer encryption differs from network-layer encryption primarily in its ability to deliver a finer granularity of protection. It, too, is affected by network discontinuities. Both translators and some firewalls (i.e., the TIS Firewall Toolkit <ref> [AR94] </ref>) require the user to "redial". Ergo, transport-layer encryption cannot be end-to-end either. Above it, matters become even blurrier, especially since the layering structure is inadequate. Where does electronic mail live? At the mail transfer level, as typified by SMTP [Pos82]? This is generally considered to be application layer.
Reference: [Atk95] <author> R. Atkinson. </author> <title> Ipv6 encapsulating security payload (ESP). Internet draft; work in progress, </title> <month> February 16 </month> <year> 1995. </year>
Reference-contexts: That is not necessarily bad: we need a band-aid, to cope with a threat that in our opinion is imminent. Still, a solution that was part of an integrated security architecture would be better. The Internet community is experimenting with cryptographic standards for the link layer [Mey95], network layer <ref> [Atk95] </ref>, session layer, and application layer (for mail, SNMP, and many others). While all of these have their uses, it would be nice if there were an overall vision and (where feasible) a common key management structure.
Reference: [Bal93] <author> D. Balenson. </author> <title> Privacy enhancement for internet electronic mail: Part III: algorithms, modes, and identifiers. Request for Comments (Experimental) RFC 1423, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb </month> <year> 1993. </year> <note> (Obsoletes RFC1115). </note>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself <ref> [Lin93, Ken93, Bal93, Kal93, Zim92] </ref>, though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
Reference: [Bel89] <author> Steven M. Bellovin. </author> <title> Security problems in the TCP/IP protocol suite. </title> <journal> Computer Communications Review, </journal> <volume> 19(2) </volume> <pages> 32-48, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: There are a number of ways in which this could be done, including bogus routing messages and subverting the Domain Name System <ref> [Bel89] </ref>. All inbound telnet connections to AT&T must stop at the firewall for authentication; this makes the telnet [PR83] protocol a natural choice for providing session security for such connections.
Reference: [BF93] <author> N. Borenstein and N. Freed. </author> <title> MIME (multipurpose internet mail extensions) part one: Mechanisms for specifying and describing the format of internet message bodies. Request for Comments (Ex perimental) RFC 1521, </title> <institution> Internet Engi--neering Task Force, </institution> <month> Sep </month> <year> 1993. </year> <note> (Obsoletes RFC1341); (Updated by RFC1590). </note>
Reference-contexts: Above it, matters become even blurrier, especially since the layering structure is inadequate. Where does electronic mail live? At the mail transfer level, as typified by SMTP [Pos82]? This is generally considered to be application layer. But message formatting lives [Cro82] above that, and multimedia mail above that <ref> [BF93] </ref>. Where does one encrypt mail? The usual answer is to encrypt the message itself [Lin93, Ken93, Bal93, Kal93, Zim92], though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95].
Reference: [BM91] <author> Steven M. Bellovin and Michael Mer-ritt. </author> <title> Limitations of the Kerberos authentication system. </title> <booktitle> In USENIX Conference Proceedings, </booktitle> <pages> pages 253-267, </pages> <address> Dallas, TX, </address> <month> Winter </month> <year> 1991. </year>
Reference-contexts: While something like Kerberos-mediated telnet encryption [Bor93] might be a good ultimate goal, it would take a lot more effort to deploy. Also, most current implementations of Kerberos do not support one-time passwords; even with encryption, we still feel that such precautions are needed <ref> [BM91] </ref>. For key negotiation, we use Diffie-Hellman exponential key exchange [DH76]. A single large prime is used as the modulus, along with a fixed base; negotiating these parameters, though arguably more secure, would create the potential for more serious cryptanalytic attacks.
Reference: [BM92] <author> Steven M. Bellovin and Michael Mer-ritt. </author> <title> Encrypted key exchange: Password-based protocols secure against dictionary attacks. </title> <booktitle> In Proc. IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <pages> pages 72-84, </pages> <address> Oakland, CA, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: 4, which in our opinion suffers from two practical drawbacks: it does not support the use of hand-held authenticators, which means people must still type passwords into potentially untrustworthy machines, and it is vulnerable to outsiders requesting user tickets from the server and running a password-guessing program against these tickets <ref> [LGSN89, BM92] </ref>. A related effort is the encrypting telnet by Brown and Jaatun, done as a prototype of a standard telnet encryption option. It required use of one of the standard authentication mechanisms, such as Kerberos. More recently, the STEL package [VTB95] has been announced. <p> While all of these have their uses, it would be nice if there were an overall vision and (where feasible) a common key management structure. Failing that, we are likely to implement the EKE or A-EKE authentication protocols <ref> [BM92, BM93] </ref>. These are password-based, but require no special hardware and are immune to password-guessing attacks. Our current scheme has a number of limitations. The most serious is that it is not truly end-to-end.
Reference: [BM93] <author> Steven M. Bellovin and Michael Merritt. </author> <title> Augmented encrypted key exchange. </title> <booktitle> In Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 244-250, </pages> <address> Fairfax, VA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: While all of these have their uses, it would be nice if there were an overall vision and (where feasible) a common key management structure. Failing that, we are likely to implement the EKE or A-EKE authentication protocols <ref> [BM92, BM93] </ref>. These are password-based, but require no special hardware and are immune to password-guessing attacks. Our current scheme has a number of limitations. The most serious is that it is not truly end-to-end.
Reference: [Bor93] <editor> D. Borman. </editor> <title> Telnet authentication: Ker-beros version 4. Request for Comments (Proposed Standard) RFC 1411, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan </month> <year> 1993. </year>
Reference-contexts: A secondary goal of ours was to preserve our investment in hand-held authentication devices and the assorted databases and administrative procedures used to support them. While something like Kerberos-mediated telnet encryption <ref> [Bor93] </ref> might be a good ultimate goal, it would take a lot more effort to deploy. Also, most current implementations of Kerberos do not support one-time passwords; even with encryption, we still feel that such precautions are needed [BM91]. For key negotiation, we use Diffie-Hellman exponential key exchange [DH76].
Reference: [CB94] <author> William R. Cheswick and Steven M. Bellovin. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction For better or worse, many networks are protected from Bad Guys on the Internet by means of firewalls <ref> [CB94] </ref>. While firewalls do offer a lot of protection against certain classes of attacks, by intent they limit functionality. Paradoxically, this can actually interfere with other security mechanisms, notably those that require end-to-end encryption between machines on opposite sides of the firewall. <p> If it were saved, an attacker could inject evil commands in cleartext into the session before the encryption started. In our environment, encryption of inbound telnet connections is not end-to-end. Incoming calls, and hence encryption, terminate at our firewall <ref> [CB94, Che90] </ref>. After the authentication is checked, the user is allowed to rlogin to his or her ultimate destination machine.
Reference: [CFGM95] <author> Steve Crocker, Ned Freed, Jim Galvin, and Sandy Murphy. </author> <title> MIME object security services. Internet draft; work in progress, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself [Lin93, Ken93, Bal93, Kal93, Zim92], though exactly how this should be done for complex mail messages isn't at all obvious <ref> [CFGM95] </ref>. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
Reference: [Che90] <author> William R. Cheswick. </author> <title> The design of a secure internet gateway. </title> <booktitle> In Proc. Summer USENIX Conference, </booktitle> <address> Anaheim, CA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: If it were saved, an attacker could inject evil commands in cleartext into the session before the encryption started. In our environment, encryption of inbound telnet connections is not end-to-end. Incoming calls, and hence encryption, terminate at our firewall <ref> [CB94, Che90] </ref>. After the authentication is checked, the user is allowed to rlogin to his or her ultimate destination machine.
Reference: [CMQ87] <author> S. Carl-Mitchell and J. Quarterman. </author> <title> Using ARP to implement transparent sub-net gateways. </title> <type> Technical Report RFC 1027, </type> <institution> Internet Engineering Task Force, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: Link-layer encryption still has most of the properties traditionally ascribed to it. It can be deployed locally to protect a particular vulnerable link; it is in general invisible to higher layers. Even so, there are problems; link-layer spoofing techniques such as proxy ARP <ref> [CMQ87] </ref> are often employed. Network-layer encryption is more problematic. Traditionally, the network layer is the lowest end-to-end layer, and hence is a natural place for ubiquitous encryption; as we have seen, though, firewalls and protocol translators break this assumption.
Reference: [Cro82] <author> D. Crocker. </author> <title> Standard for the format of ARPA internet text messages. Request for Comments (Standard) RFC 822, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1982. </year> <note> Obsoletes RFC0733; Updated by RFC1327, RFC0987. </note>
Reference-contexts: Ergo, transport-layer encryption cannot be end-to-end either. Above it, matters become even blurrier, especially since the layering structure is inadequate. Where does electronic mail live? At the mail transfer level, as typified by SMTP [Pos82]? This is generally considered to be application layer. But message formatting lives <ref> [Cro82] </ref> above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself [Lin93, Ken93, Bal93, Kal93, Zim92], though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95].
Reference: [DH76] <author> Whitfield Diffie and Martin E. Hell-man. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-11:644-654, </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: Also, most current implementations of Kerberos do not support one-time passwords; even with encryption, we still feel that such precautions are needed [BM91]. For key negotiation, we use Diffie-Hellman exponential key exchange <ref> [DH76] </ref>. A single large prime is used as the modulus, along with a fixed base; negotiating these parameters, though arguably more secure, would create the potential for more serious cryptanalytic attacks.
Reference: [DP89] <author> Donald W. Davies and Wyn L. Price. </author> <title> Security for Computer Networks. </title> <publisher> John Wiley & Sons, </publisher> <address> second edition, </address> <year> 1989. </year>
Reference-contexts: CFB is also vulnerable to injections of previously-encrypted data. Because of the limited error propagation characteristics of CFB mode <ref> [DP89] </ref>, any previously-sent input can be resent by an enemy. Worse yet, if the same key is used for input and output, an enemy can often choose the plaintext to be encrypted and reinjected.
Reference: [Hic95] <author> Kipp E.B. Hickman. </author> <title> The SSL protocol. Internet draft; work in progress, </title> <month> April </month> <year> 1995. </year>
Reference-contexts: Where does one encrypt mail? The usual answer is to encrypt the message itself [Lin93, Ken93, Bal93, Kal93, Zim92], though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) <ref> [Hic95] </ref>, encrypts the transport connection, rather than the text of the retrieved page. This does provide some added privacy protection for, say, those who are retrieving gerbils-mmff.gif, though often the site name itself (rodents.com) may be sensitive. Our telnet encryptor demonstrates some of the problems.
Reference: [Jon95] <author> Laurent Joncheray. </author> <title> A simple active attack against TCP. </title> <booktitle> In Proceedings of the Fifth Usenix Unix Security Symposium, </booktitle> <address> Salt Lake City, UT, </address> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: We have developed two practical tools that implement different high-level security abstractions: ESM (Encrypted Session Manager) and an encrypting version of telnet. Each has its own advantages and disadvantages, though they also have a lot in common. 2 Encrypted, Authenticated Telnet 2.1 Protocol Requirements Recent incidents and research results <ref> [Jon95, Neu95] </ref> have us concerned that the Internet may soon become the victim of active attacks. More specifically, we are concerned that attackers may soon be able to hijack existing TCP connections and use them for their own nefarious purposes.
Reference: [Kal93] <author> B. Kaliski. </author> <title> Privacy enhancement for internet electronic mail: Part IV: key certification and related services. Request for Comments (Experimental) RFC 1424, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb </month> <year> 1993. </year>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself <ref> [Lin93, Ken93, Bal93, Kal93, Zim92] </ref>, though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
Reference: [Ken93] <author> S. Kent. </author> <title> Privacy enhancement for internet electronic mail: Part II: certificate-based key management. Request for Comments (Experimental) RFC 1422, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb </month> <year> 1993. </year> <note> (Obsoletes RFC1114). </note>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself <ref> [Lin93, Ken93, Bal93, Kal93, Zim92] </ref>, though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
Reference: [Lac93] <author> John B. Lacy. Cryptolib: </author> <booktitle> Cryptography in software. In Proceedings of the Fourth Usenix Unix Security Symposium, </booktitle> <pages> pages 1-17, </pages> <address> Santa Clara, CA, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: To generate the random parameters, we use the truerand facility (based on clock skew) from the CryptoLib package <ref> [Lac93] </ref>. It appears to work reasonably well on most Unix platforms, especially when several runs are combined for each bit. 5 Encryption and the Protocol Stack Textbooks on computer networking speak of a model protocol stack with seven layers.
Reference: [LGSN89] <author> T. Mark A. Lomas, Li Gong, Jerome H. Saltzer, and Roger M. Needham. </author> <title> Reducing risks from poorly chosen keys. </title> <booktitle> In Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 14-18. SIGOPS, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: 4, which in our opinion suffers from two practical drawbacks: it does not support the use of hand-held authenticators, which means people must still type passwords into potentially untrustworthy machines, and it is vulnerable to outsiders requesting user tickets from the server and running a password-guessing program against these tickets <ref> [LGSN89, BM92] </ref>. A related effort is the encrypting telnet by Brown and Jaatun, done as a prototype of a standard telnet encryption option. It required use of one of the standard authentication mechanisms, such as Kerberos. More recently, the STEL package [VTB95] has been announced.
Reference: [Lin93] <author> J. Linn. </author> <title> Privacy enhancement for internet electronic mail: Part I: message encryption and authentication procedures. Request for Comments (Experimental) RFC 1421, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb </month> <year> 1993. </year> <note> (Obsoletes RFC1113). </note>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself <ref> [Lin93, Ken93, Bal93, Kal93, Zim92] </ref>, though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
Reference: [LO91] <author> Brian A. LaMacchia and Andrew M. Odlyzko. </author> <title> Computation of discrete logarithms in prime fields. Designs, Codes, </title> <journal> and Cryptography, </journal> <volume> 1 </volume> <pages> 46-62, </pages> <year> 1991. </year>
Reference-contexts: Furthermore, the modulus size used is too small, and has in fact been cryptanalyzed <ref> [LO91] </ref>. The deslogin program is similar in spirit to our esm, though incompatible with telnet. It requires its own key database, though since it uses challenge/response authentication it would not be difficult to modify it to use our current authentication server and hand-held authenticators.
Reference: [Mey95] <author> G.M. Meyer. </author> <title> The PPP encryption control protocol (ECP). Internet draft; work in progress, </title> <month> February </month> <year> 1995. </year>
Reference-contexts: That is not necessarily bad: we need a band-aid, to cope with a threat that in our opinion is imminent. Still, a solution that was part of an integrated security architecture would be better. The Internet community is experimenting with cryptographic standards for the link layer <ref> [Mey95] </ref>, network layer [Atk95], session layer, and application layer (for mail, SNMP, and many others). While all of these have their uses, it would be nice if there were an overall vision and (where feasible) a common key management structure.
Reference: [NBS77] <author> NBS. </author> <title> Data encryption standard, </title> <note> Jan--uary 1977. Federal Information Processing Standards Publication 46. </note>
Reference-contexts: A session key hash, suitable for use as a challenge, is displayable on the local side and is available in the environment on the remote side. There is no other authentication or protection against an active attack. 4 Cryptographic considerations We use triple DES <ref> [NBS77] </ref> as our bulk encryption cipher; its 168 bit effective keyspace is well above the reach of exhaustive search. We opted for triple DES because we feel that standard DES is no longer secure against exhaustive search.
Reference: [NBS80] <author> NBS. </author> <title> DES modes of operation, </title> <note> Decem-ber 1980. Federal Information Processing Standards Publication 81. </note>
Reference-contexts: Since both our ESM and telnet process typical user-to-host session traffic, a character-oriented cipher mode that can encrypt and decrypt each character as received is needed. Our choice is 8-bit Cipher Feedback (CFB) mode <ref> [NBS80] </ref>. CFB has the advantage of eventually "resynching" the cryptographic stream over a channel that occasionally inserts or deletes traffic.
Reference: [Neu95] <author> Michael Neuman. </author> <title> Monitoring and controlling suspicious activity in real-time with Watcher, 1995. </title> <type> Draft. </type>
Reference-contexts: We have developed two practical tools that implement different high-level security abstractions: ESM (Encrypted Session Manager) and an encrypting version of telnet. Each has its own advantages and disadvantages, though they also have a lot in common. 2 Encrypted, Authenticated Telnet 2.1 Protocol Requirements Recent incidents and research results <ref> [Jon95, Neu95] </ref> have us concerned that the Internet may soon become the victim of active attacks. More specifically, we are concerned that attackers may soon be able to hijack existing TCP connections and use them for their own nefarious purposes.
Reference: [Pos82] <author> J. Postel. </author> <title> Simple mail transfer protocol. Request for Comments (Standard) RFC 821, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1982. </year> <note> Obsoletes RFC0788. </note>
Reference-contexts: Ergo, transport-layer encryption cannot be end-to-end either. Above it, matters become even blurrier, especially since the layering structure is inadequate. Where does electronic mail live? At the mail transfer level, as typified by SMTP <ref> [Pos82] </ref>? This is generally considered to be application layer. But message formatting lives [Cro82] above that, and multimedia mail above that [BF93].
Reference: [PR83] <author> J. Postel and J. Reynolds. </author> <title> Telnet protocol specification. Request for Comments (Standard) RFC 854, </title> <institution> Internet Engineering Task Force, </institution> <month> May </month> <year> 1983. </year> <note> Obsoletes RFC0764. </note>
Reference-contexts: There are a number of ways in which this could be done, including bogus routing messages and subverting the Domain Name System [Bel89]. All inbound telnet connections to AT&T must stop at the firewall for authentication; this makes the telnet <ref> [PR83] </ref> protocol a natural choice for providing session security for such connections. <p> It is vulnerable to controlled changes by an active attacker, and it requires that sender and receiver never loose synchronization.) <ref> [PR83] </ref>. Running any encryption system above TCP has a significant drawback: an enemy can easily inject false data into the input stream. Because all error-checking and retransmission is done below the level of the encryption, packets with valid TCP checksums will be accepted, whether they will decrypt sensibly or not.
Reference: [RS84] <author> Ronald L. Rivest and Adi Shamir. </author> <title> How to expose an eavesdropper. </title> <journal> Communications of the ACM, </journal> <volume> 27(4) </volume> <pages> 393-395, </pages> <year> 1984. </year>
Reference-contexts: To avoid this, we use the Interlock Protocol <ref> [RS84] </ref>, forcing each party to reveal evidence that it has com 1 Trying to calculate a more complex one-way function of the exponential doesn't help; the attacker can simply try 2 24 random secret values until he or she finds one that results in the right output function. mitted to its
Reference: [SHS93] <author> David R. Safford, David K. Hess, and Douglas Lee Schales. </author> <title> Secure RPC authentication (SRA) for TELNET and FTP. </title> <booktitle> In Proceedings of the Fourth Usenix Unix Security Symposium, </booktitle> <pages> pages 63-67, </pages> <address> Santa Clara, CA, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: It does not appear to use standard telnet option negotiation; however, it can be used to replace rshd as well as telnetd. The other secure telnet package is SRA, from Texas A&M University <ref> [SHS93] </ref>. It is based on Secure RPC [Sun88], and uses Diffie-Hellman key exchange to negotiate a session key. This session key is used only to transmit the user's login and pass-word; the remainder of the session is not protected.
Reference: [SP388] <institution> SDNS secure data networking system security protocol 3 (SP3). </institution> <type> Technical Report Revision 1.3, </type> <institution> SDNS Protocol and Signalling Working Group, SP3 SubGroup, </institution> <month> July 12 </month> <year> 1988. </year>
Reference-contexts: We are thus forced to move our encryptor to a higher layer. Even a pure network-layer encryptor is not architecturally clean. SP3, for example <ref> [SP388] </ref>, has some modes of operation that make it look much more like a link encryptor, and other modes that force recursion through the network layer. In general, an en-cryptor at any given level can operate at either the top or the bottom of that layer.
Reference: [Sun88] <author> Sun Microsystems, Inc. </author> <title> RPC: remote procedure call protocol specification version 2. Request for Comments (Informational) RFC 1057, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1988. </year> <note> Obsoletes RFC1050. </note>
Reference-contexts: It does not appear to use standard telnet option negotiation; however, it can be used to replace rshd as well as telnetd. The other secure telnet package is SRA, from Texas A&M University [SHS93]. It is based on Secure RPC <ref> [Sun88] </ref>, and uses Diffie-Hellman key exchange to negotiate a session key. This session key is used only to transmit the user's login and pass-word; the remainder of the session is not protected.
Reference: [VTB95] <author> David Vincenzetti, Stefano Taino, and Fabio Bolognesi. STEL: </author> <title> Secure TELnet. </title> <booktitle> In Proceedings of the Fifth Usenix Unix Security Symposium, </booktitle> <address> Salt Lake City, UT, </address> <year> 1995. </year> <note> To appear. </note>
Reference-contexts: A related effort is the encrypting telnet by Brown and Jaatun, done as a prototype of a standard telnet encryption option. It required use of one of the standard authentication mechanisms, such as Kerberos. More recently, the STEL package <ref> [VTB95] </ref> has been announced. It, like ours, uses authenticated Diffie-Hellman; a variety of authentication mechanisms are supported, including some one-time password schemes. It does not appear to use standard telnet option negotiation; however, it can be used to replace rshd as well as telnetd.
Reference: [Wie94] <author> Michael J. Wiener. </author> <title> Efficient DES key search. </title> <type> Technical Report TR-244, </type> <institution> School of Computer Science, Car-leton University, </institution> <address> Ottawa, Canada, </address> <month> May </month> <year> 1994. </year> <note> Presented at the Rump Session of Crypto '93. </note>
Reference-contexts: We opted for triple DES because we feel that standard DES is no longer secure against exhaustive search. Even today, it appears that a $1,000,000 machine can search the entire 56 bit DES keyspace <ref> [Wie94] </ref>. Since both our ESM and telnet process typical user-to-host session traffic, a character-oriented cipher mode that can encrypt and decrypt each character as received is needed. Our choice is 8-bit Cipher Feedback (CFB) mode [NBS80].
Reference: [Zim92] <author> Philip Zimmerman. </author> <title> PGP user's guide, </title> <month> September </month> <year> 1992. </year>
Reference-contexts: But message formatting lives [Cro82] above that, and multimedia mail above that [BF93]. Where does one encrypt mail? The usual answer is to encrypt the message itself <ref> [Lin93, Ken93, Bal93, Kal93, Zim92] </ref>, though exactly how this should be done for complex mail messages isn't at all obvious [CFGM95]. By contrast, one proposal for protection of Web traffic, the Secure Socket Layer (SSL) [Hic95], encrypts the transport connection, rather than the text of the retrieved page.
References-found: 37

