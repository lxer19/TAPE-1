URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/94.tr464rev.Bits_and_relative_order_from_residues.ps.Z
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: Bits and Relative Order from Residues, Space Efficiently  
Author: Paul F. Dietz, Ioan I. Macarie, and Joel I. Seiferas 
Date: June 1, 1994  
Abstract: For each k, let P k be the product of the first k primes. By the Chinese remainder theorem, each integer in the interval [0; P k ) is determined by its residues modulo these k primes. We address the problems of space-efficiently computing the bits and the relative order of such numbers from their residues. 
Abstract-found: 1
Intro-found: 1
Reference: [Bo77] <author> A. Borodin, </author> <title> On relating time and space to size and depth, </title> <journal> SIAM Journal on Computing 6, </journal> <month> 4 (December, </month> <year> 1977), </year> <pages> 733-744. </pages>
Reference-contexts: The issues that arise are similar, but the primary goal is the minimization of parallel time, rather than (sequential) space. We could use a result of Borodin <ref> [Bo77] </ref> to derive some of our results from analogous results for parallel time. Independently using a general approach quite similar to ours, Davida and Litow [DL91] have in fact obtained some of the needed analogous results, the ones needed for our Lemma 1 and Theorem 1. <p> Proof. Even to multiply k k-bit numbers, one could uniformly space efficiently construct a circuit of depth O (log k log log k) = O (S k log S k ) [Re86]. From this, it follows <ref> [Bo77] </ref> that one can compute the bits of the result in space O (S k log S k ). fl Theorem 6.
Reference: [Ch86] <author> B.-Z. Chor, </author> <title> Two Issues in Public Key Cryptography: RSA Bit Security and a New Knapsack Type System, </title> <booktitle> ACM Distinguished Dissertations 1985, </booktitle> <publisher> The MIT Press, </publisher> <address> Cam-bridge, Massachusetts, </address> <year> 1986. </year>
Reference-contexts: , p 2 , : : : , p k , for example, can we efficiently obtain the residues of its "reverse" modulo these same primes? In some settings, there is a simple relation between the very least significant bit (the parity) and the very most significant bit (the "sign") <ref> [Ch86, LC92] </ref>. Even if we cannot improve Lemma 4 and Theorem 6, it is conceivable that we might be able to strengthen related results obtained by working with slightly different, but still nice, sets of moduli.
Reference: [DL91] <author> G. I. Davida and B. Litow, </author> <title> Fast parallel arithmetic via modular representation, </title> <journal> SIAM Journal on Computing 20, </journal> <month> 4 (August, </month> <year> 1991), </year> <pages> 756-765. </pages>
Reference-contexts: We could use a result of Borodin [Bo77] to derive some of our results from analogous results for parallel time. Independently using a general approach quite similar to ours, Davida and Litow <ref> [DL91] </ref> have in fact obtained some of the needed analogous results, the ones needed for our Lemma 1 and Theorem 1. <p> We thank Marius Zimand for his comments on the manuscript, and for bringing to our attention the paper by Davida and Litow <ref> [DL91] </ref>. This report has appeared in Information Processing Letters, Volume 50, Number 3, 9 May 1994, pages 123-127. 1 In this setting, we have log k = fi (log p k ) = fi (log log P k ). <p> Therefore, the verdict will be the same even if we ignore the largest prime and work modulo P k1 , which we can recursively do, having to remember only how many primes we want to consider. fl Remark. A loose reading of Davida and Litow's version <ref> [DL91] </ref> suggests the following alternative to the modulus-elimination approach described above: In the "uncertain" case (i.e., X is within P k =k 2 &lt; P k =8 of either 0 or P k ), simply double X and try again.
Reference: [Ga59] <author> H. L. Garner, </author> <title> The residue number system, </title> <journal> IRE Transactions on Electronic Computers EC-8, </journal> <month> 2 (June, </month> <year> 1959), </year> <pages> 140-147. </pages>
Reference: [Ju84] <author> H. Jung, </author> <title> On probabilistic tape complexity and fast circuits for matrix inversion problems (extended abstract), </title> <booktitle> Lecture Notes in Computer Science (Automata, Languages and Programming, 11th Colloquium, </booktitle> <address> Antwerp, Belgium, </address> <month> July 16-20, </month> <note> 1984) (J. Paredaens, </note> <editor> ed.), </editor> <volume> vol. 172, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1984, </year> <pages> pp. 281-291. </pages>
Reference-contexts: If the transition probabilities are rational, it is possible to reduce such simulation to the comparison of appropriately computed large integers. We save space by computing and working with these integers modulo relatively small primes. Without our Theorem 1 below, Jung's related approach <ref> [Ju84] </ref> requires asymptotically more space, by a factor of fi (log S k ). Results For perspective, let us first note that space-efficient conversion in the other direction, from the binary system to the residue system, is straightforward. Proposition 1.
Reference: [KCT62] <author> Y. A. Keir, P. W. Cheney, and M. Tannenbaum, </author> <title> Division and overflow detection in residue number systems, </title> <journal> IRE Transactions on Electronic Computers EC-11, </journal> <month> 4 (August, </month> <year> 1962), </year> <pages> 501-507. </pages>
Reference: [LC92] <author> M. Lu and J.-S. Chiang, </author> <title> A novel division algorithm for the residue number system, </title> <journal> IEEE Transactions on Computers 41, </journal> <month> 8 (August, </month> <year> 1992), </year> <pages> 1026-1032. </pages>
Reference-contexts: , p 2 , : : : , p k , for example, can we efficiently obtain the residues of its "reverse" modulo these same primes? In some settings, there is a simple relation between the very least significant bit (the parity) and the very most significant bit (the "sign") <ref> [Ch86, LC92] </ref>. Even if we cannot improve Lemma 4 and Theorem 6, it is conceivable that we might be able to strengthen related results obtained by working with slightly different, but still nice, sets of moduli.
Reference: [Ma94] <author> I. I. Macarie, </author> <title> Space-efficient deterministic simulation of probabilistic automata (extended abstract), </title> <booktitle> Lecture Notes in Computer Science (STACS 94, 11th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <address> Caen, France, </address> <month> February 24-26, </month> <note> 1994) (P. </note> <editor> Enjalbert, E. W. Mayr, and K. W. Wagner, eds.), </editor> <volume> vol. 775, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1994, </year> <pages> pp. 109-122. </pages>
Reference-contexts: And, as described in the remark following the proof of Lemma 1 below, we are able to get along without an unnecessary restriction imposed by Davida and Litow. Our particular motivation for these results was space-efficient simulation of probabilistic automata <ref> [Ma94] </ref>. If the transition probabilities are rational, it is possible to reduce such simulation to the comparison of appropriately computed large integers. We save space by computing and working with these integers modulo relatively small primes.
Reference: [MPK83] <author> D. D. Miller, J. N. Polky, and J. R. King, </author> <title> A survey of recent Soviet developments in residue number systems, </title> <booktitle> Proceedings of the Twenty-Sixth Midwest Symposium on Circuits and Systems (Puebla, </booktitle> <address> Mexico, </address> <month> August 15-16, </month> <note> 1983) (E. Sanchez-Sinencio, ed.), </note> <institution> Western Periodicals, North Hollywood, California, </institution> <year> 1983, </year> <title> pp. 389-393; reprinted in Residue Number System Arithmetic: Modern Applications in Digital Signal Processing (M. </title> <editor> A. Soderstrand, W. K. Jenkins, G. A. Jullien, and F. J. Taylor, eds.), </editor> <publisher> IEEE Press, </publisher> <address> New York, </address> <year> 1986, </year> <pages> pp. 385-389. </pages>
Reference: [Re86] <author> J. H. Reif, </author> <title> Logarithmic depth circuits for algebraic functions, </title> <note> SIAM Journal on Computing 15, 1 (February, 1986), 231-242. DIETZ, MACARIE, AND SEIFERAS, BITS FROM RESIDUES 6 </note>
Reference-contexts: Proof. Even to multiply k k-bit numbers, one could uniformly space efficiently construct a circuit of depth O (log k log log k) = O (S k log S k ) <ref> [Re86] </ref>. From this, it follows [Bo77] that one can compute the bits of the result in space O (S k log S k ). fl Theorem 6.
Reference: [SVC83] <author> M. A. Soderstrand, C. Vernia, and J.-H. Chang, </author> <title> An improved residue number system digital-to-analog converter, </title> <journal> IEEE Transactions on Circuits and Systems CAS-30, </journal> <month> 12 (December, </month> <year> 1983), </year> <pages> 903-907. </pages>
Reference-contexts: DIETZ, MACARIE, AND SEIFERAS, BITS FROM RESIDUES 3 What we need for this lemma is the first bit of the fractional part of the binary representation of A=P k . (This ratio has been referred to as the "fractional representation" <ref> [SVC83, VV85] </ref>.) Our approach is to compute the first 3dlog 2 ke bits of the binary representation of each successive fraction t i = ((r i c i ) mod p i )=p i , accumu lating the sum to obtain an approximation to A=P k = P k i=1 t
Reference: [Sz62] <author> N. Szabo, </author> <title> Sign detection in nonredundant residue systems, </title> <journal> IRE Transactions on Electronic Computers EC-11, </journal> <month> 4 (August, </month> <year> 1962), </year> <pages> 494-500. </pages>
Reference: [ST67] <author> N. S. Szabo and R. I. Tanaka, </author> <title> Residue Arithmetic and its Applications to Computer Technology, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: We work with the following exact formula for the implicit input number (call it X) <ref> [ST67, p. 29] </ref>: where A = i=1 q = bA=P k c; and each c i is the modulo-p i inverse of the integer P k =p i . (Note that we can space efficiently obtain each c i from i, since it is congruent modulo p i to the product
Reference: [SV55] <author> A. Svoboda and M. Valach, </author> <title> Operatorove obvody (Operational circuits), </title> <booktitle> Stroje na Zpra-covan Informac III (1955), </booktitle> <address> Nakl. CSAV, Praha, 247-295. (Czech) </address>
Reference: [Va55] <author> M. Valach, </author> <title> Vznik kodu a cselne soustavy zbytkovych trd (Origin of the code and number system of remainder classes), </title> <booktitle> Stroje na Zpracovan Informac III (1955), </booktitle> <address> Nakl. CSAV, Praha, 211-245. (Czech) </address>
Reference: [VV85] <author> T. Van Vu, </author> <title> Efficient implementations of the Chinese remainder theorem for sign detection and residue decoding, </title> <journal> IEEE Transactions on Computers C-34, </journal> <month> 7 (July, </month> <year> 1985), </year> <pages> 646-651. </pages>
Reference-contexts: DIETZ, MACARIE, AND SEIFERAS, BITS FROM RESIDUES 3 What we need for this lemma is the first bit of the fractional part of the binary representation of A=P k . (This ratio has been referred to as the "fractional representation" <ref> [SVC83, VV85] </ref>.) Our approach is to compute the first 3dlog 2 ke bits of the binary representation of each successive fraction t i = ((r i c i ) mod p i )=p i , accumu lating the sum to obtain an approximation to A=P k = P k i=1 t
Reference: [ZSY93] <author> C. N. Zhang, B. Shirazi, and D. Y. Y. Yun, </author> <title> An efficient algorithm and parallel implementations for binary and residue number systems, </title> <journal> Journal of Symbolic Computation 15, </journal> <month> 4 (April, </month> <year> 1993), </year> <pages> 451-462. </pages> <institution> Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <note> U. </note> <author> S. A. </author> <type> 14627-0226 E-mail address: </type> <institution> dietz@cs.rochester.edu Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <note> U. </note> <author> S. A. </author> <type> 14627-0226 E-mail address: </type> <institution> macarie@cs.rochester.edu Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <publisher> U. </publisher> <editor> S. A. </editor> <address> 14627-0226 E-mail address: joel@cs.rochester.edu </address>
References-found: 17

