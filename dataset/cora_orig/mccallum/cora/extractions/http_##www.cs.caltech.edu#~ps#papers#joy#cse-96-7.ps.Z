URL: http://www.cs.caltech.edu/~ps/papers/joy/cse-96-7.ps.Z
Refering-URL: http://www.cs.caltech.edu/~ps/papers/joy/
Root-URL: http://www.cs.caltech.edu
Title: Free-Form Deformations with Lattices of Arbitrary Topology  
Author: Ron MacCracken Kenneth I. Joy 
Date: January 10, 1996  
Affiliation: Computer Graphics Research Laboratory Department of Computer Science University of California, Davis  
Pubnum: Technical Report CSE-96-7  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Barr, A. H. </author> <title> Global and local deformations of solid primitives. </title> <booktitle> In Computer Graphics (SIGGRAPH '84 Proceedings) (July 1984), </booktitle> <editor> H. Christiansen, Ed., </editor> <volume> vol. 18, </volume> <pages> pp. 21-30. </pages>
Reference-contexts: If a deformable space can be defined with great flexibility and with few control points relative to the number in the surface model, then complex models comprised of thousands of control points can be deformed in many interesting ways with very little user-interaction. Barr <ref> [1] </ref> first introduced deformations by creating operations for stretching, twisting, bending and tapering surfaces around a central axis. Operations that involve moving many control points could now be accomplished with the altering of as little as one parameter. <p> This method has been found to be quite intuitive for the designer and dramatically increases the inventory of lattices that can be considered in a free-form deformation. The twists and bends of Barr <ref> [1] </ref> and the cylindrical lattices of Coquillart [6] can be easily simulated. By allowing meshes of arbitrary topology, the continuity problems of adjoining lattices virtually disappear. In section 2, we give an overview of the subdivision methods that are used to define the de-formable space from the lattice.
Reference: [2] <author> Catmull, E., and Clark, J. </author> <title> Recursively generated B-spline surfaces on arbitrary topological meshes. </title> <booktitle> Computer-Aided Design 10 (Sept. </booktitle> <year> 1978), </year> <pages> 350-355. 19 </pages>
Reference-contexts: This paper introduces a further extension to these techniques by establishing deformation methods defined on lattices of arbitrary topology. In this case, the deformable space is defined by using a volume analogy of subdivision surfaces <ref> [2, 8, 9, 16] </ref>. In these subdivision methods, the lattice is repeatedly refined, creating a sequence of lattices that converge to a region in three-dimensional space. This refinement procedure is also used to define a pseudo-parameterization of an embedded point. <p> In section 2, we give an overview of the subdivision methods that are used to define the de-formable space from the lattice. In our case these methods are based upon an extension of the Catmull-Clark refinement rules for surfaces <ref> [2] </ref>. In section 3, we modify the Catmull-Clark procedure to control the boundary surfaces and curves of the deformable region. This produces a deformable region that can be intuitively defined from the lattice. <p> Riesenfeld [20] proceeded to show that Chaikin's curves were uniform quadratic B-spline curves. Doo and Sabin [8, 9] extended Chaikin's methods to uniform quadratic B-spline surfaces and then extended the refinement rules for the quadratic case to meshes of an arbitrary topology. Catmull and Clark <ref> [2] </ref> developed a similar technique for the uniform cubic B-spline case. These methods have now come into widespread use in geometric modeling. They have been used for interpolation and fairing [11], approximation [13], multiresolution design [17], and as a preprocessing step in the design process [19]. <p> Catmull-Clark Surfaces Ed Catmull and Jim Clark <ref> [2] </ref> were the first to notice that the classification of subdivision points as "face", "vertex", or "edge" points could be generalized to work with meshes of arbitrary topology.
Reference: [3] <author> Chadwick, J. E., Haumann, D. R., and Parent, R. E. </author> <title> Layered construction for de--formable animated characters. </title> <booktitle> In Computer Graphics (SIGGRAPH '89 Proceedings) (July 1989), </booktitle> <editor> J. Lane, Ed., </editor> <volume> vol. 23, </volume> <pages> pp. 243-252. </pages>
Reference: [4] <author> Chaikin, G. </author> <title> An algorithm for high speed curve generation. </title> <booktitle> Computer Graphics and Image Processing 3 (1974), </booktitle> <pages> 346-349. </pages>
Reference-contexts: The uniform B-spline curves, surfaces and volumes can be defined by subdivision methods. In the curve case, the refinement rules were first presented by George Chaikin <ref> [4] </ref>. Riesenfeld [20] proceeded to show that Chaikin's curves were uniform quadratic B-spline curves. Doo and Sabin [8, 9] extended Chaikin's methods to uniform quadratic B-spline surfaces and then extended the refinement rules for the quadratic case to meshes of an arbitrary topology.
Reference: [5] <author> Chang, Y., and Rockwood, A. P. </author> <title> A generalized de Casteljau approach to 3D free-Form deformation. </title> <booktitle> In Proceedings of SIGGRAPH '94 (Orlando, </booktitle> <address> Florida, </address> <month> July 24-29, </month> <year> 1994) </year> <month> (July </month> <year> 1994), </year> <editor> A. Glassner, Ed., </editor> <booktitle> Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <publisher> ACM Press, </publisher> <pages> pp. 257-260. </pages> <note> ISBN 0-89791-667-0. </note>
Reference-contexts: Sederberg and Parry's FFDs: While the corner control points of the joined lattices were user-controllable, the internal control points were constrained to preserve continuity; and, calculating the parameterization of a point embedded in the initial trivariate volume required numerical techniques. 2 A recent deformation technique developed by Chang and Rockwood <ref> [5] </ref> generalized Barr's tech-nique in a different manner. Instead of defining the space in a free-form manner, Chang's approach dealt with increasing the flexibility of an axis-based approach by allowing modifications to the axis during the deformation.
Reference: [6] <author> Coquillart, S. </author> <title> Extended free-form deformation: A sculpturing tool for 3D geometric modeling. </title> <booktitle> In Computer Graphics (SIGGRAPH '90 Proceedings) (Aug. </booktitle> <year> 1990), </year> <editor> F. Baskett, Ed., </editor> <volume> vol. 24, </volume> <pages> pp. 187-196. </pages>
Reference-contexts: The process grew more difficult when local changes, such as adding arbitrarily shaped bumps, or global changes, such as bending, twisting, or tapering were necessary. The free-form deformations <ref> [6, 7, 10, 21] </ref> were designed to deal with some of these problems. These methods embed an object in a deformable region of space such that each point of the object has a unique parameterization that defines its position in the region. <p> In order to generate free-form deformations for a more general lattice structure, Coquillart introduced Extended Free-Form Deformations (EFFDs) <ref> [6, 7] </ref>. These methods used the initial lattice points to define an arbitrary trivariate Bezier volume, and allowed the combining of many lattices to form arbitrary shaped spaces. Modifying the points of the defining lattice created a deformation of space where one trivariate volume was deformed into another. <p> This method has been found to be quite intuitive for the designer and dramatically increases the inventory of lattices that can be considered in a free-form deformation. The twists and bends of Barr [1] and the cylindrical lattices of Coquillart <ref> [6] </ref> can be easily simulated. By allowing meshes of arbitrary topology, the continuity problems of adjoining lattices virtually disappear. In section 2, we give an overview of the subdivision methods that are used to define the de-formable space from the lattice. <p> The location of the point under the deformation is calculated by substituting these local coordinate values into the defining equation for the trivariate Bezier volume. Coquillart <ref> [6] </ref> does a similar thing numerical iteration is required as her initial lattices are not formed as parallelepipeds. In both these cases, the cells of the lattice are hexahedral. <p> This tag will determine the result of the deformation by performing the same trilinear calculation in the corresponding cell of the deformed lattice. 16 5. The Deformation Process To deform an object, we follow the 4-step procedure outlined by Coquillart in <ref> [6] </ref>. First, the user must construct the lattice. This is normally done by utilizing an inventory of lattices and a set of tools to merge and build new lattices from this inventory. <p> We found that few iterations were needed as the algorithm converges quickly and the cells are generally small. 7. Results The primary motivation for moving from the hexahedral topological lattices of the trivariate Bezier and B-spline representations of <ref> [6, 10, 21] </ref> was to increase the inventory of available lattices and thus the number of possible deformations. Figures 12 through 16 show the results of this algorithm with a variety of meshes and shapes. in the form of a star. circular disk. upward.
Reference: [7] <author> Coquillart, S., and Janc ene, P. </author> <title> Animated free-form deformation: An interactive animation technique. </title> <booktitle> In Computer Graphics (SIGGRAPH '91 Proceedings) (July 1991), </booktitle> <editor> T. W. Sederberg, Ed., </editor> <volume> vol. 25, </volume> <pages> pp. 23-26. </pages>
Reference-contexts: The process grew more difficult when local changes, such as adding arbitrarily shaped bumps, or global changes, such as bending, twisting, or tapering were necessary. The free-form deformations <ref> [6, 7, 10, 21] </ref> were designed to deal with some of these problems. These methods embed an object in a deformable region of space such that each point of the object has a unique parameterization that defines its position in the region. <p> In order to generate free-form deformations for a more general lattice structure, Coquillart introduced Extended Free-Form Deformations (EFFDs) <ref> [6, 7] </ref>. These methods used the initial lattice points to define an arbitrary trivariate Bezier volume, and allowed the combining of many lattices to form arbitrary shaped spaces. Modifying the points of the defining lattice created a deformation of space where one trivariate volume was deformed into another.
Reference: [8] <author> Doo, D. </author> <title> A subdivision algorithm for smoothing down irregularly shaped polyhedrons. </title> <booktitle> In Proced. Int'l Conf. Ineractive Techniques in Computer Aided Design (1978), </booktitle> <pages> pp. 157-165. </pages> <address> Bologna, Italy, </address> <publisher> IEEE Computer Soc. </publisher>
Reference-contexts: This paper introduces a further extension to these techniques by establishing deformation methods defined on lattices of arbitrary topology. In this case, the deformable space is defined by using a volume analogy of subdivision surfaces <ref> [2, 8, 9, 16] </ref>. In these subdivision methods, the lattice is repeatedly refined, creating a sequence of lattices that converge to a region in three-dimensional space. This refinement procedure is also used to define a pseudo-parameterization of an embedded point. <p> The uniform B-spline curves, surfaces and volumes can be defined by subdivision methods. In the curve case, the refinement rules were first presented by George Chaikin [4]. Riesenfeld [20] proceeded to show that Chaikin's curves were uniform quadratic B-spline curves. Doo and Sabin <ref> [8, 9] </ref> extended Chaikin's methods to uniform quadratic B-spline surfaces and then extended the refinement rules for the quadratic case to meshes of an arbitrary topology. Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case.
Reference: [9] <author> Doo, D., and Sabin, M. </author> <title> Behaviour of recursive division surfaces near extraordinary points. </title> <booktitle> Computer-Aided Design 10 (Sept. </booktitle> <year> 1978), </year> <pages> 356-360. </pages>
Reference-contexts: This paper introduces a further extension to these techniques by establishing deformation methods defined on lattices of arbitrary topology. In this case, the deformable space is defined by using a volume analogy of subdivision surfaces <ref> [2, 8, 9, 16] </ref>. In these subdivision methods, the lattice is repeatedly refined, creating a sequence of lattices that converge to a region in three-dimensional space. This refinement procedure is also used to define a pseudo-parameterization of an embedded point. <p> The uniform B-spline curves, surfaces and volumes can be defined by subdivision methods. In the curve case, the refinement rules were first presented by George Chaikin [4]. Riesenfeld [20] proceeded to show that Chaikin's curves were uniform quadratic B-spline curves. Doo and Sabin <ref> [8, 9] </ref> extended Chaikin's methods to uniform quadratic B-spline surfaces and then extended the refinement rules for the quadratic case to meshes of an arbitrary topology. Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case.
Reference: [10] <author> Griessmair, J., and Purgathofer, W. </author> <title> Deformation of solids with trivariate B-splines. </title> <booktitle> In Eurographics '89 (Sept. </booktitle> <year> 1989), </year> <editor> W. Hansmann, F. R. A. Hopgood, and W. Strasser, Eds., </editor> <publisher> North-Holland, </publisher> <pages> pp. 137-148. </pages>
Reference-contexts: The process grew more difficult when local changes, such as adding arbitrarily shaped bumps, or global changes, such as bending, twisting, or tapering were necessary. The free-form deformations <ref> [6, 7, 10, 21] </ref> were designed to deal with some of these problems. These methods embed an object in a deformable region of space such that each point of the object has a unique parameterization that defines its position in the region. <p> This method is widely used because of its ease of use and power to create many types of deformations with little user-interaction. Griessmair and Purgathofer <ref> [10] </ref> extended this technique by utilizing a trivariate B-Spline representation. Although both methods give the user many controls to alter the deformable space, both Sederberg and Parry's FFDs and Griessmair and Purgathofer's deformation techniques handle only a specific type of space definition, that defined initially by a parallelepiped lattice. <p> We found that few iterations were needed as the algorithm converges quickly and the cells are generally small. 7. Results The primary motivation for moving from the hexahedral topological lattices of the trivariate Bezier and B-spline representations of <ref> [6, 10, 21] </ref> was to increase the inventory of available lattices and thus the number of possible deformations. Figures 12 through 16 show the results of this algorithm with a variety of meshes and shapes. in the form of a star. circular disk. upward.
Reference: [11] <author> Halstead, M., Kass, M., and DeRose, T. </author> <title> Efficient, fair interpolation using Catmull-Clark surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings) (Aug. </booktitle> <year> 1993), </year> <editor> J. T. Kajiya, Ed., </editor> <volume> vol. 27, </volume> <pages> pp. 35-44. 20 </pages>
Reference-contexts: Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case. These methods have now come into widespread use in geometric modeling. They have been used for interpolation and fairing <ref> [11] </ref>, approximation [13], multiresolution design [17], and as a preprocessing step in the design process [19]. In this paper, we consider lattices of an arbitrary topology and will define a set of refinement rules that use this lattice to generate a deformable region in three-dimensional space.
Reference: [12] <author> Hamann, B., Wu, D., and II, R. J. M. </author> <title> On particle path generation based on quadrilin--ear interpolation and bernstein-bezier polynomials. </title> <journal> IEEE Transactions on Visualization and Computer Graphics 1, </journal> <volume> 3 (1995), </volume> <pages> 210-217. </pages>
Reference-contexts: Many numerical algorithms exist to generate the trilinear approximation of a point in a cell. We utilize an adaptation of an algorithm presented by Hamann, et al. <ref> [12] </ref>. Given a point P in a 17 cell, we generate a point P 0 as the trilinear point defined by ( 1 2 ; 1 2 ).
Reference: [13] <author> Hoppe, H., DeRose, T., Duchamp, T., Halstead, M., Jin, H., McDonald, J., Schweitzer, J., and Stuetzle, W. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> In Proceedings of SIGGRAPH '94 (Orlando, </booktitle> <address> Florida, </address> <month> July 24-29, </month> <year> 1994) </year> <month> (July </month> <year> 1994), </year> <editor> A. Glassner, Ed., </editor> <booktitle> Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <publisher> ACM Press, </publisher> <pages> pp. 295-302. </pages> <note> ISBN 0-89791-667-0. </note>
Reference-contexts: Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case. These methods have now come into widespread use in geometric modeling. They have been used for interpolation and fairing [11], approximation <ref> [13] </ref>, multiresolution design [17], and as a preprocessing step in the design process [19]. In this paper, we consider lattices of an arbitrary topology and will define a set of refinement rules that use this lattice to generate a deformable region in three-dimensional space. <p> These are shown in figure 11. These techniques have been previously used by Nasri [18] for Doo-Sabin surfaces, and are similar to the techniques used by Hoppe et al. <ref> [13] </ref> in defining edges, creases, corners and darts on Loop Surfaces [15]. When added to the subdivision procedure, these new rules generate deformable regions of space that closely represent their lattice. 4.
Reference: [14] <author> Joy, K. I., and MacCracken, R. </author> <title> The refinement rules for Catmull-Clark solids. </title> <type> Technical Report CSE-96-1, </type> <institution> Department of Computer Science, University of California, Davis, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: In the following sections, we summarize the refinement rules for the uniform B-spline curve, uniform B-spline surface and uniform B-spline volume, along with the Catmull-Clark extensions of these methods to lattices of arbitrary topology. The complete details of the development of these refinement rules can be found in <ref> [14] </ref>. 2.1. Subdivision Methods for Uniform B-Spline Curves Given a control polygon P, the subdivision procedure defined for uniform cubic B-spline curves generates a new control polygon P 1 which consists of the union of all the vertices generated by a binary subdivision of the curve.
Reference: [15] <author> Loop, C. </author> <title> Smooth subdivision surfaces based on triangles. M.s. </title> <type> thesis, </type> <month> aug </month> <year> 1987. </year>
Reference-contexts: These are shown in figure 11. These techniques have been previously used by Nasri [18] for Doo-Sabin surfaces, and are similar to the techniques used by Hoppe et al. [13] in defining edges, creases, corners and darts on Loop Surfaces <ref> [15] </ref>. When added to the subdivision procedure, these new rules generate deformable regions of space that closely represent their lattice. 4.
Reference: [16] <author> Loop, C. </author> <title> Smooth spline surfaces over irregular meshes. </title> <booktitle> In Proceedings of SIGGRAPH '94 (Orlando, </booktitle> <address> Florida, </address> <month> July 24-29, </month> <year> 1994) </year> <month> (July </month> <year> 1994), </year> <editor> A. Glassner, Ed., </editor> <booktitle> Computer Graphics Proceedings, Annual Conference Series, ACM SIGGRAPH, </booktitle> <publisher> ACM Press, </publisher> <pages> pp. 303-310. </pages> <note> ISBN 0 89791-667-0. </note>
Reference-contexts: This paper introduces a further extension to these techniques by establishing deformation methods defined on lattices of arbitrary topology. In this case, the deformable space is defined by using a volume analogy of subdivision surfaces <ref> [2, 8, 9, 16] </ref>. In these subdivision methods, the lattice is repeatedly refined, creating a sequence of lattices that converge to a region in three-dimensional space. This refinement procedure is also used to define a pseudo-parameterization of an embedded point.
Reference: [17] <author> Lounsbery, M. </author> <title> Multiresolution Analysis for Surfaces of Arbitrary Topological Type. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <address> Seattle, WA, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case. These methods have now come into widespread use in geometric modeling. They have been used for interpolation and fairing [11], approximation [13], multiresolution design <ref> [17] </ref>, and as a preprocessing step in the design process [19]. In this paper, we consider lattices of an arbitrary topology and will define a set of refinement rules that use this lattice to generate a deformable region in three-dimensional space.
Reference: [18] <author> Nasri, A. </author> <title> Polyhedral subdivision methods for free-form surfaces. </title> <journal> ACM Transactions on Graphics 6 (1987), </journal> <pages> 29-73. </pages>
Reference-contexts: In the case of the lattice approximating a cylinder, the region is flat at either end of the cylinder and rounded along the length of the cylinder. These are shown in figure 11. These techniques have been previously used by Nasri <ref> [18] </ref> for Doo-Sabin surfaces, and are similar to the techniques used by Hoppe et al. [13] in defining edges, creases, corners and darts on Loop Surfaces [15]. When added to the subdivision procedure, these new rules generate deformable regions of space that closely represent their lattice. 4.
Reference: [19] <author> Peters, J. </author> <title> Smooth free-form surfaces over irregular meshes generalizing quadratic splines. </title> <booktitle> Computer Aided Geometric Design 10, </booktitle> <month> 3 (Aug. </month> <year> 1993), </year> <pages> 347-362. </pages>
Reference-contexts: Catmull and Clark [2] developed a similar technique for the uniform cubic B-spline case. These methods have now come into widespread use in geometric modeling. They have been used for interpolation and fairing [11], approximation [13], multiresolution design [17], and as a preprocessing step in the design process <ref> [19] </ref>. In this paper, we consider lattices of an arbitrary topology and will define a set of refinement rules that use this lattice to generate a deformable region in three-dimensional space. To generate 5 the deformable regions, we will extend the Catmull-Clark subdivision scheme to volumes.
Reference: [20] <author> Riesenfeld, R. </author> <title> On Chaikin's algorithm. </title> <booktitle> Computer Graphics and Image Processing 4, 3 (1975), </booktitle> <pages> 304-310. </pages>
Reference-contexts: The uniform B-spline curves, surfaces and volumes can be defined by subdivision methods. In the curve case, the refinement rules were first presented by George Chaikin [4]. Riesenfeld <ref> [20] </ref> proceeded to show that Chaikin's curves were uniform quadratic B-spline curves. Doo and Sabin [8, 9] extended Chaikin's methods to uniform quadratic B-spline surfaces and then extended the refinement rules for the quadratic case to meshes of an arbitrary topology.
Reference: [21] <author> Sederberg, T. W., and Parry, S. R. </author> <title> Free-form deformation of solid geometric models. </title> <booktitle> In Computer Graphics (SIGGRAPH '86 Proceedings) (Aug. </booktitle> <year> 1986), </year> <editor> D. C. Evans and R. J. Athay, Eds., </editor> <volume> vol. 20, </volume> <pages> pp. 151-160. 21 </pages>
Reference-contexts: The process grew more difficult when local changes, such as adding arbitrarily shaped bumps, or global changes, such as bending, twisting, or tapering were necessary. The free-form deformations <ref> [6, 7, 10, 21] </ref> were designed to deal with some of these problems. These methods embed an object in a deformable region of space such that each point of the object has a unique parameterization that defines its position in the region. <p> Barr's deformations were followed by a more generalized approach to the problem, the Free-Form Deformations (FFDs) of Sederberg and Parry <ref> [21] </ref>. This method imposed an initial deformation lattice on a parallelepiped, and defined the deformable space as the trivariate Bezier volume defined by the lattice points. <p> Boundary Control of the Subdivision Volume Designing a lattice that represents a particular region of space is a difficult task. The free-form deformations of Sederberg and Parry <ref> [21] </ref> were based upon an initial lattice that was formed on a parallelepiped. In our case, the region of space resulting from applying the Catmull-Clark procedure above to a general lattice does not conform closely to the general shape of the lattice shrinking away from the boundary substantially. <p> When added to the subdivision procedure, these new rules generate deformable regions of space that closely represent their lattice. 4. Calculating the Location of Vertices Embedded in the Deformable Space Sederberg and Parry <ref> [21] </ref> impose the initial lattice on a parallelepiped in space and calculate the parameterization of a point within the deformable space by using the local coordinates of a point within the parallelepiped. <p> We found that few iterations were needed as the algorithm converges quickly and the cells are generally small. 7. Results The primary motivation for moving from the hexahedral topological lattices of the trivariate Bezier and B-spline representations of <ref> [6, 10, 21] </ref> was to increase the inventory of available lattices and thus the number of possible deformations. Figures 12 through 16 show the results of this algorithm with a variety of meshes and shapes. in the form of a star. circular disk. upward.
Reference: [22] <author> Weiler, K. J. </author> <title> Topological structures for geometric modeling. </title> <type> Ph.d. thesis, </type> <institution> Rensselaer Poly--technic Institute, </institution> <month> Aug. </month> <journal> 1986. </journal> <volume> 22 23 24 25 26 27 </volume>
Reference-contexts: Implementation Details The data structure holding the lattice is implemented as an extension of the half-edge data structure for surfaces much like the radial-edge structure of Weiler <ref> [22] </ref>. The primary difference between halfedge structure for a mesh representing a surface and a lattice representing a volume is that the lattice structure may have several faces that contain each edge the mesh structure will have at most two.
References-found: 22

