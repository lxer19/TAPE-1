URL: file://ic.eecs.berkeley.edu/pub/Dist_Algs/papers/mc-nasecode94.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/Respep/Research/dist-sim/publications.html
Root-URL: 
Email: hsheng@ic.EECS.Berkeley.EDU  
Title: A Generalized Self-Scattering Technique for Monte Carlo Simulation Suitable for SIMD Architectures  
Author: Henry Sheng, Roberto Guerrieri and Alberto Sangiovanni-Vincentelli 
Address: 550-202 Cory Hall  Berkeley, CA 94720, U.S.A.  
Affiliation: Department of Electrical Engineering and Computer Sciences  University of California,  Dipartimento di Elettronica e Informatica Universita di Bologna, Italy  
Abstract: We present a generalized self-scattering method for generating carrier free flight times in Monte Carlo simulation. The flexibility of this approach reduces the number of fictitious scatterings which is particularly appealing in a SIMD paradigm. Speedups from 19% to 69% over an optimized variable-G approach are shown for an implementation on the Connection Ma- chine CM-2, along with performance sensitivities to applied fields and grid spacings. Conversions of variable-G techniques to this approach require few modifications. Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.W. Hockney and J.W. Eastwood. </author> <title> Computer Simulation Using Particles. </title> <publisher> McGraw Hill, </publisher> <year> 1981. </year>
Reference-contexts: Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation <ref> [1, 2, 3] </ref> through a technique for generalized self-scattering, and present results from a massively parallel single instruction, multiple data stream (SIMD [4]) implementation [5]. Monte Carlo simulation is time-consuming because it involves the generation of a large number of carrier flights. <p> Unfortunately, the proposed inversion is computationally expensive. Consequently, the self-scattering [3, 6] or variable-G <ref> [1, 7, 8] </ref> approaches are typically used to enhance processing efficiency.
Reference: [2] <author> T. Kurosawa. </author> <title> Monte Carlo Calculation of Hot-Electron Problems. </title> <booktitle> In Proc. of the International Conference on the Physics of Semiconductors, </booktitle> <year> 1966. </year>
Reference-contexts: Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation <ref> [1, 2, 3] </ref> through a technique for generalized self-scattering, and present results from a massively parallel single instruction, multiple data stream (SIMD [4]) implementation [5]. Monte Carlo simulation is time-consuming because it involves the generation of a large number of carrier flights.
Reference: [3] <author> C. Jacoboni and P. Lugli. </author> <title> The Monte Carlo Method for SemiconductorDevice Simulation. </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation <ref> [1, 2, 3] </ref> through a technique for generalized self-scattering, and present results from a massively parallel single instruction, multiple data stream (SIMD [4]) implementation [5]. Monte Carlo simulation is time-consuming because it involves the generation of a large number of carrier flights. <p> Unfortunately, the proposed inversion is computationally expensive. Consequently, the self-scattering <ref> [3, 6] </ref> or variable-G [1, 7, 8] approaches are typically used to enhance processing efficiency.
Reference: [4] <author> M.J. Flynn. </author> <title> Very High Speed Computing Systems. </title> <booktitle> Proc. IEEE, </booktitle> <address> 54:19011909, </address> <year> 1966. </year>
Reference-contexts: Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation [1, 2, 3] through a technique for generalized self-scattering, and present results from a massively parallel single instruction, multiple data stream (SIMD <ref> [4] </ref>) implementation [5]. Monte Carlo simulation is time-consuming because it involves the generation of a large number of carrier flights.
Reference: [5] <author> H. Sheng, R. Guerrieri, and A.L. Sangiovanni-Vincentelli. </author> <title> Massively Parallel Computation For Three-Dimensional Monte Carlo Device Simulation. </title> <booktitle> In Proceedings of SISDEP '91, </booktitle> <year> 1991. </year>
Reference-contexts: Introduction We propose an algorithmic approach to diminish the computational cost of Monte Carlo device simulation [1, 2, 3] through a technique for generalized self-scattering, and present results from a massively parallel single instruction, multiple data stream (SIMD [4]) implementation <ref> [5] </ref>. Monte Carlo simulation is time-consuming because it involves the generation of a large number of carrier flights. <p> Results Both the generalized self-scattering and the variable- G schemes were implemented on a static-field Monte Carlo simulator for the Connection Machine CM-2 1 <ref> [5] </ref>, where the electric field has been provided by a three-dimensional drift-diffusion simulator [9]. Processing efficiency, defined as the ratio between the physically simulated time and the CPU time, is used to evaluate the algorithms.
Reference: [6] <author> H. Rees. </author> <title> Calculation of Distribution Functions By Exploiting the Stability of the Steady State. </title> <journal> J. Phys. Chem. Solids, </journal> <volume> 30 </volume> <pages> 643-655, </pages> <year> 1969. </year>
Reference-contexts: Unfortunately, the proposed inversion is computationally expensive. Consequently, the self-scattering <ref> [3, 6] </ref> or variable-G [1, 7, 8] approaches are typically used to enhance processing efficiency.
Reference: [7] <author> C. Moglestue. </author> <title> A Self-Consistent Monte Carlo Particle Model to Analyze Semiconductor Microcomponents of Any Geometry. </title> <journal> IEEE Transactions on CAD, </journal> <month> April </month> <year> 1986. </year>
Reference-contexts: Unfortunately, the proposed inversion is computationally expensive. Consequently, the self-scattering [3, 6] or variable-G <ref> [1, 7, 8] </ref> approaches are typically used to enhance processing efficiency.
Reference: [8] <author> E. Sangiorgi, B. Ricco, and F. Venturi. MOS2: </author> <title> An Efficient Monte Carlo Simulator for MOS Devices. </title> <journal> IEEE Transactions on CAD, </journal> <month> February </month> <year> 1988. </year>
Reference-contexts: Unfortunately, the proposed inversion is computationally expensive. Consequently, the self-scattering [3, 6] or variable-G <ref> [1, 7, 8] </ref> approaches are typically used to enhance processing efficiency. <p> As with the variable-G approach, multiple S functions may be used to form a tighter bound on the analytical probabilities at the cost of introducing energy-induced false scatterings events caused by the transition of carriers across energy subregions <ref> [8] </ref>. The effects of fictitious scatterings are more pronounced in SIMD architectures than in sequential machines, because of the need for instruction-level synchronization. In SIMD, each false scattering requires a full computation of scattering, carrier flight and statistics. <p> The generalized self-scattering (GSS) technique was compared with three optimized choices of energy segment size for the variable-G technique (figure 1). Four energy patches were used for GSS (boundaries at 0.052 eV, 0.175 eV, and 0.45 eV). The strategy from <ref> [8] </ref> was used for determining good choices for the energy segment sizes in the variable-G technique. <p> Under high fields, the performances of both the GSS and VG techniques degrade because of both the short free flight times of high-energy carriers, as well as an increase in the number of energy-induced false scatterings. Whereas optimality with the variable-G technique typically requires 15-20 segments <ref> [8] </ref>, substantially fewer (3-5) segments are necessary for GSS, leading to fewer energy-induced false scatterings.
Reference: [9] <author> D. Webber, E. Tomacruz, T. Toyabe, and A.L. Sangiovanni-Vincentelli, </author> <title> A Massively Parallel Algorithm for Three-Dimensional Device Simulation. </title> <journal> IEEE Transactions on CAD, </journal> <month> September </month> <year> 1991. </year>
Reference-contexts: Results Both the generalized self-scattering and the variable- G schemes were implemented on a static-field Monte Carlo simulator for the Connection Machine CM-2 1 [5], where the electric field has been provided by a three-dimensional drift-diffusion simulator <ref> [9] </ref>. Processing efficiency, defined as the ratio between the physically simulated time and the CPU time, is used to evaluate the algorithms. Processing efficiencies were measured for simulations involving both gridless and gridded homogeneous slabs, running on a CM-2 with 1024 processors.
References-found: 9

