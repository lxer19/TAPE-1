URL: http://www.cs.washington.edu/homes/fix/papers/fix-ladner-cg98-final.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/fix/papers/
Root-URL: 
Title: Multiresolution Banded Refinement to Accelerate Surface Reconstruction from Polygons  
Author: James D. Fix Richard E. Ladner 
Note: To appear in "Proceedings of the 14th Annual ACM Symposium on Computational Geometry," 1998.  
Abstract: We propose a method for constructing a tiling between a pair of planar polygons. Our technique uses multires-olution: tilings of lower resolution polygons are used to construct a tiling for the full resolution polygons. The tilings are constructed using banded refinement, by restricted dynamic programming, in roughly linear time and space. By contrast, the optimal dynamic programming method requires quadratic time and space. In our empirical study of surface reconstruction of brain contours our algorithm exhibited significant speedup over the optimal dynamic program, yet nearly always found an optimal reconstruction. Our approach appears to be generalizable to other geometric problems solvable by dynamic programming, and flexible enough to be tuned for varying data set characteristics. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Alt and M. Godau. </author> <title> Measuring the resemblance of polygonal curves. </title> <booktitle> In Proceedings of the 8th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 102-109, </pages> <year> 1992. </year>
Reference-contexts: The formulation of Alt and Godau for determining whether two polygonal curves resemble each other shares some features with these problems, and might also benefit from a multiresolution approach <ref> [1] </ref>. 1.2 Paper Overview We begin by defining the parallel polygon tiling problem, and describe its solution using dynamic programming. In section 3 we describe multiresolution analysis of polygons, and motivate its application to the polygon tiling problem by giving a high-level overview of our algorithm.
Reference: [2] <author> C.L. Bajaj, E.J. Coyle, and K-N. Lin. </author> <title> Arbitrary topology shape reconstruction from planar cross sections. Graphical Models and Image Processing, </title> <booktitle> 58(6) </booktitle> <pages> 524-543, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: Typically, the outlines from a cross-sectional slice are modeled as polygons, and the reconstruction is modeled as a polyhedral surface that interpolates the polygonal slices (see, for example, <ref> [4, 5, 2, 16] </ref>). The surface is chosen to be piecewise linear and composed of triangular tiles. <p> Meyers et al. [16] provide a good survey of these methods. When a pair of polygons to be tiled is dissimilar, the surface computed by polygon tiling is often of poor quality, and many of the above techniques fail to generate good solutions <ref> [2] </ref>. Other general techniques exist that do not rely on solution of the polygon tiling problem. Boissonnat [5], and Boissonnat and Geiger [6] compute a tiling by Delauney triangulation. <p> Bare-quet and Sharir [4] and Barequet et al. [3] use curve similarity techniques to tile portions of contours, then decompose the remaining untiled portions into three-dimensional polygons and tile them using polygon triangulation. This methodology is followed by Bajaj et al. <ref> [2] </ref>, providing a more rigorous formulation and techniques for handling dissimilar contours. While we have not developed this idea, multiresolution techniques similar to ours might be applied to accelerate the matching and polygon triangulation portions of these algorithms.
Reference: [3] <author> G. Barequet, D. Shapiro, and A. Tal. </author> <title> History consideration in reconstructing polyhedral surfaces from parallel slices. </title> <booktitle> In Proceedings of Visualization, </booktitle> <pages> pages 149-156, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: Other general techniques exist that do not rely on solution of the polygon tiling problem. Boissonnat [5], and Boissonnat and Geiger [6] compute a tiling by Delauney triangulation. Bare-quet and Sharir [4] and Barequet et al. <ref> [3] </ref> use curve similarity techniques to tile portions of contours, then decompose the remaining untiled portions into three-dimensional polygons and tile them using polygon triangulation. This methodology is followed by Bajaj et al. [2], providing a more rigorous formulation and techniques for handling dissimilar contours.
Reference: [4] <author> G. Barequet and M. Sharir. </author> <title> Piecewise-linear interpolation between polygonal slices. </title> <booktitle> In Proceedings of the 10th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 93-102, </pages> <year> 1994. </year>
Reference-contexts: Typically, the outlines from a cross-sectional slice are modeled as polygons, and the reconstruction is modeled as a polyhedral surface that interpolates the polygonal slices (see, for example, <ref> [4, 5, 2, 16] </ref>). The surface is chosen to be piecewise linear and composed of triangular tiles. <p> Other general techniques exist that do not rely on solution of the polygon tiling problem. Boissonnat [5], and Boissonnat and Geiger [6] compute a tiling by Delauney triangulation. Bare-quet and Sharir <ref> [4] </ref> and Barequet et al. [3] use curve similarity techniques to tile portions of contours, then decompose the remaining untiled portions into three-dimensional polygons and tile them using polygon triangulation. This methodology is followed by Bajaj et al. [2], providing a more rigorous formulation and techniques for handling dissimilar contours.
Reference: [5] <author> J.D. Boissonnat. </author> <title> Shape reconstruction from planar cross sections. Computer Vision, </title> <journal> Graphics and Image Processing, </journal> <volume> 44 </volume> <pages> 1-29, </pages> <year> 1988. </year>
Reference-contexts: Typically, the outlines from a cross-sectional slice are modeled as polygons, and the reconstruction is modeled as a polyhedral surface that interpolates the polygonal slices (see, for example, <ref> [4, 5, 2, 16] </ref>). The surface is chosen to be piecewise linear and composed of triangular tiles. <p> When a pair of polygons to be tiled is dissimilar, the surface computed by polygon tiling is often of poor quality, and many of the above techniques fail to generate good solutions [2]. Other general techniques exist that do not rely on solution of the polygon tiling problem. Boissonnat <ref> [5] </ref>, and Boissonnat and Geiger [6] compute a tiling by Delauney triangulation. Bare-quet and Sharir [4] and Barequet et al. [3] use curve similarity techniques to tile portions of contours, then decompose the remaining untiled portions into three-dimensional polygons and tile them using polygon triangulation.
Reference: [6] <author> J.D. Boisssonnat and B. Geiger. </author> <title> Three dimensional reconstruction of complex shapes based on the De-launey triangulation. </title> <booktitle> In Procedings of Biomedical Image Processing and Biomedical Visualization, volume 1905, </booktitle> <pages> pages 964-975. </pages> <publisher> SPIE Press, </publisher> <year> 1993. </year>
Reference-contexts: Other general techniques exist that do not rely on solution of the polygon tiling problem. Boissonnat [5], and Boissonnat and Geiger <ref> [6] </ref> compute a tiling by Delauney triangulation. Bare-quet and Sharir [4] and Barequet et al. [3] use curve similarity techniques to tile portions of contours, then decompose the remaining untiled portions into three-dimensional polygons and tile them using polygon triangulation.
Reference: [7] <author> H.N. Christiansen and T.W. </author> <title> Sederberg. Conversion of complex contour line definitions into polygonal element mosaics. </title> <journal> Computer Graphics, </journal> <volume> 12(2) </volume> <pages> 187-192, </pages> <month> August </month> <year> 1978. </year>
Reference-contexts: Their optimal method can be too costly when the polygons consist of many vertices, especially when used in interactive applications. As a result, faster methods were proposed that use greedy heuristics to find approximate solutions <ref> [7, 10] </ref>. While extremely efficient, the surfaces found by the heuristic methods are often unsatisfactory, even on simple inputs [15]. Meyers [14] proposed a multiresolution method that uses an optimal tiling of low resolution approximations of the polygons to guide a search for an optimal tiling. <p> In the general case, a surface my have holes or branches, and thus the cross sections might contain multiple contours. While our tiling method does not solve the general problem, many methods have been developed that use polygon tiling as a subcomponent. <ref> [16, 7, 10, 19] </ref>. These methods first find a correspondence between the polygons of adjacent layers. Structures are added that bridge merging or branching contours so that they form one polygon and can be tiled as a single pair of polygons.
Reference: [8] <author> M. Cohen, T. DeRose, D. Salesin, P. Schroder, and W. Sweldens. </author> <title> Wavelets in computer graphics, </title> <booktitle> 1996. ACM SIGGRAPH Course Notes. </booktitle>
Reference-contexts: empirical study nearly all tilings found were within one percent of the optimal surface area and at least eighty percent were optimal. 1.1 Related Work Multiresolution analysis has had a strong impact on computer algorithms, most notably in the areas of signal processing and compression, numerical methods, and computer graphics <ref> [8, 20] </ref>. Used for compression and function approximation, multiresolution analyses and wavelet decompositions yield compact representations that mostly characterize the original functions. When applied to numerical optimization problems, multires-olution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [13].
Reference: [9] <author> H. Fuchs, Z.M. Kedem, and S.P. Uselton. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> 20(10) 693-702, October 1977. 
Reference-contexts: In the simplest formulation of the problem, there is only one contour per slice, and the reconstruction method independently computes a tiling between adjacent contour pairs <ref> [12, 9, 14] </ref>. The reconstructed surface is topologically equivalent to a cylinder. In this case, surface reconstruction from contours is reduced to the polygon tiling problem: find a surface composed of triangular tiles between a pair of planar polygons subject to some optimization criteria. <p> In this case, surface reconstruction from contours is reduced to the polygon tiling problem: find a surface composed of triangular tiles between a pair of planar polygons subject to some optimization criteria. Finding a polygon tiling is the main focus of this paper. Fuchs, Kedem, and Uselton <ref> [9] </ref> devised a dynamic programming algorithm that computes an optimal tiling in O (n 2 log n) time and O (n 2 ) space using minimum surface area as their criterion. <p> Based on local search, it finds near-optimal tilings quickly but often fails to find optimal ones (see figure 6). We propose an approximation methodology for computing a polygon tiling using multiresolution techniques that is based on the dynamic programming formulation of Fuchs et al. <ref> [9] </ref>. The method proceeds as follows: we model the inputs as piecewise linear curves and perform a wavelet decomposition. This yields a sequence of approximations of decreasing resolution, hence fewer sample points. We compute an optimal tiling of the lowest resolution curves using dynamic programming. <p> When applied to numerical optimization problems, multires-olution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [13]. Our method is a synthesis of the optimal tiling algorithm of Fuchs et al. <ref> [9] </ref> and the multiresolution tiling method of Meyers [14]. Meyers' tiling algorithm was one of the first compelling applications of multiresolu-tion and wavelet analysis to computational geometry and computer graphics. <p> Our discussion of the polygon tiling problem and its optimal solution follows that of Fuchs et al. <ref> [9] </ref>. Let P = fp 0 ; : : : ; p m1 g and Q = fq 0 ; : : : ; q n1 g be polygons in R 3 lying in parallel planes. <p> Using a straightforward dynamic program, this minimal path can be found in O (m 2 n) time and O (mn) space. By some clever observations about optimal paths in G (P; Q), Fuchs, Kedem, and Uselton discovered a dynamic programming strategy that used only O (mn log m) time <ref> [9] </ref>. 3 Multiresolution Tiling Our tiling method hinges on the ability to construct approximations of polygons, and construct a tiling based on the tilings of those approximations. 3.1 Multiresolution Analysis of Polygons Multiresolution analysis provides a fast and effective way for computing approximations of a polygon, where the points of a <p> The band width was fixed at some value b at all resolution levels, and the number of resolution levels k was logn=2. by multiresolution tiling using banded and local search against the optimal. Optimal: our implementation of the optimal dynamic programming tiling algorithm <ref> [9] </ref>. Local search: our implementation of the multiresolu tion algorithm that refines using local search by edge flip operations [14].
Reference: [10] <author> S. Ganapathy and T.G. Dennehy. </author> <title> A new general triangulation method for planar contours. </title> <journal> Computer Graphics, </journal> <volume> 16(3) </volume> <pages> 69-75, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: Their optimal method can be too costly when the polygons consist of many vertices, especially when used in interactive applications. As a result, faster methods were proposed that use greedy heuristics to find approximate solutions <ref> [7, 10] </ref>. While extremely efficient, the surfaces found by the heuristic methods are often unsatisfactory, even on simple inputs [15]. Meyers [14] proposed a multiresolution method that uses an optimal tiling of low resolution approximations of the polygons to guide a search for an optimal tiling. <p> In the general case, a surface my have holes or branches, and thus the cross sections might contain multiple contours. While our tiling method does not solve the general problem, many methods have been developed that use polygon tiling as a subcomponent. <ref> [16, 7, 10, 19] </ref>. These methods first find a correspondence between the polygons of adjacent layers. Structures are added that bridge merging or branching contours so that they form one polygon and can be tiled as a single pair of polygons.
Reference: [11] <author> A. Kalvin, E. Schonberg, J.T. Schwartz, and M. Sharir. </author> <title> Two-dimensional model-based boundary matching using footprints. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5 </volume> <pages> 38-55, </pages> <year> 1986. </year>
Reference-contexts: There are many problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: finding figure correspondences for polygon morphing [18], matching curve features <ref> [23, 11] </ref>, dynamic time-warping for handwriting and speech recog tiling path in the tiling graph. The shaded triangle corresponds to the highlighted edge in the graph. nition [17].
Reference: [12] <author> E. Keppel. </author> <title> Approximating complex surfaces by triangulation of contour lines. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 19 </volume> <pages> 2-15, </pages> <year> 1975. </year>
Reference-contexts: In the simplest formulation of the problem, there is only one contour per slice, and the reconstruction method independently computes a tiling between adjacent contour pairs <ref> [12, 9, 14] </ref>. The reconstructed surface is topologically equivalent to a cylinder. In this case, surface reconstruction from contours is reduced to the polygon tiling problem: find a surface composed of triangular tiles between a pair of planar polygons subject to some optimization criteria.
Reference: [13] <author> Z. Liu, S. Gortler, and M. Cohen. </author> <title> Heirarchical spacetime control. </title> <booktitle> In Computer Graphics Proceedings. ACM SIGGRAPH, </booktitle> <year> 1994. </year>
Reference-contexts: Used for compression and function approximation, multiresolution analyses and wavelet decompositions yield compact representations that mostly characterize the original functions. When applied to numerical optimization problems, multires-olution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail <ref> [13] </ref>. Our method is a synthesis of the optimal tiling algorithm of Fuchs et al. [9] and the multiresolution tiling method of Meyers [14]. Meyers' tiling algorithm was one of the first compelling applications of multiresolu-tion and wavelet analysis to computational geometry and computer graphics.
Reference: [14] <author> D. Meyers. </author> <title> Multiresolution tiling. </title> <journal> Computer Graphics Forum, </journal> <volume> 13(5) </volume> <pages> 325-340, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: In the simplest formulation of the problem, there is only one contour per slice, and the reconstruction method independently computes a tiling between adjacent contour pairs <ref> [12, 9, 14] </ref>. The reconstructed surface is topologically equivalent to a cylinder. In this case, surface reconstruction from contours is reduced to the polygon tiling problem: find a surface composed of triangular tiles between a pair of planar polygons subject to some optimization criteria. <p> As a result, faster methods were proposed that use greedy heuristics to find approximate solutions [7, 10]. While extremely efficient, the surfaces found by the heuristic methods are often unsatisfactory, even on simple inputs [15]. Meyers <ref> [14] </ref> proposed a multiresolution method that uses an optimal tiling of low resolution approximations of the polygons to guide a search for an optimal tiling. Based on local search, it finds near-optimal tilings quickly but often fails to find optimal ones (see figure 6). <p> When applied to numerical optimization problems, multires-olution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [13]. Our method is a synthesis of the optimal tiling algorithm of Fuchs et al. [9] and the multiresolution tiling method of Meyers <ref> [14] </ref>. Meyers' tiling algorithm was one of the first compelling applications of multiresolu-tion and wavelet analysis to computational geometry and computer graphics. Like our method, his method computed tilings from lower resolution tilings, but employed a local search heuristic to refine the tilings. <p> Sweldens and Schroder [21] describe techniques for designing analysis filters a for various applications. For polygons, we use the analysis filter of Meyers: fa 0 = 19=28; a 1 = 9=28; a 2 = 1=8; a 3 = 1=14; a 4 = 1=28g <ref> [14] </ref>. This was chosen so that the polygon P l is nearly a least squares approximation of P l+1 . Example approximations given by this scheme can be seen in the polygons of figure 1. Performing a multiresolution analysis of P is very efficient. <p> In our multiresolution tiling algorithm, we use the path of a lower resolution tiling to guide dynamic programming to construct a higher resolution tiling. Meyers <ref> [14] </ref> multiresolution tiling algorithm provides a framework for our technique. The algorithm works as follows: let P and Q be polygons with m and n points, and let k be a non-negative integer. Assume that m and n are divisible by 2 k . <p> Meyers gave a straightforward way of tiling P l and Q l by splitting each tile of T l1 <ref> [14] </ref>. For example, let superscripts of p i and q j denote the resolution levels of polygon vertices as before. <p> The RefineTiling step remedies this. One approach to refinement would be to make local improvements to a tiling| for example, one could apply "edge flips" (see figure 5a) that improve the tiling, until no improvement can be made. This was the method applied by Meyers <ref> [14] </ref>. Figure 5b illustrates the weakness of this technique: it is possible for a tiling to be close to an optimal tiling, yet have an edge flip operation lead the refinement to a sub-optimal tiling that is locally optimal with respect to the edge flip operation. <p> Optimal: our implementation of the optimal dynamic programming tiling algorithm [9]. Local search: our implementation of the multiresolu tion algorithm that refines using local search by edge flip operations <ref> [14] </ref>. Figures 9 and 10 show the tilings that resulted from applying the banded method with b = 8 to these data sets. the tiling algorithms: for local search (the first bar) and for banded refinement using various choices of the band width parameter b (the remaining bars).
Reference: [15] <author> D. Meyers. </author> <title> Reconstruction of Surfaces from Planar Contours. </title> <type> PhD thesis, </type> <institution> University of Washington, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: As a result, faster methods were proposed that use greedy heuristics to find approximate solutions [7, 10]. While extremely efficient, the surfaces found by the heuristic methods are often unsatisfactory, even on simple inputs <ref> [15] </ref>. Meyers [14] proposed a multiresolution method that uses an optimal tiling of low resolution approximations of the polygons to guide a search for an optimal tiling. Based on local search, it finds near-optimal tilings quickly but often fails to find optimal ones (see figure 6).
Reference: [16] <author> D. Meyers, S. Skinner, and K. Sloan. </author> <title> Surfaces from contours. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(3) </volume> <pages> 228-258, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Typically, the outlines from a cross-sectional slice are modeled as polygons, and the reconstruction is modeled as a polyhedral surface that interpolates the polygonal slices (see, for example, <ref> [4, 5, 2, 16] </ref>). The surface is chosen to be piecewise linear and composed of triangular tiles. <p> In the general case, a surface my have holes or branches, and thus the cross sections might contain multiple contours. While our tiling method does not solve the general problem, many methods have been developed that use polygon tiling as a subcomponent. <ref> [16, 7, 10, 19] </ref>. These methods first find a correspondence between the polygons of adjacent layers. Structures are added that bridge merging or branching contours so that they form one polygon and can be tiled as a single pair of polygons. <p> Structures are added that bridge merging or branching contours so that they form one polygon and can be tiled as a single pair of polygons. Our polygon tiling algorithm can be invoked to perform this tiling. Meyers et al. <ref> [16] </ref> provide a good survey of these methods. When a pair of polygons to be tiled is dissimilar, the surface computed by polygon tiling is often of poor quality, and many of the above techniques fail to generate good solutions [2].
Reference: [17] <author> D. Sankoff and J. Kruskal, </author> <title> editors. Time Warps, String Edits, and Macromolecules: the Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1983. </year>
Reference-contexts: Most similar are those that arise in curve comparison applications: finding figure correspondences for polygon morphing [18], matching curve features [23, 11], dynamic time-warping for handwriting and speech recog tiling path in the tiling graph. The shaded triangle corresponds to the highlighted edge in the graph. nition <ref> [17] </ref>. All of these can be formulated and solved using dynamic programming| there seems to be great potential in generalizing our method to accelerate their solutions as well.
Reference: [18] <author> T.W. Sederberg and E. Greenwood. </author> <title> A physically based approach to 2D shape blending. </title> <booktitle> In Computer Graphics Proceedings. ACM SIGGRAPH, </booktitle> <year> 1992. </year>
Reference-contexts: There are many problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: finding figure correspondences for polygon morphing <ref> [18] </ref>, matching curve features [23, 11], dynamic time-warping for handwriting and speech recog tiling path in the tiling graph. The shaded triangle corresponds to the highlighted edge in the graph. nition [17].
Reference: [19] <author> M. Shantz. </author> <title> Surface definition for branching contour defined objects. </title> <journal> Computer Graphics, </journal> <volume> 15 </volume> <pages> 242-270, </pages> <month> July </month> <year> 1981. </year>
Reference-contexts: In the general case, a surface my have holes or branches, and thus the cross sections might contain multiple contours. While our tiling method does not solve the general problem, many methods have been developed that use polygon tiling as a subcomponent. <ref> [16, 7, 10, 19] </ref>. These methods first find a correspondence between the polygons of adjacent layers. Structures are added that bridge merging or branching contours so that they form one polygon and can be tiled as a single pair of polygons.
Reference: [20] <author> E. Stollnitz, T. DeRose, and D. Salesin. </author> <title> Wavelets for computer graphics: Theory and Applications. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, </address> <year> 1996. </year>
Reference-contexts: empirical study nearly all tilings found were within one percent of the optimal surface area and at least eighty percent were optimal. 1.1 Related Work Multiresolution analysis has had a strong impact on computer algorithms, most notably in the areas of signal processing and compression, numerical methods, and computer graphics <ref> [8, 20] </ref>. Used for compression and function approximation, multiresolution analyses and wavelet decompositions yield compact representations that mostly characterize the original functions. When applied to numerical optimization problems, multires-olution methods find solutions quickly by providing a coarse solution which can then be refined with higher levels of detail [13].
Reference: [21] <author> W. Sweldens and P. Schroder. </author> <title> Building your own wavelets at home. </title> <type> Technical Report 1995:5, </type> <institution> Department of Mathematics, University of South Car-olina, </institution> <year> 1995. </year>
Reference-contexts: For example, in the "midpoint" multiresolution scheme above, a would be defined by: fa 1 = 0; a 0 = 1=2; a 1 = 1=2g. Sweldens and Schroder <ref> [21] </ref> describe techniques for designing analysis filters a for various applications. For polygons, we use the analysis filter of Meyers: fa 0 = 19=28; a 1 = 9=28; a 2 = 1=8; a 3 = 1=14; a 4 = 1=28g [14].
Reference: [22] <author> E. Welzl and B. Wolfers. </author> <title> Surface reconstruction between simple polygons via angle criteria. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 17 </volume> <pages> 351-369, </pages> <month> July </month> <year> 1994. </year>
Reference: [23] <author> H.J. Wolfson. </author> <title> On curve matching. </title> <journal> IEEE Transactions on Pattern Matching and Machine Intelligence, </journal> <volume> 12(5) </volume> <pages> 483-489, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: There are many problems that are closely related to the polygon tiling problem as we formulate it here. Most similar are those that arise in curve comparison applications: finding figure correspondences for polygon morphing [18], matching curve features <ref> [23, 11] </ref>, dynamic time-warping for handwriting and speech recog tiling path in the tiling graph. The shaded triangle corresponds to the highlighted edge in the graph. nition [17].
References-found: 23

