URL: ftp://ftp.cs.caltech.edu/tr/cs-tr-93-38.ps.Z
Refering-URL: ftp://ftp.cs.caltech.edu/tr/INDEX.html
Root-URL: http://www.cs.caltech.edu
Title: An Asynchronous Microprocessor in Gallium Arsenide  
Author: Jose A. Tierno Alain J. Martin Drazen Borkovic Tak Kwan Lee 
Date: November 9, 1993  
Address: Pasadena, CA 91125  
Affiliation: Department of Computer Science California Institute of Technology  
Abstract: In this paper, several techniques for designing asynchronous circuits in Gallium Arsenide are presented. Several new circuits were designed, to implement specific functions necessary to the design of a full microprocessor. A sense-amplifier, a completion tree, and a general circuit structure for operators specified by production rules are introduced. These circuit were used and tested in a variety of designs, including two asynchronous microprocessors and two asynchronous static RAM's. One of the micro processor runs at over 100 MIPS with a power consumption of 2 Watts.
Abstract-found: 1
Intro-found: 1
Reference: [Bro92] <author> Richard Brown. </author> <title> Private communication, </title> <year> 1992. </year>
Reference-contexts: The lower output low increases the noise margins considerably, with a small penalty in area and power. Super-buffers were used to buffer bus and control signals. To improve performance and noise margin characteristics, a feed-back transistor was added, creating a "squeeze" buffer (see Figure 1 (c) <ref> [Bro92] </ref>). Squeeze buffers allow the use of a stronger pull-up transistor, the feed-back transistor limits the output high voltage. To generate completion signals from the datapath, we use C-elements with a large number of inputs.
Reference: [Hoa78] <author> C.A.R. Hoare. </author> <title> Communicating sequential processes. </title> <journal> Comm. ACM, </journal> <volume> 21(8) </volume> <pages> 666-677, </pages> <year> 1978. </year>
Reference-contexts: The high-level specification of Figures 2 and 3 shows in detail how the different units interact. The language used is similar to C.A.R. Hoare's CSP <ref> [Hoa78] </ref>, and described in [Mar90]. 4 GaAs Technology Mapping Even though it is be tempting to map the processor design into DCFL gates, the specific requirements of asynchronous circuits makes that choice impractical.
Reference: [Hof91] <author> H. P. Hofstee. </author> <title> Deriving some asynchronous memories. </title> <type> Unpublished, </type> <year> 1991. </year>
Reference-contexts: It was meant to provide a small amount of fast memory for the microprocessor to run test programs at full speed. Out of 30 bonded devices, 29 were functional. Access time is 5ns, and the chip dissipates 500mW at 2.2V. The second SRAM has 64 words of 4bits/word <ref> [Hof91] </ref>, and was designed as an intermediate step towards a larger memory to be used as a cache for the processor. All 30 bonded devices received were functional.
Reference: [LB90] <author> S. I. Long and S. E. Butner. </author> <title> Gallium Arsenide Digital Integrated Circuit Design. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1990. </year> <month> 12 </month>
Reference-contexts: Above that difference, the diode will be forward biased and current will flow from the gate into the channel. Hole mobility is low in GaAs (10 times less than electron mobility <ref> [LB90] </ref>), which makes p-type FETs fairly slow. There is, therefore, no complementary logic available. As in nMOS, n-type transistors come in two flavors, depletion 2 a out out out c 2:2 10:1 20:1 10:1 10:1 20:1 3:1 buffer mode and enhancement-mode. <p> To satisfy these constraints, all datapath gates are DCFL, except nand gates and buffers, and completion-detection circuits. Nand gates were implemented as shown in Figure 1 (b) <ref> [LB90] </ref>. The super 6 (a) (b) b d Repeating section diagram buffer stage allows the output low voltage to be low enough, since the pull-down does not have to fight a passive pull-up. The lower output low increases the noise margins considerably, with a small penalty in area and power.
Reference: [Mar90] <author> Alain J. Martin. </author> <title> Synthesis of asynchronous VLSI circuits. </title> <editor> In J. Straunstrup, editor, </editor> <booktitle> Formal Methods for VLSI Design, </booktitle> <pages> pages 237-283. </pages> <publisher> North-Holland, </publisher> <year> 1990. </year>
Reference-contexts: The high-level specification of Figures 2 and 3 shows in detail how the different units interact. The language used is similar to C.A.R. Hoare's CSP [Hoa78], and described in <ref> [Mar90] </ref>. 4 GaAs Technology Mapping Even though it is be tempting to map the processor design into DCFL gates, the specific requirements of asynchronous circuits makes that choice impractical. A robust DCFL circuit has to be made almost exclusively from nor gates, plus super-buffers and a few special purpose circuits. <p> Squeeze buffers allow the use of a stronger pull-up transistor, the feed-back transistor limits the output high voltage. To generate completion signals from the datapath, we use C-elements with a large number of inputs. They can be built from smaller C-elements connected in a tree <ref> [Mar90] </ref>, or, as in this case, as a single logic gate (see Figure 4 (a) and (b)). For a discussion on how this circuit works, see [Tie92].
Reference: [Mar92] <author> A. J. Martin. </author> <title> Asynchronous datapaths and the design of an asynchronous adder. </title> <booktitle> Formal Methods in System Design, </booktitle> <volume> 1(1) </volume> <pages> 117-137, </pages> <year> 1992. </year>
Reference-contexts: They are mostly combinatorial circuits, replicated a number of times. Data-path delay is determined mostly by carry-chain, control signal, and bus delays. Carry-chain delay is data dependent, since the adder uses carry prediction <ref> [Mar92] </ref>. It is important that the datapath be optimized for size: in the datapath most signals are local, with the exception of control lines and buses, and thus delays and power depend directly on the physical dimensions of the datapath.
Reference: [MBL + 89] <author> Alain J. Martin, Steven M. Burns, T. K. Lee, Drazen Borkovic, and Pieter J. Hazewindus. </author> <title> The design of an asynchronous microprocessor. </title> <editor> In Charles L. Seitz, editor, </editor> <booktitle> Advanced Research in VLSI: Proceedings of the Decennial Caltech Conference on VLSI, </booktitle> <pages> pages 351-373. </pages> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Adapting our method to GaAs design would be an excellent demonstration of the advantages of the method. From the onset, our intention was to port to GaAs the asynchronous microprocessor we designed in CMOS in 1989 <ref> [MBL + 89] </ref>. At the same time, we would demonstrate the portability of our approach across vastly different technologies, and the efficiency and robustness of the design method. To this end, several special purpose circuits had to be designed. <p> A super-buffer also increases the noise margins by lowering the logic-low voltage, since the output stage is not ratioed. 3 Description of the Processor The microprocessor is a 16-bit, pipelined, RISC-style processor. It is a modified version of the CMOS design described in <ref> [MBL + 89] </ref>. Instructions are issued in order, but may complete out of order. The proces sor has 16 general purpose registers, with four buses, two for read and two for 3 write. Registers have individual locks to solve read-after-write and write-after--write hazards.
Reference: [Tie92] <author> J. A. Tierno. </author> <title> Designing asynchronous circuits in Gallium Arsenide. </title> <institution> CS-TR-92-19, California Institute of Technology, </institution> <year> 1992. </year> <month> 13 </month>
Reference-contexts: They can be built from smaller C-elements connected in a tree [Mar90], or, as in this case, as a single logic gate (see Figure 4 (a) and (b)). For a discussion on how this circuit works, see <ref> [Tie92] </ref>. Though a completion tree could be implemented with DCFL nor gates, it would be significantly slower and bigger than that of Figure 4 (a). Completion detection is in sequence with the calculations performed by the datapath, and affects performance directly. <p> There are different ways of giving a direct implementation of these production rules. One, Source Follower Fet Logic, is given in <ref> [Tie92] </ref>. In that paper, a systematic way of generating any operator described by production rules is presented. This method was applied in the design of the first GaAs microprocessor. However, it resulted in a circuit with a large power consumption (4 Watts) and modest performance (70 MIPS). <p> Also, the circuits were carefully optimized for high speed and low power consumption. The performance obtained indicates that the improvements envisioned for the next processor generation should be attainable. 5.2 Microprocessors The first microprocessor design uses the circuits described in <ref> [Tie92] </ref>. The main concern during the design was to get around parameter variation problems and noise margin considerations. This was achieved, but at the expense of power and performance. At 70 MIPS, the processor consumes 4 Watt.
References-found: 8

